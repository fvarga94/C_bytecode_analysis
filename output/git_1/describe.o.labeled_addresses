hashmap_get_size	DO,0:SWITCH,0:ELSE,0:CALL,0:IF,1:WHILE,0:functions,0:FOR,0	19
0x400016d	              0x55	                                push rbp	       256	hashmap.h	FUNCTION_3
0x400016e	          0x4889e5	                            mov rbp, rsp	       256	hashmap.h	FUNCTION_3
0x4000171	        0x4883ec10	                           sub rsp, 0x10	       256	hashmap.h	FUNCTION_3
0x4000175	        0x48897df8	                mov qword [rbp - 8], rdi	       256	hashmap.h	FUNCTION_3
0x4000179	        0x488b45f8	                mov rax, qword [rbp - 8]	       257	hashmap.h	FUNCTION_3	IF_1
0x400017d	         0xfb64028	           movzx eax, byte [rax + 0x28] 	       257	hashmap.h	FUNCTION_3	IF_1
0x4000181	          0x83e001	                              and eax, 1	       257	hashmap.h	FUNCTION_3	IF_1
0x4000184	            0x84c0	                             test al, al	       257	hashmap.h	FUNCTION_3	IF_1
0x4000186	            0x7409	                            je 0x4000191	       257	hashmap.h	FUNCTION_3	IF_1
0x4000188	        0x488b45f8	                mov rax, qword [rbp - 8]	       258	hashmap.h	FUNCTION_3	IF_1
0x400018c	          0x8b4018	            mov eax, dword [rax + 0x18] 	       258	hashmap.h	FUNCTION_3	IF_1
0x400018f	            0xeb19	                           jmp 0x40001aa	       258	hashmap.h	FUNCTION_3	IF_1
0x4000191	      0xba00000000	                              mov edx, 0	       260	hashmap.h	FUNCTION_3
0x4000196	      0xbe04010000	                          mov esi, 0x104	       260	hashmap.h	FUNCTION_3
0x400019b	      0xbf00000000	                              mov edi, 0	       260	hashmap.h	FUNCTION_3
0x40001a0	      0xb800000000	                              mov eax, 0	       260	hashmap.h	FUNCTION_3
0x40001a5	      0xe800000000	                          call 0x40001aa	       260	hashmap.h	FUNCTION_3
0x40001aa	              0xc9	                                   leave	       262	hashmap.h	FUNCTION_3
0x40001ab	              0xc3	                                     ret	       262	hashmap.h	FUNCTION_3
get_name	DO,0:SWITCH,0:ELSE,5:CALL,7:IF,9:WHILE,0:functions,2:FOR,0	159
0x40005fe	              0x55	                                push rbp	       134	describe.c	FUNCTION_13
0x40005ff	          0x4889e5	                            mov rbp, rsp	       134	describe.c	FUNCTION_13
0x4000602	        0x4883ec70	                           sub rsp, 0x70	       134	describe.c	FUNCTION_13
0x4000606	        0x48897da8	             mov qword [rbp - 0x58], rdi	       134	describe.c	FUNCTION_13
0x400060a	        0x488975a0	             mov qword [rbp - 0x60], rsi	       134	describe.c	FUNCTION_13
0x400060e	          0x89559c	             mov dword [rbp - 0x64], edx	       134	describe.c	FUNCTION_13
0x4000611	        0x48894d90	             mov qword [rbp - 0x70], rcx	       134	describe.c	FUNCTION_13
0x4000615	    0x64488b042528	                mov rax, qword fs:[0x28]	       134	describe.c	FUNCTION_13
0x400061e	        0x488945f8	                mov qword [rbp - 8], rax	       134	describe.c	FUNCTION_13
0x4000622	            0x31c0	                            xor eax, eax	       134	describe.c	FUNCTION_13
0x4000624	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       135	describe.c	FUNCTION_13
0x400062b	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       138	describe.c	FUNCTION_13
0x4000633	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       140	describe.c	FUNCTION_13	IF_1	CALL_1
0x4000637	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       140	describe.c	FUNCTION_13	IF_1	CALL_1
0x400063b	      0xbe00000000	                              mov esi, 0	       140	describe.c	FUNCTION_13	IF_1	CALL_1
0x4000640	          0x4889c7	                            mov rdi, rax	       140	describe.c	FUNCTION_13	IF_1	CALL_1
0x4000643	      0xe8f8f9ffff	                    call sym.skip_prefix	       140	describe.c	FUNCTION_13	IF_1	CALL_1
0x4000648	            0x85c0	                           test eax, eax	       140	describe.c	FUNCTION_13	IF_1	CALL_1
0x400064a	            0x7409	                            je 0x4000655	       140	describe.c	FUNCTION_13	IF_1	CALL_1
0x400064c	    0xc745b8010000	               mov dword [rbp - 0x48], 1	       141	describe.c	FUNCTION_13	IF_1
0x4000653	            0xeb64	                           jmp 0x40006b9	       141	describe.c	FUNCTION_13	IF_1
0x4000655	    0x8b0500000000	            mov eax, dword [0x0400065b] 	       142	describe.c	FUNCTION_13	ELSE_1	IF_2
0x400065b	            0x85c0	                           test eax, eax	       142	describe.c	FUNCTION_13	ELSE_1	IF_2
0x400065d	            0x7450	                            je 0x40006af	       142	describe.c	FUNCTION_13	ELSE_1	IF_2
0x400065f	    0x8b0500000000	            mov eax, dword [0x04000665] 	       143	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3
0x4000665	            0x85c0	                           test eax, eax	       143	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3
0x4000667	            0x750a	                           jne 0x4000673	       143	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3
0x4000669	    0x8b0500000000	            mov eax, dword [0x0400066f] 	       143	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3
0x400066f	            0x85c0	                           test eax, eax	       143	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3
0x4000671	            0x7446	                            je 0x40006b9	       143	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3
0x4000673	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       144	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3	CALL_2
0x4000677	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       144	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3	CALL_2
0x400067b	      0xbe00000000	                              mov esi, 0	       144	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3	CALL_2
0x4000680	          0x4889c7	                            mov rdi, rax	       144	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3	CALL_2
0x4000683	      0xe8b8f9ffff	                    call sym.skip_prefix	       144	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3	CALL_2
0x4000688	            0x85c0	                           test eax, eax	       143	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3
0x400068a	            0x752d	                           jne 0x40006b9	       143	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3
0x400068c	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       145	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3	CALL_3
0x4000690	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       145	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3	CALL_3
0x4000694	      0xbe00000000	                              mov esi, 0	       145	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3	CALL_3
0x4000699	          0x4889c7	                            mov rdi, rax	       145	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3	CALL_3
0x400069c	      0xe89ff9ffff	                    call sym.skip_prefix	       145	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3	CALL_3
0x40006a1	            0x85c0	                           test eax, eax	       144	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3	CALL_2
0x40006a3	            0x7514	                           jne 0x40006b9	       144	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3	CALL_2
0x40006a5	      0xb800000000	                              mov eax, 0	       147	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3
0x40006aa	      0xe99a010000	                           jmp 0x4000849	       147	describe.c	FUNCTION_13	ELSE_1	IF_2	IF_3
0x40006af	      0xb800000000	                              mov eax, 0	       151	describe.c	FUNCTION_13	ELSE_2
0x40006b4	      0xe990010000	                           jmp 0x4000849	       151	describe.c	FUNCTION_13	ELSE_2
0x40006b9	    0x8b0500000000	            mov eax, dword [0x040006bf] 	       158	describe.c	FUNCTION_13	IF_4
0x40006bf	            0x85c0	                           test eax, eax	       158	describe.c	FUNCTION_13	IF_4
0x40006c1	            0x745e	                            je 0x4000721	       158	describe.c	FUNCTION_13	IF_4
0x40006c3	    0x488b05000000	            mov rax, qword [0x040006ca] 	       161	describe.c	FUNCTION_13	IF_4	FUNCTION_1
0x40006ca	        0x488945d0	             mov qword [rbp - 0x30], rax	       161	describe.c	FUNCTION_13	IF_4	FUNCTION_1
0x40006ce	            0xeb2e	                           jmp 0x40006fe	       161	describe.c	FUNCTION_13	IF_4	FUNCTION_1
0x40006d0	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       162	describe.c	FUNCTION_13	IF_4	FUNCTION_1	IF_1	CALL_1
0x40006d4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       162	describe.c	FUNCTION_13	IF_4	FUNCTION_1	IF_1	CALL_1
0x40006d8	          0x488b00	                    mov rax, qword [rax]	       162	describe.c	FUNCTION_13	IF_4	FUNCTION_1	IF_1	CALL_1
0x40006db	      0xba00000000	                              mov edx, 0	       162	describe.c	FUNCTION_13	IF_4	FUNCTION_1	IF_1	CALL_1
0x40006e0	          0x4889ce	                            mov rsi, rcx	       162	describe.c	FUNCTION_13	IF_4	FUNCTION_1	IF_1	CALL_1
0x40006e3	          0x4889c7	                            mov rdi, rax	       162	describe.c	FUNCTION_13	IF_4	FUNCTION_1	IF_1	CALL_1
0x40006e6	      0xe800000000	                          call 0x40006eb	       162	describe.c	FUNCTION_13	IF_4	FUNCTION_1	IF_1	CALL_1
0x40006eb	            0x85c0	                           test eax, eax	       162	describe.c	FUNCTION_13	IF_4	FUNCTION_1	IF_1	CALL_1
0x40006ed	            0x750a	                           jne 0x40006f9	       162	describe.c	FUNCTION_13	IF_4	FUNCTION_1	IF_1	CALL_1
0x40006ef	      0xb800000000	                              mov eax, 0	       163	describe.c	FUNCTION_13	IF_4	FUNCTION_1	IF_1
0x40006f4	      0xe950010000	                           jmp 0x4000849	       163	describe.c	FUNCTION_13	IF_4	FUNCTION_1	IF_1
0x40006f9	      0x488345d010	            add qword [rbp - 0x30], 0x10	       161	describe.c	FUNCTION_13	IF_4	FUNCTION_1
0x40006fe	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       161	describe.c	FUNCTION_13	IF_4	FUNCTION_1
0x4000703	            0x741c	                            je 0x4000721	       161	describe.c	FUNCTION_13	IF_4	FUNCTION_1
0x4000705	    0x488b05000000	            mov rax, qword [0x0400070c] 	       161	describe.c	FUNCTION_13	IF_4	FUNCTION_1
0x400070c	    0x8b1500000000	            mov edx, dword [0x04000712] 	       161	describe.c	FUNCTION_13	IF_4	FUNCTION_1
0x4000712	            0x89d2	                            mov edx, edx	       161	describe.c	FUNCTION_13	IF_4	FUNCTION_1
0x4000714	        0x48c1e204	                              shl rdx, 4	       161	describe.c	FUNCTION_13	IF_4	FUNCTION_1
0x4000718	          0x4801d0	                            add rax, rdx	       161	describe.c	FUNCTION_13	IF_4	FUNCTION_1
0x400071b	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       161	describe.c	FUNCTION_13	IF_4	FUNCTION_1
0x400071f	            0x77af	                            ja 0x40006d0	       161	describe.c	FUNCTION_13	IF_4	FUNCTION_1
0x4000721	    0x8b0500000000	            mov eax, dword [0x04000727] 	       171	describe.c	FUNCTION_13	IF_5
0x4000727	            0x85c0	                           test eax, eax	       171	describe.c	FUNCTION_13	IF_5
0x4000729	            0x7474	                            je 0x400079f	       171	describe.c	FUNCTION_13	IF_5
0x400072b	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       172	describe.c	FUNCTION_13	IF_5
0x4000732	    0x488b05000000	            mov rax, qword [0x04000739] 	       175	describe.c	FUNCTION_13	IF_5	FUNCTION_2
0x4000739	        0x488945d8	             mov qword [rbp - 0x28], rax	       175	describe.c	FUNCTION_13	IF_5	FUNCTION_2
0x400073d	            0xeb2d	                           jmp 0x400076c	       175	describe.c	FUNCTION_13	IF_5	FUNCTION_2
0x400073f	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       176	describe.c	FUNCTION_13	IF_5	FUNCTION_2	IF_1	CALL_1
0x4000743	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       176	describe.c	FUNCTION_13	IF_5	FUNCTION_2	IF_1	CALL_1
0x4000747	          0x488b00	                    mov rax, qword [rax]	       176	describe.c	FUNCTION_13	IF_5	FUNCTION_2	IF_1	CALL_1
0x400074a	      0xba00000000	                              mov edx, 0	       176	describe.c	FUNCTION_13	IF_5	FUNCTION_2	IF_1	CALL_1
0x400074f	          0x4889ce	                            mov rsi, rcx	       176	describe.c	FUNCTION_13	IF_5	FUNCTION_2	IF_1	CALL_1
0x4000752	          0x4889c7	                            mov rdi, rax	       176	describe.c	FUNCTION_13	IF_5	FUNCTION_2	IF_1	CALL_1
0x4000755	      0xe800000000	                          call 0x400075a	       176	describe.c	FUNCTION_13	IF_5	FUNCTION_2	IF_1	CALL_1
0x400075a	            0x85c0	                           test eax, eax	       176	describe.c	FUNCTION_13	IF_5	FUNCTION_2	IF_1	CALL_1
0x400075c	            0x7509	                           jne 0x4000767	       176	describe.c	FUNCTION_13	IF_5	FUNCTION_2	IF_1	CALL_1
0x400075e	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	       177	describe.c	FUNCTION_13	IF_5	FUNCTION_2	IF_1
0x4000765	            0xeb28	                           jmp 0x400078f	       178	describe.c	FUNCTION_13	IF_5	FUNCTION_2	IF_1
0x4000767	      0x488345d810	            add qword [rbp - 0x28], 0x10	       175	describe.c	FUNCTION_13	IF_5	FUNCTION_2
0x400076c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       175	describe.c	FUNCTION_13	IF_5	FUNCTION_2
0x4000771	            0x741c	                            je 0x400078f	       175	describe.c	FUNCTION_13	IF_5	FUNCTION_2
0x4000773	    0x488b05000000	            mov rax, qword [0x0400077a] 	       175	describe.c	FUNCTION_13	IF_5	FUNCTION_2
0x400077a	    0x8b1500000000	            mov edx, dword [0x04000780] 	       175	describe.c	FUNCTION_13	IF_5	FUNCTION_2
0x4000780	            0x89d2	                            mov edx, edx	       175	describe.c	FUNCTION_13	IF_5	FUNCTION_2
0x4000782	        0x48c1e204	                              shl rdx, 4	       175	describe.c	FUNCTION_13	IF_5	FUNCTION_2
0x4000786	          0x4801d0	                            add rax, rdx	       175	describe.c	FUNCTION_13	IF_5	FUNCTION_2
0x4000789	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       175	describe.c	FUNCTION_13	IF_5	FUNCTION_2
0x400078d	            0x77b0	                            ja 0x400073f	       175	describe.c	FUNCTION_13	IF_5	FUNCTION_2
0x400078f	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       182	describe.c	FUNCTION_13	IF_5	IF_6
0x4000793	            0x750a	                           jne 0x400079f	       182	describe.c	FUNCTION_13	IF_5	IF_6
0x4000795	      0xb800000000	                              mov eax, 0	       183	describe.c	FUNCTION_13	IF_5	IF_6
0x400079a	      0xe9aa000000	                           jmp 0x4000849	       183	describe.c	FUNCTION_13	IF_5	IF_6
0x400079f	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       187	describe.c	FUNCTION_13	IF_7	CALL_4
0x40007a3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       187	describe.c	FUNCTION_13	IF_7	CALL_4
0x40007a7	          0x4889d6	                            mov rsi, rdx	       187	describe.c	FUNCTION_13	IF_7	CALL_4
0x40007aa	          0x4889c7	                            mov rdi, rax	       187	describe.c	FUNCTION_13	IF_7	CALL_4
0x40007ad	      0xe800000000	                          call 0x40007b2	       187	describe.c	FUNCTION_13	IF_7	CALL_4
0x40007b2	            0x85c0	                           test eax, eax	       187	describe.c	FUNCTION_13	IF_7	CALL_4
0x40007b4	            0x7520	                           jne 0x40007d6	       187	describe.c	FUNCTION_13	IF_7	CALL_4
0x40007b6	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       188	describe.c	FUNCTION_13	IF_7	CALL_5
0x40007ba	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       188	describe.c	FUNCTION_13	IF_7	CALL_5
0x40007be	          0x4889d6	                            mov rsi, rdx	       188	describe.c	FUNCTION_13	IF_7	CALL_5
0x40007c1	          0x4889c7	                            mov rdi, rax	       188	describe.c	FUNCTION_13	IF_7	CALL_5
0x40007c4	      0xe8cafaffff	                         call sym.oidcmp	       188	describe.c	FUNCTION_13	IF_7	CALL_5
0x40007c9	            0x85c0	                           test eax, eax	       188	describe.c	FUNCTION_13	IF_7	CALL_5
0x40007cb	           0xf95c0	                                setne al	       188	describe.c	FUNCTION_13	IF_7	CALL_5
0x40007ce	           0xfb6c0	                           movzx eax, al	       188	describe.c	FUNCTION_13	IF_7	CALL_5
0x40007d1	          0x8945bc	             mov dword [rbp - 0x44], eax	       188	describe.c	FUNCTION_13	IF_7	CALL_5
0x40007d4	            0xeb1a	                           jmp 0x40007f0	       188	describe.c	FUNCTION_13	IF_7	CALL_5
0x40007d6	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       190	describe.c	FUNCTION_13	ELSE_3	CALL_6
0x40007da	        0x488d45e0	                   lea rax, [rbp - 0x20]	       190	describe.c	FUNCTION_13	ELSE_3	CALL_6
0x40007de	          0x4889d6	                            mov rsi, rdx	       190	describe.c	FUNCTION_13	ELSE_3	CALL_6
0x40007e1	          0x4889c7	                            mov rdi, rax	       190	describe.c	FUNCTION_13	ELSE_3	CALL_6
0x40007e4	      0xe8fafaffff	                         call sym.oidcpy	       190	describe.c	FUNCTION_13	ELSE_3	CALL_6
0x40007e9	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       191	describe.c	FUNCTION_13	ELSE_3
0x40007f0	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       200	describe.c	FUNCTION_13	IF_8
0x40007f4	            0x7409	                            je 0x40007ff	       200	describe.c	FUNCTION_13	IF_8
0x40007f6	    0xc745c0020000	               mov dword [rbp - 0x40], 2	       201	describe.c	FUNCTION_13	IF_8
0x40007fd	            0xeb16	                           jmp 0x4000815	       201	describe.c	FUNCTION_13	IF_8
0x40007ff	        0x837db800	               cmp dword [rbp - 0x48], 0	       202	describe.c	FUNCTION_13	ELSE_4	IF_9
0x4000803	            0x7409	                            je 0x400080e	       202	describe.c	FUNCTION_13	ELSE_4	IF_9
0x4000805	    0xc745c0010000	               mov dword [rbp - 0x40], 1	       203	describe.c	FUNCTION_13	ELSE_4	IF_9
0x400080c	            0xeb07	                           jmp 0x4000815	       203	describe.c	FUNCTION_13	ELSE_4	IF_9
0x400080e	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       205	describe.c	FUNCTION_13	ELSE_5
0x4000815	    0x8b0500000000	            mov eax, dword [0x0400081b] 	       207	describe.c	FUNCTION_13	CALL_7
0x400081b	            0x85c0	                           test eax, eax	       207	describe.c	FUNCTION_13	CALL_7
0x400081d	            0x740a	                            je 0x4000829	       207	describe.c	FUNCTION_13	CALL_7
0x400081f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       207	describe.c	FUNCTION_13	CALL_7
0x4000823	        0x4883c005	                              add rax, 5	       207	describe.c	FUNCTION_13	CALL_7
0x4000827	            0xeb08	                           jmp 0x4000831	       207	describe.c	FUNCTION_13	CALL_7
0x4000829	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       207	describe.c	FUNCTION_13	CALL_7
0x400082d	        0x4883c00a	                            add rax, 0xa	       207	describe.c	FUNCTION_13	CALL_7
0x4000831	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       207	describe.c	FUNCTION_13	CALL_7
0x4000835	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       207	describe.c	FUNCTION_13	CALL_7
0x4000838	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       207	describe.c	FUNCTION_13	CALL_7
0x400083c	          0x4889c7	                            mov rdi, rax	       207	describe.c	FUNCTION_13	CALL_7
0x400083f	      0xe86cfcffff	             call sym.add_to_known_names	       207	describe.c	FUNCTION_13	CALL_7
0x4000844	      0xb800000000	                              mov eax, 0	       208	describe.c	FUNCTION_13
0x4000849	        0x488b4df8	                mov rcx, qword [rbp - 8]	       209	describe.c	FUNCTION_13
0x400084d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       209	describe.c	FUNCTION_13
0x4000856	            0x7405	                            je 0x400085d	       209	describe.c	FUNCTION_13
0x4000858	      0xe800000000	                          call 0x400085d	       209	describe.c	FUNCTION_13
0x400085d	              0xc9	                                   leave	       209	describe.c	FUNCTION_13
0x400085e	              0xc3	                                     ret	       209	describe.c	FUNCTION_13
skip_prefix	DO,1:SWITCH,0:ELSE,0:CALL,0:IF,1:WHILE,0:functions,0:FOR,0	27
0x4000040	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_30
0x4000041	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_30
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_30
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_30
0x400004c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_30
0x4000050	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_30	DO_1	IF_1
0x4000054	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_30	DO_1	IF_1
0x4000057	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_30	DO_1	IF_1
0x4000059	            0x7512	                           jne 0x400006d	       484	git-compat-util.h	FUNCTION_30	DO_1	IF_1
0x400005b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_30	DO_1	IF_1
0x400005f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_30	DO_1	IF_1
0x4000063	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_30	DO_1	IF_1
0x4000066	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_30	DO_1	IF_1
0x400006b	            0xeb27	                           jmp 0x4000094	       486	git-compat-util.h	FUNCTION_30	DO_1	IF_1
0x400006d	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_30	DO_1
0x4000071	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_30	DO_1
0x4000075	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_30	DO_1
0x4000079	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_30	DO_1
0x400007c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_30	DO_1
0x4000080	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_30	DO_1
0x4000084	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_30	DO_1
0x4000088	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_30	DO_1
0x400008b	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_30	DO_1
0x400008d	            0x74c1	                            je 0x4000050	       488	git-compat-util.h	FUNCTION_30	DO_1
0x400008f	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_30
0x4000094	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_30
0x4000095	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_30
parse_commit	DO,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0:functions,0:FOR,0	10
0x4000309	              0x55	                                push rbp	        74	commit.h	FUNCTION_51
0x400030a	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_51
0x400030d	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_51
0x4000311	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_51
0x4000315	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_51	CALL_1
0x4000319	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_51	CALL_1
0x400031e	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_51	CALL_1
0x4000321	      0xe800000000	                          call 0x4000326	        75	commit.h	FUNCTION_51	CALL_1
0x4000326	              0xc9	                                   leave	        76	commit.h	FUNCTION_51
0x4000327	              0xc3	                                     ret	        76	commit.h	FUNCTION_51
sha1hash	DO,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0:functions,0:FOR,0	17
0x4000105	              0x55	                                push rbp	       122	hashmap.h	FUNCTION_1
0x4000106	          0x4889e5	                            mov rbp, rsp	       122	hashmap.h	FUNCTION_1
0x4000109	        0x4883ec20	                           sub rsp, 0x20	       122	hashmap.h	FUNCTION_1
0x400010d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       122	hashmap.h	FUNCTION_1
0x4000111	    0x64488b042528	                mov rax, qword fs:[0x28]	       122	hashmap.h	FUNCTION_1
0x400011a	        0x488945f8	                mov qword [rbp - 8], rax	       122	hashmap.h	FUNCTION_1
0x400011e	            0x31c0	                            xor eax, eax	       122	hashmap.h	FUNCTION_1
0x4000120	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       128	hashmap.h	FUNCTION_1	CALL_1
0x4000124	            0x8b00	                    mov eax, dword [rax]	       128	hashmap.h	FUNCTION_1	CALL_1
0x4000126	          0x8945f4	              mov dword [rbp - 0xc], eax	       128	hashmap.h	FUNCTION_1	CALL_1
0x4000129	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       129	hashmap.h	FUNCTION_1
0x400012c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       130	hashmap.h	FUNCTION_1
0x4000130	    0x644833142528	                xor rdx, qword fs:[0x28]	       130	hashmap.h	FUNCTION_1
0x4000139	            0x7405	                            je 0x4000140	       130	hashmap.h	FUNCTION_1
0x400013b	      0xe800000000	                          call 0x4000140	       130	hashmap.h	FUNCTION_1
0x4000140	              0xc9	                                   leave	       130	hashmap.h	FUNCTION_1
0x4000141	              0xc3	                                     ret	       130	hashmap.h	FUNCTION_1
find_commit_name	DO,0:SWITCH,0:ELSE,0:CALL,2:IF,0:WHILE,0:functions,0:FOR,0	17
0x400037a	              0x55	                                push rbp	        72	describe.c	FUNCTION_10
0x400037b	          0x4889e5	                            mov rbp, rsp	        72	describe.c	FUNCTION_10
0x400037e	              0x53	                                push rbx	        72	describe.c	FUNCTION_10
0x400037f	        0x4883ec18	                           sub rsp, 0x18	        72	describe.c	FUNCTION_10
0x4000383	        0x48897de8	             mov qword [rbp - 0x18], rdi	        72	describe.c	FUNCTION_10
0x4000387	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	        73	describe.c	FUNCTION_10	CALL_2
0x400038b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	describe.c	FUNCTION_10	CALL_2
0x400038f	          0x4889c7	                            mov rdi, rax	        73	describe.c	FUNCTION_10	CALL_2
0x4000392	      0xe86efdffff	                       call sym.sha1hash	        73	describe.c	FUNCTION_10	CALL_2
0x4000397	          0x4889da	                            mov rdx, rbx	        73	describe.c	FUNCTION_10	CALL_2
0x400039a	            0x89c6	                            mov esi, eax	        73	describe.c	FUNCTION_10	CALL_2
0x400039c	      0xbf00000000	                              mov edi, 0	        73	describe.c	FUNCTION_10	CALL_2
0x40003a1	      0xe806feffff	          call sym.hashmap_get_from_hash	        73	describe.c	FUNCTION_10	CALL_2
0x40003a6	        0x4883c418	                           add rsp, 0x18	        74	describe.c	FUNCTION_10
0x40003aa	              0x5b	                                 pop rbx	        74	describe.c	FUNCTION_10
0x40003ab	              0x5d	                                 pop rbp	        74	describe.c	FUNCTION_10
0x40003ac	              0xc3	                                     ret	        74	describe.c	FUNCTION_10
process_commit	DO,0:SWITCH,0:ELSE,0:CALL,0:IF,0:WHILE,0:functions,0:FOR,0	17
0x40015b0	              0x55	                                push rbp	       451	describe.c	FUNCTION_19
0x40015b1	          0x4889e5	                            mov rbp, rsp	       451	describe.c	FUNCTION_19
0x40015b4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       451	describe.c	FUNCTION_19
0x40015b8	        0x488975e0	             mov qword [rbp - 0x20], rsi	       451	describe.c	FUNCTION_19
0x40015bc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       452	describe.c	FUNCTION_19
0x40015c0	        0x488945f8	                mov qword [rbp - 8], rax	       452	describe.c	FUNCTION_19
0x40015c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       453	describe.c	FUNCTION_19
0x40015c8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       453	describe.c	FUNCTION_19
0x40015cc	        0x488b4a04	                mov rcx, qword [rdx + 4]	       453	describe.c	FUNCTION_19
0x40015d0	          0x488908	                    mov qword [rax], rcx	       453	describe.c	FUNCTION_19
0x40015d3	        0x488b4a0c	              mov rcx, qword [rdx + 0xc]	       453	describe.c	FUNCTION_19
0x40015d7	        0x48894808	                mov qword [rax + 8], rcx	       453	describe.c	FUNCTION_19
0x40015db	          0x8b5214	            mov edx, dword [rdx + 0x14] 	       453	describe.c	FUNCTION_19
0x40015de	          0x895010	             mov dword [rax + 0x10], edx	       453	describe.c	FUNCTION_19
0x40015e1	              0x90	                                     nop	       454	describe.c	FUNCTION_19
0x40015e2	              0x5d	                                 pop rbp	       454	describe.c	FUNCTION_19
0x40015e3	              0xc3	                                     ret	       454	describe.c	FUNCTION_19
finish_depth_computation	DO,0:SWITCH,0:ELSE,1:CALL,3:IF,4:WHILE,3:functions,0:FOR,0	106
0x40008ce	              0x55	                                push rbp	       232	describe.c	FUNCTION_15
0x40008cf	          0x4889e5	                            mov rbp, rsp	       232	describe.c	FUNCTION_15
0x40008d2	        0x4883ec40	                           sub rsp, 0x40	       232	describe.c	FUNCTION_15
0x40008d6	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       232	describe.c	FUNCTION_15
0x40008da	        0x488975c0	             mov qword [rbp - 0x40], rsi	       232	describe.c	FUNCTION_15
0x40008de	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       233	describe.c	FUNCTION_15
0x40008e6	      0xe941010000	                           jmp 0x4000a2c	       234	describe.c	FUNCTION_15	WHILE_1
0x40008eb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       235	describe.c	FUNCTION_15	WHILE_1	CALL_1
0x40008ef	          0x4889c7	                            mov rdi, rax	       235	describe.c	FUNCTION_15	WHILE_1	CALL_1
0x40008f2	      0xe800000000	                          call 0x40008f7	       235	describe.c	FUNCTION_15	WHILE_1	CALL_1
0x40008f7	        0x488945e8	             mov qword [rbp - 0x18], rax	       235	describe.c	FUNCTION_15	WHILE_1	CALL_1
0x40008fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       236	describe.c	FUNCTION_15	WHILE_1
0x40008ff	        0x488b4030	            mov rax, qword [rax + 0x30] 	       236	describe.c	FUNCTION_15	WHILE_1
0x4000903	        0x488945d8	             mov qword [rbp - 0x28], rax	       236	describe.c	FUNCTION_15	WHILE_1
0x4000907	      0x488345d001	               add qword [rbp - 0x30], 1	       237	describe.c	FUNCTION_15	WHILE_1
0x400090c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       238	describe.c	FUNCTION_15	WHILE_1	IF_1
0x4000910	            0x8b00	                    mov eax, dword [rax]	       238	describe.c	FUNCTION_15	WHILE_1	IF_1
0x4000912	          0xc1e804	                              shr eax, 4	       238	describe.c	FUNCTION_15	WHILE_1	IF_1
0x4000915	      0x25ffffff07	                      and eax, 0x7ffffff	       238	describe.c	FUNCTION_15	WHILE_1	IF_1
0x400091a	            0x89c2	                            mov edx, eax	       238	describe.c	FUNCTION_15	WHILE_1	IF_1
0x400091c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       238	describe.c	FUNCTION_15	WHILE_1	IF_1
0x4000920	          0x8b4010	            mov eax, dword [rax + 0x10] 	       238	describe.c	FUNCTION_15	WHILE_1	IF_1
0x4000923	            0x21d0	                            and eax, edx	       238	describe.c	FUNCTION_15	WHILE_1	IF_1
0x4000925	            0x85c0	                           test eax, eax	       238	describe.c	FUNCTION_15	WHILE_1	IF_1
0x4000927	            0x745b	                            je 0x4000984	       238	describe.c	FUNCTION_15	WHILE_1	IF_1
0x4000929	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       239	describe.c	FUNCTION_15	WHILE_1	IF_1
0x400092d	          0x488b00	                    mov rax, qword [rax]	       239	describe.c	FUNCTION_15	WHILE_1	IF_1
0x4000930	        0x488945e0	             mov qword [rbp - 0x20], rax	       239	describe.c	FUNCTION_15	WHILE_1	IF_1
0x4000934	            0xeb34	                           jmp 0x400096a	       240	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2
0x4000936	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       241	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2
0x400093a	          0x488b00	                    mov rax, qword [rax]	       241	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2
0x400093d	        0x488945f8	                mov qword [rbp - 8], rax	       241	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2
0x4000941	        0x488b45f8	                mov rax, qword [rbp - 8]	       242	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2	IF_2
0x4000945	            0x8b00	                    mov eax, dword [rax]	       242	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2	IF_2
0x4000947	          0xc1e804	                              shr eax, 4	       242	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2	IF_2
0x400094a	      0x25ffffff07	                      and eax, 0x7ffffff	       242	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2	IF_2
0x400094f	            0x89c2	                            mov edx, eax	       242	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2	IF_2
0x4000951	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       242	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2	IF_2
0x4000955	          0x8b4010	            mov eax, dword [rax + 0x10] 	       242	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2	IF_2
0x4000958	            0x21d0	                            and eax, edx	       242	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2	IF_2
0x400095a	            0x85c0	                           test eax, eax	       242	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2	IF_2
0x400095c	            0x7415	                            je 0x4000973	       242	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2	IF_2
0x400095e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       244	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2
0x4000962	        0x488b4008	                mov rax, qword [rax + 8]	       244	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2
0x4000966	        0x488945e0	             mov qword [rbp - 0x20], rax	       244	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2
0x400096a	      0x48837de000	               cmp qword [rbp - 0x20], 0	       240	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2
0x400096f	            0x75c5	                           jne 0x4000936	       240	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2
0x4000971	            0xeb01	                           jmp 0x4000974	       240	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2
0x4000973	              0x90	                                     nop	       243	describe.c	FUNCTION_15	WHILE_1	IF_1	WHILE_2	IF_2
0x4000974	      0x48837de000	               cmp qword [rbp - 0x20], 0	       246	describe.c	FUNCTION_15	WHILE_1	IF_1	IF_3
0x4000979	     0xf85a2000000	                           jne 0x4000a21	       246	describe.c	FUNCTION_15	WHILE_1	IF_1	IF_3
0x400097f	      0xe9b8000000	                           jmp 0x4000a3c	       247	describe.c	FUNCTION_15	WHILE_1	IF_1	IF_3
0x4000984	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       249	describe.c	FUNCTION_15	WHILE_1	ELSE_1
0x4000988	          0x8b4008	                mov eax, dword [rax + 8]	       249	describe.c	FUNCTION_15	WHILE_1	ELSE_1
0x400098b	          0x8d5001	                      lea edx, [rax + 1]	       249	describe.c	FUNCTION_15	WHILE_1	ELSE_1
0x400098e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       249	describe.c	FUNCTION_15	WHILE_1	ELSE_1
0x4000992	          0x895008	                mov dword [rax + 8], edx	       249	describe.c	FUNCTION_15	WHILE_1	ELSE_1
0x4000995	      0xe987000000	                           jmp 0x4000a21	       250	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x400099a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       251	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x400099e	          0x488b00	                    mov rax, qword [rax]	       251	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x40009a1	        0x488945f0	             mov qword [rbp - 0x10], rax	       251	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x40009a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       252	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3	CALL_2
0x40009a9	          0x4889c7	                            mov rdi, rax	       252	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3	CALL_2
0x40009ac	      0xe858f9ffff	                   call sym.parse_commit	       252	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3	CALL_2
0x40009b1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       253	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3	IF_4
0x40009b5	            0x8b00	                    mov eax, dword [rax]	       253	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3	IF_4
0x40009b7	          0xc1e804	                              shr eax, 4	       253	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3	IF_4
0x40009ba	      0x25ffffff07	                      and eax, 0x7ffffff	       253	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3	IF_4
0x40009bf	          0x83e001	                              and eax, 1	       253	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3	IF_4
0x40009c2	            0x85c0	                           test eax, eax	       253	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3	IF_4
0x40009c4	            0x7513	                           jne 0x40009d9	       253	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3	IF_4
0x40009c6	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       254	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x40009ca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       254	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x40009ce	          0x4889d6	                            mov rsi, rdx	       254	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x40009d1	          0x4889c7	                            mov rdi, rax	       254	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x40009d4	      0xe800000000	                          call 0x40009d9	       254	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x40009d9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x40009dd	            0x8b00	                    mov eax, dword [rax]	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x40009df	          0xc1e804	                              shr eax, 4	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x40009e2	            0x89c2	                            mov edx, eax	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x40009e4	    0x81e2ffffff07	                      and edx, 0x7ffffff	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x40009ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x40009ee	            0x8b00	                    mov eax, dword [rax]	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x40009f0	          0xc1e804	                              shr eax, 4	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x40009f3	      0x25ffffff07	                      and eax, 0x7ffffff	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x40009f8	             0x9c2	                             or edx, eax	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x40009fa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x40009fe	    0x81e2ffffff07	                      and edx, 0x7ffffff	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x4000a04	            0x89d1	                            mov ecx, edx	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x4000a06	          0xc1e104	                              shl ecx, 4	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x4000a09	            0x8b10	                    mov edx, dword [rax]	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x4000a0b	    0x81e20f000080	                     and edx, 0x8000000f	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x4000a11	             0x9ca	                             or edx, ecx	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x4000a13	            0x8910	                    mov dword [rax], edx	       255	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x4000a15	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       256	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x4000a19	        0x488b4008	                mov rax, qword [rax + 8]	       256	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x4000a1d	        0x488945d8	             mov qword [rbp - 0x28], rax	       256	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x4000a21	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       250	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x4000a26	     0xf856effffff	                           jne 0x400099a	       250	describe.c	FUNCTION_15	WHILE_1	ELSE_1	WHILE_3
0x4000a2c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       234	describe.c	FUNCTION_15	WHILE_1
0x4000a30	          0x488b00	                    mov rax, qword [rax]	       234	describe.c	FUNCTION_15	WHILE_1
0x4000a33	          0x4885c0	                           test rax, rax	       234	describe.c	FUNCTION_15	WHILE_1
0x4000a36	     0xf85affeffff	                           jne 0x40008eb	       234	describe.c	FUNCTION_15	WHILE_1
0x4000a3c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       259	describe.c	FUNCTION_15
0x4000a40	              0xc9	                                   leave	       260	describe.c	FUNCTION_15
0x4000a41	              0xc3	                                     ret	       260	describe.c	FUNCTION_15
process_object	DO,0:SWITCH,0:ELSE,0:CALL,5:IF,1:WHILE,0:functions,0:FOR,0	47
0x40015e4	              0x55	                                push rbp	       457	describe.c	FUNCTION_20
0x40015e5	          0x4889e5	                            mov rbp, rsp	       457	describe.c	FUNCTION_20
0x40015e8	        0x4883ec30	                           sub rsp, 0x30	       457	describe.c	FUNCTION_20
0x40015ec	        0x48897de8	             mov qword [rbp - 0x18], rdi	       457	describe.c	FUNCTION_20
0x40015f0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       457	describe.c	FUNCTION_20
0x40015f4	        0x488955d8	             mov qword [rbp - 0x28], rdx	       457	describe.c	FUNCTION_20
0x40015f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       458	describe.c	FUNCTION_20
0x40015fc	        0x488945f8	                mov qword [rbp - 8], rax	       458	describe.c	FUNCTION_20
0x4001600	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       460	describe.c	FUNCTION_20	IF_1	CALL_1
0x4001604	        0x488d5004	                      lea rdx, [rax + 4]	       460	describe.c	FUNCTION_20	IF_1	CALL_1
0x4001608	        0x488b45f8	                mov rax, qword [rbp - 8]	       460	describe.c	FUNCTION_20	IF_1	CALL_1
0x400160c	        0x4883c014	                           add rax, 0x14	       460	describe.c	FUNCTION_20	IF_1	CALL_1
0x4001610	          0x4889d6	                            mov rsi, rdx	       460	describe.c	FUNCTION_20	IF_1	CALL_1
0x4001613	          0x4889c7	                            mov rdi, rax	       460	describe.c	FUNCTION_20	IF_1	CALL_1
0x4001616	      0xe878ecffff	                         call sym.oidcmp	       460	describe.c	FUNCTION_20	IF_1	CALL_1
0x400161b	            0x85c0	                           test eax, eax	       460	describe.c	FUNCTION_20	IF_1	CALL_1
0x400161d	            0x756d	                           jne 0x400168c	       460	describe.c	FUNCTION_20	IF_1	CALL_1
0x400161f	        0x488b45f8	                mov rax, qword [rbp - 8]	       460	describe.c	FUNCTION_20	IF_1	CALL_1
0x4001623	        0x488b4028	            mov rax, qword [rax + 0x28] 	       460	describe.c	FUNCTION_20	IF_1	CALL_1
0x4001627	        0x488b4008	                mov rax, qword [rax + 8]	       460	describe.c	FUNCTION_20	IF_1	CALL_1
0x400162b	          0x4885c0	                           test rax, rax	       460	describe.c	FUNCTION_20	IF_1	CALL_1
0x400162e	            0x755c	                           jne 0x400168c	       460	describe.c	FUNCTION_20	IF_1	CALL_1
0x4001630	      0xe800000000	                          call 0x4001635	       461	describe.c	FUNCTION_20	IF_1	CALL_2
0x4001635	        0x488b45f8	                mov rax, qword [rbp - 8]	       462	describe.c	FUNCTION_20	IF_1	CALL_3
0x4001639	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       462	describe.c	FUNCTION_20	IF_1	CALL_3
0x400163d	        0x488b45f8	                mov rax, qword [rbp - 8]	       462	describe.c	FUNCTION_20	IF_1	CALL_3
0x4001641	          0x4889d6	                            mov rsi, rdx	       462	describe.c	FUNCTION_20	IF_1	CALL_3
0x4001644	          0x4889c7	                            mov rdi, rax	       462	describe.c	FUNCTION_20	IF_1	CALL_3
0x4001647	      0xe800f6ffff	                call sym.describe_commit	       462	describe.c	FUNCTION_20	IF_1	CALL_3
0x400164c	        0x488b45f8	                mov rax, qword [rbp - 8]	       463	describe.c	FUNCTION_20	IF_1	CALL_4
0x4001650	        0x488b4028	            mov rax, qword [rax + 0x28] 	       463	describe.c	FUNCTION_20	IF_1	CALL_4
0x4001654	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       463	describe.c	FUNCTION_20	IF_1	CALL_4
0x4001658	      0xbe00000000	                              mov esi, 0	       463	describe.c	FUNCTION_20	IF_1	CALL_4
0x400165d	          0x4889c7	                            mov rdi, rax	       463	describe.c	FUNCTION_20	IF_1	CALL_4
0x4001660	      0xb800000000	                              mov eax, 0	       463	describe.c	FUNCTION_20	IF_1	CALL_4
0x4001665	      0xe800000000	                          call 0x400166a	       463	describe.c	FUNCTION_20	IF_1	CALL_4
0x400166a	        0x488b45f8	                mov rax, qword [rbp - 8]	       464	describe.c	FUNCTION_20	IF_1	CALL_5
0x400166e	        0x488b4030	            mov rax, qword [rax + 0x30] 	       464	describe.c	FUNCTION_20	IF_1	CALL_5
0x4001672	          0x488b00	                    mov rax, qword [rax]	       464	describe.c	FUNCTION_20	IF_1	CALL_5
0x4001675	          0x4889c7	                            mov rdi, rax	       464	describe.c	FUNCTION_20	IF_1	CALL_5
0x4001678	      0xe800000000	                          call 0x400167d	       464	describe.c	FUNCTION_20	IF_1	CALL_5
0x400167d	        0x488b45f8	                mov rax, qword [rbp - 8]	       465	describe.c	FUNCTION_20	IF_1
0x4001681	        0x488b4030	            mov rax, qword [rax + 0x30] 	       465	describe.c	FUNCTION_20	IF_1
0x4001685	    0x48c700000000	                      mov qword [rax], 0	       465	describe.c	FUNCTION_20	IF_1
0x400168c	              0x90	                                     nop	       467	describe.c	FUNCTION_20
0x400168d	              0xc9	                                   leave	       467	describe.c	FUNCTION_20
0x400168e	              0xc3	                                     ret	       467	describe.c	FUNCTION_20
oidcpy	DO,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0:functions,0:FOR,0	13
0x40002e3	              0x55	                                push rbp	       999	cache.h	FUNCTION_64
0x40002e4	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_64
0x40002e7	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_64
0x40002eb	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_64
0x40002ef	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_64
0x40002f3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_64	CALL_1
0x40002f7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_64	CALL_1
0x40002fb	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_64	CALL_1
0x40002fe	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_64	CALL_1
0x4000301	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_64	CALL_1
0x4000306	              0x90	                                     nop	      1001	cache.h	FUNCTION_64
0x4000307	              0xc9	                                   leave	      1001	cache.h	FUNCTION_64
0x4000308	              0xc3	                                     ret	      1001	cache.h	FUNCTION_64
describe	DO,0:SWITCH,0:ELSE,2:CALL,14:IF,5:WHILE,0:functions,0:FOR,0	100
0x400181e	              0x55	                                push rbp	       491	describe.c	FUNCTION_22
0x400181f	          0x4889e5	                            mov rbp, rsp	       491	describe.c	FUNCTION_22
0x4001822	        0x4883ec60	                           sub rsp, 0x60	       491	describe.c	FUNCTION_22
0x4001826	        0x48897da8	             mov qword [rbp - 0x58], rdi	       491	describe.c	FUNCTION_22
0x400182a	          0x8975a4	             mov dword [rbp - 0x5c], esi	       491	describe.c	FUNCTION_22
0x400182d	    0x64488b042528	                mov rax, qword fs:[0x28]	       491	describe.c	FUNCTION_22
0x4001836	        0x488945f8	                mov qword [rbp - 8], rax	       491	describe.c	FUNCTION_22
0x400183a	            0x31c0	                            xor eax, eax	       491	describe.c	FUNCTION_22
0x400183c	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       494	describe.c	FUNCTION_22
0x4001844	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       494	describe.c	FUNCTION_22
0x400184c	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       494	describe.c	FUNCTION_22
0x4001854	    0x8b0500000000	            mov eax, dword [0x0400185a] 	       496	describe.c	FUNCTION_22	IF_1
0x400185a	            0x85c0	                           test eax, eax	       496	describe.c	FUNCTION_22	IF_1
0x400185c	            0x7428	                            je 0x4001886	       496	describe.c	FUNCTION_22	IF_1
0x400185e	      0xbf00000000	                              mov edi, 0	       497	describe.c	FUNCTION_22	CALL_2
0x4001863	      0xe8d5e9ffff	                               call sym.	       497	describe.c	FUNCTION_22	CALL_2
0x4001868	          0x4889c1	                            mov rcx, rax	       497	describe.c	FUNCTION_22	CALL_2
0x400186b	    0x488b05000000	            mov rax, qword [0x04001872] 	       497	describe.c	FUNCTION_22	CALL_2
0x4001872	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       497	describe.c	FUNCTION_22	CALL_2
0x4001876	          0x4889ce	                            mov rsi, rcx	       497	describe.c	FUNCTION_22	CALL_2
0x4001879	          0x4889c7	                            mov rdi, rax	       497	describe.c	FUNCTION_22	CALL_2
0x400187c	      0xb800000000	                              mov eax, 0	       497	describe.c	FUNCTION_22	CALL_2
0x4001881	      0xe800000000	                          call 0x4001886	       497	describe.c	FUNCTION_22	CALL_2
0x4001886	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       499	describe.c	FUNCTION_22	IF_2	CALL_3
0x400188a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       499	describe.c	FUNCTION_22	IF_2	CALL_3
0x400188e	          0x4889d6	                            mov rsi, rdx	       499	describe.c	FUNCTION_22	IF_2	CALL_3
0x4001891	          0x4889c7	                            mov rdi, rax	       499	describe.c	FUNCTION_22	IF_2	CALL_3
0x4001894	      0xe800000000	                          call 0x4001899	       499	describe.c	FUNCTION_22	IF_2	CALL_3
0x4001899	            0x85c0	                           test eax, eax	       499	describe.c	FUNCTION_22	IF_2	CALL_3
0x400189b	            0x7421	                            je 0x40018be	       499	describe.c	FUNCTION_22	IF_2	CALL_3
0x400189d	      0xbf00000000	                              mov edi, 0	       500	describe.c	FUNCTION_22	CALL_5
0x40018a2	      0xe896e9ffff	                               call sym.	       500	describe.c	FUNCTION_22	CALL_5
0x40018a7	          0x4889c2	                            mov rdx, rax	       500	describe.c	FUNCTION_22	CALL_5
0x40018aa	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       500	describe.c	FUNCTION_22	CALL_5
0x40018ae	          0x4889c6	                            mov rsi, rax	       500	describe.c	FUNCTION_22	CALL_5
0x40018b1	          0x4889d7	                            mov rdi, rdx	       500	describe.c	FUNCTION_22	CALL_5
0x40018b4	      0xb800000000	                              mov eax, 0	       500	describe.c	FUNCTION_22	CALL_5
0x40018b9	      0xe800000000	                          call 0x40018be	       500	describe.c	FUNCTION_22	CALL_5
0x40018be	        0x488d45e0	                   lea rax, [rbp - 0x20]	       501	describe.c	FUNCTION_22	CALL_6
0x40018c2	      0xbe01000000	                              mov esi, 1	       501	describe.c	FUNCTION_22	CALL_6
0x40018c7	          0x4889c7	                            mov rdi, rax	       501	describe.c	FUNCTION_22	CALL_6
0x40018ca	      0xe800000000	                          call 0x40018cf	       501	describe.c	FUNCTION_22	CALL_6
0x40018cf	        0x488945b8	             mov qword [rbp - 0x48], rax	       501	describe.c	FUNCTION_22	CALL_6
0x40018d3	      0x48837db800	               cmp qword [rbp - 0x48], 0	       503	describe.c	FUNCTION_22	IF_3
0x40018d8	            0x7415	                            je 0x40018ef	       503	describe.c	FUNCTION_22	IF_3
0x40018da	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       504	describe.c	FUNCTION_22	CALL_7
0x40018de	        0x488d45e0	                   lea rax, [rbp - 0x20]	       504	describe.c	FUNCTION_22	CALL_7
0x40018e2	          0x4889d6	                            mov rsi, rdx	       504	describe.c	FUNCTION_22	CALL_7
0x40018e5	          0x4889c7	                            mov rdi, rax	       504	describe.c	FUNCTION_22	CALL_7
0x40018e8	      0xe85ff3ffff	                call sym.describe_commit	       504	describe.c	FUNCTION_22	CALL_7
0x40018ed	            0xeb73	                           jmp 0x4001962	       504	describe.c	FUNCTION_22	CALL_7
0x40018ef	    0x488b05000000	            mov rax, qword [0x040018f6] 	       505	describe.c	FUNCTION_22	ELSE_1	IF_4	CALL_8
0x40018f6	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       505	describe.c	FUNCTION_22	ELSE_1	IF_4	CALL_8
0x40018fa	      0xba00000000	                              mov edx, 0	       505	describe.c	FUNCTION_22	ELSE_1	IF_4	CALL_8
0x40018ff	          0x4889ce	                            mov rsi, rcx	       505	describe.c	FUNCTION_22	ELSE_1	IF_4	CALL_8
0x4001902	          0x4889c7	                            mov rdi, rax	       505	describe.c	FUNCTION_22	ELSE_1	IF_4	CALL_8
0x4001905	      0xe800000000	                          call 0x400190a	       505	describe.c	FUNCTION_22	ELSE_1	IF_4	CALL_8
0x400190a	          0x83f803	                              cmp eax, 3	       505	describe.c	FUNCTION_22	ELSE_1	IF_4	CALL_8
0x400190d	            0x7532	                           jne 0x4001941	       505	describe.c	FUNCTION_22	ELSE_1	IF_4	CALL_8
0x400190f	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       506	describe.c	FUNCTION_22	ELSE_1	IF_4
0x4001913	        0x4883ec08	                              sub rsp, 8	       506	describe.c	FUNCTION_22	ELSE_1	IF_4
0x4001917	        0x4883ec18	                           sub rsp, 0x18	       506	describe.c	FUNCTION_22	ELSE_1	IF_4
0x400191b	          0x4889e0	                            mov rax, rsp	       506	describe.c	FUNCTION_22	ELSE_1	IF_4
0x400191e	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       506	describe.c	FUNCTION_22	ELSE_1	IF_4
0x4001922	          0x488908	                    mov qword [rax], rcx	       506	describe.c	FUNCTION_22	ELSE_1	IF_4
0x4001925	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       506	describe.c	FUNCTION_22	ELSE_1	IF_4
0x4001929	        0x48894808	                mov qword [rax + 8], rcx	       506	describe.c	FUNCTION_22	ELSE_1	IF_4
0x400192d	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	       506	describe.c	FUNCTION_22	ELSE_1	IF_4
0x4001930	          0x894810	             mov dword [rax + 0x10], ecx	       506	describe.c	FUNCTION_22	ELSE_1	IF_4
0x4001933	          0x4889d7	                            mov rdi, rdx	       506	describe.c	FUNCTION_22	ELSE_1	IF_4
0x4001936	      0xe854fdffff	                  call sym.describe_blob	       506	describe.c	FUNCTION_22	ELSE_1	IF_4
0x400193b	        0x4883c420	                           add rsp, 0x20	       506	describe.c	FUNCTION_22	ELSE_1	IF_4
0x400193f	            0xeb21	                           jmp 0x4001962	       506	describe.c	FUNCTION_22	ELSE_1	IF_4
0x4001941	      0xbf00000000	                              mov edi, 0	       508	describe.c	FUNCTION_22	CALL_11
0x4001946	      0xe8f2e8ffff	                               call sym.	       508	describe.c	FUNCTION_22	CALL_11
0x400194b	          0x4889c2	                            mov rdx, rax	       508	describe.c	FUNCTION_22	CALL_11
0x400194e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       508	describe.c	FUNCTION_22	CALL_11
0x4001952	          0x4889c6	                            mov rsi, rax	       508	describe.c	FUNCTION_22	CALL_11
0x4001955	          0x4889d7	                            mov rdi, rdx	       508	describe.c	FUNCTION_22	CALL_11
0x4001958	      0xb800000000	                              mov eax, 0	       508	describe.c	FUNCTION_22	CALL_11
0x400195d	      0xe800000000	                          call 0x4001962	       508	describe.c	FUNCTION_22	CALL_11
0x4001962	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       510	describe.c	FUNCTION_22	CALL_12
0x4001966	          0x4889c7	                            mov rdi, rax	       510	describe.c	FUNCTION_22	CALL_12
0x4001969	      0xe800000000	                          call 0x400196e	       510	describe.c	FUNCTION_22	CALL_12
0x400196e	        0x837da400	               cmp dword [rbp - 0x5c], 0	       512	describe.c	FUNCTION_22	IF_5
0x4001972	            0x7511	                           jne 0x4001985	       512	describe.c	FUNCTION_22	IF_5
0x4001974	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       513	describe.c	FUNCTION_22	CALL_13
0x4001978	      0xbeffffffff	                     mov esi, 0xffffffff	       513	describe.c	FUNCTION_22	CALL_13
0x400197d	          0x4889c7	                            mov rdi, rax	       513	describe.c	FUNCTION_22	CALL_13
0x4001980	      0xe800000000	                          call 0x4001985	       513	describe.c	FUNCTION_22	CALL_13
0x4001985	        0x488d45c0	                   lea rax, [rbp - 0x40]	       515	describe.c	FUNCTION_22	CALL_14
0x4001989	          0x4889c7	                            mov rdi, rax	       515	describe.c	FUNCTION_22	CALL_14
0x400198c	      0xe800000000	                          call 0x4001991	       515	describe.c	FUNCTION_22	CALL_14
0x4001991	              0x90	                                     nop	       516	describe.c	FUNCTION_22
0x4001992	        0x488b45f8	                mov rax, qword [rbp - 8]	       516	describe.c	FUNCTION_22
0x4001996	    0x644833042528	                xor rax, qword fs:[0x28]	       516	describe.c	FUNCTION_22
0x400199f	            0x7405	                            je 0x40019a6	       516	describe.c	FUNCTION_22
0x40019a1	      0xe800000000	                          call 0x40019a6	       516	describe.c	FUNCTION_22
0x40019a6	              0xc9	                                   leave	       516	describe.c	FUNCTION_22
0x40019a7	              0xc3	                                     ret	       516	describe.c	FUNCTION_22
commit_name_cmp	DO,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0:functions,0:FOR,0	24
0x4000328	              0x55	                                push rbp	        64	describe.c	FUNCTION_9
0x4000329	          0x4889e5	                            mov rbp, rsp	        64	describe.c	FUNCTION_9
0x400032c	        0x4883ec30	                           sub rsp, 0x30	        64	describe.c	FUNCTION_9
0x4000330	        0x48897de8	             mov qword [rbp - 0x18], rdi	        64	describe.c	FUNCTION_9
0x4000334	        0x488975e0	             mov qword [rbp - 0x20], rsi	        64	describe.c	FUNCTION_9
0x4000338	        0x488955d8	             mov qword [rbp - 0x28], rdx	        64	describe.c	FUNCTION_9
0x400033c	        0x48894dd0	             mov qword [rbp - 0x30], rcx	        64	describe.c	FUNCTION_9
0x4000340	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        65	describe.c	FUNCTION_9
0x4000344	        0x488945f0	             mov qword [rbp - 0x10], rax	        65	describe.c	FUNCTION_9
0x4000348	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        66	describe.c	FUNCTION_9
0x400034c	        0x488945f8	                mov qword [rbp - 8], rax	        66	describe.c	FUNCTION_9
0x4000350	      0x48837dd000	               cmp qword [rbp - 0x30], 0	        68	describe.c	FUNCTION_9	CALL_1
0x4000355	            0x750a	                           jne 0x4000361	        68	describe.c	FUNCTION_9	CALL_1
0x4000357	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	describe.c	FUNCTION_9	CALL_1
0x400035b	        0x4883c010	                           add rax, 0x10	        68	describe.c	FUNCTION_9	CALL_1
0x400035f	            0xeb04	                           jmp 0x4000365	        68	describe.c	FUNCTION_9	CALL_1
0x4000361	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        68	describe.c	FUNCTION_9	CALL_1
0x4000365	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        68	describe.c	FUNCTION_9	CALL_1
0x4000369	        0x4883c210	                           add rdx, 0x10	        68	describe.c	FUNCTION_9	CALL_1
0x400036d	          0x4889c6	                            mov rsi, rax	        68	describe.c	FUNCTION_9	CALL_1
0x4000370	          0x4889d7	                            mov rdi, rdx	        68	describe.c	FUNCTION_9	CALL_1
0x4000373	      0xe81bffffff	                         call sym.oidcmp	        68	describe.c	FUNCTION_9	CALL_1
0x4000378	              0xc9	                                   leave	        69	describe.c	FUNCTION_9
0x4000379	              0xc3	                                     ret	        69	describe.c	FUNCTION_9
append_suffix	DO,0:SWITCH,0:ELSE,0:CALL,2:IF,0:WHILE,0:functions,0:FOR,0	21
0x4000c06	              0x55	                                push rbp	       287	describe.c	FUNCTION_17
0x4000c07	          0x4889e5	                            mov rbp, rsp	       287	describe.c	FUNCTION_17
0x4000c0a	        0x4883ec20	                           sub rsp, 0x20	       287	describe.c	FUNCTION_17
0x4000c0e	          0x897dfc	                mov dword [rbp - 4], edi	       287	describe.c	FUNCTION_17
0x4000c11	        0x488975f0	             mov qword [rbp - 0x10], rsi	       287	describe.c	FUNCTION_17
0x4000c15	        0x488955e8	             mov qword [rbp - 0x18], rdx	       287	describe.c	FUNCTION_17
0x4000c19	    0x8b1500000000	            mov edx, dword [0x04000c1f] 	       288	describe.c	FUNCTION_17	CALL_2
0x4000c1f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       288	describe.c	FUNCTION_17	CALL_2
0x4000c23	            0x89d6	                            mov esi, edx	       288	describe.c	FUNCTION_17	CALL_2
0x4000c25	          0x4889c7	                            mov rdi, rax	       288	describe.c	FUNCTION_17	CALL_2
0x4000c28	      0xe800000000	                          call 0x4000c2d	       288	describe.c	FUNCTION_17	CALL_2
0x4000c2d	          0x4889c1	                            mov rcx, rax	       288	describe.c	FUNCTION_17	CALL_2
0x4000c30	          0x8b55fc	                mov edx, dword [rbp - 4]	       288	describe.c	FUNCTION_17	CALL_2
0x4000c33	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       288	describe.c	FUNCTION_17	CALL_2
0x4000c37	      0xbe00000000	                              mov esi, 0	       288	describe.c	FUNCTION_17	CALL_2
0x4000c3c	          0x4889c7	                            mov rdi, rax	       288	describe.c	FUNCTION_17	CALL_2
0x4000c3f	      0xb800000000	                              mov eax, 0	       288	describe.c	FUNCTION_17	CALL_2
0x4000c44	      0xe800000000	                          call 0x4000c49	       288	describe.c	FUNCTION_17	CALL_2
0x4000c49	              0x90	                                     nop	       289	describe.c	FUNCTION_17
0x4000c4a	              0xc9	                                   leave	       289	describe.c	FUNCTION_17
0x4000c4b	              0xc3	                                     ret	       289	describe.c	FUNCTION_17
_	DO,0:SWITCH,0:ELSE,0:CALL,0:IF,1:WHILE,0:functions,0:FOR,0	15
0x400023d	              0x55	                                push rbp	        51	gettext.h	FUNCTION_81
0x400023e	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_81
0x4000241	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_81
0x4000245	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_81
0x4000249	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_81	IF_1
0x400024d	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_81	IF_1
0x4000250	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_81	IF_1
0x4000252	            0x7507	                           jne 0x400025b	        52	gettext.h	FUNCTION_81	IF_1
0x4000254	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_81	IF_1
0x4000259	            0xeb0c	                           jmp 0x4000267	        53	gettext.h	FUNCTION_81	IF_1
0x400025b	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_81
0x400025f	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_81
0x4000262	      0xe800000000	                          call 0x4000267	        54	gettext.h	FUNCTION_81
0x4000267	              0xc9	                                   leave	        55	gettext.h	FUNCTION_81
0x4000268	              0xc3	                                     ret	        55	gettext.h	FUNCTION_81
compare_pt	DO,0:SWITCH,0:ELSE,0:CALL,0:IF,2:WHILE,0:functions,0:FOR,0	37
0x400085f	              0x55	                                push rbp	       219	describe.c	FUNCTION_14
0x4000860	          0x4889e5	                            mov rbp, rsp	       219	describe.c	FUNCTION_14
0x4000863	        0x48897de8	             mov qword [rbp - 0x18], rdi	       219	describe.c	FUNCTION_14
0x4000867	        0x488975e0	             mov qword [rbp - 0x20], rsi	       219	describe.c	FUNCTION_14
0x400086b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       220	describe.c	FUNCTION_14
0x400086f	        0x488945f0	             mov qword [rbp - 0x10], rax	       220	describe.c	FUNCTION_14
0x4000873	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       221	describe.c	FUNCTION_14
0x4000877	        0x488945f8	                mov qword [rbp - 8], rax	       221	describe.c	FUNCTION_14
0x400087b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       222	describe.c	FUNCTION_14	IF_1
0x400087f	          0x8b5008	                mov edx, dword [rax + 8]	       222	describe.c	FUNCTION_14	IF_1
0x4000882	        0x488b45f8	                mov rax, qword [rbp - 8]	       222	describe.c	FUNCTION_14	IF_1
0x4000886	          0x8b4008	                mov eax, dword [rax + 8]	       222	describe.c	FUNCTION_14	IF_1
0x4000889	            0x39c2	                            cmp edx, eax	       222	describe.c	FUNCTION_14	IF_1
0x400088b	            0x7414	                            je 0x40008a1	       222	describe.c	FUNCTION_14	IF_1
0x400088d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       223	describe.c	FUNCTION_14	IF_1
0x4000891	          0x8b5008	                mov edx, dword [rax + 8]	       223	describe.c	FUNCTION_14	IF_1
0x4000894	        0x488b45f8	                mov rax, qword [rbp - 8]	       223	describe.c	FUNCTION_14	IF_1
0x4000898	          0x8b4008	                mov eax, dword [rax + 8]	       223	describe.c	FUNCTION_14	IF_1
0x400089b	            0x29c2	                            sub edx, eax	       223	describe.c	FUNCTION_14	IF_1
0x400089d	            0x89d0	                            mov eax, edx	       223	describe.c	FUNCTION_14	IF_1
0x400089f	            0xeb2b	                           jmp 0x40008cc	       223	describe.c	FUNCTION_14	IF_1
0x40008a1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       224	describe.c	FUNCTION_14	IF_2
0x40008a5	          0x8b500c	              mov edx, dword [rax + 0xc]	       224	describe.c	FUNCTION_14	IF_2
0x40008a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	describe.c	FUNCTION_14	IF_2
0x40008ac	          0x8b400c	              mov eax, dword [rax + 0xc]	       224	describe.c	FUNCTION_14	IF_2
0x40008af	            0x39c2	                            cmp edx, eax	       224	describe.c	FUNCTION_14	IF_2
0x40008b1	            0x7414	                            je 0x40008c7	       224	describe.c	FUNCTION_14	IF_2
0x40008b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       225	describe.c	FUNCTION_14	IF_2
0x40008b7	          0x8b500c	              mov edx, dword [rax + 0xc]	       225	describe.c	FUNCTION_14	IF_2
0x40008ba	        0x488b45f8	                mov rax, qword [rbp - 8]	       225	describe.c	FUNCTION_14	IF_2
0x40008be	          0x8b400c	              mov eax, dword [rax + 0xc]	       225	describe.c	FUNCTION_14	IF_2
0x40008c1	            0x29c2	                            sub edx, eax	       225	describe.c	FUNCTION_14	IF_2
0x40008c3	            0x89d0	                            mov eax, edx	       225	describe.c	FUNCTION_14	IF_2
0x40008c5	            0xeb05	                           jmp 0x40008cc	       225	describe.c	FUNCTION_14	IF_2
0x40008c7	      0xb800000000	                              mov eax, 0	       226	describe.c	FUNCTION_14
0x40008cc	              0x5d	                                 pop rbp	       227	describe.c	FUNCTION_14
0x40008cd	              0xc3	                                     ret	       227	describe.c	FUNCTION_14
hashmap_get_from_hash	DO,0:SWITCH,0:ELSE,0:CALL,2:IF,0:WHILE,0:functions,0:FOR,0	26
0x40001ac	              0x55	                                push rbp	       305	hashmap.h	FUNCTION_4
0x40001ad	          0x4889e5	                            mov rbp, rsp	       305	hashmap.h	FUNCTION_4
0x40001b0	        0x4883ec40	                           sub rsp, 0x40	       305	hashmap.h	FUNCTION_4
0x40001b4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       305	hashmap.h	FUNCTION_4
0x40001b8	          0x8975d4	             mov dword [rbp - 0x2c], esi	       305	hashmap.h	FUNCTION_4
0x40001bb	        0x488955c8	             mov qword [rbp - 0x38], rdx	       305	hashmap.h	FUNCTION_4
0x40001bf	    0x64488b042528	                mov rax, qword fs:[0x28]	       305	hashmap.h	FUNCTION_4
0x40001c8	        0x488945f8	                mov qword [rbp - 8], rax	       305	hashmap.h	FUNCTION_4
0x40001cc	            0x31c0	                            xor eax, eax	       305	hashmap.h	FUNCTION_4
0x40001ce	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       307	hashmap.h	FUNCTION_4	CALL_1
0x40001d1	        0x488d45e0	                   lea rax, [rbp - 0x20]	       307	hashmap.h	FUNCTION_4	CALL_1
0x40001d5	            0x89d6	                            mov esi, edx	       307	hashmap.h	FUNCTION_4	CALL_1
0x40001d7	          0x4889c7	                            mov rdi, rax	       307	hashmap.h	FUNCTION_4	CALL_1
0x40001da	      0xe863ffffff	             call sym.hashmap_entry_init	       307	hashmap.h	FUNCTION_4	CALL_1
0x40001df	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       308	hashmap.h	FUNCTION_4	CALL_2
0x40001e3	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       308	hashmap.h	FUNCTION_4	CALL_2
0x40001e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       308	hashmap.h	FUNCTION_4	CALL_2
0x40001eb	          0x4889ce	                            mov rsi, rcx	       308	hashmap.h	FUNCTION_4	CALL_2
0x40001ee	          0x4889c7	                            mov rdi, rax	       308	hashmap.h	FUNCTION_4	CALL_2
0x40001f1	      0xe800000000	                          call 0x40001f6	       308	hashmap.h	FUNCTION_4	CALL_2
0x40001f6	        0x488b4df8	                mov rcx, qword [rbp - 8]	       309	hashmap.h	FUNCTION_4
0x40001fa	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       309	hashmap.h	FUNCTION_4
0x4000203	            0x7405	                            je 0x400020a	       309	hashmap.h	FUNCTION_4
0x4000205	      0xe800000000	                          call 0x400020a	       309	hashmap.h	FUNCTION_4
0x400020a	              0xc9	                                   leave	       309	hashmap.h	FUNCTION_4
0x400020b	              0xc3	                                     ret	       309	hashmap.h	FUNCTION_4
hashcmp	DO,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0:functions,0:FOR,0	13
0x4000269	              0x55	                                push rbp	       974	cache.h	FUNCTION_59
0x400026a	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_59
0x400026d	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_59
0x4000271	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_59
0x4000275	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_59
0x4000279	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_59	CALL_1
0x400027d	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_59	CALL_1
0x4000281	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_59	CALL_1
0x4000286	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_59	CALL_1
0x4000289	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_59	CALL_1
0x400028c	      0xe800000000	                          call 0x4000291	       975	cache.h	FUNCTION_59	CALL_1
0x4000291	              0xc9	                                   leave	       976	cache.h	FUNCTION_59
0x4000292	              0xc3	                                     ret	       976	cache.h	FUNCTION_59
cmd_describe	DO,0:SWITCH,1:ELSE,7:CALL,49:IF,18:WHILE,1:functions,0:FOR,0	400
0x40019a8	              0x55	                                push rbp	       519	describe.c	FUNCTION_23
0x40019a9	          0x4889e5	                            mov rbp, rsp	       519	describe.c	FUNCTION_23
0x40019ac	    0x4881ec200d00	                          sub rsp, 0xd20	       519	describe.c	FUNCTION_23
0x40019b3	    0x89bdfcf2ffff	            mov dword [rbp - 0xd04], edi	       519	describe.c	FUNCTION_23
0x40019b9	    0x4889b5f0f2ff	            mov qword [rbp - 0xd10], rsi	       519	describe.c	FUNCTION_23
0x40019c0	    0x488995e8f2ff	            mov qword [rbp - 0xd18], rdx	       519	describe.c	FUNCTION_23
0x40019c7	    0x64488b042528	                mov rax, qword fs:[0x28]	       519	describe.c	FUNCTION_23
0x40019d0	        0x488945f8	                mov qword [rbp - 8], rax	       519	describe.c	FUNCTION_23
0x40019d4	            0x31c0	                            xor eax, eax	       519	describe.c	FUNCTION_23
0x40019d6	    0xc7850cf3ffff	              mov dword [rbp - 0xcf4], 0	       520	describe.c	FUNCTION_23
0x40019e0	    0x488d9580f3ff	                  lea rdx, [rbp - 0xc80]	       521	describe.c	FUNCTION_23
0x40019e7	      0xb800000000	                              mov eax, 0	       521	describe.c	FUNCTION_23
0x40019ec	      0xb978000000	                           mov ecx, 0x78	       521	describe.c	FUNCTION_23
0x40019f1	          0x4889d7	                            mov rdi, rdx	       521	describe.c	FUNCTION_23
0x40019f4	          0xf348ab	              rep stosq qword [rdi], rax	       521	describe.c	FUNCTION_23
0x40019f7	    0xc78580f3ffff	              mov dword [rbp - 0xc80], 7	       521	describe.c	FUNCTION_23
0x4001a01	    0x48c78588f3ff	              mov qword [rbp - 0xc78], 0	       521	describe.c	FUNCTION_23
0x4001a0c	    0x488d850cf3ff	                  lea rax, [rbp - 0xcf4]	       521	describe.c	FUNCTION_23
0x4001a13	    0x48898590f3ff	            mov qword [rbp - 0xc70], rax	       521	describe.c	FUNCTION_23
0x4001a1a	    0x48c785a0f3ff	              mov qword [rbp - 0xc60], 0	       521	describe.c	FUNCTION_23
0x4001a25	    0xc785a8f3ffff	              mov dword [rbp - 0xc58], 2	       521	describe.c	FUNCTION_23
0x4001a2f	    0x48c785b8f3ff	              mov qword [rbp - 0xc48], 1	       521	describe.c	FUNCTION_23
0x4001a3a	    0xc785c0f3ffff	              mov dword [rbp - 0xc40], 7	       521	describe.c	FUNCTION_23
0x4001a44	    0x48c785c8f3ff	              mov qword [rbp - 0xc38], 0	       521	describe.c	FUNCTION_23
0x4001a4f	    0x48c785d0f3ff	              mov qword [rbp - 0xc30], 0	       521	describe.c	FUNCTION_23
0x4001a5a	    0x48c785e0f3ff	              mov qword [rbp - 0xc20], 0	       521	describe.c	FUNCTION_23
0x4001a65	    0xc785e8f3ffff	              mov dword [rbp - 0xc18], 2	       521	describe.c	FUNCTION_23
0x4001a6f	    0x48c785f8f3ff	              mov qword [rbp - 0xc08], 1	       521	describe.c	FUNCTION_23
0x4001a7a	    0xc78500f4ffff	              mov dword [rbp - 0xc00], 7	       521	describe.c	FUNCTION_23
0x4001a84	    0x48c78508f4ff	              mov qword [rbp - 0xbf8], 0	       521	describe.c	FUNCTION_23
0x4001a8f	    0x48c78510f4ff	              mov qword [rbp - 0xbf0], 0	       521	describe.c	FUNCTION_23
0x4001a9a	    0x48c78520f4ff	              mov qword [rbp - 0xbe0], 0	       521	describe.c	FUNCTION_23
0x4001aa5	    0xc78528f4ffff	              mov dword [rbp - 0xbd8], 2	       521	describe.c	FUNCTION_23
0x4001aaf	    0x48c78538f4ff	              mov qword [rbp - 0xbc8], 1	       521	describe.c	FUNCTION_23
0x4001aba	    0xc78540f4ffff	              mov dword [rbp - 0xbc0], 7	       521	describe.c	FUNCTION_23
0x4001ac4	    0x48c78548f4ff	              mov qword [rbp - 0xbb8], 0	       521	describe.c	FUNCTION_23
0x4001acf	    0x48c78550f4ff	              mov qword [rbp - 0xbb0], 0	       521	describe.c	FUNCTION_23
0x4001ada	    0x48c78560f4ff	              mov qword [rbp - 0xba0], 0	       521	describe.c	FUNCTION_23
0x4001ae5	    0xc78568f4ffff	              mov dword [rbp - 0xb98], 2	       521	describe.c	FUNCTION_23
0x4001aef	    0x48c78578f4ff	              mov qword [rbp - 0xb88], 1	       521	describe.c	FUNCTION_23
0x4001afa	    0xc78580f4ffff	              mov dword [rbp - 0xb80], 7	       521	describe.c	FUNCTION_23
0x4001b04	    0x48c78588f4ff	              mov qword [rbp - 0xb78], 0	       521	describe.c	FUNCTION_23
0x4001b0f	    0x48c78590f4ff	              mov qword [rbp - 0xb70], 0	       521	describe.c	FUNCTION_23
0x4001b1a	    0x48c785a0f4ff	              mov qword [rbp - 0xb60], 0	       521	describe.c	FUNCTION_23
0x4001b25	    0xc785a8f4ffff	              mov dword [rbp - 0xb58], 2	       521	describe.c	FUNCTION_23
0x4001b2f	    0x48c785b8f4ff	              mov qword [rbp - 0xb48], 1	       521	describe.c	FUNCTION_23
0x4001b3a	    0xc785c0f4ffff	              mov dword [rbp - 0xb40], 7	       521	describe.c	FUNCTION_23
0x4001b44	    0x48c785c8f4ff	              mov qword [rbp - 0xb38], 0	       521	describe.c	FUNCTION_23
0x4001b4f	    0x48c785d0f4ff	              mov qword [rbp - 0xb30], 0	       521	describe.c	FUNCTION_23
0x4001b5a	    0x48c785e0f4ff	              mov qword [rbp - 0xb20], 0	       521	describe.c	FUNCTION_23
0x4001b65	    0xc785e8f4ffff	              mov dword [rbp - 0xb18], 2	       521	describe.c	FUNCTION_23
0x4001b6f	    0x48c785f8f4ff	              mov qword [rbp - 0xb08], 1	       521	describe.c	FUNCTION_23
0x4001b7a	    0xc78500f5ffff	           mov dword [rbp - 0xb00], 0xc 	       521	describe.c	FUNCTION_23
0x4001b84	    0x48c78508f5ff	              mov qword [rbp - 0xaf8], 0	       521	describe.c	FUNCTION_23
0x4001b8f	    0x48c78510f5ff	              mov qword [rbp - 0xaf0], 0	       521	describe.c	FUNCTION_23
0x4001b9a	    0x48c78518f5ff	              mov qword [rbp - 0xae8], 0	       521	describe.c	FUNCTION_23
0x4001ba5	    0x48c78520f5ff	              mov qword [rbp - 0xae0], 0	       521	describe.c	FUNCTION_23
0x4001bb0	    0xc78528f5ffff	              mov dword [rbp - 0xad8], 1	       521	describe.c	FUNCTION_23
0x4001bba	    0x48c78530f5ff	              mov qword [rbp - 0xad0], 0	       521	describe.c	FUNCTION_23
0x4001bc5	    0xc78540f5ffff	              mov dword [rbp - 0xac0], 7	       521	describe.c	FUNCTION_23
0x4001bcf	    0x48c78548f5ff	              mov qword [rbp - 0xab8], 0	       521	describe.c	FUNCTION_23
0x4001bda	    0x48c78550f5ff	              mov qword [rbp - 0xab0], 0	       521	describe.c	FUNCTION_23
0x4001be5	    0x48c78560f5ff	              mov qword [rbp - 0xaa0], 0	       521	describe.c	FUNCTION_23
0x4001bf0	    0xc78568f5ffff	              mov dword [rbp - 0xa98], 2	       521	describe.c	FUNCTION_23
0x4001bfa	    0xc78580f5ffff	            mov dword [rbp - 0xa80], 0xa	       521	describe.c	FUNCTION_23
0x4001c04	    0x48c78588f5ff	              mov qword [rbp - 0xa78], 0	       521	describe.c	FUNCTION_23
0x4001c0f	    0x48c78590f5ff	              mov qword [rbp - 0xa70], 0	       521	describe.c	FUNCTION_23
0x4001c1a	    0x48c78598f5ff	              mov qword [rbp - 0xa68], 0	       521	describe.c	FUNCTION_23
0x4001c25	    0x48c785a0f5ff	              mov qword [rbp - 0xa60], 0	       521	describe.c	FUNCTION_23
0x4001c30	    0xc785c0f5ffff	           mov dword [rbp - 0xa40], 0xc 	       521	describe.c	FUNCTION_23
0x4001c3a	    0x48c785c8f5ff	              mov qword [rbp - 0xa38], 0	       521	describe.c	FUNCTION_23
0x4001c45	    0x48c785d0f5ff	              mov qword [rbp - 0xa30], 0	       521	describe.c	FUNCTION_23
0x4001c50	    0x48c785d8f5ff	              mov qword [rbp - 0xa28], 0	       521	describe.c	FUNCTION_23
0x4001c5b	    0x48c785e0f5ff	              mov qword [rbp - 0xa20], 0	       521	describe.c	FUNCTION_23
0x4001c66	    0x48c785f0f5ff	              mov qword [rbp - 0xa10], 0	       521	describe.c	FUNCTION_23
0x4001c71	    0xc78500f6ffff	           mov dword [rbp - 0xa00], 0xc 	       521	describe.c	FUNCTION_23
0x4001c7b	    0x48c78508f6ff	              mov qword [rbp - 0x9f8], 0	       521	describe.c	FUNCTION_23
0x4001c86	    0x48c78510f6ff	              mov qword [rbp - 0x9f0], 0	       521	describe.c	FUNCTION_23
0x4001c91	    0x48c78518f6ff	              mov qword [rbp - 0x9e8], 0	       521	describe.c	FUNCTION_23
0x4001c9c	    0x48c78520f6ff	              mov qword [rbp - 0x9e0], 0	       521	describe.c	FUNCTION_23
0x4001ca7	    0x48c78530f6ff	              mov qword [rbp - 0x9d0], 0	       521	describe.c	FUNCTION_23
0x4001cb2	    0xc78540f6ffff	              mov dword [rbp - 0x9c0], 7	       521	describe.c	FUNCTION_23
0x4001cbc	    0x48c78548f6ff	              mov qword [rbp - 0x9b8], 0	       521	describe.c	FUNCTION_23
0x4001cc7	    0x48c78550f6ff	              mov qword [rbp - 0x9b0], 0	       521	describe.c	FUNCTION_23
0x4001cd2	    0x48c78560f6ff	              mov qword [rbp - 0x9a0], 0	       521	describe.c	FUNCTION_23
0x4001cdd	    0xc78568f6ffff	              mov dword [rbp - 0x998], 2	       521	describe.c	FUNCTION_23
0x4001ce7	    0x48c78578f6ff	              mov qword [rbp - 0x988], 1	       521	describe.c	FUNCTION_23
0x4001cf2	    0xc78580f6ffff	              mov dword [rbp - 0x980], 9	       521	describe.c	FUNCTION_23
0x4001cfc	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	       521	describe.c	FUNCTION_23
0x4001d07	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	       521	describe.c	FUNCTION_23
0x4001d12	    0x48c78598f6ff	              mov qword [rbp - 0x968], 0	       521	describe.c	FUNCTION_23
0x4001d1d	    0x48c785a0f6ff	              mov qword [rbp - 0x960], 0	       521	describe.c	FUNCTION_23
0x4001d28	    0xc785a8f6ffff	              mov dword [rbp - 0x958], 1	       521	describe.c	FUNCTION_23
0x4001d32	      0xb800000000	                              mov eax, 0	       541	describe.c	FUNCTION_23
0x4001d37	    0x488985b8f6ff	            mov qword [rbp - 0x948], rax	       521	describe.c	FUNCTION_23
0x4001d3e	    0xc785c0f6ffff	              mov dword [rbp - 0x940], 9	       521	describe.c	FUNCTION_23
0x4001d48	    0x48c785c8f6ff	              mov qword [rbp - 0x938], 0	       521	describe.c	FUNCTION_23
0x4001d53	    0x48c785d0f6ff	              mov qword [rbp - 0x930], 0	       521	describe.c	FUNCTION_23
0x4001d5e	    0x48c785d8f6ff	              mov qword [rbp - 0x928], 0	       521	describe.c	FUNCTION_23
0x4001d69	    0x48c785e0f6ff	              mov qword [rbp - 0x920], 0	       521	describe.c	FUNCTION_23
0x4001d74	    0xc785e8f6ffff	              mov dword [rbp - 0x918], 1	       521	describe.c	FUNCTION_23
0x4001d7e	      0xb800000000	                              mov eax, 0	       544	describe.c	FUNCTION_23
0x4001d83	    0x488985f8f6ff	            mov qword [rbp - 0x908], rax	       521	describe.c	FUNCTION_23
0x4001d8a	      0xbe00000000	                              mov esi, 0	       548	describe.c	FUNCTION_23	CALL_14
0x4001d8f	      0xbf00000000	                              mov edi, 0	       548	describe.c	FUNCTION_23	CALL_14
0x4001d94	      0xe800000000	                          call 0x4001d99	       548	describe.c	FUNCTION_23	CALL_14
0x4001d99	    0x488d8d80f3ff	                  lea rcx, [rbp - 0xc80]	       549	describe.c	FUNCTION_23	CALL_15
0x4001da0	    0x488b95e8f2ff	            mov rdx, qword [rbp - 0xd18]	       549	describe.c	FUNCTION_23	CALL_15
0x4001da7	    0x488bb5f0f2ff	            mov rsi, qword [rbp - 0xd10]	       549	describe.c	FUNCTION_23	CALL_15
0x4001dae	    0x8b85fcf2ffff	            mov eax, dword [rbp - 0xd04]	       549	describe.c	FUNCTION_23	CALL_15
0x4001db4	    0x41b900000000	                              mov r9d, 0	       549	describe.c	FUNCTION_23	CALL_15
0x4001dba	    0x41b800000000	                              mov r8d, 0	       549	describe.c	FUNCTION_23	CALL_15
0x4001dc0	            0x89c7	                            mov edi, eax	       549	describe.c	FUNCTION_23	CALL_15
0x4001dc2	      0xe800000000	                          call 0x4001dc7	       549	describe.c	FUNCTION_23	CALL_15
0x4001dc7	    0x8985fcf2ffff	            mov dword [rbp - 0xd04], eax	       549	describe.c	FUNCTION_23	CALL_15
0x4001dcd	    0x8b0500000000	            mov eax, dword [0x04001dd3] 	       550	describe.c	FUNCTION_23	IF_1
0x4001dd3	            0x85c0	                           test eax, eax	       550	describe.c	FUNCTION_23	IF_1
0x4001dd5	            0x790c	                           jns 0x4001de3	       550	describe.c	FUNCTION_23	IF_1
0x4001dd7	    0x8b0500000000	            mov eax, dword [0x04001ddd] 	       551	describe.c	FUNCTION_23	IF_1
0x4001ddd	    0x890500000000	            mov dword [0x04001de3], eax 	       551	describe.c	FUNCTION_23	IF_1
0x4001de3	    0x8b0500000000	            mov eax, dword [0x04001de9] 	       553	describe.c	FUNCTION_23	IF_2
0x4001de9	            0x85c0	                           test eax, eax	       553	describe.c	FUNCTION_23	IF_2
0x4001deb	            0x790c	                           jns 0x4001df9	       553	describe.c	FUNCTION_23	IF_2
0x4001ded	    0xc70500000000	               mov dword [0x04001df7], 0	       554	describe.c	FUNCTION_23	IF_2
0x4001df7	            0xeb15	                           jmp 0x4001e0e	       554	describe.c	FUNCTION_23	IF_2
0x4001df9	    0x8b0500000000	            mov eax, dword [0x04001dff] 	       555	describe.c	FUNCTION_23	ELSE_1	IF_3
0x4001dff	          0x83f81a	                           cmp eax, 0x1a	       555	describe.c	FUNCTION_23	ELSE_1	IF_3
0x4001e02	            0x7e0a	                           jle 0x4001e0e	       555	describe.c	FUNCTION_23	ELSE_1	IF_3
0x4001e04	    0xc70500000000	           mov dword [0x04001e0e], 0x1a 	       556	describe.c	FUNCTION_23	ELSE_1	IF_3
0x4001e0e	    0xc70500000000	               mov dword [0x04001e18], 0	       558	describe.c	FUNCTION_23
0x4001e18	    0x8b0500000000	            mov eax, dword [0x04001e1e] 	       560	describe.c	FUNCTION_23	IF_4
0x4001e1e	            0x85c0	                           test eax, eax	       560	describe.c	FUNCTION_23	IF_4
0x4001e20	            0x7421	                            je 0x4001e43	       560	describe.c	FUNCTION_23	IF_4
0x4001e22	    0x8b0500000000	            mov eax, dword [0x04001e28] 	       560	describe.c	FUNCTION_23	IF_4
0x4001e28	            0x85c0	                           test eax, eax	       560	describe.c	FUNCTION_23	IF_4
0x4001e2a	            0x7517	                           jne 0x4001e43	       560	describe.c	FUNCTION_23	IF_4
0x4001e2c	      0xbf00000000	                              mov edi, 0	       561	describe.c	FUNCTION_23	CALL_17
0x4001e31	      0xe807e4ffff	                               call sym.	       561	describe.c	FUNCTION_23	CALL_17
0x4001e36	          0x4889c7	                            mov rdi, rax	       561	describe.c	FUNCTION_23	CALL_17
0x4001e39	      0xb800000000	                              mov eax, 0	       561	describe.c	FUNCTION_23	CALL_17
0x4001e3e	      0xe800000000	                          call 0x4001e43	       561	describe.c	FUNCTION_23	CALL_17
0x4001e43	    0x8b850cf3ffff	            mov eax, dword [rbp - 0xcf4]	       563	describe.c	FUNCTION_23	IF_5
0x4001e49	            0x85c0	                           test eax, eax	       563	describe.c	FUNCTION_23	IF_5
0x4001e4b	     0xf84a1010000	                            je 0x4001ff2	       563	describe.c	FUNCTION_23	IF_5
0x4001e51	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       567	describe.c	FUNCTION_23	IF_5	CALL_18
0x4001e58	          0x4889c7	                            mov rdi, rax	       567	describe.c	FUNCTION_23	IF_5	CALL_18
0x4001e5b	      0xe800000000	                          call 0x4001e60	       567	describe.c	FUNCTION_23	IF_5	CALL_18
0x4001e60	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       568	describe.c	FUNCTION_23	IF_5	CALL_19
0x4001e67	    0x41b900000000	                              mov r9d, 0	       568	describe.c	FUNCTION_23	IF_5	CALL_19
0x4001e6d	    0x41b800000000	                              mov r8d, 0	       568	describe.c	FUNCTION_23	IF_5	CALL_19
0x4001e73	      0xb900000000	                              mov ecx, 0	       568	describe.c	FUNCTION_23	IF_5	CALL_19
0x4001e78	      0xba00000000	                              mov edx, 0	       568	describe.c	FUNCTION_23	IF_5	CALL_19
0x4001e7d	      0xbe00000000	                              mov esi, 0	       568	describe.c	FUNCTION_23	IF_5	CALL_19
0x4001e82	          0x4889c7	                            mov rdi, rax	       568	describe.c	FUNCTION_23	IF_5	CALL_19
0x4001e85	      0xb800000000	                              mov eax, 0	       568	describe.c	FUNCTION_23	IF_5	CALL_19
0x4001e8a	      0xe800000000	                          call 0x4001e8f	       568	describe.c	FUNCTION_23	IF_5	CALL_19
0x4001e8f	    0x8b0500000000	            mov eax, dword [0x04001e95] 	       571	describe.c	FUNCTION_23	IF_5	IF_6
0x4001e95	            0x85c0	                           test eax, eax	       571	describe.c	FUNCTION_23	IF_5	IF_6
0x4001e97	            0x7414	                            je 0x4001ead	       571	describe.c	FUNCTION_23	IF_5	IF_6
0x4001e99	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       572	describe.c	FUNCTION_23	IF_5	CALL_20
0x4001ea0	      0xbe00000000	                              mov esi, 0	       572	describe.c	FUNCTION_23	IF_5	CALL_20
0x4001ea5	          0x4889c7	                            mov rdi, rax	       572	describe.c	FUNCTION_23	IF_5	CALL_20
0x4001ea8	      0xe800000000	                          call 0x4001ead	       572	describe.c	FUNCTION_23	IF_5	CALL_20
0x4001ead	    0x8b0500000000	            mov eax, dword [0x04001eb3] 	       573	describe.c	FUNCTION_23	IF_5	IF_7
0x4001eb3	            0x85c0	                           test eax, eax	       573	describe.c	FUNCTION_23	IF_5	IF_7
0x4001eb5	     0xf85dc000000	                           jne 0x4001f97	       573	describe.c	FUNCTION_23	IF_5	IF_7
0x4001ebb	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       574	describe.c	FUNCTION_23	IF_5	IF_7	CALL_21
0x4001ec2	      0xbe00000000	                              mov esi, 0	       574	describe.c	FUNCTION_23	IF_5	IF_7	CALL_21
0x4001ec7	          0x4889c7	                            mov rdi, rax	       574	describe.c	FUNCTION_23	IF_5	IF_7	CALL_21
0x4001eca	      0xe800000000	                          call 0x4001ecf	       574	describe.c	FUNCTION_23	IF_5	IF_7	CALL_21
0x4001ecf	    0x488b05000000	            mov rax, qword [0x04001ed6] 	       575	describe.c	FUNCTION_23	IF_5	IF_7	CALL_22
0x4001ed6	    0x48898518f3ff	            mov qword [rbp - 0xce8], rax	       575	describe.c	FUNCTION_23	IF_5	IF_7	CALL_22
0x4001edd	            0xeb2b	                           jmp 0x4001f0a	       575	describe.c	FUNCTION_23	IF_5	IF_7	CALL_22
0x4001edf	    0x488b8518f3ff	            mov rax, qword [rbp - 0xce8]	       576	describe.c	FUNCTION_23	IF_5	IF_7	CALL_23
0x4001ee6	          0x488b10	                    mov rdx, qword [rax]	       576	describe.c	FUNCTION_23	IF_5	IF_7	CALL_23
0x4001ee9	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       576	describe.c	FUNCTION_23	IF_5	IF_7	CALL_23
0x4001ef0	      0xbe00000000	                              mov esi, 0	       576	describe.c	FUNCTION_23	IF_5	IF_7	CALL_23
0x4001ef5	          0x4889c7	                            mov rdi, rax	       576	describe.c	FUNCTION_23	IF_5	IF_7	CALL_23
0x4001ef8	      0xb800000000	                              mov eax, 0	       576	describe.c	FUNCTION_23	IF_5	IF_7	CALL_23
0x4001efd	      0xe800000000	                          call 0x4001f02	       576	describe.c	FUNCTION_23	IF_5	IF_7	CALL_23
0x4001f02	    0x48838518f3ff	           add qword [rbp - 0xce8], 0x10	       575	describe.c	FUNCTION_23	IF_5	IF_7	CALL_22
0x4001f0a	    0x4883bd18f3ff	              cmp qword [rbp - 0xce8], 0	       575	describe.c	FUNCTION_23	IF_5	IF_7	CALL_22
0x4001f12	            0x741f	                            je 0x4001f33	       575	describe.c	FUNCTION_23	IF_5	IF_7	CALL_22
0x4001f14	    0x488b05000000	            mov rax, qword [0x04001f1b] 	       575	describe.c	FUNCTION_23	IF_5	IF_7	CALL_22
0x4001f1b	    0x8b1500000000	            mov edx, dword [0x04001f21] 	       575	describe.c	FUNCTION_23	IF_5	IF_7	CALL_22
0x4001f21	            0x89d2	                            mov edx, edx	       575	describe.c	FUNCTION_23	IF_5	IF_7	CALL_22
0x4001f23	        0x48c1e204	                              shl rdx, 4	       575	describe.c	FUNCTION_23	IF_5	IF_7	CALL_22
0x4001f27	          0x4801d0	                            add rax, rdx	       575	describe.c	FUNCTION_23	IF_5	IF_7	CALL_22
0x4001f2a	    0x483b8518f3ff	            cmp rax, qword [rbp - 0xce8]	       575	describe.c	FUNCTION_23	IF_5	IF_7	CALL_22
0x4001f31	            0x77ac	                            ja 0x4001edf	       575	describe.c	FUNCTION_23	IF_5	IF_7	CALL_22
0x4001f33	    0x488b05000000	            mov rax, qword [0x04001f3a] 	       577	describe.c	FUNCTION_23	IF_5	IF_7	CALL_24
0x4001f3a	    0x48898518f3ff	            mov qword [rbp - 0xce8], rax	       577	describe.c	FUNCTION_23	IF_5	IF_7	CALL_24
0x4001f41	            0xeb2b	                           jmp 0x4001f6e	       577	describe.c	FUNCTION_23	IF_5	IF_7	CALL_24
0x4001f43	    0x488b8518f3ff	            mov rax, qword [rbp - 0xce8]	       578	describe.c	FUNCTION_23	IF_5	IF_7	CALL_25
0x4001f4a	          0x488b10	                    mov rdx, qword [rax]	       578	describe.c	FUNCTION_23	IF_5	IF_7	CALL_25
0x4001f4d	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       578	describe.c	FUNCTION_23	IF_5	IF_7	CALL_25
0x4001f54	      0xbe00000000	                              mov esi, 0	       578	describe.c	FUNCTION_23	IF_5	IF_7	CALL_25
0x4001f59	          0x4889c7	                            mov rdi, rax	       578	describe.c	FUNCTION_23	IF_5	IF_7	CALL_25
0x4001f5c	      0xb800000000	                              mov eax, 0	       578	describe.c	FUNCTION_23	IF_5	IF_7	CALL_25
0x4001f61	      0xe800000000	                          call 0x4001f66	       578	describe.c	FUNCTION_23	IF_5	IF_7	CALL_25
0x4001f66	    0x48838518f3ff	           add qword [rbp - 0xce8], 0x10	       577	describe.c	FUNCTION_23	IF_5	IF_7	CALL_24
0x4001f6e	    0x4883bd18f3ff	              cmp qword [rbp - 0xce8], 0	       577	describe.c	FUNCTION_23	IF_5	IF_7	CALL_24
0x4001f76	            0x741f	                            je 0x4001f97	       577	describe.c	FUNCTION_23	IF_5	IF_7	CALL_24
0x4001f78	    0x488b05000000	            mov rax, qword [0x04001f7f] 	       577	describe.c	FUNCTION_23	IF_5	IF_7	CALL_24
0x4001f7f	    0x8b1500000000	            mov edx, dword [0x04001f85] 	       577	describe.c	FUNCTION_23	IF_5	IF_7	CALL_24
0x4001f85	            0x89d2	                            mov edx, edx	       577	describe.c	FUNCTION_23	IF_5	IF_7	CALL_24
0x4001f87	        0x48c1e204	                              shl rdx, 4	       577	describe.c	FUNCTION_23	IF_5	IF_7	CALL_24
0x4001f8b	          0x4801d0	                            add rax, rdx	       577	describe.c	FUNCTION_23	IF_5	IF_7	CALL_24
0x4001f8e	    0x483b8518f3ff	            cmp rax, qword [rbp - 0xce8]	       577	describe.c	FUNCTION_23	IF_5	IF_7	CALL_24
0x4001f95	            0x77ac	                            ja 0x4001f43	       577	describe.c	FUNCTION_23	IF_5	IF_7	CALL_24
0x4001f97	    0x83bdfcf2ffff	              cmp dword [rbp - 0xd04], 0	       580	describe.c	FUNCTION_23	IF_5	IF_8
0x4001f9e	            0x741b	                            je 0x4001fbb	       580	describe.c	FUNCTION_23	IF_5	IF_8
0x4001fa0	    0x488b95f0f2ff	            mov rdx, qword [rbp - 0xd10]	       581	describe.c	FUNCTION_23	IF_5	CALL_26
0x4001fa7	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       581	describe.c	FUNCTION_23	IF_5	CALL_26
0x4001fae	          0x4889d6	                            mov rsi, rdx	       581	describe.c	FUNCTION_23	IF_5	CALL_26
0x4001fb1	          0x4889c7	                            mov rdi, rax	       581	describe.c	FUNCTION_23	IF_5	CALL_26
0x4001fb4	      0xe800000000	                          call 0x4001fb9	       581	describe.c	FUNCTION_23	IF_5	CALL_26
0x4001fb9	            0xeb14	                           jmp 0x4001fcf	       581	describe.c	FUNCTION_23	IF_5	CALL_26
0x4001fbb	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       583	describe.c	FUNCTION_23	IF_5	CALL_27
0x4001fc2	      0xbe00000000	                              mov esi, 0	       583	describe.c	FUNCTION_23	IF_5	CALL_27
0x4001fc7	          0x4889c7	                            mov rdi, rax	       583	describe.c	FUNCTION_23	IF_5	CALL_27
0x4001fca	      0xe800000000	                          call 0x4001fcf	       583	describe.c	FUNCTION_23	IF_5	CALL_27
0x4001fcf	    0x488b8d20f3ff	            mov rcx, qword [rbp - 0xce0]	       584	describe.c	FUNCTION_23	IF_5	CALL_28
0x4001fd6	    0x8b8528f3ffff	            mov eax, dword [rbp - 0xcd8]	       584	describe.c	FUNCTION_23	IF_5	CALL_28
0x4001fdc	    0x488b95e8f2ff	            mov rdx, qword [rbp - 0xd18]	       584	describe.c	FUNCTION_23	IF_5	CALL_28
0x4001fe3	          0x4889ce	                            mov rsi, rcx	       584	describe.c	FUNCTION_23	IF_5	CALL_28
0x4001fe6	            0x89c7	                            mov edi, eax	       584	describe.c	FUNCTION_23	IF_5	CALL_28
0x4001fe8	      0xe800000000	                          call 0x4001fed	       584	describe.c	FUNCTION_23	IF_5	CALL_28
0x4001fed	      0xe93a030000	                           jmp 0x400232c	       584	describe.c	FUNCTION_23	IF_5	CALL_28
0x4001ff2	      0xb900000000	                              mov ecx, 0	       587	describe.c	FUNCTION_23	CALL_29
0x4001ff7	      0xba00000000	                              mov edx, 0	       587	describe.c	FUNCTION_23	CALL_29
0x4001ffc	      0xbe00000000	                              mov esi, 0	       587	describe.c	FUNCTION_23	CALL_29
0x4002001	      0xbf00000000	                              mov edi, 0	       587	describe.c	FUNCTION_23	CALL_29
0x4002006	      0xe800000000	                          call 0x400200b	       587	describe.c	FUNCTION_23	CALL_29
0x400200b	      0xbe00000000	                              mov esi, 0	       588	describe.c	FUNCTION_23	CALL_30
0x4002010	      0xbf00000000	                              mov edi, 0	       588	describe.c	FUNCTION_23	CALL_30
0x4002015	      0xe800000000	                          call 0x400201a	       588	describe.c	FUNCTION_23	CALL_30
0x400201a	      0xbf00000000	                              mov edi, 0	       589	describe.c	FUNCTION_23	IF_9	CALL_31
0x400201f	      0xe849e1ffff	               call sym.hashmap_get_size	       589	describe.c	FUNCTION_23	IF_9	CALL_31
0x4002024	            0x85c0	                           test eax, eax	       589	describe.c	FUNCTION_23	IF_9	CALL_31
0x4002026	            0x7521	                           jne 0x4002049	       589	describe.c	FUNCTION_23	IF_9	CALL_31
0x4002028	    0x8b0500000000	            mov eax, dword [0x0400202e] 	       589	describe.c	FUNCTION_23	IF_9	CALL_31
0x400202e	            0x85c0	                           test eax, eax	       589	describe.c	FUNCTION_23	IF_9	CALL_31
0x4002030	            0x7517	                           jne 0x4002049	       589	describe.c	FUNCTION_23	IF_9	CALL_31
0x4002032	      0xbf00000000	                              mov edi, 0	       590	describe.c	FUNCTION_23	CALL_33
0x4002037	      0xe801e2ffff	                               call sym.	       590	describe.c	FUNCTION_23	CALL_33
0x400203c	          0x4889c7	                            mov rdi, rax	       590	describe.c	FUNCTION_23	CALL_33
0x400203f	      0xb800000000	                              mov eax, 0	       590	describe.c	FUNCTION_23	CALL_33
0x4002044	      0xe800000000	                          call 0x4002049	       590	describe.c	FUNCTION_23	CALL_33
0x4002049	    0x83bdfcf2ffff	              cmp dword [rbp - 0xd04], 0	       592	describe.c	FUNCTION_23	IF_10
0x4002050	     0xf854c020000	                           jne 0x40022a2	       592	describe.c	FUNCTION_23	IF_10
0x4002056	    0x488b05000000	            mov rax, qword [0x0400205d] 	       593	describe.c	FUNCTION_23	IF_10	IF_11
0x400205d	          0x4885c0	                           test rax, rax	       593	describe.c	FUNCTION_23	IF_10	IF_11
0x4002060	     0xf84dc000000	                            je 0x4002142	       593	describe.c	FUNCTION_23	IF_10	IF_11
0x4002066	    0x488d9520f3ff	                  lea rdx, [rbp - 0xce0]	       594	describe.c	FUNCTION_23	IF_10	IF_11
0x400206d	      0xb800000000	                              mov eax, 0	       594	describe.c	FUNCTION_23	IF_10	IF_11
0x4002072	      0xb90c000000	                            mov ecx, 0xc	       594	describe.c	FUNCTION_23	IF_10	IF_11
0x4002077	          0x4889d7	                            mov rdi, rdx	       594	describe.c	FUNCTION_23	IF_10	IF_11
0x400207a	          0xf348ab	              rep stosq qword [rdi], rax	       594	describe.c	FUNCTION_23	IF_10	IF_11
0x400207d	    0x48c78528f3ff	              mov qword [rbp - 0xcd8], 0	       594	describe.c	FUNCTION_23	IF_10	IF_11
0x4002088	    0x48c78538f3ff	              mov qword [rbp - 0xcc8], 0	       594	describe.c	FUNCTION_23	IF_10	IF_11
0x4002093	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       595	describe.c	FUNCTION_23	IF_10	IF_11	CALL_34
0x400209a	        0x4883c008	                              add rax, 8	       595	describe.c	FUNCTION_23	IF_10	IF_11	CALL_34
0x400209e	      0xbe00000000	                              mov esi, 0	       595	describe.c	FUNCTION_23	IF_10	IF_11	CALL_34
0x40020a3	          0x4889c7	                            mov rdi, rax	       595	describe.c	FUNCTION_23	IF_10	IF_11	CALL_34
0x40020a6	      0xe800000000	                          call 0x40020ab	       595	describe.c	FUNCTION_23	IF_10	IF_11	CALL_34
0x40020ab	     0xfb68568f3ff	           movzx eax, byte [rbp - 0xc98]	       596	describe.c	FUNCTION_23	IF_10	IF_11
0x40020b2	          0x83c808	                               or eax, 8	       596	describe.c	FUNCTION_23	IF_10	IF_11
0x40020b5	    0x888568f3ffff	              mov byte [rbp - 0xc98], al	       596	describe.c	FUNCTION_23	IF_10	IF_11
0x40020bb	     0xfb68568f3ff	           movzx eax, byte [rbp - 0xc98]	       597	describe.c	FUNCTION_23	IF_10	IF_11
0x40020c2	          0x83c801	                               or eax, 1	       597	describe.c	FUNCTION_23	IF_10	IF_11
0x40020c5	    0x888568f3ffff	              mov byte [rbp - 0xc98], al	       597	describe.c	FUNCTION_23	IF_10	IF_11
0x40020cb	     0xfb68568f3ff	           movzx eax, byte [rbp - 0xc98]	       598	describe.c	FUNCTION_23	IF_10	IF_11
0x40020d2	          0x83c802	                               or eax, 2	       598	describe.c	FUNCTION_23	IF_10	IF_11
0x40020d5	    0x888568f3ffff	              mov byte [rbp - 0xc98], al	       598	describe.c	FUNCTION_23	IF_10	IF_11
0x40020db	    0x488b05000000	            mov rax, qword [0x040020e2] 	       600	describe.c	FUNCTION_23	IF_10	IF_11	IF_12
0x40020e2	          0x4885c0	                           test rax, rax	       600	describe.c	FUNCTION_23	IF_10	IF_11	IF_12
0x40020e5	            0x750b	                           jne 0x40020f2	       600	describe.c	FUNCTION_23	IF_10	IF_11	IF_12
0x40020e7	    0x48c705000000	               mov qword [0x040020f2], 0	       601	describe.c	FUNCTION_23	IF_10	IF_11	IF_12
0x40020f2	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       603	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1	CALL_35
0x40020f9	          0x4889c7	                            mov rdi, rax	       603	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1	CALL_35
0x40020fc	      0xe800000000	                          call 0x4002101	       603	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1	CALL_35
0x4002101	            0x85c0	                           test eax, eax	       603	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1	CALL_35
0x4002103	            0x7407	                            je 0x400210c	       603	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1	CALL_35
0x4002105	          0x83f801	                              cmp eax, 1	       603	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1	CALL_35
0x4002108	            0x7412	                            je 0x400211c	       603	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1	CALL_35
0x400210a	            0xeb23	                           jmp 0x400212f	       603	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1	CALL_35
0x400210c	    0x48c705000000	               mov qword [0x04002117], 0	       605	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1
0x4002117	      0xe972010000	                           jmp 0x400228e	       606	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1
0x400211c	    0x488b05000000	            mov rax, qword [0x04002123] 	       608	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1
0x4002123	    0x488905000000	            mov qword [0x0400212a], rax 	       608	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1
0x400212a	      0xe95f010000	                           jmp 0x400228e	       609	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1
0x400212f	    0x488b05000000	            mov rax, qword [0x04002136] 	       612	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1
0x4002136	    0x488905000000	            mov qword [0x0400213d], rax 	       612	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1
0x400213d	      0xe94c010000	                           jmp 0x400228e	       612	describe.c	FUNCTION_23	IF_10	IF_11	SWITCH_1
0x4002142	    0x488b05000000	            mov rax, qword [0x04002149] 	       614	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13
0x4002149	          0x4885c0	                           test rax, rax	       614	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13
0x400214c	     0xf843c010000	                            je 0x400228e	       614	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13
0x4002152	    0x48c78520f3ff	              mov qword [rbp - 0xce0], 0	       617	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13
0x400215d	    0xc78528f3ffff	              mov dword [rbp - 0xcd8], 0	       617	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13
0x4002167	    0xc7852cf3ffff	              mov dword [rbp - 0xcd4], 0	       617	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13
0x4002171	      0xbe00000000	                              mov esi, 0	       620	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13
0x4002176	      0xbf00000000	                              mov edi, 0	       620	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13
0x400217b	      0xe800000000	                          call 0x4002180	       620	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13
0x4002180	    0x41b800000000	                              mov r8d, 0	       621	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_36
0x4002186	      0xb900000000	                              mov ecx, 0	       621	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_36
0x400218b	      0xba00000000	                              mov edx, 0	       621	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_36
0x4002190	      0xbe06000000	                              mov esi, 6	       621	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_36
0x4002195	      0xbf00000000	                              mov edi, 0	       621	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_36
0x400219a	      0xe800000000	                          call 0x400219f	       621	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_36
0x400219f	      0xbe00000000	                              mov esi, 0	       623	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_37
0x40021a4	      0xbf00000000	                              mov edi, 0	       623	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_37
0x40021a9	      0xe800000000	                          call 0x40021ae	       623	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_37
0x40021ae	    0x898510f3ffff	            mov dword [rbp - 0xcf0], eax	       623	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_37
0x40021b4	    0x83bd10f3ffff	              cmp dword [rbp - 0xcf0], 0	       624	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_14
0x40021bb	            0x780f	                            js 0x40021cc	       624	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_14
0x40021bd	      0xbe00000000	                              mov esi, 0	       625	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_38
0x40021c2	      0xbf00000000	                              mov edi, 0	       625	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_38
0x40021c7	      0xe800000000	                          call 0x40021cc	       625	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_38
0x40021cc	    0x488b95e8f2ff	            mov rdx, qword [rbp - 0xd18]	       627	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_39
0x40021d3	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       627	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_39
0x40021da	          0x4889d6	                            mov rsi, rdx	       627	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_39
0x40021dd	          0x4889c7	                            mov rdi, rax	       627	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_39
0x40021e0	      0xe800000000	                          call 0x40021e5	       627	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_39
0x40021e5	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       628	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_40
0x40021ec	      0xbe00000000	                              mov esi, 0	       628	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_40
0x40021f1	          0x4889c7	                            mov rdi, rax	       628	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_40
0x40021f4	      0xe800000000	                          call 0x40021f9	       628	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_40
0x40021f9	    0x488bb520f3ff	            mov rsi, qword [rbp - 0xce0]	       629	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_15	CALL_41
0x4002200	    0x8b8528f3ffff	            mov eax, dword [rbp - 0xcd8]	       629	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_15	CALL_41
0x4002206	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       629	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_15	CALL_41
0x400220d	      0xb900000000	                              mov ecx, 0	       629	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_15	CALL_41
0x4002212	            0x89c7	                            mov edi, eax	       629	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_15	CALL_41
0x4002214	      0xe800000000	                          call 0x4002219	       629	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_15	CALL_41
0x4002219	          0x83f801	                              cmp eax, 1	       629	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_15	CALL_41
0x400221c	            0x7419	                            je 0x4002237	       629	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_15	CALL_41
0x400221e	      0xba00000000	                              mov edx, 0	       630	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_15
0x4002223	      0xbe76020000	                          mov esi, 0x276	       630	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_15
0x4002228	      0xbf00000000	                              mov edi, 0	       630	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_15
0x400222d	      0xb800000000	                              mov eax, 0	       630	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_15
0x4002232	      0xe800000000	                          call 0x4002237	       630	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_15
0x4002237	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       631	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_42
0x400223e	      0xbe00000000	                              mov esi, 0	       631	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_42
0x4002243	          0x4889c7	                            mov rdi, rax	       631	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_42
0x4002246	      0xe800000000	                          call 0x400224b	       631	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_42
0x400224b	    0x898514f3ffff	            mov dword [rbp - 0xcec], eax	       631	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	CALL_42
0x4002251	    0x8b8514f3ffff	            mov eax, dword [rbp - 0xcec]	       633	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_16	CALL_43
0x4002257	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       633	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_16	CALL_43
0x400225e	    0x4881c2f80400	                          add rdx, 0x4f8	       633	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_16	CALL_43
0x4002265	            0x89c6	                            mov esi, eax	       633	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_16	CALL_43
0x4002267	          0x4889d7	                            mov rdi, rdx	       633	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_16	CALL_43
0x400226a	      0xe800000000	                          call 0x400226f	       633	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_16	CALL_43
0x400226f	            0x85c0	                           test eax, eax	       633	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_16	CALL_43
0x4002271	            0x750d	                           jne 0x4002280	       633	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_16	CALL_43
0x4002273	    0x48c705000000	               mov qword [0x0400227e], 0	       634	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_16
0x400227e	            0xeb0e	                           jmp 0x400228e	       634	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	IF_16
0x4002280	    0x488b05000000	            mov rax, qword [0x04002287] 	       636	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	ELSE_4
0x4002287	    0x488905000000	            mov qword [0x0400228e], rax 	       636	describe.c	FUNCTION_23	IF_10	ELSE_3	IF_13	ELSE_4
0x400228e	      0xbe01000000	                              mov esi, 1	       638	describe.c	FUNCTION_23	IF_10	CALL_44
0x4002293	      0xbf00000000	                              mov edi, 0	       638	describe.c	FUNCTION_23	IF_10	CALL_44
0x4002298	      0xe881f5ffff	                       call sym.describe	       638	describe.c	FUNCTION_23	IF_10	CALL_44
0x400229d	      0xe985000000	                           jmp 0x4002327	       638	describe.c	FUNCTION_23	IF_10	CALL_44
0x40022a2	    0x488b05000000	            mov rax, qword [0x040022a9] 	       639	describe.c	FUNCTION_23	ELSE_5	IF_17
0x40022a9	          0x4885c0	                           test rax, rax	       639	describe.c	FUNCTION_23	ELSE_5	IF_17
0x40022ac	            0x7417	                            je 0x40022c5	       639	describe.c	FUNCTION_23	ELSE_5	IF_17
0x40022ae	      0xbf00000000	                              mov edi, 0	       640	describe.c	FUNCTION_23	ELSE_5	IF_17	CALL_46
0x40022b3	      0xe885dfffff	                               call sym.	       640	describe.c	FUNCTION_23	ELSE_5	IF_17	CALL_46
0x40022b8	          0x4889c7	                            mov rdi, rax	       640	describe.c	FUNCTION_23	ELSE_5	IF_17	CALL_46
0x40022bb	      0xb800000000	                              mov eax, 0	       640	describe.c	FUNCTION_23	ELSE_5	IF_17	CALL_46
0x40022c0	      0xe800000000	                          call 0x40022c5	       640	describe.c	FUNCTION_23	ELSE_5	IF_17	CALL_46
0x40022c5	    0x488b05000000	            mov rax, qword [0x040022cc] 	       641	describe.c	FUNCTION_23	ELSE_6	IF_18
0x40022cc	          0x4885c0	                           test rax, rax	       641	describe.c	FUNCTION_23	ELSE_6	IF_18
0x40022cf	            0x7443	                            je 0x4002314	       641	describe.c	FUNCTION_23	ELSE_6	IF_18
0x40022d1	      0xbf00000000	                              mov edi, 0	       642	describe.c	FUNCTION_23	ELSE_6	IF_18	CALL_48
0x40022d6	      0xe862dfffff	                               call sym.	       642	describe.c	FUNCTION_23	ELSE_6	IF_18	CALL_48
0x40022db	          0x4889c7	                            mov rdi, rax	       642	describe.c	FUNCTION_23	ELSE_6	IF_18	CALL_48
0x40022de	      0xb800000000	                              mov eax, 0	       642	describe.c	FUNCTION_23	ELSE_6	IF_18	CALL_48
0x40022e3	      0xe800000000	                          call 0x40022e8	       642	describe.c	FUNCTION_23	ELSE_6	IF_18	CALL_48
0x40022e8	    0x83bdfcf2ffff	              cmp dword [rbp - 0xd04], 0	       645	describe.c	FUNCTION_23	ELSE_7	CALL_49
0x40022ef	           0xf94c0	                                 sete al	       645	describe.c	FUNCTION_23	ELSE_7	CALL_49
0x40022f2	           0xfb6d0	                           movzx edx, al	       645	describe.c	FUNCTION_23	ELSE_7	CALL_49
0x40022f5	    0x488b85f0f2ff	            mov rax, qword [rbp - 0xd10]	       645	describe.c	FUNCTION_23	ELSE_7	CALL_49
0x40022fc	        0x488d4808	                      lea rcx, [rax + 8]	       645	describe.c	FUNCTION_23	ELSE_7	CALL_49
0x4002300	    0x48898df0f2ff	            mov qword [rbp - 0xd10], rcx	       645	describe.c	FUNCTION_23	ELSE_7	CALL_49
0x4002307	          0x488b00	                    mov rax, qword [rax]	       645	describe.c	FUNCTION_23	ELSE_7	CALL_49
0x400230a	            0x89d6	                            mov esi, edx	       645	describe.c	FUNCTION_23	ELSE_7	CALL_49
0x400230c	          0x4889c7	                            mov rdi, rax	       645	describe.c	FUNCTION_23	ELSE_7	CALL_49
0x400230f	      0xe80af5ffff	                       call sym.describe	       645	describe.c	FUNCTION_23	ELSE_7	CALL_49
0x4002314	    0x8b85fcf2ffff	            mov eax, dword [rbp - 0xd04]	       644	describe.c	FUNCTION_23	ELSE_7	WHILE_1
0x400231a	          0x8d50ff	                      lea edx, [rax - 1]	       644	describe.c	FUNCTION_23	ELSE_7	WHILE_1
0x400231d	    0x8995fcf2ffff	            mov dword [rbp - 0xd04], edx	       644	describe.c	FUNCTION_23	ELSE_7	WHILE_1
0x4002323	            0x85c0	                           test eax, eax	       644	describe.c	FUNCTION_23	ELSE_7	WHILE_1
0x4002325	            0x7fc1	                            jg 0x40022e8	       644	describe.c	FUNCTION_23	ELSE_7	WHILE_1
0x4002327	      0xb800000000	                              mov eax, 0	       647	describe.c	FUNCTION_23
0x400232c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       648	describe.c	FUNCTION_23
0x4002330	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       648	describe.c	FUNCTION_23
0x4002339	            0x7405	                            je 0x4002340	       648	describe.c	FUNCTION_23
0x400233b	      0xe800000000	                          call 0x4002340	       648	describe.c	FUNCTION_23
0x4002340	              0xc9	                                   leave	       648	describe.c	FUNCTION_23
0x4002341	              0xc3	                                     ret	       648	describe.c	FUNCTION_23
oidcmp	DO,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0:functions,0:FOR,0	12
0x4000293	              0x55	                                push rbp	       979	cache.h	FUNCTION_60
0x4000294	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_60
0x4000297	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_60
0x400029b	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_60
0x400029f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_60
0x40002a3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_60	CALL_1
0x40002a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_60	CALL_1
0x40002ab	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_60	CALL_1
0x40002ae	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_60	CALL_1
0x40002b1	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_60	CALL_1
0x40002b6	              0xc9	                                   leave	       981	cache.h	FUNCTION_60
0x40002b7	              0xc3	                                     ret	       981	cache.h	FUNCTION_60
hashmap_iter_first	DO,0:SWITCH,0:ELSE,0:CALL,2:IF,0:WHILE,0:functions,0:FOR,0	15
0x400020c	              0x55	                                push rbp	       376	hashmap.h	FUNCTION_5
0x400020d	          0x4889e5	                            mov rbp, rsp	       376	hashmap.h	FUNCTION_5
0x4000210	        0x4883ec10	                           sub rsp, 0x10	       376	hashmap.h	FUNCTION_5
0x4000214	        0x48897df8	                mov qword [rbp - 8], rdi	       376	hashmap.h	FUNCTION_5
0x4000218	        0x488975f0	             mov qword [rbp - 0x10], rsi	       376	hashmap.h	FUNCTION_5
0x400021c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       377	hashmap.h	FUNCTION_5	CALL_1
0x4000220	        0x488b45f8	                mov rax, qword [rbp - 8]	       377	hashmap.h	FUNCTION_5	CALL_1
0x4000224	          0x4889d6	                            mov rsi, rdx	       377	hashmap.h	FUNCTION_5	CALL_1
0x4000227	          0x4889c7	                            mov rdi, rax	       377	hashmap.h	FUNCTION_5	CALL_1
0x400022a	      0xe800000000	                          call 0x400022f	       377	hashmap.h	FUNCTION_5	CALL_1
0x400022f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       378	hashmap.h	FUNCTION_5	CALL_2
0x4000233	          0x4889c7	                            mov rdi, rax	       378	hashmap.h	FUNCTION_5	CALL_2
0x4000236	      0xe800000000	                          call 0x400023b	       378	hashmap.h	FUNCTION_5	CALL_2
0x400023b	              0xc9	                                   leave	       379	hashmap.h	FUNCTION_5
0x400023c	              0xc3	                                     ret	       379	hashmap.h	FUNCTION_5
describe_blob	DO,0:SWITCH,0:ELSE,0:CALL,7:IF,2:WHILE,0:functions,0:FOR,0	78
0x400168f	              0x55	                                push rbp	       470	describe.c	FUNCTION_21
0x4001690	          0x4889e5	                            mov rbp, rsp	       470	describe.c	FUNCTION_21
0x4001693	    0x4881ec200900	                          sub rsp, 0x920	       470	describe.c	FUNCTION_21
0x400169a	    0x4889bde8f6ff	            mov qword [rbp - 0x918], rdi	       470	describe.c	FUNCTION_21
0x40016a1	    0x64488b042528	                mov rax, qword fs:[0x28]	       470	describe.c	FUNCTION_21
0x40016aa	        0x488945f8	                mov qword [rbp - 8], rax	       470	describe.c	FUNCTION_21
0x40016ae	            0x31c0	                            xor eax, eax	       470	describe.c	FUNCTION_21
0x40016b0	    0x48c785f0f6ff	              mov qword [rbp - 0x910], 0	       472	describe.c	FUNCTION_21
0x40016bb	    0xc785f8f6ffff	              mov dword [rbp - 0x908], 0	       472	describe.c	FUNCTION_21
0x40016c5	    0xc785fcf6ffff	              mov dword [rbp - 0x904], 0	       472	describe.c	FUNCTION_21
0x40016cf	    0x488b05000000	            mov rax, qword [0x040016d6] 	       473	describe.c	FUNCTION_21
0x40016d6	    0x48898500f7ff	            mov qword [rbp - 0x900], rax	       473	describe.c	FUNCTION_21
0x40016dd	    0x488b05000000	            mov rax, qword [0x040016e4] 	       473	describe.c	FUNCTION_21
0x40016e4	    0x48898508f7ff	            mov qword [rbp - 0x8f8], rax	       473	describe.c	FUNCTION_21
0x40016eb	    0x8b0500000000	            mov eax, dword [0x040016f1] 	       473	describe.c	FUNCTION_21
0x40016f1	    0x898510f7ffff	            mov dword [rbp - 0x8f0], eax	       473	describe.c	FUNCTION_21
0x40016f7	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       473	describe.c	FUNCTION_21
0x40016fb	    0x48898514f7ff	            mov qword [rbp - 0x8ec], rax	       473	describe.c	FUNCTION_21
0x4001702	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       473	describe.c	FUNCTION_21
0x4001706	    0x4889851cf7ff	            mov qword [rbp - 0x8e4], rax	       473	describe.c	FUNCTION_21
0x400170d	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       473	describe.c	FUNCTION_21
0x4001710	    0x898524f7ffff	            mov dword [rbp - 0x8dc], eax	       473	describe.c	FUNCTION_21
0x4001716	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	       473	describe.c	FUNCTION_21
0x400171d	    0x48898528f7ff	            mov qword [rbp - 0x8d8], rax	       473	describe.c	FUNCTION_21
0x4001724	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       473	describe.c	FUNCTION_21
0x400172b	    0x48898530f7ff	            mov qword [rbp - 0x8d0], rax	       473	describe.c	FUNCTION_21
0x4001732	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	       475	describe.c	FUNCTION_21	CALL_1
0x4001739	        0x4883ec08	                              sub rsp, 8	       475	describe.c	FUNCTION_21	CALL_1
0x400173d	            0x6a00	                                  push 0	       475	describe.c	FUNCTION_21	CALL_1
0x400173f	    0x41b900000000	                              mov r9d, 0	       475	describe.c	FUNCTION_21	CALL_1
0x4001745	    0x41b800000000	                              mov r8d, 0	       475	describe.c	FUNCTION_21	CALL_1
0x400174b	      0xb900000000	                              mov ecx, 0	       475	describe.c	FUNCTION_21	CALL_1
0x4001750	      0xba00000000	                              mov edx, 0	       475	describe.c	FUNCTION_21	CALL_1
0x4001755	      0xbe00000000	                              mov esi, 0	       475	describe.c	FUNCTION_21	CALL_1
0x400175a	          0x4889c7	                            mov rdi, rax	       475	describe.c	FUNCTION_21	CALL_1
0x400175d	      0xb800000000	                              mov eax, 0	       475	describe.c	FUNCTION_21	CALL_1
0x4001762	      0xe800000000	                          call 0x4001767	       475	describe.c	FUNCTION_21	CALL_1
0x4001767	        0x4883c410	                           add rsp, 0x10	       475	describe.c	FUNCTION_21	CALL_1
0x400176b	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       479	describe.c	FUNCTION_21	CALL_2
0x4001772	      0xbe00000000	                              mov esi, 0	       479	describe.c	FUNCTION_21	CALL_2
0x4001777	          0x4889c7	                            mov rdi, rax	       479	describe.c	FUNCTION_21	CALL_2
0x400177a	      0xe800000000	                          call 0x400177f	       479	describe.c	FUNCTION_21	CALL_2
0x400177f	    0x488bb5f0f6ff	            mov rsi, qword [rbp - 0x910]	       480	describe.c	FUNCTION_21	IF_1	CALL_3
0x4001786	    0x8b85f8f6ffff	            mov eax, dword [rbp - 0x908]	       480	describe.c	FUNCTION_21	IF_1	CALL_3
0x400178c	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       480	describe.c	FUNCTION_21	IF_1	CALL_3
0x4001793	      0xb900000000	                              mov ecx, 0	       480	describe.c	FUNCTION_21	IF_1	CALL_3
0x4001798	            0x89c7	                            mov edi, eax	       480	describe.c	FUNCTION_21	IF_1	CALL_3
0x400179a	      0xe800000000	                          call 0x400179f	       480	describe.c	FUNCTION_21	IF_1	CALL_3
0x400179f	          0x83f801	                              cmp eax, 1	       480	describe.c	FUNCTION_21	IF_1	CALL_3
0x40017a2	            0x7e19	                           jle 0x40017bd	       480	describe.c	FUNCTION_21	IF_1	CALL_3
0x40017a4	      0xba00000000	                              mov edx, 0	       481	describe.c	FUNCTION_21	IF_1
0x40017a9	      0xbee1010000	                          mov esi, 0x1e1	       481	describe.c	FUNCTION_21	IF_1
0x40017ae	      0xbf00000000	                              mov edi, 0	       481	describe.c	FUNCTION_21	IF_1
0x40017b3	      0xb800000000	                              mov eax, 0	       481	describe.c	FUNCTION_21	IF_1
0x40017b8	      0xe800000000	                          call 0x40017bd	       481	describe.c	FUNCTION_21	IF_1
0x40017bd	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       483	describe.c	FUNCTION_21	IF_2	CALL_4
0x40017c4	          0x4889c7	                            mov rdi, rax	       483	describe.c	FUNCTION_21	IF_2	CALL_4
0x40017c7	      0xe800000000	                          call 0x40017cc	       483	describe.c	FUNCTION_21	IF_2	CALL_4
0x40017cc	            0x85c0	                           test eax, eax	       483	describe.c	FUNCTION_21	IF_2	CALL_4
0x40017ce	            0x740f	                            je 0x40017df	       483	describe.c	FUNCTION_21	IF_2	CALL_4
0x40017d0	      0xbf00000000	                              mov edi, 0	       484	describe.c	FUNCTION_21	CALL_5
0x40017d5	      0xb800000000	                              mov eax, 0	       484	describe.c	FUNCTION_21	CALL_5
0x40017da	      0xe800000000	                          call 0x40017df	       484	describe.c	FUNCTION_21	CALL_5
0x40017df	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	       486	describe.c	FUNCTION_21	CALL_6
0x40017e6	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       486	describe.c	FUNCTION_21	CALL_6
0x40017ed	          0x4889d1	                            mov rcx, rdx	       486	describe.c	FUNCTION_21	CALL_6
0x40017f0	      0xba00000000	                              mov edx, 0	       486	describe.c	FUNCTION_21	CALL_6
0x40017f5	      0xbe00000000	                              mov esi, 0	       486	describe.c	FUNCTION_21	CALL_6
0x40017fa	          0x4889c7	                            mov rdi, rax	       486	describe.c	FUNCTION_21	CALL_6
0x40017fd	      0xe800000000	                          call 0x4001802	       486	describe.c	FUNCTION_21	CALL_6
0x4001802	      0xe800000000	                          call 0x4001807	       487	describe.c	FUNCTION_21	CALL_7
0x4001807	              0x90	                                     nop	       488	describe.c	FUNCTION_21
0x4001808	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	describe.c	FUNCTION_21
0x400180c	    0x644833042528	                xor rax, qword fs:[0x28]	       488	describe.c	FUNCTION_21
0x4001815	            0x7405	                            je 0x400181c	       488	describe.c	FUNCTION_21
0x4001817	      0xe800000000	                          call 0x400181c	       488	describe.c	FUNCTION_21
0x400181c	              0xc9	                                   leave	       488	describe.c	FUNCTION_21
0x400181d	              0xc3	                                     ret	       488	describe.c	FUNCTION_21
sane_qsort	DO,0:SWITCH,0:ELSE,0:CALL,0:IF,1:WHILE,0:functions,0:FOR,0	18
0x4000096	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_48
0x4000097	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_48
0x400009a	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_48
0x400009e	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_48
0x40000a2	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_48
0x40000a6	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_48
0x40000aa	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_48
0x40000ae	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_48	IF_1
0x40000b3	            0x7618	                           jbe 0x40000cd	      1048	git-compat-util.h	FUNCTION_48	IF_1
0x40000b5	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_48	IF_1
0x40000b9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_48	IF_1
0x40000bd	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_48	IF_1
0x40000c1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_48	IF_1
0x40000c5	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_48	IF_1
0x40000c8	      0xe800000000	                          call 0x40000cd	      1049	git-compat-util.h	FUNCTION_48	IF_1
0x40000cd	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_48
0x40000ce	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_48
0x40000cf	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_48
strbuf_addstr	DO,0:SWITCH,0:ELSE,0:CALL,2:IF,0:WHILE,0:functions,0:FOR,0	17
0x40000d0	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_87
0x40000d1	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_87
0x40000d4	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_87
0x40000d8	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_87
0x40000dc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_87
0x40000e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_87	CALL_2
0x40000e4	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_87	CALL_2
0x40000e7	      0xe800000000	                          call 0x40000ec	       279	strbuf.h	FUNCTION_87	CALL_2
0x40000ec	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_87	CALL_2
0x40000ef	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_87	CALL_2
0x40000f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_87	CALL_2
0x40000f7	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_87	CALL_2
0x40000fa	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_87	CALL_2
0x40000fd	      0xe800000000	                          call 0x4000102	       279	strbuf.h	FUNCTION_87	CALL_2
0x4000102	              0x90	                                     nop	       280	strbuf.h	FUNCTION_87
0x4000103	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_87
0x4000104	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_87
hashcpy	DO,0:SWITCH,0:ELSE,0:CALL,1:IF,0:WHILE,0:functions,0:FOR,0	14
0x40002b8	              0x55	                                push rbp	       994	cache.h	FUNCTION_63
0x40002b9	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_63
0x40002bc	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_63
0x40002c0	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_63
0x40002c4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_63
0x40002c8	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_63	CALL_1
0x40002cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_63	CALL_1
0x40002d0	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_63	CALL_1
0x40002d5	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_63	CALL_1
0x40002d8	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_63	CALL_1
0x40002db	      0xe800000000	                          call 0x40002e0	       995	cache.h	FUNCTION_63	CALL_1
0x40002e0	              0x90	                                     nop	       996	cache.h	FUNCTION_63
0x40002e1	              0xc9	                                   leave	       996	cache.h	FUNCTION_63
0x40002e2	              0xc3	                                     ret	       996	cache.h	FUNCTION_63
add_to_known_names	DO,0:SWITCH,0:ELSE,0:CALL,10:IF,2:WHILE,0:functions,0:FOR,0	88
0x40004b0	              0x55	                                push rbp	       113	describe.c	FUNCTION_12
0x40004b1	          0x4889e5	                            mov rbp, rsp	       113	describe.c	FUNCTION_12
0x40004b4	        0x4883ec40	                           sub rsp, 0x40	       113	describe.c	FUNCTION_12
0x40004b8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       113	describe.c	FUNCTION_12
0x40004bc	        0x488975d0	             mov qword [rbp - 0x30], rsi	       113	describe.c	FUNCTION_12
0x40004c0	          0x8955cc	             mov dword [rbp - 0x34], edx	       113	describe.c	FUNCTION_12
0x40004c3	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       113	describe.c	FUNCTION_12
0x40004c7	    0x64488b042528	                mov rax, qword fs:[0x28]	       113	describe.c	FUNCTION_12
0x40004d0	        0x488945f8	                mov qword [rbp - 8], rax	       113	describe.c	FUNCTION_12
0x40004d4	            0x31c0	                            xor eax, eax	       113	describe.c	FUNCTION_12
0x40004d6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       114	describe.c	FUNCTION_12	CALL_1
0x40004da	          0x4889c7	                            mov rdi, rax	       114	describe.c	FUNCTION_12	CALL_1
0x40004dd	      0xe898feffff	               call sym.find_commit_name	       114	describe.c	FUNCTION_12	CALL_1
0x40004e2	        0x488945f0	             mov qword [rbp - 0x10], rax	       114	describe.c	FUNCTION_12	CALL_1
0x40004e6	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       115	describe.c	FUNCTION_12
0x40004ee	        0x488d4de8	                   lea rcx, [rbp - 0x18]	       116	describe.c	FUNCTION_12	IF_1	CALL_2
0x40004f2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       116	describe.c	FUNCTION_12	IF_1	CALL_2
0x40004f6	          0x8b75cc	             mov esi, dword [rbp - 0x34]	       116	describe.c	FUNCTION_12	IF_1	CALL_2
0x40004f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       116	describe.c	FUNCTION_12	IF_1	CALL_2
0x40004fd	          0x4889c7	                            mov rdi, rax	       116	describe.c	FUNCTION_12	IF_1	CALL_2
0x4000500	      0xe8a8feffff	                   call sym.replace_name	       116	describe.c	FUNCTION_12	IF_1	CALL_2
0x4000505	            0x85c0	                           test eax, eax	       116	describe.c	FUNCTION_12	IF_1	CALL_2
0x4000507	     0xf84da000000	                            je 0x40005e7	       116	describe.c	FUNCTION_12	IF_1	CALL_2
0x400050d	      0x48837df000	               cmp qword [rbp - 0x10], 0	       117	describe.c	FUNCTION_12	IF_1	IF_2
0x4000512	            0x755e	                           jne 0x4000572	       117	describe.c	FUNCTION_12	IF_1	IF_2
0x4000514	      0xbf50000000	                           mov edi, 0x50	       118	describe.c	FUNCTION_12	IF_1	IF_2	CALL_3
0x4000519	      0xe800000000	                          call 0x400051e	       118	describe.c	FUNCTION_12	IF_1	IF_2	CALL_3
0x400051e	        0x488945f0	             mov qword [rbp - 0x10], rax	       118	describe.c	FUNCTION_12	IF_1	IF_2	CALL_3
0x4000522	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       119	describe.c	FUNCTION_12	IF_1	IF_2	CALL_4
0x4000526	        0x488d5010	                   lea rdx, [rax + 0x10]	       119	describe.c	FUNCTION_12	IF_1	IF_2	CALL_4
0x400052a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       119	describe.c	FUNCTION_12	IF_1	IF_2	CALL_4
0x400052e	          0x4889c6	                            mov rsi, rax	       119	describe.c	FUNCTION_12	IF_1	IF_2	CALL_4
0x4000531	          0x4889d7	                            mov rdi, rdx	       119	describe.c	FUNCTION_12	IF_1	IF_2	CALL_4
0x4000534	      0xe8aafdffff	                         call sym.oidcpy	       119	describe.c	FUNCTION_12	IF_1	IF_2	CALL_4
0x4000539	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       120	describe.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x400053d	          0x4889c7	                            mov rdi, rax	       120	describe.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000540	      0xe8c0fbffff	                       call sym.sha1hash	       120	describe.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000545	            0x89c2	                            mov edx, eax	       120	describe.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000547	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       120	describe.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x400054b	            0x89d6	                            mov esi, edx	       120	describe.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x400054d	          0x4889c7	                            mov rdi, rax	       120	describe.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000550	      0xe8edfbffff	             call sym.hashmap_entry_init	       120	describe.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000555	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       121	describe.c	FUNCTION_12	IF_1	IF_2	CALL_7
0x4000559	          0x4889c6	                            mov rsi, rax	       121	describe.c	FUNCTION_12	IF_1	IF_2	CALL_7
0x400055c	      0xbf00000000	                              mov edi, 0	       121	describe.c	FUNCTION_12	IF_1	IF_2	CALL_7
0x4000561	      0xe800000000	                          call 0x4000566	       121	describe.c	FUNCTION_12	IF_1	IF_2	CALL_7
0x4000566	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       122	describe.c	FUNCTION_12	IF_1	IF_2
0x400056a	    0x48c740480000	               mov qword [rax + 0x48], 0	       122	describe.c	FUNCTION_12	IF_1	IF_2
0x4000572	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       124	describe.c	FUNCTION_12	IF_1
0x4000576	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       124	describe.c	FUNCTION_12	IF_1
0x400057a	        0x48895028	             mov qword [rax + 0x28], rdx	       124	describe.c	FUNCTION_12	IF_1
0x400057e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       125	describe.c	FUNCTION_12	IF_1
0x4000581	          0x83e003	                              and eax, 3	       125	describe.c	FUNCTION_12	IF_1
0x4000584	            0x89c2	                            mov edx, eax	       125	describe.c	FUNCTION_12	IF_1
0x4000586	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       125	describe.c	FUNCTION_12	IF_1
0x400058a	            0x89d1	                            mov ecx, edx	       125	describe.c	FUNCTION_12	IF_1
0x400058c	          0x83e103	                              and ecx, 3	       125	describe.c	FUNCTION_12	IF_1
0x400058f	         0xfb65030	           movzx edx, byte [rax + 0x30] 	       125	describe.c	FUNCTION_12	IF_1
0x4000593	          0x83e2fc	                     and edx, 0xfffffffc	       125	describe.c	FUNCTION_12	IF_1
0x4000596	             0x9ca	                             or edx, ecx	       125	describe.c	FUNCTION_12	IF_1
0x4000598	          0x885030	               mov byte [rax + 0x30], dl	       125	describe.c	FUNCTION_12	IF_1
0x400059b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       126	describe.c	FUNCTION_12	IF_1
0x400059f	         0xfb65030	           movzx edx, byte [rax + 0x30] 	       126	describe.c	FUNCTION_12	IF_1
0x40005a3	          0x83e2fb	                     and edx, 0xfffffffb	       126	describe.c	FUNCTION_12	IF_1
0x40005a6	          0x885030	               mov byte [rax + 0x30], dl	       126	describe.c	FUNCTION_12	IF_1
0x40005a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       127	describe.c	FUNCTION_12	IF_1	CALL_8
0x40005ad	        0x488d5031	                   lea rdx, [rax + 0x31]	       127	describe.c	FUNCTION_12	IF_1	CALL_8
0x40005b1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	describe.c	FUNCTION_12	IF_1	CALL_8
0x40005b5	          0x4889c6	                            mov rsi, rax	       127	describe.c	FUNCTION_12	IF_1	CALL_8
0x40005b8	          0x4889d7	                            mov rdi, rdx	       127	describe.c	FUNCTION_12	IF_1	CALL_8
0x40005bb	      0xe823fdffff	                         call sym.oidcpy	       127	describe.c	FUNCTION_12	IF_1	CALL_8
0x40005c0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       128	describe.c	FUNCTION_12	IF_1	CALL_9
0x40005c4	        0x488b4048	            mov rax, qword [rax + 0x48] 	       128	describe.c	FUNCTION_12	IF_1	CALL_9
0x40005c8	          0x4889c7	                            mov rdi, rax	       128	describe.c	FUNCTION_12	IF_1	CALL_9
0x40005cb	      0xe800000000	                          call 0x40005d0	       128	describe.c	FUNCTION_12	IF_1	CALL_9
0x40005d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       129	describe.c	FUNCTION_12	IF_1	CALL_10
0x40005d4	          0x4889c7	                            mov rdi, rax	       129	describe.c	FUNCTION_12	IF_1	CALL_10
0x40005d7	      0xe800000000	                          call 0x40005dc	       129	describe.c	FUNCTION_12	IF_1	CALL_10
0x40005dc	          0x4889c2	                            mov rdx, rax	       129	describe.c	FUNCTION_12	IF_1	CALL_10
0x40005df	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       129	describe.c	FUNCTION_12	IF_1	CALL_10
0x40005e3	        0x48895048	             mov qword [rax + 0x48], rdx	       129	describe.c	FUNCTION_12	IF_1	CALL_10
0x40005e7	              0x90	                                     nop	       131	describe.c	FUNCTION_12
0x40005e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	describe.c	FUNCTION_12
0x40005ec	    0x644833042528	                xor rax, qword fs:[0x28]	       131	describe.c	FUNCTION_12
0x40005f5	            0x7405	                            je 0x40005fc	       131	describe.c	FUNCTION_12
0x40005f7	      0xe800000000	                          call 0x40005fc	       131	describe.c	FUNCTION_12
0x40005fc	              0xc9	                                   leave	       131	describe.c	FUNCTION_12
0x40005fd	              0xc3	                                     ret	       131	describe.c	FUNCTION_12
append_name	DO,0:SWITCH,0:ELSE,1:CALL,12:IF,7:WHILE,0:functions,0:FOR,0	127
0x4000a42	              0x55	                                push rbp	       263	describe.c	FUNCTION_16
0x4000a43	          0x4889e5	                            mov rbp, rsp	       263	describe.c	FUNCTION_16
0x4000a46	            0x4154	                                push r12	       263	describe.c	FUNCTION_16
0x4000a48	              0x53	                                push rbx	       263	describe.c	FUNCTION_16
0x4000a49	        0x4883ec10	                           sub rsp, 0x10	       263	describe.c	FUNCTION_16
0x4000a4d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       263	describe.c	FUNCTION_16
0x4000a51	        0x488975e0	             mov qword [rbp - 0x20], rsi	       263	describe.c	FUNCTION_16
0x4000a55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       264	describe.c	FUNCTION_16	IF_1
0x4000a59	         0xfb64030	           movzx eax, byte [rax + 0x30] 	       264	describe.c	FUNCTION_16	IF_1
0x4000a5d	          0x83e003	                              and eax, 3	       264	describe.c	FUNCTION_16	IF_1
0x4000a60	            0x3c02	                               cmp al, 2	       264	describe.c	FUNCTION_16	IF_1
0x4000a62	            0x756b	                           jne 0x4000acf	       264	describe.c	FUNCTION_16	IF_1
0x4000a64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       264	describe.c	FUNCTION_16	IF_1
0x4000a68	        0x488b4028	            mov rax, qword [rax + 0x28] 	       264	describe.c	FUNCTION_16	IF_1
0x4000a6c	          0x4885c0	                           test rax, rax	       264	describe.c	FUNCTION_16	IF_1
0x4000a6f	            0x755e	                           jne 0x4000acf	       264	describe.c	FUNCTION_16	IF_1
0x4000a71	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       265	describe.c	FUNCTION_16	IF_1	CALL_1
0x4000a75	        0x4883c031	                           add rax, 0x31	       265	describe.c	FUNCTION_16	IF_1	CALL_1
0x4000a79	          0x4889c7	                            mov rdi, rax	       265	describe.c	FUNCTION_16	IF_1	CALL_1
0x4000a7c	      0xe800000000	                          call 0x4000a81	       265	describe.c	FUNCTION_16	IF_1	CALL_1
0x4000a81	          0x4889c2	                            mov rdx, rax	       265	describe.c	FUNCTION_16	IF_1	CALL_1
0x4000a84	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       265	describe.c	FUNCTION_16	IF_1	CALL_1
0x4000a88	        0x48895028	             mov qword [rax + 0x28], rdx	       265	describe.c	FUNCTION_16	IF_1	CALL_1
0x4000a8c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       266	describe.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000a90	        0x488b4028	            mov rax, qword [rax + 0x28] 	       266	describe.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000a94	          0x4885c0	                           test rax, rax	       266	describe.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000a97	            0x7414	                            je 0x4000aad	       266	describe.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000a99	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       266	describe.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000a9d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       266	describe.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000aa1	          0x4889c7	                            mov rdi, rax	       266	describe.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000aa4	      0xe800000000	                          call 0x4000aa9	       266	describe.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000aa9	            0x85c0	                           test eax, eax	       266	describe.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000aab	            0x7422	                            je 0x4000acf	       266	describe.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000aad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       267	describe.c	FUNCTION_16	IF_1	CALL_4
0x4000ab1	        0x488b5848	            mov rbx, qword [rax + 0x48] 	       267	describe.c	FUNCTION_16	IF_1	CALL_4
0x4000ab5	      0xbf00000000	                              mov edi, 0	       267	describe.c	FUNCTION_16	IF_1	CALL_4
0x4000aba	      0xe87ef7ffff	                               call sym.	       267	describe.c	FUNCTION_16	IF_1	CALL_4
0x4000abf	          0x4889de	                            mov rsi, rbx	       267	describe.c	FUNCTION_16	IF_1	CALL_4
0x4000ac2	          0x4889c7	                            mov rdi, rax	       267	describe.c	FUNCTION_16	IF_1	CALL_4
0x4000ac5	      0xb800000000	                              mov eax, 0	       267	describe.c	FUNCTION_16	IF_1	CALL_4
0x4000aca	      0xe800000000	                          call 0x4000acf	       267	describe.c	FUNCTION_16	IF_1	CALL_4
0x4000acf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       269	describe.c	FUNCTION_16	IF_3
0x4000ad3	        0x488b4028	            mov rax, qword [rax + 0x28] 	       269	describe.c	FUNCTION_16	IF_3
0x4000ad7	          0x4885c0	                           test rax, rax	       269	describe.c	FUNCTION_16	IF_3
0x4000ada	     0xf84c0000000	                            je 0x4000ba0	       269	describe.c	FUNCTION_16	IF_3
0x4000ae0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       269	describe.c	FUNCTION_16	IF_3
0x4000ae4	         0xfb64030	           movzx eax, byte [rax + 0x30] 	       269	describe.c	FUNCTION_16	IF_3
0x4000ae8	          0x83e004	                              and eax, 4	       269	describe.c	FUNCTION_16	IF_3
0x4000aeb	            0x84c0	                             test al, al	       269	describe.c	FUNCTION_16	IF_3
0x4000aed	     0xf85ad000000	                           jne 0x4000ba0	       269	describe.c	FUNCTION_16	IF_3
0x4000af3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       270	describe.c	FUNCTION_16	IF_3	IF_4
0x4000af7	        0x488b4028	            mov rax, qword [rax + 0x28] 	       270	describe.c	FUNCTION_16	IF_3	IF_4
0x4000afb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       270	describe.c	FUNCTION_16	IF_3	IF_4
0x4000aff	          0x4885c0	                           test rax, rax	       270	describe.c	FUNCTION_16	IF_3	IF_4
0x4000b02	            0x7522	                           jne 0x4000b26	       270	describe.c	FUNCTION_16	IF_3	IF_4
0x4000b04	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       271	describe.c	FUNCTION_16	IF_3	CALL_6
0x4000b08	        0x488b5848	            mov rbx, qword [rax + 0x48] 	       271	describe.c	FUNCTION_16	IF_3	CALL_6
0x4000b0c	      0xbf00000000	                              mov edi, 0	       271	describe.c	FUNCTION_16	IF_3	CALL_6
0x4000b11	      0xe827f7ffff	                               call sym.	       271	describe.c	FUNCTION_16	IF_3	CALL_6
0x4000b16	          0x4889de	                            mov rsi, rbx	       271	describe.c	FUNCTION_16	IF_3	CALL_6
0x4000b19	          0x4889c7	                            mov rdi, rax	       271	describe.c	FUNCTION_16	IF_3	CALL_6
0x4000b1c	      0xb800000000	                              mov eax, 0	       271	describe.c	FUNCTION_16	IF_3	CALL_6
0x4000b21	      0xe800000000	                          call 0x4000b26	       271	describe.c	FUNCTION_16	IF_3	CALL_6
0x4000b26	    0x8b0500000000	            mov eax, dword [0x04000b2c] 	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b2c	            0x85c0	                           test eax, eax	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b2e	            0x740e	                            je 0x4000b3e	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b30	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b34	        0x488b4048	            mov rax, qword [rax + 0x48] 	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b38	        0x4883c005	                              add rax, 5	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b3c	            0xeb08	                           jmp 0x4000b46	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b42	        0x488b4048	            mov rax, qword [rax + 0x48] 	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b46	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b4a	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b4e	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b52	          0x4889c6	                            mov rsi, rax	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b55	          0x4889d7	                            mov rdi, rdx	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b58	      0xe800000000	                          call 0x4000b5d	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b5d	            0x85c0	                           test eax, eax	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b5f	            0x7431	                            je 0x4000b92	       272	describe.c	FUNCTION_16	IF_3	IF_5	CALL_7
0x4000b61	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       273	describe.c	FUNCTION_16	IF_3	CALL_9
0x4000b65	        0x4c8b6048	            mov r12, qword [rax + 0x48] 	       273	describe.c	FUNCTION_16	IF_3	CALL_9
0x4000b69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       273	describe.c	FUNCTION_16	IF_3	CALL_9
0x4000b6d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       273	describe.c	FUNCTION_16	IF_3	CALL_9
0x4000b71	        0x488b5820	            mov rbx, qword [rax + 0x20] 	       273	describe.c	FUNCTION_16	IF_3	CALL_9
0x4000b75	      0xbf00000000	                              mov edi, 0	       273	describe.c	FUNCTION_16	IF_3	CALL_9
0x4000b7a	      0xe8bef6ffff	                               call sym.	       273	describe.c	FUNCTION_16	IF_3	CALL_9
0x4000b7f	          0x4c89e2	                            mov rdx, r12	       273	describe.c	FUNCTION_16	IF_3	CALL_9
0x4000b82	          0x4889de	                            mov rsi, rbx	       273	describe.c	FUNCTION_16	IF_3	CALL_9
0x4000b85	          0x4889c7	                            mov rdi, rax	       273	describe.c	FUNCTION_16	IF_3	CALL_9
0x4000b88	      0xb800000000	                              mov eax, 0	       273	describe.c	FUNCTION_16	IF_3	CALL_9
0x4000b8d	      0xe800000000	                          call 0x4000b92	       273	describe.c	FUNCTION_16	IF_3	CALL_9
0x4000b92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       274	describe.c	FUNCTION_16	IF_3
0x4000b96	         0xfb65030	           movzx edx, byte [rax + 0x30] 	       274	describe.c	FUNCTION_16	IF_3
0x4000b9a	          0x83ca04	                               or edx, 4	       274	describe.c	FUNCTION_16	IF_3
0x4000b9d	          0x885030	               mov byte [rax + 0x30], dl	       274	describe.c	FUNCTION_16	IF_3
0x4000ba0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       277	describe.c	FUNCTION_16	IF_6
0x4000ba4	        0x488b4028	            mov rax, qword [rax + 0x28] 	       277	describe.c	FUNCTION_16	IF_6
0x4000ba8	          0x4885c0	                           test rax, rax	       277	describe.c	FUNCTION_16	IF_6
0x4000bab	            0x7438	                            je 0x4000be5	       277	describe.c	FUNCTION_16	IF_6
0x4000bad	    0x8b0500000000	            mov eax, dword [0x04000bb3] 	       278	describe.c	FUNCTION_16	IF_6	IF_7
0x4000bb3	            0x85c0	                           test eax, eax	       278	describe.c	FUNCTION_16	IF_6	IF_7
0x4000bb5	            0x7411	                            je 0x4000bc8	       278	describe.c	FUNCTION_16	IF_6	IF_7
0x4000bb7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       279	describe.c	FUNCTION_16	IF_6	CALL_10
0x4000bbb	      0xbe00000000	                              mov esi, 0	       279	describe.c	FUNCTION_16	IF_6	CALL_10
0x4000bc0	          0x4889c7	                            mov rdi, rax	       279	describe.c	FUNCTION_16	IF_6	CALL_10
0x4000bc3	      0xe808f5ffff	                  call sym.strbuf_addstr	       279	describe.c	FUNCTION_16	IF_6	CALL_10
0x4000bc8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       280	describe.c	FUNCTION_16	IF_6	CALL_11
0x4000bcc	        0x488b4028	            mov rax, qword [rax + 0x28] 	       280	describe.c	FUNCTION_16	IF_6	CALL_11
0x4000bd0	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       280	describe.c	FUNCTION_16	IF_6	CALL_11
0x4000bd4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       280	describe.c	FUNCTION_16	IF_6	CALL_11
0x4000bd8	          0x4889d6	                            mov rsi, rdx	       280	describe.c	FUNCTION_16	IF_6	CALL_11
0x4000bdb	          0x4889c7	                            mov rdi, rax	       280	describe.c	FUNCTION_16	IF_6	CALL_11
0x4000bde	      0xe8edf4ffff	                  call sym.strbuf_addstr	       280	describe.c	FUNCTION_16	IF_6	CALL_11
0x4000be3	            0xeb17	                           jmp 0x4000bfc	       284	describe.c	FUNCTION_16
0x4000be5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       282	describe.c	FUNCTION_16	ELSE_1	CALL_12
0x4000be9	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       282	describe.c	FUNCTION_16	ELSE_1	CALL_12
0x4000bed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       282	describe.c	FUNCTION_16	ELSE_1	CALL_12
0x4000bf1	          0x4889d6	                            mov rsi, rdx	       282	describe.c	FUNCTION_16	ELSE_1	CALL_12
0x4000bf4	          0x4889c7	                            mov rdi, rax	       282	describe.c	FUNCTION_16	ELSE_1	CALL_12
0x4000bf7	      0xe8d4f4ffff	                  call sym.strbuf_addstr	       282	describe.c	FUNCTION_16	ELSE_1	CALL_12
0x4000bfc	              0x90	                                     nop	       284	describe.c	FUNCTION_16
0x4000bfd	        0x4883c410	                           add rsp, 0x10	       284	describe.c	FUNCTION_16
0x4000c01	              0x5b	                                 pop rbx	       284	describe.c	FUNCTION_16
0x4000c02	            0x415c	                                 pop r12	       284	describe.c	FUNCTION_16
0x4000c04	              0x5d	                                 pop rbp	       284	describe.c	FUNCTION_16
0x4000c05	              0xc3	                                     ret	       284	describe.c	FUNCTION_16
hashmap_entry_init	DO,0:SWITCH,0:ELSE,0:CALL,0:IF,0:WHILE,0:functions,0:FOR,0	14
0x4000142	              0x55	                                push rbp	       246	hashmap.h	FUNCTION_2
0x4000143	          0x4889e5	                            mov rbp, rsp	       246	hashmap.h	FUNCTION_2
0x4000146	        0x48897de8	             mov qword [rbp - 0x18], rdi	       246	hashmap.h	FUNCTION_2
0x400014a	          0x8975e4	             mov dword [rbp - 0x1c], esi	       246	hashmap.h	FUNCTION_2
0x400014d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	hashmap.h	FUNCTION_2
0x4000151	        0x488945f8	                mov qword [rbp - 8], rax	       247	hashmap.h	FUNCTION_2
0x4000155	        0x488b45f8	                mov rax, qword [rbp - 8]	       248	hashmap.h	FUNCTION_2
0x4000159	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       248	hashmap.h	FUNCTION_2
0x400015c	          0x895008	                mov dword [rax + 8], edx	       248	hashmap.h	FUNCTION_2
0x400015f	        0x488b45f8	                mov rax, qword [rbp - 8]	       249	hashmap.h	FUNCTION_2
0x4000163	    0x48c700000000	                      mov qword [rax], 0	       249	hashmap.h	FUNCTION_2
0x400016a	              0x90	                                     nop	       250	hashmap.h	FUNCTION_2
0x400016b	              0x5d	                                 pop rbp	       250	hashmap.h	FUNCTION_2
0x400016c	              0xc3	                                     ret	       250	hashmap.h	FUNCTION_2
replace_name	DO,0:SWITCH,0:ELSE,0:CALL,4:IF,6:WHILE,0:functions,0:FOR,0	73
0x40003ad	              0x55	                                push rbp	        80	describe.c	FUNCTION_11
0x40003ae	          0x4889e5	                            mov rbp, rsp	        80	describe.c	FUNCTION_11
0x40003b1	        0x4883ec30	                           sub rsp, 0x30	        80	describe.c	FUNCTION_11
0x40003b5	        0x48897de8	             mov qword [rbp - 0x18], rdi	        80	describe.c	FUNCTION_11
0x40003b9	          0x8975e4	             mov dword [rbp - 0x1c], esi	        80	describe.c	FUNCTION_11
0x40003bc	        0x488955d8	             mov qword [rbp - 0x28], rdx	        80	describe.c	FUNCTION_11
0x40003c0	        0x48894dd0	             mov qword [rbp - 0x30], rcx	        80	describe.c	FUNCTION_11
0x40003c4	      0x48837de800	               cmp qword [rbp - 0x18], 0	        81	describe.c	FUNCTION_11	IF_1
0x40003c9	            0x7413	                            je 0x40003de	        81	describe.c	FUNCTION_11	IF_1
0x40003cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        81	describe.c	FUNCTION_11	IF_1
0x40003cf	         0xfb64030	           movzx eax, byte [rax + 0x30] 	        81	describe.c	FUNCTION_11	IF_1
0x40003d3	          0x83e003	                              and eax, 3	        81	describe.c	FUNCTION_11	IF_1
0x40003d6	           0xfb6c0	                           movzx eax, al	        81	describe.c	FUNCTION_11	IF_1
0x40003d9	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	        81	describe.c	FUNCTION_11	IF_1
0x40003dc	            0x7d0a	                           jge 0x40003e8	        81	describe.c	FUNCTION_11	IF_1
0x40003de	      0xb801000000	                              mov eax, 1	        82	describe.c	FUNCTION_11	IF_1
0x40003e3	      0xe9c6000000	                           jmp 0x40004ae	        82	describe.c	FUNCTION_11	IF_1
0x40003e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	describe.c	FUNCTION_11	IF_2
0x40003ec	         0xfb64030	           movzx eax, byte [rax + 0x30] 	        84	describe.c	FUNCTION_11	IF_2
0x40003f0	          0x83e003	                              and eax, 3	        84	describe.c	FUNCTION_11	IF_2
0x40003f3	            0x3c02	                               cmp al, 2	        84	describe.c	FUNCTION_11	IF_2
0x40003f5	     0xf85ae000000	                           jne 0x40004a9	        84	describe.c	FUNCTION_11	IF_2
0x40003fb	        0x837de402	               cmp dword [rbp - 0x1c], 2	        84	describe.c	FUNCTION_11	IF_2
0x40003ff	     0xf85a4000000	                           jne 0x40004a9	        84	describe.c	FUNCTION_11	IF_2
0x4000405	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        90	describe.c	FUNCTION_11	IF_2	IF_3
0x4000409	        0x488b4028	            mov rax, qword [rax + 0x28] 	        90	describe.c	FUNCTION_11	IF_2	IF_3
0x400040d	          0x4885c0	                           test rax, rax	        90	describe.c	FUNCTION_11	IF_2	IF_3
0x4000410	            0x753e	                           jne 0x4000450	        90	describe.c	FUNCTION_11	IF_2	IF_3
0x4000412	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        91	describe.c	FUNCTION_11	IF_2	IF_3	CALL_1
0x4000416	        0x4883c031	                           add rax, 0x31	        91	describe.c	FUNCTION_11	IF_2	IF_3	CALL_1
0x400041a	          0x4889c7	                            mov rdi, rax	        91	describe.c	FUNCTION_11	IF_2	IF_3	CALL_1
0x400041d	      0xe800000000	                          call 0x4000422	        91	describe.c	FUNCTION_11	IF_2	IF_3	CALL_1
0x4000422	        0x488945f8	                mov qword [rbp - 8], rax	        91	describe.c	FUNCTION_11	IF_2	IF_3	CALL_1
0x4000426	      0x48837df800	                  cmp qword [rbp - 8], 0	        92	describe.c	FUNCTION_11	IF_2	IF_3	IF_4	CALL_2
0x400042b	            0x7410	                            je 0x400043d	        92	describe.c	FUNCTION_11	IF_2	IF_3	IF_4	CALL_2
0x400042d	        0x488b45f8	                mov rax, qword [rbp - 8]	        92	describe.c	FUNCTION_11	IF_2	IF_3	IF_4	CALL_2
0x4000431	          0x4889c7	                            mov rdi, rax	        92	describe.c	FUNCTION_11	IF_2	IF_3	IF_4	CALL_2
0x4000434	      0xe800000000	                          call 0x4000439	        92	describe.c	FUNCTION_11	IF_2	IF_3	IF_4	CALL_2
0x4000439	            0x85c0	                           test eax, eax	        92	describe.c	FUNCTION_11	IF_2	IF_3	IF_4	CALL_2
0x400043b	            0x7407	                            je 0x4000444	        92	describe.c	FUNCTION_11	IF_2	IF_3	IF_4	CALL_2
0x400043d	      0xb801000000	                              mov eax, 1	        93	describe.c	FUNCTION_11	IF_2	IF_3	IF_4
0x4000442	            0xeb6a	                           jmp 0x40004ae	        93	describe.c	FUNCTION_11	IF_2	IF_3	IF_4
0x4000444	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        94	describe.c	FUNCTION_11	IF_2	IF_3
0x4000448	        0x488b55f8	                mov rdx, qword [rbp - 8]	        94	describe.c	FUNCTION_11	IF_2	IF_3
0x400044c	        0x48895028	             mov qword [rax + 0x28], rdx	        94	describe.c	FUNCTION_11	IF_2	IF_3
0x4000450	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        97	describe.c	FUNCTION_11	IF_2	CALL_3
0x4000454	          0x4889c7	                            mov rdi, rax	        97	describe.c	FUNCTION_11	IF_2	CALL_3
0x4000457	      0xe800000000	                          call 0x400045c	        97	describe.c	FUNCTION_11	IF_2	CALL_3
0x400045c	        0x488945f8	                mov qword [rbp - 8], rax	        97	describe.c	FUNCTION_11	IF_2	CALL_3
0x4000460	      0x48837df800	                  cmp qword [rbp - 8], 0	        98	describe.c	FUNCTION_11	IF_2	IF_5	CALL_4
0x4000465	            0x7410	                            je 0x4000477	        98	describe.c	FUNCTION_11	IF_2	IF_5	CALL_4
0x4000467	        0x488b45f8	                mov rax, qword [rbp - 8]	        98	describe.c	FUNCTION_11	IF_2	IF_5	CALL_4
0x400046b	          0x4889c7	                            mov rdi, rax	        98	describe.c	FUNCTION_11	IF_2	IF_5	CALL_4
0x400046e	      0xe800000000	                          call 0x4000473	        98	describe.c	FUNCTION_11	IF_2	IF_5	CALL_4
0x4000473	            0x85c0	                           test eax, eax	        98	describe.c	FUNCTION_11	IF_2	IF_5	CALL_4
0x4000475	            0x7407	                            je 0x400047e	        98	describe.c	FUNCTION_11	IF_2	IF_5	CALL_4
0x4000477	      0xb800000000	                              mov eax, 0	        99	describe.c	FUNCTION_11	IF_2	IF_5
0x400047c	            0xeb30	                           jmp 0x40004ae	        99	describe.c	FUNCTION_11	IF_2	IF_5
0x400047e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       100	describe.c	FUNCTION_11	IF_2
0x4000482	        0x488b55f8	                mov rdx, qword [rbp - 8]	       100	describe.c	FUNCTION_11	IF_2
0x4000486	          0x488910	                    mov qword [rax], rdx	       100	describe.c	FUNCTION_11	IF_2
0x4000489	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       102	describe.c	FUNCTION_11	IF_2	IF_6
0x400048d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       102	describe.c	FUNCTION_11	IF_2	IF_6
0x4000491	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       102	describe.c	FUNCTION_11	IF_2	IF_6
0x4000495	        0x488b45f8	                mov rax, qword [rbp - 8]	       102	describe.c	FUNCTION_11	IF_2	IF_6
0x4000499	        0x488b4028	            mov rax, qword [rax + 0x28] 	       102	describe.c	FUNCTION_11	IF_2	IF_6
0x400049d	          0x4839c2	                            cmp rdx, rax	       102	describe.c	FUNCTION_11	IF_2	IF_6
0x40004a0	            0x7307	                           jae 0x40004a9	       102	describe.c	FUNCTION_11	IF_2	IF_6
0x40004a2	      0xb801000000	                              mov eax, 1	       103	describe.c	FUNCTION_11	IF_2	IF_6
0x40004a7	            0xeb05	                           jmp 0x40004ae	       103	describe.c	FUNCTION_11	IF_2	IF_6
0x40004a9	      0xb800000000	                              mov eax, 0	       106	describe.c	FUNCTION_11
0x40004ae	              0xc9	                                   leave	       107	describe.c	FUNCTION_11
0x40004af	              0xc3	                                     ret	       107	describe.c	FUNCTION_11
describe_commit	DO,0:SWITCH,0:ELSE,3:CALL,43:IF,27:WHILE,2:functions,0:FOR,4	516
0x4000c4c	              0x55	                                push rbp	       292	describe.c	FUNCTION_18
0x4000c4d	          0x4889e5	                            mov rbp, rsp	       292	describe.c	FUNCTION_18
0x4000c50	            0x4155	                                push r13	       292	describe.c	FUNCTION_18
0x4000c52	            0x4154	                                push r12	       292	describe.c	FUNCTION_18
0x4000c54	              0x53	                                push rbx	       292	describe.c	FUNCTION_18
0x4000c55	    0x4881ec380300	                          sub rsp, 0x338	       292	describe.c	FUNCTION_18
0x4000c5c	    0x4889bdb8fcff	            mov qword [rbp - 0x348], rdi	       292	describe.c	FUNCTION_18
0x4000c63	    0x4889b5b0fcff	            mov qword [rbp - 0x350], rsi	       292	describe.c	FUNCTION_18
0x4000c6a	    0x64488b042528	                mov rax, qword fs:[0x28]	       292	describe.c	FUNCTION_18
0x4000c73	        0x488945d8	             mov qword [rbp - 0x28], rax	       292	describe.c	FUNCTION_18
0x4000c77	            0x31c0	                            xor eax, eax	       292	describe.c	FUNCTION_18
0x4000c79	    0x48c785d8fcff	              mov qword [rbp - 0x328], 0	       293	describe.c	FUNCTION_18
0x4000c84	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	       297	describe.c	FUNCTION_18
0x4000c8e	    0xc785c4fcffff	              mov dword [rbp - 0x33c], 0	       297	describe.c	FUNCTION_18
0x4000c98	    0x48c785e0fcff	              mov qword [rbp - 0x320], 0	       298	describe.c	FUNCTION_18
0x4000ca3	    0xc785ccfcffff	              mov dword [rbp - 0x334], 0	       299	describe.c	FUNCTION_18
0x4000cad	    0x488b85b8fcff	            mov rax, qword [rbp - 0x348]	       301	describe.c	FUNCTION_18	CALL_1
0x4000cb4	          0x4889c7	                            mov rdi, rax	       301	describe.c	FUNCTION_18	CALL_1
0x4000cb7	      0xe800000000	                          call 0x4000cbc	       301	describe.c	FUNCTION_18	CALL_1
0x4000cbc	    0x488985f8fcff	            mov qword [rbp - 0x308], rax	       301	describe.c	FUNCTION_18	CALL_1
0x4000cc3	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       303	describe.c	FUNCTION_18	CALL_2
0x4000cca	        0x4883c004	                              add rax, 4	       303	describe.c	FUNCTION_18	CALL_2
0x4000cce	          0x4889c7	                            mov rdi, rax	       303	describe.c	FUNCTION_18	CALL_2
0x4000cd1	      0xe8a4f6ffff	               call sym.find_commit_name	       303	describe.c	FUNCTION_18	CALL_2
0x4000cd6	    0x48898500fdff	            mov qword [rbp - 0x300], rax	       303	describe.c	FUNCTION_18	CALL_2
0x4000cdd	    0x4883bd00fdff	              cmp qword [rbp - 0x300], 0	       304	describe.c	FUNCTION_18	IF_1
0x4000ce5	     0xf84bb000000	                            je 0x4000da6	       304	describe.c	FUNCTION_18	IF_1
0x4000ceb	    0x8b0500000000	            mov eax, dword [0x04000cf1] 	       304	describe.c	FUNCTION_18	IF_1
0x4000cf1	            0x85c0	                           test eax, eax	       304	describe.c	FUNCTION_18	IF_1
0x4000cf3	            0x7520	                           jne 0x4000d15	       304	describe.c	FUNCTION_18	IF_1
0x4000cf5	    0x8b0500000000	            mov eax, dword [0x04000cfb] 	       304	describe.c	FUNCTION_18	IF_1
0x4000cfb	            0x85c0	                           test eax, eax	       304	describe.c	FUNCTION_18	IF_1
0x4000cfd	            0x7516	                           jne 0x4000d15	       304	describe.c	FUNCTION_18	IF_1
0x4000cff	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       304	describe.c	FUNCTION_18	IF_1
0x4000d06	         0xfb64030	           movzx eax, byte [rax + 0x30] 	       304	describe.c	FUNCTION_18	IF_1
0x4000d0a	          0x83e003	                              and eax, 3	       304	describe.c	FUNCTION_18	IF_1
0x4000d0d	            0x3c02	                               cmp al, 2	       304	describe.c	FUNCTION_18	IF_1
0x4000d0f	     0xf8591000000	                           jne 0x4000da6	       304	describe.c	FUNCTION_18	IF_1
0x4000d15	    0x488b95b0fcff	            mov rdx, qword [rbp - 0x350]	       308	describe.c	FUNCTION_18	IF_1	CALL_3
0x4000d1c	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       308	describe.c	FUNCTION_18	IF_1	CALL_3
0x4000d23	          0x4889d6	                            mov rsi, rdx	       308	describe.c	FUNCTION_18	IF_1	CALL_3
0x4000d26	          0x4889c7	                            mov rdi, rax	       308	describe.c	FUNCTION_18	IF_1	CALL_3
0x4000d29	      0xe814fdffff	                    call sym.append_name	       308	describe.c	FUNCTION_18	IF_1	CALL_3
0x4000d2e	    0x8b0500000000	            mov eax, dword [0x04000d34] 	       309	describe.c	FUNCTION_18	IF_1	IF_2
0x4000d34	            0x85c0	                           test eax, eax	       309	describe.c	FUNCTION_18	IF_1	IF_2
0x4000d36	            0x7440	                            je 0x4000d78	       309	describe.c	FUNCTION_18	IF_1	IF_2
0x4000d38	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       310	describe.c	FUNCTION_18	IF_1	CALL_4
0x4000d3f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       310	describe.c	FUNCTION_18	IF_1	CALL_4
0x4000d43	          0x4885c0	                           test rax, rax	       310	describe.c	FUNCTION_18	IF_1	CALL_4
0x4000d46	            0x7415	                            je 0x4000d5d	       310	describe.c	FUNCTION_18	IF_1	CALL_4
0x4000d48	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       310	describe.c	FUNCTION_18	IF_1	CALL_4
0x4000d4f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       310	describe.c	FUNCTION_18	IF_1	CALL_4
0x4000d53	        0x488b4018	            mov rax, qword [rax + 0x18] 	       310	describe.c	FUNCTION_18	IF_1	CALL_4
0x4000d57	        0x4883c004	                              add rax, 4	       310	describe.c	FUNCTION_18	IF_1	CALL_4
0x4000d5b	            0xeb07	                           jmp 0x4000d64	       310	describe.c	FUNCTION_18	IF_1	CALL_4
0x4000d5d	    0x488b85b8fcff	            mov rax, qword [rbp - 0x348]	       310	describe.c	FUNCTION_18	IF_1	CALL_4
0x4000d64	    0x488b95b0fcff	            mov rdx, qword [rbp - 0x350]	       310	describe.c	FUNCTION_18	IF_1	CALL_4
0x4000d6b	          0x4889c6	                            mov rsi, rax	       310	describe.c	FUNCTION_18	IF_1	CALL_4
0x4000d6e	      0xbf00000000	                              mov edi, 0	       310	describe.c	FUNCTION_18	IF_1	CALL_4
0x4000d73	      0xe88efeffff	                  call sym.append_suffix	       310	describe.c	FUNCTION_18	IF_1	CALL_4
0x4000d78	    0x488b05000000	            mov rax, qword [0x04000d7f] 	       311	describe.c	FUNCTION_18	IF_1	IF_3
0x4000d7f	          0x4885c0	                           test rax, rax	       311	describe.c	FUNCTION_18	IF_1	IF_3
0x4000d82	     0xf8402080000	                            je 0x400158a	       311	describe.c	FUNCTION_18	IF_1	IF_3
0x4000d88	    0x488b15000000	            mov rdx, qword [0x04000d8f] 	       312	describe.c	FUNCTION_18	IF_1	CALL_5
0x4000d8f	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	       312	describe.c	FUNCTION_18	IF_1	CALL_5
0x4000d96	          0x4889d6	                            mov rsi, rdx	       312	describe.c	FUNCTION_18	IF_1	CALL_5
0x4000d99	          0x4889c7	                            mov rdi, rax	       312	describe.c	FUNCTION_18	IF_1	CALL_5
0x4000d9c	      0xe82ff3ffff	                  call sym.strbuf_addstr	       312	describe.c	FUNCTION_18	IF_1	CALL_5
0x4000da1	      0xe9e4070000	                           jmp 0x400158a	       313	describe.c	FUNCTION_18	IF_1
0x4000da6	    0x8b0500000000	            mov eax, dword [0x04000dac] 	       316	describe.c	FUNCTION_18	IF_4
0x4000dac	            0x85c0	                           test eax, eax	       316	describe.c	FUNCTION_18	IF_4
0x4000dae	            0x7530	                           jne 0x4000de0	       316	describe.c	FUNCTION_18	IF_4
0x4000db0	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       317	describe.c	FUNCTION_18	CALL_8
0x4000db7	        0x4883c004	                              add rax, 4	       317	describe.c	FUNCTION_18	CALL_8
0x4000dbb	          0x4889c7	                            mov rdi, rax	       317	describe.c	FUNCTION_18	CALL_8
0x4000dbe	      0xe800000000	                          call 0x4000dc3	       317	describe.c	FUNCTION_18	CALL_8
0x4000dc3	          0x4889c3	                            mov rbx, rax	       317	describe.c	FUNCTION_18	CALL_8
0x4000dc6	      0xbf00000000	                              mov edi, 0	       317	describe.c	FUNCTION_18	CALL_8
0x4000dcb	      0xe86df4ffff	                               call sym.	       317	describe.c	FUNCTION_18	CALL_8
0x4000dd0	          0x4889de	                            mov rsi, rbx	       317	describe.c	FUNCTION_18	CALL_8
0x4000dd3	          0x4889c7	                            mov rdi, rax	       317	describe.c	FUNCTION_18	CALL_8
0x4000dd6	      0xb800000000	                              mov eax, 0	       317	describe.c	FUNCTION_18	CALL_8
0x4000ddb	      0xe800000000	                          call 0x4000de0	       317	describe.c	FUNCTION_18	CALL_8
0x4000de0	    0x8b0500000000	            mov eax, dword [0x04000de6] 	       318	describe.c	FUNCTION_18	IF_5
0x4000de6	            0x85c0	                           test eax, eax	       318	describe.c	FUNCTION_18	IF_5
0x4000de8	            0x7424	                            je 0x4000e0e	       318	describe.c	FUNCTION_18	IF_5
0x4000dea	      0xbf00000000	                              mov edi, 0	       319	describe.c	FUNCTION_18	CALL_10
0x4000def	      0xe849f4ffff	                               call sym.	       319	describe.c	FUNCTION_18	CALL_10
0x4000df4	          0x4889c2	                            mov rdx, rax	       319	describe.c	FUNCTION_18	CALL_10
0x4000df7	    0x488b05000000	            mov rax, qword [0x04000dfe] 	       319	describe.c	FUNCTION_18	CALL_10
0x4000dfe	          0x4889d6	                            mov rsi, rdx	       319	describe.c	FUNCTION_18	CALL_10
0x4000e01	          0x4889c7	                            mov rdi, rax	       319	describe.c	FUNCTION_18	CALL_10
0x4000e04	      0xb800000000	                              mov eax, 0	       319	describe.c	FUNCTION_18	CALL_10
0x4000e09	      0xe800000000	                          call 0x4000e0e	       319	describe.c	FUNCTION_18	CALL_10
0x4000e0e	    0x8b0500000000	            mov eax, dword [0x04000e14] 	       321	describe.c	FUNCTION_18	IF_6
0x4000e14	            0x85c0	                           test eax, eax	       321	describe.c	FUNCTION_18	IF_6
0x4000e16	     0xf8582000000	                           jne 0x4000e9e	       321	describe.c	FUNCTION_18	IF_6
0x4000e1c	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       324	describe.c	FUNCTION_18	IF_6	CALL_11
0x4000e23	          0x4889c6	                            mov rsi, rax	       324	describe.c	FUNCTION_18	IF_6	CALL_11
0x4000e26	      0xbf00000000	                              mov edi, 0	       324	describe.c	FUNCTION_18	IF_6	CALL_11
0x4000e2b	      0xe8dcf3ffff	             call sym.hashmap_iter_first	       324	describe.c	FUNCTION_18	IF_6	CALL_11
0x4000e30	    0x488985e8fcff	            mov qword [rbp - 0x318], rax	       324	describe.c	FUNCTION_18	IF_6	CALL_11
0x4000e37	            0xeb51	                           jmp 0x4000e8a	       325	describe.c	FUNCTION_18	IF_6	FOR_1	CALL_12
0x4000e39	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	       326	describe.c	FUNCTION_18	IF_6	FOR_1	CALL_13
0x4000e40	        0x4883c010	                           add rax, 0x10	       326	describe.c	FUNCTION_18	IF_6	FOR_1	CALL_13
0x4000e44	      0xbe01000000	                              mov esi, 1	       326	describe.c	FUNCTION_18	IF_6	FOR_1	CALL_13
0x4000e49	          0x4889c7	                            mov rdi, rax	       326	describe.c	FUNCTION_18	IF_6	FOR_1	CALL_13
0x4000e4c	      0xe800000000	                          call 0x4000e51	       326	describe.c	FUNCTION_18	IF_6	FOR_1	CALL_13
0x4000e51	    0x48898508fdff	            mov qword [rbp - 0x2f8], rax	       326	describe.c	FUNCTION_18	IF_6	FOR_1	CALL_13
0x4000e58	    0x4883bd08fdff	              cmp qword [rbp - 0x2f8], 0	       327	describe.c	FUNCTION_18	IF_6	FOR_1	IF_7
0x4000e60	            0x7412	                            je 0x4000e74	       327	describe.c	FUNCTION_18	IF_6	FOR_1	IF_7
0x4000e62	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	       328	describe.c	FUNCTION_18	IF_6	FOR_1	IF_7
0x4000e69	    0x488b95e8fcff	            mov rdx, qword [rbp - 0x318]	       328	describe.c	FUNCTION_18	IF_6	FOR_1	IF_7
0x4000e70	        0x48895018	             mov qword [rax + 0x18], rdx	       328	describe.c	FUNCTION_18	IF_6	FOR_1	IF_7
0x4000e74	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       325	describe.c	FUNCTION_18	IF_6	FOR_1	CALL_12
0x4000e7b	          0x4889c7	                            mov rdi, rax	       325	describe.c	FUNCTION_18	IF_6	FOR_1	CALL_12
0x4000e7e	      0xe800000000	                          call 0x4000e83	       325	describe.c	FUNCTION_18	IF_6	FOR_1	CALL_12
0x4000e83	    0x488985e8fcff	            mov qword [rbp - 0x318], rax	       325	describe.c	FUNCTION_18	IF_6	FOR_1	CALL_12
0x4000e8a	    0x4883bde8fcff	              cmp qword [rbp - 0x318], 0	       325	describe.c	FUNCTION_18	IF_6	FOR_1	CALL_12
0x4000e92	            0x75a5	                           jne 0x4000e39	       325	describe.c	FUNCTION_18	IF_6	FOR_1	CALL_12
0x4000e94	    0xc70500000000	               mov dword [0x04000e9e], 1	       330	describe.c	FUNCTION_18	IF_6
0x4000e9e	    0x48c78540fdff	              mov qword [rbp - 0x2c0], 0	       333	describe.c	FUNCTION_18
0x4000ea9	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       334	describe.c	FUNCTION_18
0x4000eb0	            0x8b10	                    mov edx, dword [rax]	       334	describe.c	FUNCTION_18
0x4000eb2	    0x81e20f000080	                     and edx, 0x8000000f	       334	describe.c	FUNCTION_18
0x4000eb8	          0x83ca10	                            or edx, 0x10	       334	describe.c	FUNCTION_18
0x4000ebb	            0x8910	                    mov dword [rax], edx	       334	describe.c	FUNCTION_18
0x4000ebd	    0x488d9540fdff	                  lea rdx, [rbp - 0x2c0]	       335	describe.c	FUNCTION_18	CALL_14
0x4000ec4	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       335	describe.c	FUNCTION_18	CALL_14
0x4000ecb	          0x4889d6	                            mov rsi, rdx	       335	describe.c	FUNCTION_18	CALL_14
0x4000ece	          0x4889c7	                            mov rdi, rax	       335	describe.c	FUNCTION_18	CALL_14
0x4000ed1	      0xe800000000	                          call 0x4000ed6	       335	describe.c	FUNCTION_18	CALL_14
0x4000ed6	      0xe937030000	                           jmp 0x4001212	       336	describe.c	FUNCTION_18	WHILE_1
0x4000edb	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       337	describe.c	FUNCTION_18	WHILE_1	CALL_15
0x4000ee2	          0x4889c7	                            mov rdi, rax	       337	describe.c	FUNCTION_18	WHILE_1	CALL_15
0x4000ee5	      0xe800000000	                          call 0x4000eea	       337	describe.c	FUNCTION_18	WHILE_1	CALL_15
0x4000eea	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	       337	describe.c	FUNCTION_18	WHILE_1	CALL_15
0x4000ef1	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       338	describe.c	FUNCTION_18	WHILE_1
0x4000ef8	        0x488b4030	            mov rax, qword [rax + 0x30] 	       338	describe.c	FUNCTION_18	WHILE_1
0x4000efc	    0x488985f0fcff	            mov qword [rbp - 0x310], rax	       338	describe.c	FUNCTION_18	WHILE_1
0x4000f03	    0x488385e0fcff	              add qword [rbp - 0x320], 1	       339	describe.c	FUNCTION_18	WHILE_1
0x4000f0b	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       340	describe.c	FUNCTION_18	WHILE_1
0x4000f12	        0x488b4018	            mov rax, qword [rax + 0x18] 	       340	describe.c	FUNCTION_18	WHILE_1
0x4000f16	    0x48898500fdff	            mov qword [rbp - 0x300], rax	       340	describe.c	FUNCTION_18	WHILE_1
0x4000f1d	    0x4883bd00fdff	              cmp qword [rbp - 0x300], 0	       341	describe.c	FUNCTION_18	WHILE_1	IF_8
0x4000f25	     0xf8439010000	                            je 0x4001064	       341	describe.c	FUNCTION_18	WHILE_1	IF_8
0x4000f2b	    0x8b0500000000	            mov eax, dword [0x04000f31] 	       342	describe.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x4000f31	            0x85c0	                           test eax, eax	       342	describe.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x4000f33	            0x752c	                           jne 0x4000f61	       342	describe.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x4000f35	    0x8b0500000000	            mov eax, dword [0x04000f3b] 	       342	describe.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x4000f3b	            0x85c0	                           test eax, eax	       342	describe.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x4000f3d	            0x7522	                           jne 0x4000f61	       342	describe.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x4000f3f	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       342	describe.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x4000f46	         0xfb64030	           movzx eax, byte [rax + 0x30] 	       342	describe.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x4000f4a	          0x83e003	                              and eax, 3	       342	describe.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x4000f4d	           0xfb6c0	                           movzx eax, al	       342	describe.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x4000f50	          0x83f801	                              cmp eax, 1	       342	describe.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x4000f53	            0x7f0c	                            jg 0x4000f61	       342	describe.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x4000f55	    0x8385ccfcffff	              add dword [rbp - 0x334], 1	       343	describe.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x4000f5c	      0xe903010000	                           jmp 0x4001064	       343	describe.c	FUNCTION_18	WHILE_1	IF_8	IF_9
0x4000f61	    0x8b0500000000	            mov eax, dword [0x04000f67] 	       344	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000f67	    0x3985c0fcffff	           cmp dword [rbp - 0x340], eax 	       344	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000f6d	     0xf83de000000	                           jae 0x4001051	       344	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000f73	    0x8b85c0fcffff	            mov eax, dword [rbp - 0x340]	       345	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000f79	          0x8d5001	                      lea edx, [rax + 1]	       345	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000f7c	    0x8995c0fcffff	            mov dword [rbp - 0x340], edx	       345	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000f82	    0x488d9560fdff	                  lea rdx, [rbp - 0x2a0]	       345	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000f89	            0x89c1	                            mov ecx, eax	       345	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000f8b	          0x4889c8	                            mov rax, rcx	       345	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000f8e	          0x4801c0	                            add rax, rax	       345	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000f91	          0x4801c8	                            add rax, rcx	       345	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000f94	        0x48c1e003	                              shl rax, 3	       345	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000f98	          0x4801d0	                            add rax, rdx	       345	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000f9b	    0x48898528fdff	            mov qword [rbp - 0x2d8], rax	       345	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fa2	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	       346	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fa9	    0x488b9500fdff	            mov rdx, qword [rbp - 0x300]	       346	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fb0	          0x488910	                    mov qword [rax], rdx	       346	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fb3	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       347	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fba	          0x83e801	                              sub eax, 1	       347	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fbd	            0x89c2	                            mov edx, eax	       347	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fbf	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	       347	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fc6	          0x895008	                mov dword [rax + 8], edx	       347	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fc9	    0x8b85c0fcffff	            mov eax, dword [rbp - 0x340]	       348	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fcf	      0xba01000000	                              mov edx, 1	       348	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fd4	            0x89c1	                            mov ecx, eax	       348	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fd6	            0xd3e2	                             shl edx, cl	       348	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fd8	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	       348	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fdf	          0x895010	             mov dword [rax + 0x10], edx	       348	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fe2	    0x8b95c0fcffff	            mov edx, dword [rbp - 0x340]	       349	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fe8	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	       349	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000fef	          0x89500c	              mov dword [rax + 0xc], edx	       349	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000ff2	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000ff9	            0x8b00	                    mov eax, dword [rax]	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000ffb	          0xc1e804	                              shr eax, 4	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4000ffe	      0x25ffffff07	                      and eax, 0x7ffffff	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4001003	            0x89c2	                            mov edx, eax	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4001005	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x400100c	          0x8b4010	            mov eax, dword [rax + 0x10] 	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x400100f	             0x9d0	                             or eax, edx	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4001011	      0x25ffffff07	                      and eax, 0x7ffffff	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4001016	            0x89c2	                            mov edx, eax	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4001018	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x400101f	    0x81e2ffffff07	                      and edx, 0x7ffffff	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4001025	            0x89d1	                            mov ecx, edx	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4001027	          0xc1e104	                              shl ecx, 4	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x400102a	            0x8b10	                    mov edx, dword [rax]	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x400102c	    0x81e20f000080	                     and edx, 0x8000000f	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4001032	             0x9ca	                             or edx, ecx	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4001034	            0x8910	                    mov dword [rax], edx	       350	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10
0x4001036	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       351	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x400103d	         0xfb64030	           movzx eax, byte [rax + 0x30] 	       351	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x4001041	          0x83e003	                              and eax, 3	       351	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x4001044	            0x3c02	                               cmp al, 2	       351	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x4001046	            0x751c	                           jne 0x4001064	       351	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x4001048	    0x8385c4fcffff	              add dword [rbp - 0x33c], 1	       352	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x400104f	            0xeb13	                           jmp 0x4001064	       352	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x4001051	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       355	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_2
0x4001058	    0x488985d8fcff	            mov qword [rbp - 0x328], rax	       355	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_2
0x400105f	      0xe9c1010000	                           jmp 0x4001225	       356	describe.c	FUNCTION_18	WHILE_1	IF_8	ELSE_2
0x4001064	    0xc785c8fcffff	              mov dword [rbp - 0x338], 0	       359	describe.c	FUNCTION_18	WHILE_1	FOR_2
0x400106e	            0xeb65	                           jmp 0x40010d5	       359	describe.c	FUNCTION_18	WHILE_1	FOR_2
0x4001070	    0x488d8d60fdff	                  lea rcx, [rbp - 0x2a0]	       360	describe.c	FUNCTION_18	WHILE_1	FOR_2
0x4001077	    0x8b95c8fcffff	            mov edx, dword [rbp - 0x338]	       360	describe.c	FUNCTION_18	WHILE_1	FOR_2
0x400107d	          0x4889d0	                            mov rax, rdx	       360	describe.c	FUNCTION_18	WHILE_1	FOR_2
0x4001080	          0x4801c0	                            add rax, rax	       360	describe.c	FUNCTION_18	WHILE_1	FOR_2
0x4001083	          0x4801d0	                            add rax, rdx	       360	describe.c	FUNCTION_18	WHILE_1	FOR_2
0x4001086	        0x48c1e003	                              shl rax, 3	       360	describe.c	FUNCTION_18	WHILE_1	FOR_2
0x400108a	          0x4801c8	                            add rax, rcx	       360	describe.c	FUNCTION_18	WHILE_1	FOR_2
0x400108d	    0x48898518fdff	            mov qword [rbp - 0x2e8], rax	       360	describe.c	FUNCTION_18	WHILE_1	FOR_2
0x4001094	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       361	describe.c	FUNCTION_18	WHILE_1	FOR_2	IF_12
0x400109b	            0x8b00	                    mov eax, dword [rax]	       361	describe.c	FUNCTION_18	WHILE_1	FOR_2	IF_12
0x400109d	          0xc1e804	                              shr eax, 4	       361	describe.c	FUNCTION_18	WHILE_1	FOR_2	IF_12
0x40010a0	      0x25ffffff07	                      and eax, 0x7ffffff	       361	describe.c	FUNCTION_18	WHILE_1	FOR_2	IF_12
0x40010a5	            0x89c2	                            mov edx, eax	       361	describe.c	FUNCTION_18	WHILE_1	FOR_2	IF_12
0x40010a7	    0x488b8518fdff	            mov rax, qword [rbp - 0x2e8]	       361	describe.c	FUNCTION_18	WHILE_1	FOR_2	IF_12
0x40010ae	          0x8b4010	            mov eax, dword [rax + 0x10] 	       361	describe.c	FUNCTION_18	WHILE_1	FOR_2	IF_12
0x40010b1	            0x21d0	                            and eax, edx	       361	describe.c	FUNCTION_18	WHILE_1	FOR_2	IF_12
0x40010b3	            0x85c0	                           test eax, eax	       361	describe.c	FUNCTION_18	WHILE_1	FOR_2	IF_12
0x40010b5	            0x7517	                           jne 0x40010ce	       361	describe.c	FUNCTION_18	WHILE_1	FOR_2	IF_12
0x40010b7	    0x488b8518fdff	            mov rax, qword [rbp - 0x2e8]	       362	describe.c	FUNCTION_18	WHILE_1	FOR_2	IF_12
0x40010be	          0x8b4008	                mov eax, dword [rax + 8]	       362	describe.c	FUNCTION_18	WHILE_1	FOR_2	IF_12
0x40010c1	          0x8d5001	                      lea edx, [rax + 1]	       362	describe.c	FUNCTION_18	WHILE_1	FOR_2	IF_12
0x40010c4	    0x488b8518fdff	            mov rax, qword [rbp - 0x2e8]	       362	describe.c	FUNCTION_18	WHILE_1	FOR_2	IF_12
0x40010cb	          0x895008	                mov dword [rax + 8], edx	       362	describe.c	FUNCTION_18	WHILE_1	FOR_2	IF_12
0x40010ce	    0x8385c8fcffff	              add dword [rbp - 0x338], 1	       359	describe.c	FUNCTION_18	WHILE_1	FOR_2
0x40010d5	    0x8b85c8fcffff	            mov eax, dword [rbp - 0x338]	       359	describe.c	FUNCTION_18	WHILE_1	FOR_2
0x40010db	    0x3b85c0fcffff	            cmp eax, dword [rbp - 0x340]	       359	describe.c	FUNCTION_18	WHILE_1	FOR_2
0x40010e1	            0x728d	                            jb 0x4001070	       359	describe.c	FUNCTION_18	WHILE_1	FOR_2
0x40010e3	    0x83bdc4fcffff	              cmp dword [rbp - 0x33c], 0	       364	describe.c	FUNCTION_18	WHILE_1	IF_13
0x40010ea	     0xf8414010000	                            je 0x4001204	       364	describe.c	FUNCTION_18	WHILE_1	IF_13
0x40010f0	    0x488b8540fdff	            mov rax, qword [rbp - 0x2c0]	       364	describe.c	FUNCTION_18	WHILE_1	IF_13
0x40010f7	          0x4885c0	                           test rax, rax	       364	describe.c	FUNCTION_18	WHILE_1	IF_13
0x40010fa	     0xf8504010000	                           jne 0x4001204	       364	describe.c	FUNCTION_18	WHILE_1	IF_13
0x4001100	    0x8b0500000000	            mov eax, dword [0x04001106] 	       365	describe.c	FUNCTION_18	WHILE_1	IF_13	IF_14
0x4001106	            0x85c0	                           test eax, eax	       365	describe.c	FUNCTION_18	WHILE_1	IF_13	IF_14
0x4001108	     0xf8416010000	                            je 0x4001224	       365	describe.c	FUNCTION_18	WHILE_1	IF_13	IF_14
0x400110e	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       367	describe.c	FUNCTION_18	WHILE_1	IF_13	CALL_18
0x4001115	        0x4883c004	                              add rax, 4	       367	describe.c	FUNCTION_18	WHILE_1	IF_13	CALL_18
0x4001119	          0x4889c7	                            mov rdi, rax	       366	describe.c	FUNCTION_18	WHILE_1	IF_13	IF_14	CALL_17
0x400111c	      0xe800000000	                          call 0x4001121	       366	describe.c	FUNCTION_18	WHILE_1	IF_13	IF_14	CALL_17
0x4001121	          0x4889c3	                            mov rbx, rax	       366	describe.c	FUNCTION_18	WHILE_1	IF_13	IF_14	CALL_17
0x4001124	      0xbf00000000	                              mov edi, 0	       366	describe.c	FUNCTION_18	WHILE_1	IF_13	IF_14	CALL_17
0x4001129	      0xe80ff1ffff	                               call sym.	       366	describe.c	FUNCTION_18	WHILE_1	IF_13	IF_14	CALL_17
0x400112e	          0x4889c1	                            mov rcx, rax	       366	describe.c	FUNCTION_18	WHILE_1	IF_13	IF_14	CALL_17
0x4001131	    0x488b05000000	            mov rax, qword [0x04001138] 	       366	describe.c	FUNCTION_18	WHILE_1	IF_13	IF_14	CALL_17
0x4001138	          0x4889da	                            mov rdx, rbx	       366	describe.c	FUNCTION_18	WHILE_1	IF_13	IF_14	CALL_17
0x400113b	          0x4889ce	                            mov rsi, rcx	       366	describe.c	FUNCTION_18	WHILE_1	IF_13	IF_14	CALL_17
0x400113e	          0x4889c7	                            mov rdi, rax	       366	describe.c	FUNCTION_18	WHILE_1	IF_13	IF_14	CALL_17
0x4001141	      0xb800000000	                              mov eax, 0	       366	describe.c	FUNCTION_18	WHILE_1	IF_13	IF_14	CALL_17
0x4001146	      0xe800000000	                          call 0x400114b	       366	describe.c	FUNCTION_18	WHILE_1	IF_13	IF_14	CALL_17
0x400114b	      0xe9d4000000	                           jmp 0x4001224	       368	describe.c	FUNCTION_18	WHILE_1	IF_13
0x4001150	    0x488b85f0fcff	            mov rax, qword [rbp - 0x310]	       371	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x4001157	          0x488b00	                    mov rax, qword [rax]	       371	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x400115a	    0x48898520fdff	            mov qword [rbp - 0x2e0], rax	       371	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x4001161	    0x488b8520fdff	            mov rax, qword [rbp - 0x2e0]	       372	describe.c	FUNCTION_18	WHILE_1	WHILE_2	CALL_19
0x4001168	          0x4889c7	                            mov rdi, rax	       372	describe.c	FUNCTION_18	WHILE_1	WHILE_2	CALL_19
0x400116b	      0xe899f1ffff	                   call sym.parse_commit	       372	describe.c	FUNCTION_18	WHILE_1	WHILE_2	CALL_19
0x4001170	    0x488b8520fdff	            mov rax, qword [rbp - 0x2e0]	       373	describe.c	FUNCTION_18	WHILE_1	WHILE_2	IF_15
0x4001177	            0x8b00	                    mov eax, dword [rax]	       373	describe.c	FUNCTION_18	WHILE_1	WHILE_2	IF_15
0x4001179	          0xc1e804	                              shr eax, 4	       373	describe.c	FUNCTION_18	WHILE_1	WHILE_2	IF_15
0x400117c	      0x25ffffff07	                      and eax, 0x7ffffff	       373	describe.c	FUNCTION_18	WHILE_1	WHILE_2	IF_15
0x4001181	          0x83e001	                              and eax, 1	       373	describe.c	FUNCTION_18	WHILE_1	WHILE_2	IF_15
0x4001184	            0x85c0	                           test eax, eax	       373	describe.c	FUNCTION_18	WHILE_1	WHILE_2	IF_15
0x4001186	            0x7519	                           jne 0x40011a1	       373	describe.c	FUNCTION_18	WHILE_1	WHILE_2	IF_15
0x4001188	    0x488d9540fdff	                  lea rdx, [rbp - 0x2c0]	       374	describe.c	FUNCTION_18	WHILE_1	WHILE_2	CALL_20
0x400118f	    0x488b8520fdff	            mov rax, qword [rbp - 0x2e0]	       374	describe.c	FUNCTION_18	WHILE_1	WHILE_2	CALL_20
0x4001196	          0x4889d6	                            mov rsi, rdx	       374	describe.c	FUNCTION_18	WHILE_1	WHILE_2	CALL_20
0x4001199	          0x4889c7	                            mov rdi, rax	       374	describe.c	FUNCTION_18	WHILE_1	WHILE_2	CALL_20
0x400119c	      0xe800000000	                          call 0x40011a1	       374	describe.c	FUNCTION_18	WHILE_1	WHILE_2	CALL_20
0x40011a1	    0x488b8520fdff	            mov rax, qword [rbp - 0x2e0]	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011a8	            0x8b00	                    mov eax, dword [rax]	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011aa	          0xc1e804	                              shr eax, 4	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011ad	            0x89c2	                            mov edx, eax	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011af	    0x81e2ffffff07	                      and edx, 0x7ffffff	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011b5	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011bc	            0x8b00	                    mov eax, dword [rax]	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011be	          0xc1e804	                              shr eax, 4	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011c1	      0x25ffffff07	                      and eax, 0x7ffffff	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011c6	             0x9c2	                             or edx, eax	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011c8	    0x488b8520fdff	            mov rax, qword [rbp - 0x2e0]	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011cf	    0x81e2ffffff07	                      and edx, 0x7ffffff	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011d5	            0x89d1	                            mov ecx, edx	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011d7	          0xc1e104	                              shl ecx, 4	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011da	            0x8b10	                    mov edx, dword [rax]	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011dc	    0x81e20f000080	                     and edx, 0x8000000f	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011e2	             0x9ca	                             or edx, ecx	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011e4	            0x8910	                    mov dword [rax], edx	       375	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011e6	    0x488b85f0fcff	            mov rax, qword [rbp - 0x310]	       376	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011ed	        0x488b4008	                mov rax, qword [rax + 8]	       376	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011f1	    0x488985f0fcff	            mov qword [rbp - 0x310], rax	       376	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x40011f8	    0x8b0500000000	            mov eax, dword [0x040011fe] 	       378	describe.c	FUNCTION_18	WHILE_1	WHILE_2	IF_16
0x40011fe	            0x85c0	                           test eax, eax	       378	describe.c	FUNCTION_18	WHILE_1	WHILE_2	IF_16
0x4001200	            0x7402	                            je 0x4001204	       378	describe.c	FUNCTION_18	WHILE_1	WHILE_2	IF_16
0x4001202	            0xeb0e	                           jmp 0x4001212	       379	describe.c	FUNCTION_18	WHILE_1	WHILE_2	IF_16
0x4001204	    0x4883bdf0fcff	              cmp qword [rbp - 0x310], 0	       370	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x400120c	     0xf853effffff	                           jne 0x4001150	       370	describe.c	FUNCTION_18	WHILE_1	WHILE_2
0x4001212	    0x488b8540fdff	            mov rax, qword [rbp - 0x2c0]	       336	describe.c	FUNCTION_18	WHILE_1
0x4001219	          0x4885c0	                           test rax, rax	       336	describe.c	FUNCTION_18	WHILE_1
0x400121c	     0xf85b9fcffff	                           jne 0x4000edb	       336	describe.c	FUNCTION_18	WHILE_1
0x4001222	            0xeb01	                           jmp 0x4001225	       336	describe.c	FUNCTION_18	WHILE_1
0x4001224	              0x90	                                     nop	       368	describe.c	FUNCTION_18	WHILE_1	IF_13
0x4001225	    0x83bdc0fcffff	              cmp dword [rbp - 0x340], 0	       383	describe.c	FUNCTION_18	IF_17
0x400122c	     0xf85ca000000	                           jne 0x40012fc	       383	describe.c	FUNCTION_18	IF_17
0x4001232	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       384	describe.c	FUNCTION_18	IF_17
0x4001239	        0x4883c004	                              add rax, 4	       384	describe.c	FUNCTION_18	IF_17
0x400123d	    0x48898538fdff	            mov qword [rbp - 0x2c8], rax	       384	describe.c	FUNCTION_18	IF_17
0x4001244	    0x8b0500000000	            mov eax, dword [0x0400124a] 	       385	describe.c	FUNCTION_18	IF_17	IF_18
0x400124a	            0x85c0	                           test eax, eax	       385	describe.c	FUNCTION_18	IF_17	IF_18
0x400124c	            0x744d	                            je 0x400129b	       385	describe.c	FUNCTION_18	IF_17	IF_18
0x400124e	    0x8b1500000000	            mov edx, dword [0x04001254] 	       386	describe.c	FUNCTION_18	IF_17	IF_18	CALL_21
0x4001254	    0x488b8d38fdff	            mov rcx, qword [rbp - 0x2c8]	       386	describe.c	FUNCTION_18	IF_17	IF_18	CALL_21
0x400125b	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	       386	describe.c	FUNCTION_18	IF_17	IF_18	CALL_21
0x4001262	          0x4889ce	                            mov rsi, rcx	       386	describe.c	FUNCTION_18	IF_17	IF_18	CALL_21
0x4001265	          0x4889c7	                            mov rdi, rax	       386	describe.c	FUNCTION_18	IF_17	IF_18	CALL_21
0x4001268	      0xe800000000	                          call 0x400126d	       386	describe.c	FUNCTION_18	IF_17	IF_18	CALL_21
0x400126d	    0x488b05000000	            mov rax, qword [0x04001274] 	       387	describe.c	FUNCTION_18	IF_17	IF_18	IF_19
0x4001274	          0x4885c0	                           test rax, rax	       387	describe.c	FUNCTION_18	IF_17	IF_18	IF_19
0x4001277	     0xf8410030000	                            je 0x400158d	       387	describe.c	FUNCTION_18	IF_17	IF_18	IF_19
0x400127d	    0x488b15000000	            mov rdx, qword [0x04001284] 	       388	describe.c	FUNCTION_18	IF_17	IF_18	CALL_22
0x4001284	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	       388	describe.c	FUNCTION_18	IF_17	IF_18	CALL_22
0x400128b	          0x4889d6	                            mov rsi, rdx	       388	describe.c	FUNCTION_18	IF_17	IF_18	CALL_22
0x400128e	          0x4889c7	                            mov rdi, rax	       388	describe.c	FUNCTION_18	IF_17	IF_18	CALL_22
0x4001291	      0xe83aeeffff	                  call sym.strbuf_addstr	       388	describe.c	FUNCTION_18	IF_17	IF_18	CALL_22
0x4001296	      0xe9f2020000	                           jmp 0x400158d	       389	describe.c	FUNCTION_18	IF_17	IF_18
0x400129b	    0x83bdccfcffff	              cmp dword [rbp - 0x334], 0	       391	describe.c	FUNCTION_18	IF_17	IF_20
0x40012a2	            0x742c	                            je 0x40012d0	       391	describe.c	FUNCTION_18	IF_17	IF_20
0x40012a4	    0x488b8538fdff	            mov rax, qword [rbp - 0x2c8]	       392	describe.c	FUNCTION_18	IF_17	IF_20	CALL_24
0x40012ab	          0x4889c7	                            mov rdi, rax	       392	describe.c	FUNCTION_18	IF_17	IF_20	CALL_24
0x40012ae	      0xe800000000	                          call 0x40012b3	       392	describe.c	FUNCTION_18	IF_17	IF_20	CALL_24
0x40012b3	          0x4889c3	                            mov rbx, rax	       392	describe.c	FUNCTION_18	IF_17	IF_20	CALL_24
0x40012b6	      0xbf00000000	                              mov edi, 0	       392	describe.c	FUNCTION_18	IF_17	IF_20	CALL_24
0x40012bb	      0xe87defffff	                               call sym.	       392	describe.c	FUNCTION_18	IF_17	IF_20	CALL_24
0x40012c0	          0x4889de	                            mov rsi, rbx	       392	describe.c	FUNCTION_18	IF_17	IF_20	CALL_24
0x40012c3	          0x4889c7	                            mov rdi, rax	       392	describe.c	FUNCTION_18	IF_17	IF_20	CALL_24
0x40012c6	      0xb800000000	                              mov eax, 0	       392	describe.c	FUNCTION_18	IF_17	IF_20	CALL_24
0x40012cb	      0xe800000000	                          call 0x40012d0	       392	describe.c	FUNCTION_18	IF_17	IF_20	CALL_24
0x40012d0	    0x488b8538fdff	            mov rax, qword [rbp - 0x2c8]	       396	describe.c	FUNCTION_18	IF_17	ELSE_3	CALL_27
0x40012d7	          0x4889c7	                            mov rdi, rax	       396	describe.c	FUNCTION_18	IF_17	ELSE_3	CALL_27
0x40012da	      0xe800000000	                          call 0x40012df	       396	describe.c	FUNCTION_18	IF_17	ELSE_3	CALL_27
0x40012df	          0x4889c3	                            mov rbx, rax	       396	describe.c	FUNCTION_18	IF_17	ELSE_3	CALL_27
0x40012e2	      0xbf00000000	                              mov edi, 0	       396	describe.c	FUNCTION_18	IF_17	ELSE_3	CALL_27
0x40012e7	      0xe851efffff	                               call sym.	       396	describe.c	FUNCTION_18	IF_17	ELSE_3	CALL_27
0x40012ec	          0x4889de	                            mov rsi, rbx	       396	describe.c	FUNCTION_18	IF_17	ELSE_3	CALL_27
0x40012ef	          0x4889c7	                            mov rdi, rax	       396	describe.c	FUNCTION_18	IF_17	ELSE_3	CALL_27
0x40012f2	      0xb800000000	                              mov eax, 0	       396	describe.c	FUNCTION_18	IF_17	ELSE_3	CALL_27
0x40012f7	      0xe800000000	                          call 0x40012fc	       396	describe.c	FUNCTION_18	IF_17	ELSE_3	CALL_27
0x40012fc	    0x8bb5c0fcffff	            mov esi, dword [rbp - 0x340]	       401	describe.c	FUNCTION_18
0x4001302	    0x488d8560fdff	                  lea rax, [rbp - 0x2a0]	       401	describe.c	FUNCTION_18
0x4001309	      0xb900000000	                              mov ecx, 0	       401	describe.c	FUNCTION_18
0x400130e	      0xba18000000	                           mov edx, 0x18	       401	describe.c	FUNCTION_18
0x4001313	          0x4889c7	                            mov rdi, rax	       401	describe.c	FUNCTION_18
0x4001316	      0xe87bedffff	                     call sym.sane_qsort	       401	describe.c	FUNCTION_18
0x400131b	    0x4883bdd8fcff	              cmp qword [rbp - 0x328], 0	       403	describe.c	FUNCTION_18	IF_21
0x4001323	            0x7421	                            je 0x4001346	       403	describe.c	FUNCTION_18	IF_21
0x4001325	    0x488d9540fdff	                  lea rdx, [rbp - 0x2c0]	       404	describe.c	FUNCTION_18	IF_21	CALL_29
0x400132c	    0x488b85d8fcff	            mov rax, qword [rbp - 0x328]	       404	describe.c	FUNCTION_18	IF_21	CALL_29
0x4001333	          0x4889d6	                            mov rsi, rdx	       404	describe.c	FUNCTION_18	IF_21	CALL_29
0x4001336	          0x4889c7	                            mov rdi, rax	       404	describe.c	FUNCTION_18	IF_21	CALL_29
0x4001339	      0xe800000000	                          call 0x400133e	       404	describe.c	FUNCTION_18	IF_21	CALL_29
0x400133e	    0x4883ade0fcff	              sub qword [rbp - 0x320], 1	       405	describe.c	FUNCTION_18	IF_21
0x4001346	    0x488d9560fdff	                  lea rdx, [rbp - 0x2a0]	       407	describe.c	FUNCTION_18	CALL_30
0x400134d	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       407	describe.c	FUNCTION_18	CALL_30
0x4001354	          0x4889d6	                            mov rsi, rdx	       407	describe.c	FUNCTION_18	CALL_30
0x4001357	          0x4889c7	                            mov rdi, rax	       407	describe.c	FUNCTION_18	CALL_30
0x400135a	      0xe86ff5ffff	       call sym.finish_depth_computation	       407	describe.c	FUNCTION_18	CALL_30
0x400135f	    0x480185e0fcff	           add qword [rbp - 0x320], rax 	       407	describe.c	FUNCTION_18	CALL_30
0x4001366	    0x488b8540fdff	            mov rax, qword [rbp - 0x2c0]	       408	describe.c	FUNCTION_18	CALL_31
0x400136d	          0x4889c7	                            mov rdi, rax	       408	describe.c	FUNCTION_18	CALL_31
0x4001370	      0xe800000000	                          call 0x4001375	       408	describe.c	FUNCTION_18	CALL_31
0x4001375	    0x8b0500000000	            mov eax, dword [0x0400137b] 	       410	describe.c	FUNCTION_18	IF_22
0x400137b	            0x85c0	                           test eax, eax	       410	describe.c	FUNCTION_18	IF_22
0x400137d	     0xf849b010000	                            je 0x400151e	       410	describe.c	FUNCTION_18	IF_22
0x4001383	    0x8b0500000000	            mov eax, dword [0x04001389] 	       412	describe.c	FUNCTION_18	IF_22	IF_23
0x4001389	            0x85c0	                           test eax, eax	       412	describe.c	FUNCTION_18	IF_22	IF_23
0x400138b	            0x795e	                           jns 0x40013eb	       412	describe.c	FUNCTION_18	IF_22	IF_23
0x400138d	    0xc785d0fcffff	              mov dword [rbp - 0x330], 0	       414	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3
0x4001397	            0xeb47	                           jmp 0x40013e0	       414	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3
0x4001399	    0x8b85d0fcffff	            mov eax, dword [rbp - 0x330]	       415	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3	CALL_33
0x400139f	            0x4898	                                    cdqe	       415	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3	CALL_33
0x40013a1	    0x488b04c50000	                  mov rax, qword [rax*8]	       415	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3	CALL_33
0x40013a9	          0x4889c7	                            mov rdi, rax	       415	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3	CALL_33
0x40013ac	      0xe88ceeffff	                               call sym.	       415	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3	CALL_33
0x40013b1	          0x4889c7	                            mov rdi, rax	       415	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3	CALL_33
0x40013b4	      0xe800000000	                          call 0x40013b9	       415	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3	CALL_33
0x40013b9	    0x8985d4fcffff	            mov dword [rbp - 0x32c], eax	       415	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3	CALL_33
0x40013bf	    0x8b0500000000	            mov eax, dword [0x040013c5] 	       416	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3	IF_24
0x40013c5	    0x3b85d4fcffff	            cmp eax, dword [rbp - 0x32c]	       416	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3	IF_24
0x40013cb	            0x7d0c	                           jge 0x40013d9	       416	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3	IF_24
0x40013cd	    0x8b85d4fcffff	            mov eax, dword [rbp - 0x32c]	       417	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3	IF_24
0x40013d3	    0x890500000000	            mov dword [0x040013d9], eax 	       417	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3	IF_24
0x40013d9	    0x8385d0fcffff	              add dword [rbp - 0x330], 1	       414	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3
0x40013e0	    0x8b85d0fcffff	            mov eax, dword [rbp - 0x330]	       414	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3
0x40013e6	          0x83f802	                              cmp eax, 2	       414	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3
0x40013e9	            0x76ae	                           jbe 0x4001399	       414	describe.c	FUNCTION_18	IF_22	IF_23	FOR_3
0x40013eb	    0xc785c8fcffff	              mov dword [rbp - 0x338], 0	       420	describe.c	FUNCTION_18	IF_22	FOR_4
0x40013f5	      0xe991000000	                           jmp 0x400148b	       420	describe.c	FUNCTION_18	IF_22	FOR_4
0x40013fa	    0x488d8d60fdff	                  lea rcx, [rbp - 0x2a0]	       421	describe.c	FUNCTION_18	IF_22	FOR_4
0x4001401	    0x8b95c8fcffff	            mov edx, dword [rbp - 0x338]	       421	describe.c	FUNCTION_18	IF_22	FOR_4
0x4001407	          0x4889d0	                            mov rax, rdx	       421	describe.c	FUNCTION_18	IF_22	FOR_4
0x400140a	          0x4801c0	                            add rax, rax	       421	describe.c	FUNCTION_18	IF_22	FOR_4
0x400140d	          0x4801d0	                            add rax, rdx	       421	describe.c	FUNCTION_18	IF_22	FOR_4
0x4001410	        0x48c1e003	                              shl rax, 3	       421	describe.c	FUNCTION_18	IF_22	FOR_4
0x4001414	          0x4801c8	                            add rax, rcx	       421	describe.c	FUNCTION_18	IF_22	FOR_4
0x4001417	    0x48898530fdff	            mov qword [rbp - 0x2d0], rax	       421	describe.c	FUNCTION_18	IF_22	FOR_4
0x400141e	    0x488b8530fdff	            mov rax, qword [rbp - 0x2d0]	       424	describe.c	FUNCTION_18	IF_22	FOR_4
0x4001425	          0x488b00	                    mov rax, qword [rax]	       424	describe.c	FUNCTION_18	IF_22	FOR_4
0x4001428	        0x4c8b6048	            mov r12, qword [rax + 0x48] 	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x400142c	    0x488b8530fdff	            mov rax, qword [rbp - 0x2d0]	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x4001433	          0x8b5808	                mov ebx, dword [rax + 8]	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x4001436	    0x488b8530fdff	            mov rax, qword [rbp - 0x2d0]	       423	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_35
0x400143d	          0x488b00	                    mov rax, qword [rax]	       423	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_35
0x4001440	         0xfb64030	           movzx eax, byte [rax + 0x30] 	       423	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_35
0x4001444	          0x83e003	                              and eax, 3	       423	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_35
0x4001447	           0xfb6c0	                           movzx eax, al	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x400144a	            0x4898	                                    cdqe	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x400144c	    0x488b04c50000	                  mov rax, qword [rax*8]	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x4001454	          0x4889c7	                            mov rdi, rax	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x4001457	      0xe8e1edffff	                               call sym.	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x400145c	          0x4889c1	                            mov rcx, rax	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x400145f	    0x8b1500000000	            mov edx, dword [0x04001465] 	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x4001465	    0x488b05000000	            mov rax, qword [0x0400146c] 	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x400146c	          0x4d89e1	                             mov r9, r12	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x400146f	          0x4189d8	                            mov r8d, ebx	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x4001472	      0xbe00000000	                              mov esi, 0	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x4001477	          0x4889c7	                            mov rdi, rax	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x400147a	      0xb800000000	                              mov eax, 0	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x400147f	      0xe800000000	                          call 0x4001484	       422	describe.c	FUNCTION_18	IF_22	FOR_4	CALL_34
0x4001484	    0x8385c8fcffff	              add dword [rbp - 0x338], 1	       420	describe.c	FUNCTION_18	IF_22	FOR_4
0x400148b	    0x8b85c8fcffff	            mov eax, dword [rbp - 0x338]	       420	describe.c	FUNCTION_18	IF_22	FOR_4
0x4001491	    0x3b85c0fcffff	            cmp eax, dword [rbp - 0x340]	       420	describe.c	FUNCTION_18	IF_22	FOR_4
0x4001497	     0xf825dffffff	                            jb 0x40013fa	       420	describe.c	FUNCTION_18	IF_22	FOR_4
0x400149d	      0xbf00000000	                              mov edi, 0	       426	describe.c	FUNCTION_18	IF_22	CALL_37
0x40014a2	      0xe896edffff	                               call sym.	       426	describe.c	FUNCTION_18	IF_22	CALL_37
0x40014a7	          0x4889c1	                            mov rcx, rax	       426	describe.c	FUNCTION_18	IF_22	CALL_37
0x40014aa	    0x488b05000000	            mov rax, qword [0x040014b1] 	       426	describe.c	FUNCTION_18	IF_22	CALL_37
0x40014b1	    0x488b95e0fcff	            mov rdx, qword [rbp - 0x320]	       426	describe.c	FUNCTION_18	IF_22	CALL_37
0x40014b8	          0x4889ce	                            mov rsi, rcx	       426	describe.c	FUNCTION_18	IF_22	CALL_37
0x40014bb	          0x4889c7	                            mov rdi, rax	       426	describe.c	FUNCTION_18	IF_22	CALL_37
0x40014be	      0xb800000000	                              mov eax, 0	       426	describe.c	FUNCTION_18	IF_22	CALL_37
0x40014c3	      0xe800000000	                          call 0x40014c8	       426	describe.c	FUNCTION_18	IF_22	CALL_37
0x40014c8	    0x4883bdd8fcff	              cmp qword [rbp - 0x328], 0	       427	describe.c	FUNCTION_18	IF_22	IF_25
0x40014d0	            0x744c	                            je 0x400151e	       427	describe.c	FUNCTION_18	IF_22	IF_25
0x40014d2	    0x488b85d8fcff	            mov rax, qword [rbp - 0x328]	       432	describe.c	FUNCTION_18	IF_22	IF_25	CALL_40
0x40014d9	        0x4883c004	                              add rax, 4	       432	describe.c	FUNCTION_18	IF_22	IF_25	CALL_40
0x40014dd	          0x4889c7	                            mov rdi, rax	       428	describe.c	FUNCTION_18	IF_22	IF_25	CALL_38
0x40014e0	      0xe800000000	                          call 0x40014e5	       428	describe.c	FUNCTION_18	IF_22	IF_25	CALL_38
0x40014e5	          0x4989c5	                            mov r13, rax	       428	describe.c	FUNCTION_18	IF_22	IF_25	CALL_38
0x40014e8	    0x448b25000000	           mov r12d, dword [0x040014ef] 	       428	describe.c	FUNCTION_18	IF_22	IF_25	CALL_38
0x40014ef	    0x8b1d00000000	            mov ebx, dword [0x040014f5] 	       428	describe.c	FUNCTION_18	IF_22	IF_25	CALL_38
0x40014f5	      0xbf00000000	                              mov edi, 0	       428	describe.c	FUNCTION_18	IF_22	IF_25	CALL_38
0x40014fa	      0xe83eedffff	                               call sym.	       428	describe.c	FUNCTION_18	IF_22	IF_25	CALL_38
0x40014ff	          0x4889c6	                            mov rsi, rax	       428	describe.c	FUNCTION_18	IF_22	IF_25	CALL_38
0x4001502	    0x488b05000000	            mov rax, qword [0x04001509] 	       428	describe.c	FUNCTION_18	IF_22	IF_25	CALL_38
0x4001509	          0x4d89e8	                             mov r8, r13	       428	describe.c	FUNCTION_18	IF_22	IF_25	CALL_38
0x400150c	          0x4489e1	                           mov ecx, r12d	       428	describe.c	FUNCTION_18	IF_22	IF_25	CALL_38
0x400150f	            0x89da	                            mov edx, ebx	       428	describe.c	FUNCTION_18	IF_22	IF_25	CALL_38
0x4001511	          0x4889c7	                            mov rdi, rax	       428	describe.c	FUNCTION_18	IF_22	IF_25	CALL_38
0x4001514	      0xb800000000	                              mov eax, 0	       428	describe.c	FUNCTION_18	IF_22	IF_25	CALL_38
0x4001519	      0xe800000000	                          call 0x400151e	       428	describe.c	FUNCTION_18	IF_22	IF_25	CALL_38
0x400151e	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	       436	describe.c	FUNCTION_18	CALL_41
0x4001525	    0x488b95b0fcff	            mov rdx, qword [rbp - 0x350]	       436	describe.c	FUNCTION_18	CALL_41
0x400152c	          0x4889d6	                            mov rsi, rdx	       436	describe.c	FUNCTION_18	CALL_41
0x400152f	          0x4889c7	                            mov rdi, rax	       436	describe.c	FUNCTION_18	CALL_41
0x4001532	      0xe80bf5ffff	                    call sym.append_name	       436	describe.c	FUNCTION_18	CALL_41
0x4001537	    0x8b0500000000	            mov eax, dword [0x0400153d] 	       437	describe.c	FUNCTION_18	IF_26
0x400153d	            0x85c0	                           test eax, eax	       437	describe.c	FUNCTION_18	IF_26
0x400153f	            0x7422	                            je 0x4001563	       437	describe.c	FUNCTION_18	IF_26
0x4001541	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       438	describe.c	FUNCTION_18	CALL_42
0x4001548	        0x488d4804	                      lea rcx, [rax + 4]	       438	describe.c	FUNCTION_18	CALL_42
0x400154c	    0x8b8568fdffff	            mov eax, dword [rbp - 0x298]	       438	describe.c	FUNCTION_18	CALL_42
0x4001552	    0x488b95b0fcff	            mov rdx, qword [rbp - 0x350]	       438	describe.c	FUNCTION_18	CALL_42
0x4001559	          0x4889ce	                            mov rsi, rcx	       438	describe.c	FUNCTION_18	CALL_42
0x400155c	            0x89c7	                            mov edi, eax	       438	describe.c	FUNCTION_18	CALL_42
0x400155e	      0xe8a3f6ffff	                  call sym.append_suffix	       438	describe.c	FUNCTION_18	CALL_42
0x4001563	    0x488b05000000	            mov rax, qword [0x0400156a] 	       439	describe.c	FUNCTION_18	IF_27
0x400156a	          0x4885c0	                           test rax, rax	       439	describe.c	FUNCTION_18	IF_27
0x400156d	            0x741f	                            je 0x400158e	       439	describe.c	FUNCTION_18	IF_27
0x400156f	    0x488b15000000	            mov rdx, qword [0x04001576] 	       440	describe.c	FUNCTION_18	CALL_43
0x4001576	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	       440	describe.c	FUNCTION_18	CALL_43
0x400157d	          0x4889d6	                            mov rsi, rdx	       440	describe.c	FUNCTION_18	CALL_43
0x4001580	          0x4889c7	                            mov rdi, rax	       440	describe.c	FUNCTION_18	CALL_43
0x4001583	      0xe848ebffff	                  call sym.strbuf_addstr	       440	describe.c	FUNCTION_18	CALL_43
0x4001588	            0xeb04	                           jmp 0x400158e	       440	describe.c	FUNCTION_18	CALL_43
0x400158a	              0x90	                                     nop	       313	describe.c	FUNCTION_18	IF_1
0x400158b	            0xeb01	                           jmp 0x400158e	       313	describe.c	FUNCTION_18	IF_1
0x400158d	              0x90	                                     nop	       389	describe.c	FUNCTION_18	IF_17	IF_18
0x400158e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       441	describe.c	FUNCTION_18
0x4001592	    0x644833042528	                xor rax, qword fs:[0x28]	       441	describe.c	FUNCTION_18
0x400159b	            0x7405	                            je 0x40015a2	       441	describe.c	FUNCTION_18
0x400159d	      0xe800000000	                          call 0x40015a2	       441	describe.c	FUNCTION_18
0x40015a2	    0x4881c4380300	                          add rsp, 0x338	       441	describe.c	FUNCTION_18
0x40015a9	              0x5b	                                 pop rbx	       441	describe.c	FUNCTION_18
0x40015aa	            0x415c	                                 pop r12	       441	describe.c	FUNCTION_18
0x40015ac	            0x415d	                                 pop r13	       441	describe.c	FUNCTION_18
0x40015ae	              0x5d	                                 pop rbp	       441	describe.c	FUNCTION_18
0x40015af	              0xc3	                                     ret	       441	describe.c	FUNCTION_18
