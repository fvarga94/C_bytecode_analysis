get_name	functions,2:IF,9:ELSE,5:DO,0:WHILE,0:SWITCH,0:FOR,0:CALL,7	223
0x400009d	            0x4156	                                push r14	       134	describe.c	FUNCTION_5
0x400009f	            0x4155	                                push r13	       134	describe.c	FUNCTION_5
0x40000a1	            0x4154	                                push r12	       134	describe.c	FUNCTION_5
0x40000a3	              0x55	                                push rbp	       134	describe.c	FUNCTION_5
0x40000a4	              0x53	                                push rbx	       134	describe.c	FUNCTION_5
0x40000a5	        0x4883ec30	                           sub rsp, 0x30	       134	describe.c	FUNCTION_5
0x40000a9	          0x4889fd	                            mov rbp, rdi	       134	describe.c	FUNCTION_5
0x40000ac	          0x4989f4	                            mov r12, rsi	       134	describe.c	FUNCTION_5
0x40000af	    0x64488b042528	                mov rax, qword fs:[0x28]	       134	describe.c	FUNCTION_5
0x40000b8	      0x4889442428	             mov qword [rsp + 0x28], rax	       134	describe.c	FUNCTION_5
0x40000bd	            0x31c0	                            xor eax, eax	       134	describe.c	FUNCTION_5
0x40000bf	          0x4889fb	                            mov rbx, rdi	       134	describe.c	FUNCTION_5
0x40000c2	      0xb800000000	                              mov eax, 0	       134	describe.c	FUNCTION_5
0x40000c7	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x40000ca	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x40000cc	            0x746f	                            je 0x400013d	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x40000ce	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_22	DO_1
0x40000d2	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_22	DO_1
0x40000d6	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_22	DO_1
0x40000d9	            0x74ec	                            je 0x40000c7	       488	git-compat-util.h	FUNCTION_22	DO_1
0x40000db	      0xe9a0020000	                           jmp 0x4000380	       488	git-compat-util.h	FUNCTION_22	DO_1
0x40000e0	    0x833d00000000	               cmp dword [0x040000e7], 0	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x40000e7	            0x7517	                           jne 0x4000100	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x40000e9	    0x833d00000000	               cmp dword [0x040000f0], 0	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x40000f0	     0xf841c010000	                            je 0x4000212	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x40000f6	          0x4889eb	                            mov rbx, rbp	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x40000f9	      0xb800000000	                              mov eax, 0	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x40000fe	            0xeb08	                           jmp 0x4000108	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x4000100	          0x4889eb	                            mov rbx, rbp	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x4000103	      0xb800000000	                              mov eax, 0	       143	describe.c	FUNCTION_5	ELSE_1	IF_2	IF_3
0x4000108	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x400010b	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x400010d	            0x7436	                            je 0x4000145	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x400010f	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000113	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000117	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_22	DO_1
0x400011a	            0x74ec	                            je 0x4000108	       488	git-compat-util.h	FUNCTION_22	DO_1
0x400011c	          0x4889eb	                            mov rbx, rbp	       488	git-compat-util.h	FUNCTION_22	DO_1
0x400011f	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000124	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x4000127	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x4000129	            0x7422	                            je 0x400014d	       484	git-compat-util.h	FUNCTION_22	DO_1	IF_1
0x400012b	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_22	DO_1
0x400012f	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000133	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000136	            0x74ec	                            je 0x4000124	       488	git-compat-util.h	FUNCTION_22	DO_1
0x4000138	      0xe92c020000	                           jmp 0x4000369	       488	git-compat-util.h	FUNCTION_22	DO_1
0x400013d	    0x41be01000000	                             mov r14d, 1	       141	describe.c	FUNCTION_5	IF_1
0x4000143	            0xeb0e	                           jmp 0x4000153	       141	describe.c	FUNCTION_5	IF_1
0x4000145	    0x41be00000000	                             mov r14d, 0	       135	describe.c	FUNCTION_5
0x400014b	            0xeb06	                           jmp 0x4000153	       135	describe.c	FUNCTION_5
0x400014d	    0x41be00000000	                             mov r14d, 0	       135	describe.c	FUNCTION_5
0x4000153	    0x8b0500000000	            mov eax, dword [0x04000159] 	       158	describe.c	FUNCTION_5	IF_4
0x4000159	            0x85c0	                           test eax, eax	       158	describe.c	FUNCTION_5	IF_4
0x400015b	            0x744f	                            je 0x40001ac	       158	describe.c	FUNCTION_5	IF_4
0x400015d	    0x4c8b2d000000	            mov r13, qword [0x04000164] 	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000164	          0x4d85ed	                           test r13, r13	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000167	            0x7443	                            je 0x40001ac	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000169	            0x89c0	                            mov eax, eax	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x400016b	        0x48c1e004	                              shl rax, 4	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x400016f	          0x4c01e8	                            add rax, r13	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000172	          0x4939c5	                            cmp r13, rax	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000175	            0x7335	                           jae 0x40001ac	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000177	      0xba00000000	                              mov edx, 0	       162	describe.c	FUNCTION_5	IF_4	FUNCTION_1	IF_1	CALL_1
0x400017c	          0x4889de	                            mov rsi, rbx	       162	describe.c	FUNCTION_5	IF_4	FUNCTION_1	IF_1	CALL_1
0x400017f	        0x498b7d00	                    mov rdi, qword [r13]	       162	describe.c	FUNCTION_5	IF_4	FUNCTION_1	IF_1	CALL_1
0x4000183	      0xe800000000	                          call 0x4000188	       162	describe.c	FUNCTION_5	IF_4	FUNCTION_1	IF_1	CALL_1
0x4000188	            0x85c0	                           test eax, eax	       162	describe.c	FUNCTION_5	IF_4	FUNCTION_1	IF_1	CALL_1
0x400018a	     0xf84d9010000	                            je 0x4000369	       162	describe.c	FUNCTION_5	IF_4	FUNCTION_1	IF_1	CALL_1
0x4000190	        0x4983c510	                           add r13, 0x10	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000194	            0x7416	                            je 0x40001ac	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x4000196	    0x8b0500000000	            mov eax, dword [0x0400019c] 	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x400019c	        0x48c1e004	                              shl rax, 4	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x40001a0	    0x480305000000	             add rax, qword [0x040001a7]	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x40001a7	          0x4939c5	                            cmp r13, rax	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x40001aa	            0x72cb	                            jb 0x4000177	       161	describe.c	FUNCTION_5	IF_4	FUNCTION_1
0x40001ac	    0x8b0500000000	            mov eax, dword [0x040001b2] 	       171	describe.c	FUNCTION_5	IF_5
0x40001b2	            0x85c0	                           test eax, eax	       171	describe.c	FUNCTION_5	IF_5
0x40001b4	            0x7462	                            je 0x4000218	       171	describe.c	FUNCTION_5	IF_5
0x40001b6	    0x4c8b2d000000	            mov r13, qword [0x040001bd] 	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40001bd	          0x4d85ed	                           test r13, r13	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40001c0	     0xf84a3010000	                            je 0x4000369	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40001c6	            0x89c0	                            mov eax, eax	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40001c8	        0x48c1e004	                              shl rax, 4	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40001cc	          0x4c01e8	                            add rax, r13	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40001cf	          0x4939c5	                            cmp r13, rax	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40001d2	     0xf8391010000	                           jae 0x4000369	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40001d8	      0xba00000000	                              mov edx, 0	       176	describe.c	FUNCTION_5	IF_5	FUNCTION_2	IF_1	CALL_1
0x40001dd	          0x4889de	                            mov rsi, rbx	       176	describe.c	FUNCTION_5	IF_5	FUNCTION_2	IF_1	CALL_1
0x40001e0	        0x498b7d00	                    mov rdi, qword [r13]	       176	describe.c	FUNCTION_5	IF_5	FUNCTION_2	IF_1	CALL_1
0x40001e4	      0xe800000000	                          call 0x40001e9	       176	describe.c	FUNCTION_5	IF_5	FUNCTION_2	IF_1	CALL_1
0x40001e9	            0x85c0	                           test eax, eax	       176	describe.c	FUNCTION_5	IF_5	FUNCTION_2	IF_1	CALL_1
0x40001eb	            0x742b	                            je 0x4000218	       176	describe.c	FUNCTION_5	IF_5	FUNCTION_2	IF_1	CALL_1
0x40001ed	        0x4983c510	                           add r13, 0x10	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40001f1	     0xf8472010000	                            je 0x4000369	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40001f7	    0x8b0500000000	            mov eax, dword [0x040001fd] 	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x40001fd	        0x48c1e004	                              shl rax, 4	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x4000201	    0x480305000000	             add rax, qword [0x04000208]	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x4000208	          0x4939c5	                            cmp r13, rax	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x400020b	            0x72cb	                            jb 0x40001d8	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x400020d	      0xe957010000	                           jmp 0x4000369	       175	describe.c	FUNCTION_5	IF_5	FUNCTION_2
0x4000212	    0x41be00000000	                             mov r14d, 0	       135	describe.c	FUNCTION_5
0x4000218	      0x488d742410	                   lea rsi, [rsp + 0x10]	       187	describe.c	FUNCTION_5	IF_7	CALL_4
0x400021d	          0x4889ef	                            mov rdi, rbp	       187	describe.c	FUNCTION_5	IF_7	CALL_4
0x4000220	      0xe800000000	                          call 0x4000225	       187	describe.c	FUNCTION_5	IF_7	CALL_4
0x4000225	            0x85c0	                           test eax, eax	       187	describe.c	FUNCTION_5	IF_7	CALL_4
0x4000227	            0x7518	                           jne 0x4000241	       187	describe.c	FUNCTION_5	IF_7	CALL_4
0x4000229	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_50	CALL_1
0x400022e	      0x488d742410	                   lea rsi, [rsp + 0x10]	       975	cache.h	FUNCTION_50	CALL_1
0x4000233	          0x4c89e7	                            mov rdi, r12	       975	cache.h	FUNCTION_50	CALL_1
0x4000236	      0xe800000000	                          call 0x400023b	       975	cache.h	FUNCTION_50	CALL_1
0x400023b	            0x85c0	                           test eax, eax	       200	describe.c	FUNCTION_5	IF_8
0x400023d	            0x7520	                           jne 0x400025f	       200	describe.c	FUNCTION_5	IF_8
0x400023f	            0xeb24	                           jmp 0x4000265	       200	describe.c	FUNCTION_5	IF_8
0x4000241	        0x498b0424	                    mov rax, qword [r12]	        53	string3.h	FUNCTION_70	CALL_3
0x4000245	      0x4889442410	             mov qword [rsp + 0x10], rax	        53	string3.h	FUNCTION_70	CALL_3
0x400024a	      0x498b442408	                mov rax, qword [r12 + 8]	        53	string3.h	FUNCTION_70	CALL_3
0x400024f	      0x4889442418	             mov qword [rsp + 0x18], rax	        53	string3.h	FUNCTION_70	CALL_3
0x4000254	      0x418b442410	            mov eax, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_70	CALL_3
0x4000259	        0x89442420	             mov dword [rsp + 0x20], eax	        53	string3.h	FUNCTION_70	CALL_3
0x400025d	            0xeb06	                           jmp 0x4000265	        53	string3.h	FUNCTION_70	CALL_3
0x400025f	    0x41be02000000	                             mov r14d, 2	       201	describe.c	FUNCTION_5	IF_8
0x4000265	        0x488d4505	                      lea rax, [rbp + 5]	       207	describe.c	FUNCTION_5	CALL_7
0x4000269	        0x4883c50a	                            add rbp, 0xa	       207	describe.c	FUNCTION_5	CALL_7
0x400026d	    0x833d00000000	               cmp dword [0x04000274], 0	       207	describe.c	FUNCTION_5	CALL_7
0x4000274	        0x480f45e8	                         cmovne rbp, rax	       207	describe.c	FUNCTION_5	CALL_7
0x4000278	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       248	hashmap.h	FUNCTION_83
0x400027c	        0x89442408	                mov dword [rsp + 8], eax	       248	hashmap.h	FUNCTION_83
0x4000280	    0x48c704240000	                      mov qword [rsp], 0	       249	hashmap.h	FUNCTION_83
0x4000288	      0x488d542410	                   lea rdx, [rsp + 0x10]	       308	hashmap.h	FUNCTION_85	CALL_2
0x400028d	          0x4889e6	                            mov rsi, rsp	       308	hashmap.h	FUNCTION_85	CALL_2
0x4000290	      0xbf00000000	                              mov edi, 0	       308	hashmap.h	FUNCTION_85	CALL_2
0x4000295	      0xe800000000	                          call 0x400029a	       308	hashmap.h	FUNCTION_85	CALL_2
0x400029a	          0x4889c3	                            mov rbx, rax	       308	hashmap.h	FUNCTION_85	CALL_2
0x400029d	          0x4885c0	                           test rax, rax	        81	describe.c	FUNCTION_3	IF_1
0x40002a0	     0xf84e9000000	                            je 0x400038f	        81	describe.c	FUNCTION_3	IF_1
0x40002a6	         0xfb64030	           movzx eax, byte [rax + 0x30] 	        81	describe.c	FUNCTION_3	IF_1
0x40002aa	          0x83e003	                              and eax, 3	        81	describe.c	FUNCTION_3	IF_1
0x40002ad	          0x4139c6	                           cmp r14d, eax	        81	describe.c	FUNCTION_3	IF_1
0x40002b0	     0xf8f2d010000	                            jg 0x40003e3	        81	describe.c	FUNCTION_3	IF_1
0x40002b6	         0xfb64330	           movzx eax, byte [rbx + 0x30] 	        84	describe.c	FUNCTION_3	IF_2
0x40002ba	          0x83e003	                              and eax, 3	        84	describe.c	FUNCTION_3	IF_2
0x40002bd	            0x3c02	                               cmp al, 2	        84	describe.c	FUNCTION_3	IF_2
0x40002bf	     0xf85a4000000	                           jne 0x4000369	        84	describe.c	FUNCTION_3	IF_2
0x40002c5	        0x4183fe02	                             cmp r14d, 2	        84	describe.c	FUNCTION_3	IF_2
0x40002c9	     0xf859a000000	                           jne 0x4000369	        84	describe.c	FUNCTION_3	IF_2
0x40002cf	      0x48837b2800	               cmp qword [rbx + 0x28], 0	        90	describe.c	FUNCTION_3	IF_2	IF_3
0x40002d4	            0x7529	                           jne 0x40002ff	        90	describe.c	FUNCTION_3	IF_2	IF_3
0x40002d6	        0x488d7b31	                   lea rdi, [rbx + 0x31]	        91	describe.c	FUNCTION_3	IF_2	IF_3	CALL_1
0x40002da	      0xe800000000	                          call 0x40002df	        91	describe.c	FUNCTION_3	IF_2	IF_3	CALL_1
0x40002df	          0x4989c5	                            mov r13, rax	        91	describe.c	FUNCTION_3	IF_2	IF_3	CALL_1
0x40002e2	          0x4885c0	                           test rax, rax	        92	describe.c	FUNCTION_3	IF_2	IF_3	IF_4	CALL_2
0x40002e5	     0xf84f8000000	                            je 0x40003e3	        92	describe.c	FUNCTION_3	IF_2	IF_3	IF_4	CALL_2
0x40002eb	          0x4889c7	                            mov rdi, rax	        92	describe.c	FUNCTION_3	IF_2	IF_3	IF_4	CALL_2
0x40002ee	      0xe800000000	                          call 0x40002f3	        92	describe.c	FUNCTION_3	IF_2	IF_3	IF_4	CALL_2
0x40002f3	            0x85c0	                           test eax, eax	        92	describe.c	FUNCTION_3	IF_2	IF_3	IF_4	CALL_2
0x40002f5	     0xf85e8000000	                           jne 0x40003e3	        92	describe.c	FUNCTION_3	IF_2	IF_3	IF_4	CALL_2
0x40002fb	        0x4c896b28	             mov qword [rbx + 0x28], r13	        94	describe.c	FUNCTION_3	IF_2	IF_3
0x40002ff	          0x4c89e7	                            mov rdi, r12	        97	describe.c	FUNCTION_3	IF_2	CALL_3
0x4000302	      0xe800000000	                          call 0x4000307	        97	describe.c	FUNCTION_3	IF_2	CALL_3
0x4000307	          0x4989c5	                            mov r13, rax	        97	describe.c	FUNCTION_3	IF_2	CALL_3
0x400030a	          0x4885c0	                           test rax, rax	        98	describe.c	FUNCTION_3	IF_2	IF_5	CALL_4
0x400030d	            0x745a	                            je 0x4000369	        98	describe.c	FUNCTION_3	IF_2	IF_5	CALL_4
0x400030f	          0x4889c7	                            mov rdi, rax	        98	describe.c	FUNCTION_3	IF_2	IF_5	CALL_4
0x4000312	      0xe800000000	                          call 0x4000317	        98	describe.c	FUNCTION_3	IF_2	IF_5	CALL_4
0x4000317	            0x85c0	                           test eax, eax	        98	describe.c	FUNCTION_3	IF_2	IF_5	CALL_4
0x4000319	            0x754e	                           jne 0x4000369	        98	describe.c	FUNCTION_3	IF_2	IF_5	CALL_4
0x400031b	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       102	describe.c	FUNCTION_3	IF_2	IF_6
0x400031f	        0x498b4d28	            mov rcx, qword [r13 + 0x28] 	       116	describe.c	FUNCTION_4	IF_1	CALL_2
0x4000323	        0x48394828	            cmp qword [rax + 0x28], rcx 	       116	describe.c	FUNCTION_4	IF_1	CALL_2
0x4000327	            0x7340	                           jae 0x4000369	       116	describe.c	FUNCTION_4	IF_1	CALL_2
0x4000329	        0x4c896b28	             mov qword [rbx + 0x28], r13	       124	describe.c	FUNCTION_4	IF_1
0x400032d	         0xfb64330	           movzx eax, byte [rbx + 0x30] 	       125	describe.c	FUNCTION_4	IF_1
0x4000331	          0x83e0f8	                     and eax, 0xfffffff8	       125	describe.c	FUNCTION_4	IF_1
0x4000334	          0x4109c6	                            or r14d, eax	       126	describe.c	FUNCTION_4	IF_1
0x4000337	        0x44887330	             mov byte [rbx + 0x30], r14b	       126	describe.c	FUNCTION_4	IF_1
0x400033b	        0x498b1424	                    mov rdx, qword [r12]	        53	string3.h	FUNCTION_70	CALL_3
0x400033f	        0x48895331	             mov qword [rbx + 0x31], rdx	        53	string3.h	FUNCTION_70	CALL_3
0x4000343	      0x498b542408	                mov rdx, qword [r12 + 8]	        53	string3.h	FUNCTION_70	CALL_3
0x4000348	        0x48895339	             mov qword [rbx + 0x39], rdx	        53	string3.h	FUNCTION_70	CALL_3
0x400034c	      0x418b542410	            mov edx, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_70	CALL_3
0x4000351	          0x895341	             mov dword [rbx + 0x41], edx	        53	string3.h	FUNCTION_70	CALL_3
0x4000354	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	       128	describe.c	FUNCTION_4	IF_1	CALL_9
0x4000358	      0xe800000000	                          call 0x400035d	       128	describe.c	FUNCTION_4	IF_1	CALL_9
0x400035d	          0x4889ef	                            mov rdi, rbp	       129	describe.c	FUNCTION_4	IF_1	CALL_10
0x4000360	      0xe800000000	                          call 0x4000365	       129	describe.c	FUNCTION_4	IF_1	CALL_10
0x4000365	        0x48894348	             mov qword [rbx + 0x48], rax	       129	describe.c	FUNCTION_4	IF_1	CALL_10
0x4000369	      0xb800000000	                              mov eax, 0	       209	describe.c	FUNCTION_5
0x400036e	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       209	describe.c	FUNCTION_5
0x4000373	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       209	describe.c	FUNCTION_5
0x400037c	            0x7475	                            je 0x40003f3	       209	describe.c	FUNCTION_5
0x400037e	            0xeb6e	                           jmp 0x40003ee	       209	describe.c	FUNCTION_5
0x4000380	    0x833d00000000	               cmp dword [0x04000387], 0	       142	describe.c	FUNCTION_5	ELSE_1	IF_2
0x4000387	     0xf8553fdffff	                           jne 0x40000e0	       142	describe.c	FUNCTION_5	ELSE_1	IF_2
0x400038d	            0xebda	                           jmp 0x4000369	       142	describe.c	FUNCTION_5	ELSE_1	IF_2
0x400038f	      0xbf50000000	                           mov edi, 0x50	       118	describe.c	FUNCTION_4	IF_1	IF_2	CALL_3
0x4000394	      0xe800000000	                          call 0x4000399	       118	describe.c	FUNCTION_4	IF_1	IF_2	CALL_3
0x4000399	          0x4889c3	                            mov rbx, rax	       118	describe.c	FUNCTION_4	IF_1	IF_2	CALL_3
0x400039c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_70	CALL_3
0x40003a1	        0x48894310	             mov qword [rbx + 0x10], rax	        53	string3.h	FUNCTION_70	CALL_3
0x40003a5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_70	CALL_3
0x40003aa	        0x48894318	             mov qword [rbx + 0x18], rax	        53	string3.h	FUNCTION_70	CALL_3
0x40003ae	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        53	string3.h	FUNCTION_70	CALL_3
0x40003b2	          0x894320	             mov dword [rbx + 0x20], eax	        53	string3.h	FUNCTION_70	CALL_3
0x40003b5	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       248	hashmap.h	FUNCTION_83
0x40003b9	          0x894308	                mov dword [rbx + 8], eax	       248	hashmap.h	FUNCTION_83
0x40003bc	    0x48c703000000	                      mov qword [rbx], 0	       249	hashmap.h	FUNCTION_83
0x40003c3	          0x4889de	                            mov rsi, rbx	       121	describe.c	FUNCTION_4	IF_1	IF_2	CALL_7
0x40003c6	      0xbf00000000	                              mov edi, 0	       121	describe.c	FUNCTION_4	IF_1	IF_2	CALL_7
0x40003cb	      0xe800000000	                          call 0x40003d0	       121	describe.c	FUNCTION_4	IF_1	IF_2	CALL_7
0x40003d0	    0x48c743480000	               mov qword [rbx + 0x48], 0	       122	describe.c	FUNCTION_4	IF_1	IF_2
0x40003d8	    0x41bd00000000	                             mov r13d, 0	       115	describe.c	FUNCTION_4
0x40003de	      0xe946ffffff	                           jmp 0x4000329	       115	describe.c	FUNCTION_4
0x40003e3	    0x41bd00000000	                             mov r13d, 0	       115	describe.c	FUNCTION_4
0x40003e9	      0xe93bffffff	                           jmp 0x4000329	       115	describe.c	FUNCTION_4
0x40003ee	      0xe800000000	                          call 0x40003f3	       209	describe.c	FUNCTION_5
0x40003f3	        0x4883c430	                           add rsp, 0x30	       209	describe.c	FUNCTION_5
0x40003f7	              0x5b	                                 pop rbx	       209	describe.c	FUNCTION_5
0x40003f8	              0x5d	                                 pop rbp	       209	describe.c	FUNCTION_5
0x40003f9	            0x415c	                                 pop r12	       209	describe.c	FUNCTION_5
0x40003fb	            0x415d	                                 pop r13	       209	describe.c	FUNCTION_5
0x40003fd	            0x415e	                                 pop r14	       209	describe.c	FUNCTION_5
0x40003ff	              0xc3	                                     ret	       209	describe.c	FUNCTION_5
commit_name_cmp	functions,0:IF,0:ELSE,0:DO,0:WHILE,0:SWITCH,0:FOR,0:CALL,1	10
0x4000078	        0x4883ec08	                              sub rsp, 8	        64	describe.c	FUNCTION_1
0x400007c	        0x4883c210	                           add rdx, 0x10	        68	describe.c	FUNCTION_1	CALL_1
0x4000080	          0x4885c9	                           test rcx, rcx	        68	describe.c	FUNCTION_1	CALL_1
0x4000083	        0x480f44ca	                          cmove rcx, rdx	        68	describe.c	FUNCTION_1	CALL_1
0x4000087	        0x488d7e10	                   lea rdi, [rsi + 0x10]	       975	cache.h	FUNCTION_50	CALL_1
0x400008b	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_50	CALL_1
0x4000090	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_50	CALL_1
0x4000093	      0xe800000000	                          call 0x4000098	       975	cache.h	FUNCTION_50	CALL_1
0x4000098	        0x4883c408	                              add rsp, 8	        69	describe.c	FUNCTION_1
0x400009c	              0xc3	                                     ret	        69	describe.c	FUNCTION_1
cmd_describe	functions,0:IF,18:ELSE,7:DO,0:WHILE,1:SWITCH,1:FOR,0:CALL,68	373
0x40010bd	            0x4156	                                push r14	       519	describe.c	FUNCTION_15
0x40010bf	            0x4155	                                push r13	       519	describe.c	FUNCTION_15
0x40010c1	            0x4154	                                push r12	       519	describe.c	FUNCTION_15
0x40010c3	              0x55	                                push rbp	       519	describe.c	FUNCTION_15
0x40010c4	              0x53	                                push rbx	       519	describe.c	FUNCTION_15
0x40010c5	    0x4881ecf00c00	                          sub rsp, 0xcf0	       519	describe.c	FUNCTION_15
0x40010cc	            0x89fb	                            mov ebx, edi	       519	describe.c	FUNCTION_15
0x40010ce	          0x4889f5	                            mov rbp, rsi	       519	describe.c	FUNCTION_15
0x40010d1	          0x4989d5	                            mov r13, rdx	       519	describe.c	FUNCTION_15
0x40010d4	    0x64488b042528	                mov rax, qword fs:[0x28]	       519	describe.c	FUNCTION_15
0x40010dd	    0x48898424e80c	            mov qword [rsp + 0xce8], rax	       519	describe.c	FUNCTION_15
0x40010e5	            0x31c0	                            xor eax, eax	       519	describe.c	FUNCTION_15
0x40010e7	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       520	describe.c	FUNCTION_15
0x40010ef	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       521	describe.c	FUNCTION_15
0x40010f4	      0xb978000000	                           mov ecx, 0x78	       521	describe.c	FUNCTION_15
0x40010f9	          0xf348ab	              rep stosq qword [rdi], rax	       521	describe.c	FUNCTION_15
0x40010fc	    0xc74424700700	               mov dword [rsp + 0x70], 7	       521	describe.c	FUNCTION_15
0x4001104	    0x48c744247800	               mov qword [rsp + 0x78], 0	       521	describe.c	FUNCTION_15
0x400110d	      0x488d44240c	                    lea rax, [rsp + 0xc]	       521	describe.c	FUNCTION_15
0x4001112	    0x488984248000	             mov qword [rsp + 0x80], rax	       521	describe.c	FUNCTION_15
0x400111a	    0x48c784249000	               mov qword [rsp + 0x90], 0	       521	describe.c	FUNCTION_15
0x4001126	    0xc78424980000	               mov dword [rsp + 0x98], 2	       521	describe.c	FUNCTION_15
0x4001131	    0x48c78424a800	               mov qword [rsp + 0xa8], 1	       521	describe.c	FUNCTION_15
0x400113d	    0xc78424b00000	               mov dword [rsp + 0xb0], 7	       521	describe.c	FUNCTION_15
0x4001148	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	       521	describe.c	FUNCTION_15
0x4001154	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	       521	describe.c	FUNCTION_15
0x4001160	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	       521	describe.c	FUNCTION_15
0x400116c	    0xc78424d80000	               mov dword [rsp + 0xd8], 2	       521	describe.c	FUNCTION_15
0x4001177	    0x48c78424e800	               mov qword [rsp + 0xe8], 1	       521	describe.c	FUNCTION_15
0x4001183	    0xc78424f00000	               mov dword [rsp + 0xf0], 7	       521	describe.c	FUNCTION_15
0x400118e	    0x48c78424f800	               mov qword [rsp + 0xf8], 0	       521	describe.c	FUNCTION_15
0x400119a	    0x48c784240001	              mov qword [rsp + 0x100], 0	       521	describe.c	FUNCTION_15
0x40011a6	    0x48c784241001	              mov qword [rsp + 0x110], 0	       521	describe.c	FUNCTION_15
0x40011b2	    0xc78424180100	              mov dword [rsp + 0x118], 2	       521	describe.c	FUNCTION_15
0x40011bd	    0x48c784242801	              mov qword [rsp + 0x128], 1	       521	describe.c	FUNCTION_15
0x40011c9	    0xc78424300100	              mov dword [rsp + 0x130], 7	       521	describe.c	FUNCTION_15
0x40011d4	    0x48c784243801	              mov qword [rsp + 0x138], 0	       521	describe.c	FUNCTION_15
0x40011e0	    0x48c784244001	              mov qword [rsp + 0x140], 0	       521	describe.c	FUNCTION_15
0x40011ec	    0x48c784245001	              mov qword [rsp + 0x150], 0	       521	describe.c	FUNCTION_15
0x40011f8	    0xc78424580100	              mov dword [rsp + 0x158], 2	       521	describe.c	FUNCTION_15
0x4001203	    0x48c784246801	              mov qword [rsp + 0x168], 1	       521	describe.c	FUNCTION_15
0x400120f	    0xc78424700100	              mov dword [rsp + 0x170], 7	       521	describe.c	FUNCTION_15
0x400121a	    0x48c784247801	              mov qword [rsp + 0x178], 0	       521	describe.c	FUNCTION_15
0x4001226	    0x48c784248001	              mov qword [rsp + 0x180], 0	       521	describe.c	FUNCTION_15
0x4001232	    0x48c784249001	              mov qword [rsp + 0x190], 0	       521	describe.c	FUNCTION_15
0x400123e	    0xc78424980100	              mov dword [rsp + 0x198], 2	       521	describe.c	FUNCTION_15
0x4001249	    0x48c78424a801	              mov qword [rsp + 0x1a8], 1	       521	describe.c	FUNCTION_15
0x4001255	    0xc78424b00100	              mov dword [rsp + 0x1b0], 7	       521	describe.c	FUNCTION_15
0x4001260	    0x48c78424b801	              mov qword [rsp + 0x1b8], 0	       521	describe.c	FUNCTION_15
0x400126c	    0x48c78424c001	              mov qword [rsp + 0x1c0], 0	       521	describe.c	FUNCTION_15
0x4001278	    0x48c78424d001	              mov qword [rsp + 0x1d0], 0	       521	describe.c	FUNCTION_15
0x4001284	    0xc78424d80100	              mov dword [rsp + 0x1d8], 2	       521	describe.c	FUNCTION_15
0x400128f	    0x48c78424e801	              mov qword [rsp + 0x1e8], 1	       521	describe.c	FUNCTION_15
0x400129b	    0xc78424f00100	           mov dword [rsp + 0x1f0], 0xc 	       521	describe.c	FUNCTION_15
0x40012a6	    0x48c78424f801	              mov qword [rsp + 0x1f8], 0	       521	describe.c	FUNCTION_15
0x40012b2	    0x48c784240002	              mov qword [rsp + 0x200], 0	       521	describe.c	FUNCTION_15
0x40012be	    0x48c784240802	              mov qword [rsp + 0x208], 0	       521	describe.c	FUNCTION_15
0x40012ca	    0x48c784241002	              mov qword [rsp + 0x210], 0	       521	describe.c	FUNCTION_15
0x40012d6	    0xc78424180200	              mov dword [rsp + 0x218], 1	       521	describe.c	FUNCTION_15
0x40012e1	    0x48c784242002	              mov qword [rsp + 0x220], 0	       521	describe.c	FUNCTION_15
0x40012ed	    0xc78424300200	              mov dword [rsp + 0x230], 7	       521	describe.c	FUNCTION_15
0x40012f8	    0x48c784243802	              mov qword [rsp + 0x238], 0	       521	describe.c	FUNCTION_15
0x4001304	    0x48c784244002	              mov qword [rsp + 0x240], 0	       521	describe.c	FUNCTION_15
0x4001310	    0x48c784245002	              mov qword [rsp + 0x250], 0	       521	describe.c	FUNCTION_15
0x400131c	    0xc78424580200	              mov dword [rsp + 0x258], 2	       521	describe.c	FUNCTION_15
0x4001327	    0xc78424700200	            mov dword [rsp + 0x270], 0xa	       521	describe.c	FUNCTION_15
0x4001332	    0x48c784247802	              mov qword [rsp + 0x278], 0	       521	describe.c	FUNCTION_15
0x400133e	    0x48c784248002	              mov qword [rsp + 0x280], 0	       521	describe.c	FUNCTION_15
0x400134a	    0x48c784248802	              mov qword [rsp + 0x288], 0	       521	describe.c	FUNCTION_15
0x4001356	    0x48c784249002	              mov qword [rsp + 0x290], 0	       521	describe.c	FUNCTION_15
0x4001362	    0xc78424b00200	           mov dword [rsp + 0x2b0], 0xc 	       521	describe.c	FUNCTION_15
0x400136d	    0x48c78424b802	              mov qword [rsp + 0x2b8], 0	       521	describe.c	FUNCTION_15
0x4001379	    0x48c78424c002	              mov qword [rsp + 0x2c0], 0	       521	describe.c	FUNCTION_15
0x4001385	    0x48c78424c802	              mov qword [rsp + 0x2c8], 0	       521	describe.c	FUNCTION_15
0x4001391	    0x48c78424d002	              mov qword [rsp + 0x2d0], 0	       521	describe.c	FUNCTION_15
0x400139d	    0x48c78424e002	              mov qword [rsp + 0x2e0], 0	       521	describe.c	FUNCTION_15
0x40013a9	    0xc78424f00200	           mov dword [rsp + 0x2f0], 0xc 	       521	describe.c	FUNCTION_15
0x40013b4	    0x48c78424f802	              mov qword [rsp + 0x2f8], 0	       521	describe.c	FUNCTION_15
0x40013c0	    0x48c784240003	              mov qword [rsp + 0x300], 0	       521	describe.c	FUNCTION_15
0x40013cc	    0x48c784240803	              mov qword [rsp + 0x308], 0	       521	describe.c	FUNCTION_15
0x40013d8	    0x48c784241003	              mov qword [rsp + 0x310], 0	       521	describe.c	FUNCTION_15
0x40013e4	    0x48c784242003	              mov qword [rsp + 0x320], 0	       521	describe.c	FUNCTION_15
0x40013f0	    0xc78424300300	              mov dword [rsp + 0x330], 7	       521	describe.c	FUNCTION_15
0x40013fb	    0x48c784243803	              mov qword [rsp + 0x338], 0	       521	describe.c	FUNCTION_15
0x4001407	    0x48c784244003	              mov qword [rsp + 0x340], 0	       521	describe.c	FUNCTION_15
0x4001413	    0x48c784245003	              mov qword [rsp + 0x350], 0	       521	describe.c	FUNCTION_15
0x400141f	    0xc78424580300	              mov dword [rsp + 0x358], 2	       521	describe.c	FUNCTION_15
0x400142a	    0x48c784246803	              mov qword [rsp + 0x368], 1	       521	describe.c	FUNCTION_15
0x4001436	    0xc78424700300	              mov dword [rsp + 0x370], 9	       521	describe.c	FUNCTION_15
0x4001441	    0x48c784247803	              mov qword [rsp + 0x378], 0	       521	describe.c	FUNCTION_15
0x400144d	    0x48c784248003	              mov qword [rsp + 0x380], 0	       521	describe.c	FUNCTION_15
0x4001459	    0x48c784248803	              mov qword [rsp + 0x388], 0	       521	describe.c	FUNCTION_15
0x4001465	    0x48c784249003	              mov qword [rsp + 0x390], 0	       521	describe.c	FUNCTION_15
0x4001471	    0xc78424980300	              mov dword [rsp + 0x398], 1	       521	describe.c	FUNCTION_15
0x400147c	    0x48c78424a803	              mov qword [rsp + 0x3a8], 0	       521	describe.c	FUNCTION_15
0x4001488	    0xc78424b00300	              mov dword [rsp + 0x3b0], 9	       521	describe.c	FUNCTION_15
0x4001493	    0x48c78424b803	              mov qword [rsp + 0x3b8], 0	       521	describe.c	FUNCTION_15
0x400149f	    0x48c78424c003	              mov qword [rsp + 0x3c0], 0	       521	describe.c	FUNCTION_15
0x40014ab	    0x48c78424c803	              mov qword [rsp + 0x3c8], 0	       521	describe.c	FUNCTION_15
0x40014b7	    0x48c78424d003	              mov qword [rsp + 0x3d0], 0	       521	describe.c	FUNCTION_15
0x40014c3	    0xc78424d80300	              mov dword [rsp + 0x3d8], 1	       521	describe.c	FUNCTION_15
0x40014ce	    0x48c78424e803	              mov qword [rsp + 0x3e8], 0	       521	describe.c	FUNCTION_15
0x40014da	      0xbe00000000	                              mov esi, 0	       548	describe.c	FUNCTION_15	CALL_31
0x40014df	      0xbf00000000	                              mov edi, 0	       548	describe.c	FUNCTION_15	CALL_31
0x40014e4	      0xe800000000	                          call 0x40014e9	       548	describe.c	FUNCTION_15	CALL_31
0x40014e9	    0x41b900000000	                              mov r9d, 0	       549	describe.c	FUNCTION_15	CALL_32
0x40014ef	    0x41b800000000	                              mov r8d, 0	       549	describe.c	FUNCTION_15	CALL_32
0x40014f5	      0x488d4c2470	                   lea rcx, [rsp + 0x70]	       549	describe.c	FUNCTION_15	CALL_32
0x40014fa	          0x4c89ea	                            mov rdx, r13	       549	describe.c	FUNCTION_15	CALL_32
0x40014fd	          0x4889ee	                            mov rsi, rbp	       549	describe.c	FUNCTION_15	CALL_32
0x4001500	            0x89df	                            mov edi, ebx	       549	describe.c	FUNCTION_15	CALL_32
0x4001502	      0xe800000000	                          call 0x4001507	       549	describe.c	FUNCTION_15	CALL_32
0x4001507	          0x4189c4	                           mov r12d, eax	       549	describe.c	FUNCTION_15	CALL_32
0x400150a	    0x833d00000000	               cmp dword [0x04001511], 0	       550	describe.c	FUNCTION_15	IF_1
0x4001511	            0x790c	                           jns 0x400151f	       550	describe.c	FUNCTION_15	IF_1
0x4001513	    0x8b0500000000	            mov eax, dword [0x04001519] 	       551	describe.c	FUNCTION_15	IF_1
0x4001519	    0x890500000000	            mov dword [0x0400151f], eax 	       551	describe.c	FUNCTION_15	IF_1
0x400151f	    0x8b0500000000	            mov eax, dword [0x04001525] 	       553	describe.c	FUNCTION_15	IF_2
0x4001525	            0x85c0	                           test eax, eax	       553	describe.c	FUNCTION_15	IF_2
0x4001527	            0x790c	                           jns 0x4001535	       553	describe.c	FUNCTION_15	IF_2
0x4001529	    0xc70500000000	               mov dword [0x04001533], 0	       554	describe.c	FUNCTION_15	IF_2
0x4001533	            0xeb0f	                           jmp 0x4001544	       554	describe.c	FUNCTION_15	IF_2
0x4001535	          0x83f81a	                           cmp eax, 0x1a	       555	describe.c	FUNCTION_15	ELSE_1	IF_3
0x4001538	            0x7e0a	                           jle 0x4001544	       555	describe.c	FUNCTION_15	ELSE_1	IF_3
0x400153a	    0xc70500000000	           mov dword [0x04001544], 0x1a 	       556	describe.c	FUNCTION_15	ELSE_1	IF_3
0x4001544	    0xc70500000000	               mov dword [0x0400154e], 0	       558	describe.c	FUNCTION_15
0x400154e	    0x833d00000000	               cmp dword [0x04001555], 0	       560	describe.c	FUNCTION_15	IF_4
0x4001555	            0x742a	                            je 0x4001581	       560	describe.c	FUNCTION_15	IF_4
0x4001557	    0x833d00000000	               cmp dword [0x0400155e], 0	       560	describe.c	FUNCTION_15	IF_4
0x400155e	            0x7521	                           jne 0x4001581	       560	describe.c	FUNCTION_15	IF_4
0x4001560	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x4001565	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x400156a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x400156f	      0xe800000000	                          call 0x4001574	        54	gettext.h	FUNCTION_103	CALL_2
0x4001574	          0x4889c7	                            mov rdi, rax	       561	describe.c	FUNCTION_15	CALL_34
0x4001577	      0xb800000000	                              mov eax, 0	       561	describe.c	FUNCTION_15	CALL_34
0x400157c	      0xe800000000	                          call 0x4001581	       561	describe.c	FUNCTION_15	CALL_34
0x4001581	      0x448b74240c	            mov r14d, dword [rsp + 0xc] 	       563	describe.c	FUNCTION_15	IF_5
0x4001586	          0x4585f6	                         test r14d, r14d	       563	describe.c	FUNCTION_15	IF_5
0x4001589	     0xf8446010000	                            je 0x40016d5	       563	describe.c	FUNCTION_15	IF_5
0x400158f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       567	describe.c	FUNCTION_15	IF_5	CALL_35
0x4001594	      0xe800000000	                          call 0x4001599	       567	describe.c	FUNCTION_15	IF_5	CALL_35
0x4001599	    0x41b900000000	                              mov r9d, 0	       568	describe.c	FUNCTION_15	IF_5	CALL_36
0x400159f	    0x41b800000000	                              mov r8d, 0	       568	describe.c	FUNCTION_15	IF_5	CALL_36
0x40015a5	      0xb900000000	                              mov ecx, 0	       568	describe.c	FUNCTION_15	IF_5	CALL_36
0x40015aa	      0xba00000000	                              mov edx, 0	       568	describe.c	FUNCTION_15	IF_5	CALL_36
0x40015af	      0xbe00000000	                              mov esi, 0	       568	describe.c	FUNCTION_15	IF_5	CALL_36
0x40015b4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       568	describe.c	FUNCTION_15	IF_5	CALL_36
0x40015b9	      0xb800000000	                              mov eax, 0	       568	describe.c	FUNCTION_15	IF_5	CALL_36
0x40015be	      0xe800000000	                          call 0x40015c3	       568	describe.c	FUNCTION_15	IF_5	CALL_36
0x40015c3	    0x833d00000000	               cmp dword [0x040015ca], 0	       571	describe.c	FUNCTION_15	IF_5	IF_6
0x40015ca	            0x740f	                            je 0x40015db	       571	describe.c	FUNCTION_15	IF_5	IF_6
0x40015cc	      0xbe00000000	                              mov esi, 0	       572	describe.c	FUNCTION_15	IF_5	CALL_37
0x40015d1	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       572	describe.c	FUNCTION_15	IF_5	CALL_37
0x40015d6	      0xe800000000	                          call 0x40015db	       572	describe.c	FUNCTION_15	IF_5	CALL_37
0x40015db	    0x833d00000000	               cmp dword [0x040015e2], 0	       573	describe.c	FUNCTION_15	IF_5	IF_7
0x40015e2	     0xf85b1000000	                           jne 0x4001699	       573	describe.c	FUNCTION_15	IF_5	IF_7
0x40015e8	      0xbe00000000	                              mov esi, 0	       574	describe.c	FUNCTION_15	IF_5	IF_7	CALL_38
0x40015ed	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       574	describe.c	FUNCTION_15	IF_5	IF_7	CALL_38
0x40015f2	      0xe800000000	                          call 0x40015f7	       574	describe.c	FUNCTION_15	IF_5	IF_7	CALL_38
0x40015f7	    0x488b1d000000	            mov rbx, qword [0x040015fe] 	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_39
0x40015fe	          0x4885db	                           test rbx, rbx	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_39
0x4001601	            0x7445	                            je 0x4001648	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_39
0x4001603	    0x8b0500000000	            mov eax, dword [0x04001609] 	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_39
0x4001609	        0x48c1e004	                              shl rax, 4	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_39
0x400160d	          0x4801d8	                            add rax, rbx	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_39
0x4001610	          0x4839c3	                            cmp rbx, rax	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_39
0x4001613	            0x7333	                           jae 0x4001648	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_39
0x4001615	          0x488b13	                    mov rdx, qword [rbx]	       576	describe.c	FUNCTION_15	IF_5	IF_7	CALL_40
0x4001618	      0xbe00000000	                              mov esi, 0	       576	describe.c	FUNCTION_15	IF_5	IF_7	CALL_40
0x400161d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       576	describe.c	FUNCTION_15	IF_5	IF_7	CALL_40
0x4001622	      0xb800000000	                              mov eax, 0	       576	describe.c	FUNCTION_15	IF_5	IF_7	CALL_40
0x4001627	      0xe800000000	                          call 0x400162c	       576	describe.c	FUNCTION_15	IF_5	IF_7	CALL_40
0x400162c	        0x4883c310	                           add rbx, 0x10	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_39
0x4001630	            0x7416	                            je 0x4001648	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_39
0x4001632	    0x8b0500000000	            mov eax, dword [0x04001638] 	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_39
0x4001638	        0x48c1e004	                              shl rax, 4	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_39
0x400163c	    0x480305000000	             add rax, qword [0x04001643]	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_39
0x4001643	          0x4839c3	                            cmp rbx, rax	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_39
0x4001646	            0x72cd	                            jb 0x4001615	       575	describe.c	FUNCTION_15	IF_5	IF_7	CALL_39
0x4001648	    0x488b1d000000	            mov rbx, qword [0x0400164f] 	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_41
0x400164f	          0x4885db	                           test rbx, rbx	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_41
0x4001652	            0x7445	                            je 0x4001699	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_41
0x4001654	    0x8b0500000000	            mov eax, dword [0x0400165a] 	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_41
0x400165a	        0x48c1e004	                              shl rax, 4	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_41
0x400165e	          0x4801d8	                            add rax, rbx	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_41
0x4001661	          0x4839c3	                            cmp rbx, rax	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_41
0x4001664	            0x7333	                           jae 0x4001699	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_41
0x4001666	          0x488b13	                    mov rdx, qword [rbx]	       578	describe.c	FUNCTION_15	IF_5	IF_7	CALL_42
0x4001669	      0xbe00000000	                              mov esi, 0	       578	describe.c	FUNCTION_15	IF_5	IF_7	CALL_42
0x400166e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       578	describe.c	FUNCTION_15	IF_5	IF_7	CALL_42
0x4001673	      0xb800000000	                              mov eax, 0	       578	describe.c	FUNCTION_15	IF_5	IF_7	CALL_42
0x4001678	      0xe800000000	                          call 0x400167d	       578	describe.c	FUNCTION_15	IF_5	IF_7	CALL_42
0x400167d	        0x4883c310	                           add rbx, 0x10	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_41
0x4001681	            0x7416	                            je 0x4001699	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_41
0x4001683	    0x8b0500000000	            mov eax, dword [0x04001689] 	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_41
0x4001689	        0x48c1e004	                              shl rax, 4	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_41
0x400168d	    0x480305000000	             add rax, qword [0x04001694]	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_41
0x4001694	          0x4839c3	                            cmp rbx, rax	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_41
0x4001697	            0x72cd	                            jb 0x4001666	       577	describe.c	FUNCTION_15	IF_5	IF_7	CALL_41
0x4001699	          0x4585e4	                         test r12d, r12d	       580	describe.c	FUNCTION_15	IF_5	IF_8
0x400169c	            0x740f	                            je 0x40016ad	       580	describe.c	FUNCTION_15	IF_5	IF_8
0x400169e	          0x4889ee	                            mov rsi, rbp	       581	describe.c	FUNCTION_15	IF_5	CALL_43
0x40016a1	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       581	describe.c	FUNCTION_15	IF_5	CALL_43
0x40016a6	      0xe800000000	                          call 0x40016ab	       581	describe.c	FUNCTION_15	IF_5	CALL_43
0x40016ab	            0xeb0f	                           jmp 0x40016bc	       581	describe.c	FUNCTION_15	IF_5	CALL_43
0x40016ad	      0xbe00000000	                              mov esi, 0	       583	describe.c	FUNCTION_15	IF_5	CALL_44
0x40016b2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       583	describe.c	FUNCTION_15	IF_5	CALL_44
0x40016b7	      0xe800000000	                          call 0x40016bc	       583	describe.c	FUNCTION_15	IF_5	CALL_44
0x40016bc	          0x4c89ea	                            mov rdx, r13	       584	describe.c	FUNCTION_15	IF_5	CALL_45
0x40016bf	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       584	describe.c	FUNCTION_15	IF_5	CALL_45
0x40016c4	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	       584	describe.c	FUNCTION_15	IF_5	CALL_45
0x40016c8	      0xe800000000	                          call 0x40016cd	       584	describe.c	FUNCTION_15	IF_5	CALL_45
0x40016cd	          0x4189c6	                           mov r14d, eax	       584	describe.c	FUNCTION_15	IF_5	CALL_45
0x40016d0	      0xe9d2020000	                           jmp 0x40019a7	       584	describe.c	FUNCTION_15	IF_5	CALL_45
0x40016d5	      0xb900000000	                              mov ecx, 0	       587	describe.c	FUNCTION_15	CALL_46
0x40016da	      0xba00000000	                              mov edx, 0	       587	describe.c	FUNCTION_15	CALL_46
0x40016df	      0xbe00000000	                              mov esi, 0	       587	describe.c	FUNCTION_15	CALL_46
0x40016e4	      0xbf00000000	                              mov edi, 0	       587	describe.c	FUNCTION_15	CALL_46
0x40016e9	      0xe800000000	                          call 0x40016ee	       587	describe.c	FUNCTION_15	CALL_46
0x40016ee	      0xbe00000000	                              mov esi, 0	       588	describe.c	FUNCTION_15	CALL_47
0x40016f3	      0xbf00000000	                              mov edi, 0	       588	describe.c	FUNCTION_15	CALL_47
0x40016f8	      0xe800000000	                          call 0x40016fd	       588	describe.c	FUNCTION_15	CALL_47
0x40016fd	    0xf60500000000	               test byte [0x04001704], 1	       257	hashmap.h	FUNCTION_84	IF_1
0x4001704	            0x740b	                            je 0x4001711	       257	hashmap.h	FUNCTION_84	IF_1
0x4001706	    0x833d00000000	               cmp dword [0x0400170d], 0	       589	describe.c	FUNCTION_15	IF_9	CALL_48
0x400170d	            0x741b	                            je 0x400172a	       589	describe.c	FUNCTION_15	IF_9	CALL_48
0x400170f	            0xeb43	                           jmp 0x4001754	       589	describe.c	FUNCTION_15	IF_9	CALL_48
0x4001711	      0xba00000000	                              mov edx, 0	       260	hashmap.h	FUNCTION_84	CALL_1
0x4001716	      0xbe04010000	                          mov esi, 0x104	       260	hashmap.h	FUNCTION_84	CALL_1
0x400171b	      0xbf00000000	                              mov edi, 0	       260	hashmap.h	FUNCTION_84	CALL_1
0x4001720	      0xb800000000	                              mov eax, 0	       260	hashmap.h	FUNCTION_84	CALL_1
0x4001725	      0xe800000000	                          call 0x400172a	       260	hashmap.h	FUNCTION_84	CALL_1
0x400172a	    0x833d00000000	               cmp dword [0x04001731], 0	       589	describe.c	FUNCTION_15	IF_9	CALL_48
0x4001731	            0x7521	                           jne 0x4001754	       589	describe.c	FUNCTION_15	IF_9	CALL_48
0x4001733	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x4001738	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x400173d	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4001742	      0xe800000000	                          call 0x4001747	        54	gettext.h	FUNCTION_103	CALL_2
0x4001747	          0x4889c7	                            mov rdi, rax	       590	describe.c	FUNCTION_15	CALL_50
0x400174a	      0xb800000000	                              mov eax, 0	       590	describe.c	FUNCTION_15	CALL_50
0x400174f	      0xe800000000	                          call 0x4001754	       590	describe.c	FUNCTION_15	CALL_50
0x4001754	          0x4585e4	                         test r12d, r12d	       592	describe.c	FUNCTION_15	IF_10
0x4001757	     0xf85c9010000	                           jne 0x4001926	       592	describe.c	FUNCTION_15	IF_10
0x400175d	    0x48833d000000	               cmp qword [0x04001765], 0	       593	describe.c	FUNCTION_15	IF_10	IF_11
0x4001765	     0xf8498000000	                            je 0x4001803	       593	describe.c	FUNCTION_15	IF_10	IF_11
0x400176b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       594	describe.c	FUNCTION_15	IF_10	IF_11
0x4001770	      0xb90c000000	                            mov ecx, 0xc	       594	describe.c	FUNCTION_15	IF_10	IF_11
0x4001775	      0xb800000000	                              mov eax, 0	       594	describe.c	FUNCTION_15	IF_10	IF_11
0x400177a	          0xf348ab	              rep stosq qword [rdi], rax	       594	describe.c	FUNCTION_15	IF_10	IF_11
0x400177d	    0x48c744241800	               mov qword [rsp + 0x18], 0	       594	describe.c	FUNCTION_15	IF_10	IF_11
0x4001786	    0x48c744242800	               mov qword [rsp + 0x28], 0	       594	describe.c	FUNCTION_15	IF_10	IF_11
0x400178f	      0xbe00000000	                              mov esi, 0	       595	describe.c	FUNCTION_15	IF_10	IF_11	CALL_51
0x4001794	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	       595	describe.c	FUNCTION_15	IF_10	IF_11	CALL_51
0x4001799	      0xe800000000	                          call 0x400179e	       595	describe.c	FUNCTION_15	IF_10	IF_11	CALL_51
0x400179e	      0x804c24580b	               or byte [rsp + 0x58], 0xb	       598	describe.c	FUNCTION_15	IF_10	IF_11
0x40017a3	    0x48833d000000	               cmp qword [0x040017ab], 0	       600	describe.c	FUNCTION_15	IF_10	IF_11	IF_12
0x40017ab	            0x750b	                           jne 0x40017b8	       600	describe.c	FUNCTION_15	IF_10	IF_11	IF_12
0x40017ad	    0x48c705000000	               mov qword [0x040017b8], 0	       601	describe.c	FUNCTION_15	IF_10	IF_11	IF_12
0x40017b8	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       603	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1	CALL_52
0x40017bd	      0xe800000000	                          call 0x40017c2	       603	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1	CALL_52
0x40017c2	            0x85c0	                           test eax, eax	       603	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1	CALL_52
0x40017c4	            0x7407	                            je 0x40017cd	       603	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1	CALL_52
0x40017c6	          0x83f801	                              cmp eax, 1	       603	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1	CALL_52
0x40017c9	            0x7412	                            je 0x40017dd	       603	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1	CALL_52
0x40017cb	            0xeb23	                           jmp 0x40017f0	       603	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1	CALL_52
0x40017cd	    0x48c705000000	               mov qword [0x040017d8], 0	       605	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1
0x40017d8	      0xe935010000	                           jmp 0x4001912	       606	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1
0x40017dd	    0x488b05000000	            mov rax, qword [0x040017e4] 	       608	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1
0x40017e4	    0x488905000000	            mov qword [0x040017eb], rax 	       608	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1
0x40017eb	      0xe922010000	                           jmp 0x4001912	       609	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1
0x40017f0	    0x488b05000000	            mov rax, qword [0x040017f7] 	       612	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1
0x40017f7	    0x488905000000	            mov qword [0x040017fe], rax 	       612	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1
0x40017fe	      0xe90f010000	                           jmp 0x4001912	       612	describe.c	FUNCTION_15	IF_10	IF_11	SWITCH_1
0x4001803	    0x48833d000000	               cmp qword [0x0400180b], 0	       614	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13
0x400180b	     0xf8401010000	                            je 0x4001912	       614	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13
0x4001811	    0x48c744241000	               mov qword [rsp + 0x10], 0	       617	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13
0x400181a	    0xc74424180000	               mov dword [rsp + 0x18], 0	       617	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13
0x4001822	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       617	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13
0x400182a	      0xbe00000000	                              mov esi, 0	       620	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_53
0x400182f	      0xbf00000000	                              mov edi, 0	       620	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_53
0x4001834	      0xe800000000	                          call 0x4001839	       620	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_53
0x4001839	    0x41b800000000	                              mov r8d, 0	       621	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_54
0x400183f	      0xb900000000	                              mov ecx, 0	       621	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_54
0x4001844	      0xba00000000	                              mov edx, 0	       621	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_54
0x4001849	      0xbe06000000	                              mov esi, 6	       621	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_54
0x400184e	      0xbf00000000	                              mov edi, 0	       621	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_54
0x4001853	      0xe800000000	                          call 0x4001858	       621	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_54
0x4001858	      0xbe00000000	                              mov esi, 0	       623	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_55
0x400185d	      0xbf00000000	                              mov edi, 0	       623	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_55
0x4001862	      0xe800000000	                          call 0x4001867	       623	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_55
0x4001867	            0x85c0	                           test eax, eax	       624	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_14
0x4001869	            0x780f	                            js 0x400187a	       624	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_14
0x400186b	      0xbe00000000	                              mov esi, 0	       625	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_56
0x4001870	      0xbf00000000	                              mov edi, 0	       625	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_56
0x4001875	      0xe800000000	                          call 0x400187a	       625	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_56
0x400187a	          0x4c89ee	                            mov rsi, r13	       627	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_57
0x400187d	    0x488dbc243004	                  lea rdi, [rsp + 0x430]	       627	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_57
0x4001885	      0xe800000000	                          call 0x400188a	       627	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_57
0x400188a	      0xbe00000000	                              mov esi, 0	       628	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_58
0x400188f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       628	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_58
0x4001894	      0xe800000000	                          call 0x4001899	       628	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_58
0x4001899	      0xb900000000	                              mov ecx, 0	       629	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15	CALL_59
0x400189e	    0x488d94243004	                  lea rdx, [rsp + 0x430]	       629	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15	CALL_59
0x40018a6	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       629	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15	CALL_59
0x40018ab	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	       629	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15	CALL_59
0x40018af	      0xe800000000	                          call 0x40018b4	       629	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15	CALL_59
0x40018b4	          0x83f801	                              cmp eax, 1	       629	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15	CALL_59
0x40018b7	            0x7419	                            je 0x40018d2	       629	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_15	CALL_59
0x40018b9	      0xba00000000	                              mov edx, 0	       630	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_60
0x40018be	      0xbe76020000	                          mov esi, 0x276	       630	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_60
0x40018c3	      0xbf00000000	                              mov edi, 0	       630	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_60
0x40018c8	      0xb800000000	                              mov eax, 0	       630	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_60
0x40018cd	      0xe800000000	                          call 0x40018d2	       630	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_60
0x40018d2	      0xbe00000000	                              mov esi, 0	       631	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_61
0x40018d7	    0x488dbc243004	                  lea rdi, [rsp + 0x430]	       631	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_61
0x40018df	      0xe800000000	                          call 0x40018e4	       631	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	CALL_61
0x40018e4	    0x488dbc242809	                  lea rdi, [rsp + 0x928]	       633	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_16	CALL_62
0x40018ec	            0x89c6	                            mov esi, eax	       633	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_16	CALL_62
0x40018ee	      0xe800000000	                          call 0x40018f3	       633	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_16	CALL_62
0x40018f3	            0x85c0	                           test eax, eax	       633	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_16	CALL_62
0x40018f5	            0x750d	                           jne 0x4001904	       633	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_16	CALL_62
0x40018f7	    0x48c705000000	               mov qword [0x04001902], 0	       634	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_16
0x4001902	            0xeb0e	                           jmp 0x4001912	       634	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	IF_16
0x4001904	    0x488b05000000	            mov rax, qword [0x0400190b] 	       636	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	ELSE_4
0x400190b	    0x488905000000	            mov qword [0x04001912], rax 	       636	describe.c	FUNCTION_15	IF_10	ELSE_3	IF_13	ELSE_4
0x4001912	      0xbe01000000	                              mov esi, 1	       638	describe.c	FUNCTION_15	IF_10	CALL_63
0x4001917	      0xbf00000000	                              mov edi, 0	       638	describe.c	FUNCTION_15	IF_10	CALL_63
0x400191c	      0xe8aef5ffff	                       call sym.describe	       638	describe.c	FUNCTION_15	IF_10	CALL_63
0x4001921	      0xe981000000	                           jmp 0x40019a7	       638	describe.c	FUNCTION_15	IF_10	CALL_63
0x4001926	    0x48833d000000	               cmp qword [0x0400192e], 0	       639	describe.c	FUNCTION_15	ELSE_5	IF_17
0x400192e	            0x7421	                            je 0x4001951	       639	describe.c	FUNCTION_15	ELSE_5	IF_17
0x4001930	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x4001935	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x400193a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x400193f	      0xe800000000	                          call 0x4001944	        54	gettext.h	FUNCTION_103	CALL_2
0x4001944	          0x4889c7	                            mov rdi, rax	       640	describe.c	FUNCTION_15	ELSE_5	IF_17	CALL_65
0x4001947	      0xb800000000	                              mov eax, 0	       640	describe.c	FUNCTION_15	ELSE_5	IF_17	CALL_65
0x400194c	      0xe800000000	                          call 0x4001951	       640	describe.c	FUNCTION_15	ELSE_5	IF_17	CALL_65
0x4001951	    0x48833d000000	               cmp qword [0x04001959], 0	       641	describe.c	FUNCTION_15	ELSE_6	IF_18
0x4001959	            0x750c	                           jne 0x4001967	       641	describe.c	FUNCTION_15	ELSE_6	IF_18
0x400195b	      0x418d5c24ff	                      lea ebx, [r12 - 1]	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x4001960	          0x4585e4	                         test r12d, r12d	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x4001963	            0x7f23	                            jg 0x4001988	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x4001965	            0xeb40	                           jmp 0x40019a7	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x4001967	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x400196c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4001971	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4001976	      0xe800000000	                          call 0x400197b	        54	gettext.h	FUNCTION_103	CALL_2
0x400197b	          0x4889c7	                            mov rdi, rax	       642	describe.c	FUNCTION_15	ELSE_6	IF_18	CALL_67
0x400197e	      0xb800000000	                              mov eax, 0	       642	describe.c	FUNCTION_15	ELSE_6	IF_18	CALL_67
0x4001983	      0xe800000000	                          call 0x4001988	       642	describe.c	FUNCTION_15	ELSE_6	IF_18	CALL_67
0x4001988	        0x4883c508	                              add rbp, 8	       645	describe.c	FUNCTION_15	ELSE_7	CALL_68
0x400198c	            0x85db	                           test ebx, ebx	       645	describe.c	FUNCTION_15	ELSE_7	CALL_68
0x400198e	        0x400f94c6	                                sete sil	       645	describe.c	FUNCTION_15	ELSE_7	CALL_68
0x4001992	        0x400fb6f6	                          movzx esi, sil	       645	describe.c	FUNCTION_15	ELSE_7	CALL_68
0x4001996	        0x488b7df8	                mov rdi, qword [rbp - 8]	       645	describe.c	FUNCTION_15	ELSE_7	CALL_68
0x400199a	      0xe830f5ffff	                       call sym.describe	       645	describe.c	FUNCTION_15	ELSE_7	CALL_68
0x400199f	          0x83eb01	                              sub ebx, 1	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x40019a2	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x40019a5	            0x75e1	                           jne 0x4001988	       644	describe.c	FUNCTION_15	ELSE_7	WHILE_1
0x40019a7	          0x4489f0	                           mov eax, r14d	       648	describe.c	FUNCTION_15
0x40019aa	    0x488b8c24e80c	           mov rcx, qword [rsp + 0xce8] 	       648	describe.c	FUNCTION_15
0x40019b2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       648	describe.c	FUNCTION_15
0x40019bb	            0x7405	                            je 0x40019c2	       648	describe.c	FUNCTION_15
0x40019bd	      0xe800000000	                          call 0x40019c2	       648	describe.c	FUNCTION_15
0x40019c2	    0x4881c4f00c00	                          add rsp, 0xcf0	       648	describe.c	FUNCTION_15
0x40019c9	              0x5b	                                 pop rbx	       648	describe.c	FUNCTION_15
0x40019ca	              0x5d	                                 pop rbp	       648	describe.c	FUNCTION_15
0x40019cb	            0x415c	                                 pop r12	       648	describe.c	FUNCTION_15
0x40019cd	            0x415d	                                 pop r13	       648	describe.c	FUNCTION_15
0x40019cf	            0x415e	                                 pop r14	       648	describe.c	FUNCTION_15
0x40019d1	              0xc3	                                     ret	       648	describe.c	FUNCTION_15
describe	functions,0:IF,5:ELSE,2:DO,0:WHILE,0:SWITCH,0:FOR,0:CALL,14	90
0x4000ecf	            0x4154	                                push r12	       491	describe.c	FUNCTION_14
0x4000ed1	              0x55	                                push rbp	       491	describe.c	FUNCTION_14
0x4000ed2	              0x53	                                push rbx	       491	describe.c	FUNCTION_14
0x4000ed3	        0x4883ec40	                           sub rsp, 0x40	       491	describe.c	FUNCTION_14
0x4000ed7	          0x4889fd	                            mov rbp, rdi	       491	describe.c	FUNCTION_14
0x4000eda	          0x4189f4	                           mov r12d, esi	       491	describe.c	FUNCTION_14
0x4000edd	    0x64488b042528	                mov rax, qword fs:[0x28]	       491	describe.c	FUNCTION_14
0x4000ee6	      0x4889442438	             mov qword [rsp + 0x38], rax	       491	describe.c	FUNCTION_14
0x4000eeb	            0x31c0	                            xor eax, eax	       491	describe.c	FUNCTION_14
0x4000eed	    0x48c704240000	                      mov qword [rsp], 0	       494	describe.c	FUNCTION_14
0x4000ef5	    0x48c744240800	                  mov qword [rsp + 8], 0	       494	describe.c	FUNCTION_14
0x4000efe	    0x48c744241000	               mov qword [rsp + 0x10], 0	       494	describe.c	FUNCTION_14
0x4000f07	    0x833d00000000	               cmp dword [0x04000f0e], 0	       496	describe.c	FUNCTION_14	IF_1
0x4000f0e	            0x7430	                            je 0x4000f40	       496	describe.c	FUNCTION_14	IF_1
0x4000f10	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x4000f15	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000f1a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000f1f	      0xe800000000	                          call 0x4000f24	        54	gettext.h	FUNCTION_103	CALL_2
0x4000f24	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000f27	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000f2a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000f2f	    0x488b3d000000	            mov rdi, qword [0x04000f36] 	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000f36	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000f3b	      0xe800000000	                          call 0x4000f40	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000f40	      0x488d742420	                   lea rsi, [rsp + 0x20]	       499	describe.c	FUNCTION_14	IF_2	CALL_3
0x4000f45	          0x4889ef	                            mov rdi, rbp	       499	describe.c	FUNCTION_14	IF_2	CALL_3
0x4000f48	      0xe800000000	                          call 0x4000f4d	       499	describe.c	FUNCTION_14	IF_2	CALL_3
0x4000f4d	            0x85c0	                           test eax, eax	       499	describe.c	FUNCTION_14	IF_2	CALL_3
0x4000f4f	            0x7424	                            je 0x4000f75	       499	describe.c	FUNCTION_14	IF_2	CALL_3
0x4000f51	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x4000f56	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000f5b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000f60	      0xe800000000	                          call 0x4000f65	        54	gettext.h	FUNCTION_103	CALL_2
0x4000f65	          0x4889ee	                            mov rsi, rbp	       500	describe.c	FUNCTION_14	CALL_5
0x4000f68	          0x4889c7	                            mov rdi, rax	       500	describe.c	FUNCTION_14	CALL_5
0x4000f6b	      0xb800000000	                              mov eax, 0	       500	describe.c	FUNCTION_14	CALL_5
0x4000f70	      0xe800000000	                          call 0x4000f75	       500	describe.c	FUNCTION_14	CALL_5
0x4000f75	      0xbe01000000	                              mov esi, 1	       501	describe.c	FUNCTION_14	CALL_6
0x4000f7a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       501	describe.c	FUNCTION_14	CALL_6
0x4000f7f	      0xe800000000	                          call 0x4000f84	       501	describe.c	FUNCTION_14	CALL_6
0x4000f84	          0x4889c3	                            mov rbx, rax	       501	describe.c	FUNCTION_14	CALL_6
0x4000f87	          0x4885c0	                           test rax, rax	       503	describe.c	FUNCTION_14	IF_3
0x4000f8a	            0x740f	                            je 0x4000f9b	       503	describe.c	FUNCTION_14	IF_3
0x4000f8c	          0x4889e6	                            mov rsi, rsp	       504	describe.c	FUNCTION_14	CALL_7
0x4000f8f	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       504	describe.c	FUNCTION_14	CALL_7
0x4000f94	      0xe843f7ffff	                call sym.describe_commit	       504	describe.c	FUNCTION_14	CALL_7
0x4000f99	            0xeb6e	                           jmp 0x4001009	       504	describe.c	FUNCTION_14	CALL_7
0x4000f9b	      0xba00000000	                              mov edx, 0	       505	describe.c	FUNCTION_14	ELSE_1	IF_4	CALL_8
0x4000fa0	      0x488d742420	                   lea rsi, [rsp + 0x20]	       505	describe.c	FUNCTION_14	ELSE_1	IF_4	CALL_8
0x4000fa5	    0x488b3d000000	            mov rdi, qword [0x04000fac] 	       505	describe.c	FUNCTION_14	ELSE_1	IF_4	CALL_8
0x4000fac	      0xe800000000	                          call 0x4000fb1	       505	describe.c	FUNCTION_14	ELSE_1	IF_4	CALL_8
0x4000fb1	          0x83f803	                              cmp eax, 3	       505	describe.c	FUNCTION_14	ELSE_1	IF_4	CALL_8
0x4000fb4	            0x752f	                           jne 0x4000fe5	       505	describe.c	FUNCTION_14	ELSE_1	IF_4	CALL_8
0x4000fb6	        0x4883ec20	                           sub rsp, 0x20	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4000fba	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4000fbf	        0x48890424	                    mov qword [rsp], rax	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4000fc3	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4000fc8	      0x4889442408	                mov qword [rsp + 8], rax	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4000fcd	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4000fd1	        0x89442410	             mov dword [rsp + 0x10], eax	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4000fd5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4000fda	      0xe8a3f5ffff	                  call sym.describe_blob	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4000fdf	        0x4883c420	                           add rsp, 0x20	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4000fe3	            0xeb24	                           jmp 0x4001009	       506	describe.c	FUNCTION_14	ELSE_1	IF_4
0x4000fe5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x4000fea	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000fef	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000ff4	      0xe800000000	                          call 0x4000ff9	        54	gettext.h	FUNCTION_103	CALL_2
0x4000ff9	          0x4889ee	                            mov rsi, rbp	       508	describe.c	FUNCTION_14	CALL_11
0x4000ffc	          0x4889c7	                            mov rdi, rax	       508	describe.c	FUNCTION_14	CALL_11
0x4000fff	      0xb800000000	                              mov eax, 0	       508	describe.c	FUNCTION_14	CALL_11
0x4001004	      0xe800000000	                          call 0x4001009	       508	describe.c	FUNCTION_14	CALL_11
0x4001009	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       510	describe.c	FUNCTION_14	CALL_12
0x400100e	      0xe800000000	                          call 0x4001013	       510	describe.c	FUNCTION_14	CALL_12
0x4001013	          0x4585e4	                         test r12d, r12d	       512	describe.c	FUNCTION_14	IF_5
0x4001016	            0x750d	                           jne 0x4001025	       512	describe.c	FUNCTION_14	IF_5
0x4001018	      0xbeffffffff	                     mov esi, 0xffffffff	       513	describe.c	FUNCTION_14	CALL_13
0x400101d	          0x4889df	                            mov rdi, rbx	       513	describe.c	FUNCTION_14	CALL_13
0x4001020	      0xe800000000	                          call 0x4001025	       513	describe.c	FUNCTION_14	CALL_13
0x4001025	          0x4889e7	                            mov rdi, rsp	       515	describe.c	FUNCTION_14	CALL_14
0x4001028	      0xe800000000	                          call 0x400102d	       515	describe.c	FUNCTION_14	CALL_14
0x400102d	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       516	describe.c	FUNCTION_14
0x4001032	    0x644833042528	                xor rax, qword fs:[0x28]	       516	describe.c	FUNCTION_14
0x400103b	            0x7405	                            je 0x4001042	       516	describe.c	FUNCTION_14
0x400103d	      0xe800000000	                          call 0x4001042	       516	describe.c	FUNCTION_14
0x4001042	        0x4883c440	                           add rsp, 0x40	       516	describe.c	FUNCTION_14
0x4001046	              0x5b	                                 pop rbx	       516	describe.c	FUNCTION_14
0x4001047	              0x5d	                                 pop rbp	       516	describe.c	FUNCTION_14
0x4001048	            0x415c	                                 pop r12	       516	describe.c	FUNCTION_14
0x400104a	              0xc3	                                     ret	       516	describe.c	FUNCTION_14
process_commit	functions,0:IF,0:ELSE,0:DO,0:WHILE,0:SWITCH,0:FOR,0:CALL,0	7
0x4000062	        0x488b4704	                mov rax, qword [rdi + 4]	       453	describe.c	FUNCTION_11
0x4000066	          0x488906	                    mov qword [rsi], rax	       453	describe.c	FUNCTION_11
0x4000069	        0x488b470c	              mov rax, qword [rdi + 0xc]	       453	describe.c	FUNCTION_11
0x400006d	        0x48894608	                mov qword [rsi + 8], rax	       453	describe.c	FUNCTION_11
0x4000071	          0x8b4714	            mov eax, dword [rdi + 0x14] 	       453	describe.c	FUNCTION_11
0x4000074	          0x894610	             mov dword [rsi + 0x10], eax	       453	describe.c	FUNCTION_11
0x4000077	              0xc3	                                     ret	       453	describe.c	FUNCTION_11
compare_pt	functions,0:IF,2:ELSE,0:DO,0:WHILE,0:SWITCH,0:FOR,0:CALL,0	14
0x4000040	          0x8b4708	                mov eax, dword [rdi + 8]	       222	describe.c	FUNCTION_6	IF_1
0x4000043	          0x8b5608	                mov edx, dword [rsi + 8]	       222	describe.c	FUNCTION_6	IF_1
0x4000046	            0x39d0	                            cmp eax, edx	       222	describe.c	FUNCTION_6	IF_1
0x4000048	            0x7403	                            je 0x400004d	       222	describe.c	FUNCTION_6	IF_1
0x400004a	            0x29d0	                            sub eax, edx	       223	describe.c	FUNCTION_6	IF_1
0x400004c	              0xc3	                                     ret	       223	describe.c	FUNCTION_6	IF_1
0x400004d	          0x8b4f0c	              mov ecx, dword [rdi + 0xc]	       224	describe.c	FUNCTION_6	IF_2
0x4000050	          0x8b560c	              mov edx, dword [rsi + 0xc]	       224	describe.c	FUNCTION_6	IF_2
0x4000053	            0x89c8	                            mov eax, ecx	       225	describe.c	FUNCTION_6	IF_2
0x4000055	            0x29d0	                            sub eax, edx	       225	describe.c	FUNCTION_6	IF_2
0x4000057	            0x39d1	                            cmp ecx, edx	       225	describe.c	FUNCTION_6	IF_2
0x4000059	      0xba00000000	                              mov edx, 0	       225	describe.c	FUNCTION_6	IF_2
0x400005e	           0xf44c2	                          cmove eax, edx	       225	describe.c	FUNCTION_6	IF_2
0x4000061	              0xc3	                                     ret	       227	describe.c	FUNCTION_6
describe_commit	functions,0:IF,27:ELSE,3:DO,0:WHILE,2:SWITCH,0:FOR,4:CALL,45	495
0x40006dc	            0x4157	                                push r15	       292	describe.c	FUNCTION_10
0x40006de	            0x4156	                                push r14	       292	describe.c	FUNCTION_10
0x40006e0	            0x4155	                                push r13	       292	describe.c	FUNCTION_10
0x40006e2	            0x4154	                                push r12	       292	describe.c	FUNCTION_10
0x40006e4	              0x55	                                push rbp	       292	describe.c	FUNCTION_10
0x40006e5	              0x53	                                push rbx	       292	describe.c	FUNCTION_10
0x40006e6	    0x4881ecc80200	                          sub rsp, 0x2c8	       292	describe.c	FUNCTION_10
0x40006ed	          0x4989fc	                            mov r12, rdi	       292	describe.c	FUNCTION_10
0x40006f0	      0x4889742408	                mov qword [rsp + 8], rsi	       292	describe.c	FUNCTION_10
0x40006f5	    0x64488b042528	                mov rax, qword fs:[0x28]	       292	describe.c	FUNCTION_10
0x40006fe	    0x48898424b802	            mov qword [rsp + 0x2b8], rax	       292	describe.c	FUNCTION_10
0x4000706	            0x31c0	                            xor eax, eax	       292	describe.c	FUNCTION_10
0x4000708	      0xe800000000	                          call 0x400070d	       301	describe.c	FUNCTION_10	CALL_1
0x400070d	          0x4889c5	                            mov rbp, rax	       301	describe.c	FUNCTION_10	CALL_1
0x4000710	        0x488d4004	                      lea rax, [rax + 4]	        73	describe.c	FUNCTION_2	CALL_2
0x4000714	          0x4889c2	                            mov rdx, rax	        73	describe.c	FUNCTION_2	CALL_2
0x4000717	      0x4889442410	             mov qword [rsp + 0x10], rax	        73	describe.c	FUNCTION_2	CALL_2
0x400071c	          0x8b4504	                mov eax, dword [rbp + 4]	        73	describe.c	FUNCTION_2	CALL_2
0x400071f	        0x89442428	             mov dword [rsp + 0x28], eax	       248	hashmap.h	FUNCTION_83
0x4000723	    0x48c744242000	               mov qword [rsp + 0x20], 0	       249	hashmap.h	FUNCTION_83
0x400072c	      0x488d742420	                   lea rsi, [rsp + 0x20]	       308	hashmap.h	FUNCTION_85	CALL_2
0x4000731	      0xbf00000000	                              mov edi, 0	       308	hashmap.h	FUNCTION_85	CALL_2
0x4000736	      0xe800000000	                          call 0x400073b	       308	hashmap.h	FUNCTION_85	CALL_2
0x400073b	          0x4885c0	                           test rax, rax	       304	describe.c	FUNCTION_10	IF_1
0x400073e	     0xf84b1000000	                            je 0x40007f5	       304	describe.c	FUNCTION_10	IF_1
0x4000744	          0x4889c3	                            mov rbx, rax	       304	describe.c	FUNCTION_10	IF_1
0x4000747	    0x833d00000000	               cmp dword [0x0400074e], 0	       304	describe.c	FUNCTION_10	IF_1
0x400074e	            0x7518	                           jne 0x4000768	       304	describe.c	FUNCTION_10	IF_1
0x4000750	    0x833d00000000	               cmp dword [0x04000757], 0	       304	describe.c	FUNCTION_10	IF_1
0x4000757	            0x750f	                           jne 0x4000768	       304	describe.c	FUNCTION_10	IF_1
0x4000759	         0xfb64030	           movzx eax, byte [rax + 0x30] 	       304	describe.c	FUNCTION_10	IF_1
0x400075d	          0x83e003	                              and eax, 3	       304	describe.c	FUNCTION_10	IF_1
0x4000760	            0x3c02	                               cmp al, 2	       304	describe.c	FUNCTION_10	IF_1
0x4000762	     0xf858d000000	                           jne 0x40007f5	       304	describe.c	FUNCTION_10	IF_1
0x4000768	      0x488b742408	                mov rsi, qword [rsp + 8]	       308	describe.c	FUNCTION_10	IF_1	CALL_3
0x400076d	          0x4889df	                            mov rdi, rbx	       308	describe.c	FUNCTION_10	IF_1	CALL_3
0x4000770	      0xe88bfcffff	                    call sym.append_name	       308	describe.c	FUNCTION_10	IF_1	CALL_3
0x4000775	    0x833d00000000	               cmp dword [0x0400077c], 0	       309	describe.c	FUNCTION_10	IF_1	IF_2
0x400077c	            0x743d	                            je 0x40007bb	       309	describe.c	FUNCTION_10	IF_1	IF_2
0x400077e	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x4000782	          0x4885c0	                           test rax, rax	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x4000785	            0x740a	                            je 0x4000791	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x4000787	        0x488b7818	            mov rdi, qword [rax + 0x18] 	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x400078b	        0x4883c704	                              add rdi, 4	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x400078f	            0xeb03	                           jmp 0x4000794	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x4000791	          0x4c89e7	                            mov rdi, r12	       310	describe.c	FUNCTION_10	IF_1	CALL_4
0x4000794	    0x8b3500000000	            mov esi, dword [0x0400079a] 	       288	describe.c	FUNCTION_9	CALL_2
0x400079a	      0xe800000000	                          call 0x400079f	       288	describe.c	FUNCTION_9	CALL_2
0x400079f	          0x4889c1	                            mov rcx, rax	       288	describe.c	FUNCTION_9	CALL_2
0x40007a2	      0xba00000000	                              mov edx, 0	       288	describe.c	FUNCTION_9	CALL_2
0x40007a7	      0xbe00000000	                              mov esi, 0	       288	describe.c	FUNCTION_9	CALL_2
0x40007ac	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       288	describe.c	FUNCTION_9	CALL_2
0x40007b1	      0xb800000000	                              mov eax, 0	       288	describe.c	FUNCTION_9	CALL_2
0x40007b6	      0xe800000000	                          call 0x40007bb	       288	describe.c	FUNCTION_9	CALL_2
0x40007bb	    0x488b35000000	            mov rsi, qword [0x040007c2] 	       311	describe.c	FUNCTION_10	IF_1	IF_3
0x40007c2	          0x4885f6	                           test rsi, rsi	       311	describe.c	FUNCTION_10	IF_1	IF_3
0x40007c5	     0xf84da060000	                            je 0x4000ea5	       311	describe.c	FUNCTION_10	IF_1	IF_3
0x40007cb	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_94	CALL_2
0x40007d0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_94	CALL_2
0x40007d7	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_94	CALL_2
0x40007da	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_94	CALL_2
0x40007dc	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_94	CALL_2
0x40007df	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_94	CALL_2
0x40007e2	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_94	CALL_2
0x40007e6	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       279	strbuf.h	FUNCTION_94	CALL_2
0x40007eb	      0xe800000000	                          call 0x40007f0	       279	strbuf.h	FUNCTION_94	CALL_2
0x40007f0	      0xe9b0060000	                           jmp 0x4000ea5	       279	strbuf.h	FUNCTION_94	CALL_2
0x40007f5	    0x833d00000000	               cmp dword [0x040007fc], 0	       316	describe.c	FUNCTION_10	IF_4
0x40007fc	            0x7531	                           jne 0x400082f	       316	describe.c	FUNCTION_10	IF_4
0x40007fe	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       317	describe.c	FUNCTION_10	CALL_8
0x4000803	      0xe800000000	                          call 0x4000808	       317	describe.c	FUNCTION_10	CALL_8
0x4000808	          0x4889c3	                            mov rbx, rax	       317	describe.c	FUNCTION_10	CALL_8
0x400080b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x4000810	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000815	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x400081a	      0xe800000000	                          call 0x400081f	        54	gettext.h	FUNCTION_103	CALL_2
0x400081f	          0x4889de	                            mov rsi, rbx	       317	describe.c	FUNCTION_10	CALL_8
0x4000822	          0x4889c7	                            mov rdi, rax	       317	describe.c	FUNCTION_10	CALL_8
0x4000825	      0xb800000000	                              mov eax, 0	       317	describe.c	FUNCTION_10	CALL_8
0x400082a	      0xe800000000	                          call 0x400082f	       317	describe.c	FUNCTION_10	CALL_8
0x400082f	    0x833d00000000	               cmp dword [0x04000836], 0	       318	describe.c	FUNCTION_10	IF_5
0x4000836	            0x742d	                            je 0x4000865	       318	describe.c	FUNCTION_10	IF_5
0x4000838	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x400083d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000842	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000847	      0xe800000000	                          call 0x400084c	        54	gettext.h	FUNCTION_103	CALL_2
0x400084c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	FUNCTION_109	CALL_1
0x400084f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000854	    0x488b3d000000	            mov rdi, qword [0x0400085b] 	        97	stdio2.h	FUNCTION_109	CALL_1
0x400085b	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000860	      0xe800000000	                          call 0x4000865	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000865	    0x833d00000000	               cmp dword [0x0400086c], 0	       321	describe.c	FUNCTION_10	IF_6
0x400086c	            0x7554	                           jne 0x40008c2	       321	describe.c	FUNCTION_10	IF_6
0x400086e	      0x488d742420	                   lea rsi, [rsp + 0x20]	       377	hashmap.h	FUNCTION_86	CALL_1
0x4000873	      0xbf00000000	                              mov edi, 0	       377	hashmap.h	FUNCTION_86	CALL_1
0x4000878	      0xe800000000	                          call 0x400087d	       377	hashmap.h	FUNCTION_86	CALL_1
0x400087d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       378	hashmap.h	FUNCTION_86	CALL_2
0x4000882	      0xe800000000	                          call 0x4000887	       378	hashmap.h	FUNCTION_86	CALL_2
0x4000887	          0x4889c3	                            mov rbx, rax	       378	hashmap.h	FUNCTION_86	CALL_2
0x400088a	          0x4885c0	                           test rax, rax	       325	describe.c	FUNCTION_10	IF_6	FOR_1	CALL_12
0x400088d	            0x7429	                            je 0x40008b8	       325	describe.c	FUNCTION_10	IF_6	FOR_1	CALL_12
0x400088f	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       326	describe.c	FUNCTION_10	IF_6	FOR_1	CALL_13
0x4000893	      0xbe01000000	                              mov esi, 1	       326	describe.c	FUNCTION_10	IF_6	FOR_1	CALL_13
0x4000898	      0xe800000000	                          call 0x400089d	       326	describe.c	FUNCTION_10	IF_6	FOR_1	CALL_13
0x400089d	          0x4885c0	                           test rax, rax	       327	describe.c	FUNCTION_10	IF_6	FOR_1	IF_7
0x40008a0	            0x7404	                            je 0x40008a6	       327	describe.c	FUNCTION_10	IF_6	FOR_1	IF_7
0x40008a2	        0x48895818	             mov qword [rax + 0x18], rbx	       328	describe.c	FUNCTION_10	IF_6	FOR_1	IF_7
0x40008a6	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       325	describe.c	FUNCTION_10	IF_6	FOR_1	CALL_12
0x40008ab	      0xe800000000	                          call 0x40008b0	       325	describe.c	FUNCTION_10	IF_6	FOR_1	CALL_12
0x40008b0	          0x4889c3	                            mov rbx, rax	       325	describe.c	FUNCTION_10	IF_6	FOR_1	CALL_12
0x40008b3	          0x4885c0	                           test rax, rax	       325	describe.c	FUNCTION_10	IF_6	FOR_1	CALL_12
0x40008b6	            0x75d7	                           jne 0x400088f	       325	describe.c	FUNCTION_10	IF_6	FOR_1	CALL_12
0x40008b8	    0xc70500000000	               mov dword [0x040008c2], 1	       330	describe.c	FUNCTION_10	IF_6
0x40008c2	    0x48c744242000	               mov qword [rsp + 0x20], 0	       333	describe.c	FUNCTION_10
0x40008cb	          0x8b4500	                    mov eax, dword [rbp]	       334	describe.c	FUNCTION_10
0x40008ce	      0x250f000080	                     and eax, 0x8000000f	       334	describe.c	FUNCTION_10
0x40008d3	          0x83c810	                            or eax, 0x10	       334	describe.c	FUNCTION_10
0x40008d6	          0x894500	                    mov dword [rbp], eax	       334	describe.c	FUNCTION_10
0x40008d9	      0x488d742420	                   lea rsi, [rsp + 0x20]	       335	describe.c	FUNCTION_10	CALL_14
0x40008de	          0x4889ef	                            mov rdi, rbp	       335	describe.c	FUNCTION_10	CALL_14
0x40008e1	      0xe800000000	                          call 0x40008e6	       335	describe.c	FUNCTION_10	CALL_14
0x40008e6	    0x41be00000000	                             mov r14d, 0	       336	describe.c	FUNCTION_10	WHILE_1
0x40008ec	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       299	describe.c	FUNCTION_10
0x40008f4	    0x41bf00000000	                             mov r15d, 0	       297	describe.c	FUNCTION_10
0x40008fa	    0x41bc00000000	                             mov r12d, 0	       297	describe.c	FUNCTION_10
0x4000900	      0xe9bd010000	                           jmp 0x4000ac2	       336	describe.c	FUNCTION_10	WHILE_1
0x4000905	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       337	describe.c	FUNCTION_10	WHILE_1	CALL_15
0x400090a	      0xe800000000	                          call 0x400090f	       337	describe.c	FUNCTION_10	WHILE_1	CALL_15
0x400090f	          0x4889c5	                            mov rbp, rax	       337	describe.c	FUNCTION_10	WHILE_1	CALL_15
0x4000912	        0x488b5830	            mov rbx, qword [rax + 0x30] 	       338	describe.c	FUNCTION_10	WHILE_1
0x4000916	        0x498d4601	                      lea rax, [r14 + 1]	       338	describe.c	FUNCTION_10	WHILE_1
0x400091a	        0x48890424	                    mov qword [rsp], rax	       338	describe.c	FUNCTION_10	WHILE_1
0x400091e	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	       340	describe.c	FUNCTION_10	WHILE_1
0x4000922	          0x4885f6	                           test rsi, rsi	       341	describe.c	FUNCTION_10	WHILE_1	IF_8
0x4000925	     0xf8499000000	                            je 0x40009c4	       341	describe.c	FUNCTION_10	WHILE_1	IF_8
0x400092b	    0x833d00000000	               cmp dword [0x04000932], 0	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000932	            0x751f	                           jne 0x4000953	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000934	    0x833d00000000	               cmp dword [0x0400093b], 0	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x400093b	            0x7516	                           jne 0x4000953	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x400093d	         0xfb64630	           movzx eax, byte [rsi + 0x30] 	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000941	          0x83e003	                              and eax, 3	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000944	          0x83f801	                              cmp eax, 1	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000947	            0x7f0a	                            jg 0x4000953	       342	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000949	      0x8344241c01	               add dword [rsp + 0x1c], 1	       343	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x400094e	          0x4589e5	                          mov r13d, r12d	       343	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000951	            0xeb74	                           jmp 0x40009c7	       343	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000953	    0x443b25000000	           cmp r12d, dword [0x0400095a] 	       344	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x400095a	     0xf8381010000	                           jae 0x4000ae1	       344	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x4000960	      0x458d6c2401	                     lea r13d, [r12 + 1]	       345	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x4000965	          0x4589e4	                          mov r12d, r12d	       346	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x4000968	        0x4b8d3c24	                    lea rdi, [r12 + r12]	       346	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x400096c	        0x4a8d0427	                    lea rax, [rdi + r12]	       346	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x4000970	      0x488974c440	     mov qword [rsp + rax*8 + 0x40], rsi	       346	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x4000975	      0x448974c448	    mov dword [rsp + rax*8 + 0x48], r14d	       347	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x400097a	      0xb801000000	                              mov eax, 1	       348	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x400097f	          0x4489e9	                           mov ecx, r13d	       348	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x4000982	            0xd3e0	                             shl eax, cl	       348	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x4000984	            0x89c1	                            mov ecx, eax	       348	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x4000986	        0x4a8d0427	                    lea rax, [rdi + r12]	       348	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x400098a	        0x894cc450	     mov dword [rsp + rax*8 + 0x50], ecx	       348	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x400098e	      0x44896cc44c	    mov dword [rsp + rax*8 + 0x4c], r13d	       349	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x4000993	          0x8b4500	                    mov eax, dword [rbp]	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x4000996	            0x89c2	                            mov edx, eax	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x4000998	          0xc1ea04	                              shr edx, 4	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x400099b	             0x9ca	                             or edx, ecx	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x400099d	    0x81e2ffffff07	                      and edx, 0x7ffffff	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40009a3	          0xc1e204	                              shl edx, 4	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40009a6	      0x250f000080	                     and eax, 0x8000000f	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40009ab	             0x9d0	                             or eax, edx	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40009ad	          0x894500	                    mov dword [rbp], eax	       350	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10
0x40009b0	         0xfb64630	           movzx eax, byte [rsi + 0x30] 	       351	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40009b4	          0x83e003	                              and eax, 3	       351	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40009b7	            0x3c02	                               cmp al, 2	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40009b9	           0xf94c0	                                 sete al	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40009bc	           0xfb6c0	                           movzx eax, al	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40009bf	          0x4101c7	                           add r15d, eax	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40009c2	            0xeb03	                           jmp 0x40009c7	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40009c4	          0x4589e5	                          mov r13d, r12d	       352	describe.c	FUNCTION_10	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x40009c7	          0x4585ed	                         test r13d, r13d	       359	describe.c	FUNCTION_10	WHILE_1	FOR_2
0x40009ca	            0x742e	                            je 0x40009fa	       359	describe.c	FUNCTION_10	WHILE_1	FOR_2
0x40009cc	      0x488d542448	                   lea rdx, [rsp + 0x48]	       359	describe.c	FUNCTION_10	WHILE_1	FOR_2
0x40009d1	        0x418d45ff	                      lea eax, [r13 - 1]	       359	describe.c	FUNCTION_10	WHILE_1	FOR_2
0x40009d5	        0x488d0440	                  lea rax, [rax + rax*2]	       359	describe.c	FUNCTION_10	WHILE_1	FOR_2
0x40009d9	      0x488d74c460	          lea rsi, [rsp + rax*8 + 0x60] 	       359	describe.c	FUNCTION_10	WHILE_1	FOR_2
0x40009de	          0x8b4500	                    mov eax, dword [rbp]	       361	describe.c	FUNCTION_10	WHILE_1	FOR_2	IF_12
0x40009e1	          0xc1e804	                              shr eax, 4	       361	describe.c	FUNCTION_10	WHILE_1	FOR_2	IF_12
0x40009e4	      0x25ffffff07	                      and eax, 0x7ffffff	       361	describe.c	FUNCTION_10	WHILE_1	FOR_2	IF_12
0x40009e9	          0x854208	               test dword [rdx + 8], eax	       361	describe.c	FUNCTION_10	WHILE_1	FOR_2	IF_12
0x40009ec	            0x7503	                           jne 0x40009f1	       361	describe.c	FUNCTION_10	WHILE_1	FOR_2	IF_12
0x40009ee	          0x830201	                      add dword [rdx], 1	       362	describe.c	FUNCTION_10	WHILE_1	FOR_2	IF_12
0x40009f1	        0x4883c218	                           add rdx, 0x18	       362	describe.c	FUNCTION_10	WHILE_1	FOR_2	IF_12
0x40009f5	          0x4839f2	                            cmp rdx, rsi	       359	describe.c	FUNCTION_10	WHILE_1	FOR_2
0x40009f8	            0x75e4	                           jne 0x40009de	       359	describe.c	FUNCTION_10	WHILE_1	FOR_2
0x40009fa	          0x4585ff	                         test r15d, r15d	       364	describe.c	FUNCTION_10	WHILE_1	IF_13
0x40009fd	     0xf84ac000000	                            je 0x4000aaf	       364	describe.c	FUNCTION_10	WHILE_1	IF_13
0x4000a03	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       364	describe.c	FUNCTION_10	WHILE_1	IF_13
0x4000a09	     0xf85a0000000	                           jne 0x4000aaf	       364	describe.c	FUNCTION_10	WHILE_1	IF_13
0x4000a0f	    0x833d00000000	               cmp dword [0x04000a16], 0	       365	describe.c	FUNCTION_10	WHILE_1	IF_13	IF_14
0x4000a16	     0xf84bd000000	                            je 0x4000ad9	       365	describe.c	FUNCTION_10	WHILE_1	IF_13	IF_14
0x4000a1c	        0x488d7d04	                      lea rdi, [rbp + 4]	       367	describe.c	FUNCTION_10	WHILE_1	IF_13	CALL_18
0x4000a20	      0xe800000000	                          call 0x4000a25	       366	describe.c	FUNCTION_10	WHILE_1	IF_13	IF_14	CALL_17
0x4000a25	          0x4889c3	                            mov rbx, rax	       366	describe.c	FUNCTION_10	WHILE_1	IF_13	IF_14	CALL_17
0x4000a28	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x4000a2d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000a32	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000a37	      0xe800000000	                          call 0x4000a3c	        54	gettext.h	FUNCTION_103	CALL_2
0x4000a3c	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000a3f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000a42	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000a47	    0x488b3d000000	            mov rdi, qword [0x04000a4e] 	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000a4e	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000a53	      0xe800000000	                          call 0x4000a58	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000a58	          0x4589ec	                          mov r12d, r13d	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000a5b	      0xbd00000000	                              mov ebp, 0	       293	describe.c	FUNCTION_10
0x4000a60	            0xeb7f	                           jmp 0x4000ae1	       293	describe.c	FUNCTION_10
0x4000a62	          0x4c8b23	                    mov r12, qword [rbx]	       371	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000a65	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_125	CALL_1
0x4000a6a	          0x4c89e7	                            mov rdi, r12	        75	commit.h	FUNCTION_125	CALL_1
0x4000a6d	      0xe800000000	                          call 0x4000a72	        75	commit.h	FUNCTION_125	CALL_1
0x4000a72	      0x41f6042410	                   test byte [r12], 0x10	       373	describe.c	FUNCTION_10	WHILE_1	WHILE_2	IF_15
0x4000a77	            0x750d	                           jne 0x4000a86	       373	describe.c	FUNCTION_10	WHILE_1	WHILE_2	IF_15
0x4000a79	      0x488d742420	                   lea rsi, [rsp + 0x20]	       374	describe.c	FUNCTION_10	WHILE_1	WHILE_2	CALL_20
0x4000a7e	          0x4c89e7	                            mov rdi, r12	       374	describe.c	FUNCTION_10	WHILE_1	WHILE_2	CALL_20
0x4000a81	      0xe800000000	                          call 0x4000a86	       374	describe.c	FUNCTION_10	WHILE_1	WHILE_2	CALL_20
0x4000a86	        0x418b0424	                    mov eax, dword [r12]	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000a8a	            0x89c2	                            mov edx, eax	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000a8c	           0xb5500	                     or edx, dword [rbp]	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000a8f	    0x81e2f0ffff7f	                     and edx, 0x7ffffff0	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000a95	      0x250f000080	                     and eax, 0x8000000f	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000a9a	             0x9d0	                             or eax, edx	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000a9c	        0x41890424	                    mov dword [r12], eax	       375	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000aa0	        0x488b5b08	                mov rbx, qword [rbx + 8]	       376	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000aa4	    0x833d00000000	               cmp dword [0x04000aab], 0	       378	describe.c	FUNCTION_10	WHILE_1	WHILE_2	IF_16
0x4000aab	            0x7409	                            je 0x4000ab6	       378	describe.c	FUNCTION_10	WHILE_1	WHILE_2	IF_16
0x4000aad	            0xeb0c	                           jmp 0x4000abb	       378	describe.c	FUNCTION_10	WHILE_1	WHILE_2	IF_16
0x4000aaf	          0x4885db	                           test rbx, rbx	       370	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000ab2	            0x75ae	                           jne 0x4000a62	       370	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000ab4	            0xeb05	                           jmp 0x4000abb	       370	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000ab6	          0x4885db	                           test rbx, rbx	       370	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000ab9	            0x75a7	                           jne 0x4000a62	       370	describe.c	FUNCTION_10	WHILE_1	WHILE_2
0x4000abb	        0x4c8b3424	                    mov r14, qword [rsp]	       343	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000abf	          0x4589ec	                          mov r12d, r13d	       343	describe.c	FUNCTION_10	WHILE_1	IF_8	IF_9
0x4000ac2	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       336	describe.c	FUNCTION_10	WHILE_1
0x4000ac8	     0xf8537feffff	                           jne 0x4000905	       336	describe.c	FUNCTION_10	WHILE_1
0x4000ace	        0x4c893424	                    mov qword [rsp], r14	       336	describe.c	FUNCTION_10	WHILE_1
0x4000ad2	      0xbd00000000	                              mov ebp, 0	       293	describe.c	FUNCTION_10
0x4000ad7	            0xeb08	                           jmp 0x4000ae1	       293	describe.c	FUNCTION_10
0x4000ad9	          0x4589ec	                          mov r12d, r13d	       293	describe.c	FUNCTION_10
0x4000adc	      0xbd00000000	                              mov ebp, 0	       293	describe.c	FUNCTION_10
0x4000ae1	          0x4585e4	                         test r12d, r12d	       383	describe.c	FUNCTION_10	IF_17
0x4000ae4	     0xf85c2000000	                           jne 0x4000bac	       383	describe.c	FUNCTION_10	IF_17
0x4000aea	    0x833d00000000	               cmp dword [0x04000af1], 0	       385	describe.c	FUNCTION_10	IF_17	IF_18
0x4000af1	            0x7450	                            je 0x4000b43	       385	describe.c	FUNCTION_10	IF_17	IF_18
0x4000af3	    0x8b1500000000	            mov edx, dword [0x04000af9] 	       386	describe.c	FUNCTION_10	IF_17	IF_18	CALL_21
0x4000af9	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       386	describe.c	FUNCTION_10	IF_17	IF_18	CALL_21
0x4000afe	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       386	describe.c	FUNCTION_10	IF_17	IF_18	CALL_21
0x4000b03	          0x4889df	                            mov rdi, rbx	       386	describe.c	FUNCTION_10	IF_17	IF_18	CALL_21
0x4000b06	      0xe800000000	                          call 0x4000b0b	       386	describe.c	FUNCTION_10	IF_17	IF_18	CALL_21
0x4000b0b	    0x488b35000000	            mov rsi, qword [0x04000b12] 	       387	describe.c	FUNCTION_10	IF_17	IF_18	IF_19
0x4000b12	          0x4885f6	                           test rsi, rsi	       387	describe.c	FUNCTION_10	IF_17	IF_18	IF_19
0x4000b15	     0xf848a030000	                            je 0x4000ea5	       387	describe.c	FUNCTION_10	IF_17	IF_18	IF_19
0x4000b1b	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000b20	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000b27	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000b2a	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000b2c	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000b2f	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000b32	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000b36	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000b39	      0xe800000000	                          call 0x4000b3e	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000b3e	      0xe962030000	                           jmp 0x4000ea5	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000b43	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	       391	describe.c	FUNCTION_10	IF_17	IF_20
0x4000b48	            0x7431	                            je 0x4000b7b	       391	describe.c	FUNCTION_10	IF_17	IF_20
0x4000b4a	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       392	describe.c	FUNCTION_10	IF_17	IF_20	CALL_24
0x4000b4f	      0xe800000000	                          call 0x4000b54	       392	describe.c	FUNCTION_10	IF_17	IF_20	CALL_24
0x4000b54	          0x4889c3	                            mov rbx, rax	       392	describe.c	FUNCTION_10	IF_17	IF_20	CALL_24
0x4000b57	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x4000b5c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000b61	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000b66	      0xe800000000	                          call 0x4000b6b	        54	gettext.h	FUNCTION_103	CALL_2
0x4000b6b	          0x4889de	                            mov rsi, rbx	       392	describe.c	FUNCTION_10	IF_17	IF_20	CALL_24
0x4000b6e	          0x4889c7	                            mov rdi, rax	       392	describe.c	FUNCTION_10	IF_17	IF_20	CALL_24
0x4000b71	      0xb800000000	                              mov eax, 0	       392	describe.c	FUNCTION_10	IF_17	IF_20	CALL_24
0x4000b76	      0xe800000000	                          call 0x4000b7b	       392	describe.c	FUNCTION_10	IF_17	IF_20	CALL_24
0x4000b7b	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       396	describe.c	FUNCTION_10	IF_17	ELSE_3	CALL_27
0x4000b80	      0xe800000000	                          call 0x4000b85	       396	describe.c	FUNCTION_10	IF_17	ELSE_3	CALL_27
0x4000b85	          0x4889c3	                            mov rbx, rax	       396	describe.c	FUNCTION_10	IF_17	ELSE_3	CALL_27
0x4000b88	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x4000b8d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000b92	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000b97	      0xe800000000	                          call 0x4000b9c	        54	gettext.h	FUNCTION_103	CALL_2
0x4000b9c	          0x4889de	                            mov rsi, rbx	       396	describe.c	FUNCTION_10	IF_17	ELSE_3	CALL_27
0x4000b9f	          0x4889c7	                            mov rdi, rax	       396	describe.c	FUNCTION_10	IF_17	ELSE_3	CALL_27
0x4000ba2	      0xb800000000	                              mov eax, 0	       396	describe.c	FUNCTION_10	IF_17	ELSE_3	CALL_27
0x4000ba7	      0xe800000000	                          call 0x4000bac	       396	describe.c	FUNCTION_10	IF_17	ELSE_3	CALL_27
0x4000bac	          0x4489e6	                           mov esi, r12d	       401	describe.c	FUNCTION_10	CALL_29
0x4000baf	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_40	IF_1
0x4000bb3	            0x7614	                           jbe 0x4000bc9	      1048	git-compat-util.h	FUNCTION_40	IF_1
0x4000bb5	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_40	CALL_1
0x4000bba	      0xba18000000	                           mov edx, 0x18	      1049	git-compat-util.h	FUNCTION_40	CALL_1
0x4000bbf	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1049	git-compat-util.h	FUNCTION_40	CALL_1
0x4000bc4	      0xe800000000	                          call 0x4000bc9	      1049	git-compat-util.h	FUNCTION_40	CALL_1
0x4000bc9	          0x4885ed	                           test rbp, rbp	       403	describe.c	FUNCTION_10	IF_21
0x4000bcc	            0x7412	                            je 0x4000be0	       403	describe.c	FUNCTION_10	IF_21
0x4000bce	      0x488d742420	                   lea rsi, [rsp + 0x20]	       404	describe.c	FUNCTION_10	IF_21	CALL_30
0x4000bd3	          0x4889ef	                            mov rdi, rbp	       404	describe.c	FUNCTION_10	IF_21	CALL_30
0x4000bd6	      0xe800000000	                          call 0x4000bdb	       404	describe.c	FUNCTION_10	IF_21	CALL_30
0x4000bdb	      0x48832c2401	                      sub qword [rsp], 1	       405	describe.c	FUNCTION_10	IF_21
0x4000be0	    0x41bf00000000	                             mov r15d, 0	       233	describe.c	FUNCTION_7
0x4000be6	      0xe9b0000000	                           jmp 0x4000c9b	       233	describe.c	FUNCTION_7
0x4000beb	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       235	describe.c	FUNCTION_7	WHILE_1	CALL_1
0x4000bf0	      0xe800000000	                          call 0x4000bf5	       235	describe.c	FUNCTION_7	WHILE_1	CALL_1
0x4000bf5	          0x4989c6	                            mov r14, rax	       235	describe.c	FUNCTION_7	WHILE_1	CALL_1
0x4000bf8	        0x4c8b6830	            mov r13, qword [rax + 0x30] 	       236	describe.c	FUNCTION_7	WHILE_1
0x4000bfc	        0x4983c701	                              add r15, 1	       237	describe.c	FUNCTION_7	WHILE_1
0x4000c00	        0x8b4c2450	            mov ecx, dword [rsp + 0x50] 	       238	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000c04	            0x8b00	                    mov eax, dword [rax]	       238	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000c06	          0xc1e804	                              shr eax, 4	       238	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000c09	      0x25ffffff07	                      and eax, 0x7ffffff	       238	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000c0e	            0x85c8	                           test eax, ecx	       238	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000c10	            0x743d	                            je 0x4000c4f	       238	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000c12	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       239	describe.c	FUNCTION_7	WHILE_1	IF_1
0x4000c17	          0x4885d2	                           test rdx, rdx	       240	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2
0x4000c1a	     0xf8487000000	                            je 0x4000ca7	       240	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2
0x4000c20	          0x488b02	                    mov rax, qword [rdx]	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000c23	            0x8b00	                    mov eax, dword [rax]	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000c25	          0xc1e804	                              shr eax, 4	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000c28	      0x25ffffff07	                      and eax, 0x7ffffff	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000c2d	            0x85c8	                           test eax, ecx	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000c2f	            0x7513	                           jne 0x4000c44	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000c31	            0xeb21	                           jmp 0x4000c54	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000c33	          0x488b02	                    mov rax, qword [rdx]	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000c36	            0x8b00	                    mov eax, dword [rax]	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000c38	          0xc1e804	                              shr eax, 4	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000c3b	      0x25ffffff07	                      and eax, 0x7ffffff	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000c40	            0x85c8	                           test eax, ecx	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000c42	            0x7410	                            je 0x4000c54	       242	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2	IF_2
0x4000c44	        0x488b5208	                mov rdx, qword [rdx + 8]	       244	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2
0x4000c48	          0x4885d2	                           test rdx, rdx	       240	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2
0x4000c4b	            0x75e6	                           jne 0x4000c33	       240	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2
0x4000c4d	            0xeb58	                           jmp 0x4000ca7	       240	describe.c	FUNCTION_7	WHILE_1	IF_1	WHILE_2
0x4000c4f	      0x8344244801	               add dword [rsp + 0x48], 1	       249	describe.c	FUNCTION_7	WHILE_1	ELSE_1
0x4000c54	          0x4d85ed	                           test r13, r13	       250	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c57	            0x7442	                            je 0x4000c9b	       250	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c59	        0x498b5d00	                    mov rbx, qword [r13]	       251	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c5d	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_125	CALL_1
0x4000c62	          0x4889df	                            mov rdi, rbx	        75	commit.h	FUNCTION_125	CALL_1
0x4000c65	      0xe800000000	                          call 0x4000c6a	        75	commit.h	FUNCTION_125	CALL_1
0x4000c6a	          0xf60310	                   test byte [rbx], 0x10	       253	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	IF_4
0x4000c6d	            0x750d	                           jne 0x4000c7c	       253	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	IF_4
0x4000c6f	      0x488d742420	                   lea rsi, [rsp + 0x20]	       254	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x4000c74	          0x4889df	                            mov rdi, rbx	       254	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x4000c77	      0xe800000000	                          call 0x4000c7c	       254	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x4000c7c	            0x8b03	                    mov eax, dword [rbx]	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c7e	            0x89c2	                            mov edx, eax	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c80	          0x410b16	                     or edx, dword [r14]	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c83	    0x81e2f0ffff7f	                     and edx, 0x7ffffff0	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c89	      0x250f000080	                     and eax, 0x8000000f	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c8e	             0x9d0	                             or eax, edx	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c90	            0x8903	                    mov dword [rbx], eax	       255	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c92	        0x4d8b6d08	                mov r13, qword [r13 + 8]	       256	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c96	          0x4d85ed	                           test r13, r13	       250	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c99	            0x75be	                           jne 0x4000c59	       250	describe.c	FUNCTION_7	WHILE_1	ELSE_1	WHILE_3
0x4000c9b	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       234	describe.c	FUNCTION_7	WHILE_1
0x4000ca1	     0xf8544ffffff	                           jne 0x4000beb	       234	describe.c	FUNCTION_7	WHILE_1
0x4000ca7	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       408	describe.c	FUNCTION_10	CALL_32
0x4000cac	      0xe800000000	                          call 0x4000cb1	       408	describe.c	FUNCTION_10	CALL_32
0x4000cb1	    0x833d00000000	               cmp dword [0x04000cb8], 0	       410	describe.c	FUNCTION_10	IF_22
0x4000cb8	     0xf845c010000	                            je 0x4000e1a	       410	describe.c	FUNCTION_10	IF_22
0x4000cbe	    0x833d00000000	               cmp dword [0x04000cc5], 0	       412	describe.c	FUNCTION_10	IF_22	IF_23
0x4000cc5	     0xf89c2010000	                           jns 0x4000e8d	       412	describe.c	FUNCTION_10	IF_22	IF_23
0x4000ccb	      0xbb00000000	                              mov ebx, 0	       412	describe.c	FUNCTION_10	IF_22	IF_23
0x4000cd0	    0x41bd00000000	                             mov r13d, 0	       412	describe.c	FUNCTION_10	IF_22	IF_23
0x4000cd6	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	       415	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	CALL_35
0x4000cdd	          0x488b33	                    mov rsi, qword [rbx]	       415	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	CALL_35
0x4000ce0	      0xbf00000000	                              mov edi, 0	        53	gettext.h	FUNCTION_103	IF_1
0x4000ce5	          0x803e00	                       cmp byte [rsi], 0	        52	gettext.h	FUNCTION_103	IF_1
0x4000ce8	            0x7412	                            je 0x4000cfc	        52	gettext.h	FUNCTION_103	IF_1
0x4000cea	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x4000cef	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000cf4	      0xe800000000	                          call 0x4000cf9	        54	gettext.h	FUNCTION_103	CALL_2
0x4000cf9	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_103	CALL_2
0x4000cfc	      0xb800000000	                              mov eax, 0	       415	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	CALL_35
0x4000d01	          0x4c89f1	                            mov rcx, r14	       415	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	CALL_35
0x4000d04	            0xf2ae	              repne scasb al, byte [rdi]	       415	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	CALL_35
0x4000d06	          0x4889c8	                            mov rax, rcx	       415	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	CALL_35
0x4000d09	          0x48f7d0	                                 not rax	       415	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	CALL_35
0x4000d0c	        0x4883e801	                              sub rax, 1	       415	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	CALL_35
0x4000d10	    0x3b0500000000	            cmp eax, dword [0x04000d16] 	       416	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	IF_24
0x4000d16	            0x7e06	                           jle 0x4000d1e	       416	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	IF_24
0x4000d18	    0x890500000000	            mov dword [0x04000d1e], eax 	       417	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	IF_24
0x4000d1e	        0x4883c308	                              add rbx, 8	       417	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	IF_24
0x4000d22	          0x4c39eb	                            cmp rbx, r13	       414	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	CALL_33
0x4000d25	            0x75b6	                           jne 0x4000cdd	       414	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	CALL_33
0x4000d27	      0xe961010000	                           jmp 0x4000e8d	       414	describe.c	FUNCTION_10	IF_22	IF_23	FOR_3	CALL_33
0x4000d2c	          0x488b03	                    mov rax, qword [rbx]	       424	describe.c	FUNCTION_10	IF_22	FOR_4
0x4000d2f	        0x4c8b6848	            mov r13, qword [rax + 0x48] 	       422	describe.c	FUNCTION_10	IF_22	FOR_4	CALL_36
0x4000d33	        0x448b6308	               mov r12d, dword [rbx + 8]	       422	describe.c	FUNCTION_10	IF_22	FOR_4	CALL_36
0x4000d37	         0xfb64030	           movzx eax, byte [rax + 0x30] 	       423	describe.c	FUNCTION_10	IF_22	FOR_4	CALL_37
0x4000d3b	          0x83e003	                              and eax, 3	       422	describe.c	FUNCTION_10	IF_22	FOR_4	CALL_36
0x4000d3e	    0x488b34c50000	                  mov rsi, qword [rax*8]	       422	describe.c	FUNCTION_10	IF_22	FOR_4	CALL_36
0x4000d46	    0x41b800000000	                              mov r8d, 0	        53	gettext.h	FUNCTION_103	IF_1
0x4000d4c	          0x803e00	                       cmp byte [rsi], 0	        52	gettext.h	FUNCTION_103	IF_1
0x4000d4f	            0x7412	                            je 0x4000d63	        52	gettext.h	FUNCTION_103	IF_1
0x4000d51	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x4000d56	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000d5b	      0xe800000000	                          call 0x4000d60	        54	gettext.h	FUNCTION_103	CALL_2
0x4000d60	          0x4989c0	                             mov r8, rax	        54	gettext.h	FUNCTION_103	CALL_2
0x4000d63	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000d67	            0x4155	                                push r13	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000d69	          0x4589e1	                           mov r9d, r12d	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000d6c	    0x8b0d00000000	            mov ecx, dword [0x04000d72] 	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000d72	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000d77	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000d7c	    0x488b3d000000	            mov rdi, qword [0x04000d83] 	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000d83	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000d88	      0xe800000000	                          call 0x4000d8d	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000d8d	        0x4883c318	                           add rbx, 0x18	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000d91	        0x4883c410	                           add rsp, 0x10	       420	describe.c	FUNCTION_10	IF_22	FOR_4
0x4000d95	          0x4939de	                            cmp r14, rbx	       420	describe.c	FUNCTION_10	IF_22	FOR_4
0x4000d98	            0x7592	                           jne 0x4000d2c	       420	describe.c	FUNCTION_10	IF_22	FOR_4
0x4000d9a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x4000d9f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000da4	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000da9	      0xe800000000	                          call 0x4000dae	        54	gettext.h	FUNCTION_103	CALL_2
0x4000dae	        0x488b0c24	                    mov rcx, qword [rsp]	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000db2	          0x4c01f9	                            add rcx, r15	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000db5	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000db8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000dbd	    0x488b3d000000	            mov rdi, qword [0x04000dc4] 	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000dc4	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000dc9	      0xe800000000	                          call 0x4000dce	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000dce	          0x4885ed	                           test rbp, rbp	       427	describe.c	FUNCTION_10	IF_22	IF_25
0x4000dd1	            0x7447	                            je 0x4000e1a	       427	describe.c	FUNCTION_10	IF_22	IF_25
0x4000dd3	        0x488d7d04	                      lea rdi, [rbp + 4]	       432	describe.c	FUNCTION_10	IF_22	IF_25	CALL_42
0x4000dd7	      0xe800000000	                          call 0x4000ddc	       428	describe.c	FUNCTION_10	IF_22	IF_25	CALL_40
0x4000ddc	          0x4889c5	                            mov rbp, rax	       428	describe.c	FUNCTION_10	IF_22	IF_25	CALL_40
0x4000ddf	    0x8b1d00000000	            mov ebx, dword [0x04000de5] 	       428	describe.c	FUNCTION_10	IF_22	IF_25	CALL_40
0x4000de5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x4000dea	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000def	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000df4	      0xe800000000	                          call 0x4000df9	        54	gettext.h	FUNCTION_103	CALL_2
0x4000df9	          0x4989e9	                             mov r9, rbp	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000dfc	          0x4189d8	                            mov r8d, ebx	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000dff	            0x89d9	                            mov ecx, ebx	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000e01	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000e04	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000e09	    0x488b3d000000	            mov rdi, qword [0x04000e10] 	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000e10	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000e15	      0xe800000000	                          call 0x4000e1a	        97	stdio2.h	FUNCTION_109	CALL_1
0x4000e1a	      0x488b742408	                mov rsi, qword [rsp + 8]	       436	describe.c	FUNCTION_10	CALL_43
0x4000e1f	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       436	describe.c	FUNCTION_10	CALL_43
0x4000e24	      0xe8d7f5ffff	                    call sym.append_name	       436	describe.c	FUNCTION_10	CALL_43
0x4000e29	    0x8b3500000000	            mov esi, dword [0x04000e2f] 	       437	describe.c	FUNCTION_10	IF_26
0x4000e2f	            0x85f6	                           test esi, esi	       437	describe.c	FUNCTION_10	IF_26
0x4000e31	            0x7427	                            je 0x4000e5a	       437	describe.c	FUNCTION_10	IF_26
0x4000e33	        0x8b5c2448	            mov ebx, dword [rsp + 0x48] 	       438	describe.c	FUNCTION_10	CALL_44
0x4000e37	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       288	describe.c	FUNCTION_9	CALL_2
0x4000e3c	      0xe800000000	                          call 0x4000e41	       288	describe.c	FUNCTION_9	CALL_2
0x4000e41	          0x4889c1	                            mov rcx, rax	       288	describe.c	FUNCTION_9	CALL_2
0x4000e44	            0x89da	                            mov edx, ebx	       288	describe.c	FUNCTION_9	CALL_2
0x4000e46	      0xbe00000000	                              mov esi, 0	       288	describe.c	FUNCTION_9	CALL_2
0x4000e4b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       288	describe.c	FUNCTION_9	CALL_2
0x4000e50	      0xb800000000	                              mov eax, 0	       288	describe.c	FUNCTION_9	CALL_2
0x4000e55	      0xe800000000	                          call 0x4000e5a	       288	describe.c	FUNCTION_9	CALL_2
0x4000e5a	    0x488b35000000	            mov rsi, qword [0x04000e61] 	       439	describe.c	FUNCTION_10	IF_27
0x4000e61	          0x4885f6	                           test rsi, rsi	       439	describe.c	FUNCTION_10	IF_27
0x4000e64	            0x743f	                            je 0x4000ea5	       439	describe.c	FUNCTION_10	IF_27
0x4000e66	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000e6b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000e72	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000e75	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000e77	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000e7a	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000e7d	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000e81	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000e86	      0xe800000000	                          call 0x4000e8b	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000e8b	            0xeb18	                           jmp 0x4000ea5	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000e8d	      0x488d5c2440	                   lea rbx, [rsp + 0x40]	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000e92	      0x418d4424ff	                      lea eax, [r12 - 1]	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000e97	      0x488d444003	              lea rax, [rax + rax*2 + 3]	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000e9c	        0x4c8d34c3	                  lea r14, [rbx + rax*8]	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000ea0	      0xe987feffff	                           jmp 0x4000d2c	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000ea5	    0x488b8424b802	           mov rax, qword [rsp + 0x2b8] 	       441	describe.c	FUNCTION_10
0x4000ead	    0x644833042528	                xor rax, qword fs:[0x28]	       441	describe.c	FUNCTION_10
0x4000eb6	            0x7405	                            je 0x4000ebd	       441	describe.c	FUNCTION_10
0x4000eb8	      0xe800000000	                          call 0x4000ebd	       441	describe.c	FUNCTION_10
0x4000ebd	    0x4881c4c80200	                          add rsp, 0x2c8	       441	describe.c	FUNCTION_10
0x4000ec4	              0x5b	                                 pop rbx	       441	describe.c	FUNCTION_10
0x4000ec5	              0x5d	                                 pop rbp	       441	describe.c	FUNCTION_10
0x4000ec6	            0x415c	                                 pop r12	       441	describe.c	FUNCTION_10
0x4000ec8	            0x415d	                                 pop r13	       441	describe.c	FUNCTION_10
0x4000eca	            0x415e	                                 pop r14	       441	describe.c	FUNCTION_10
0x4000ecc	            0x415f	                                 pop r15	       441	describe.c	FUNCTION_10
0x4000ece	              0xc3	                                     ret	       441	describe.c	FUNCTION_10
process_object	functions,0:IF,1:ELSE,0:DO,0:WHILE,0:SWITCH,0:FOR,0:CALL,5	32
0x400104b	              0x55	                                push rbp	       457	describe.c	FUNCTION_12
0x400104c	              0x53	                                push rbx	       457	describe.c	FUNCTION_12
0x400104d	        0x4883ec08	                              sub rsp, 8	       457	describe.c	FUNCTION_12
0x4001051	          0x4889f5	                            mov rbp, rsi	       457	describe.c	FUNCTION_12
0x4001054	          0x4889d3	                            mov rbx, rdx	       457	describe.c	FUNCTION_12
0x4001057	        0x488d7704	                      lea rsi, [rdi + 4]	       975	cache.h	FUNCTION_50	CALL_1
0x400105b	        0x488d7a14	                   lea rdi, [rdx + 0x14]	       975	cache.h	FUNCTION_50	CALL_1
0x400105f	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_50	CALL_1
0x4001064	      0xe800000000	                          call 0x4001069	       975	cache.h	FUNCTION_50	CALL_1
0x4001069	            0x85c0	                           test eax, eax	       460	describe.c	FUNCTION_12	IF_1	CALL_1
0x400106b	            0x7549	                           jne 0x40010b6	       460	describe.c	FUNCTION_12	IF_1	CALL_1
0x400106d	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       460	describe.c	FUNCTION_12	IF_1	CALL_1
0x4001071	      0x4883780800	                  cmp qword [rax + 8], 0	       460	describe.c	FUNCTION_12	IF_1	CALL_1
0x4001076	            0x753e	                           jne 0x40010b6	       460	describe.c	FUNCTION_12	IF_1	CALL_1
0x4001078	      0xe800000000	                          call 0x400107d	       461	describe.c	FUNCTION_12	IF_1	CALL_2
0x400107d	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	       462	describe.c	FUNCTION_12	IF_1	CALL_3
0x4001081	          0x4889df	                            mov rdi, rbx	       462	describe.c	FUNCTION_12	IF_1	CALL_3
0x4001084	      0xe853f6ffff	                call sym.describe_commit	       462	describe.c	FUNCTION_12	IF_1	CALL_3
0x4001089	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       463	describe.c	FUNCTION_12	IF_1	CALL_4
0x400108d	          0x4889ea	                            mov rdx, rbp	       463	describe.c	FUNCTION_12	IF_1	CALL_4
0x4001090	      0xbe00000000	                              mov esi, 0	       463	describe.c	FUNCTION_12	IF_1	CALL_4
0x4001095	      0xb800000000	                              mov eax, 0	       463	describe.c	FUNCTION_12	IF_1	CALL_4
0x400109a	      0xe800000000	                          call 0x400109f	       463	describe.c	FUNCTION_12	IF_1	CALL_4
0x400109f	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       464	describe.c	FUNCTION_12	IF_1	CALL_5
0x40010a3	          0x488b38	                    mov rdi, qword [rax]	       464	describe.c	FUNCTION_12	IF_1	CALL_5
0x40010a6	      0xe800000000	                          call 0x40010ab	       464	describe.c	FUNCTION_12	IF_1	CALL_5
0x40010ab	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       465	describe.c	FUNCTION_12	IF_1
0x40010af	    0x48c700000000	                      mov qword [rax], 0	       465	describe.c	FUNCTION_12	IF_1
0x40010b6	        0x4883c408	                              add rsp, 8	       467	describe.c	FUNCTION_12
0x40010ba	              0x5b	                                 pop rbx	       467	describe.c	FUNCTION_12
0x40010bb	              0x5d	                                 pop rbp	       467	describe.c	FUNCTION_12
0x40010bc	              0xc3	                                     ret	       467	describe.c	FUNCTION_12
append_name	functions,0:IF,7:ELSE,1:DO,0:WHILE,0:SWITCH,0:FOR,0:CALL,12	105
0x4000400	            0x4155	                                push r13	       263	describe.c	FUNCTION_8
0x4000402	            0x4154	                                push r12	       263	describe.c	FUNCTION_8
0x4000404	              0x55	                                push rbp	       263	describe.c	FUNCTION_8
0x4000405	              0x53	                                push rbx	       263	describe.c	FUNCTION_8
0x4000406	        0x4883ec08	                              sub rsp, 8	       263	describe.c	FUNCTION_8
0x400040a	          0x4889fb	                            mov rbx, rdi	       263	describe.c	FUNCTION_8
0x400040d	          0x4889f5	                            mov rbp, rsi	       263	describe.c	FUNCTION_8
0x4000410	         0xfb64730	           movzx eax, byte [rdi + 0x30] 	       264	describe.c	FUNCTION_8	IF_1
0x4000414	          0x83e003	                              and eax, 3	       264	describe.c	FUNCTION_8	IF_1
0x4000417	            0x3c02	                               cmp al, 2	       264	describe.c	FUNCTION_8	IF_1
0x4000419	            0x754f	                           jne 0x400046a	       264	describe.c	FUNCTION_8	IF_1
0x400041b	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       264	describe.c	FUNCTION_8	IF_1
0x400041f	          0x4885c0	                           test rax, rax	       264	describe.c	FUNCTION_8	IF_1
0x4000422	            0x7553	                           jne 0x4000477	       264	describe.c	FUNCTION_8	IF_1
0x4000424	        0x488d7f31	                   lea rdi, [rdi + 0x31]	       265	describe.c	FUNCTION_8	IF_1	CALL_1
0x4000428	      0xe800000000	                          call 0x400042d	       265	describe.c	FUNCTION_8	IF_1	CALL_1
0x400042d	        0x48894328	             mov qword [rbx + 0x28], rax	       265	describe.c	FUNCTION_8	IF_1	CALL_1
0x4000431	          0x4885c0	                           test rax, rax	       266	describe.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4000434	            0x740c	                            je 0x4000442	       266	describe.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4000436	          0x4889c7	                            mov rdi, rax	       266	describe.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4000439	      0xe800000000	                          call 0x400043e	       266	describe.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x400043e	            0x85c0	                           test eax, eax	       266	describe.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4000440	            0x7428	                            je 0x400046a	       266	describe.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x4000442	        0x488b5b48	            mov rbx, qword [rbx + 0x48] 	       267	describe.c	FUNCTION_8	IF_1	CALL_4
0x4000446	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x400044b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000450	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000455	      0xe800000000	                          call 0x400045a	        54	gettext.h	FUNCTION_103	CALL_2
0x400045a	          0x4889de	                            mov rsi, rbx	       267	describe.c	FUNCTION_8	IF_1	CALL_4
0x400045d	          0x4889c7	                            mov rdi, rax	       267	describe.c	FUNCTION_8	IF_1	CALL_4
0x4000460	      0xb800000000	                              mov eax, 0	       267	describe.c	FUNCTION_8	IF_1	CALL_4
0x4000465	      0xe800000000	                          call 0x400046a	       267	describe.c	FUNCTION_8	IF_1	CALL_4
0x400046a	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       269	describe.c	FUNCTION_8	IF_3
0x400046e	          0x4885c0	                           test rax, rax	       269	describe.c	FUNCTION_8	IF_3
0x4000471	     0xf84dc000000	                            je 0x4000553	       269	describe.c	FUNCTION_8	IF_3
0x4000477	        0xf6433004	               test byte [rbx + 0x30], 4	       269	describe.c	FUNCTION_8	IF_3
0x400047b	     0xf858a000000	                           jne 0x400050b	       269	describe.c	FUNCTION_8	IF_3
0x4000481	        0x4c8b6020	            mov r12, qword [rax + 0x20] 	       270	describe.c	FUNCTION_8	IF_3	IF_4
0x4000485	          0x4d85e4	                           test r12, r12	       270	describe.c	FUNCTION_8	IF_3	IF_4
0x4000488	            0x7528	                           jne 0x40004b2	       270	describe.c	FUNCTION_8	IF_3	IF_4
0x400048a	        0x488b5b48	            mov rbx, qword [rbx + 0x48] 	       271	describe.c	FUNCTION_8	IF_3	CALL_6
0x400048e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x4000493	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x4000498	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x400049d	      0xe800000000	                          call 0x40004a2	        54	gettext.h	FUNCTION_103	CALL_2
0x40004a2	          0x4889de	                            mov rsi, rbx	       271	describe.c	FUNCTION_8	IF_3	CALL_6
0x40004a5	          0x4889c7	                            mov rdi, rax	       271	describe.c	FUNCTION_8	IF_3	CALL_6
0x40004a8	      0xb800000000	                              mov eax, 0	       271	describe.c	FUNCTION_8	IF_3	CALL_6
0x40004ad	      0xe800000000	                          call 0x40004b2	       271	describe.c	FUNCTION_8	IF_3	CALL_6
0x40004b2	    0x833d00000000	               cmp dword [0x040004b9], 0	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x40004b9	            0x740a	                            je 0x40004c5	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x40004bb	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x40004bf	        0x488d7005	                      lea rsi, [rax + 5]	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x40004c3	            0xeb04	                           jmp 0x40004c9	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x40004c5	        0x488b7348	            mov rsi, qword [rbx + 0x48] 	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x40004c9	          0x4c89e7	                            mov rdi, r12	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x40004cc	      0xe800000000	                          call 0x40004d1	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x40004d1	            0x85c0	                           test eax, eax	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x40004d3	            0x742b	                            je 0x4000500	       272	describe.c	FUNCTION_8	IF_3	IF_5	CALL_7
0x40004d5	        0x4c8b6b48	            mov r13, qword [rbx + 0x48] 	       273	describe.c	FUNCTION_8	IF_3	CALL_9
0x40004d9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_103	CALL_2
0x40004de	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x40004e3	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_103	CALL_2
0x40004e8	      0xe800000000	                          call 0x40004ed	        54	gettext.h	FUNCTION_103	CALL_2
0x40004ed	          0x4c89ea	                            mov rdx, r13	       273	describe.c	FUNCTION_8	IF_3	CALL_9
0x40004f0	          0x4c89e6	                            mov rsi, r12	       273	describe.c	FUNCTION_8	IF_3	CALL_9
0x40004f3	          0x4889c7	                            mov rdi, rax	       273	describe.c	FUNCTION_8	IF_3	CALL_9
0x40004f6	      0xb800000000	                              mov eax, 0	       273	describe.c	FUNCTION_8	IF_3	CALL_9
0x40004fb	      0xe800000000	                          call 0x4000500	       273	describe.c	FUNCTION_8	IF_3	CALL_9
0x4000500	        0x804b3004	                 or byte [rbx + 0x30], 4	       274	describe.c	FUNCTION_8	IF_3
0x4000504	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       277	describe.c	FUNCTION_8	IF_6
0x4000509	            0x7448	                            je 0x4000553	       277	describe.c	FUNCTION_8	IF_6
0x400050b	    0x833d00000000	               cmp dword [0x04000512], 0	       278	describe.c	FUNCTION_8	IF_6	IF_7
0x4000512	            0x7412	                            je 0x4000526	       278	describe.c	FUNCTION_8	IF_6	IF_7
0x4000514	      0xba05000000	                              mov edx, 5	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000519	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_94	CALL_2
0x400051e	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000521	      0xe800000000	                          call 0x4000526	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000526	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       280	describe.c	FUNCTION_8	IF_6	CALL_11
0x400052a	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       280	describe.c	FUNCTION_8	IF_6	CALL_11
0x400052e	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000533	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_94	CALL_2
0x400053a	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_94	CALL_2
0x400053d	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_94	CALL_2
0x400053f	          0x4889ca	                            mov rdx, rcx	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000542	          0x48f7d2	                                 not rdx	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000545	        0x488d52ff	                      lea rdx, [rdx - 1]	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000549	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_94	CALL_2
0x400054c	      0xe800000000	                          call 0x4000551	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000551	            0xeb24	                           jmp 0x4000577	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000553	        0x488b7348	            mov rsi, qword [rbx + 0x48] 	       282	describe.c	FUNCTION_8	ELSE_1	CALL_12
0x4000557	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_94	CALL_2
0x400055c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000563	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000566	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000568	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_94	CALL_2
0x400056b	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_94	CALL_2
0x400056f	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000572	      0xe800000000	                          call 0x4000577	       279	strbuf.h	FUNCTION_94	CALL_2
0x4000577	        0x4883c408	                              add rsp, 8	       284	describe.c	FUNCTION_8
0x400057b	              0x5b	                                 pop rbx	       284	describe.c	FUNCTION_8
0x400057c	              0x5d	                                 pop rbp	       284	describe.c	FUNCTION_8
0x400057d	            0x415c	                                 pop r12	       284	describe.c	FUNCTION_8
0x400057f	            0x415d	                                 pop r13	       284	describe.c	FUNCTION_8
0x4000581	              0xc3	                                     ret	       284	describe.c	FUNCTION_8
describe_blob	functions,0:IF,2:ELSE,0:DO,0:WHILE,0:SWITCH,0:FOR,0:CALL,8	69
0x4000582	              0x53	                                push rbx	       470	describe.c	FUNCTION_13
0x4000583	    0x4881ec100900	                          sub rsp, 0x910	       470	describe.c	FUNCTION_13
0x400058a	    0x64488b042528	                mov rax, qword fs:[0x28]	       470	describe.c	FUNCTION_13
0x4000593	    0x488984240809	            mov qword [rsp + 0x908], rax	       470	describe.c	FUNCTION_13
0x400059b	            0x31c0	                            xor eax, eax	       470	describe.c	FUNCTION_13
0x400059d	    0x48c704240000	                      mov qword [rsp], 0	       472	describe.c	FUNCTION_13
0x40005a5	    0xc74424080000	                  mov dword [rsp + 8], 0	       472	describe.c	FUNCTION_13
0x40005ad	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       472	describe.c	FUNCTION_13
0x40005b5	    0x488b05000000	            mov rax, qword [0x040005bc] 	       473	describe.c	FUNCTION_13
0x40005bc	      0x4889442410	             mov qword [rsp + 0x10], rax	       473	describe.c	FUNCTION_13
0x40005c1	    0x488b05000000	            mov rax, qword [0x040005c8] 	       473	describe.c	FUNCTION_13
0x40005c8	      0x4889442418	             mov qword [rsp + 0x18], rax	       473	describe.c	FUNCTION_13
0x40005cd	    0x8b0500000000	            mov eax, dword [0x040005d3] 	       473	describe.c	FUNCTION_13
0x40005d3	        0x89442420	             mov dword [rsp + 0x20], eax	       473	describe.c	FUNCTION_13
0x40005d7	    0x488b84242009	           mov rax, qword [rsp + 0x920] 	       473	describe.c	FUNCTION_13
0x40005df	      0x4889442424	             mov qword [rsp + 0x24], rax	       473	describe.c	FUNCTION_13
0x40005e4	    0x488b84242809	           mov rax, qword [rsp + 0x928] 	       473	describe.c	FUNCTION_13
0x40005ec	      0x488944242c	             mov qword [rsp + 0x2c], rax	       473	describe.c	FUNCTION_13
0x40005f1	    0x8b8424300900	           mov eax, dword [rsp + 0x930] 	       473	describe.c	FUNCTION_13
0x40005f8	        0x89442434	             mov dword [rsp + 0x34], eax	       473	describe.c	FUNCTION_13
0x40005fc	      0x48897c2438	             mov qword [rsp + 0x38], rdi	       473	describe.c	FUNCTION_13
0x4000601	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	       473	describe.c	FUNCTION_13
0x4000606	      0x48895c2440	             mov qword [rsp + 0x40], rbx	       473	describe.c	FUNCTION_13
0x400060b	        0x4883ec08	                              sub rsp, 8	       475	describe.c	FUNCTION_13	CALL_1
0x400060f	            0x6a00	                                  push 0	       475	describe.c	FUNCTION_13	CALL_1
0x4000611	    0x41b900000000	                              mov r9d, 0	       475	describe.c	FUNCTION_13	CALL_1
0x4000617	    0x41b800000000	                              mov r8d, 0	       475	describe.c	FUNCTION_13	CALL_1
0x400061d	      0xb900000000	                              mov ecx, 0	       475	describe.c	FUNCTION_13	CALL_1
0x4000622	      0xba00000000	                              mov edx, 0	       475	describe.c	FUNCTION_13	CALL_1
0x4000627	      0xbe00000000	                              mov esi, 0	       475	describe.c	FUNCTION_13	CALL_1
0x400062c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       475	describe.c	FUNCTION_13	CALL_1
0x4000631	      0xb800000000	                              mov eax, 0	       475	describe.c	FUNCTION_13	CALL_1
0x4000636	      0xe800000000	                          call 0x400063b	       475	describe.c	FUNCTION_13	CALL_1
0x400063b	      0xbe00000000	                              mov esi, 0	       479	describe.c	FUNCTION_13	CALL_2
0x4000640	          0x4889df	                            mov rdi, rbx	       479	describe.c	FUNCTION_13	CALL_2
0x4000643	      0xe800000000	                          call 0x4000648	       479	describe.c	FUNCTION_13	CALL_2
0x4000648	      0xb900000000	                              mov ecx, 0	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x400064d	          0x4889da	                            mov rdx, rbx	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x4000650	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x4000655	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x4000659	      0xe800000000	                          call 0x400065e	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x400065e	        0x4883c410	                           add rsp, 0x10	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x4000662	          0x83f801	                              cmp eax, 1	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x4000665	            0x7e19	                           jle 0x4000680	       480	describe.c	FUNCTION_13	IF_1	CALL_3
0x4000667	      0xba00000000	                              mov edx, 0	       481	describe.c	FUNCTION_13	CALL_4
0x400066c	      0xbee1010000	                          mov esi, 0x1e1	       481	describe.c	FUNCTION_13	CALL_4
0x4000671	      0xbf00000000	                              mov edi, 0	       481	describe.c	FUNCTION_13	CALL_4
0x4000676	      0xb800000000	                              mov eax, 0	       481	describe.c	FUNCTION_13	CALL_4
0x400067b	      0xe800000000	                          call 0x4000680	       481	describe.c	FUNCTION_13	CALL_4
0x4000680	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       483	describe.c	FUNCTION_13	IF_2	CALL_5
0x4000685	      0xe800000000	                          call 0x400068a	       483	describe.c	FUNCTION_13	IF_2	CALL_5
0x400068a	            0x85c0	                           test eax, eax	       483	describe.c	FUNCTION_13	IF_2	CALL_5
0x400068c	            0x740f	                            je 0x400069d	       483	describe.c	FUNCTION_13	IF_2	CALL_5
0x400068e	      0xbf00000000	                              mov edi, 0	       484	describe.c	FUNCTION_13	CALL_6
0x4000693	      0xb800000000	                              mov eax, 0	       484	describe.c	FUNCTION_13	CALL_6
0x4000698	      0xe800000000	                          call 0x400069d	       484	describe.c	FUNCTION_13	CALL_6
0x400069d	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       486	describe.c	FUNCTION_13	CALL_7
0x40006a2	      0xba00000000	                              mov edx, 0	       486	describe.c	FUNCTION_13	CALL_7
0x40006a7	      0xbe00000000	                              mov esi, 0	       486	describe.c	FUNCTION_13	CALL_7
0x40006ac	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       486	describe.c	FUNCTION_13	CALL_7
0x40006b1	      0xe800000000	                          call 0x40006b6	       486	describe.c	FUNCTION_13	CALL_7
0x40006b6	      0xe800000000	                          call 0x40006bb	       487	describe.c	FUNCTION_13	CALL_8
0x40006bb	    0x488b84240809	           mov rax, qword [rsp + 0x908] 	       488	describe.c	FUNCTION_13
0x40006c3	    0x644833042528	                xor rax, qword fs:[0x28]	       488	describe.c	FUNCTION_13
0x40006cc	            0x7405	                            je 0x40006d3	       488	describe.c	FUNCTION_13
0x40006ce	      0xe800000000	                          call 0x40006d3	       488	describe.c	FUNCTION_13
0x40006d3	    0x4881c4100900	                          add rsp, 0x910	       488	describe.c	FUNCTION_13
0x40006da	              0x5b	                                 pop rbx	       488	describe.c	FUNCTION_13
0x40006db	              0xc3	                                     ret	       488	describe.c	FUNCTION_13
