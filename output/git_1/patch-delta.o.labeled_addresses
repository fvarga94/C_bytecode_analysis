get_delta_hdr_size	ELSE,0:FOR,0:IF,0:functions,0:WHILE,0:DO,1:SWITCH,0:CALL,0	37
0x400004b	              0x55	                                push rbp	        91	delta.h	FUNCTION_2
0x400004c	          0x4889e5	                            mov rbp, rsp	        91	delta.h	FUNCTION_2
0x400004f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        91	delta.h	FUNCTION_2
0x4000053	        0x488975d0	             mov qword [rbp - 0x30], rsi	        91	delta.h	FUNCTION_2
0x4000057	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        92	delta.h	FUNCTION_2
0x400005b	          0x488b00	                    mov rax, qword [rax]	        92	delta.h	FUNCTION_2
0x400005e	        0x488945e8	             mov qword [rbp - 0x18], rax	        92	delta.h	FUNCTION_2
0x4000062	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        93	delta.h	FUNCTION_2
0x400006a	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	        94	delta.h	FUNCTION_2
0x4000071	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        96	delta.h	FUNCTION_2	DO_1
0x4000075	        0x488d5001	                      lea rdx, [rax + 1]	        96	delta.h	FUNCTION_2	DO_1
0x4000079	        0x488955e8	             mov qword [rbp - 0x18], rdx	        96	delta.h	FUNCTION_2	DO_1
0x400007d	           0xfb600	                   movzx eax, byte [rax]	        96	delta.h	FUNCTION_2	DO_1
0x4000080	           0xfb6c0	                           movzx eax, al	        96	delta.h	FUNCTION_2	DO_1
0x4000083	        0x488945f8	                mov qword [rbp - 8], rax	        96	delta.h	FUNCTION_2	DO_1
0x4000087	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	delta.h	FUNCTION_2	DO_1
0x400008b	          0x83e07f	                           and eax, 0x7f	        97	delta.h	FUNCTION_2	DO_1
0x400008e	          0x4889c2	                            mov rdx, rax	        97	delta.h	FUNCTION_2	DO_1
0x4000091	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        97	delta.h	FUNCTION_2	DO_1
0x4000094	            0x89c1	                            mov ecx, eax	        97	delta.h	FUNCTION_2	DO_1
0x4000096	          0x48d3e2	                             shl rdx, cl	        97	delta.h	FUNCTION_2	DO_1
0x4000099	          0x4889d0	                            mov rax, rdx	        97	delta.h	FUNCTION_2	DO_1
0x400009c	        0x480945f0	              or qword [rbp - 0x10], rax	        97	delta.h	FUNCTION_2	DO_1
0x40000a0	        0x8345e407	               add dword [rbp - 0x1c], 7	        98	delta.h	FUNCTION_2	DO_1
0x40000a4	        0x488b45f8	                mov rax, qword [rbp - 8]	        99	delta.h	FUNCTION_2	DO_1
0x40000a8	      0x2580000000	                           and eax, 0x80	        99	delta.h	FUNCTION_2	DO_1
0x40000ad	          0x4885c0	                           test rax, rax	        99	delta.h	FUNCTION_2	DO_1
0x40000b0	            0x740a	                            je 0x40000bc	        99	delta.h	FUNCTION_2	DO_1
0x40000b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        99	delta.h	FUNCTION_2	DO_1
0x40000b6	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	        99	delta.h	FUNCTION_2	DO_1
0x40000ba	            0x72b5	                            jb 0x4000071	        99	delta.h	FUNCTION_2	DO_1
0x40000bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       100	delta.h	FUNCTION_2
0x40000c0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       100	delta.h	FUNCTION_2
0x40000c4	          0x488910	                    mov qword [rax], rdx	       100	delta.h	FUNCTION_2
0x40000c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       101	delta.h	FUNCTION_2
0x40000cb	              0x5d	                                 pop rbp	       102	delta.h	FUNCTION_2
0x40000cc	              0xc3	                                     ret	       102	delta.h	FUNCTION_2
patch_delta	ELSE,2:FOR,0:IF,15:functions,0:WHILE,1:DO,0:SWITCH,0:CALL,6	221
0x40000cd	              0x55	                                push rbp	        18	patch-delta.c	FUNCTION_3
0x40000ce	          0x4889e5	                            mov rbp, rsp	        18	patch-delta.c	FUNCTION_3
0x40000d1	        0x4883c480	             add rsp, 0xffffffffffffff80	        18	patch-delta.c	FUNCTION_3
0x40000d5	        0x48897da8	             mov qword [rbp - 0x58], rdi	        18	patch-delta.c	FUNCTION_3
0x40000d9	        0x488975a0	             mov qword [rbp - 0x60], rsi	        18	patch-delta.c	FUNCTION_3
0x40000dd	        0x48895598	             mov qword [rbp - 0x68], rdx	        18	patch-delta.c	FUNCTION_3
0x40000e1	        0x48894d90	             mov qword [rbp - 0x70], rcx	        18	patch-delta.c	FUNCTION_3
0x40000e5	        0x4c894588	              mov qword [rbp - 0x78], r8	        18	patch-delta.c	FUNCTION_3
0x40000e9	    0x64488b042528	                mov rax, qword fs:[0x28]	        18	patch-delta.c	FUNCTION_3
0x40000f2	        0x488945f8	                mov qword [rbp - 8], rax	        18	patch-delta.c	FUNCTION_3
0x40000f6	            0x31c0	                            xor eax, eax	        18	patch-delta.c	FUNCTION_3
0x40000f8	      0x48837d9003	               cmp qword [rbp - 0x70], 3	        23	patch-delta.c	FUNCTION_3	IF_1
0x40000fd	            0x770a	                            ja 0x4000109	        23	patch-delta.c	FUNCTION_3	IF_1
0x40000ff	      0xb800000000	                              mov eax, 0	        24	patch-delta.c	FUNCTION_3	IF_1
0x4000104	      0xe9db020000	                           jmp 0x40003e4	        24	patch-delta.c	FUNCTION_3	IF_1
0x4000109	        0x488b4598	             mov rax, qword [rbp - 0x68]	        26	patch-delta.c	FUNCTION_3
0x400010d	        0x488945c0	             mov qword [rbp - 0x40], rax	        26	patch-delta.c	FUNCTION_3
0x4000111	        0x488b5598	             mov rdx, qword [rbp - 0x68]	        27	patch-delta.c	FUNCTION_3
0x4000115	        0x488b4590	             mov rax, qword [rbp - 0x70]	        27	patch-delta.c	FUNCTION_3
0x4000119	          0x4801d0	                            add rax, rdx	        27	patch-delta.c	FUNCTION_3
0x400011c	        0x488945e8	             mov qword [rbp - 0x18], rax	        27	patch-delta.c	FUNCTION_3
0x4000120	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        30	patch-delta.c	FUNCTION_3	CALL_1
0x4000124	        0x488d45c0	                   lea rax, [rbp - 0x40]	        30	patch-delta.c	FUNCTION_3	CALL_1
0x4000128	          0x4889d6	                            mov rsi, rdx	        30	patch-delta.c	FUNCTION_3	CALL_1
0x400012b	          0x4889c7	                            mov rdi, rax	        30	patch-delta.c	FUNCTION_3	CALL_1
0x400012e	      0xe818ffffff	             call sym.get_delta_hdr_size	        30	patch-delta.c	FUNCTION_3	CALL_1
0x4000133	        0x488945d0	             mov qword [rbp - 0x30], rax	        30	patch-delta.c	FUNCTION_3	CALL_1
0x4000137	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        31	patch-delta.c	FUNCTION_3	IF_2
0x400013b	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	        31	patch-delta.c	FUNCTION_3	IF_2
0x400013f	            0x740a	                            je 0x400014b	        31	patch-delta.c	FUNCTION_3	IF_2
0x4000141	      0xb800000000	                              mov eax, 0	        32	patch-delta.c	FUNCTION_3	IF_2
0x4000146	      0xe999020000	                           jmp 0x40003e4	        32	patch-delta.c	FUNCTION_3	IF_2
0x400014b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        35	patch-delta.c	FUNCTION_3	CALL_2
0x400014f	        0x488d45c0	                   lea rax, [rbp - 0x40]	        35	patch-delta.c	FUNCTION_3	CALL_2
0x4000153	          0x4889d6	                            mov rsi, rdx	        35	patch-delta.c	FUNCTION_3	CALL_2
0x4000156	          0x4889c7	                            mov rdi, rax	        35	patch-delta.c	FUNCTION_3	CALL_2
0x4000159	      0xe8edfeffff	             call sym.get_delta_hdr_size	        35	patch-delta.c	FUNCTION_3	CALL_2
0x400015e	        0x488945d0	             mov qword [rbp - 0x30], rax	        35	patch-delta.c	FUNCTION_3	CALL_2
0x4000162	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        36	patch-delta.c	FUNCTION_3	CALL_3
0x4000166	          0x4889c7	                            mov rdi, rax	        36	patch-delta.c	FUNCTION_3	CALL_3
0x4000169	      0xe800000000	                          call 0x400016e	        36	patch-delta.c	FUNCTION_3	CALL_3
0x400016e	        0x488945f0	             mov qword [rbp - 0x10], rax	        36	patch-delta.c	FUNCTION_3	CALL_3
0x4000172	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        38	patch-delta.c	FUNCTION_3
0x4000176	        0x488945c8	             mov qword [rbp - 0x38], rax	        38	patch-delta.c	FUNCTION_3
0x400017a	      0xe900020000	                           jmp 0x400037f	        39	patch-delta.c	FUNCTION_3	WHILE_1
0x400017f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        40	patch-delta.c	FUNCTION_3	WHILE_1
0x4000183	        0x488d5001	                      lea rdx, [rax + 1]	        40	patch-delta.c	FUNCTION_3	WHILE_1
0x4000187	        0x488955c0	             mov qword [rbp - 0x40], rdx	        40	patch-delta.c	FUNCTION_3	WHILE_1
0x400018b	           0xfb600	                   movzx eax, byte [rax]	        40	patch-delta.c	FUNCTION_3	WHILE_1
0x400018e	          0x8845bf	               mov byte [rbp - 0x41], al	        40	patch-delta.c	FUNCTION_3	WHILE_1
0x4000191	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        41	patch-delta.c	FUNCTION_3	WHILE_1	IF_3
0x4000195	            0x84c0	                             test al, al	        41	patch-delta.c	FUNCTION_3	WHILE_1	IF_3
0x4000197	     0xf8984010000	                           jns 0x4000321	        41	patch-delta.c	FUNCTION_3	WHILE_1	IF_3
0x400019d	    0x48c745d80000	               mov qword [rbp - 0x28], 0	        42	patch-delta.c	FUNCTION_3	WHILE_1	IF_3
0x40001a5	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        42	patch-delta.c	FUNCTION_3	WHILE_1	IF_3
0x40001ad	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        43	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x40001b1	          0x83e001	                              and eax, 1	        43	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x40001b4	            0x85c0	                           test eax, eax	        43	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x40001b6	            0x7416	                            je 0x40001ce	        43	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x40001b8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        43	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x40001bc	        0x488d5001	                      lea rdx, [rax + 1]	        43	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x40001c0	        0x488955c0	             mov qword [rbp - 0x40], rdx	        43	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x40001c4	           0xfb600	                   movzx eax, byte [rax]	        43	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x40001c7	           0xfb6c0	                           movzx eax, al	        43	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x40001ca	        0x488945d8	             mov qword [rbp - 0x28], rax	        43	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x40001ce	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        44	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_5
0x40001d2	          0x83e002	                              and eax, 2	        44	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_5
0x40001d5	            0x85c0	                           test eax, eax	        44	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_5
0x40001d7	            0x741b	                            je 0x40001f4	        44	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_5
0x40001d9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        44	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_5
0x40001dd	        0x488d5001	                      lea rdx, [rax + 1]	        44	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_5
0x40001e1	        0x488955c0	             mov qword [rbp - 0x40], rdx	        44	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_5
0x40001e5	           0xfb600	                   movzx eax, byte [rax]	        44	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_5
0x40001e8	           0xfb6c0	                           movzx eax, al	        44	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_5
0x40001eb	          0xc1e008	                              shl eax, 8	        44	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_5
0x40001ee	            0x4898	                                    cdqe	        44	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_5
0x40001f0	        0x480945d8	              or qword [rbp - 0x28], rax	        44	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_5
0x40001f4	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        45	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_6
0x40001f8	          0x83e004	                              and eax, 4	        45	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_6
0x40001fb	            0x85c0	                           test eax, eax	        45	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_6
0x40001fd	            0x741b	                            je 0x400021a	        45	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_6
0x40001ff	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        45	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_6
0x4000203	        0x488d5001	                      lea rdx, [rax + 1]	        45	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_6
0x4000207	        0x488955c0	             mov qword [rbp - 0x40], rdx	        45	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_6
0x400020b	           0xfb600	                   movzx eax, byte [rax]	        45	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_6
0x400020e	           0xfb6c0	                           movzx eax, al	        45	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_6
0x4000211	          0xc1e010	                           shl eax, 0x10	        45	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_6
0x4000214	            0x4898	                                    cdqe	        45	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_6
0x4000216	        0x480945d8	              or qword [rbp - 0x28], rax	        45	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_6
0x400021a	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        46	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_7
0x400021e	          0x83e008	                              and eax, 8	        46	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_7
0x4000221	            0x85c0	                           test eax, eax	        46	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_7
0x4000223	            0x741b	                            je 0x4000240	        46	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_7
0x4000225	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        46	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_7
0x4000229	        0x488d5001	                      lea rdx, [rax + 1]	        46	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_7
0x400022d	        0x488955c0	             mov qword [rbp - 0x40], rdx	        46	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_7
0x4000231	           0xfb600	                   movzx eax, byte [rax]	        46	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_7
0x4000234	           0xfb6c0	                           movzx eax, al	        46	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_7
0x4000237	          0xc1e018	                           shl eax, 0x18	        46	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_7
0x400023a	            0x89c0	                            mov eax, eax	        46	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_7
0x400023c	        0x480945d8	              or qword [rbp - 0x28], rax	        46	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_7
0x4000240	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        47	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_8
0x4000244	          0x83e010	                           and eax, 0x10	        47	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_8
0x4000247	            0x85c0	                           test eax, eax	        47	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_8
0x4000249	            0x7416	                            je 0x4000261	        47	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_8
0x400024b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        47	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_8
0x400024f	        0x488d5001	                      lea rdx, [rax + 1]	        47	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_8
0x4000253	        0x488955c0	             mov qword [rbp - 0x40], rdx	        47	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_8
0x4000257	           0xfb600	                   movzx eax, byte [rax]	        47	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_8
0x400025a	           0xfb6c0	                           movzx eax, al	        47	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_8
0x400025d	        0x488945e0	             mov qword [rbp - 0x20], rax	        47	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_8
0x4000261	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        48	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_9
0x4000265	          0x83e020	                           and eax, 0x20	        48	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_9
0x4000268	            0x85c0	                           test eax, eax	        48	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_9
0x400026a	            0x741b	                            je 0x4000287	        48	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_9
0x400026c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        48	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_9
0x4000270	        0x488d5001	                      lea rdx, [rax + 1]	        48	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_9
0x4000274	        0x488955c0	             mov qword [rbp - 0x40], rdx	        48	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_9
0x4000278	           0xfb600	                   movzx eax, byte [rax]	        48	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_9
0x400027b	           0xfb6c0	                           movzx eax, al	        48	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_9
0x400027e	          0xc1e008	                              shl eax, 8	        48	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_9
0x4000281	            0x4898	                                    cdqe	        48	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_9
0x4000283	        0x480945e0	              or qword [rbp - 0x20], rax	        48	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_9
0x4000287	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        49	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_10
0x400028b	          0x83e040	                           and eax, 0x40	        49	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_10
0x400028e	            0x85c0	                           test eax, eax	        49	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_10
0x4000290	            0x741b	                            je 0x40002ad	        49	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_10
0x4000292	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        49	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_10
0x4000296	        0x488d5001	                      lea rdx, [rax + 1]	        49	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_10
0x400029a	        0x488955c0	             mov qword [rbp - 0x40], rdx	        49	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_10
0x400029e	           0xfb600	                   movzx eax, byte [rax]	        49	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_10
0x40002a1	           0xfb6c0	                           movzx eax, al	        49	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_10
0x40002a4	          0xc1e010	                           shl eax, 0x10	        49	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_10
0x40002a7	            0x4898	                                    cdqe	        49	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_10
0x40002a9	        0x480945e0	              or qword [rbp - 0x20], rax	        49	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_10
0x40002ad	      0x48837de000	               cmp qword [rbp - 0x20], 0	        50	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_11
0x40002b2	            0x7508	                           jne 0x40002bc	        50	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_11
0x40002b4	    0x48c745e00000	         mov qword [rbp - 0x20], 0x10000	        50	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_11
0x40002bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        51	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_12
0x40002c0	          0x48f7d0	                                 not rax	        51	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_12
0x40002c3	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        51	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_12
0x40002c7	     0xf82c3000000	                            jb 0x4000390	        51	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_12
0x40002cd	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        52	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_12
0x40002d1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        52	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_12
0x40002d5	          0x4801d0	                            add rax, rdx	        52	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_12
0x40002d8	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	        51	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_12
0x40002dc	     0xf87ae000000	                            ja 0x4000390	        51	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_12
0x40002e2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        52	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_12
0x40002e6	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	        52	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_12
0x40002ea	     0xf87a0000000	                            ja 0x4000390	        52	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	IF_12
0x40002f0	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	        55	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	CALL_4
0x40002f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        55	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	CALL_4
0x40002f8	        0x488d0c02	                    lea rcx, [rdx + rax]	        55	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	CALL_4
0x40002fc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        55	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	CALL_4
0x4000300	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        55	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	CALL_4
0x4000304	          0x4889ce	                            mov rsi, rcx	        55	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	CALL_4
0x4000307	          0x4889c7	                            mov rdi, rax	        55	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	CALL_4
0x400030a	      0xe800000000	                          call 0x400030f	        55	patch-delta.c	FUNCTION_3	WHILE_1	IF_3	CALL_4
0x400030f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        56	patch-delta.c	FUNCTION_3	WHILE_1	IF_3
0x4000313	        0x480145c8	            add qword [rbp - 0x38], rax 	        56	patch-delta.c	FUNCTION_3	WHILE_1	IF_3
0x4000317	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        57	patch-delta.c	FUNCTION_3	WHILE_1	IF_3
0x400031b	        0x482945d0	             sub qword [rbp - 0x30], rax	        57	patch-delta.c	FUNCTION_3	WHILE_1	IF_3
0x400031f	            0xeb5e	                           jmp 0x400037f	        57	patch-delta.c	FUNCTION_3	WHILE_1	IF_3
0x4000321	        0x807dbf00	                cmp byte [rbp - 0x41], 0	        58	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13
0x4000325	            0x7442	                            je 0x4000369	        58	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13
0x4000327	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        59	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13	IF_14
0x400032b	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	        59	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13	IF_14
0x400032f	            0x775e	                            ja 0x400038f	        59	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13	IF_14
0x4000331	         0xfb655bf	            movzx edx, byte [rbp - 0x41]	        61	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13	CALL_5
0x4000335	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	        61	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13	CALL_5
0x4000339	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        61	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13	CALL_5
0x400033d	          0x4889ce	                            mov rsi, rcx	        61	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13	CALL_5
0x4000340	          0x4889c7	                            mov rdi, rax	        61	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13	CALL_5
0x4000343	      0xe800000000	                          call 0x4000348	        61	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13	CALL_5
0x4000348	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        62	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13
0x400034c	        0x480145c8	            add qword [rbp - 0x38], rax 	        62	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13
0x4000350	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	        63	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13
0x4000354	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        63	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13
0x4000358	          0x4801d0	                            add rax, rdx	        63	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13
0x400035b	        0x488945c0	             mov qword [rbp - 0x40], rax	        63	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13
0x400035f	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        64	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13
0x4000363	        0x482945d0	             sub qword [rbp - 0x30], rax	        64	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13
0x4000367	            0xeb16	                           jmp 0x400037f	        64	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13
0x4000369	      0xbf00000000	                              mov edi, 0	        71	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_2
0x400036e	      0xb800000000	                              mov eax, 0	        71	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_2
0x4000373	      0xe800000000	                          call 0x4000378	        71	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_2
0x4000378	      0xe8c3fcffff	                    call sym.const_error	        71	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_2
0x400037d	            0xeb36	                           jmp 0x40003b5	        72	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_2
0x400037f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        39	patch-delta.c	FUNCTION_3	WHILE_1
0x4000383	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	        39	patch-delta.c	FUNCTION_3	WHILE_1
0x4000387	     0xf82f2fdffff	                            jb 0x400017f	        39	patch-delta.c	FUNCTION_3	WHILE_1
0x400038d	            0xeb01	                           jmp 0x4000390	        39	patch-delta.c	FUNCTION_3	WHILE_1
0x400038f	              0x90	                                     nop	        60	patch-delta.c	FUNCTION_3	WHILE_1	ELSE_1	IF_13	IF_14
0x4000390	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        77	patch-delta.c	FUNCTION_3	IF_15
0x4000394	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	        77	patch-delta.c	FUNCTION_3	IF_15
0x4000398	            0x7507	                           jne 0x40003a1	        77	patch-delta.c	FUNCTION_3	IF_15
0x400039a	      0x48837dd000	               cmp qword [rbp - 0x30], 0	        77	patch-delta.c	FUNCTION_3	IF_15
0x400039f	            0x7427	                            je 0x40003c8	        77	patch-delta.c	FUNCTION_3	IF_15
0x40003a1	      0xbf00000000	                              mov edi, 0	        78	patch-delta.c	FUNCTION_3	IF_15
0x40003a6	      0xb800000000	                              mov eax, 0	        78	patch-delta.c	FUNCTION_3	IF_15
0x40003ab	      0xe800000000	                          call 0x40003b0	        78	patch-delta.c	FUNCTION_3	IF_15
0x40003b0	      0xe88bfcffff	                    call sym.const_error	        78	patch-delta.c	FUNCTION_3	IF_15
0x40003b5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        80	patch-delta.c	FUNCTION_3	IF_15	CALL_6
0x40003b9	          0x4889c7	                            mov rdi, rax	        80	patch-delta.c	FUNCTION_3	IF_15	CALL_6
0x40003bc	      0xe800000000	                          call 0x40003c1	        80	patch-delta.c	FUNCTION_3	IF_15	CALL_6
0x40003c1	      0xb800000000	                              mov eax, 0	        81	patch-delta.c	FUNCTION_3	IF_15
0x40003c6	            0xeb1c	                           jmp 0x40003e4	        81	patch-delta.c	FUNCTION_3	IF_15
0x40003c8	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        84	patch-delta.c	FUNCTION_3
0x40003cc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        84	patch-delta.c	FUNCTION_3
0x40003d0	          0x4829c2	                            sub rdx, rax	        84	patch-delta.c	FUNCTION_3
0x40003d3	          0x4889d0	                            mov rax, rdx	        84	patch-delta.c	FUNCTION_3
0x40003d6	          0x4889c2	                            mov rdx, rax	        84	patch-delta.c	FUNCTION_3
0x40003d9	        0x488b4588	             mov rax, qword [rbp - 0x78]	        84	patch-delta.c	FUNCTION_3
0x40003dd	          0x488910	                    mov qword [rax], rdx	        84	patch-delta.c	FUNCTION_3
0x40003e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        85	patch-delta.c	FUNCTION_3
0x40003e4	        0x488b4df8	                mov rcx, qword [rbp - 8]	        86	patch-delta.c	FUNCTION_3
0x40003e8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        86	patch-delta.c	FUNCTION_3
0x40003f1	            0x7405	                            je 0x40003f8	        86	patch-delta.c	FUNCTION_3
0x40003f3	      0xe800000000	                          call 0x40003f8	        86	patch-delta.c	FUNCTION_3
0x40003f8	              0xc9	                                   leave	        86	patch-delta.c	FUNCTION_3
0x40003f9	              0xc3	                                     ret	        86	patch-delta.c	FUNCTION_3
const_error	ELSE,0:FOR,0:IF,0:functions,0:WHILE,0:DO,0:SWITCH,0:CALL,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_9
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_9
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_9
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_9
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_9
