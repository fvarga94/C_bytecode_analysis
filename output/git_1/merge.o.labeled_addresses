merging_a_throwaway_tag	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,9:ELSE,1:IF,2	65
0x4003913	              0x55	                                push rbp	      1127	merge.c	FUNCTION_39
0x4003914	          0x4889e5	                            mov rbp, rsp	      1127	merge.c	FUNCTION_39
0x4003917	        0x4883ec40	                           sub rsp, 0x40	      1127	merge.c	FUNCTION_39
0x400391b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1127	merge.c	FUNCTION_39
0x400391f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1127	merge.c	FUNCTION_39
0x4003928	        0x488945f8	                mov qword [rbp - 8], rax	      1127	merge.c	FUNCTION_39
0x400392c	            0x31c0	                            xor eax, eax	      1127	merge.c	FUNCTION_39
0x400392e	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1130	merge.c	FUNCTION_39
0x4003935	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1133	merge.c	FUNCTION_39	IF_1	CALL_1
0x4003939	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1133	merge.c	FUNCTION_39	IF_1	CALL_1
0x400393d	          0x4885c0	                           test rax, rax	      1133	merge.c	FUNCTION_39	IF_1	CALL_1
0x4003940	            0x7425	                            je 0x4003967	      1133	merge.c	FUNCTION_39	IF_1	CALL_1
0x4003942	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1134	merge.c	FUNCTION_39	IF_1	CALL_2
0x4003946	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1134	merge.c	FUNCTION_39	IF_1	CALL_2
0x400394a	          0x488b00	                    mov rax, qword [rax]	      1134	merge.c	FUNCTION_39	IF_1	CALL_2
0x400394d	          0x4885c0	                           test rax, rax	      1133	merge.c	FUNCTION_39	IF_1	CALL_1
0x4003950	            0x7415	                            je 0x4003967	      1133	merge.c	FUNCTION_39	IF_1	CALL_1
0x4003952	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1135	merge.c	FUNCTION_39	IF_1	CALL_3
0x4003956	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1135	merge.c	FUNCTION_39	IF_1	CALL_3
0x400395a	          0x488b00	                    mov rax, qword [rax]	      1135	merge.c	FUNCTION_39	IF_1	CALL_3
0x400395d	           0xfb600	                   movzx eax, byte [rax]	      1135	merge.c	FUNCTION_39	IF_1	CALL_3
0x4003960	          0x83e00e	                            and eax, 0xe	      1135	merge.c	FUNCTION_39	IF_1	CALL_3
0x4003963	            0x3c08	                               cmp al, 8	      1134	merge.c	FUNCTION_39	IF_1	CALL_2
0x4003965	            0x7405	                            je 0x400396c	      1134	merge.c	FUNCTION_39	IF_1	CALL_2
0x4003967	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1136	merge.c	FUNCTION_39	IF_1
0x400396a	            0xeb7d	                           jmp 0x40039e9	      1136	merge.c	FUNCTION_39	IF_1
0x400396c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1153	merge.c	FUNCTION_39	CALL_5
0x4003970	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1153	merge.c	FUNCTION_39	CALL_5
0x4003974	          0x488b00	                    mov rax, qword [rax]	      1153	merge.c	FUNCTION_39	CALL_5
0x4003977	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1152	merge.c	FUNCTION_39	CALL_4
0x400397b	          0x4889c6	                            mov rsi, rax	      1152	merge.c	FUNCTION_39	CALL_4
0x400397e	      0xbf00000000	                              mov edi, 0	      1152	merge.c	FUNCTION_39	CALL_4
0x4003983	      0xb800000000	                              mov eax, 0	      1152	merge.c	FUNCTION_39	CALL_4
0x4003988	      0xe800000000	                          call 0x400398d	      1152	merge.c	FUNCTION_39	CALL_4
0x400398d	        0x488945d8	             mov qword [rbp - 0x28], rax	      1152	merge.c	FUNCTION_39	CALL_4
0x4003991	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1154	merge.c	FUNCTION_39	IF_2	CALL_6
0x4003995	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1154	merge.c	FUNCTION_39	IF_2	CALL_6
0x4003999	          0x4889d6	                            mov rsi, rdx	      1154	merge.c	FUNCTION_39	IF_2	CALL_6
0x400399c	          0x4889c7	                            mov rdi, rax	      1154	merge.c	FUNCTION_39	IF_2	CALL_6
0x400399f	      0xe800000000	                          call 0x40039a4	      1154	merge.c	FUNCTION_39	IF_2	CALL_6
0x40039a4	            0x85c0	                           test eax, eax	      1154	merge.c	FUNCTION_39	IF_2	CALL_6
0x40039a6	            0x752b	                           jne 0x40039d3	      1154	merge.c	FUNCTION_39	IF_2	CALL_6
0x40039a8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1155	merge.c	FUNCTION_39	IF_2	CALL_8
0x40039ac	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1155	merge.c	FUNCTION_39	IF_2	CALL_8
0x40039b0	          0x488b00	                    mov rax, qword [rax]	      1155	merge.c	FUNCTION_39	IF_2	CALL_8
0x40039b3	        0x488d5004	                      lea rdx, [rax + 4]	      1155	merge.c	FUNCTION_39	IF_2	CALL_8
0x40039b7	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1155	merge.c	FUNCTION_39	IF_2	CALL_8
0x40039bb	          0x4889d6	                            mov rsi, rdx	      1155	merge.c	FUNCTION_39	IF_2	CALL_8
0x40039be	          0x4889c7	                            mov rdi, rax	      1155	merge.c	FUNCTION_39	IF_2	CALL_8
0x40039c1	      0xe885c9ffff	                         call sym.oidcmp	      1155	merge.c	FUNCTION_39	IF_2	CALL_8
0x40039c6	            0x85c0	                           test eax, eax	      1154	merge.c	FUNCTION_39	IF_2	CALL_6
0x40039c8	            0x7509	                           jne 0x40039d3	      1154	merge.c	FUNCTION_39	IF_2	CALL_6
0x40039ca	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1156	merge.c	FUNCTION_39	IF_2
0x40039d1	            0xeb07	                           jmp 0x40039da	      1156	merge.c	FUNCTION_39	IF_2
0x40039d3	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      1158	merge.c	FUNCTION_39	ELSE_1
0x40039da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1159	merge.c	FUNCTION_39	CALL_9
0x40039de	          0x4889c7	                            mov rdi, rax	      1159	merge.c	FUNCTION_39	CALL_9
0x40039e1	      0xe800000000	                          call 0x40039e6	      1159	merge.c	FUNCTION_39	CALL_9
0x40039e6	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1160	merge.c	FUNCTION_39
0x40039e9	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1161	merge.c	FUNCTION_39
0x40039ed	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1161	merge.c	FUNCTION_39
0x40039f6	            0x7405	                            je 0x40039fd	      1161	merge.c	FUNCTION_39
0x40039f8	      0xe800000000	                          call 0x40039fd	      1161	merge.c	FUNCTION_39
0x40039fd	              0xc9	                                   leave	      1161	merge.c	FUNCTION_39
0x40039fe	              0xc3	                                     ret	      1161	merge.c	FUNCTION_39
oidcmp	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,1:ELSE,0:IF,0	12
0x400034b	              0x55	                                push rbp	       979	cache.h	FUNCTION_49
0x400034c	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_49
0x400034f	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_49
0x4000353	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_49
0x4000357	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_49
0x400035b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_49	CALL_1
0x400035f	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_49	CALL_1
0x4000363	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_49	CALL_1
0x4000366	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_49	CALL_1
0x4000369	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_49	CALL_1
0x400036e	              0xc9	                                   leave	       981	cache.h	FUNCTION_49
0x400036f	              0xc3	                                     ret	       981	cache.h	FUNCTION_49
write_merge_heads	FOR,1:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,10:ELSE,1:IF,2	88
0x4002f64	              0x55	                                push rbp	       928	merge.c	FUNCTION_32
0x4002f65	          0x4889e5	                            mov rbp, rsp	       928	merge.c	FUNCTION_32
0x4002f68	            0x4154	                                push r12	       928	merge.c	FUNCTION_32
0x4002f6a	              0x53	                                push rbx	       928	merge.c	FUNCTION_32
0x4002f6b	        0x4883ec50	                           sub rsp, 0x50	       928	merge.c	FUNCTION_32
0x4002f6f	        0x48897da8	             mov qword [rbp - 0x58], rdi	       928	merge.c	FUNCTION_32
0x4002f73	    0x64488b042528	                mov rax, qword fs:[0x28]	       928	merge.c	FUNCTION_32
0x4002f7c	        0x488945e8	             mov qword [rbp - 0x18], rax	       928	merge.c	FUNCTION_32
0x4002f80	            0x31c0	                            xor eax, eax	       928	merge.c	FUNCTION_32
0x4002f82	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       930	merge.c	FUNCTION_32
0x4002f8a	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       930	merge.c	FUNCTION_32
0x4002f92	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       930	merge.c	FUNCTION_32
0x4002f9a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       932	merge.c	FUNCTION_32	FOR_1
0x4002f9e	        0x488945b8	             mov qword [rbp - 0x48], rax	       932	merge.c	FUNCTION_32	FOR_1
0x4002fa2	            0xeb7a	                           jmp 0x400301e	       932	merge.c	FUNCTION_32	FOR_1
0x4002fa4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       934	merge.c	FUNCTION_32	FOR_1
0x4002fa8	          0x488b00	                    mov rax, qword [rax]	       934	merge.c	FUNCTION_32	FOR_1
0x4002fab	        0x488945c8	             mov qword [rbp - 0x38], rax	       934	merge.c	FUNCTION_32	FOR_1
0x4002faf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       935	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002fb3	        0x488b4018	            mov rax, qword [rax + 0x18] 	       935	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002fb7	          0x4885c0	                           test rax, rax	       935	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002fba	            0x7425	                            je 0x4002fe1	       935	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002fbc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       935	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002fc0	        0x488b4018	            mov rax, qword [rax + 0x18] 	       935	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002fc4	          0x488b00	                    mov rax, qword [rax]	       935	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002fc7	          0x4885c0	                           test rax, rax	       935	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002fca	            0x7415	                            je 0x4002fe1	       935	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002fcc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       936	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_2
0x4002fd0	        0x488b4018	            mov rax, qword [rax + 0x18] 	       936	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_2
0x4002fd4	          0x488b00	                    mov rax, qword [rax]	       936	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_2
0x4002fd7	        0x4883c004	                              add rax, 4	       936	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_2
0x4002fdb	        0x488945c0	             mov qword [rbp - 0x40], rax	       936	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_2
0x4002fdf	            0xeb0c	                           jmp 0x4002fed	       936	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_2
0x4002fe1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       938	merge.c	FUNCTION_32	FOR_1	ELSE_1
0x4002fe5	        0x4883c004	                              add rax, 4	       938	merge.c	FUNCTION_32	FOR_1	ELSE_1
0x4002fe9	        0x488945c0	             mov qword [rbp - 0x40], rax	       938	merge.c	FUNCTION_32	FOR_1	ELSE_1
0x4002fed	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       940	merge.c	FUNCTION_32	FOR_1	CALL_4
0x4002ff1	          0x4889c7	                            mov rdi, rax	       940	merge.c	FUNCTION_32	FOR_1	CALL_4
0x4002ff4	      0xe800000000	                          call 0x4002ff9	       940	merge.c	FUNCTION_32	FOR_1	CALL_4
0x4002ff9	          0x4889c2	                            mov rdx, rax	       940	merge.c	FUNCTION_32	FOR_1	CALL_4
0x4002ffc	        0x488d45d0	                   lea rax, [rbp - 0x30]	       940	merge.c	FUNCTION_32	FOR_1	CALL_4
0x4003000	      0xbe00000000	                              mov esi, 0	       940	merge.c	FUNCTION_32	FOR_1	CALL_4
0x4003005	          0x4889c7	                            mov rdi, rax	       940	merge.c	FUNCTION_32	FOR_1	CALL_4
0x4003008	      0xb800000000	                              mov eax, 0	       940	merge.c	FUNCTION_32	FOR_1	CALL_4
0x400300d	      0xe800000000	                          call 0x4003012	       940	merge.c	FUNCTION_32	FOR_1	CALL_4
0x4003012	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       932	merge.c	FUNCTION_32	FOR_1
0x4003016	        0x488b4008	                mov rax, qword [rax + 8]	       932	merge.c	FUNCTION_32	FOR_1
0x400301a	        0x488945b8	             mov qword [rbp - 0x48], rax	       932	merge.c	FUNCTION_32	FOR_1
0x400301e	      0x48837db800	               cmp qword [rbp - 0x48], 0	       932	merge.c	FUNCTION_32	FOR_1
0x4003023	     0xf857bffffff	                           jne 0x4002fa4	       932	merge.c	FUNCTION_32	FOR_1
0x4003029	        0x4c8b65d8	             mov r12, qword [rbp - 0x28]	       942	merge.c	FUNCTION_32	CALL_6
0x400302d	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       942	merge.c	FUNCTION_32	CALL_6
0x4003031	      0xe800000000	                          call 0x4003036	       942	merge.c	FUNCTION_32	CALL_6
0x4003036	          0x4c89e2	                            mov rdx, r12	       942	merge.c	FUNCTION_32	CALL_6
0x4003039	          0x4889de	                            mov rsi, rbx	       942	merge.c	FUNCTION_32	CALL_6
0x400303c	          0x4889c7	                            mov rdi, rax	       942	merge.c	FUNCTION_32	CALL_6
0x400303f	      0xe800000000	                          call 0x4003044	       942	merge.c	FUNCTION_32	CALL_6
0x4003044	        0x488d45d0	                   lea rax, [rbp - 0x30]	       944	merge.c	FUNCTION_32
0x4003048	      0xbe00000000	                              mov esi, 0	       944	merge.c	FUNCTION_32
0x400304d	          0x4889c7	                            mov rdi, rax	       944	merge.c	FUNCTION_32
0x4003050	      0xe863d1ffff	                  call sym.strbuf_setlen	       944	merge.c	FUNCTION_32
0x4003055	    0x8b0500000000	            mov eax, dword [0x0400305b] 	       945	merge.c	FUNCTION_32	IF_2
0x400305b	            0x85c0	                           test eax, eax	       945	merge.c	FUNCTION_32	IF_2
0x400305d	            0x7511	                           jne 0x4003070	       945	merge.c	FUNCTION_32	IF_2
0x400305f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       946	merge.c	FUNCTION_32	CALL_7
0x4003063	      0xbe00000000	                              mov esi, 0	       946	merge.c	FUNCTION_32	CALL_7
0x4003068	          0x4889c7	                            mov rdi, rax	       946	merge.c	FUNCTION_32	CALL_7
0x400306b	      0xe850d2ffff	                  call sym.strbuf_addstr	       946	merge.c	FUNCTION_32	CALL_7
0x4003070	        0x4c8b65d8	             mov r12, qword [rbp - 0x28]	       947	merge.c	FUNCTION_32	CALL_9
0x4003074	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       947	merge.c	FUNCTION_32	CALL_9
0x4003078	      0xe800000000	                          call 0x400307d	       947	merge.c	FUNCTION_32	CALL_9
0x400307d	          0x4c89e2	                            mov rdx, r12	       947	merge.c	FUNCTION_32	CALL_9
0x4003080	          0x4889de	                            mov rsi, rbx	       947	merge.c	FUNCTION_32	CALL_9
0x4003083	          0x4889c7	                            mov rdi, rax	       947	merge.c	FUNCTION_32	CALL_9
0x4003086	      0xe800000000	                          call 0x400308b	       947	merge.c	FUNCTION_32	CALL_9
0x400308b	        0x488d45d0	                   lea rax, [rbp - 0x30]	       948	merge.c	FUNCTION_32	CALL_10
0x400308f	          0x4889c7	                            mov rdi, rax	       948	merge.c	FUNCTION_32	CALL_10
0x4003092	      0xe800000000	                          call 0x4003097	       948	merge.c	FUNCTION_32	CALL_10
0x4003097	              0x90	                                     nop	       949	merge.c	FUNCTION_32
0x4003098	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       949	merge.c	FUNCTION_32
0x400309c	    0x644833042528	                xor rax, qword fs:[0x28]	       949	merge.c	FUNCTION_32
0x40030a5	            0x7405	                            je 0x40030ac	       949	merge.c	FUNCTION_32
0x40030a7	      0xe800000000	                          call 0x40030ac	       949	merge.c	FUNCTION_32
0x40030ac	        0x4883c450	                           add rsp, 0x50	       949	merge.c	FUNCTION_32
0x40030b0	              0x5b	                                 pop rbx	       949	merge.c	FUNCTION_32
0x40030b1	            0x415c	                                 pop r12	       949	merge.c	FUNCTION_32
0x40030b3	              0x5d	                                 pop rbp	       949	merge.c	FUNCTION_32
0x40030b4	              0xc3	                                     ret	       949	merge.c	FUNCTION_32
strbuf_avail	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,0:ELSE,0:IF,0	18
0x4000182	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_69
0x4000183	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_69
0x4000186	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_69
0x400018a	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_69
0x400018e	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_69
0x4000191	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_69
0x4000194	            0x741b	                            je 0x40001b1	       141	strbuf.h	FUNCTION_69
0x4000196	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_69
0x400019a	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_69
0x400019d	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_69
0x40001a1	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_69
0x40001a5	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_69
0x40001a8	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_69
0x40001ab	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_69
0x40001af	            0xeb05	                           jmp 0x40001b6	       141	strbuf.h	FUNCTION_69
0x40001b1	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_69
0x40001b6	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_69
0x40001b7	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_69
finish_automerge	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,11:ELSE,0:IF,2	79
0x4002afe	              0x55	                                push rbp	       835	merge.c	FUNCTION_28
0x4002aff	          0x4889e5	                            mov rbp, rsp	       835	merge.c	FUNCTION_28
0x4002b02	        0x4883c480	             add rsp, 0xffffffffffffff80	       835	merge.c	FUNCTION_28
0x4002b06	        0x48897da8	             mov qword [rbp - 0x58], rdi	       835	merge.c	FUNCTION_28
0x4002b0a	          0x8975a4	             mov dword [rbp - 0x5c], esi	       835	merge.c	FUNCTION_28
0x4002b0d	        0x48895598	             mov qword [rbp - 0x68], rdx	       835	merge.c	FUNCTION_28
0x4002b11	        0x48894d90	             mov qword [rbp - 0x70], rcx	       835	merge.c	FUNCTION_28
0x4002b15	        0x4c894588	              mov qword [rbp - 0x78], r8	       835	merge.c	FUNCTION_28
0x4002b19	        0x4c894d80	              mov qword [rbp - 0x80], r9	       835	merge.c	FUNCTION_28
0x4002b1d	    0x64488b042528	                mov rax, qword fs:[0x28]	       835	merge.c	FUNCTION_28
0x4002b26	        0x488945f8	                mov qword [rbp - 8], rax	       835	merge.c	FUNCTION_28
0x4002b2a	            0x31c0	                            xor eax, eax	       835	merge.c	FUNCTION_28
0x4002b2c	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       836	merge.c	FUNCTION_28
0x4002b34	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       837	merge.c	FUNCTION_28
0x4002b3c	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       837	merge.c	FUNCTION_28
0x4002b44	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       837	merge.c	FUNCTION_28
0x4002b4c	        0x488b4598	             mov rax, qword [rbp - 0x68]	       840	merge.c	FUNCTION_28	CALL_1
0x4002b50	          0x4889c7	                            mov rdi, rax	       840	merge.c	FUNCTION_28	CALL_1
0x4002b53	      0xe800000000	                          call 0x4002b58	       840	merge.c	FUNCTION_28	CALL_1
0x4002b58	        0x488b4590	             mov rax, qword [rbp - 0x70]	       841	merge.c	FUNCTION_28
0x4002b5c	        0x488945b8	             mov qword [rbp - 0x48], rax	       841	merge.c	FUNCTION_28
0x4002b60	        0x837da400	               cmp dword [rbp - 0x5c], 0	       842	merge.c	FUNCTION_28	IF_1
0x4002b64	            0x740a	                            je 0x4002b70	       842	merge.c	FUNCTION_28	IF_1
0x4002b66	    0x8b0500000000	            mov eax, dword [0x04002b6c] 	       842	merge.c	FUNCTION_28	IF_1
0x4002b6c	            0x85c0	                           test eax, eax	       842	merge.c	FUNCTION_28	IF_1
0x4002b6e	            0x7513	                           jne 0x4002b83	       842	merge.c	FUNCTION_28	IF_1
0x4002b70	        0x488d55b8	                   lea rdx, [rbp - 0x48]	       843	merge.c	FUNCTION_28	CALL_2
0x4002b74	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       843	merge.c	FUNCTION_28	CALL_2
0x4002b78	          0x4889d6	                            mov rsi, rdx	       843	merge.c	FUNCTION_28	CALL_2
0x4002b7b	          0x4889c7	                            mov rdi, rax	       843	merge.c	FUNCTION_28	CALL_2
0x4002b7e	      0xe800000000	                          call 0x4002b83	       843	merge.c	FUNCTION_28	CALL_2
0x4002b83	      0xbe0a000000	                            mov esi, 0xa	       844	merge.c	FUNCTION_28	CALL_3
0x4002b88	      0xbf00000000	                              mov edi, 0	       844	merge.c	FUNCTION_28	CALL_3
0x4002b8d	      0xe8c0d6ffff	                   call sym.strbuf_addch	       844	merge.c	FUNCTION_28	CALL_3
0x4002b92	        0x488b4590	             mov rax, qword [rbp - 0x70]	       845	merge.c	FUNCTION_28	CALL_4
0x4002b96	          0x4889c7	                            mov rdi, rax	       845	merge.c	FUNCTION_28	CALL_4
0x4002b99	      0xe869fbffff	              call sym.prepare_to_commit	       845	merge.c	FUNCTION_28	CALL_4
0x4002b9e	    0x488b3d000000	            mov rdi, qword [0x04002ba5] 	       846	merge.c	FUNCTION_28	IF_2	CALL_5
0x4002ba5	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       846	merge.c	FUNCTION_28	IF_2	CALL_5
0x4002ba9	    0x488b35000000	            mov rsi, qword [0x04002bb0] 	       846	merge.c	FUNCTION_28	IF_2	CALL_5
0x4002bb0	    0x488b05000000	            mov rax, qword [0x04002bb7] 	       846	merge.c	FUNCTION_28	IF_2	CALL_5
0x4002bb7	        0x4c8d45e0	                    lea r8, [rbp - 0x20]	       846	merge.c	FUNCTION_28	IF_2	CALL_5
0x4002bbb	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       846	merge.c	FUNCTION_28	IF_2	CALL_5
0x4002bbf	        0x4883ec08	                              sub rsp, 8	       846	merge.c	FUNCTION_28	IF_2	CALL_5
0x4002bc3	              0x57	                                push rdi	       846	merge.c	FUNCTION_28	IF_2	CALL_5
0x4002bc4	    0x41b900000000	                              mov r9d, 0	       846	merge.c	FUNCTION_28	IF_2	CALL_5
0x4002bca	          0x4889c7	                            mov rdi, rax	       846	merge.c	FUNCTION_28	IF_2	CALL_5
0x4002bcd	      0xe800000000	                          call 0x4002bd2	       846	merge.c	FUNCTION_28	IF_2	CALL_5
0x4002bd2	        0x4883c410	                           add rsp, 0x10	       846	merge.c	FUNCTION_28	IF_2	CALL_5
0x4002bd6	            0x85c0	                           test eax, eax	       846	merge.c	FUNCTION_28	IF_2	CALL_5
0x4002bd8	            0x7417	                            je 0x4002bf1	       846	merge.c	FUNCTION_28	IF_2	CALL_5
0x4002bda	      0xbf00000000	                              mov edi, 0	       848	merge.c	FUNCTION_28	CALL_7
0x4002bdf	      0xe811d7ffff	                               call sym.	       848	merge.c	FUNCTION_28	CALL_7
0x4002be4	          0x4889c7	                            mov rdi, rax	       848	merge.c	FUNCTION_28	CALL_7
0x4002be7	      0xb800000000	                              mov eax, 0	       848	merge.c	FUNCTION_28	CALL_7
0x4002bec	      0xe800000000	                          call 0x4002bf1	       848	merge.c	FUNCTION_28	CALL_7
0x4002bf1	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       849	merge.c	FUNCTION_28	CALL_8
0x4002bf5	        0x488d45c0	                   lea rax, [rbp - 0x40]	       849	merge.c	FUNCTION_28	CALL_8
0x4002bf9	      0xbe00000000	                              mov esi, 0	       849	merge.c	FUNCTION_28	CALL_8
0x4002bfe	          0x4889c7	                            mov rdi, rax	       849	merge.c	FUNCTION_28	CALL_8
0x4002c01	      0xb800000000	                              mov eax, 0	       849	merge.c	FUNCTION_28	CALL_8
0x4002c06	      0xe800000000	                          call 0x4002c0b	       849	merge.c	FUNCTION_28	CALL_8
0x4002c0b	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       850	merge.c	FUNCTION_28	CALL_9
0x4002c0f	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       850	merge.c	FUNCTION_28	CALL_9
0x4002c13	        0x488b7590	             mov rsi, qword [rbp - 0x70]	       850	merge.c	FUNCTION_28	CALL_9
0x4002c17	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       850	merge.c	FUNCTION_28	CALL_9
0x4002c1b	          0x4889c7	                            mov rdi, rax	       850	merge.c	FUNCTION_28	CALL_9
0x4002c1e	      0xe80ee6ffff	                         call sym.finish	       850	merge.c	FUNCTION_28	CALL_9
0x4002c23	        0x488d45c0	                   lea rax, [rbp - 0x40]	       851	merge.c	FUNCTION_28	CALL_10
0x4002c27	          0x4889c7	                            mov rdi, rax	       851	merge.c	FUNCTION_28	CALL_10
0x4002c2a	      0xe800000000	                          call 0x4002c2f	       851	merge.c	FUNCTION_28	CALL_10
0x4002c2f	      0xe80edeffff	                      call sym.drop_save	       852	merge.c	FUNCTION_28	CALL_11
0x4002c34	      0xb800000000	                              mov eax, 0	       853	merge.c	FUNCTION_28
0x4002c39	        0x488b4df8	                mov rcx, qword [rbp - 8]	       854	merge.c	FUNCTION_28
0x4002c3d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       854	merge.c	FUNCTION_28
0x4002c46	            0x7405	                            je 0x4002c4d	       854	merge.c	FUNCTION_28
0x4002c48	      0xe800000000	                          call 0x4002c4d	       854	merge.c	FUNCTION_28
0x4002c4d	              0xc9	                                   leave	       854	merge.c	FUNCTION_28
0x4002c4e	              0xc3	                                     ret	       854	merge.c	FUNCTION_28
read_merge_msg	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,4:ELSE,0:IF,1	29
0x4002634	              0x55	                                push rbp	       743	merge.c	FUNCTION_24
0x4002635	          0x4889e5	                            mov rbp, rsp	       743	merge.c	FUNCTION_24
0x4002638	        0x4883ec20	                           sub rsp, 0x20	       743	merge.c	FUNCTION_24
0x400263c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       743	merge.c	FUNCTION_24
0x4002640	      0xe800000000	                          call 0x4002645	       744	merge.c	FUNCTION_24	CALL_1
0x4002645	        0x488945f8	                mov qword [rbp - 8], rax	       744	merge.c	FUNCTION_24	CALL_1
0x4002649	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       745	merge.c	FUNCTION_24
0x400264d	      0xbe00000000	                              mov esi, 0	       745	merge.c	FUNCTION_24
0x4002652	          0x4889c7	                            mov rdi, rax	       745	merge.c	FUNCTION_24
0x4002655	      0xe85edbffff	                  call sym.strbuf_setlen	       745	merge.c	FUNCTION_24
0x400265a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       746	merge.c	FUNCTION_24	IF_1	CALL_2
0x400265e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       746	merge.c	FUNCTION_24	IF_1	CALL_2
0x4002662	      0xba00000000	                              mov edx, 0	       746	merge.c	FUNCTION_24	IF_1	CALL_2
0x4002667	          0x4889ce	                            mov rsi, rcx	       746	merge.c	FUNCTION_24	IF_1	CALL_2
0x400266a	          0x4889c7	                            mov rdi, rax	       746	merge.c	FUNCTION_24	IF_1	CALL_2
0x400266d	      0xe800000000	                          call 0x4002672	       746	merge.c	FUNCTION_24	IF_1	CALL_2
0x4002672	          0x4885c0	                           test rax, rax	       746	merge.c	FUNCTION_24	IF_1	CALL_2
0x4002675	            0x7921	                           jns 0x4002698	       746	merge.c	FUNCTION_24	IF_1	CALL_2
0x4002677	      0xbf00000000	                              mov edi, 0	       747	merge.c	FUNCTION_24	CALL_4
0x400267c	      0xe874dcffff	                               call sym.	       747	merge.c	FUNCTION_24	CALL_4
0x4002681	          0x4889c2	                            mov rdx, rax	       747	merge.c	FUNCTION_24	CALL_4
0x4002684	        0x488b45f8	                mov rax, qword [rbp - 8]	       747	merge.c	FUNCTION_24	CALL_4
0x4002688	          0x4889c6	                            mov rsi, rax	       747	merge.c	FUNCTION_24	CALL_4
0x400268b	          0x4889d7	                            mov rdi, rdx	       747	merge.c	FUNCTION_24	CALL_4
0x400268e	      0xb800000000	                              mov eax, 0	       747	merge.c	FUNCTION_24	CALL_4
0x4002693	      0xe800000000	                          call 0x4002698	       747	merge.c	FUNCTION_24	CALL_4
0x4002698	              0x90	                                     nop	       748	merge.c	FUNCTION_24
0x4002699	              0xc9	                                   leave	       748	merge.c	FUNCTION_24
0x400269a	              0xc3	                                     ret	       748	merge.c	FUNCTION_24
finish_up_to_date	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,3:ELSE,0:IF,1	25
0x4000f1a	              0x55	                                push rbp	       343	merge.c	FUNCTION_12
0x4000f1b	          0x4889e5	                            mov rbp, rsp	       343	merge.c	FUNCTION_12
0x4000f1e	        0x4883ec10	                           sub rsp, 0x10	       343	merge.c	FUNCTION_12
0x4000f22	        0x48897df8	                mov qword [rbp - 8], rdi	       343	merge.c	FUNCTION_12
0x4000f26	    0x8b0500000000	            mov eax, dword [0x04000f2c] 	       344	merge.c	FUNCTION_12	IF_1
0x4000f2c	            0x85c0	                           test eax, eax	       344	merge.c	FUNCTION_12	IF_1
0x4000f2e	            0x7837	                            js 0x4000f67	       344	merge.c	FUNCTION_12	IF_1
0x4000f30	    0x8b0500000000	            mov eax, dword [0x04000f36] 	       345	merge.c	FUNCTION_12	CALL_2
0x4000f36	            0x85c0	                           test eax, eax	       345	merge.c	FUNCTION_12	CALL_2
0x4000f38	            0x740f	                            je 0x4000f49	       345	merge.c	FUNCTION_12	CALL_2
0x4000f3a	      0xbf00000000	                              mov edi, 0	       345	merge.c	FUNCTION_12	CALL_2
0x4000f3f	      0xe8b1f3ffff	                               call sym.	       345	merge.c	FUNCTION_12	CALL_2
0x4000f44	          0x4889c1	                            mov rcx, rax	       345	merge.c	FUNCTION_12	CALL_2
0x4000f47	            0xeb05	                           jmp 0x4000f4e	       345	merge.c	FUNCTION_12	CALL_2
0x4000f49	      0xb900000000	                              mov ecx, 0	       345	merge.c	FUNCTION_12	CALL_2
0x4000f4e	        0x488b45f8	                mov rax, qword [rbp - 8]	       345	merge.c	FUNCTION_12	CALL_2
0x4000f52	          0x4889c2	                            mov rdx, rax	       345	merge.c	FUNCTION_12	CALL_2
0x4000f55	          0x4889ce	                            mov rsi, rcx	       345	merge.c	FUNCTION_12	CALL_2
0x4000f58	      0xbf00000000	                              mov edi, 0	       345	merge.c	FUNCTION_12	CALL_2
0x4000f5d	      0xb800000000	                              mov eax, 0	       345	merge.c	FUNCTION_12	CALL_2
0x4000f62	      0xe800000000	                          call 0x4000f67	       345	merge.c	FUNCTION_12	CALL_2
0x4000f67	      0xe8d6faffff	                      call sym.drop_save	       346	merge.c	FUNCTION_12	CALL_3
0x4000f6c	              0x90	                                     nop	       347	merge.c	FUNCTION_12
0x4000f6d	              0xc9	                                   leave	       347	merge.c	FUNCTION_12
0x4000f6e	              0xc3	                                     ret	       347	merge.c	FUNCTION_12
parse_branch_merge_options	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,6:ELSE,0:IF,2	77
0x4001a3c	              0x55	                                push rbp	       538	merge.c	FUNCTION_16
0x4001a3d	          0x4889e5	                            mov rbp, rsp	       538	merge.c	FUNCTION_16
0x4001a40	            0x4154	                                push r12	       538	merge.c	FUNCTION_16
0x4001a42	              0x53	                                push rbx	       538	merge.c	FUNCTION_16
0x4001a43	        0x4883ec30	                           sub rsp, 0x30	       538	merge.c	FUNCTION_16
0x4001a47	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       538	merge.c	FUNCTION_16
0x4001a4b	    0x64488b042528	                mov rax, qword fs:[0x28]	       538	merge.c	FUNCTION_16
0x4001a54	        0x488945e8	             mov qword [rbp - 0x18], rax	       538	merge.c	FUNCTION_16
0x4001a58	            0x31c0	                            xor eax, eax	       538	merge.c	FUNCTION_16
0x4001a5a	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       542	merge.c	FUNCTION_16	IF_1
0x4001a5f	     0xf84db000000	                            je 0x4001b40	       542	merge.c	FUNCTION_16	IF_1
0x4001a65	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       544	merge.c	FUNCTION_16	CALL_1
0x4001a69	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       544	merge.c	FUNCTION_16	CALL_1
0x4001a6d	          0x4889d6	                            mov rsi, rdx	       544	merge.c	FUNCTION_16	CALL_1
0x4001a70	          0x4889c7	                            mov rdi, rax	       544	merge.c	FUNCTION_16	CALL_1
0x4001a73	      0xe800000000	                          call 0x4001a78	       544	merge.c	FUNCTION_16	CALL_1
0x4001a78	          0x8945dc	             mov dword [rbp - 0x24], eax	       544	merge.c	FUNCTION_16	CALL_1
0x4001a7b	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       545	merge.c	FUNCTION_16	IF_2
0x4001a7f	            0x7931	                           jns 0x4001ab2	       545	merge.c	FUNCTION_16	IF_2
0x4001a81	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       546	merge.c	FUNCTION_16	IF_2	CALL_3
0x4001a84	            0x89c7	                            mov edi, eax	       546	merge.c	FUNCTION_16	IF_2	CALL_3
0x4001a86	      0xe800000000	                          call 0x4001a8b	       546	merge.c	FUNCTION_16	IF_2	CALL_3
0x4001a8b	          0x4989c4	                            mov r12, rax	       546	merge.c	FUNCTION_16	IF_2	CALL_3
0x4001a8e	    0x488b1d000000	            mov rbx, qword [0x04001a95] 	       546	merge.c	FUNCTION_16	IF_2	CALL_3
0x4001a95	      0xbf00000000	                              mov edi, 0	       546	merge.c	FUNCTION_16	IF_2	CALL_3
0x4001a9a	      0xe856e8ffff	                               call sym.	       546	merge.c	FUNCTION_16	IF_2	CALL_3
0x4001a9f	          0x4c89e2	                            mov rdx, r12	       546	merge.c	FUNCTION_16	IF_2	CALL_3
0x4001aa2	          0x4889de	                            mov rsi, rbx	       546	merge.c	FUNCTION_16	IF_2	CALL_3
0x4001aa5	          0x4889c7	                            mov rdi, rax	       546	merge.c	FUNCTION_16	IF_2	CALL_3
0x4001aa8	      0xb800000000	                              mov eax, 0	       546	merge.c	FUNCTION_16	IF_2	CALL_3
0x4001aad	      0xe800000000	                          call 0x4001ab2	       546	merge.c	FUNCTION_16	IF_2	CALL_3
0x4001ab2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       548	merge.c	FUNCTION_16
0x4001ab5	          0x83c002	                              add eax, 2	       548	merge.c	FUNCTION_16
0x4001ab8	            0x4898	                                    cdqe	       548	merge.c	FUNCTION_16
0x4001aba	          0x4889c6	                            mov rsi, rax	       548	merge.c	FUNCTION_16
0x4001abd	      0xbf08000000	                              mov edi, 8	       548	merge.c	FUNCTION_16
0x4001ac2	      0xe81ee6ffff	                        call sym.st_mult	       548	merge.c	FUNCTION_16
0x4001ac7	          0x4889c2	                            mov rdx, rax	       548	merge.c	FUNCTION_16
0x4001aca	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       548	merge.c	FUNCTION_16
0x4001ace	          0x4889d6	                            mov rsi, rdx	       548	merge.c	FUNCTION_16
0x4001ad1	          0x4889c7	                            mov rdi, rax	       548	merge.c	FUNCTION_16
0x4001ad4	      0xe800000000	                          call 0x4001ad9	       548	merge.c	FUNCTION_16
0x4001ad9	        0x488945e0	             mov qword [rbp - 0x20], rax	       548	merge.c	FUNCTION_16
0x4001add	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       549	merge.c	FUNCTION_16
0x4001ae0	          0x83c001	                              add eax, 1	       549	merge.c	FUNCTION_16
0x4001ae3	          0x4863d0	                         movsxd rdx, eax	       549	merge.c	FUNCTION_16
0x4001ae6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       549	merge.c	FUNCTION_16
0x4001aea	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       549	merge.c	FUNCTION_16
0x4001aee	        0x488d7908	                      lea rdi, [rcx + 8]	       549	merge.c	FUNCTION_16
0x4001af2	      0xb908000000	                              mov ecx, 8	       549	merge.c	FUNCTION_16
0x4001af7	          0x4889c6	                            mov rsi, rax	       549	merge.c	FUNCTION_16
0x4001afa	      0xe838e6ffff	                     call sym.move_array	       549	merge.c	FUNCTION_16
0x4001aff	        0x8345dc01	               add dword [rbp - 0x24], 1	       550	merge.c	FUNCTION_16
0x4001b03	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       551	merge.c	FUNCTION_16
0x4001b07	    0x48c700000000	                      mov qword [rax], 0	       551	merge.c	FUNCTION_16
0x4001b0e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       552	merge.c	FUNCTION_16	CALL_5
0x4001b12	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       552	merge.c	FUNCTION_16	CALL_5
0x4001b15	    0x41b900000000	                              mov r9d, 0	       552	merge.c	FUNCTION_16	CALL_5
0x4001b1b	    0x41b800000000	                              mov r8d, 0	       552	merge.c	FUNCTION_16	CALL_5
0x4001b21	      0xb900000000	                              mov ecx, 0	       552	merge.c	FUNCTION_16	CALL_5
0x4001b26	      0xba00000000	                              mov edx, 0	       552	merge.c	FUNCTION_16	CALL_5
0x4001b2b	            0x89c7	                            mov edi, eax	       552	merge.c	FUNCTION_16	CALL_5
0x4001b2d	      0xe800000000	                          call 0x4001b32	       552	merge.c	FUNCTION_16	CALL_5
0x4001b32	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       554	merge.c	FUNCTION_16	CALL_6
0x4001b36	          0x4889c7	                            mov rdi, rax	       554	merge.c	FUNCTION_16	CALL_6
0x4001b39	      0xe800000000	                          call 0x4001b3e	       554	merge.c	FUNCTION_16	CALL_6
0x4001b3e	            0xeb01	                           jmp 0x4001b41	       554	merge.c	FUNCTION_16	CALL_6
0x4001b40	              0x90	                                     nop	       543	merge.c	FUNCTION_16	IF_1
0x4001b41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       555	merge.c	FUNCTION_16
0x4001b45	    0x644833042528	                xor rax, qword fs:[0x28]	       555	merge.c	FUNCTION_16
0x4001b4e	            0x7405	                            je 0x4001b55	       555	merge.c	FUNCTION_16
0x4001b50	      0xe800000000	                          call 0x4001b55	       555	merge.c	FUNCTION_16
0x4001b55	        0x4883c430	                           add rsp, 0x30	       555	merge.c	FUNCTION_16
0x4001b59	              0x5b	                                 pop rbx	       555	merge.c	FUNCTION_16
0x4001b5a	            0x415c	                                 pop r12	       555	merge.c	FUNCTION_16
0x4001b5c	              0x5d	                                 pop rbp	       555	merge.c	FUNCTION_16
0x4001b5d	              0xc3	                                     ret	       555	merge.c	FUNCTION_16
suggest_conflicts	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,9:ELSE,0:IF,0	45
0x4002c4f	              0x55	                                push rbp	       857	merge.c	FUNCTION_29
0x4002c50	          0x4889e5	                            mov rbp, rsp	       857	merge.c	FUNCTION_29
0x4002c53	        0x4883ec30	                           sub rsp, 0x30	       857	merge.c	FUNCTION_29
0x4002c57	    0x64488b042528	                mov rax, qword fs:[0x28]	       857	merge.c	FUNCTION_29
0x4002c60	        0x488945f8	                mov qword [rbp - 8], rax	       857	merge.c	FUNCTION_29
0x4002c64	            0x31c0	                            xor eax, eax	       857	merge.c	FUNCTION_29
0x4002c66	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       860	merge.c	FUNCTION_29
0x4002c6e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       860	merge.c	FUNCTION_29
0x4002c76	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       860	merge.c	FUNCTION_29
0x4002c7e	      0xe800000000	                          call 0x4002c83	       862	merge.c	FUNCTION_29	CALL_1
0x4002c83	        0x488945d0	             mov qword [rbp - 0x30], rax	       862	merge.c	FUNCTION_29	CALL_1
0x4002c87	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       863	merge.c	FUNCTION_29	CALL_2
0x4002c8b	      0xbe00000000	                              mov esi, 0	       863	merge.c	FUNCTION_29	CALL_2
0x4002c90	          0x4889c7	                            mov rdi, rax	       863	merge.c	FUNCTION_29	CALL_2
0x4002c93	      0xe800000000	                          call 0x4002c98	       863	merge.c	FUNCTION_29	CALL_2
0x4002c98	        0x488945d8	             mov qword [rbp - 0x28], rax	       863	merge.c	FUNCTION_29	CALL_2
0x4002c9c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       865	merge.c	FUNCTION_29	CALL_3
0x4002ca0	          0x4889c7	                            mov rdi, rax	       865	merge.c	FUNCTION_29	CALL_3
0x4002ca3	      0xe800000000	                          call 0x4002ca8	       865	merge.c	FUNCTION_29	CALL_3
0x4002ca8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       866	merge.c	FUNCTION_29	CALL_4
0x4002cac	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       866	merge.c	FUNCTION_29	CALL_4
0x4002cb0	          0x4889d6	                            mov rsi, rdx	       866	merge.c	FUNCTION_29	CALL_4
0x4002cb3	          0x4889c7	                            mov rdi, rax	       866	merge.c	FUNCTION_29	CALL_4
0x4002cb6	      0xe800000000	                          call 0x4002cbb	       866	merge.c	FUNCTION_29	CALL_4
0x4002cbb	        0x488d45e0	                   lea rax, [rbp - 0x20]	       867	merge.c	FUNCTION_29	CALL_5
0x4002cbf	          0x4889c7	                            mov rdi, rax	       867	merge.c	FUNCTION_29	CALL_5
0x4002cc2	      0xe800000000	                          call 0x4002cc7	       867	merge.c	FUNCTION_29	CALL_5
0x4002cc7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       868	merge.c	FUNCTION_29	CALL_6
0x4002ccb	          0x4889c7	                            mov rdi, rax	       868	merge.c	FUNCTION_29	CALL_6
0x4002cce	      0xe800000000	                          call 0x4002cd3	       868	merge.c	FUNCTION_29	CALL_6
0x4002cd3	    0x8b0500000000	            mov eax, dword [0x04002cd9] 	       869	merge.c	FUNCTION_29	CALL_7
0x4002cd9	            0x89c7	                            mov edi, eax	       869	merge.c	FUNCTION_29	CALL_7
0x4002cdb	      0xe800000000	                          call 0x4002ce0	       869	merge.c	FUNCTION_29	CALL_7
0x4002ce0	      0xbf00000000	                              mov edi, 0	       870	merge.c	FUNCTION_29	CALL_9
0x4002ce5	      0xe80bd6ffff	                               call sym.	       870	merge.c	FUNCTION_29	CALL_9
0x4002cea	          0x4889c7	                            mov rdi, rax	       870	merge.c	FUNCTION_29	CALL_9
0x4002ced	      0xb800000000	                              mov eax, 0	       870	merge.c	FUNCTION_29	CALL_9
0x4002cf2	      0xe800000000	                          call 0x4002cf7	       870	merge.c	FUNCTION_29	CALL_9
0x4002cf7	      0xb801000000	                              mov eax, 1	       872	merge.c	FUNCTION_29
0x4002cfc	        0x488b4df8	                mov rcx, qword [rbp - 8]	       873	merge.c	FUNCTION_29
0x4002d00	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       873	merge.c	FUNCTION_29
0x4002d09	            0x7405	                            je 0x4002d10	       873	merge.c	FUNCTION_29
0x4002d0b	      0xe800000000	                          call 0x4002d10	       873	merge.c	FUNCTION_29
0x4002d10	              0xc9	                                   leave	       873	merge.c	FUNCTION_29
0x4002d11	              0xc3	                                     ret	       873	merge.c	FUNCTION_29
hashcmp	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,1:ELSE,0:IF,0	13
0x4000321	              0x55	                                push rbp	       974	cache.h	FUNCTION_48
0x4000322	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_48
0x4000325	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_48
0x4000329	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_48
0x400032d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_48
0x4000331	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_48	CALL_1
0x4000335	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_48	CALL_1
0x4000339	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_48	CALL_1
0x400033e	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_48	CALL_1
0x4000341	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_48	CALL_1
0x4000344	      0xe800000000	                          call 0x4000349	       975	cache.h	FUNCTION_48	CALL_1
0x4000349	              0xc9	                                   leave	       976	cache.h	FUNCTION_48
0x400034a	              0xc3	                                     ret	       976	cache.h	FUNCTION_48
default_edit_option	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,6:ELSE,0:IF,3	75
0x400310a	              0x55	                                push rbp	       959	merge.c	FUNCTION_34
0x400310b	          0x4889e5	                            mov rbp, rsp	       959	merge.c	FUNCTION_34
0x400310e	    0x4881ec400100	                          sub rsp, 0x140	       959	merge.c	FUNCTION_34
0x4003115	    0x64488b042528	                mov rax, qword fs:[0x28]	       959	merge.c	FUNCTION_34
0x400311e	        0x488945f8	                mov qword [rbp - 8], rax	       959	merge.c	FUNCTION_34
0x4003122	            0x31c0	                            xor eax, eax	       959	merge.c	FUNCTION_34
0x4003124	      0xbf00000000	                              mov edi, 0	       961	merge.c	FUNCTION_34	CALL_1
0x4003129	      0xe800000000	                          call 0x400312e	       961	merge.c	FUNCTION_34	CALL_1
0x400312e	    0x488985c8feff	            mov qword [rbp - 0x138], rax	       961	merge.c	FUNCTION_34	CALL_1
0x4003135	    0x8b0500000000	            mov eax, dword [0x0400313b] 	       964	merge.c	FUNCTION_34	IF_1
0x400313b	            0x85c0	                           test eax, eax	       964	merge.c	FUNCTION_34	IF_1
0x400313d	            0x740a	                            je 0x4003149	       964	merge.c	FUNCTION_34	IF_1
0x400313f	      0xb800000000	                              mov eax, 0	       966	merge.c	FUNCTION_34	IF_1
0x4003144	      0xe9eb000000	                           jmp 0x4003234	       966	merge.c	FUNCTION_34	IF_1
0x4003149	    0x4883bdc8feff	              cmp qword [rbp - 0x138], 0	       968	merge.c	FUNCTION_34	IF_2
0x4003151	            0x7452	                            je 0x40031a5	       968	merge.c	FUNCTION_34	IF_2
0x4003153	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       969	merge.c	FUNCTION_34	IF_2	CALL_2
0x400315a	          0x4889c7	                            mov rdi, rax	       969	merge.c	FUNCTION_34	IF_2	CALL_2
0x400315d	      0xe800000000	                          call 0x4003162	       969	merge.c	FUNCTION_34	IF_2	CALL_2
0x4003162	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	       969	merge.c	FUNCTION_34	IF_2	CALL_2
0x4003168	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 0	       970	merge.c	FUNCTION_34	IF_2	IF_3
0x400316f	            0x7929	                           jns 0x400319a	       970	merge.c	FUNCTION_34	IF_2	IF_3
0x4003171	      0xbf00000000	                              mov edi, 0	       971	merge.c	FUNCTION_34	IF_2	CALL_4
0x4003176	      0xe87ad1ffff	                               call sym.	       971	merge.c	FUNCTION_34	IF_2	CALL_4
0x400317b	          0x4889c1	                            mov rcx, rax	       971	merge.c	FUNCTION_34	IF_2	CALL_4
0x400317e	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       971	merge.c	FUNCTION_34	IF_2	CALL_4
0x4003185	      0xba00000000	                              mov edx, 0	       971	merge.c	FUNCTION_34	IF_2	CALL_4
0x400318a	          0x4889c6	                            mov rsi, rax	       971	merge.c	FUNCTION_34	IF_2	CALL_4
0x400318d	          0x4889cf	                            mov rdi, rcx	       971	merge.c	FUNCTION_34	IF_2	CALL_4
0x4003190	      0xb800000000	                              mov eax, 0	       971	merge.c	FUNCTION_34	IF_2	CALL_4
0x4003195	      0xe800000000	                          call 0x400319a	       971	merge.c	FUNCTION_34	IF_2	CALL_4
0x400319a	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	       972	merge.c	FUNCTION_34	IF_2
0x40031a0	      0xe98f000000	                           jmp 0x4003234	       972	merge.c	FUNCTION_34	IF_2
0x40031a5	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       976	merge.c	FUNCTION_34
0x40031ac	          0x4889c6	                            mov rsi, rax	       976	merge.c	FUNCTION_34
0x40031af	      0xbf00000000	                              mov edi, 0	       976	merge.c	FUNCTION_34
0x40031b4	      0xe800000000	                          call 0x40031b9	       976	merge.c	FUNCTION_34
0x40031b9	            0x85c0	                           test eax, eax	       980	merge.c	FUNCTION_34
0x40031bb	            0x7571	                           jne 0x400322e	       980	merge.c	FUNCTION_34
0x40031bd	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       977	merge.c	FUNCTION_34
0x40031c4	          0x4889c6	                            mov rsi, rax	       977	merge.c	FUNCTION_34
0x40031c7	      0xbf01000000	                              mov edi, 1	       977	merge.c	FUNCTION_34
0x40031cc	      0xe800000000	                          call 0x40031d1	       977	merge.c	FUNCTION_34
0x40031d1	            0x85c0	                           test eax, eax	       976	merge.c	FUNCTION_34
0x40031d3	            0x7559	                           jne 0x400322e	       976	merge.c	FUNCTION_34
0x40031d5	      0xbf00000000	                              mov edi, 0	       978	merge.c	FUNCTION_34	CALL_6
0x40031da	      0xe800000000	                          call 0x40031df	       978	merge.c	FUNCTION_34	CALL_6
0x40031df	            0x85c0	                           test eax, eax	       977	merge.c	FUNCTION_34
0x40031e1	            0x744b	                            je 0x400322e	       977	merge.c	FUNCTION_34
0x40031e3	      0xbf01000000	                              mov edi, 1	       978	merge.c	FUNCTION_34	CALL_6
0x40031e8	      0xe800000000	                          call 0x40031ed	       978	merge.c	FUNCTION_34	CALL_6
0x40031ed	            0x85c0	                           test eax, eax	       978	merge.c	FUNCTION_34	CALL_6
0x40031ef	            0x743d	                            je 0x400322e	       978	merge.c	FUNCTION_34	CALL_6
0x40031f1	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	       979	merge.c	FUNCTION_34
0x40031f8	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       979	merge.c	FUNCTION_34
0x40031ff	          0x4839c2	                            cmp rdx, rax	       978	merge.c	FUNCTION_34	CALL_6
0x4003202	            0x752a	                           jne 0x400322e	       978	merge.c	FUNCTION_34	CALL_6
0x4003204	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	       980	merge.c	FUNCTION_34
0x400320b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       980	merge.c	FUNCTION_34
0x4003212	          0x4839c2	                            cmp rdx, rax	       979	merge.c	FUNCTION_34
0x4003215	            0x7517	                           jne 0x400322e	       979	merge.c	FUNCTION_34
0x4003217	    0x8b95e8feffff	            mov edx, dword [rbp - 0x118]	       981	merge.c	FUNCTION_34
0x400321d	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       981	merge.c	FUNCTION_34
0x4003223	            0x39c2	                            cmp edx, eax	       980	merge.c	FUNCTION_34
0x4003225	            0x7507	                           jne 0x400322e	       980	merge.c	FUNCTION_34
0x4003227	      0xb801000000	                              mov eax, 1	       980	merge.c	FUNCTION_34
0x400322c	            0xeb05	                           jmp 0x4003233	       980	merge.c	FUNCTION_34
0x400322e	      0xb800000000	                              mov eax, 0	       980	merge.c	FUNCTION_34
0x4003233	              0x90	                                     nop	       976	merge.c	FUNCTION_34
0x4003234	        0x488b4df8	                mov rcx, qword [rbp - 8]	       982	merge.c	FUNCTION_34
0x4003238	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       982	merge.c	FUNCTION_34
0x4003241	            0x7405	                            je 0x4003248	       982	merge.c	FUNCTION_34
0x4003243	      0xe800000000	                          call 0x4003248	       982	merge.c	FUNCTION_34
0x4003248	              0xc9	                                   leave	       982	merge.c	FUNCTION_34
0x4003249	              0xc3	                                     ret	       982	merge.c	FUNCTION_34
write_merge_state	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,4:ELSE,0:IF,0	25
0x40030b5	              0x55	                                push rbp	       952	merge.c	FUNCTION_33
0x40030b6	          0x4889e5	                            mov rbp, rsp	       952	merge.c	FUNCTION_33
0x40030b9	            0x4154	                                push r12	       952	merge.c	FUNCTION_33
0x40030bb	              0x53	                                push rbx	       952	merge.c	FUNCTION_33
0x40030bc	        0x4883ec10	                           sub rsp, 0x10	       952	merge.c	FUNCTION_33
0x40030c0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       952	merge.c	FUNCTION_33
0x40030c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       953	merge.c	FUNCTION_33	CALL_1
0x40030c8	          0x4889c7	                            mov rdi, rax	       953	merge.c	FUNCTION_33	CALL_1
0x40030cb	      0xe894feffff	              call sym.write_merge_heads	       953	merge.c	FUNCTION_33	CALL_1
0x40030d0	      0xbe0a000000	                            mov esi, 0xa	       954	merge.c	FUNCTION_33	CALL_2
0x40030d5	      0xbf00000000	                              mov edi, 0	       954	merge.c	FUNCTION_33	CALL_2
0x40030da	      0xe873d1ffff	                   call sym.strbuf_addch	       954	merge.c	FUNCTION_33	CALL_2
0x40030df	    0x4c8b25000000	            mov r12, qword [0x040030e6] 	       955	merge.c	FUNCTION_33	CALL_4
0x40030e6	    0x488b1d000000	            mov rbx, qword [0x040030ed] 	       955	merge.c	FUNCTION_33	CALL_4
0x40030ed	      0xe800000000	                          call 0x40030f2	       955	merge.c	FUNCTION_33	CALL_4
0x40030f2	          0x4c89e2	                            mov rdx, r12	       955	merge.c	FUNCTION_33	CALL_4
0x40030f5	          0x4889de	                            mov rsi, rbx	       955	merge.c	FUNCTION_33	CALL_4
0x40030f8	          0x4889c7	                            mov rdi, rax	       955	merge.c	FUNCTION_33	CALL_4
0x40030fb	      0xe800000000	                          call 0x4003100	       955	merge.c	FUNCTION_33	CALL_4
0x4003100	              0x90	                                     nop	       956	merge.c	FUNCTION_33
0x4003101	        0x4883c410	                           add rsp, 0x10	       956	merge.c	FUNCTION_33
0x4003105	              0x5b	                                 pop rbx	       956	merge.c	FUNCTION_33
0x4003106	            0x415c	                                 pop r12	       956	merge.c	FUNCTION_33
0x4003108	              0x5d	                                 pop rbp	       956	merge.c	FUNCTION_33
0x4003109	              0xc3	                                     ret	       956	merge.c	FUNCTION_33
parse_tree	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,1:ELSE,0:IF,0	10
0x40003bc	              0x55	                                push rbp	        21	tree.h	FUNCTION_106
0x40003bd	          0x4889e5	                            mov rbp, rsp	        21	tree.h	FUNCTION_106
0x40003c0	        0x4883ec10	                           sub rsp, 0x10	        21	tree.h	FUNCTION_106
0x40003c4	        0x48897df8	                mov qword [rbp - 8], rdi	        21	tree.h	FUNCTION_106
0x40003c8	        0x488b45f8	                mov rax, qword [rbp - 8]	        22	tree.h	FUNCTION_106	CALL_1
0x40003cc	      0xbe00000000	                              mov esi, 0	        22	tree.h	FUNCTION_106	CALL_1
0x40003d1	          0x4889c7	                            mov rdi, rax	        22	tree.h	FUNCTION_106	CALL_1
0x40003d4	      0xe800000000	                          call 0x40003d9	        22	tree.h	FUNCTION_106	CALL_1
0x40003d9	              0xc9	                                   leave	        23	tree.h	FUNCTION_106
0x40003da	              0xc3	                                     ret	        23	tree.h	FUNCTION_106
prepare_to_commit	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,27:ELSE,0:IF,8	164
0x4002707	              0x55	                                push rbp	       770	merge.c	FUNCTION_26
0x4002708	          0x4889e5	                            mov rbp, rsp	       770	merge.c	FUNCTION_26
0x400270b	            0x4154	                                push r12	       770	merge.c	FUNCTION_26
0x400270d	              0x53	                                push rbx	       770	merge.c	FUNCTION_26
0x400270e	        0x4883ec30	                           sub rsp, 0x30	       770	merge.c	FUNCTION_26
0x4002712	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       770	merge.c	FUNCTION_26
0x4002716	    0x64488b042528	                mov rax, qword fs:[0x28]	       770	merge.c	FUNCTION_26
0x400271f	        0x488945e8	             mov qword [rbp - 0x18], rax	       770	merge.c	FUNCTION_26
0x4002723	            0x31c0	                            xor eax, eax	       770	merge.c	FUNCTION_26
0x4002725	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       771	merge.c	FUNCTION_26
0x400272d	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       771	merge.c	FUNCTION_26
0x4002735	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       771	merge.c	FUNCTION_26
0x400273d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       772	merge.c	FUNCTION_26	CALL_1
0x4002741	      0xbe00000000	                              mov esi, 0	       772	merge.c	FUNCTION_26	CALL_1
0x4002746	          0x4889c7	                            mov rdi, rax	       772	merge.c	FUNCTION_26	CALL_1
0x4002749	      0xe800000000	                          call 0x400274e	       772	merge.c	FUNCTION_26	CALL_1
0x400274e	        0x488d45d0	                   lea rax, [rbp - 0x30]	       773	merge.c	FUNCTION_26	CALL_2
0x4002752	      0xbe0a000000	                            mov esi, 0xa	       773	merge.c	FUNCTION_26	CALL_2
0x4002757	          0x4889c7	                            mov rdi, rax	       773	merge.c	FUNCTION_26	CALL_2
0x400275a	      0xe8f3daffff	                   call sym.strbuf_addch	       773	merge.c	FUNCTION_26	CALL_2
0x400275f	    0x8b0500000000	            mov eax, dword [0x04002765] 	       774	merge.c	FUNCTION_26	IF_1
0x4002765	            0x85c0	                           test eax, eax	       774	merge.c	FUNCTION_26	IF_1
0x4002767	            0x7419	                            je 0x4002782	       774	merge.c	FUNCTION_26	IF_1
0x4002769	      0xba00000000	                              mov edx, 0	       775	merge.c	FUNCTION_26	IF_1
0x400276e	      0xbe07030000	                          mov esi, 0x307	       775	merge.c	FUNCTION_26	IF_1
0x4002773	      0xbf00000000	                              mov edi, 0	       775	merge.c	FUNCTION_26	IF_1
0x4002778	      0xb800000000	                              mov eax, 0	       775	merge.c	FUNCTION_26	IF_1
0x400277d	      0xe800000000	                          call 0x4002782	       775	merge.c	FUNCTION_26	IF_1
0x4002782	    0x8b0500000000	            mov eax, dword [0x04002788] 	       776	merge.c	FUNCTION_26	IF_2
0x4002788	            0x85c0	                           test eax, eax	       776	merge.c	FUNCTION_26	IF_2
0x400278a	            0x7e2d	                           jle 0x40027b9	       776	merge.c	FUNCTION_26	IF_2
0x400278c	     0xfb605000000	           movzx eax, byte [0x04002793] 	       777	merge.c	FUNCTION_26	CALL_4
0x4002793	           0xfbed8	                           movsx ebx, al	       777	merge.c	FUNCTION_26	CALL_4
0x4002796	      0xbf00000000	                              mov edi, 0	       777	merge.c	FUNCTION_26	CALL_4
0x400279b	      0xe855dbffff	                               call sym.	       777	merge.c	FUNCTION_26	CALL_4
0x40027a0	          0x4889c1	                            mov rcx, rax	       777	merge.c	FUNCTION_26	CALL_4
0x40027a3	        0x488d45d0	                   lea rax, [rbp - 0x30]	       777	merge.c	FUNCTION_26	CALL_4
0x40027a7	            0x89da	                            mov edx, ebx	       777	merge.c	FUNCTION_26	CALL_4
0x40027a9	          0x4889ce	                            mov rsi, rcx	       777	merge.c	FUNCTION_26	CALL_4
0x40027ac	          0x4889c7	                            mov rdi, rax	       777	merge.c	FUNCTION_26	CALL_4
0x40027af	      0xb800000000	                              mov eax, 0	       777	merge.c	FUNCTION_26	CALL_4
0x40027b4	      0xe800000000	                          call 0x40027b9	       777	merge.c	FUNCTION_26	CALL_4
0x40027b9	    0x8b0500000000	            mov eax, dword [0x040027bf] 	       778	merge.c	FUNCTION_26	IF_3
0x40027bf	            0x85c0	                           test eax, eax	       778	merge.c	FUNCTION_26	IF_3
0x40027c1	            0x7428	                            je 0x40027eb	       778	merge.c	FUNCTION_26	IF_3
0x40027c3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       779	merge.c	FUNCTION_26	CALL_6
0x40027c7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       779	merge.c	FUNCTION_26	CALL_6
0x40027cb	          0x4889d6	                            mov rsi, rdx	       779	merge.c	FUNCTION_26	CALL_6
0x40027ce	          0x4889c7	                            mov rdi, rax	       779	merge.c	FUNCTION_26	CALL_6
0x40027d1	      0xe800000000	                          call 0x40027d6	       779	merge.c	FUNCTION_26	CALL_6
0x40027d6	            0x89c1	                            mov ecx, eax	       779	merge.c	FUNCTION_26	CALL_6
0x40027d8	        0x488d45d0	                   lea rax, [rbp - 0x30]	       779	merge.c	FUNCTION_26	CALL_6
0x40027dc	      0xba00000000	                              mov edx, 0	       779	merge.c	FUNCTION_26	CALL_6
0x40027e1	            0x89ce	                            mov esi, ecx	       779	merge.c	FUNCTION_26	CALL_6
0x40027e3	          0x4889c7	                            mov rdi, rax	       779	merge.c	FUNCTION_26	CALL_6
0x40027e6	      0xe800000000	                          call 0x40027eb	       779	merge.c	FUNCTION_26	CALL_6
0x40027eb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       780	merge.c	FUNCTION_26	CALL_7
0x40027ef	          0x4889c7	                            mov rdi, rax	       780	merge.c	FUNCTION_26	CALL_7
0x40027f2	      0xe86d070000	              call sym.write_merge_heads	       780	merge.c	FUNCTION_26	CALL_7
0x40027f7	        0x4c8b65d8	             mov r12, qword [rbp - 0x28]	       781	merge.c	FUNCTION_26	CALL_9
0x40027fb	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       781	merge.c	FUNCTION_26	CALL_9
0x40027ff	      0xe800000000	                          call 0x4002804	       781	merge.c	FUNCTION_26	CALL_9
0x4002804	          0x4c89e2	                            mov rdx, r12	       781	merge.c	FUNCTION_26	CALL_9
0x4002807	          0x4889de	                            mov rsi, rbx	       781	merge.c	FUNCTION_26	CALL_9
0x400280a	          0x4889c7	                            mov rdi, rax	       781	merge.c	FUNCTION_26	CALL_9
0x400280d	      0xe800000000	                          call 0x4002812	       781	merge.c	FUNCTION_26	CALL_9
0x4002812	      0xe800000000	                          call 0x4002817	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4002817	          0x4889c3	                            mov rbx, rax	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x400281a	      0xe800000000	                          call 0x400281f	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x400281f	          0x4889c6	                            mov rsi, rax	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4002822	    0x8b0500000000	            mov eax, dword [0x04002828] 	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4002828	            0x85c0	                           test eax, eax	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x400282a	           0xf9fc0	                                 setg al	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x400282d	           0xfb6c0	                           movzx eax, al	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4002830	    0x41b900000000	                              mov r9d, 0	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4002836	    0x41b800000000	                              mov r8d, 0	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x400283c	          0x4889d9	                            mov rcx, rbx	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x400283f	      0xba00000000	                              mov edx, 0	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4002844	            0x89c7	                            mov edi, eax	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4002846	      0xb800000000	                              mov eax, 0	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x400284b	      0xe800000000	                          call 0x4002850	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4002850	            0x85c0	                           test eax, eax	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4002852	            0x7411	                            je 0x4002865	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4002854	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       784	merge.c	FUNCTION_26	CALL_13
0x4002858	      0xbe00000000	                              mov esi, 0	       784	merge.c	FUNCTION_26	CALL_13
0x400285d	          0x4889c7	                            mov rdi, rax	       784	merge.c	FUNCTION_26	CALL_13
0x4002860	      0xe836feffff	                   call sym.abort_commit	       784	merge.c	FUNCTION_26	CALL_13
0x4002865	    0x8b0500000000	            mov eax, dword [0x0400286b] 	       785	merge.c	FUNCTION_26	IF_5
0x400286b	            0x85c0	                           test eax, eax	       785	merge.c	FUNCTION_26	IF_5
0x400286d	            0x7e2c	                           jle 0x400289b	       785	merge.c	FUNCTION_26	IF_5
0x400286f	      0xe800000000	                          call 0x4002874	       786	merge.c	FUNCTION_26	IF_5	IF_6	CALL_15
0x4002874	      0xba00000000	                              mov edx, 0	       786	merge.c	FUNCTION_26	IF_5	IF_6	CALL_15
0x4002879	      0xbe00000000	                              mov esi, 0	       786	merge.c	FUNCTION_26	IF_5	IF_6	CALL_15
0x400287e	          0x4889c7	                            mov rdi, rax	       786	merge.c	FUNCTION_26	IF_5	IF_6	CALL_15
0x4002881	      0xe800000000	                          call 0x4002886	       786	merge.c	FUNCTION_26	IF_5	IF_6	CALL_15
0x4002886	            0x85c0	                           test eax, eax	       786	merge.c	FUNCTION_26	IF_5	IF_6	CALL_15
0x4002888	            0x7411	                            je 0x400289b	       786	merge.c	FUNCTION_26	IF_5	IF_6	CALL_15
0x400288a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       787	merge.c	FUNCTION_26	IF_5	CALL_16
0x400288e	      0xbe00000000	                              mov esi, 0	       787	merge.c	FUNCTION_26	IF_5	CALL_16
0x4002893	          0x4889c7	                            mov rdi, rax	       787	merge.c	FUNCTION_26	IF_5	CALL_16
0x4002896	      0xe800feffff	                   call sym.abort_commit	       787	merge.c	FUNCTION_26	IF_5	CALL_16
0x400289b	    0x8b0500000000	            mov eax, dword [0x040028a1] 	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028a1	            0x85c0	                           test eax, eax	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028a3	            0x744d	                            je 0x40028f2	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028a5	      0xe800000000	                          call 0x40028aa	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028aa	          0x4889c3	                            mov rbx, rax	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028ad	      0xe800000000	                          call 0x40028b2	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028b2	          0x4889c6	                            mov rsi, rax	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028b5	    0x8b0500000000	            mov eax, dword [0x040028bb] 	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028bb	            0x85c0	                           test eax, eax	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028bd	           0xf9fc0	                                 setg al	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028c0	           0xfb6c0	                           movzx eax, al	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028c3	    0x41b800000000	                              mov r8d, 0	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028c9	          0x4889d9	                            mov rcx, rbx	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028cc	      0xba00000000	                              mov edx, 0	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028d1	            0x89c7	                            mov edi, eax	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028d3	      0xb800000000	                              mov eax, 0	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028d8	      0xe800000000	                          call 0x40028dd	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028dd	            0x85c0	                           test eax, eax	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028df	            0x7411	                            je 0x40028f2	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40028e1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       793	merge.c	FUNCTION_26	CALL_20
0x40028e5	      0xbe00000000	                              mov esi, 0	       793	merge.c	FUNCTION_26	CALL_20
0x40028ea	          0x4889c7	                            mov rdi, rax	       793	merge.c	FUNCTION_26	CALL_20
0x40028ed	      0xe8a9fdffff	                   call sym.abort_commit	       793	merge.c	FUNCTION_26	CALL_20
0x40028f2	        0x488d45d0	                   lea rax, [rbp - 0x30]	       795	merge.c	FUNCTION_26	CALL_21
0x40028f6	          0x4889c7	                            mov rdi, rax	       795	merge.c	FUNCTION_26	CALL_21
0x40028f9	      0xe836fdffff	                 call sym.read_merge_msg	       795	merge.c	FUNCTION_26	CALL_21
0x40028fe	    0x8b0500000000	            mov eax, dword [0x04002904] 	       796	merge.c	FUNCTION_26	CALL_22
0x4002904	            0x85c0	                           test eax, eax	       796	merge.c	FUNCTION_26	CALL_22
0x4002906	           0xf9fc0	                                 setg al	       796	merge.c	FUNCTION_26	CALL_22
0x4002909	           0xfb6d0	                           movzx edx, al	       796	merge.c	FUNCTION_26	CALL_22
0x400290c	        0x488d45d0	                   lea rax, [rbp - 0x30]	       796	merge.c	FUNCTION_26	CALL_22
0x4002910	            0x89d6	                            mov esi, edx	       796	merge.c	FUNCTION_26	CALL_22
0x4002912	          0x4889c7	                            mov rdi, rax	       796	merge.c	FUNCTION_26	CALL_22
0x4002915	      0xe800000000	                          call 0x400291a	       796	merge.c	FUNCTION_26	CALL_22
0x400291a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       797	merge.c	FUNCTION_26	IF_8
0x400291e	          0x4885c0	                           test rax, rax	       797	merge.c	FUNCTION_26	IF_8
0x4002921	            0x751c	                           jne 0x400293f	       797	merge.c	FUNCTION_26	IF_8
0x4002923	      0xbf00000000	                              mov edi, 0	       798	merge.c	FUNCTION_26	CALL_24
0x4002928	      0xe8c8d9ffff	                               call sym.	       798	merge.c	FUNCTION_26	CALL_24
0x400292d	          0x4889c2	                            mov rdx, rax	       798	merge.c	FUNCTION_26	CALL_24
0x4002930	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       798	merge.c	FUNCTION_26	CALL_24
0x4002934	          0x4889d6	                            mov rsi, rdx	       798	merge.c	FUNCTION_26	CALL_24
0x4002937	          0x4889c7	                            mov rdi, rax	       798	merge.c	FUNCTION_26	CALL_24
0x400293a	      0xe85cfdffff	                   call sym.abort_commit	       798	merge.c	FUNCTION_26	CALL_24
0x400293f	      0xbf00000000	                              mov edi, 0	       799	merge.c	FUNCTION_26	CALL_25
0x4002944	      0xe800000000	                          call 0x4002949	       799	merge.c	FUNCTION_26	CALL_25
0x4002949	        0x488d45d0	                   lea rax, [rbp - 0x30]	       800	merge.c	FUNCTION_26	CALL_26
0x400294d	          0x4889c6	                            mov rsi, rax	       800	merge.c	FUNCTION_26	CALL_26
0x4002950	      0xbf00000000	                              mov edi, 0	       800	merge.c	FUNCTION_26	CALL_26
0x4002955	      0xe800000000	                          call 0x400295a	       800	merge.c	FUNCTION_26	CALL_26
0x400295a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       801	merge.c	FUNCTION_26	CALL_27
0x400295e	          0x4889c7	                            mov rdi, rax	       801	merge.c	FUNCTION_26	CALL_27
0x4002961	      0xe800000000	                          call 0x4002966	       801	merge.c	FUNCTION_26	CALL_27
0x4002966	              0x90	                                     nop	       802	merge.c	FUNCTION_26
0x4002967	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       802	merge.c	FUNCTION_26
0x400296b	    0x644833042528	                xor rax, qword fs:[0x28]	       802	merge.c	FUNCTION_26
0x4002974	            0x7405	                            je 0x400297b	       802	merge.c	FUNCTION_26
0x4002976	      0xe800000000	                          call 0x400297b	       802	merge.c	FUNCTION_26
0x400297b	        0x4883c430	                           add rsp, 0x30	       802	merge.c	FUNCTION_26
0x400297f	              0x5b	                                 pop rbx	       802	merge.c	FUNCTION_26
0x4002980	            0x415c	                                 pop r12	       802	merge.c	FUNCTION_26
0x4002982	              0x5d	                                 pop rbp	       802	merge.c	FUNCTION_26
0x4002983	              0xc3	                                     ret	       802	merge.c	FUNCTION_26
oidclr	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,1:ELSE,0:IF,0	12
0x4000397	              0x55	                                push rbp	      1016	cache.h	FUNCTION_56
0x4000398	          0x4889e5	                            mov rbp, rsp	      1016	cache.h	FUNCTION_56
0x400039b	        0x4883ec10	                           sub rsp, 0x10	      1016	cache.h	FUNCTION_56
0x400039f	        0x48897df8	                mov qword [rbp - 8], rdi	      1016	cache.h	FUNCTION_56
0x40003a3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1017	cache.h	FUNCTION_56	CALL_1
0x40003a7	      0xba14000000	                           mov edx, 0x14	      1017	cache.h	FUNCTION_56	CALL_1
0x40003ac	      0xbe00000000	                              mov esi, 0	      1017	cache.h	FUNCTION_56	CALL_1
0x40003b1	          0x4889c7	                            mov rdi, rax	      1017	cache.h	FUNCTION_56	CALL_1
0x40003b4	      0xe800000000	                          call 0x40003b9	      1017	cache.h	FUNCTION_56	CALL_1
0x40003b9	              0x90	                                     nop	      1018	cache.h	FUNCTION_56
0x40003ba	              0xc9	                                   leave	      1018	cache.h	FUNCTION_56
0x40003bb	              0xc3	                                     ret	      1018	cache.h	FUNCTION_56
drop_save	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,6:ELSE,0:IF,0	14
0x4000a42	              0x55	                                push rbp	       247	merge.c	FUNCTION_7
0x4000a43	          0x4889e5	                            mov rbp, rsp	       247	merge.c	FUNCTION_7
0x4000a46	      0xe800000000	                          call 0x4000a4b	       248	merge.c	FUNCTION_7	CALL_2
0x4000a4b	          0x4889c7	                            mov rdi, rax	       248	merge.c	FUNCTION_7	CALL_2
0x4000a4e	      0xe800000000	                          call 0x4000a53	       248	merge.c	FUNCTION_7	CALL_2
0x4000a53	      0xe800000000	                          call 0x4000a58	       249	merge.c	FUNCTION_7	CALL_4
0x4000a58	          0x4889c7	                            mov rdi, rax	       249	merge.c	FUNCTION_7	CALL_4
0x4000a5b	      0xe800000000	                          call 0x4000a60	       249	merge.c	FUNCTION_7	CALL_4
0x4000a60	      0xe800000000	                          call 0x4000a65	       250	merge.c	FUNCTION_7	CALL_6
0x4000a65	          0x4889c7	                            mov rdi, rax	       250	merge.c	FUNCTION_7	CALL_6
0x4000a68	      0xe800000000	                          call 0x4000a6d	       250	merge.c	FUNCTION_7	CALL_6
0x4000a6d	              0x90	                                     nop	       251	merge.c	FUNCTION_7
0x4000a6e	              0x5d	                                 pop rbp	       251	merge.c	FUNCTION_7
0x4000a6f	              0xc3	                                     ret	       251	merge.c	FUNCTION_7
const_error	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,0:ELSE,0:IF,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_84
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_84
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_84
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_84
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_84
read_tree_trivial	FOR,1:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,8:ELSE,0:IF,4	122
0x4001e66	              0x55	                                push rbp	       606	merge.c	FUNCTION_18
0x4001e67	          0x4889e5	                            mov rbp, rsp	       606	merge.c	FUNCTION_18
0x4001e6a	    0x4881ecc00400	                          sub rsp, 0x4c0	       606	merge.c	FUNCTION_18
0x4001e71	    0x4889bd58fbff	            mov qword [rbp - 0x4a8], rdi	       606	merge.c	FUNCTION_18
0x4001e78	    0x4889b550fbff	            mov qword [rbp - 0x4b0], rsi	       606	merge.c	FUNCTION_18
0x4001e7f	    0x48899548fbff	            mov qword [rbp - 0x4b8], rdx	       606	merge.c	FUNCTION_18
0x4001e86	    0x64488b042528	                mov rax, qword fs:[0x28]	       606	merge.c	FUNCTION_18
0x4001e8f	        0x488945f8	                mov qword [rbp - 8], rax	       606	merge.c	FUNCTION_18
0x4001e93	            0x31c0	                            xor eax, eax	       606	merge.c	FUNCTION_18
0x4001e95	    0xc7856cfbffff	              mov dword [rbp - 0x494], 0	       607	merge.c	FUNCTION_18
0x4001e9f	    0x488d85f0fcff	                  lea rax, [rbp - 0x310]	       612	merge.c	FUNCTION_18	CALL_1
0x4001ea6	      0xba00030000	                          mov edx, 0x300	       612	merge.c	FUNCTION_18	CALL_1
0x4001eab	      0xbe00000000	                              mov esi, 0	       612	merge.c	FUNCTION_18	CALL_1
0x4001eb0	          0x4889c7	                            mov rdi, rax	       612	merge.c	FUNCTION_18	CALL_1
0x4001eb3	      0xe800000000	                          call 0x4001eb8	       612	merge.c	FUNCTION_18	CALL_1
0x4001eb8	    0xc785f0feffff	              mov dword [rbp - 0x110], 2	       613	merge.c	FUNCTION_18
0x4001ec2	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       614	merge.c	FUNCTION_18
0x4001ecd	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	       615	merge.c	FUNCTION_18
0x4001ed8	    0xc785f8fcffff	              mov dword [rbp - 0x308], 1	       616	merge.c	FUNCTION_18
0x4001ee2	    0xc78508fdffff	              mov dword [rbp - 0x2f8], 1	       617	merge.c	FUNCTION_18
0x4001eec	    0xc78504fdffff	              mov dword [rbp - 0x2fc], 1	       618	merge.c	FUNCTION_18
0x4001ef6	    0xc785f4fcffff	              mov dword [rbp - 0x30c], 1	       619	merge.c	FUNCTION_18
0x4001f00	    0x488b8558fbff	            mov rax, qword [rbp - 0x4a8]	       620	merge.c	FUNCTION_18	CALL_2
0x4001f07	          0x4889c7	                            mov rdi, rax	       620	merge.c	FUNCTION_18	CALL_2
0x4001f0a	      0xe800000000	                          call 0x4001f0f	       620	merge.c	FUNCTION_18	CALL_2
0x4001f0f	          0x4889c2	                            mov rdx, rax	       620	merge.c	FUNCTION_18	CALL_2
0x4001f12	    0x8b856cfbffff	            mov eax, dword [rbp - 0x494]	       620	merge.c	FUNCTION_18	CALL_2
0x4001f18	            0x4898	                                    cdqe	       620	merge.c	FUNCTION_18	CALL_2
0x4001f1a	    0x488994c570fb	    mov qword [rbp + rax*8 - 0x490], rdx	       620	merge.c	FUNCTION_18	CALL_2
0x4001f22	    0x8b856cfbffff	            mov eax, dword [rbp - 0x494]	       621	merge.c	FUNCTION_18	IF_1
0x4001f28	          0x8d5001	                      lea edx, [rax + 1]	       621	merge.c	FUNCTION_18	IF_1
0x4001f2b	    0x89956cfbffff	            mov dword [rbp - 0x494], edx	       621	merge.c	FUNCTION_18	IF_1
0x4001f31	            0x4898	                                    cdqe	       621	merge.c	FUNCTION_18	IF_1
0x4001f33	    0x488b84c570fb	    mov rax, qword [rbp + rax*8 - 0x490]	       621	merge.c	FUNCTION_18	IF_1
0x4001f3b	          0x4885c0	                           test rax, rax	       621	merge.c	FUNCTION_18	IF_1
0x4001f3e	            0x750a	                           jne 0x4001f4a	       621	merge.c	FUNCTION_18	IF_1
0x4001f40	      0xb8ffffffff	                     mov eax, 0xffffffff	       622	merge.c	FUNCTION_18	IF_1
0x4001f45	      0xe96e010000	                           jmp 0x40020b8	       622	merge.c	FUNCTION_18	IF_1
0x4001f4a	    0x488b8550fbff	            mov rax, qword [rbp - 0x4b0]	       623	merge.c	FUNCTION_18	CALL_3
0x4001f51	          0x4889c7	                            mov rdi, rax	       623	merge.c	FUNCTION_18	CALL_3
0x4001f54	      0xe800000000	                          call 0x4001f59	       623	merge.c	FUNCTION_18	CALL_3
0x4001f59	          0x4889c2	                            mov rdx, rax	       623	merge.c	FUNCTION_18	CALL_3
0x4001f5c	    0x8b856cfbffff	            mov eax, dword [rbp - 0x494]	       623	merge.c	FUNCTION_18	CALL_3
0x4001f62	            0x4898	                                    cdqe	       623	merge.c	FUNCTION_18	CALL_3
0x4001f64	    0x488994c570fb	    mov qword [rbp + rax*8 - 0x490], rdx	       623	merge.c	FUNCTION_18	CALL_3
0x4001f6c	    0x8b856cfbffff	            mov eax, dword [rbp - 0x494]	       624	merge.c	FUNCTION_18	IF_2
0x4001f72	          0x8d5001	                      lea edx, [rax + 1]	       624	merge.c	FUNCTION_18	IF_2
0x4001f75	    0x89956cfbffff	            mov dword [rbp - 0x494], edx	       624	merge.c	FUNCTION_18	IF_2
0x4001f7b	            0x4898	                                    cdqe	       624	merge.c	FUNCTION_18	IF_2
0x4001f7d	    0x488b84c570fb	    mov rax, qword [rbp + rax*8 - 0x490]	       624	merge.c	FUNCTION_18	IF_2
0x4001f85	          0x4885c0	                           test rax, rax	       624	merge.c	FUNCTION_18	IF_2
0x4001f88	            0x750a	                           jne 0x4001f94	       624	merge.c	FUNCTION_18	IF_2
0x4001f8a	      0xb8ffffffff	                     mov eax, 0xffffffff	       625	merge.c	FUNCTION_18	IF_2
0x4001f8f	      0xe924010000	                           jmp 0x40020b8	       625	merge.c	FUNCTION_18	IF_2
0x4001f94	    0x488b8548fbff	            mov rax, qword [rbp - 0x4b8]	       626	merge.c	FUNCTION_18	CALL_4
0x4001f9b	          0x4889c7	                            mov rdi, rax	       626	merge.c	FUNCTION_18	CALL_4
0x4001f9e	      0xe800000000	                          call 0x4001fa3	       626	merge.c	FUNCTION_18	CALL_4
0x4001fa3	          0x4889c2	                            mov rdx, rax	       626	merge.c	FUNCTION_18	CALL_4
0x4001fa6	    0x8b856cfbffff	            mov eax, dword [rbp - 0x494]	       626	merge.c	FUNCTION_18	CALL_4
0x4001fac	            0x4898	                                    cdqe	       626	merge.c	FUNCTION_18	CALL_4
0x4001fae	    0x488994c570fb	    mov qword [rbp + rax*8 - 0x490], rdx	       626	merge.c	FUNCTION_18	CALL_4
0x4001fb6	    0x8b856cfbffff	            mov eax, dword [rbp - 0x494]	       627	merge.c	FUNCTION_18	IF_3
0x4001fbc	          0x8d5001	                      lea edx, [rax + 1]	       627	merge.c	FUNCTION_18	IF_3
0x4001fbf	    0x89956cfbffff	            mov dword [rbp - 0x494], edx	       627	merge.c	FUNCTION_18	IF_3
0x4001fc5	            0x4898	                                    cdqe	       627	merge.c	FUNCTION_18	IF_3
0x4001fc7	    0x488b84c570fb	    mov rax, qword [rbp + rax*8 - 0x490]	       627	merge.c	FUNCTION_18	IF_3
0x4001fcf	          0x4885c0	                           test rax, rax	       627	merge.c	FUNCTION_18	IF_3
0x4001fd2	            0x750a	                           jne 0x4001fde	       627	merge.c	FUNCTION_18	IF_3
0x4001fd4	      0xb8ffffffff	                     mov eax, 0xffffffff	       628	merge.c	FUNCTION_18	IF_3
0x4001fd9	      0xe9da000000	                           jmp 0x40020b8	       628	merge.c	FUNCTION_18	IF_3
0x4001fde	    0x48c78558fdff	              mov qword [rbp - 0x2a8], 0	       629	merge.c	FUNCTION_18
0x4001fe9	      0xbf00000000	                              mov edi, 0	       630	merge.c	FUNCTION_18	CALL_5
0x4001fee	      0xe800000000	                          call 0x4001ff3	       630	merge.c	FUNCTION_18	CALL_5
0x4001ff3	    0xc78568fbffff	              mov dword [rbp - 0x498], 0	       631	merge.c	FUNCTION_18	FOR_1
0x4001ffd	            0xeb79	                           jmp 0x4002078	       631	merge.c	FUNCTION_18	FOR_1
0x4001fff	    0x8b8568fbffff	            mov eax, dword [rbp - 0x498]	       632	merge.c	FUNCTION_18	FOR_1	CALL_6
0x4002005	            0x4898	                                    cdqe	       632	merge.c	FUNCTION_18	FOR_1	CALL_6
0x4002007	    0x488b84c570fb	    mov rax, qword [rbp + rax*8 - 0x490]	       632	merge.c	FUNCTION_18	FOR_1	CALL_6
0x400200f	          0x4889c7	                            mov rdi, rax	       632	merge.c	FUNCTION_18	FOR_1	CALL_6
0x4002012	      0xe8a5e3ffff	                     call sym.parse_tree	       632	merge.c	FUNCTION_18	FOR_1	CALL_6
0x4002017	    0x8b8568fbffff	            mov eax, dword [rbp - 0x498]	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x400201d	            0x4898	                                    cdqe	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x400201f	    0x488b84c570fb	    mov rax, qword [rbp + rax*8 - 0x490]	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x4002027	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x400202b	    0x8b8568fbffff	            mov eax, dword [rbp - 0x498]	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x4002031	            0x4898	                                    cdqe	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x4002033	    0x488b84c570fb	    mov rax, qword [rbp + rax*8 - 0x490]	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x400203b	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x400203f	    0x8b8568fbffff	            mov eax, dword [rbp - 0x498]	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x4002045	          0x4863d0	                         movsxd rdx, eax	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x4002048	          0x4889d0	                            mov rax, rdx	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x400204b	        0x48c1e002	                              shl rax, 2	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x400204f	          0x4801d0	                            add rax, rdx	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x4002052	        0x48c1e003	                              shl rax, 3	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x4002056	          0x4889c2	                            mov rdx, rax	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x4002059	    0x488d85b0fbff	                  lea rax, [rbp - 0x450]	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x4002060	          0x4801d0	                            add rax, rdx	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x4002063	          0x4889f2	                            mov rdx, rsi	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x4002066	          0x4889ce	                            mov rsi, rcx	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x4002069	          0x4889c7	                            mov rdi, rax	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x400206c	      0xe800000000	                          call 0x4002071	       633	merge.c	FUNCTION_18	FOR_1	CALL_7
0x4002071	    0x838568fbffff	              add dword [rbp - 0x498], 1	       631	merge.c	FUNCTION_18	FOR_1
0x4002078	    0x8b8568fbffff	            mov eax, dword [rbp - 0x498]	       631	merge.c	FUNCTION_18	FOR_1
0x400207e	    0x3b856cfbffff	            cmp eax, dword [rbp - 0x494]	       631	merge.c	FUNCTION_18	FOR_1
0x4002084	     0xf8c75ffffff	                            jl 0x4001fff	       631	merge.c	FUNCTION_18	FOR_1
0x400208a	    0x8b856cfbffff	            mov eax, dword [rbp - 0x494]	       635	merge.c	FUNCTION_18	IF_4	CALL_8
0x4002090	    0x488d95f0fcff	                  lea rdx, [rbp - 0x310]	       635	merge.c	FUNCTION_18	IF_4	CALL_8
0x4002097	    0x488d8db0fbff	                  lea rcx, [rbp - 0x450]	       635	merge.c	FUNCTION_18	IF_4	CALL_8
0x400209e	          0x4889ce	                            mov rsi, rcx	       635	merge.c	FUNCTION_18	IF_4	CALL_8
0x40020a1	            0x89c7	                            mov edi, eax	       635	merge.c	FUNCTION_18	IF_4	CALL_8
0x40020a3	      0xe800000000	                          call 0x40020a8	       635	merge.c	FUNCTION_18	IF_4	CALL_8
0x40020a8	            0x85c0	                           test eax, eax	       635	merge.c	FUNCTION_18	IF_4	CALL_8
0x40020aa	            0x7407	                            je 0x40020b3	       635	merge.c	FUNCTION_18	IF_4	CALL_8
0x40020ac	      0xb8ffffffff	                     mov eax, 0xffffffff	       636	merge.c	FUNCTION_18	IF_4
0x40020b1	            0xeb05	                           jmp 0x40020b8	       636	merge.c	FUNCTION_18	IF_4
0x40020b3	      0xb800000000	                              mov eax, 0	       637	merge.c	FUNCTION_18
0x40020b8	        0x488b4df8	                mov rcx, qword [rbp - 8]	       638	merge.c	FUNCTION_18
0x40020bc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       638	merge.c	FUNCTION_18
0x40020c5	            0x7405	                            je 0x40020cc	       638	merge.c	FUNCTION_18
0x40020c7	      0xe800000000	                          call 0x40020cc	       638	merge.c	FUNCTION_18
0x40020cc	              0xc9	                                   leave	       638	merge.c	FUNCTION_18
0x40020cd	              0xc3	                                     ret	       638	merge.c	FUNCTION_18
count_diff_files	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,0:ELSE,0:IF,0	17
0x4002494	              0x55	                                push rbp	       706	merge.c	FUNCTION_21
0x4002495	          0x4889e5	                            mov rbp, rsp	       706	merge.c	FUNCTION_21
0x4002498	        0x48897de8	             mov qword [rbp - 0x18], rdi	       706	merge.c	FUNCTION_21
0x400249c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       706	merge.c	FUNCTION_21
0x40024a0	        0x488955d8	             mov qword [rbp - 0x28], rdx	       706	merge.c	FUNCTION_21
0x40024a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       707	merge.c	FUNCTION_21
0x40024a8	        0x488945f8	                mov qword [rbp - 8], rax	       707	merge.c	FUNCTION_21
0x40024ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       709	merge.c	FUNCTION_21
0x40024b0	            0x8b10	                    mov edx, dword [rax]	       709	merge.c	FUNCTION_21
0x40024b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       709	merge.c	FUNCTION_21
0x40024b6	          0x8b400c	              mov eax, dword [rax + 0xc]	       709	merge.c	FUNCTION_21
0x40024b9	             0x1c2	                            add edx, eax	       709	merge.c	FUNCTION_21
0x40024bb	        0x488b45f8	                mov rax, qword [rbp - 8]	       709	merge.c	FUNCTION_21
0x40024bf	            0x8910	                    mov dword [rax], edx	       709	merge.c	FUNCTION_21
0x40024c1	              0x90	                                     nop	       710	merge.c	FUNCTION_21
0x40024c2	              0x5d	                                 pop rbp	       710	merge.c	FUNCTION_21
0x40024c3	              0xc3	                                     ret	       710	merge.c	FUNCTION_21
handle_fetch_head	FOR,1:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,18:ELSE,3:IF,10	199
0x40033d6	              0x55	                                push rbp	      1030	merge.c	FUNCTION_37
0x40033d7	          0x4889e5	                            mov rbp, rsp	      1030	merge.c	FUNCTION_37
0x40033da	              0x53	                                push rbx	      1030	merge.c	FUNCTION_37
0x40033db	    0x4881ec880000	                           sub rsp, 0x88	      1030	merge.c	FUNCTION_37
0x40033e2	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      1030	merge.c	FUNCTION_37
0x40033e9	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      1030	merge.c	FUNCTION_37
0x40033f0	    0x64488b042528	                mov rax, qword fs:[0x28]	      1030	merge.c	FUNCTION_37
0x40033f9	        0x488945e8	             mov qword [rbp - 0x18], rax	      1030	merge.c	FUNCTION_37
0x40033fd	            0x31c0	                            xor eax, eax	      1030	merge.c	FUNCTION_37
0x40033ff	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1033	merge.c	FUNCTION_37
0x4003407	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1033	merge.c	FUNCTION_37
0x400340f	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1033	merge.c	FUNCTION_37
0x4003417	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      1035	merge.c	FUNCTION_37	IF_1
0x400341f	            0x750b	                           jne 0x400342c	      1035	merge.c	FUNCTION_37	IF_1
0x4003421	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1036	merge.c	FUNCTION_37	IF_1
0x4003425	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1036	merge.c	FUNCTION_37	IF_1
0x400342c	      0xe800000000	                          call 0x4003431	      1038	merge.c	FUNCTION_37	CALL_1
0x4003431	        0x488945a0	             mov qword [rbp - 0x60], rax	      1038	merge.c	FUNCTION_37	CALL_1
0x4003435	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1039	merge.c	FUNCTION_37	CALL_2
0x4003439	      0xbe00000000	                              mov esi, 0	      1039	merge.c	FUNCTION_37	CALL_2
0x400343e	          0x4889c7	                            mov rdi, rax	      1039	merge.c	FUNCTION_37	CALL_2
0x4003441	      0xb800000000	                              mov eax, 0	      1039	merge.c	FUNCTION_37	CALL_2
0x4003446	      0xe800000000	                          call 0x400344b	      1039	merge.c	FUNCTION_37	CALL_2
0x400344b	          0x894594	             mov dword [rbp - 0x6c], eax	      1039	merge.c	FUNCTION_37	CALL_2
0x400344e	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      1040	merge.c	FUNCTION_37	IF_2
0x4003452	            0x7921	                           jns 0x4003475	      1040	merge.c	FUNCTION_37	IF_2
0x4003454	      0xbf00000000	                              mov edi, 0	      1041	merge.c	FUNCTION_37	CALL_4
0x4003459	      0xe897ceffff	                               call sym.	      1041	merge.c	FUNCTION_37	CALL_4
0x400345e	          0x4889c2	                            mov rdx, rax	      1041	merge.c	FUNCTION_37	CALL_4
0x4003461	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1041	merge.c	FUNCTION_37	CALL_4
0x4003465	          0x4889c6	                            mov rsi, rax	      1041	merge.c	FUNCTION_37	CALL_4
0x4003468	          0x4889d7	                            mov rdi, rdx	      1041	merge.c	FUNCTION_37	CALL_4
0x400346b	      0xb800000000	                              mov eax, 0	      1041	merge.c	FUNCTION_37	CALL_4
0x4003470	      0xe800000000	                          call 0x4003475	      1041	merge.c	FUNCTION_37	CALL_4
0x4003475	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4003478	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x400347f	      0xba00000000	                              mov edx, 0	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4003484	            0x89ce	                            mov esi, ecx	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4003486	          0x4889c7	                            mov rdi, rax	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4003489	      0xe800000000	                          call 0x400348e	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x400348e	          0x4885c0	                           test rax, rax	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4003491	            0x7921	                           jns 0x40034b4	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4003493	      0xbf00000000	                              mov edi, 0	      1044	merge.c	FUNCTION_37	CALL_7
0x4003498	      0xe858ceffff	                               call sym.	      1044	merge.c	FUNCTION_37	CALL_7
0x400349d	          0x4889c2	                            mov rdx, rax	      1044	merge.c	FUNCTION_37	CALL_7
0x40034a0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1044	merge.c	FUNCTION_37	CALL_7
0x40034a4	          0x4889c6	                            mov rsi, rax	      1044	merge.c	FUNCTION_37	CALL_7
0x40034a7	          0x4889d7	                            mov rdi, rdx	      1044	merge.c	FUNCTION_37	CALL_7
0x40034aa	      0xb800000000	                              mov eax, 0	      1044	merge.c	FUNCTION_37	CALL_7
0x40034af	      0xe800000000	                          call 0x40034b4	      1044	merge.c	FUNCTION_37	CALL_7
0x40034b4	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x40034b7	            0x89c7	                            mov edi, eax	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x40034b9	      0xe800000000	                          call 0x40034be	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x40034be	            0x85c0	                           test eax, eax	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x40034c0	            0x7921	                           jns 0x40034e3	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x40034c2	      0xbf00000000	                              mov edi, 0	      1046	merge.c	FUNCTION_37	CALL_10
0x40034c7	      0xe829ceffff	                               call sym.	      1046	merge.c	FUNCTION_37	CALL_10
0x40034cc	          0x4889c2	                            mov rdx, rax	      1046	merge.c	FUNCTION_37	CALL_10
0x40034cf	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1046	merge.c	FUNCTION_37	CALL_10
0x40034d3	          0x4889c6	                            mov rsi, rax	      1046	merge.c	FUNCTION_37	CALL_10
0x40034d6	          0x4889d7	                            mov rdi, rdx	      1046	merge.c	FUNCTION_37	CALL_10
0x40034d9	      0xb800000000	                              mov eax, 0	      1046	merge.c	FUNCTION_37	CALL_10
0x40034de	      0xe800000000	                          call 0x40034e3	      1046	merge.c	FUNCTION_37	CALL_10
0x40034e3	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      1048	merge.c	FUNCTION_37	FOR_1
0x40034ea	      0xe9b3010000	                           jmp 0x40036a2	      1048	merge.c	FUNCTION_37	FOR_1
0x40034ef	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x40034f6	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x40034fa	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x40034fd	            0x4898	                                    cdqe	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x40034ff	          0x4801d0	                            add rax, rdx	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4003502	      0xbe0a000000	                            mov esi, 0xa	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4003507	          0x4889c7	                            mov rdi, rax	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x400350a	      0xe800000000	                          call 0x400350f	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x400350f	        0x488945a8	             mov qword [rbp - 0x58], rax	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4003513	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1054	merge.c	FUNCTION_37	FOR_1	IF_5
0x4003518	            0x741d	                            je 0x4003537	      1054	merge.c	FUNCTION_37	FOR_1	IF_5
0x400351a	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x400351e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x4003525	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x4003529	          0x4829c2	                            sub rdx, rax	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x400352c	          0x4889d0	                            mov rax, rdx	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x400352f	          0x83c001	                              add eax, 1	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x4003532	          0x894590	             mov dword [rbp - 0x70], eax	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x4003535	            0xeb0e	                           jmp 0x4003545	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x4003537	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1057	merge.c	FUNCTION_37	FOR_1	ELSE_1
0x400353e	        0x488b4008	                mov rax, qword [rax + 8]	      1057	merge.c	FUNCTION_37	FOR_1	ELSE_1
0x4003542	          0x894590	             mov dword [rbp - 0x70], eax	      1057	merge.c	FUNCTION_37	FOR_1	ELSE_1
0x4003545	          0x8b4590	             mov eax, dword [rbp - 0x70]	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x4003548	          0x2b458c	             sub eax, dword [rbp - 0x74]	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x400354b	          0x83f829	                           cmp eax, 0x29	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x400354e	            0x7e26	                           jle 0x4003576	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x4003550	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x4003557	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x400355b	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x400355e	            0x4898	                                    cdqe	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x4003560	          0x4801c2	                            add rdx, rax	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x4003563	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x4003567	          0x4889c6	                            mov rsi, rax	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x400356a	          0x4889d7	                            mov rdi, rdx	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x400356d	      0xe800000000	                          call 0x4003572	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x4003572	            0x85c0	                           test eax, eax	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x4003574	            0x740d	                            je 0x4003583	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x4003576	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1061	merge.c	FUNCTION_37	FOR_1	IF_6
0x400357e	      0xe9a8000000	                           jmp 0x400362b	      1061	merge.c	FUNCTION_37	FOR_1	IF_6
0x4003583	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x400358a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x400358e	          0x8b558c	             mov edx, dword [rbp - 0x74]	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x4003591	          0x4863d2	                         movsxd rdx, edx	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x4003594	        0x4883c228	                           add rdx, 0x28	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x4003598	          0x4801d0	                            add rax, rdx	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x400359b	      0xba02000000	                              mov edx, 2	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40035a0	      0xbe00000000	                              mov esi, 0	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40035a5	          0x4889c7	                            mov rdi, rax	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40035a8	      0xe800000000	                          call 0x40035ad	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40035ad	            0x85c0	                           test eax, eax	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40035af	     0xf85e6000000	                           jne 0x400369b	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40035b5	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1065	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40035bc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1065	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40035c0	          0x8b558c	             mov edx, dword [rbp - 0x74]	      1065	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40035c3	          0x4863d2	                         movsxd rdx, edx	      1065	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40035c6	        0x4883c228	                           add rdx, 0x28	      1065	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40035ca	          0x4801d0	                            add rax, rdx	      1065	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40035cd	           0xfb600	                   movzx eax, byte [rax]	      1065	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40035d0	          0x88458b	               mov byte [rbp - 0x75], al	      1065	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40035d3	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1066	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40035da	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1066	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40035de	          0x8b558c	             mov edx, dword [rbp - 0x74]	      1066	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40035e1	          0x4863d2	                         movsxd rdx, edx	      1066	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40035e4	        0x4883c228	                           add rdx, 0x28	      1066	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40035e8	          0x4801d0	                            add rax, rdx	      1066	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40035eb	          0xc60000	                       mov byte [rax], 0	      1066	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40035ee	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x40035f5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x40035f9	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x40035fc	            0x4898	                                    cdqe	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x40035fe	          0x4801d0	                            add rax, rdx	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x4003601	          0x4889c7	                            mov rdi, rax	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x4003604	      0xe800000000	                          call 0x4003609	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x4003609	        0x48894598	             mov qword [rbp - 0x68], rax	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x400360d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x4003614	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x4003618	          0x8b558c	             mov edx, dword [rbp - 0x74]	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x400361b	          0x4863d2	                         movsxd rdx, edx	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x400361e	        0x4883c228	                           add rdx, 0x28	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x4003622	          0x4801c2	                            add rdx, rax	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x4003625	         0xfb6458b	            movzx eax, byte [rbp - 0x75]	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x4003629	            0x8802	                      mov byte [rdx], al	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x400362b	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      1070	merge.c	FUNCTION_37	FOR_1	IF_8
0x4003630	            0x7546	                           jne 0x4003678	      1070	merge.c	FUNCTION_37	FOR_1	IF_8
0x4003632	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1071	merge.c	FUNCTION_37	FOR_1	IF_8	IF_9
0x4003637	            0x7407	                            je 0x4003640	      1071	merge.c	FUNCTION_37	FOR_1	IF_8	IF_9
0x4003639	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1072	merge.c	FUNCTION_37	FOR_1	IF_8	IF_9
0x400363d	          0xc60000	                       mov byte [rax], 0	      1072	merge.c	FUNCTION_37	FOR_1	IF_8	IF_9
0x4003640	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1074	merge.c	FUNCTION_37	FOR_1	IF_8
0x4003647	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1074	merge.c	FUNCTION_37	FOR_1	IF_8
0x400364b	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x400364e	            0x4898	                                    cdqe	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4003650	        0x488d1c02	                    lea rbx, [rdx + rax]	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4003654	      0xbf00000000	                              mov edi, 0	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4003659	      0xe897ccffff	                               call sym.	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x400365e	          0x4889c1	                            mov rcx, rax	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4003661	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4003665	          0x4889da	                            mov rdx, rbx	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4003668	          0x4889c6	                            mov rsi, rax	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x400366b	          0x4889cf	                            mov rdi, rcx	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x400366e	      0xb800000000	                              mov eax, 0	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4003673	      0xe800000000	                          call 0x4003678	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4003678	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x400367f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x4003683	          0x4889d6	                            mov rsi, rdx	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x4003686	          0x4889c7	                            mov rdi, rax	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x4003689	      0xe800000000	                          call 0x400368e	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x400368e	        0x4883c008	                              add rax, 8	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x4003692	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x4003699	            0xeb01	                           jmp 0x400369c	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x400369b	              0x90	                                     nop	      1063	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7
0x400369c	          0x8b4590	             mov eax, dword [rbp - 0x70]	      1048	merge.c	FUNCTION_37	FOR_1
0x400369f	          0x89458c	             mov dword [rbp - 0x74], eax	      1048	merge.c	FUNCTION_37	FOR_1
0x40036a2	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1048	merge.c	FUNCTION_37	FOR_1
0x40036a5	          0x4863d0	                         movsxd rdx, eax	      1048	merge.c	FUNCTION_37	FOR_1
0x40036a8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1048	merge.c	FUNCTION_37	FOR_1
0x40036af	        0x488b4008	                mov rax, qword [rax + 8]	      1048	merge.c	FUNCTION_37	FOR_1
0x40036b3	          0x4839c2	                            cmp rdx, rax	      1048	merge.c	FUNCTION_37	FOR_1
0x40036b6	     0xf8233feffff	                            jb 0x40034ef	      1048	merge.c	FUNCTION_37	FOR_1
0x40036bc	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1079	merge.c	FUNCTION_37	IF_10
0x40036c0	    0x48398570ffff	            cmp qword [rbp - 0x90], rax 	      1079	merge.c	FUNCTION_37	IF_10
0x40036c7	            0x750c	                           jne 0x40036d5	      1079	merge.c	FUNCTION_37	IF_10
0x40036c9	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1080	merge.c	FUNCTION_37	CALL_18
0x40036cd	          0x4889c7	                            mov rdi, rax	      1080	merge.c	FUNCTION_37	CALL_18
0x40036d0	      0xe800000000	                          call 0x40036d5	      1080	merge.c	FUNCTION_37	CALL_18
0x40036d5	              0x90	                                     nop	      1081	merge.c	FUNCTION_37
0x40036d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1081	merge.c	FUNCTION_37
0x40036da	    0x644833042528	                xor rax, qword fs:[0x28]	      1081	merge.c	FUNCTION_37
0x40036e3	            0x7405	                            je 0x40036ea	      1081	merge.c	FUNCTION_37
0x40036e5	      0xe800000000	                          call 0x40036ea	      1081	merge.c	FUNCTION_37
0x40036ea	    0x4881c4880000	                           add rsp, 0x88	      1081	merge.c	FUNCTION_37
0x40036f1	              0x5b	                                 pop rbx	      1081	merge.c	FUNCTION_37
0x40036f2	              0x5d	                                 pop rbp	      1081	merge.c	FUNCTION_37
0x40036f3	              0xc3	                                     ret	      1081	merge.c	FUNCTION_37
reduce_parents	FOR,0:WHILE,1:SWITCH,0:functions,0:DO,0:CALL,4:ELSE,1:IF,1	49
0x400324a	              0x55	                                push rbp	       987	merge.c	FUNCTION_35
0x400324b	          0x4889e5	                            mov rbp, rsp	       987	merge.c	FUNCTION_35
0x400324e	        0x4883ec40	                           sub rsp, 0x40	       987	merge.c	FUNCTION_35
0x4003252	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       987	merge.c	FUNCTION_35
0x4003256	        0x488975d0	             mov qword [rbp - 0x30], rsi	       987	merge.c	FUNCTION_35
0x400325a	        0x488955c8	             mov qword [rbp - 0x38], rdx	       987	merge.c	FUNCTION_35
0x400325e	    0x64488b042528	                mov rax, qword fs:[0x28]	       987	merge.c	FUNCTION_35
0x4003267	        0x488945f8	                mov qword [rbp - 8], rax	       987	merge.c	FUNCTION_35
0x400326b	            0x31c0	                            xor eax, eax	       987	merge.c	FUNCTION_35
0x400326d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       997	merge.c	FUNCTION_35
0x4003271	    0xc70001000000	                      mov dword [rax], 1	       997	merge.c	FUNCTION_35
0x4003277	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1000	merge.c	FUNCTION_35	CALL_1
0x400327b	          0x4889c7	                            mov rdi, rax	      1000	merge.c	FUNCTION_35	CALL_1
0x400327e	      0xe800000000	                          call 0x4003283	      1000	merge.c	FUNCTION_35	CALL_1
0x4003283	        0x488945e0	             mov qword [rbp - 0x20], rax	      1000	merge.c	FUNCTION_35	CALL_1
0x4003287	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1001	merge.c	FUNCTION_35	CALL_2
0x400328b	          0x4889c7	                            mov rdi, rax	      1001	merge.c	FUNCTION_35	CALL_2
0x400328e	      0xe800000000	                          call 0x4003293	      1001	merge.c	FUNCTION_35	CALL_2
0x4003293	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1003	merge.c	FUNCTION_35
0x400329b	        0x488d45c8	                   lea rax, [rbp - 0x38]	      1004	merge.c	FUNCTION_35
0x400329f	        0x488945e8	             mov qword [rbp - 0x18], rax	      1004	merge.c	FUNCTION_35
0x40032a3	            0xeb41	                           jmp 0x40032e6	      1005	merge.c	FUNCTION_35	WHILE_1
0x40032a5	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1006	merge.c	FUNCTION_35	WHILE_1	CALL_3
0x40032a9	          0x4889c7	                            mov rdi, rax	      1006	merge.c	FUNCTION_35	WHILE_1	CALL_3
0x40032ac	      0xe800000000	                          call 0x40032b1	      1006	merge.c	FUNCTION_35	WHILE_1	CALL_3
0x40032b1	        0x488945f0	             mov qword [rbp - 0x10], rax	      1006	merge.c	FUNCTION_35	WHILE_1	CALL_3
0x40032b5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1007	merge.c	FUNCTION_35	WHILE_1	IF_1
0x40032b9	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1007	merge.c	FUNCTION_35	WHILE_1	IF_1
0x40032bd	            0x750c	                           jne 0x40032cb	      1007	merge.c	FUNCTION_35	WHILE_1	IF_1
0x40032bf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1008	merge.c	FUNCTION_35	WHILE_1	IF_1
0x40032c3	    0xc70000000000	                      mov dword [rax], 0	      1008	merge.c	FUNCTION_35	WHILE_1	IF_1
0x40032c9	            0xeb1b	                           jmp 0x40032e6	      1008	merge.c	FUNCTION_35	WHILE_1	IF_1
0x40032cb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x40032cf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x40032d3	          0x4889d6	                            mov rsi, rdx	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x40032d6	          0x4889c7	                            mov rdi, rax	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x40032d9	      0xe800000000	                          call 0x40032de	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x40032de	        0x4883c008	                              add rax, 8	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x40032e2	        0x488945e8	             mov qword [rbp - 0x18], rax	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x40032e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1005	merge.c	FUNCTION_35	WHILE_1
0x40032ea	          0x4885c0	                           test rax, rax	      1005	merge.c	FUNCTION_35	WHILE_1
0x40032ed	            0x75b6	                           jne 0x40032a5	      1005	merge.c	FUNCTION_35	WHILE_1
0x40032ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1012	merge.c	FUNCTION_35
0x40032f3	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1013	merge.c	FUNCTION_35
0x40032f7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1013	merge.c	FUNCTION_35
0x4003300	            0x7405	                            je 0x4003307	      1013	merge.c	FUNCTION_35
0x4003302	      0xe800000000	                          call 0x4003307	      1013	merge.c	FUNCTION_35
0x4003307	              0xc9	                                   leave	      1013	merge.c	FUNCTION_35
0x4003308	              0xc3	                                     ret	      1013	merge.c	FUNCTION_35
try_merge_strategy	FOR,2:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,22:ELSE,1:IF,7	191
0x400210e	              0x55	                                push rbp	       649	merge.c	FUNCTION_20
0x400210f	          0x4889e5	                            mov rbp, rsp	       649	merge.c	FUNCTION_20
0x4002112	              0x53	                                push rbx	       649	merge.c	FUNCTION_20
0x4002113	    0x4881ecf80400	                          sub rsp, 0x4f8	       649	merge.c	FUNCTION_20
0x400211a	    0x4889bd18fbff	            mov qword [rbp - 0x4e8], rdi	       649	merge.c	FUNCTION_20
0x4002121	    0x4889b510fbff	            mov qword [rbp - 0x4f0], rsi	       649	merge.c	FUNCTION_20
0x4002128	    0x48899508fbff	            mov qword [rbp - 0x4f8], rdx	       649	merge.c	FUNCTION_20
0x400212f	    0x48898d00fbff	            mov qword [rbp - 0x500], rcx	       649	merge.c	FUNCTION_20
0x4002136	    0x64488b042528	                mov rax, qword fs:[0x28]	       649	merge.c	FUNCTION_20
0x400213f	        0x488945e8	             mov qword [rbp - 0x18], rax	       649	merge.c	FUNCTION_20
0x4002143	            0x31c0	                            xor eax, eax	       649	merge.c	FUNCTION_20
0x4002145	    0x48c78548fbff	              mov qword [rbp - 0x4b8], 0	       651	merge.c	FUNCTION_20
0x4002150	      0xbe01000000	                              mov esi, 1	       653	merge.c	FUNCTION_20	CALL_1
0x4002155	      0xbf00000000	                              mov edi, 0	       653	merge.c	FUNCTION_20	CALL_1
0x400215a	      0xe800000000	                          call 0x400215f	       653	merge.c	FUNCTION_20	CALL_1
0x400215f	    0x41b800000000	                              mov r8d, 0	       654	merge.c	FUNCTION_20
0x4002165	      0xb900000000	                              mov ecx, 0	       654	merge.c	FUNCTION_20
0x400216a	      0xba00000000	                              mov edx, 0	       654	merge.c	FUNCTION_20
0x400216f	      0xbe04000000	                              mov esi, 4	       654	merge.c	FUNCTION_20
0x4002174	      0xbf00000000	                              mov edi, 0	       654	merge.c	FUNCTION_20
0x4002179	      0xe800000000	                          call 0x400217e	       654	merge.c	FUNCTION_20
0x400217e	      0xba03000000	                              mov edx, 3	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x4002183	      0xbe00000000	                              mov esi, 0	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x4002188	      0xbf00000000	                              mov edi, 0	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x400218d	      0xe800000000	                          call 0x4002192	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x4002192	            0x85c0	                           test eax, eax	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x4002194	            0x7421	                            je 0x40021b7	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x4002196	      0xbf00000000	                              mov edi, 0	       657	merge.c	FUNCTION_20	CALL_3
0x400219b	      0xe855e1ffff	                               call sym.	       657	merge.c	FUNCTION_20	CALL_3
0x40021a0	          0x4889c7	                            mov rdi, rax	       657	merge.c	FUNCTION_20	CALL_3
0x40021a3	      0xb800000000	                              mov eax, 0	       657	merge.c	FUNCTION_20	CALL_3
0x40021a8	      0xe800000000	                          call 0x40021ad	       657	merge.c	FUNCTION_20	CALL_3
0x40021ad	      0xe88edeffff	                    call sym.const_error	       657	merge.c	FUNCTION_20	CALL_3
0x40021b2	      0xe9bf020000	                           jmp 0x4002476	       657	merge.c	FUNCTION_20	CALL_3
0x40021b7	    0x488b8518fbff	            mov rax, qword [rbp - 0x4e8]	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40021be	      0xbe00000000	                              mov esi, 0	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40021c3	          0x4889c7	                            mov rdi, rax	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40021c6	      0xe800000000	                          call 0x40021cb	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40021cb	            0x85c0	                           test eax, eax	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40021cd	            0x741c	                            je 0x40021eb	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40021cf	    0x488b8518fbff	            mov rax, qword [rbp - 0x4e8]	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40021d6	      0xbe00000000	                              mov esi, 0	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40021db	          0x4889c7	                            mov rdi, rax	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40021de	      0xe800000000	                          call 0x40021e3	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40021e3	            0x85c0	                           test eax, eax	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40021e5	     0xf8553020000	                           jne 0x400243e	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40021eb	    0x48c78538fbff	              mov qword [rbp - 0x4c8], 0	       662	merge.c	FUNCTION_20	IF_2
0x40021f6	    0x488b8508fbff	            mov rax, qword [rbp - 0x4f8]	       666	merge.c	FUNCTION_20	IF_2	IF_3
0x40021fd	        0x488b4008	                mov rax, qword [rax + 8]	       666	merge.c	FUNCTION_20	IF_2	IF_3
0x4002201	          0x4885c0	                           test rax, rax	       666	merge.c	FUNCTION_20	IF_2	IF_3
0x4002204	            0x7426	                            je 0x400222c	       666	merge.c	FUNCTION_20	IF_2	IF_3
0x4002206	      0xbf00000000	                              mov edi, 0	       667	merge.c	FUNCTION_20	IF_2	IF_3	CALL_6
0x400220b	      0xe8e5e0ffff	                               call sym.	       667	merge.c	FUNCTION_20	IF_2	IF_3	CALL_6
0x4002210	          0x4889c7	                            mov rdi, rax	       667	merge.c	FUNCTION_20	IF_2	IF_3	CALL_6
0x4002213	      0xb800000000	                              mov eax, 0	       667	merge.c	FUNCTION_20	IF_2	IF_3	CALL_6
0x4002218	      0xe800000000	                          call 0x400221d	       667	merge.c	FUNCTION_20	IF_2	IF_3	CALL_6
0x400221d	      0xe81edeffff	                    call sym.const_error	       667	merge.c	FUNCTION_20	IF_2	IF_3	CALL_6
0x4002222	      0xb802000000	                              mov eax, 2	       668	merge.c	FUNCTION_20	IF_2	IF_3
0x4002227	      0xe94a020000	                           jmp 0x4002476	       668	merge.c	FUNCTION_20	IF_2	IF_3
0x400222c	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	       671	merge.c	FUNCTION_20	IF_2	CALL_7
0x4002233	          0x4889c7	                            mov rdi, rax	       671	merge.c	FUNCTION_20	IF_2	CALL_7
0x4002236	      0xe800000000	                          call 0x400223b	       671	merge.c	FUNCTION_20	IF_2	CALL_7
0x400223b	    0x488b8518fbff	            mov rax, qword [rbp - 0x4e8]	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x4002242	      0xbe00000000	                              mov esi, 0	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x4002247	          0x4889c7	                            mov rdi, rax	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x400224a	      0xe800000000	                          call 0x400224f	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x400224f	            0x85c0	                           test eax, eax	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x4002251	            0x750b	                           jne 0x400225e	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x4002253	    0x48c78570fbff	              mov qword [rbp - 0x490], 0	       673	merge.c	FUNCTION_20	IF_2	IF_4
0x400225e	    0x8b0500000000	            mov eax, dword [0x04002264] 	       675	merge.c	FUNCTION_20	IF_2
0x4002264	          0x83e001	                              and eax, 1	       675	merge.c	FUNCTION_20	IF_2
0x4002267	          0x83e001	                              and eax, 1	       675	merge.c	FUNCTION_20	IF_2
0x400226a	            0x89c2	                            mov edx, eax	       675	merge.c	FUNCTION_20	IF_2
0x400226c	     0xfb6857cfbff	           movzx eax, byte [rbp - 0x484]	       675	merge.c	FUNCTION_20	IF_2
0x4002273	          0x83e0fe	                     and eax, 0xfffffffe	       675	merge.c	FUNCTION_20	IF_2
0x4002276	             0x9d0	                             or eax, edx	       675	merge.c	FUNCTION_20	IF_2
0x4002278	    0x88857cfbffff	              mov byte [rbp - 0x484], al	       675	merge.c	FUNCTION_20	IF_2
0x400227e	    0x8b0500000000	            mov eax, dword [0x04002284] 	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x4002284	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x4002287	            0x750c	                           jne 0x4002295	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x4002289	      0xbf02000000	                              mov edi, 2	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x400228e	      0xe800000000	                          call 0x4002293	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x4002293	            0xeb06	                           jmp 0x400229b	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x4002295	    0x8b0500000000	            mov eax, dword [0x0400229b] 	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x400229b	    0x8985a0fbffff	            mov dword [rbp - 0x460], eax	       676	merge.c	FUNCTION_20	IF_2
0x40022a1	    0xc78528fbffff	              mov dword [rbp - 0x4d8], 0	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x40022ab	            0xeb6b	                           jmp 0x4002318	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x40022ad	    0x488b05000000	            mov rax, qword [0x040022b4] 	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x40022b4	    0x8b9528fbffff	            mov edx, dword [rbp - 0x4d8]	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x40022ba	          0x4863d2	                         movsxd rdx, edx	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x40022bd	        0x48c1e203	                              shl rdx, 3	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x40022c1	          0x4801d0	                            add rax, rdx	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x40022c4	          0x488b10	                    mov rdx, qword [rax]	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x40022c7	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x40022ce	          0x4889d6	                            mov rsi, rdx	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x40022d1	          0x4889c7	                            mov rdi, rax	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x40022d4	      0xe800000000	                          call 0x40022d9	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x40022d9	            0x85c0	                           test eax, eax	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x40022db	            0x7434	                            je 0x4002311	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x40022dd	    0x488b05000000	            mov rax, qword [0x040022e4] 	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x40022e4	    0x8b9528fbffff	            mov edx, dword [rbp - 0x4d8]	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x40022ea	          0x4863d2	                         movsxd rdx, edx	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x40022ed	        0x48c1e203	                              shl rdx, 3	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x40022f1	          0x4801d0	                            add rax, rdx	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x40022f4	          0x488b18	                    mov rbx, qword [rax]	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x40022f7	      0xbf00000000	                              mov edi, 0	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x40022fc	      0xe8f4dfffff	                               call sym.	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4002301	          0x4889de	                            mov rsi, rbx	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4002304	          0x4889c7	                            mov rdi, rax	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4002307	      0xb800000000	                              mov eax, 0	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x400230c	      0xe800000000	                          call 0x4002311	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4002311	    0x838528fbffff	              add dword [rbp - 0x4d8], 1	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4002318	    0x8b8528fbffff	            mov eax, dword [rbp - 0x4d8]	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x400231e	          0x4863d0	                         movsxd rdx, eax	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4002321	    0x488b05000000	            mov rax, qword [0x04002328] 	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4002328	          0x4839c2	                            cmp rdx, rax	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x400232b	            0x7280	                            jb 0x40022ad	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x400232d	    0x488b8548fbff	            mov rax, qword [rbp - 0x4b8]	       683	merge.c	FUNCTION_20	IF_2
0x4002334	    0x48898558fbff	            mov qword [rbp - 0x4a8], rax	       683	merge.c	FUNCTION_20	IF_2
0x400233b	    0x488b8508fbff	            mov rax, qword [rbp - 0x4f8]	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x4002342	          0x488b00	                    mov rax, qword [rax]	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x4002345	        0x488b4018	            mov rax, qword [rax + 0x18] 	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x4002349	        0x4883c008	                              add rax, 8	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x400234d	    0x48898560fbff	            mov qword [rbp - 0x4a0], rax	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x4002354	    0x488b8510fbff	            mov rax, qword [rbp - 0x4f0]	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x400235b	    0x48898540fbff	            mov qword [rbp - 0x4c0], rax	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x4002362	            0xeb2e	                           jmp 0x4002392	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x4002364	    0x488b8540fbff	            mov rax, qword [rbp - 0x4c0]	       687	merge.c	FUNCTION_20	IF_2	CALL_14
0x400236b	          0x488b00	                    mov rax, qword [rax]	       687	merge.c	FUNCTION_20	IF_2	CALL_14
0x400236e	    0x488d9538fbff	                  lea rdx, [rbp - 0x4c8]	       687	merge.c	FUNCTION_20	IF_2	CALL_14
0x4002375	          0x4889d6	                            mov rsi, rdx	       687	merge.c	FUNCTION_20	IF_2	CALL_14
0x4002378	          0x4889c7	                            mov rdi, rax	       687	merge.c	FUNCTION_20	IF_2	CALL_14
0x400237b	      0xe800000000	                          call 0x4002380	       687	merge.c	FUNCTION_20	IF_2	CALL_14
0x4002380	    0x488b8540fbff	            mov rax, qword [rbp - 0x4c0]	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x4002387	        0x488b4008	                mov rax, qword [rax + 8]	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x400238b	    0x48898540fbff	            mov qword [rbp - 0x4c0], rax	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x4002392	    0x4883bd40fbff	              cmp qword [rbp - 0x4c0], 0	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x400239a	            0x75c8	                           jne 0x4002364	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x400239c	      0xbe01000000	                              mov esi, 1	       689	merge.c	FUNCTION_20	IF_2	CALL_15
0x40023a1	      0xbf00000000	                              mov edi, 0	       689	merge.c	FUNCTION_20	IF_2	CALL_15
0x40023a6	      0xe800000000	                          call 0x40023ab	       689	merge.c	FUNCTION_20	IF_2	CALL_15
0x40023ab	    0x488b8d38fbff	            mov rcx, qword [rbp - 0x4c8]	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40023b2	    0x488b8508fbff	            mov rax, qword [rbp - 0x4f8]	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40023b9	          0x488b10	                    mov rdx, qword [rax]	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40023bc	    0x488dbd30fbff	                  lea rdi, [rbp - 0x4d0]	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40023c3	    0x488bb500fbff	            mov rsi, qword [rbp - 0x500]	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40023ca	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40023d1	          0x4989f8	                             mov r8, rdi	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40023d4	          0x4889c7	                            mov rdi, rax	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40023d7	      0xe800000000	                          call 0x40023dc	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40023dc	    0x89852cfbffff	            mov dword [rbp - 0x4d4], eax	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40023e2	    0x83bd2cfbffff	              cmp dword [rbp - 0x4d4], 0	       692	merge.c	FUNCTION_20	IF_2	IF_6
0x40023e9	            0x790a	                           jns 0x40023f5	       692	merge.c	FUNCTION_20	IF_2	IF_6
0x40023eb	      0xbf80000000	                           mov edi, 0x80	       693	merge.c	FUNCTION_20	IF_2	CALL_17
0x40023f0	      0xe800000000	                          call 0x40023f5	       693	merge.c	FUNCTION_20	IF_2	CALL_17
0x40023f5	      0xba03000000	                              mov edx, 3	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x40023fa	      0xbe00000000	                              mov esi, 0	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x40023ff	      0xbf00000000	                              mov edi, 0	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x4002404	      0xe800000000	                          call 0x4002409	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x4002409	            0x85c0	                           test eax, eax	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x400240b	            0x7422	                            je 0x400242f	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x400240d	      0xe800000000	                          call 0x4002412	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4002412	          0x4889c3	                            mov rbx, rax	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4002415	      0xbf00000000	                              mov edi, 0	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x400241a	      0xe8d6deffff	                               call sym.	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x400241f	          0x4889de	                            mov rsi, rbx	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4002422	          0x4889c7	                            mov rdi, rax	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4002425	      0xb800000000	                              mov eax, 0	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x400242a	      0xe800000000	                          call 0x400242f	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x400242f	    0x83bd2cfbffff	              cmp dword [rbp - 0x4d4], 0	       697	merge.c	FUNCTION_20	IF_2
0x4002436	           0xf94c0	                                 sete al	       697	merge.c	FUNCTION_20	IF_2
0x4002439	           0xfb6c0	                           movzx eax, al	       697	merge.c	FUNCTION_20	IF_2
0x400243c	            0xeb38	                           jmp 0x4002476	       697	merge.c	FUNCTION_20	IF_2
0x400243e	    0x488b15000000	            mov rdx, qword [0x04002445] 	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4002445	    0x488b35000000	            mov rsi, qword [0x0400244c] 	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x400244c	    0x4c8b8508fbff	             mov r8, qword [rbp - 0x4f8]	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4002453	    0x488bbd48fbff	            mov rdi, qword [rbp - 0x4b8]	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x400245a	    0x488b8d10fbff	            mov rcx, qword [rbp - 0x4f0]	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4002461	    0x488b8518fbff	            mov rax, qword [rbp - 0x4e8]	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4002468	          0x4d89c1	                              mov r9, r8	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x400246b	          0x4989f8	                             mov r8, rdi	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x400246e	          0x4889c7	                            mov rdi, rax	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4002471	      0xe800000000	                          call 0x4002476	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4002476	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       702	merge.c	FUNCTION_20
0x400247a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       702	merge.c	FUNCTION_20
0x4002483	            0x7405	                            je 0x400248a	       702	merge.c	FUNCTION_20
0x4002485	      0xe800000000	                          call 0x400248a	       702	merge.c	FUNCTION_20
0x400248a	    0x4881c4f80400	                          add rsp, 0x4f8	       702	merge.c	FUNCTION_20
0x4002491	              0x5b	                                 pop rbx	       702	merge.c	FUNCTION_20
0x4002492	              0x5d	                                 pop rbp	       702	merge.c	FUNCTION_20
0x4002493	              0xc3	                                     ret	       702	merge.c	FUNCTION_20
collect_parents	FOR,2:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,13:ELSE,1:IF,6	138
0x40036f4	              0x55	                                push rbp	      1087	merge.c	FUNCTION_38
0x40036f5	          0x4889e5	                            mov rbp, rsp	      1087	merge.c	FUNCTION_38
0x40036f8	        0x4883c480	             add rsp, 0xffffffffffffff80	      1087	merge.c	FUNCTION_38
0x40036fc	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1087	merge.c	FUNCTION_38
0x4003700	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1087	merge.c	FUNCTION_38
0x4003704	          0x89559c	             mov dword [rbp - 0x64], edx	      1087	merge.c	FUNCTION_38
0x4003707	        0x48894d90	             mov qword [rbp - 0x70], rcx	      1087	merge.c	FUNCTION_38
0x400370b	        0x4c894588	              mov qword [rbp - 0x78], r8	      1087	merge.c	FUNCTION_38
0x400370f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1087	merge.c	FUNCTION_38
0x4003718	        0x488945f8	                mov qword [rbp - 8], rax	      1087	merge.c	FUNCTION_38
0x400371c	            0x31c0	                            xor eax, eax	      1087	merge.c	FUNCTION_38
0x400371e	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1089	merge.c	FUNCTION_38
0x4003726	        0x488d45b8	                   lea rax, [rbp - 0x48]	      1090	merge.c	FUNCTION_38
0x400372a	        0x488945c0	             mov qword [rbp - 0x40], rax	      1090	merge.c	FUNCTION_38
0x400372e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1091	merge.c	FUNCTION_38
0x4003736	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1091	merge.c	FUNCTION_38
0x400373e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1091	merge.c	FUNCTION_38
0x4003746	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1091	merge.c	FUNCTION_38
0x400374e	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      1093	merge.c	FUNCTION_38	IF_1
0x4003753	            0x741c	                            je 0x4003771	      1093	merge.c	FUNCTION_38	IF_1
0x4003755	    0x8b0500000000	            mov eax, dword [0x0400375b] 	      1093	merge.c	FUNCTION_38	IF_1
0x400375b	            0x85c0	                           test eax, eax	      1093	merge.c	FUNCTION_38	IF_1
0x400375d	            0x740a	                            je 0x4003769	      1093	merge.c	FUNCTION_38	IF_1
0x400375f	    0x8b0500000000	            mov eax, dword [0x04003765] 	      1093	merge.c	FUNCTION_38	IF_1
0x4003765	            0x85c0	                           test eax, eax	      1093	merge.c	FUNCTION_38	IF_1
0x4003767	            0x7408	                            je 0x4003771	      1093	merge.c	FUNCTION_38	IF_1
0x4003769	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1094	merge.c	FUNCTION_38	IF_1
0x400376d	        0x488945c8	             mov qword [rbp - 0x38], rax	      1094	merge.c	FUNCTION_38	IF_1
0x4003771	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1096	merge.c	FUNCTION_38	IF_2
0x4003776	            0x741b	                            je 0x4003793	      1096	merge.c	FUNCTION_38	IF_2
0x4003778	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1097	merge.c	FUNCTION_38	CALL_1
0x400377c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1097	merge.c	FUNCTION_38	CALL_1
0x4003780	          0x4889d6	                            mov rsi, rdx	      1097	merge.c	FUNCTION_38	CALL_1
0x4003783	          0x4889c7	                            mov rdi, rax	      1097	merge.c	FUNCTION_38	CALL_1
0x4003786	      0xe800000000	                          call 0x400378b	      1097	merge.c	FUNCTION_38	CALL_1
0x400378b	        0x4883c008	                              add rax, 8	      1097	merge.c	FUNCTION_38	CALL_1
0x400378f	        0x488945c0	             mov qword [rbp - 0x40], rax	      1097	merge.c	FUNCTION_38	CALL_1
0x4003793	        0x837d9c01	               cmp dword [rbp - 0x64], 1	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4003797	            0x754b	                           jne 0x40037e4	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4003799	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x400379d	          0x488b00	                    mov rax, qword [rax]	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x40037a0	      0xbe00000000	                              mov esi, 0	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x40037a5	          0x4889c7	                            mov rdi, rax	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x40037a8	      0xe800000000	                          call 0x40037ad	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x40037ad	            0x85c0	                           test eax, eax	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x40037af	            0x7533	                           jne 0x40037e4	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x40037b1	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1100	merge.c	FUNCTION_38	IF_3	CALL_3
0x40037b5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1100	merge.c	FUNCTION_38	IF_3	CALL_3
0x40037b9	          0x4889d6	                            mov rsi, rdx	      1100	merge.c	FUNCTION_38	IF_3	CALL_3
0x40037bc	          0x4889c7	                            mov rdi, rax	      1100	merge.c	FUNCTION_38	IF_3	CALL_3
0x40037bf	      0xe812fcffff	              call sym.handle_fetch_head	      1100	merge.c	FUNCTION_38	IF_3	CALL_3
0x40037c4	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x40037c8	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x40037cc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x40037d0	          0x4889ce	                            mov rsi, rcx	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x40037d3	          0x4889c7	                            mov rdi, rax	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x40037d6	      0xe86ffaffff	                 call sym.reduce_parents	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x40037db	        0x488945b8	             mov qword [rbp - 0x48], rax	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x40037df	      0xe9ef000000	                           jmp 0x40038d3	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x40037e4	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x40037eb	            0xeb7d	                           jmp 0x400386a	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x40037ed	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x40037f0	            0x4898	                                    cdqe	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x40037f2	    0x488d14c50000	                        lea rdx, [rax*8]	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x40037fa	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x40037fe	          0x4801d0	                            add rax, rdx	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4003801	          0x488b00	                    mov rax, qword [rax]	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4003804	          0x4889c7	                            mov rdi, rax	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4003807	      0xe800000000	                          call 0x400380c	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x400380c	        0x488945d8	             mov qword [rbp - 0x28], rax	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4003810	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1105	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4
0x4003815	            0x7534	                           jne 0x400384b	      1105	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4
0x4003817	      0xbf00000000	                              mov edi, 0	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x400381c	      0xe8d4caffff	                               call sym.	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4003821	          0x4889c1	                            mov rcx, rax	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4003824	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4003827	            0x4898	                                    cdqe	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4003829	    0x488d14c50000	                        lea rdx, [rax*8]	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4003831	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4003835	          0x4801d0	                            add rax, rdx	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4003838	          0x488b00	                    mov rax, qword [rax]	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x400383b	          0x4889ca	                            mov rdx, rcx	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x400383e	      0xbe00000000	                              mov esi, 0	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4003843	          0x4889c7	                            mov rdi, rax	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4003846	      0xe800000000	                          call 0x400384b	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x400384b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x400384f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4003853	          0x4889d6	                            mov rsi, rdx	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4003856	          0x4889c7	                            mov rdi, rax	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4003859	      0xe800000000	                          call 0x400385e	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x400385e	        0x4883c008	                              add rax, 8	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4003862	        0x488945c0	             mov qword [rbp - 0x40], rax	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4003866	        0x8345b401	               add dword [rbp - 0x4c], 1	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x400386a	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x400386d	          0x3b459c	             cmp eax, dword [rbp - 0x64]	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4003870	     0xf8c77ffffff	                            jl 0x40037ed	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4003876	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x400387a	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x400387e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4003882	          0x4889ce	                            mov rsi, rcx	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4003885	          0x4889c7	                            mov rdi, rax	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4003888	      0xe8bdf9ffff	                 call sym.reduce_parents	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x400388d	        0x488945b8	             mov qword [rbp - 0x48], rax	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4003891	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1111	merge.c	FUNCTION_38	ELSE_1	IF_5
0x4003896	            0x743b	                            je 0x40038d3	      1111	merge.c	FUNCTION_38	ELSE_1	IF_5
0x4003898	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x400389c	        0x488945d0	             mov qword [rbp - 0x30], rax	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x40038a0	            0xeb2a	                           jmp 0x40038cc	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x40038a2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x40038a6	          0x488b00	                    mov rax, qword [rax]	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x40038a9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x40038ad	        0x488d5008	                      lea rdx, [rax + 8]	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x40038b1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x40038b5	          0x4889c6	                            mov rsi, rax	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x40038b8	          0x4889d7	                            mov rdi, rdx	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x40038bb	      0xe814dcffff	                     call sym.merge_name	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x40038c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x40038c4	        0x488b4008	                mov rax, qword [rax + 8]	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x40038c8	        0x488945d0	             mov qword [rbp - 0x30], rax	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x40038cc	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x40038d1	            0x75cf	                           jne 0x40038a2	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x40038d3	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1118	merge.c	FUNCTION_38	IF_6
0x40038d8	            0x741f	                            je 0x40038f9	      1118	merge.c	FUNCTION_38	IF_6
0x40038da	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1119	merge.c	FUNCTION_38	IF_6	CALL_12
0x40038de	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1119	merge.c	FUNCTION_38	IF_6	CALL_12
0x40038e2	          0x4889d6	                            mov rsi, rdx	      1119	merge.c	FUNCTION_38	IF_6	CALL_12
0x40038e5	          0x4889c7	                            mov rdi, rax	      1119	merge.c	FUNCTION_38	IF_6	CALL_12
0x40038e8	      0xe81cfaffff	          call sym.prepare_merge_message	      1119	merge.c	FUNCTION_38	IF_6	CALL_12
0x40038ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1120	merge.c	FUNCTION_38	IF_6	CALL_13
0x40038f1	          0x4889c7	                            mov rdi, rax	      1120	merge.c	FUNCTION_38	IF_6	CALL_13
0x40038f4	      0xe800000000	                          call 0x40038f9	      1120	merge.c	FUNCTION_38	IF_6	CALL_13
0x40038f9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1123	merge.c	FUNCTION_38
0x40038fd	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1124	merge.c	FUNCTION_38
0x4003901	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1124	merge.c	FUNCTION_38
0x400390a	            0x7405	                            je 0x4003911	      1124	merge.c	FUNCTION_38
0x400390c	      0xe800000000	                          call 0x4003911	      1124	merge.c	FUNCTION_38
0x4003911	              0xc9	                                   leave	      1124	merge.c	FUNCTION_38
0x4003912	              0xc3	                                     ret	      1124	merge.c	FUNCTION_38
abort_commit	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,4:ELSE,0:IF,1	26
0x400269b	              0x55	                                push rbp	       752	merge.c	FUNCTION_25
0x400269c	          0x4889e5	                            mov rbp, rsp	       752	merge.c	FUNCTION_25
0x400269f	        0x4883ec10	                           sub rsp, 0x10	       752	merge.c	FUNCTION_25
0x40026a3	        0x48897df8	                mov qword [rbp - 8], rdi	       752	merge.c	FUNCTION_25
0x40026a7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       752	merge.c	FUNCTION_25
0x40026ab	      0x48837df000	               cmp qword [rbp - 0x10], 0	       753	merge.c	FUNCTION_25	IF_1
0x40026b0	            0x741b	                            je 0x40026cd	       753	merge.c	FUNCTION_25	IF_1
0x40026b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       754	merge.c	FUNCTION_25	IF_1
0x40026b6	          0x4889c6	                            mov rsi, rax	       754	merge.c	FUNCTION_25	IF_1
0x40026b9	      0xbf00000000	                              mov edi, 0	       754	merge.c	FUNCTION_25	IF_1
0x40026be	      0xb800000000	                              mov eax, 0	       754	merge.c	FUNCTION_25	IF_1
0x40026c3	      0xe800000000	                          call 0x40026c8	       754	merge.c	FUNCTION_25	IF_1
0x40026c8	      0xe873d9ffff	                    call sym.const_error	       754	merge.c	FUNCTION_25	IF_1
0x40026cd	      0xbf00000000	                              mov edi, 0	       755	merge.c	FUNCTION_25	CALL_1
0x40026d2	      0xe81edcffff	                               call sym.	       755	merge.c	FUNCTION_25	CALL_1
0x40026d7	          0x4889c2	                            mov rdx, rax	       755	merge.c	FUNCTION_25	CALL_1
0x40026da	    0x488b05000000	            mov rax, qword [0x040026e1] 	       755	merge.c	FUNCTION_25	CALL_1
0x40026e1	          0x4889d6	                            mov rsi, rdx	       755	merge.c	FUNCTION_25	CALL_1
0x40026e4	          0x4889c7	                            mov rdi, rax	       755	merge.c	FUNCTION_25	CALL_1
0x40026e7	      0xb800000000	                              mov eax, 0	       755	merge.c	FUNCTION_25	CALL_1
0x40026ec	      0xe800000000	                          call 0x40026f1	       755	merge.c	FUNCTION_25	CALL_1
0x40026f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       757	merge.c	FUNCTION_25	CALL_3
0x40026f5	          0x4889c7	                            mov rdi, rax	       757	merge.c	FUNCTION_25	CALL_3
0x40026f8	      0xe8b8090000	              call sym.write_merge_state	       757	merge.c	FUNCTION_25	CALL_3
0x40026fd	      0xbf01000000	                              mov edi, 1	       758	merge.c	FUNCTION_25	CALL_4
0x4002702	      0xe800000000	              call sym.prepare_to_commit	       758	merge.c	FUNCTION_25	CALL_4
strbuf_setlen	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,2:ELSE,1:IF,2	43
0x40001b8	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_70
0x40001b9	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_70
0x40001bc	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_70
0x40001c0	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_70
0x40001c4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_70
0x40001c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_70	IF_1
0x40001cc	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_70	IF_1
0x40001cf	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_70	IF_1
0x40001d2	            0x740d	                            je 0x40001e1	       162	strbuf.h	FUNCTION_70	IF_1
0x40001d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_70	IF_1
0x40001d8	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_70	IF_1
0x40001db	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_70	IF_1
0x40001df	            0xeb05	                           jmp 0x40001e6	       162	strbuf.h	FUNCTION_70	IF_1
0x40001e1	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_70	IF_1
0x40001e6	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_70	IF_1
0x40001ea	            0x730f	                           jae 0x40001fb	       162	strbuf.h	FUNCTION_70	IF_1
0x40001ec	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_70	CALL_1
0x40001f1	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_70	CALL_1
0x40001f6	      0xe800000000	                          call 0x40001fb	       163	strbuf.h	FUNCTION_70	CALL_1
0x40001fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_70
0x40001ff	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_70
0x4000203	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_70
0x4000207	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_70	IF_2
0x400020b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_70	IF_2
0x400020f	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_70	IF_2
0x4000215	            0x7414	                            je 0x400022b	       165	strbuf.h	FUNCTION_70	IF_2
0x4000217	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_70	IF_2
0x400021b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_70	IF_2
0x400021f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_70	IF_2
0x4000223	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_70	IF_2
0x4000226	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_70	IF_2
0x4000229	            0xeb24	                           jmp 0x400024f	       169	strbuf.h	FUNCTION_70
0x400022b	     0xfb605000000	           movzx eax, byte [0x04000232] 	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000232	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000234	            0x7419	                            je 0x400024f	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000236	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_70	CALL_2
0x400023b	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000240	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000245	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_70	CALL_2
0x400024a	      0xe800000000	                          call 0x400024f	       168	strbuf.h	FUNCTION_70	CALL_2
0x400024f	              0x90	                                     nop	       169	strbuf.h	FUNCTION_70
0x4000250	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_70
0x4000251	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_70
option_parse_message	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,3:ELSE,2:IF,2	45
0x40003db	              0x55	                                push rbp	        99	merge.c	FUNCTION_1
0x40003dc	          0x4889e5	                            mov rbp, rsp	        99	merge.c	FUNCTION_1
0x40003df	        0x4883ec30	                           sub rsp, 0x30	        99	merge.c	FUNCTION_1
0x40003e3	        0x48897de8	             mov qword [rbp - 0x18], rdi	        99	merge.c	FUNCTION_1
0x40003e7	        0x488975e0	             mov qword [rbp - 0x20], rsi	        99	merge.c	FUNCTION_1
0x40003eb	          0x8955dc	             mov dword [rbp - 0x24], edx	        99	merge.c	FUNCTION_1
0x40003ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       100	merge.c	FUNCTION_1
0x40003f2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       100	merge.c	FUNCTION_1
0x40003f6	        0x488945f8	                mov qword [rbp - 8], rax	       100	merge.c	FUNCTION_1
0x40003fa	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       102	merge.c	FUNCTION_1	IF_1
0x40003fe	            0x7413	                            je 0x4000413	       102	merge.c	FUNCTION_1	IF_1
0x4000400	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	merge.c	FUNCTION_1	CALL_1
0x4000404	      0xbe00000000	                              mov esi, 0	       103	merge.c	FUNCTION_1	CALL_1
0x4000409	          0x4889c7	                            mov rdi, rax	       103	merge.c	FUNCTION_1	CALL_1
0x400040c	      0xe8a7fdffff	                  call sym.strbuf_setlen	       103	merge.c	FUNCTION_1	CALL_1
0x4000411	            0xeb6a	                           jmp 0x400047d	       103	merge.c	FUNCTION_1	CALL_1
0x4000413	      0x48837de000	               cmp qword [rbp - 0x20], 0	       104	merge.c	FUNCTION_1	ELSE_1	IF_2
0x4000418	            0x7445	                            je 0x400045f	       104	merge.c	FUNCTION_1	ELSE_1	IF_2
0x400041a	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x400041e	        0x488b4008	                mov rax, qword [rax + 8]	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4000422	          0x4885c0	                           test rax, rax	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4000425	            0x7407	                            je 0x400042e	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4000427	      0xbe00000000	                              mov esi, 0	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x400042c	            0xeb05	                           jmp 0x4000433	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x400042e	      0xbe00000000	                              mov esi, 0	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4000433	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4000437	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x400043b	          0x4889d1	                            mov rcx, rdx	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x400043e	          0x4889f2	                            mov rdx, rsi	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4000441	      0xbe00000000	                              mov esi, 0	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4000446	          0x4889c7	                            mov rdi, rax	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4000449	      0xb800000000	                              mov eax, 0	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x400044e	      0xe800000000	                          call 0x4000453	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4000453	    0xc70500000000	               mov dword [0x0400045d], 1	       106	merge.c	FUNCTION_1	ELSE_1	IF_2
0x400045d	            0xeb1e	                           jmp 0x400047d	       106	merge.c	FUNCTION_1	ELSE_1	IF_2
0x400045f	      0xbf00000000	                              mov edi, 0	       108	merge.c	FUNCTION_1	CALL_3
0x4000464	      0xe88cfeffff	                               call sym.	       108	merge.c	FUNCTION_1	CALL_3
0x4000469	          0x4889c7	                            mov rdi, rax	       108	merge.c	FUNCTION_1	CALL_3
0x400046c	      0xb800000000	                              mov eax, 0	       108	merge.c	FUNCTION_1	CALL_3
0x4000471	      0xe800000000	                          call 0x4000476	       108	merge.c	FUNCTION_1	CALL_3
0x4000476	      0xe8c5fbffff	                    call sym.const_error	       108	merge.c	FUNCTION_1	CALL_3
0x400047b	            0xeb05	                           jmp 0x4000482	       108	merge.c	FUNCTION_1	CALL_3
0x400047d	      0xb800000000	                              mov eax, 0	       109	merge.c	FUNCTION_1
0x4000482	              0xc9	                                   leave	       110	merge.c	FUNCTION_1
0x4000483	              0xc3	                                     ret	       110	merge.c	FUNCTION_1
finish	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,18:ELSE,3:IF,5	135
0x4001231	              0x55	                                push rbp	       390	merge.c	FUNCTION_14
0x4001232	          0x4889e5	                            mov rbp, rsp	       390	merge.c	FUNCTION_14
0x4001235	    0x4881ecf00100	                          sub rsp, 0x1f0	       390	merge.c	FUNCTION_14
0x400123c	    0x4889bd28feff	            mov qword [rbp - 0x1d8], rdi	       390	merge.c	FUNCTION_14
0x4001243	    0x4889b520feff	            mov qword [rbp - 0x1e0], rsi	       390	merge.c	FUNCTION_14
0x400124a	    0x48899518feff	            mov qword [rbp - 0x1e8], rdx	       390	merge.c	FUNCTION_14
0x4001251	    0x48898d10feff	            mov qword [rbp - 0x1f0], rcx	       390	merge.c	FUNCTION_14
0x4001258	    0x64488b042528	                mov rax, qword fs:[0x28]	       390	merge.c	FUNCTION_14
0x4001261	        0x488945f8	                mov qword [rbp - 8], rax	       390	merge.c	FUNCTION_14
0x4001265	            0x31c0	                            xor eax, eax	       390	merge.c	FUNCTION_14
0x4001267	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	       391	merge.c	FUNCTION_14
0x4001272	    0x48c78548feff	              mov qword [rbp - 0x1b8], 0	       391	merge.c	FUNCTION_14
0x400127d	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	       391	merge.c	FUNCTION_14
0x4001288	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	       392	merge.c	FUNCTION_14
0x400128f	        0x4883c004	                              add rax, 4	       392	merge.c	FUNCTION_14
0x4001293	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	       392	merge.c	FUNCTION_14
0x400129a	    0x4883bd10feff	              cmp qword [rbp - 0x1f0], 0	       394	merge.c	FUNCTION_14	IF_1
0x40012a2	            0x7521	                           jne 0x40012c5	       394	merge.c	FUNCTION_14	IF_1
0x40012a4	      0xbf00000000	                              mov edi, 0	       395	merge.c	FUNCTION_14	CALL_2
0x40012a9	      0xe800000000	                          call 0x40012ae	       395	merge.c	FUNCTION_14	CALL_2
0x40012ae	          0x4889c2	                            mov rdx, rax	       395	merge.c	FUNCTION_14	CALL_2
0x40012b1	    0x488d8540feff	                  lea rax, [rbp - 0x1c0]	       395	merge.c	FUNCTION_14	CALL_2
0x40012b8	          0x4889d6	                            mov rsi, rdx	       395	merge.c	FUNCTION_14	CALL_2
0x40012bb	          0x4889c7	                            mov rdi, rax	       395	merge.c	FUNCTION_14	CALL_2
0x40012be	      0xe8fdefffff	                  call sym.strbuf_addstr	       395	merge.c	FUNCTION_14	CALL_2
0x40012c3	            0xeb4c	                           jmp 0x4001311	       395	merge.c	FUNCTION_14	CALL_2
0x40012c5	    0x8b0500000000	            mov eax, dword [0x040012cb] 	       397	merge.c	FUNCTION_14	ELSE_1	IF_2
0x40012cb	            0x85c0	                           test eax, eax	       397	merge.c	FUNCTION_14	ELSE_1	IF_2
0x40012cd	            0x780f	                            js 0x40012de	       397	merge.c	FUNCTION_14	ELSE_1	IF_2
0x40012cf	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	       398	merge.c	FUNCTION_14	ELSE_1	CALL_3
0x40012d6	          0x4889c7	                            mov rdi, rax	       398	merge.c	FUNCTION_14	ELSE_1	CALL_3
0x40012d9	      0xe800000000	                          call 0x40012de	       398	merge.c	FUNCTION_14	ELSE_1	CALL_3
0x40012de	      0xbf00000000	                              mov edi, 0	       399	merge.c	FUNCTION_14	ELSE_1	CALL_4
0x40012e3	      0xe800000000	                          call 0x40012e8	       399	merge.c	FUNCTION_14	ELSE_1	CALL_4
0x40012e8	          0x4889c6	                            mov rsi, rax	       399	merge.c	FUNCTION_14	ELSE_1	CALL_4
0x40012eb	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	       399	merge.c	FUNCTION_14	ELSE_1	CALL_4
0x40012f2	    0x488d8540feff	                  lea rax, [rbp - 0x1c0]	       399	merge.c	FUNCTION_14	ELSE_1	CALL_4
0x40012f9	          0x4889d1	                            mov rcx, rdx	       399	merge.c	FUNCTION_14	ELSE_1	CALL_4
0x40012fc	          0x4889f2	                            mov rdx, rsi	       399	merge.c	FUNCTION_14	ELSE_1	CALL_4
0x40012ff	      0xbe00000000	                              mov esi, 0	       399	merge.c	FUNCTION_14	ELSE_1	CALL_4
0x4001304	          0x4889c7	                            mov rdi, rax	       399	merge.c	FUNCTION_14	ELSE_1	CALL_4
0x4001307	      0xb800000000	                              mov eax, 0	       399	merge.c	FUNCTION_14	ELSE_1	CALL_4
0x400130c	      0xe800000000	                          call 0x4001311	       399	merge.c	FUNCTION_14	ELSE_1	CALL_4
0x4001311	    0x8b0500000000	            mov eax, dword [0x04001317] 	       402	merge.c	FUNCTION_14	IF_3
0x4001317	            0x85c0	                           test eax, eax	       402	merge.c	FUNCTION_14	IF_3
0x4001319	            0x741e	                            je 0x4001339	       402	merge.c	FUNCTION_14	IF_3
0x400131b	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	       403	merge.c	FUNCTION_14	IF_3	CALL_6
0x4001322	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	       403	merge.c	FUNCTION_14	IF_3	CALL_6
0x4001329	          0x4889d6	                            mov rsi, rdx	       403	merge.c	FUNCTION_14	IF_3	CALL_6
0x400132c	          0x4889c7	                            mov rdi, rax	       403	merge.c	FUNCTION_14	IF_3	CALL_6
0x400132f	      0xe83bfcffff	                 call sym.squash_message	       403	merge.c	FUNCTION_14	IF_3	CALL_6
0x4001334	      0xe999000000	                           jmp 0x40013d2	       403	merge.c	FUNCTION_14	IF_3	CALL_6
0x4001339	    0x8b0500000000	            mov eax, dword [0x0400133f] 	       405	merge.c	FUNCTION_14	ELSE_2	IF_4
0x400133f	            0x85c0	                           test eax, eax	       405	merge.c	FUNCTION_14	ELSE_2	IF_4
0x4001341	            0x7825	                            js 0x4001368	       405	merge.c	FUNCTION_14	ELSE_2	IF_4
0x4001343	    0x488b05000000	            mov rax, qword [0x0400134a] 	       405	merge.c	FUNCTION_14	ELSE_2	IF_4
0x400134a	          0x4885c0	                           test rax, rax	       405	merge.c	FUNCTION_14	ELSE_2	IF_4
0x400134d	            0x7519	                           jne 0x4001368	       405	merge.c	FUNCTION_14	ELSE_2	IF_4
0x400134f	      0xbf00000000	                              mov edi, 0	       406	merge.c	FUNCTION_14	ELSE_2	CALL_8
0x4001354	      0xe89cefffff	                               call sym.	       406	merge.c	FUNCTION_14	ELSE_2	CALL_8
0x4001359	          0x4889c7	                            mov rdi, rax	       406	merge.c	FUNCTION_14	ELSE_2	CALL_8
0x400135c	      0xb800000000	                              mov eax, 0	       406	merge.c	FUNCTION_14	ELSE_2	CALL_8
0x4001361	      0xe800000000	                          call 0x4001366	       406	merge.c	FUNCTION_14	ELSE_2	CALL_8
0x4001366	            0xeb6a	                           jmp 0x40013d2	       406	merge.c	FUNCTION_14	ELSE_2	CALL_8
0x4001368	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       408	merge.c	FUNCTION_14	ELSE_2	ELSE_3
0x4001370	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       408	merge.c	FUNCTION_14	ELSE_2	ELSE_3
0x4001378	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       408	merge.c	FUNCTION_14	ELSE_2	ELSE_3
0x4001380	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	       409	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_9
0x4001387	    0x488b8d38feff	            mov rcx, qword [rbp - 0x1c8]	       409	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_9
0x400138e	    0x488b9518feff	            mov rdx, qword [rbp - 0x1e8]	       409	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_9
0x4001395	    0x41b901000000	                              mov r9d, 1	       409	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_9
0x400139b	    0x41b800000000	                              mov r8d, 0	       409	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_9
0x40013a1	      0xbe00000000	                              mov esi, 0	       409	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_9
0x40013a6	          0x4889c7	                            mov rdi, rax	       409	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_9
0x40013a9	      0xe800000000	                          call 0x40013ae	       409	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_9
0x40013ae	    0x488b05000000	            mov rax, qword [0x040013b5] 	       415	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_10
0x40013b5	        0x488b4010	            mov rax, qword [rax + 0x10] 	       415	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_10
0x40013b9	          0x4889c7	                            mov rdi, rax	       415	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_10
0x40013bc	      0xe800000000	                          call 0x40013c1	       415	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_10
0x40013c1	        0x488d45e0	                   lea rax, [rbp - 0x20]	       416	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_11
0x40013c5	      0xbe02000000	                              mov esi, 2	       416	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_11
0x40013ca	          0x4889c7	                            mov rdi, rax	       416	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_11
0x40013cd	      0xe800000000	                          call 0x40013d2	       416	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_11
0x40013d2	    0x4883bd18feff	              cmp qword [rbp - 0x1e8], 0	       419	merge.c	FUNCTION_14	IF_5
0x40013da	     0xf849c000000	                            je 0x400147c	       419	merge.c	FUNCTION_14	IF_5
0x40013e0	    0x8b0500000000	            mov eax, dword [0x040013e6] 	       419	merge.c	FUNCTION_14	IF_5
0x40013e6	            0x85c0	                           test eax, eax	       419	merge.c	FUNCTION_14	IF_5
0x40013e8	     0xf848e000000	                            je 0x400147c	       419	merge.c	FUNCTION_14	IF_5
0x40013ee	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	       421	merge.c	FUNCTION_14	IF_5	CALL_12
0x40013f5	          0x4889c7	                            mov rdi, rax	       421	merge.c	FUNCTION_14	IF_5	CALL_12
0x40013f8	      0xe800000000	                          call 0x40013fd	       421	merge.c	FUNCTION_14	IF_5	CALL_12
0x40013fd	    0xc78528ffffff	     mov dword [rbp - 0xd8], 0xffffffff 	       422	merge.c	FUNCTION_14	IF_5
0x4001407	    0xc78530ffffff	     mov dword [rbp - 0xd0], 0xffffffff 	       423	merge.c	FUNCTION_14	IF_5
0x4001411	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	       424	merge.c	FUNCTION_14	IF_5
0x4001417	          0x83c80a	                             or eax, 0xa	       424	merge.c	FUNCTION_14	IF_5
0x400141a	    0x8985c0feffff	            mov dword [rbp - 0x140], eax	       424	merge.c	FUNCTION_14	IF_5
0x4001420	    0xc785b0feffff	              mov dword [rbp - 0x150], 1	       426	merge.c	FUNCTION_14	IF_5
0x400142a	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	       427	merge.c	FUNCTION_14	IF_5	CALL_13
0x4001431	          0x4889c7	                            mov rdi, rax	       427	merge.c	FUNCTION_14	IF_5	CALL_13
0x4001434	      0xe800000000	                          call 0x4001439	       427	merge.c	FUNCTION_14	IF_5	CALL_13
0x4001439	    0x488d9560feff	                  lea rdx, [rbp - 0x1a0]	       428	merge.c	FUNCTION_14	IF_5	CALL_14
0x4001440	    0x488bb518feff	            mov rsi, qword [rbp - 0x1e8]	       428	merge.c	FUNCTION_14	IF_5	CALL_14
0x4001447	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	       428	merge.c	FUNCTION_14	IF_5	CALL_14
0x400144e	          0x4889d1	                            mov rcx, rdx	       428	merge.c	FUNCTION_14	IF_5	CALL_14
0x4001451	      0xba00000000	                              mov edx, 0	       428	merge.c	FUNCTION_14	IF_5	CALL_14
0x4001456	          0x4889c7	                            mov rdi, rax	       428	merge.c	FUNCTION_14	IF_5	CALL_14
0x4001459	      0xe800000000	                          call 0x400145e	       428	merge.c	FUNCTION_14	IF_5	CALL_14
0x400145e	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	       429	merge.c	FUNCTION_14	IF_5	CALL_15
0x4001465	          0x4889c7	                            mov rdi, rax	       429	merge.c	FUNCTION_14	IF_5	CALL_15
0x4001468	      0xe800000000	                          call 0x400146d	       429	merge.c	FUNCTION_14	IF_5	CALL_15
0x400146d	    0x488d8560feff	                  lea rax, [rbp - 0x1a0]	       430	merge.c	FUNCTION_14	IF_5	CALL_16
0x4001474	          0x4889c7	                            mov rdi, rax	       430	merge.c	FUNCTION_14	IF_5	CALL_16
0x4001477	      0xe800000000	                          call 0x400147c	       430	merge.c	FUNCTION_14	IF_5	CALL_16
0x400147c	    0x8b0500000000	            mov eax, dword [0x04001482] 	       434	merge.c	FUNCTION_14	CALL_17
0x4001482	            0x85c0	                           test eax, eax	       434	merge.c	FUNCTION_14	CALL_17
0x4001484	            0x7407	                            je 0x400148d	       434	merge.c	FUNCTION_14	CALL_17
0x4001486	      0xb800000000	                              mov eax, 0	       434	merge.c	FUNCTION_14	CALL_17
0x400148b	            0xeb05	                           jmp 0x4001492	       434	merge.c	FUNCTION_14	CALL_17
0x400148d	      0xb800000000	                              mov eax, 0	       434	merge.c	FUNCTION_14	CALL_17
0x4001492	      0xb900000000	                              mov ecx, 0	       434	merge.c	FUNCTION_14	CALL_17
0x4001497	          0x4889c2	                            mov rdx, rax	       434	merge.c	FUNCTION_14	CALL_17
0x400149a	      0xbe00000000	                              mov esi, 0	       434	merge.c	FUNCTION_14	CALL_17
0x400149f	      0xbf00000000	                              mov edi, 0	       434	merge.c	FUNCTION_14	CALL_17
0x40014a4	      0xb800000000	                              mov eax, 0	       434	merge.c	FUNCTION_14	CALL_17
0x40014a9	      0xe800000000	                          call 0x40014ae	       434	merge.c	FUNCTION_14	CALL_17
0x40014ae	    0x488d8540feff	                  lea rax, [rbp - 0x1c0]	       436	merge.c	FUNCTION_14	CALL_18
0x40014b5	          0x4889c7	                            mov rdi, rax	       436	merge.c	FUNCTION_14	CALL_18
0x40014b8	      0xe800000000	                          call 0x40014bd	       436	merge.c	FUNCTION_14	CALL_18
0x40014bd	              0x90	                                     nop	       437	merge.c	FUNCTION_14
0x40014be	        0x488b45f8	                mov rax, qword [rbp - 8]	       437	merge.c	FUNCTION_14
0x40014c2	    0x644833042528	                xor rax, qword fs:[0x28]	       437	merge.c	FUNCTION_14
0x40014cb	            0x7405	                            je 0x40014d2	       437	merge.c	FUNCTION_14
0x40014cd	      0xe800000000	                          call 0x40014d2	       437	merge.c	FUNCTION_14
0x40014d2	              0xc9	                                   leave	       437	merge.c	FUNCTION_14
0x40014d3	              0xc3	                                     ret	       437	merge.c	FUNCTION_14
st_add	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,1:ELSE,0:IF,1	20
0x40000a1	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_92
0x40000a2	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_92
0x40000a5	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_92
0x40000a9	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_92
0x40000ad	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_92
0x40000b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_92	IF_1
0x40000b5	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_92	IF_1
0x40000b8	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_92	IF_1
0x40000bc	            0x731a	                           jae 0x40000d8	       785	git-compat-util.h	FUNCTION_92	IF_1
0x40000be	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_92	IF_1	CALL_1
0x40000c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_92	IF_1	CALL_1
0x40000c6	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_92	IF_1	CALL_1
0x40000c9	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_92	IF_1	CALL_1
0x40000ce	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_92	IF_1	CALL_1
0x40000d3	      0xe800000000	                          call 0x40000d8	       786	git-compat-util.h	FUNCTION_92	IF_1	CALL_1
0x40000d8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_92
0x40000dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_92
0x40000e0	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_92
0x40000e3	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_92
0x40000e4	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_92
option_parse_x	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,1:ELSE,0:IF,1	63
0x400091c	              0x55	                                push rbp	       183	merge.c	FUNCTION_5
0x400091d	          0x4889e5	                            mov rbp, rsp	       183	merge.c	FUNCTION_5
0x4000920	              0x53	                                push rbx	       183	merge.c	FUNCTION_5
0x4000921	        0x4883ec28	                           sub rsp, 0x28	       183	merge.c	FUNCTION_5
0x4000925	        0x48897de8	             mov qword [rbp - 0x18], rdi	       183	merge.c	FUNCTION_5
0x4000929	        0x488975e0	             mov qword [rbp - 0x20], rsi	       183	merge.c	FUNCTION_5
0x400092d	          0x8955dc	             mov dword [rbp - 0x24], edx	       183	merge.c	FUNCTION_5
0x4000930	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       184	merge.c	FUNCTION_5	IF_1
0x4000934	            0x740a	                            je 0x4000940	       184	merge.c	FUNCTION_5	IF_1
0x4000936	      0xb800000000	                              mov eax, 0	       185	merge.c	FUNCTION_5	IF_1
0x400093b	      0xe9dc000000	                           jmp 0x4000a1c	       185	merge.c	FUNCTION_5	IF_1
0x4000940	    0x488b05000000	            mov rax, qword [0x04000947] 	       187	merge.c	FUNCTION_5
0x4000947	        0x488d5001	                      lea rdx, [rax + 1]	       187	merge.c	FUNCTION_5
0x400094b	    0x488b05000000	            mov rax, qword [0x04000952] 	       187	merge.c	FUNCTION_5
0x4000952	          0x4839c2	                            cmp rdx, rax	       187	merge.c	FUNCTION_5
0x4000955	     0xf868c000000	                           jbe 0x40009e7	       187	merge.c	FUNCTION_5
0x400095b	    0x488b15000000	            mov rdx, qword [0x04000962] 	       187	merge.c	FUNCTION_5
0x4000962	          0x4889d0	                            mov rax, rdx	       187	merge.c	FUNCTION_5
0x4000965	          0x4801c0	                            add rax, rax	       187	merge.c	FUNCTION_5
0x4000968	          0x4801d0	                            add rax, rdx	       187	merge.c	FUNCTION_5
0x400096b	        0x4883c030	                           add rax, 0x30	       187	merge.c	FUNCTION_5
0x400096f	          0x48d1e8	                              shr rax, 1	       187	merge.c	FUNCTION_5
0x4000972	          0x4889c2	                            mov rdx, rax	       187	merge.c	FUNCTION_5
0x4000975	    0x488b05000000	            mov rax, qword [0x0400097c] 	       187	merge.c	FUNCTION_5
0x400097c	        0x4883c001	                              add rax, 1	       187	merge.c	FUNCTION_5
0x4000980	          0x4839c2	                            cmp rdx, rax	       187	merge.c	FUNCTION_5
0x4000983	            0x7314	                           jae 0x4000999	       187	merge.c	FUNCTION_5
0x4000985	    0x488b05000000	            mov rax, qword [0x0400098c] 	       187	merge.c	FUNCTION_5
0x400098c	        0x4883c001	                              add rax, 1	       187	merge.c	FUNCTION_5
0x4000990	    0x488905000000	            mov qword [0x04000997], rax 	       187	merge.c	FUNCTION_5
0x4000997	            0xeb1e	                           jmp 0x40009b7	       187	merge.c	FUNCTION_5
0x4000999	    0x488b15000000	            mov rdx, qword [0x040009a0] 	       187	merge.c	FUNCTION_5
0x40009a0	          0x4889d0	                            mov rax, rdx	       187	merge.c	FUNCTION_5
0x40009a3	          0x4801c0	                            add rax, rax	       187	merge.c	FUNCTION_5
0x40009a6	          0x4801d0	                            add rax, rdx	       187	merge.c	FUNCTION_5
0x40009a9	        0x4883c030	                           add rax, 0x30	       187	merge.c	FUNCTION_5
0x40009ad	          0x48d1e8	                              shr rax, 1	       187	merge.c	FUNCTION_5
0x40009b0	    0x488905000000	            mov qword [0x040009b7], rax 	       187	merge.c	FUNCTION_5
0x40009b7	    0x488b05000000	            mov rax, qword [0x040009be] 	       187	merge.c	FUNCTION_5
0x40009be	          0x4889c6	                            mov rsi, rax	       187	merge.c	FUNCTION_5
0x40009c1	      0xbf08000000	                              mov edi, 8	       187	merge.c	FUNCTION_5
0x40009c6	      0xe81af7ffff	                        call sym.st_mult	       187	merge.c	FUNCTION_5
0x40009cb	          0x4889c2	                            mov rdx, rax	       187	merge.c	FUNCTION_5
0x40009ce	    0x488b05000000	            mov rax, qword [0x040009d5] 	       187	merge.c	FUNCTION_5
0x40009d5	          0x4889d6	                            mov rsi, rdx	       187	merge.c	FUNCTION_5
0x40009d8	          0x4889c7	                            mov rdi, rax	       187	merge.c	FUNCTION_5
0x40009db	      0xe800000000	                          call 0x40009e0	       187	merge.c	FUNCTION_5
0x40009e0	    0x488905000000	            mov qword [0x040009e7], rax 	       187	merge.c	FUNCTION_5
0x40009e7	    0x488b0d000000	            mov rcx, qword [0x040009ee] 	       188	merge.c	FUNCTION_5	CALL_1
0x40009ee	    0x488b05000000	            mov rax, qword [0x040009f5] 	       188	merge.c	FUNCTION_5	CALL_1
0x40009f5	        0x488d5001	                      lea rdx, [rax + 1]	       188	merge.c	FUNCTION_5	CALL_1
0x40009f9	    0x488915000000	            mov qword [0x04000a00], rdx 	       188	merge.c	FUNCTION_5	CALL_1
0x4000a00	        0x48c1e003	                              shl rax, 3	       188	merge.c	FUNCTION_5	CALL_1
0x4000a04	        0x488d1c01	                    lea rbx, [rcx + rax]	       188	merge.c	FUNCTION_5	CALL_1
0x4000a08	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       188	merge.c	FUNCTION_5	CALL_1
0x4000a0c	          0x4889c7	                            mov rdi, rax	       188	merge.c	FUNCTION_5	CALL_1
0x4000a0f	      0xe800000000	                          call 0x4000a14	       188	merge.c	FUNCTION_5	CALL_1
0x4000a14	          0x488903	                    mov qword [rbx], rax	       188	merge.c	FUNCTION_5	CALL_1
0x4000a17	      0xb800000000	                              mov eax, 0	       189	merge.c	FUNCTION_5
0x4000a1c	        0x4883c428	                           add rsp, 0x28	       190	merge.c	FUNCTION_5
0x4000a20	              0x5b	                                 pop rbx	       190	merge.c	FUNCTION_5
0x4000a21	              0x5d	                                 pop rbp	       190	merge.c	FUNCTION_5
0x4000a22	              0xc3	                                     ret	       190	merge.c	FUNCTION_5
write_tree_trivial	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,3:ELSE,0:IF,1	19
0x40020ce	              0x55	                                push rbp	       641	merge.c	FUNCTION_19
0x40020cf	          0x4889e5	                            mov rbp, rsp	       641	merge.c	FUNCTION_19
0x40020d2	        0x4883ec10	                           sub rsp, 0x10	       641	merge.c	FUNCTION_19
0x40020d6	        0x48897df8	                mov qword [rbp - 8], rdi	       641	merge.c	FUNCTION_19
0x40020da	        0x488b45f8	                mov rax, qword [rbp - 8]	       642	merge.c	FUNCTION_19	IF_1	CALL_1
0x40020de	      0xba00000000	                              mov edx, 0	       642	merge.c	FUNCTION_19	IF_1	CALL_1
0x40020e3	      0xbe00000000	                              mov esi, 0	       642	merge.c	FUNCTION_19	IF_1	CALL_1
0x40020e8	          0x4889c7	                            mov rdi, rax	       642	merge.c	FUNCTION_19	IF_1	CALL_1
0x40020eb	      0xe800000000	                          call 0x40020f0	       642	merge.c	FUNCTION_19	IF_1	CALL_1
0x40020f0	            0x85c0	                           test eax, eax	       642	merge.c	FUNCTION_19	IF_1	CALL_1
0x40020f2	            0x7417	                            je 0x400210b	       642	merge.c	FUNCTION_19	IF_1	CALL_1
0x40020f4	      0xbf00000000	                              mov edi, 0	       643	merge.c	FUNCTION_19	CALL_3
0x40020f9	      0xe8f7e1ffff	                               call sym.	       643	merge.c	FUNCTION_19	CALL_3
0x40020fe	          0x4889c7	                            mov rdi, rax	       643	merge.c	FUNCTION_19	CALL_3
0x4002101	      0xb800000000	                              mov eax, 0	       643	merge.c	FUNCTION_19	CALL_3
0x4002106	      0xe800000000	                          call 0x400210b	       643	merge.c	FUNCTION_19	CALL_3
0x400210b	              0x90	                                     nop	       644	merge.c	FUNCTION_19
0x400210c	              0xc9	                                   leave	       644	merge.c	FUNCTION_19
0x400210d	              0xc3	                                     ret	       644	merge.c	FUNCTION_19
prepare_merge_message	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,3:ELSE,0:IF,1	57
0x4003309	              0x55	                                push rbp	      1016	merge.c	FUNCTION_36
0x400330a	          0x4889e5	                            mov rbp, rsp	      1016	merge.c	FUNCTION_36
0x400330d	        0x4883ec20	                           sub rsp, 0x20	      1016	merge.c	FUNCTION_36
0x4003311	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1016	merge.c	FUNCTION_36
0x4003315	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1016	merge.c	FUNCTION_36
0x4003319	    0x64488b042528	                mov rax, qword fs:[0x28]	      1016	merge.c	FUNCTION_36
0x4003322	        0x488945f8	                mov qword [rbp - 8], rax	      1016	merge.c	FUNCTION_36
0x4003326	            0x31c0	                            xor eax, eax	      1016	merge.c	FUNCTION_36
0x4003328	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1019	merge.c	FUNCTION_36	CALL_1
0x400332c	      0xba08000000	                              mov edx, 8	      1019	merge.c	FUNCTION_36	CALL_1
0x4003331	      0xbe00000000	                              mov esi, 0	      1019	merge.c	FUNCTION_36	CALL_1
0x4003336	          0x4889c7	                            mov rdi, rax	      1019	merge.c	FUNCTION_36	CALL_1
0x4003339	      0xe800000000	                          call 0x400333e	      1019	merge.c	FUNCTION_36	CALL_1
0x400333e	    0x8b0500000000	            mov eax, dword [0x04003344] 	      1020	merge.c	FUNCTION_36
0x4003344	            0x85c0	                           test eax, eax	      1020	merge.c	FUNCTION_36
0x4003346	           0xf94c0	                                 sete al	      1020	merge.c	FUNCTION_36
0x4003349	          0x83e001	                              and eax, 1	      1020	merge.c	FUNCTION_36
0x400334c	            0x89c2	                            mov edx, eax	      1020	merge.c	FUNCTION_36
0x400334e	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      1020	merge.c	FUNCTION_36
0x4003352	          0x83e0fe	                     and eax, 0xfffffffe	      1020	merge.c	FUNCTION_36
0x4003355	             0x9d0	                             or eax, edx	      1020	merge.c	FUNCTION_36
0x4003357	          0x8845f0	               mov byte [rbp - 0x10], al	      1020	merge.c	FUNCTION_36
0x400335a	    0x8b0500000000	            mov eax, dword [0x04003360] 	      1021	merge.c	FUNCTION_36
0x4003360	          0x8945f4	              mov dword [rbp - 0xc], eax	      1021	merge.c	FUNCTION_36
0x4003363	    0x8b0500000000	            mov eax, dword [0x04003369] 	      1022	merge.c	FUNCTION_36
0x4003369	            0x85c0	                           test eax, eax	      1022	merge.c	FUNCTION_36
0x400336b	           0xf9fc0	                                 setg al	      1022	merge.c	FUNCTION_36
0x400336e	          0x83e001	                              and eax, 1	      1022	merge.c	FUNCTION_36
0x4003371	          0x8d1400	                    lea edx, [rax + rax]	      1022	merge.c	FUNCTION_36
0x4003374	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      1022	merge.c	FUNCTION_36
0x4003378	          0x83e0fd	                     and eax, 0xfffffffd	      1022	merge.c	FUNCTION_36
0x400337b	             0x9d0	                             or eax, edx	      1022	merge.c	FUNCTION_36
0x400337d	          0x8845f0	               mov byte [rbp - 0x10], al	      1022	merge.c	FUNCTION_36
0x4003380	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      1024	merge.c	FUNCTION_36	CALL_2
0x4003384	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1024	merge.c	FUNCTION_36	CALL_2
0x4003388	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1024	merge.c	FUNCTION_36	CALL_2
0x400338c	          0x4889ce	                            mov rsi, rcx	      1024	merge.c	FUNCTION_36	CALL_2
0x400338f	          0x4889c7	                            mov rdi, rax	      1024	merge.c	FUNCTION_36	CALL_2
0x4003392	      0xe800000000	                          call 0x4003397	      1024	merge.c	FUNCTION_36	CALL_2
0x4003397	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1025	merge.c	FUNCTION_36	IF_1
0x400339b	        0x488b4008	                mov rax, qword [rax + 8]	      1025	merge.c	FUNCTION_36	IF_1
0x400339f	          0x4885c0	                           test rax, rax	      1025	merge.c	FUNCTION_36	IF_1
0x40033a2	            0x741b	                            je 0x40033bf	      1025	merge.c	FUNCTION_36	IF_1
0x40033a4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1026	merge.c	FUNCTION_36	CALL_3
0x40033a8	        0x488b4008	                mov rax, qword [rax + 8]	      1026	merge.c	FUNCTION_36	CALL_3
0x40033ac	        0x488d50ff	                      lea rdx, [rax - 1]	      1026	merge.c	FUNCTION_36	CALL_3
0x40033b0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1026	merge.c	FUNCTION_36	CALL_3
0x40033b4	          0x4889d6	                            mov rsi, rdx	      1026	merge.c	FUNCTION_36	CALL_3
0x40033b7	          0x4889c7	                            mov rdi, rax	      1026	merge.c	FUNCTION_36	CALL_3
0x40033ba	      0xe8f9cdffff	                  call sym.strbuf_setlen	      1026	merge.c	FUNCTION_36	CALL_3
0x40033bf	              0x90	                                     nop	      1027	merge.c	FUNCTION_36
0x40033c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1027	merge.c	FUNCTION_36
0x40033c4	    0x644833042528	                xor rax, qword fs:[0x28]	      1027	merge.c	FUNCTION_36
0x40033cd	            0x7405	                            je 0x40033d4	      1027	merge.c	FUNCTION_36
0x40033cf	      0xe800000000	                          call 0x40033d4	      1027	merge.c	FUNCTION_36
0x40033d4	              0xc9	                                   leave	      1027	merge.c	FUNCTION_36
0x40033d5	              0xc3	                                     ret	      1027	merge.c	FUNCTION_36
strbuf_addstr	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,2:ELSE,0:IF,0	17
0x40002c0	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_72
0x40002c1	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_72
0x40002c4	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_72
0x40002c8	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_72
0x40002cc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_72
0x40002d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_72	CALL_2
0x40002d4	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_72	CALL_2
0x40002d7	      0xe800000000	                          call 0x40002dc	       279	strbuf.h	FUNCTION_72	CALL_2
0x40002dc	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_72	CALL_2
0x40002df	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_72	CALL_2
0x40002e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_72	CALL_2
0x40002e7	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_72	CALL_2
0x40002ea	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_72	CALL_2
0x40002ed	      0xe800000000	                          call 0x40002f2	       279	strbuf.h	FUNCTION_72	CALL_2
0x40002f2	              0x90	                                     nop	       280	strbuf.h	FUNCTION_72
0x40002f3	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_72
0x40002f4	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_72
get_strategy	FOR,5:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,21:ELSE,0:IF,7	216
0x4000484	              0x55	                                push rbp	       113	merge.c	FUNCTION_2
0x4000485	          0x4889e5	                            mov rbp, rsp	       113	merge.c	FUNCTION_2
0x4000488	        0x4883ec50	                           sub rsp, 0x50	       113	merge.c	FUNCTION_2
0x400048c	        0x48897db8	             mov qword [rbp - 0x48], rdi	       113	merge.c	FUNCTION_2
0x4000490	    0x64488b042528	                mov rax, qword fs:[0x28]	       113	merge.c	FUNCTION_2
0x4000499	        0x488945f8	                mov qword [rbp - 8], rax	       113	merge.c	FUNCTION_2
0x400049d	            0x31c0	                            xor eax, eax	       113	merge.c	FUNCTION_2
0x400049f	      0x48837db800	               cmp qword [rbp - 0x48], 0	       119	merge.c	FUNCTION_2	IF_1
0x40004a4	            0x750a	                           jne 0x40004b0	       119	merge.c	FUNCTION_2	IF_1
0x40004a6	      0xb800000000	                              mov eax, 0	       120	merge.c	FUNCTION_2	IF_1
0x40004ab	      0xe93d030000	                           jmp 0x40007ed	       120	merge.c	FUNCTION_2	IF_1
0x40004b0	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       122	merge.c	FUNCTION_2	FOR_1
0x40004b7	            0xeb3d	                           jmp 0x40004f6	       122	merge.c	FUNCTION_2	FOR_1
0x40004b9	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004bc	            0x4898	                                    cdqe	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004be	        0x48c1e004	                              shl rax, 4	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004c2	    0x480500000000	                              add rax, 0	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004c8	          0x488b10	                    mov rdx, qword [rax]	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004cb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004cf	          0x4889d6	                            mov rsi, rdx	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004d2	          0x4889c7	                            mov rdi, rax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004d5	      0xe800000000	                          call 0x40004da	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004da	            0x85c0	                           test eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004dc	            0x7514	                           jne 0x40004f2	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004de	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x40004e1	            0x4898	                                    cdqe	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x40004e3	        0x48c1e004	                              shl rax, 4	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x40004e7	    0x480500000000	                              add rax, 0	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x40004ed	      0xe9fb020000	                           jmp 0x40007ed	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x40004f2	        0x8345c401	               add dword [rbp - 0x3c], 1	       122	merge.c	FUNCTION_2	FOR_1
0x40004f6	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       122	merge.c	FUNCTION_2	FOR_1
0x40004f9	          0x83f804	                              cmp eax, 4	       122	merge.c	FUNCTION_2	FOR_1
0x40004fc	            0x76bb	                           jbe 0x40004b9	       122	merge.c	FUNCTION_2	FOR_1
0x40004fe	    0x8b0500000000	            mov eax, dword [0x04000504] 	       126	merge.c	FUNCTION_2	IF_3
0x4000504	            0x85c0	                           test eax, eax	       126	merge.c	FUNCTION_2	IF_3
0x4000506	     0xf851b010000	                           jne 0x4000627	       126	merge.c	FUNCTION_2	IF_3
0x400050c	    0xc70500000000	               mov dword [0x04000516], 1	       128	merge.c	FUNCTION_2	IF_3
0x4000516	        0x488d45e0	                   lea rax, [rbp - 0x20]	       130	merge.c	FUNCTION_2	IF_3	CALL_2
0x400051a	      0xba10000000	                           mov edx, 0x10	       130	merge.c	FUNCTION_2	IF_3	CALL_2
0x400051f	      0xbe00000000	                              mov esi, 0	       130	merge.c	FUNCTION_2	IF_3	CALL_2
0x4000524	          0x4889c7	                            mov rdi, rax	       130	merge.c	FUNCTION_2	IF_3	CALL_2
0x4000527	      0xe800000000	                          call 0x400052c	       130	merge.c	FUNCTION_2	IF_3	CALL_2
0x400052c	      0xba00000000	                              mov edx, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x4000531	      0xbe00000000	                              mov esi, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x4000536	      0xbf00000000	                              mov edi, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x400053b	      0xe800000000	                          call 0x4000540	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x4000540	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000547	      0xe9bb000000	                           jmp 0x4000607	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400054c	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       133	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000553	    0x488b05000000	            mov rax, qword [0x0400055a] 	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x400055a	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x400055d	          0x4863d2	                         movsxd rdx, edx	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000560	        0x48c1e203	                              shl rdx, 3	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000564	          0x4801d0	                            add rax, rdx	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000567	          0x488b00	                    mov rax, qword [rax]	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x400056a	        0x488945d0	             mov qword [rbp - 0x30], rax	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x400056e	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       135	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3
0x4000575	            0xeb5e	                           jmp 0x40005d5	       135	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3
0x4000577	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400057b	          0x488b10	                    mov rdx, qword [rax]	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400057e	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000581	            0x4898	                                    cdqe	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000583	        0x48c1e004	                              shl rax, 4	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000587	    0x480500000000	                              add rax, 0	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400058d	          0x488b00	                    mov rax, qword [rax]	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000590	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000594	        0x4883c108	                              add rcx, 8	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000598	          0x4889c6	                            mov rsi, rax	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400059b	          0x4889cf	                            mov rdi, rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400059e	      0xe800000000	                          call 0x40005a3	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40005a3	            0x85c0	                           test eax, eax	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40005a5	            0x752a	                           jne 0x40005d1	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40005a7	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40005aa	            0x4898	                                    cdqe	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40005ac	        0x48c1e004	                              shl rax, 4	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40005b0	    0x480500000000	                              add rax, 0	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40005b6	          0x488b10	                    mov rdx, qword [rax]	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40005b9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40005bd	          0x488b00	                    mov rax, qword [rax]	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40005c0	          0x4801d0	                            add rax, rdx	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40005c3	           0xfb600	                   movzx eax, byte [rax]	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40005c6	            0x84c0	                             test al, al	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40005c8	            0x7507	                           jne 0x40005d1	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40005ca	    0xc745cc010000	               mov dword [rbp - 0x34], 1	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40005d1	        0x8345c801	               add dword [rbp - 0x38], 1	       135	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3
0x40005d5	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       135	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3
0x40005d8	          0x83f804	                              cmp eax, 4	       135	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3
0x40005db	            0x769a	                           jbe 0x4000577	       135	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3
0x40005dd	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       139	merge.c	FUNCTION_2	IF_3	FOR_2	IF_5
0x40005e1	            0x7520	                           jne 0x4000603	       139	merge.c	FUNCTION_2	IF_3	FOR_2	IF_5
0x40005e3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x40005e7	          0x488b00	                    mov rax, qword [rax]	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x40005ea	            0x89c2	                            mov edx, eax	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x40005ec	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x40005f0	        0x488d4808	                      lea rcx, [rax + 8]	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x40005f4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x40005f8	          0x4889ce	                            mov rsi, rcx	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x40005fb	          0x4889c7	                            mov rdi, rax	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x40005fe	      0xe800000000	                          call 0x4000603	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000603	        0x8345c401	               add dword [rbp - 0x3c], 1	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000607	    0x8b0500000000	            mov eax, dword [0x0400060d] 	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400060d	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000610	     0xf8f36ffffff	                            jg 0x400054c	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000616	        0x488d45e0	                   lea rax, [rbp - 0x20]	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x400061a	          0x4889c6	                            mov rsi, rax	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x400061d	      0xbf00000000	                              mov edi, 0	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x4000622	      0xe800000000	                          call 0x4000627	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x4000627	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x400062b	          0x4889c6	                            mov rsi, rax	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x400062e	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000633	      0xe800000000	                          call 0x4000638	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000638	            0x85c0	                           test eax, eax	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x400063a	     0xf8575010000	                           jne 0x40007b5	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000640	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000644	          0x4889c6	                            mov rsi, rax	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000647	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x400064c	      0xe800000000	                          call 0x4000651	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000651	            0x85c0	                           test eax, eax	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000653	     0xf855c010000	                           jne 0x40007b5	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000659	      0xbf00000000	                              mov edi, 0	       145	merge.c	FUNCTION_2	IF_6	CALL_10
0x400065e	      0xe892fcffff	                               call sym.	       145	merge.c	FUNCTION_2	IF_6	CALL_10
0x4000663	          0x4889c1	                            mov rcx, rax	       145	merge.c	FUNCTION_2	IF_6	CALL_10
0x4000666	    0x488b05000000	            mov rax, qword [0x0400066d] 	       145	merge.c	FUNCTION_2	IF_6	CALL_10
0x400066d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       145	merge.c	FUNCTION_2	IF_6	CALL_10
0x4000671	          0x4889ce	                            mov rsi, rcx	       145	merge.c	FUNCTION_2	IF_6	CALL_10
0x4000674	          0x4889c7	                            mov rdi, rax	       145	merge.c	FUNCTION_2	IF_6	CALL_10
0x4000677	      0xb800000000	                              mov eax, 0	       145	merge.c	FUNCTION_2	IF_6	CALL_10
0x400067c	      0xe800000000	                          call 0x4000681	       145	merge.c	FUNCTION_2	IF_6	CALL_10
0x4000681	      0xbf00000000	                              mov edi, 0	       146	merge.c	FUNCTION_2	IF_6	CALL_12
0x4000686	      0xe86afcffff	                               call sym.	       146	merge.c	FUNCTION_2	IF_6	CALL_12
0x400068b	          0x4889c2	                            mov rdx, rax	       146	merge.c	FUNCTION_2	IF_6	CALL_12
0x400068e	    0x488b05000000	            mov rax, qword [0x04000695] 	       146	merge.c	FUNCTION_2	IF_6	CALL_12
0x4000695	          0x4889d6	                            mov rsi, rdx	       146	merge.c	FUNCTION_2	IF_6	CALL_12
0x4000698	          0x4889c7	                            mov rdi, rax	       146	merge.c	FUNCTION_2	IF_6	CALL_12
0x400069b	      0xb800000000	                              mov eax, 0	       146	merge.c	FUNCTION_2	IF_6	CALL_12
0x40006a0	      0xe800000000	                          call 0x40006a5	       146	merge.c	FUNCTION_2	IF_6	CALL_12
0x40006a5	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006ac	            0xeb38	                           jmp 0x40006e6	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006ae	    0x488b05000000	            mov rax, qword [0x040006b5] 	       148	merge.c	FUNCTION_2	IF_6	CALL_13
0x40006b5	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       148	merge.c	FUNCTION_2	IF_6	CALL_13
0x40006b8	          0x4863d2	                         movsxd rdx, edx	       148	merge.c	FUNCTION_2	IF_6	CALL_13
0x40006bb	        0x48c1e203	                              shl rdx, 3	       148	merge.c	FUNCTION_2	IF_6	CALL_13
0x40006bf	          0x4801d0	                            add rax, rdx	       148	merge.c	FUNCTION_2	IF_6	CALL_13
0x40006c2	          0x488b00	                    mov rax, qword [rax]	       148	merge.c	FUNCTION_2	IF_6	CALL_13
0x40006c5	        0x488d5008	                      lea rdx, [rax + 8]	       148	merge.c	FUNCTION_2	IF_6	CALL_13
0x40006c9	    0x488b05000000	            mov rax, qword [0x040006d0] 	       148	merge.c	FUNCTION_2	IF_6	CALL_13
0x40006d0	      0xbe00000000	                              mov esi, 0	       148	merge.c	FUNCTION_2	IF_6	CALL_13
0x40006d5	          0x4889c7	                            mov rdi, rax	       148	merge.c	FUNCTION_2	IF_6	CALL_13
0x40006d8	      0xb800000000	                              mov eax, 0	       148	merge.c	FUNCTION_2	IF_6	CALL_13
0x40006dd	      0xe800000000	                          call 0x40006e2	       148	merge.c	FUNCTION_2	IF_6	CALL_13
0x40006e2	        0x8345c401	               add dword [rbp - 0x3c], 1	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006e6	    0x8b0500000000	            mov eax, dword [0x040006ec] 	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006ec	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006ef	            0x7fbd	                            jg 0x40006ae	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006f1	    0x488b05000000	            mov rax, qword [0x040006f8] 	       149	merge.c	FUNCTION_2	IF_6	CALL_14
0x40006f8	          0x4889c1	                            mov rcx, rax	       149	merge.c	FUNCTION_2	IF_6	CALL_14
0x40006fb	      0xba02000000	                              mov edx, 2	       149	merge.c	FUNCTION_2	IF_6	CALL_14
0x4000700	      0xbe01000000	                              mov esi, 1	       149	merge.c	FUNCTION_2	IF_6	CALL_14
0x4000705	      0xbf00000000	                              mov edi, 0	       149	merge.c	FUNCTION_2	IF_6	CALL_14
0x400070a	      0xe800000000	                          call 0x400070f	       149	merge.c	FUNCTION_2	IF_6	CALL_14
0x400070f	    0x8b0500000000	            mov eax, dword [0x04000715] 	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x4000715	            0x85c0	                           test eax, eax	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x4000717	     0xf848e000000	                            je 0x40007ab	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x400071d	      0xbf00000000	                              mov edi, 0	       151	merge.c	FUNCTION_2	IF_6	IF_7	CALL_16
0x4000722	      0xe8cefbffff	                               call sym.	       151	merge.c	FUNCTION_2	IF_6	IF_7	CALL_16
0x4000727	          0x4889c2	                            mov rdx, rax	       151	merge.c	FUNCTION_2	IF_6	IF_7	CALL_16
0x400072a	    0x488b05000000	            mov rax, qword [0x04000731] 	       151	merge.c	FUNCTION_2	IF_6	IF_7	CALL_16
0x4000731	          0x4889d6	                            mov rsi, rdx	       151	merge.c	FUNCTION_2	IF_6	IF_7	CALL_16
0x4000734	          0x4889c7	                            mov rdi, rax	       151	merge.c	FUNCTION_2	IF_6	IF_7	CALL_16
0x4000737	      0xb800000000	                              mov eax, 0	       151	merge.c	FUNCTION_2	IF_6	IF_7	CALL_16
0x400073c	      0xe800000000	                          call 0x4000741	       151	merge.c	FUNCTION_2	IF_6	IF_7	CALL_16
0x4000741	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4000748	            0xeb38	                           jmp 0x4000782	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x400074a	    0x488b05000000	            mov rax, qword [0x04000751] 	       153	merge.c	FUNCTION_2	IF_6	IF_7	CALL_17
0x4000751	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       153	merge.c	FUNCTION_2	IF_6	IF_7	CALL_17
0x4000754	          0x4863d2	                         movsxd rdx, edx	       153	merge.c	FUNCTION_2	IF_6	IF_7	CALL_17
0x4000757	        0x48c1e203	                              shl rdx, 3	       153	merge.c	FUNCTION_2	IF_6	IF_7	CALL_17
0x400075b	          0x4801d0	                            add rax, rdx	       153	merge.c	FUNCTION_2	IF_6	IF_7	CALL_17
0x400075e	          0x488b00	                    mov rax, qword [rax]	       153	merge.c	FUNCTION_2	IF_6	IF_7	CALL_17
0x4000761	        0x488d5008	                      lea rdx, [rax + 8]	       153	merge.c	FUNCTION_2	IF_6	IF_7	CALL_17
0x4000765	    0x488b05000000	            mov rax, qword [0x0400076c] 	       153	merge.c	FUNCTION_2	IF_6	IF_7	CALL_17
0x400076c	      0xbe00000000	                              mov esi, 0	       153	merge.c	FUNCTION_2	IF_6	IF_7	CALL_17
0x4000771	          0x4889c7	                            mov rdi, rax	       153	merge.c	FUNCTION_2	IF_6	IF_7	CALL_17
0x4000774	      0xb800000000	                              mov eax, 0	       153	merge.c	FUNCTION_2	IF_6	IF_7	CALL_17
0x4000779	      0xe800000000	                          call 0x400077e	       153	merge.c	FUNCTION_2	IF_6	IF_7	CALL_17
0x400077e	        0x8345c401	               add dword [rbp - 0x3c], 1	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4000782	    0x8b0500000000	            mov eax, dword [0x04000788] 	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4000788	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x400078b	            0x7fbd	                            jg 0x400074a	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x400078d	    0x488b05000000	            mov rax, qword [0x04000794] 	       154	merge.c	FUNCTION_2	IF_6	IF_7	CALL_18
0x4000794	          0x4889c1	                            mov rcx, rax	       154	merge.c	FUNCTION_2	IF_6	IF_7	CALL_18
0x4000797	      0xba02000000	                              mov edx, 2	       154	merge.c	FUNCTION_2	IF_6	IF_7	CALL_18
0x400079c	      0xbe01000000	                              mov esi, 1	       154	merge.c	FUNCTION_2	IF_6	IF_7	CALL_18
0x40007a1	      0xbf00000000	                              mov edi, 0	       154	merge.c	FUNCTION_2	IF_6	IF_7	CALL_18
0x40007a6	      0xe800000000	                          call 0x40007ab	       154	merge.c	FUNCTION_2	IF_6	IF_7	CALL_18
0x40007ab	      0xbf01000000	                              mov edi, 1	       156	merge.c	FUNCTION_2	IF_6	CALL_19
0x40007b0	      0xe800000000	                          call 0x40007b5	       156	merge.c	FUNCTION_2	IF_6	CALL_19
0x40007b5	      0xbe10000000	                           mov esi, 0x10	       159	merge.c	FUNCTION_2	CALL_20
0x40007ba	      0xbf01000000	                              mov edi, 1	       159	merge.c	FUNCTION_2	CALL_20
0x40007bf	      0xe800000000	                          call 0x40007c4	       159	merge.c	FUNCTION_2	CALL_20
0x40007c4	        0x488945d8	             mov qword [rbp - 0x28], rax	       159	merge.c	FUNCTION_2	CALL_20
0x40007c8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       160	merge.c	FUNCTION_2	CALL_21
0x40007cc	          0x4889c7	                            mov rdi, rax	       160	merge.c	FUNCTION_2	CALL_21
0x40007cf	      0xe800000000	                          call 0x40007d4	       160	merge.c	FUNCTION_2	CALL_21
0x40007d4	          0x4889c2	                            mov rdx, rax	       160	merge.c	FUNCTION_2	CALL_21
0x40007d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       160	merge.c	FUNCTION_2	CALL_21
0x40007db	          0x488910	                    mov qword [rax], rdx	       160	merge.c	FUNCTION_2	CALL_21
0x40007de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       161	merge.c	FUNCTION_2
0x40007e2	    0xc74008080000	                  mov dword [rax + 8], 8	       161	merge.c	FUNCTION_2
0x40007e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       162	merge.c	FUNCTION_2
0x40007ed	        0x488b4df8	                mov rcx, qword [rbp - 8]	       163	merge.c	FUNCTION_2
0x40007f1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       163	merge.c	FUNCTION_2
0x40007fa	            0x7405	                            je 0x4000801	       163	merge.c	FUNCTION_2
0x40007fc	      0xe800000000	                          call 0x4000801	       163	merge.c	FUNCTION_2
0x4000801	              0xc9	                                   leave	       163	merge.c	FUNCTION_2
0x4000802	              0xc3	                                     ret	       163	merge.c	FUNCTION_2
st_mult	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,1:ELSE,0:IF,1	22
0x40000e5	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_93
0x40000e6	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_93
0x40000e9	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_93
0x40000ed	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_93
0x40000f1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_93
0x40000f5	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_93	IF_1
0x40000fa	            0x7430	                            je 0x400012c	       795	git-compat-util.h	FUNCTION_93	IF_1
0x40000fc	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_93	IF_1
0x4000103	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_93	IF_1
0x4000108	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_93	IF_1
0x400010c	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_93	IF_1
0x4000110	            0x731a	                           jae 0x400012c	       795	git-compat-util.h	FUNCTION_93	IF_1
0x4000112	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_93	IF_1	CALL_1
0x4000116	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_93	IF_1	CALL_1
0x400011a	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_93	IF_1	CALL_1
0x400011d	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_93	IF_1	CALL_1
0x4000122	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_93	IF_1	CALL_1
0x4000127	      0xe800000000	                          call 0x400012c	       796	git-compat-util.h	FUNCTION_93	IF_1	CALL_1
0x400012c	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_93
0x4000130	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_93
0x4000135	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_93
0x4000136	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_93
append_strategy	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,0:ELSE,0:IF,0	52
0x4000803	              0x55	                                push rbp	       166	merge.c	FUNCTION_3
0x4000804	          0x4889e5	                            mov rbp, rsp	       166	merge.c	FUNCTION_3
0x4000807	        0x4883ec10	                           sub rsp, 0x10	       166	merge.c	FUNCTION_3
0x400080b	        0x48897df8	                mov qword [rbp - 8], rdi	       166	merge.c	FUNCTION_3
0x400080f	    0x488b05000000	            mov rax, qword [0x04000816] 	       167	merge.c	FUNCTION_3
0x4000816	        0x488d5001	                      lea rdx, [rax + 1]	       167	merge.c	FUNCTION_3
0x400081a	    0x488b05000000	            mov rax, qword [0x04000821] 	       167	merge.c	FUNCTION_3
0x4000821	          0x4839c2	                            cmp rdx, rax	       167	merge.c	FUNCTION_3
0x4000824	     0xf868c000000	                           jbe 0x40008b6	       167	merge.c	FUNCTION_3
0x400082a	    0x488b15000000	            mov rdx, qword [0x04000831] 	       167	merge.c	FUNCTION_3
0x4000831	          0x4889d0	                            mov rax, rdx	       167	merge.c	FUNCTION_3
0x4000834	          0x4801c0	                            add rax, rax	       167	merge.c	FUNCTION_3
0x4000837	          0x4801d0	                            add rax, rdx	       167	merge.c	FUNCTION_3
0x400083a	        0x4883c030	                           add rax, 0x30	       167	merge.c	FUNCTION_3
0x400083e	          0x48d1e8	                              shr rax, 1	       167	merge.c	FUNCTION_3
0x4000841	          0x4889c2	                            mov rdx, rax	       167	merge.c	FUNCTION_3
0x4000844	    0x488b05000000	            mov rax, qword [0x0400084b] 	       167	merge.c	FUNCTION_3
0x400084b	        0x4883c001	                              add rax, 1	       167	merge.c	FUNCTION_3
0x400084f	          0x4839c2	                            cmp rdx, rax	       167	merge.c	FUNCTION_3
0x4000852	            0x7314	                           jae 0x4000868	       167	merge.c	FUNCTION_3
0x4000854	    0x488b05000000	            mov rax, qword [0x0400085b] 	       167	merge.c	FUNCTION_3
0x400085b	        0x4883c001	                              add rax, 1	       167	merge.c	FUNCTION_3
0x400085f	    0x488905000000	            mov qword [0x04000866], rax 	       167	merge.c	FUNCTION_3
0x4000866	            0xeb1e	                           jmp 0x4000886	       167	merge.c	FUNCTION_3
0x4000868	    0x488b15000000	            mov rdx, qword [0x0400086f] 	       167	merge.c	FUNCTION_3
0x400086f	          0x4889d0	                            mov rax, rdx	       167	merge.c	FUNCTION_3
0x4000872	          0x4801c0	                            add rax, rax	       167	merge.c	FUNCTION_3
0x4000875	          0x4801d0	                            add rax, rdx	       167	merge.c	FUNCTION_3
0x4000878	        0x4883c030	                           add rax, 0x30	       167	merge.c	FUNCTION_3
0x400087c	          0x48d1e8	                              shr rax, 1	       167	merge.c	FUNCTION_3
0x400087f	    0x488905000000	            mov qword [0x04000886], rax 	       167	merge.c	FUNCTION_3
0x4000886	    0x488b05000000	            mov rax, qword [0x0400088d] 	       167	merge.c	FUNCTION_3
0x400088d	          0x4889c6	                            mov rsi, rax	       167	merge.c	FUNCTION_3
0x4000890	      0xbf08000000	                              mov edi, 8	       167	merge.c	FUNCTION_3
0x4000895	      0xe84bf8ffff	                        call sym.st_mult	       167	merge.c	FUNCTION_3
0x400089a	          0x4889c2	                            mov rdx, rax	       167	merge.c	FUNCTION_3
0x400089d	    0x488b05000000	            mov rax, qword [0x040008a4] 	       167	merge.c	FUNCTION_3
0x40008a4	          0x4889d6	                            mov rsi, rdx	       167	merge.c	FUNCTION_3
0x40008a7	          0x4889c7	                            mov rdi, rax	       167	merge.c	FUNCTION_3
0x40008aa	      0xe800000000	                          call 0x40008af	       167	merge.c	FUNCTION_3
0x40008af	    0x488905000000	            mov qword [0x040008b6], rax 	       167	merge.c	FUNCTION_3
0x40008b6	    0x488b0d000000	            mov rcx, qword [0x040008bd] 	       168	merge.c	FUNCTION_3
0x40008bd	    0x488b05000000	            mov rax, qword [0x040008c4] 	       168	merge.c	FUNCTION_3
0x40008c4	        0x488d5001	                      lea rdx, [rax + 1]	       168	merge.c	FUNCTION_3
0x40008c8	    0x488915000000	            mov qword [0x040008cf], rdx 	       168	merge.c	FUNCTION_3
0x40008cf	        0x48c1e003	                              shl rax, 3	       168	merge.c	FUNCTION_3
0x40008d3	        0x488d1401	                    lea rdx, [rcx + rax]	       168	merge.c	FUNCTION_3
0x40008d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       168	merge.c	FUNCTION_3
0x40008db	          0x488902	                    mov qword [rdx], rax	       168	merge.c	FUNCTION_3
0x40008de	              0x90	                                     nop	       169	merge.c	FUNCTION_3
0x40008df	              0xc9	                                   leave	       169	merge.c	FUNCTION_3
0x40008e0	              0xc3	                                     ret	       169	merge.c	FUNCTION_3
option_parse_strategy	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,2:ELSE,0:IF,1	18
0x40008e1	              0x55	                                push rbp	       173	merge.c	FUNCTION_4
0x40008e2	          0x4889e5	                            mov rbp, rsp	       173	merge.c	FUNCTION_4
0x40008e5	        0x4883ec20	                           sub rsp, 0x20	       173	merge.c	FUNCTION_4
0x40008e9	        0x48897df8	                mov qword [rbp - 8], rdi	       173	merge.c	FUNCTION_4
0x40008ed	        0x488975f0	             mov qword [rbp - 0x10], rsi	       173	merge.c	FUNCTION_4
0x40008f1	          0x8955ec	             mov dword [rbp - 0x14], edx	       173	merge.c	FUNCTION_4
0x40008f4	        0x837dec00	               cmp dword [rbp - 0x14], 0	       174	merge.c	FUNCTION_4	IF_1
0x40008f8	            0x7407	                            je 0x4000901	       174	merge.c	FUNCTION_4	IF_1
0x40008fa	      0xb800000000	                              mov eax, 0	       175	merge.c	FUNCTION_4	IF_1
0x40008ff	            0xeb19	                           jmp 0x400091a	       175	merge.c	FUNCTION_4	IF_1
0x4000901	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       177	merge.c	FUNCTION_4	CALL_2
0x4000905	          0x4889c7	                            mov rdi, rax	       177	merge.c	FUNCTION_4	CALL_2
0x4000908	      0xe877fbffff	                   call sym.get_strategy	       177	merge.c	FUNCTION_4	CALL_2
0x400090d	          0x4889c7	                            mov rdi, rax	       177	merge.c	FUNCTION_4	CALL_2
0x4000910	      0xe8eefeffff	                call sym.append_strategy	       177	merge.c	FUNCTION_4	CALL_2
0x4000915	      0xb800000000	                              mov eax, 0	       178	merge.c	FUNCTION_4
0x400091a	              0xc9	                                   leave	       179	merge.c	FUNCTION_4
0x400091b	              0xc3	                                     ret	       179	merge.c	FUNCTION_4
evaluate_result	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,4:ELSE,0:IF,0	39
0x4002d12	              0x55	                                push rbp	       876	merge.c	FUNCTION_30
0x4002d13	          0x4889e5	                            mov rbp, rsp	       876	merge.c	FUNCTION_30
0x4002d16	    0x4881ecd00800	                          sub rsp, 0x8d0	       876	merge.c	FUNCTION_30
0x4002d1d	    0x64488b042528	                mov rax, qword fs:[0x28]	       876	merge.c	FUNCTION_30
0x4002d26	        0x488945f8	                mov qword [rbp - 8], rax	       876	merge.c	FUNCTION_30
0x4002d2a	            0x31c0	                            xor eax, eax	       876	merge.c	FUNCTION_30
0x4002d2c	    0xc7853cf7ffff	              mov dword [rbp - 0x8c4], 0	       877	merge.c	FUNCTION_30
0x4002d36	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       881	merge.c	FUNCTION_30	CALL_1
0x4002d3d	      0xbe00000000	                              mov esi, 0	       881	merge.c	FUNCTION_30	CALL_1
0x4002d42	          0x4889c7	                            mov rdi, rax	       881	merge.c	FUNCTION_30	CALL_1
0x4002d45	      0xe800000000	                          call 0x4002d4a	       881	merge.c	FUNCTION_30	CALL_1
0x4002d4a	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       882	merge.c	FUNCTION_30	CALL_2
0x4002d51	      0xb900000000	                              mov ecx, 0	       882	merge.c	FUNCTION_30	CALL_2
0x4002d56	          0x4889c2	                            mov rdx, rax	       882	merge.c	FUNCTION_30	CALL_2
0x4002d59	      0xbe00000000	                              mov esi, 0	       882	merge.c	FUNCTION_30	CALL_2
0x4002d5e	      0xbf00000000	                              mov edi, 0	       882	merge.c	FUNCTION_30	CALL_2
0x4002d63	      0xe800000000	                          call 0x4002d68	       882	merge.c	FUNCTION_30	CALL_2
0x4002d68	    0x8b8598fcffff	            mov eax, dword [rbp - 0x368]	       883	merge.c	FUNCTION_30
0x4002d6e	          0x80cc10	                             or ah, 0x10	       883	merge.c	FUNCTION_30
0x4002d71	    0x898598fcffff	            mov dword [rbp - 0x368], eax	       883	merge.c	FUNCTION_30
0x4002d77	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	       885	merge.c	FUNCTION_30
0x4002d82	    0x488d853cf7ff	                  lea rax, [rbp - 0x8c4]	       886	merge.c	FUNCTION_30
0x4002d89	    0x48898588fdff	            mov qword [rbp - 0x278], rax	       886	merge.c	FUNCTION_30
0x4002d90	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       887	merge.c	FUNCTION_30	CALL_3
0x4002d97	      0xbe00000000	                              mov esi, 0	       887	merge.c	FUNCTION_30	CALL_3
0x4002d9c	          0x4889c7	                            mov rdi, rax	       887	merge.c	FUNCTION_30	CALL_3
0x4002d9f	      0xe800000000	                          call 0x4002da4	       887	merge.c	FUNCTION_30	CALL_3
0x4002da4	      0xe81bf7ffff	         call sym.count_unmerged_entries	       893	merge.c	FUNCTION_30	CALL_4
0x4002da9	            0x89c2	                            mov edx, eax	       893	merge.c	FUNCTION_30	CALL_4
0x4002dab	    0x8b853cf7ffff	            mov eax, dword [rbp - 0x8c4]	       893	merge.c	FUNCTION_30	CALL_4
0x4002db1	             0x1d0	                            add eax, edx	       893	merge.c	FUNCTION_30	CALL_4
0x4002db3	    0x89853cf7ffff	            mov dword [rbp - 0x8c4], eax	       893	merge.c	FUNCTION_30	CALL_4
0x4002db9	    0x8b853cf7ffff	            mov eax, dword [rbp - 0x8c4]	       895	merge.c	FUNCTION_30
0x4002dbf	        0x488b4df8	                mov rcx, qword [rbp - 8]	       896	merge.c	FUNCTION_30
0x4002dc3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       896	merge.c	FUNCTION_30
0x4002dcc	            0x7405	                            je 0x4002dd3	       896	merge.c	FUNCTION_30
0x4002dce	      0xe800000000	                          call 0x4002dd3	       896	merge.c	FUNCTION_30
0x4002dd3	              0xc9	                                   leave	       896	merge.c	FUNCTION_30
0x4002dd4	              0xc3	                                     ret	       896	merge.c	FUNCTION_30
option_parse_n	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,0:ELSE,0:IF,0	10
0x4000a23	              0x55	                                push rbp	       194	merge.c	FUNCTION_6
0x4000a24	          0x4889e5	                            mov rbp, rsp	       194	merge.c	FUNCTION_6
0x4000a27	        0x48897df8	                mov qword [rbp - 8], rdi	       194	merge.c	FUNCTION_6
0x4000a2b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       194	merge.c	FUNCTION_6
0x4000a2f	          0x8955ec	             mov dword [rbp - 0x14], edx	       194	merge.c	FUNCTION_6
0x4000a32	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       195	merge.c	FUNCTION_6
0x4000a35	    0x890500000000	            mov dword [0x04000a3b], eax 	       195	merge.c	FUNCTION_6
0x4000a3b	      0xb800000000	                              mov eax, 0	       196	merge.c	FUNCTION_6
0x4000a40	              0x5d	                                 pop rbp	       197	merge.c	FUNCTION_6
0x4000a41	              0xc3	                                     ret	       197	merge.c	FUNCTION_6
read_empty	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,4:ELSE,0:IF,2	69
0x4000c45	              0x55	                                push rbp	       284	merge.c	FUNCTION_9
0x4000c46	          0x4889e5	                            mov rbp, rsp	       284	merge.c	FUNCTION_9
0x4000c49	              0x53	                                push rbx	       284	merge.c	FUNCTION_9
0x4000c4a	        0x4883ec68	                           sub rsp, 0x68	       284	merge.c	FUNCTION_9
0x4000c4e	        0x48897d98	             mov qword [rbp - 0x68], rdi	       284	merge.c	FUNCTION_9
0x4000c52	          0x897594	             mov dword [rbp - 0x6c], esi	       284	merge.c	FUNCTION_9
0x4000c55	    0x64488b042528	                mov rax, qword fs:[0x28]	       284	merge.c	FUNCTION_9
0x4000c5e	        0x488945e8	             mov qword [rbp - 0x18], rax	       284	merge.c	FUNCTION_9
0x4000c62	            0x31c0	                            xor eax, eax	       284	merge.c	FUNCTION_9
0x4000c64	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       285	merge.c	FUNCTION_9
0x4000c6b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       288	merge.c	FUNCTION_9
0x4000c6e	          0x8d5001	                      lea edx, [rax + 1]	       288	merge.c	FUNCTION_9
0x4000c71	          0x8955ac	             mov dword [rbp - 0x54], edx	       288	merge.c	FUNCTION_9
0x4000c74	            0x4898	                                    cdqe	       288	merge.c	FUNCTION_9
0x4000c76	    0x48c744c5b000	       mov qword [rbp + rax*8 - 0x50], 0	       288	merge.c	FUNCTION_9
0x4000c7f	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       289	merge.c	FUNCTION_9	IF_1
0x4000c83	            0x7414	                            je 0x4000c99	       289	merge.c	FUNCTION_9	IF_1
0x4000c85	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       290	merge.c	FUNCTION_9	IF_1
0x4000c88	          0x8d5001	                      lea edx, [rax + 1]	       290	merge.c	FUNCTION_9	IF_1
0x4000c8b	          0x8955ac	             mov dword [rbp - 0x54], edx	       290	merge.c	FUNCTION_9	IF_1
0x4000c8e	            0x4898	                                    cdqe	       290	merge.c	FUNCTION_9	IF_1
0x4000c90	    0x48c744c5b000	       mov qword [rbp + rax*8 - 0x50], 0	       290	merge.c	FUNCTION_9	IF_1
0x4000c99	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       291	merge.c	FUNCTION_9
0x4000c9c	          0x8d5001	                      lea edx, [rax + 1]	       291	merge.c	FUNCTION_9
0x4000c9f	          0x8955ac	             mov dword [rbp - 0x54], edx	       291	merge.c	FUNCTION_9
0x4000ca2	            0x4898	                                    cdqe	       291	merge.c	FUNCTION_9
0x4000ca4	    0x48c744c5b000	       mov qword [rbp + rax*8 - 0x50], 0	       291	merge.c	FUNCTION_9
0x4000cad	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       292	merge.c	FUNCTION_9
0x4000cb0	          0x8d5001	                      lea edx, [rax + 1]	       292	merge.c	FUNCTION_9
0x4000cb3	          0x8955ac	             mov dword [rbp - 0x54], edx	       292	merge.c	FUNCTION_9
0x4000cb6	            0x4898	                                    cdqe	       292	merge.c	FUNCTION_9
0x4000cb8	    0x48c744c5b000	       mov qword [rbp + rax*8 - 0x50], 0	       292	merge.c	FUNCTION_9
0x4000cc1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       293	merge.c	FUNCTION_9
0x4000cc4	          0x8d5001	                      lea edx, [rax + 1]	       293	merge.c	FUNCTION_9
0x4000cc7	          0x8955ac	             mov dword [rbp - 0x54], edx	       293	merge.c	FUNCTION_9
0x4000cca	            0x4898	                                    cdqe	       293	merge.c	FUNCTION_9
0x4000ccc	    0x48c744c5b000	       mov qword [rbp + rax*8 - 0x50], 0	       293	merge.c	FUNCTION_9
0x4000cd5	          0x8b5dac	             mov ebx, dword [rbp - 0x54]	       294	merge.c	FUNCTION_9	CALL_1
0x4000cd8	          0x8d4301	                      lea eax, [rbx + 1]	       294	merge.c	FUNCTION_9	CALL_1
0x4000cdb	          0x8945ac	             mov dword [rbp - 0x54], eax	       294	merge.c	FUNCTION_9	CALL_1
0x4000cde	        0x488b4598	             mov rax, qword [rbp - 0x68]	       294	merge.c	FUNCTION_9	CALL_1
0x4000ce2	          0x4889c7	                            mov rdi, rax	       294	merge.c	FUNCTION_9	CALL_1
0x4000ce5	      0xe800000000	                          call 0x4000cea	       294	merge.c	FUNCTION_9	CALL_1
0x4000cea	          0x4889c2	                            mov rdx, rax	       294	merge.c	FUNCTION_9	CALL_1
0x4000ced	          0x4863c3	                         movsxd rax, ebx	       294	merge.c	FUNCTION_9	CALL_1
0x4000cf0	      0x488954c5b0	     mov qword [rbp + rax*8 - 0x50], rdx	       294	merge.c	FUNCTION_9	CALL_1
0x4000cf5	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       295	merge.c	FUNCTION_9
0x4000cf8	            0x4898	                                    cdqe	       295	merge.c	FUNCTION_9
0x4000cfa	    0x48c744c5b000	       mov qword [rbp + rax*8 - 0x50], 0	       295	merge.c	FUNCTION_9
0x4000d03	        0x488d45b0	                   lea rax, [rbp - 0x50]	       297	merge.c	FUNCTION_9	IF_2	CALL_2
0x4000d07	      0xbe02000000	                              mov esi, 2	       297	merge.c	FUNCTION_9	IF_2	CALL_2
0x4000d0c	          0x4889c7	                            mov rdi, rax	       297	merge.c	FUNCTION_9	IF_2	CALL_2
0x4000d0f	      0xe800000000	                          call 0x4000d14	       297	merge.c	FUNCTION_9	IF_2	CALL_2
0x4000d14	            0x85c0	                           test eax, eax	       297	merge.c	FUNCTION_9	IF_2	CALL_2
0x4000d16	            0x7417	                            je 0x4000d2f	       297	merge.c	FUNCTION_9	IF_2	CALL_2
0x4000d18	      0xbf00000000	                              mov edi, 0	       298	merge.c	FUNCTION_9	CALL_4
0x4000d1d	      0xe8d3f5ffff	                               call sym.	       298	merge.c	FUNCTION_9	CALL_4
0x4000d22	          0x4889c7	                            mov rdi, rax	       298	merge.c	FUNCTION_9	CALL_4
0x4000d25	      0xb800000000	                              mov eax, 0	       298	merge.c	FUNCTION_9	CALL_4
0x4000d2a	      0xe800000000	                          call 0x4000d2f	       298	merge.c	FUNCTION_9	CALL_4
0x4000d2f	              0x90	                                     nop	       299	merge.c	FUNCTION_9
0x4000d30	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       299	merge.c	FUNCTION_9
0x4000d34	    0x644833042528	                xor rax, qword fs:[0x28]	       299	merge.c	FUNCTION_9
0x4000d3d	            0x7405	                            je 0x4000d44	       299	merge.c	FUNCTION_9
0x4000d3f	      0xe800000000	                          call 0x4000d44	       299	merge.c	FUNCTION_9
0x4000d44	        0x4883c468	                           add rsp, 0x68	       299	merge.c	FUNCTION_9
0x4000d48	              0x5b	                                 pop rbx	       299	merge.c	FUNCTION_9
0x4000d49	              0x5d	                                 pop rbp	       299	merge.c	FUNCTION_9
0x4000d4a	              0xc3	                                     ret	       299	merge.c	FUNCTION_9
restore_state	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,5:ELSE,0:IF,1	49
0x4000e3d	              0x55	                                push rbp	       320	merge.c	FUNCTION_11
0x4000e3e	          0x4889e5	                            mov rbp, rsp	       320	merge.c	FUNCTION_11
0x4000e41	        0x4883ec60	                           sub rsp, 0x60	       320	merge.c	FUNCTION_11
0x4000e45	        0x48897da8	             mov qword [rbp - 0x58], rdi	       320	merge.c	FUNCTION_11
0x4000e49	        0x488975a0	             mov qword [rbp - 0x60], rsi	       320	merge.c	FUNCTION_11
0x4000e4d	    0x64488b042528	                mov rax, qword fs:[0x28]	       320	merge.c	FUNCTION_11
0x4000e56	        0x488945f8	                mov qword [rbp - 8], rax	       320	merge.c	FUNCTION_11
0x4000e5a	            0x31c0	                            xor eax, eax	       320	merge.c	FUNCTION_11
0x4000e5c	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       321	merge.c	FUNCTION_11
0x4000e64	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       321	merge.c	FUNCTION_11
0x4000e6c	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       321	merge.c	FUNCTION_11
0x4000e74	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       322	merge.c	FUNCTION_11
0x4000e7c	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       322	merge.c	FUNCTION_11
0x4000e84	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       322	merge.c	FUNCTION_11
0x4000e8c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       322	merge.c	FUNCTION_11
0x4000e94	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       324	merge.c	FUNCTION_11	IF_1	CALL_1
0x4000e98	          0x4889c7	                            mov rdi, rax	       324	merge.c	FUNCTION_11	IF_1	CALL_1
0x4000e9b	      0xe8d0f4ffff	                    call sym.is_null_oid	       324	merge.c	FUNCTION_11	IF_1	CALL_1
0x4000ea0	            0x85c0	                           test eax, eax	       324	merge.c	FUNCTION_11	IF_1	CALL_1
0x4000ea2	            0x755f	                           jne 0x4000f03	       324	merge.c	FUNCTION_11	IF_1	CALL_1
0x4000ea4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       327	merge.c	FUNCTION_11	CALL_2
0x4000ea8	      0xbe01000000	                              mov esi, 1	       327	merge.c	FUNCTION_11	CALL_2
0x4000ead	          0x4889c7	                            mov rdi, rax	       327	merge.c	FUNCTION_11	CALL_2
0x4000eb0	      0xe896feffff	                     call sym.reset_hard	       327	merge.c	FUNCTION_11	CALL_2
0x4000eb5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       329	merge.c	FUNCTION_11	CALL_3
0x4000eb9	          0x4889c7	                            mov rdi, rax	       329	merge.c	FUNCTION_11	CALL_3
0x4000ebc	      0xe800000000	                          call 0x4000ec1	       329	merge.c	FUNCTION_11	CALL_3
0x4000ec1	        0x488945e0	             mov qword [rbp - 0x20], rax	       329	merge.c	FUNCTION_11	CALL_3
0x4000ec5	        0x488d45d0	                   lea rax, [rbp - 0x30]	       335	merge.c	FUNCTION_11	CALL_4
0x4000ec9	      0xbe02000000	                              mov esi, 2	       335	merge.c	FUNCTION_11	CALL_4
0x4000ece	          0x4889c7	                            mov rdi, rax	       335	merge.c	FUNCTION_11	CALL_4
0x4000ed1	      0xe800000000	                          call 0x4000ed6	       335	merge.c	FUNCTION_11	CALL_4
0x4000ed6	        0x488d45b0	                   lea rax, [rbp - 0x50]	       337	merge.c	FUNCTION_11	CALL_5
0x4000eda	          0x4889c7	                            mov rdi, rax	       337	merge.c	FUNCTION_11	CALL_5
0x4000edd	      0xe800000000	                          call 0x4000ee2	       337	merge.c	FUNCTION_11	CALL_5
0x4000ee2	    0x41b800000000	                              mov r8d, 0	       338	merge.c	FUNCTION_11
0x4000ee8	      0xb900000000	                              mov ecx, 0	       338	merge.c	FUNCTION_11
0x4000eed	      0xba00000000	                              mov edx, 0	       338	merge.c	FUNCTION_11
0x4000ef2	      0xbe04000000	                              mov esi, 4	       338	merge.c	FUNCTION_11
0x4000ef7	      0xbf00000000	                              mov edi, 0	       338	merge.c	FUNCTION_11
0x4000efc	      0xe800000000	                          call 0x4000f01	       338	merge.c	FUNCTION_11
0x4000f01	            0xeb01	                           jmp 0x4000f04	       338	merge.c	FUNCTION_11
0x4000f03	              0x90	                                     nop	       325	merge.c	FUNCTION_11	IF_1
0x4000f04	        0x488b45f8	                mov rax, qword [rbp - 8]	       339	merge.c	FUNCTION_11
0x4000f08	    0x644833042528	                xor rax, qword fs:[0x28]	       339	merge.c	FUNCTION_11
0x4000f11	            0x7405	                            je 0x4000f18	       339	merge.c	FUNCTION_11
0x4000f13	      0xe800000000	                          call 0x4000f18	       339	merge.c	FUNCTION_11
0x4000f18	              0xc9	                                   leave	       339	merge.c	FUNCTION_11
0x4000f19	              0xc3	                                     ret	       339	merge.c	FUNCTION_11
git_merge_config	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,27:ELSE,8:IF,13	203
0x4001b5e	              0x55	                                push rbp	       558	merge.c	FUNCTION_17
0x4001b5f	          0x4889e5	                            mov rbp, rsp	       558	merge.c	FUNCTION_17
0x4001b62	        0x4883ec30	                           sub rsp, 0x30	       558	merge.c	FUNCTION_17
0x4001b66	        0x48897de8	             mov qword [rbp - 0x18], rdi	       558	merge.c	FUNCTION_17
0x4001b6a	        0x488975e0	             mov qword [rbp - 0x20], rsi	       558	merge.c	FUNCTION_17
0x4001b6e	        0x488955d8	             mov qword [rbp - 0x28], rdx	       558	merge.c	FUNCTION_17
0x4001b72	    0x488b05000000	            mov rax, qword [0x04001b79] 	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4001b79	          0x4885c0	                           test rax, rax	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4001b7c	     0xf848a000000	                            je 0x4001c0c	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4001b82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4001b86	      0xbe00000000	                              mov esi, 0	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4001b8b	          0x4889c7	                            mov rdi, rax	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4001b8e	      0xe800000000	                          call 0x4001b93	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4001b93	            0x85c0	                           test eax, eax	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4001b95	            0x7475	                            je 0x4001c0c	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4001b97	    0x488b05000000	            mov rax, qword [0x04001b9e] 	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x4001b9e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x4001ba2	        0x4883c207	                              add rdx, 7	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x4001ba6	          0x4889c6	                            mov rsi, rax	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x4001ba9	          0x4889d7	                            mov rdi, rdx	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x4001bac	      0xe800000000	                          call 0x4001bb1	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x4001bb1	            0x85c0	                           test eax, eax	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4001bb3	            0x7457	                            je 0x4001c0c	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4001bb5	    0x488b05000000	            mov rax, qword [0x04001bbc] 	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4001bbc	          0x4889c7	                            mov rdi, rax	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4001bbf	      0xe800000000	                          call 0x4001bc4	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4001bc4	        0x488d5007	                      lea rdx, [rax + 7]	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4001bc8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4001bcc	          0x4801d0	                            add rax, rdx	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4001bcf	      0xbe00000000	                              mov esi, 0	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4001bd4	          0x4889c7	                            mov rdi, rax	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4001bd7	      0xe800000000	                          call 0x4001bdc	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4001bdc	            0x85c0	                           test eax, eax	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x4001bde	            0x752c	                           jne 0x4001c0c	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x4001be0	    0x488b05000000	            mov rax, qword [0x04001be7] 	       564	merge.c	FUNCTION_17	IF_1	CALL_5
0x4001be7	          0x4889c7	                            mov rdi, rax	       564	merge.c	FUNCTION_17	IF_1	CALL_5
0x4001bea	      0xe800000000	                          call 0x4001bef	       564	merge.c	FUNCTION_17	IF_1	CALL_5
0x4001bef	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       565	merge.c	FUNCTION_17	IF_1	CALL_6
0x4001bf3	          0x4889c7	                            mov rdi, rax	       565	merge.c	FUNCTION_17	IF_1	CALL_6
0x4001bf6	      0xe800000000	                          call 0x4001bfb	       565	merge.c	FUNCTION_17	IF_1	CALL_6
0x4001bfb	    0x488905000000	            mov qword [0x04001c02], rax 	       565	merge.c	FUNCTION_17	IF_1	CALL_6
0x4001c02	      0xb800000000	                              mov eax, 0	       566	merge.c	FUNCTION_17	IF_1
0x4001c07	      0xe958020000	                           jmp 0x4001e64	       566	merge.c	FUNCTION_17	IF_1
0x4001c0c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4001c10	      0xbe00000000	                              mov esi, 0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4001c15	          0x4889c7	                            mov rdi, rax	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4001c18	      0xe800000000	                          call 0x4001c1d	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4001c1d	            0x85c0	                           test eax, eax	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4001c1f	            0x7415	                            je 0x4001c36	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4001c21	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4001c25	      0xbe00000000	                              mov esi, 0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4001c2a	          0x4889c7	                            mov rdi, rax	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4001c2d	      0xe800000000	                          call 0x4001c32	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4001c32	            0x85c0	                           test eax, eax	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4001c34	            0x751e	                           jne 0x4001c54	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4001c36	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       570	merge.c	FUNCTION_17	CALL_9
0x4001c3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       570	merge.c	FUNCTION_17	CALL_9
0x4001c3e	          0x4889d6	                            mov rsi, rdx	       570	merge.c	FUNCTION_17	CALL_9
0x4001c41	          0x4889c7	                            mov rdi, rax	       570	merge.c	FUNCTION_17	CALL_9
0x4001c44	      0xe800000000	                          call 0x4001c49	       570	merge.c	FUNCTION_17	CALL_9
0x4001c49	    0x890500000000	            mov dword [0x04001c4f], eax 	       570	merge.c	FUNCTION_17	CALL_9
0x4001c4f	      0xe9ae010000	                           jmp 0x4001e02	       570	merge.c	FUNCTION_17	CALL_9
0x4001c54	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x4001c58	      0xbe00000000	                              mov esi, 0	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x4001c5d	          0x4889c7	                            mov rdi, rax	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x4001c60	      0xe800000000	                          call 0x4001c65	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x4001c65	            0x85c0	                           test eax, eax	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x4001c67	            0x751e	                           jne 0x4001c87	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x4001c69	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x4001c6d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x4001c71	          0x4889d6	                            mov rsi, rdx	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x4001c74	          0x4889c7	                            mov rdi, rax	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x4001c77	      0xe800000000	                          call 0x4001c7c	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x4001c7c	    0x890500000000	            mov dword [0x04001c82], eax 	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x4001c82	      0xe97b010000	                           jmp 0x4001e02	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x4001c87	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4001c8b	      0xbe00000000	                              mov esi, 0	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4001c90	          0x4889c7	                            mov rdi, rax	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4001c93	      0xe800000000	                          call 0x4001c98	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4001c98	            0x85c0	                           test eax, eax	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4001c9a	            0x751a	                           jne 0x4001cb6	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4001c9c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x4001ca0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x4001ca4	          0x4889c6	                            mov rsi, rax	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x4001ca7	      0xbf00000000	                              mov edi, 0	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x4001cac	      0xe800000000	                          call 0x4001cb1	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x4001cb1	      0xe9ae010000	                           jmp 0x4001e64	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x4001cb6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4001cba	      0xbe00000000	                              mov esi, 0	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4001cbf	          0x4889c7	                            mov rdi, rax	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4001cc2	      0xe800000000	                          call 0x4001cc7	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4001cc7	            0x85c0	                           test eax, eax	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4001cc9	            0x751a	                           jne 0x4001ce5	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4001ccb	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x4001ccf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x4001cd3	          0x4889c6	                            mov rsi, rax	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x4001cd6	      0xbf00000000	                              mov edi, 0	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x4001cdb	      0xe800000000	                          call 0x4001ce0	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x4001ce0	      0xe97f010000	                           jmp 0x4001e64	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x4001ce5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4001ce9	      0xbe00000000	                              mov esi, 0	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4001cee	          0x4889c7	                            mov rdi, rax	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4001cf1	      0xe800000000	                          call 0x4001cf6	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4001cf6	            0x85c0	                           test eax, eax	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4001cf8	            0x751e	                           jne 0x4001d18	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4001cfa	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x4001cfe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x4001d02	          0x4889d6	                            mov rsi, rdx	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x4001d05	          0x4889c7	                            mov rdi, rax	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x4001d08	      0xe800000000	                          call 0x4001d0d	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x4001d0d	    0x890500000000	            mov dword [0x04001d13], eax 	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x4001d13	      0xe9ea000000	                           jmp 0x4001e02	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x4001d18	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4001d1c	      0xbe00000000	                              mov esi, 0	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4001d21	          0x4889c7	                            mov rdi, rax	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4001d24	      0xe800000000	                          call 0x4001d29	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4001d29	            0x85c0	                           test eax, eax	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4001d2b	            0x7557	                           jne 0x4001d84	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4001d2d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       580	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_19
0x4001d31	          0x4889c7	                            mov rdi, rax	       580	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_19
0x4001d34	      0xe800000000	                          call 0x4001d39	       580	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_19
0x4001d39	          0x8945f8	                mov dword [rbp - 8], eax	       580	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_19
0x4001d3c	        0x837df800	                  cmp dword [rbp - 8], 0	       581	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x4001d40	            0x7812	                            js 0x4001d54	       581	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x4001d42	        0x837df800	                  cmp dword [rbp - 8], 0	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x4001d46	           0xf95c0	                                setne al	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x4001d49	           0xfb6c0	                           movzx eax, al	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x4001d4c	    0x890500000000	            mov dword [0x04001d52], eax 	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x4001d52	            0xeb26	                           jmp 0x4001d7a	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x4001d54	      0x48837de000	               cmp qword [rbp - 0x20], 0	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4001d59	            0x741f	                            je 0x4001d7a	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4001d5b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4001d5f	      0xbe00000000	                              mov esi, 0	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4001d64	          0x4889c7	                            mov rdi, rax	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4001d67	      0xe800000000	                          call 0x4001d6c	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4001d6c	            0x85c0	                           test eax, eax	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4001d6e	            0x750a	                           jne 0x4001d7a	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4001d70	    0xc70500000000	               mov dword [0x04001d7a], 2	       584	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9
0x4001d7a	      0xb800000000	                              mov eax, 0	       586	merge.c	FUNCTION_17	ELSE_5	IF_7
0x4001d7f	      0xe9e0000000	                           jmp 0x4001e64	       586	merge.c	FUNCTION_17	ELSE_5	IF_7
0x4001d84	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4001d88	      0xbe00000000	                              mov esi, 0	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4001d8d	          0x4889c7	                            mov rdi, rax	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4001d90	      0xe800000000	                          call 0x4001d95	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4001d95	            0x85c0	                           test eax, eax	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4001d97	            0x7523	                           jne 0x4001dbc	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4001d99	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4001d9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4001da1	          0x4889d6	                            mov rsi, rdx	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4001da4	          0x4889c7	                            mov rdi, rax	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4001da7	      0xe800000000	                          call 0x4001dac	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4001dac	    0x890500000000	            mov dword [0x04001db2], eax 	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4001db2	      0xb800000000	                              mov eax, 0	       589	merge.c	FUNCTION_17	ELSE_7	IF_10
0x4001db7	      0xe9a8000000	                           jmp 0x4001e64	       589	merge.c	FUNCTION_17	ELSE_7	IF_10
0x4001dbc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4001dc0	      0xbe00000000	                              mov esi, 0	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4001dc5	          0x4889c7	                            mov rdi, rax	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4001dc8	      0xe800000000	                          call 0x4001dcd	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4001dcd	            0x85c0	                           test eax, eax	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4001dcf	            0x7531	                           jne 0x4001e02	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4001dd1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x4001dd5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x4001dd9	          0x4889d6	                            mov rsi, rdx	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x4001ddc	          0x4889c7	                            mov rdi, rax	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x4001ddf	      0xe800000000	                          call 0x4001de4	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x4001de4	            0x85c0	                           test eax, eax	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x4001de6	            0x7407	                            je 0x4001def	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x4001de8	      0xb800000000	                              mov eax, 0	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x4001ded	            0xeb05	                           jmp 0x4001df4	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x4001def	      0xb800000000	                              mov eax, 0	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x4001df4	    0x488905000000	            mov qword [0x04001dfb], rax 	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x4001dfb	      0xb800000000	                              mov eax, 0	       592	merge.c	FUNCTION_17	ELSE_8	IF_11
0x4001e00	            0xeb62	                           jmp 0x4001e64	       592	merge.c	FUNCTION_17	ELSE_8	IF_11
0x4001e02	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       595	merge.c	FUNCTION_17	CALL_25
0x4001e06	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       595	merge.c	FUNCTION_17	CALL_25
0x4001e0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       595	merge.c	FUNCTION_17	CALL_25
0x4001e0e	          0x4889ce	                            mov rsi, rcx	       595	merge.c	FUNCTION_17	CALL_25
0x4001e11	          0x4889c7	                            mov rdi, rax	       595	merge.c	FUNCTION_17	CALL_25
0x4001e14	      0xe800000000	                          call 0x4001e19	       595	merge.c	FUNCTION_17	CALL_25
0x4001e19	          0x8945fc	                mov dword [rbp - 4], eax	       595	merge.c	FUNCTION_17	CALL_25
0x4001e1c	        0x837dfc00	                  cmp dword [rbp - 4], 0	       596	merge.c	FUNCTION_17	IF_12
0x4001e20	            0x7405	                            je 0x4001e27	       596	merge.c	FUNCTION_17	IF_12
0x4001e22	          0x8b45fc	                mov eax, dword [rbp - 4]	       597	merge.c	FUNCTION_17	IF_12
0x4001e25	            0xeb3d	                           jmp 0x4001e64	       597	merge.c	FUNCTION_17	IF_12
0x4001e27	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       598	merge.c	FUNCTION_17	CALL_26
0x4001e2b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       598	merge.c	FUNCTION_17	CALL_26
0x4001e2f	      0xba00000000	                              mov edx, 0	       598	merge.c	FUNCTION_17	CALL_26
0x4001e34	          0x4889ce	                            mov rsi, rcx	       598	merge.c	FUNCTION_17	CALL_26
0x4001e37	          0x4889c7	                            mov rdi, rax	       598	merge.c	FUNCTION_17	CALL_26
0x4001e3a	      0xe800000000	                          call 0x4001e3f	       598	merge.c	FUNCTION_17	CALL_26
0x4001e3f	          0x8945fc	                mov dword [rbp - 4], eax	       598	merge.c	FUNCTION_17	CALL_26
0x4001e42	        0x837dfc00	                  cmp dword [rbp - 4], 0	       599	merge.c	FUNCTION_17	IF_13
0x4001e46	            0x7405	                            je 0x4001e4d	       599	merge.c	FUNCTION_17	IF_13
0x4001e48	          0x8b45fc	                mov eax, dword [rbp - 4]	       600	merge.c	FUNCTION_17	IF_13
0x4001e4b	            0xeb17	                           jmp 0x4001e64	       600	merge.c	FUNCTION_17	IF_13
0x4001e4d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       601	merge.c	FUNCTION_17	CALL_27
0x4001e51	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       601	merge.c	FUNCTION_17	CALL_27
0x4001e55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       601	merge.c	FUNCTION_17	CALL_27
0x4001e59	          0x4889ce	                            mov rsi, rcx	       601	merge.c	FUNCTION_17	CALL_27
0x4001e5c	          0x4889c7	                            mov rdi, rax	       601	merge.c	FUNCTION_17	CALL_27
0x4001e5f	      0xe800000000	                          call 0x4001e64	       601	merge.c	FUNCTION_17	CALL_27
0x4001e64	              0xc9	                                   leave	       602	merge.c	FUNCTION_17
0x4001e65	              0xc3	                                     ret	       602	merge.c	FUNCTION_17
is_null_oid	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,1:ELSE,0:IF,0	13
0x4000370	              0x55	                                push rbp	       989	cache.h	FUNCTION_51
0x4000371	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_51
0x4000374	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_51
0x4000378	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_51
0x400037c	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_51	CALL_1
0x4000380	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_51	CALL_1
0x4000385	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_51	CALL_1
0x4000388	      0xe894ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_51	CALL_1
0x400038d	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_51	CALL_1
0x400038f	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_51	CALL_1
0x4000392	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_51	CALL_1
0x4000395	              0xc9	                                   leave	       991	cache.h	FUNCTION_51
0x4000396	              0xc3	                                     ret	       991	cache.h	FUNCTION_51
add_strategies	FOR,1:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,6:ELSE,0:IF,2	74
0x4002518	              0x55	                                push rbp	       724	merge.c	FUNCTION_23
0x4002519	          0x4889e5	                            mov rbp, rsp	       724	merge.c	FUNCTION_23
0x400251c	        0x4883ec50	                           sub rsp, 0x50	       724	merge.c	FUNCTION_23
0x4002520	        0x48897db8	             mov qword [rbp - 0x48], rdi	       724	merge.c	FUNCTION_23
0x4002524	          0x8975b4	             mov dword [rbp - 0x4c], esi	       724	merge.c	FUNCTION_23
0x4002527	    0x64488b042528	                mov rax, qword fs:[0x28]	       724	merge.c	FUNCTION_23
0x4002530	        0x488945f8	                mov qword [rbp - 8], rax	       724	merge.c	FUNCTION_23
0x4002534	            0x31c0	                            xor eax, eax	       724	merge.c	FUNCTION_23
0x4002536	      0x48837db800	               cmp qword [rbp - 0x48], 0	       727	merge.c	FUNCTION_23	IF_1
0x400253b	     0xf8499000000	                            je 0x40025da	       727	merge.c	FUNCTION_23	IF_1
0x4002541	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       728	merge.c	FUNCTION_23	IF_1
0x4002549	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       728	merge.c	FUNCTION_23	IF_1
0x4002550	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       728	merge.c	FUNCTION_23	IF_1
0x4002557	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       728	merge.c	FUNCTION_23	IF_1
0x400255b	          0x83c801	                               or eax, 1	       728	merge.c	FUNCTION_23	IF_1
0x400255e	          0x8845e0	               mov byte [rbp - 0x20], al	       728	merge.c	FUNCTION_23	IF_1
0x4002561	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       728	merge.c	FUNCTION_23	IF_1
0x4002569	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       730	merge.c	FUNCTION_23	IF_1	CALL_1
0x400256d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       730	merge.c	FUNCTION_23	IF_1	CALL_1
0x4002571	      0xb9ffffffff	                     mov ecx, 0xffffffff	       730	merge.c	FUNCTION_23	IF_1	CALL_1
0x4002576	      0xba20000000	                           mov edx, 0x20	       730	merge.c	FUNCTION_23	IF_1	CALL_1
0x400257b	          0x4889c7	                            mov rdi, rax	       730	merge.c	FUNCTION_23	IF_1	CALL_1
0x400257e	      0xe800000000	                          call 0x4002583	       730	merge.c	FUNCTION_23	IF_1	CALL_1
0x4002583	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x4002587	        0x488945c8	             mov qword [rbp - 0x38], rax	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x400258b	            0xeb1c	                           jmp 0x40025a9	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x400258d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       732	merge.c	FUNCTION_23	IF_1	CALL_4
0x4002591	          0x488b00	                    mov rax, qword [rax]	       732	merge.c	FUNCTION_23	IF_1	CALL_4
0x4002594	          0x4889c7	                            mov rdi, rax	       732	merge.c	FUNCTION_23	IF_1	CALL_4
0x4002597	      0xe8e8deffff	                   call sym.get_strategy	       732	merge.c	FUNCTION_23	IF_1	CALL_4
0x400259c	          0x4889c7	                            mov rdi, rax	       732	merge.c	FUNCTION_23	IF_1	CALL_4
0x400259f	      0xe85fe2ffff	                call sym.append_strategy	       732	merge.c	FUNCTION_23	IF_1	CALL_4
0x40025a4	      0x488345c810	            add qword [rbp - 0x38], 0x10	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x40025a9	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x40025ae	            0x7416	                            je 0x40025c6	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x40025b0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x40025b4	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x40025b7	            0x89d2	                            mov edx, edx	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x40025b9	        0x48c1e204	                              shl rdx, 4	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x40025bd	          0x4801d0	                            add rax, rdx	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x40025c0	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x40025c4	            0x77c7	                            ja 0x400258d	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x40025c6	        0x488d45d0	                   lea rax, [rbp - 0x30]	       733	merge.c	FUNCTION_23	IF_1	CALL_5
0x40025ca	      0xbe00000000	                              mov esi, 0	       733	merge.c	FUNCTION_23	IF_1	CALL_5
0x40025cf	          0x4889c7	                            mov rdi, rax	       733	merge.c	FUNCTION_23	IF_1	CALL_5
0x40025d2	      0xe800000000	                          call 0x40025d7	       733	merge.c	FUNCTION_23	IF_1	CALL_5
0x40025d7	              0x90	                                     nop	       734	merge.c	FUNCTION_23	IF_1
0x40025d8	            0xeb44	                           jmp 0x400261e	       734	merge.c	FUNCTION_23	IF_1
0x40025da	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       736	merge.c	FUNCTION_23	FOR_1
0x40025e1	            0xeb33	                           jmp 0x4002616	       736	merge.c	FUNCTION_23	FOR_1
0x40025e3	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       737	merge.c	FUNCTION_23	FOR_1	IF_2
0x40025e6	            0x4898	                                    cdqe	       737	merge.c	FUNCTION_23	FOR_1	IF_2
0x40025e8	        0x48c1e004	                              shl rax, 4	       737	merge.c	FUNCTION_23	FOR_1	IF_2
0x40025ec	    0x480500000000	                              add rax, 0	       737	merge.c	FUNCTION_23	FOR_1	IF_2
0x40025f2	            0x8b00	                    mov eax, dword [rax]	       737	merge.c	FUNCTION_23	FOR_1	IF_2
0x40025f4	          0x2345b4	             and eax, dword [rbp - 0x4c]	       737	merge.c	FUNCTION_23	FOR_1	IF_2
0x40025f7	            0x85c0	                           test eax, eax	       737	merge.c	FUNCTION_23	FOR_1	IF_2
0x40025f9	            0x7417	                            je 0x4002612	       737	merge.c	FUNCTION_23	FOR_1	IF_2
0x40025fb	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       738	merge.c	FUNCTION_23	FOR_1	IF_2
0x40025fe	            0x4898	                                    cdqe	       738	merge.c	FUNCTION_23	FOR_1	IF_2
0x4002600	        0x48c1e004	                              shl rax, 4	       738	merge.c	FUNCTION_23	FOR_1	IF_2
0x4002604	    0x480500000000	                              add rax, 0	       738	merge.c	FUNCTION_23	FOR_1	IF_2
0x400260a	          0x4889c7	                            mov rdi, rax	       738	merge.c	FUNCTION_23	FOR_1	IF_2
0x400260d	      0xe8f1e1ffff	                call sym.append_strategy	       738	merge.c	FUNCTION_23	FOR_1	IF_2
0x4002612	        0x8345c401	               add dword [rbp - 0x3c], 1	       736	merge.c	FUNCTION_23	FOR_1
0x4002616	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       736	merge.c	FUNCTION_23	FOR_1
0x4002619	          0x83f804	                              cmp eax, 4	       736	merge.c	FUNCTION_23	FOR_1
0x400261c	            0x76c5	                           jbe 0x40025e3	       736	merge.c	FUNCTION_23	FOR_1
0x400261e	        0x488b45f8	                mov rax, qword [rbp - 8]	       740	merge.c	FUNCTION_23
0x4002622	    0x644833042528	                xor rax, qword fs:[0x28]	       740	merge.c	FUNCTION_23
0x400262b	            0x7405	                            je 0x4002632	       740	merge.c	FUNCTION_23
0x400262d	      0xe800000000	                          call 0x4002632	       740	merge.c	FUNCTION_23
0x4002632	              0xc9	                                   leave	       740	merge.c	FUNCTION_23
0x4002633	              0xc3	                                     ret	       740	merge.c	FUNCTION_23
merge_trivial	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,14:ELSE,0:IF,2	89
0x4002984	              0x55	                                push rbp	       805	merge.c	FUNCTION_27
0x4002985	          0x4889e5	                            mov rbp, rsp	       805	merge.c	FUNCTION_27
0x4002988	        0x4883ec60	                           sub rsp, 0x60	       805	merge.c	FUNCTION_27
0x400298c	        0x48897da8	             mov qword [rbp - 0x58], rdi	       805	merge.c	FUNCTION_27
0x4002990	        0x488975a0	             mov qword [rbp - 0x60], rsi	       805	merge.c	FUNCTION_27
0x4002994	    0x64488b042528	                mov rax, qword fs:[0x28]	       805	merge.c	FUNCTION_27
0x400299d	        0x488945f8	                mov qword [rbp - 8], rax	       805	merge.c	FUNCTION_27
0x40029a1	            0x31c0	                            xor eax, eax	       805	merge.c	FUNCTION_27
0x40029a3	        0x488d45b0	                   lea rax, [rbp - 0x50]	       807	merge.c	FUNCTION_27
0x40029a7	        0x488945b8	             mov qword [rbp - 0x48], rax	       807	merge.c	FUNCTION_27
0x40029ab	      0xbe01000000	                              mov esi, 1	       810	merge.c	FUNCTION_27	CALL_1
0x40029b0	      0xbf00000000	                              mov edi, 0	       810	merge.c	FUNCTION_27	CALL_1
0x40029b5	      0xe800000000	                          call 0x40029ba	       810	merge.c	FUNCTION_27	CALL_1
0x40029ba	    0x41b800000000	                              mov r8d, 0	       811	merge.c	FUNCTION_27
0x40029c0	      0xb900000000	                              mov ecx, 0	       811	merge.c	FUNCTION_27
0x40029c5	      0xba00000000	                              mov edx, 0	       811	merge.c	FUNCTION_27
0x40029ca	      0xbe04000000	                              mov esi, 4	       811	merge.c	FUNCTION_27
0x40029cf	      0xbf00000000	                              mov edi, 0	       811	merge.c	FUNCTION_27
0x40029d4	      0xe800000000	                          call 0x40029d9	       811	merge.c	FUNCTION_27
0x40029d9	      0xba03000000	                              mov edx, 3	       812	merge.c	FUNCTION_27	IF_1	CALL_2
0x40029de	      0xbe00000000	                              mov esi, 0	       812	merge.c	FUNCTION_27	IF_1	CALL_2
0x40029e3	      0xbf00000000	                              mov edi, 0	       812	merge.c	FUNCTION_27	IF_1	CALL_2
0x40029e8	      0xe800000000	                          call 0x40029ed	       812	merge.c	FUNCTION_27	IF_1	CALL_2
0x40029ed	            0x85c0	                           test eax, eax	       812	merge.c	FUNCTION_27	IF_1	CALL_2
0x40029ef	            0x7421	                            je 0x4002a12	       812	merge.c	FUNCTION_27	IF_1	CALL_2
0x40029f1	      0xbf00000000	                              mov edi, 0	       814	merge.c	FUNCTION_27	CALL_3
0x40029f6	      0xe8fad8ffff	                               call sym.	       814	merge.c	FUNCTION_27	CALL_3
0x40029fb	          0x4889c7	                            mov rdi, rax	       814	merge.c	FUNCTION_27	CALL_3
0x40029fe	      0xb800000000	                              mov eax, 0	       814	merge.c	FUNCTION_27	CALL_3
0x4002a03	      0xe800000000	                          call 0x4002a08	       814	merge.c	FUNCTION_27	CALL_3
0x4002a08	      0xe833d6ffff	                    call sym.const_error	       814	merge.c	FUNCTION_27	CALL_3
0x4002a0d	      0xe9d6000000	                           jmp 0x4002ae8	       814	merge.c	FUNCTION_27	CALL_3
0x4002a12	        0x488d45c0	                   lea rax, [rbp - 0x40]	       816	merge.c	FUNCTION_27	CALL_4
0x4002a16	          0x4889c7	                            mov rdi, rax	       816	merge.c	FUNCTION_27	CALL_4
0x4002a19	      0xe8b0f6ffff	             call sym.write_tree_trivial	       816	merge.c	FUNCTION_27	CALL_4
0x4002a1e	      0xbf00000000	                              mov edi, 0	       817	merge.c	FUNCTION_27	CALL_6
0x4002a23	      0xe8cdd8ffff	                               call sym.	       817	merge.c	FUNCTION_27	CALL_6
0x4002a28	          0x4889c7	                            mov rdi, rax	       817	merge.c	FUNCTION_27	CALL_6
0x4002a2b	      0xb800000000	                              mov eax, 0	       817	merge.c	FUNCTION_27	CALL_6
0x4002a30	      0xe800000000	                          call 0x4002a35	       817	merge.c	FUNCTION_27	CALL_6
0x4002a35	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       818	merge.c	FUNCTION_27	CALL_7
0x4002a39	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       818	merge.c	FUNCTION_27	CALL_7
0x4002a3d	          0x4889d6	                            mov rsi, rdx	       818	merge.c	FUNCTION_27	CALL_7
0x4002a40	          0x4889c7	                            mov rdi, rax	       818	merge.c	FUNCTION_27	CALL_7
0x4002a43	      0xe800000000	                          call 0x4002a48	       818	merge.c	FUNCTION_27	CALL_7
0x4002a48	        0x488945b8	             mov qword [rbp - 0x48], rax	       818	merge.c	FUNCTION_27	CALL_7
0x4002a4c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       819	merge.c	FUNCTION_27	CALL_8
0x4002a50	          0x488b00	                    mov rax, qword [rax]	       819	merge.c	FUNCTION_27	CALL_8
0x4002a53	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       819	merge.c	FUNCTION_27	CALL_8
0x4002a57	          0x4889d6	                            mov rsi, rdx	       819	merge.c	FUNCTION_27	CALL_8
0x4002a5a	          0x4889c7	                            mov rdi, rax	       819	merge.c	FUNCTION_27	CALL_8
0x4002a5d	      0xe800000000	                          call 0x4002a62	       819	merge.c	FUNCTION_27	CALL_8
0x4002a62	        0x488945b8	             mov qword [rbp - 0x48], rax	       819	merge.c	FUNCTION_27	CALL_8
0x4002a66	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       820	merge.c	FUNCTION_27	CALL_9
0x4002a6a	          0x4889c7	                            mov rdi, rax	       820	merge.c	FUNCTION_27	CALL_9
0x4002a6d	      0xe895fcffff	              call sym.prepare_to_commit	       820	merge.c	FUNCTION_27	CALL_9
0x4002a72	    0x488b3d000000	            mov rdi, qword [0x04002a79] 	       821	merge.c	FUNCTION_27	IF_2	CALL_10
0x4002a79	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       821	merge.c	FUNCTION_27	IF_2	CALL_10
0x4002a7d	    0x488b35000000	            mov rsi, qword [0x04002a84] 	       821	merge.c	FUNCTION_27	IF_2	CALL_10
0x4002a84	    0x488b05000000	            mov rax, qword [0x04002a8b] 	       821	merge.c	FUNCTION_27	IF_2	CALL_10
0x4002a8b	        0x4c8d45e0	                    lea r8, [rbp - 0x20]	       821	merge.c	FUNCTION_27	IF_2	CALL_10
0x4002a8f	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       821	merge.c	FUNCTION_27	IF_2	CALL_10
0x4002a93	        0x4883ec08	                              sub rsp, 8	       821	merge.c	FUNCTION_27	IF_2	CALL_10
0x4002a97	              0x57	                                push rdi	       821	merge.c	FUNCTION_27	IF_2	CALL_10
0x4002a98	    0x41b900000000	                              mov r9d, 0	       821	merge.c	FUNCTION_27	IF_2	CALL_10
0x4002a9e	          0x4889c7	                            mov rdi, rax	       821	merge.c	FUNCTION_27	IF_2	CALL_10
0x4002aa1	      0xe800000000	                          call 0x4002aa6	       821	merge.c	FUNCTION_27	IF_2	CALL_10
0x4002aa6	        0x4883c410	                           add rsp, 0x10	       821	merge.c	FUNCTION_27	IF_2	CALL_10
0x4002aaa	            0x85c0	                           test eax, eax	       821	merge.c	FUNCTION_27	IF_2	CALL_10
0x4002aac	            0x7417	                            je 0x4002ac5	       821	merge.c	FUNCTION_27	IF_2	CALL_10
0x4002aae	      0xbf00000000	                              mov edi, 0	       823	merge.c	FUNCTION_27	CALL_12
0x4002ab3	      0xe83dd8ffff	                               call sym.	       823	merge.c	FUNCTION_27	CALL_12
0x4002ab8	          0x4889c7	                            mov rdi, rax	       823	merge.c	FUNCTION_27	CALL_12
0x4002abb	      0xb800000000	                              mov eax, 0	       823	merge.c	FUNCTION_27	CALL_12
0x4002ac0	      0xe800000000	                          call 0x4002ac5	       823	merge.c	FUNCTION_27	CALL_12
0x4002ac5	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       824	merge.c	FUNCTION_27	CALL_13
0x4002ac9	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       824	merge.c	FUNCTION_27	CALL_13
0x4002acd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       824	merge.c	FUNCTION_27	CALL_13
0x4002ad1	      0xb900000000	                              mov ecx, 0	       824	merge.c	FUNCTION_27	CALL_13
0x4002ad6	          0x4889c7	                            mov rdi, rax	       824	merge.c	FUNCTION_27	CALL_13
0x4002ad9	      0xe853e7ffff	                         call sym.finish	       824	merge.c	FUNCTION_27	CALL_13
0x4002ade	      0xe85fdfffff	                      call sym.drop_save	       825	merge.c	FUNCTION_27	CALL_14
0x4002ae3	      0xb800000000	                              mov eax, 0	       826	merge.c	FUNCTION_27
0x4002ae8	        0x488b4df8	                mov rcx, qword [rbp - 8]	       827	merge.c	FUNCTION_27
0x4002aec	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       827	merge.c	FUNCTION_27
0x4002af5	            0x7405	                            je 0x4002afc	       827	merge.c	FUNCTION_27
0x4002af7	      0xe800000000	                          call 0x4002afc	       827	merge.c	FUNCTION_27
0x4002afc	              0xc9	                                   leave	       827	merge.c	FUNCTION_27
0x4002afd	              0xc3	                                     ret	       827	merge.c	FUNCTION_27
save_state	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,13:ELSE,1:IF,4	97
0x4000a70	              0x55	                                push rbp	       254	merge.c	FUNCTION_8
0x4000a71	          0x4889e5	                            mov rbp, rsp	       254	merge.c	FUNCTION_8
0x4000a74	              0x53	                                push rbx	       254	merge.c	FUNCTION_8
0x4000a75	    0x4881ecc80000	                           sub rsp, 0xc8	       254	merge.c	FUNCTION_8
0x4000a7c	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	       254	merge.c	FUNCTION_8
0x4000a83	    0x64488b042528	                mov rax, qword fs:[0x28]	       254	merge.c	FUNCTION_8
0x4000a8c	        0x488945e8	             mov qword [rbp - 0x18], rax	       254	merge.c	FUNCTION_8
0x4000a90	            0x31c0	                            xor eax, eax	       254	merge.c	FUNCTION_8
0x4000a92	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       256	merge.c	FUNCTION_8
0x4000a99	      0xb800000000	                              mov eax, 0	       256	merge.c	FUNCTION_8
0x4000a9e	      0xb90c000000	                            mov ecx, 0xc	       256	merge.c	FUNCTION_8
0x4000aa3	          0x4889d7	                            mov rdi, rdx	       256	merge.c	FUNCTION_8
0x4000aa6	          0xf348ab	              rep stosq qword [rdi], rax	       256	merge.c	FUNCTION_8
0x4000aa9	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       256	merge.c	FUNCTION_8
0x4000ab4	    0x48c745880000	               mov qword [rbp - 0x78], 0	       256	merge.c	FUNCTION_8
0x4000abc	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       257	merge.c	FUNCTION_8
0x4000ac7	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	       257	merge.c	FUNCTION_8
0x4000ad2	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	       257	merge.c	FUNCTION_8
0x4000add	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       258	merge.c	FUNCTION_8
0x4000ae5	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       258	merge.c	FUNCTION_8
0x4000aed	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       258	merge.c	FUNCTION_8
0x4000af5	    0xc78548ffffff	     mov dword [rbp - 0xb8], 0xffffffff 	       259	merge.c	FUNCTION_8
0x4000aff	        0x488d45d0	                   lea rax, [rbp - 0x30]	       261	merge.c	FUNCTION_8
0x4000b03	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       261	merge.c	FUNCTION_8
0x4000b0a	    0xc745a0ffffff	     mov dword [rbp - 0x60], 0xffffffff 	       262	merge.c	FUNCTION_8
0x4000b11	         0xfb645b8	            movzx eax, byte [rbp - 0x48]	       263	merge.c	FUNCTION_8
0x4000b15	          0x83c808	                               or eax, 8	       263	merge.c	FUNCTION_8
0x4000b18	          0x8845b8	               mov byte [rbp - 0x48], al	       263	merge.c	FUNCTION_8
0x4000b1b	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       265	merge.c	FUNCTION_8	IF_1	CALL_1
0x4000b22	          0x4889c7	                            mov rdi, rax	       265	merge.c	FUNCTION_8	IF_1	CALL_1
0x4000b25	      0xe800000000	                          call 0x4000b2a	       265	merge.c	FUNCTION_8	IF_1	CALL_1
0x4000b2a	            0x85c0	                           test eax, eax	       265	merge.c	FUNCTION_8	IF_1	CALL_1
0x4000b2c	            0x7417	                            je 0x4000b45	       265	merge.c	FUNCTION_8	IF_1	CALL_1
0x4000b2e	      0xbf00000000	                              mov edi, 0	       266	merge.c	FUNCTION_8	CALL_3
0x4000b33	      0xe8bdf7ffff	                               call sym.	       266	merge.c	FUNCTION_8	CALL_3
0x4000b38	          0x4889c7	                            mov rdi, rax	       266	merge.c	FUNCTION_8	CALL_3
0x4000b3b	      0xb800000000	                              mov eax, 0	       266	merge.c	FUNCTION_8	CALL_3
0x4000b40	      0xe800000000	                          call 0x4000b45	       266	merge.c	FUNCTION_8	CALL_3
0x4000b45	          0x8b4da0	             mov ecx, dword [rbp - 0x60]	       267	merge.c	FUNCTION_8	CALL_4
0x4000b48	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       267	merge.c	FUNCTION_8	CALL_4
0x4000b4f	      0xba00040000	                          mov edx, 0x400	       267	merge.c	FUNCTION_8	CALL_4
0x4000b54	            0x89ce	                            mov esi, ecx	       267	merge.c	FUNCTION_8	CALL_4
0x4000b56	          0x4889c7	                            mov rdi, rax	       267	merge.c	FUNCTION_8	CALL_4
0x4000b59	      0xe800000000	                          call 0x4000b5e	       267	merge.c	FUNCTION_8	CALL_4
0x4000b5e	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       267	merge.c	FUNCTION_8	CALL_4
0x4000b64	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       268	merge.c	FUNCTION_8	CALL_5
0x4000b67	            0x89c7	                            mov edi, eax	       268	merge.c	FUNCTION_8	CALL_5
0x4000b69	      0xe800000000	                          call 0x4000b6e	       268	merge.c	FUNCTION_8	CALL_5
0x4000b6e	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       270	merge.c	FUNCTION_8	IF_2	CALL_6
0x4000b75	          0x4889c7	                            mov rdi, rax	       270	merge.c	FUNCTION_8	IF_2	CALL_6
0x4000b78	      0xe800000000	                          call 0x4000b7d	       270	merge.c	FUNCTION_8	IF_2	CALL_6
0x4000b7d	            0x85c0	                           test eax, eax	       270	merge.c	FUNCTION_8	IF_2	CALL_6
0x4000b7f	            0x7509	                           jne 0x4000b8a	       270	merge.c	FUNCTION_8	IF_2	CALL_6
0x4000b81	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       270	merge.c	FUNCTION_8	IF_2	CALL_6
0x4000b88	            0x7917	                           jns 0x4000ba1	       270	merge.c	FUNCTION_8	IF_2	CALL_6
0x4000b8a	      0xbf00000000	                              mov edi, 0	       271	merge.c	FUNCTION_8	CALL_8
0x4000b8f	      0xe861f7ffff	                               call sym.	       271	merge.c	FUNCTION_8	CALL_8
0x4000b94	          0x4889c7	                            mov rdi, rax	       271	merge.c	FUNCTION_8	CALL_8
0x4000b97	      0xb800000000	                              mov eax, 0	       271	merge.c	FUNCTION_8	CALL_8
0x4000b9c	      0xe800000000	                          call 0x4000ba1	       271	merge.c	FUNCTION_8	CALL_8
0x4000ba1	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       272	merge.c	FUNCTION_8	ELSE_1	IF_3
0x4000ba8	            0x7467	                            je 0x4000c11	       272	merge.c	FUNCTION_8	ELSE_1	IF_3
0x4000baa	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       274	merge.c	FUNCTION_8	CALL_9
0x4000bb1	        0x488d50ff	                      lea rdx, [rax - 1]	       274	merge.c	FUNCTION_8	CALL_9
0x4000bb5	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       274	merge.c	FUNCTION_8	CALL_9
0x4000bbc	          0x4889d6	                            mov rsi, rdx	       274	merge.c	FUNCTION_8	CALL_9
0x4000bbf	          0x4889c7	                            mov rdi, rax	       274	merge.c	FUNCTION_8	CALL_9
0x4000bc2	      0xe8f1f5ffff	                  call sym.strbuf_setlen	       274	merge.c	FUNCTION_8	CALL_9
0x4000bc7	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       275	merge.c	FUNCTION_8	IF_4	CALL_10
0x4000bce	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       275	merge.c	FUNCTION_8	IF_4	CALL_10
0x4000bd5	          0x4889d6	                            mov rsi, rdx	       275	merge.c	FUNCTION_8	IF_4	CALL_10
0x4000bd8	          0x4889c7	                            mov rdi, rax	       275	merge.c	FUNCTION_8	IF_4	CALL_10
0x4000bdb	      0xe800000000	                          call 0x4000be0	       275	merge.c	FUNCTION_8	IF_4	CALL_10
0x4000be0	            0x85c0	                           test eax, eax	       275	merge.c	FUNCTION_8	IF_4	CALL_10
0x4000be2	            0x7421	                            je 0x4000c05	       275	merge.c	FUNCTION_8	IF_4	CALL_10
0x4000be4	    0x488b9d60ffff	             mov rbx, qword [rbp - 0xa0]	       276	merge.c	FUNCTION_8	CALL_12
0x4000beb	      0xbf00000000	                              mov edi, 0	       276	merge.c	FUNCTION_8	CALL_12
0x4000bf0	      0xe800f7ffff	                               call sym.	       276	merge.c	FUNCTION_8	CALL_12
0x4000bf5	          0x4889de	                            mov rsi, rbx	       276	merge.c	FUNCTION_8	CALL_12
0x4000bf8	          0x4889c7	                            mov rdi, rax	       276	merge.c	FUNCTION_8	CALL_12
0x4000bfb	      0xb800000000	                              mov eax, 0	       276	merge.c	FUNCTION_8	CALL_12
0x4000c00	      0xe800000000	                          call 0x4000c05	       276	merge.c	FUNCTION_8	CALL_12
0x4000c05	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	       277	merge.c	FUNCTION_8
0x4000c0f	            0xeb01	                           jmp 0x4000c12	       277	merge.c	FUNCTION_8
0x4000c11	              0x90	                                     nop	       273	merge.c	FUNCTION_8	ELSE_1	IF_3
0x4000c12	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       279	merge.c	FUNCTION_8	CALL_13
0x4000c19	          0x4889c7	                            mov rdi, rax	       279	merge.c	FUNCTION_8	CALL_13
0x4000c1c	      0xe800000000	                          call 0x4000c21	       279	merge.c	FUNCTION_8	CALL_13
0x4000c21	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       280	merge.c	FUNCTION_8
0x4000c27	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       281	merge.c	FUNCTION_8
0x4000c2b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       281	merge.c	FUNCTION_8
0x4000c34	            0x7405	                            je 0x4000c3b	       281	merge.c	FUNCTION_8
0x4000c36	      0xe800000000	                          call 0x4000c3b	       281	merge.c	FUNCTION_8
0x4000c3b	    0x4881c4c80000	                           add rsp, 0xc8	       281	merge.c	FUNCTION_8
0x4000c42	              0x5b	                                 pop rbx	       281	merge.c	FUNCTION_8
0x4000c43	              0x5d	                                 pop rbp	       281	merge.c	FUNCTION_8
0x4000c44	              0xc3	                                     ret	       281	merge.c	FUNCTION_8
cmd_merge	FOR,6:WHILE,0:SWITCH,1:functions,0:DO,0:CALL,140:ELSE,20:IF,70	1044
0x40039ff	              0x55	                                push rbp	      1164	merge.c	FUNCTION_40
0x4003a00	          0x4889e5	                            mov rbp, rsp	      1164	merge.c	FUNCTION_40
0x4003a03	            0x4154	                                push r12	      1164	merge.c	FUNCTION_40
0x4003a05	              0x53	                                push rbx	      1164	merge.c	FUNCTION_40
0x4003a06	    0x4881ecb00100	                          sub rsp, 0x1b0	      1164	merge.c	FUNCTION_40
0x4003a0d	    0x89bd5cfeffff	            mov dword [rbp - 0x1a4], edi	      1164	merge.c	FUNCTION_40
0x4003a13	    0x4889b550feff	            mov qword [rbp - 0x1b0], rsi	      1164	merge.c	FUNCTION_40
0x4003a1a	    0x48899548feff	            mov qword [rbp - 0x1b8], rdx	      1164	merge.c	FUNCTION_40
0x4003a21	    0x64488b042528	                mov rax, qword fs:[0x28]	      1164	merge.c	FUNCTION_40
0x4003a2a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1164	merge.c	FUNCTION_40
0x4003a2e	            0x31c0	                            xor eax, eax	      1164	merge.c	FUNCTION_40
0x4003a30	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	      1167	merge.c	FUNCTION_40
0x4003a3b	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	      1167	merge.c	FUNCTION_40
0x4003a46	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      1167	merge.c	FUNCTION_40
0x4003a51	    0xc78570feffff	              mov dword [rbp - 0x190], 0	      1168	merge.c	FUNCTION_40
0x4003a5b	    0xc78574feffff	    mov dword [rbp - 0x18c], 0xffffffff 	      1169	merge.c	FUNCTION_40
0x4003a65	    0xc78578feffff	              mov dword [rbp - 0x188], 0	      1169	merge.c	FUNCTION_40
0x4003a6f	    0xc7857cfeffff	              mov dword [rbp - 0x184], 0	      1169	merge.c	FUNCTION_40
0x4003a79	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	      1170	merge.c	FUNCTION_40
0x4003a84	    0x48c785a8feff	              mov qword [rbp - 0x158], 0	      1171	merge.c	FUNCTION_40
0x4003a8f	    0x48c785b0feff	              mov qword [rbp - 0x150], 0	      1171	merge.c	FUNCTION_40
0x4003a9a	    0x8b855cfeffff	            mov eax, dword [rbp - 0x1a4]	      1174	merge.c	FUNCTION_40
0x4003aa0	    0x898588feffff	            mov dword [rbp - 0x178], eax	      1174	merge.c	FUNCTION_40
0x4003aa6	    0x83bd5cfeffff	              cmp dword [rbp - 0x1a4], 2	      1176	merge.c	FUNCTION_40	IF_1	CALL_1
0x4003aad	            0x752e	                           jne 0x4003add	      1176	merge.c	FUNCTION_40	IF_1	CALL_1
0x4003aaf	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      1176	merge.c	FUNCTION_40	IF_1	CALL_1
0x4003ab6	        0x4883c008	                              add rax, 8	      1176	merge.c	FUNCTION_40	IF_1	CALL_1
0x4003aba	          0x488b00	                    mov rax, qword [rax]	      1176	merge.c	FUNCTION_40	IF_1	CALL_1
0x4003abd	      0xbe00000000	                              mov esi, 0	      1176	merge.c	FUNCTION_40	IF_1	CALL_1
0x4003ac2	          0x4889c7	                            mov rdi, rax	      1176	merge.c	FUNCTION_40	IF_1	CALL_1
0x4003ac5	      0xe800000000	                          call 0x4003aca	      1176	merge.c	FUNCTION_40	IF_1	CALL_1
0x4003aca	            0x85c0	                           test eax, eax	      1176	merge.c	FUNCTION_40	IF_1	CALL_1
0x4003acc	            0x750f	                           jne 0x4003add	      1176	merge.c	FUNCTION_40	IF_1	CALL_1
0x4003ace	      0xbe00000000	                              mov esi, 0	      1177	merge.c	FUNCTION_40	CALL_2
0x4003ad3	      0xbf00000000	                              mov edi, 0	      1177	merge.c	FUNCTION_40	CALL_2
0x4003ad8	      0xe800000000	                          call 0x4003add	      1177	merge.c	FUNCTION_40	CALL_2
0x4003add	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      1183	merge.c	FUNCTION_40	CALL_3
0x4003ae4	      0xb900000000	                              mov ecx, 0	      1183	merge.c	FUNCTION_40	CALL_3
0x4003ae9	          0x4889c2	                            mov rdx, rax	      1183	merge.c	FUNCTION_40	CALL_3
0x4003aec	      0xbe00000000	                              mov esi, 0	      1183	merge.c	FUNCTION_40	CALL_3
0x4003af1	      0xbf00000000	                              mov edi, 0	      1183	merge.c	FUNCTION_40	CALL_3
0x4003af6	      0xe800000000	                          call 0x4003afb	      1183	merge.c	FUNCTION_40	CALL_3
0x4003afb	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      1183	merge.c	FUNCTION_40	CALL_3
0x4003b02	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1183	merge.c	FUNCTION_40	CALL_3
0x4003b09	    0x488905000000	            mov qword [0x04003b10], rax 	      1183	merge.c	FUNCTION_40	CALL_3
0x4003b10	    0x488b05000000	            mov rax, qword [0x04003b17] 	      1184	merge.c	FUNCTION_40	IF_2
0x4003b17	          0x4885c0	                           test rax, rax	      1184	merge.c	FUNCTION_40	IF_2
0x4003b1a	            0x7419	                            je 0x4003b35	      1184	merge.c	FUNCTION_40	IF_2
0x4003b1c	    0x488b05000000	            mov rax, qword [0x04003b23] 	      1185	merge.c	FUNCTION_40	CALL_4
0x4003b23	      0xba00000000	                              mov edx, 0	      1185	merge.c	FUNCTION_40	CALL_4
0x4003b28	      0xbe00000000	                              mov esi, 0	      1185	merge.c	FUNCTION_40	CALL_4
0x4003b2d	          0x4889c7	                            mov rdi, rax	      1185	merge.c	FUNCTION_40	CALL_4
0x4003b30	      0xe816c5ffff	                    call sym.skip_prefix	      1185	merge.c	FUNCTION_40	CALL_4
0x4003b35	    0x488b05000000	            mov rax, qword [0x04003b3c] 	      1186	merge.c	FUNCTION_40	IF_3	CALL_5
0x4003b3c	          0x4885c0	                           test rax, rax	      1186	merge.c	FUNCTION_40	IF_3	CALL_5
0x4003b3f	            0x7413	                            je 0x4003b54	      1186	merge.c	FUNCTION_40	IF_3	CALL_5
0x4003b41	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      1186	merge.c	FUNCTION_40	IF_3	CALL_5
0x4003b48	          0x4889c7	                            mov rdi, rax	      1186	merge.c	FUNCTION_40	IF_3	CALL_5
0x4003b4b	      0xe820c8ffff	                    call sym.is_null_oid	      1186	merge.c	FUNCTION_40	IF_3	CALL_5
0x4003b50	            0x85c0	                           test eax, eax	      1186	merge.c	FUNCTION_40	IF_3	CALL_5
0x4003b52	            0x740d	                            je 0x4003b61	      1186	merge.c	FUNCTION_40	IF_3	CALL_5
0x4003b54	    0x48c78598feff	              mov qword [rbp - 0x168], 0	      1187	merge.c	FUNCTION_40	IF_3
0x4003b5f	            0xeb1b	                           jmp 0x4003b7c	      1187	merge.c	FUNCTION_40	IF_3
0x4003b61	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      1189	merge.c	FUNCTION_40	CALL_6
0x4003b68	      0xbe00000000	                              mov esi, 0	      1189	merge.c	FUNCTION_40	CALL_6
0x4003b6d	          0x4889c7	                            mov rdi, rax	      1189	merge.c	FUNCTION_40	CALL_6
0x4003b70	      0xe800000000	                          call 0x4003b75	      1189	merge.c	FUNCTION_40	CALL_6
0x4003b75	    0x48898598feff	            mov qword [rbp - 0x168], rax	      1189	merge.c	FUNCTION_40	CALL_6
0x4003b7c	      0xe800000000	                          call 0x4003b81	      1191	merge.c	FUNCTION_40	CALL_7
0x4003b81	      0xbe00000000	                              mov esi, 0	      1192	merge.c	FUNCTION_40	CALL_8
0x4003b86	      0xbf00000000	                              mov edi, 0	      1192	merge.c	FUNCTION_40	CALL_8
0x4003b8b	      0xe800000000	                          call 0x4003b90	      1192	merge.c	FUNCTION_40	CALL_8
0x4003b90	    0x488b05000000	            mov rax, qword [0x04003b97] 	      1194	merge.c	FUNCTION_40	IF_4
0x4003b97	          0x4885c0	                           test rax, rax	      1194	merge.c	FUNCTION_40	IF_4
0x4003b9a	            0x740f	                            je 0x4003bab	      1194	merge.c	FUNCTION_40	IF_4
0x4003b9c	    0x488b05000000	            mov rax, qword [0x04003ba3] 	      1195	merge.c	FUNCTION_40	CALL_9
0x4003ba3	          0x4889c7	                            mov rdi, rax	      1195	merge.c	FUNCTION_40	CALL_9
0x4003ba6	      0xe891deffff	     call sym.parse_branch_merge_options	      1195	merge.c	FUNCTION_40	CALL_9
0x4003bab	    0x488bb550feff	            mov rsi, qword [rbp - 0x1b0]	      1196	merge.c	FUNCTION_40	CALL_10
0x4003bb2	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      1196	merge.c	FUNCTION_40	CALL_10
0x4003bb9	    0x8b855cfeffff	            mov eax, dword [rbp - 0x1a4]	      1196	merge.c	FUNCTION_40	CALL_10
0x4003bbf	    0x41b900000000	                              mov r9d, 0	      1196	merge.c	FUNCTION_40	CALL_10
0x4003bc5	    0x41b800000000	                              mov r8d, 0	      1196	merge.c	FUNCTION_40	CALL_10
0x4003bcb	      0xb900000000	                              mov ecx, 0	      1196	merge.c	FUNCTION_40	CALL_10
0x4003bd0	            0x89c7	                            mov edi, eax	      1196	merge.c	FUNCTION_40	CALL_10
0x4003bd2	      0xe800000000	                          call 0x4003bd7	      1196	merge.c	FUNCTION_40	CALL_10
0x4003bd7	    0x89855cfeffff	            mov dword [rbp - 0x1a4], eax	      1196	merge.c	FUNCTION_40	CALL_10
0x4003bdd	    0x8b0500000000	            mov eax, dword [0x04003be3] 	      1198	merge.c	FUNCTION_40	IF_5
0x4003be3	            0x85c0	                           test eax, eax	      1198	merge.c	FUNCTION_40	IF_5
0x4003be5	            0x7916	                           jns 0x4003bfd	      1198	merge.c	FUNCTION_40	IF_5
0x4003be7	    0x8b0500000000	            mov eax, dword [0x04003bed] 	      1199	merge.c	FUNCTION_40	IF_5
0x4003bed	      0xba00000000	                              mov edx, 0	      1199	merge.c	FUNCTION_40	IF_5
0x4003bf2	            0x85c0	                           test eax, eax	      1199	merge.c	FUNCTION_40	IF_5
0x4003bf4	           0xf48c2	                          cmovs eax, edx	      1199	merge.c	FUNCTION_40	IF_5
0x4003bf7	    0x890500000000	            mov dword [0x04003bfd], eax 	      1199	merge.c	FUNCTION_40	IF_5
0x4003bfd	    0x8b0500000000	            mov eax, dword [0x04003c03] 	      1201	merge.c	FUNCTION_40	IF_6
0x4003c03	            0x85c0	                           test eax, eax	      1201	merge.c	FUNCTION_40	IF_6
0x4003c05	            0x7915	                           jns 0x4003c1c	      1201	merge.c	FUNCTION_40	IF_6
0x4003c07	    0x8b0500000000	            mov eax, dword [0x04003c0d] 	      1201	merge.c	FUNCTION_40	IF_6
0x4003c0d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1201	merge.c	FUNCTION_40	IF_6
0x4003c10	            0x750a	                           jne 0x4003c1c	      1201	merge.c	FUNCTION_40	IF_6
0x4003c12	    0xc70500000000	               mov dword [0x04003c1c], 0	      1202	merge.c	FUNCTION_40	IF_6
0x4003c1c	    0x8b0500000000	            mov eax, dword [0x04003c22] 	      1204	merge.c	FUNCTION_40	IF_7
0x4003c22	            0x85c0	                           test eax, eax	      1204	merge.c	FUNCTION_40	IF_7
0x4003c24	     0xf8496000000	                            je 0x4003cc0	      1204	merge.c	FUNCTION_40	IF_7
0x4003c2a	    0xc7858cfeffff	              mov dword [rbp - 0x174], 2	      1205	merge.c	FUNCTION_40	IF_7
0x4003c34	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1206	merge.c	FUNCTION_40	IF_7
0x4003c3c	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1206	merge.c	FUNCTION_40	IF_7
0x4003c44	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1206	merge.c	FUNCTION_40	IF_7
0x4003c4c	    0x83bd88feffff	              cmp dword [rbp - 0x178], 2	      1208	merge.c	FUNCTION_40	IF_7	IF_8
0x4003c53	            0x741c	                            je 0x4003c71	      1208	merge.c	FUNCTION_40	IF_7	IF_8
0x4003c55	      0xbf00000000	                              mov edi, 0	      1209	merge.c	FUNCTION_40	IF_7	IF_8	CALL_12
0x4003c5a	      0xe896c6ffff	                               call sym.	      1209	merge.c	FUNCTION_40	IF_7	IF_8	CALL_12
0x4003c5f	      0xba00000000	                              mov edx, 0	      1209	merge.c	FUNCTION_40	IF_7	IF_8	CALL_12
0x4003c64	      0xbe00000000	                              mov esi, 0	      1209	merge.c	FUNCTION_40	IF_7	IF_8	CALL_12
0x4003c69	          0x4889c7	                            mov rdi, rax	      1209	merge.c	FUNCTION_40	IF_7	IF_8	CALL_12
0x4003c6c	      0xe800000000	                          call 0x4003c71	      1209	merge.c	FUNCTION_40	IF_7	IF_8	CALL_12
0x4003c71	      0xe800000000	                          call 0x4003c76	      1212	merge.c	FUNCTION_40	IF_7	IF_9	CALL_14
0x4003c76	          0x4889c7	                            mov rdi, rax	      1212	merge.c	FUNCTION_40	IF_7	IF_9	CALL_14
0x4003c79	      0xe800000000	                          call 0x4003c7e	      1212	merge.c	FUNCTION_40	IF_7	IF_9	CALL_14
0x4003c7e	            0x85c0	                           test eax, eax	      1212	merge.c	FUNCTION_40	IF_7	IF_9	CALL_14
0x4003c80	            0x7517	                           jne 0x4003c99	      1212	merge.c	FUNCTION_40	IF_7	IF_9	CALL_14
0x4003c82	      0xbf00000000	                              mov edi, 0	      1213	merge.c	FUNCTION_40	IF_7	CALL_16
0x4003c87	      0xe869c6ffff	                               call sym.	      1213	merge.c	FUNCTION_40	IF_7	CALL_16
0x4003c8c	          0x4889c7	                            mov rdi, rax	      1213	merge.c	FUNCTION_40	IF_7	CALL_16
0x4003c8f	      0xb800000000	                              mov eax, 0	      1213	merge.c	FUNCTION_40	IF_7	CALL_16
0x4003c94	      0xe800000000	                          call 0x4003c99	      1213	merge.c	FUNCTION_40	IF_7	CALL_16
0x4003c99	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      1216	merge.c	FUNCTION_40	IF_7	CALL_17
0x4003ca0	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      1216	merge.c	FUNCTION_40	IF_7	CALL_17
0x4003ca4	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      1216	merge.c	FUNCTION_40	IF_7	CALL_17
0x4003caa	          0x4889ce	                            mov rsi, rcx	      1216	merge.c	FUNCTION_40	IF_7	CALL_17
0x4003cad	            0x89c7	                            mov edi, eax	      1216	merge.c	FUNCTION_40	IF_7	CALL_17
0x4003caf	      0xe800000000	                          call 0x4003cb4	      1216	merge.c	FUNCTION_40	IF_7	CALL_17
0x4003cb4	    0x898570feffff	            mov dword [rbp - 0x190], eax	      1216	merge.c	FUNCTION_40	IF_7	CALL_17
0x4003cba	              0x90	                                     nop	      1217	merge.c	FUNCTION_40	IF_7
0x4003cbb	      0xe969100000	                           jmp 0x4004d29	      1217	merge.c	FUNCTION_40	IF_7
0x4003cc0	    0x8b0500000000	            mov eax, dword [0x04003cc6] 	      1220	merge.c	FUNCTION_40	IF_10
0x4003cc6	            0x85c0	                           test eax, eax	      1220	merge.c	FUNCTION_40	IF_10
0x4003cc8	     0xf848e000000	                            je 0x4003d5c	      1220	merge.c	FUNCTION_40	IF_10
0x4003cce	    0xc78590feffff	              mov dword [rbp - 0x170], 1	      1221	merge.c	FUNCTION_40	IF_10
0x4003cd8	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1222	merge.c	FUNCTION_40	IF_10
0x4003ce0	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1222	merge.c	FUNCTION_40	IF_10
0x4003ce8	    0x83bd88feffff	              cmp dword [rbp - 0x178], 2	      1224	merge.c	FUNCTION_40	IF_10	IF_11
0x4003cef	            0x741c	                            je 0x4003d0d	      1224	merge.c	FUNCTION_40	IF_10	IF_11
0x4003cf1	      0xbf00000000	                              mov edi, 0	      1225	merge.c	FUNCTION_40	IF_10	IF_11	CALL_19
0x4003cf6	      0xe8fac5ffff	                               call sym.	      1225	merge.c	FUNCTION_40	IF_10	IF_11	CALL_19
0x4003cfb	      0xba00000000	                              mov edx, 0	      1225	merge.c	FUNCTION_40	IF_10	IF_11	CALL_19
0x4003d00	      0xbe00000000	                              mov esi, 0	      1225	merge.c	FUNCTION_40	IF_10	IF_11	CALL_19
0x4003d05	          0x4889c7	                            mov rdi, rax	      1225	merge.c	FUNCTION_40	IF_10	IF_11	CALL_19
0x4003d08	      0xe800000000	                          call 0x4003d0d	      1225	merge.c	FUNCTION_40	IF_10	IF_11	CALL_19
0x4003d0d	      0xe800000000	                          call 0x4003d12	      1228	merge.c	FUNCTION_40	IF_10	IF_12	CALL_21
0x4003d12	          0x4889c7	                            mov rdi, rax	      1228	merge.c	FUNCTION_40	IF_10	IF_12	CALL_21
0x4003d15	      0xe800000000	                          call 0x4003d1a	      1228	merge.c	FUNCTION_40	IF_10	IF_12	CALL_21
0x4003d1a	            0x85c0	                           test eax, eax	      1228	merge.c	FUNCTION_40	IF_10	IF_12	CALL_21
0x4003d1c	            0x7517	                           jne 0x4003d35	      1228	merge.c	FUNCTION_40	IF_10	IF_12	CALL_21
0x4003d1e	      0xbf00000000	                              mov edi, 0	      1229	merge.c	FUNCTION_40	IF_10	CALL_23
0x4003d23	      0xe8cdc5ffff	                               call sym.	      1229	merge.c	FUNCTION_40	IF_10	CALL_23
0x4003d28	          0x4889c7	                            mov rdi, rax	      1229	merge.c	FUNCTION_40	IF_10	CALL_23
0x4003d2b	      0xb800000000	                              mov eax, 0	      1229	merge.c	FUNCTION_40	IF_10	CALL_23
0x4003d30	      0xe800000000	                          call 0x4003d35	      1229	merge.c	FUNCTION_40	IF_10	CALL_23
0x4003d35	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      1232	merge.c	FUNCTION_40	IF_10	CALL_24
0x4003d3c	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      1232	merge.c	FUNCTION_40	IF_10	CALL_24
0x4003d40	    0x8b8590feffff	            mov eax, dword [rbp - 0x170]	      1232	merge.c	FUNCTION_40	IF_10	CALL_24
0x4003d46	          0x4889ce	                            mov rsi, rcx	      1232	merge.c	FUNCTION_40	IF_10	CALL_24
0x4003d49	            0x89c7	                            mov edi, eax	      1232	merge.c	FUNCTION_40	IF_10	CALL_24
0x4003d4b	      0xe800000000	                          call 0x4003d50	      1232	merge.c	FUNCTION_40	IF_10	CALL_24
0x4003d50	    0x898570feffff	            mov dword [rbp - 0x190], eax	      1232	merge.c	FUNCTION_40	IF_10	CALL_24
0x4003d56	              0x90	                                     nop	      1233	merge.c	FUNCTION_40	IF_10
0x4003d57	      0xe9cd0f0000	                           jmp 0x4004d29	      1233	merge.c	FUNCTION_40	IF_10
0x4003d5c	      0xbf00000000	                              mov edi, 0	      1236	merge.c	FUNCTION_40	IF_13
0x4003d61	      0xe800000000	                          call 0x4003d66	      1236	merge.c	FUNCTION_40	IF_13
0x4003d66	            0x85c0	                           test eax, eax	      1236	merge.c	FUNCTION_40	IF_13
0x4003d68	            0x740a	                            je 0x4003d74	      1236	merge.c	FUNCTION_40	IF_13
0x4003d6a	      0xbf00000000	                              mov edi, 0	      1237	merge.c	FUNCTION_40	CALL_25
0x4003d6f	      0xe800000000	                          call 0x4003d74	      1237	merge.c	FUNCTION_40	CALL_25
0x4003d74	      0xe800000000	                          call 0x4003d79	      1239	merge.c	FUNCTION_40	IF_14	CALL_27
0x4003d79	          0x4889c7	                            mov rdi, rax	      1239	merge.c	FUNCTION_40	IF_14	CALL_27
0x4003d7c	      0xe800000000	                          call 0x4003d81	      1239	merge.c	FUNCTION_40	IF_14	CALL_27
0x4003d81	            0x85c0	                           test eax, eax	      1239	merge.c	FUNCTION_40	IF_14	CALL_27
0x4003d83	            0x7438	                            je 0x4003dbd	      1239	merge.c	FUNCTION_40	IF_14	CALL_27
0x4003d85	    0x8b0500000000	            mov eax, dword [0x04003d8b] 	      1244	merge.c	FUNCTION_40	IF_14	IF_15
0x4003d8b	            0x85c0	                           test eax, eax	      1244	merge.c	FUNCTION_40	IF_14	IF_15
0x4003d8d	            0x7417	                            je 0x4003da6	      1244	merge.c	FUNCTION_40	IF_14	IF_15
0x4003d8f	      0xbf00000000	                              mov edi, 0	      1245	merge.c	FUNCTION_40	IF_14	IF_15	CALL_29
0x4003d94	      0xe85cc5ffff	                               call sym.	      1245	merge.c	FUNCTION_40	IF_14	IF_15	CALL_29
0x4003d99	          0x4889c7	                            mov rdi, rax	      1245	merge.c	FUNCTION_40	IF_14	IF_15	CALL_29
0x4003d9c	      0xb800000000	                              mov eax, 0	      1245	merge.c	FUNCTION_40	IF_14	IF_15	CALL_29
0x4003da1	      0xe800000000	                          call 0x4003da6	      1245	merge.c	FUNCTION_40	IF_14	IF_15	CALL_29
0x4003da6	      0xbf00000000	                              mov edi, 0	      1248	merge.c	FUNCTION_40	IF_14	CALL_31
0x4003dab	      0xe845c5ffff	                               call sym.	      1248	merge.c	FUNCTION_40	IF_14	CALL_31
0x4003db0	          0x4889c7	                            mov rdi, rax	      1248	merge.c	FUNCTION_40	IF_14	CALL_31
0x4003db3	      0xb800000000	                              mov eax, 0	      1248	merge.c	FUNCTION_40	IF_14	CALL_31
0x4003db8	      0xe800000000	                          call 0x4003dbd	      1248	merge.c	FUNCTION_40	IF_14	CALL_31
0x4003dbd	      0xe800000000	                          call 0x4003dc2	      1250	merge.c	FUNCTION_40	IF_16	CALL_33
0x4003dc2	          0x4889c7	                            mov rdi, rax	      1250	merge.c	FUNCTION_40	IF_16	CALL_33
0x4003dc5	      0xe800000000	                          call 0x4003dca	      1250	merge.c	FUNCTION_40	IF_16	CALL_33
0x4003dca	            0x85c0	                           test eax, eax	      1250	merge.c	FUNCTION_40	IF_16	CALL_33
0x4003dcc	            0x7438	                            je 0x4003e06	      1250	merge.c	FUNCTION_40	IF_16	CALL_33
0x4003dce	    0x8b0500000000	            mov eax, dword [0x04003dd4] 	      1251	merge.c	FUNCTION_40	IF_16	IF_17
0x4003dd4	            0x85c0	                           test eax, eax	      1251	merge.c	FUNCTION_40	IF_16	IF_17
0x4003dd6	            0x7417	                            je 0x4003def	      1251	merge.c	FUNCTION_40	IF_16	IF_17
0x4003dd8	      0xbf00000000	                              mov edi, 0	      1252	merge.c	FUNCTION_40	IF_16	IF_17	CALL_35
0x4003ddd	      0xe813c5ffff	                               call sym.	      1252	merge.c	FUNCTION_40	IF_16	IF_17	CALL_35
0x4003de2	          0x4889c7	                            mov rdi, rax	      1252	merge.c	FUNCTION_40	IF_16	IF_17	CALL_35
0x4003de5	      0xb800000000	                              mov eax, 0	      1252	merge.c	FUNCTION_40	IF_16	IF_17	CALL_35
0x4003dea	      0xe800000000	                          call 0x4003def	      1252	merge.c	FUNCTION_40	IF_16	IF_17	CALL_35
0x4003def	      0xbf00000000	                              mov edi, 0	      1255	merge.c	FUNCTION_40	IF_16	CALL_37
0x4003df4	      0xe8fcc4ffff	                               call sym.	      1255	merge.c	FUNCTION_40	IF_16	CALL_37
0x4003df9	          0x4889c7	                            mov rdi, rax	      1255	merge.c	FUNCTION_40	IF_16	CALL_37
0x4003dfc	      0xb800000000	                              mov eax, 0	      1255	merge.c	FUNCTION_40	IF_16	CALL_37
0x4003e01	      0xe800000000	                          call 0x4003e06	      1255	merge.c	FUNCTION_40	IF_16	CALL_37
0x4003e06	      0xbf00000000	                              mov edi, 0	      1257	merge.c	FUNCTION_40
0x4003e0b	      0xe800000000	                          call 0x4003e10	      1257	merge.c	FUNCTION_40
0x4003e10	    0x8b0500000000	            mov eax, dword [0x04003e16] 	      1259	merge.c	FUNCTION_40	IF_18
0x4003e16	            0x85c0	                           test eax, eax	      1259	merge.c	FUNCTION_40	IF_18
0x4003e18	            0x790a	                           jns 0x4003e24	      1259	merge.c	FUNCTION_40	IF_18
0x4003e1a	    0xc70500000000	               mov dword [0x04003e24], 0	      1260	merge.c	FUNCTION_40	IF_18
0x4003e24	    0x8b0500000000	            mov eax, dword [0x04003e2a] 	      1262	merge.c	FUNCTION_40	IF_19
0x4003e2a	            0x85c0	                           test eax, eax	      1262	merge.c	FUNCTION_40	IF_19
0x4003e2c	            0x742b	                            je 0x4003e59	      1262	merge.c	FUNCTION_40	IF_19
0x4003e2e	    0x8b0500000000	            mov eax, dword [0x04003e34] 	      1263	merge.c	FUNCTION_40	IF_19	IF_20
0x4003e34	            0x85c0	                           test eax, eax	      1263	merge.c	FUNCTION_40	IF_19	IF_20
0x4003e36	            0x7517	                           jne 0x4003e4f	      1263	merge.c	FUNCTION_40	IF_19	IF_20
0x4003e38	      0xbf00000000	                              mov edi, 0	      1264	merge.c	FUNCTION_40	IF_19	CALL_39
0x4003e3d	      0xe8b3c4ffff	                               call sym.	      1264	merge.c	FUNCTION_40	IF_19	CALL_39
0x4003e42	          0x4889c7	                            mov rdi, rax	      1264	merge.c	FUNCTION_40	IF_19	CALL_39
0x4003e45	      0xb800000000	                              mov eax, 0	      1264	merge.c	FUNCTION_40	IF_19	CALL_39
0x4003e4a	      0xe800000000	                          call 0x4003e4f	      1264	merge.c	FUNCTION_40	IF_19	CALL_39
0x4003e4f	    0xc70500000000	               mov dword [0x04003e59], 0	      1265	merge.c	FUNCTION_40	IF_19
0x4003e59	    0x83bd5cfeffff	              cmp dword [rbp - 0x1a4], 0	      1268	merge.c	FUNCTION_40	IF_21
0x4003e60	            0x7538	                           jne 0x4003e9a	      1268	merge.c	FUNCTION_40	IF_21
0x4003e62	    0x8b0500000000	            mov eax, dword [0x04003e68] 	      1269	merge.c	FUNCTION_40	IF_21	IF_22
0x4003e68	            0x85c0	                           test eax, eax	      1269	merge.c	FUNCTION_40	IF_21	IF_22
0x4003e6a	            0x7417	                            je 0x4003e83	      1269	merge.c	FUNCTION_40	IF_21	IF_22
0x4003e6c	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1270	merge.c	FUNCTION_40	IF_21	CALL_40
0x4003e73	          0x4889c7	                            mov rdi, rax	      1270	merge.c	FUNCTION_40	IF_21	CALL_40
0x4003e76	      0xe85aefffff	            call sym.setup_with_upstream	      1270	merge.c	FUNCTION_40	IF_21	CALL_40
0x4003e7b	    0x89855cfeffff	            mov dword [rbp - 0x1a4], eax	      1270	merge.c	FUNCTION_40	IF_21	CALL_40
0x4003e81	            0xeb49	                           jmp 0x4003ecc	      1270	merge.c	FUNCTION_40	IF_21	CALL_40
0x4003e83	      0xbf00000000	                              mov edi, 0	      1272	merge.c	FUNCTION_40	IF_21	CALL_42
0x4003e88	      0xe868c4ffff	                               call sym.	      1272	merge.c	FUNCTION_40	IF_21	CALL_42
0x4003e8d	          0x4889c7	                            mov rdi, rax	      1272	merge.c	FUNCTION_40	IF_21	CALL_42
0x4003e90	      0xb800000000	                              mov eax, 0	      1272	merge.c	FUNCTION_40	IF_21	CALL_42
0x4003e95	      0xe800000000	                          call 0x4003e9a	      1272	merge.c	FUNCTION_40	IF_21	CALL_42
0x4003e9a	    0x83bd5cfeffff	              cmp dword [rbp - 0x1a4], 1	      1273	merge.c	FUNCTION_40	ELSE_5	IF_23	CALL_43
0x4003ea1	            0x7529	                           jne 0x4003ecc	      1273	merge.c	FUNCTION_40	ELSE_5	IF_23	CALL_43
0x4003ea3	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      1273	merge.c	FUNCTION_40	ELSE_5	IF_23	CALL_43
0x4003eaa	          0x488b00	                    mov rax, qword [rax]	      1273	merge.c	FUNCTION_40	ELSE_5	IF_23	CALL_43
0x4003ead	      0xbe00000000	                              mov esi, 0	      1273	merge.c	FUNCTION_40	ELSE_5	IF_23	CALL_43
0x4003eb2	          0x4889c7	                            mov rdi, rax	      1273	merge.c	FUNCTION_40	ELSE_5	IF_23	CALL_43
0x4003eb5	      0xe800000000	                          call 0x4003eba	      1273	merge.c	FUNCTION_40	ELSE_5	IF_23	CALL_43
0x4003eba	            0x85c0	                           test eax, eax	      1273	merge.c	FUNCTION_40	ELSE_5	IF_23	CALL_43
0x4003ebc	            0x750e	                           jne 0x4003ecc	      1273	merge.c	FUNCTION_40	ELSE_5	IF_23	CALL_43
0x4003ebe	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      1274	merge.c	FUNCTION_40	ELSE_5	IF_23
0x4003ec5	    0x48c700000000	                      mov qword [rax], 0	      1274	merge.c	FUNCTION_40	ELSE_5	IF_23
0x4003ecc	    0x83bd5cfeffff	              cmp dword [rbp - 0x1a4], 0	      1277	merge.c	FUNCTION_40	IF_24
0x4003ed3	            0x750f	                           jne 0x4003ee4	      1277	merge.c	FUNCTION_40	IF_24
0x4003ed5	      0xbe00000000	                              mov esi, 0	      1278	merge.c	FUNCTION_40	IF_24	CALL_44
0x4003eda	      0xbf00000000	                              mov edi, 0	      1278	merge.c	FUNCTION_40	IF_24	CALL_44
0x4003edf	      0xe800000000	                          call 0x4003ee4	      1278	merge.c	FUNCTION_40	IF_24	CALL_44
0x4003ee4	    0x4883bd98feff	              cmp qword [rbp - 0x168], 0	      1281	merge.c	FUNCTION_40	IF_25
0x4003eec	     0xf851f010000	                           jne 0x4004011	      1281	merge.c	FUNCTION_40	IF_25
0x4003ef2	    0x8b0500000000	            mov eax, dword [0x04003ef8] 	      1288	merge.c	FUNCTION_40	IF_25	IF_26
0x4003ef8	            0x85c0	                           test eax, eax	      1288	merge.c	FUNCTION_40	IF_25	IF_26
0x4003efa	            0x7417	                            je 0x4003f13	      1288	merge.c	FUNCTION_40	IF_25	IF_26
0x4003efc	      0xbf00000000	                              mov edi, 0	      1289	merge.c	FUNCTION_40	IF_25	CALL_46
0x4003f01	      0xe8efc3ffff	                               call sym.	      1289	merge.c	FUNCTION_40	IF_25	CALL_46
0x4003f06	          0x4889c7	                            mov rdi, rax	      1289	merge.c	FUNCTION_40	IF_25	CALL_46
0x4003f09	      0xb800000000	                              mov eax, 0	      1289	merge.c	FUNCTION_40	IF_25	CALL_46
0x4003f0e	      0xe800000000	                          call 0x4003f13	      1289	merge.c	FUNCTION_40	IF_25	CALL_46
0x4003f13	    0x8b0500000000	            mov eax, dword [0x04003f19] 	      1290	merge.c	FUNCTION_40	IF_25	IF_27
0x4003f19	            0x85c0	                           test eax, eax	      1290	merge.c	FUNCTION_40	IF_25	IF_27
0x4003f1b	            0x7517	                           jne 0x4003f34	      1290	merge.c	FUNCTION_40	IF_25	IF_27
0x4003f1d	      0xbf00000000	                              mov edi, 0	      1291	merge.c	FUNCTION_40	IF_25	IF_27	CALL_48
0x4003f22	      0xe8cec3ffff	                               call sym.	      1291	merge.c	FUNCTION_40	IF_25	IF_27	CALL_48
0x4003f27	          0x4889c7	                            mov rdi, rax	      1291	merge.c	FUNCTION_40	IF_25	IF_27	CALL_48
0x4003f2a	      0xb800000000	                              mov eax, 0	      1291	merge.c	FUNCTION_40	IF_25	IF_27	CALL_48
0x4003f2f	      0xe800000000	                          call 0x4003f34	      1291	merge.c	FUNCTION_40	IF_25	IF_27	CALL_48
0x4003f34	    0x488b8d50feff	            mov rcx, qword [rbp - 0x1b0]	      1293	merge.c	FUNCTION_40	IF_25	CALL_49
0x4003f3b	    0x8b955cfeffff	            mov edx, dword [rbp - 0x1a4]	      1293	merge.c	FUNCTION_40	IF_25	CALL_49
0x4003f41	    0x488db568feff	                  lea rsi, [rbp - 0x198]	      1293	merge.c	FUNCTION_40	IF_25	CALL_49
0x4003f48	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1293	merge.c	FUNCTION_40	IF_25	CALL_49
0x4003f4f	    0x41b800000000	                              mov r8d, 0	      1293	merge.c	FUNCTION_40	IF_25	CALL_49
0x4003f55	          0x4889c7	                            mov rdi, rax	      1293	merge.c	FUNCTION_40	IF_25	CALL_49
0x4003f58	      0xe897f7ffff	                call sym.collect_parents	      1293	merge.c	FUNCTION_40	IF_25	CALL_49
0x4003f5d	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      1293	merge.c	FUNCTION_40	IF_25	CALL_49
0x4003f64	    0x4883bdd0feff	              cmp qword [rbp - 0x130], 0	      1295	merge.c	FUNCTION_40	IF_25	IF_28
0x4003f6c	            0x7524	                           jne 0x4003f92	      1295	merge.c	FUNCTION_40	IF_25	IF_28
0x4003f6e	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	      1296	merge.c	FUNCTION_40	IF_25	CALL_51
0x4003f75	          0x488b18	                    mov rbx, qword [rax]	      1296	merge.c	FUNCTION_40	IF_25	CALL_51
0x4003f78	      0xbf00000000	                              mov edi, 0	      1296	merge.c	FUNCTION_40	IF_25	CALL_51
0x4003f7d	      0xe873c3ffff	                               call sym.	      1296	merge.c	FUNCTION_40	IF_25	CALL_51
0x4003f82	          0x4889de	                            mov rsi, rbx	      1296	merge.c	FUNCTION_40	IF_25	CALL_51
0x4003f85	          0x4889c7	                            mov rdi, rax	      1296	merge.c	FUNCTION_40	IF_25	CALL_51
0x4003f88	      0xb800000000	                              mov eax, 0	      1296	merge.c	FUNCTION_40	IF_25	CALL_51
0x4003f8d	      0xe800000000	                          call 0x4003f92	      1296	merge.c	FUNCTION_40	IF_25	CALL_51
0x4003f92	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1297	merge.c	FUNCTION_40	IF_25	IF_29
0x4003f99	        0x488b4008	                mov rax, qword [rax + 8]	      1297	merge.c	FUNCTION_40	IF_25	IF_29
0x4003f9d	          0x4885c0	                           test rax, rax	      1297	merge.c	FUNCTION_40	IF_25	IF_29
0x4003fa0	            0x7417	                            je 0x4003fb9	      1297	merge.c	FUNCTION_40	IF_25	IF_29
0x4003fa2	      0xbf00000000	                              mov edi, 0	      1298	merge.c	FUNCTION_40	IF_25	CALL_53
0x4003fa7	      0xe849c3ffff	                               call sym.	      1298	merge.c	FUNCTION_40	IF_25	CALL_53
0x4003fac	          0x4889c7	                            mov rdi, rax	      1298	merge.c	FUNCTION_40	IF_25	CALL_53
0x4003faf	      0xb800000000	                              mov eax, 0	      1298	merge.c	FUNCTION_40	IF_25	CALL_53
0x4003fb4	      0xe800000000	                          call 0x4003fb9	      1298	merge.c	FUNCTION_40	IF_25	CALL_53
0x4003fb9	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1299	merge.c	FUNCTION_40	IF_25
0x4003fc0	          0x488b00	                    mov rax, qword [rax]	      1299	merge.c	FUNCTION_40	IF_25
0x4003fc3	        0x4883c004	                              add rax, 4	      1299	merge.c	FUNCTION_40	IF_25
0x4003fc7	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      1299	merge.c	FUNCTION_40	IF_25
0x4003fce	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1300	merge.c	FUNCTION_40	IF_25	CALL_54
0x4003fd5	      0xbe00000000	                              mov esi, 0	      1300	merge.c	FUNCTION_40	IF_25	CALL_54
0x4003fda	          0x4889c7	                            mov rdi, rax	      1300	merge.c	FUNCTION_40	IF_25	CALL_54
0x4003fdd	      0xe863ccffff	                     call sym.read_empty	      1300	merge.c	FUNCTION_40	IF_25	CALL_54
0x4003fe2	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1301	merge.c	FUNCTION_40	IF_25	CALL_55
0x4003fe9	    0x41b901000000	                              mov r9d, 1	      1301	merge.c	FUNCTION_40	IF_25	CALL_55
0x4003fef	    0x41b800000000	                              mov r8d, 0	      1301	merge.c	FUNCTION_40	IF_25	CALL_55
0x4003ff5	      0xb900000000	                              mov ecx, 0	      1301	merge.c	FUNCTION_40	IF_25	CALL_55
0x4003ffa	          0x4889c2	                            mov rdx, rax	      1301	merge.c	FUNCTION_40	IF_25	CALL_55
0x4003ffd	      0xbe00000000	                              mov esi, 0	      1301	merge.c	FUNCTION_40	IF_25	CALL_55
0x4004002	      0xbf00000000	                              mov edi, 0	      1301	merge.c	FUNCTION_40	IF_25	CALL_55
0x4004007	      0xe800000000	                          call 0x400400c	      1301	merge.c	FUNCTION_40	IF_25	CALL_55
0x400400c	      0xe9180d0000	                           jmp 0x4004d29	      1303	merge.c	FUNCTION_40	IF_25
0x4004011	    0x488b8d50feff	            mov rcx, qword [rbp - 0x1b0]	      1311	merge.c	FUNCTION_40	CALL_56
0x4004018	    0x8b955cfeffff	            mov edx, dword [rbp - 0x1a4]	      1311	merge.c	FUNCTION_40	CALL_56
0x400401e	    0x488db568feff	                  lea rsi, [rbp - 0x198]	      1311	merge.c	FUNCTION_40	CALL_56
0x4004025	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1311	merge.c	FUNCTION_40	CALL_56
0x400402c	    0x41b800000000	                              mov r8d, 0	      1311	merge.c	FUNCTION_40	CALL_56
0x4004032	          0x4889c7	                            mov rdi, rax	      1311	merge.c	FUNCTION_40	CALL_56
0x4004035	      0xe8baf6ffff	                call sym.collect_parents	      1311	merge.c	FUNCTION_40	CALL_56
0x400403a	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      1311	merge.c	FUNCTION_40	CALL_56
0x4004041	    0x4883bd98feff	              cmp qword [rbp - 0x168], 0	      1314	merge.c	FUNCTION_40	IF_30
0x4004049	            0x7409	                            je 0x4004054	      1314	merge.c	FUNCTION_40	IF_30
0x400404b	    0x83bd5cfeffff	              cmp dword [rbp - 0x1a4], 0	      1314	merge.c	FUNCTION_40	IF_30
0x4004052	            0x750f	                           jne 0x4004063	      1314	merge.c	FUNCTION_40	IF_30
0x4004054	      0xbe00000000	                              mov esi, 0	      1315	merge.c	FUNCTION_40	IF_30	CALL_57
0x4004059	      0xbf00000000	                              mov edi, 0	      1315	merge.c	FUNCTION_40	IF_30	CALL_57
0x400405e	      0xe800000000	                          call 0x4004063	      1315	merge.c	FUNCTION_40	IF_30	CALL_57
0x4004063	    0x8b0500000000	            mov eax, dword [0x04004069] 	      1318	merge.c	FUNCTION_40	IF_31
0x4004069	            0x85c0	                           test eax, eax	      1318	merge.c	FUNCTION_40	IF_31
0x400406b	     0xf847c010000	                            je 0x40041ed	      1318	merge.c	FUNCTION_40	IF_31
0x4004071	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1319	merge.c	FUNCTION_40	IF_31	FOR_1
0x4004078	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      1319	merge.c	FUNCTION_40	IF_31	FOR_1
0x400407f	      0xe95b010000	                           jmp 0x40041df	      1319	merge.c	FUNCTION_40	IF_31	FOR_1
0x4004084	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      1320	merge.c	FUNCTION_40	IF_31	FOR_1
0x400408b	          0x488b00	                    mov rax, qword [rax]	      1320	merge.c	FUNCTION_40	IF_31	FOR_1
0x400408e	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      1320	merge.c	FUNCTION_40	IF_31	FOR_1
0x4004095	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      1323	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_58
0x400409c	      0xba30000000	                           mov edx, 0x30	      1323	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_58
0x40040a1	      0xbe00000000	                              mov esi, 0	      1323	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_58
0x40040a6	          0x4889c7	                            mov rdi, rax	      1323	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_58
0x40040a9	      0xe800000000	                          call 0x40040ae	      1323	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_58
0x40040ae	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      1325	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_59
0x40040b5	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      1325	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_59
0x40040bc	          0x4889d6	                            mov rsi, rdx	      1325	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_59
0x40040bf	          0x4889c7	                            mov rdi, rax	      1325	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_59
0x40040c2	      0xe800000000	                          call 0x40040c7	      1325	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_59
0x40040c7	    0x8b1500000000	            mov edx, dword [0x040040cd] 	      1327	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_60
0x40040cd	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      1327	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_60
0x40040d4	        0x488d4804	                      lea rcx, [rax + 4]	      1327	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_60
0x40040d8	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1327	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_60
0x40040dc	          0x4889ce	                            mov rsi, rcx	      1327	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_60
0x40040df	          0x4889c7	                            mov rdi, rax	      1327	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_60
0x40040e2	      0xe800000000	                          call 0x40040e7	      1327	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_60
0x40040e7	     0xfb68538ffff	            movzx eax, byte [rbp - 0xc8]	      1328	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1
0x40040ee	           0xfbec0	                           movsx eax, al	      1328	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1
0x40040f1	          0x83f847	                           cmp eax, 0x47	      1328	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1
0x40040f4	     0xf8483000000	                            je 0x400417d	      1328	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1
0x40040fa	          0x83f855	                           cmp eax, 0x55	      1328	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1
0x40040fd	            0x7407	                            je 0x4004106	      1328	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1
0x40040ff	          0x83f842	                           cmp eax, 0x42	      1328	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1
0x4004102	            0x742d	                            je 0x4004131	      1328	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1
0x4004104	            0xeb56	                           jmp 0x400415c	      1328	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1
0x4004106	    0x488b9d40ffff	             mov rbx, qword [rbp - 0xc0]	      1332	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_62
0x400410d	      0xbf00000000	                              mov edi, 0	      1332	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_62
0x4004112	      0xe8dec1ffff	                               call sym.	      1332	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_62
0x4004117	          0x4889c1	                            mov rcx, rax	      1332	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_62
0x400411a	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1332	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_62
0x400411e	          0x4889da	                            mov rdx, rbx	      1332	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_62
0x4004121	          0x4889c6	                            mov rsi, rax	      1332	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_62
0x4004124	          0x4889cf	                            mov rdi, rcx	      1332	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_62
0x4004127	      0xb800000000	                              mov eax, 0	      1332	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_62
0x400412c	      0xe800000000	                          call 0x4004131	      1332	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_62
0x4004131	    0x488b9d40ffff	             mov rbx, qword [rbp - 0xc0]	      1335	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_64
0x4004138	      0xbf00000000	                              mov edi, 0	      1335	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_64
0x400413d	      0xe8b3c1ffff	                               call sym.	      1335	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_64
0x4004142	          0x4889c1	                            mov rcx, rax	      1335	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_64
0x4004145	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1335	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_64
0x4004149	          0x4889da	                            mov rdx, rbx	      1335	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_64
0x400414c	          0x4889c6	                            mov rsi, rax	      1335	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_64
0x400414f	          0x4889cf	                            mov rdi, rcx	      1335	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_64
0x4004152	      0xb800000000	                              mov eax, 0	      1335	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_64
0x4004157	      0xe800000000	                          call 0x400415c	      1335	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_64
0x400415c	      0xbf00000000	                              mov edi, 0	      1338	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_66
0x4004161	      0xe88fc1ffff	                               call sym.	      1338	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_66
0x4004166	          0x4889c2	                            mov rdx, rax	      1338	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_66
0x4004169	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1338	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_66
0x400416d	          0x4889c6	                            mov rsi, rax	      1338	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_66
0x4004170	          0x4889d7	                            mov rdi, rdx	      1338	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_66
0x4004173	      0xb800000000	                              mov eax, 0	      1338	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_66
0x4004178	      0xe800000000	                          call 0x400417d	      1338	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1	CALL_66
0x400417d	              0x90	                                     nop	      1330	merge.c	FUNCTION_40	IF_31	FOR_1	SWITCH_1
0x400417e	    0x8b0500000000	            mov eax, dword [0x04004184] 	      1340	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32
0x4004184	            0x85c0	                           test eax, eax	      1340	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32
0x4004186	            0x7836	                            js 0x40041be	      1340	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32
0x4004188	     0xfb68538ffff	            movzx eax, byte [rbp - 0xc8]	      1340	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32
0x400418f	            0x3c47	                            cmp al, 0x47	      1340	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32
0x4004191	            0x752b	                           jne 0x40041be	      1340	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32
0x4004193	    0x488b9d40ffff	             mov rbx, qword [rbp - 0xc0]	      1341	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32	CALL_68
0x400419a	      0xbf00000000	                              mov edi, 0	      1341	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32	CALL_68
0x400419f	      0xe851c1ffff	                               call sym.	      1341	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32	CALL_68
0x40041a4	          0x4889c1	                            mov rcx, rax	      1341	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32	CALL_68
0x40041a7	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1341	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32	CALL_68
0x40041ab	          0x4889da	                            mov rdx, rbx	      1341	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32	CALL_68
0x40041ae	          0x4889c6	                            mov rsi, rax	      1341	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32	CALL_68
0x40041b1	          0x4889cf	                            mov rdi, rcx	      1341	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32	CALL_68
0x40041b4	      0xb800000000	                              mov eax, 0	      1341	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32	CALL_68
0x40041b9	      0xe800000000	                          call 0x40041be	      1341	merge.c	FUNCTION_40	IF_31	FOR_1	IF_32	CALL_68
0x40041be	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      1344	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_69
0x40041c5	          0x4889c7	                            mov rdi, rax	      1344	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_69
0x40041c8	      0xe800000000	                          call 0x40041cd	      1344	merge.c	FUNCTION_40	IF_31	FOR_1	CALL_69
0x40041cd	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      1319	merge.c	FUNCTION_40	IF_31	FOR_1
0x40041d4	        0x488b4008	                mov rax, qword [rax + 8]	      1319	merge.c	FUNCTION_40	IF_31	FOR_1
0x40041d8	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      1319	merge.c	FUNCTION_40	IF_31	FOR_1
0x40041df	    0x4883bdb8feff	              cmp qword [rbp - 0x148], 0	      1319	merge.c	FUNCTION_40	IF_31	FOR_1
0x40041e7	     0xf8597feffff	                           jne 0x4004084	      1319	merge.c	FUNCTION_40	IF_31	FOR_1
0x40041ed	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      1348	merge.c	FUNCTION_40	CALL_70
0x40041f4	      0xbe00000000	                              mov esi, 0	      1348	merge.c	FUNCTION_40	CALL_70
0x40041f9	          0x4889c7	                            mov rdi, rax	      1348	merge.c	FUNCTION_40	CALL_70
0x40041fc	      0xe8bfc0ffff	                  call sym.strbuf_addstr	      1348	merge.c	FUNCTION_40	CALL_70
0x4004201	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1349	merge.c	FUNCTION_40	FOR_2
0x4004208	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      1349	merge.c	FUNCTION_40	FOR_2
0x400420f	            0xeb3d	                           jmp 0x400424e	      1349	merge.c	FUNCTION_40	FOR_2
0x4004211	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      1350	merge.c	FUNCTION_40	CALL_72
0x4004218	          0x488b00	                    mov rax, qword [rax]	      1350	merge.c	FUNCTION_40	CALL_72
0x400421b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1350	merge.c	FUNCTION_40	CALL_72
0x400421f	        0x488d5008	                      lea rdx, [rax + 8]	      1350	merge.c	FUNCTION_40	CALL_72
0x4004223	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      1350	merge.c	FUNCTION_40	CALL_72
0x400422a	      0xbe00000000	                              mov esi, 0	      1350	merge.c	FUNCTION_40	CALL_72
0x400422f	          0x4889c7	                            mov rdi, rax	      1350	merge.c	FUNCTION_40	CALL_72
0x4004232	      0xb800000000	                              mov eax, 0	      1350	merge.c	FUNCTION_40	CALL_72
0x4004237	      0xe800000000	                          call 0x400423c	      1350	merge.c	FUNCTION_40	CALL_72
0x400423c	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      1349	merge.c	FUNCTION_40	FOR_2
0x4004243	        0x488b4008	                mov rax, qword [rax + 8]	      1349	merge.c	FUNCTION_40	FOR_2
0x4004247	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      1349	merge.c	FUNCTION_40	FOR_2
0x400424e	    0x4883bdb8feff	              cmp qword [rbp - 0x148], 0	      1349	merge.c	FUNCTION_40	FOR_2
0x4004256	            0x75b9	                           jne 0x4004211	      1349	merge.c	FUNCTION_40	FOR_2
0x4004258	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1351	merge.c	FUNCTION_40
0x400425f	      0xba00000000	                              mov edx, 0	      1351	merge.c	FUNCTION_40
0x4004264	          0x4889c6	                            mov rsi, rax	      1351	merge.c	FUNCTION_40
0x4004267	      0xbf00000000	                              mov edi, 0	      1351	merge.c	FUNCTION_40
0x400426c	      0xe800000000	                          call 0x4004271	      1351	merge.c	FUNCTION_40
0x4004271	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      1352	merge.c	FUNCTION_40
0x4004278	      0xbe00000000	                              mov esi, 0	      1352	merge.c	FUNCTION_40
0x400427d	          0x4889c7	                            mov rdi, rax	      1352	merge.c	FUNCTION_40
0x4004280	      0xe833bfffff	                  call sym.strbuf_setlen	      1352	merge.c	FUNCTION_40
0x4004285	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1354	merge.c	FUNCTION_40	FOR_3
0x400428c	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      1354	merge.c	FUNCTION_40	FOR_3
0x4004293	      0xe9b4000000	                           jmp 0x400434c	      1354	merge.c	FUNCTION_40	FOR_3
0x4004298	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      1355	merge.c	FUNCTION_40	FOR_3
0x400429f	          0x488b00	                    mov rax, qword [rax]	      1355	merge.c	FUNCTION_40	FOR_3
0x40042a2	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      1355	merge.c	FUNCTION_40	FOR_3
0x40042a9	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      1357	merge.c	FUNCTION_40	FOR_3	CALL_74
0x40042b0	        0x4883c004	                              add rax, 4	      1357	merge.c	FUNCTION_40	FOR_3	CALL_74
0x40042b4	          0x4889c7	                            mov rdi, rax	      1356	merge.c	FUNCTION_40	FOR_3	CALL_73
0x40042b7	      0xe800000000	                          call 0x40042bc	      1356	merge.c	FUNCTION_40	FOR_3	CALL_73
0x40042bc	          0x4889c2	                            mov rdx, rax	      1356	merge.c	FUNCTION_40	FOR_3	CALL_73
0x40042bf	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      1356	merge.c	FUNCTION_40	FOR_3	CALL_73
0x40042c6	      0xbe00000000	                              mov esi, 0	      1356	merge.c	FUNCTION_40	FOR_3	CALL_73
0x40042cb	          0x4889c7	                            mov rdi, rax	      1356	merge.c	FUNCTION_40	FOR_3	CALL_73
0x40042ce	      0xb800000000	                              mov eax, 0	      1356	merge.c	FUNCTION_40	FOR_3	CALL_73
0x40042d3	      0xe800000000	                          call 0x40042d8	      1356	merge.c	FUNCTION_40	FOR_3	CALL_73
0x40042d8	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      1358	merge.c	FUNCTION_40	FOR_3	CALL_75
0x40042df	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1358	merge.c	FUNCTION_40	FOR_3	CALL_75
0x40042e3	        0x488d4808	                      lea rcx, [rax + 8]	      1358	merge.c	FUNCTION_40	FOR_3	CALL_75
0x40042e7	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1358	merge.c	FUNCTION_40	FOR_3	CALL_75
0x40042ee	      0xba01000000	                              mov edx, 1	      1358	merge.c	FUNCTION_40	FOR_3	CALL_75
0x40042f3	          0x4889ce	                            mov rsi, rcx	      1358	merge.c	FUNCTION_40	FOR_3	CALL_75
0x40042f6	          0x4889c7	                            mov rdi, rax	      1358	merge.c	FUNCTION_40	FOR_3	CALL_75
0x40042f9	      0xe800000000	                          call 0x40042fe	      1358	merge.c	FUNCTION_40	FOR_3	CALL_75
0x40042fe	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      1359	merge.c	FUNCTION_40	FOR_3
0x4004305	      0xbe00000000	                              mov esi, 0	      1359	merge.c	FUNCTION_40	FOR_3
0x400430a	          0x4889c7	                            mov rdi, rax	      1359	merge.c	FUNCTION_40	FOR_3
0x400430d	      0xe8a6beffff	                  call sym.strbuf_setlen	      1359	merge.c	FUNCTION_40	FOR_3
0x4004312	    0x8b0500000000	            mov eax, dword [0x04004318] 	      1360	merge.c	FUNCTION_40	FOR_3	IF_33	CALL_76
0x4004318	          0x83f802	                              cmp eax, 2	      1360	merge.c	FUNCTION_40	FOR_3	IF_33	CALL_76
0x400431b	            0x741d	                            je 0x400433a	      1360	merge.c	FUNCTION_40	FOR_3	IF_33	CALL_76
0x400431d	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      1360	merge.c	FUNCTION_40	FOR_3	IF_33	CALL_76
0x4004324	          0x4889c7	                            mov rdi, rax	      1360	merge.c	FUNCTION_40	FOR_3	IF_33	CALL_76
0x4004327	      0xe8e7f5ffff	        call sym.merging_a_throwaway_tag	      1360	merge.c	FUNCTION_40	FOR_3	IF_33	CALL_76
0x400432c	            0x85c0	                           test eax, eax	      1360	merge.c	FUNCTION_40	FOR_3	IF_33	CALL_76
0x400432e	            0x740a	                            je 0x400433a	      1360	merge.c	FUNCTION_40	FOR_3	IF_33	CALL_76
0x4004330	    0xc70500000000	               mov dword [0x0400433a], 0	      1361	merge.c	FUNCTION_40	FOR_3	IF_33
0x400433a	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      1354	merge.c	FUNCTION_40	FOR_3
0x4004341	        0x488b4008	                mov rax, qword [rax + 8]	      1354	merge.c	FUNCTION_40	FOR_3
0x4004345	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      1354	merge.c	FUNCTION_40	FOR_3
0x400434c	    0x4883bdb8feff	              cmp qword [rbp - 0x148], 0	      1354	merge.c	FUNCTION_40	FOR_3
0x4004354	     0xf853effffff	                           jne 0x4004298	      1354	merge.c	FUNCTION_40	FOR_3
0x400435a	    0x8b0500000000	            mov eax, dword [0x04004360] 	      1364	merge.c	FUNCTION_40	IF_34
0x4004360	            0x85c0	                           test eax, eax	      1364	merge.c	FUNCTION_40	IF_34
0x4004362	            0x790b	                           jns 0x400436f	      1364	merge.c	FUNCTION_40	IF_34
0x4004364	      0xe8a1edffff	            call sym.default_edit_option	      1365	merge.c	FUNCTION_40	CALL_77
0x4004369	    0x890500000000	            mov dword [0x0400436f], eax 	      1365	merge.c	FUNCTION_40	CALL_77
0x400436f	    0x488b05000000	            mov rax, qword [0x04004376] 	      1367	merge.c	FUNCTION_40	IF_35
0x4004376	          0x4885c0	                           test rax, rax	      1367	merge.c	FUNCTION_40	IF_35
0x4004379	            0x7544	                           jne 0x40043bf	      1367	merge.c	FUNCTION_40	IF_35
0x400437b	    0x4883bdd0feff	              cmp qword [rbp - 0x130], 0	      1368	merge.c	FUNCTION_40	IF_35	IF_36
0x4004383	            0x743a	                            je 0x40043bf	      1368	merge.c	FUNCTION_40	IF_35	IF_36
0x4004385	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1370	merge.c	FUNCTION_40	IF_35	ELSE_6	IF_37
0x400438c	        0x488b4008	                mov rax, qword [rax + 8]	      1370	merge.c	FUNCTION_40	IF_35	ELSE_6	IF_37
0x4004390	          0x4885c0	                           test rax, rax	      1370	merge.c	FUNCTION_40	IF_35	ELSE_6	IF_37
0x4004393	            0x7516	                           jne 0x40043ab	      1370	merge.c	FUNCTION_40	IF_35	ELSE_6	IF_37
0x4004395	    0x488b05000000	            mov rax, qword [0x0400439c] 	      1371	merge.c	FUNCTION_40	IF_35	ELSE_6	IF_37
0x400439c	      0xbe01000000	                              mov esi, 1	      1371	merge.c	FUNCTION_40	IF_35	ELSE_6	IF_37
0x40043a1	          0x4889c7	                            mov rdi, rax	      1371	merge.c	FUNCTION_40	IF_35	ELSE_6	IF_37
0x40043a4	      0xe86fe1ffff	                 call sym.add_strategies	      1371	merge.c	FUNCTION_40	IF_35	ELSE_6	IF_37
0x40043a9	            0xeb14	                           jmp 0x40043bf	      1371	merge.c	FUNCTION_40	IF_35	ELSE_6	IF_37
0x40043ab	    0x488b05000000	            mov rax, qword [0x040043b2] 	      1373	merge.c	FUNCTION_40	IF_35	CALL_79
0x40043b2	      0xbe02000000	                              mov esi, 2	      1373	merge.c	FUNCTION_40	IF_35	CALL_79
0x40043b7	          0x4889c7	                            mov rdi, rax	      1373	merge.c	FUNCTION_40	IF_35	CALL_79
0x40043ba	      0xe859e1ffff	                 call sym.add_strategies	      1373	merge.c	FUNCTION_40	IF_35	CALL_79
0x40043bf	    0xc7856cfeffff	              mov dword [rbp - 0x194], 0	      1376	merge.c	FUNCTION_40	FOR_4
0x40043c9	            0xeb63	                           jmp 0x400442e	      1376	merge.c	FUNCTION_40	FOR_4
0x40043cb	    0x488b05000000	            mov rax, qword [0x040043d2] 	      1377	merge.c	FUNCTION_40	FOR_4	IF_38
0x40043d2	    0x8b956cfeffff	            mov edx, dword [rbp - 0x194]	      1377	merge.c	FUNCTION_40	FOR_4	IF_38
0x40043d8	          0x4863d2	                         movsxd rdx, edx	      1377	merge.c	FUNCTION_40	FOR_4	IF_38
0x40043db	        0x48c1e203	                              shl rdx, 3	      1377	merge.c	FUNCTION_40	FOR_4	IF_38
0x40043df	          0x4801d0	                            add rax, rdx	      1377	merge.c	FUNCTION_40	FOR_4	IF_38
0x40043e2	          0x488b00	                    mov rax, qword [rax]	      1377	merge.c	FUNCTION_40	FOR_4	IF_38
0x40043e5	          0x8b4008	                mov eax, dword [rax + 8]	      1377	merge.c	FUNCTION_40	FOR_4	IF_38
0x40043e8	          0x83e004	                              and eax, 4	      1377	merge.c	FUNCTION_40	FOR_4	IF_38
0x40043eb	            0x85c0	                           test eax, eax	      1377	merge.c	FUNCTION_40	FOR_4	IF_38
0x40043ed	            0x740a	                            je 0x40043f9	      1377	merge.c	FUNCTION_40	FOR_4	IF_38
0x40043ef	    0xc70500000000	               mov dword [0x040043f9], 0	      1378	merge.c	FUNCTION_40	FOR_4	IF_38
0x40043f9	    0x488b05000000	            mov rax, qword [0x04004400] 	      1379	merge.c	FUNCTION_40	FOR_4	IF_39
0x4004400	    0x8b956cfeffff	            mov edx, dword [rbp - 0x194]	      1379	merge.c	FUNCTION_40	FOR_4	IF_39
0x4004406	          0x4863d2	                         movsxd rdx, edx	      1379	merge.c	FUNCTION_40	FOR_4	IF_39
0x4004409	        0x48c1e203	                              shl rdx, 3	      1379	merge.c	FUNCTION_40	FOR_4	IF_39
0x400440d	          0x4801d0	                            add rax, rdx	      1379	merge.c	FUNCTION_40	FOR_4	IF_39
0x4004410	          0x488b00	                    mov rax, qword [rax]	      1379	merge.c	FUNCTION_40	FOR_4	IF_39
0x4004413	          0x8b4008	                mov eax, dword [rax + 8]	      1379	merge.c	FUNCTION_40	FOR_4	IF_39
0x4004416	          0x83e008	                              and eax, 8	      1379	merge.c	FUNCTION_40	FOR_4	IF_39
0x4004419	            0x85c0	                           test eax, eax	      1379	merge.c	FUNCTION_40	FOR_4	IF_39
0x400441b	            0x740a	                            je 0x4004427	      1379	merge.c	FUNCTION_40	FOR_4	IF_39
0x400441d	    0xc70500000000	               mov dword [0x04004427], 0	      1380	merge.c	FUNCTION_40	FOR_4	IF_39
0x4004427	    0x83856cfeffff	              add dword [rbp - 0x194], 1	      1376	merge.c	FUNCTION_40	FOR_4
0x400442e	    0x8b856cfeffff	            mov eax, dword [rbp - 0x194]	      1376	merge.c	FUNCTION_40	FOR_4
0x4004434	          0x4863d0	                         movsxd rdx, eax	      1376	merge.c	FUNCTION_40	FOR_4
0x4004437	    0x488b05000000	            mov rax, qword [0x0400443e] 	      1376	merge.c	FUNCTION_40	FOR_4
0x400443e	          0x4839c2	                            cmp rdx, rax	      1376	merge.c	FUNCTION_40	FOR_4
0x4004441	            0x7288	                            jb 0x40043cb	      1376	merge.c	FUNCTION_40	FOR_4
0x4004443	    0x4883bdd0feff	              cmp qword [rbp - 0x130], 0	      1383	merge.c	FUNCTION_40	IF_40
0x400444b	     0xf8481000000	                            je 0x40044d2	      1383	merge.c	FUNCTION_40	IF_40
0x4004451	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1385	merge.c	FUNCTION_40	ELSE_8	IF_41
0x4004458	        0x488b4008	                mov rax, qword [rax + 8]	      1385	merge.c	FUNCTION_40	ELSE_8	IF_41
0x400445c	          0x4885c0	                           test rax, rax	      1385	merge.c	FUNCTION_40	ELSE_8	IF_41
0x400445f	            0x7525	                           jne 0x4004486	      1385	merge.c	FUNCTION_40	ELSE_8	IF_41
0x4004461	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1386	merge.c	FUNCTION_40	ELSE_8	IF_41
0x4004468	          0x488b10	                    mov rdx, qword [rax]	      1386	merge.c	FUNCTION_40	ELSE_8	IF_41
0x400446b	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1386	merge.c	FUNCTION_40	ELSE_8	IF_41
0x4004472	          0x4889d6	                            mov rsi, rdx	      1386	merge.c	FUNCTION_40	ELSE_8	IF_41
0x4004475	          0x4889c7	                            mov rdi, rax	      1386	merge.c	FUNCTION_40	ELSE_8	IF_41
0x4004478	      0xe800000000	                          call 0x400447d	      1386	merge.c	FUNCTION_40	ELSE_8	IF_41
0x400447d	    0x488985a0feff	            mov qword [rbp - 0x160], rax	      1386	merge.c	FUNCTION_40	ELSE_8	IF_41
0x4004484	            0xeb4c	                           jmp 0x40044d2	      1386	merge.c	FUNCTION_40	ELSE_8	IF_41
0x4004486	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1388	merge.c	FUNCTION_40	ELSE_9
0x400448d	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      1388	merge.c	FUNCTION_40	ELSE_9
0x4004494	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      1389	merge.c	FUNCTION_40	ELSE_9	CALL_81
0x400449b	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1389	merge.c	FUNCTION_40	ELSE_9	CALL_81
0x40044a2	          0x4889d6	                            mov rsi, rdx	      1389	merge.c	FUNCTION_40	ELSE_9	CALL_81
0x40044a5	          0x4889c7	                            mov rdi, rax	      1389	merge.c	FUNCTION_40	ELSE_9	CALL_81
0x40044a8	      0xe800000000	                          call 0x40044ad	      1389	merge.c	FUNCTION_40	ELSE_9	CALL_81
0x40044ad	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1390	merge.c	FUNCTION_40	ELSE_9	CALL_82
0x40044b4	          0x4889c7	                            mov rdi, rax	      1390	merge.c	FUNCTION_40	ELSE_9	CALL_82
0x40044b7	      0xe800000000	                          call 0x40044bc	      1390	merge.c	FUNCTION_40	ELSE_9	CALL_82
0x40044bc	    0x488985a0feff	            mov qword [rbp - 0x160], rax	      1390	merge.c	FUNCTION_40	ELSE_9	CALL_82
0x40044c3	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1391	merge.c	FUNCTION_40	ELSE_9	CALL_83
0x40044ca	          0x4889c7	                            mov rdi, rax	      1391	merge.c	FUNCTION_40	ELSE_9	CALL_83
0x40044cd	      0xe800000000	                          call 0x40044d2	      1391	merge.c	FUNCTION_40	ELSE_9	CALL_83
0x40044d2	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1395	merge.c	FUNCTION_40
0x40044d9	        0x4883c004	                              add rax, 4	      1395	merge.c	FUNCTION_40
0x40044dd	    0x41b901000000	                              mov r9d, 1	      1394	merge.c	FUNCTION_40	CALL_84
0x40044e3	    0x41b800000000	                              mov r8d, 0	      1394	merge.c	FUNCTION_40	CALL_84
0x40044e9	      0xb900000000	                              mov ecx, 0	      1394	merge.c	FUNCTION_40	CALL_84
0x40044ee	          0x4889c2	                            mov rdx, rax	      1394	merge.c	FUNCTION_40	CALL_84
0x40044f1	      0xbe00000000	                              mov esi, 0	      1394	merge.c	FUNCTION_40	CALL_84
0x40044f6	      0xbf00000000	                              mov edi, 0	      1394	merge.c	FUNCTION_40	CALL_84
0x40044fb	      0xe800000000	                          call 0x4004500	      1394	merge.c	FUNCTION_40	CALL_84
0x4004500	    0x4883bdd0feff	              cmp qword [rbp - 0x130], 0	      1397	merge.c	FUNCTION_40	IF_42
0x4004508	            0x742f	                            je 0x4004539	      1397	merge.c	FUNCTION_40	IF_42
0x400450a	    0x4883bda0feff	              cmp qword [rbp - 0x160], 0	      1397	merge.c	FUNCTION_40	IF_42
0x4004512	            0x7525	                           jne 0x4004539	      1397	merge.c	FUNCTION_40	IF_42
0x4004514	    0x8b0500000000	            mov eax, dword [0x0400451a] 	      1399	merge.c	FUNCTION_40	IF_42	IF_43
0x400451a	            0x85c0	                           test eax, eax	      1399	merge.c	FUNCTION_40	IF_42	IF_43
0x400451c	     0xf8506040000	                           jne 0x4004928	      1399	merge.c	FUNCTION_40	IF_42	IF_43
0x4004522	      0xbf00000000	                              mov edi, 0	      1400	merge.c	FUNCTION_40	IF_42	CALL_86
0x4004527	      0xe8c9bdffff	                               call sym.	      1400	merge.c	FUNCTION_40	IF_42	CALL_86
0x400452c	          0x4889c7	                            mov rdi, rax	      1400	merge.c	FUNCTION_40	IF_42	CALL_86
0x400452f	      0xb800000000	                              mov eax, 0	      1400	merge.c	FUNCTION_40	IF_42	CALL_86
0x4004534	      0xe800000000	                          call 0x4004539	      1400	merge.c	FUNCTION_40	IF_42	CALL_86
0x4004539	    0x4883bdd0feff	              cmp qword [rbp - 0x130], 0	      1402	merge.c	FUNCTION_40	ELSE_10	IF_44
0x4004541	            0x7439	                            je 0x400457c	      1402	merge.c	FUNCTION_40	ELSE_10	IF_44
0x4004543	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1403	merge.c	FUNCTION_40	ELSE_10	IF_44
0x400454a	        0x488b4008	                mov rax, qword [rax + 8]	      1403	merge.c	FUNCTION_40	ELSE_10	IF_44
0x400454e	          0x4885c0	                           test rax, rax	      1402	merge.c	FUNCTION_40	ELSE_10	IF_44
0x4004551	            0x7540	                           jne 0x4004593	      1402	merge.c	FUNCTION_40	ELSE_10	IF_44
0x4004553	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1403	merge.c	FUNCTION_40	ELSE_10	IF_44
0x400455a	        0x488b4008	                mov rax, qword [rax + 8]	      1403	merge.c	FUNCTION_40	ELSE_10	IF_44
0x400455e	          0x4885c0	                           test rax, rax	      1403	merge.c	FUNCTION_40	ELSE_10	IF_44
0x4004561	            0x7530	                           jne 0x4004593	      1403	merge.c	FUNCTION_40	ELSE_10	IF_44
0x4004563	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1404	merge.c	FUNCTION_40	ELSE_10	IF_44
0x400456a	          0x488b10	                    mov rdx, qword [rax]	      1404	merge.c	FUNCTION_40	ELSE_10	IF_44
0x400456d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1404	merge.c	FUNCTION_40	ELSE_10	IF_44
0x4004574	          0x488b00	                    mov rax, qword [rax]	      1404	merge.c	FUNCTION_40	ELSE_10	IF_44
0x4004577	          0x4839c2	                            cmp rdx, rax	      1403	merge.c	FUNCTION_40	ELSE_10	IF_44
0x400457a	            0x7517	                           jne 0x4004593	      1403	merge.c	FUNCTION_40	ELSE_10	IF_44
0x400457c	      0xbf00000000	                              mov edi, 0	      1409	merge.c	FUNCTION_40	ELSE_10	IF_44	CALL_88
0x4004581	      0xe86fbdffff	                               call sym.	      1409	merge.c	FUNCTION_40	ELSE_10	IF_44	CALL_88
0x4004586	          0x4889c7	                            mov rdi, rax	      1409	merge.c	FUNCTION_40	ELSE_10	IF_44	CALL_88
0x4004589	      0xe88cc9ffff	              call sym.finish_up_to_date	      1409	merge.c	FUNCTION_40	ELSE_10	IF_44	CALL_88
0x400458e	      0xe996070000	                           jmp 0x4004d29	      1410	merge.c	FUNCTION_40	ELSE_10	IF_44
0x4004593	    0x8b0500000000	            mov eax, dword [0x04004599] 	      1411	merge.c	FUNCTION_40	ELSE_11	IF_45
0x4004599	            0x85c0	                           test eax, eax	      1411	merge.c	FUNCTION_40	ELSE_11	IF_45
0x400459b	     0xf84a9010000	                            je 0x400474a	      1411	merge.c	FUNCTION_40	ELSE_11	IF_45
0x40045a1	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1411	merge.c	FUNCTION_40	ELSE_11	IF_45
0x40045a8	        0x488b4008	                mov rax, qword [rax + 8]	      1411	merge.c	FUNCTION_40	ELSE_11	IF_45
0x40045ac	          0x4885c0	                           test rax, rax	      1411	merge.c	FUNCTION_40	ELSE_11	IF_45
0x40045af	     0xf8595010000	                           jne 0x400474a	      1411	merge.c	FUNCTION_40	ELSE_11	IF_45
0x40045b5	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1412	merge.c	FUNCTION_40	ELSE_11	IF_45
0x40045bc	        0x488b4008	                mov rax, qword [rax + 8]	      1412	merge.c	FUNCTION_40	ELSE_11	IF_45
0x40045c0	          0x4885c0	                           test rax, rax	      1411	merge.c	FUNCTION_40	ELSE_11	IF_45
0x40045c3	     0xf8581010000	                           jne 0x400474a	      1411	merge.c	FUNCTION_40	ELSE_11	IF_45
0x40045c9	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1413	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_89
0x40045d0	        0x488d5004	                      lea rdx, [rax + 4]	      1413	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_89
0x40045d4	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1413	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_89
0x40045db	          0x488b00	                    mov rax, qword [rax]	      1413	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_89
0x40045de	        0x4883c004	                              add rax, 4	      1413	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_89
0x40045e2	          0x4889d6	                            mov rsi, rdx	      1413	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_89
0x40045e5	          0x4889c7	                            mov rdi, rax	      1413	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_89
0x40045e8	      0xe85ebdffff	                         call sym.oidcmp	      1413	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_89
0x40045ed	            0x85c0	                           test eax, eax	      1412	merge.c	FUNCTION_40	ELSE_11	IF_45
0x40045ef	     0xf8555010000	                           jne 0x400474a	      1412	merge.c	FUNCTION_40	ELSE_11	IF_45
0x40045f5	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	      1415	merge.c	FUNCTION_40	ELSE_11	IF_45
0x4004600	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      1415	merge.c	FUNCTION_40	ELSE_11	IF_45
0x400460b	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	      1415	merge.c	FUNCTION_40	ELSE_11	IF_45
0x4004616	    0x8b0500000000	            mov eax, dword [0x0400461c] 	      1418	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46
0x400461c	            0x85c0	                           test eax, eax	      1418	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46
0x400461e	            0x785c	                            js 0x400467c	      1418	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46
0x4004620	    0x8b0500000000	            mov eax, dword [0x04004626] 	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x4004626	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      1422	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_93
0x400462d	          0x488b12	                    mov rdx, qword [rdx]	      1422	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_93
0x4004630	        0x4883c204	                              add rdx, 4	      1422	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_93
0x4004634	            0x89c6	                            mov esi, eax	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x4004636	          0x4889d7	                            mov rdi, rdx	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x4004639	      0xe800000000	                          call 0x400463e	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x400463e	          0x4989c4	                            mov r12, rax	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x4004641	    0x8b0500000000	            mov eax, dword [0x04004647] 	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x4004647	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      1420	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_92
0x400464e	        0x4883c204	                              add rdx, 4	      1420	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_92
0x4004652	            0x89c6	                            mov esi, eax	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x4004654	          0x4889d7	                            mov rdi, rdx	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x4004657	      0xe800000000	                          call 0x400465c	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x400465c	          0x4889c3	                            mov rbx, rax	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x400465f	      0xbf00000000	                              mov edi, 0	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x4004664	      0xe88cbcffff	                               call sym.	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x4004669	          0x4c89e2	                            mov rdx, r12	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x400466c	          0x4889de	                            mov rsi, rbx	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x400466f	          0x4889c7	                            mov rdi, rax	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x4004672	      0xb800000000	                              mov eax, 0	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x4004677	      0xe800000000	                          call 0x400467c	      1419	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_46	CALL_91
0x400467c	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      1425	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_94
0x4004683	      0xbe00000000	                              mov esi, 0	      1425	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_94
0x4004688	          0x4889c7	                            mov rdi, rax	      1425	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_94
0x400468b	      0xe830bcffff	                  call sym.strbuf_addstr	      1425	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_94
0x4004690	    0x8b0500000000	            mov eax, dword [0x04004696] 	      1426	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_47
0x4004696	            0x85c0	                           test eax, eax	      1426	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_47
0x4004698	            0x7414	                            je 0x40046ae	      1426	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_47
0x400469a	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      1427	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_47	CALL_95
0x40046a1	      0xbe00000000	                              mov esi, 0	      1427	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_47	CALL_95
0x40046a6	          0x4889c7	                            mov rdi, rax	      1427	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_47	CALL_95
0x40046a9	      0xe812bcffff	                  call sym.strbuf_addstr	      1427	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_47	CALL_95
0x40046ae	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1429	merge.c	FUNCTION_40	ELSE_11	IF_45
0x40046b5	          0x488b00	                    mov rax, qword [rax]	      1429	merge.c	FUNCTION_40	ELSE_11	IF_45
0x40046b8	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      1429	merge.c	FUNCTION_40	ELSE_11	IF_45
0x40046bf	    0x4883bdf0feff	              cmp qword [rbp - 0x110], 0	      1430	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_48
0x40046c7	            0x750f	                           jne 0x40046d8	      1430	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_48
0x40046c9	    0xc78570feffff	              mov dword [rbp - 0x190], 1	      1431	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_48
0x40046d3	      0xe951060000	                           jmp 0x4004d29	      1432	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_48
0x40046d8	    0x8b0500000000	            mov eax, dword [0x040046de] 	      1435	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_49	CALL_96
0x40046de	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      1436	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_49
0x40046e5	        0x488d7204	                      lea rsi, [rdx + 4]	      1436	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_49
0x40046e9	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      1435	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_49	CALL_96
0x40046f0	        0x488d4a04	                      lea rcx, [rdx + 4]	      1435	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_49	CALL_96
0x40046f4	            0x89c2	                            mov edx, eax	      1435	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_49	CALL_96
0x40046f6	          0x4889cf	                            mov rdi, rcx	      1435	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_49	CALL_96
0x40046f9	      0xe800000000	                          call 0x40046fe	      1435	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_49	CALL_96
0x40046fe	            0x85c0	                           test eax, eax	      1435	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_49	CALL_96
0x4004700	            0x740f	                            je 0x4004711	      1435	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_49	CALL_96
0x4004702	    0xc78570feffff	              mov dword [rbp - 0x190], 1	      1438	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_49
0x400470c	      0xe918060000	                           jmp 0x4004d29	      1439	merge.c	FUNCTION_40	ELSE_11	IF_45	IF_49
0x4004711	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      1442	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_97
0x4004718	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      1442	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_97
0x400471f	        0x488d7804	                      lea rdi, [rax + 4]	      1442	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_97
0x4004723	    0x488bb5d0feff	            mov rsi, qword [rbp - 0x130]	      1442	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_97
0x400472a	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1442	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_97
0x4004731	          0x4889d1	                            mov rcx, rdx	      1442	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_97
0x4004734	          0x4889fa	                            mov rdx, rdi	      1442	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_97
0x4004737	          0x4889c7	                            mov rdi, rax	      1442	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_97
0x400473a	      0xe8f2caffff	                         call sym.finish	      1442	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_97
0x400473f	      0xe8fec2ffff	                      call sym.drop_save	      1443	merge.c	FUNCTION_40	ELSE_11	IF_45	CALL_98
0x4004744	              0x90	                                     nop	      1444	merge.c	FUNCTION_40	ELSE_11	IF_45
0x4004745	      0xe9df050000	                           jmp 0x4004d29	      1444	merge.c	FUNCTION_40	ELSE_11	IF_45
0x400474a	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1445	merge.c	FUNCTION_40	ELSE_12	IF_50
0x4004751	        0x488b4008	                mov rax, qword [rax + 8]	      1445	merge.c	FUNCTION_40	ELSE_12	IF_50
0x4004755	          0x4885c0	                           test rax, rax	      1445	merge.c	FUNCTION_40	ELSE_12	IF_50
0x4004758	            0x7514	                           jne 0x400476e	      1445	merge.c	FUNCTION_40	ELSE_12	IF_50
0x400475a	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1445	merge.c	FUNCTION_40	ELSE_12	IF_50
0x4004761	        0x488b4008	                mov rax, qword [rax + 8]	      1445	merge.c	FUNCTION_40	ELSE_12	IF_50
0x4004765	          0x4885c0	                           test rax, rax	      1445	merge.c	FUNCTION_40	ELSE_12	IF_50
0x4004768	     0xf85ba010000	                           jne 0x4004928	      1445	merge.c	FUNCTION_40	ELSE_12	IF_50
0x400476e	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1451	merge.c	FUNCTION_40	ELSE_13	IF_51
0x4004775	        0x488b4008	                mov rax, qword [rax + 8]	      1451	merge.c	FUNCTION_40	ELSE_13	IF_51
0x4004779	          0x4885c0	                           test rax, rax	      1451	merge.c	FUNCTION_40	ELSE_13	IF_51
0x400477c	     0xf85f5000000	                           jne 0x4004877	      1451	merge.c	FUNCTION_40	ELSE_13	IF_51
0x4004782	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1451	merge.c	FUNCTION_40	ELSE_13	IF_51
0x4004789	        0x488b4008	                mov rax, qword [rax + 8]	      1451	merge.c	FUNCTION_40	ELSE_13	IF_51
0x400478d	          0x4885c0	                           test rax, rax	      1451	merge.c	FUNCTION_40	ELSE_13	IF_51
0x4004790	     0xf85e1000000	                           jne 0x4004877	      1451	merge.c	FUNCTION_40	ELSE_13	IF_51
0x4004796	    0x8b0500000000	            mov eax, dword [0x0400479c] 	      1451	merge.c	FUNCTION_40	ELSE_13	IF_51
0x400479c	            0x85c0	                           test eax, eax	      1451	merge.c	FUNCTION_40	ELSE_13	IF_51
0x400479e	     0xf84d3000000	                            je 0x4004877	      1451	merge.c	FUNCTION_40	ELSE_13	IF_51
0x40047a4	    0x41b800000000	                              mov r8d, 0	      1456	merge.c	FUNCTION_40	ELSE_13	IF_51
0x40047aa	      0xb900000000	                              mov ecx, 0	      1456	merge.c	FUNCTION_40	ELSE_13	IF_51
0x40047af	      0xba00000000	                              mov edx, 0	      1456	merge.c	FUNCTION_40	ELSE_13	IF_51
0x40047b4	      0xbe04000000	                              mov esi, 4	      1456	merge.c	FUNCTION_40	ELSE_13	IF_51
0x40047b9	      0xbf00000000	                              mov edi, 0	      1456	merge.c	FUNCTION_40	ELSE_13	IF_51
0x40047be	      0xe800000000	                          call 0x40047c3	      1456	merge.c	FUNCTION_40	ELSE_13	IF_51
0x40047c3	    0x8b0500000000	            mov eax, dword [0x040047c9] 	      1457	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52
0x40047c9	            0x85c0	                           test eax, eax	      1457	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52
0x40047cb	     0xf8456010000	                            je 0x4004927	      1457	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52
0x40047d1	    0x8b0500000000	            mov eax, dword [0x040047d7] 	      1457	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52
0x40047d7	          0x83f802	                              cmp eax, 2	      1457	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52
0x40047da	     0xf8447010000	                            je 0x4004927	      1457	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52
0x40047e0	      0xbf01000000	                              mov edi, 1	      1459	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	CALL_99
0x40047e5	      0xe800000000	                          call 0x40047ea	      1459	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	CALL_99
0x40047ea	      0xbf00000000	                              mov edi, 0	      1460	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	CALL_101
0x40047ef	      0xe801bbffff	                               call sym.	      1460	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	CALL_101
0x40047f4	          0x4889c7	                            mov rdi, rax	      1460	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	CALL_101
0x40047f7	      0xb800000000	                              mov eax, 0	      1460	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	CALL_101
0x40047fc	      0xe800000000	                          call 0x4004801	      1460	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	CALL_101
0x4004801	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1463	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53
0x4004808	          0x488b00	                    mov rax, qword [rax]	      1463	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53
0x400480b	        0x488d5004	                      lea rdx, [rax + 4]	      1461	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_102
0x400480f	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1461	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_102
0x4004816	        0x488d4804	                      lea rcx, [rax + 4]	      1461	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_102
0x400481a	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      1461	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_102
0x4004821	          0x488b00	                    mov rax, qword [rax]	      1461	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_102
0x4004824	        0x4883c004	                              add rax, 4	      1461	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_102
0x4004828	          0x4889ce	                            mov rsi, rcx	      1461	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_102
0x400482b	          0x4889c7	                            mov rdi, rax	      1461	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_102
0x400482e	      0xe833d6ffff	              call sym.read_tree_trivial	      1461	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_102
0x4004833	            0x85c0	                           test eax, eax	      1461	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_102
0x4004835	            0x7524	                           jne 0x400485b	      1461	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_102
0x4004837	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      1464	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_103
0x400483e	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1464	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_103
0x4004845	          0x4889d6	                            mov rsi, rdx	      1464	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_103
0x4004848	          0x4889c7	                            mov rdi, rax	      1464	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_103
0x400484b	      0xe834e1ffff	                  call sym.merge_trivial	      1464	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_103
0x4004850	    0x898570feffff	            mov dword [rbp - 0x190], eax	      1464	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53	CALL_103
0x4004856	      0xe9ce040000	                           jmp 0x4004d29	      1465	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	IF_53
0x400485b	      0xbf00000000	                              mov edi, 0	      1467	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	CALL_105
0x4004860	      0xe890baffff	                               call sym.	      1467	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	CALL_105
0x4004865	          0x4889c7	                            mov rdi, rax	      1467	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	CALL_105
0x4004868	      0xb800000000	                              mov eax, 0	      1467	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	CALL_105
0x400486d	      0xe800000000	                          call 0x4004872	      1467	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52	CALL_105
0x4004872	      0xe9b0000000	                           jmp 0x4004927	      1457	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52
0x4004877	    0xc78580feffff	              mov dword [rbp - 0x180], 1	      1474	merge.c	FUNCTION_40	ELSE_14
0x4004881	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1477	merge.c	FUNCTION_40	ELSE_14	FOR_5
0x4004888	    0x488985c0feff	            mov qword [rbp - 0x140], rax	      1477	merge.c	FUNCTION_40	ELSE_14	FOR_5
0x400488f	            0xeb6c	                           jmp 0x40048fd	      1477	merge.c	FUNCTION_40	ELSE_14	FOR_5
0x4004891	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1485	merge.c	FUNCTION_40	ELSE_14	FOR_5	CALL_106
0x4004898	          0x488b10	                    mov rdx, qword [rax]	      1485	merge.c	FUNCTION_40	ELSE_14	FOR_5	CALL_106
0x400489b	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1485	merge.c	FUNCTION_40	ELSE_14	FOR_5	CALL_106
0x40048a2	          0x4889d6	                            mov rsi, rdx	      1485	merge.c	FUNCTION_40	ELSE_14	FOR_5	CALL_106
0x40048a5	          0x4889c7	                            mov rdi, rax	      1485	merge.c	FUNCTION_40	ELSE_14	FOR_5	CALL_106
0x40048a8	      0xe800000000	                          call 0x40048ad	      1485	merge.c	FUNCTION_40	ELSE_14	FOR_5	CALL_106
0x40048ad	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      1485	merge.c	FUNCTION_40	ELSE_14	FOR_5	CALL_106
0x40048b4	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1486	merge.c	FUNCTION_40	ELSE_14	FOR_5	IF_54	CALL_107
0x40048bb	          0x488b00	                    mov rax, qword [rax]	      1486	merge.c	FUNCTION_40	ELSE_14	FOR_5	IF_54	CALL_107
0x40048be	        0x488d5004	                      lea rdx, [rax + 4]	      1486	merge.c	FUNCTION_40	ELSE_14	FOR_5	IF_54	CALL_107
0x40048c2	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1486	merge.c	FUNCTION_40	ELSE_14	FOR_5	IF_54	CALL_107
0x40048c9	          0x488b00	                    mov rax, qword [rax]	      1486	merge.c	FUNCTION_40	ELSE_14	FOR_5	IF_54	CALL_107
0x40048cc	        0x4883c004	                              add rax, 4	      1486	merge.c	FUNCTION_40	ELSE_14	FOR_5	IF_54	CALL_107
0x40048d0	          0x4889d6	                            mov rsi, rdx	      1486	merge.c	FUNCTION_40	ELSE_14	FOR_5	IF_54	CALL_107
0x40048d3	          0x4889c7	                            mov rdi, rax	      1486	merge.c	FUNCTION_40	ELSE_14	FOR_5	IF_54	CALL_107
0x40048d6	      0xe870baffff	                         call sym.oidcmp	      1486	merge.c	FUNCTION_40	ELSE_14	FOR_5	IF_54	CALL_107
0x40048db	            0x85c0	                           test eax, eax	      1486	merge.c	FUNCTION_40	ELSE_14	FOR_5	IF_54	CALL_107
0x40048dd	            0x740c	                            je 0x40048eb	      1486	merge.c	FUNCTION_40	ELSE_14	FOR_5	IF_54	CALL_107
0x40048df	    0xc78580feffff	              mov dword [rbp - 0x180], 0	      1487	merge.c	FUNCTION_40	ELSE_14	FOR_5	IF_54
0x40048e9	            0xeb1c	                           jmp 0x4004907	      1488	merge.c	FUNCTION_40	ELSE_14	FOR_5	IF_54
0x40048eb	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1477	merge.c	FUNCTION_40	ELSE_14	FOR_5
0x40048f2	        0x488b4008	                mov rax, qword [rax + 8]	      1477	merge.c	FUNCTION_40	ELSE_14	FOR_5
0x40048f6	    0x488985c0feff	            mov qword [rbp - 0x140], rax	      1477	merge.c	FUNCTION_40	ELSE_14	FOR_5
0x40048fd	    0x4883bdc0feff	              cmp qword [rbp - 0x140], 0	      1477	merge.c	FUNCTION_40	ELSE_14	FOR_5
0x4004905	            0x758a	                           jne 0x4004891	      1477	merge.c	FUNCTION_40	ELSE_14	FOR_5
0x4004907	    0x83bd80feffff	              cmp dword [rbp - 0x180], 0	      1491	merge.c	FUNCTION_40	ELSE_14	IF_55
0x400490e	            0x7418	                            je 0x4004928	      1491	merge.c	FUNCTION_40	ELSE_14	IF_55
0x4004910	      0xbf00000000	                              mov edi, 0	      1492	merge.c	FUNCTION_40	ELSE_14	IF_55	CALL_109
0x4004915	      0xe8dbb9ffff	                               call sym.	      1492	merge.c	FUNCTION_40	ELSE_14	IF_55	CALL_109
0x400491a	          0x4889c7	                            mov rdi, rax	      1492	merge.c	FUNCTION_40	ELSE_14	IF_55	CALL_109
0x400491d	      0xe8f8c5ffff	              call sym.finish_up_to_date	      1492	merge.c	FUNCTION_40	ELSE_14	IF_55	CALL_109
0x4004922	      0xe902040000	                           jmp 0x4004d29	      1493	merge.c	FUNCTION_40	ELSE_14	IF_55
0x4004927	              0x90	                                     nop	      1457	merge.c	FUNCTION_40	ELSE_13	IF_51	IF_52
0x4004928	    0x8b0500000000	            mov eax, dword [0x0400492e] 	      1497	merge.c	FUNCTION_40	IF_56
0x400492e	          0x83f802	                              cmp eax, 2	      1497	merge.c	FUNCTION_40	IF_56
0x4004931	            0x7517	                           jne 0x400494a	      1497	merge.c	FUNCTION_40	IF_56
0x4004933	      0xbf00000000	                              mov edi, 0	      1498	merge.c	FUNCTION_40	CALL_111
0x4004938	      0xe8b8b9ffff	                               call sym.	      1498	merge.c	FUNCTION_40	CALL_111
0x400493d	          0x4889c7	                            mov rdi, rax	      1498	merge.c	FUNCTION_40	CALL_111
0x4004940	      0xb800000000	                              mov eax, 0	      1498	merge.c	FUNCTION_40	CALL_111
0x4004945	      0xe800000000	                          call 0x400494a	      1498	merge.c	FUNCTION_40	CALL_111
0x400494a	      0xbf01000000	                              mov edi, 1	      1501	merge.c	FUNCTION_40	CALL_112
0x400494f	      0xe800000000	                          call 0x4004954	      1501	merge.c	FUNCTION_40	CALL_112
0x4004954	    0x488b05000000	            mov rax, qword [0x0400495b] 	      1511	merge.c	FUNCTION_40	IF_57
0x400495b	        0x4883f801	                              cmp rax, 1	      1511	merge.c	FUNCTION_40	IF_57
0x400495f	            0x7410	                            je 0x4004971	      1511	merge.c	FUNCTION_40	IF_57
0x4004961	        0x488d4590	                   lea rax, [rbp - 0x70]	      1515	merge.c	FUNCTION_40	IF_57	CALL_113
0x4004965	          0x4889c7	                            mov rdi, rax	      1515	merge.c	FUNCTION_40	IF_57	CALL_113
0x4004968	      0xe803c1ffff	                     call sym.save_state	      1515	merge.c	FUNCTION_40	IF_57	CALL_113
0x400496d	            0x85c0	                           test eax, eax	      1511	merge.c	FUNCTION_40	IF_57
0x400496f	            0x740c	                            je 0x400497d	      1511	merge.c	FUNCTION_40	IF_57
0x4004971	        0x488d4590	                   lea rax, [rbp - 0x70]	      1516	merge.c	FUNCTION_40	CALL_114
0x4004975	          0x4889c7	                            mov rdi, rax	      1516	merge.c	FUNCTION_40	CALL_114
0x4004978	      0xe81abaffff	                         call sym.oidclr	      1516	merge.c	FUNCTION_40	CALL_114
0x400497d	    0xc7856cfeffff	              mov dword [rbp - 0x194], 0	      1518	merge.c	FUNCTION_40	FOR_6
0x4004987	      0xe99a010000	                           jmp 0x4004b26	      1518	merge.c	FUNCTION_40	FOR_6
0x400498c	    0x83bd6cfeffff	              cmp dword [rbp - 0x194], 0	      1520	merge.c	FUNCTION_40	FOR_6	IF_58
0x4004993	            0x7431	                            je 0x40049c6	      1520	merge.c	FUNCTION_40	FOR_6	IF_58
0x4004995	      0xbf00000000	                              mov edi, 0	      1521	merge.c	FUNCTION_40	FOR_6	IF_58	CALL_116
0x400499a	      0xe856b9ffff	                               call sym.	      1521	merge.c	FUNCTION_40	FOR_6	IF_58	CALL_116
0x400499f	          0x4889c7	                            mov rdi, rax	      1521	merge.c	FUNCTION_40	FOR_6	IF_58	CALL_116
0x40049a2	      0xb800000000	                              mov eax, 0	      1521	merge.c	FUNCTION_40	FOR_6	IF_58	CALL_116
0x40049a7	      0xe800000000	                          call 0x40049ac	      1521	merge.c	FUNCTION_40	FOR_6	IF_58	CALL_116
0x40049ac	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1522	merge.c	FUNCTION_40	FOR_6	IF_58	CALL_117
0x40049b3	        0x488d5004	                      lea rdx, [rax + 4]	      1522	merge.c	FUNCTION_40	FOR_6	IF_58	CALL_117
0x40049b7	        0x488d4590	                   lea rax, [rbp - 0x70]	      1522	merge.c	FUNCTION_40	FOR_6	IF_58	CALL_117
0x40049bb	          0x4889c6	                            mov rsi, rax	      1522	merge.c	FUNCTION_40	FOR_6	IF_58	CALL_117
0x40049be	          0x4889d7	                            mov rdi, rdx	      1522	merge.c	FUNCTION_40	FOR_6	IF_58	CALL_117
0x40049c1	      0xe877c4ffff	                  call sym.restore_state	      1522	merge.c	FUNCTION_40	FOR_6	IF_58	CALL_117
0x40049c6	    0x488b05000000	            mov rax, qword [0x040049cd] 	      1524	merge.c	FUNCTION_40	FOR_6	IF_59
0x40049cd	        0x4883f801	                              cmp rax, 1	      1524	merge.c	FUNCTION_40	FOR_6	IF_59
0x40049d1	            0x7437	                            je 0x4004a0a	      1524	merge.c	FUNCTION_40	FOR_6	IF_59
0x40049d3	    0x488b05000000	            mov rax, qword [0x040049da] 	      1526	merge.c	FUNCTION_40	FOR_6	IF_59
0x40049da	    0x8b956cfeffff	            mov edx, dword [rbp - 0x194]	      1526	merge.c	FUNCTION_40	FOR_6	IF_59
0x40049e0	          0x4863d2	                         movsxd rdx, edx	      1526	merge.c	FUNCTION_40	FOR_6	IF_59
0x40049e3	        0x48c1e203	                              shl rdx, 3	      1526	merge.c	FUNCTION_40	FOR_6	IF_59
0x40049e7	          0x4801d0	                            add rax, rdx	      1526	merge.c	FUNCTION_40	FOR_6	IF_59
0x40049ea	          0x488b00	                    mov rax, qword [rax]	      1526	merge.c	FUNCTION_40	FOR_6	IF_59
0x40049ed	          0x488b18	                    mov rbx, qword [rax]	      1525	merge.c	FUNCTION_40	FOR_6	IF_59	CALL_119
0x40049f0	      0xbf00000000	                              mov edi, 0	      1525	merge.c	FUNCTION_40	FOR_6	IF_59	CALL_119
0x40049f5	      0xe8fbb8ffff	                               call sym.	      1525	merge.c	FUNCTION_40	FOR_6	IF_59	CALL_119
0x40049fa	          0x4889de	                            mov rsi, rbx	      1525	merge.c	FUNCTION_40	FOR_6	IF_59	CALL_119
0x40049fd	          0x4889c7	                            mov rdi, rax	      1525	merge.c	FUNCTION_40	FOR_6	IF_59	CALL_119
0x4004a00	      0xb800000000	                              mov eax, 0	      1525	merge.c	FUNCTION_40	FOR_6	IF_59	CALL_119
0x4004a05	      0xe800000000	                          call 0x4004a0a	      1525	merge.c	FUNCTION_40	FOR_6	IF_59	CALL_119
0x4004a0a	    0x488b05000000	            mov rax, qword [0x04004a11] 	      1531	merge.c	FUNCTION_40	FOR_6
0x4004a11	    0x8b956cfeffff	            mov edx, dword [rbp - 0x194]	      1531	merge.c	FUNCTION_40	FOR_6
0x4004a17	          0x4863d2	                         movsxd rdx, edx	      1531	merge.c	FUNCTION_40	FOR_6
0x4004a1a	        0x48c1e203	                              shl rdx, 3	      1531	merge.c	FUNCTION_40	FOR_6
0x4004a1e	          0x4801d0	                            add rax, rdx	      1531	merge.c	FUNCTION_40	FOR_6
0x4004a21	          0x488b00	                    mov rax, qword [rax]	      1531	merge.c	FUNCTION_40	FOR_6
0x4004a24	          0x488b00	                    mov rax, qword [rax]	      1531	merge.c	FUNCTION_40	FOR_6
0x4004a27	    0x488985b0feff	            mov qword [rbp - 0x150], rax	      1531	merge.c	FUNCTION_40	FOR_6
0x4004a2e	    0x488b05000000	            mov rax, qword [0x04004a35] 	      1533	merge.c	FUNCTION_40	FOR_6	CALL_120
0x4004a35	    0x8b956cfeffff	            mov edx, dword [rbp - 0x194]	      1533	merge.c	FUNCTION_40	FOR_6	CALL_120
0x4004a3b	          0x4863d2	                         movsxd rdx, edx	      1533	merge.c	FUNCTION_40	FOR_6	CALL_120
0x4004a3e	        0x48c1e203	                              shl rdx, 3	      1533	merge.c	FUNCTION_40	FOR_6	CALL_120
0x4004a42	          0x4801d0	                            add rax, rdx	      1533	merge.c	FUNCTION_40	FOR_6	CALL_120
0x4004a45	          0x488b00	                    mov rax, qword [rax]	      1533	merge.c	FUNCTION_40	FOR_6	CALL_120
0x4004a48	          0x488b00	                    mov rax, qword [rax]	      1533	merge.c	FUNCTION_40	FOR_6	CALL_120
0x4004a4b	    0x488b8d98feff	            mov rcx, qword [rbp - 0x168]	      1533	merge.c	FUNCTION_40	FOR_6	CALL_120
0x4004a52	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      1533	merge.c	FUNCTION_40	FOR_6	CALL_120
0x4004a59	    0x488bb5a0feff	            mov rsi, qword [rbp - 0x160]	      1533	merge.c	FUNCTION_40	FOR_6	CALL_120
0x4004a60	          0x4889c7	                            mov rdi, rax	      1533	merge.c	FUNCTION_40	FOR_6	CALL_120
0x4004a63	      0xe8a6d6ffff	             call sym.try_merge_strategy	      1533	merge.c	FUNCTION_40	FOR_6	CALL_120
0x4004a68	    0x898584feffff	            mov dword [rbp - 0x17c], eax	      1533	merge.c	FUNCTION_40	FOR_6	CALL_120
0x4004a6e	    0x8b0500000000	            mov eax, dword [0x04004a74] 	      1536	merge.c	FUNCTION_40	FOR_6	IF_60
0x4004a74	            0x85c0	                           test eax, eax	      1536	merge.c	FUNCTION_40	FOR_6	IF_60
0x4004a76	            0x751d	                           jne 0x4004a95	      1536	merge.c	FUNCTION_40	FOR_6	IF_60
0x4004a78	    0x83bd84feffff	              cmp dword [rbp - 0x17c], 0	      1536	merge.c	FUNCTION_40	FOR_6	IF_60
0x4004a7f	            0x7514	                           jne 0x4004a95	      1536	merge.c	FUNCTION_40	FOR_6	IF_60
0x4004a81	    0xc78578feffff	              mov dword [rbp - 0x188], 1	      1537	merge.c	FUNCTION_40	FOR_6	IF_60
0x4004a8b	    0xc78584feffff	              mov dword [rbp - 0x17c], 1	      1543	merge.c	FUNCTION_40	FOR_6	IF_60
0x4004a95	    0x83bd84feffff	              cmp dword [rbp - 0x17c], 0	      1546	merge.c	FUNCTION_40	FOR_6	IF_61
0x4004a9c	            0x746d	                            je 0x4004b0b	      1546	merge.c	FUNCTION_40	FOR_6	IF_61
0x4004a9e	    0x83bd84feffff	              cmp dword [rbp - 0x17c], 1	      1552	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62
0x4004aa5	            0x7552	                           jne 0x4004af9	      1552	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62
0x4004aa7	      0xe866e2ffff	                call sym.evaluate_result	      1553	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	CALL_121
0x4004aac	    0x898594feffff	            mov dword [rbp - 0x16c], eax	      1553	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	CALL_121
0x4004ab2	    0x83bd74feffff	              cmp dword [rbp - 0x18c], 0	      1555	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	IF_63
0x4004ab9	            0x7e0e	                           jle 0x4004ac9	      1555	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	IF_63
0x4004abb	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      1555	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	IF_63
0x4004ac1	    0x3b8574feffff	            cmp eax, dword [rbp - 0x18c]	      1555	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	IF_63
0x4004ac7	            0x7f30	                            jg 0x4004af9	      1555	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	IF_63
0x4004ac9	    0x488b05000000	            mov rax, qword [0x04004ad0] 	      1556	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	IF_63
0x4004ad0	    0x8b956cfeffff	            mov edx, dword [rbp - 0x194]	      1556	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	IF_63
0x4004ad6	          0x4863d2	                         movsxd rdx, edx	      1556	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	IF_63
0x4004ad9	        0x48c1e203	                              shl rdx, 3	      1556	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	IF_63
0x4004add	          0x4801d0	                            add rax, rdx	      1556	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	IF_63
0x4004ae0	          0x488b00	                    mov rax, qword [rax]	      1556	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	IF_63
0x4004ae3	          0x488b00	                    mov rax, qword [rax]	      1556	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	IF_63
0x4004ae6	    0x488985a8feff	            mov qword [rbp - 0x158], rax	      1556	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	IF_63
0x4004aed	    0x8b8594feffff	            mov eax, dword [rbp - 0x16c]	      1557	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	IF_63
0x4004af3	    0x898574feffff	            mov dword [rbp - 0x18c], eax	      1557	merge.c	FUNCTION_40	FOR_6	IF_61	IF_62	IF_63
0x4004af9	    0x83bd78feffff	              cmp dword [rbp - 0x188], 0	      1560	merge.c	FUNCTION_40	FOR_6	IF_61	IF_64
0x4004b00	            0x753f	                           jne 0x4004b41	      1560	merge.c	FUNCTION_40	FOR_6	IF_61	IF_64
0x4004b02	    0x83856cfeffff	              add dword [rbp - 0x194], 1	      1518	merge.c	FUNCTION_40	FOR_6
0x4004b09	            0xeb1b	                           jmp 0x4004b26	      1518	merge.c	FUNCTION_40	FOR_6
0x4004b0b	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1567	merge.c	FUNCTION_40	FOR_6	CALL_122
0x4004b12	          0x4889c7	                            mov rdi, rax	      1567	merge.c	FUNCTION_40	FOR_6	CALL_122
0x4004b15	      0xe8b4d5ffff	             call sym.write_tree_trivial	      1567	merge.c	FUNCTION_40	FOR_6	CALL_122
0x4004b1a	    0xc7857cfeffff	              mov dword [rbp - 0x184], 1	      1568	merge.c	FUNCTION_40	FOR_6
0x4004b24	            0xeb1c	                           jmp 0x4004b42	      1569	merge.c	FUNCTION_40	FOR_6
0x4004b26	    0x8b856cfeffff	            mov eax, dword [rbp - 0x194]	      1518	merge.c	FUNCTION_40	FOR_6
0x4004b2c	          0x4863d0	                         movsxd rdx, eax	      1518	merge.c	FUNCTION_40	FOR_6
0x4004b2f	    0x488b05000000	            mov rax, qword [0x04004b36] 	      1518	merge.c	FUNCTION_40	FOR_6
0x4004b36	          0x4839c2	                            cmp rdx, rax	      1518	merge.c	FUNCTION_40	FOR_6
0x4004b39	     0xf824dfeffff	                            jb 0x400498c	      1518	merge.c	FUNCTION_40	FOR_6
0x4004b3f	            0xeb01	                           jmp 0x4004b42	      1518	merge.c	FUNCTION_40	FOR_6
0x4004b41	              0x90	                                     nop	      1561	merge.c	FUNCTION_40	FOR_6	IF_61	IF_64
0x4004b42	    0x83bd7cfeffff	              cmp dword [rbp - 0x184], 0	      1576	merge.c	FUNCTION_40	IF_65
0x4004b49	            0x7442	                            je 0x4004b8d	      1576	merge.c	FUNCTION_40	IF_65
0x4004b4b	    0x8bb568feffff	            mov esi, dword [rbp - 0x198]	      1577	merge.c	FUNCTION_40	IF_65	CALL_123
0x4004b51	    0x4c8b85b0feff	             mov r8, qword [rbp - 0x150]	      1577	merge.c	FUNCTION_40	IF_65	CALL_123
0x4004b58	    0x488dbd50ffff	                   lea rdi, [rbp - 0xb0]	      1577	merge.c	FUNCTION_40	IF_65	CALL_123
0x4004b5f	    0x488b8dd0feff	            mov rcx, qword [rbp - 0x130]	      1577	merge.c	FUNCTION_40	IF_65	CALL_123
0x4004b66	    0x488b95a0feff	            mov rdx, qword [rbp - 0x160]	      1577	merge.c	FUNCTION_40	IF_65	CALL_123
0x4004b6d	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1577	merge.c	FUNCTION_40	IF_65	CALL_123
0x4004b74	          0x4d89c1	                              mov r9, r8	      1577	merge.c	FUNCTION_40	IF_65	CALL_123
0x4004b77	          0x4989f8	                             mov r8, rdi	      1577	merge.c	FUNCTION_40	IF_65	CALL_123
0x4004b7a	          0x4889c7	                            mov rdi, rax	      1577	merge.c	FUNCTION_40	IF_65	CALL_123
0x4004b7d	      0xe87cdfffff	               call sym.finish_automerge	      1577	merge.c	FUNCTION_40	IF_65	CALL_123
0x4004b82	    0x898570feffff	            mov dword [rbp - 0x190], eax	      1577	merge.c	FUNCTION_40	IF_65	CALL_123
0x4004b88	      0xe99c010000	                           jmp 0x4004d29	      1580	merge.c	FUNCTION_40	IF_65
0x4004b8d	    0x4883bda8feff	              cmp qword [rbp - 0x158], 0	      1587	merge.c	FUNCTION_40	IF_66
0x4004b95	     0xf8590000000	                           jne 0x4004c2b	      1587	merge.c	FUNCTION_40	IF_66
0x4004b9b	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1588	merge.c	FUNCTION_40	IF_66	CALL_124
0x4004ba2	        0x488d5004	                      lea rdx, [rax + 4]	      1588	merge.c	FUNCTION_40	IF_66	CALL_124
0x4004ba6	        0x488d4590	                   lea rax, [rbp - 0x70]	      1588	merge.c	FUNCTION_40	IF_66	CALL_124
0x4004baa	          0x4889c6	                            mov rsi, rax	      1588	merge.c	FUNCTION_40	IF_66	CALL_124
0x4004bad	          0x4889d7	                            mov rdi, rdx	      1588	merge.c	FUNCTION_40	IF_66	CALL_124
0x4004bb0	      0xe888c2ffff	                  call sym.restore_state	      1588	merge.c	FUNCTION_40	IF_66	CALL_124
0x4004bb5	    0x488b05000000	            mov rax, qword [0x04004bbc] 	      1589	merge.c	FUNCTION_40	IF_66	IF_67
0x4004bbc	        0x4883f801	                              cmp rax, 1	      1589	merge.c	FUNCTION_40	IF_66	IF_67
0x4004bc0	            0x7626	                           jbe 0x4004be8	      1589	merge.c	FUNCTION_40	IF_66	IF_67
0x4004bc2	      0xbf00000000	                              mov edi, 0	      1590	merge.c	FUNCTION_40	IF_66	IF_67	CALL_125
0x4004bc7	      0xe829b7ffff	                               call sym.	      1590	merge.c	FUNCTION_40	IF_66	IF_67	CALL_125
0x4004bcc	          0x4889c2	                            mov rdx, rax	      1590	merge.c	FUNCTION_40	IF_66	IF_67	CALL_125
0x4004bcf	    0x488b05000000	            mov rax, qword [0x04004bd6] 	      1590	merge.c	FUNCTION_40	IF_66	IF_67	CALL_125
0x4004bd6	          0x4889d6	                            mov rsi, rdx	      1590	merge.c	FUNCTION_40	IF_66	IF_67	CALL_125
0x4004bd9	          0x4889c7	                            mov rdi, rax	      1590	merge.c	FUNCTION_40	IF_66	IF_67	CALL_125
0x4004bdc	      0xb800000000	                              mov eax, 0	      1590	merge.c	FUNCTION_40	IF_66	IF_67	CALL_125
0x4004be1	      0xe800000000	                          call 0x4004be6	      1590	merge.c	FUNCTION_40	IF_66	IF_67	CALL_125
0x4004be6	            0xeb34	                           jmp 0x4004c1c	      1590	merge.c	FUNCTION_40	IF_66	IF_67	CALL_125
0x4004be8	    0x488b05000000	            mov rax, qword [0x04004bef] 	      1594	merge.c	FUNCTION_40	IF_66	ELSE_16
0x4004bef	          0x488b00	                    mov rax, qword [rax]	      1594	merge.c	FUNCTION_40	IF_66	ELSE_16
0x4004bf2	          0x488b18	                    mov rbx, qword [rax]	      1593	merge.c	FUNCTION_40	IF_66	ELSE_16	CALL_128
0x4004bf5	      0xbf00000000	                              mov edi, 0	      1593	merge.c	FUNCTION_40	IF_66	ELSE_16	CALL_128
0x4004bfa	      0xe8f6b6ffff	                               call sym.	      1593	merge.c	FUNCTION_40	IF_66	ELSE_16	CALL_128
0x4004bff	          0x4889c1	                            mov rcx, rax	      1593	merge.c	FUNCTION_40	IF_66	ELSE_16	CALL_128
0x4004c02	    0x488b05000000	            mov rax, qword [0x04004c09] 	      1593	merge.c	FUNCTION_40	IF_66	ELSE_16	CALL_128
0x4004c09	          0x4889da	                            mov rdx, rbx	      1593	merge.c	FUNCTION_40	IF_66	ELSE_16	CALL_128
0x4004c0c	          0x4889ce	                            mov rsi, rcx	      1593	merge.c	FUNCTION_40	IF_66	ELSE_16	CALL_128
0x4004c0f	          0x4889c7	                            mov rdi, rax	      1593	merge.c	FUNCTION_40	IF_66	ELSE_16	CALL_128
0x4004c12	      0xb800000000	                              mov eax, 0	      1593	merge.c	FUNCTION_40	IF_66	ELSE_16	CALL_128
0x4004c17	      0xe800000000	                          call 0x4004c1c	      1593	merge.c	FUNCTION_40	IF_66	ELSE_16	CALL_128
0x4004c1c	    0xc78570feffff	              mov dword [rbp - 0x190], 2	      1595	merge.c	FUNCTION_40	IF_66
0x4004c26	      0xe9fe000000	                           jmp 0x4004d29	      1596	merge.c	FUNCTION_40	IF_66
0x4004c2b	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1597	merge.c	FUNCTION_40	ELSE_17	IF_68
0x4004c32	    0x483b85b0feff	            cmp rax, qword [rbp - 0x150]	      1597	merge.c	FUNCTION_40	ELSE_17	IF_68
0x4004c39	            0x7479	                            je 0x4004cb4	      1597	merge.c	FUNCTION_40	ELSE_17	IF_68
0x4004c3b	      0xbf00000000	                              mov edi, 0	      1600	merge.c	FUNCTION_40	ELSE_18	CALL_130
0x4004c40	      0xe8b0b6ffff	                               call sym.	      1600	merge.c	FUNCTION_40	ELSE_18	CALL_130
0x4004c45	          0x4889c7	                            mov rdi, rax	      1600	merge.c	FUNCTION_40	ELSE_18	CALL_130
0x4004c48	      0xb800000000	                              mov eax, 0	      1600	merge.c	FUNCTION_40	ELSE_18	CALL_130
0x4004c4d	      0xe800000000	                          call 0x4004c52	      1600	merge.c	FUNCTION_40	ELSE_18	CALL_130
0x4004c52	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1601	merge.c	FUNCTION_40	ELSE_18	CALL_131
0x4004c59	        0x488d5004	                      lea rdx, [rax + 4]	      1601	merge.c	FUNCTION_40	ELSE_18	CALL_131
0x4004c5d	        0x488d4590	                   lea rax, [rbp - 0x70]	      1601	merge.c	FUNCTION_40	ELSE_18	CALL_131
0x4004c61	          0x4889c6	                            mov rsi, rax	      1601	merge.c	FUNCTION_40	ELSE_18	CALL_131
0x4004c64	          0x4889d7	                            mov rdi, rdx	      1601	merge.c	FUNCTION_40	ELSE_18	CALL_131
0x4004c67	      0xe8d1c1ffff	                  call sym.restore_state	      1601	merge.c	FUNCTION_40	ELSE_18	CALL_131
0x4004c6c	      0xbf00000000	                              mov edi, 0	      1602	merge.c	FUNCTION_40	ELSE_18	CALL_133
0x4004c71	      0xe87fb6ffff	                               call sym.	      1602	merge.c	FUNCTION_40	ELSE_18	CALL_133
0x4004c76	          0x4889c2	                            mov rdx, rax	      1602	merge.c	FUNCTION_40	ELSE_18	CALL_133
0x4004c79	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1602	merge.c	FUNCTION_40	ELSE_18	CALL_133
0x4004c80	          0x4889c6	                            mov rsi, rax	      1602	merge.c	FUNCTION_40	ELSE_18	CALL_133
0x4004c83	          0x4889d7	                            mov rdi, rdx	      1602	merge.c	FUNCTION_40	ELSE_18	CALL_133
0x4004c86	      0xb800000000	                              mov eax, 0	      1602	merge.c	FUNCTION_40	ELSE_18	CALL_133
0x4004c8b	      0xe800000000	                          call 0x4004c90	      1602	merge.c	FUNCTION_40	ELSE_18	CALL_133
0x4004c90	    0x488b8d98feff	            mov rcx, qword [rbp - 0x168]	      1604	merge.c	FUNCTION_40	ELSE_18	CALL_134
0x4004c97	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      1604	merge.c	FUNCTION_40	ELSE_18	CALL_134
0x4004c9e	    0x488bb5a0feff	            mov rsi, qword [rbp - 0x160]	      1604	merge.c	FUNCTION_40	ELSE_18	CALL_134
0x4004ca5	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1604	merge.c	FUNCTION_40	ELSE_18	CALL_134
0x4004cac	          0x4889c7	                            mov rdi, rax	      1604	merge.c	FUNCTION_40	ELSE_18	CALL_134
0x4004caf	      0xe85ad4ffff	             call sym.try_merge_strategy	      1604	merge.c	FUNCTION_40	ELSE_18	CALL_134
0x4004cb4	    0x8b0500000000	            mov eax, dword [0x04004cba] 	      1608	merge.c	FUNCTION_40	IF_69
0x4004cba	            0x85c0	                           test eax, eax	      1608	merge.c	FUNCTION_40	IF_69
0x4004cbc	            0x7422	                            je 0x4004ce0	      1608	merge.c	FUNCTION_40	IF_69
0x4004cbe	    0x488bb5d0feff	            mov rsi, qword [rbp - 0x130]	      1609	merge.c	FUNCTION_40	CALL_135
0x4004cc5	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1609	merge.c	FUNCTION_40	CALL_135
0x4004ccc	      0xb900000000	                              mov ecx, 0	      1609	merge.c	FUNCTION_40	CALL_135
0x4004cd1	      0xba00000000	                              mov edx, 0	      1609	merge.c	FUNCTION_40	CALL_135
0x4004cd6	          0x4889c7	                            mov rdi, rax	      1609	merge.c	FUNCTION_40	CALL_135
0x4004cd9	      0xe853c5ffff	                         call sym.finish	      1609	merge.c	FUNCTION_40	CALL_135
0x4004cde	            0xeb0f	                           jmp 0x4004cef	      1609	merge.c	FUNCTION_40	CALL_135
0x4004ce0	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1611	merge.c	FUNCTION_40	CALL_136
0x4004ce7	          0x4889c7	                            mov rdi, rax	      1611	merge.c	FUNCTION_40	CALL_136
0x4004cea	      0xe8c6e3ffff	              call sym.write_merge_state	      1611	merge.c	FUNCTION_40	CALL_136
0x4004cef	    0x83bd78feffff	              cmp dword [rbp - 0x188], 0	      1613	merge.c	FUNCTION_40	IF_70
0x4004cf6	            0x7426	                            je 0x4004d1e	      1613	merge.c	FUNCTION_40	IF_70
0x4004cf8	      0xbf00000000	                              mov edi, 0	      1614	merge.c	FUNCTION_40	IF_70	CALL_138
0x4004cfd	      0xe8f3b5ffff	                               call sym.	      1614	merge.c	FUNCTION_40	IF_70	CALL_138
0x4004d02	          0x4889c2	                            mov rdx, rax	      1614	merge.c	FUNCTION_40	IF_70	CALL_138
0x4004d05	    0x488b05000000	            mov rax, qword [0x04004d0c] 	      1614	merge.c	FUNCTION_40	IF_70	CALL_138
0x4004d0c	          0x4889d6	                            mov rsi, rdx	      1614	merge.c	FUNCTION_40	IF_70	CALL_138
0x4004d0f	          0x4889c7	                            mov rdi, rax	      1614	merge.c	FUNCTION_40	IF_70	CALL_138
0x4004d12	      0xb800000000	                              mov eax, 0	      1614	merge.c	FUNCTION_40	IF_70	CALL_138
0x4004d17	      0xe800000000	                          call 0x4004d1c	      1614	merge.c	FUNCTION_40	IF_70	CALL_138
0x4004d1c	            0xeb0b	                           jmp 0x4004d29	      1614	merge.c	FUNCTION_40	IF_70	CALL_138
0x4004d1e	      0xe82cdfffff	              call sym.suggest_conflicts	      1617	merge.c	FUNCTION_40	CALL_139
0x4004d23	    0x898570feffff	            mov dword [rbp - 0x190], eax	      1617	merge.c	FUNCTION_40	CALL_139
0x4004d29	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1620	merge.c	FUNCTION_40	CALL_140
0x4004d30	          0x4889c7	                            mov rdi, rax	      1620	merge.c	FUNCTION_40	CALL_140
0x4004d33	      0xe800000000	                          call 0x4004d38	      1620	merge.c	FUNCTION_40	CALL_140
0x4004d38	    0x8b8570feffff	            mov eax, dword [rbp - 0x190]	      1621	merge.c	FUNCTION_40
0x4004d3e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1622	merge.c	FUNCTION_40
0x4004d42	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1622	merge.c	FUNCTION_40
0x4004d4b	            0x7405	                            je 0x4004d52	      1622	merge.c	FUNCTION_40
0x4004d4d	      0xe800000000	                          call 0x4004d52	      1622	merge.c	FUNCTION_40
0x4004d52	    0x4881c4b00100	                          add rsp, 0x1b0	      1622	merge.c	FUNCTION_40
0x4004d59	              0x5b	                                 pop rbx	      1622	merge.c	FUNCTION_40
0x4004d5a	            0x415c	                                 pop r12	      1622	merge.c	FUNCTION_40
0x4004d5c	              0x5d	                                 pop rbp	      1622	merge.c	FUNCTION_40
0x4004d5d	              0xc3	                                     ret	      1622	merge.c	FUNCTION_40
strbuf_addch	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,2:ELSE,0:IF,1	33
0x4000252	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_71
0x4000253	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_71
0x4000256	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_71
0x400025a	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_71
0x400025e	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_71
0x4000261	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_71	IF_1	CALL_1
0x4000265	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_71	IF_1	CALL_1
0x4000268	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_71	IF_1	CALL_1
0x400026d	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_71	IF_1	CALL_1
0x4000270	            0x7511	                           jne 0x4000283	       227	strbuf.h	FUNCTION_71	IF_1	CALL_1
0x4000272	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_71	CALL_2
0x4000276	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_71	CALL_2
0x400027b	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_71	CALL_2
0x400027e	      0xe800000000	                          call 0x4000283	       228	strbuf.h	FUNCTION_71	CALL_2
0x4000283	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_71
0x4000287	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_71
0x400028b	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_71
0x400028f	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_71
0x4000293	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_71
0x4000297	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_71
0x400029b	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_71
0x400029f	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_71
0x40002a2	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_71
0x40002a5	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_71
0x40002a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_71
0x40002ab	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_71
0x40002af	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_71
0x40002b3	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_71
0x40002b7	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_71
0x40002ba	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_71
0x40002bd	              0x90	                                     nop	       231	strbuf.h	FUNCTION_71
0x40002be	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_71
0x40002bf	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_71
setup_with_upstream	FOR,1:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,11:ELSE,0:IF,4	107
0x4002dd5	              0x55	                                push rbp	       903	merge.c	FUNCTION_31
0x4002dd6	          0x4889e5	                            mov rbp, rsp	       903	merge.c	FUNCTION_31
0x4002dd9	            0x4154	                                push r12	       903	merge.c	FUNCTION_31
0x4002ddb	              0x53	                                push rbx	       903	merge.c	FUNCTION_31
0x4002ddc	        0x4883ec30	                           sub rsp, 0x30	       903	merge.c	FUNCTION_31
0x4002de0	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       903	merge.c	FUNCTION_31
0x4002de4	      0xbf00000000	                              mov edi, 0	       904	merge.c	FUNCTION_31	CALL_1
0x4002de9	      0xe800000000	                          call 0x4002dee	       904	merge.c	FUNCTION_31	CALL_1
0x4002dee	        0x488945e0	             mov qword [rbp - 0x20], rax	       904	merge.c	FUNCTION_31	CALL_1
0x4002df2	      0x48837de000	               cmp qword [rbp - 0x20], 0	       908	merge.c	FUNCTION_31	IF_1
0x4002df7	            0x7517	                           jne 0x4002e10	       908	merge.c	FUNCTION_31	IF_1
0x4002df9	      0xbf00000000	                              mov edi, 0	       909	merge.c	FUNCTION_31	CALL_3
0x4002dfe	      0xe8f2d4ffff	                               call sym.	       909	merge.c	FUNCTION_31	CALL_3
0x4002e03	          0x4889c7	                            mov rdi, rax	       909	merge.c	FUNCTION_31	CALL_3
0x4002e06	      0xb800000000	                              mov eax, 0	       909	merge.c	FUNCTION_31	CALL_3
0x4002e0b	      0xe800000000	                          call 0x4002e10	       909	merge.c	FUNCTION_31	CALL_3
0x4002e10	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       910	merge.c	FUNCTION_31	IF_2
0x4002e14	        0x488b4010	            mov rax, qword [rax + 0x10] 	       910	merge.c	FUNCTION_31	IF_2
0x4002e18	          0x4885c0	                           test rax, rax	       910	merge.c	FUNCTION_31	IF_2
0x4002e1b	            0x7517	                           jne 0x4002e34	       910	merge.c	FUNCTION_31	IF_2
0x4002e1d	      0xbf00000000	                              mov edi, 0	       911	merge.c	FUNCTION_31	CALL_5
0x4002e22	      0xe8ced4ffff	                               call sym.	       911	merge.c	FUNCTION_31	CALL_5
0x4002e27	          0x4889c7	                            mov rdi, rax	       911	merge.c	FUNCTION_31	CALL_5
0x4002e2a	      0xb800000000	                              mov eax, 0	       911	merge.c	FUNCTION_31	CALL_5
0x4002e2f	      0xe800000000	                          call 0x4002e34	       911	merge.c	FUNCTION_31	CALL_5
0x4002e34	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       912	merge.c	FUNCTION_31	IF_3
0x4002e38	          0x8b4030	            mov eax, dword [rax + 0x30] 	       912	merge.c	FUNCTION_31	IF_3
0x4002e3b	            0x85c0	                           test eax, eax	       912	merge.c	FUNCTION_31	IF_3
0x4002e3d	            0x7517	                           jne 0x4002e56	       912	merge.c	FUNCTION_31	IF_3
0x4002e3f	      0xbf00000000	                              mov edi, 0	       913	merge.c	FUNCTION_31	CALL_7
0x4002e44	      0xe8acd4ffff	                               call sym.	       913	merge.c	FUNCTION_31	CALL_7
0x4002e49	          0x4889c7	                            mov rdi, rax	       913	merge.c	FUNCTION_31	CALL_7
0x4002e4c	      0xb800000000	                              mov eax, 0	       913	merge.c	FUNCTION_31	CALL_7
0x4002e51	      0xe800000000	                          call 0x4002e56	       913	merge.c	FUNCTION_31	CALL_7
0x4002e56	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       915	merge.c	FUNCTION_31	CALL_9
0x4002e5a	          0x8b4030	            mov eax, dword [rax + 0x30] 	       915	merge.c	FUNCTION_31	CALL_9
0x4002e5d	            0x4898	                                    cdqe	       915	merge.c	FUNCTION_31	CALL_9
0x4002e5f	      0xbe01000000	                              mov esi, 1	       915	merge.c	FUNCTION_31	CALL_9
0x4002e64	          0x4889c7	                            mov rdi, rax	       915	merge.c	FUNCTION_31	CALL_9
0x4002e67	      0xe835d2ffff	                         call sym.st_add	       915	merge.c	FUNCTION_31	CALL_9
0x4002e6c	      0xbe08000000	                              mov esi, 8	       915	merge.c	FUNCTION_31	CALL_9
0x4002e71	          0x4889c7	                            mov rdi, rax	       915	merge.c	FUNCTION_31	CALL_9
0x4002e74	      0xe800000000	                          call 0x4002e79	       915	merge.c	FUNCTION_31	CALL_9
0x4002e79	        0x488945e8	             mov qword [rbp - 0x18], rax	       915	merge.c	FUNCTION_31	CALL_9
0x4002e7d	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       916	merge.c	FUNCTION_31	FOR_1
0x4002e84	      0xe999000000	                           jmp 0x4002f22	       916	merge.c	FUNCTION_31	FOR_1
0x4002e89	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       917	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002e8d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       917	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002e91	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       917	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002e94	          0x4863d2	                         movsxd rdx, edx	       917	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002e97	        0x48c1e203	                              shl rdx, 3	       917	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002e9b	          0x4801d0	                            add rax, rdx	       917	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002e9e	          0x488b00	                    mov rax, qword [rax]	       917	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002ea1	        0x488b4010	            mov rax, qword [rax + 0x10] 	       917	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002ea5	          0x4885c0	                           test rax, rax	       917	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002ea8	            0x7541	                           jne 0x4002eeb	       917	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002eaa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       918	merge.c	FUNCTION_31	FOR_1	IF_4	CALL_11
0x4002eae	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	       918	merge.c	FUNCTION_31	FOR_1	IF_4	CALL_11
0x4002eb2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       919	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002eb6	        0x488b4028	            mov rax, qword [rax + 0x28] 	       919	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002eba	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       919	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002ebd	          0x4863d2	                         movsxd rdx, edx	       919	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002ec0	        0x48c1e203	                              shl rdx, 3	       919	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002ec4	          0x4801d0	                            add rax, rdx	       919	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002ec7	          0x488b00	                    mov rax, qword [rax]	       919	merge.c	FUNCTION_31	FOR_1	IF_4
0x4002eca	        0x488b5808	                mov rbx, qword [rax + 8]	       918	merge.c	FUNCTION_31	FOR_1	IF_4	CALL_11
0x4002ece	      0xbf00000000	                              mov edi, 0	       918	merge.c	FUNCTION_31	FOR_1	IF_4	CALL_11
0x4002ed3	      0xe81dd4ffff	                               call sym.	       918	merge.c	FUNCTION_31	FOR_1	IF_4	CALL_11
0x4002ed8	          0x4c89e2	                            mov rdx, r12	       918	merge.c	FUNCTION_31	FOR_1	IF_4	CALL_11
0x4002edb	          0x4889de	                            mov rsi, rbx	       918	merge.c	FUNCTION_31	FOR_1	IF_4	CALL_11
0x4002ede	          0x4889c7	                            mov rdi, rax	       918	merge.c	FUNCTION_31	FOR_1	IF_4	CALL_11
0x4002ee1	      0xb800000000	                              mov eax, 0	       918	merge.c	FUNCTION_31	FOR_1	IF_4	CALL_11
0x4002ee6	      0xe800000000	                          call 0x4002eeb	       918	merge.c	FUNCTION_31	FOR_1	IF_4	CALL_11
0x4002eeb	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       920	merge.c	FUNCTION_31	FOR_1
0x4002eee	            0x4898	                                    cdqe	       920	merge.c	FUNCTION_31	FOR_1
0x4002ef0	    0x488d14c50000	                        lea rdx, [rax*8]	       920	merge.c	FUNCTION_31	FOR_1
0x4002ef8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       920	merge.c	FUNCTION_31	FOR_1
0x4002efc	          0x4801c2	                            add rdx, rax	       920	merge.c	FUNCTION_31	FOR_1
0x4002eff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       920	merge.c	FUNCTION_31	FOR_1
0x4002f03	        0x488b4028	            mov rax, qword [rax + 0x28] 	       920	merge.c	FUNCTION_31	FOR_1
0x4002f07	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	       920	merge.c	FUNCTION_31	FOR_1
0x4002f0a	          0x4863c9	                         movsxd rcx, ecx	       920	merge.c	FUNCTION_31	FOR_1
0x4002f0d	        0x48c1e103	                              shl rcx, 3	       920	merge.c	FUNCTION_31	FOR_1
0x4002f11	          0x4801c8	                            add rax, rcx	       920	merge.c	FUNCTION_31	FOR_1
0x4002f14	          0x488b00	                    mov rax, qword [rax]	       920	merge.c	FUNCTION_31	FOR_1
0x4002f17	        0x488b4010	            mov rax, qword [rax + 0x10] 	       920	merge.c	FUNCTION_31	FOR_1
0x4002f1b	          0x488902	                    mov qword [rdx], rax	       920	merge.c	FUNCTION_31	FOR_1
0x4002f1e	        0x8345dc01	               add dword [rbp - 0x24], 1	       916	merge.c	FUNCTION_31	FOR_1
0x4002f22	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       916	merge.c	FUNCTION_31	FOR_1
0x4002f26	          0x8b4030	            mov eax, dword [rax + 0x30] 	       916	merge.c	FUNCTION_31	FOR_1
0x4002f29	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       916	merge.c	FUNCTION_31	FOR_1
0x4002f2c	     0xf8f57ffffff	                            jg 0x4002e89	       916	merge.c	FUNCTION_31	FOR_1
0x4002f32	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       922	merge.c	FUNCTION_31
0x4002f35	            0x4898	                                    cdqe	       922	merge.c	FUNCTION_31
0x4002f37	    0x488d14c50000	                        lea rdx, [rax*8]	       922	merge.c	FUNCTION_31
0x4002f3f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       922	merge.c	FUNCTION_31
0x4002f43	          0x4801d0	                            add rax, rdx	       922	merge.c	FUNCTION_31
0x4002f46	    0x48c700000000	                      mov qword [rax], 0	       922	merge.c	FUNCTION_31
0x4002f4d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       923	merge.c	FUNCTION_31
0x4002f51	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       923	merge.c	FUNCTION_31
0x4002f55	          0x488910	                    mov qword [rax], rdx	       923	merge.c	FUNCTION_31
0x4002f58	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       924	merge.c	FUNCTION_31
0x4002f5b	        0x4883c430	                           add rsp, 0x30	       925	merge.c	FUNCTION_31
0x4002f5f	              0x5b	                                 pop rbx	       925	merge.c	FUNCTION_31
0x4002f60	            0x415c	                                 pop r12	       925	merge.c	FUNCTION_31
0x4002f62	              0x5d	                                 pop rbp	       925	merge.c	FUNCTION_31
0x4002f63	              0xc3	                                     ret	       925	merge.c	FUNCTION_31
reset_hard	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,4:ELSE,0:IF,2	64
0x4000d4b	              0x55	                                push rbp	       302	merge.c	FUNCTION_10
0x4000d4c	          0x4889e5	                            mov rbp, rsp	       302	merge.c	FUNCTION_10
0x4000d4f	              0x53	                                push rbx	       302	merge.c	FUNCTION_10
0x4000d50	        0x4883ec68	                           sub rsp, 0x68	       302	merge.c	FUNCTION_10
0x4000d54	        0x48897d98	             mov qword [rbp - 0x68], rdi	       302	merge.c	FUNCTION_10
0x4000d58	          0x897594	             mov dword [rbp - 0x6c], esi	       302	merge.c	FUNCTION_10
0x4000d5b	    0x64488b042528	                mov rax, qword fs:[0x28]	       302	merge.c	FUNCTION_10
0x4000d64	        0x488945e8	             mov qword [rbp - 0x18], rax	       302	merge.c	FUNCTION_10
0x4000d68	            0x31c0	                            xor eax, eax	       302	merge.c	FUNCTION_10
0x4000d6a	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       303	merge.c	FUNCTION_10
0x4000d71	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       306	merge.c	FUNCTION_10
0x4000d74	          0x8d5001	                      lea edx, [rax + 1]	       306	merge.c	FUNCTION_10
0x4000d77	          0x8955ac	             mov dword [rbp - 0x54], edx	       306	merge.c	FUNCTION_10
0x4000d7a	            0x4898	                                    cdqe	       306	merge.c	FUNCTION_10
0x4000d7c	    0x48c744c5b000	       mov qword [rbp + rax*8 - 0x50], 0	       306	merge.c	FUNCTION_10
0x4000d85	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       307	merge.c	FUNCTION_10	IF_1
0x4000d89	            0x7414	                            je 0x4000d9f	       307	merge.c	FUNCTION_10	IF_1
0x4000d8b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       308	merge.c	FUNCTION_10	IF_1
0x4000d8e	          0x8d5001	                      lea edx, [rax + 1]	       308	merge.c	FUNCTION_10	IF_1
0x4000d91	          0x8955ac	             mov dword [rbp - 0x54], edx	       308	merge.c	FUNCTION_10	IF_1
0x4000d94	            0x4898	                                    cdqe	       308	merge.c	FUNCTION_10	IF_1
0x4000d96	    0x48c744c5b000	       mov qword [rbp + rax*8 - 0x50], 0	       308	merge.c	FUNCTION_10	IF_1
0x4000d9f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       309	merge.c	FUNCTION_10
0x4000da2	          0x8d5001	                      lea edx, [rax + 1]	       309	merge.c	FUNCTION_10
0x4000da5	          0x8955ac	             mov dword [rbp - 0x54], edx	       309	merge.c	FUNCTION_10
0x4000da8	            0x4898	                                    cdqe	       309	merge.c	FUNCTION_10
0x4000daa	    0x48c744c5b000	       mov qword [rbp + rax*8 - 0x50], 0	       309	merge.c	FUNCTION_10
0x4000db3	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       310	merge.c	FUNCTION_10
0x4000db6	          0x8d5001	                      lea edx, [rax + 1]	       310	merge.c	FUNCTION_10
0x4000db9	          0x8955ac	             mov dword [rbp - 0x54], edx	       310	merge.c	FUNCTION_10
0x4000dbc	            0x4898	                                    cdqe	       310	merge.c	FUNCTION_10
0x4000dbe	    0x48c744c5b000	       mov qword [rbp + rax*8 - 0x50], 0	       310	merge.c	FUNCTION_10
0x4000dc7	          0x8b5dac	             mov ebx, dword [rbp - 0x54]	       311	merge.c	FUNCTION_10	CALL_1
0x4000dca	          0x8d4301	                      lea eax, [rbx + 1]	       311	merge.c	FUNCTION_10	CALL_1
0x4000dcd	          0x8945ac	             mov dword [rbp - 0x54], eax	       311	merge.c	FUNCTION_10	CALL_1
0x4000dd0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       311	merge.c	FUNCTION_10	CALL_1
0x4000dd4	          0x4889c7	                            mov rdi, rax	       311	merge.c	FUNCTION_10	CALL_1
0x4000dd7	      0xe800000000	                          call 0x4000ddc	       311	merge.c	FUNCTION_10	CALL_1
0x4000ddc	          0x4889c2	                            mov rdx, rax	       311	merge.c	FUNCTION_10	CALL_1
0x4000ddf	          0x4863c3	                         movsxd rax, ebx	       311	merge.c	FUNCTION_10	CALL_1
0x4000de2	      0x488954c5b0	     mov qword [rbp + rax*8 - 0x50], rdx	       311	merge.c	FUNCTION_10	CALL_1
0x4000de7	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       312	merge.c	FUNCTION_10
0x4000dea	            0x4898	                                    cdqe	       312	merge.c	FUNCTION_10
0x4000dec	    0x48c744c5b000	       mov qword [rbp + rax*8 - 0x50], 0	       312	merge.c	FUNCTION_10
0x4000df5	        0x488d45b0	                   lea rax, [rbp - 0x50]	       314	merge.c	FUNCTION_10	IF_2	CALL_2
0x4000df9	      0xbe02000000	                              mov esi, 2	       314	merge.c	FUNCTION_10	IF_2	CALL_2
0x4000dfe	          0x4889c7	                            mov rdi, rax	       314	merge.c	FUNCTION_10	IF_2	CALL_2
0x4000e01	      0xe800000000	                          call 0x4000e06	       314	merge.c	FUNCTION_10	IF_2	CALL_2
0x4000e06	            0x85c0	                           test eax, eax	       314	merge.c	FUNCTION_10	IF_2	CALL_2
0x4000e08	            0x7417	                            je 0x4000e21	       314	merge.c	FUNCTION_10	IF_2	CALL_2
0x4000e0a	      0xbf00000000	                              mov edi, 0	       315	merge.c	FUNCTION_10	CALL_4
0x4000e0f	      0xe8e1f4ffff	                               call sym.	       315	merge.c	FUNCTION_10	CALL_4
0x4000e14	          0x4889c7	                            mov rdi, rax	       315	merge.c	FUNCTION_10	CALL_4
0x4000e17	      0xb800000000	                              mov eax, 0	       315	merge.c	FUNCTION_10	CALL_4
0x4000e1c	      0xe800000000	                          call 0x4000e21	       315	merge.c	FUNCTION_10	CALL_4
0x4000e21	              0x90	                                     nop	       316	merge.c	FUNCTION_10
0x4000e22	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       316	merge.c	FUNCTION_10
0x4000e26	    0x644833042528	                xor rax, qword fs:[0x28]	       316	merge.c	FUNCTION_10
0x4000e2f	            0x7405	                            je 0x4000e36	       316	merge.c	FUNCTION_10
0x4000e31	      0xe800000000	                          call 0x4000e36	       316	merge.c	FUNCTION_10
0x4000e36	        0x4883c468	                           add rsp, 0x68	       316	merge.c	FUNCTION_10
0x4000e3a	              0x5b	                                 pop rbx	       316	merge.c	FUNCTION_10
0x4000e3b	              0x5d	                                 pop rbp	       316	merge.c	FUNCTION_10
0x4000e3c	              0xc3	                                     ret	       316	merge.c	FUNCTION_10
_	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,0:ELSE,0:IF,1	15
0x40002f5	              0x55	                                push rbp	        51	gettext.h	FUNCTION_109
0x40002f6	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_109
0x40002f9	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_109
0x40002fd	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_109
0x4000301	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_109	IF_1
0x4000305	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_109	IF_1
0x4000308	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_109	IF_1
0x400030a	            0x7507	                           jne 0x4000313	        52	gettext.h	FUNCTION_109	IF_1
0x400030c	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_109	IF_1
0x4000311	            0xeb0c	                           jmp 0x400031f	        53	gettext.h	FUNCTION_109	IF_1
0x4000313	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_109
0x4000317	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_109
0x400031a	      0xe800000000	                          call 0x400031f	        54	gettext.h	FUNCTION_109
0x400031f	              0xc9	                                   leave	        55	gettext.h	FUNCTION_109
0x4000320	              0xc3	                                     ret	        55	gettext.h	FUNCTION_109
move_array	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,2:ELSE,0:IF,1	23
0x4000137	              0x55	                                push rbp	       860	git-compat-util.h	FUNCTION_96
0x4000138	          0x4889e5	                            mov rbp, rsp	       860	git-compat-util.h	FUNCTION_96
0x400013b	        0x4883ec20	                           sub rsp, 0x20	       860	git-compat-util.h	FUNCTION_96
0x400013f	        0x48897df8	                mov qword [rbp - 8], rdi	       860	git-compat-util.h	FUNCTION_96
0x4000143	        0x488975f0	             mov qword [rbp - 0x10], rsi	       860	git-compat-util.h	FUNCTION_96
0x4000147	        0x488955e8	             mov qword [rbp - 0x18], rdx	       860	git-compat-util.h	FUNCTION_96
0x400014b	        0x48894de0	             mov qword [rbp - 0x20], rcx	       860	git-compat-util.h	FUNCTION_96
0x400014f	      0x48837de800	               cmp qword [rbp - 0x18], 0	       861	git-compat-util.h	FUNCTION_96	IF_1
0x4000154	            0x7429	                            je 0x400017f	       861	git-compat-util.h	FUNCTION_96	IF_1
0x4000156	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       862	git-compat-util.h	FUNCTION_96	CALL_2
0x400015a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       862	git-compat-util.h	FUNCTION_96	CALL_2
0x400015e	          0x4889d6	                            mov rsi, rdx	       862	git-compat-util.h	FUNCTION_96	CALL_2
0x4000161	          0x4889c7	                            mov rdi, rax	       862	git-compat-util.h	FUNCTION_96	CALL_2
0x4000164	      0xe87cffffff	                        call sym.st_mult	       862	git-compat-util.h	FUNCTION_96	CALL_2
0x4000169	          0x4889c2	                            mov rdx, rax	       862	git-compat-util.h	FUNCTION_96	CALL_2
0x400016c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       862	git-compat-util.h	FUNCTION_96	CALL_2
0x4000170	        0x488b45f8	                mov rax, qword [rbp - 8]	       862	git-compat-util.h	FUNCTION_96	CALL_2
0x4000174	          0x4889ce	                            mov rsi, rcx	       862	git-compat-util.h	FUNCTION_96	CALL_2
0x4000177	          0x4889c7	                            mov rdi, rax	       862	git-compat-util.h	FUNCTION_96	CALL_2
0x400017a	      0xe800000000	                          call 0x400017f	       862	git-compat-util.h	FUNCTION_96	CALL_2
0x400017f	              0x90	                                     nop	       863	git-compat-util.h	FUNCTION_96
0x4000180	              0xc9	                                   leave	       863	git-compat-util.h	FUNCTION_96
0x4000181	              0xc3	                                     ret	       863	git-compat-util.h	FUNCTION_96
skip_prefix	FOR,0:WHILE,0:SWITCH,0:functions,0:DO,1:CALL,0:ELSE,0:IF,1	27
0x400004b	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_85
0x400004c	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_85
0x400004f	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_85
0x4000053	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_85
0x4000057	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_85
0x400005b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_85	DO_1	IF_1
0x400005f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_85	DO_1	IF_1
0x4000062	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_85	DO_1	IF_1
0x4000064	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_85	DO_1	IF_1
0x4000066	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_85	DO_1	IF_1
0x400006a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_85	DO_1	IF_1
0x400006e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_85	DO_1	IF_1
0x4000071	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_85	DO_1	IF_1
0x4000076	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_85	DO_1	IF_1
0x4000078	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_85	DO_1
0x400007c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_85	DO_1
0x4000080	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_85	DO_1
0x4000084	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_85	DO_1
0x4000087	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_85	DO_1
0x400008b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_85	DO_1
0x400008f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_85	DO_1
0x4000093	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_85	DO_1
0x4000096	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_85	DO_1
0x4000098	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_85	DO_1
0x400009a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_85
0x400009f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_85
0x40000a0	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_85
count_unmerged_entries	FOR,1:WHILE,0:SWITCH,0:functions,0:DO,0:CALL,0:ELSE,0:IF,1	25
0x40024c4	              0x55	                                push rbp	       713	merge.c	FUNCTION_22
0x40024c5	          0x4889e5	                            mov rbp, rsp	       713	merge.c	FUNCTION_22
0x40024c8	    0xc745fc000000	                  mov dword [rbp - 4], 0	       714	merge.c	FUNCTION_22
0x40024cf	    0xc745f8000000	                  mov dword [rbp - 8], 0	       716	merge.c	FUNCTION_22	FOR_1
0x40024d6	            0xeb2e	                           jmp 0x4002506	       716	merge.c	FUNCTION_22	FOR_1
0x40024d8	    0x488b05000000	            mov rax, qword [0x040024df] 	       717	merge.c	FUNCTION_22	FOR_1	IF_1
0x40024df	          0x8b55f8	                mov edx, dword [rbp - 8]	       717	merge.c	FUNCTION_22	FOR_1	IF_1
0x40024e2	          0x4863d2	                         movsxd rdx, edx	       717	merge.c	FUNCTION_22	FOR_1	IF_1
0x40024e5	        0x48c1e203	                              shl rdx, 3	       717	merge.c	FUNCTION_22	FOR_1	IF_1
0x40024e9	          0x4801d0	                            add rax, rdx	       717	merge.c	FUNCTION_22	FOR_1	IF_1
0x40024ec	          0x488b00	                    mov rax, qword [rax]	       717	merge.c	FUNCTION_22	FOR_1	IF_1
0x40024ef	          0x8b4038	            mov eax, dword [rax + 0x38] 	       717	merge.c	FUNCTION_22	FOR_1	IF_1
0x40024f2	      0x2500300000	                         and eax, 0x3000	       717	merge.c	FUNCTION_22	FOR_1	IF_1
0x40024f7	          0xc1e80c	                            shr eax, 0xc	       717	merge.c	FUNCTION_22	FOR_1	IF_1
0x40024fa	            0x85c0	                           test eax, eax	       717	merge.c	FUNCTION_22	FOR_1	IF_1
0x40024fc	            0x7404	                            je 0x4002502	       717	merge.c	FUNCTION_22	FOR_1	IF_1
0x40024fe	        0x8345fc01	                  add dword [rbp - 4], 1	       718	merge.c	FUNCTION_22	FOR_1	IF_1
0x4002502	        0x8345f801	                  add dword [rbp - 8], 1	       716	merge.c	FUNCTION_22	FOR_1
0x4002506	    0x8b1500000000	            mov edx, dword [0x0400250c] 	       716	merge.c	FUNCTION_22	FOR_1
0x400250c	          0x8b45f8	                mov eax, dword [rbp - 8]	       716	merge.c	FUNCTION_22	FOR_1
0x400250f	            0x39c2	                            cmp edx, eax	       716	merge.c	FUNCTION_22	FOR_1
0x4002511	            0x77c5	                            ja 0x40024d8	       716	merge.c	FUNCTION_22	FOR_1
0x4002513	          0x8b45fc	                mov eax, dword [rbp - 4]	       720	merge.c	FUNCTION_22
0x4002516	              0x5d	                                 pop rbp	       721	merge.c	FUNCTION_22
0x4002517	              0xc3	                                     ret	       721	merge.c	FUNCTION_22
merge_name	FOR,1:WHILE,1:SWITCH,0:functions,0:DO,0:CALL,33:ELSE,3:IF,14	300
0x40014d4	              0x55	                                push rbp	       441	merge.c	FUNCTION_15
0x40014d5	          0x4889e5	                            mov rbp, rsp	       441	merge.c	FUNCTION_15
0x40014d8	            0x4154	                                push r12	       441	merge.c	FUNCTION_15
0x40014da	              0x53	                                push rbx	       441	merge.c	FUNCTION_15
0x40014db	    0x4881ecc00000	                           sub rsp, 0xc0	       441	merge.c	FUNCTION_15
0x40014e2	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	       441	merge.c	FUNCTION_15
0x40014e9	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	       441	merge.c	FUNCTION_15
0x40014f0	    0x64488b042528	                mov rax, qword fs:[0x28]	       441	merge.c	FUNCTION_15
0x40014f9	        0x488945e8	             mov qword [rbp - 0x18], rax	       441	merge.c	FUNCTION_15
0x40014fd	            0x31c0	                            xor eax, eax	       441	merge.c	FUNCTION_15
0x40014ff	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       444	merge.c	FUNCTION_15
0x400150a	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       444	merge.c	FUNCTION_15
0x4001515	    0x48c745800000	               mov qword [rbp - 0x80], 0	       444	merge.c	FUNCTION_15
0x400151d	    0x48c745900000	               mov qword [rbp - 0x70], 0	       445	merge.c	FUNCTION_15
0x4001525	    0x48c745980000	               mov qword [rbp - 0x68], 0	       445	merge.c	FUNCTION_15
0x400152d	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       445	merge.c	FUNCTION_15
0x4001535	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	       450	merge.c	FUNCTION_15	CALL_1
0x400153c	        0x488d4590	                   lea rax, [rbp - 0x70]	       450	merge.c	FUNCTION_15	CALL_1
0x4001540	      0xba00000000	                              mov edx, 0	       450	merge.c	FUNCTION_15	CALL_1
0x4001545	          0x4889ce	                            mov rsi, rcx	       450	merge.c	FUNCTION_15	CALL_1
0x4001548	          0x4889c7	                            mov rdi, rax	       450	merge.c	FUNCTION_15	CALL_1
0x400154b	      0xe800000000	                          call 0x4001550	       450	merge.c	FUNCTION_15	CALL_1
0x4001550	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       451	merge.c	FUNCTION_15
0x4001554	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       451	merge.c	FUNCTION_15
0x400155b	        0x488d45d0	                   lea rax, [rbp - 0x30]	       453	merge.c	FUNCTION_15	CALL_2
0x400155f	          0x4889c7	                            mov rdi, rax	       453	merge.c	FUNCTION_15	CALL_2
0x4001562	      0xe830eeffff	                         call sym.oidclr	       453	merge.c	FUNCTION_15	CALL_2
0x4001567	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       454	merge.c	FUNCTION_15	CALL_3
0x400156e	          0x4889c7	                            mov rdi, rax	       454	merge.c	FUNCTION_15	CALL_3
0x4001571	      0xe800000000	                          call 0x4001576	       454	merge.c	FUNCTION_15	CALL_3
0x4001576	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       454	merge.c	FUNCTION_15	CALL_3
0x400157d	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	       455	merge.c	FUNCTION_15	IF_1
0x4001585	            0x7524	                           jne 0x40015ab	       455	merge.c	FUNCTION_15	IF_1
0x4001587	      0xbf00000000	                              mov edi, 0	       456	merge.c	FUNCTION_15	CALL_5
0x400158c	      0xe864edffff	                               call sym.	       456	merge.c	FUNCTION_15	CALL_5
0x4001591	          0x4889c2	                            mov rdx, rax	       456	merge.c	FUNCTION_15	CALL_5
0x4001594	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       456	merge.c	FUNCTION_15	CALL_5
0x400159b	          0x4889c6	                            mov rsi, rax	       456	merge.c	FUNCTION_15	CALL_5
0x400159e	          0x4889d7	                            mov rdi, rdx	       456	merge.c	FUNCTION_15	CALL_5
0x40015a1	      0xb800000000	                              mov eax, 0	       456	merge.c	FUNCTION_15	CALL_5
0x40015a6	      0xe800000000	                          call 0x40015ab	       456	merge.c	FUNCTION_15	CALL_5
0x40015ab	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x40015b2	          0x4889c7	                            mov rdi, rax	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x40015b5	      0xe800000000	                          call 0x40015ba	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x40015ba	            0x89c6	                            mov esi, eax	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x40015bc	    0x488d8d50ffff	                   lea rcx, [rbp - 0xb0]	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x40015c3	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x40015c7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x40015ce	          0x4889c7	                            mov rdi, rax	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x40015d1	      0xe800000000	                          call 0x40015d6	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x40015d6	            0x85c0	                           test eax, eax	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x40015d8	     0xf8ef6000000	                           jle 0x40016d4	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x40015de	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x40015e5	      0xbe00000000	                              mov esi, 0	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x40015ea	          0x4889c7	                            mov rdi, rax	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x40015ed	      0xe800000000	                          call 0x40015f2	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x40015f2	            0x85c0	                           test eax, eax	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x40015f4	            0x743a	                            je 0x4001630	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x40015f6	        0x488d45d0	                   lea rax, [rbp - 0x30]	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x40015fa	          0x4889c7	                            mov rdi, rax	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x40015fd	      0xe800000000	                          call 0x4001602	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001602	          0x4889c6	                            mov rsi, rax	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001605	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x400160c	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001613	          0x4889d1	                            mov rcx, rdx	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001616	          0x4889f2	                            mov rdx, rsi	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001619	      0xbe00000000	                              mov esi, 0	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x400161e	          0x4889c7	                            mov rdi, rax	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001621	      0xb800000000	                              mov eax, 0	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001626	      0xe800000000	                          call 0x400162b	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x400162b	      0xe9d0030000	                           jmp 0x4001a00	       462	merge.c	FUNCTION_15	IF_2	IF_3
0x4001630	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4001637	      0xbe00000000	                              mov esi, 0	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x400163c	          0x4889c7	                            mov rdi, rax	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x400163f	      0xe800000000	                          call 0x4001644	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4001644	            0x85c0	                           test eax, eax	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4001646	            0x743a	                            je 0x4001682	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4001648	        0x488d45d0	                   lea rax, [rbp - 0x30]	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x400164c	          0x4889c7	                            mov rdi, rax	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x400164f	      0xe800000000	                          call 0x4001654	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001654	          0x4889c6	                            mov rsi, rax	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001657	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x400165e	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001665	          0x4889d1	                            mov rcx, rdx	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001668	          0x4889f2	                            mov rdx, rsi	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x400166b	      0xbe00000000	                              mov esi, 0	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001670	          0x4889c7	                            mov rdi, rax	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001673	      0xb800000000	                              mov eax, 0	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001678	      0xe800000000	                          call 0x400167d	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x400167d	      0xe97e030000	                           jmp 0x4001a00	       467	merge.c	FUNCTION_15	IF_2	IF_4
0x4001682	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4001689	      0xbe00000000	                              mov esi, 0	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x400168e	          0x4889c7	                            mov rdi, rax	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4001691	      0xe800000000	                          call 0x4001696	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4001696	            0x85c0	                           test eax, eax	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4001698	            0x743a	                            je 0x40016d4	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x400169a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x400169e	          0x4889c7	                            mov rdi, rax	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x40016a1	      0xe800000000	                          call 0x40016a6	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x40016a6	          0x4889c6	                            mov rsi, rax	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x40016a9	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x40016b0	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x40016b7	          0x4889d1	                            mov rcx, rdx	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x40016ba	          0x4889f2	                            mov rdx, rsi	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x40016bd	      0xbe00000000	                              mov esi, 0	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x40016c2	          0x4889c7	                            mov rdi, rax	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x40016c5	      0xb800000000	                              mov eax, 0	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x40016ca	      0xe800000000	                          call 0x40016cf	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x40016cf	      0xe92c030000	                           jmp 0x4001a00	       472	merge.c	FUNCTION_15	IF_2	IF_5
0x40016d4	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x40016de	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x40016e5	          0x4889c7	                            mov rdi, rax	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x40016e8	      0xe800000000	                          call 0x40016ed	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x40016ed	          0x4889c2	                            mov rdx, rax	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x40016f0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x40016f7	          0x4801d0	                            add rax, rdx	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x40016fa	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001701	            0xeb0f	                           jmp 0x4001712	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001703	    0x838544ffffff	               add dword [rbp - 0xbc], 1	       480	merge.c	FUNCTION_15	FOR_1
0x400170a	    0x4883ad58ffff	               sub qword [rbp - 0xa8], 1	       479	merge.c	FUNCTION_15	FOR_1
0x4001712	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001719	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001720	            0x7312	                           jae 0x4001734	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001722	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       478	merge.c	FUNCTION_15	FOR_1
0x4001729	        0x4883e801	                              sub rax, 1	       478	merge.c	FUNCTION_15	FOR_1
0x400172d	           0xfb600	                   movzx eax, byte [rax]	       478	merge.c	FUNCTION_15	FOR_1
0x4001730	            0x3c5e	                            cmp al, 0x5e	       478	merge.c	FUNCTION_15	FOR_1
0x4001732	            0x74cf	                            je 0x4001703	       478	merge.c	FUNCTION_15	FOR_1
0x4001734	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	       481	merge.c	FUNCTION_15	IF_6
0x400173b	            0x740f	                            je 0x400174c	       481	merge.c	FUNCTION_15	IF_6
0x400173d	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	       482	merge.c	FUNCTION_15	IF_6
0x4001747	      0xe9dd000000	                           jmp 0x4001829	       482	merge.c	FUNCTION_15	IF_6
0x400174c	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	       484	merge.c	FUNCTION_15	ELSE_1
0x4001756	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       485	merge.c	FUNCTION_15	ELSE_1	CALL_18
0x400175d	      0xbe7e000000	                           mov esi, 0x7e	       485	merge.c	FUNCTION_15	ELSE_1	CALL_18
0x4001762	          0x4889c7	                            mov rdi, rax	       485	merge.c	FUNCTION_15	ELSE_1	CALL_18
0x4001765	      0xe800000000	                          call 0x400176a	       485	merge.c	FUNCTION_15	ELSE_1	CALL_18
0x400176a	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       485	merge.c	FUNCTION_15	ELSE_1	CALL_18
0x4001771	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       486	merge.c	FUNCTION_15	ELSE_1	IF_7
0x4001779	     0xf84aa000000	                            je 0x4001829	       486	merge.c	FUNCTION_15	ELSE_1	IF_7
0x400177f	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	       487	merge.c	FUNCTION_15	ELSE_1	IF_7
0x4001789	    0x838544ffffff	               add dword [rbp - 0xbc], 1	       489	merge.c	FUNCTION_15	ELSE_1	IF_7
0x4001790	            0xeb1f	                           jmp 0x40017b1	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001792	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001799	           0xfb600	                   movzx eax, byte [rax]	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x400179c	            0x3c30	                            cmp al, 0x30	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x400179e	           0xf95c0	                                setne al	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017a1	           0xfb6c0	                           movzx eax, al	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017a4	     0x9854cffffff	              or dword [rbp - 0xb4], eax	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017aa	    0x838544ffffff	               add dword [rbp - 0xbc], 1	       492	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017b1	    0x48838558ffff	               add qword [rbp - 0xa8], 1	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017b9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017c0	           0xfb600	                   movzx eax, byte [rax]	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017c3	            0x84c0	                             test al, al	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017c5	            0x7420	                            je 0x40017e7	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017c7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017ce	           0xfb600	                   movzx eax, byte [rax]	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017d1	           0xfb6c0	                           movzx eax, al	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017d4	            0x4898	                                    cdqe	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017d6	     0xfb680000000	                   movzx eax, byte [rax]	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017dd	           0xfb6c0	                           movzx eax, al	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017e0	          0x83e002	                              and eax, 2	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017e3	            0x85c0	                           test eax, eax	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017e5	            0x75ab	                           jne 0x4001792	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40017e7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       494	merge.c	FUNCTION_15	ELSE_1	IF_7	IF_8
0x40017ee	           0xfb600	                   movzx eax, byte [rax]	       494	merge.c	FUNCTION_15	ELSE_1	IF_7	IF_8
0x40017f1	            0x84c0	                             test al, al	       494	merge.c	FUNCTION_15	ELSE_1	IF_7	IF_8
0x40017f3	            0x740c	                            je 0x4001801	       494	merge.c	FUNCTION_15	ELSE_1	IF_7	IF_8
0x40017f5	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	       495	merge.c	FUNCTION_15	ELSE_1	IF_7	IF_8
0x40017ff	            0xeb28	                           jmp 0x4001829	       495	merge.c	FUNCTION_15	ELSE_1	IF_7	IF_8
0x4001801	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       496	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_2	IF_9
0x4001808	            0x740c	                            je 0x4001816	       496	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_2	IF_9
0x400180a	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	       497	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_2	IF_9
0x4001814	            0xeb13	                           jmp 0x4001829	       497	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_2	IF_9
0x4001816	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 1	       498	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_3	IF_10
0x400181d	            0x750a	                           jne 0x4001829	       498	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_3	IF_10
0x400181f	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	       499	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_3	IF_10
0x4001829	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	       502	merge.c	FUNCTION_15	IF_11
0x4001830	     0xf84d4000000	                            je 0x400190a	       502	merge.c	FUNCTION_15	IF_11
0x4001836	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       503	merge.c	FUNCTION_15	IF_11
0x400183e	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       503	merge.c	FUNCTION_15	IF_11
0x4001846	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       503	merge.c	FUNCTION_15	IF_11
0x400184e	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4001855	        0x488d45b0	                   lea rax, [rbp - 0x50]	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4001859	      0xbe00000000	                              mov esi, 0	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x400185e	          0x4889c7	                            mov rdi, rax	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4001861	      0xb800000000	                              mov eax, 0	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4001866	      0xe800000000	                          call 0x400186b	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x400186b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       505	merge.c	FUNCTION_15	IF_11	CALL_20
0x400186f	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       505	merge.c	FUNCTION_15	IF_11	CALL_20
0x4001875	            0x4898	                                    cdqe	       505	merge.c	FUNCTION_15	IF_11	CALL_20
0x4001877	          0x4829c2	                            sub rdx, rax	       505	merge.c	FUNCTION_15	IF_11	CALL_20
0x400187a	        0x488d45b0	                   lea rax, [rbp - 0x50]	       505	merge.c	FUNCTION_15	IF_11	CALL_20
0x400187e	          0x4889d6	                            mov rsi, rdx	       505	merge.c	FUNCTION_15	IF_11	CALL_20
0x4001881	          0x4889c7	                            mov rdi, rax	       505	merge.c	FUNCTION_15	IF_11	CALL_20
0x4001884	      0xe82fe9ffff	                  call sym.strbuf_setlen	       505	merge.c	FUNCTION_15	IF_11	CALL_20
0x4001889	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       506	merge.c	FUNCTION_15	IF_11	IF_12	CALL_21
0x400188d	          0x4889c7	                            mov rdi, rax	       506	merge.c	FUNCTION_15	IF_11	IF_12	CALL_21
0x4001890	      0xe800000000	                          call 0x4001895	       506	merge.c	FUNCTION_15	IF_11	IF_12	CALL_21
0x4001895	            0x85c0	                           test eax, eax	       506	merge.c	FUNCTION_15	IF_11	IF_12	CALL_21
0x4001897	            0x7465	                            je 0x40018fe	       506	merge.c	FUNCTION_15	IF_11	IF_12	CALL_21
0x4001899	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018a0	            0x7408	                            je 0x40018aa	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018a2	    0x41bc00000000	                             mov r12d, 0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018a8	            0xeb06	                           jmp 0x40018b0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018aa	    0x41bc00000000	                             mov r12d, 0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018b0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       510	merge.c	FUNCTION_15	IF_11	IF_12
0x40018b4	        0x488d580b	                    lea rbx, [rax + 0xb]	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018b8	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       509	merge.c	FUNCTION_15	IF_11	IF_12	CALL_23
0x40018bf	        0x4883c004	                              add rax, 4	       509	merge.c	FUNCTION_15	IF_11	IF_12	CALL_23
0x40018c3	          0x4889c7	                            mov rdi, rax	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018c6	      0xe800000000	                          call 0x40018cb	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018cb	          0x4889c2	                            mov rdx, rax	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018ce	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018d5	          0x4d89e0	                             mov r8, r12	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018d8	          0x4889d9	                            mov rcx, rbx	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018db	      0xbe00000000	                              mov esi, 0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018e0	          0x4889c7	                            mov rdi, rax	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018e3	      0xb800000000	                              mov eax, 0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018e8	      0xe800000000	                          call 0x40018ed	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x40018ed	        0x488d45b0	                   lea rax, [rbp - 0x50]	       512	merge.c	FUNCTION_15	IF_11	IF_12	CALL_24
0x40018f1	          0x4889c7	                            mov rdi, rax	       512	merge.c	FUNCTION_15	IF_11	IF_12	CALL_24
0x40018f4	      0xe800000000	                          call 0x40018f9	       512	merge.c	FUNCTION_15	IF_11	IF_12	CALL_24
0x40018f9	      0xe902010000	                           jmp 0x4001a00	       512	merge.c	FUNCTION_15	IF_11	IF_12	CALL_24
0x40018fe	        0x488d45b0	                   lea rax, [rbp - 0x50]	       515	merge.c	FUNCTION_15	IF_11	CALL_25
0x4001902	          0x4889c7	                            mov rdi, rax	       515	merge.c	FUNCTION_15	IF_11	CALL_25
0x4001905	      0xe800000000	                          call 0x400190a	       515	merge.c	FUNCTION_15	IF_11	CALL_25
0x400190a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       518	merge.c	FUNCTION_15	IF_13
0x4001911	        0x488b4018	            mov rax, qword [rax + 0x18] 	       518	merge.c	FUNCTION_15	IF_13
0x4001915	          0x4885c0	                           test rax, rax	       518	merge.c	FUNCTION_15	IF_13
0x4001918	     0xf84a6000000	                            je 0x40019c4	       518	merge.c	FUNCTION_15	IF_13
0x400191e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       520	merge.c	FUNCTION_15	IF_13	CALL_26
0x4001925	        0x488b4018	            mov rax, qword [rax + 0x18] 	       520	merge.c	FUNCTION_15	IF_13	CALL_26
0x4001929	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       520	merge.c	FUNCTION_15	IF_13	CALL_26
0x4001930	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4001938	     0xf8486000000	                            je 0x40019c4	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x400193e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4001945	          0x488b00	                    mov rax, qword [rax]	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4001948	          0x4885c0	                           test rax, rax	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x400194b	            0x7477	                            je 0x40019c4	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x400194d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4001954	          0x488b00	                    mov rax, qword [rax]	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4001957	           0xfb600	                   movzx eax, byte [rax]	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x400195a	          0x83e00e	                            and eax, 0xe	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x400195d	            0x3c08	                               cmp al, 8	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x400195f	            0x7563	                           jne 0x40019c4	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4001961	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       524	merge.c	FUNCTION_15	IF_13	IF_14	CALL_29
0x4001968	          0x488b00	                    mov rax, qword [rax]	       524	merge.c	FUNCTION_15	IF_13	IF_14	CALL_29
0x400196b	           0xfb600	                   movzx eax, byte [rax]	       524	merge.c	FUNCTION_15	IF_13	IF_14	CALL_29
0x400196e	            0xd0e8	                               shr al, 1	       524	merge.c	FUNCTION_15	IF_13	IF_14	CALL_29
0x4001970	          0x83e007	                              and eax, 7	       524	merge.c	FUNCTION_15	IF_13	IF_14	CALL_29
0x4001973	           0xfb6c0	                           movzx eax, al	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001976	            0x89c7	                            mov edi, eax	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001978	      0xe800000000	                          call 0x400197d	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x400197d	          0x4889c3	                            mov rbx, rax	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001980	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       523	merge.c	FUNCTION_15	IF_13	IF_14	CALL_28
0x4001987	          0x488b00	                    mov rax, qword [rax]	       523	merge.c	FUNCTION_15	IF_13	IF_14	CALL_28
0x400198a	        0x4883c004	                              add rax, 4	       523	merge.c	FUNCTION_15	IF_13	IF_14	CALL_28
0x400198e	          0x4889c7	                            mov rdi, rax	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001991	      0xe800000000	                          call 0x4001996	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001996	          0x4889c6	                            mov rsi, rax	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001999	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40019a0	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40019a7	          0x4989d0	                             mov r8, rdx	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40019aa	          0x4889d9	                            mov rcx, rbx	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40019ad	          0x4889f2	                            mov rdx, rsi	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40019b0	      0xbe00000000	                              mov esi, 0	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40019b5	          0x4889c7	                            mov rdi, rax	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40019b8	      0xb800000000	                              mov eax, 0	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40019bd	      0xe800000000	                          call 0x40019c2	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x40019c2	            0xeb3c	                           jmp 0x4001a00	       526	merge.c	FUNCTION_15	IF_13	IF_14
0x40019c4	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       531	merge.c	FUNCTION_15	CALL_31
0x40019cb	        0x4883c004	                              add rax, 4	       531	merge.c	FUNCTION_15	CALL_31
0x40019cf	          0x4889c7	                            mov rdi, rax	       530	merge.c	FUNCTION_15	CALL_30
0x40019d2	      0xe800000000	                          call 0x40019d7	       530	merge.c	FUNCTION_15	CALL_30
0x40019d7	          0x4889c6	                            mov rsi, rax	       530	merge.c	FUNCTION_15	CALL_30
0x40019da	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       530	merge.c	FUNCTION_15	CALL_30
0x40019e1	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       530	merge.c	FUNCTION_15	CALL_30
0x40019e8	          0x4889d1	                            mov rcx, rdx	       530	merge.c	FUNCTION_15	CALL_30
0x40019eb	          0x4889f2	                            mov rdx, rsi	       530	merge.c	FUNCTION_15	CALL_30
0x40019ee	      0xbe00000000	                              mov esi, 0	       530	merge.c	FUNCTION_15	CALL_30
0x40019f3	          0x4889c7	                            mov rdi, rax	       530	merge.c	FUNCTION_15	CALL_30
0x40019f6	      0xb800000000	                              mov eax, 0	       530	merge.c	FUNCTION_15	CALL_30
0x40019fb	      0xe800000000	                          call 0x4001a00	       530	merge.c	FUNCTION_15	CALL_30
0x4001a00	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       533	merge.c	FUNCTION_15	CALL_32
0x4001a07	          0x4889c7	                            mov rdi, rax	       533	merge.c	FUNCTION_15	CALL_32
0x4001a0a	      0xe800000000	                          call 0x4001a0f	       533	merge.c	FUNCTION_15	CALL_32
0x4001a0f	        0x488d4590	                   lea rax, [rbp - 0x70]	       534	merge.c	FUNCTION_15	CALL_33
0x4001a13	          0x4889c7	                            mov rdi, rax	       534	merge.c	FUNCTION_15	CALL_33
0x4001a16	      0xe800000000	                          call 0x4001a1b	       534	merge.c	FUNCTION_15	CALL_33
0x4001a1b	              0x90	                                     nop	       535	merge.c	FUNCTION_15
0x4001a1c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       535	merge.c	FUNCTION_15
0x4001a20	    0x644833042528	                xor rax, qword fs:[0x28]	       535	merge.c	FUNCTION_15
0x4001a29	            0x7405	                            je 0x4001a30	       535	merge.c	FUNCTION_15
0x4001a2b	      0xe800000000	                          call 0x4001a30	       535	merge.c	FUNCTION_15
0x4001a30	    0x4881c4c00000	                           add rsp, 0xc0	       535	merge.c	FUNCTION_15
0x4001a37	              0x5b	                                 pop rbx	       535	merge.c	FUNCTION_15
0x4001a38	            0x415c	                                 pop r12	       535	merge.c	FUNCTION_15
0x4001a3a	              0x5d	                                 pop rbp	       535	merge.c	FUNCTION_15
0x4001a3b	              0xc3	                                     ret	       535	merge.c	FUNCTION_15
squash_message	FOR,1:WHILE,1:SWITCH,0:functions,0:DO,0:CALL,18:ELSE,0:IF,1	144
0x4000f6f	              0x55	                                push rbp	       350	merge.c	FUNCTION_13
0x4000f70	          0x4889e5	                            mov rbp, rsp	       350	merge.c	FUNCTION_13
0x4000f73	            0x4154	                                push r12	       350	merge.c	FUNCTION_13
0x4000f75	              0x53	                                push rbx	       350	merge.c	FUNCTION_13
0x4000f76	    0x4881eca00900	                          sub rsp, 0x9a0	       350	merge.c	FUNCTION_13
0x4000f7d	    0x4889bd58f6ff	            mov qword [rbp - 0x9a8], rdi	       350	merge.c	FUNCTION_13
0x4000f84	    0x4889b550f6ff	            mov qword [rbp - 0x9b0], rsi	       350	merge.c	FUNCTION_13
0x4000f8b	    0x64488b042528	                mov rax, qword fs:[0x28]	       350	merge.c	FUNCTION_13
0x4000f94	        0x488945e8	             mov qword [rbp - 0x18], rax	       350	merge.c	FUNCTION_13
0x4000f98	            0x31c0	                            xor eax, eax	       350	merge.c	FUNCTION_13
0x4000f9a	    0x48c78570f6ff	              mov qword [rbp - 0x990], 0	       352	merge.c	FUNCTION_13
0x4000fa5	    0x48c78578f6ff	              mov qword [rbp - 0x988], 0	       352	merge.c	FUNCTION_13
0x4000fb0	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	       352	merge.c	FUNCTION_13
0x4000fbb	    0x488d9590f6ff	                  lea rdx, [rbp - 0x970]	       354	merge.c	FUNCTION_13
0x4000fc2	      0xb800000000	                              mov eax, 0	       354	merge.c	FUNCTION_13
0x4000fc7	      0xb914000000	                           mov ecx, 0x14	       354	merge.c	FUNCTION_13
0x4000fcc	          0x4889d7	                            mov rdi, rdx	       354	merge.c	FUNCTION_13
0x4000fcf	          0xf348ab	              rep stosq qword [rdi], rax	       354	merge.c	FUNCTION_13
0x4000fd2	      0xbf00000000	                              mov edi, 0	       356	merge.c	FUNCTION_13	CALL_2
0x4000fd7	      0xe819f3ffff	                               call sym.	       356	merge.c	FUNCTION_13	CALL_2
0x4000fdc	          0x4889c7	                            mov rdi, rax	       356	merge.c	FUNCTION_13	CALL_2
0x4000fdf	      0xb800000000	                              mov eax, 0	       356	merge.c	FUNCTION_13	CALL_2
0x4000fe4	      0xe800000000	                          call 0x4000fe9	       356	merge.c	FUNCTION_13	CALL_2
0x4000fe9	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       358	merge.c	FUNCTION_13	CALL_3
0x4000ff0	      0xbe00000000	                              mov esi, 0	       358	merge.c	FUNCTION_13	CALL_3
0x4000ff5	          0x4889c7	                            mov rdi, rax	       358	merge.c	FUNCTION_13	CALL_3
0x4000ff8	      0xe800000000	                          call 0x4000ffd	       358	merge.c	FUNCTION_13	CALL_3
0x4000ffd	     0xfb685a9f7ff	           movzx eax, byte [rbp - 0x857]	       359	merge.c	FUNCTION_13
0x4001004	          0x83c820	                            or eax, 0x20	       359	merge.c	FUNCTION_13
0x4001007	    0x8885a9f7ffff	              mov byte [rbp - 0x857], al	       359	merge.c	FUNCTION_13
0x400100d	    0xc785d4f7ffff	              mov dword [rbp - 0x82c], 1	       360	merge.c	FUNCTION_13
0x4001017	    0x488b8558f6ff	            mov rax, qword [rbp - 0x9a8]	       362	merge.c	FUNCTION_13
0x400101e	            0x8b00	                    mov eax, dword [rax]	       362	merge.c	FUNCTION_13
0x4001020	          0xc1e804	                              shr eax, 4	       362	merge.c	FUNCTION_13
0x4001023	      0x25ffffff07	                      and eax, 0x7ffffff	       362	merge.c	FUNCTION_13
0x4001028	          0x83c802	                               or eax, 2	       362	merge.c	FUNCTION_13
0x400102b	            0x89c2	                            mov edx, eax	       362	merge.c	FUNCTION_13
0x400102d	    0x488b8558f6ff	            mov rax, qword [rbp - 0x9a8]	       362	merge.c	FUNCTION_13
0x4001034	    0x81e2ffffff07	                      and edx, 0x7ffffff	       362	merge.c	FUNCTION_13
0x400103a	            0x89d1	                            mov ecx, edx	       362	merge.c	FUNCTION_13
0x400103c	          0xc1e104	                              shl ecx, 4	       362	merge.c	FUNCTION_13
0x400103f	            0x8b10	                    mov edx, dword [rax]	       362	merge.c	FUNCTION_13
0x4001041	    0x81e20f000080	                     and edx, 0x8000000f	       362	merge.c	FUNCTION_13
0x4001047	             0x9ca	                             or edx, ecx	       362	merge.c	FUNCTION_13
0x4001049	            0x8910	                    mov dword [rax], edx	       362	merge.c	FUNCTION_13
0x400104b	    0x488b8d58f6ff	            mov rcx, qword [rbp - 0x9a8]	       363	merge.c	FUNCTION_13	CALL_4
0x4001052	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       363	merge.c	FUNCTION_13	CALL_4
0x4001059	      0xba00000000	                              mov edx, 0	       363	merge.c	FUNCTION_13	CALL_4
0x400105e	          0x4889ce	                            mov rsi, rcx	       363	merge.c	FUNCTION_13	CALL_4
0x4001061	          0x4889c7	                            mov rdi, rax	       363	merge.c	FUNCTION_13	CALL_4
0x4001064	      0xe800000000	                          call 0x4001069	       363	merge.c	FUNCTION_13	CALL_4
0x4001069	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	       365	merge.c	FUNCTION_13	FOR_1
0x4001070	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	       365	merge.c	FUNCTION_13	FOR_1
0x4001077	            0xeb36	                           jmp 0x40010af	       365	merge.c	FUNCTION_13	FOR_1
0x4001079	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	       366	merge.c	FUNCTION_13	CALL_5
0x4001080	          0x488b00	                    mov rax, qword [rax]	       366	merge.c	FUNCTION_13	CALL_5
0x4001083	          0x4889c1	                            mov rcx, rax	       366	merge.c	FUNCTION_13	CALL_5
0x4001086	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       366	merge.c	FUNCTION_13	CALL_5
0x400108d	      0xba00000000	                              mov edx, 0	       366	merge.c	FUNCTION_13	CALL_5
0x4001092	          0x4889ce	                            mov rsi, rcx	       366	merge.c	FUNCTION_13	CALL_5
0x4001095	          0x4889c7	                            mov rdi, rax	       366	merge.c	FUNCTION_13	CALL_5
0x4001098	      0xe800000000	                          call 0x400109d	       366	merge.c	FUNCTION_13	CALL_5
0x400109d	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	       365	merge.c	FUNCTION_13	FOR_1
0x40010a4	        0x488b4008	                mov rax, qword [rax + 8]	       365	merge.c	FUNCTION_13	FOR_1
0x40010a8	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	       365	merge.c	FUNCTION_13	FOR_1
0x40010af	    0x4883bd68f6ff	              cmp qword [rbp - 0x998], 0	       365	merge.c	FUNCTION_13	FOR_1
0x40010b7	            0x75c0	                           jne 0x4001079	       365	merge.c	FUNCTION_13	FOR_1
0x40010b9	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       368	merge.c	FUNCTION_13	CALL_6
0x40010c0	      0xb900000000	                              mov ecx, 0	       368	merge.c	FUNCTION_13	CALL_6
0x40010c5	          0x4889c2	                            mov rdx, rax	       368	merge.c	FUNCTION_13	CALL_6
0x40010c8	      0xbe00000000	                              mov esi, 0	       368	merge.c	FUNCTION_13	CALL_6
0x40010cd	      0xbf00000000	                              mov edi, 0	       368	merge.c	FUNCTION_13	CALL_6
0x40010d2	      0xe800000000	                          call 0x40010d7	       368	merge.c	FUNCTION_13	CALL_6
0x40010d7	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       369	merge.c	FUNCTION_13	IF_1	CALL_7
0x40010de	          0x4889c7	                            mov rdi, rax	       369	merge.c	FUNCTION_13	IF_1	CALL_7
0x40010e1	      0xe800000000	                          call 0x40010e6	       369	merge.c	FUNCTION_13	IF_1	CALL_7
0x40010e6	            0x85c0	                           test eax, eax	       369	merge.c	FUNCTION_13	IF_1	CALL_7
0x40010e8	            0x7417	                            je 0x4001101	       369	merge.c	FUNCTION_13	IF_1	CALL_7
0x40010ea	      0xbf00000000	                              mov edi, 0	       370	merge.c	FUNCTION_13	CALL_9
0x40010ef	      0xe801f2ffff	                               call sym.	       370	merge.c	FUNCTION_13	CALL_9
0x40010f4	          0x4889c7	                            mov rdi, rax	       370	merge.c	FUNCTION_13	CALL_9
0x40010f7	      0xb800000000	                              mov eax, 0	       370	merge.c	FUNCTION_13	CALL_9
0x40010fc	      0xe800000000	                          call 0x4001101	       370	merge.c	FUNCTION_13	CALL_9
0x4001101	    0x8b85d0f7ffff	            mov eax, dword [rbp - 0x830]	       372	merge.c	FUNCTION_13
0x4001107	    0x898594f6ffff	            mov dword [rbp - 0x96c], eax	       372	merge.c	FUNCTION_13
0x400110d	    0x488b85b0f7ff	            mov rax, qword [rbp - 0x850]	       373	merge.c	FUNCTION_13
0x4001114	    0x488985a8f6ff	            mov qword [rbp - 0x958], rax	       373	merge.c	FUNCTION_13
0x400111b	    0x488b85b8f7ff	            mov rax, qword [rbp - 0x848]	       373	merge.c	FUNCTION_13
0x4001122	    0x488985b0f6ff	            mov qword [rbp - 0x950], rax	       373	merge.c	FUNCTION_13
0x4001129	    0x488b85c0f7ff	            mov rax, qword [rbp - 0x840]	       373	merge.c	FUNCTION_13
0x4001130	    0x488985b8f6ff	            mov qword [rbp - 0x948], rax	       373	merge.c	FUNCTION_13
0x4001137	    0x8b85d4f7ffff	            mov eax, dword [rbp - 0x82c]	       374	merge.c	FUNCTION_13
0x400113d	    0x898590f6ffff	            mov dword [rbp - 0x970], eax	       374	merge.c	FUNCTION_13
0x4001143	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	       376	merge.c	FUNCTION_13	CALL_10
0x400114a	      0xbe00000000	                              mov esi, 0	       376	merge.c	FUNCTION_13	CALL_10
0x400114f	          0x4889c7	                            mov rdi, rax	       376	merge.c	FUNCTION_13	CALL_10
0x4001152	      0xe869f1ffff	                  call sym.strbuf_addstr	       376	merge.c	FUNCTION_13	CALL_10
0x4001157	            0xeb63	                           jmp 0x40011bc	       377	merge.c	FUNCTION_13	WHILE_1	CALL_11
0x4001159	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	       378	merge.c	FUNCTION_13	WHILE_1	CALL_12
0x4001160	      0xbe0a000000	                            mov esi, 0xa	       378	merge.c	FUNCTION_13	WHILE_1	CALL_12
0x4001165	          0x4889c7	                            mov rdi, rax	       378	merge.c	FUNCTION_13	WHILE_1	CALL_12
0x4001168	      0xe8e5f0ffff	                   call sym.strbuf_addch	       378	merge.c	FUNCTION_13	WHILE_1	CALL_12
0x400116d	    0x488b8558f6ff	            mov rax, qword [rbp - 0x9a8]	       380	merge.c	FUNCTION_13	WHILE_1	CALL_14
0x4001174	        0x4883c004	                              add rax, 4	       380	merge.c	FUNCTION_13	WHILE_1	CALL_14
0x4001178	          0x4889c7	                            mov rdi, rax	       379	merge.c	FUNCTION_13	WHILE_1	CALL_13
0x400117b	      0xe800000000	                          call 0x4001180	       379	merge.c	FUNCTION_13	WHILE_1	CALL_13
0x4001180	          0x4889c2	                            mov rdx, rax	       379	merge.c	FUNCTION_13	WHILE_1	CALL_13
0x4001183	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	       379	merge.c	FUNCTION_13	WHILE_1	CALL_13
0x400118a	      0xbe00000000	                              mov esi, 0	       379	merge.c	FUNCTION_13	WHILE_1	CALL_13
0x400118f	          0x4889c7	                            mov rdi, rax	       379	merge.c	FUNCTION_13	WHILE_1	CALL_13
0x4001192	      0xb800000000	                              mov eax, 0	       379	merge.c	FUNCTION_13	WHILE_1	CALL_13
0x4001197	      0xe800000000	                          call 0x400119c	       379	merge.c	FUNCTION_13	WHILE_1	CALL_13
0x400119c	    0x488d9570f6ff	                  lea rdx, [rbp - 0x990]	       381	merge.c	FUNCTION_13	WHILE_1	CALL_15
0x40011a3	    0x488b8d58f6ff	            mov rcx, qword [rbp - 0x9a8]	       381	merge.c	FUNCTION_13	WHILE_1	CALL_15
0x40011aa	    0x488d8590f6ff	                  lea rax, [rbp - 0x970]	       381	merge.c	FUNCTION_13	WHILE_1	CALL_15
0x40011b1	          0x4889ce	                            mov rsi, rcx	       381	merge.c	FUNCTION_13	WHILE_1	CALL_15
0x40011b4	          0x4889c7	                            mov rdi, rax	       381	merge.c	FUNCTION_13	WHILE_1	CALL_15
0x40011b7	      0xe800000000	                          call 0x40011bc	       381	merge.c	FUNCTION_13	WHILE_1	CALL_15
0x40011bc	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       377	merge.c	FUNCTION_13	WHILE_1	CALL_11
0x40011c3	          0x4889c7	                            mov rdi, rax	       377	merge.c	FUNCTION_13	WHILE_1	CALL_11
0x40011c6	      0xe800000000	                          call 0x40011cb	       377	merge.c	FUNCTION_13	WHILE_1	CALL_11
0x40011cb	    0x48898558f6ff	            mov qword [rbp - 0x9a8], rax	       377	merge.c	FUNCTION_13	WHILE_1	CALL_11
0x40011d2	    0x4883bd58f6ff	              cmp qword [rbp - 0x9a8], 0	       377	merge.c	FUNCTION_13	WHILE_1	CALL_11
0x40011da	     0xf8579ffffff	                           jne 0x4001159	       377	merge.c	FUNCTION_13	WHILE_1	CALL_11
0x40011e0	    0x4c8ba578f6ff	            mov r12, qword [rbp - 0x988]	       383	merge.c	FUNCTION_13	CALL_17
0x40011e7	    0x488b9d80f6ff	            mov rbx, qword [rbp - 0x980]	       383	merge.c	FUNCTION_13	CALL_17
0x40011ee	      0xe800000000	                          call 0x40011f3	       383	merge.c	FUNCTION_13	CALL_17
0x40011f3	          0x4c89e2	                            mov rdx, r12	       383	merge.c	FUNCTION_13	CALL_17
0x40011f6	          0x4889de	                            mov rsi, rbx	       383	merge.c	FUNCTION_13	CALL_17
0x40011f9	          0x4889c7	                            mov rdi, rax	       383	merge.c	FUNCTION_13	CALL_17
0x40011fc	      0xe800000000	                          call 0x4001201	       383	merge.c	FUNCTION_13	CALL_17
0x4001201	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	       384	merge.c	FUNCTION_13	CALL_18
0x4001208	          0x4889c7	                            mov rdi, rax	       384	merge.c	FUNCTION_13	CALL_18
0x400120b	      0xe800000000	                          call 0x4001210	       384	merge.c	FUNCTION_13	CALL_18
0x4001210	              0x90	                                     nop	       385	merge.c	FUNCTION_13
0x4001211	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       385	merge.c	FUNCTION_13
0x4001215	    0x644833042528	                xor rax, qword fs:[0x28]	       385	merge.c	FUNCTION_13
0x400121e	            0x7405	                            je 0x4001225	       385	merge.c	FUNCTION_13
0x4001220	      0xe800000000	                          call 0x4001225	       385	merge.c	FUNCTION_13
0x4001225	    0x4881c4a00900	                          add rsp, 0x9a0	       385	merge.c	FUNCTION_13
0x400122c	              0x5b	                                 pop rbx	       385	merge.c	FUNCTION_13
0x400122d	            0x415c	                                 pop r12	       385	merge.c	FUNCTION_13
0x400122f	              0x5d	                                 pop rbp	       385	merge.c	FUNCTION_13
0x4001230	              0xc3	                                     ret	       385	merge.c	FUNCTION_13
