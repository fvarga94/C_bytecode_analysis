strbuf_avail	DO,0:CALL,0:SWITCH,0:IF,0:FOR,0:ELSE,0:WHILE,0:functions,0	18
0x4000092	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_2
0x4000093	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_2
0x4000096	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_2
0x400009a	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x400009e	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_2
0x40000a1	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_2
0x40000a4	            0x741b	                            je 0x40000c1	       141	strbuf.h	FUNCTION_2
0x40000a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x40000aa	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_2
0x40000ad	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x40000b1	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_2
0x40000b5	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_2
0x40000b8	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_2
0x40000bb	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_2
0x40000bf	            0xeb05	                           jmp 0x40000c6	       141	strbuf.h	FUNCTION_2
0x40000c1	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_2
0x40000c6	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_2
0x40000c7	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_2
tcl_quote_buf	DO,0:CALL,9:SWITCH,1:IF,0:FOR,0:ELSE,0:WHILE,1:functions,0	89
0x4001328	              0x55	                                push rbp	       454	quote.c	FUNCTION_34
0x4001329	          0x4889e5	                            mov rbp, rsp	       454	quote.c	FUNCTION_34
0x400132c	        0x4883ec20	                           sub rsp, 0x20	       454	quote.c	FUNCTION_34
0x4001330	        0x48897de8	             mov qword [rbp - 0x18], rdi	       454	quote.c	FUNCTION_34
0x4001334	        0x488975e0	             mov qword [rbp - 0x20], rsi	       454	quote.c	FUNCTION_34
0x4001338	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       457	quote.c	FUNCTION_34	CALL_1
0x400133c	      0xbe22000000	                           mov esi, 0x22	       457	quote.c	FUNCTION_34	CALL_1
0x4001341	          0x4889c7	                            mov rdi, rax	       457	quote.c	FUNCTION_34	CALL_1
0x4001344	      0xe819eeffff	                   call sym.strbuf_addch	       457	quote.c	FUNCTION_34	CALL_1
0x4001349	      0xe9d6000000	                           jmp 0x4001424	       458	quote.c	FUNCTION_34	WHILE_1
0x400134e	         0xfbe45ff	               movsx eax, byte [rbp - 1]	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001352	          0x83f822	                           cmp eax, 0x22	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001355	            0x744a	                            je 0x40013a1	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001357	          0x83f822	                           cmp eax, 0x22	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x400135a	            0x7f2a	                            jg 0x4001386	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x400135c	          0x83f80b	                            cmp eax, 0xb	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x400135f	     0xf84ad000000	                            je 0x4001412	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001365	          0x83f80b	                            cmp eax, 0xb	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001368	            0x7f10	                            jg 0x400137a	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x400136a	          0x83f809	                              cmp eax, 9	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x400136d	     0xf848c000000	                            je 0x40013ff	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001373	          0x83f80a	                            cmp eax, 0xa	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001376	            0x7474	                            je 0x40013ec	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001378	            0xeb38	                           jmp 0x40013b2	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x400137a	          0x83f80c	                            cmp eax, 0xc	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x400137d	            0x7447	                            je 0x40013c6	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x400137f	          0x83f80d	                            cmp eax, 0xd	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001382	            0x7455	                            je 0x40013d9	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001384	            0xeb2c	                           jmp 0x40013b2	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001386	          0x83f85d	                           cmp eax, 0x5d	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001389	            0x7f0c	                            jg 0x4001397	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x400138b	          0x83f85b	                           cmp eax, 0x5b	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x400138e	            0x7d11	                           jge 0x40013a1	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001390	          0x83f824	                           cmp eax, 0x24	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001393	            0x740c	                            je 0x40013a1	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001395	            0xeb1b	                           jmp 0x40013b2	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001397	          0x83f87b	                           cmp eax, 0x7b	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x400139a	            0x7405	                            je 0x40013a1	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x400139c	          0x83f87d	                           cmp eax, 0x7d	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x400139f	            0x7511	                           jne 0x40013b2	       459	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x40013a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       463	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_2
0x40013a5	      0xbe5c000000	                           mov esi, 0x5c	       463	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_2
0x40013aa	          0x4889c7	                            mov rdi, rax	       463	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_2
0x40013ad	      0xe8b0edffff	                   call sym.strbuf_addch	       463	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_2
0x40013b2	         0xfbe55ff	               movsx edx, byte [rbp - 1]	       466	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_3
0x40013b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       466	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_3
0x40013ba	            0x89d6	                            mov esi, edx	       466	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_3
0x40013bc	          0x4889c7	                            mov rdi, rax	       466	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_3
0x40013bf	      0xe89eedffff	                   call sym.strbuf_addch	       466	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_3
0x40013c4	            0xeb5e	                           jmp 0x4001424	       467	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x40013c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       469	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_4
0x40013ca	      0xbe00000000	                              mov esi, 0	       469	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_4
0x40013cf	          0x4889c7	                            mov rdi, rax	       469	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_4
0x40013d2	      0xe8f9edffff	                  call sym.strbuf_addstr	       469	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_4
0x40013d7	            0xeb4b	                           jmp 0x4001424	       470	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x40013d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       472	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_5
0x40013dd	      0xbe00000000	                              mov esi, 0	       472	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_5
0x40013e2	          0x4889c7	                            mov rdi, rax	       472	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_5
0x40013e5	      0xe8e6edffff	                  call sym.strbuf_addstr	       472	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_5
0x40013ea	            0xeb38	                           jmp 0x4001424	       473	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x40013ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       475	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_6
0x40013f0	      0xbe00000000	                              mov esi, 0	       475	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_6
0x40013f5	          0x4889c7	                            mov rdi, rax	       475	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_6
0x40013f8	      0xe8d3edffff	                  call sym.strbuf_addstr	       475	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_6
0x40013fd	            0xeb25	                           jmp 0x4001424	       476	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x40013ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       478	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_7
0x4001403	      0xbe00000000	                              mov esi, 0	       478	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_7
0x4001408	          0x4889c7	                            mov rdi, rax	       478	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_7
0x400140b	      0xe8c0edffff	                  call sym.strbuf_addstr	       478	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_7
0x4001410	            0xeb12	                           jmp 0x4001424	       479	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001412	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       481	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_8
0x4001416	      0xbe00000000	                              mov esi, 0	       481	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_8
0x400141b	          0x4889c7	                            mov rdi, rax	       481	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_8
0x400141e	      0xe8adedffff	                  call sym.strbuf_addstr	       481	quote.c	FUNCTION_34	WHILE_1	SWITCH_1	CALL_8
0x4001423	              0x90	                                     nop	       482	quote.c	FUNCTION_34	WHILE_1	SWITCH_1
0x4001424	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       458	quote.c	FUNCTION_34	WHILE_1
0x4001428	        0x488d5001	                      lea rdx, [rax + 1]	       458	quote.c	FUNCTION_34	WHILE_1
0x400142c	        0x488955e0	             mov qword [rbp - 0x20], rdx	       458	quote.c	FUNCTION_34	WHILE_1
0x4001430	           0xfb600	                   movzx eax, byte [rax]	       458	quote.c	FUNCTION_34	WHILE_1
0x4001433	          0x8845ff	                  mov byte [rbp - 1], al	       458	quote.c	FUNCTION_34	WHILE_1
0x4001436	        0x807dff00	                   cmp byte [rbp - 1], 0	       458	quote.c	FUNCTION_34	WHILE_1
0x400143a	     0xf850effffff	                           jne 0x400134e	       458	quote.c	FUNCTION_34	WHILE_1
0x4001440	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	quote.c	FUNCTION_34	CALL_9
0x4001444	      0xbe22000000	                           mov esi, 0x22	       485	quote.c	FUNCTION_34	CALL_9
0x4001449	          0x4889c7	                            mov rdi, rax	       485	quote.c	FUNCTION_34	CALL_9
0x400144c	      0xe811edffff	                   call sym.strbuf_addch	       485	quote.c	FUNCTION_34	CALL_9
0x4001451	              0x90	                                     nop	       486	quote.c	FUNCTION_34
0x4001452	              0xc9	                                   leave	       486	quote.c	FUNCTION_34
0x4001453	              0xc3	                                     ret	       486	quote.c	FUNCTION_34
sq_quote_argv_pretty	DO,0:CALL,2:SWITCH,0:IF,0:FOR,1:ELSE,0:WHILE,0:functions,0	33
0x400057d	              0x55	                                push rbp	        88	quote.c	FUNCTION_17
0x400057e	          0x4889e5	                            mov rbp, rsp	        88	quote.c	FUNCTION_17
0x4000581	        0x4883ec20	                           sub rsp, 0x20	        88	quote.c	FUNCTION_17
0x4000585	        0x48897de8	             mov qword [rbp - 0x18], rdi	        88	quote.c	FUNCTION_17
0x4000589	        0x488975e0	             mov qword [rbp - 0x20], rsi	        88	quote.c	FUNCTION_17
0x400058d	    0xc745fc000000	                  mov dword [rbp - 4], 0	        91	quote.c	FUNCTION_17	FOR_1
0x4000594	            0xeb3b	                           jmp 0x40005d1	        91	quote.c	FUNCTION_17	FOR_1
0x4000596	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        92	quote.c	FUNCTION_17	FOR_1	CALL_1
0x400059a	      0xbe20000000	                           mov esi, 0x20	        92	quote.c	FUNCTION_17	FOR_1	CALL_1
0x400059f	          0x4889c7	                            mov rdi, rax	        92	quote.c	FUNCTION_17	FOR_1	CALL_1
0x40005a2	      0xe8bbfbffff	                   call sym.strbuf_addch	        92	quote.c	FUNCTION_17	FOR_1	CALL_1
0x40005a7	          0x8b45fc	                mov eax, dword [rbp - 4]	        93	quote.c	FUNCTION_17	FOR_1	CALL_2
0x40005aa	            0x4898	                                    cdqe	        93	quote.c	FUNCTION_17	FOR_1	CALL_2
0x40005ac	    0x488d14c50000	                        lea rdx, [rax*8]	        93	quote.c	FUNCTION_17	FOR_1	CALL_2
0x40005b4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        93	quote.c	FUNCTION_17	FOR_1	CALL_2
0x40005b8	          0x4801d0	                            add rax, rdx	        93	quote.c	FUNCTION_17	FOR_1	CALL_2
0x40005bb	          0x488b10	                    mov rdx, qword [rax]	        93	quote.c	FUNCTION_17	FOR_1	CALL_2
0x40005be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        93	quote.c	FUNCTION_17	FOR_1	CALL_2
0x40005c2	          0x4889d6	                            mov rsi, rdx	        93	quote.c	FUNCTION_17	FOR_1	CALL_2
0x40005c5	          0x4889c7	                            mov rdi, rax	        93	quote.c	FUNCTION_17	FOR_1	CALL_2
0x40005c8	      0xe800000000	                          call 0x40005cd	        93	quote.c	FUNCTION_17	FOR_1	CALL_2
0x40005cd	        0x8345fc01	                  add dword [rbp - 4], 1	        91	quote.c	FUNCTION_17	FOR_1
0x40005d1	          0x8b45fc	                mov eax, dword [rbp - 4]	        91	quote.c	FUNCTION_17	FOR_1
0x40005d4	            0x4898	                                    cdqe	        91	quote.c	FUNCTION_17	FOR_1
0x40005d6	    0x488d14c50000	                        lea rdx, [rax*8]	        91	quote.c	FUNCTION_17	FOR_1
0x40005de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        91	quote.c	FUNCTION_17	FOR_1
0x40005e2	          0x4801d0	                            add rax, rdx	        91	quote.c	FUNCTION_17	FOR_1
0x40005e5	          0x488b00	                    mov rax, qword [rax]	        91	quote.c	FUNCTION_17	FOR_1
0x40005e8	          0x4885c0	                           test rax, rax	        91	quote.c	FUNCTION_17	FOR_1
0x40005eb	            0x75a9	                           jne 0x4000596	        91	quote.c	FUNCTION_17	FOR_1
0x40005ed	              0x90	                                     nop	        95	quote.c	FUNCTION_17
0x40005ee	              0xc9	                                   leave	        95	quote.c	FUNCTION_17
0x40005ef	              0xc3	                                     ret	        95	quote.c	FUNCTION_17
write_name_quoted_relative	DO,0:CALL,3:SWITCH,0:IF,0:FOR,0:ELSE,0:WHILE,0:functions,0	36
0x4000ec4	              0x55	                                push rbp	       323	quote.c	FUNCTION_29
0x4000ec5	          0x4889e5	                            mov rbp, rsp	       323	quote.c	FUNCTION_29
0x4000ec8	        0x4883ec40	                           sub rsp, 0x40	       323	quote.c	FUNCTION_29
0x4000ecc	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       323	quote.c	FUNCTION_29
0x4000ed0	        0x488975d0	             mov qword [rbp - 0x30], rsi	       323	quote.c	FUNCTION_29
0x4000ed4	        0x488955c8	             mov qword [rbp - 0x38], rdx	       323	quote.c	FUNCTION_29
0x4000ed8	          0x894dc4	             mov dword [rbp - 0x3c], ecx	       323	quote.c	FUNCTION_29
0x4000edb	    0x64488b042528	                mov rax, qword fs:[0x28]	       323	quote.c	FUNCTION_29
0x4000ee4	        0x488945f8	                mov qword [rbp - 8], rax	       323	quote.c	FUNCTION_29
0x4000ee8	            0x31c0	                            xor eax, eax	       323	quote.c	FUNCTION_29
0x4000eea	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       324	quote.c	FUNCTION_29
0x4000ef2	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       324	quote.c	FUNCTION_29
0x4000efa	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       324	quote.c	FUNCTION_29
0x4000f02	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       326	quote.c	FUNCTION_29	CALL_1
0x4000f06	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       326	quote.c	FUNCTION_29	CALL_1
0x4000f0a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       326	quote.c	FUNCTION_29	CALL_1
0x4000f0e	          0x4889ce	                            mov rsi, rcx	       326	quote.c	FUNCTION_29	CALL_1
0x4000f11	          0x4889c7	                            mov rdi, rax	       326	quote.c	FUNCTION_29	CALL_1
0x4000f14	      0xe800000000	                          call 0x4000f19	       326	quote.c	FUNCTION_29	CALL_1
0x4000f19	        0x488945d8	             mov qword [rbp - 0x28], rax	       326	quote.c	FUNCTION_29	CALL_1
0x4000f1d	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       327	quote.c	FUNCTION_29	CALL_2
0x4000f20	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       327	quote.c	FUNCTION_29	CALL_2
0x4000f24	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       327	quote.c	FUNCTION_29	CALL_2
0x4000f28	          0x4889ce	                            mov rsi, rcx	       327	quote.c	FUNCTION_29	CALL_2
0x4000f2b	          0x4889c7	                            mov rdi, rax	       327	quote.c	FUNCTION_29	CALL_2
0x4000f2e	      0xe800000000	                          call 0x4000f33	       327	quote.c	FUNCTION_29	CALL_2
0x4000f33	        0x488d45e0	                   lea rax, [rbp - 0x20]	       329	quote.c	FUNCTION_29	CALL_3
0x4000f37	          0x4889c7	                            mov rdi, rax	       329	quote.c	FUNCTION_29	CALL_3
0x4000f3a	      0xe800000000	                          call 0x4000f3f	       329	quote.c	FUNCTION_29	CALL_3
0x4000f3f	              0x90	                                     nop	       330	quote.c	FUNCTION_29
0x4000f40	        0x488b45f8	                mov rax, qword [rbp - 8]	       330	quote.c	FUNCTION_29
0x4000f44	    0x644833042528	                xor rax, qword fs:[0x28]	       330	quote.c	FUNCTION_29
0x4000f4d	            0x7405	                            je 0x4000f54	       330	quote.c	FUNCTION_29
0x4000f4f	      0xe800000000	                          call 0x4000f54	       330	quote.c	FUNCTION_29
0x4000f54	              0xc9	                                   leave	       330	quote.c	FUNCTION_29
0x4000f55	              0xc3	                                     ret	       330	quote.c	FUNCTION_29
perl_quote_buf	DO,0:CALL,4:SWITCH,0:IF,1:FOR,0:ELSE,0:WHILE,1:functions,0	44
0x40011d8	              0x55	                                push rbp	       418	quote.c	FUNCTION_32
0x40011d9	          0x4889e5	                            mov rbp, rsp	       418	quote.c	FUNCTION_32
0x40011dc	        0x4883ec20	                           sub rsp, 0x20	       418	quote.c	FUNCTION_32
0x40011e0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       418	quote.c	FUNCTION_32
0x40011e4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       418	quote.c	FUNCTION_32
0x40011e8	        0xc645fd27	                mov byte [rbp - 3], 0x27	       419	quote.c	FUNCTION_32
0x40011ec	        0xc645fe5c	                mov byte [rbp - 2], 0x5c	       420	quote.c	FUNCTION_32
0x40011f0	         0xfbe55fd	               movsx edx, byte [rbp - 3]	       423	quote.c	FUNCTION_32	CALL_1
0x40011f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       423	quote.c	FUNCTION_32	CALL_1
0x40011f8	            0x89d6	                            mov esi, edx	       423	quote.c	FUNCTION_32	CALL_1
0x40011fa	          0x4889c7	                            mov rdi, rax	       423	quote.c	FUNCTION_32	CALL_1
0x40011fd	      0xe860efffff	                   call sym.strbuf_addch	       423	quote.c	FUNCTION_32	CALL_1
0x4001202	            0xeb36	                           jmp 0x400123a	       424	quote.c	FUNCTION_32	WHILE_1
0x4001204	         0xfb645ff	               movzx eax, byte [rbp - 1]	       425	quote.c	FUNCTION_32	WHILE_1	IF_1
0x4001208	          0x3a45fd	                  cmp al, byte [rbp - 3]	       425	quote.c	FUNCTION_32	WHILE_1	IF_1
0x400120b	            0x7409	                            je 0x4001216	       425	quote.c	FUNCTION_32	WHILE_1	IF_1
0x400120d	         0xfb645ff	               movzx eax, byte [rbp - 1]	       425	quote.c	FUNCTION_32	WHILE_1	IF_1
0x4001211	          0x3a45fe	                  cmp al, byte [rbp - 2]	       425	quote.c	FUNCTION_32	WHILE_1	IF_1
0x4001214	            0x7512	                           jne 0x4001228	       425	quote.c	FUNCTION_32	WHILE_1	IF_1
0x4001216	         0xfbe55fe	               movsx edx, byte [rbp - 2]	       426	quote.c	FUNCTION_32	WHILE_1	CALL_2
0x400121a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       426	quote.c	FUNCTION_32	WHILE_1	CALL_2
0x400121e	            0x89d6	                            mov esi, edx	       426	quote.c	FUNCTION_32	WHILE_1	CALL_2
0x4001220	          0x4889c7	                            mov rdi, rax	       426	quote.c	FUNCTION_32	WHILE_1	CALL_2
0x4001223	      0xe83aefffff	                   call sym.strbuf_addch	       426	quote.c	FUNCTION_32	WHILE_1	CALL_2
0x4001228	         0xfbe55ff	               movsx edx, byte [rbp - 1]	       427	quote.c	FUNCTION_32	WHILE_1	CALL_3
0x400122c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       427	quote.c	FUNCTION_32	WHILE_1	CALL_3
0x4001230	            0x89d6	                            mov esi, edx	       427	quote.c	FUNCTION_32	WHILE_1	CALL_3
0x4001232	          0x4889c7	                            mov rdi, rax	       427	quote.c	FUNCTION_32	WHILE_1	CALL_3
0x4001235	      0xe828efffff	                   call sym.strbuf_addch	       427	quote.c	FUNCTION_32	WHILE_1	CALL_3
0x400123a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       424	quote.c	FUNCTION_32	WHILE_1
0x400123e	        0x488d5001	                      lea rdx, [rax + 1]	       424	quote.c	FUNCTION_32	WHILE_1
0x4001242	        0x488955e0	             mov qword [rbp - 0x20], rdx	       424	quote.c	FUNCTION_32	WHILE_1
0x4001246	           0xfb600	                   movzx eax, byte [rax]	       424	quote.c	FUNCTION_32	WHILE_1
0x4001249	          0x8845ff	                  mov byte [rbp - 1], al	       424	quote.c	FUNCTION_32	WHILE_1
0x400124c	        0x807dff00	                   cmp byte [rbp - 1], 0	       424	quote.c	FUNCTION_32	WHILE_1
0x4001250	            0x75b2	                           jne 0x4001204	       424	quote.c	FUNCTION_32	WHILE_1
0x4001252	         0xfbe55fd	               movsx edx, byte [rbp - 3]	       429	quote.c	FUNCTION_32	CALL_4
0x4001256	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       429	quote.c	FUNCTION_32	CALL_4
0x400125a	            0x89d6	                            mov esi, edx	       429	quote.c	FUNCTION_32	CALL_4
0x400125c	          0x4889c7	                            mov rdi, rax	       429	quote.c	FUNCTION_32	CALL_4
0x400125f	      0xe8feeeffff	                   call sym.strbuf_addch	       429	quote.c	FUNCTION_32	CALL_4
0x4001264	              0x90	                                     nop	       430	quote.c	FUNCTION_32
0x4001265	              0xc9	                                   leave	       430	quote.c	FUNCTION_32
0x4001266	              0xc3	                                     ret	       430	quote.c	FUNCTION_32
strbuf_addch	DO,0:CALL,2:SWITCH,0:IF,1:FOR,0:ELSE,0:WHILE,0:functions,0	33
0x4000162	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_4
0x4000163	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_4
0x4000166	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_4
0x400016a	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_4
0x400016e	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_4
0x4000171	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000175	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000178	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x400017d	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000180	            0x7511	                           jne 0x4000193	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000182	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_4	CALL_2
0x4000186	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_4	CALL_2
0x400018b	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_4	CALL_2
0x400018e	      0xe800000000	                          call 0x4000193	       228	strbuf.h	FUNCTION_4	CALL_2
0x4000193	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x4000197	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_4
0x400019b	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x400019f	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_4
0x40001a3	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_4
0x40001a7	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x40001ab	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_4
0x40001af	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_4
0x40001b2	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_4
0x40001b5	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_4
0x40001b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x40001bb	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_4
0x40001bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x40001c3	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_4
0x40001c7	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_4
0x40001ca	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_4
0x40001cd	              0x90	                                     nop	       231	strbuf.h	FUNCTION_4
0x40001ce	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_4
0x40001cf	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_4
sq_quote_buf	DO,0:CALL,10:SWITCH,0:IF,1:FOR,0:ELSE,0:WHILE,2:functions,0	72
0x4000228	              0x55	                                push rbp	        25	quote.c	FUNCTION_13
0x4000229	          0x4889e5	                            mov rbp, rsp	        25	quote.c	FUNCTION_13
0x400022c	        0x4883ec20	                           sub rsp, 0x20	        25	quote.c	FUNCTION_13
0x4000230	        0x48897de8	             mov qword [rbp - 0x18], rdi	        25	quote.c	FUNCTION_13
0x4000234	        0x488975e0	             mov qword [rbp - 0x20], rsi	        25	quote.c	FUNCTION_13
0x4000238	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        26	quote.c	FUNCTION_13
0x4000240	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        28	quote.c	FUNCTION_13	IF_1
0x4000244	        0x488b4010	            mov rax, qword [rax + 0x10] 	        28	quote.c	FUNCTION_13	IF_1
0x4000248	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        28	quote.c	FUNCTION_13	IF_1
0x400024c	            0x7515	                           jne 0x4000263	        28	quote.c	FUNCTION_13	IF_1
0x400024e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        29	quote.c	FUNCTION_13	CALL_1
0x4000252	      0xbe00000000	                              mov esi, 0	        29	quote.c	FUNCTION_13	CALL_1
0x4000257	          0x4889c7	                            mov rdi, rax	        29	quote.c	FUNCTION_13	CALL_1
0x400025a	      0xe800000000	                          call 0x400025f	        29	quote.c	FUNCTION_13	CALL_1
0x400025f	        0x488945f0	             mov qword [rbp - 0x10], rax	        29	quote.c	FUNCTION_13	CALL_1
0x4000263	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        31	quote.c	FUNCTION_13	CALL_2
0x4000267	      0xbe27000000	                           mov esi, 0x27	        31	quote.c	FUNCTION_13	CALL_2
0x400026c	          0x4889c7	                            mov rdi, rax	        31	quote.c	FUNCTION_13	CALL_2
0x400026f	      0xe8eefeffff	                   call sym.strbuf_addch	        31	quote.c	FUNCTION_13	CALL_2
0x4000274	      0xe98d000000	                           jmp 0x4000306	        32	quote.c	FUNCTION_13	WHILE_1
0x4000279	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        33	quote.c	FUNCTION_13	WHILE_1	CALL_3
0x400027d	      0xbe00000000	                              mov esi, 0	        33	quote.c	FUNCTION_13	WHILE_1	CALL_3
0x4000282	          0x4889c7	                            mov rdi, rax	        33	quote.c	FUNCTION_13	WHILE_1	CALL_3
0x4000285	      0xe800000000	                          call 0x400028a	        33	quote.c	FUNCTION_13	WHILE_1	CALL_3
0x400028a	        0x488945f8	                mov qword [rbp - 8], rax	        33	quote.c	FUNCTION_13	WHILE_1	CALL_3
0x400028e	        0x488b55f8	                mov rdx, qword [rbp - 8]	        34	quote.c	FUNCTION_13	WHILE_1	CALL_4
0x4000292	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        34	quote.c	FUNCTION_13	WHILE_1	CALL_4
0x4000296	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        34	quote.c	FUNCTION_13	WHILE_1	CALL_4
0x400029a	          0x4889ce	                            mov rsi, rcx	        34	quote.c	FUNCTION_13	WHILE_1	CALL_4
0x400029d	          0x4889c7	                            mov rdi, rax	        34	quote.c	FUNCTION_13	WHILE_1	CALL_4
0x40002a0	      0xe800000000	                          call 0x40002a5	        34	quote.c	FUNCTION_13	WHILE_1	CALL_4
0x40002a5	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	quote.c	FUNCTION_13	WHILE_1
0x40002a9	        0x480145e0	            add qword [rbp - 0x20], rax 	        35	quote.c	FUNCTION_13	WHILE_1
0x40002ad	            0xeb42	                           jmp 0x40002f1	        36	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_5
0x40002af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        37	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_6
0x40002b3	      0xbe00000000	                              mov esi, 0	        37	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_6
0x40002b8	          0x4889c7	                            mov rdi, rax	        37	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_6
0x40002bb	      0xe810ffffff	                  call sym.strbuf_addstr	        37	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_6
0x40002c0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        38	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_7
0x40002c4	        0x488d5001	                      lea rdx, [rax + 1]	        38	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_7
0x40002c8	        0x488955e0	             mov qword [rbp - 0x20], rdx	        38	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_7
0x40002cc	           0xfb600	                   movzx eax, byte [rax]	        38	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_7
0x40002cf	           0xfbed0	                           movsx edx, al	        38	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_7
0x40002d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        38	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_7
0x40002d6	            0x89d6	                            mov esi, edx	        38	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_7
0x40002d8	          0x4889c7	                            mov rdi, rax	        38	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_7
0x40002db	      0xe882feffff	                   call sym.strbuf_addch	        38	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_7
0x40002e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        39	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_8
0x40002e4	      0xbe27000000	                           mov esi, 0x27	        39	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_8
0x40002e9	          0x4889c7	                            mov rdi, rax	        39	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_8
0x40002ec	      0xe871feffff	                   call sym.strbuf_addch	        39	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_8
0x40002f1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        36	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_5
0x40002f5	           0xfb600	                   movzx eax, byte [rax]	        36	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_5
0x40002f8	           0xfbec0	                           movsx eax, al	        36	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_5
0x40002fb	            0x89c7	                            mov edi, eax	        36	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_5
0x40002fd	      0xe803ffffff	                  call sym.need_bs_quote	        36	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_5
0x4000302	            0x85c0	                           test eax, eax	        36	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_5
0x4000304	            0x75a9	                           jne 0x40002af	        36	quote.c	FUNCTION_13	WHILE_1	WHILE_2	CALL_5
0x4000306	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        32	quote.c	FUNCTION_13	WHILE_1
0x400030a	           0xfb600	                   movzx eax, byte [rax]	        32	quote.c	FUNCTION_13	WHILE_1
0x400030d	            0x84c0	                             test al, al	        32	quote.c	FUNCTION_13	WHILE_1
0x400030f	     0xf8564ffffff	                           jne 0x4000279	        32	quote.c	FUNCTION_13	WHILE_1
0x4000315	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        42	quote.c	FUNCTION_13	CALL_9
0x4000319	      0xbe27000000	                           mov esi, 0x27	        42	quote.c	FUNCTION_13	CALL_9
0x400031e	          0x4889c7	                            mov rdi, rax	        42	quote.c	FUNCTION_13	CALL_9
0x4000321	      0xe83cfeffff	                   call sym.strbuf_addch	        42	quote.c	FUNCTION_13	CALL_9
0x4000326	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        43	quote.c	FUNCTION_13	CALL_10
0x400032a	          0x4889c7	                            mov rdi, rax	        43	quote.c	FUNCTION_13	CALL_10
0x400032d	      0xe800000000	                          call 0x4000332	        43	quote.c	FUNCTION_13	CALL_10
0x4000332	              0x90	                                     nop	        44	quote.c	FUNCTION_13
0x4000333	              0xc9	                                   leave	        44	quote.c	FUNCTION_13
0x4000334	              0xc3	                                     ret	        44	quote.c	FUNCTION_13
need_bs_quote	DO,0:CALL,0:SWITCH,0:IF,0:FOR,0:ELSE,0:WHILE,0:functions,0	13
0x4000205	              0x55	                                push rbp	         8	quote.c	FUNCTION_12
0x4000206	          0x4889e5	                            mov rbp, rsp	         8	quote.c	FUNCTION_12
0x4000209	            0x89f8	                            mov eax, edi	         8	quote.c	FUNCTION_12
0x400020b	          0x8845fc	                  mov byte [rbp - 4], al	         8	quote.c	FUNCTION_12
0x400020e	        0x807dfc27	                cmp byte [rbp - 4], 0x27	         9	quote.c	FUNCTION_12
0x4000212	            0x7406	                            je 0x400021a	         9	quote.c	FUNCTION_12
0x4000214	        0x807dfc21	                cmp byte [rbp - 4], 0x21	         9	quote.c	FUNCTION_12
0x4000218	            0x7507	                           jne 0x4000221	         9	quote.c	FUNCTION_12
0x400021a	      0xb801000000	                              mov eax, 1	         9	quote.c	FUNCTION_12
0x400021f	            0xeb05	                           jmp 0x4000226	         9	quote.c	FUNCTION_12
0x4000221	      0xb800000000	                              mov eax, 0	         9	quote.c	FUNCTION_12
0x4000226	              0x5d	                                 pop rbp	        10	quote.c	FUNCTION_12
0x4000227	              0xc3	                                     ret	        10	quote.c	FUNCTION_12
strbuf_addstr	DO,0:CALL,2:SWITCH,0:IF,0:FOR,0:ELSE,0:WHILE,0:functions,0	17
0x40001d0	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_5
0x40001d1	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_5
0x40001d4	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_5
0x40001d8	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_5
0x40001dc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_5
0x40001e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001e4	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001e7	      0xe800000000	                          call 0x40001ec	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001ec	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001ef	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001f7	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001fa	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001fd	      0xe800000000	                          call 0x4000202	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000202	              0x90	                                     nop	       280	strbuf.h	FUNCTION_5
0x4000203	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_5
0x4000204	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_5
sq_dequote_to_argv	DO,0:CALL,1:SWITCH,0:IF,0:FOR,0:ELSE,0:WHILE,0:functions,0	16
0x40008fb	              0x55	                                push rbp	       175	quote.c	FUNCTION_21
0x40008fc	          0x4889e5	                            mov rbp, rsp	       175	quote.c	FUNCTION_21
0x40008ff	        0x4883ec20	                           sub rsp, 0x20	       175	quote.c	FUNCTION_21
0x4000903	        0x48897df8	                mov qword [rbp - 8], rdi	       175	quote.c	FUNCTION_21
0x4000907	        0x488975f0	             mov qword [rbp - 0x10], rsi	       175	quote.c	FUNCTION_21
0x400090b	        0x488955e8	             mov qword [rbp - 0x18], rdx	       175	quote.c	FUNCTION_21
0x400090f	        0x48894de0	             mov qword [rbp - 0x20], rcx	       175	quote.c	FUNCTION_21
0x4000913	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       176	quote.c	FUNCTION_21	CALL_1
0x4000917	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       176	quote.c	FUNCTION_21	CALL_1
0x400091b	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       176	quote.c	FUNCTION_21	CALL_1
0x400091f	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	quote.c	FUNCTION_21	CALL_1
0x4000923	    0x41b800000000	                              mov r8d, 0	       176	quote.c	FUNCTION_21	CALL_1
0x4000929	          0x4889c7	                            mov rdi, rax	       176	quote.c	FUNCTION_21	CALL_1
0x400092c	      0xe843feffff	    call sym.sq_dequote_to_argv_internal	       176	quote.c	FUNCTION_21	CALL_1
0x4000931	              0xc9	                                   leave	       177	quote.c	FUNCTION_21
0x4000932	              0xc3	                                     ret	       177	quote.c	FUNCTION_21
quote_c_style_counted	DO,0:CALL,1:SWITCH,0:IF,6:FOR,1:ELSE,1:WHILE,0:functions,0	223
0x4000a14	              0x55	                                push rbp	       238	quote.c	FUNCTION_25
0x4000a15	          0x4889e5	                            mov rbp, rsp	       238	quote.c	FUNCTION_25
0x4000a18	        0x4883ec50	                           sub rsp, 0x50	       238	quote.c	FUNCTION_25
0x4000a1c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       238	quote.c	FUNCTION_25
0x4000a20	        0x488975d0	             mov qword [rbp - 0x30], rsi	       238	quote.c	FUNCTION_25
0x4000a24	        0x488955c8	             mov qword [rbp - 0x38], rdx	       238	quote.c	FUNCTION_25
0x4000a28	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       238	quote.c	FUNCTION_25
0x4000a2c	        0x448945bc	             mov dword [rbp - 0x44], r8d	       238	quote.c	FUNCTION_25
0x4000a30	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       253	quote.c	FUNCTION_25
0x4000a38	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       254	quote.c	FUNCTION_25
0x4000a3c	        0x488945f0	             mov qword [rbp - 0x10], rax	       254	quote.c	FUNCTION_25
0x4000a40	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       259	quote.c	FUNCTION_25	FOR_1	CALL_1
0x4000a44	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       259	quote.c	FUNCTION_25	FOR_1	CALL_1
0x4000a48	          0x4889d6	                            mov rsi, rdx	       259	quote.c	FUNCTION_25	FOR_1	CALL_1
0x4000a4b	          0x4889c7	                            mov rdi, rax	       259	quote.c	FUNCTION_25	FOR_1	CALL_1
0x4000a4e	      0xe842ffffff	                 call sym.next_quote_pos	       259	quote.c	FUNCTION_25	FOR_1	CALL_1
0x4000a53	        0x488945f8	                mov qword [rbp - 8], rax	       259	quote.c	FUNCTION_25	FOR_1	CALL_1
0x4000a57	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       260	quote.c	FUNCTION_25	FOR_1	IF_1
0x4000a5b	        0x483945f8	                cmp qword [rbp - 8], rax	       260	quote.c	FUNCTION_25	FOR_1	IF_1
0x4000a5f	     0xf844a020000	                            je 0x4000caf	       260	quote.c	FUNCTION_25	FOR_1	IF_1
0x4000a65	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       260	quote.c	FUNCTION_25	FOR_1	IF_1
0x4000a6a	            0x7916	                           jns 0x4000a82	       260	quote.c	FUNCTION_25	FOR_1	IF_1
0x4000a6c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       260	quote.c	FUNCTION_25	FOR_1	IF_1
0x4000a70	        0x488b45f8	                mov rax, qword [rbp - 8]	       260	quote.c	FUNCTION_25	FOR_1	IF_1
0x4000a74	          0x4801d0	                            add rax, rdx	       260	quote.c	FUNCTION_25	FOR_1	IF_1
0x4000a77	           0xfb600	                   movzx eax, byte [rax]	       260	quote.c	FUNCTION_25	FOR_1	IF_1
0x4000a7a	            0x84c0	                             test al, al	       260	quote.c	FUNCTION_25	FOR_1	IF_1
0x4000a7c	     0xf842d020000	                            je 0x4000caf	       260	quote.c	FUNCTION_25	FOR_1	IF_1
0x4000a82	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       263	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000a86	            0x753f	                           jne 0x4000ac7	       263	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000a88	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       263	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000a8c	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       263	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000a90	            0x7535	                           jne 0x4000ac7	       263	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000a92	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       264	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000a97	            0x7411	                            je 0x4000aaa	       264	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000a99	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       264	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000a9d	      0xbe22000000	                           mov esi, 0x22	       264	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000aa2	          0x4889c7	                            mov rdi, rax	       264	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000aa5	      0xe8b8f6ffff	                   call sym.strbuf_addch	       264	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000aaa	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       264	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000aaf	            0x7411	                            je 0x4000ac2	       264	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000ab1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       264	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000ab5	          0x4889c6	                            mov rsi, rax	       264	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000ab8	      0xbf22000000	                           mov edi, 0x22	       264	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000abd	      0xe800000000	                          call 0x4000ac2	       264	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000ac2	      0x488345e801	               add qword [rbp - 0x18], 1	       264	quote.c	FUNCTION_25	FOR_1	IF_2
0x4000ac7	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       266	quote.c	FUNCTION_25	FOR_1
0x4000acc	            0x7417	                            je 0x4000ae5	       266	quote.c	FUNCTION_25	FOR_1
0x4000ace	        0x488b55f8	                mov rdx, qword [rbp - 8]	       266	quote.c	FUNCTION_25	FOR_1
0x4000ad2	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       266	quote.c	FUNCTION_25	FOR_1
0x4000ad6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       266	quote.c	FUNCTION_25	FOR_1
0x4000ada	          0x4889ce	                            mov rsi, rcx	       266	quote.c	FUNCTION_25	FOR_1
0x4000add	          0x4889c7	                            mov rdi, rax	       266	quote.c	FUNCTION_25	FOR_1
0x4000ae0	      0xe800000000	                          call 0x4000ae5	       266	quote.c	FUNCTION_25	FOR_1
0x4000ae5	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       266	quote.c	FUNCTION_25	FOR_1
0x4000aea	            0x741c	                            je 0x4000b08	       266	quote.c	FUNCTION_25	FOR_1
0x4000aec	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       266	quote.c	FUNCTION_25	FOR_1
0x4000af0	        0x488b75f8	                mov rsi, qword [rbp - 8]	       266	quote.c	FUNCTION_25	FOR_1
0x4000af4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       266	quote.c	FUNCTION_25	FOR_1
0x4000af8	          0x4889d1	                            mov rcx, rdx	       266	quote.c	FUNCTION_25	FOR_1
0x4000afb	      0xba01000000	                              mov edx, 1	       266	quote.c	FUNCTION_25	FOR_1
0x4000b00	          0x4889c7	                            mov rdi, rax	       266	quote.c	FUNCTION_25	FOR_1
0x4000b03	      0xe800000000	                          call 0x4000b08	       266	quote.c	FUNCTION_25	FOR_1
0x4000b08	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	quote.c	FUNCTION_25	FOR_1
0x4000b0c	        0x480145e8	            add qword [rbp - 0x18], rax 	       266	quote.c	FUNCTION_25	FOR_1
0x4000b10	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       267	quote.c	FUNCTION_25	FOR_1
0x4000b15	            0x7411	                            je 0x4000b28	       267	quote.c	FUNCTION_25	FOR_1
0x4000b17	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       267	quote.c	FUNCTION_25	FOR_1
0x4000b1b	      0xbe5c000000	                           mov esi, 0x5c	       267	quote.c	FUNCTION_25	FOR_1
0x4000b20	          0x4889c7	                            mov rdi, rax	       267	quote.c	FUNCTION_25	FOR_1
0x4000b23	      0xe83af6ffff	                   call sym.strbuf_addch	       267	quote.c	FUNCTION_25	FOR_1
0x4000b28	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       267	quote.c	FUNCTION_25	FOR_1
0x4000b2d	            0x7411	                            je 0x4000b40	       267	quote.c	FUNCTION_25	FOR_1
0x4000b2f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       267	quote.c	FUNCTION_25	FOR_1
0x4000b33	          0x4889c6	                            mov rsi, rax	       267	quote.c	FUNCTION_25	FOR_1
0x4000b36	      0xbf5c000000	                           mov edi, 0x5c	       267	quote.c	FUNCTION_25	FOR_1
0x4000b3b	      0xe800000000	                          call 0x4000b40	       267	quote.c	FUNCTION_25	FOR_1
0x4000b40	      0x488345e801	               add qword [rbp - 0x18], 1	       267	quote.c	FUNCTION_25	FOR_1
0x4000b45	        0x488b45f8	                mov rax, qword [rbp - 8]	       268	quote.c	FUNCTION_25	FOR_1
0x4000b49	        0x480145f0	            add qword [rbp - 0x10], rax 	       268	quote.c	FUNCTION_25	FOR_1
0x4000b4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       269	quote.c	FUNCTION_25	FOR_1
0x4000b51	        0x488d5001	                      lea rdx, [rax + 1]	       269	quote.c	FUNCTION_25	FOR_1
0x4000b55	        0x488955f0	             mov qword [rbp - 0x10], rdx	       269	quote.c	FUNCTION_25	FOR_1
0x4000b59	           0xfb600	                   movzx eax, byte [rax]	       269	quote.c	FUNCTION_25	FOR_1
0x4000b5c	           0xfb6c0	                           movzx eax, al	       269	quote.c	FUNCTION_25	FOR_1
0x4000b5f	          0x8945e4	             mov dword [rbp - 0x1c], eax	       269	quote.c	FUNCTION_25	FOR_1
0x4000b62	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       270	quote.c	FUNCTION_25	FOR_1	IF_3
0x4000b67	            0x7810	                            js 0x4000b79	       270	quote.c	FUNCTION_25	FOR_1	IF_3
0x4000b69	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       271	quote.c	FUNCTION_25	FOR_1	IF_3
0x4000b6d	        0x482b45f8	                sub rax, qword [rbp - 8]	       271	quote.c	FUNCTION_25	FOR_1	IF_3
0x4000b71	        0x4883e801	                              sub rax, 1	       271	quote.c	FUNCTION_25	FOR_1	IF_3
0x4000b75	        0x488945d0	             mov qword [rbp - 0x30], rax	       271	quote.c	FUNCTION_25	FOR_1	IF_3
0x4000b79	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       272	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000b7c	            0x4898	                                    cdqe	       272	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000b7e	     0xfb680000000	                   movzx eax, byte [rax]	       272	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000b85	            0x3c1f	                            cmp al, 0x1f	       272	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000b87	            0x7e52	                           jle 0x4000bdb	       272	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000b89	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000b8e	            0x741d	                            je 0x4000bad	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000b90	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000b93	            0x4898	                                    cdqe	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000b95	     0xfb680000000	                   movzx eax, byte [rax]	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000b9c	           0xfbed0	                           movsx edx, al	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000b9f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000ba3	            0x89d6	                            mov esi, edx	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000ba5	          0x4889c7	                            mov rdi, rax	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000ba8	      0xe8b5f5ffff	                   call sym.strbuf_addch	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000bad	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000bb2	            0x741d	                            je 0x4000bd1	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000bb4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000bb7	            0x4898	                                    cdqe	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000bb9	     0xfb680000000	                   movzx eax, byte [rax]	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000bc0	           0xfbec0	                           movsx eax, al	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000bc3	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000bc7	          0x4889d6	                            mov rsi, rdx	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000bca	            0x89c7	                            mov edi, eax	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000bcc	      0xe800000000	                          call 0x4000bd1	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000bd1	      0x488345e801	               add qword [rbp - 0x18], 1	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000bd6	      0xe965feffff	                           jmp 0x4000a40	       273	quote.c	FUNCTION_25	FOR_1	IF_4
0x4000bdb	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000be0	            0x741a	                            je 0x4000bfc	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000be2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000be5	          0xc1f806	                              sar eax, 6	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000be8	          0x83e003	                              and eax, 3	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000beb	          0x8d5030	                   lea edx, [rax + 0x30]	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000bee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000bf2	            0x89d6	                            mov esi, edx	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000bf4	          0x4889c7	                            mov rdi, rax	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000bf7	      0xe866f5ffff	                   call sym.strbuf_addch	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000bfc	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c01	            0x741a	                            je 0x4000c1d	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c03	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c06	          0xc1f806	                              sar eax, 6	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c09	          0x83e003	                              and eax, 3	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c0c	          0x8d5030	                   lea edx, [rax + 0x30]	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c0f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c13	          0x4889c6	                            mov rsi, rax	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c16	            0x89d7	                            mov edi, edx	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c18	      0xe800000000	                          call 0x4000c1d	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c1d	      0x488345e801	               add qword [rbp - 0x18], 1	       275	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c22	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c27	            0x741a	                            je 0x4000c43	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c29	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c2c	          0xc1f803	                              sar eax, 3	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c2f	          0x83e007	                              and eax, 7	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c32	          0x8d5030	                   lea edx, [rax + 0x30]	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c35	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c39	            0x89d6	                            mov esi, edx	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c3b	          0x4889c7	                            mov rdi, rax	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c3e	      0xe81ff5ffff	                   call sym.strbuf_addch	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c43	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c48	            0x741a	                            je 0x4000c64	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c4a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c4d	          0xc1f803	                              sar eax, 3	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c50	          0x83e007	                              and eax, 7	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c53	          0x8d5030	                   lea edx, [rax + 0x30]	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c56	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c5a	          0x4889c6	                            mov rsi, rax	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c5d	            0x89d7	                            mov edi, edx	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c5f	      0xe800000000	                          call 0x4000c64	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c64	      0x488345e801	               add qword [rbp - 0x18], 1	       276	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c69	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c6e	            0x7417	                            je 0x4000c87	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c70	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c73	          0x83e007	                              and eax, 7	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c76	          0x8d5030	                   lea edx, [rax + 0x30]	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c79	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c7d	            0x89d6	                            mov esi, edx	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c7f	          0x4889c7	                            mov rdi, rax	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c82	      0xe8dbf4ffff	                   call sym.strbuf_addch	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c87	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c8c	            0x7417	                            je 0x4000ca5	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c8e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c91	          0x83e007	                              and eax, 7	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c94	          0x8d5030	                   lea edx, [rax + 0x30]	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c97	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c9b	          0x4889c6	                            mov rsi, rax	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000c9e	            0x89d7	                            mov edi, edx	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000ca0	      0xe800000000	                          call 0x4000ca5	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000ca5	      0x488345e801	               add qword [rbp - 0x18], 1	       277	quote.c	FUNCTION_25	FOR_1	ELSE_1
0x4000caa	      0xe991fdffff	                           jmp 0x4000a40	       279	quote.c	FUNCTION_25	FOR_1
0x4000caf	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       281	quote.c	FUNCTION_25
0x4000cb4	            0x7417	                            je 0x4000ccd	       281	quote.c	FUNCTION_25
0x4000cb6	        0x488b55f8	                mov rdx, qword [rbp - 8]	       281	quote.c	FUNCTION_25
0x4000cba	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       281	quote.c	FUNCTION_25
0x4000cbe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       281	quote.c	FUNCTION_25
0x4000cc2	          0x4889ce	                            mov rsi, rcx	       281	quote.c	FUNCTION_25
0x4000cc5	          0x4889c7	                            mov rdi, rax	       281	quote.c	FUNCTION_25
0x4000cc8	      0xe800000000	                          call 0x4000ccd	       281	quote.c	FUNCTION_25
0x4000ccd	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       281	quote.c	FUNCTION_25
0x4000cd2	            0x741c	                            je 0x4000cf0	       281	quote.c	FUNCTION_25
0x4000cd4	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       281	quote.c	FUNCTION_25
0x4000cd8	        0x488b75f8	                mov rsi, qword [rbp - 8]	       281	quote.c	FUNCTION_25
0x4000cdc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       281	quote.c	FUNCTION_25
0x4000ce0	          0x4889d1	                            mov rcx, rdx	       281	quote.c	FUNCTION_25
0x4000ce3	      0xba01000000	                              mov edx, 1	       281	quote.c	FUNCTION_25
0x4000ce8	          0x4889c7	                            mov rdi, rax	       281	quote.c	FUNCTION_25
0x4000ceb	      0xe800000000	                          call 0x4000cf0	       281	quote.c	FUNCTION_25
0x4000cf0	        0x488b45f8	                mov rax, qword [rbp - 8]	       281	quote.c	FUNCTION_25
0x4000cf4	        0x480145e8	            add qword [rbp - 0x18], rax 	       281	quote.c	FUNCTION_25
0x4000cf8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       282	quote.c	FUNCTION_25	IF_5
0x4000cfc	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       282	quote.c	FUNCTION_25	IF_5
0x4000d00	            0x7507	                           jne 0x4000d09	       282	quote.c	FUNCTION_25	IF_5
0x4000d02	      0xb800000000	                              mov eax, 0	       283	quote.c	FUNCTION_25	IF_5
0x4000d07	            0xeb3f	                           jmp 0x4000d48	       283	quote.c	FUNCTION_25	IF_5
0x4000d09	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       285	quote.c	FUNCTION_25	IF_6
0x4000d0d	            0x7535	                           jne 0x4000d44	       285	quote.c	FUNCTION_25	IF_6
0x4000d0f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       286	quote.c	FUNCTION_25	IF_6
0x4000d14	            0x7411	                            je 0x4000d27	       286	quote.c	FUNCTION_25	IF_6
0x4000d16	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       286	quote.c	FUNCTION_25	IF_6
0x4000d1a	      0xbe22000000	                           mov esi, 0x22	       286	quote.c	FUNCTION_25	IF_6
0x4000d1f	          0x4889c7	                            mov rdi, rax	       286	quote.c	FUNCTION_25	IF_6
0x4000d22	      0xe83bf4ffff	                   call sym.strbuf_addch	       286	quote.c	FUNCTION_25	IF_6
0x4000d27	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       286	quote.c	FUNCTION_25	IF_6
0x4000d2c	            0x7411	                            je 0x4000d3f	       286	quote.c	FUNCTION_25	IF_6
0x4000d2e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       286	quote.c	FUNCTION_25	IF_6
0x4000d32	          0x4889c6	                            mov rsi, rax	       286	quote.c	FUNCTION_25	IF_6
0x4000d35	      0xbf22000000	                           mov edi, 0x22	       286	quote.c	FUNCTION_25	IF_6
0x4000d3a	      0xe800000000	                          call 0x4000d3f	       286	quote.c	FUNCTION_25	IF_6
0x4000d3f	      0x488345e801	               add qword [rbp - 0x18], 1	       286	quote.c	FUNCTION_25	IF_6
0x4000d44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       287	quote.c	FUNCTION_25
0x4000d48	              0xc9	                                   leave	       288	quote.c	FUNCTION_25
0x4000d49	              0xc3	                                     ret	       288	quote.c	FUNCTION_25
sq_dequote_to_argv_array	DO,0:CALL,1:SWITCH,0:IF,0:FOR,0:ELSE,0:WHILE,0:functions,0	15
0x4000933	              0x55	                                push rbp	       180	quote.c	FUNCTION_22
0x4000934	          0x4889e5	                            mov rbp, rsp	       180	quote.c	FUNCTION_22
0x4000937	        0x4883ec10	                           sub rsp, 0x10	       180	quote.c	FUNCTION_22
0x400093b	        0x48897df8	                mov qword [rbp - 8], rdi	       180	quote.c	FUNCTION_22
0x400093f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       180	quote.c	FUNCTION_22
0x4000943	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       181	quote.c	FUNCTION_22	CALL_1
0x4000947	        0x488b45f8	                mov rax, qword [rbp - 8]	       181	quote.c	FUNCTION_22	CALL_1
0x400094b	          0x4989d0	                             mov r8, rdx	       181	quote.c	FUNCTION_22	CALL_1
0x400094e	      0xb900000000	                              mov ecx, 0	       181	quote.c	FUNCTION_22	CALL_1
0x4000953	      0xba00000000	                              mov edx, 0	       181	quote.c	FUNCTION_22	CALL_1
0x4000958	      0xbe00000000	                              mov esi, 0	       181	quote.c	FUNCTION_22	CALL_1
0x400095d	          0x4889c7	                            mov rdi, rax	       181	quote.c	FUNCTION_22	CALL_1
0x4000960	      0xe80ffeffff	    call sym.sq_dequote_to_argv_internal	       181	quote.c	FUNCTION_22	CALL_1
0x4000965	              0xc9	                                   leave	       182	quote.c	FUNCTION_22
0x4000966	              0xc3	                                     ret	       182	quote.c	FUNCTION_22
sq_quotef	DO,0:CALL,5:SWITCH,0:IF,0:FOR,0:ELSE,0:WHILE,0:functions,0	52
0x40003de	              0x55	                                push rbp	        63	quote.c	FUNCTION_15
0x40003df	          0x4889e5	                            mov rbp, rsp	        63	quote.c	FUNCTION_15
0x40003e2	    0x4881ec000100	                          sub rsp, 0x100	        63	quote.c	FUNCTION_15
0x40003e9	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	        63	quote.c	FUNCTION_15
0x40003f0	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	        63	quote.c	FUNCTION_15
0x40003f7	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	        63	quote.c	FUNCTION_15
0x40003fe	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	        63	quote.c	FUNCTION_15
0x4000405	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	        63	quote.c	FUNCTION_15
0x400040c	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	        63	quote.c	FUNCTION_15
0x4000413	            0x84c0	                             test al, al	        63	quote.c	FUNCTION_15
0x4000415	            0x7420	                            je 0x4000437	        63	quote.c	FUNCTION_15
0x4000417	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	        63	quote.c	FUNCTION_15
0x400041b	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	        63	quote.c	FUNCTION_15
0x400041f	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	        63	quote.c	FUNCTION_15
0x4000423	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	        63	quote.c	FUNCTION_15
0x4000427	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	        63	quote.c	FUNCTION_15
0x400042b	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	        63	quote.c	FUNCTION_15
0x400042f	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	        63	quote.c	FUNCTION_15
0x4000433	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	        63	quote.c	FUNCTION_15
0x4000437	    0x64488b042528	                mov rax, qword fs:[0x28]	        63	quote.c	FUNCTION_15
0x4000440	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        63	quote.c	FUNCTION_15
0x4000447	            0x31c0	                            xor eax, eax	        63	quote.c	FUNCTION_15
0x4000449	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	        64	quote.c	FUNCTION_15
0x4000454	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	        64	quote.c	FUNCTION_15
0x400045f	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	        64	quote.c	FUNCTION_15
0x400046a	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	        67	quote.c	FUNCTION_15	CALL_1
0x4000474	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	        67	quote.c	FUNCTION_15	CALL_1
0x400047e	        0x488d4510	                   lea rax, [rbp + 0x10]	        67	quote.c	FUNCTION_15	CALL_1
0x4000482	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        67	quote.c	FUNCTION_15	CALL_1
0x4000489	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        67	quote.c	FUNCTION_15	CALL_1
0x4000490	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        67	quote.c	FUNCTION_15	CALL_1
0x4000497	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	        68	quote.c	FUNCTION_15	CALL_2
0x400049e	    0x488b8d00ffff	            mov rcx, qword [rbp - 0x100]	        68	quote.c	FUNCTION_15	CALL_2
0x40004a5	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	        68	quote.c	FUNCTION_15	CALL_2
0x40004ac	          0x4889ce	                            mov rsi, rcx	        68	quote.c	FUNCTION_15	CALL_2
0x40004af	          0x4889c7	                            mov rdi, rax	        68	quote.c	FUNCTION_15	CALL_2
0x40004b2	      0xe800000000	                          call 0x40004b7	        68	quote.c	FUNCTION_15	CALL_2
0x40004b7	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	        71	quote.c	FUNCTION_15	CALL_4
0x40004be	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	        71	quote.c	FUNCTION_15	CALL_4
0x40004c5	          0x4889d6	                            mov rsi, rdx	        71	quote.c	FUNCTION_15	CALL_4
0x40004c8	          0x4889c7	                            mov rdi, rax	        71	quote.c	FUNCTION_15	CALL_4
0x40004cb	      0xe800000000	                          call 0x40004d0	        71	quote.c	FUNCTION_15	CALL_4
0x40004d0	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	        72	quote.c	FUNCTION_15	CALL_5
0x40004d7	          0x4889c7	                            mov rdi, rax	        72	quote.c	FUNCTION_15	CALL_5
0x40004da	      0xe800000000	                          call 0x40004df	        72	quote.c	FUNCTION_15	CALL_5
0x40004df	              0x90	                                     nop	        73	quote.c	FUNCTION_15
0x40004e0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        73	quote.c	FUNCTION_15
0x40004e7	    0x644833042528	                xor rax, qword fs:[0x28]	        73	quote.c	FUNCTION_15
0x40004f0	            0x7405	                            je 0x40004f7	        73	quote.c	FUNCTION_15
0x40004f2	      0xe800000000	                          call 0x40004f7	        73	quote.c	FUNCTION_15
0x40004f7	              0xc9	                                   leave	        73	quote.c	FUNCTION_15
0x40004f8	              0xc3	                                     ret	        73	quote.c	FUNCTION_15
sq_quote_buf_pretty	DO,0:CALL,3:SWITCH,0:IF,1:FOR,1:ELSE,0:WHILE,0:functions,0	52
0x4000335	              0x55	                                push rbp	        47	quote.c	FUNCTION_14
0x4000336	          0x4889e5	                            mov rbp, rsp	        47	quote.c	FUNCTION_14
0x4000339	        0x4883ec20	                           sub rsp, 0x20	        47	quote.c	FUNCTION_14
0x400033d	        0x48897de8	             mov qword [rbp - 0x18], rdi	        47	quote.c	FUNCTION_14
0x4000341	        0x488975e0	             mov qword [rbp - 0x20], rsi	        47	quote.c	FUNCTION_14
0x4000345	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        51	quote.c	FUNCTION_14	FOR_1
0x4000349	        0x488945f8	                mov qword [rbp - 8], rax	        51	quote.c	FUNCTION_14	FOR_1
0x400034d	            0xeb6f	                           jmp 0x40003be	        51	quote.c	FUNCTION_14	FOR_1
0x400034f	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000353	           0xfb600	                   movzx eax, byte [rax]	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000356	           0xfb6c0	                           movzx eax, al	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000359	            0x4898	                                    cdqe	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x400035b	     0xfb680000000	                   movzx eax, byte [rax]	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000362	           0xfb6c0	                           movzx eax, al	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000365	          0x83e004	                              and eax, 4	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000368	            0x85c0	                           test eax, eax	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x400036a	            0x754d	                           jne 0x40003b9	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x400036c	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000370	           0xfb600	                   movzx eax, byte [rax]	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000373	           0xfb6c0	                           movzx eax, al	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000376	            0x4898	                                    cdqe	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000378	     0xfb680000000	                   movzx eax, byte [rax]	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x400037f	           0xfb6c0	                           movzx eax, al	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000382	          0x83e002	                              and eax, 2	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000385	            0x85c0	                           test eax, eax	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000387	            0x7530	                           jne 0x40003b9	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000389	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x400038d	           0xfb600	                   movzx eax, byte [rax]	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000390	           0xfbec0	                           movsx eax, al	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000393	            0x89c6	                            mov esi, eax	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x4000395	      0xbf00000000	                              mov edi, 0	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x400039a	      0xe800000000	                          call 0x400039f	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x400039f	          0x4885c0	                           test rax, rax	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x40003a2	            0x7515	                           jne 0x40003b9	        52	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_1
0x40003a4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        53	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_2
0x40003a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_2
0x40003ac	          0x4889d6	                            mov rsi, rdx	        53	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_2
0x40003af	          0x4889c7	                            mov rdi, rax	        53	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_2
0x40003b2	      0xe800000000	                          call 0x40003b7	        53	quote.c	FUNCTION_14	FOR_1	IF_1	CALL_2
0x40003b7	            0xeb23	                           jmp 0x40003dc	        54	quote.c	FUNCTION_14	FOR_1	IF_1
0x40003b9	      0x488345f801	                  add qword [rbp - 8], 1	        51	quote.c	FUNCTION_14	FOR_1
0x40003be	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	quote.c	FUNCTION_14	FOR_1
0x40003c2	           0xfb600	                   movzx eax, byte [rax]	        51	quote.c	FUNCTION_14	FOR_1
0x40003c5	            0x84c0	                             test al, al	        51	quote.c	FUNCTION_14	FOR_1
0x40003c7	            0x7586	                           jne 0x400034f	        51	quote.c	FUNCTION_14	FOR_1
0x40003c9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        59	quote.c	FUNCTION_14	CALL_3
0x40003cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        59	quote.c	FUNCTION_14	CALL_3
0x40003d1	          0x4889d6	                            mov rsi, rdx	        59	quote.c	FUNCTION_14	CALL_3
0x40003d4	          0x4889c7	                            mov rdi, rax	        59	quote.c	FUNCTION_14	CALL_3
0x40003d7	      0xe8f4fdffff	                  call sym.strbuf_addstr	        59	quote.c	FUNCTION_14	CALL_3
0x40003dc	              0xc9	                                   leave	        60	quote.c	FUNCTION_14
0x40003dd	              0xc3	                                     ret	        60	quote.c	FUNCTION_14
sq_quote_argv	DO,0:CALL,3:SWITCH,0:IF,0:FOR,1:ELSE,0:WHILE,0:functions,0	37
0x40004f9	              0x55	                                push rbp	        76	quote.c	FUNCTION_16
0x40004fa	          0x4889e5	                            mov rbp, rsp	        76	quote.c	FUNCTION_16
0x40004fd	        0x4883ec20	                           sub rsp, 0x20	        76	quote.c	FUNCTION_16
0x4000501	        0x48897de8	             mov qword [rbp - 0x18], rdi	        76	quote.c	FUNCTION_16
0x4000505	        0x488975e0	             mov qword [rbp - 0x20], rsi	        76	quote.c	FUNCTION_16
0x4000509	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        80	quote.c	FUNCTION_16	CALL_1
0x400050d	      0xbeff000000	                           mov esi, 0xff	        80	quote.c	FUNCTION_16	CALL_1
0x4000512	          0x4889c7	                            mov rdi, rax	        80	quote.c	FUNCTION_16	CALL_1
0x4000515	      0xe800000000	                          call 0x400051a	        80	quote.c	FUNCTION_16	CALL_1
0x400051a	    0xc745fc000000	                  mov dword [rbp - 4], 0	        81	quote.c	FUNCTION_16	FOR_1
0x4000521	            0xeb3b	                           jmp 0x400055e	        81	quote.c	FUNCTION_16	FOR_1
0x4000523	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        82	quote.c	FUNCTION_16	FOR_1	CALL_2
0x4000527	      0xbe20000000	                           mov esi, 0x20	        82	quote.c	FUNCTION_16	FOR_1	CALL_2
0x400052c	          0x4889c7	                            mov rdi, rax	        82	quote.c	FUNCTION_16	FOR_1	CALL_2
0x400052f	      0xe82efcffff	                   call sym.strbuf_addch	        82	quote.c	FUNCTION_16	FOR_1	CALL_2
0x4000534	          0x8b45fc	                mov eax, dword [rbp - 4]	        83	quote.c	FUNCTION_16	FOR_1	CALL_3
0x4000537	            0x4898	                                    cdqe	        83	quote.c	FUNCTION_16	FOR_1	CALL_3
0x4000539	    0x488d14c50000	                        lea rdx, [rax*8]	        83	quote.c	FUNCTION_16	FOR_1	CALL_3
0x4000541	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        83	quote.c	FUNCTION_16	FOR_1	CALL_3
0x4000545	          0x4801d0	                            add rax, rdx	        83	quote.c	FUNCTION_16	FOR_1	CALL_3
0x4000548	          0x488b10	                    mov rdx, qword [rax]	        83	quote.c	FUNCTION_16	FOR_1	CALL_3
0x400054b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        83	quote.c	FUNCTION_16	FOR_1	CALL_3
0x400054f	          0x4889d6	                            mov rsi, rdx	        83	quote.c	FUNCTION_16	FOR_1	CALL_3
0x4000552	          0x4889c7	                            mov rdi, rax	        83	quote.c	FUNCTION_16	FOR_1	CALL_3
0x4000555	      0xe800000000	                          call 0x400055a	        83	quote.c	FUNCTION_16	FOR_1	CALL_3
0x400055a	        0x8345fc01	                  add dword [rbp - 4], 1	        81	quote.c	FUNCTION_16	FOR_1
0x400055e	          0x8b45fc	                mov eax, dword [rbp - 4]	        81	quote.c	FUNCTION_16	FOR_1
0x4000561	            0x4898	                                    cdqe	        81	quote.c	FUNCTION_16	FOR_1
0x4000563	    0x488d14c50000	                        lea rdx, [rax*8]	        81	quote.c	FUNCTION_16	FOR_1
0x400056b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        81	quote.c	FUNCTION_16	FOR_1
0x400056f	          0x4801d0	                            add rax, rdx	        81	quote.c	FUNCTION_16	FOR_1
0x4000572	          0x488b00	                    mov rax, qword [rax]	        81	quote.c	FUNCTION_16	FOR_1
0x4000575	          0x4885c0	                           test rax, rax	        81	quote.c	FUNCTION_16	FOR_1
0x4000578	            0x75a9	                           jne 0x4000523	        81	quote.c	FUNCTION_16	FOR_1
0x400057a	              0x90	                                     nop	        85	quote.c	FUNCTION_16
0x400057b	              0xc9	                                   leave	        85	quote.c	FUNCTION_16
0x400057c	              0xc3	                                     ret	        85	quote.c	FUNCTION_16
strbuf_setlen	DO,0:CALL,2:SWITCH,0:IF,2:FOR,0:ELSE,1:WHILE,0:functions,0	43
0x40000c8	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_3
0x40000c9	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_3
0x40000cc	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_3
0x40000d0	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_3
0x40000d4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_3
0x40000d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000dc	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000df	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_3	IF_1
0x40000e2	            0x740d	                            je 0x40000f1	       162	strbuf.h	FUNCTION_3	IF_1
0x40000e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000e8	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000eb	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_3	IF_1
0x40000ef	            0xeb05	                           jmp 0x40000f6	       162	strbuf.h	FUNCTION_3	IF_1
0x40000f1	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_3	IF_1
0x40000f6	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000fa	            0x730f	                           jae 0x400010b	       162	strbuf.h	FUNCTION_3	IF_1
0x40000fc	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x4000101	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x4000106	      0xe800000000	                          call 0x400010b	       163	strbuf.h	FUNCTION_3	CALL_1
0x400010b	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_3
0x400010f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_3
0x4000113	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_3
0x4000117	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_3	IF_2
0x400011b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_3	IF_2
0x400011f	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_3	IF_2
0x4000125	            0x7414	                            je 0x400013b	       165	strbuf.h	FUNCTION_3	IF_2
0x4000127	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_3	IF_2
0x400012b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_3	IF_2
0x400012f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_3	IF_2
0x4000133	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_3	IF_2
0x4000136	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_3	IF_2
0x4000139	            0xeb24	                           jmp 0x400015f	       169	strbuf.h	FUNCTION_3
0x400013b	     0xfb605000000	           movzx eax, byte [0x04000142] 	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000142	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000144	            0x7419	                            je 0x400015f	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000146	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x400014b	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000150	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000155	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x400015a	      0xe800000000	                          call 0x400015f	       168	strbuf.h	FUNCTION_3	CALL_2
0x400015f	              0x90	                                     nop	       169	strbuf.h	FUNCTION_3
0x4000160	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_3
0x4000161	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_3
st_mult	DO,0:CALL,1:SWITCH,0:IF,1:FOR,0:ELSE,0:WHILE,0:functions,0	22
0x4000040	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_50
0x4000041	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_50
0x4000044	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_50
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_50
0x400004c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_50
0x4000050	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_50	IF_1
0x4000055	            0x7430	                            je 0x4000087	       795	git-compat-util.h	FUNCTION_50	IF_1
0x4000057	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_50	IF_1
0x400005e	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_50	IF_1
0x4000063	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_50	IF_1
0x4000067	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_50	IF_1
0x400006b	            0x731a	                           jae 0x4000087	       795	git-compat-util.h	FUNCTION_50	IF_1
0x400006d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x4000071	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x4000075	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x4000078	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x400007d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x4000082	      0xe800000000	                          call 0x4000087	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x4000087	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_50
0x400008b	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_50
0x4000090	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_50
0x4000091	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_50
sq_dequote	DO,0:CALL,1:SWITCH,0:IF,0:FOR,0:ELSE,0:WHILE,0:functions,0	10
0x4000755	              0x55	                                push rbp	       147	quote.c	FUNCTION_19
0x4000756	          0x4889e5	                            mov rbp, rsp	       147	quote.c	FUNCTION_19
0x4000759	        0x4883ec08	                              sub rsp, 8	       147	quote.c	FUNCTION_19
0x400075d	        0x48897df8	                mov qword [rbp - 8], rdi	       147	quote.c	FUNCTION_19
0x4000761	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	quote.c	FUNCTION_19	CALL_1
0x4000765	      0xbe00000000	                              mov esi, 0	       148	quote.c	FUNCTION_19	CALL_1
0x400076a	          0x4889c7	                            mov rdi, rax	       148	quote.c	FUNCTION_19	CALL_1
0x400076d	      0xe87efeffff	                call sym.sq_dequote_step	       148	quote.c	FUNCTION_19	CALL_1
0x4000772	              0xc9	                                   leave	       149	quote.c	FUNCTION_19
0x4000773	              0xc3	                                     ret	       149	quote.c	FUNCTION_19
quote_two_c_style	DO,0:CALL,8:SWITCH,0:IF,3:FOR,0:ELSE,1:WHILE,0:functions,0	61
0x4000d84	              0x55	                                push rbp	       296	quote.c	FUNCTION_27
0x4000d85	          0x4889e5	                            mov rbp, rsp	       296	quote.c	FUNCTION_27
0x4000d88	        0x4883ec20	                           sub rsp, 0x20	       296	quote.c	FUNCTION_27
0x4000d8c	        0x48897df8	                mov qword [rbp - 8], rdi	       296	quote.c	FUNCTION_27
0x4000d90	        0x488975f0	             mov qword [rbp - 0x10], rsi	       296	quote.c	FUNCTION_27
0x4000d94	        0x488955e8	             mov qword [rbp - 0x18], rdx	       296	quote.c	FUNCTION_27
0x4000d98	          0x894de4	             mov dword [rbp - 0x1c], ecx	       296	quote.c	FUNCTION_27
0x4000d9b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       297	quote.c	FUNCTION_27	IF_1	CALL_1
0x4000d9f	      0xb900000000	                              mov ecx, 0	       297	quote.c	FUNCTION_27	IF_1	CALL_1
0x4000da4	      0xba00000000	                              mov edx, 0	       297	quote.c	FUNCTION_27	IF_1	CALL_1
0x4000da9	      0xbe00000000	                              mov esi, 0	       297	quote.c	FUNCTION_27	IF_1	CALL_1
0x4000dae	          0x4889c7	                            mov rdi, rax	       297	quote.c	FUNCTION_27	IF_1	CALL_1
0x4000db1	      0xe800000000	                          call 0x4000db6	       297	quote.c	FUNCTION_27	IF_1	CALL_1
0x4000db6	          0x4885c0	                           test rax, rax	       297	quote.c	FUNCTION_27	IF_1	CALL_1
0x4000db9	            0x7520	                           jne 0x4000ddb	       297	quote.c	FUNCTION_27	IF_1	CALL_1
0x4000dbb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       298	quote.c	FUNCTION_27	IF_1	CALL_2
0x4000dbf	      0xb900000000	                              mov ecx, 0	       298	quote.c	FUNCTION_27	IF_1	CALL_2
0x4000dc4	      0xba00000000	                              mov edx, 0	       298	quote.c	FUNCTION_27	IF_1	CALL_2
0x4000dc9	      0xbe00000000	                              mov esi, 0	       298	quote.c	FUNCTION_27	IF_1	CALL_2
0x4000dce	          0x4889c7	                            mov rdi, rax	       298	quote.c	FUNCTION_27	IF_1	CALL_2
0x4000dd1	      0xe800000000	                          call 0x4000dd6	       298	quote.c	FUNCTION_27	IF_1	CALL_2
0x4000dd6	          0x4885c0	                           test rax, rax	       297	quote.c	FUNCTION_27	IF_1	CALL_1
0x4000dd9	            0x7464	                            je 0x4000e3f	       297	quote.c	FUNCTION_27	IF_1	CALL_1
0x4000ddb	        0x837de400	               cmp dword [rbp - 0x1c], 0	       299	quote.c	FUNCTION_27	IF_1	IF_2
0x4000ddf	            0x7511	                           jne 0x4000df2	       299	quote.c	FUNCTION_27	IF_1	IF_2
0x4000de1	        0x488b45f8	                mov rax, qword [rbp - 8]	       300	quote.c	FUNCTION_27	IF_1	CALL_3
0x4000de5	      0xbe22000000	                           mov esi, 0x22	       300	quote.c	FUNCTION_27	IF_1	CALL_3
0x4000dea	          0x4889c7	                            mov rdi, rax	       300	quote.c	FUNCTION_27	IF_1	CALL_3
0x4000ded	      0xe870f3ffff	                   call sym.strbuf_addch	       300	quote.c	FUNCTION_27	IF_1	CALL_3
0x4000df2	        0x488b75f8	                mov rsi, qword [rbp - 8]	       301	quote.c	FUNCTION_27	IF_1	CALL_4
0x4000df6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       301	quote.c	FUNCTION_27	IF_1	CALL_4
0x4000dfa	      0xb901000000	                              mov ecx, 1	       301	quote.c	FUNCTION_27	IF_1	CALL_4
0x4000dff	      0xba00000000	                              mov edx, 0	       301	quote.c	FUNCTION_27	IF_1	CALL_4
0x4000e04	          0x4889c7	                            mov rdi, rax	       301	quote.c	FUNCTION_27	IF_1	CALL_4
0x4000e07	      0xe800000000	                          call 0x4000e0c	       301	quote.c	FUNCTION_27	IF_1	CALL_4
0x4000e0c	        0x488b75f8	                mov rsi, qword [rbp - 8]	       302	quote.c	FUNCTION_27	IF_1	CALL_5
0x4000e10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       302	quote.c	FUNCTION_27	IF_1	CALL_5
0x4000e14	      0xb901000000	                              mov ecx, 1	       302	quote.c	FUNCTION_27	IF_1	CALL_5
0x4000e19	      0xba00000000	                              mov edx, 0	       302	quote.c	FUNCTION_27	IF_1	CALL_5
0x4000e1e	          0x4889c7	                            mov rdi, rax	       302	quote.c	FUNCTION_27	IF_1	CALL_5
0x4000e21	      0xe800000000	                          call 0x4000e26	       302	quote.c	FUNCTION_27	IF_1	CALL_5
0x4000e26	        0x837de400	               cmp dword [rbp - 0x1c], 0	       303	quote.c	FUNCTION_27	IF_1	IF_3
0x4000e2a	            0x7539	                           jne 0x4000e65	       303	quote.c	FUNCTION_27	IF_1	IF_3
0x4000e2c	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	quote.c	FUNCTION_27	IF_1	CALL_6
0x4000e30	      0xbe22000000	                           mov esi, 0x22	       304	quote.c	FUNCTION_27	IF_1	CALL_6
0x4000e35	          0x4889c7	                            mov rdi, rax	       304	quote.c	FUNCTION_27	IF_1	CALL_6
0x4000e38	      0xe825f3ffff	                   call sym.strbuf_addch	       304	quote.c	FUNCTION_27	IF_1	CALL_6
0x4000e3d	            0xeb26	                           jmp 0x4000e65	       303	quote.c	FUNCTION_27	IF_1	IF_3
0x4000e3f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       306	quote.c	FUNCTION_27	ELSE_1	CALL_7
0x4000e43	        0x488b45f8	                mov rax, qword [rbp - 8]	       306	quote.c	FUNCTION_27	ELSE_1	CALL_7
0x4000e47	          0x4889d6	                            mov rsi, rdx	       306	quote.c	FUNCTION_27	ELSE_1	CALL_7
0x4000e4a	          0x4889c7	                            mov rdi, rax	       306	quote.c	FUNCTION_27	ELSE_1	CALL_7
0x4000e4d	      0xe87ef3ffff	                  call sym.strbuf_addstr	       306	quote.c	FUNCTION_27	ELSE_1	CALL_7
0x4000e52	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       307	quote.c	FUNCTION_27	ELSE_1	CALL_8
0x4000e56	        0x488b45f8	                mov rax, qword [rbp - 8]	       307	quote.c	FUNCTION_27	ELSE_1	CALL_8
0x4000e5a	          0x4889d6	                            mov rsi, rdx	       307	quote.c	FUNCTION_27	ELSE_1	CALL_8
0x4000e5d	          0x4889c7	                            mov rdi, rax	       307	quote.c	FUNCTION_27	ELSE_1	CALL_8
0x4000e60	      0xe86bf3ffff	                  call sym.strbuf_addstr	       307	quote.c	FUNCTION_27	ELSE_1	CALL_8
0x4000e65	              0x90	                                     nop	       309	quote.c	FUNCTION_27
0x4000e66	              0xc9	                                   leave	       309	quote.c	FUNCTION_27
0x4000e67	              0xc3	                                     ret	       309	quote.c	FUNCTION_27
quote_c_style	DO,0:CALL,1:SWITCH,0:IF,0:FOR,0:ELSE,0:WHILE,0:functions,0	17
0x4000d4a	              0x55	                                push rbp	       291	quote.c	FUNCTION_26
0x4000d4b	          0x4889e5	                            mov rbp, rsp	       291	quote.c	FUNCTION_26
0x4000d4e	        0x4883ec20	                           sub rsp, 0x20	       291	quote.c	FUNCTION_26
0x4000d52	        0x48897df8	                mov qword [rbp - 8], rdi	       291	quote.c	FUNCTION_26
0x4000d56	        0x488975f0	             mov qword [rbp - 0x10], rsi	       291	quote.c	FUNCTION_26
0x4000d5a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       291	quote.c	FUNCTION_26
0x4000d5e	          0x894de4	             mov dword [rbp - 0x1c], ecx	       291	quote.c	FUNCTION_26
0x4000d61	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       292	quote.c	FUNCTION_26	CALL_1
0x4000d64	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       292	quote.c	FUNCTION_26	CALL_1
0x4000d68	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       292	quote.c	FUNCTION_26	CALL_1
0x4000d6c	        0x488b45f8	                mov rax, qword [rbp - 8]	       292	quote.c	FUNCTION_26	CALL_1
0x4000d70	          0x4189f0	                            mov r8d, esi	       292	quote.c	FUNCTION_26	CALL_1
0x4000d73	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       292	quote.c	FUNCTION_26	CALL_1
0x4000d7a	          0x4889c7	                            mov rdi, rax	       292	quote.c	FUNCTION_26	CALL_1
0x4000d7d	      0xe892fcffff	          call sym.quote_c_style_counted	       292	quote.c	FUNCTION_26	CALL_1
0x4000d82	              0xc9	                                   leave	       293	quote.c	FUNCTION_26
0x4000d83	              0xc3	                                     ret	       293	quote.c	FUNCTION_26
write_name_quoted	DO,0:CALL,3:SWITCH,0:IF,1:FOR,0:ELSE,1:WHILE,0:functions,0	28
0x4000e68	              0x55	                                push rbp	       312	quote.c	FUNCTION_28
0x4000e69	          0x4889e5	                            mov rbp, rsp	       312	quote.c	FUNCTION_28
0x4000e6c	        0x4883ec20	                           sub rsp, 0x20	       312	quote.c	FUNCTION_28
0x4000e70	        0x48897df8	                mov qword [rbp - 8], rdi	       312	quote.c	FUNCTION_28
0x4000e74	        0x488975f0	             mov qword [rbp - 0x10], rsi	       312	quote.c	FUNCTION_28
0x4000e78	          0x8955ec	             mov dword [rbp - 0x14], edx	       312	quote.c	FUNCTION_28
0x4000e7b	        0x837dec00	               cmp dword [rbp - 0x14], 0	       313	quote.c	FUNCTION_28	IF_1
0x4000e7f	            0x741c	                            je 0x4000e9d	       313	quote.c	FUNCTION_28	IF_1
0x4000e81	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       314	quote.c	FUNCTION_28	IF_1	CALL_1
0x4000e85	        0x488b45f8	                mov rax, qword [rbp - 8]	       314	quote.c	FUNCTION_28	IF_1	CALL_1
0x4000e89	      0xb900000000	                              mov ecx, 0	       314	quote.c	FUNCTION_28	IF_1	CALL_1
0x4000e8e	      0xbe00000000	                              mov esi, 0	       314	quote.c	FUNCTION_28	IF_1	CALL_1
0x4000e93	          0x4889c7	                            mov rdi, rax	       314	quote.c	FUNCTION_28	IF_1	CALL_1
0x4000e96	      0xe800000000	                          call 0x4000e9b	       314	quote.c	FUNCTION_28	IF_1	CALL_1
0x4000e9b	            0xeb13	                           jmp 0x4000eb0	       314	quote.c	FUNCTION_28	IF_1	CALL_1
0x4000e9d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       316	quote.c	FUNCTION_28	ELSE_1	CALL_2
0x4000ea1	        0x488b45f8	                mov rax, qword [rbp - 8]	       316	quote.c	FUNCTION_28	ELSE_1	CALL_2
0x4000ea5	          0x4889d6	                            mov rsi, rdx	       316	quote.c	FUNCTION_28	ELSE_1	CALL_2
0x4000ea8	          0x4889c7	                            mov rdi, rax	       316	quote.c	FUNCTION_28	ELSE_1	CALL_2
0x4000eab	      0xe800000000	                          call 0x4000eb0	       316	quote.c	FUNCTION_28	ELSE_1	CALL_2
0x4000eb0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       318	quote.c	FUNCTION_28	CALL_3
0x4000eb4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       318	quote.c	FUNCTION_28	CALL_3
0x4000eb7	          0x4889d6	                            mov rsi, rdx	       318	quote.c	FUNCTION_28	CALL_3
0x4000eba	            0x89c7	                            mov edi, eax	       318	quote.c	FUNCTION_28	CALL_3
0x4000ebc	      0xe800000000	                          call 0x4000ec1	       318	quote.c	FUNCTION_28	CALL_3
0x4000ec1	              0x90	                                     nop	       319	quote.c	FUNCTION_28
0x4000ec2	              0xc9	                                   leave	       319	quote.c	FUNCTION_28
0x4000ec3	              0xc3	                                     ret	       319	quote.c	FUNCTION_28
quote_path_relative	DO,0:CALL,4:SWITCH,0:IF,0:FOR,0:ELSE,0:WHILE,0:functions,0	44
0x4000f56	              0x55	                                push rbp	       335	quote.c	FUNCTION_30
0x4000f57	          0x4889e5	                            mov rbp, rsp	       335	quote.c	FUNCTION_30
0x4000f5a	        0x4883ec50	                           sub rsp, 0x50	       335	quote.c	FUNCTION_30
0x4000f5e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       335	quote.c	FUNCTION_30
0x4000f62	        0x488975c0	             mov qword [rbp - 0x40], rsi	       335	quote.c	FUNCTION_30
0x4000f66	        0x488955b8	             mov qword [rbp - 0x48], rdx	       335	quote.c	FUNCTION_30
0x4000f6a	    0x64488b042528	                mov rax, qword fs:[0x28]	       335	quote.c	FUNCTION_30
0x4000f73	        0x488945f8	                mov qword [rbp - 8], rax	       335	quote.c	FUNCTION_30
0x4000f77	            0x31c0	                            xor eax, eax	       335	quote.c	FUNCTION_30
0x4000f79	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       336	quote.c	FUNCTION_30
0x4000f81	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       336	quote.c	FUNCTION_30
0x4000f89	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       336	quote.c	FUNCTION_30
0x4000f91	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       337	quote.c	FUNCTION_30	CALL_1
0x4000f95	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       337	quote.c	FUNCTION_30	CALL_1
0x4000f99	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       337	quote.c	FUNCTION_30	CALL_1
0x4000f9d	          0x4889ce	                            mov rsi, rcx	       337	quote.c	FUNCTION_30	CALL_1
0x4000fa0	          0x4889c7	                            mov rdi, rax	       337	quote.c	FUNCTION_30	CALL_1
0x4000fa3	      0xe800000000	                          call 0x4000fa8	       337	quote.c	FUNCTION_30	CALL_1
0x4000fa8	        0x488945d8	             mov qword [rbp - 0x28], rax	       337	quote.c	FUNCTION_30	CALL_1
0x4000fac	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       338	quote.c	FUNCTION_30
0x4000fb0	      0xbe00000000	                              mov esi, 0	       338	quote.c	FUNCTION_30
0x4000fb5	          0x4889c7	                            mov rdi, rax	       338	quote.c	FUNCTION_30
0x4000fb8	      0xe80bf1ffff	                  call sym.strbuf_setlen	       338	quote.c	FUNCTION_30
0x4000fbd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       339	quote.c	FUNCTION_30	CALL_3
0x4000fc1	          0x4889c7	                            mov rdi, rax	       339	quote.c	FUNCTION_30	CALL_3
0x4000fc4	      0xe800000000	                          call 0x4000fc9	       339	quote.c	FUNCTION_30	CALL_3
0x4000fc9	          0x4889c6	                            mov rsi, rax	       339	quote.c	FUNCTION_30	CALL_3
0x4000fcc	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       339	quote.c	FUNCTION_30	CALL_3
0x4000fd0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       339	quote.c	FUNCTION_30	CALL_3
0x4000fd4	    0x41b800000000	                              mov r8d, 0	       339	quote.c	FUNCTION_30	CALL_3
0x4000fda	      0xb900000000	                              mov ecx, 0	       339	quote.c	FUNCTION_30	CALL_3
0x4000fdf	          0x4889c7	                            mov rdi, rax	       339	quote.c	FUNCTION_30	CALL_3
0x4000fe2	      0xe82dfaffff	          call sym.quote_c_style_counted	       339	quote.c	FUNCTION_30	CALL_3
0x4000fe7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       340	quote.c	FUNCTION_30	CALL_4
0x4000feb	          0x4889c7	                            mov rdi, rax	       340	quote.c	FUNCTION_30	CALL_4
0x4000fee	      0xe800000000	                          call 0x4000ff3	       340	quote.c	FUNCTION_30	CALL_4
0x4000ff3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       342	quote.c	FUNCTION_30
0x4000ff7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       342	quote.c	FUNCTION_30
0x4000ffb	        0x488b4df8	                mov rcx, qword [rbp - 8]	       343	quote.c	FUNCTION_30
0x4000fff	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       343	quote.c	FUNCTION_30
0x4001008	            0x7405	                            je 0x400100f	       343	quote.c	FUNCTION_30
0x400100a	      0xe800000000	                          call 0x400100f	       343	quote.c	FUNCTION_30
0x400100f	              0xc9	                                   leave	       343	quote.c	FUNCTION_30
0x4001010	              0xc3	                                     ret	       343	quote.c	FUNCTION_30
unquote_c_style	DO,0:CALL,4:SWITCH,2:IF,4:FOR,1:ELSE,0:WHILE,0:functions,0	125
0x4001011	              0x55	                                push rbp	       358	quote.c	FUNCTION_31
0x4001012	          0x4889e5	                            mov rbp, rsp	       358	quote.c	FUNCTION_31
0x4001015	        0x4883ec40	                           sub rsp, 0x40	       358	quote.c	FUNCTION_31
0x4001019	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       358	quote.c	FUNCTION_31
0x400101d	        0x488975d0	             mov qword [rbp - 0x30], rsi	       358	quote.c	FUNCTION_31
0x4001021	        0x488955c8	             mov qword [rbp - 0x38], rdx	       358	quote.c	FUNCTION_31
0x4001025	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       359	quote.c	FUNCTION_31
0x4001029	        0x488b4008	                mov rax, qword [rax + 8]	       359	quote.c	FUNCTION_31
0x400102d	        0x488945f0	             mov qword [rbp - 0x10], rax	       359	quote.c	FUNCTION_31
0x4001031	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       362	quote.c	FUNCTION_31	IF_1
0x4001035	        0x488d5001	                      lea rdx, [rax + 1]	       362	quote.c	FUNCTION_31	IF_1
0x4001039	        0x488955d0	             mov qword [rbp - 0x30], rdx	       362	quote.c	FUNCTION_31	IF_1
0x400103d	           0xfb600	                   movzx eax, byte [rax]	       362	quote.c	FUNCTION_31	IF_1
0x4001040	            0x3c22	                            cmp al, 0x22	       362	quote.c	FUNCTION_31	IF_1
0x4001042	            0x740a	                            je 0x400104e	       362	quote.c	FUNCTION_31	IF_1
0x4001044	      0xb8ffffffff	                     mov eax, 0xffffffff	       363	quote.c	FUNCTION_31	IF_1
0x4001049	      0xe988010000	                           jmp 0x40011d6	       363	quote.c	FUNCTION_31	IF_1
0x400104e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       366	quote.c	FUNCTION_31	FOR_1	CALL_1
0x4001052	      0xbe00000000	                              mov esi, 0	       366	quote.c	FUNCTION_31	FOR_1	CALL_1
0x4001057	          0x4889c7	                            mov rdi, rax	       366	quote.c	FUNCTION_31	FOR_1	CALL_1
0x400105a	      0xe800000000	                          call 0x400105f	       366	quote.c	FUNCTION_31	FOR_1	CALL_1
0x400105f	        0x488945f8	                mov qword [rbp - 8], rax	       366	quote.c	FUNCTION_31	FOR_1	CALL_1
0x4001063	        0x488b55f8	                mov rdx, qword [rbp - 8]	       367	quote.c	FUNCTION_31	FOR_1	CALL_2
0x4001067	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       367	quote.c	FUNCTION_31	FOR_1	CALL_2
0x400106b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       367	quote.c	FUNCTION_31	FOR_1	CALL_2
0x400106f	          0x4889ce	                            mov rsi, rcx	       367	quote.c	FUNCTION_31	FOR_1	CALL_2
0x4001072	          0x4889c7	                            mov rdi, rax	       367	quote.c	FUNCTION_31	FOR_1	CALL_2
0x4001075	      0xe800000000	                          call 0x400107a	       367	quote.c	FUNCTION_31	FOR_1	CALL_2
0x400107a	        0x488b45f8	                mov rax, qword [rbp - 8]	       368	quote.c	FUNCTION_31	FOR_1
0x400107e	        0x480145d0	            add qword [rbp - 0x30], rax 	       368	quote.c	FUNCTION_31	FOR_1
0x4001082	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       370	quote.c	FUNCTION_31	FOR_1	SWITCH_1
0x4001086	        0x488d5001	                      lea rdx, [rax + 1]	       370	quote.c	FUNCTION_31	FOR_1	SWITCH_1
0x400108a	        0x488955d0	             mov qword [rbp - 0x30], rdx	       370	quote.c	FUNCTION_31	FOR_1	SWITCH_1
0x400108e	           0xfb600	                   movzx eax, byte [rax]	       370	quote.c	FUNCTION_31	FOR_1	SWITCH_1
0x4001091	           0xfbec0	                           movsx eax, al	       370	quote.c	FUNCTION_31	FOR_1	SWITCH_1
0x4001094	          0x83f822	                           cmp eax, 0x22	       370	quote.c	FUNCTION_31	FOR_1	SWITCH_1
0x4001097	            0x740a	                            je 0x40010a3	       370	quote.c	FUNCTION_31	FOR_1	SWITCH_1
0x4001099	          0x83f85c	                           cmp eax, 0x5c	       370	quote.c	FUNCTION_31	FOR_1	SWITCH_1
0x400109c	            0x7421	                            je 0x40010bf	       370	quote.c	FUNCTION_31	FOR_1	SWITCH_1
0x400109e	      0xe91b010000	                           jmp 0x40011be	       378	quote.c	FUNCTION_31	FOR_1	SWITCH_1
0x40010a3	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       372	quote.c	FUNCTION_31	FOR_1	SWITCH_1	IF_2
0x40010a8	            0x740b	                            je 0x40010b5	       372	quote.c	FUNCTION_31	FOR_1	SWITCH_1	IF_2
0x40010aa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       373	quote.c	FUNCTION_31	FOR_1	SWITCH_1	IF_2
0x40010ae	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       373	quote.c	FUNCTION_31	FOR_1	SWITCH_1	IF_2
0x40010b2	          0x488910	                    mov qword [rax], rdx	       373	quote.c	FUNCTION_31	FOR_1	SWITCH_1	IF_2
0x40010b5	      0xb800000000	                              mov eax, 0	       374	quote.c	FUNCTION_31	FOR_1	SWITCH_1
0x40010ba	      0xe917010000	                           jmp 0x40011d6	       374	quote.c	FUNCTION_31	FOR_1	SWITCH_1
0x40010bf	              0x90	                                     nop	       376	quote.c	FUNCTION_31	FOR_1	SWITCH_1
0x40010c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       381	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40010c4	        0x488d5001	                      lea rdx, [rax + 1]	       381	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40010c8	        0x488955d0	             mov qword [rbp - 0x30], rdx	       381	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40010cc	           0xfb600	                   movzx eax, byte [rax]	       381	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40010cf	           0xfbec0	                           movsx eax, al	       381	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40010d2	          0x8945e8	             mov dword [rbp - 0x18], eax	       381	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40010d5	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       381	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40010d8	          0x83e822	                           sub eax, 0x22	       381	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40010db	          0x83f854	                           cmp eax, 0x54	       381	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40010de	     0xf87d9000000	                            ja 0x40011bd	       381	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40010e4	            0x89c0	                            mov eax, eax	       381	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40010e6	    0x488b04c50000	                  mov rax, qword [rax*8]	       381	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40010ee	            0xffe0	                                 jmp rax	       381	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40010f0	    0xc745e8070000	               mov dword [rbp - 0x18], 7	       382	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40010f7	      0xe9ab000000	                           jmp 0x40011a7	       382	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40010fc	    0xc745e8080000	               mov dword [rbp - 0x18], 8	       383	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x4001103	      0xe99f000000	                           jmp 0x40011a7	       383	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x4001108	    0xc745e80c0000	            mov dword [rbp - 0x18], 0xc 	       384	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x400110f	      0xe993000000	                           jmp 0x40011a7	       384	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x4001114	    0xc745e80a0000	             mov dword [rbp - 0x18], 0xa	       385	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x400111b	      0xe987000000	                           jmp 0x40011a7	       385	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x4001120	    0xc745e80d0000	            mov dword [rbp - 0x18], 0xd 	       386	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x4001127	            0xeb7e	                           jmp 0x40011a7	       386	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x4001129	    0xc745e8090000	               mov dword [rbp - 0x18], 9	       387	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x4001130	            0xeb75	                           jmp 0x40011a7	       387	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x4001132	    0xc745e80b0000	            mov dword [rbp - 0x18], 0xb 	       388	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x4001139	            0xeb6c	                           jmp 0x40011a7	       388	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x400113b	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       395	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x400113e	          0x83e830	                           sub eax, 0x30	       395	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x4001141	          0xc1e006	                              shl eax, 6	       395	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x4001144	          0x8945ec	             mov dword [rbp - 0x14], eax	       395	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x4001147	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       396	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_3
0x400114b	        0x488d5001	                      lea rdx, [rax + 1]	       396	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_3
0x400114f	        0x488955d0	             mov qword [rbp - 0x30], rdx	       396	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_3
0x4001153	           0xfb600	                   movzx eax, byte [rax]	       396	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_3
0x4001156	           0xfbec0	                           movsx eax, al	       396	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_3
0x4001159	          0x8945e8	             mov dword [rbp - 0x18], eax	       396	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_3
0x400115c	        0x837de82f	           cmp dword [rbp - 0x18], 0x2f 	       396	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_3
0x4001160	            0x7e5c	                           jle 0x40011be	       396	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_3
0x4001162	        0x837de837	           cmp dword [rbp - 0x18], 0x37 	       396	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_3
0x4001166	            0x7f56	                            jg 0x40011be	       396	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_3
0x4001168	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       398	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x400116b	          0x83e830	                           sub eax, 0x30	       398	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x400116e	          0xc1e003	                              shl eax, 3	       398	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x4001171	           0x945ec	              or dword [rbp - 0x14], eax	       398	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x4001174	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       399	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_4
0x4001178	        0x488d5001	                      lea rdx, [rax + 1]	       399	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_4
0x400117c	        0x488955d0	             mov qword [rbp - 0x30], rdx	       399	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_4
0x4001180	           0xfb600	                   movzx eax, byte [rax]	       399	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_4
0x4001183	           0xfbec0	                           movsx eax, al	       399	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_4
0x4001186	          0x8945e8	             mov dword [rbp - 0x18], eax	       399	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_4
0x4001189	        0x837de82f	           cmp dword [rbp - 0x18], 0x2f 	       399	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_4
0x400118d	            0x7e2f	                           jle 0x40011be	       399	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_4
0x400118f	        0x837de837	           cmp dword [rbp - 0x18], 0x37 	       399	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_4
0x4001193	            0x7f29	                            jg 0x40011be	       399	quote.c	FUNCTION_31	FOR_1	SWITCH_2	IF_4
0x4001195	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       401	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x4001198	          0x83e830	                           sub eax, 0x30	       401	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x400119b	           0x945ec	              or dword [rbp - 0x14], eax	       401	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x400119e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       402	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40011a1	          0x8945e8	             mov dword [rbp - 0x18], eax	       402	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40011a4	            0xeb01	                           jmp 0x40011a7	       403	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40011a6	              0x90	                                     nop	       391	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40011a7	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       407	quote.c	FUNCTION_31	FOR_1	CALL_3
0x40011aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       407	quote.c	FUNCTION_31	FOR_1	CALL_3
0x40011ae	            0x89d6	                            mov esi, edx	       407	quote.c	FUNCTION_31	FOR_1	CALL_3
0x40011b0	          0x4889c7	                            mov rdi, rax	       407	quote.c	FUNCTION_31	FOR_1	CALL_3
0x40011b3	      0xe8aaefffff	                   call sym.strbuf_addch	       407	quote.c	FUNCTION_31	FOR_1	CALL_3
0x40011b8	      0xe991feffff	                           jmp 0x400104e	       408	quote.c	FUNCTION_31	FOR_1
0x40011bd	              0x90	                                     nop	       405	quote.c	FUNCTION_31	FOR_1	SWITCH_2
0x40011be	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       411	quote.c	FUNCTION_31	CALL_4
0x40011c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       411	quote.c	FUNCTION_31	CALL_4
0x40011c6	          0x4889d6	                            mov rsi, rdx	       411	quote.c	FUNCTION_31	CALL_4
0x40011c9	          0x4889c7	                            mov rdi, rax	       411	quote.c	FUNCTION_31	CALL_4
0x40011cc	      0xe8f7eeffff	                  call sym.strbuf_setlen	       411	quote.c	FUNCTION_31	CALL_4
0x40011d1	      0xb8ffffffff	                     mov eax, 0xffffffff	       412	quote.c	FUNCTION_31
0x40011d6	              0xc9	                                   leave	       413	quote.c	FUNCTION_31
0x40011d7	              0xc3	                                     ret	       413	quote.c	FUNCTION_31
next_quote_pos	DO,0:CALL,2:SWITCH,0:IF,1:FOR,2:ELSE,1:WHILE,0:functions,0	38
0x4000995	              0x55	                                push rbp	       213	quote.c	FUNCTION_24
0x4000996	          0x4889e5	                            mov rbp, rsp	       213	quote.c	FUNCTION_24
0x4000999	        0x4883ec20	                           sub rsp, 0x20	       213	quote.c	FUNCTION_24
0x400099d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       213	quote.c	FUNCTION_24
0x40009a1	        0x488975e0	             mov qword [rbp - 0x20], rsi	       213	quote.c	FUNCTION_24
0x40009a5	      0x48837de000	               cmp qword [rbp - 0x20], 0	       215	quote.c	FUNCTION_24	IF_1
0x40009aa	            0x792d	                           jns 0x40009d9	       215	quote.c	FUNCTION_24	IF_1
0x40009ac	    0x48c745f80000	                  mov qword [rbp - 8], 0	       216	quote.c	FUNCTION_24	IF_1	CALL_1
0x40009b4	            0xeb05	                           jmp 0x40009bb	       216	quote.c	FUNCTION_24	IF_1	CALL_1
0x40009b6	      0x488345f801	                  add qword [rbp - 8], 1	       216	quote.c	FUNCTION_24	IF_1	CALL_1
0x40009bb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       216	quote.c	FUNCTION_24	IF_1	CALL_1
0x40009bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       216	quote.c	FUNCTION_24	IF_1	CALL_1
0x40009c3	          0x4801d0	                            add rax, rdx	       216	quote.c	FUNCTION_24	IF_1	CALL_1
0x40009c6	           0xfb600	                   movzx eax, byte [rax]	       216	quote.c	FUNCTION_24	IF_1	CALL_1
0x40009c9	           0xfbec0	                           movsx eax, al	       216	quote.c	FUNCTION_24	IF_1	CALL_1
0x40009cc	            0x89c7	                            mov edi, eax	       216	quote.c	FUNCTION_24	IF_1	CALL_1
0x40009ce	      0xe894ffffff	                  call sym.sq_must_quote	       216	quote.c	FUNCTION_24	IF_1	CALL_1
0x40009d3	            0x85c0	                           test eax, eax	       216	quote.c	FUNCTION_24	IF_1	CALL_1
0x40009d5	            0x74df	                            je 0x40009b6	       216	quote.c	FUNCTION_24	IF_1	CALL_1
0x40009d7	            0xeb35	                           jmp 0x4000a0e	       216	quote.c	FUNCTION_24	IF_1	CALL_1
0x40009d9	    0x48c745f80000	                  mov qword [rbp - 8], 0	       218	quote.c	FUNCTION_24	ELSE_1	CALL_2
0x40009e1	            0xeb05	                           jmp 0x40009e8	       218	quote.c	FUNCTION_24	ELSE_1	CALL_2
0x40009e3	      0x488345f801	                  add qword [rbp - 8], 1	       218	quote.c	FUNCTION_24	ELSE_1	CALL_2
0x40009e8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       218	quote.c	FUNCTION_24	ELSE_1	CALL_2
0x40009ec	        0x483945f8	                cmp qword [rbp - 8], rax	       218	quote.c	FUNCTION_24	ELSE_1	CALL_2
0x40009f0	            0x731c	                           jae 0x4000a0e	       218	quote.c	FUNCTION_24	ELSE_1	CALL_2
0x40009f2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       218	quote.c	FUNCTION_24	ELSE_1	CALL_2
0x40009f6	        0x488b45f8	                mov rax, qword [rbp - 8]	       218	quote.c	FUNCTION_24	ELSE_1	CALL_2
0x40009fa	          0x4801d0	                            add rax, rdx	       218	quote.c	FUNCTION_24	ELSE_1	CALL_2
0x40009fd	           0xfb600	                   movzx eax, byte [rax]	       218	quote.c	FUNCTION_24	ELSE_1	CALL_2
0x4000a00	           0xfbec0	                           movsx eax, al	       218	quote.c	FUNCTION_24	ELSE_1	CALL_2
0x4000a03	            0x89c7	                            mov edi, eax	       218	quote.c	FUNCTION_24	ELSE_1	CALL_2
0x4000a05	      0xe85dffffff	                  call sym.sq_must_quote	       218	quote.c	FUNCTION_24	ELSE_1	CALL_2
0x4000a0a	            0x85c0	                           test eax, eax	       218	quote.c	FUNCTION_24	ELSE_1	CALL_2
0x4000a0c	            0x74d5	                            je 0x40009e3	       218	quote.c	FUNCTION_24	ELSE_1	CALL_2
0x4000a0e	        0x488b45f8	                mov rax, qword [rbp - 8]	       220	quote.c	FUNCTION_24
0x4000a12	              0xc9	                                   leave	       221	quote.c	FUNCTION_24
0x4000a13	              0xc3	                                     ret	       221	quote.c	FUNCTION_24
python_quote_buf	DO,0:CALL,6:SWITCH,0:IF,2:FOR,0:ELSE,0:WHILE,1:functions,0	58
0x4001267	              0x55	                                push rbp	       433	quote.c	FUNCTION_33
0x4001268	          0x4889e5	                            mov rbp, rsp	       433	quote.c	FUNCTION_33
0x400126b	        0x4883ec20	                           sub rsp, 0x20	       433	quote.c	FUNCTION_33
0x400126f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       433	quote.c	FUNCTION_33
0x4001273	        0x488975e0	             mov qword [rbp - 0x20], rsi	       433	quote.c	FUNCTION_33
0x4001277	        0xc645fc27	                mov byte [rbp - 4], 0x27	       434	quote.c	FUNCTION_33
0x400127b	        0xc645fd5c	                mov byte [rbp - 3], 0x5c	       435	quote.c	FUNCTION_33
0x400127f	        0xc645fe0a	                 mov byte [rbp - 2], 0xa	       436	quote.c	FUNCTION_33
0x4001283	         0xfbe55fc	               movsx edx, byte [rbp - 4]	       439	quote.c	FUNCTION_33	CALL_1
0x4001287	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       439	quote.c	FUNCTION_33	CALL_1
0x400128b	            0x89d6	                            mov esi, edx	       439	quote.c	FUNCTION_33	CALL_1
0x400128d	          0x4889c7	                            mov rdi, rax	       439	quote.c	FUNCTION_33	CALL_1
0x4001290	      0xe8cdeeffff	                   call sym.strbuf_addch	       439	quote.c	FUNCTION_33	CALL_1
0x4001295	            0xeb64	                           jmp 0x40012fb	       440	quote.c	FUNCTION_33	WHILE_1
0x4001297	         0xfb645ff	               movzx eax, byte [rbp - 1]	       441	quote.c	FUNCTION_33	WHILE_1	IF_1
0x400129b	          0x3a45fe	                  cmp al, byte [rbp - 2]	       441	quote.c	FUNCTION_33	WHILE_1	IF_1
0x400129e	            0x7525	                           jne 0x40012c5	       441	quote.c	FUNCTION_33	WHILE_1	IF_1
0x40012a0	         0xfbe55fd	               movsx edx, byte [rbp - 3]	       442	quote.c	FUNCTION_33	WHILE_1	IF_1	CALL_2
0x40012a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       442	quote.c	FUNCTION_33	WHILE_1	IF_1	CALL_2
0x40012a8	            0x89d6	                            mov esi, edx	       442	quote.c	FUNCTION_33	WHILE_1	IF_1	CALL_2
0x40012aa	          0x4889c7	                            mov rdi, rax	       442	quote.c	FUNCTION_33	WHILE_1	IF_1	CALL_2
0x40012ad	      0xe8b0eeffff	                   call sym.strbuf_addch	       442	quote.c	FUNCTION_33	WHILE_1	IF_1	CALL_2
0x40012b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       443	quote.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40012b6	      0xbe6e000000	                           mov esi, 0x6e	       443	quote.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40012bb	          0x4889c7	                            mov rdi, rax	       443	quote.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40012be	      0xe89feeffff	                   call sym.strbuf_addch	       443	quote.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40012c3	            0xeb36	                           jmp 0x40012fb	       444	quote.c	FUNCTION_33	WHILE_1	IF_1
0x40012c5	         0xfb645ff	               movzx eax, byte [rbp - 1]	       446	quote.c	FUNCTION_33	WHILE_1	IF_2
0x40012c9	          0x3a45fc	                  cmp al, byte [rbp - 4]	       446	quote.c	FUNCTION_33	WHILE_1	IF_2
0x40012cc	            0x7409	                            je 0x40012d7	       446	quote.c	FUNCTION_33	WHILE_1	IF_2
0x40012ce	         0xfb645ff	               movzx eax, byte [rbp - 1]	       446	quote.c	FUNCTION_33	WHILE_1	IF_2
0x40012d2	          0x3a45fd	                  cmp al, byte [rbp - 3]	       446	quote.c	FUNCTION_33	WHILE_1	IF_2
0x40012d5	            0x7512	                           jne 0x40012e9	       446	quote.c	FUNCTION_33	WHILE_1	IF_2
0x40012d7	         0xfbe55fd	               movsx edx, byte [rbp - 3]	       447	quote.c	FUNCTION_33	WHILE_1	CALL_4
0x40012db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       447	quote.c	FUNCTION_33	WHILE_1	CALL_4
0x40012df	            0x89d6	                            mov esi, edx	       447	quote.c	FUNCTION_33	WHILE_1	CALL_4
0x40012e1	          0x4889c7	                            mov rdi, rax	       447	quote.c	FUNCTION_33	WHILE_1	CALL_4
0x40012e4	      0xe879eeffff	                   call sym.strbuf_addch	       447	quote.c	FUNCTION_33	WHILE_1	CALL_4
0x40012e9	         0xfbe55ff	               movsx edx, byte [rbp - 1]	       448	quote.c	FUNCTION_33	WHILE_1	CALL_5
0x40012ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       448	quote.c	FUNCTION_33	WHILE_1	CALL_5
0x40012f1	            0x89d6	                            mov esi, edx	       448	quote.c	FUNCTION_33	WHILE_1	CALL_5
0x40012f3	          0x4889c7	                            mov rdi, rax	       448	quote.c	FUNCTION_33	WHILE_1	CALL_5
0x40012f6	      0xe867eeffff	                   call sym.strbuf_addch	       448	quote.c	FUNCTION_33	WHILE_1	CALL_5
0x40012fb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       440	quote.c	FUNCTION_33	WHILE_1
0x40012ff	        0x488d5001	                      lea rdx, [rax + 1]	       440	quote.c	FUNCTION_33	WHILE_1
0x4001303	        0x488955e0	             mov qword [rbp - 0x20], rdx	       440	quote.c	FUNCTION_33	WHILE_1
0x4001307	           0xfb600	                   movzx eax, byte [rax]	       440	quote.c	FUNCTION_33	WHILE_1
0x400130a	          0x8845ff	                  mov byte [rbp - 1], al	       440	quote.c	FUNCTION_33	WHILE_1
0x400130d	        0x807dff00	                   cmp byte [rbp - 1], 0	       440	quote.c	FUNCTION_33	WHILE_1
0x4001311	            0x7584	                           jne 0x4001297	       440	quote.c	FUNCTION_33	WHILE_1
0x4001313	         0xfbe55fc	               movsx edx, byte [rbp - 4]	       450	quote.c	FUNCTION_33	CALL_6
0x4001317	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       450	quote.c	FUNCTION_33	CALL_6
0x400131b	            0x89d6	                            mov esi, edx	       450	quote.c	FUNCTION_33	CALL_6
0x400131d	          0x4889c7	                            mov rdi, rax	       450	quote.c	FUNCTION_33	CALL_6
0x4001320	      0xe83deeffff	                   call sym.strbuf_addch	       450	quote.c	FUNCTION_33	CALL_6
0x4001325	              0x90	                                     nop	       451	quote.c	FUNCTION_33
0x4001326	              0xc9	                                   leave	       451	quote.c	FUNCTION_33
0x4001327	              0xc3	                                     ret	       451	quote.c	FUNCTION_33
sq_must_quote	DO,0:CALL,0:SWITCH,0:IF,0:FOR,0:ELSE,0:WHILE,0:functions,0	16
0x4000967	              0x55	                                push rbp	       205	quote.c	FUNCTION_23
0x4000968	          0x4889e5	                            mov rbp, rsp	       205	quote.c	FUNCTION_23
0x400096b	            0x89f8	                            mov eax, edi	       205	quote.c	FUNCTION_23
0x400096d	          0x8845fc	                  mov byte [rbp - 4], al	       205	quote.c	FUNCTION_23
0x4000970	         0xfb645fc	               movzx eax, byte [rbp - 4]	       206	quote.c	FUNCTION_23
0x4000974	           0xfb6c0	                           movzx eax, al	       206	quote.c	FUNCTION_23
0x4000977	            0x4898	                                    cdqe	       206	quote.c	FUNCTION_23
0x4000979	     0xfb680000000	                   movzx eax, byte [rax]	       206	quote.c	FUNCTION_23
0x4000980	           0xfbed0	                           movsx edx, al	       206	quote.c	FUNCTION_23
0x4000983	    0x8b0500000000	            mov eax, dword [0x04000989] 	       206	quote.c	FUNCTION_23
0x4000989	             0x1d0	                            add eax, edx	       206	quote.c	FUNCTION_23
0x400098b	            0x85c0	                           test eax, eax	       206	quote.c	FUNCTION_23
0x400098d	           0xf9fc0	                                 setg al	       206	quote.c	FUNCTION_23
0x4000990	           0xfb6c0	                           movzx eax, al	       206	quote.c	FUNCTION_23
0x4000993	              0x5d	                                 pop rbp	       207	quote.c	FUNCTION_23
0x4000994	              0xc3	                                     ret	       207	quote.c	FUNCTION_23
basic_regex_quote_buf	DO,0:CALL,8:SWITCH,1:IF,3:FOR,0:ELSE,0:WHILE,1:functions,0	89
0x4001454	              0x55	                                push rbp	       489	quote.c	FUNCTION_35
0x4001455	          0x4889e5	                            mov rbp, rsp	       489	quote.c	FUNCTION_35
0x4001458	        0x4883ec20	                           sub rsp, 0x20	       489	quote.c	FUNCTION_35
0x400145c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       489	quote.c	FUNCTION_35
0x4001460	        0x488975e0	             mov qword [rbp - 0x20], rsi	       489	quote.c	FUNCTION_35
0x4001464	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       492	quote.c	FUNCTION_35	IF_1
0x4001468	           0xfb600	                   movzx eax, byte [rax]	       492	quote.c	FUNCTION_35	IF_1
0x400146b	            0x3c5e	                            cmp al, 0x5e	       492	quote.c	FUNCTION_35	IF_1
0x400146d	            0x7531	                           jne 0x40014a0	       492	quote.c	FUNCTION_35	IF_1
0x400146f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       494	quote.c	FUNCTION_35	IF_1	CALL_1
0x4001473	      0xbe5c000000	                           mov esi, 0x5c	       494	quote.c	FUNCTION_35	IF_1	CALL_1
0x4001478	          0x4889c7	                            mov rdi, rax	       494	quote.c	FUNCTION_35	IF_1	CALL_1
0x400147b	      0xe8e2ecffff	                   call sym.strbuf_addch	       494	quote.c	FUNCTION_35	IF_1	CALL_1
0x4001480	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       495	quote.c	FUNCTION_35	IF_1	CALL_2
0x4001484	        0x488d5001	                      lea rdx, [rax + 1]	       495	quote.c	FUNCTION_35	IF_1	CALL_2
0x4001488	        0x488955e0	             mov qword [rbp - 0x20], rdx	       495	quote.c	FUNCTION_35	IF_1	CALL_2
0x400148c	           0xfb600	                   movzx eax, byte [rax]	       495	quote.c	FUNCTION_35	IF_1	CALL_2
0x400148f	           0xfbed0	                           movsx edx, al	       495	quote.c	FUNCTION_35	IF_1	CALL_2
0x4001492	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       495	quote.c	FUNCTION_35	IF_1	CALL_2
0x4001496	            0x89d6	                            mov esi, edx	       495	quote.c	FUNCTION_35	IF_1	CALL_2
0x4001498	          0x4889c7	                            mov rdi, rax	       495	quote.c	FUNCTION_35	IF_1	CALL_2
0x400149b	      0xe8c2ecffff	                   call sym.strbuf_addch	       495	quote.c	FUNCTION_35	IF_1	CALL_2
0x40014a0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       497	quote.c	FUNCTION_35	IF_2
0x40014a4	           0xfb600	                   movzx eax, byte [rax]	       497	quote.c	FUNCTION_35	IF_2
0x40014a7	            0x3c2a	                            cmp al, 0x2a	       497	quote.c	FUNCTION_35	IF_2
0x40014a9	     0xf85af000000	                           jne 0x400155e	       497	quote.c	FUNCTION_35	IF_2
0x40014af	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       499	quote.c	FUNCTION_35	CALL_3
0x40014b3	        0x488d5001	                      lea rdx, [rax + 1]	       499	quote.c	FUNCTION_35	CALL_3
0x40014b7	        0x488955e0	             mov qword [rbp - 0x20], rdx	       499	quote.c	FUNCTION_35	CALL_3
0x40014bb	           0xfb600	                   movzx eax, byte [rax]	       499	quote.c	FUNCTION_35	CALL_3
0x40014be	           0xfbed0	                           movsx edx, al	       499	quote.c	FUNCTION_35	CALL_3
0x40014c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       499	quote.c	FUNCTION_35	CALL_3
0x40014c5	            0x89d6	                            mov esi, edx	       499	quote.c	FUNCTION_35	CALL_3
0x40014c7	          0x4889c7	                            mov rdi, rax	       499	quote.c	FUNCTION_35	CALL_3
0x40014ca	      0xe893ecffff	                   call sym.strbuf_addch	       499	quote.c	FUNCTION_35	CALL_3
0x40014cf	      0xe98a000000	                           jmp 0x400155e	       501	quote.c	FUNCTION_35	WHILE_1
0x40014d4	         0xfbe45ff	               movsx eax, byte [rbp - 1]	       502	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x40014d8	          0x83f82e	                           cmp eax, 0x2e	       502	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x40014db	            0x7419	                            je 0x40014f6	       502	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x40014dd	          0x83f82e	                           cmp eax, 0x2e	       502	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x40014e0	            0x7f0c	                            jg 0x40014ee	       502	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x40014e2	          0x83f824	                           cmp eax, 0x24	       502	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x40014e5	            0x7434	                            je 0x400151b	       502	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x40014e7	          0x83f82a	                           cmp eax, 0x2a	       502	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x40014ea	            0x740a	                            je 0x40014f6	       502	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x40014ec	            0xeb5d	                           jmp 0x400154b	       502	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x40014ee	          0x83e85b	                           sub eax, 0x5b	       502	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x40014f1	          0x83f801	                              cmp eax, 1	       502	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x40014f4	            0x7755	                            ja 0x400154b	       502	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x40014f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       507	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_4
0x40014fa	      0xbe5c000000	                           mov esi, 0x5c	       507	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_4
0x40014ff	          0x4889c7	                            mov rdi, rax	       507	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_4
0x4001502	      0xe85becffff	                   call sym.strbuf_addch	       507	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_4
0x4001507	         0xfbe55ff	               movsx edx, byte [rbp - 1]	       508	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_5
0x400150b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       508	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_5
0x400150f	            0x89d6	                            mov esi, edx	       508	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_5
0x4001511	          0x4889c7	                            mov rdi, rax	       508	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_5
0x4001514	      0xe849ecffff	                   call sym.strbuf_addch	       508	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_5
0x4001519	            0xeb43	                           jmp 0x400155e	       509	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x400151b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       513	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	IF_3
0x400151f	           0xfb600	                   movzx eax, byte [rax]	       513	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	IF_3
0x4001522	            0x84c0	                             test al, al	       513	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	IF_3
0x4001524	            0x7511	                           jne 0x4001537	       513	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	IF_3
0x4001526	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       514	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_6
0x400152a	      0xbe5c000000	                           mov esi, 0x5c	       514	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_6
0x400152f	          0x4889c7	                            mov rdi, rax	       514	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_6
0x4001532	      0xe82becffff	                   call sym.strbuf_addch	       514	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_6
0x4001537	         0xfbe55ff	               movsx edx, byte [rbp - 1]	       515	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_7
0x400153b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       515	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_7
0x400153f	            0x89d6	                            mov esi, edx	       515	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_7
0x4001541	          0x4889c7	                            mov rdi, rax	       515	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_7
0x4001544	      0xe819ecffff	                   call sym.strbuf_addch	       515	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_7
0x4001549	            0xeb13	                           jmp 0x400155e	       516	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x400154b	         0xfbe55ff	               movsx edx, byte [rbp - 1]	       519	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_8
0x400154f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       519	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_8
0x4001553	            0x89d6	                            mov esi, edx	       519	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_8
0x4001555	          0x4889c7	                            mov rdi, rax	       519	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_8
0x4001558	      0xe805ecffff	                   call sym.strbuf_addch	       519	quote.c	FUNCTION_35	WHILE_1	SWITCH_1	CALL_8
0x400155d	              0x90	                                     nop	       520	quote.c	FUNCTION_35	WHILE_1	SWITCH_1
0x400155e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       501	quote.c	FUNCTION_35	WHILE_1
0x4001562	        0x488d5001	                      lea rdx, [rax + 1]	       501	quote.c	FUNCTION_35	WHILE_1
0x4001566	        0x488955e0	             mov qword [rbp - 0x20], rdx	       501	quote.c	FUNCTION_35	WHILE_1
0x400156a	           0xfb600	                   movzx eax, byte [rax]	       501	quote.c	FUNCTION_35	WHILE_1
0x400156d	          0x8845ff	                  mov byte [rbp - 1], al	       501	quote.c	FUNCTION_35	WHILE_1
0x4001570	        0x807dff00	                   cmp byte [rbp - 1], 0	       501	quote.c	FUNCTION_35	WHILE_1
0x4001574	     0xf855affffff	                           jne 0x40014d4	       501	quote.c	FUNCTION_35	WHILE_1
0x400157a	              0x90	                                     nop	       523	quote.c	FUNCTION_35
0x400157b	              0xc9	                                   leave	       523	quote.c	FUNCTION_35
0x400157c	              0xc3	                                     ret	       523	quote.c	FUNCTION_35
sq_dequote_to_argv_internal	DO,1:CALL,3:SWITCH,0:IF,4:FOR,0:ELSE,0:WHILE,0:functions,0	117
0x4000774	              0x55	                                push rbp	       154	quote.c	FUNCTION_20
0x4000775	          0x4889e5	                            mov rbp, rsp	       154	quote.c	FUNCTION_20
0x4000778	        0x4883ec50	                           sub rsp, 0x50	       154	quote.c	FUNCTION_20
0x400077c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       154	quote.c	FUNCTION_20
0x4000780	        0x488975d0	             mov qword [rbp - 0x30], rsi	       154	quote.c	FUNCTION_20
0x4000784	        0x488955c8	             mov qword [rbp - 0x38], rdx	       154	quote.c	FUNCTION_20
0x4000788	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       154	quote.c	FUNCTION_20
0x400078c	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       154	quote.c	FUNCTION_20
0x4000790	    0x64488b042528	                mov rax, qword fs:[0x28]	       154	quote.c	FUNCTION_20
0x4000799	        0x488945f8	                mov qword [rbp - 8], rax	       154	quote.c	FUNCTION_20
0x400079d	            0x31c0	                            xor eax, eax	       154	quote.c	FUNCTION_20
0x400079f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       155	quote.c	FUNCTION_20
0x40007a3	        0x488945e8	             mov qword [rbp - 0x18], rax	       155	quote.c	FUNCTION_20
0x40007a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       157	quote.c	FUNCTION_20	IF_1
0x40007ab	           0xfb600	                   movzx eax, byte [rax]	       157	quote.c	FUNCTION_20	IF_1
0x40007ae	            0x84c0	                             test al, al	       157	quote.c	FUNCTION_20	IF_1
0x40007b0	            0x750a	                           jne 0x40007bc	       157	quote.c	FUNCTION_20	IF_1
0x40007b2	      0xb800000000	                              mov eax, 0	       158	quote.c	FUNCTION_20	IF_1
0x40007b7	      0xe929010000	                           jmp 0x40008e5	       158	quote.c	FUNCTION_20	IF_1
0x40007bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       160	quote.c	FUNCTION_20	DO_1	CALL_1
0x40007c0	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       160	quote.c	FUNCTION_20	DO_1	CALL_1
0x40007c4	          0x4889d6	                            mov rsi, rdx	       160	quote.c	FUNCTION_20	DO_1	CALL_1
0x40007c7	          0x4889c7	                            mov rdi, rax	       160	quote.c	FUNCTION_20	DO_1	CALL_1
0x40007ca	      0xe821feffff	                call sym.sq_dequote_step	       160	quote.c	FUNCTION_20	DO_1	CALL_1
0x40007cf	        0x488945f0	             mov qword [rbp - 0x10], rax	       160	quote.c	FUNCTION_20	DO_1	CALL_1
0x40007d3	      0x48837df000	               cmp qword [rbp - 0x10], 0	       161	quote.c	FUNCTION_20	DO_1	IF_2
0x40007d8	            0x750a	                           jne 0x40007e4	       161	quote.c	FUNCTION_20	DO_1	IF_2
0x40007da	      0xb8ffffffff	                     mov eax, 0xffffffff	       162	quote.c	FUNCTION_20	DO_1	IF_2
0x40007df	      0xe901010000	                           jmp 0x40008e5	       162	quote.c	FUNCTION_20	DO_1	IF_2
0x40007e4	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       163	quote.c	FUNCTION_20	DO_1	IF_3
0x40007e9	     0xf84ca000000	                            je 0x40008b9	       163	quote.c	FUNCTION_20	DO_1	IF_3
0x40007ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x40007f3	            0x8b00	                    mov eax, dword [rax]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x40007f5	          0x8d5001	                      lea edx, [rax + 1]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x40007f8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x40007fc	            0x8b00	                    mov eax, dword [rax]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x40007fe	            0x39c2	                            cmp edx, eax	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000800	     0xf8e8c000000	                           jle 0x4000892	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000806	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400080a	            0x8b00	                    mov eax, dword [rax]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400080c	          0x8d5010	                   lea edx, [rax + 0x10]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400080f	            0x89d0	                            mov eax, edx	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000811	             0x1c0	                            add eax, eax	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000813	             0x1d0	                            add eax, edx	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000815	            0x89c2	                            mov edx, eax	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000817	          0xc1ea1f	                           shr edx, 0x1f	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400081a	             0x1d0	                            add eax, edx	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400081c	            0xd1f8	                              sar eax, 1	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400081e	            0x89c2	                            mov edx, eax	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000820	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000824	            0x8b00	                    mov eax, dword [rax]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000826	          0x83c001	                              add eax, 1	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000829	            0x39c2	                            cmp edx, eax	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400082b	            0x7d11	                           jge 0x400083e	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400082d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000831	            0x8b00	                    mov eax, dword [rax]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000833	          0x8d5001	                      lea edx, [rax + 1]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000836	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400083a	            0x8910	                    mov dword [rax], edx	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400083c	            0xeb20	                           jmp 0x400085e	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400083e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000842	            0x8b00	                    mov eax, dword [rax]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000844	          0x8d5010	                   lea edx, [rax + 0x10]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000847	            0x89d0	                            mov eax, edx	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000849	             0x1c0	                            add eax, eax	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400084b	             0x1d0	                            add eax, edx	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400084d	            0x89c2	                            mov edx, eax	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400084f	          0xc1ea1f	                           shr edx, 0x1f	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000852	             0x1d0	                            add eax, edx	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000854	            0xd1f8	                              sar eax, 1	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000856	            0x89c2	                            mov edx, eax	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000858	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400085c	            0x8910	                    mov dword [rax], edx	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400085e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000862	            0x8b00	                    mov eax, dword [rax]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000864	            0x4898	                                    cdqe	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000866	          0x4889c6	                            mov rsi, rax	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000869	      0xbf08000000	                              mov edi, 8	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400086e	      0xe8cdf7ffff	                        call sym.st_mult	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000873	          0x4889c2	                            mov rdx, rax	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000876	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400087a	          0x488b00	                    mov rax, qword [rax]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400087d	          0x4889d6	                            mov rsi, rdx	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000880	          0x4889c7	                            mov rdi, rax	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000883	      0xe800000000	                          call 0x4000888	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000888	          0x4889c2	                            mov rdx, rax	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400088b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x400088f	          0x488910	                    mov qword [rax], rdx	       164	quote.c	FUNCTION_20	DO_1	IF_3	CALL_2
0x4000892	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       165	quote.c	FUNCTION_20	DO_1	IF_3
0x4000896	          0x488b30	                    mov rsi, qword [rax]	       165	quote.c	FUNCTION_20	DO_1	IF_3
0x4000899	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       165	quote.c	FUNCTION_20	DO_1	IF_3
0x400089d	            0x8b00	                    mov eax, dword [rax]	       165	quote.c	FUNCTION_20	DO_1	IF_3
0x400089f	          0x8d4801	                      lea ecx, [rax + 1]	       165	quote.c	FUNCTION_20	DO_1	IF_3
0x40008a2	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       165	quote.c	FUNCTION_20	DO_1	IF_3
0x40008a6	            0x890a	                    mov dword [rdx], ecx	       165	quote.c	FUNCTION_20	DO_1	IF_3
0x40008a8	            0x4898	                                    cdqe	       165	quote.c	FUNCTION_20	DO_1	IF_3
0x40008aa	        0x48c1e003	                              shl rax, 3	       165	quote.c	FUNCTION_20	DO_1	IF_3
0x40008ae	        0x488d1406	                    lea rdx, [rsi + rax]	       165	quote.c	FUNCTION_20	DO_1	IF_3
0x40008b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       165	quote.c	FUNCTION_20	DO_1	IF_3
0x40008b6	          0x488902	                    mov qword [rdx], rax	       165	quote.c	FUNCTION_20	DO_1	IF_3
0x40008b9	      0x48837db800	               cmp qword [rbp - 0x48], 0	       167	quote.c	FUNCTION_20	DO_1	IF_4
0x40008be	            0x7413	                            je 0x40008d3	       167	quote.c	FUNCTION_20	DO_1	IF_4
0x40008c0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       168	quote.c	FUNCTION_20	DO_1	CALL_3
0x40008c4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       168	quote.c	FUNCTION_20	DO_1	CALL_3
0x40008c8	          0x4889d6	                            mov rsi, rdx	       168	quote.c	FUNCTION_20	DO_1	CALL_3
0x40008cb	          0x4889c7	                            mov rdi, rax	       168	quote.c	FUNCTION_20	DO_1	CALL_3
0x40008ce	      0xe800000000	                          call 0x40008d3	       168	quote.c	FUNCTION_20	DO_1	CALL_3
0x40008d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       169	quote.c	FUNCTION_20	DO_1
0x40008d7	          0x4885c0	                           test rax, rax	       169	quote.c	FUNCTION_20	DO_1
0x40008da	     0xf85dcfeffff	                           jne 0x40007bc	       169	quote.c	FUNCTION_20	DO_1
0x40008e0	      0xb800000000	                              mov eax, 0	       171	quote.c	FUNCTION_20
0x40008e5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       172	quote.c	FUNCTION_20
0x40008e9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       172	quote.c	FUNCTION_20
0x40008f2	            0x7405	                            je 0x40008f9	       172	quote.c	FUNCTION_20
0x40008f4	      0xe800000000	                          call 0x40008f9	       172	quote.c	FUNCTION_20
0x40008f9	              0xc9	                                   leave	       172	quote.c	FUNCTION_20
0x40008fa	              0xc3	                                     ret	       172	quote.c	FUNCTION_20
sq_dequote_step	DO,1:CALL,1:SWITCH,1:IF,6:FOR,1:ELSE,0:WHILE,0:functions,0	104
0x40005f0	              0x55	                                push rbp	        98	quote.c	FUNCTION_18
0x40005f1	          0x4889e5	                            mov rbp, rsp	        98	quote.c	FUNCTION_18
0x40005f4	        0x4883ec30	                           sub rsp, 0x30	        98	quote.c	FUNCTION_18
0x40005f8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        98	quote.c	FUNCTION_18
0x40005fc	        0x488975d0	             mov qword [rbp - 0x30], rsi	        98	quote.c	FUNCTION_18
0x4000600	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        99	quote.c	FUNCTION_18
0x4000604	        0x488945f0	             mov qword [rbp - 0x10], rax	        99	quote.c	FUNCTION_18
0x4000608	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       100	quote.c	FUNCTION_18
0x400060c	        0x488945f8	                mov qword [rbp - 8], rax	       100	quote.c	FUNCTION_18
0x4000610	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	quote.c	FUNCTION_18	IF_1
0x4000614	           0xfb600	                   movzx eax, byte [rax]	       103	quote.c	FUNCTION_18	IF_1
0x4000617	            0x3c27	                            cmp al, 0x27	       103	quote.c	FUNCTION_18	IF_1
0x4000619	            0x740a	                            je 0x4000625	       103	quote.c	FUNCTION_18	IF_1
0x400061b	      0xb800000000	                              mov eax, 0	       104	quote.c	FUNCTION_18	IF_1
0x4000620	      0xe92e010000	                           jmp 0x4000753	       104	quote.c	FUNCTION_18	IF_1
0x4000625	      0x488345f801	                  add qword [rbp - 8], 1	       106	quote.c	FUNCTION_18	FOR_1
0x400062a	        0x488b45f8	                mov rax, qword [rbp - 8]	       106	quote.c	FUNCTION_18	FOR_1
0x400062e	           0xfb600	                   movzx eax, byte [rax]	       106	quote.c	FUNCTION_18	FOR_1
0x4000631	          0x8845ef	               mov byte [rbp - 0x11], al	       106	quote.c	FUNCTION_18	FOR_1
0x4000634	        0x807def00	                cmp byte [rbp - 0x11], 0	       107	quote.c	FUNCTION_18	FOR_1	IF_2
0x4000638	            0x750a	                           jne 0x4000644	       107	quote.c	FUNCTION_18	FOR_1	IF_2
0x400063a	      0xb800000000	                              mov eax, 0	       108	quote.c	FUNCTION_18	FOR_1	IF_2
0x400063f	      0xe90f010000	                           jmp 0x4000753	       108	quote.c	FUNCTION_18	FOR_1	IF_2
0x4000644	        0x807def27	            cmp byte [rbp - 0x11], 0x27 	       109	quote.c	FUNCTION_18	FOR_1	IF_3
0x4000648	            0x7417	                            je 0x4000661	       109	quote.c	FUNCTION_18	FOR_1	IF_3
0x400064a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       110	quote.c	FUNCTION_18	FOR_1	IF_3
0x400064e	        0x488d5001	                      lea rdx, [rax + 1]	       110	quote.c	FUNCTION_18	FOR_1	IF_3
0x4000652	        0x488955f0	             mov qword [rbp - 0x10], rdx	       110	quote.c	FUNCTION_18	FOR_1	IF_3
0x4000656	         0xfb655ef	            movzx edx, byte [rbp - 0x11]	       110	quote.c	FUNCTION_18	FOR_1	IF_3
0x400065a	            0x8810	                      mov byte [rax], dl	       110	quote.c	FUNCTION_18	FOR_1	IF_3
0x400065c	      0xe9ed000000	                           jmp 0x400074e	       111	quote.c	FUNCTION_18	FOR_1	IF_3
0x4000661	      0x488345f801	                  add qword [rbp - 8], 1	       114	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x4000666	        0x488b45f8	                mov rax, qword [rbp - 8]	       114	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x400066a	           0xfb600	                   movzx eax, byte [rax]	       114	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x400066d	           0xfbec0	                           movsx eax, al	       114	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x4000670	            0x85c0	                           test eax, eax	       114	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x4000672	            0x7407	                            je 0x400067b	       114	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x4000674	          0x83f85c	                           cmp eax, 0x5c	       114	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x4000677	            0x7424	                            je 0x400069d	       114	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x4000679	            0xeb67	                           jmp 0x40006e2	       114	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x400067b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       116	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x400067f	          0xc60000	                       mov byte [rax], 0	       116	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x4000682	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       117	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_4
0x4000687	            0x740b	                            je 0x4000694	       117	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_4
0x4000689	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       118	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_4
0x400068d	    0x48c700000000	                      mov qword [rax], 0	       118	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_4
0x4000694	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       119	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x4000698	      0xe9b6000000	                           jmp 0x4000753	       119	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x400069d	        0x488b45f8	                mov rax, qword [rbp - 8]	       127	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5	CALL_1
0x40006a1	        0x4883c001	                              add rax, 1	       127	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5	CALL_1
0x40006a5	           0xfb600	                   movzx eax, byte [rax]	       127	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5	CALL_1
0x40006a8	           0xfbec0	                           movsx eax, al	       127	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5	CALL_1
0x40006ab	            0x89c7	                            mov edi, eax	       127	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5	CALL_1
0x40006ad	      0xe853fbffff	                  call sym.need_bs_quote	       127	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5	CALL_1
0x40006b2	            0x85c0	                           test eax, eax	       127	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5	CALL_1
0x40006b4	            0x742c	                            je 0x40006e2	       127	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5	CALL_1
0x40006b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       127	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5	CALL_1
0x40006ba	        0x4883c002	                              add rax, 2	       127	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5	CALL_1
0x40006be	           0xfb600	                   movzx eax, byte [rax]	       127	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5	CALL_1
0x40006c1	            0x3c27	                            cmp al, 0x27	       127	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5	CALL_1
0x40006c3	            0x751d	                           jne 0x40006e2	       127	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5	CALL_1
0x40006c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       128	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5
0x40006c9	        0x488d5001	                      lea rdx, [rax + 1]	       128	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5
0x40006cd	        0x488955f0	             mov qword [rbp - 0x10], rdx	       128	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5
0x40006d1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       128	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5
0x40006d5	         0xfb65201	               movzx edx, byte [rdx + 1]	       128	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5
0x40006d9	            0x8810	                      mov byte [rax], dl	       128	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5
0x40006db	      0x488345f802	                  add qword [rbp - 8], 2	       129	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5
0x40006e0	            0xeb6c	                           jmp 0x400074e	       130	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_5
0x40006e2	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       134	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_6
0x40006e7	            0x741d	                            je 0x4000706	       134	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_6
0x40006e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       134	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_6
0x40006ed	           0xfb600	                   movzx eax, byte [rax]	       134	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_6
0x40006f0	           0xfb6c0	                           movzx eax, al	       134	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_6
0x40006f3	            0x4898	                                    cdqe	       134	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_6
0x40006f5	     0xfb680000000	                   movzx eax, byte [rax]	       134	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_6
0x40006fc	           0xfb6c0	                           movzx eax, al	       134	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_6
0x40006ff	          0x83e001	                              and eax, 1	       134	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_6
0x4000702	            0x85c0	                           test eax, eax	       134	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_6
0x4000704	            0x7507	                           jne 0x400070d	       134	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_6
0x4000706	      0xb800000000	                              mov eax, 0	       135	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_6
0x400070b	            0xeb46	                           jmp 0x4000753	       135	quote.c	FUNCTION_18	FOR_1	SWITCH_1	IF_6
0x400070d	      0x488345f801	                  add qword [rbp - 8], 1	       137	quote.c	FUNCTION_18	FOR_1	SWITCH_1	DO_1
0x4000712	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	quote.c	FUNCTION_18	FOR_1	SWITCH_1	DO_1
0x4000716	           0xfb600	                   movzx eax, byte [rax]	       137	quote.c	FUNCTION_18	FOR_1	SWITCH_1	DO_1
0x4000719	          0x8845ef	               mov byte [rbp - 0x11], al	       137	quote.c	FUNCTION_18	FOR_1	SWITCH_1	DO_1
0x400071c	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	       138	quote.c	FUNCTION_18	FOR_1	SWITCH_1	DO_1
0x4000720	           0xfb6c0	                           movzx eax, al	       138	quote.c	FUNCTION_18	FOR_1	SWITCH_1	DO_1
0x4000723	            0x4898	                                    cdqe	       138	quote.c	FUNCTION_18	FOR_1	SWITCH_1	DO_1
0x4000725	     0xfb680000000	                   movzx eax, byte [rax]	       138	quote.c	FUNCTION_18	FOR_1	SWITCH_1	DO_1
0x400072c	           0xfb6c0	                           movzx eax, al	       138	quote.c	FUNCTION_18	FOR_1	SWITCH_1	DO_1
0x400072f	          0x83e001	                              and eax, 1	       138	quote.c	FUNCTION_18	FOR_1	SWITCH_1	DO_1
0x4000732	            0x85c0	                           test eax, eax	       138	quote.c	FUNCTION_18	FOR_1	SWITCH_1	DO_1
0x4000734	            0x75d7	                           jne 0x400070d	       138	quote.c	FUNCTION_18	FOR_1	SWITCH_1	DO_1
0x4000736	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       139	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x400073a	          0xc60000	                       mov byte [rax], 0	       139	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x400073d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       140	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x4000741	        0x488b55f8	                mov rdx, qword [rbp - 8]	       140	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x4000745	          0x488910	                    mov qword [rax], rdx	       140	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x4000748	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       141	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x400074c	            0xeb05	                           jmp 0x4000753	       141	quote.c	FUNCTION_18	FOR_1	SWITCH_1
0x400074e	      0xe9d2feffff	                           jmp 0x4000625	       143	quote.c	FUNCTION_18	FOR_1
0x4000753	              0xc9	                                   leave	       144	quote.c	FUNCTION_18
0x4000754	              0xc3	                                     ret	       144	quote.c	FUNCTION_18
