ewah_iterator_next	IF,4:FOR,0:SWITCH,0:CALL,3:functions,0:WHILE,0:DO,0:ELSE,1	58
0x4000b50	        0x4883ec08	                              sub rsp, 8	       337	ewah_bitmap.c	FUNCTION_18
0x4000b54	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x4000b58	        0x488b5608	                mov rdx, qword [rsi + 8]	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x4000b5c	          0x4839d0	                            cmp rax, rdx	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x4000b5f	     0xf83be000000	                           jae 0x4000c23	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x4000b65	        0x488b4e18	            mov rcx, qword [rsi + 0x18] 	       341	ewah_bitmap.c	FUNCTION_18	IF_2
0x4000b69	        0x483b4e28	            cmp rcx, qword [rsi + 0x28] 	       341	ewah_bitmap.c	FUNCTION_18	IF_2
0x4000b6d	            0x731a	                           jae 0x4000b89	       341	ewah_bitmap.c	FUNCTION_18	IF_2
0x4000b6f	        0x4883c101	                              add rcx, 1	       342	ewah_bitmap.c	FUNCTION_18	IF_2
0x4000b73	        0x48894e18	             mov qword [rsi + 0x18], rcx	       342	ewah_bitmap.c	FUNCTION_18	IF_2
0x4000b77	        0x837e3800	               cmp dword [rsi + 0x38], 0	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x4000b7b	           0xf95c0	                                setne al	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x4000b7e	           0xfb6c0	                           movzx eax, al	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x4000b81	          0x48f7d8	                                 neg rax	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x4000b84	          0x488907	                    mov qword [rdi], rax	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x4000b87	            0xeb5b	                           jmp 0x4000be4	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x4000b89	        0x488b4e20	            mov rcx, qword [rsi + 0x20] 	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x4000b8d	        0x483b4e30	            cmp rcx, qword [rsi + 0x30] 	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x4000b91	            0x7219	                            jb 0x4000bac	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x4000b93	      0xb900000000	                              mov ecx, 0	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x4000b98	      0xba59010000	                          mov edx, 0x159	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x4000b9d	      0xbe00000000	                              mov esi, 0	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x4000ba2	      0xbf00000000	                              mov edi, 0	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x4000ba7	      0xe800000000	                          call 0x4000bac	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x4000bac	        0x4883c101	                              add rcx, 1	       347	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4000bb0	        0x48894e20	             mov qword [rsi + 0x20], rcx	       347	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4000bb4	        0x4883c001	                              add rax, 1	       348	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4000bb8	        0x48894610	             mov qword [rsi + 0x10], rax	       348	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4000bbc	          0x4839c2	                            cmp rdx, rax	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x4000bbf	            0x7719	                            ja 0x4000bda	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x4000bc1	      0xb900000000	                              mov ecx, 0	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x4000bc6	      0xba5e010000	                          mov edx, 0x15e	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x4000bcb	      0xbe00000000	                              mov esi, 0	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x4000bd0	      0xbf00000000	                              mov edi, 0	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x4000bd5	      0xe800000000	                          call 0x4000bda	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x4000bda	          0x488b16	                    mov rdx, qword [rsi]	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4000bdd	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4000be1	          0x488907	                    mov qword [rdi], rax	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4000be4	      0xb801000000	                              mov eax, 1	       360	ewah_bitmap.c	FUNCTION_18
0x4000be9	        0x488b5628	            mov rdx, qword [rsi + 0x28] 	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x4000bed	        0x48395618	            cmp qword [rsi + 0x18], rdx 	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x4000bf1	            0x7535	                           jne 0x4000c28	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x4000bf3	        0x488b4e30	            mov rcx, qword [rsi + 0x30] 	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x4000bf7	        0x48394e20	            cmp qword [rsi + 0x20], rcx 	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x4000bfb	            0x752b	                           jne 0x4000c28	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x4000bfd	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x4000c01	        0x488d5001	                      lea rdx, [rax + 1]	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x4000c05	        0x48895610	             mov qword [rsi + 0x10], rdx	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x4000c09	      0xb801000000	                              mov eax, 1	       360	ewah_bitmap.c	FUNCTION_18
0x4000c0e	        0x483b5608	                cmp rdx, qword [rsi + 8]	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x4000c12	            0x7314	                           jae 0x4000c28	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x4000c14	          0x4889f7	                            mov rdi, rsi	       357	ewah_bitmap.c	FUNCTION_18	IF_3	CALL_3
0x4000c17	      0xe824f4ffff	                   call sym.read_new_rlw	       357	ewah_bitmap.c	FUNCTION_18	IF_3	CALL_3
0x4000c1c	      0xb801000000	                              mov eax, 1	       360	ewah_bitmap.c	FUNCTION_18
0x4000c21	            0xeb05	                           jmp 0x4000c28	       360	ewah_bitmap.c	FUNCTION_18
0x4000c23	      0xb800000000	                              mov eax, 0	       339	ewah_bitmap.c	FUNCTION_18	IF_1
0x4000c28	        0x4883c408	                              add rsp, 8	       361	ewah_bitmap.c	FUNCTION_18
0x4000c2c	              0xc3	                                     ret	       361	ewah_bitmap.c	FUNCTION_18
add_literal	IF,1:FOR,0:SWITCH,0:CALL,8:functions,0:WHILE,0:DO,0:ELSE,0	115
0x4000151	            0x4155	                                push r13	       108	ewah_bitmap.c	FUNCTION_8
0x4000153	            0x4154	                                push r12	       108	ewah_bitmap.c	FUNCTION_8
0x4000155	              0x55	                                push rbp	       108	ewah_bitmap.c	FUNCTION_8
0x4000156	              0x53	                                push rbx	       108	ewah_bitmap.c	FUNCTION_8
0x4000157	        0x4883ec08	                              sub rsp, 8	       108	ewah_bitmap.c	FUNCTION_8
0x400015b	          0x4889fb	                            mov rbx, rdi	       108	ewah_bitmap.c	FUNCTION_8
0x400015e	          0x4889f5	                            mov rbp, rsi	       108	ewah_bitmap.c	FUNCTION_8
0x4000161	        0x488b7720	            mov rsi, qword [rdi + 0x20] 	       109	ewah_bitmap.c	FUNCTION_8	CALL_1
0x4000165	          0x488b3e	                    mov rdi, qword [rsi]	        68	ewok_rlw.h	FUNCTION_33
0x4000168	          0x4889f8	                            mov rax, rdi	        68	ewok_rlw.h	FUNCTION_33
0x400016b	        0x48c1e821	                           shr rax, 0x21	        68	ewok_rlw.h	FUNCTION_33
0x400016f	    0x483dfeffff7f	                     cmp rax, 0x7ffffffe	       111	ewah_bitmap.c	FUNCTION_8	IF_1
0x4000175	     0xf86b6000000	                           jbe 0x4000231	       111	ewah_bitmap.c	FUNCTION_8	IF_1
0x400017b	      0xbe00000000	                              mov esi, 0	       112	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_2
0x4000180	          0x4889df	                            mov rdi, rbx	       112	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_2
0x4000183	      0xe83dffffff	                call sym.buffer_push_rlw	       112	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_2
0x4000188	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       114	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_3
0x400018c	    0x48b8ffffffff	                 movabs rax, 0x3ffffffff	        74	ewok_rlw.h	FUNCTION_34
0x4000196	          0x482301	                    and rax, qword [rcx]	        74	ewok_rlw.h	FUNCTION_34
0x4000199	    0x48ba00000000	                 movabs rdx, 0x200000000	        74	ewok_rlw.h	FUNCTION_34
0x40001a3	          0x4809d0	                             or rax, rdx	        74	ewok_rlw.h	FUNCTION_34
0x40001a6	          0x488901	                    mov qword [rcx], rax	        74	ewok_rlw.h	FUNCTION_34
0x40001a9	        0x488b4308	                mov rax, qword [rbx + 8]	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x40001ad	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x40001b1	        0x488d4801	                      lea rcx, [rax + 1]	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x40001b5	          0x4839d1	                            cmp rcx, rdx	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x40001b8	            0x725a	                            jb 0x4000214	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x40001ba	        0x488d3440	                  lea rsi, [rax + rax*2]	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x40001be	          0x48d1ee	                              shr rsi, 1	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x40001c1	          0x4839f2	                            cmp rdx, rsi	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x40001c4	            0x734e	                           jae 0x4000214	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x40001c6	        0x4c8b6320	            mov r12, qword [rbx + 0x20] 	        35	ewah_bitmap.c	FUNCTION_3
0x40001ca	          0x4c8b2b	                    mov r13, qword [rbx]	        35	ewah_bitmap.c	FUNCTION_3
0x40001cd	        0x48897310	             mov qword [rbx + 0x10], rsi	        40	ewah_bitmap.c	FUNCTION_3
0x40001d1	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x40001db	          0x4839c6	                            cmp rsi, rax	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x40001de	            0x7617	                           jbe 0x40001f7	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x40001e0	          0x4889f2	                            mov rdx, rsi	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x40001e3	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x40001e8	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x40001ed	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x40001f2	      0xe800000000	                          call 0x40001f7	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x40001f7	        0x48c1e603	                              shl rsi, 3	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x40001fb	          0x4c89ef	                            mov rdi, r13	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x40001fe	      0xe800000000	                          call 0x4000203	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x4000203	          0x488903	                    mov qword [rbx], rax	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x4000206	          0x4d29ec	                            sub r12, r13	        42	ewah_bitmap.c	FUNCTION_3
0x4000209	        0x4983e4f8	             and r12, 0xfffffffffffffff8	        42	ewah_bitmap.c	FUNCTION_3
0x400020d	          0x4c01e0	                            add rax, r12	        42	ewah_bitmap.c	FUNCTION_3
0x4000210	        0x48894320	             mov qword [rbx + 0x20], rax	        42	ewah_bitmap.c	FUNCTION_3
0x4000214	          0x488b13	                    mov rdx, qword [rbx]	        50	ewah_bitmap.c	FUNCTION_4
0x4000217	        0x488b4308	                mov rax, qword [rbx + 8]	        50	ewah_bitmap.c	FUNCTION_4
0x400021b	        0x488d4801	                      lea rcx, [rax + 1]	        50	ewah_bitmap.c	FUNCTION_4
0x400021f	        0x48894b08	                mov qword [rbx + 8], rcx	        50	ewah_bitmap.c	FUNCTION_4
0x4000223	        0x48892cc2	            mov qword [rdx + rax*8], rbp	        50	ewah_bitmap.c	FUNCTION_4
0x4000227	      0xb802000000	                              mov eax, 2	       116	ewah_bitmap.c	FUNCTION_8	IF_1
0x400022c	      0xe9d4000000	                           jmp 0x4000305	       116	ewah_bitmap.c	FUNCTION_8	IF_1
0x4000231	        0x4883c001	                              add rax, 1	       119	ewah_bitmap.c	FUNCTION_8	CALL_5
0x4000235	          0x4889c1	                            mov rcx, rax	        74	ewok_rlw.h	FUNCTION_34
0x4000238	        0x48c1e121	                           shl rcx, 0x21	        74	ewok_rlw.h	FUNCTION_34
0x400023c	    0x48baffffffff	                 movabs rdx, 0x1ffffffff	        74	ewok_rlw.h	FUNCTION_34
0x4000246	          0x4809ca	                             or rdx, rcx	        74	ewok_rlw.h	FUNCTION_34
0x4000249	    0x48b900000000	          movabs rcx, 0xfffffffe00000000	        74	ewok_rlw.h	FUNCTION_34
0x4000253	          0x4809f9	                             or rcx, rdi	        74	ewok_rlw.h	FUNCTION_34
0x4000256	          0x4821ca	                            and rdx, rcx	        74	ewok_rlw.h	FUNCTION_34
0x4000259	          0x488916	                    mov qword [rsi], rdx	        74	ewok_rlw.h	FUNCTION_34
0x400025c	        0x4c8b6320	            mov r12, qword [rbx + 0x20] 	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x4000260	        0x498b1424	                    mov rdx, qword [r12]	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x4000264	        0x48c1ea21	                           shr rdx, 0x21	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x4000268	          0x4839d0	                            cmp rax, rdx	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x400026b	            0x7419	                            je 0x4000286	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x400026d	      0xb900000000	                              mov ecx, 0	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x4000272	      0xba7a000000	                           mov edx, 0x7a	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x4000277	      0xbe00000000	                              mov esi, 0	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x400027c	      0xbf00000000	                              mov edi, 0	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x4000281	      0xe800000000	                          call 0x4000286	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x4000286	        0x488b4308	                mov rax, qword [rbx + 8]	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x400028a	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x400028e	        0x488d4801	                      lea rcx, [rax + 1]	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x4000292	          0x4839d1	                            cmp rcx, rdx	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x4000295	            0x7256	                            jb 0x40002ed	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x4000297	        0x488d3440	                  lea rsi, [rax + rax*2]	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x400029b	          0x48d1ee	                              shr rsi, 1	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x400029e	          0x4839f2	                            cmp rdx, rsi	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x40002a1	            0x734a	                           jae 0x40002ed	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x40002a3	          0x4c8b2b	                    mov r13, qword [rbx]	        35	ewah_bitmap.c	FUNCTION_3
0x40002a6	        0x48897310	             mov qword [rbx + 0x10], rsi	        40	ewah_bitmap.c	FUNCTION_3
0x40002aa	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x40002b4	          0x4839c6	                            cmp rsi, rax	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x40002b7	            0x7617	                           jbe 0x40002d0	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x40002b9	          0x4889f2	                            mov rdx, rsi	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x40002bc	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x40002c1	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x40002c6	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x40002cb	      0xe800000000	                          call 0x40002d0	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x40002d0	        0x48c1e603	                              shl rsi, 3	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x40002d4	          0x4c89ef	                            mov rdi, r13	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x40002d7	      0xe800000000	                          call 0x40002dc	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x40002dc	          0x488903	                    mov qword [rbx], rax	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x40002df	          0x4d29ec	                            sub r12, r13	        42	ewah_bitmap.c	FUNCTION_3
0x40002e2	        0x4983e4f8	             and r12, 0xfffffffffffffff8	        42	ewah_bitmap.c	FUNCTION_3
0x40002e6	          0x4c01e0	                            add rax, r12	        42	ewah_bitmap.c	FUNCTION_3
0x40002e9	        0x48894320	             mov qword [rbx + 0x20], rax	        42	ewah_bitmap.c	FUNCTION_3
0x40002ed	          0x488b13	                    mov rdx, qword [rbx]	        50	ewah_bitmap.c	FUNCTION_4
0x40002f0	        0x488b4308	                mov rax, qword [rbx + 8]	        50	ewah_bitmap.c	FUNCTION_4
0x40002f4	        0x488d4801	                      lea rcx, [rax + 1]	        50	ewah_bitmap.c	FUNCTION_4
0x40002f8	        0x48894b08	                mov qword [rbx + 8], rcx	        50	ewah_bitmap.c	FUNCTION_4
0x40002fc	        0x48892cc2	            mov qword [rdx + rax*8], rbp	        50	ewah_bitmap.c	FUNCTION_4
0x4000300	      0xb801000000	                              mov eax, 1	       125	ewah_bitmap.c	FUNCTION_8
0x4000305	        0x4883c408	                              add rsp, 8	       126	ewah_bitmap.c	FUNCTION_8
0x4000309	              0x5b	                                 pop rbx	       126	ewah_bitmap.c	FUNCTION_8
0x400030a	              0x5d	                                 pop rbp	       126	ewah_bitmap.c	FUNCTION_8
0x400030b	            0x415c	                                 pop r12	       126	ewah_bitmap.c	FUNCTION_8
0x400030d	            0x415d	                                 pop r13	       126	ewah_bitmap.c	FUNCTION_8
0x400030f	              0xc3	                                     ret	       126	ewah_bitmap.c	FUNCTION_8
read_new_rlw	IF,2:FOR,0:SWITCH,0:CALL,3:functions,0:WHILE,1:DO,0:ELSE,1	38
0x4000040	    0x48c747200000	               mov qword [rdi + 0x20], 0	       314	ewah_bitmap.c	FUNCTION_17
0x4000048	    0x48c747180000	               mov qword [rdi + 0x18], 0	       315	ewah_bitmap.c	FUNCTION_17
0x4000050	          0x4c8b07	                     mov r8, qword [rdi]	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0x4000053	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0x4000057	        0x498d34c0	                   lea rsi, [r8 + rax*8]	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0x400005b	          0x488b16	                    mov rdx, qword [rsi]	        63	ewok_rlw.h	FUNCTION_32
0x400005e	          0x48d1ea	                              shr rdx, 1	        63	ewok_rlw.h	FUNCTION_32
0x4000061	            0x89d2	                            mov edx, edx	        63	ewok_rlw.h	FUNCTION_32
0x4000063	        0x48895728	             mov qword [rdi + 0x28], rdx	       320	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_1
0x4000067	          0x488b0e	                    mov rcx, qword [rsi]	        68	ewok_rlw.h	FUNCTION_33
0x400006a	        0x48c1e921	                           shr rcx, 0x21	        68	ewok_rlw.h	FUNCTION_33
0x400006e	        0x48894f30	             mov qword [rdi + 0x30], rcx	       321	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_2
0x4000072	          0x488b36	                    mov rsi, qword [rsi]	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0x4000075	          0x83e601	                              and esi, 1	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0x4000078	          0x897738	             mov dword [rdi + 0x38], esi	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0x400007b	          0x4809ca	                             or rdx, rcx	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0x400007e	            0x7543	                           jne 0x40000c3	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0x4000080	        0x4c8b5708	                mov r10, qword [rdi + 8]	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x4000084	        0x4d8d4aff	                       lea r9, [r10 - 1]	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x4000088	          0x4939c1	                             cmp r9, rax	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x400008b	            0x7632	                           jbe 0x40000bf	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x400008d	        0x4883c001	                              add rax, 1	       328	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x4000091	        0x48894710	             mov qword [rdi + 0x10], rax	       328	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x4000095	        0x498b14c0	             mov rdx, qword [r8 + rax*8]	        63	ewok_rlw.h	FUNCTION_32
0x4000099	          0x48d1ea	                              shr rdx, 1	        63	ewok_rlw.h	FUNCTION_32
0x400009c	            0x89d2	                            mov edx, edx	        63	ewok_rlw.h	FUNCTION_32
0x400009e	        0x48895728	             mov qword [rdi + 0x28], rdx	       320	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_1
0x40000a2	        0x498b0cc0	             mov rcx, qword [r8 + rax*8]	        68	ewok_rlw.h	FUNCTION_33
0x40000a6	        0x48c1e921	                           shr rcx, 0x21	        68	ewok_rlw.h	FUNCTION_33
0x40000aa	        0x48894f30	             mov qword [rdi + 0x30], rcx	       321	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_2
0x40000ae	        0x418b34c0	             mov esi, dword [r8 + rax*8]	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0x40000b2	          0x83e601	                              and esi, 1	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0x40000b5	          0x897738	             mov dword [rdi + 0x38], esi	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0x40000b8	          0x4809d1	                             or rcx, rdx	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0x40000bb	            0x74cb	                            je 0x4000088	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0x40000bd	            0xf3c3	                                     ret	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0x40000bf	        0x4c895710	             mov qword [rdi + 0x10], r10	       330	ewah_bitmap.c	FUNCTION_17	WHILE_1	ELSE_1
0x40000c3	            0xf3c3	                                     ret	       330	ewah_bitmap.c	FUNCTION_17	WHILE_1	ELSE_1
ewah_or	IF,4:FOR,1:SWITCH,0:CALL,18:functions,0:WHILE,2:DO,0:ELSE,3	116
0x40011ea	            0x4156	                                push r14	       607	ewah_bitmap.c	FUNCTION_24
0x40011ec	            0x4155	                                push r13	       607	ewah_bitmap.c	FUNCTION_24
0x40011ee	            0x4154	                                push r12	       607	ewah_bitmap.c	FUNCTION_24
0x40011f0	              0x55	                                push rbp	       607	ewah_bitmap.c	FUNCTION_24
0x40011f1	              0x53	                                push rbx	       607	ewah_bitmap.c	FUNCTION_24
0x40011f2	        0x4883c480	             add rsp, 0xffffffffffffff80	       607	ewah_bitmap.c	FUNCTION_24
0x40011f6	          0x4989fd	                            mov r13, rdi	       607	ewah_bitmap.c	FUNCTION_24
0x40011f9	          0x4989f4	                            mov r12, rsi	       607	ewah_bitmap.c	FUNCTION_24
0x40011fc	          0x4889d5	                            mov rbp, rdx	       607	ewah_bitmap.c	FUNCTION_24
0x40011ff	    0x64488b042528	                mov rax, qword fs:[0x28]	       607	ewah_bitmap.c	FUNCTION_24
0x4001208	      0x4889442478	             mov qword [rsp + 0x78], rax	       607	ewah_bitmap.c	FUNCTION_24
0x400120d	            0x31c0	                            xor eax, eax	       607	ewah_bitmap.c	FUNCTION_24
0x400120f	          0x4889fe	                            mov rsi, rdi	       612	ewah_bitmap.c	FUNCTION_24	CALL_1
0x4001212	          0x4889e7	                            mov rdi, rsp	       612	ewah_bitmap.c	FUNCTION_24	CALL_1
0x4001215	      0xe800000000	                          call 0x400121a	       612	ewah_bitmap.c	FUNCTION_24	CALL_1
0x400121a	          0x4c89e6	                            mov rsi, r12	       613	ewah_bitmap.c	FUNCTION_24	CALL_2
0x400121d	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       613	ewah_bitmap.c	FUNCTION_24	CALL_2
0x4001222	      0xe800000000	                          call 0x4001227	       613	ewah_bitmap.c	FUNCTION_24	CALL_2
0x4001227	      0xe9fd000000	                           jmp 0x4001329	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x400122c	        0x3b44246c	            cmp eax, dword [rsp + 0x6c] 	       619	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x4001230	            0x7c0a	                            jl 0x400123c	       619	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x4001232	          0x4889e3	                            mov rbx, rsp	       624	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_1
0x4001235	      0x4c8d742440	                   lea r14, [rsp + 0x40]	       623	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_1
0x400123a	            0xeb08	                           jmp 0x4001244	       623	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_1
0x400123c	      0x488d5c2440	                   lea rbx, [rsp + 0x40]	       621	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x4001241	          0x4989e6	                            mov r14, rsp	       620	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x4001244	        0x837b3400	               cmp dword [rbx + 0x34], 0	       627	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x4001248	            0x742b	                            je 0x4001275	       627	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x400124a	        0x4863532c	         movsxd rdx, dword [rbx + 0x2c] 	       628	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_5
0x400124e	      0xbe00000000	                              mov esi, 0	       628	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_5
0x4001253	          0x4889ef	                            mov rdi, rbp	       628	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_5
0x4001256	      0xe800000000	                          call 0x400125b	       628	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_5
0x400125b	        0x4863732c	         movsxd rsi, dword [rbx + 0x2c] 	       630	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_6
0x400125f	          0x4c89f7	                            mov rdi, r14	       630	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_6
0x4001262	      0xe800000000	                          call 0x4001267	       630	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_6
0x4001267	        0x4863732c	         movsxd rsi, dword [rbx + 0x2c] 	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x400126b	          0x4889df	                            mov rdi, rbx	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x400126e	      0xe800000000	                          call 0x4001273	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001273	            0xeb34	                           jmp 0x40012a9	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001275	        0x4863532c	         movsxd rdx, dword [rbx + 0x2c] 	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001279	      0xb900000000	                              mov ecx, 0	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x400127e	          0x4889ee	                            mov rsi, rbp	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001281	          0x4c89f7	                            mov rdi, r14	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001284	      0xe800000000	                          call 0x4001289	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001289	        0x4863532c	         movsxd rdx, dword [rbx + 0x2c] 	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x400128d	          0x4829c2	                            sub rdx, rax	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001290	      0xbe00000000	                              mov esi, 0	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001295	          0x4889ef	                            mov rdi, rbp	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001298	      0xe800000000	                          call 0x400129d	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x400129d	        0x4863732c	         movsxd rsi, dword [rbx + 0x2c] 	       639	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x40012a1	          0x4889df	                            mov rdi, rbx	       639	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x40012a4	      0xe800000000	                          call 0x40012a9	       639	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x40012a9	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x40012ad	            0x85c0	                           test eax, eax	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x40012af	     0xf8f77ffffff	                            jg 0x400122c	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x40012b5	      0x837c246c00	               cmp dword [rsp + 0x6c], 0	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x40012ba	     0xf8f6cffffff	                            jg 0x400122c	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x40012c0	      0x4863542468	         movsxd rdx, dword [rsp + 0x68] 	        25	ewah_bitmap.c	FUNCTION_1
0x40012c5	      0x4863442428	         movsxd rax, dword [rsp + 0x28] 	        25	ewah_bitmap.c	FUNCTION_1
0x40012ca	          0x4839c2	                            cmp rdx, rax	        25	ewah_bitmap.c	FUNCTION_1
0x40012cd	        0x480f46c2	                         cmovbe rax, rdx	        25	ewah_bitmap.c	FUNCTION_1
0x40012d1	          0x4889c3	                            mov rbx, rax	        25	ewah_bitmap.c	FUNCTION_1
0x40012d4	          0x4885c0	                           test rax, rax	       648	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3
0x40012d7	            0x7450	                            je 0x4001329	       648	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3
0x40012d9	    0x41be00000000	                             mov r14d, 0	       648	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3
0x40012df	          0x4c89f1	                            mov rcx, r14	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x40012e2	      0x48034c2418	             add rcx, qword [rsp + 0x18]	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x40012e7	          0x4c89f2	                            mov rdx, r14	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x40012ea	      0x4803542458	             add rdx, qword [rsp + 0x58]	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x40012ef	        0x488b0424	                    mov rax, qword [rsp]	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x40012f3	        0x488b34c8	            mov rsi, qword [rax + rcx*8]	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x40012f7	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x40012fc	        0x480b34d0	             or rsi, qword [rax + rdx*8]	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x4001300	          0x4889ef	                            mov rdi, rbp	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x4001303	      0xe800000000	                          call 0x4001308	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x4001308	        0x4983c601	                              add r14, 1	       651	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x400130c	          0x4939de	                            cmp r14, rbx	       651	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x400130f	            0x72ce	                            jb 0x40012df	       651	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001311	          0x4889de	                            mov rsi, rbx	       658	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_13
0x4001314	          0x4889e7	                            mov rdi, rsp	       658	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_13
0x4001317	      0xe800000000	                          call 0x400131c	       658	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_13
0x400131c	          0x4889de	                            mov rsi, rbx	       659	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_14
0x400131f	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       659	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_14
0x4001324	      0xe800000000	                          call 0x4001329	       659	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_14
0x4001329	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x400132d	         0x3442428	             add eax, dword [rsp + 0x28]	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x4001331	            0x7427	                            je 0x400135a	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x4001333	        0x8b442468	            mov eax, dword [rsp + 0x68] 	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x4001337	         0x344246c	             add eax, dword [rsp + 0x6c]	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x400133b	     0xf8568ffffff	                           jne 0x40012a9	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x4001341	      0xb900000000	                              mov ecx, 0	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x4001346	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x400134d	          0x4889ee	                            mov rsi, rbp	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x4001350	          0x4889e7	                            mov rdi, rsp	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x4001353	      0xe800000000	                          call 0x4001358	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x4001358	            0xeb19	                           jmp 0x4001373	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x400135a	      0xb900000000	                              mov ecx, 0	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x400135f	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x4001366	          0x4889ee	                            mov rsi, rbp	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x4001369	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x400136e	      0xe800000000	                          call 0x4001373	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x4001373	        0x498b4518	            mov rax, qword [r13 + 0x18] 	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x4001377	      0x4939442418	            cmp qword [r12 + 0x18], rax 	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x400137c	    0x490f43442418	          cmovae rax, qword [r12 + 0x18]	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x4001382	        0x48894518	            mov qword [rbp + 0x18], rax 	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x4001386	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       669	ewah_bitmap.c	FUNCTION_24
0x400138b	    0x644833042528	                xor rax, qword fs:[0x28]	       669	ewah_bitmap.c	FUNCTION_24
0x4001394	            0x7405	                            je 0x400139b	       669	ewah_bitmap.c	FUNCTION_24
0x4001396	      0xe800000000	                          call 0x400139b	       669	ewah_bitmap.c	FUNCTION_24
0x400139b	        0x4883ec80	             sub rsp, 0xffffffffffffff80	       669	ewah_bitmap.c	FUNCTION_24
0x400139f	              0x5b	                                 pop rbx	       669	ewah_bitmap.c	FUNCTION_24
0x40013a0	              0x5d	                                 pop rbp	       669	ewah_bitmap.c	FUNCTION_24
0x40013a1	            0x415c	                                 pop r12	       669	ewah_bitmap.c	FUNCTION_24
0x40013a3	            0x415d	                                 pop r13	       669	ewah_bitmap.c	FUNCTION_24
0x40013a5	            0x415e	                                 pop r14	       669	ewah_bitmap.c	FUNCTION_24
0x40013a7	              0xc3	                                     ret	       669	ewah_bitmap.c	FUNCTION_24
ewah_xor	IF,3:FOR,1:SWITCH,0:CALL,15:functions,0:WHILE,2:DO,0:ELSE,2	105
0x4000cde	            0x4156	                                push r14	       402	ewah_bitmap.c	FUNCTION_21
0x4000ce0	            0x4155	                                push r13	       402	ewah_bitmap.c	FUNCTION_21
0x4000ce2	            0x4154	                                push r12	       402	ewah_bitmap.c	FUNCTION_21
0x4000ce4	              0x55	                                push rbp	       402	ewah_bitmap.c	FUNCTION_21
0x4000ce5	              0x53	                                push rbx	       402	ewah_bitmap.c	FUNCTION_21
0x4000ce6	        0x4883c480	             add rsp, 0xffffffffffffff80	       402	ewah_bitmap.c	FUNCTION_21
0x4000cea	          0x4989fe	                            mov r14, rdi	       402	ewah_bitmap.c	FUNCTION_21
0x4000ced	          0x4989f5	                            mov r13, rsi	       402	ewah_bitmap.c	FUNCTION_21
0x4000cf0	          0x4989d4	                            mov r12, rdx	       402	ewah_bitmap.c	FUNCTION_21
0x4000cf3	    0x64488b042528	                mov rax, qword fs:[0x28]	       402	ewah_bitmap.c	FUNCTION_21
0x4000cfc	      0x4889442478	             mov qword [rsp + 0x78], rax	       402	ewah_bitmap.c	FUNCTION_21
0x4000d01	            0x31c0	                            xor eax, eax	       402	ewah_bitmap.c	FUNCTION_21
0x4000d03	          0x4889fe	                            mov rsi, rdi	       407	ewah_bitmap.c	FUNCTION_21	CALL_1
0x4000d06	          0x4889e7	                            mov rdi, rsp	       407	ewah_bitmap.c	FUNCTION_21	CALL_1
0x4000d09	      0xe800000000	                          call 0x4000d0e	       407	ewah_bitmap.c	FUNCTION_21	CALL_1
0x4000d0e	          0x4c89ee	                            mov rsi, r13	       408	ewah_bitmap.c	FUNCTION_21	CALL_2
0x4000d11	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       408	ewah_bitmap.c	FUNCTION_21	CALL_2
0x4000d16	      0xe800000000	                          call 0x4000d1b	       408	ewah_bitmap.c	FUNCTION_21	CALL_2
0x4000d1b	      0xe9c6000000	                           jmp 0x4000de6	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x4000d20	        0x3b44246c	            cmp eax, dword [rsp + 0x6c] 	       416	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x4000d24	            0x7c0a	                            jl 0x4000d30	       416	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x4000d26	          0x4889e3	                            mov rbx, rsp	       421	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	ELSE_1
0x4000d29	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       420	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	ELSE_1
0x4000d2e	            0xeb08	                           jmp 0x4000d38	       420	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	ELSE_1
0x4000d30	      0x488d5c2440	                   lea rbx, [rsp + 0x40]	       418	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x4000d35	          0x4889e7	                            mov rdi, rsp	       417	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x4000d38	        0x837b3400	               cmp dword [rbx + 0x34], 0	       424	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x4000d3c	        0x400f95c5	                               setne bpl	       424	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x4000d40	        0x400fb6ed	                          movzx ebp, bpl	       424	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x4000d44	        0x4863532c	         movsxd rdx, dword [rbx + 0x2c] 	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x4000d48	            0x89e9	                            mov ecx, ebp	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x4000d4a	          0x4c89e6	                            mov rsi, r12	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x4000d4d	      0xe800000000	                          call 0x4000d52	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x4000d52	        0x4863532c	         movsxd rdx, dword [rbx + 0x2c] 	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x4000d56	          0x4829c2	                            sub rdx, rax	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x4000d59	            0x89ee	                            mov esi, ebp	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x4000d5b	          0x4c89e7	                            mov rdi, r12	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x4000d5e	      0xe800000000	                          call 0x4000d63	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x4000d63	        0x4863732c	         movsxd rsi, dword [rbx + 0x2c] 	       431	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_7
0x4000d67	          0x4889df	                            mov rdi, rbx	       431	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_7
0x4000d6a	      0xe800000000	                          call 0x4000d6f	       431	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_7
0x4000d6f	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x4000d73	            0x85c0	                           test eax, eax	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x4000d75	            0x7fa9	                            jg 0x4000d20	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x4000d77	      0x837c246c00	               cmp dword [rsp + 0x6c], 0	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x4000d7c	            0x7fa2	                            jg 0x4000d20	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x4000d7e	      0x4863542468	         movsxd rdx, dword [rsp + 0x68] 	        25	ewah_bitmap.c	FUNCTION_1
0x4000d83	      0x4863442428	         movsxd rax, dword [rsp + 0x28] 	        25	ewah_bitmap.c	FUNCTION_1
0x4000d88	          0x4839c2	                            cmp rdx, rax	        25	ewah_bitmap.c	FUNCTION_1
0x4000d8b	        0x480f46c2	                         cmovbe rax, rdx	        25	ewah_bitmap.c	FUNCTION_1
0x4000d8f	          0x4889c3	                            mov rbx, rax	        25	ewah_bitmap.c	FUNCTION_1
0x4000d92	          0x4885c0	                           test rax, rax	       439	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2
0x4000d95	            0x744f	                            je 0x4000de6	       439	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2
0x4000d97	      0xbd00000000	                              mov ebp, 0	       439	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2
0x4000d9c	          0x4889e9	                            mov rcx, rbp	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x4000d9f	      0x48034c2418	             add rcx, qword [rsp + 0x18]	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x4000da4	          0x4889ea	                            mov rdx, rbp	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x4000da7	      0x4803542458	             add rdx, qword [rsp + 0x58]	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x4000dac	        0x488b0424	                    mov rax, qword [rsp]	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x4000db0	        0x488b34c8	            mov rsi, qword [rax + rcx*8]	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x4000db4	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x4000db9	        0x483334d0	            xor rsi, qword [rax + rdx*8]	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x4000dbd	          0x4c89e7	                            mov rdi, r12	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x4000dc0	      0xe800000000	                          call 0x4000dc5	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x4000dc5	        0x4883c501	                              add rbp, 1	       442	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x4000dc9	          0x4839dd	                            cmp rbp, rbx	       442	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x4000dcc	            0x72ce	                            jb 0x4000d9c	       442	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x4000dce	          0x4889de	                            mov rsi, rbx	       449	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_10
0x4000dd1	          0x4889e7	                            mov rdi, rsp	       449	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_10
0x4000dd4	      0xe800000000	                          call 0x4000dd9	       449	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_10
0x4000dd9	          0x4889de	                            mov rsi, rbx	       450	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_11
0x4000ddc	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       450	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_11
0x4000de1	      0xe800000000	                          call 0x4000de6	       450	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_11
0x4000de6	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x4000dea	         0x3442428	             add eax, dword [rsp + 0x28]	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x4000dee	            0x7427	                            je 0x4000e17	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x4000df0	        0x8b442468	            mov eax, dword [rsp + 0x68] 	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x4000df4	         0x344246c	             add eax, dword [rsp + 0x6c]	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x4000df8	     0xf8571ffffff	                           jne 0x4000d6f	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x4000dfe	      0xb900000000	                              mov ecx, 0	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x4000e03	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x4000e0a	          0x4c89e6	                            mov rsi, r12	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x4000e0d	          0x4889e7	                            mov rdi, rsp	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x4000e10	      0xe800000000	                          call 0x4000e15	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x4000e15	            0xeb19	                           jmp 0x4000e30	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x4000e17	      0xb900000000	                              mov ecx, 0	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x4000e1c	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x4000e23	          0x4c89e6	                            mov rsi, r12	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x4000e26	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x4000e2b	      0xe800000000	                          call 0x4000e30	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x4000e30	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x4000e34	        0x49394518	            cmp qword [r13 + 0x18], rax 	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x4000e38	      0x490f434518	          cmovae rax, qword [r13 + 0x18]	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x4000e3d	      0x4989442418	             mov qword [r12 + 0x18], rax	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x4000e42	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       460	ewah_bitmap.c	FUNCTION_21
0x4000e47	    0x644833042528	                xor rax, qword fs:[0x28]	       460	ewah_bitmap.c	FUNCTION_21
0x4000e50	            0x7405	                            je 0x4000e57	       460	ewah_bitmap.c	FUNCTION_21
0x4000e52	      0xe800000000	                          call 0x4000e57	       460	ewah_bitmap.c	FUNCTION_21
0x4000e57	        0x4883ec80	             sub rsp, 0xffffffffffffff80	       460	ewah_bitmap.c	FUNCTION_21
0x4000e5b	              0x5b	                                 pop rbx	       460	ewah_bitmap.c	FUNCTION_21
0x4000e5c	              0x5d	                                 pop rbp	       460	ewah_bitmap.c	FUNCTION_21
0x4000e5d	            0x415c	                                 pop r12	       460	ewah_bitmap.c	FUNCTION_21
0x4000e5f	            0x415d	                                 pop r13	       460	ewah_bitmap.c	FUNCTION_21
0x4000e61	            0x415e	                                 pop r14	       460	ewah_bitmap.c	FUNCTION_21
0x4000e63	              0xc3	                                     ret	       460	ewah_bitmap.c	FUNCTION_21
ewah_new	IF,0:FOR,0:SWITCH,0:CALL,3:functions,0:WHILE,0:DO,0:ELSE,0	13
0x4000afd	              0x53	                                push rbx	       280	ewah_bitmap.c	FUNCTION_14
0x4000afe	      0xbf28000000	                           mov edi, 0x28	       283	ewah_bitmap.c	FUNCTION_14	CALL_1
0x4000b03	      0xe800000000	                          call 0x4000b08	       283	ewah_bitmap.c	FUNCTION_14	CALL_1
0x4000b08	          0x4889c3	                            mov rbx, rax	       283	ewah_bitmap.c	FUNCTION_14	CALL_1
0x4000b0b	    0x48c740102000	           mov qword [rax + 0x10], 0x20 	       284	ewah_bitmap.c	FUNCTION_14
0x4000b13	      0xbf00010000	                          mov edi, 0x100	       285	ewah_bitmap.c	FUNCTION_14	CALL_2
0x4000b18	      0xe800000000	                          call 0x4000b1d	       285	ewah_bitmap.c	FUNCTION_14	CALL_2
0x4000b1d	          0x488903	                    mov qword [rbx], rax	       285	ewah_bitmap.c	FUNCTION_14	CALL_2
0x4000b20	          0x4889df	                            mov rdi, rbx	       287	ewah_bitmap.c	FUNCTION_14	CALL_3
0x4000b23	      0xe800000000	                          call 0x4000b28	       287	ewah_bitmap.c	FUNCTION_14	CALL_3
0x4000b28	          0x4889d8	                            mov rax, rbx	       289	ewah_bitmap.c	FUNCTION_14
0x4000b2b	              0x5b	                                 pop rbx	       289	ewah_bitmap.c	FUNCTION_14
0x4000b2c	              0xc3	                                     ret	       289	ewah_bitmap.c	FUNCTION_14
ewah_add_empty_words	IF,1:FOR,0:SWITCH,0:CALL,1:functions,0:WHILE,0:DO,0:ELSE,0	10
0x4000689	      0xb800000000	                              mov eax, 0	       101	ewah_bitmap.c	FUNCTION_7	IF_1
0x400068e	          0x4885d2	                           test rdx, rdx	       100	ewah_bitmap.c	FUNCTION_7	IF_1
0x4000691	            0x7418	                            je 0x40006ab	       100	ewah_bitmap.c	FUNCTION_7	IF_1
0x4000693	        0x4883ec08	                              sub rsp, 8	        99	ewah_bitmap.c	FUNCTION_7
0x4000697	          0x4889d0	                            mov rax, rdx	       103	ewah_bitmap.c	FUNCTION_7
0x400069a	        0x48c1e006	                              shl rax, 6	       103	ewah_bitmap.c	FUNCTION_7
0x400069e	        0x48014718	            add qword [rdi + 0x18], rax 	       103	ewah_bitmap.c	FUNCTION_7
0x40006a2	      0xe865feffff	                call sym.add_empty_words	       104	ewah_bitmap.c	FUNCTION_7	CALL_1
0x40006a7	        0x4883c408	                              add rsp, 8	       105	ewah_bitmap.c	FUNCTION_7
0x40006ab	            0xf3c3	                                     ret	       105	ewah_bitmap.c	FUNCTION_7
add_empty_word	IF,2:FOR,0:SWITCH,0:CALL,24:functions,0:WHILE,0:DO,0:ELSE,1	139
0x4000310	              0x55	                                push rbp	       165	ewah_bitmap.c	FUNCTION_10
0x4000311	              0x53	                                push rbx	       165	ewah_bitmap.c	FUNCTION_10
0x4000312	        0x4883ec08	                              sub rsp, 8	       165	ewah_bitmap.c	FUNCTION_10
0x4000316	          0x4889fb	                            mov rbx, rdi	       165	ewah_bitmap.c	FUNCTION_10
0x4000319	            0x89f5	                            mov ebp, esi	       165	ewah_bitmap.c	FUNCTION_10
0x400031b	        0x488b7720	            mov rsi, qword [rdi + 0x20] 	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x400031f	          0x488b0e	                    mov rcx, qword [rsi]	        68	ewok_rlw.h	FUNCTION_33
0x4000322	          0x4889c8	                            mov rax, rcx	        68	ewok_rlw.h	FUNCTION_33
0x4000325	        0x48c1e821	                           shr rax, 0x21	        68	ewok_rlw.h	FUNCTION_33
0x4000329	          0x4889ca	                            mov rdx, rcx	        63	ewok_rlw.h	FUNCTION_32
0x400032c	          0x48d1ea	                              shr rdx, 1	        63	ewok_rlw.h	FUNCTION_32
0x400032f	            0x89d2	                            mov edx, edx	        63	ewok_rlw.h	FUNCTION_32
0x4000331	          0x4885c0	                           test rax, rax	       169	ewah_bitmap.c	FUNCTION_10	IF_1
0x4000334	            0x7540	                           jne 0x4000376	       169	ewah_bitmap.c	FUNCTION_10	IF_1
0x4000336	          0x4885d2	                           test rdx, rdx	       169	ewah_bitmap.c	FUNCTION_10	IF_1
0x4000339	            0x753b	                           jne 0x4000376	       169	ewah_bitmap.c	FUNCTION_10	IF_1
0x400033b	            0x85ed	                           test ebp, ebp	        39	ewok_rlw.h	FUNCTION_29	IF_1
0x400033d	            0x7409	                            je 0x4000348	        39	ewok_rlw.h	FUNCTION_29	IF_1
0x400033f	        0x4883c901	                               or rcx, 1	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x4000343	          0x48890e	                    mov qword [rsi], rcx	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x4000346	            0xeb07	                           jmp 0x400034f	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x4000348	        0x4883e1fe	             and rcx, 0xfffffffffffffffe	        42	ewok_rlw.h	FUNCTION_29	ELSE_1
0x400034c	          0x48890e	                    mov qword [rsi], rcx	        42	ewok_rlw.h	FUNCTION_29	ELSE_1
0x400034f	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	        34	ewok_rlw.h	FUNCTION_28
0x4000353	          0x488b09	                    mov rcx, qword [rcx]	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x4000356	          0x83e101	                              and ecx, 1	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x4000359	            0x39cd	                            cmp ebp, ecx	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x400035b	            0x7419	                            je 0x4000376	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x400035d	      0xb900000000	                              mov ecx, 0	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x4000362	      0xbaab000000	                           mov edx, 0xab	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x4000367	      0xbe00000000	                              mov esi, 0	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x400036c	      0xbf00000000	                              mov edi, 0	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x4000371	      0xe800000000	                          call 0x4000376	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x4000376	          0x4885c0	                           test rax, rax	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x4000379	            0x7570	                           jne 0x40003eb	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x400037b	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x400037f	          0x488b31	                    mov rsi, qword [rcx]	        34	ewok_rlw.h	FUNCTION_28
0x4000382	            0x89f7	                            mov edi, esi	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x4000384	          0x83e701	                              and edi, 1	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x4000387	            0x39ef	                            cmp edi, ebp	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x4000389	            0x7560	                           jne 0x40003eb	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x400038b	      0xbffeffffff	                     mov edi, 0xfffffffe	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x4000390	          0x4839fa	                            cmp rdx, rdi	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x4000393	            0x7756	                            ja 0x40003eb	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x4000395	        0x4883c201	                              add rdx, 1	       176	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_7
0x4000399	        0x4c8d0412	                     lea r8, [rdx + rdx]	        58	ewok_rlw.h	FUNCTION_31
0x400039d	    0x48bf01000000	          movabs rdi, 0xfffffffe00000001	        58	ewok_rlw.h	FUNCTION_31
0x40003a7	          0x4909f8	                              or r8, rdi	        58	ewok_rlw.h	FUNCTION_31
0x40003aa	    0x48bffeffffff	                 movabs rdi, 0x1fffffffe	        58	ewok_rlw.h	FUNCTION_31
0x40003b4	          0x4809fe	                             or rsi, rdi	        58	ewok_rlw.h	FUNCTION_31
0x40003b7	          0x4c21c6	                             and rsi, r8	        58	ewok_rlw.h	FUNCTION_31
0x40003ba	          0x488931	                    mov qword [rcx], rsi	        58	ewok_rlw.h	FUNCTION_31
0x40003bd	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	        63	ewok_rlw.h	FUNCTION_32
0x40003c1	          0x488b09	                    mov rcx, qword [rcx]	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x40003c4	          0x48d1e9	                              shr rcx, 1	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x40003c7	            0x89c9	                            mov ecx, ecx	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x40003c9	          0x4839d1	                            cmp rcx, rdx	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x40003cc	     0xf8433010000	                            je 0x4000505	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x40003d2	      0xb900000000	                              mov ecx, 0	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x40003d7	      0xbab1000000	                           mov edx, 0xb1	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x40003dc	      0xbe00000000	                              mov esi, 0	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x40003e1	      0xbf00000000	                              mov edi, 0	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x40003e6	      0xe800000000	                          call 0x40003eb	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x40003eb	      0xbe00000000	                              mov esi, 0	       180	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_10
0x40003f0	          0x4889df	                            mov rdi, rbx	       180	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_10
0x40003f3	      0xe8cdfcffff	                call sym.buffer_push_rlw	       180	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_10
0x40003f8	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x40003fc	          0x488b02	                    mov rax, qword [rdx]	        63	ewok_rlw.h	FUNCTION_32
0x40003ff	          0x4889c1	                            mov rcx, rax	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x4000402	          0x48d1e9	                              shr rcx, 1	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x4000405	            0x85c9	                           test ecx, ecx	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x4000407	            0x7419	                            je 0x4000422	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x4000409	      0xb900000000	                              mov ecx, 0	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x400040e	      0xbab6000000	                           mov edx, 0xb6	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x4000413	      0xbe00000000	                              mov esi, 0	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x4000418	      0xbf00000000	                              mov edi, 0	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x400041d	      0xe800000000	                          call 0x4000422	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x4000422	            0xa801	                              test al, 1	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x4000424	            0x7419	                            je 0x400043f	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x4000426	      0xb900000000	                              mov ecx, 0	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x400042b	      0xbab7000000	                           mov edx, 0xb7	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x4000430	      0xbe00000000	                              mov esi, 0	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x4000435	      0xbf00000000	                              mov edi, 0	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x400043a	      0xe800000000	                          call 0x400043f	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x400043f	          0x4889c1	                            mov rcx, rax	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000442	        0x48c1e921	                           shr rcx, 0x21	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000446	          0x4885c9	                           test rcx, rcx	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000449	            0x7419	                            je 0x4000464	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x400044b	      0xb900000000	                              mov ecx, 0	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000450	      0xbab8000000	                           mov edx, 0xb8	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000455	      0xbe00000000	                              mov esi, 0	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x400045a	      0xbf00000000	                              mov edi, 0	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x400045f	      0xe800000000	                          call 0x4000464	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000464	            0x85ed	                           test ebp, ebp	        39	ewok_rlw.h	FUNCTION_29	IF_1
0x4000466	            0x7409	                            je 0x4000471	        39	ewok_rlw.h	FUNCTION_29	IF_1
0x4000468	        0x4883c801	                               or rax, 1	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x400046c	          0x488902	                    mov qword [rdx], rax	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x400046f	            0xeb07	                           jmp 0x4000478	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x4000471	        0x4883e0fe	             and rax, 0xfffffffffffffffe	        42	ewok_rlw.h	FUNCTION_29	ELSE_1
0x4000475	          0x488902	                    mov qword [rdx], rax	        42	ewok_rlw.h	FUNCTION_29	ELSE_1
0x4000478	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x400047c	          0x488b0a	                    mov rcx, qword [rdx]	        34	ewok_rlw.h	FUNCTION_28
0x400047f	            0x89c8	                            mov eax, ecx	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000481	          0x83e001	                              and eax, 1	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000484	            0x39c5	                            cmp ebp, eax	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000486	            0x7419	                            je 0x40004a1	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000488	      0xb900000000	                              mov ecx, 0	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x400048d	      0xbabb000000	                           mov edx, 0xbb	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000492	      0xbe00000000	                              mov esi, 0	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000497	      0xbf00000000	                              mov edi, 0	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x400049c	      0xe800000000	                          call 0x40004a1	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x40004a1	    0x48b803000000	          movabs rax, 0xfffffffe00000003	        58	ewok_rlw.h	FUNCTION_31
0x40004ab	          0x4821c8	                            and rax, rcx	        58	ewok_rlw.h	FUNCTION_31
0x40004ae	        0x4883c802	                               or rax, 2	        58	ewok_rlw.h	FUNCTION_31
0x40004b2	          0x488902	                    mov qword [rdx], rax	        58	ewok_rlw.h	FUNCTION_31
0x40004b5	        0x488b4320	            mov rax, qword [rbx + 0x20] 	        63	ewok_rlw.h	FUNCTION_32
0x40004b9	          0x488b10	                    mov rdx, qword [rax]	        63	ewok_rlw.h	FUNCTION_32
0x40004bc	          0x4889d0	                            mov rax, rdx	        63	ewok_rlw.h	FUNCTION_32
0x40004bf	          0x48d1e8	                              shr rax, 1	        63	ewok_rlw.h	FUNCTION_32
0x40004c2	            0x89c0	                            mov eax, eax	        63	ewok_rlw.h	FUNCTION_32
0x40004c4	        0x4883f801	                              cmp rax, 1	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x40004c8	            0x7419	                            je 0x40004e3	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x40004ca	      0xb900000000	                              mov ecx, 0	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x40004cf	      0xbabe000000	                           mov edx, 0xbe	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x40004d4	      0xbe00000000	                              mov esi, 0	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x40004d9	      0xbf00000000	                              mov edi, 0	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x40004de	      0xe800000000	                          call 0x40004e3	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x40004e3	        0x48c1ea21	                           shr rdx, 0x21	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x40004e7	          0x4885d2	                           test rdx, rdx	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x40004ea	            0x7419	                            je 0x4000505	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x40004ec	      0xb900000000	                              mov ecx, 0	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x40004f1	      0xbabf000000	                           mov edx, 0xbf	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x40004f6	      0xbe00000000	                              mov esi, 0	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x40004fb	      0xbf00000000	                              mov edi, 0	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x4000500	      0xe800000000	                          call 0x4000505	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x4000505	        0x4883c408	                              add rsp, 8	       194	ewah_bitmap.c	FUNCTION_10
0x4000509	              0x5b	                                 pop rbx	       194	ewah_bitmap.c	FUNCTION_10
0x400050a	              0x5d	                                 pop rbp	       194	ewah_bitmap.c	FUNCTION_10
0x400050b	              0xc3	                                     ret	       194	ewah_bitmap.c	FUNCTION_10
ewah_and	IF,4:FOR,1:SWITCH,0:CALL,18:functions,0:WHILE,2:DO,0:ELSE,3	112
0x4000e64	            0x4156	                                push r14	       466	ewah_bitmap.c	FUNCTION_22
0x4000e66	            0x4155	                                push r13	       466	ewah_bitmap.c	FUNCTION_22
0x4000e68	            0x4154	                                push r12	       466	ewah_bitmap.c	FUNCTION_22
0x4000e6a	              0x55	                                push rbp	       466	ewah_bitmap.c	FUNCTION_22
0x4000e6b	              0x53	                                push rbx	       466	ewah_bitmap.c	FUNCTION_22
0x4000e6c	        0x4883c480	             add rsp, 0xffffffffffffff80	       466	ewah_bitmap.c	FUNCTION_22
0x4000e70	          0x4989fd	                            mov r13, rdi	       466	ewah_bitmap.c	FUNCTION_22
0x4000e73	          0x4989f4	                            mov r12, rsi	       466	ewah_bitmap.c	FUNCTION_22
0x4000e76	          0x4889d5	                            mov rbp, rdx	       466	ewah_bitmap.c	FUNCTION_22
0x4000e79	    0x64488b042528	                mov rax, qword fs:[0x28]	       466	ewah_bitmap.c	FUNCTION_22
0x4000e82	      0x4889442478	             mov qword [rsp + 0x78], rax	       466	ewah_bitmap.c	FUNCTION_22
0x4000e87	            0x31c0	                            xor eax, eax	       466	ewah_bitmap.c	FUNCTION_22
0x4000e89	          0x4889fe	                            mov rsi, rdi	       471	ewah_bitmap.c	FUNCTION_22	CALL_1
0x4000e8c	          0x4889e7	                            mov rdi, rsp	       471	ewah_bitmap.c	FUNCTION_22	CALL_1
0x4000e8f	      0xe800000000	                          call 0x4000e94	       471	ewah_bitmap.c	FUNCTION_22	CALL_1
0x4000e94	          0x4c89e6	                            mov rsi, r12	       472	ewah_bitmap.c	FUNCTION_22	CALL_2
0x4000e97	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       472	ewah_bitmap.c	FUNCTION_22	CALL_2
0x4000e9c	      0xe800000000	                          call 0x4000ea1	       472	ewah_bitmap.c	FUNCTION_22	CALL_2
0x4000ea1	      0xe9fd000000	                           jmp 0x4000fa3	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x4000ea6	        0x3b44246c	            cmp eax, dword [rsp + 0x6c] 	       478	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x4000eaa	            0x7c0a	                            jl 0x4000eb6	       478	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x4000eac	          0x4889e3	                            mov rbx, rsp	       483	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_1
0x4000eaf	      0x4c8d742440	                   lea r14, [rsp + 0x40]	       482	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_1
0x4000eb4	            0xeb08	                           jmp 0x4000ebe	       482	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_1
0x4000eb6	      0x488d5c2440	                   lea rbx, [rsp + 0x40]	       480	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x4000ebb	          0x4989e6	                            mov r14, rsp	       479	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x4000ebe	        0x837b3400	               cmp dword [rbx + 0x34], 0	       486	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x4000ec2	            0x752b	                           jne 0x4000eef	       486	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x4000ec4	        0x4863532c	         movsxd rdx, dword [rbx + 0x2c] 	       487	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_5
0x4000ec8	      0xbe00000000	                              mov esi, 0	       487	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_5
0x4000ecd	          0x4889ef	                            mov rdi, rbp	       487	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_5
0x4000ed0	      0xe800000000	                          call 0x4000ed5	       487	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_5
0x4000ed5	        0x4863732c	         movsxd rsi, dword [rbx + 0x2c] 	       489	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_6
0x4000ed9	          0x4c89f7	                            mov rdi, r14	       489	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_6
0x4000edc	      0xe800000000	                          call 0x4000ee1	       489	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_6
0x4000ee1	        0x4863732c	         movsxd rsi, dword [rbx + 0x2c] 	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x4000ee5	          0x4889df	                            mov rdi, rbx	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x4000ee8	      0xe800000000	                          call 0x4000eed	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x4000eed	            0xeb34	                           jmp 0x4000f23	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x4000eef	        0x4863532c	         movsxd rdx, dword [rbx + 0x2c] 	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4000ef3	      0xb900000000	                              mov ecx, 0	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4000ef8	          0x4889ee	                            mov rsi, rbp	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4000efb	          0x4c89f7	                            mov rdi, r14	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4000efe	      0xe800000000	                          call 0x4000f03	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4000f03	        0x4863532c	         movsxd rdx, dword [rbx + 0x2c] 	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4000f07	          0x4829c2	                            sub rdx, rax	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4000f0a	      0xbe00000000	                              mov esi, 0	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4000f0f	          0x4889ef	                            mov rdi, rbp	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4000f12	      0xe800000000	                          call 0x4000f17	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4000f17	        0x4863732c	         movsxd rsi, dword [rbx + 0x2c] 	       498	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4000f1b	          0x4889df	                            mov rdi, rbx	       498	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4000f1e	      0xe800000000	                          call 0x4000f23	       498	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4000f23	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x4000f27	            0x85c0	                           test eax, eax	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x4000f29	     0xf8f77ffffff	                            jg 0x4000ea6	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x4000f2f	      0x837c246c00	               cmp dword [rsp + 0x6c], 0	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x4000f34	     0xf8f6cffffff	                            jg 0x4000ea6	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x4000f3a	      0x4863542468	         movsxd rdx, dword [rsp + 0x68] 	        25	ewah_bitmap.c	FUNCTION_1
0x4000f3f	      0x4863442428	         movsxd rax, dword [rsp + 0x28] 	        25	ewah_bitmap.c	FUNCTION_1
0x4000f44	          0x4839c2	                            cmp rdx, rax	        25	ewah_bitmap.c	FUNCTION_1
0x4000f47	        0x480f46c2	                         cmovbe rax, rdx	        25	ewah_bitmap.c	FUNCTION_1
0x4000f4b	          0x4889c3	                            mov rbx, rax	        25	ewah_bitmap.c	FUNCTION_1
0x4000f4e	          0x4885c0	                           test rax, rax	       507	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3
0x4000f51	            0x7450	                            je 0x4000fa3	       507	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3
0x4000f53	    0x41be00000000	                             mov r14d, 0	       507	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3
0x4000f59	          0x4c89f1	                            mov rcx, r14	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x4000f5c	      0x48034c2418	             add rcx, qword [rsp + 0x18]	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x4000f61	          0x4c89f2	                            mov rdx, r14	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x4000f64	      0x4803542458	             add rdx, qword [rsp + 0x58]	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x4000f69	        0x488b0424	                    mov rax, qword [rsp]	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x4000f6d	        0x488b34c8	            mov rsi, qword [rax + rcx*8]	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x4000f71	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x4000f76	        0x482334d0	            and rsi, qword [rax + rdx*8]	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x4000f7a	          0x4889ef	                            mov rdi, rbp	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x4000f7d	      0xe800000000	                          call 0x4000f82	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x4000f82	        0x4983c601	                              add r14, 1	       510	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x4000f86	          0x4939de	                            cmp r14, rbx	       510	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x4000f89	            0x72ce	                            jb 0x4000f59	       510	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x4000f8b	          0x4889de	                            mov rsi, rbx	       517	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_13
0x4000f8e	          0x4889e7	                            mov rdi, rsp	       517	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_13
0x4000f91	      0xe800000000	                          call 0x4000f96	       517	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_13
0x4000f96	          0x4889de	                            mov rsi, rbx	       518	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_14
0x4000f99	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       518	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_14
0x4000f9e	      0xe800000000	                          call 0x4000fa3	       518	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_14
0x4000fa3	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x4000fa7	         0x3442428	             add eax, dword [rsp + 0x28]	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x4000fab	            0x741b	                            je 0x4000fc8	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x4000fad	        0x8b442468	            mov eax, dword [rsp + 0x68] 	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x4000fb1	         0x344246c	             add eax, dword [rsp + 0x6c]	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x4000fb5	     0xf8568ffffff	                           jne 0x4000f23	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x4000fbb	          0x4889ee	                            mov rsi, rbp	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x4000fbe	          0x4889e7	                            mov rdi, rsp	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x4000fc1	      0xe800000000	                          call 0x4000fc6	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x4000fc6	            0xeb0d	                           jmp 0x4000fd5	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x4000fc8	          0x4889ee	                            mov rsi, rbp	       525	ewah_bitmap.c	FUNCTION_22	CALL_17
0x4000fcb	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       525	ewah_bitmap.c	FUNCTION_22	CALL_17
0x4000fd0	      0xe800000000	                          call 0x4000fd5	       525	ewah_bitmap.c	FUNCTION_22	CALL_17
0x4000fd5	        0x498b4518	            mov rax, qword [r13 + 0x18] 	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x4000fd9	      0x4939442418	            cmp qword [r12 + 0x18], rax 	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x4000fde	    0x490f43442418	          cmovae rax, qword [r12 + 0x18]	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x4000fe4	        0x48894518	            mov qword [rbp + 0x18], rax 	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x4000fe8	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       528	ewah_bitmap.c	FUNCTION_22
0x4000fed	    0x644833042528	                xor rax, qword fs:[0x28]	       528	ewah_bitmap.c	FUNCTION_22
0x4000ff6	            0x7405	                            je 0x4000ffd	       528	ewah_bitmap.c	FUNCTION_22
0x4000ff8	      0xe800000000	                          call 0x4000ffd	       528	ewah_bitmap.c	FUNCTION_22
0x4000ffd	        0x4883ec80	             sub rsp, 0xffffffffffffff80	       528	ewah_bitmap.c	FUNCTION_22
0x4001001	              0x5b	                                 pop rbx	       528	ewah_bitmap.c	FUNCTION_22
0x4001002	              0x5d	                                 pop rbp	       528	ewah_bitmap.c	FUNCTION_22
0x4001003	            0x415c	                                 pop r12	       528	ewah_bitmap.c	FUNCTION_22
0x4001005	            0x415d	                                 pop r13	       528	ewah_bitmap.c	FUNCTION_22
0x4001007	            0x415e	                                 pop r14	       528	ewah_bitmap.c	FUNCTION_22
0x4001009	              0xc3	                                     ret	       528	ewah_bitmap.c	FUNCTION_22
ewah_pool_free	IF,2:FOR,0:SWITCH,0:CALL,2:functions,0:WHILE,0:DO,0:ELSE,0	22
0x40013d6	          0x4885ff	                           test rdi, rdi	       686	ewah_bitmap.c	FUNCTION_26	IF_1
0x40013d9	            0x7445	                            je 0x4001420	       686	ewah_bitmap.c	FUNCTION_26	IF_1
0x40013db	              0x55	                                push rbp	       685	ewah_bitmap.c	FUNCTION_26
0x40013dc	              0x53	                                push rbx	       685	ewah_bitmap.c	FUNCTION_26
0x40013dd	        0x4883ec08	                              sub rsp, 8	       685	ewah_bitmap.c	FUNCTION_26
0x40013e1	          0x4889fb	                            mov rbx, rdi	       685	ewah_bitmap.c	FUNCTION_26
0x40013e4	    0x488b2d000000	            mov rbp, qword [0x040013eb] 	       689	ewah_bitmap.c	FUNCTION_26	IF_2
0x40013eb	        0x4883fd10	                           cmp rbp, 0x10	       689	ewah_bitmap.c	FUNCTION_26	IF_2
0x40013ef	            0x7407	                            je 0x40013f8	       689	ewah_bitmap.c	FUNCTION_26	IF_2
0x40013f1	      0x48837f1000	               cmp qword [rdi + 0x10], 0	       689	ewah_bitmap.c	FUNCTION_26	IF_2
0x40013f6	            0x750a	                           jne 0x4001402	       689	ewah_bitmap.c	FUNCTION_26	IF_2
0x40013f8	          0x4889df	                            mov rdi, rbx	       691	ewah_bitmap.c	FUNCTION_26	IF_2	CALL_1
0x40013fb	      0xe800000000	                          call 0x4001400	       691	ewah_bitmap.c	FUNCTION_26	IF_2	CALL_1
0x4001400	            0xeb18	                           jmp 0x400141a	       692	ewah_bitmap.c	FUNCTION_26	IF_2
0x4001402	      0xe800000000	                          call 0x4001407	       695	ewah_bitmap.c	FUNCTION_26	CALL_2
0x4001407	        0x488d4501	                      lea rax, [rbp + 1]	       696	ewah_bitmap.c	FUNCTION_26
0x400140b	    0x488905000000	            mov qword [0x04001412], rax 	       696	ewah_bitmap.c	FUNCTION_26
0x4001412	    0x48891ced0000	                  mov qword [rbp*8], rbx	       696	ewah_bitmap.c	FUNCTION_26
0x400141a	        0x4883c408	                              add rsp, 8	       697	ewah_bitmap.c	FUNCTION_26
0x400141e	              0x5b	                                 pop rbx	       697	ewah_bitmap.c	FUNCTION_26
0x400141f	              0x5d	                                 pop rbp	       697	ewah_bitmap.c	FUNCTION_26
0x4001420	            0xf3c3	                                     ret	       697	ewah_bitmap.c	FUNCTION_26
ewah_set	IF,4:FOR,0:SWITCH,0:CALL,12:functions,0:WHILE,0:DO,0:ELSE,0	87
0x4000845	              0x55	                                push rbp	       210	ewah_bitmap.c	FUNCTION_12
0x4000846	              0x53	                                push rbx	       210	ewah_bitmap.c	FUNCTION_12
0x4000847	        0x4883ec08	                              sub rsp, 8	       210	ewah_bitmap.c	FUNCTION_12
0x400084b	        0x488b4f18	            mov rcx, qword [rdi + 0x18] 	       213	ewah_bitmap.c	FUNCTION_12	CALL_2
0x400084f	        0x488d5640	                   lea rdx, [rsi + 0x40]	       211	ewah_bitmap.c	FUNCTION_12
0x4000853	        0x48c1ea06	                              shr rdx, 6	       211	ewah_bitmap.c	FUNCTION_12
0x4000857	        0x488d413f	                   lea rax, [rcx + 0x3f]	       211	ewah_bitmap.c	FUNCTION_12
0x400085b	        0x48c1e806	                              shr rax, 6	       211	ewah_bitmap.c	FUNCTION_12
0x400085f	          0x4829c2	                            sub rdx, rax	       211	ewah_bitmap.c	FUNCTION_12
0x4000862	          0x4839ce	                            cmp rsi, rcx	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0x4000865	            0x7319	                           jae 0x4000880	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0x4000867	      0xb900000000	                              mov ecx, 0	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0x400086c	      0xbad7000000	                           mov edx, 0xd7	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0x4000871	      0xbe00000000	                              mov esi, 0	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0x4000876	      0xbf00000000	                              mov edi, 0	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0x400087b	      0xe800000000	                          call 0x4000880	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0x4000880	          0x4889fb	                            mov rbx, rdi	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0x4000883	          0x4889f5	                            mov rbp, rsi	       215	ewah_bitmap.c	FUNCTION_12	CALL_3
0x4000886	        0x488d4601	                      lea rax, [rsi + 1]	       217	ewah_bitmap.c	FUNCTION_12
0x400088a	        0x48894718	             mov qword [rdi + 0x18], rax	       217	ewah_bitmap.c	FUNCTION_12
0x400088e	          0x4885d2	                           test rdx, rdx	       219	ewah_bitmap.c	FUNCTION_12	IF_1
0x4000891	            0x742b	                            je 0x40008be	       219	ewah_bitmap.c	FUNCTION_12	IF_1
0x4000893	        0x4883fa01	                              cmp rdx, 1	       220	ewah_bitmap.c	FUNCTION_12	IF_1	IF_2
0x4000897	            0x760e	                           jbe 0x40008a7	       220	ewah_bitmap.c	FUNCTION_12	IF_1	IF_2
0x4000899	        0x4883ea01	                              sub rdx, 1	       221	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_4
0x400089d	      0xbe00000000	                              mov esi, 0	       221	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_4
0x40008a2	      0xe865fcffff	                call sym.add_empty_words	       221	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_4
0x40008a7	      0xbe01000000	                              mov esi, 1	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_5
0x40008ac	            0x89e9	                            mov ecx, ebp	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_5
0x40008ae	          0x48d3e6	                             shl rsi, cl	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_5
0x40008b1	          0x4889df	                            mov rdi, rbx	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_5
0x40008b4	      0xe898f8ffff	                    call sym.add_literal	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_5
0x40008b9	      0xe9cc000000	                           jmp 0x400098a	       224	ewah_bitmap.c	FUNCTION_12	IF_1
0x40008be	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_6
0x40008c2	          0x488b02	                    mov rax, qword [rdx]	        68	ewok_rlw.h	FUNCTION_33
0x40008c5	          0x4889c1	                            mov rcx, rax	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_6
0x40008c8	        0x48c1e921	                           shr rcx, 0x21	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_6
0x40008cc	          0x4885c9	                           test rcx, rcx	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_6
0x40008cf	            0x753e	                           jne 0x400090f	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_6
0x40008d1	          0x4889c1	                            mov rcx, rax	        58	ewok_rlw.h	FUNCTION_31
0x40008d4	          0x48d1e9	                              shr rcx, 1	        58	ewok_rlw.h	FUNCTION_31
0x40008d7	            0x89c9	                            mov ecx, ecx	        58	ewok_rlw.h	FUNCTION_31
0x40008d9	      0x488d7409fe	                lea rsi, [rcx + rcx - 2]	        58	ewok_rlw.h	FUNCTION_31
0x40008de	    0x48b901000000	          movabs rcx, 0xfffffffe00000001	        58	ewok_rlw.h	FUNCTION_31
0x40008e8	          0x4809ce	                             or rsi, rcx	        58	ewok_rlw.h	FUNCTION_31
0x40008eb	    0x48b9feffffff	                 movabs rcx, 0x1fffffffe	        58	ewok_rlw.h	FUNCTION_31
0x40008f5	          0x4809c8	                             or rax, rcx	        58	ewok_rlw.h	FUNCTION_31
0x40008f8	          0x4821f0	                            and rax, rsi	        58	ewok_rlw.h	FUNCTION_31
0x40008fb	          0x488902	                    mov qword [rdx], rax	        58	ewok_rlw.h	FUNCTION_31
0x40008fe	      0xbe01000000	                              mov esi, 1	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_9
0x4000903	            0x89e9	                            mov ecx, ebp	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_9
0x4000905	          0x48d3e6	                             shl rsi, cl	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_9
0x4000908	      0xe844f8ffff	                    call sym.add_literal	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_9
0x400090d	            0xeb7b	                           jmp 0x400098a	       231	ewah_bitmap.c	FUNCTION_12	IF_3
0x400090f	        0x488b7708	                mov rsi, qword [rdi + 8]	       234	ewah_bitmap.c	FUNCTION_12
0x4000913	          0x488b17	                    mov rdx, qword [rdi]	       234	ewah_bitmap.c	FUNCTION_12
0x4000916	      0xb801000000	                              mov eax, 1	       234	ewah_bitmap.c	FUNCTION_12
0x400091b	            0x89e9	                            mov ecx, ebp	       234	ewah_bitmap.c	FUNCTION_12
0x400091d	          0x48d3e0	                             shl rax, cl	       234	ewah_bitmap.c	FUNCTION_12
0x4000920	      0x480944f2f8	         or qword [rdx + rsi*8 - 8], rax	       234	ewah_bitmap.c	FUNCTION_12
0x4000925	          0x488b17	                    mov rdx, qword [rdi]	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000928	        0x488b4708	                mov rax, qword [rdi + 8]	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0x400092c	    0x48837cc2f8ff	cmp qword [rdx + rax*8 - 8], 0xffffffffffffffff	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000932	            0x7556	                           jne 0x400098a	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000934	        0x4883e801	                              sub rax, 1	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000938	        0x48894708	                mov qword [rdi + 8], rax	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0x400093c	    0x48c704c20000	              mov qword [rdx + rax*8], 0	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000944	        0x488b7720	            mov rsi, qword [rdi + 0x20] 	       241	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_11
0x4000948	          0x488b3e	                    mov rdi, qword [rsi]	        68	ewok_rlw.h	FUNCTION_33
0x400094b	          0x4889f9	                            mov rcx, rdi	        74	ewok_rlw.h	FUNCTION_34
0x400094e	        0x48c1e921	                           shr rcx, 0x21	        74	ewok_rlw.h	FUNCTION_34
0x4000952	        0x4883e901	                              sub rcx, 1	        74	ewok_rlw.h	FUNCTION_34
0x4000956	        0x48c1e121	                           shl rcx, 0x21	        74	ewok_rlw.h	FUNCTION_34
0x400095a	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	        74	ewok_rlw.h	FUNCTION_34
0x4000964	          0x4809c1	                             or rcx, rax	        74	ewok_rlw.h	FUNCTION_34
0x4000967	    0x48ba00000000	          movabs rdx, 0xfffffffe00000000	        74	ewok_rlw.h	FUNCTION_34
0x4000971	          0x4809fa	                             or rdx, rdi	        74	ewok_rlw.h	FUNCTION_34
0x4000974	          0x4889c8	                            mov rax, rcx	        74	ewok_rlw.h	FUNCTION_34
0x4000977	          0x4821d0	                            and rax, rdx	        74	ewok_rlw.h	FUNCTION_34
0x400097a	          0x488906	                    mov qword [rsi], rax	        74	ewok_rlw.h	FUNCTION_34
0x400097d	      0xbe01000000	                              mov esi, 1	       242	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_12
0x4000982	          0x4889df	                            mov rdi, rbx	       242	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_12
0x4000985	      0xe886f9ffff	                 call sym.add_empty_word	       242	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_12
0x400098a	        0x4883c408	                              add rsp, 8	       244	ewah_bitmap.c	FUNCTION_12
0x400098e	              0x5b	                                 pop rbx	       244	ewah_bitmap.c	FUNCTION_12
0x400098f	              0x5d	                                 pop rbp	       244	ewah_bitmap.c	FUNCTION_12
0x4000990	              0xc3	                                     ret	       244	ewah_bitmap.c	FUNCTION_12
ewah_clear	IF,0:FOR,0:SWITCH,0:CALL,0:functions,0:WHILE,0:DO,0:ELSE,0	7
0x4000adb	    0x48c747080100	                  mov qword [rdi + 8], 1	       293	ewah_bitmap.c	FUNCTION_15
0x4000ae3	          0x488b07	                    mov rax, qword [rdi]	       294	ewah_bitmap.c	FUNCTION_15
0x4000ae6	    0x48c700000000	                      mov qword [rax], 0	       294	ewah_bitmap.c	FUNCTION_15
0x4000aed	    0x48c747180000	               mov qword [rdi + 0x18], 0	       295	ewah_bitmap.c	FUNCTION_15
0x4000af5	          0x488b07	                    mov rax, qword [rdi]	       296	ewah_bitmap.c	FUNCTION_15
0x4000af8	        0x48894720	             mov qword [rdi + 0x20], rax	       296	ewah_bitmap.c	FUNCTION_15
0x4000afc	              0xc3	                                     ret	       296	ewah_bitmap.c	FUNCTION_15
ewah_pool_new	IF,1:FOR,0:SWITCH,0:CALL,1:functions,0:WHILE,0:DO,0:ELSE,0	11
0x40013a8	    0x488b05000000	            mov rax, qword [0x040013af] 	       678	ewah_bitmap.c	FUNCTION_25	IF_1
0x40013af	          0x4885c0	                           test rax, rax	       678	ewah_bitmap.c	FUNCTION_25	IF_1
0x40013b2	            0x7414	                            je 0x40013c8	       678	ewah_bitmap.c	FUNCTION_25	IF_1
0x40013b4	        0x4883e801	                              sub rax, 1	       679	ewah_bitmap.c	FUNCTION_25	IF_1
0x40013b8	    0x488905000000	            mov qword [0x040013bf], rax 	       679	ewah_bitmap.c	FUNCTION_25	IF_1
0x40013bf	    0x488b04c50000	                  mov rax, qword [rax*8]	       679	ewah_bitmap.c	FUNCTION_25	IF_1
0x40013c7	              0xc3	                                     ret	       682	ewah_bitmap.c	FUNCTION_25
0x40013c8	        0x4883ec08	                              sub rsp, 8	       677	ewah_bitmap.c	FUNCTION_25
0x40013cc	      0xe800000000	                          call 0x40013d1	       681	ewah_bitmap.c	FUNCTION_25	CALL_1
0x40013d1	        0x4883c408	                              add rsp, 8	       682	ewah_bitmap.c	FUNCTION_25
0x40013d5	              0xc3	                                     ret	       682	ewah_bitmap.c	FUNCTION_25
ewah_and_not	IF,4:FOR,1:SWITCH,0:CALL,18:functions,0:WHILE,2:DO,0:ELSE,3	125
0x400100a	            0x4156	                                push r14	       534	ewah_bitmap.c	FUNCTION_23
0x400100c	            0x4155	                                push r13	       534	ewah_bitmap.c	FUNCTION_23
0x400100e	            0x4154	                                push r12	       534	ewah_bitmap.c	FUNCTION_23
0x4001010	              0x55	                                push rbp	       534	ewah_bitmap.c	FUNCTION_23
0x4001011	              0x53	                                push rbx	       534	ewah_bitmap.c	FUNCTION_23
0x4001012	        0x4883c480	             add rsp, 0xffffffffffffff80	       534	ewah_bitmap.c	FUNCTION_23
0x4001016	          0x4989fd	                            mov r13, rdi	       534	ewah_bitmap.c	FUNCTION_23
0x4001019	          0x4989f4	                            mov r12, rsi	       534	ewah_bitmap.c	FUNCTION_23
0x400101c	          0x4889d5	                            mov rbp, rdx	       534	ewah_bitmap.c	FUNCTION_23
0x400101f	    0x64488b042528	                mov rax, qword fs:[0x28]	       534	ewah_bitmap.c	FUNCTION_23
0x4001028	      0x4889442478	             mov qword [rsp + 0x78], rax	       534	ewah_bitmap.c	FUNCTION_23
0x400102d	            0x31c0	                            xor eax, eax	       534	ewah_bitmap.c	FUNCTION_23
0x400102f	          0x4889fe	                            mov rsi, rdi	       539	ewah_bitmap.c	FUNCTION_23	CALL_1
0x4001032	          0x4889e7	                            mov rdi, rsp	       539	ewah_bitmap.c	FUNCTION_23	CALL_1
0x4001035	      0xe800000000	                          call 0x400103a	       539	ewah_bitmap.c	FUNCTION_23	CALL_1
0x400103a	          0x4c89e6	                            mov rsi, r12	       540	ewah_bitmap.c	FUNCTION_23	CALL_2
0x400103d	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       540	ewah_bitmap.c	FUNCTION_23	CALL_2
0x4001042	      0xe800000000	                          call 0x4001047	       540	ewah_bitmap.c	FUNCTION_23	CALL_2
0x4001047	      0xe90c010000	                           jmp 0x4001158	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x400104c	        0x3b44246c	            cmp eax, dword [rsp + 0x6c] 	       546	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x4001050	     0xf8d65010000	                           jge 0x40011bb	       546	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x4001056	      0x488d5c2440	                   lea rbx, [rsp + 0x40]	       548	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x400105b	          0x4989e6	                            mov r14, rsp	       547	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x400105e	      0x837c247400	               cmp dword [rsp + 0x74], 0	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x4001063	            0x750a	                           jne 0x400106f	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x4001065	            0xeb33	                           jmp 0x400109a	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x4001067	          0x4889e3	                            mov rbx, rsp	       551	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_1
0x400106a	      0x4c8d742440	                   lea r14, [rsp + 0x40]	       550	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_1
0x400106f	        0x4863532c	         movsxd rdx, dword [rbx + 0x2c] 	       556	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_5
0x4001073	      0xbe00000000	                              mov esi, 0	       556	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_5
0x4001078	          0x4889ef	                            mov rdi, rbp	       556	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_5
0x400107b	      0xe800000000	                          call 0x4001080	       556	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_5
0x4001080	        0x4863732c	         movsxd rsi, dword [rbx + 0x2c] 	       558	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_6
0x4001084	          0x4c89f7	                            mov rdi, r14	       558	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_6
0x4001087	      0xe800000000	                          call 0x400108c	       558	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_6
0x400108c	        0x4863732c	         movsxd rsi, dword [rbx + 0x2c] 	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001090	          0x4889df	                            mov rdi, rbx	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001093	      0xe800000000	                          call 0x4001098	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001098	            0xeb3b	                           jmp 0x40010d5	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x400109a	      0x4c8d742440	                   lea r14, [rsp + 0x40]	       548	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x400109f	      0xbb00000000	                              mov ebx, 0	       555	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40010a4	          0x4889e7	                            mov rdi, rsp	       547	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x40010a7	           0xfb6db	                           movzx ebx, bl	       566	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x40010aa	        0x4963562c	         movsxd rdx, dword [r14 + 0x2c] 	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x40010ae	            0x89d9	                            mov ecx, ebx	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x40010b0	          0x4889ee	                            mov rsi, rbp	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x40010b3	      0xe800000000	                          call 0x40010b8	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x40010b8	        0x4963562c	         movsxd rdx, dword [r14 + 0x2c] 	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x40010bc	          0x4829c2	                            sub rdx, rax	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x40010bf	            0x89de	                            mov esi, ebx	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x40010c1	          0x4889ef	                            mov rdi, rbp	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x40010c4	      0xe800000000	                          call 0x40010c9	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x40010c9	        0x4963762c	         movsxd rsi, dword [r14 + 0x2c] 	       571	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x40010cd	          0x4c89f7	                            mov rdi, r14	       571	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x40010d0	      0xe800000000	                          call 0x40010d5	       571	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x40010d5	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x40010d9	            0x85c0	                           test eax, eax	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x40010db	     0xf8f6bffffff	                            jg 0x400104c	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x40010e1	      0x837c246c00	               cmp dword [rsp + 0x6c], 0	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x40010e6	     0xf8f60ffffff	                            jg 0x400104c	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x40010ec	      0x4863542468	         movsxd rdx, dword [rsp + 0x68] 	        25	ewah_bitmap.c	FUNCTION_1
0x40010f1	      0x4863442428	         movsxd rax, dword [rsp + 0x28] 	        25	ewah_bitmap.c	FUNCTION_1
0x40010f6	          0x4839c2	                            cmp rdx, rax	        25	ewah_bitmap.c	FUNCTION_1
0x40010f9	        0x480f46c2	                         cmovbe rax, rdx	        25	ewah_bitmap.c	FUNCTION_1
0x40010fd	          0x4889c3	                            mov rbx, rax	        25	ewah_bitmap.c	FUNCTION_1
0x4001100	          0x4885c0	                           test rax, rax	       580	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3
0x4001103	            0x7453	                            je 0x4001158	       580	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3
0x4001105	    0x41be00000000	                             mov r14d, 0	       580	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3
0x400110b	          0x4c89f2	                            mov rdx, r14	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x400110e	      0x4803542458	             add rdx, qword [rsp + 0x58]	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001113	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001118	        0x488b34d0	            mov rsi, qword [rax + rdx*8]	       584	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1	CALL_12
0x400111c	          0x48f7d6	                                 not rsi	       584	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1	CALL_12
0x400111f	          0x4c89f2	                            mov rdx, r14	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001122	      0x4803542418	             add rdx, qword [rsp + 0x18]	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001127	        0x488b0424	                    mov rax, qword [rsp]	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x400112b	        0x482334d0	            and rsi, qword [rax + rdx*8]	       584	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1	CALL_12
0x400112f	          0x4889ef	                            mov rdi, rbp	       584	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1	CALL_12
0x4001132	      0xe800000000	                          call 0x4001137	       584	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1	CALL_12
0x4001137	        0x4983c601	                              add r14, 1	       583	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x400113b	          0x4939de	                            cmp r14, rbx	       583	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x400113e	            0x72cb	                            jb 0x400110b	       583	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001140	          0x4889de	                            mov rsi, rbx	       590	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_13
0x4001143	          0x4889e7	                            mov rdi, rsp	       590	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_13
0x4001146	      0xe800000000	                          call 0x400114b	       590	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_13
0x400114b	          0x4889de	                            mov rsi, rbx	       591	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_14
0x400114e	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       591	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_14
0x4001153	      0xe800000000	                          call 0x4001158	       591	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_14
0x4001158	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x400115c	         0x3442428	             add eax, dword [rsp + 0x28]	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x4001160	            0x7427	                            je 0x4001189	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x4001162	        0x8b442468	            mov eax, dword [rsp + 0x68] 	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x4001166	         0x344246c	             add eax, dword [rsp + 0x6c]	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x400116a	     0xf8565ffffff	                           jne 0x40010d5	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x4001170	      0xb900000000	                              mov ecx, 0	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x4001175	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x400117c	          0x4889ee	                            mov rsi, rbp	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x400117f	          0x4889e7	                            mov rdi, rsp	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x4001182	      0xe800000000	                          call 0x4001187	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x4001187	            0xeb0d	                           jmp 0x4001196	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x4001189	          0x4889ee	                            mov rsi, rbp	       598	ewah_bitmap.c	FUNCTION_23	CALL_17
0x400118c	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       598	ewah_bitmap.c	FUNCTION_23	CALL_17
0x4001191	      0xe800000000	                          call 0x4001196	       598	ewah_bitmap.c	FUNCTION_23	CALL_17
0x4001196	        0x498b4518	            mov rax, qword [r13 + 0x18] 	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x400119a	      0x4939442418	            cmp qword [r12 + 0x18], rax 	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x400119f	    0x490f43442418	          cmovae rax, qword [r12 + 0x18]	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x40011a5	        0x48894518	            mov qword [rbp + 0x18], rax 	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x40011a9	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       601	ewah_bitmap.c	FUNCTION_23
0x40011ae	    0x644833042528	                xor rax, qword fs:[0x28]	       601	ewah_bitmap.c	FUNCTION_23
0x40011b7	            0x7424	                            je 0x40011dd	       601	ewah_bitmap.c	FUNCTION_23
0x40011b9	            0xeb1d	                           jmp 0x40011d8	       601	ewah_bitmap.c	FUNCTION_23
0x40011bb	      0x837c243400	               cmp dword [rsp + 0x34], 0	       555	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40011c0	     0xf84a1feffff	                            je 0x4001067	       555	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40011c6	          0x4989e6	                            mov r14, rsp	       551	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_1
0x40011c9	      0xbb01000000	                              mov ebx, 1	       555	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40011ce	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       550	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_1
0x40011d3	      0xe9cffeffff	                           jmp 0x40010a7	       550	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_1
0x40011d8	      0xe800000000	                          call 0x40011dd	       601	ewah_bitmap.c	FUNCTION_23
0x40011dd	        0x4883ec80	             sub rsp, 0xffffffffffffff80	       601	ewah_bitmap.c	FUNCTION_23
0x40011e1	              0x5b	                                 pop rbx	       601	ewah_bitmap.c	FUNCTION_23
0x40011e2	              0x5d	                                 pop rbp	       601	ewah_bitmap.c	FUNCTION_23
0x40011e3	            0x415c	                                 pop r12	       601	ewah_bitmap.c	FUNCTION_23
0x40011e5	            0x415d	                                 pop r13	       601	ewah_bitmap.c	FUNCTION_23
0x40011e7	            0x415e	                                 pop r14	       601	ewah_bitmap.c	FUNCTION_23
0x40011e9	              0xc3	                                     ret	       601	ewah_bitmap.c	FUNCTION_23
ewah_not	IF,0:FOR,1:SWITCH,0:CALL,2:functions,0:WHILE,1:DO,0:ELSE,0	31
0x4000c76	    0x41b800000000	                              mov r8d, 0	       381	ewah_bitmap.c	FUNCTION_20
0x4000c7c	            0xeb58	                           jmp 0x4000cd6	       383	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x4000c7e	    0x4a8d04c50000	                         lea rax, [r8*8]	       384	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x4000c86	          0x4889c1	                            mov rcx, rax	       384	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x4000c89	          0x48030f	                    add rcx, qword [rdi]	       384	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x4000c8c	          0x488b11	                    mov rdx, qword [rcx]	        48	ewok_rlw.h	FUNCTION_30	IF_1
0x4000c8f	          0xf6c201	                              test dl, 1	        48	ewok_rlw.h	FUNCTION_30	IF_1
0x4000c92	            0x7409	                            je 0x4000c9d	        48	ewok_rlw.h	FUNCTION_30	IF_1
0x4000c94	        0x4883e2fe	             and rdx, 0xfffffffffffffffe	        49	ewok_rlw.h	FUNCTION_30	IF_1
0x4000c98	          0x488911	                    mov qword [rcx], rdx	        49	ewok_rlw.h	FUNCTION_30	IF_1
0x4000c9b	            0xeb07	                           jmp 0x4000ca4	        49	ewok_rlw.h	FUNCTION_30	IF_1
0x4000c9d	        0x4883ca01	                               or rdx, 1	        51	ewok_rlw.h	FUNCTION_30	ELSE_1
0x4000ca1	          0x488911	                    mov qword [rcx], rdx	        51	ewok_rlw.h	FUNCTION_30	ELSE_1
0x4000ca4	        0x4983c001	                               add r8, 1	       388	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x4000ca8	          0x488b31	                    mov rsi, qword [rcx]	        68	ewok_rlw.h	FUNCTION_33
0x4000cab	        0x48c1ee21	                           shr rsi, 0x21	        68	ewok_rlw.h	FUNCTION_33
0x4000caf	          0x4885f6	                           test rsi, rsi	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x4000cb2	            0x7422	                            je 0x4000cd6	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x4000cb4	        0x4883c008	                              add rax, 8	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x4000cb8	      0xba00000000	                              mov edx, 0	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x4000cbd	          0x4889c1	                            mov rcx, rax	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x4000cc0	          0x48030f	                    add rcx, qword [rdi]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x4000cc3	          0x48f711	                         not qword [rcx]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x4000cc6	        0x4883c201	                              add rdx, 1	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x4000cca	        0x4883c008	                              add rax, 8	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x4000cce	          0x4839f2	                            cmp rdx, rsi	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x4000cd1	            0x75ea	                           jne 0x4000cbd	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x4000cd3	          0x4901f0	                             add r8, rsi	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x4000cd6	        0x4c3b4708	                 cmp r8, qword [rdi + 8]	       383	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x4000cda	            0x72a2	                            jb 0x4000c7e	       383	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x4000cdc	            0xf3c3	                                     ret	       396	ewah_bitmap.c	FUNCTION_20
ewah_free	IF,2:FOR,0:SWITCH,0:CALL,2:functions,0:WHILE,0:DO,0:ELSE,0	12
0x4000b2d	          0x4885ff	                           test rdi, rdi	       301	ewah_bitmap.c	FUNCTION_16	IF_1
0x4000b30	            0x741c	                            je 0x4000b4e	       301	ewah_bitmap.c	FUNCTION_16	IF_1
0x4000b32	              0x53	                                push rbx	       300	ewah_bitmap.c	FUNCTION_16
0x4000b33	          0x4889fb	                            mov rbx, rdi	       300	ewah_bitmap.c	FUNCTION_16
0x4000b36	      0x48837f1000	               cmp qword [rdi + 0x10], 0	       304	ewah_bitmap.c	FUNCTION_16	IF_2
0x4000b3b	            0x7408	                            je 0x4000b45	       304	ewah_bitmap.c	FUNCTION_16	IF_2
0x4000b3d	          0x488b3f	                    mov rdi, qword [rdi]	       305	ewah_bitmap.c	FUNCTION_16	CALL_1
0x4000b40	      0xe800000000	                          call 0x4000b45	       305	ewah_bitmap.c	FUNCTION_16	CALL_1
0x4000b45	          0x4889df	                            mov rdi, rbx	       307	ewah_bitmap.c	FUNCTION_16	CALL_2
0x4000b48	      0xe800000000	                          call 0x4000b4d	       307	ewah_bitmap.c	FUNCTION_16	CALL_2
0x4000b4d	              0x5b	                                 pop rbx	       308	ewah_bitmap.c	FUNCTION_16
0x4000b4e	            0xf3c3	                                     ret	       308	ewah_bitmap.c	FUNCTION_16
ewah_add	IF,2:FOR,0:SWITCH,0:CALL,3:functions,0:WHILE,0:DO,0:ELSE,0	14
0x4000814	        0x4883ec08	                              sub rsp, 8	       197	ewah_bitmap.c	FUNCTION_11
0x4000818	      0x4883471840	           add qword [rdi + 0x18], 0x40 	       198	ewah_bitmap.c	FUNCTION_11
0x400081d	          0x4885f6	                           test rsi, rsi	       200	ewah_bitmap.c	FUNCTION_11	IF_1
0x4000820	            0x7507	                           jne 0x4000829	       200	ewah_bitmap.c	FUNCTION_11	IF_1
0x4000822	      0xe8e9faffff	                 call sym.add_empty_word	       201	ewah_bitmap.c	FUNCTION_11	CALL_1
0x4000827	            0xeb17	                           jmp 0x4000840	       201	ewah_bitmap.c	FUNCTION_11	CALL_1
0x4000829	        0x4883feff	             cmp rsi, 0xffffffffffffffff	       203	ewah_bitmap.c	FUNCTION_11	IF_2
0x400082d	            0x750c	                           jne 0x400083b	       203	ewah_bitmap.c	FUNCTION_11	IF_2
0x400082f	      0xbe01000000	                              mov esi, 1	       204	ewah_bitmap.c	FUNCTION_11	CALL_2
0x4000834	      0xe8d7faffff	                 call sym.add_empty_word	       204	ewah_bitmap.c	FUNCTION_11	CALL_2
0x4000839	            0xeb05	                           jmp 0x4000840	       204	ewah_bitmap.c	FUNCTION_11	CALL_2
0x400083b	      0xe811f9ffff	                    call sym.add_literal	       206	ewah_bitmap.c	FUNCTION_11	CALL_3
0x4000840	        0x4883c408	                              add rsp, 8	       207	ewah_bitmap.c	FUNCTION_11
0x4000844	              0xc3	                                     ret	       207	ewah_bitmap.c	FUNCTION_11
ewah_add_dirty_words	IF,3:FOR,1:SWITCH,0:CALL,6:functions,0:WHILE,1:DO,0:ELSE,1	100
0x40006ad	            0x4157	                                push r15	       131	ewah_bitmap.c	FUNCTION_9
0x40006af	            0x4156	                                push r14	       131	ewah_bitmap.c	FUNCTION_9
0x40006b1	            0x4155	                                push r13	       131	ewah_bitmap.c	FUNCTION_9
0x40006b3	            0x4154	                                push r12	       131	ewah_bitmap.c	FUNCTION_9
0x40006b5	              0x55	                                push rbp	       131	ewah_bitmap.c	FUNCTION_9
0x40006b6	              0x53	                                push rbx	       131	ewah_bitmap.c	FUNCTION_9
0x40006b7	        0x4883ec18	                           sub rsp, 0x18	       131	ewah_bitmap.c	FUNCTION_9
0x40006bb	          0x4889fb	                            mov rbx, rdi	       131	ewah_bitmap.c	FUNCTION_9
0x40006be	          0x4989f5	                            mov r13, rsi	       131	ewah_bitmap.c	FUNCTION_9
0x40006c1	          0x4989d4	                            mov r12, rdx	       131	ewah_bitmap.c	FUNCTION_9
0x40006c4	          0x4189cf	                           mov r15d, ecx	       131	ewah_bitmap.c	FUNCTION_9
0x40006c7	    0x49beffffffff	                 movabs r14, 0x1ffffffff	        74	ewok_rlw.h	FUNCTION_34
0x40006d1	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       135	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_1
0x40006d5	          0x488b11	                    mov rdx, qword [rcx]	        68	ewok_rlw.h	FUNCTION_33
0x40006d8	          0x4889d0	                            mov rax, rdx	        68	ewok_rlw.h	FUNCTION_33
0x40006db	        0x48c1e821	                           shr rax, 0x21	        68	ewok_rlw.h	FUNCTION_33
0x40006df	      0xbdffffff7f	                     mov ebp, 0x7fffffff	        25	ewah_bitmap.c	FUNCTION_1
0x40006e4	          0x4829c5	                            sub rbp, rax	        25	ewah_bitmap.c	FUNCTION_1
0x40006e7	          0x4c39e5	                            cmp rbp, r12	        25	ewah_bitmap.c	FUNCTION_1
0x40006ea	        0x490f47ec	                          cmova rbp, r12	        25	ewah_bitmap.c	FUNCTION_1
0x40006ee	          0x4801e8	                            add rax, rbp	        74	ewok_rlw.h	FUNCTION_34
0x40006f1	        0x48c1e021	                           shl rax, 0x21	        74	ewok_rlw.h	FUNCTION_34
0x40006f5	          0x4c09f0	                             or rax, r14	        74	ewok_rlw.h	FUNCTION_34
0x40006f8	    0x48bf00000000	          movabs rdi, 0xfffffffe00000000	        74	ewok_rlw.h	FUNCTION_34
0x4000702	          0x4809fa	                             or rdx, rdi	        74	ewok_rlw.h	FUNCTION_34
0x4000705	          0x4821d0	                            and rax, rdx	        74	ewok_rlw.h	FUNCTION_34
0x4000708	          0x488901	                    mov qword [rcx], rax	        74	ewok_rlw.h	FUNCTION_34
0x400070b	          0x4889e8	                            mov rax, rbp	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x400070e	        0x48034308	                add rax, qword [rbx + 8]	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x4000712	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x4000716	          0x4839c8	                            cmp rax, rcx	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x4000719	            0x726b	                            jb 0x4000786	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x400071b	        0x488d1440	                  lea rdx, [rax + rax*2]	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x400071f	          0x48d1ea	                              shr rdx, 1	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x4000722	          0x4839d1	                            cmp rcx, rdx	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x4000725	            0x735f	                           jae 0x4000786	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x4000727	        0x488b4320	            mov rax, qword [rbx + 0x20] 	        35	ewah_bitmap.c	FUNCTION_3
0x400072b	      0x4889442408	                mov qword [rsp + 8], rax	        35	ewah_bitmap.c	FUNCTION_3
0x4000730	          0x488b03	                    mov rax, qword [rbx]	        35	ewah_bitmap.c	FUNCTION_3
0x4000733	        0x48890424	                    mov qword [rsp], rax	        35	ewah_bitmap.c	FUNCTION_3
0x4000737	        0x48895310	             mov qword [rbx + 0x10], rdx	        40	ewah_bitmap.c	FUNCTION_3
0x400073b	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x4000745	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x4000748	            0x7614	                           jbe 0x400075e	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x400074a	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x400074f	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x4000754	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x4000759	      0xe800000000	                          call 0x400075e	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x400075e	    0x488d34d50000	                        lea rsi, [rdx*8]	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x4000766	        0x488b3c24	                    mov rdi, qword [rsp]	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x400076a	      0xe800000000	                          call 0x400076f	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x400076f	          0x488903	                    mov qword [rbx], rax	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x4000772	      0x488b542408	                mov rdx, qword [rsp + 8]	        42	ewah_bitmap.c	FUNCTION_3
0x4000777	        0x482b1424	                    sub rdx, qword [rsp]	        42	ewah_bitmap.c	FUNCTION_3
0x400077b	        0x4883e2f8	             and rdx, 0xfffffffffffffff8	        42	ewah_bitmap.c	FUNCTION_3
0x400077f	          0x4801d0	                            add rax, rdx	        42	ewah_bitmap.c	FUNCTION_3
0x4000782	        0x48894320	             mov qword [rbx + 0x20], rax	        42	ewah_bitmap.c	FUNCTION_3
0x4000786	          0x4585ff	                         test r15d, r15d	       143	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2
0x4000789	            0x7431	                            je 0x40007bc	       143	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2
0x400078b	          0x4885ed	                           test rbp, rbp	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x400078e	            0x744b	                            je 0x40007db	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x4000790	          0x4c89e8	                            mov rax, r13	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x4000793	      0x498d7ced00	                  lea rdi, [r13 + rbp*8]	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x4000798	          0x488b33	                    mov rsi, qword [rbx]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x400079b	        0x488b4b08	                mov rcx, qword [rbx + 8]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x400079f	        0x488d5101	                      lea rdx, [rcx + 1]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007a3	        0x48895308	                mov qword [rbx + 8], rdx	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007a7	          0x488b10	                    mov rdx, qword [rax]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007aa	          0x48f7d2	                                 not rdx	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007ad	        0x488914ce	            mov qword [rsi + rcx*8], rdx	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007b1	        0x4883c008	                              add rax, 8	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007b5	          0x4839f8	                            cmp rax, rdi	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007b8	            0x75de	                           jne 0x4000798	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007ba	            0xeb1f	                           jmp 0x40007db	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007bc	        0x488b5308	                mov rdx, qword [rbx + 8]	        53	string3.h	FUNCTION_65	CALL_3
0x40007c0	          0x488b03	                    mov rax, qword [rbx]	        53	string3.h	FUNCTION_65	CALL_3
0x40007c3	        0x488d3cd0	                  lea rdi, [rax + rdx*8]	        53	string3.h	FUNCTION_65	CALL_3
0x40007c7	    0x488d14ed0000	                        lea rdx, [rbp*8]	        53	string3.h	FUNCTION_65	CALL_3
0x40007cf	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_65	CALL_3
0x40007d2	      0xe800000000	                          call 0x40007d7	        53	string3.h	FUNCTION_65	CALL_3
0x40007d7	        0x48016b08	                add qword [rbx + 8], rbp	       150	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1
0x40007db	          0x4889e8	                            mov rax, rbp	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x40007de	        0x48c1e006	                              shl rax, 6	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x40007e2	        0x48014318	            add qword [rbx + 0x18], rax 	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x40007e6	          0x4939ec	                            cmp r12, rbp	       155	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_3
0x40007e9	            0x741a	                            je 0x4000805	       155	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_3
0x40007eb	      0xbe00000000	                              mov esi, 0	       158	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_6
0x40007f0	          0x4889df	                            mov rdi, rbx	       158	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_6
0x40007f3	      0xe8cdf8ffff	                call sym.buffer_push_rlw	       158	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_6
0x40007f8	      0x4d8d6ced00	                  lea r13, [r13 + rbp*8]	       159	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x40007fd	          0x4929ec	                            sub r12, rbp	       160	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x4000800	      0xe9ccfeffff	                           jmp 0x40006d1	       161	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x4000805	        0x4883c418	                           add rsp, 0x18	       162	ewah_bitmap.c	FUNCTION_9
0x4000809	              0x5b	                                 pop rbx	       162	ewah_bitmap.c	FUNCTION_9
0x400080a	              0x5d	                                 pop rbp	       162	ewah_bitmap.c	FUNCTION_9
0x400080b	            0x415c	                                 pop r12	       162	ewah_bitmap.c	FUNCTION_9
0x400080d	            0x415d	                                 pop r13	       162	ewah_bitmap.c	FUNCTION_9
0x400080f	            0x415e	                                 pop r14	       162	ewah_bitmap.c	FUNCTION_9
0x4000811	            0x415f	                                 pop r15	       162	ewah_bitmap.c	FUNCTION_9
0x4000813	              0xc3	                                     ret	       162	ewah_bitmap.c	FUNCTION_9
buffer_push_rlw	IF,0:FOR,0:SWITCH,0:CALL,1:functions,0:WHILE,0:DO,0:ELSE,0	40
0x40000c5	              0x55	                                push rbp	        54	ewah_bitmap.c	FUNCTION_5
0x40000c6	              0x53	                                push rbx	        54	ewah_bitmap.c	FUNCTION_5
0x40000c7	        0x4883ec08	                              sub rsp, 8	        54	ewah_bitmap.c	FUNCTION_5
0x40000cb	          0x4889fb	                            mov rbx, rdi	        54	ewah_bitmap.c	FUNCTION_5
0x40000ce	          0x4889f5	                            mov rbp, rsi	        54	ewah_bitmap.c	FUNCTION_5
0x40000d1	        0x488b4708	                mov rax, qword [rdi + 8]	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x40000d5	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x40000d9	        0x488d4801	                      lea rcx, [rax + 1]	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x40000dd	          0x4839d1	                            cmp rcx, rdx	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x40000e0	            0x7245	                            jb 0x4000127	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x40000e2	        0x488d3440	                  lea rsi, [rax + rax*2]	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x40000e6	          0x48d1ee	                              shr rsi, 1	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x40000e9	          0x4839f2	                            cmp rdx, rsi	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x40000ec	            0x7339	                           jae 0x4000127	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x40000ee	          0x488b3f	                    mov rdi, qword [rdi]	        35	ewah_bitmap.c	FUNCTION_3
0x40000f1	        0x48897310	             mov qword [rbx + 0x10], rsi	        40	ewah_bitmap.c	FUNCTION_3
0x40000f5	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x40000ff	          0x4839c6	                            cmp rsi, rax	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x4000102	            0x7617	                           jbe 0x400011b	       795	git-compat-util.h	FUNCTION_52	IF_1	CALL_1
0x4000104	          0x4889f2	                            mov rdx, rsi	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x4000107	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x400010c	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x4000111	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x4000116	      0xe800000000	                          call 0x400011b	       796	git-compat-util.h	FUNCTION_52	IF_1	CALL_2
0x400011b	        0x48c1e603	                              shl rsi, 3	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x400011f	      0xe800000000	                          call 0x4000124	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x4000124	          0x488903	                    mov qword [rbx], rax	        41	ewah_bitmap.c	FUNCTION_3	CALL_1
0x4000127	          0x488b13	                    mov rdx, qword [rbx]	        50	ewah_bitmap.c	FUNCTION_4
0x400012a	        0x488b4308	                mov rax, qword [rbx + 8]	        50	ewah_bitmap.c	FUNCTION_4
0x400012e	        0x488d4801	                      lea rcx, [rax + 1]	        50	ewah_bitmap.c	FUNCTION_4
0x4000132	        0x48894b08	                mov qword [rbx + 8], rcx	        50	ewah_bitmap.c	FUNCTION_4
0x4000136	        0x48892cc2	            mov qword [rdx + rax*8], rbp	        50	ewah_bitmap.c	FUNCTION_4
0x400013a	        0x488b5308	                mov rdx, qword [rbx + 8]	        56	ewah_bitmap.c	FUNCTION_5
0x400013e	          0x488b03	                    mov rax, qword [rbx]	        56	ewah_bitmap.c	FUNCTION_5
0x4000141	      0x488d44d0f8	              lea rax, [rax + rdx*8 - 8]	        56	ewah_bitmap.c	FUNCTION_5
0x4000146	        0x48894320	             mov qword [rbx + 0x20], rax	        56	ewah_bitmap.c	FUNCTION_5
0x400014a	        0x4883c408	                              add rsp, 8	        57	ewah_bitmap.c	FUNCTION_5
0x400014e	              0x5b	                                 pop rbx	        57	ewah_bitmap.c	FUNCTION_5
0x400014f	              0x5d	                                 pop rbp	        57	ewah_bitmap.c	FUNCTION_5
0x4000150	              0xc3	                                     ret	        57	ewah_bitmap.c	FUNCTION_5
ewah_iterator_init	IF,1:FOR,0:SWITCH,0:CALL,1:functions,0:WHILE,0:DO,0:ELSE,0	14
0x4000c2d	          0x488b06	                    mov rax, qword [rsi]	       365	ewah_bitmap.c	FUNCTION_19
0x4000c30	          0x488907	                    mov qword [rdi], rax	       365	ewah_bitmap.c	FUNCTION_19
0x4000c33	        0x488b4608	                mov rax, qword [rsi + 8]	       366	ewah_bitmap.c	FUNCTION_19
0x4000c37	        0x48894708	                mov qword [rdi + 8], rax	       366	ewah_bitmap.c	FUNCTION_19
0x4000c3b	    0x48c747100000	               mov qword [rdi + 0x10], 0	       367	ewah_bitmap.c	FUNCTION_19
0x4000c43	    0x48c747300000	               mov qword [rdi + 0x30], 0	       369	ewah_bitmap.c	FUNCTION_19
0x4000c4b	    0x48c747280000	               mov qword [rdi + 0x28], 0	       370	ewah_bitmap.c	FUNCTION_19
0x4000c53	    0x48c747180000	               mov qword [rdi + 0x18], 0	       371	ewah_bitmap.c	FUNCTION_19
0x4000c5b	    0x48c747200000	               mov qword [rdi + 0x20], 0	       372	ewah_bitmap.c	FUNCTION_19
0x4000c63	    0xc74738000000	               mov dword [rdi + 0x38], 0	       373	ewah_bitmap.c	FUNCTION_19
0x4000c6a	          0x4885c0	                           test rax, rax	       375	ewah_bitmap.c	FUNCTION_19	IF_1
0x4000c6d	            0x7405	                            je 0x4000c74	       375	ewah_bitmap.c	FUNCTION_19	IF_1
0x4000c6f	      0xe8ccf3ffff	                   call sym.read_new_rlw	       376	ewah_bitmap.c	FUNCTION_19	CALL_1
0x4000c74	            0xf3c3	                                     ret	       376	ewah_bitmap.c	FUNCTION_19	CALL_1
ewah_each_bit	IF,2:FOR,3:SWITCH,0:CALL,6:functions,0:WHILE,1:DO,0:ELSE,1	91
0x4000991	            0x4157	                                push r15	       247	ewah_bitmap.c	FUNCTION_13
0x4000993	            0x4156	                                push r14	       247	ewah_bitmap.c	FUNCTION_13
0x4000995	            0x4155	                                push r13	       247	ewah_bitmap.c	FUNCTION_13
0x4000997	            0x4154	                                push r12	       247	ewah_bitmap.c	FUNCTION_13
0x4000999	              0x55	                                push rbp	       247	ewah_bitmap.c	FUNCTION_13
0x400099a	              0x53	                                push rbx	       247	ewah_bitmap.c	FUNCTION_13
0x400099b	        0x4883ec38	                           sub rsp, 0x38	       247	ewah_bitmap.c	FUNCTION_13
0x400099f	          0x4989fd	                            mov r13, rdi	       247	ewah_bitmap.c	FUNCTION_13
0x40009a2	          0x4989f7	                            mov r15, rsi	       247	ewah_bitmap.c	FUNCTION_13
0x40009a5	          0x4989d6	                            mov r14, rdx	       247	ewah_bitmap.c	FUNCTION_13
0x40009a8	    0x48c744242000	               mov qword [rsp + 0x20], 0	       249	ewah_bitmap.c	FUNCTION_13
0x40009b1	    0x48c744240800	                  mov qword [rsp + 8], 0	       248	ewah_bitmap.c	FUNCTION_13
0x40009ba	      0xe9fe000000	                           jmp 0x4000abd	       252	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x40009bf	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x40009c4	    0x4c8d24c50000	                        lea r12, [rax*8]	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x40009cc	          0x4c89e0	                            mov rax, r12	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x40009cf	        0x49034500	                    add rax, qword [r13]	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x40009d3	      0x4889442428	             mov qword [rsp + 0x28], rax	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x40009d8	          0x488b00	                    mov rax, qword [rax]	        34	ewok_rlw.h	FUNCTION_28
0x40009db	            0xa801	                              test al, 1	       255	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_1
0x40009dd	            0x7434	                            je 0x4000a13	       255	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_1
0x40009df	          0x48d1e8	                              shr rax, 1	       256	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_2
0x40009e2	            0x89c3	                            mov ebx, eax	       256	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_2
0x40009e4	        0x48c1e306	                              shl rbx, 6	       256	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_2
0x40009e8	          0x4885db	                           test rbx, rbx	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x40009eb	            0x7436	                            je 0x4000a23	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x40009ed	      0x48035c2408	                add rbx, qword [rsp + 8]	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x40009f2	          0x4c89f6	                            mov rsi, r14	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0x40009f5	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0x40009fa	          0x4889ef	                            mov rdi, rbp	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0x40009fd	          0x41ffd7	                                call r15	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0x4000a00	          0x4889e8	                            mov rax, rbp	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000a03	        0x4883c001	                              add rax, 1	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000a07	      0x4889442408	                mov qword [rsp + 8], rax	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000a0c	          0x4839d8	                            cmp rax, rbx	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000a0f	            0x75e1	                           jne 0x40009f2	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000a11	            0xeb15	                           jmp 0x4000a28	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000a13	          0x48d1e8	                              shr rax, 1	       260	ewah_bitmap.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x4000a16	            0x89c3	                            mov ebx, eax	       260	ewah_bitmap.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x4000a18	        0x48c1e306	                              shl rbx, 6	       260	ewah_bitmap.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x4000a1c	      0x48035c2408	                add rbx, qword [rsp + 8]	       260	ewah_bitmap.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x4000a21	            0xeb05	                           jmp 0x4000a28	       260	ewah_bitmap.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x4000a23	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000a28	    0x488344242001	               add qword [rsp + 0x20], 1	       263	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000a2e	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000a33	          0x488b00	                    mov rax, qword [rax]	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000a36	      0x4889442408	                mov qword [rsp + 8], rax	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000a3b	        0x48c1e821	                           shr rax, 0x21	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000a3f	          0x4885c0	                           test rax, rax	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000a42	            0x7474	                            je 0x4000ab8	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000a44	        0x4983c408	                              add r12, 8	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000a48	      0x48895c2408	                mov qword [rsp + 8], rbx	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000a4d	    0x48c744241000	               mov qword [rsp + 0x10], 0	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000a56	            0xeb54	                           jmp 0x4000aac	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000a58	        0x498b4500	                    mov rax, qword [r13]	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000a5c	        0x4a8b0420	              mov rax, qword [rax + r12]	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000a60	        0x480fa3d8	                             bt rax, rbx	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000a64	            0x7309	                           jae 0x4000a6f	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000a66	          0x4c89f6	                            mov rsi, r14	       271	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	CALL_6
0x4000a69	          0x4889ef	                            mov rdi, rbp	       271	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	CALL_6
0x4000a6c	          0x41ffd7	                                call r15	       271	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	CALL_6
0x4000a6f	          0x83c301	                              add ebx, 1	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0x4000a72	        0x4883c501	                              add rbp, 1	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0x4000a76	          0x83fb40	                           cmp ebx, 0x40	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0x4000a79	            0x75dd	                           jne 0x4000a58	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0x4000a7b	    0x488344240840	               add qword [rsp + 8], 0x40	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0x4000a81	    0x488344242001	               add qword [rsp + 0x20], 1	       274	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2
0x4000a87	    0x488344241001	               add qword [rsp + 0x10], 1	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000a8d	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000a92	        0x4983c408	                              add r12, 8	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000a96	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000a9b	          0x488b00	                    mov rax, qword [rax]	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000a9e	      0x4889442418	             mov qword [rsp + 0x18], rax	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000aa3	        0x48c1e821	                           shr rax, 0x21	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000aa7	          0x4839c1	                            cmp rcx, rax	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000aaa	            0x7311	                           jae 0x4000abd	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000aac	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000ab1	      0xbb00000000	                              mov ebx, 0	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000ab6	            0xeba0	                           jmp 0x4000a58	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000ab8	      0x48895c2408	                mov qword [rsp + 8], rbx	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000abd	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       252	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000ac2	        0x493b4508	                cmp rax, qword [r13 + 8]	       252	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000ac6	     0xf82f3feffff	                            jb 0x40009bf	       252	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000acc	        0x4883c438	                           add rsp, 0x38	       277	ewah_bitmap.c	FUNCTION_13
0x4000ad0	              0x5b	                                 pop rbx	       277	ewah_bitmap.c	FUNCTION_13
0x4000ad1	              0x5d	                                 pop rbp	       277	ewah_bitmap.c	FUNCTION_13
0x4000ad2	            0x415c	                                 pop r12	       277	ewah_bitmap.c	FUNCTION_13
0x4000ad4	            0x415d	                                 pop r13	       277	ewah_bitmap.c	FUNCTION_13
0x4000ad6	            0x415e	                                 pop r14	       277	ewah_bitmap.c	FUNCTION_13
0x4000ad8	            0x415f	                                 pop r15	       277	ewah_bitmap.c	FUNCTION_13
0x4000ada	              0xc3	                                     ret	       277	ewah_bitmap.c	FUNCTION_13
ewah_checksum	IF,0:FOR,0:SWITCH,0:CALL,0:functions,0:WHILE,1:DO,0:ELSE,0	17
0x4001422	          0x488b0f	                    mov rcx, qword [rdi]	       701	ewah_bitmap.c	FUNCTION_27
0x4001425	          0x8b4718	            mov eax, dword [rdi + 0x18] 	       702	ewah_bitmap.c	FUNCTION_27
0x4001428	        0x488b7708	                mov rsi, qword [rdi + 8]	       703	ewah_bitmap.c	FUNCTION_27
0x400142c	        0x48c1e603	                              shl rsi, 3	       703	ewah_bitmap.c	FUNCTION_27
0x4001430	          0x4885f6	                           test rsi, rsi	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4001433	            0x741b	                            je 0x4001450	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4001435	          0x4801ce	                            add rsi, rcx	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4001438	            0x89c2	                            mov edx, eax	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x400143a	          0xc1e205	                              shl edx, 5	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x400143d	            0x29c2	                            sub edx, eax	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x400143f	            0x89d0	                            mov eax, edx	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4001441	        0x4883c101	                              add rcx, 1	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4001445	         0xfb651ff	               movzx edx, byte [rcx - 1]	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4001449	             0x1d0	                            add eax, edx	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x400144b	          0x4839ce	                            cmp rsi, rcx	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x400144e	            0x75e8	                           jne 0x4001438	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4001450	            0xf3c3	                                     ret	       709	ewah_bitmap.c	FUNCTION_27
add_empty_words	IF,6:FOR,0:SWITCH,0:CALL,16:functions,0:WHILE,1:DO,0:ELSE,1	109
0x400050c	            0x4157	                                push r15	        60	ewah_bitmap.c	FUNCTION_6
0x400050e	            0x4156	                                push r14	        60	ewah_bitmap.c	FUNCTION_6
0x4000510	            0x4155	                                push r13	        60	ewah_bitmap.c	FUNCTION_6
0x4000512	            0x4154	                                push r12	        60	ewah_bitmap.c	FUNCTION_6
0x4000514	              0x55	                                push rbp	        60	ewah_bitmap.c	FUNCTION_6
0x4000515	              0x53	                                push rbx	        60	ewah_bitmap.c	FUNCTION_6
0x4000516	        0x4883ec08	                              sub rsp, 8	        60	ewah_bitmap.c	FUNCTION_6
0x400051a	          0x4889fd	                            mov rbp, rdi	        60	ewah_bitmap.c	FUNCTION_6
0x400051d	          0x4189f5	                           mov r13d, esi	        60	ewah_bitmap.c	FUNCTION_6
0x4000520	          0x4889d3	                            mov rbx, rdx	        60	ewah_bitmap.c	FUNCTION_6
0x4000523	        0x488b4f20	            mov rcx, qword [rdi + 0x20] 	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x4000527	          0x488b01	                    mov rax, qword [rcx]	        34	ewok_rlw.h	FUNCTION_28
0x400052a	            0x89c2	                            mov edx, eax	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x400052c	          0x83e201	                              and edx, 1	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x400052f	            0x39d6	                            cmp esi, edx	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x4000531	            0x7437	                            je 0x400056a	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x4000533	          0x4889c2	                            mov rdx, rax	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x4000536	          0x48d1ea	                              shr rdx, 1	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x4000539	            0x89d2	                            mov edx, edx	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x400053b	          0x4889c6	                            mov rsi, rax	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x400053e	        0x48c1ee21	                           shr rsi, 0x21	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x4000542	          0x4801f2	                            add rdx, rsi	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x4000545	            0x7532	                           jne 0x4000579	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x4000547	          0x4585ed	                         test r13d, r13d	        39	ewok_rlw.h	FUNCTION_29	IF_1
0x400054a	            0x740f	                            je 0x400055b	        39	ewok_rlw.h	FUNCTION_29	IF_1
0x400054c	        0x4883c801	                               or rax, 1	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x4000550	          0x488901	                    mov qword [rcx], rax	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x4000553	    0x41bc00000000	                             mov r12d, 0	        61	ewah_bitmap.c	FUNCTION_6
0x4000559	            0xeb3e	                           jmp 0x4000599	        61	ewah_bitmap.c	FUNCTION_6
0x400055b	        0x4883e0fe	             and rax, 0xfffffffffffffffe	        42	ewok_rlw.h	FUNCTION_29	ELSE_1
0x400055f	          0x488901	                    mov qword [rcx], rax	        42	ewok_rlw.h	FUNCTION_29	ELSE_1
0x4000562	    0x41bc00000000	                             mov r12d, 0	        61	ewah_bitmap.c	FUNCTION_6
0x4000568	            0xeb2f	                           jmp 0x4000599	        61	ewah_bitmap.c	FUNCTION_6
0x400056a	        0x48c1e821	                           shr rax, 0x21	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x400056e	    0x41bc00000000	                             mov r12d, 0	        61	ewah_bitmap.c	FUNCTION_6
0x4000574	          0x4885c0	                           test rax, rax	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000577	            0x7420	                            je 0x4000599	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000579	      0xbe00000000	                              mov esi, 0	        68	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x400057e	          0x4889ef	                            mov rdi, rbp	        68	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000581	      0xe83ffbffff	                call sym.buffer_push_rlw	        68	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000586	    0x41bc01000000	                             mov r12d, 1	        70	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2
0x400058c	          0x4585ed	                         test r13d, r13d	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x400058f	            0x7408	                            je 0x4000599	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000591	        0x488b4520	            mov rax, qword [rbp + 0x20] 	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000595	        0x48830801	                       or qword [rax], 1	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x4000599	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	        73	ewah_bitmap.c	FUNCTION_6	CALL_8
0x400059d	          0x4c8b07	                     mov r8, qword [rdi]	        63	ewok_rlw.h	FUNCTION_32
0x40005a0	          0x4c89c0	                             mov rax, r8	        63	ewok_rlw.h	FUNCTION_32
0x40005a3	          0x48d1e8	                              shr rax, 1	        63	ewok_rlw.h	FUNCTION_32
0x40005a6	            0x89c6	                            mov esi, eax	        25	ewah_bitmap.c	FUNCTION_1
0x40005a8	            0xf7d0	                                 not eax	        25	ewah_bitmap.c	FUNCTION_1
0x40005aa	          0x4839d8	                            cmp rax, rbx	        25	ewah_bitmap.c	FUNCTION_1
0x40005ad	        0x480f47c3	                          cmova rax, rbx	        25	ewah_bitmap.c	FUNCTION_1
0x40005b1	          0x4801c6	                            add rsi, rax	        58	ewok_rlw.h	FUNCTION_31
0x40005b4	          0x4801f6	                            add rsi, rsi	        58	ewok_rlw.h	FUNCTION_31
0x40005b7	    0x48ba01000000	          movabs rdx, 0xfffffffe00000001	        58	ewok_rlw.h	FUNCTION_31
0x40005c1	          0x4809d6	                             or rsi, rdx	        58	ewok_rlw.h	FUNCTION_31
0x40005c4	    0x48b9feffffff	                 movabs rcx, 0x1fffffffe	        58	ewok_rlw.h	FUNCTION_31
0x40005ce	          0x4c09c1	                              or rcx, r8	        58	ewok_rlw.h	FUNCTION_31
0x40005d1	          0x4889f2	                            mov rdx, rsi	        58	ewok_rlw.h	FUNCTION_31
0x40005d4	          0x4821ca	                            and rdx, rcx	        58	ewok_rlw.h	FUNCTION_31
0x40005d7	          0x488917	                    mov qword [rdi], rdx	        58	ewok_rlw.h	FUNCTION_31
0x40005da	          0x4829c3	                            sub rbx, rax	        77	ewah_bitmap.c	FUNCTION_6
0x40005dd	      0xb8feffffff	                     mov eax, 0xfffffffe	        79	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x40005e2	          0x4839c3	                            cmp rbx, rax	        79	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x40005e5	            0x7646	                           jbe 0x400062d	        79	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x40005e7	    0x49bffeffffff	                 movabs r15, 0x1fffffffe	        57	ewok_rlw.h	FUNCTION_31
0x40005f1	    0x49be01000000	          movabs r14, 0xffffffff00000001	        84	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x40005fb	      0xbe00000000	                              mov esi, 0	        80	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_11
0x4000600	          0x4889ef	                            mov rdi, rbp	        80	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_11
0x4000603	      0xe8bdfaffff	                call sym.buffer_push_rlw	        80	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_11
0x4000608	        0x4983c401	                              add r12, 1	        81	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x400060c	          0x4585ed	                         test r13d, r13d	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x400060f	            0x7408	                            je 0x4000619	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x4000611	        0x488b4520	            mov rax, qword [rbp + 0x20] 	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x4000615	        0x48830801	                       or qword [rax], 1	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x4000619	        0x488b4520	            mov rax, qword [rbp + 0x20] 	        83	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_13
0x400061d	          0x4c0938	                     or qword [rax], r15	        57	ewok_rlw.h	FUNCTION_31
0x4000620	          0x4c01f3	                            add rbx, r14	        84	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x4000623	      0xb8feffffff	                     mov eax, 0xfffffffe	        79	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x4000628	          0x4839c3	                            cmp rbx, rax	        79	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x400062b	            0x77ce	                            ja 0x40005fb	        79	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x400062d	          0x4885db	                           test rbx, rbx	        87	ewah_bitmap.c	FUNCTION_6	IF_5
0x4000630	            0x7445	                            je 0x4000677	        87	ewah_bitmap.c	FUNCTION_6	IF_5
0x4000632	      0xbe00000000	                              mov esi, 0	        88	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_14
0x4000637	          0x4889ef	                            mov rdi, rbp	        88	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_14
0x400063a	      0xe886faffff	                call sym.buffer_push_rlw	        88	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_14
0x400063f	        0x4983c401	                              add r12, 1	        89	ewah_bitmap.c	FUNCTION_6	IF_5
0x4000643	          0x4585ed	                         test r13d, r13d	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x4000646	            0x7408	                            je 0x4000650	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x4000648	        0x488b4520	            mov rax, qword [rbp + 0x20] 	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x400064c	        0x48830801	                       or qword [rax], 1	        40	ewok_rlw.h	FUNCTION_29	IF_1
0x4000650	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	        92	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_16
0x4000654	    0x48bafeffffff	                 movabs rdx, 0x1fffffffe	        58	ewok_rlw.h	FUNCTION_31
0x400065e	          0x480b11	                     or rdx, qword [rcx]	        58	ewok_rlw.h	FUNCTION_31
0x4000661	          0x4801db	                            add rbx, rbx	        58	ewok_rlw.h	FUNCTION_31
0x4000664	    0x48b801000000	          movabs rax, 0xfffffffe00000001	        58	ewok_rlw.h	FUNCTION_31
0x400066e	          0x4809c3	                             or rbx, rax	        58	ewok_rlw.h	FUNCTION_31
0x4000671	          0x4821d3	                            and rbx, rdx	        58	ewok_rlw.h	FUNCTION_31
0x4000674	          0x488919	                    mov qword [rcx], rbx	        58	ewok_rlw.h	FUNCTION_31
0x4000677	          0x4c89e0	                            mov rax, r12	        96	ewah_bitmap.c	FUNCTION_6
0x400067a	        0x4883c408	                              add rsp, 8	        96	ewah_bitmap.c	FUNCTION_6
0x400067e	              0x5b	                                 pop rbx	        96	ewah_bitmap.c	FUNCTION_6
0x400067f	              0x5d	                                 pop rbp	        96	ewah_bitmap.c	FUNCTION_6
0x4000680	            0x415c	                                 pop r12	        96	ewah_bitmap.c	FUNCTION_6
0x4000682	            0x415d	                                 pop r13	        96	ewah_bitmap.c	FUNCTION_6
0x4000684	            0x415e	                                 pop r14	        96	ewah_bitmap.c	FUNCTION_6
0x4000686	            0x415f	                                 pop r15	        96	ewah_bitmap.c	FUNCTION_6
0x4000688	              0xc3	                                     ret	        96	ewah_bitmap.c	FUNCTION_6
