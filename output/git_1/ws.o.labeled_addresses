ws_check	IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:CALL,1:FOR,0:WHILE,0	8
0x40007e0	        0x4883ec10	                           sub rsp, 0x10	       256	ws.c	FUNCTION_6
0x40007e4	            0x6a00	                                  push 0	       257	ws.c	FUNCTION_6	CALL_1
0x40007e6	    0x41b900000000	                              mov r9d, 0	       257	ws.c	FUNCTION_6	CALL_1
0x40007ec	    0x41b800000000	                              mov r8d, 0	       257	ws.c	FUNCTION_6	CALL_1
0x40007f2	      0xb900000000	                              mov ecx, 0	       257	ws.c	FUNCTION_6	CALL_1
0x40007f7	      0xe844f8ffff	                call sym.ws_check_emit_1	       257	ws.c	FUNCTION_6	CALL_1
0x40007fc	        0x4883c418	                           add rsp, 0x18	       258	ws.c	FUNCTION_6
0x4000800	              0xc3	                                     ret	       258	ws.c	FUNCTION_6
parse_whitespace_rule	IF,7:SWITCH,0:DO,0:ELSE,2:functions,0:CALL,8:FOR,1:WHILE,1	100
0x4000433	            0x4157	                                push r15	        26	ws.c	FUNCTION_1
0x4000435	            0x4156	                                push r14	        26	ws.c	FUNCTION_1
0x4000437	            0x4155	                                push r13	        26	ws.c	FUNCTION_1
0x4000439	            0x4154	                                push r12	        26	ws.c	FUNCTION_1
0x400043b	              0x55	                                push rbp	        26	ws.c	FUNCTION_1
0x400043c	              0x53	                                push rbx	        26	ws.c	FUNCTION_1
0x400043d	        0x4883ec18	                           sub rsp, 0x18	        26	ws.c	FUNCTION_1
0x4000441	          0x4885ff	                           test rdi, rdi	        29	ws.c	FUNCTION_1	WHILE_1
0x4000444	     0xf8427010000	                            je 0x4000571	        29	ws.c	FUNCTION_1	WHILE_1
0x400044a	          0x4989fc	                            mov r12, rdi	        29	ws.c	FUNCTION_1	WHILE_1
0x400044d	    0x41bec8040000	                         mov r14d, 0x4c8	        29	ws.c	FUNCTION_1	WHILE_1
0x4000453	      0xbe00000000	                              mov esi, 0	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x4000458	          0x4c89e7	                            mov rdi, r12	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x400045b	      0xe800000000	                          call 0x4000460	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x4000460	        0x498d1c04	                    lea rbx, [r12 + rax]	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x4000464	      0xbe2c000000	                           mov esi, 0x2c	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x4000469	          0x4889df	                            mov rdi, rbx	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x400046c	      0xe800000000	                          call 0x4000471	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x4000471	          0x4989c4	                            mov r12, rax	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x4000474	          0x4989c5	                            mov r13, rax	        37	ws.c	FUNCTION_1	WHILE_1
0x4000477	          0x4929dd	                            sub r13, rbx	        37	ws.c	FUNCTION_1	WHILE_1
0x400047a	    0x41bf00000000	                             mov r15d, 0	        33	ws.c	FUNCTION_1	WHILE_1
0x4000480	          0x803b2d	                    cmp byte [rbx], 0x2d	        39	ws.c	FUNCTION_1	WHILE_1	IF_1
0x4000483	     0xf85f0000000	                           jne 0x4000579	        39	ws.c	FUNCTION_1	WHILE_1	IF_1
0x4000489	        0x4883c301	                              add rbx, 1	        41	ws.c	FUNCTION_1	WHILE_1	IF_1
0x400048d	        0x4983ed01	                              sub r13, 1	        42	ws.c	FUNCTION_1	WHILE_1	IF_1
0x4000491	    0x41bf01000000	                             mov r15d, 1	        40	ws.c	FUNCTION_1	WHILE_1	IF_1
0x4000497	      0xe9dd000000	                           jmp 0x4000579	        40	ws.c	FUNCTION_1	WHILE_1	IF_1
0x400049c	        0x896c240c	              mov dword [rsp + 0xc], ebp	        40	ws.c	FUNCTION_1	WHILE_1	IF_1
0x40004a0	          0x4889e8	                            mov rax, rbp	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40004a3	        0x48c1e004	                              shl rax, 4	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40004a7	    0x488bb8000000	                    mov rdi, qword [rax]	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40004ae	          0x4c89ea	                            mov rdx, r13	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40004b1	          0x4889de	                            mov rsi, rbx	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40004b4	      0xe800000000	                          call 0x40004b9	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40004b9	            0x85c0	                           test eax, eax	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40004bb	            0x740c	                            je 0x40004c9	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40004bd	        0x4883c501	                              add rbp, 1	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40004c1	        0x4883fd07	                              cmp rbp, 7	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x40004c5	            0x75d5	                           jne 0x400049c	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x40004c7	            0xeb2b	                           jmp 0x40004f4	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x40004c9	          0x4585ff	                         test r15d, r15d	        50	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40004cc	            0x7416	                            je 0x40004e4	        50	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40004ce	      0x486344240c	          movsxd rax, dword [rsp + 0xc] 	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40004d3	        0x48c1e004	                              shl rax, 4	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40004d7	    0x8b8000000000	                    mov eax, dword [rax]	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40004dd	            0xf7d0	                                 not eax	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40004df	          0x4121c6	                           and r14d, eax	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40004e2	            0xeb10	                           jmp 0x40004f4	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40004e4	      0x486344240c	          movsxd rax, dword [rsp + 0xc] 	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x40004e9	        0x48c1e004	                              shl rax, 4	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x40004ed	    0x440bb0000000	                    or r14d, dword [rax]	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x40004f4	      0xbf00000000	                              mov edi, 0	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x40004f9	      0xb909000000	                              mov ecx, 9	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x40004fe	          0x4889de	                            mov rsi, rbx	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x4000501	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x4000503	           0xf97c2	                                 seta dl	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x4000506	           0xf92c0	                                 setb al	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x4000509	            0x38c2	                              cmp dl, al	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x400050b	            0x753d	                           jne 0x400054a	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x400050d	        0x4883c309	                              add rbx, 9	        57	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_6
0x4000511	      0xba0a000000	                            mov edx, 0xa	       280	stdlib.h	FUNCTION_9	CALL_2
0x4000516	      0xbe00000000	                              mov esi, 0	       280	stdlib.h	FUNCTION_9	CALL_2
0x400051b	          0x4889df	                            mov rdi, rbx	       280	stdlib.h	FUNCTION_9	CALL_2
0x400051e	      0xe800000000	                          call 0x4000523	       280	stdlib.h	FUNCTION_9	CALL_2
0x4000523	          0x8d50ff	                      lea edx, [rax - 1]	        58	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x4000526	          0x83fa3e	                           cmp edx, 0x3e	        58	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x4000529	            0x7709	                            ja 0x4000534	        58	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x400052b	        0x4183e6c0	                    and r14d, 0xffffffc0	        59	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x400052f	          0x4109c6	                            or r14d, eax	        60	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x4000532	            0xeb16	                           jmp 0x400054a	        60	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x4000534	        0x418d75f7	                      lea esi, [r13 - 9]	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x4000538	          0x4889da	                            mov rdx, rbx	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x400053b	      0xbf00000000	                              mov edi, 0	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x4000540	      0xb800000000	                              mov eax, 0	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x4000545	      0xe800000000	                          call 0x400054a	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x400054a	          0x4d85e4	                           test r12, r12	        29	ws.c	FUNCTION_1	WHILE_1
0x400054d	     0xf8500ffffff	                           jne 0x4000453	        29	ws.c	FUNCTION_1	WHILE_1
0x4000553	          0x4489f0	                           mov eax, r14d	        69	ws.c	FUNCTION_1	IF_7
0x4000556	      0x2500090000	                          and eax, 0x900	        69	ws.c	FUNCTION_1	IF_7
0x400055b	      0x3d00090000	                          cmp eax, 0x900	        69	ws.c	FUNCTION_1	IF_7
0x4000560	            0x7526	                           jne 0x4000588	        69	ws.c	FUNCTION_1	IF_7
0x4000562	      0xbf00000000	                              mov edi, 0	        70	ws.c	FUNCTION_1	CALL_8
0x4000567	      0xb800000000	                              mov eax, 0	        70	ws.c	FUNCTION_1	CALL_8
0x400056c	      0xe800000000	                          call 0x4000571	        70	ws.c	FUNCTION_1	CALL_8
0x4000571	    0x41bec8040000	                         mov r14d, 0x4c8	        27	ws.c	FUNCTION_1
0x4000577	            0xeb0f	                           jmp 0x4000588	        71	ws.c	FUNCTION_1
0x4000579	          0x4d85ed	                           test r13, r13	        44	ws.c	FUNCTION_1	WHILE_1	IF_2
0x400057c	            0x74d5	                            je 0x4000553	        44	ws.c	FUNCTION_1	WHILE_1	IF_2
0x400057e	      0xbd00000000	                              mov ebp, 0	        44	ws.c	FUNCTION_1	WHILE_1	IF_2
0x4000583	      0xe914ffffff	                           jmp 0x400049c	        44	ws.c	FUNCTION_1	WHILE_1	IF_2
0x4000588	          0x4489f0	                           mov eax, r14d	        72	ws.c	FUNCTION_1
0x400058b	        0x4883c418	                           add rsp, 0x18	        72	ws.c	FUNCTION_1
0x400058f	              0x5b	                                 pop rbx	        72	ws.c	FUNCTION_1
0x4000590	              0x5d	                                 pop rbp	        72	ws.c	FUNCTION_1
0x4000591	            0x415c	                                 pop r12	        72	ws.c	FUNCTION_1
0x4000593	            0x415d	                                 pop r13	        72	ws.c	FUNCTION_1
0x4000595	            0x415e	                                 pop r14	        72	ws.c	FUNCTION_1
0x4000597	            0x415f	                                 pop r15	        72	ws.c	FUNCTION_1
0x4000599	              0xc3	                                     ret	        72	ws.c	FUNCTION_1
whitespace_error_string	IF,10:SWITCH,0:DO,0:ELSE,1:functions,0:CALL,11:FOR,0:WHILE,0	88
0x4000659	              0x53	                                push rbx	       111	ws.c	FUNCTION_3
0x400065a	        0x4883ec20	                           sub rsp, 0x20	       111	ws.c	FUNCTION_3
0x400065e	            0x89fb	                            mov ebx, edi	       111	ws.c	FUNCTION_3
0x4000660	    0x64488b042528	                mov rax, qword fs:[0x28]	       111	ws.c	FUNCTION_3
0x4000669	      0x4889442418	             mov qword [rsp + 0x18], rax	       111	ws.c	FUNCTION_3
0x400066e	            0x31c0	                            xor eax, eax	       111	ws.c	FUNCTION_3
0x4000670	    0x48c704240000	                      mov qword [rsp], 0	       112	ws.c	FUNCTION_3
0x4000678	    0x48c744240800	                  mov qword [rsp + 8], 0	       112	ws.c	FUNCTION_3
0x4000681	    0x48c744241000	               mov qword [rsp + 0x10], 0	       112	ws.c	FUNCTION_3
0x400068a	            0x89f8	                            mov eax, edi	       113	ws.c	FUNCTION_3	IF_1
0x400068c	      0x2540040000	                          and eax, 0x440	       113	ws.c	FUNCTION_3	IF_1
0x4000691	      0x3d40040000	                          cmp eax, 0x440	       113	ws.c	FUNCTION_3	IF_1
0x4000696	            0x7514	                           jne 0x40006ac	       113	ws.c	FUNCTION_3	IF_1
0x4000698	      0xba13000000	                           mov edx, 0x13	       279	strbuf.h	FUNCTION_16	CALL_2
0x400069d	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006a2	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006a5	      0xe800000000	                          call 0x40006aa	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006aa	            0xeb4d	                           jmp 0x40006f9	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006ac	        0x40f6c740	                          test dil, 0x40	       116	ws.c	FUNCTION_3	ELSE_1	IF_2
0x40006b0	     0xf84f5000000	                            je 0x40007ab	       116	ws.c	FUNCTION_3	ELSE_1	IF_2
0x40006b6	      0xba13000000	                           mov edx, 0x13	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006bb	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006c0	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006c3	      0xe800000000	                          call 0x40006c8	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006c8	          0xf6c704	                              test bh, 4	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x40006cb	            0x742c	                            je 0x40006f9	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x40006cd	    0x48837c240800	                  cmp qword [rsp + 8], 0	       119	ws.c	FUNCTION_3	ELSE_1	IF_3	IF_4
0x40006d3	            0x7412	                            je 0x40006e7	       119	ws.c	FUNCTION_3	ELSE_1	IF_3	IF_4
0x40006d5	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006da	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006df	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006e2	      0xe800000000	                          call 0x40006e7	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006e7	      0xba15000000	                           mov edx, 0x15	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006ec	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006f1	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006f4	      0xe800000000	                          call 0x40006f9	       279	strbuf.h	FUNCTION_16	CALL_2
0x40006f9	          0xf6c380	                           test bl, 0x80	       124	ws.c	FUNCTION_3	IF_5
0x40006fc	            0x742c	                            je 0x400072a	       124	ws.c	FUNCTION_3	IF_5
0x40006fe	    0x48837c240800	                  cmp qword [rsp + 8], 0	       125	ws.c	FUNCTION_3	IF_5	IF_6
0x4000704	            0x7412	                            je 0x4000718	       125	ws.c	FUNCTION_3	IF_5	IF_6
0x4000706	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_16	CALL_2
0x400070b	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000710	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000713	      0xe800000000	                          call 0x4000718	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000718	      0xba1a000000	                           mov edx, 0x1a	       279	strbuf.h	FUNCTION_16	CALL_2
0x400071d	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000722	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000725	      0xe800000000	                          call 0x400072a	       279	strbuf.h	FUNCTION_16	CALL_2
0x400072a	          0xf6c701	                              test bh, 1	       129	ws.c	FUNCTION_3	IF_7
0x400072d	            0x742c	                            je 0x400075b	       129	ws.c	FUNCTION_3	IF_7
0x400072f	    0x48837c240800	                  cmp qword [rsp + 8], 0	       130	ws.c	FUNCTION_3	IF_7	IF_8
0x4000735	            0x7412	                            je 0x4000749	       130	ws.c	FUNCTION_3	IF_7	IF_8
0x4000737	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_16	CALL_2
0x400073c	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000741	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000744	      0xe800000000	                          call 0x4000749	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000749	      0xba12000000	                           mov edx, 0x12	       279	strbuf.h	FUNCTION_16	CALL_2
0x400074e	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000753	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000756	      0xe800000000	                          call 0x400075b	       279	strbuf.h	FUNCTION_16	CALL_2
0x400075b	          0xf6c708	                              test bh, 8	       134	ws.c	FUNCTION_3	IF_9
0x400075e	            0x742c	                            je 0x400078c	       134	ws.c	FUNCTION_3	IF_9
0x4000760	    0x48837c240800	                  cmp qword [rsp + 8], 0	       135	ws.c	FUNCTION_3	IF_9	IF_10
0x4000766	            0x7412	                            je 0x400077a	       135	ws.c	FUNCTION_3	IF_9	IF_10
0x4000768	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_16	CALL_2
0x400076d	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000772	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000775	      0xe800000000	                          call 0x400077a	       279	strbuf.h	FUNCTION_16	CALL_2
0x400077a	      0xba0d000000	                            mov edx, 0xd	       279	strbuf.h	FUNCTION_16	CALL_2
0x400077f	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000784	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000787	      0xe800000000	                          call 0x400078c	       279	strbuf.h	FUNCTION_16	CALL_2
0x400078c	      0xbe00000000	                              mov esi, 0	       139	ws.c	FUNCTION_3	CALL_11
0x4000791	          0x4889e7	                            mov rdi, rsp	       139	ws.c	FUNCTION_3	CALL_11
0x4000794	      0xe800000000	                          call 0x4000799	       139	ws.c	FUNCTION_3	CALL_11
0x4000799	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       140	ws.c	FUNCTION_3
0x400079e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       140	ws.c	FUNCTION_3
0x40007a7	            0x741f	                            je 0x40007c8	       140	ws.c	FUNCTION_3
0x40007a9	            0xeb18	                           jmp 0x40007c3	       140	ws.c	FUNCTION_3
0x40007ab	          0xf6c704	                              test bh, 4	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x40007ae	     0xf8533ffffff	                           jne 0x40006e7	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x40007b4	        0x40f6c780	                          test dil, 0x80	       124	ws.c	FUNCTION_3	IF_5
0x40007b8	     0xf855affffff	                           jne 0x4000718	       124	ws.c	FUNCTION_3	IF_5
0x40007be	      0xe967ffffff	                           jmp 0x400072a	       124	ws.c	FUNCTION_3	IF_5
0x40007c3	      0xe800000000	                          call 0x40007c8	       140	ws.c	FUNCTION_3
0x40007c8	        0x4883c420	                           add rsp, 0x20	       140	ws.c	FUNCTION_3
0x40007cc	              0x5b	                                 pop rbx	       140	ws.c	FUNCTION_3
0x40007cd	              0xc3	                                     ret	       140	ws.c	FUNCTION_3
whitespace_rule	IF,6:SWITCH,0:DO,0:ELSE,4:functions,0:CALL,9:FOR,1:WHILE,0	49
0x400059a	              0x53	                                push rbx	        75	ws.c	FUNCTION_2
0x400059b	          0x4889fb	                            mov rbx, rdi	        75	ws.c	FUNCTION_2
0x400059e	    0x48833d000000	               cmp qword [0x040005a6], 0	        78	ws.c	FUNCTION_2	IF_1
0x40005a6	            0x751b	                           jne 0x40005c3	        78	ws.c	FUNCTION_2	IF_1
0x40005a8	      0xbe00000000	                              mov esi, 0	        79	ws.c	FUNCTION_2	CALL_1
0x40005ad	      0xbf00000000	                              mov edi, 0	        79	ws.c	FUNCTION_2	CALL_1
0x40005b2	      0xb800000000	                              mov eax, 0	        79	ws.c	FUNCTION_2	CALL_1
0x40005b7	      0xe800000000	                          call 0x40005bc	        79	ws.c	FUNCTION_2	CALL_1
0x40005bc	    0x488905000000	            mov qword [0x040005c3], rax 	        79	ws.c	FUNCTION_2	CALL_1
0x40005c3	    0x488b35000000	            mov rsi, qword [0x040005ca] 	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x40005ca	          0x4889df	                            mov rdi, rbx	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x40005cd	      0xe800000000	                          call 0x40005d2	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x40005d2	    0x8b1500000000	            mov edx, dword [0x040005d8] 	       105	ws.c	FUNCTION_2	ELSE_4
0x40005d8	            0x85c0	                           test eax, eax	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x40005da	            0x7579	                           jne 0x4000655	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x40005dc	    0x488b05000000	            mov rax, qword [0x040005e3] 	        84	ws.c	FUNCTION_2	IF_2
0x40005e3	        0x488b4008	                mov rax, qword [rax + 8]	        84	ws.c	FUNCTION_2	IF_2
0x40005e7	        0x488b7808	                mov rdi, qword [rax + 8]	        84	ws.c	FUNCTION_2	IF_2
0x40005eb	    0x4881ff000000	                              cmp rdi, 0	        85	ws.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40005f2	            0x753d	                           jne 0x4000631	        85	ws.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40005f4	          0x83e23f	                           and edx, 0x3f	        87	ws.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x40005f7	      0xbe00000000	                              mov esi, 0	        87	ws.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x40005fc	      0xb800000000	                              mov eax, 0	        87	ws.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x4000601	          0x4863c8	                         movsxd rcx, eax	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000604	        0x48c1e104	                              shl rcx, 4	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000608	    0xf68100000000	                      test byte [rcx], 1	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x400060f	            0x7512	                           jne 0x4000623	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000611	          0x4863c8	                         movsxd rcx, eax	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000614	        0x48c1e104	                              shl rcx, 4	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000618	    0xf68100000000	                      test byte [rcx], 2	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x400061f	            0x7502	                           jne 0x4000623	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000621	             0xb16	                     or edx, dword [rsi]	        92	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000623	          0x83c001	                              add eax, 1	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x4000626	        0x4883c610	                           add rsi, 0x10	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x400062a	          0x83f807	                              cmp eax, 7	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x400062d	            0x75d2	                           jne 0x4000601	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x400062f	            0xeb24	                           jmp 0x4000655	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x4000631	    0x8b1500000000	            mov edx, dword [0x04000637] 	        96	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_7
0x4000637	          0x83e23f	                           and edx, 0x3f	        96	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_7
0x400063a	    0x4881ff000000	                              cmp rdi, 0	        94	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_6
0x4000641	            0x7412	                            je 0x4000655	        94	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_6
0x4000643	    0x8b1500000000	            mov edx, dword [0x04000649] 	        99	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6
0x4000649	          0x4885ff	                           test rdi, rdi	        97	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6	CALL_8
0x400064c	            0x7407	                            je 0x4000655	        97	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6	CALL_8
0x400064e	      0xe800000000	                          call 0x4000653	       102	ws.c	FUNCTION_2	IF_2	ELSE_3	CALL_9
0x4000653	            0x89c2	                            mov edx, eax	       102	ws.c	FUNCTION_2	IF_2	ELSE_3	CALL_9
0x4000655	            0x89d0	                            mov eax, edx	       107	ws.c	FUNCTION_2
0x4000657	              0x5b	                                 pop rbx	       107	ws.c	FUNCTION_2
0x4000658	              0xc3	                                     ret	       107	ws.c	FUNCTION_2
ws_check_emit	IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:CALL,1:FOR,0:WHILE,0	5
0x40007ce	        0x4883ec10	                           sub rsp, 0x10	       251	ws.c	FUNCTION_5
0x40007d2	        0xff742418	                 push qword [rsp + 0x18]	       252	ws.c	FUNCTION_5	CALL_1
0x40007d6	      0xe865f8ffff	                call sym.ws_check_emit_1	       252	ws.c	FUNCTION_5	CALL_1
0x40007db	        0x4883c418	                           add rsp, 0x18	       253	ws.c	FUNCTION_5
0x40007df	              0xc3	                                     ret	       253	ws.c	FUNCTION_5
ws_fix_copy	IF,18:SWITCH,0:DO,1:ELSE,6:functions,0:CALL,13:FOR,3:WHILE,2	335
0x4000848	            0x4157	                                push r15	       277	ws.c	FUNCTION_8
0x400084a	            0x4156	                                push r14	       277	ws.c	FUNCTION_8
0x400084c	            0x4155	                                push r13	       277	ws.c	FUNCTION_8
0x400084e	            0x4154	                                push r12	       277	ws.c	FUNCTION_8
0x4000850	              0x55	                                push rbp	       277	ws.c	FUNCTION_8
0x4000851	              0x53	                                push rbx	       277	ws.c	FUNCTION_8
0x4000852	        0x4883ec28	                           sub rsp, 0x28	       277	ws.c	FUNCTION_8
0x4000856	          0x4889fb	                            mov rbx, rdi	       277	ws.c	FUNCTION_8
0x4000859	          0x4989f7	                            mov r15, rsi	       277	ws.c	FUNCTION_8
0x400085c	          0x4189d6	                           mov r14d, edx	       277	ws.c	FUNCTION_8
0x400085f	      0x4c89442408	                 mov qword [rsp + 8], r8	       277	ws.c	FUNCTION_8
0x4000864	          0xf6c140	                           test cl, 0x40	       294	ws.c	FUNCTION_8	IF_1
0x4000867	     0xf8493000000	                            je 0x4000900	       294	ws.c	FUNCTION_8	IF_1
0x400086d	            0x85d2	                           test edx, edx	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x400086f	     0xf8e51040000	                           jle 0x4000cc6	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000875	          0x4863c2	                         movsxd rax, edx	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000878	    0xc70424000000	                      mov dword [rsp], 0	       284	ws.c	FUNCTION_8
0x400087f	      0x807c06ff0a	          cmp byte [rsi + rax - 1], 0xa 	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000884	     0xf8561040000	                           jne 0x4000ceb	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x400088a	          0x8d42ff	                      lea eax, [rdx - 1]	       297	ws.c	FUNCTION_8	IF_1	IF_2
0x400088d	            0x85c0	                           test eax, eax	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x400088f	     0xf8e3d040000	                           jle 0x4000cd2	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000895	          0x4863d0	                         movsxd rdx, eax	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000898	      0x807c16ff0d	          cmp byte [rsi + rdx - 1], 0xd 	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x400089d	     0xf853e040000	                           jne 0x4000ce1	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x40008a3	            0x89c8	                            mov eax, ecx	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x40008a5	          0xc1e809	                              shr eax, 9	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x40008a8	          0x83e001	                              and eax, 1	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x40008ab	        0x89442404	                mov dword [rsp + 4], eax	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x40008af	        0x4183ee02	                             sub r14d, 2	       300	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x40008b3	          0x4585f6	                         test r14d, r14d	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x40008b6	     0xf8e47040000	                           jle 0x4000d03	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x40008bc	    0xc70424010000	                      mov dword [rsp], 1	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x40008c3	          0x4963c6	                        movsxd rax, r14d	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x40008c6	    0x410fb64407ff	         movzx eax, byte [r15 + rax - 1]	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x40008cc	    0xf68000000000	                      test byte [rax], 1	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x40008d3	     0xf841f040000	                            je 0x4000cf8	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x40008d9	        0x4183ee01	                             sub r14d, 1	       305	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1
0x40008dd	          0x4585f6	                         test r14d, r14d	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x40008e0	     0xf8e2c040000	                           jle 0x4000d12	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x40008e6	          0x4963c6	                        movsxd rax, r14d	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x40008e9	    0x410fb64407ff	         movzx eax, byte [r15 + rax - 1]	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x40008ef	    0xf68000000000	                      test byte [rax], 1	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x40008f6	            0x75e1	                           jne 0x40008d9	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x40008f8	    0x41bd01000000	                             mov r13d, 1	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x40008fe	            0xeb1e	                           jmp 0x400091e	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x4000900	    0xc70424000000	                      mov dword [rsp], 0	       284	ws.c	FUNCTION_8
0x4000907	          0x4585f6	                         test r14d, r14d	       313	ws.c	FUNCTION_8	FOR_1
0x400090a	     0xf8efb020000	                           jle 0x4000c0b	       313	ws.c	FUNCTION_8	FOR_1
0x4000910	    0x41bd00000000	                             mov r13d, 0	       313	ws.c	FUNCTION_8	FOR_1
0x4000916	    0xc74424040000	                  mov dword [rsp + 4], 0	       313	ws.c	FUNCTION_8	FOR_1
0x400091e	      0xb800000000	                              mov eax, 0	       313	ws.c	FUNCTION_8	FOR_1
0x4000923	      0xbf00000000	                              mov edi, 0	       313	ws.c	FUNCTION_8	FOR_1
0x4000928	    0x41bcffffffff	                    mov r12d, 0xffffffff	       313	ws.c	FUNCTION_8	FOR_1
0x400092e	          0x4589e0	                           mov r8d, r12d	       313	ws.c	FUNCTION_8	FOR_1
0x4000931	          0x4189c9	                            mov r9d, ecx	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000934	    0x4181e1000100	                          and r9d, 0x100	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x400093b	            0x89cd	                            mov ebp, ecx	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x400093d	          0x83e53f	                           and ebp, 0x3f	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000940	    0x41bb01000000	                             mov r11d, 1	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000946	          0x4189ca	                           mov r10d, ecx	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000949	        0x41c1ea07	                             shr r10d, 7	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x400094d	        0x4183e201	                             and r10d, 1	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000951	            0x89c6	                            mov esi, eax	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000953	      0x410fb61407	             movzx edx, byte [r15 + rax]	       314	ws.c	FUNCTION_8	FOR_1
0x4000958	          0x80fa09	                               cmp dl, 9	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x400095b	            0x7514	                           jne 0x4000971	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x400095d	          0x4584d2	                         test r10b, r10b	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000960	            0x7429	                            je 0x400098b	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000962	          0x4585e4	                         test r12d, r12d	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000965	            0x7824	                            js 0x400098b	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000967	          0x4189c0	                            mov r8d, eax	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x400096a	      0xbf01000000	                              mov edi, 1	       319	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x400096f	            0xeb1d	                           jmp 0x400098e	       319	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000971	          0x80fa20	                            cmp dl, 0x20	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000974	            0x7521	                           jne 0x4000997	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000976	          0x4189c4	                           mov r12d, eax	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000979	          0x4585c9	                           test r9d, r9d	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x400097c	            0x7410	                            je 0x400098e	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x400097e	            0x89c2	                            mov edx, eax	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000980	          0x4429c2	                            sub edx, r8d	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000983	            0x39d5	                            cmp ebp, edx	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000985	        0x410f46fb	                        cmovbe edi, r11d	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000989	            0xeb03	                           jmp 0x400098e	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x400098b	          0x4189f0	                            mov r8d, esi	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x400098e	        0x4883c001	                              add rax, 1	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000992	          0x4139c6	                           cmp r14d, eax	       313	ws.c	FUNCTION_8	FOR_1
0x4000995	            0x7fba	                            jg 0x4000951	       313	ws.c	FUNCTION_8	FOR_1
0x4000997	            0x85ff	                           test edi, edi	       329	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000999	     0xf845c010000	                            je 0x4000afb	       329	ws.c	FUNCTION_8	ELSE_2	IF_9
0x400099f	          0xf6c501	                              test ch, 1	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x40009a2	            0x7413	                            je 0x40009b7	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x40009a4	          0x4539e0	                           cmp r8d, r12d	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x40009a7	           0xf9cc0	                                 setl al	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x40009aa	      0x418d7c2401	                      lea edi, [r12 + 1]	       337	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x40009af	        0x897c2418	             mov dword [rsp + 0x18], edi	       337	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x40009b3	            0x84c0	                             test al, al	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x40009b5	            0x7508	                           jne 0x40009bf	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x40009b7	        0x418d4001	                       lea eax, [r8 + 1]	       332	ws.c	FUNCTION_8	ELSE_2	IF_9
0x40009bb	        0x89442418	             mov dword [rsp + 0x18], eax	       332	ws.c	FUNCTION_8	ELSE_2	IF_9
0x40009bf	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x40009c3	            0x85c0	                           test eax, eax	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x40009c5	     0xf8e18010000	                           jle 0x4000ae3	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x40009cb	          0x4d89fd	                            mov r13, r15	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x40009ce	          0x8d40ff	                      lea eax, [rax - 1]	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x40009d1	      0x4d8d640701	                lea r12, [r15 + rax + 1]	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x40009d6	      0xb800000000	                              mov eax, 0	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x40009db	          0x83e13f	                           and ecx, 0x3f	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x40009de	      0x4489742410	            mov dword [rsp + 0x10], r14d	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x40009e3	          0x4189ce	                           mov r14d, ecx	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x40009e6	      0x410fb66d00	                   movzx ebp, byte [r13]	       347	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x40009eb	        0x4080fd20	                           cmp bpl, 0x20	       348	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0x40009ef	            0x7446	                            je 0x4000a37	       348	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0x40009f1	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_13
0x40009f4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_13
0x40009f7	            0x740a	                            je 0x4000a03	       141	strbuf.h	FUNCTION_13
0x40009f9	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x40009fd	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000a01	            0x750d	                           jne 0x4000a10	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000a03	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000a08	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000a0b	      0xe800000000	                          call 0x4000a10	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000a10	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_15
0x4000a14	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_15
0x4000a18	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_15
0x4000a1c	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_15
0x4000a20	        0x40882c02	               mov byte [rdx + rax], bpl	       229	strbuf.h	FUNCTION_15
0x4000a24	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_15
0x4000a28	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_15
0x4000a2c	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_15
0x4000a30	      0xb800000000	                              mov eax, 0	       349	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0x4000a35	            0xeb4c	                           jmp 0x4000a83	       349	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0x4000a37	          0x83c001	                              add eax, 1	       352	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4
0x4000a3a	          0x4139c6	                           cmp r14d, eax	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000a3d	            0x7544	                           jne 0x4000a83	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000a3f	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_13
0x4000a42	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_13
0x4000a45	            0x740a	                            je 0x4000a51	       141	strbuf.h	FUNCTION_13
0x4000a47	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000a4b	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000a4f	            0x750d	                           jne 0x4000a5e	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000a51	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000a56	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000a59	      0xe800000000	                          call 0x4000a5e	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000a5e	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_15
0x4000a62	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_15
0x4000a66	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_15
0x4000a6a	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_15
0x4000a6e	        0xc6040209	                 mov byte [rdx + rax], 9	       229	strbuf.h	FUNCTION_15
0x4000a72	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_15
0x4000a76	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_15
0x4000a7a	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_15
0x4000a7e	      0xb800000000	                              mov eax, 0	       355	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13
0x4000a83	        0x4983c501	                              add r13, 1	       355	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13
0x4000a87	          0x4d39ec	                            cmp r12, r13	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000a8a	     0xf8556ffffff	                           jne 0x40009e6	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000a90	      0x448b742410	           mov r14d, dword [rsp + 0x10] 	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000a95	          0x8d68ff	                      lea ebp, [rax - 1]	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000a98	            0x85c0	                           test eax, eax	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000a9a	            0x7e47	                           jle 0x4000ae3	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000a9c	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_13
0x4000a9f	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_13
0x4000aa2	            0x740a	                            je 0x4000aae	       141	strbuf.h	FUNCTION_13
0x4000aa4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000aa8	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000aac	            0x750d	                           jne 0x4000abb	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000aae	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000ab3	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000ab6	      0xe800000000	                          call 0x4000abb	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000abb	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_15
0x4000abf	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_15
0x4000ac3	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_15
0x4000ac7	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_15
0x4000acb	        0xc6040220	              mov byte [rdx + rax], 0x20	       229	strbuf.h	FUNCTION_15
0x4000acf	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_15
0x4000ad3	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_15
0x4000ad7	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_15
0x4000adb	          0x83ed01	                              sub ebp, 1	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000ade	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000ae1	            0x75b9	                           jne 0x4000a9c	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000ae3	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       361	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000ae7	          0x4129c6	                           sub r14d, eax	       361	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000aea	          0x4c63e0	                         movsxd r12, eax	       362	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000aed	          0x4d01e7	                            add r15, r12	       362	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000af0	    0x41bd01000000	                             mov r13d, 1	       363	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000af6	      0xe91e010000	                           jmp 0x4000c19	       363	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000afb	          0xf6c508	                              test ch, 8	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000afe	     0xf8415010000	                            je 0x4000c19	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000b04	          0x4585c0	                           test r8d, r8d	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000b07	     0xf880c010000	                            js 0x4000c19	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000b0d	        0x448b6308	               mov r12d, dword [rbx + 8]	       366	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000b11	        0x418d4001	                       lea eax, [r8 + 1]	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000b15	        0x89442418	             mov dword [rsp + 0x18], eax	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000b19	            0x85c0	                           test eax, eax	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000b1b	     0xf8ed6000000	                           jle 0x4000bf7	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000b21	          0x4d89fd	                            mov r13, r15	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000b24	          0x4589c0	                            mov r8d, r8d	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000b27	      0x4b8d440701	                 lea rax, [r15 + r8 + 1]	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000b2c	          0x4d63e4	                        movsxd r12, r12d	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000b2f	            0x89cd	                            mov ebp, ecx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000b31	          0x83e53f	                           and ebp, 0x3f	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000b34	      0x4c897c2410	             mov qword [rsp + 0x10], r15	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000b39	          0x4989c7	                            mov r15, rax	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000b3c	      0x448974241c	            mov dword [rsp + 0x1c], r14d	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000b41	      0x450fb67500	                  movzx r14d, byte [r13]	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000b46	        0x4180fe09	                             cmp r14b, 9	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000b4a	            0x7555	                           jne 0x4000ba1	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000b4c	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_13
0x4000b4f	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_13
0x4000b52	            0x740a	                            je 0x4000b5e	       141	strbuf.h	FUNCTION_13
0x4000b54	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000b58	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000b5c	            0x750d	                           jne 0x4000b6b	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000b5e	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000b63	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000b66	      0xe800000000	                          call 0x4000b6b	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000b6b	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_15
0x4000b6f	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_15
0x4000b73	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_15
0x4000b77	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_15
0x4000b7b	        0xc6040220	              mov byte [rdx + rax], 0x20	       229	strbuf.h	FUNCTION_15
0x4000b7f	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_15
0x4000b83	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_15
0x4000b87	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_15
0x4000b8b	        0x488b4308	                mov rax, qword [rbx + 8]	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000b8f	          0x4c29e0	                            sub rax, r12	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000b92	      0xba00000000	                              mov edx, 0	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000b97	          0x48f7f5	                                 div rbp	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000b9a	          0x4885d2	                           test rdx, rdx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000b9d	            0x75ad	                           jne 0x4000b4c	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000b9f	            0xeb3f	                           jmp 0x4000be0	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000ba1	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_13
0x4000ba4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_13
0x4000ba7	            0x740a	                            je 0x4000bb3	       141	strbuf.h	FUNCTION_13
0x4000ba9	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000bad	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000bb1	            0x750d	                           jne 0x4000bc0	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000bb3	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000bb8	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000bbb	      0xe800000000	                          call 0x4000bc0	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000bc0	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_15
0x4000bc4	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_15
0x4000bc8	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_15
0x4000bcc	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_15
0x4000bd0	        0x44883402	              mov byte [rdx + rax], r14b	       229	strbuf.h	FUNCTION_15
0x4000bd4	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_15
0x4000bd8	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_15
0x4000bdc	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_15
0x4000be0	        0x4983c501	                              add r13, 1	       230	strbuf.h	FUNCTION_15
0x4000be4	          0x4d39ef	                            cmp r15, r13	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000be7	     0xf8554ffffff	                           jne 0x4000b41	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000bed	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000bf2	      0x448b74241c	           mov r14d, dword [rsp + 0x1c] 	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000bf7	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       376	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000bfb	          0x4129c6	                           sub r14d, eax	       376	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000bfe	            0x4898	                                    cdqe	       377	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000c00	          0x4901c7	                            add r15, rax	       377	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000c03	    0x41bd01000000	                             mov r13d, 1	       378	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000c09	            0xeb0e	                           jmp 0x4000c19	       378	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000c0b	    0xc74424040000	                  mov dword [rsp + 4], 0	       313	ws.c	FUNCTION_8	FOR_1
0x4000c13	    0x41bd00000000	                             mov r13d, 0	       313	ws.c	FUNCTION_8	FOR_1
0x4000c19	          0x4963d6	                        movsxd rdx, r14d	       381	ws.c	FUNCTION_8	CALL_11
0x4000c1c	          0x4c89fe	                            mov rsi, r15	       381	ws.c	FUNCTION_8	CALL_11
0x4000c1f	          0x4889df	                            mov rdi, rbx	       381	ws.c	FUNCTION_8	CALL_11
0x4000c22	      0xe800000000	                          call 0x4000c27	       381	ws.c	FUNCTION_8	CALL_11
0x4000c27	      0x837c240400	                  cmp dword [rsp + 4], 0	       382	ws.c	FUNCTION_8	IF_16
0x4000c2c	            0x743f	                            je 0x4000c6d	       382	ws.c	FUNCTION_8	IF_16
0x4000c2e	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_13
0x4000c31	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_13
0x4000c34	            0x740a	                            je 0x4000c40	       141	strbuf.h	FUNCTION_13
0x4000c36	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c3a	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c3e	            0x750d	                           jne 0x4000c4d	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c40	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000c45	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000c48	      0xe800000000	                          call 0x4000c4d	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000c4d	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_15
0x4000c51	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_15
0x4000c55	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_15
0x4000c59	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_15
0x4000c5d	        0xc604020d	               mov byte [rdx + rax], 0xd	       229	strbuf.h	FUNCTION_15
0x4000c61	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_15
0x4000c65	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_15
0x4000c69	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_15
0x4000c6d	        0x833c2400	                      cmp dword [rsp], 0	       384	ws.c	FUNCTION_8	IF_17
0x4000c71	            0x743f	                            je 0x4000cb2	       384	ws.c	FUNCTION_8	IF_17
0x4000c73	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_13
0x4000c76	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_13
0x4000c79	            0x740a	                            je 0x4000c85	       141	strbuf.h	FUNCTION_13
0x4000c7b	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c7f	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c83	            0x750d	                           jne 0x4000c92	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c85	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000c8a	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000c8d	      0xe800000000	                          call 0x4000c92	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000c92	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_15
0x4000c96	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_15
0x4000c9a	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_15
0x4000c9e	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_15
0x4000ca2	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_15
0x4000ca6	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_15
0x4000caa	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_15
0x4000cae	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_15
0x4000cb2	          0x4585ed	                         test r13d, r13d	       386	ws.c	FUNCTION_8	IF_18
0x4000cb5	            0x746c	                            je 0x4000d23	       386	ws.c	FUNCTION_8	IF_18
0x4000cb7	      0x488b442408	                mov rax, qword [rsp + 8]	       386	ws.c	FUNCTION_8	IF_18
0x4000cbc	          0x4885c0	                           test rax, rax	       386	ws.c	FUNCTION_8	IF_18
0x4000cbf	            0x7462	                            je 0x4000d23	       386	ws.c	FUNCTION_8	IF_18
0x4000cc1	          0x830001	                      add dword [rax], 1	       387	ws.c	FUNCTION_8	IF_18
0x4000cc4	            0xeb5d	                           jmp 0x4000d23	       388	ws.c	FUNCTION_8
0x4000cc6	    0xc70424000000	                      mov dword [rsp], 0	       284	ws.c	FUNCTION_8
0x4000ccd	      0xe935fcffff	                           jmp 0x4000907	       284	ws.c	FUNCTION_8
0x4000cd2	          0x4189c6	                           mov r14d, eax	       297	ws.c	FUNCTION_8	IF_1	IF_2
0x4000cd5	    0xc70424010000	                      mov dword [rsp], 1	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000cdc	      0xe926fcffff	                           jmp 0x4000907	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000ce1	          0x4189c6	                           mov r14d, eax	       297	ws.c	FUNCTION_8	IF_1	IF_2
0x4000ce4	    0xc70424010000	                      mov dword [rsp], 1	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000ceb	    0xc74424040000	                  mov dword [rsp + 4], 0	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000cf3	      0xe9cbfbffff	                           jmp 0x40008c3	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000cf8	    0x41bd00000000	                             mov r13d, 0	       286	ws.c	FUNCTION_8
0x4000cfe	      0xe91bfcffff	                           jmp 0x400091e	       286	ws.c	FUNCTION_8
0x4000d03	    0x41bd00000000	                             mov r13d, 0	       286	ws.c	FUNCTION_8
0x4000d09	    0xc70424010000	                      mov dword [rsp], 1	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000d10	            0xeb06	                           jmp 0x4000d18	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000d12	    0x41bd01000000	                             mov r13d, 1	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x4000d18	    0x41b8ffffffff	                     mov r8d, 0xffffffff	       287	ws.c	FUNCTION_8
0x4000d1e	      0xe9d8fdffff	                           jmp 0x4000afb	       287	ws.c	FUNCTION_8
0x4000d23	        0x4883c428	                           add rsp, 0x28	       388	ws.c	FUNCTION_8
0x4000d27	              0x5b	                                 pop rbx	       388	ws.c	FUNCTION_8
0x4000d28	              0x5d	                                 pop rbp	       388	ws.c	FUNCTION_8
0x4000d29	            0x415c	                                 pop r12	       388	ws.c	FUNCTION_8
0x4000d2b	            0x415d	                                 pop r13	       388	ws.c	FUNCTION_8
0x4000d2d	            0x415e	                                 pop r14	       388	ws.c	FUNCTION_8
0x4000d2f	            0x415f	                                 pop r15	       388	ws.c	FUNCTION_8
0x4000d31	              0xc3	                                     ret	       388	ws.c	FUNCTION_8
ws_blank_line	IF,1:SWITCH,0:DO,0:ELSE,0:functions,0:CALL,1:FOR,0:WHILE,1	22
0x4000801	            0x85f6	                           test esi, esi	       267	ws.c	FUNCTION_7	WHILE_1
0x4000803	            0x7e31	                           jle 0x4000836	       267	ws.c	FUNCTION_7	WHILE_1
0x4000805	           0xfb607	                   movzx eax, byte [rdi]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000808	    0xf68000000000	                      test byte [rax], 1	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x400080f	            0x742b	                            je 0x400083c	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000811	          0x8d46ff	                      lea eax, [rsi - 1]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000814	      0x488d540701	                lea rdx, [rdi + rax + 1]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000819	            0xeb0c	                           jmp 0x4000827	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x400081b	           0xfb607	                   movzx eax, byte [rdi]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x400081e	    0xf68000000000	                      test byte [rax], 1	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000825	            0x741b	                            je 0x4000842	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000827	        0x4883c701	                              add rdi, 1	       270	ws.c	FUNCTION_7	WHILE_1
0x400082b	          0x4839d7	                            cmp rdi, rdx	       267	ws.c	FUNCTION_7	WHILE_1
0x400082e	            0x75eb	                           jne 0x400081b	       267	ws.c	FUNCTION_7	WHILE_1
0x4000830	      0xb801000000	                              mov eax, 1	       272	ws.c	FUNCTION_7
0x4000835	              0xc3	                                     ret	       272	ws.c	FUNCTION_7
0x4000836	      0xb801000000	                              mov eax, 1	       272	ws.c	FUNCTION_7
0x400083b	              0xc3	                                     ret	       272	ws.c	FUNCTION_7
0x400083c	      0xb800000000	                              mov eax, 0	       269	ws.c	FUNCTION_7	WHILE_1	IF_1
0x4000841	              0xc3	                                     ret	       269	ws.c	FUNCTION_7	WHILE_1	IF_1
0x4000842	      0xb800000000	                              mov eax, 0	       269	ws.c	FUNCTION_7	WHILE_1	IF_1
0x4000847	              0xc3	                                     ret	       273	ws.c	FUNCTION_7
ws_check_emit_1	IF,19:SWITCH,0:DO,0:ELSE,3:functions,0:CALL,22:FOR,2:WHILE,0	253
0x4000040	            0x4157	                                push r15	       146	ws.c	FUNCTION_4
0x4000042	            0x4156	                                push r14	       146	ws.c	FUNCTION_4
0x4000044	            0x4155	                                push r13	       146	ws.c	FUNCTION_4
0x4000046	            0x4154	                                push r12	       146	ws.c	FUNCTION_4
0x4000048	              0x55	                                push rbp	       146	ws.c	FUNCTION_4
0x4000049	              0x53	                                push rbx	       146	ws.c	FUNCTION_4
0x400004a	        0x4883ec48	                           sub rsp, 0x48	       146	ws.c	FUNCTION_4
0x400004e	          0x4989ff	                            mov r15, rdi	       146	ws.c	FUNCTION_4
0x4000051	          0x4189f5	                           mov r13d, esi	       146	ws.c	FUNCTION_4
0x4000054	        0x89542428	             mov dword [rsp + 0x28], edx	       146	ws.c	FUNCTION_4
0x4000058	          0x4989ce	                            mov r14, rcx	       146	ws.c	FUNCTION_4
0x400005b	      0x4c89442438	              mov qword [rsp + 0x38], r8	       146	ws.c	FUNCTION_4
0x4000060	      0x4c894c2420	              mov qword [rsp + 0x20], r9	       146	ws.c	FUNCTION_4
0x4000065	            0x85f6	                           test esi, esi	       155	ws.c	FUNCTION_4	IF_1
0x4000067	     0xf8e7d030000	                           jle 0x40003ea	       155	ws.c	FUNCTION_4	IF_1
0x400006d	          0x4863c6	                         movsxd rax, esi	       155	ws.c	FUNCTION_4	IF_1
0x4000070	    0xc74424300000	               mov dword [rsp + 0x30], 0	       150	ws.c	FUNCTION_4
0x4000078	      0x807c07ff0a	          cmp byte [rdi + rax - 1], 0xa 	       155	ws.c	FUNCTION_4	IF_1
0x400007d	            0x750c	                           jne 0x400008b	       155	ws.c	FUNCTION_4	IF_1
0x400007f	        0x4183ed01	                             sub r13d, 1	       157	ws.c	FUNCTION_4	IF_1
0x4000083	    0xc74424300100	               mov dword [rsp + 0x30], 1	       156	ws.c	FUNCTION_4	IF_1
0x400008b	    0xf74424280002	         test dword [rsp + 0x28], 0x200 	       159	ws.c	FUNCTION_4	IF_2
0x4000093	            0x7426	                            je 0x40000bb	       159	ws.c	FUNCTION_4	IF_2
0x4000095	          0x4585ed	                         test r13d, r13d	       159	ws.c	FUNCTION_4	IF_2
0x4000098	            0x7e21	                           jle 0x40000bb	       159	ws.c	FUNCTION_4	IF_2
0x400009a	          0x4963c5	                        movsxd rax, r13d	       160	ws.c	FUNCTION_4	IF_2
0x400009d	    0xc74424340000	               mov dword [rsp + 0x34], 0	       151	ws.c	FUNCTION_4
0x40000a5	    0x41807c07ff0d	          cmp byte [r15 + rax - 1], 0xd 	       160	ws.c	FUNCTION_4	IF_2
0x40000ab	            0x7516	                           jne 0x40000c3	       160	ws.c	FUNCTION_4	IF_2
0x40000ad	        0x4183ed01	                             sub r13d, 1	       162	ws.c	FUNCTION_4	IF_2
0x40000b1	    0xc74424340100	               mov dword [rsp + 0x34], 1	       161	ws.c	FUNCTION_4	IF_2
0x40000b9	            0xeb08	                           jmp 0x40000c3	       161	ws.c	FUNCTION_4	IF_2
0x40000bb	    0xc74424340000	               mov dword [rsp + 0x34], 0	       151	ws.c	FUNCTION_4
0x40000c3	      0x44896c242c	            mov dword [rsp + 0x2c], r13d	       151	ws.c	FUNCTION_4
0x40000c8	    0xc74424180000	               mov dword [rsp + 0x18], 0	       151	ws.c	FUNCTION_4
0x40000d0	      0xf644242840	           test byte [rsp + 0x28], 0x40 	       166	ws.c	FUNCTION_4	IF_3
0x40000d5	     0xf848b000000	                            je 0x4000166	       166	ws.c	FUNCTION_4	IF_3
0x40000db	            0xeb15	                           jmp 0x40000f2	       166	ws.c	FUNCTION_4	IF_3
0x40000dd	      0x44896c242c	            mov dword [rsp + 0x2c], r13d	       166	ws.c	FUNCTION_4	IF_3
0x40000e2	    0xc74424300000	               mov dword [rsp + 0x30], 0	       150	ws.c	FUNCTION_4
0x40000ea	    0xc74424340000	               mov dword [rsp + 0x34], 0	       151	ws.c	FUNCTION_4
0x40000f2	      0x448b6c242c	           mov r13d, dword [rsp + 0x2c] 	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x40000f7	        0x4183ed01	                             sub r13d, 1	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x40000fb	            0x7852	                            js 0x400014f	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x40000fd	          0x4963c5	                        movsxd rax, r13d	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000100	      0x410fb60407	             movzx eax, byte [r15 + rax]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000105	    0xf68000000000	                      test byte [rax], 1	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400010c	            0x7523	                           jne 0x4000131	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400010e	      0x448b6c242c	           mov r13d, dword [rsp + 0x2c] 	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000113	    0xc74424180000	               mov dword [rsp + 0x18], 0	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400011b	            0xeb49	                           jmp 0x4000166	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400011d	          0x4863d0	                         movsxd rdx, eax	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000120	      0x410fb61417	             movzx edx, byte [r15 + rdx]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000125	    0xf68200000000	                      test byte [rdx], 1	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400012c	            0x740c	                            je 0x400013a	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400012e	          0x4189c5	                           mov r13d, eax	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000131	        0x418d45ff	                      lea eax, [r13 - 1]	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000135	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000138	            0x75e3	                           jne 0x400011d	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x400013a	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	       177	ws.c	FUNCTION_4	IF_5
0x400013e	            0x751e	                           jne 0x400015e	       177	ws.c	FUNCTION_4	IF_5
0x4000140	      0x448b6c242c	           mov r13d, dword [rsp + 0x2c] 	       177	ws.c	FUNCTION_4	IF_5
0x4000145	    0xc74424184000	           mov dword [rsp + 0x18], 0x40 	       177	ws.c	FUNCTION_4	IF_5
0x400014d	            0xeb17	                           jmp 0x4000166	       177	ws.c	FUNCTION_4	IF_5
0x400014f	      0x448b6c242c	           mov r13d, dword [rsp + 0x2c] 	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000154	    0xc74424180000	               mov dword [rsp + 0x18], 0	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x400015c	            0xeb08	                           jmp 0x4000166	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x400015e	    0xc74424184000	           mov dword [rsp + 0x18], 0x40 	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000166	          0x4585ed	                         test r13d, r13d	       181	ws.c	FUNCTION_4	FOR_2
0x4000169	     0xf8e5e010000	                           jle 0x40002cd	       181	ws.c	FUNCTION_4	FOR_2
0x400016f	          0x4d89fc	                            mov r12, r15	       181	ws.c	FUNCTION_4	FOR_2
0x4000172	      0xbb00000000	                              mov ebx, 0	       181	ws.c	FUNCTION_4	FOR_2
0x4000177	      0xbd00000000	                              mov ebp, 0	       181	ws.c	FUNCTION_4	FOR_2
0x400017c	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000180	            0x89c8	                            mov eax, ecx	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000182	          0xc1e807	                              shr eax, 7	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000185	          0x83e001	                              and eax, 1	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000188	            0x89c2	                            mov edx, eax	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x400018a	            0x89c8	                            mov eax, ecx	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x400018c	      0x2500080000	                          and eax, 0x800	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000191	        0x8944241c	             mov dword [rsp + 0x1c], eax	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000195	      0x4c897c2410	             mov qword [rsp + 0x10], r15	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x400019a	          0x4189d7	                           mov r15d, edx	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x400019d	      0x4c89642408	                mov qword [rsp + 8], r12	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x40001a2	      0x410fb60424	                   movzx eax, byte [r12]	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x40001a7	            0x3c20	                            cmp al, 0x20	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x40001a9	     0xf8404010000	                            je 0x40002b3	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x40001af	            0x3c09	                               cmp al, 9	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x40001b1	     0xf8522010000	                           jne 0x40002d9	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x40001b7	          0x4584ff	                         test r15b, r15b	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40001ba	            0x746a	                            je 0x4000226	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40001bc	            0x39dd	                            cmp ebp, ebx	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40001be	            0x7d66	                           jge 0x4000226	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40001c0	    0x814c24188000	             or dword [rsp + 0x18], 0x80	       187	ws.c	FUNCTION_4	FOR_2	IF_8
0x40001c8	          0x4d85f6	                           test r14, r14	       188	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9
0x40001cb	     0xf84df000000	                            je 0x40002b0	       188	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9
0x40001d1	          0x4c89f6	                            mov rsi, r14	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x40001d4	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x40001dc	      0xe800000000	                          call 0x40001e1	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x40001e1	            0x89de	                            mov esi, ebx	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40001e3	            0x29ee	                            sub esi, ebp	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40001e5	          0x4863f6	                         movsxd rsi, esi	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40001e8	          0x4863fd	                         movsxd rdi, ebp	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40001eb	      0x48037c2410	             add rdi, qword [rsp + 0x10]	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40001f0	          0x4c89f1	                            mov rcx, r14	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40001f3	      0xba01000000	                              mov edx, 1	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40001f8	      0xe800000000	                          call 0x40001fd	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40001fd	          0x4c89f6	                            mov rsi, r14	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x4000200	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x4000205	      0xe800000000	                          call 0x400020a	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x400020a	          0x4c89f1	                            mov rcx, r14	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x400020d	      0xba01000000	                              mov edx, 1	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000212	      0xbe01000000	                              mov esi, 1	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000217	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x400021c	      0xe800000000	                          call 0x4000221	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000221	      0xe98a000000	                           jmp 0x40002b0	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000226	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x400022b	            0x745f	                            je 0x400028c	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x400022d	    0x814c24180008	            or dword [rsp + 0x18], 0x800	       195	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000235	          0x4d85f6	                           test r14, r14	       196	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11
0x4000238	            0x7476	                            je 0x40002b0	       196	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11
0x400023a	            0x89de	                            mov esi, ebx	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x400023c	            0x29ee	                            sub esi, ebp	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x400023e	          0x4863f6	                         movsxd rsi, esi	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000241	          0x4863fd	                         movsxd rdi, ebp	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000244	      0x48037c2410	             add rdi, qword [rsp + 0x10]	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000249	          0x4c89f1	                            mov rcx, r14	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x400024c	      0xba01000000	                              mov edx, 1	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000251	      0xe800000000	                          call 0x4000256	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000256	          0x4c89f6	                            mov rsi, r14	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x4000259	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x4000261	      0xe800000000	                          call 0x4000266	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x4000266	          0x4c89f1	                            mov rcx, r14	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x4000269	      0xba01000000	                              mov edx, 1	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x400026e	      0xbe01000000	                              mov esi, 1	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x4000273	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x4000278	      0xe800000000	                          call 0x400027d	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x400027d	          0x4c89f6	                            mov rsi, r14	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x4000280	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x4000285	      0xe800000000	                          call 0x400028a	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x400028a	            0xeb24	                           jmp 0x40002b0	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x400028c	          0x4d85f6	                           test r14, r14	       202	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12
0x400028f	            0x741f	                            je 0x40002b0	       202	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12
0x4000291	            0x89de	                            mov esi, ebx	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x4000293	            0x29ee	                            sub esi, ebp	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x4000295	          0x83c601	                              add esi, 1	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x4000298	          0x4863f6	                         movsxd rsi, esi	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x400029b	          0x4863fd	                         movsxd rdi, ebp	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x400029e	      0x48037c2410	             add rdi, qword [rsp + 0x10]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40002a3	          0x4c89f1	                            mov rcx, r14	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40002a6	      0xba01000000	                              mov edx, 1	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40002ab	      0xe800000000	                          call 0x40002b0	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40002b0	          0x8d6b01	                      lea ebp, [rbx + 1]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40002b3	          0x83c301	                              add ebx, 1	       181	ws.c	FUNCTION_4	FOR_2
0x40002b6	        0x4983c401	                              add r12, 1	       181	ws.c	FUNCTION_4	FOR_2
0x40002ba	          0x4139dd	                           cmp r13d, ebx	       181	ws.c	FUNCTION_4	FOR_2
0x40002bd	     0xf85dafeffff	                           jne 0x400019d	       181	ws.c	FUNCTION_4	FOR_2
0x40002c3	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	       181	ws.c	FUNCTION_4	FOR_2
0x40002c8	          0x4489eb	                           mov ebx, r13d	       181	ws.c	FUNCTION_4	FOR_2
0x40002cb	            0xeb11	                           jmp 0x40002de	       181	ws.c	FUNCTION_4	FOR_2
0x40002cd	      0xbb00000000	                              mov ebx, 0	       181	ws.c	FUNCTION_4	FOR_2
0x40002d2	      0xbd00000000	                              mov ebp, 0	       148	ws.c	FUNCTION_4
0x40002d7	            0xeb05	                           jmp 0x40002de	       148	ws.c	FUNCTION_4
0x40002d9	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	       148	ws.c	FUNCTION_4
0x40002de	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002e2	          0xf6c401	                              test ah, 1	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002e5	            0x7456	                            je 0x400033d	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002e7	          0x4189dc	                           mov r12d, ebx	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002ea	          0x4129ec	                           sub r12d, ebp	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002ed	          0x83e03f	                           and eax, 0x3f	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002f0	          0x4139c4	                           cmp r12d, eax	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002f3	            0x7248	                            jb 0x400033d	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002f5	    0x814c24180001	            or dword [rsp + 0x18], 0x100	       210	ws.c	FUNCTION_4	IF_13
0x40002fd	          0x4d85f6	                           test r14, r14	       211	ws.c	FUNCTION_4	IF_13	IF_14
0x4000300	     0xf841a010000	                            je 0x4000420	       211	ws.c	FUNCTION_4	IF_13	IF_14
0x4000306	          0x4c89f6	                            mov rsi, r14	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x4000309	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x4000311	      0xe800000000	                          call 0x4000316	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x4000316	          0x4963f4	                        movsxd rsi, r12d	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x4000319	          0x4863fd	                         movsxd rdi, ebp	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x400031c	          0x4c01ff	                            add rdi, r15	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x400031f	          0x4c89f1	                            mov rcx, r14	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x4000322	      0xba01000000	                              mov edx, 1	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x4000327	      0xe800000000	                          call 0x400032c	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x400032c	          0x4c89f6	                            mov rsi, r14	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x400032f	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x4000334	      0xe800000000	                          call 0x4000339	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x4000339	            0x89dd	                            mov ebp, ebx	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x400033b	            0xeb09	                           jmp 0x4000346	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x400033d	          0x4d85f6	                           test r14, r14	       219	ws.c	FUNCTION_4	IF_15
0x4000340	     0xf84da000000	                            je 0x4000420	       219	ws.c	FUNCTION_4	IF_15
0x4000346	          0x4489eb	                           mov ebx, r13d	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x4000349	            0x29eb	                            sub ebx, ebp	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x400034b	            0x85db	                           test ebx, ebx	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x400034d	            0x7e30	                           jle 0x400037f	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x400034f	          0x4c89f6	                            mov rsi, r14	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x4000352	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x4000357	      0xe800000000	                          call 0x400035c	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x400035c	          0x4863f3	                         movsxd rsi, ebx	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x400035f	          0x4863fd	                         movsxd rdi, ebp	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x4000362	          0x4c01ff	                            add rdi, r15	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x4000365	          0x4c89f1	                            mov rcx, r14	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x4000368	      0xba01000000	                              mov edx, 1	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x400036d	      0xe800000000	                          call 0x4000372	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x4000372	          0x4c89f6	                            mov rsi, r14	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x4000375	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x400037a	      0xe800000000	                          call 0x400037f	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x400037f	        0x8b5c242c	            mov ebx, dword [rsp + 0x2c] 	       234	ws.c	FUNCTION_4	IF_15	IF_17
0x4000383	          0x4439eb	                           cmp ebx, r13d	       234	ws.c	FUNCTION_4	IF_15	IF_17
0x4000386	            0x7438	                            je 0x40003c0	       234	ws.c	FUNCTION_4	IF_15	IF_17
0x4000388	          0x4c89f6	                            mov rsi, r14	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x400038b	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x4000393	      0xe800000000	                          call 0x4000398	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x4000398	            0x89de	                            mov esi, ebx	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x400039a	          0x4429ee	                           sub esi, r13d	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x400039d	          0x4863f6	                         movsxd rsi, esi	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x40003a0	          0x4963fd	                        movsxd rdi, r13d	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x40003a3	          0x4c01ff	                            add rdi, r15	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x40003a6	          0x4c89f1	                            mov rcx, r14	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x40003a9	      0xba01000000	                              mov edx, 1	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x40003ae	      0xe800000000	                          call 0x40003b3	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x40003b3	          0x4c89f6	                            mov rsi, r14	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x40003b6	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x40003bb	      0xe800000000	                          call 0x40003c0	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x40003c0	      0x837c243400	               cmp dword [rsp + 0x34], 0	       240	ws.c	FUNCTION_4	IF_15	IF_18
0x40003c5	            0x740d	                            je 0x40003d4	       240	ws.c	FUNCTION_4	IF_15	IF_18
0x40003c7	          0x4c89f6	                            mov rsi, r14	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x40003ca	      0xbf0d000000	                            mov edi, 0xd	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x40003cf	      0xe800000000	                          call 0x40003d4	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x40003d4	      0x837c243000	               cmp dword [rsp + 0x30], 0	       242	ws.c	FUNCTION_4	IF_15	IF_19
0x40003d9	            0x7445	                            je 0x4000420	       242	ws.c	FUNCTION_4	IF_15	IF_19
0x40003db	          0x4c89f6	                            mov rsi, r14	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x40003de	      0xbf0a000000	                            mov edi, 0xa	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x40003e3	      0xe800000000	                          call 0x40003e8	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x40003e8	            0xeb36	                           jmp 0x4000420	       245	ws.c	FUNCTION_4
0x40003ea	      0xf644242840	           test byte [rsp + 0x28], 0x40 	       166	ws.c	FUNCTION_4	IF_3
0x40003ef	     0xf85e8fcffff	                           jne 0x40000dd	       166	ws.c	FUNCTION_4	IF_3
0x40003f5	        0x8974242c	             mov dword [rsp + 0x2c], esi	       166	ws.c	FUNCTION_4	IF_3
0x40003f9	    0xc74424300000	               mov dword [rsp + 0x30], 0	       150	ws.c	FUNCTION_4
0x4000401	    0xc74424340000	               mov dword [rsp + 0x34], 0	       151	ws.c	FUNCTION_4
0x4000409	      0xbb00000000	                              mov ebx, 0	       181	ws.c	FUNCTION_4	FOR_2
0x400040e	      0xbd00000000	                              mov ebp, 0	       148	ws.c	FUNCTION_4
0x4000413	    0xc74424180000	               mov dword [rsp + 0x18], 0	       166	ws.c	FUNCTION_4	IF_3
0x400041b	      0xe9befeffff	                           jmp 0x40002de	       166	ws.c	FUNCTION_4	IF_3
0x4000420	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       246	ws.c	FUNCTION_4
0x4000424	        0x4883c448	                           add rsp, 0x48	       246	ws.c	FUNCTION_4
0x4000428	              0x5b	                                 pop rbx	       246	ws.c	FUNCTION_4
0x4000429	              0x5d	                                 pop rbp	       246	ws.c	FUNCTION_4
0x400042a	            0x415c	                                 pop r12	       246	ws.c	FUNCTION_4
0x400042c	            0x415d	                                 pop r13	       246	ws.c	FUNCTION_4
0x400042e	            0x415e	                                 pop r14	       246	ws.c	FUNCTION_4
0x4000430	            0x415f	                                 pop r15	       246	ws.c	FUNCTION_4
0x4000432	              0xc3	                                     ret	       246	ws.c	FUNCTION_4
