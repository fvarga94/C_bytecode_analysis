strbuf_addstr	functions,0:CALL,2:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0:FOR,0	17
0x400016d	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_5
0x400016e	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_5
0x4000171	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_5
0x4000175	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_5
0x4000179	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_5
0x400017d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000181	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000184	      0xe800000000	                          call 0x4000189	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000189	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x400018c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000190	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000194	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000197	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x400019a	      0xe800000000	                          call 0x400019f	       279	strbuf.h	FUNCTION_5	CALL_2
0x400019f	              0x90	                                     nop	       280	strbuf.h	FUNCTION_5
0x40001a0	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_5
0x40001a1	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_5
get_octopus_merge_base	functions,0:CALL,12:ELSE,0:IF,2:SWITCH,0:WHILE,0:DO,0:FOR,0	72
0x40018d9	              0x55	                                push rbp	       764	pull.c	FUNCTION_32
0x40018da	          0x4889e5	                            mov rbp, rsp	       764	pull.c	FUNCTION_32
0x40018dd	        0x4883ec40	                           sub rsp, 0x40	       764	pull.c	FUNCTION_32
0x40018e1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       764	pull.c	FUNCTION_32
0x40018e5	        0x488975d0	             mov qword [rbp - 0x30], rsi	       764	pull.c	FUNCTION_32
0x40018e9	        0x488955c8	             mov qword [rbp - 0x38], rdx	       764	pull.c	FUNCTION_32
0x40018ed	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       764	pull.c	FUNCTION_32
0x40018f1	    0x64488b042528	                mov rax, qword fs:[0x28]	       764	pull.c	FUNCTION_32
0x40018fa	        0x488945f8	                mov qword [rbp - 8], rax	       764	pull.c	FUNCTION_32
0x40018fe	            0x31c0	                            xor eax, eax	       764	pull.c	FUNCTION_32
0x4001900	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       765	pull.c	FUNCTION_32
0x4001908	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       767	pull.c	FUNCTION_32	CALL_2
0x400190c	          0x4889c7	                            mov rdi, rax	       767	pull.c	FUNCTION_32	CALL_2
0x400190f	      0xe800000000	                          call 0x4001914	       767	pull.c	FUNCTION_32	CALL_2
0x4001914	          0x4889c2	                            mov rdx, rax	       767	pull.c	FUNCTION_32	CALL_2
0x4001917	        0x488d45e8	                   lea rax, [rbp - 0x18]	       767	pull.c	FUNCTION_32	CALL_2
0x400191b	          0x4889c6	                            mov rsi, rax	       767	pull.c	FUNCTION_32	CALL_2
0x400191e	          0x4889d7	                            mov rdi, rdx	       767	pull.c	FUNCTION_32	CALL_2
0x4001921	      0xe800000000	                          call 0x4001926	       767	pull.c	FUNCTION_32	CALL_2
0x4001926	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       768	pull.c	FUNCTION_32	CALL_4
0x400192a	          0x4889c7	                            mov rdi, rax	       768	pull.c	FUNCTION_32	CALL_4
0x400192d	      0xe800000000	                          call 0x4001932	       768	pull.c	FUNCTION_32	CALL_4
0x4001932	          0x4889c2	                            mov rdx, rax	       768	pull.c	FUNCTION_32	CALL_4
0x4001935	        0x488d45e8	                   lea rax, [rbp - 0x18]	       768	pull.c	FUNCTION_32	CALL_4
0x4001939	          0x4889c6	                            mov rsi, rax	       768	pull.c	FUNCTION_32	CALL_4
0x400193c	          0x4889d7	                            mov rdi, rdx	       768	pull.c	FUNCTION_32	CALL_4
0x400193f	      0xe800000000	                          call 0x4001944	       768	pull.c	FUNCTION_32	CALL_4
0x4001944	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       769	pull.c	FUNCTION_32	IF_1	CALL_5
0x4001948	          0x4889c7	                            mov rdi, rax	       769	pull.c	FUNCTION_32	IF_1	CALL_5
0x400194b	      0xe8cde8ffff	                    call sym.is_null_oid	       769	pull.c	FUNCTION_32	IF_1	CALL_5
0x4001950	            0x85c0	                           test eax, eax	       769	pull.c	FUNCTION_32	IF_1	CALL_5
0x4001952	            0x751e	                           jne 0x4001972	       769	pull.c	FUNCTION_32	IF_1	CALL_5
0x4001954	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       770	pull.c	FUNCTION_32	CALL_7
0x4001958	          0x4889c7	                            mov rdi, rax	       770	pull.c	FUNCTION_32	CALL_7
0x400195b	      0xe800000000	                          call 0x4001960	       770	pull.c	FUNCTION_32	CALL_7
0x4001960	          0x4889c2	                            mov rdx, rax	       770	pull.c	FUNCTION_32	CALL_7
0x4001963	        0x488d45e8	                   lea rax, [rbp - 0x18]	       770	pull.c	FUNCTION_32	CALL_7
0x4001967	          0x4889c6	                            mov rsi, rax	       770	pull.c	FUNCTION_32	CALL_7
0x400196a	          0x4889d7	                            mov rdi, rdx	       770	pull.c	FUNCTION_32	CALL_7
0x400196d	      0xe800000000	                          call 0x4001972	       770	pull.c	FUNCTION_32	CALL_7
0x4001972	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       772	pull.c	FUNCTION_32	CALL_8
0x4001976	          0x4889c7	                            mov rdi, rax	       772	pull.c	FUNCTION_32	CALL_8
0x4001979	      0xe800000000	                          call 0x400197e	       772	pull.c	FUNCTION_32	CALL_8
0x400197e	        0x488945f0	             mov qword [rbp - 0x10], rax	       772	pull.c	FUNCTION_32	CALL_8
0x4001982	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       773	pull.c	FUNCTION_32	CALL_9
0x4001986	          0x4889c7	                            mov rdi, rax	       773	pull.c	FUNCTION_32	CALL_9
0x4001989	      0xe800000000	                          call 0x400198e	       773	pull.c	FUNCTION_32	CALL_9
0x400198e	        0x488d45f0	                   lea rax, [rbp - 0x10]	       774	pull.c	FUNCTION_32	CALL_10
0x4001992	          0x4889c7	                            mov rdi, rax	       774	pull.c	FUNCTION_32	CALL_10
0x4001995	      0xe800000000	                          call 0x400199a	       774	pull.c	FUNCTION_32	CALL_10
0x400199a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       776	pull.c	FUNCTION_32	IF_2
0x400199e	          0x4885c0	                           test rax, rax	       776	pull.c	FUNCTION_32	IF_2
0x40019a1	            0x7507	                           jne 0x40019aa	       776	pull.c	FUNCTION_32	IF_2
0x40019a3	      0xb801000000	                              mov eax, 1	       777	pull.c	FUNCTION_32	IF_2
0x40019a8	            0xeb2b	                           jmp 0x40019d5	       777	pull.c	FUNCTION_32	IF_2
0x40019aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       779	pull.c	FUNCTION_32	CALL_11
0x40019ae	          0x488b00	                    mov rax, qword [rax]	       779	pull.c	FUNCTION_32	CALL_11
0x40019b1	        0x488d5004	                      lea rdx, [rax + 4]	       779	pull.c	FUNCTION_32	CALL_11
0x40019b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       779	pull.c	FUNCTION_32	CALL_11
0x40019b9	          0x4889d6	                            mov rsi, rdx	       779	pull.c	FUNCTION_32	CALL_11
0x40019bc	          0x4889c7	                            mov rdi, rax	       779	pull.c	FUNCTION_32	CALL_11
0x40019bf	      0xe8abe8ffff	                         call sym.oidcpy	       779	pull.c	FUNCTION_32	CALL_11
0x40019c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       780	pull.c	FUNCTION_32	CALL_12
0x40019c8	          0x4889c7	                            mov rdi, rax	       780	pull.c	FUNCTION_32	CALL_12
0x40019cb	      0xe800000000	                          call 0x40019d0	       780	pull.c	FUNCTION_32	CALL_12
0x40019d0	      0xb800000000	                              mov eax, 0	       781	pull.c	FUNCTION_32
0x40019d5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       782	pull.c	FUNCTION_32
0x40019d9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       782	pull.c	FUNCTION_32
0x40019e2	            0x7405	                            je 0x40019e9	       782	pull.c	FUNCTION_32
0x40019e4	      0xe800000000	                          call 0x40019e9	       782	pull.c	FUNCTION_32
0x40019e9	              0xc9	                                   leave	       782	pull.c	FUNCTION_32
0x40019ea	              0xc3	                                     ret	       782	pull.c	FUNCTION_32
get_only_remote	functions,0:CALL,0:ELSE,0:IF,1:SWITCH,0:WHILE,0:DO,0:FOR,0	19
0x40008d2	              0x55	                                push rbp	       380	pull.c	FUNCTION_21
0x40008d3	          0x4889e5	                            mov rbp, rsp	       380	pull.c	FUNCTION_21
0x40008d6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       380	pull.c	FUNCTION_21
0x40008da	        0x488975e0	             mov qword [rbp - 0x20], rsi	       380	pull.c	FUNCTION_21
0x40008de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       381	pull.c	FUNCTION_21
0x40008e2	        0x488945f8	                mov qword [rbp - 8], rax	       381	pull.c	FUNCTION_21
0x40008e6	        0x488b45f8	                mov rax, qword [rbp - 8]	       383	pull.c	FUNCTION_21	IF_1
0x40008ea	          0x488b00	                    mov rax, qword [rax]	       383	pull.c	FUNCTION_21	IF_1
0x40008ed	          0x4885c0	                           test rax, rax	       383	pull.c	FUNCTION_21	IF_1
0x40008f0	            0x7407	                            je 0x40008f9	       383	pull.c	FUNCTION_21	IF_1
0x40008f2	      0xb8ffffffff	                     mov eax, 0xffffffff	       384	pull.c	FUNCTION_21	IF_1
0x40008f7	            0xeb14	                           jmp 0x400090d	       384	pull.c	FUNCTION_21	IF_1
0x40008f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       386	pull.c	FUNCTION_21
0x40008fd	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       386	pull.c	FUNCTION_21
0x4000901	        0x488b45f8	                mov rax, qword [rbp - 8]	       386	pull.c	FUNCTION_21
0x4000905	          0x488910	                    mov qword [rax], rdx	       386	pull.c	FUNCTION_21
0x4000908	      0xb800000000	                              mov eax, 0	       387	pull.c	FUNCTION_21
0x400090d	              0x5d	                                 pop rbp	       388	pull.c	FUNCTION_21
0x400090e	              0xc3	                                     ret	       388	pull.c	FUNCTION_21
get_tracking_branch	functions,0:CALL,11:ELSE,5:IF,6:SWITCH,0:WHILE,0:DO,0:FOR,0	98
0x4001599	              0x55	                                push rbp	       681	pull.c	FUNCTION_30
0x400159a	          0x4889e5	                            mov rbp, rsp	       681	pull.c	FUNCTION_30
0x400159d	        0x4883ec30	                           sub rsp, 0x30	       681	pull.c	FUNCTION_30
0x40015a1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       681	pull.c	FUNCTION_30
0x40015a5	        0x488975d0	             mov qword [rbp - 0x30], rsi	       681	pull.c	FUNCTION_30
0x40015a9	    0x64488b042528	                mov rax, qword fs:[0x28]	       681	pull.c	FUNCTION_30
0x40015b2	        0x488945f8	                mov qword [rbp - 8], rax	       681	pull.c	FUNCTION_30
0x40015b6	            0x31c0	                            xor eax, eax	       681	pull.c	FUNCTION_30
0x40015b8	        0x488d45d0	                   lea rax, [rbp - 0x30]	       686	pull.c	FUNCTION_30	CALL_1
0x40015bc	          0x4889c6	                            mov rsi, rax	       686	pull.c	FUNCTION_30	CALL_1
0x40015bf	      0xbf01000000	                              mov edi, 1	       686	pull.c	FUNCTION_30	CALL_1
0x40015c4	      0xe800000000	                          call 0x40015c9	       686	pull.c	FUNCTION_30	CALL_1
0x40015c9	        0x488945f0	             mov qword [rbp - 0x10], rax	       686	pull.c	FUNCTION_30	CALL_1
0x40015cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       687	pull.c	FUNCTION_30
0x40015d1	        0x488b4008	                mov rax, qword [rax + 8]	       687	pull.c	FUNCTION_30
0x40015d5	        0x488945e0	             mov qword [rbp - 0x20], rax	       687	pull.c	FUNCTION_30
0x40015d9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       688	pull.c	FUNCTION_30	IF_1	CALL_2
0x40015dd	           0xfb600	                   movzx eax, byte [rax]	       688	pull.c	FUNCTION_30	IF_1	CALL_2
0x40015e0	            0x84c0	                             test al, al	       688	pull.c	FUNCTION_30	IF_1	CALL_2
0x40015e2	            0x7415	                            je 0x40015f9	       688	pull.c	FUNCTION_30	IF_1	CALL_2
0x40015e4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       688	pull.c	FUNCTION_30	IF_1	CALL_2
0x40015e8	      0xbe00000000	                              mov esi, 0	       688	pull.c	FUNCTION_30	IF_1	CALL_2
0x40015ed	          0x4889c7	                            mov rdi, rax	       688	pull.c	FUNCTION_30	IF_1	CALL_2
0x40015f0	      0xe800000000	                          call 0x40015f5	       688	pull.c	FUNCTION_30	IF_1	CALL_2
0x40015f5	            0x85c0	                           test eax, eax	       688	pull.c	FUNCTION_30	IF_1	CALL_2
0x40015f7	            0x750a	                           jne 0x4001603	       688	pull.c	FUNCTION_30	IF_1	CALL_2
0x40015f9	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       689	pull.c	FUNCTION_30	IF_1
0x4001601	            0xeb79	                           jmp 0x400167c	       689	pull.c	FUNCTION_30	IF_1
0x4001603	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       690	pull.c	FUNCTION_30	ELSE_1	IF_2	CALL_3
0x4001607	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       690	pull.c	FUNCTION_30	ELSE_1	IF_2	CALL_3
0x400160b	      0xbe00000000	                              mov esi, 0	       690	pull.c	FUNCTION_30	ELSE_1	IF_2	CALL_3
0x4001610	          0x4889c7	                            mov rdi, rax	       690	pull.c	FUNCTION_30	ELSE_1	IF_2	CALL_3
0x4001613	      0xe833eaffff	                    call sym.skip_prefix	       690	pull.c	FUNCTION_30	ELSE_1	IF_2	CALL_3
0x4001618	            0x85c0	                           test eax, eax	       690	pull.c	FUNCTION_30	ELSE_1	IF_2	CALL_3
0x400161a	            0x7560	                           jne 0x400167c	       690	pull.c	FUNCTION_30	ELSE_1	IF_2	CALL_3
0x400161c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       692	pull.c	FUNCTION_30	ELSE_2	IF_3	CALL_4
0x4001620	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       692	pull.c	FUNCTION_30	ELSE_2	IF_3	CALL_4
0x4001624	      0xbe00000000	                              mov esi, 0	       692	pull.c	FUNCTION_30	ELSE_2	IF_3	CALL_4
0x4001629	          0x4889c7	                            mov rdi, rax	       692	pull.c	FUNCTION_30	ELSE_2	IF_3	CALL_4
0x400162c	      0xe81aeaffff	                    call sym.skip_prefix	       692	pull.c	FUNCTION_30	ELSE_2	IF_3	CALL_4
0x4001631	            0x85c0	                           test eax, eax	       692	pull.c	FUNCTION_30	ELSE_2	IF_3	CALL_4
0x4001633	            0x7547	                           jne 0x400167c	       692	pull.c	FUNCTION_30	ELSE_2	IF_3	CALL_4
0x4001635	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       694	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_5
0x4001639	      0xbe00000000	                              mov esi, 0	       694	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_5
0x400163e	          0x4889c7	                            mov rdi, rax	       694	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_5
0x4001641	      0xe800000000	                          call 0x4001646	       694	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_5
0x4001646	            0x85c0	                           test eax, eax	       694	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_5
0x4001648	            0x752a	                           jne 0x4001674	       694	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_5
0x400164a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       695	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_6
0x400164e	      0xbe00000000	                              mov esi, 0	       695	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_6
0x4001653	          0x4889c7	                            mov rdi, rax	       695	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_6
0x4001656	      0xe800000000	                          call 0x400165b	       695	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_6
0x400165b	            0x85c0	                           test eax, eax	       694	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_5
0x400165d	            0x7515	                           jne 0x4001674	       694	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_5
0x400165f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       696	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_7
0x4001663	      0xbe00000000	                              mov esi, 0	       696	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_7
0x4001668	          0x4889c7	                            mov rdi, rax	       696	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_7
0x400166b	      0xe800000000	                          call 0x4001670	       696	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_7
0x4001670	            0x85c0	                           test eax, eax	       695	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_6
0x4001672	            0x7408	                            je 0x400167c	       695	pull.c	FUNCTION_30	ELSE_3	IF_4	CALL_6
0x4001674	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       697	pull.c	FUNCTION_30	ELSE_3	IF_4
0x400167c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       699	pull.c	FUNCTION_30	IF_5
0x4001680	           0xfb600	                   movzx eax, byte [rax]	       699	pull.c	FUNCTION_30	IF_5
0x4001683	            0x84c0	                             test al, al	       699	pull.c	FUNCTION_30	IF_5
0x4001685	            0x7451	                            je 0x40016d8	       699	pull.c	FUNCTION_30	IF_5
0x4001687	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       700	pull.c	FUNCTION_30	IF_5	IF_6	CALL_8
0x400168b	      0xbe00000000	                              mov esi, 0	       700	pull.c	FUNCTION_30	IF_5	IF_6	CALL_8
0x4001690	          0x4889c7	                            mov rdi, rax	       700	pull.c	FUNCTION_30	IF_5	IF_6	CALL_8
0x4001693	      0xe800000000	                          call 0x4001698	       700	pull.c	FUNCTION_30	IF_5	IF_6	CALL_8
0x4001698	            0x85c0	                           test eax, eax	       700	pull.c	FUNCTION_30	IF_5	IF_6	CALL_8
0x400169a	            0x751c	                           jne 0x40016b8	       700	pull.c	FUNCTION_30	IF_5	IF_6	CALL_8
0x400169c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       701	pull.c	FUNCTION_30	IF_5	CALL_9
0x40016a0	          0x4889c6	                            mov rsi, rax	       701	pull.c	FUNCTION_30	IF_5	CALL_9
0x40016a3	      0xbf00000000	                              mov edi, 0	       701	pull.c	FUNCTION_30	IF_5	CALL_9
0x40016a8	      0xb800000000	                              mov eax, 0	       701	pull.c	FUNCTION_30	IF_5	CALL_9
0x40016ad	      0xe800000000	                          call 0x40016b2	       701	pull.c	FUNCTION_30	IF_5	CALL_9
0x40016b2	        0x488945e8	             mov qword [rbp - 0x18], rax	       701	pull.c	FUNCTION_30	IF_5	CALL_9
0x40016b6	            0xeb28	                           jmp 0x40016e0	       701	pull.c	FUNCTION_30	IF_5	CALL_9
0x40016b8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       703	pull.c	FUNCTION_30	IF_5	CALL_10
0x40016bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       703	pull.c	FUNCTION_30	IF_5	CALL_10
0x40016c0	          0x4889c6	                            mov rsi, rax	       703	pull.c	FUNCTION_30	IF_5	CALL_10
0x40016c3	      0xbf00000000	                              mov edi, 0	       703	pull.c	FUNCTION_30	IF_5	CALL_10
0x40016c8	      0xb800000000	                              mov eax, 0	       703	pull.c	FUNCTION_30	IF_5	CALL_10
0x40016cd	      0xe800000000	                          call 0x40016d2	       703	pull.c	FUNCTION_30	IF_5	CALL_10
0x40016d2	        0x488945e8	             mov qword [rbp - 0x18], rax	       703	pull.c	FUNCTION_30	IF_5	CALL_10
0x40016d6	            0xeb08	                           jmp 0x40016e0	       703	pull.c	FUNCTION_30	IF_5	CALL_10
0x40016d8	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       705	pull.c	FUNCTION_30	ELSE_5
0x40016e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       707	pull.c	FUNCTION_30	CALL_11
0x40016e4	          0x4889c6	                            mov rsi, rax	       707	pull.c	FUNCTION_30	CALL_11
0x40016e7	      0xbf01000000	                              mov edi, 1	       707	pull.c	FUNCTION_30	CALL_11
0x40016ec	      0xe800000000	                          call 0x40016f1	       707	pull.c	FUNCTION_30	CALL_11
0x40016f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       708	pull.c	FUNCTION_30
0x40016f5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       709	pull.c	FUNCTION_30
0x40016f9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       709	pull.c	FUNCTION_30
0x4001702	            0x7405	                            je 0x4001709	       709	pull.c	FUNCTION_30
0x4001704	      0xe800000000	                          call 0x4001709	       709	pull.c	FUNCTION_30
0x4001709	              0xc9	                                   leave	       709	pull.c	FUNCTION_30
0x400170a	              0xc3	                                     ret	       709	pull.c	FUNCTION_30
hashcpy	functions,0:CALL,1:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0:FOR,0	14
0x4000244	              0x55	                                push rbp	       994	cache.h	FUNCTION_46
0x4000245	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_46
0x4000248	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_46
0x400024c	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_46
0x4000250	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_46
0x4000254	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_46	CALL_1
0x4000258	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_46	CALL_1
0x400025c	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_46	CALL_1
0x4000261	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_46	CALL_1
0x4000264	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_46	CALL_1
0x4000267	      0xe800000000	                          call 0x400026c	       995	cache.h	FUNCTION_46	CALL_1
0x400026c	              0x90	                                     nop	       996	cache.h	FUNCTION_46
0x400026d	              0xc9	                                   leave	       996	cache.h	FUNCTION_46
0x400026e	              0xc3	                                     ret	       996	cache.h	FUNCTION_46
argv_push_verbosity	functions,0:CALL,2:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0:FOR,2	27
0x4000468	              0x55	                                push rbp	       241	pull.c	FUNCTION_14
0x4000469	          0x4889e5	                            mov rbp, rsp	       241	pull.c	FUNCTION_14
0x400046c	        0x4883ec20	                           sub rsp, 0x20	       241	pull.c	FUNCTION_14
0x4000470	        0x48897de8	             mov qword [rbp - 0x18], rdi	       241	pull.c	FUNCTION_14
0x4000474	    0x8b0500000000	            mov eax, dword [0x0400047a] 	       244	pull.c	FUNCTION_14	FOR_1
0x400047a	          0x8945fc	                mov dword [rbp - 4], eax	       244	pull.c	FUNCTION_14	FOR_1
0x400047d	            0xeb15	                           jmp 0x4000494	       244	pull.c	FUNCTION_14	FOR_1
0x400047f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       245	pull.c	FUNCTION_14	CALL_1
0x4000483	      0xbe00000000	                              mov esi, 0	       245	pull.c	FUNCTION_14	CALL_1
0x4000488	          0x4889c7	                            mov rdi, rax	       245	pull.c	FUNCTION_14	CALL_1
0x400048b	      0xe800000000	                          call 0x4000490	       245	pull.c	FUNCTION_14	CALL_1
0x4000490	        0x836dfc01	                  sub dword [rbp - 4], 1	       244	pull.c	FUNCTION_14	FOR_1
0x4000494	        0x837dfc00	                  cmp dword [rbp - 4], 0	       244	pull.c	FUNCTION_14	FOR_1
0x4000498	            0x7fe5	                            jg 0x400047f	       244	pull.c	FUNCTION_14	FOR_1
0x400049a	    0x8b0500000000	            mov eax, dword [0x040004a0] 	       247	pull.c	FUNCTION_14	FOR_2
0x40004a0	          0x8945fc	                mov dword [rbp - 4], eax	       247	pull.c	FUNCTION_14	FOR_2
0x40004a3	            0xeb15	                           jmp 0x40004ba	       247	pull.c	FUNCTION_14	FOR_2
0x40004a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       248	pull.c	FUNCTION_14	CALL_2
0x40004a9	      0xbe00000000	                              mov esi, 0	       248	pull.c	FUNCTION_14	CALL_2
0x40004ae	          0x4889c7	                            mov rdi, rax	       248	pull.c	FUNCTION_14	CALL_2
0x40004b1	      0xe800000000	                          call 0x40004b6	       248	pull.c	FUNCTION_14	CALL_2
0x40004b6	        0x8345fc01	                  add dword [rbp - 4], 1	       247	pull.c	FUNCTION_14	FOR_2
0x40004ba	        0x837dfc00	                  cmp dword [rbp - 4], 0	       247	pull.c	FUNCTION_14	FOR_2
0x40004be	            0x78e5	                            js 0x40004a5	       247	pull.c	FUNCTION_14	FOR_2
0x40004c0	              0x90	                                     nop	       249	pull.c	FUNCTION_14
0x40004c1	              0xc9	                                   leave	       249	pull.c	FUNCTION_14
0x40004c2	              0xc3	                                     ret	       249	pull.c	FUNCTION_14
parse_config_rebase	functions,0:CALL,7:ELSE,5:IF,6:SWITCH,0:WHILE,0:DO,0:FOR,0	66
0x4000304	              0x55	                                push rbp	        43	pull.c	FUNCTION_12
0x4000305	          0x4889e5	                            mov rbp, rsp	        43	pull.c	FUNCTION_12
0x4000308	        0x4883ec30	                           sub rsp, 0x30	        43	pull.c	FUNCTION_12
0x400030c	        0x48897de8	             mov qword [rbp - 0x18], rdi	        43	pull.c	FUNCTION_12
0x4000310	        0x488975e0	             mov qword [rbp - 0x20], rsi	        43	pull.c	FUNCTION_12
0x4000314	          0x8955dc	             mov dword [rbp - 0x24], edx	        43	pull.c	FUNCTION_12
0x4000317	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        44	pull.c	FUNCTION_12	CALL_1
0x400031b	          0x4889c7	                            mov rdi, rax	        44	pull.c	FUNCTION_12	CALL_1
0x400031e	      0xe800000000	                          call 0x4000323	        44	pull.c	FUNCTION_12	CALL_1
0x4000323	          0x8945fc	                mov dword [rbp - 4], eax	        44	pull.c	FUNCTION_12	CALL_1
0x4000326	        0x837dfc00	                  cmp dword [rbp - 4], 0	        46	pull.c	FUNCTION_12	IF_1
0x400032a	            0x750a	                           jne 0x4000336	        46	pull.c	FUNCTION_12	IF_1
0x400032c	      0xb800000000	                              mov eax, 0	        47	pull.c	FUNCTION_12	IF_1
0x4000331	      0xe9c1000000	                           jmp 0x40003f7	        47	pull.c	FUNCTION_12	IF_1
0x4000336	        0x837dfc00	                  cmp dword [rbp - 4], 0	        48	pull.c	FUNCTION_12	ELSE_1	IF_2
0x400033a	            0x7e0a	                           jle 0x4000346	        48	pull.c	FUNCTION_12	ELSE_1	IF_2
0x400033c	      0xb801000000	                              mov eax, 1	        49	pull.c	FUNCTION_12	ELSE_1	IF_2
0x4000341	      0xe9b1000000	                           jmp 0x40003f7	        49	pull.c	FUNCTION_12	ELSE_1	IF_2
0x4000346	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        50	pull.c	FUNCTION_12	ELSE_2	IF_3	CALL_2
0x400034a	      0xbe00000000	                              mov esi, 0	        50	pull.c	FUNCTION_12	ELSE_2	IF_3	CALL_2
0x400034f	          0x4889c7	                            mov rdi, rax	        50	pull.c	FUNCTION_12	ELSE_2	IF_3	CALL_2
0x4000352	      0xe800000000	                          call 0x4000357	        50	pull.c	FUNCTION_12	ELSE_2	IF_3	CALL_2
0x4000357	            0x85c0	                           test eax, eax	        50	pull.c	FUNCTION_12	ELSE_2	IF_3	CALL_2
0x4000359	            0x750a	                           jne 0x4000365	        50	pull.c	FUNCTION_12	ELSE_2	IF_3	CALL_2
0x400035b	      0xb802000000	                              mov eax, 2	        51	pull.c	FUNCTION_12	ELSE_2	IF_3
0x4000360	      0xe992000000	                           jmp 0x40003f7	        51	pull.c	FUNCTION_12	ELSE_2	IF_3
0x4000365	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        52	pull.c	FUNCTION_12	ELSE_3	IF_4	CALL_3
0x4000369	      0xbe00000000	                              mov esi, 0	        52	pull.c	FUNCTION_12	ELSE_3	IF_4	CALL_3
0x400036e	          0x4889c7	                            mov rdi, rax	        52	pull.c	FUNCTION_12	ELSE_3	IF_4	CALL_3
0x4000371	      0xe800000000	                          call 0x4000376	        52	pull.c	FUNCTION_12	ELSE_3	IF_4	CALL_3
0x4000376	            0x85c0	                           test eax, eax	        52	pull.c	FUNCTION_12	ELSE_3	IF_4	CALL_3
0x4000378	            0x7507	                           jne 0x4000381	        52	pull.c	FUNCTION_12	ELSE_3	IF_4	CALL_3
0x400037a	      0xb803000000	                              mov eax, 3	        53	pull.c	FUNCTION_12	ELSE_3	IF_4
0x400037f	            0xeb76	                           jmp 0x40003f7	        53	pull.c	FUNCTION_12	ELSE_3	IF_4
0x4000381	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        54	pull.c	FUNCTION_12	ELSE_4	IF_5	CALL_4
0x4000385	      0xbe00000000	                              mov esi, 0	        54	pull.c	FUNCTION_12	ELSE_4	IF_5	CALL_4
0x400038a	          0x4889c7	                            mov rdi, rax	        54	pull.c	FUNCTION_12	ELSE_4	IF_5	CALL_4
0x400038d	      0xe800000000	                          call 0x4000392	        54	pull.c	FUNCTION_12	ELSE_4	IF_5	CALL_4
0x4000392	            0x85c0	                           test eax, eax	        54	pull.c	FUNCTION_12	ELSE_4	IF_5	CALL_4
0x4000394	            0x7507	                           jne 0x400039d	        54	pull.c	FUNCTION_12	ELSE_4	IF_5	CALL_4
0x4000396	      0xb804000000	                              mov eax, 4	        55	pull.c	FUNCTION_12	ELSE_4	IF_5
0x400039b	            0xeb5a	                           jmp 0x40003f7	        55	pull.c	FUNCTION_12	ELSE_4	IF_5
0x400039d	        0x837ddc00	               cmp dword [rbp - 0x24], 0	        57	pull.c	FUNCTION_12	IF_6
0x40003a1	            0x7425	                            je 0x40003c8	        57	pull.c	FUNCTION_12	IF_6
0x40003a3	      0xbf00000000	                              mov edi, 0	        58	pull.c	FUNCTION_12	CALL_6
0x40003a8	      0xe8f5fdffff	                               call sym.	        58	pull.c	FUNCTION_12	CALL_6
0x40003ad	          0x4889c1	                            mov rcx, rax	        58	pull.c	FUNCTION_12	CALL_6
0x40003b0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        58	pull.c	FUNCTION_12	CALL_6
0x40003b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        58	pull.c	FUNCTION_12	CALL_6
0x40003b8	          0x4889c6	                            mov rsi, rax	        58	pull.c	FUNCTION_12	CALL_6
0x40003bb	          0x4889cf	                            mov rdi, rcx	        58	pull.c	FUNCTION_12	CALL_6
0x40003be	      0xb800000000	                              mov eax, 0	        58	pull.c	FUNCTION_12	CALL_6
0x40003c3	      0xe800000000	                          call 0x40003c8	        58	pull.c	FUNCTION_12	CALL_6
0x40003c8	      0xbf00000000	                              mov edi, 0	        60	pull.c	FUNCTION_12	CALL_7
0x40003cd	      0xe8d0fdffff	                               call sym.	        60	pull.c	FUNCTION_12	CALL_7
0x40003d2	          0x4889c1	                            mov rcx, rax	        60	pull.c	FUNCTION_12	CALL_7
0x40003d5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        60	pull.c	FUNCTION_12	CALL_7
0x40003d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        60	pull.c	FUNCTION_12	CALL_7
0x40003dd	          0x4889c6	                            mov rsi, rax	        60	pull.c	FUNCTION_12	CALL_7
0x40003e0	          0x4889cf	                            mov rdi, rcx	        60	pull.c	FUNCTION_12	CALL_7
0x40003e3	      0xb800000000	                              mov eax, 0	        60	pull.c	FUNCTION_12	CALL_7
0x40003e8	      0xe800000000	                          call 0x40003ed	        60	pull.c	FUNCTION_12	CALL_7
0x40003ed	      0xe84efcffff	                    call sym.const_error	        60	pull.c	FUNCTION_12	CALL_7
0x40003f2	      0xb8ffffffff	                     mov eax, 0xffffffff	        62	pull.c	FUNCTION_12
0x40003f7	              0xc9	                                   leave	        63	pull.c	FUNCTION_12
0x40003f8	              0xc3	                                     ret	        63	pull.c	FUNCTION_12
update_submodules	functions,0:CALL,3:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0:FOR,0	42
0x40011fc	              0x55	                                push rbp	       587	pull.c	FUNCTION_27
0x40011fd	          0x4889e5	                            mov rbp, rsp	       587	pull.c	FUNCTION_27
0x4001200	        0x4883ec70	                           sub rsp, 0x70	       587	pull.c	FUNCTION_27
0x4001204	    0x64488b042528	                mov rax, qword fs:[0x28]	       587	pull.c	FUNCTION_27
0x400120d	        0x488945f8	                mov qword [rbp - 8], rax	       587	pull.c	FUNCTION_27
0x4001211	            0x31c0	                            xor eax, eax	       587	pull.c	FUNCTION_27
0x4001213	        0x488d5590	                   lea rdx, [rbp - 0x70]	       588	pull.c	FUNCTION_27
0x4001217	      0xb800000000	                              mov eax, 0	       588	pull.c	FUNCTION_27
0x400121c	      0xb90c000000	                            mov ecx, 0xc	       588	pull.c	FUNCTION_27
0x4001221	          0x4889d7	                            mov rdi, rdx	       588	pull.c	FUNCTION_27
0x4001224	          0xf348ab	              rep stosq qword [rdi], rax	       588	pull.c	FUNCTION_27
0x4001227	    0x48c745980000	               mov qword [rbp - 0x68], 0	       588	pull.c	FUNCTION_27
0x400122f	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       588	pull.c	FUNCTION_27
0x4001237	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       590	pull.c	FUNCTION_27
0x400123b	          0x83c808	                               or eax, 8	       590	pull.c	FUNCTION_27
0x400123e	          0x8845d8	               mov byte [rbp - 0x28], al	       590	pull.c	FUNCTION_27
0x4001241	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       591	pull.c	FUNCTION_27
0x4001245	          0x83c801	                               or eax, 1	       591	pull.c	FUNCTION_27
0x4001248	          0x8845d8	               mov byte [rbp - 0x28], al	       591	pull.c	FUNCTION_27
0x400124b	        0x488d4590	                   lea rax, [rbp - 0x70]	       592	pull.c	FUNCTION_27	CALL_1
0x400124f	        0x4883c008	                              add rax, 8	       592	pull.c	FUNCTION_27	CALL_1
0x4001253	    0x41b900000000	                              mov r9d, 0	       592	pull.c	FUNCTION_27	CALL_1
0x4001259	    0x41b800000000	                              mov r8d, 0	       592	pull.c	FUNCTION_27	CALL_1
0x400125f	      0xb900000000	                              mov ecx, 0	       592	pull.c	FUNCTION_27	CALL_1
0x4001264	      0xba00000000	                              mov edx, 0	       592	pull.c	FUNCTION_27	CALL_1
0x4001269	      0xbe00000000	                              mov esi, 0	       592	pull.c	FUNCTION_27	CALL_1
0x400126e	          0x4889c7	                            mov rdi, rax	       592	pull.c	FUNCTION_27	CALL_1
0x4001271	      0xb800000000	                              mov eax, 0	       592	pull.c	FUNCTION_27	CALL_1
0x4001276	      0xe800000000	                          call 0x400127b	       592	pull.c	FUNCTION_27	CALL_1
0x400127b	        0x488d4590	                   lea rax, [rbp - 0x70]	       594	pull.c	FUNCTION_27	CALL_2
0x400127f	        0x4883c008	                              add rax, 8	       594	pull.c	FUNCTION_27	CALL_2
0x4001283	          0x4889c7	                            mov rdi, rax	       594	pull.c	FUNCTION_27	CALL_2
0x4001286	      0xe8ddf1ffff	            call sym.argv_push_verbosity	       594	pull.c	FUNCTION_27	CALL_2
0x400128b	        0x488d4590	                   lea rax, [rbp - 0x70]	       596	pull.c	FUNCTION_27	CALL_3
0x400128f	          0x4889c7	                            mov rdi, rax	       596	pull.c	FUNCTION_27	CALL_3
0x4001292	      0xe800000000	                          call 0x4001297	       596	pull.c	FUNCTION_27	CALL_3
0x4001297	        0x488b75f8	                mov rsi, qword [rbp - 8]	       597	pull.c	FUNCTION_27
0x400129b	    0x644833342528	                xor rsi, qword fs:[0x28]	       597	pull.c	FUNCTION_27
0x40012a4	            0x7405	                            je 0x40012ab	       597	pull.c	FUNCTION_27
0x40012a6	      0xe800000000	                          call 0x40012ab	       597	pull.c	FUNCTION_27
0x40012ab	              0xc9	                                   leave	       597	pull.c	FUNCTION_27
0x40012ac	              0xc3	                                     ret	       597	pull.c	FUNCTION_27
run_rebase	functions,0:CALL,27:ELSE,4:IF,11:SWITCH,0:WHILE,0:DO,0:FOR,0	169
0x40019eb	              0x55	                                push rbp	       792	pull.c	FUNCTION_33
0x40019ec	          0x4889e5	                            mov rbp, rsp	       792	pull.c	FUNCTION_33
0x40019ef	        0x4883ec60	                           sub rsp, 0x60	       792	pull.c	FUNCTION_33
0x40019f3	        0x48897db8	             mov qword [rbp - 0x48], rdi	       792	pull.c	FUNCTION_33
0x40019f7	        0x488975b0	             mov qword [rbp - 0x50], rsi	       792	pull.c	FUNCTION_33
0x40019fb	        0x488955a8	             mov qword [rbp - 0x58], rdx	       792	pull.c	FUNCTION_33
0x40019ff	    0x64488b042528	                mov rax, qword fs:[0x28]	       792	pull.c	FUNCTION_33
0x4001a08	        0x488945f8	                mov qword [rbp - 8], rax	       792	pull.c	FUNCTION_33
0x4001a0c	            0x31c0	                            xor eax, eax	       792	pull.c	FUNCTION_33
0x4001a0e	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       795	pull.c	FUNCTION_33
0x4001a16	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       795	pull.c	FUNCTION_33
0x4001a1d	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       795	pull.c	FUNCTION_33
0x4001a24	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       797	pull.c	FUNCTION_33	IF_1	CALL_1
0x4001a28	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       797	pull.c	FUNCTION_33	IF_1	CALL_1
0x4001a2c	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       797	pull.c	FUNCTION_33	IF_1	CALL_1
0x4001a30	        0x488d45e0	                   lea rax, [rbp - 0x20]	       797	pull.c	FUNCTION_33	IF_1	CALL_1
0x4001a34	          0x4889c7	                            mov rdi, rax	       797	pull.c	FUNCTION_33	IF_1	CALL_1
0x4001a37	      0xe89dfeffff	         call sym.get_octopus_merge_base	       797	pull.c	FUNCTION_33	IF_1	CALL_1
0x4001a3c	            0x85c0	                           test eax, eax	       797	pull.c	FUNCTION_33	IF_1	CALL_1
0x4001a3e	            0x752f	                           jne 0x4001a6f	       797	pull.c	FUNCTION_33	IF_1	CALL_1
0x4001a40	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       798	pull.c	FUNCTION_33	IF_1	IF_2	CALL_3
0x4001a44	          0x4889c7	                            mov rdi, rax	       798	pull.c	FUNCTION_33	IF_1	IF_2	CALL_3
0x4001a47	      0xe8d1e7ffff	                    call sym.is_null_oid	       798	pull.c	FUNCTION_33	IF_1	IF_2	CALL_3
0x4001a4c	            0x85c0	                           test eax, eax	       798	pull.c	FUNCTION_33	IF_1	IF_2	CALL_3
0x4001a4e	            0x751f	                           jne 0x4001a6f	       798	pull.c	FUNCTION_33	IF_1	IF_2	CALL_3
0x4001a50	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       798	pull.c	FUNCTION_33	IF_1	IF_2	CALL_3
0x4001a54	        0x488d45e0	                   lea rax, [rbp - 0x20]	       798	pull.c	FUNCTION_33	IF_1	IF_2	CALL_3
0x4001a58	          0x4889d6	                            mov rsi, rdx	       798	pull.c	FUNCTION_33	IF_1	IF_2	CALL_3
0x4001a5b	          0x4889c7	                            mov rdi, rax	       798	pull.c	FUNCTION_33	IF_1	IF_2	CALL_3
0x4001a5e	      0xe895e7ffff	                         call sym.oidcmp	       798	pull.c	FUNCTION_33	IF_1	IF_2	CALL_3
0x4001a63	            0x85c0	                           test eax, eax	       798	pull.c	FUNCTION_33	IF_1	IF_2	CALL_3
0x4001a65	            0x7508	                           jne 0x4001a6f	       798	pull.c	FUNCTION_33	IF_1	IF_2	CALL_3
0x4001a67	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       799	pull.c	FUNCTION_33	IF_1	IF_2
0x4001a6f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       801	pull.c	FUNCTION_33	CALL_4
0x4001a73	      0xbe00000000	                              mov esi, 0	       801	pull.c	FUNCTION_33	CALL_4
0x4001a78	          0x4889c7	                            mov rdi, rax	       801	pull.c	FUNCTION_33	CALL_4
0x4001a7b	      0xe800000000	                          call 0x4001a80	       801	pull.c	FUNCTION_33	CALL_4
0x4001a80	        0x488d45d0	                   lea rax, [rbp - 0x30]	       804	pull.c	FUNCTION_33	CALL_5
0x4001a84	          0x4889c7	                            mov rdi, rax	       804	pull.c	FUNCTION_33	CALL_5
0x4001a87	      0xe8dce9ffff	            call sym.argv_push_verbosity	       804	pull.c	FUNCTION_33	CALL_5
0x4001a8c	    0x8b0500000000	            mov eax, dword [0x04001a92] 	       807	pull.c	FUNCTION_33	IF_3
0x4001a92	          0x83f803	                              cmp eax, 3	       807	pull.c	FUNCTION_33	IF_3
0x4001a95	            0x7513	                           jne 0x4001aaa	       807	pull.c	FUNCTION_33	IF_3
0x4001a97	        0x488d45d0	                   lea rax, [rbp - 0x30]	       808	pull.c	FUNCTION_33	CALL_6
0x4001a9b	      0xbe00000000	                              mov esi, 0	       808	pull.c	FUNCTION_33	CALL_6
0x4001aa0	          0x4889c7	                            mov rdi, rax	       808	pull.c	FUNCTION_33	CALL_6
0x4001aa3	      0xe800000000	                          call 0x4001aa8	       808	pull.c	FUNCTION_33	CALL_6
0x4001aa8	            0xeb3a	                           jmp 0x4001ae4	       808	pull.c	FUNCTION_33	CALL_6
0x4001aaa	    0x8b0500000000	            mov eax, dword [0x04001ab0] 	       809	pull.c	FUNCTION_33	ELSE_1	IF_4
0x4001ab0	          0x83f802	                              cmp eax, 2	       809	pull.c	FUNCTION_33	ELSE_1	IF_4
0x4001ab3	            0x7513	                           jne 0x4001ac8	       809	pull.c	FUNCTION_33	ELSE_1	IF_4
0x4001ab5	        0x488d45d0	                   lea rax, [rbp - 0x30]	       810	pull.c	FUNCTION_33	ELSE_1	IF_4
0x4001ab9	      0xbe00000000	                              mov esi, 0	       810	pull.c	FUNCTION_33	ELSE_1	IF_4
0x4001abe	          0x4889c7	                            mov rdi, rax	       810	pull.c	FUNCTION_33	ELSE_1	IF_4
0x4001ac1	      0xe800000000	                          call 0x4001ac6	       810	pull.c	FUNCTION_33	ELSE_1	IF_4
0x4001ac6	            0xeb1c	                           jmp 0x4001ae4	       810	pull.c	FUNCTION_33	ELSE_1	IF_4
0x4001ac8	    0x8b0500000000	            mov eax, dword [0x04001ace] 	       811	pull.c	FUNCTION_33	ELSE_2	IF_5
0x4001ace	          0x83f804	                              cmp eax, 4	       811	pull.c	FUNCTION_33	ELSE_2	IF_5
0x4001ad1	            0x7511	                           jne 0x4001ae4	       811	pull.c	FUNCTION_33	ELSE_2	IF_5
0x4001ad3	        0x488d45d0	                   lea rax, [rbp - 0x30]	       812	pull.c	FUNCTION_33	ELSE_2	IF_5
0x4001ad7	      0xbe00000000	                              mov esi, 0	       812	pull.c	FUNCTION_33	ELSE_2	IF_5
0x4001adc	          0x4889c7	                            mov rdi, rax	       812	pull.c	FUNCTION_33	ELSE_2	IF_5
0x4001adf	      0xe800000000	                          call 0x4001ae4	       812	pull.c	FUNCTION_33	ELSE_2	IF_5
0x4001ae4	    0x488b05000000	            mov rax, qword [0x04001aeb] 	       813	pull.c	FUNCTION_33	IF_6
0x4001aeb	          0x4885c0	                           test rax, rax	       813	pull.c	FUNCTION_33	IF_6
0x4001aee	            0x7416	                            je 0x4001b06	       813	pull.c	FUNCTION_33	IF_6
0x4001af0	    0x488b15000000	            mov rdx, qword [0x04001af7] 	       814	pull.c	FUNCTION_33	CALL_9
0x4001af7	        0x488d45d0	                   lea rax, [rbp - 0x30]	       814	pull.c	FUNCTION_33	CALL_9
0x4001afb	          0x4889d6	                            mov rsi, rdx	       814	pull.c	FUNCTION_33	CALL_9
0x4001afe	          0x4889c7	                            mov rdi, rax	       814	pull.c	FUNCTION_33	CALL_9
0x4001b01	      0xe800000000	                          call 0x4001b06	       814	pull.c	FUNCTION_33	CALL_9
0x4001b06	    0x488b15000000	            mov rdx, qword [0x04001b0d] 	       815	pull.c	FUNCTION_33	CALL_10
0x4001b0d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       815	pull.c	FUNCTION_33	CALL_10
0x4001b11	          0x4889d6	                            mov rsi, rdx	       815	pull.c	FUNCTION_33	CALL_10
0x4001b14	          0x4889c7	                            mov rdi, rax	       815	pull.c	FUNCTION_33	CALL_10
0x4001b17	      0xe800000000	                          call 0x4001b1c	       815	pull.c	FUNCTION_33	CALL_10
0x4001b1c	    0x488b15000000	            mov rdx, qword [0x04001b23] 	       816	pull.c	FUNCTION_33	CALL_11
0x4001b23	        0x488d45d0	                   lea rax, [rbp - 0x30]	       816	pull.c	FUNCTION_33	CALL_11
0x4001b27	          0x4889d6	                            mov rsi, rdx	       816	pull.c	FUNCTION_33	CALL_11
0x4001b2a	          0x4889c7	                            mov rdi, rax	       816	pull.c	FUNCTION_33	CALL_11
0x4001b2d	      0xe800000000	                          call 0x4001b32	       816	pull.c	FUNCTION_33	CALL_11
0x4001b32	    0x488b05000000	            mov rax, qword [0x04001b39] 	       817	pull.c	FUNCTION_33	IF_7
0x4001b39	          0x4885c0	                           test rax, rax	       817	pull.c	FUNCTION_33	IF_7
0x4001b3c	            0x7416	                            je 0x4001b54	       817	pull.c	FUNCTION_33	IF_7
0x4001b3e	    0x488b15000000	            mov rdx, qword [0x04001b45] 	       818	pull.c	FUNCTION_33	CALL_12
0x4001b45	        0x488d45d0	                   lea rax, [rbp - 0x30]	       818	pull.c	FUNCTION_33	CALL_12
0x4001b49	          0x4889d6	                            mov rsi, rdx	       818	pull.c	FUNCTION_33	CALL_12
0x4001b4c	          0x4889c7	                            mov rdi, rax	       818	pull.c	FUNCTION_33	CALL_12
0x4001b4f	      0xe800000000	                          call 0x4001b54	       818	pull.c	FUNCTION_33	CALL_12
0x4001b54	    0x8b0500000000	            mov eax, dword [0x04001b5a] 	       819	pull.c	FUNCTION_33	IF_8
0x4001b5a	            0x85c0	                           test eax, eax	       819	pull.c	FUNCTION_33	IF_8
0x4001b5c	            0x7513	                           jne 0x4001b71	       819	pull.c	FUNCTION_33	IF_8
0x4001b5e	        0x488d45d0	                   lea rax, [rbp - 0x30]	       820	pull.c	FUNCTION_33	CALL_13
0x4001b62	      0xbe00000000	                              mov esi, 0	       820	pull.c	FUNCTION_33	CALL_13
0x4001b67	          0x4889c7	                            mov rdi, rax	       820	pull.c	FUNCTION_33	CALL_13
0x4001b6a	      0xe800000000	                          call 0x4001b6f	       820	pull.c	FUNCTION_33	CALL_13
0x4001b6f	            0xeb1c	                           jmp 0x4001b8d	       820	pull.c	FUNCTION_33	CALL_13
0x4001b71	    0x8b0500000000	            mov eax, dword [0x04001b77] 	       821	pull.c	FUNCTION_33	ELSE_3	IF_9
0x4001b77	          0x83f801	                              cmp eax, 1	       821	pull.c	FUNCTION_33	ELSE_3	IF_9
0x4001b7a	            0x7511	                           jne 0x4001b8d	       821	pull.c	FUNCTION_33	ELSE_3	IF_9
0x4001b7c	        0x488d45d0	                   lea rax, [rbp - 0x30]	       822	pull.c	FUNCTION_33	ELSE_3	IF_9
0x4001b80	      0xbe00000000	                              mov esi, 0	       822	pull.c	FUNCTION_33	ELSE_3	IF_9
0x4001b85	          0x4889c7	                            mov rdi, rax	       822	pull.c	FUNCTION_33	ELSE_3	IF_9
0x4001b88	      0xe800000000	                          call 0x4001b8d	       822	pull.c	FUNCTION_33	ELSE_3	IF_9
0x4001b8d	    0x488b05000000	            mov rax, qword [0x04001b94] 	       823	pull.c	FUNCTION_33	IF_10
0x4001b94	          0x4885c0	                           test rax, rax	       823	pull.c	FUNCTION_33	IF_10
0x4001b97	            0x742f	                            je 0x4001bc8	       823	pull.c	FUNCTION_33	IF_10
0x4001b99	    0x488b05000000	            mov rax, qword [0x04001ba0] 	       824	pull.c	FUNCTION_33	IF_10	CALL_15
0x4001ba0	      0xbe00000000	                              mov esi, 0	       824	pull.c	FUNCTION_33	IF_10	CALL_15
0x4001ba5	          0x4889c7	                            mov rdi, rax	       824	pull.c	FUNCTION_33	IF_10	CALL_15
0x4001ba8	      0xe800000000	                          call 0x4001bad	       824	pull.c	FUNCTION_33	IF_10	CALL_15
0x4001bad	            0x85c0	                           test eax, eax	       823	pull.c	FUNCTION_33	IF_10
0x4001baf	            0x7517	                           jne 0x4001bc8	       823	pull.c	FUNCTION_33	IF_10
0x4001bb1	      0xbf00000000	                              mov edi, 0	       825	pull.c	FUNCTION_33	CALL_17
0x4001bb6	      0xe8e7e5ffff	                               call sym.	       825	pull.c	FUNCTION_33	CALL_17
0x4001bbb	          0x4889c7	                            mov rdi, rax	       825	pull.c	FUNCTION_33	CALL_17
0x4001bbe	      0xb800000000	                              mov eax, 0	       825	pull.c	FUNCTION_33	CALL_17
0x4001bc3	      0xe800000000	                          call 0x4001bc8	       825	pull.c	FUNCTION_33	CALL_17
0x4001bc8	        0x488d45d0	                   lea rax, [rbp - 0x30]	       827	pull.c	FUNCTION_33	CALL_18
0x4001bcc	      0xbe00000000	                              mov esi, 0	       827	pull.c	FUNCTION_33	CALL_18
0x4001bd1	          0x4889c7	                            mov rdi, rax	       827	pull.c	FUNCTION_33	CALL_18
0x4001bd4	      0xe800000000	                          call 0x4001bd9	       827	pull.c	FUNCTION_33	CALL_18
0x4001bd9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       828	pull.c	FUNCTION_33	CALL_20
0x4001bdd	          0x4889c7	                            mov rdi, rax	       828	pull.c	FUNCTION_33	CALL_20
0x4001be0	      0xe800000000	                          call 0x4001be5	       828	pull.c	FUNCTION_33	CALL_20
0x4001be5	          0x4889c2	                            mov rdx, rax	       828	pull.c	FUNCTION_33	CALL_20
0x4001be8	        0x488d45d0	                   lea rax, [rbp - 0x30]	       828	pull.c	FUNCTION_33	CALL_20
0x4001bec	          0x4889d6	                            mov rsi, rdx	       828	pull.c	FUNCTION_33	CALL_20
0x4001bef	          0x4889c7	                            mov rdi, rax	       828	pull.c	FUNCTION_33	CALL_20
0x4001bf2	      0xe800000000	                          call 0x4001bf7	       828	pull.c	FUNCTION_33	CALL_20
0x4001bf7	      0x48837da800	               cmp qword [rbp - 0x58], 0	       830	pull.c	FUNCTION_33	IF_11	CALL_21
0x4001bfc	            0x7430	                            je 0x4001c2e	       830	pull.c	FUNCTION_33	IF_11	CALL_21
0x4001bfe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       830	pull.c	FUNCTION_33	IF_11	CALL_21
0x4001c02	          0x4889c7	                            mov rdi, rax	       830	pull.c	FUNCTION_33	IF_11	CALL_21
0x4001c05	      0xe813e6ffff	                    call sym.is_null_oid	       830	pull.c	FUNCTION_33	IF_11	CALL_21
0x4001c0a	            0x85c0	                           test eax, eax	       830	pull.c	FUNCTION_33	IF_11	CALL_21
0x4001c0c	            0x7520	                           jne 0x4001c2e	       830	pull.c	FUNCTION_33	IF_11	CALL_21
0x4001c0e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       831	pull.c	FUNCTION_33	CALL_23
0x4001c12	          0x4889c7	                            mov rdi, rax	       831	pull.c	FUNCTION_33	CALL_23
0x4001c15	      0xe800000000	                          call 0x4001c1a	       831	pull.c	FUNCTION_33	CALL_23
0x4001c1a	          0x4889c2	                            mov rdx, rax	       831	pull.c	FUNCTION_33	CALL_23
0x4001c1d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       831	pull.c	FUNCTION_33	CALL_23
0x4001c21	          0x4889d6	                            mov rsi, rdx	       831	pull.c	FUNCTION_33	CALL_23
0x4001c24	          0x4889c7	                            mov rdi, rax	       831	pull.c	FUNCTION_33	CALL_23
0x4001c27	      0xe800000000	                          call 0x4001c2c	       831	pull.c	FUNCTION_33	CALL_23
0x4001c2c	            0xeb1e	                           jmp 0x4001c4c	       831	pull.c	FUNCTION_33	CALL_23
0x4001c2e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       833	pull.c	FUNCTION_33	CALL_25
0x4001c32	          0x4889c7	                            mov rdi, rax	       833	pull.c	FUNCTION_33	CALL_25
0x4001c35	      0xe800000000	                          call 0x4001c3a	       833	pull.c	FUNCTION_33	CALL_25
0x4001c3a	          0x4889c2	                            mov rdx, rax	       833	pull.c	FUNCTION_33	CALL_25
0x4001c3d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       833	pull.c	FUNCTION_33	CALL_25
0x4001c41	          0x4889d6	                            mov rsi, rdx	       833	pull.c	FUNCTION_33	CALL_25
0x4001c44	          0x4889c7	                            mov rdi, rax	       833	pull.c	FUNCTION_33	CALL_25
0x4001c47	      0xe800000000	                          call 0x4001c4c	       833	pull.c	FUNCTION_33	CALL_25
0x4001c4c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       835	pull.c	FUNCTION_33	CALL_26
0x4001c50	      0xbe02000000	                              mov esi, 2	       835	pull.c	FUNCTION_33	CALL_26
0x4001c55	          0x4889c7	                            mov rdi, rax	       835	pull.c	FUNCTION_33	CALL_26
0x4001c58	      0xe800000000	                          call 0x4001c5d	       835	pull.c	FUNCTION_33	CALL_26
0x4001c5d	          0x8945cc	             mov dword [rbp - 0x34], eax	       835	pull.c	FUNCTION_33	CALL_26
0x4001c60	        0x488d45d0	                   lea rax, [rbp - 0x30]	       836	pull.c	FUNCTION_33	CALL_27
0x4001c64	          0x4889c7	                            mov rdi, rax	       836	pull.c	FUNCTION_33	CALL_27
0x4001c67	      0xe800000000	                          call 0x4001c6c	       836	pull.c	FUNCTION_33	CALL_27
0x4001c6c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       837	pull.c	FUNCTION_33
0x4001c6f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       838	pull.c	FUNCTION_33
0x4001c73	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       838	pull.c	FUNCTION_33
0x4001c7c	            0x7405	                            je 0x4001c83	       838	pull.c	FUNCTION_33
0x4001c7e	      0xe800000000	                          call 0x4001c83	       838	pull.c	FUNCTION_33
0x4001c83	              0xc9	                                   leave	       838	pull.c	FUNCTION_33
0x4001c84	              0xc3	                                     ret	       838	pull.c	FUNCTION_33
is_null_oid	functions,0:CALL,1:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0:FOR,0	13
0x400021d	              0x55	                                push rbp	       989	cache.h	FUNCTION_45
0x400021e	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_45
0x4000221	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_45
0x4000225	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_45
0x4000229	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_45	CALL_1
0x400022d	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_45	CALL_1
0x4000232	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_45	CALL_1
0x4000235	      0xe894ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_45	CALL_1
0x400023a	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_45	CALL_1
0x400023c	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_45	CALL_1
0x400023f	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_45	CALL_1
0x4000242	              0xc9	                                   leave	       991	cache.h	FUNCTION_45
0x4000243	              0xc3	                                     ret	       991	cache.h	FUNCTION_45
hashcmp	functions,0:CALL,1:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0:FOR,0	13
0x40001ce	              0x55	                                push rbp	       974	cache.h	FUNCTION_42
0x40001cf	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_42
0x40001d2	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_42
0x40001d6	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_42
0x40001da	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_42
0x40001de	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_42	CALL_1
0x40001e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_42	CALL_1
0x40001e6	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_42	CALL_1
0x40001eb	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_42	CALL_1
0x40001ee	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_42	CALL_1
0x40001f1	      0xe800000000	                          call 0x40001f6	       975	cache.h	FUNCTION_42	CALL_1
0x40001f6	              0xc9	                                   leave	       976	cache.h	FUNCTION_42
0x40001f7	              0xc3	                                     ret	       976	cache.h	FUNCTION_42
skip_prefix	functions,0:CALL,0:ELSE,0:IF,1:SWITCH,0:WHILE,0:DO,1:FOR,0	27
0x400004b	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_68
0x400004c	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_68
0x400004f	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_68
0x4000053	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_68
0x4000057	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_68
0x400005b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x400005f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x4000062	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x4000064	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x4000066	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x400006a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x400006e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x4000071	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x4000076	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_68	DO_1	IF_1
0x4000078	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x400007c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4000080	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4000084	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4000087	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x400008b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x400008f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4000093	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4000096	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_68	DO_1
0x4000098	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_68	DO_1
0x400009a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_68
0x400009f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_68
0x40000a0	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_68
const_error	functions,0:CALL,0:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0:FOR,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_67
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_67
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_67
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_67
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_67
die_no_merge_candidates	functions,0:CALL,46:ELSE,7:IF,8:SWITCH,0:WHILE,0:DO,0:FOR,0	246
0x400090f	              0x55	                                push rbp	       413	pull.c	FUNCTION_22
0x4000910	          0x4889e5	                            mov rbp, rsp	       413	pull.c	FUNCTION_22
0x4000913	              0x53	                                push rbx	       413	pull.c	FUNCTION_22
0x4000914	        0x4883ec38	                           sub rsp, 0x38	       413	pull.c	FUNCTION_22
0x4000918	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       413	pull.c	FUNCTION_22
0x400091c	        0x488975c0	             mov qword [rbp - 0x40], rsi	       413	pull.c	FUNCTION_22
0x4000920	    0x64488b042528	                mov rax, qword fs:[0x28]	       413	pull.c	FUNCTION_22
0x4000929	        0x488945e8	             mov qword [rbp - 0x18], rax	       413	pull.c	FUNCTION_22
0x400092d	            0x31c0	                            xor eax, eax	       413	pull.c	FUNCTION_22
0x400092f	      0xbf00000000	                              mov edi, 0	       414	pull.c	FUNCTION_22	CALL_1
0x4000934	      0xe800000000	                          call 0x4000939	       414	pull.c	FUNCTION_22	CALL_1
0x4000939	        0x488945d8	             mov qword [rbp - 0x28], rax	       414	pull.c	FUNCTION_22	CALL_1
0x400093d	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       415	pull.c	FUNCTION_22
0x4000942	            0x740a	                            je 0x400094e	       415	pull.c	FUNCTION_22
0x4000944	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       415	pull.c	FUNCTION_22
0x4000948	        0x488b4010	            mov rax, qword [rax + 0x10] 	       415	pull.c	FUNCTION_22
0x400094c	            0xeb05	                           jmp 0x4000953	       415	pull.c	FUNCTION_22
0x400094e	      0xb800000000	                              mov eax, 0	       415	pull.c	FUNCTION_22
0x4000953	        0x488945e0	             mov qword [rbp - 0x20], rax	       415	pull.c	FUNCTION_22
0x4000957	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       417	pull.c	FUNCTION_22	IF_1
0x400095b	          0x488b00	                    mov rax, qword [rax]	       417	pull.c	FUNCTION_22	IF_1
0x400095e	          0x4885c0	                           test rax, rax	       417	pull.c	FUNCTION_22	IF_1
0x4000961	            0x747d	                            je 0x40009e0	       417	pull.c	FUNCTION_22	IF_1
0x4000963	    0x8b0500000000	            mov eax, dword [0x04000969] 	       418	pull.c	FUNCTION_22	IF_1	IF_2
0x4000969	            0x85c0	                           test eax, eax	       418	pull.c	FUNCTION_22	IF_1	IF_2
0x400096b	            0x7426	                            je 0x4000993	       418	pull.c	FUNCTION_22	IF_1	IF_2
0x400096d	      0xbf00000000	                              mov edi, 0	       419	pull.c	FUNCTION_22	IF_1	CALL_3
0x4000972	      0xe82bf8ffff	                               call sym.	       419	pull.c	FUNCTION_22	IF_1	CALL_3
0x4000977	          0x4889c2	                            mov rdx, rax	       419	pull.c	FUNCTION_22	IF_1	CALL_3
0x400097a	    0x488b05000000	            mov rax, qword [0x04000981] 	       419	pull.c	FUNCTION_22	IF_1	CALL_3
0x4000981	          0x4889d6	                            mov rsi, rdx	       419	pull.c	FUNCTION_22	IF_1	CALL_3
0x4000984	          0x4889c7	                            mov rdi, rax	       419	pull.c	FUNCTION_22	IF_1	CALL_3
0x4000987	      0xb800000000	                              mov eax, 0	       419	pull.c	FUNCTION_22	IF_1	CALL_3
0x400098c	      0xe800000000	                          call 0x4000991	       419	pull.c	FUNCTION_22	IF_1	CALL_3
0x4000991	            0xeb24	                           jmp 0x40009b7	       419	pull.c	FUNCTION_22	IF_1	CALL_3
0x4000993	      0xbf00000000	                              mov edi, 0	       421	pull.c	FUNCTION_22	IF_1	CALL_5
0x4000998	      0xe805f8ffff	                               call sym.	       421	pull.c	FUNCTION_22	IF_1	CALL_5
0x400099d	          0x4889c2	                            mov rdx, rax	       421	pull.c	FUNCTION_22	IF_1	CALL_5
0x40009a0	    0x488b05000000	            mov rax, qword [0x040009a7] 	       421	pull.c	FUNCTION_22	IF_1	CALL_5
0x40009a7	          0x4889d6	                            mov rsi, rdx	       421	pull.c	FUNCTION_22	IF_1	CALL_5
0x40009aa	          0x4889c7	                            mov rdi, rax	       421	pull.c	FUNCTION_22	IF_1	CALL_5
0x40009ad	      0xb800000000	                              mov eax, 0	       421	pull.c	FUNCTION_22	IF_1	CALL_5
0x40009b2	      0xe800000000	                          call 0x40009b7	       421	pull.c	FUNCTION_22	IF_1	CALL_5
0x40009b7	      0xbf00000000	                              mov edi, 0	       422	pull.c	FUNCTION_22	IF_1	CALL_7
0x40009bc	      0xe8e1f7ffff	                               call sym.	       422	pull.c	FUNCTION_22	IF_1	CALL_7
0x40009c1	          0x4889c2	                            mov rdx, rax	       422	pull.c	FUNCTION_22	IF_1	CALL_7
0x40009c4	    0x488b05000000	            mov rax, qword [0x040009cb] 	       422	pull.c	FUNCTION_22	IF_1	CALL_7
0x40009cb	          0x4889d6	                            mov rsi, rdx	       422	pull.c	FUNCTION_22	IF_1	CALL_7
0x40009ce	          0x4889c7	                            mov rdi, rax	       422	pull.c	FUNCTION_22	IF_1	CALL_7
0x40009d1	      0xb800000000	                              mov eax, 0	       422	pull.c	FUNCTION_22	IF_1	CALL_7
0x40009d6	      0xe800000000	                          call 0x40009db	       422	pull.c	FUNCTION_22	IF_1	CALL_7
0x40009db	      0xe940030000	                           jmp 0x4000d20	       422	pull.c	FUNCTION_22	IF_1	CALL_7
0x40009e0	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       424	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_8
0x40009e5	            0x7452	                            je 0x4000a39	       424	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_8
0x40009e7	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       424	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_8
0x40009ec	            0x744b	                            je 0x4000a39	       424	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_8
0x40009ee	      0x48837de000	               cmp qword [rbp - 0x20], 0	       424	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_8
0x40009f3	            0x7417	                            je 0x4000a0c	       424	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_8
0x40009f5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       424	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_8
0x40009f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       424	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_8
0x40009fd	          0x4889d6	                            mov rsi, rdx	       424	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_8
0x4000a00	          0x4889c7	                            mov rdi, rax	       424	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_8
0x4000a03	      0xe800000000	                          call 0x4000a08	       424	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_8
0x4000a08	            0x85c0	                           test eax, eax	       424	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_8
0x4000a0a	            0x742d	                            je 0x4000a39	       424	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_8
0x4000a0c	      0xbf00000000	                              mov edi, 0	       425	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_10
0x4000a11	      0xe88cf7ffff	                               call sym.	       425	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_10
0x4000a16	          0x4889c1	                            mov rcx, rax	       425	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_10
0x4000a19	    0x488b05000000	            mov rax, qword [0x04000a20] 	       425	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_10
0x4000a20	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       425	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_10
0x4000a24	          0x4889ce	                            mov rsi, rcx	       425	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_10
0x4000a27	          0x4889c7	                            mov rdi, rax	       425	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_10
0x4000a2a	      0xb800000000	                              mov eax, 0	       425	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_10
0x4000a2f	      0xe800000000	                          call 0x4000a34	       425	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_10
0x4000a34	      0xe9e7020000	                           jmp 0x4000d20	       425	pull.c	FUNCTION_22	ELSE_2	IF_3	CALL_10
0x4000a39	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       429	pull.c	FUNCTION_22	ELSE_3	IF_4
0x4000a3e	     0xf85ff000000	                           jne 0x4000b43	       429	pull.c	FUNCTION_22	ELSE_3	IF_4
0x4000a44	      0xbf00000000	                              mov edi, 0	       430	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_12
0x4000a49	      0xe854f7ffff	                               call sym.	       430	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_12
0x4000a4e	          0x4889c2	                            mov rdx, rax	       430	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_12
0x4000a51	    0x488b05000000	            mov rax, qword [0x04000a58] 	       430	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_12
0x4000a58	          0x4889d6	                            mov rsi, rdx	       430	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_12
0x4000a5b	          0x4889c7	                            mov rdi, rax	       430	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_12
0x4000a5e	      0xb800000000	                              mov eax, 0	       430	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_12
0x4000a63	      0xe800000000	                          call 0x4000a68	       430	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_12
0x4000a68	    0x8b0500000000	            mov eax, dword [0x04000a6e] 	       431	pull.c	FUNCTION_22	ELSE_3	IF_4	IF_5
0x4000a6e	            0x85c0	                           test eax, eax	       431	pull.c	FUNCTION_22	ELSE_3	IF_4	IF_5
0x4000a70	            0x7426	                            je 0x4000a98	       431	pull.c	FUNCTION_22	ELSE_3	IF_4	IF_5
0x4000a72	      0xbf00000000	                              mov edi, 0	       432	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_14
0x4000a77	      0xe826f7ffff	                               call sym.	       432	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_14
0x4000a7c	          0x4889c2	                            mov rdx, rax	       432	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_14
0x4000a7f	    0x488b05000000	            mov rax, qword [0x04000a86] 	       432	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_14
0x4000a86	          0x4889d6	                            mov rsi, rdx	       432	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_14
0x4000a89	          0x4889c7	                            mov rdi, rax	       432	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_14
0x4000a8c	      0xb800000000	                              mov eax, 0	       432	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_14
0x4000a91	      0xe800000000	                          call 0x4000a96	       432	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_14
0x4000a96	            0xeb24	                           jmp 0x4000abc	       432	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_14
0x4000a98	      0xbf00000000	                              mov edi, 0	       434	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_16
0x4000a9d	      0xe800f7ffff	                               call sym.	       434	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_16
0x4000aa2	          0x4889c2	                            mov rdx, rax	       434	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_16
0x4000aa5	    0x488b05000000	            mov rax, qword [0x04000aac] 	       434	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_16
0x4000aac	          0x4889d6	                            mov rsi, rdx	       434	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_16
0x4000aaf	          0x4889c7	                            mov rdi, rax	       434	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_16
0x4000ab2	      0xb800000000	                              mov eax, 0	       434	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_16
0x4000ab7	      0xe800000000	                          call 0x4000abc	       434	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_16
0x4000abc	      0xbf00000000	                              mov edi, 0	       435	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_18
0x4000ac1	      0xe8dcf6ffff	                               call sym.	       435	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_18
0x4000ac6	          0x4889c2	                            mov rdx, rax	       435	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_18
0x4000ac9	    0x488b05000000	            mov rax, qword [0x04000ad0] 	       435	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_18
0x4000ad0	          0x4889d6	                            mov rsi, rdx	       435	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_18
0x4000ad3	          0x4889c7	                            mov rdi, rax	       435	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_18
0x4000ad6	      0xb800000000	                              mov eax, 0	       435	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_18
0x4000adb	      0xe800000000	                          call 0x4000ae0	       435	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_18
0x4000ae0	    0x488b05000000	            mov rax, qword [0x04000ae7] 	       436	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_19
0x4000ae7	          0x4889c6	                            mov rsi, rax	       436	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_19
0x4000aea	      0xbf0a000000	                            mov edi, 0xa	       436	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_19
0x4000aef	      0xe800000000	                          call 0x4000af4	       436	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_19
0x4000af4	      0xbf00000000	                              mov edi, 0	       437	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_22
0x4000af9	      0xe8a4f6ffff	                               call sym.	       437	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_22
0x4000afe	          0x4889c3	                            mov rbx, rax	       437	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_22
0x4000b01	      0xbf00000000	                              mov edi, 0	       437	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_22
0x4000b06	      0xe897f6ffff	                               call sym.	       437	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_22
0x4000b0b	          0x4889c2	                            mov rdx, rax	       437	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_22
0x4000b0e	    0x488b05000000	            mov rax, qword [0x04000b15] 	       437	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_22
0x4000b15	          0x4889d9	                            mov rcx, rbx	       437	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_22
0x4000b18	      0xbe00000000	                              mov esi, 0	       437	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_22
0x4000b1d	          0x4889c7	                            mov rdi, rax	       437	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_22
0x4000b20	      0xb800000000	                              mov eax, 0	       437	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_22
0x4000b25	      0xe800000000	                          call 0x4000b2a	       437	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_22
0x4000b2a	    0x488b05000000	            mov rax, qword [0x04000b31] 	       438	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_23
0x4000b31	          0x4889c6	                            mov rsi, rax	       438	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_23
0x4000b34	      0xbf0a000000	                            mov edi, 0xa	       438	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_23
0x4000b39	      0xe800000000	                          call 0x4000b3e	       438	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_23
0x4000b3e	      0xe9dd010000	                           jmp 0x4000d20	       438	pull.c	FUNCTION_22	ELSE_3	IF_4	CALL_23
0x4000b43	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       439	pull.c	FUNCTION_22	ELSE_5	IF_6
0x4000b47	          0x8b4030	            mov eax, dword [rax + 0x30] 	       439	pull.c	FUNCTION_22	ELSE_5	IF_6
0x4000b4a	            0x85c0	                           test eax, eax	       439	pull.c	FUNCTION_22	ELSE_5	IF_6
0x4000b4c	     0xf859c010000	                           jne 0x4000cee	       439	pull.c	FUNCTION_22	ELSE_5	IF_6
0x4000b52	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       440	pull.c	FUNCTION_22	ELSE_5	IF_6
0x4000b5a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       442	pull.c	FUNCTION_22	ELSE_5	IF_6	IF_7	CALL_24
0x4000b5e	          0x4889c6	                            mov rsi, rax	       442	pull.c	FUNCTION_22	ELSE_5	IF_6	IF_7	CALL_24
0x4000b61	      0xbf00000000	                              mov edi, 0	       442	pull.c	FUNCTION_22	ELSE_5	IF_6	IF_7	CALL_24
0x4000b66	      0xe800000000	                          call 0x4000b6b	       442	pull.c	FUNCTION_22	ELSE_5	IF_6	IF_7	CALL_24
0x4000b6b	            0x85c0	                           test eax, eax	       442	pull.c	FUNCTION_22	ELSE_5	IF_6	IF_7	CALL_24
0x4000b6d	            0x7509	                           jne 0x4000b78	       442	pull.c	FUNCTION_22	ELSE_5	IF_6	IF_7	CALL_24
0x4000b6f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       442	pull.c	FUNCTION_22	ELSE_5	IF_6	IF_7	CALL_24
0x4000b73	          0x4885c0	                           test rax, rax	       442	pull.c	FUNCTION_22	ELSE_5	IF_6	IF_7	CALL_24
0x4000b76	            0x750e	                           jne 0x4000b86	       442	pull.c	FUNCTION_22	ELSE_5	IF_6	IF_7	CALL_24
0x4000b78	      0xbf00000000	                              mov edi, 0	       443	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_25
0x4000b7d	      0xe820f6ffff	                               call sym.	       443	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_25
0x4000b82	        0x488945d0	             mov qword [rbp - 0x30], rax	       443	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_25
0x4000b86	      0xbf00000000	                              mov edi, 0	       445	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_27
0x4000b8b	      0xe812f6ffff	                               call sym.	       445	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_27
0x4000b90	          0x4889c2	                            mov rdx, rax	       445	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_27
0x4000b93	    0x488b05000000	            mov rax, qword [0x04000b9a] 	       445	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_27
0x4000b9a	          0x4889d6	                            mov rsi, rdx	       445	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_27
0x4000b9d	          0x4889c7	                            mov rdi, rax	       445	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_27
0x4000ba0	      0xb800000000	                              mov eax, 0	       445	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_27
0x4000ba5	      0xe800000000	                          call 0x4000baa	       445	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_27
0x4000baa	    0x8b0500000000	            mov eax, dword [0x04000bb0] 	       446	pull.c	FUNCTION_22	ELSE_5	IF_6	IF_8
0x4000bb0	            0x85c0	                           test eax, eax	       446	pull.c	FUNCTION_22	ELSE_5	IF_6	IF_8
0x4000bb2	            0x7426	                            je 0x4000bda	       446	pull.c	FUNCTION_22	ELSE_5	IF_6	IF_8
0x4000bb4	      0xbf00000000	                              mov edi, 0	       447	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_29
0x4000bb9	      0xe8e4f5ffff	                               call sym.	       447	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_29
0x4000bbe	          0x4889c2	                            mov rdx, rax	       447	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_29
0x4000bc1	    0x488b05000000	            mov rax, qword [0x04000bc8] 	       447	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_29
0x4000bc8	          0x4889d6	                            mov rsi, rdx	       447	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_29
0x4000bcb	          0x4889c7	                            mov rdi, rax	       447	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_29
0x4000bce	      0xb800000000	                              mov eax, 0	       447	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_29
0x4000bd3	      0xe800000000	                          call 0x4000bd8	       447	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_29
0x4000bd8	            0xeb24	                           jmp 0x4000bfe	       447	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_29
0x4000bda	      0xbf00000000	                              mov edi, 0	       449	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_31
0x4000bdf	      0xe8bef5ffff	                               call sym.	       449	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_31
0x4000be4	          0x4889c2	                            mov rdx, rax	       449	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_31
0x4000be7	    0x488b05000000	            mov rax, qword [0x04000bee] 	       449	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_31
0x4000bee	          0x4889d6	                            mov rsi, rdx	       449	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_31
0x4000bf1	          0x4889c7	                            mov rdi, rax	       449	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_31
0x4000bf4	      0xb800000000	                              mov eax, 0	       449	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_31
0x4000bf9	      0xe800000000	                          call 0x4000bfe	       449	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_31
0x4000bfe	      0xbf00000000	                              mov edi, 0	       450	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_33
0x4000c03	      0xe89af5ffff	                               call sym.	       450	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_33
0x4000c08	          0x4889c2	                            mov rdx, rax	       450	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_33
0x4000c0b	    0x488b05000000	            mov rax, qword [0x04000c12] 	       450	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_33
0x4000c12	          0x4889d6	                            mov rsi, rdx	       450	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_33
0x4000c15	          0x4889c7	                            mov rdi, rax	       450	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_33
0x4000c18	      0xb800000000	                              mov eax, 0	       450	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_33
0x4000c1d	      0xe800000000	                          call 0x4000c22	       450	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_33
0x4000c22	    0x488b05000000	            mov rax, qword [0x04000c29] 	       451	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_34
0x4000c29	          0x4889c6	                            mov rsi, rax	       451	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_34
0x4000c2c	      0xbf0a000000	                            mov edi, 0xa	       451	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_34
0x4000c31	      0xe800000000	                          call 0x4000c36	       451	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_34
0x4000c36	      0xbf00000000	                              mov edi, 0	       452	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_37
0x4000c3b	      0xe862f5ffff	                               call sym.	       452	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_37
0x4000c40	          0x4889c3	                            mov rbx, rax	       452	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_37
0x4000c43	      0xbf00000000	                              mov edi, 0	       452	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_37
0x4000c48	      0xe855f5ffff	                               call sym.	       452	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_37
0x4000c4d	          0x4889c2	                            mov rdx, rax	       452	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_37
0x4000c50	    0x488b05000000	            mov rax, qword [0x04000c57] 	       452	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_37
0x4000c57	          0x4889d9	                            mov rcx, rbx	       452	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_37
0x4000c5a	      0xbe00000000	                              mov esi, 0	       452	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_37
0x4000c5f	          0x4889c7	                            mov rdi, rax	       452	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_37
0x4000c62	      0xb800000000	                              mov eax, 0	       452	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_37
0x4000c67	      0xe800000000	                          call 0x4000c6c	       452	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_37
0x4000c6c	    0x488b05000000	            mov rax, qword [0x04000c73] 	       453	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_38
0x4000c73	          0x4889c6	                            mov rsi, rax	       453	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_38
0x4000c76	      0xbf0a000000	                            mov edi, 0xa	       453	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_38
0x4000c7b	      0xe800000000	                          call 0x4000c80	       453	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_38
0x4000c80	      0xbf00000000	                              mov edi, 0	       454	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_40
0x4000c85	      0xe818f5ffff	                               call sym.	       454	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_40
0x4000c8a	          0x4889c2	                            mov rdx, rax	       454	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_40
0x4000c8d	    0x488b05000000	            mov rax, qword [0x04000c94] 	       454	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_40
0x4000c94	          0x4889d6	                            mov rsi, rdx	       454	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_40
0x4000c97	          0x4889c7	                            mov rdi, rax	       454	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_40
0x4000c9a	      0xb800000000	                              mov eax, 0	       454	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_40
0x4000c9f	      0xe800000000	                          call 0x4000ca4	       454	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_40
0x4000ca4	    0x488b05000000	            mov rax, qword [0x04000cab] 	       455	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_41
0x4000cab	          0x4889c6	                            mov rsi, rax	       455	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_41
0x4000cae	      0xbf0a000000	                            mov edi, 0xa	       455	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_41
0x4000cb3	      0xe800000000	                          call 0x4000cb8	       455	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_41
0x4000cb8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       456	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_42
0x4000cbc	          0x488b18	                    mov rbx, qword [rax]	       456	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_42
0x4000cbf	      0xbf00000000	                              mov edi, 0	       456	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_42
0x4000cc4	      0xe8d9f4ffff	                               call sym.	       456	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_42
0x4000cc9	          0x4889c1	                            mov rcx, rax	       456	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_42
0x4000ccc	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       456	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_42
0x4000cd0	    0x488b05000000	            mov rax, qword [0x04000cd7] 	       456	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_42
0x4000cd7	          0x4989d8	                             mov r8, rbx	       456	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_42
0x4000cda	      0xbe00000000	                              mov esi, 0	       456	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_42
0x4000cdf	          0x4889c7	                            mov rdi, rax	       456	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_42
0x4000ce2	      0xb800000000	                              mov eax, 0	       456	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_42
0x4000ce7	      0xe800000000	                          call 0x4000cec	       456	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_42
0x4000cec	            0xeb32	                           jmp 0x4000d20	       456	pull.c	FUNCTION_22	ELSE_5	IF_6	CALL_42
0x4000cee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       461	pull.c	FUNCTION_22	ELSE_7
0x4000cf2	        0x488b4020	            mov rax, qword [rax + 0x20] 	       461	pull.c	FUNCTION_22	ELSE_7
0x4000cf6	          0x488b18	                    mov rbx, qword [rax]	       459	pull.c	FUNCTION_22	ELSE_7	CALL_45
0x4000cf9	      0xbf00000000	                              mov edi, 0	       459	pull.c	FUNCTION_22	ELSE_7	CALL_45
0x4000cfe	      0xe89ff4ffff	                               call sym.	       459	pull.c	FUNCTION_22	ELSE_7	CALL_45
0x4000d03	          0x4889c1	                            mov rcx, rax	       459	pull.c	FUNCTION_22	ELSE_7	CALL_45
0x4000d06	    0x488b05000000	            mov rax, qword [0x04000d0d] 	       459	pull.c	FUNCTION_22	ELSE_7	CALL_45
0x4000d0d	          0x4889da	                            mov rdx, rbx	       459	pull.c	FUNCTION_22	ELSE_7	CALL_45
0x4000d10	          0x4889ce	                            mov rsi, rcx	       459	pull.c	FUNCTION_22	ELSE_7	CALL_45
0x4000d13	          0x4889c7	                            mov rdi, rax	       459	pull.c	FUNCTION_22	ELSE_7	CALL_45
0x4000d16	      0xb800000000	                              mov eax, 0	       459	pull.c	FUNCTION_22	ELSE_7	CALL_45
0x4000d1b	      0xe800000000	                          call 0x4000d20	       459	pull.c	FUNCTION_22	ELSE_7	CALL_45
0x4000d20	      0xbf01000000	                              mov edi, 1	       462	pull.c	FUNCTION_22	CALL_46
0x4000d25	      0xe800000000	            call sym.parse_repo_refspecs	       462	pull.c	FUNCTION_22	CALL_46
cmd_pull	functions,0:CALL,56:ELSE,1:IF,27:SWITCH,0:WHILE,0:DO,0:FOR,0	327
0x4001c85	              0x55	                                push rbp	       841	pull.c	FUNCTION_34
0x4001c86	          0x4889e5	                            mov rbp, rsp	       841	pull.c	FUNCTION_34
0x4001c89	              0x53	                                push rbx	       841	pull.c	FUNCTION_34
0x4001c8a	    0x4881ece80000	                           sub rsp, 0xe8	       841	pull.c	FUNCTION_34
0x4001c91	    0x89bd2cffffff	             mov dword [rbp - 0xd4], edi	       841	pull.c	FUNCTION_34
0x4001c97	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       841	pull.c	FUNCTION_34
0x4001c9e	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	       841	pull.c	FUNCTION_34
0x4001ca5	    0x64488b042528	                mov rax, qword fs:[0x28]	       841	pull.c	FUNCTION_34
0x4001cae	        0x488945e8	             mov qword [rbp - 0x18], rax	       841	pull.c	FUNCTION_34
0x4001cb2	            0x31c0	                            xor eax, eax	       841	pull.c	FUNCTION_34
0x4001cb4	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       843	pull.c	FUNCTION_34
0x4001cbf	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	       843	pull.c	FUNCTION_34
0x4001cc9	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	       843	pull.c	FUNCTION_34
0x4001cd3	    0xc74580000000	               mov dword [rbp - 0x80], 0	       843	pull.c	FUNCTION_34
0x4001cda	      0xbf00000000	                              mov edi, 0	       848	pull.c	FUNCTION_34	IF_1	CALL_1
0x4001cdf	      0xe800000000	                          call 0x4001ce4	       848	pull.c	FUNCTION_34	IF_1	CALL_1
0x4001ce4	          0x4885c0	                           test rax, rax	       848	pull.c	FUNCTION_34	IF_1	CALL_1
0x4001ce7	            0x7517	                           jne 0x4001d00	       848	pull.c	FUNCTION_34	IF_1	CALL_1
0x4001ce9	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	       849	pull.c	FUNCTION_34	CALL_2
0x4001cf0	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       849	pull.c	FUNCTION_34	CALL_2
0x4001cf6	          0x4889d6	                            mov rsi, rdx	       849	pull.c	FUNCTION_34	CALL_2
0x4001cf9	            0x89c7	                            mov edi, eax	       849	pull.c	FUNCTION_34	CALL_2
0x4001cfb	      0xe8fbe7ffff	             call sym.set_reflog_message	       849	pull.c	FUNCTION_34	CALL_2
0x4001d00	      0xbe00000000	                              mov esi, 0	       851	pull.c	FUNCTION_34	CALL_3
0x4001d05	      0xbf00000000	                              mov edi, 0	       851	pull.c	FUNCTION_34	CALL_3
0x4001d0a	      0xe800000000	                          call 0x4001d0f	       851	pull.c	FUNCTION_34	CALL_3
0x4001d0f	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       853	pull.c	FUNCTION_34	CALL_4
0x4001d16	    0x488bb520ffff	             mov rsi, qword [rbp - 0xe0]	       853	pull.c	FUNCTION_34	CALL_4
0x4001d1d	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       853	pull.c	FUNCTION_34	CALL_4
0x4001d23	    0x41b900000000	                              mov r9d, 0	       853	pull.c	FUNCTION_34	CALL_4
0x4001d29	    0x41b800000000	                              mov r8d, 0	       853	pull.c	FUNCTION_34	CALL_4
0x4001d2f	      0xb900000000	                              mov ecx, 0	       853	pull.c	FUNCTION_34	CALL_4
0x4001d34	            0x89c7	                            mov edi, eax	       853	pull.c	FUNCTION_34	CALL_4
0x4001d36	      0xe800000000	                          call 0x4001d3b	       853	pull.c	FUNCTION_34	CALL_4
0x4001d3b	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       853	pull.c	FUNCTION_34	CALL_4
0x4001d41	    0x488d8d50ffff	                   lea rcx, [rbp - 0xb0]	       855	pull.c	FUNCTION_34	CALL_5
0x4001d48	    0x488d9548ffff	                   lea rdx, [rbp - 0xb8]	       855	pull.c	FUNCTION_34	CALL_5
0x4001d4f	    0x488bb520ffff	             mov rsi, qword [rbp - 0xe0]	       855	pull.c	FUNCTION_34	CALL_5
0x4001d56	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       855	pull.c	FUNCTION_34	CALL_5
0x4001d5c	            0x89c7	                            mov edi, eax	       855	pull.c	FUNCTION_34	CALL_5
0x4001d5e	      0xe8c7efffff	            call sym.parse_repo_refspecs	       855	pull.c	FUNCTION_34	CALL_5
0x4001d63	    0x488b05000000	            mov rax, qword [0x04001d6a] 	       857	pull.c	FUNCTION_34	IF_2
0x4001d6a	          0x4885c0	                           test rax, rax	       857	pull.c	FUNCTION_34	IF_2
0x4001d6d	            0x7514	                           jne 0x4001d83	       857	pull.c	FUNCTION_34	IF_2
0x4001d6f	      0xe848e8ffff	                  call sym.config_get_ff	       858	pull.c	FUNCTION_34	CALL_7
0x4001d74	          0x4889c7	                            mov rdi, rax	       858	pull.c	FUNCTION_34	CALL_7
0x4001d77	      0xe825e3ffff	                call sym.xstrdup_or_null	       858	pull.c	FUNCTION_34	CALL_7
0x4001d7c	    0x488905000000	            mov qword [0x04001d83], rax 	       858	pull.c	FUNCTION_34	CALL_7
0x4001d83	    0x8b0500000000	            mov eax, dword [0x04001d89] 	       860	pull.c	FUNCTION_34	IF_3
0x4001d89	            0x85c0	                           test eax, eax	       860	pull.c	FUNCTION_34	IF_3
0x4001d8b	            0x790b	                           jns 0x4001d98	       860	pull.c	FUNCTION_34	IF_3
0x4001d8d	      0xe8d8e8ffff	              call sym.config_get_rebase	       861	pull.c	FUNCTION_34	CALL_8
0x4001d92	    0x890500000000	            mov dword [0x04001d98], eax 	       861	pull.c	FUNCTION_34	CALL_8
0x4001d98	      0xbf00000000	                              mov edi, 0	       863	pull.c	FUNCTION_34	IF_4
0x4001d9d	      0xe800000000	                          call 0x4001da2	       863	pull.c	FUNCTION_34	IF_4
0x4001da2	            0x85c0	                           test eax, eax	       863	pull.c	FUNCTION_34	IF_4
0x4001da4	            0x740a	                            je 0x4001db0	       863	pull.c	FUNCTION_34	IF_4
0x4001da6	      0xbf00000000	                              mov edi, 0	       864	pull.c	FUNCTION_34	CALL_9
0x4001dab	      0xe800000000	                          call 0x4001db0	       864	pull.c	FUNCTION_34	CALL_9
0x4001db0	      0xe800000000	                          call 0x4001db5	       866	pull.c	FUNCTION_34	IF_5	CALL_11
0x4001db5	          0x4889c7	                            mov rdi, rax	       866	pull.c	FUNCTION_34	IF_5	CALL_11
0x4001db8	      0xe800000000	                          call 0x4001dbd	       866	pull.c	FUNCTION_34	IF_5	CALL_11
0x4001dbd	            0x85c0	                           test eax, eax	       866	pull.c	FUNCTION_34	IF_5	CALL_11
0x4001dbf	            0x7405	                            je 0x4001dc6	       866	pull.c	FUNCTION_34	IF_5	CALL_11
0x4001dc1	      0xe800000000	                          call 0x4001dc6	       867	pull.c	FUNCTION_34	CALL_12
0x4001dc6	        0x488d4590	                   lea rax, [rbp - 0x70]	       869	pull.c	FUNCTION_34	IF_6	CALL_13
0x4001dca	          0x4889c6	                            mov rsi, rax	       869	pull.c	FUNCTION_34	IF_6	CALL_13
0x4001dcd	      0xbf00000000	                              mov edi, 0	       869	pull.c	FUNCTION_34	IF_6	CALL_13
0x4001dd2	      0xe800000000	                          call 0x4001dd7	       869	pull.c	FUNCTION_34	IF_6	CALL_13
0x4001dd7	            0x85c0	                           test eax, eax	       869	pull.c	FUNCTION_34	IF_6	CALL_13
0x4001dd9	            0x740c	                            je 0x4001de7	       869	pull.c	FUNCTION_34	IF_6	CALL_13
0x4001ddb	        0x488d4590	                   lea rax, [rbp - 0x70]	       870	pull.c	FUNCTION_34	CALL_14
0x4001ddf	          0x4889c7	                            mov rdi, rax	       870	pull.c	FUNCTION_34	CALL_14
0x4001de2	      0xe8aee4ffff	                         call sym.oidclr	       870	pull.c	FUNCTION_34	CALL_14
0x4001de7	    0x8b0500000000	            mov eax, dword [0x04001ded] 	       872	pull.c	FUNCTION_34	IF_7
0x4001ded	            0x85c0	                           test eax, eax	       872	pull.c	FUNCTION_34	IF_7
0x4001def	            0x7522	                           jne 0x4001e13	       872	pull.c	FUNCTION_34	IF_7
0x4001df1	    0x8b0500000000	            mov eax, dword [0x04001df7] 	       872	pull.c	FUNCTION_34	IF_7
0x4001df7	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       872	pull.c	FUNCTION_34	IF_7
0x4001dfa	            0x7417	                            je 0x4001e13	       872	pull.c	FUNCTION_34	IF_7
0x4001dfc	      0xbf00000000	                              mov edi, 0	       873	pull.c	FUNCTION_34	CALL_16
0x4001e01	      0xe89ce3ffff	                               call sym.	       873	pull.c	FUNCTION_34	CALL_16
0x4001e06	          0x4889c7	                            mov rdi, rax	       873	pull.c	FUNCTION_34	CALL_16
0x4001e09	      0xb800000000	                              mov eax, 0	       873	pull.c	FUNCTION_34	CALL_16
0x4001e0e	      0xe800000000	                          call 0x4001e13	       873	pull.c	FUNCTION_34	CALL_16
0x4001e13	    0x8b0500000000	            mov eax, dword [0x04001e19] 	       875	pull.c	FUNCTION_34
0x4001e19	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       875	pull.c	FUNCTION_34
0x4001e1f	    0x8b0500000000	            mov eax, dword [0x04001e25] 	       876	pull.c	FUNCTION_34	IF_8
0x4001e25	            0x85c0	                           test eax, eax	       876	pull.c	FUNCTION_34	IF_8
0x4001e27	     0xf84a6000000	                            je 0x4001ed3	       876	pull.c	FUNCTION_34	IF_8
0x4001e2d	    0x8b0500000000	            mov eax, dword [0x04001e33] 	       877	pull.c	FUNCTION_34	IF_8	IF_9
0x4001e33	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       877	pull.c	FUNCTION_34	IF_8	IF_9
0x4001e36	            0x740c	                            je 0x4001e44	       877	pull.c	FUNCTION_34	IF_8	IF_9
0x4001e38	    0x8b0500000000	            mov eax, dword [0x04001e3e] 	       878	pull.c	FUNCTION_34	IF_8	IF_9
0x4001e3e	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       878	pull.c	FUNCTION_34	IF_8	IF_9
0x4001e44	        0x488d4590	                   lea rax, [rbp - 0x70]	       880	pull.c	FUNCTION_34	IF_8	IF_10	CALL_17
0x4001e48	          0x4889c7	                            mov rdi, rax	       880	pull.c	FUNCTION_34	IF_8	IF_10	CALL_17
0x4001e4b	      0xe8cde3ffff	                    call sym.is_null_oid	       880	pull.c	FUNCTION_34	IF_8	IF_10	CALL_17
0x4001e50	            0x85c0	                           test eax, eax	       880	pull.c	FUNCTION_34	IF_8	IF_10	CALL_17
0x4001e52	            0x7425	                            je 0x4001e79	       880	pull.c	FUNCTION_34	IF_8	IF_10	CALL_17
0x4001e54	      0xbf00000000	                              mov edi, 0	       880	pull.c	FUNCTION_34	IF_8	IF_10	CALL_17
0x4001e59	      0xe800000000	                          call 0x4001e5e	       880	pull.c	FUNCTION_34	IF_8	IF_10	CALL_17
0x4001e5e	            0x85c0	                           test eax, eax	       880	pull.c	FUNCTION_34	IF_8	IF_10	CALL_17
0x4001e60	            0x7517	                           jne 0x4001e79	       880	pull.c	FUNCTION_34	IF_8	IF_10	CALL_17
0x4001e62	      0xbf00000000	                              mov edi, 0	       881	pull.c	FUNCTION_34	IF_8	CALL_19
0x4001e67	      0xe836e3ffff	                               call sym.	       881	pull.c	FUNCTION_34	IF_8	CALL_19
0x4001e6c	          0x4889c7	                            mov rdi, rax	       881	pull.c	FUNCTION_34	IF_8	CALL_19
0x4001e6f	      0xb800000000	                              mov eax, 0	       881	pull.c	FUNCTION_34	IF_8	CALL_19
0x4001e74	      0xe800000000	                          call 0x4001e79	       881	pull.c	FUNCTION_34	IF_8	CALL_19
0x4001e79	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	       883	pull.c	FUNCTION_34	IF_8	IF_11
0x4001e80	            0x7521	                           jne 0x4001ea3	       883	pull.c	FUNCTION_34	IF_8	IF_11
0x4001e82	      0xbf00000000	                              mov edi, 0	       884	pull.c	FUNCTION_34	IF_8	IF_11	CALL_20
0x4001e87	      0xe816e3ffff	                               call sym.	       884	pull.c	FUNCTION_34	IF_8	IF_11	CALL_20
0x4001e8c	      0xb900000000	                              mov ecx, 0	       884	pull.c	FUNCTION_34	IF_8	IF_11	CALL_20
0x4001e91	      0xba01000000	                              mov edx, 1	       884	pull.c	FUNCTION_34	IF_8	IF_11	CALL_20
0x4001e96	          0x4889c6	                            mov rsi, rax	       884	pull.c	FUNCTION_34	IF_8	IF_11	CALL_20
0x4001e99	      0xbf00000000	                              mov edi, 0	       884	pull.c	FUNCTION_34	IF_8	IF_11	CALL_20
0x4001e9e	      0xe800000000	                          call 0x4001ea3	       884	pull.c	FUNCTION_34	IF_8	IF_11	CALL_20
0x4001ea3	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       887	pull.c	FUNCTION_34	IF_8	IF_12	CALL_22
0x4001eaa	          0x488b10	                    mov rdx, qword [rax]	       887	pull.c	FUNCTION_34	IF_8	IF_12	CALL_22
0x4001ead	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       887	pull.c	FUNCTION_34	IF_8	IF_12	CALL_22
0x4001eb4	        0x488d45d0	                   lea rax, [rbp - 0x30]	       887	pull.c	FUNCTION_34	IF_8	IF_12	CALL_22
0x4001eb8	          0x4889ce	                            mov rsi, rcx	       887	pull.c	FUNCTION_34	IF_8	IF_12	CALL_22
0x4001ebb	          0x4889c7	                            mov rdi, rax	       887	pull.c	FUNCTION_34	IF_8	IF_12	CALL_22
0x4001ebe	      0xe848f8ffff	          call sym.get_rebase_fork_point	       887	pull.c	FUNCTION_34	IF_8	IF_12	CALL_22
0x4001ec3	            0x85c0	                           test eax, eax	       887	pull.c	FUNCTION_34	IF_8	IF_12	CALL_22
0x4001ec5	            0x740c	                            je 0x4001ed3	       887	pull.c	FUNCTION_34	IF_8	IF_12	CALL_22
0x4001ec7	        0x488d45d0	                   lea rax, [rbp - 0x30]	       888	pull.c	FUNCTION_34	IF_8	CALL_23
0x4001ecb	          0x4889c7	                            mov rdi, rax	       888	pull.c	FUNCTION_34	IF_8	CALL_23
0x4001ece	      0xe8c2e3ffff	                         call sym.oidclr	       888	pull.c	FUNCTION_34	IF_8	CALL_23
0x4001ed3	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       891	pull.c	FUNCTION_34	IF_13	CALL_24
0x4001eda	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       891	pull.c	FUNCTION_34	IF_13	CALL_24
0x4001ee1	          0x4889d6	                            mov rsi, rdx	       891	pull.c	FUNCTION_34	IF_13	CALL_24
0x4001ee4	          0x4889c7	                            mov rdi, rax	       891	pull.c	FUNCTION_34	IF_13	CALL_24
0x4001ee7	      0xe88ceeffff	                      call sym.run_fetch	       891	pull.c	FUNCTION_34	IF_13	CALL_24
0x4001eec	            0x85c0	                           test eax, eax	       891	pull.c	FUNCTION_34	IF_13	CALL_24
0x4001eee	            0x740a	                            je 0x4001efa	       891	pull.c	FUNCTION_34	IF_13	CALL_24
0x4001ef0	      0xb801000000	                              mov eax, 1	       892	pull.c	FUNCTION_34	IF_13
0x4001ef5	      0xe903030000	                           jmp 0x40021fd	       892	pull.c	FUNCTION_34	IF_13
0x4001efa	    0x8b0500000000	            mov eax, dword [0x04001f00] 	       894	pull.c	FUNCTION_34	IF_14
0x4001f00	            0x85c0	                           test eax, eax	       894	pull.c	FUNCTION_34	IF_14
0x4001f02	            0x740a	                            je 0x4001f0e	       894	pull.c	FUNCTION_34	IF_14
0x4001f04	      0xb800000000	                              mov eax, 0	       895	pull.c	FUNCTION_34	IF_14
0x4001f09	      0xe9ef020000	                           jmp 0x40021fd	       895	pull.c	FUNCTION_34	IF_14
0x4001f0e	        0x488d45b0	                   lea rax, [rbp - 0x50]	       897	pull.c	FUNCTION_34	IF_15	CALL_25
0x4001f12	          0x4889c6	                            mov rsi, rax	       897	pull.c	FUNCTION_34	IF_15	CALL_25
0x4001f15	      0xbf00000000	                              mov edi, 0	       897	pull.c	FUNCTION_34	IF_15	CALL_25
0x4001f1a	      0xe800000000	                          call 0x4001f1f	       897	pull.c	FUNCTION_34	IF_15	CALL_25
0x4001f1f	            0x85c0	                           test eax, eax	       897	pull.c	FUNCTION_34	IF_15	CALL_25
0x4001f21	            0x740c	                            je 0x4001f2f	       897	pull.c	FUNCTION_34	IF_15	CALL_25
0x4001f23	        0x488d45b0	                   lea rax, [rbp - 0x50]	       898	pull.c	FUNCTION_34	CALL_26
0x4001f27	          0x4889c7	                            mov rdi, rax	       898	pull.c	FUNCTION_34	CALL_26
0x4001f2a	      0xe866e3ffff	                         call sym.oidclr	       898	pull.c	FUNCTION_34	CALL_26
0x4001f2f	        0x488d4590	                   lea rax, [rbp - 0x70]	       900	pull.c	FUNCTION_34	IF_16	CALL_28
0x4001f33	          0x4889c7	                            mov rdi, rax	       900	pull.c	FUNCTION_34	IF_16	CALL_28
0x4001f36	      0xe8e2e2ffff	                    call sym.is_null_oid	       900	pull.c	FUNCTION_34	IF_16	CALL_28
0x4001f3b	            0x85c0	                           test eax, eax	       900	pull.c	FUNCTION_34	IF_16	CALL_28
0x4001f3d	     0xf8599000000	                           jne 0x4001fdc	       900	pull.c	FUNCTION_34	IF_16	CALL_28
0x4001f43	        0x488d45b0	                   lea rax, [rbp - 0x50]	       900	pull.c	FUNCTION_34	IF_16	CALL_28
0x4001f47	          0x4889c7	                            mov rdi, rax	       900	pull.c	FUNCTION_34	IF_16	CALL_28
0x4001f4a	      0xe8cee2ffff	                    call sym.is_null_oid	       900	pull.c	FUNCTION_34	IF_16	CALL_28
0x4001f4f	            0x85c0	                           test eax, eax	       900	pull.c	FUNCTION_34	IF_16	CALL_28
0x4001f51	     0xf8585000000	                           jne 0x4001fdc	       900	pull.c	FUNCTION_34	IF_16	CALL_28
0x4001f57	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       901	pull.c	FUNCTION_34	IF_16	CALL_29
0x4001f5b	        0x488d4590	                   lea rax, [rbp - 0x70]	       901	pull.c	FUNCTION_34	IF_16	CALL_29
0x4001f5f	          0x4889d6	                            mov rsi, rdx	       901	pull.c	FUNCTION_34	IF_16	CALL_29
0x4001f62	          0x4889c7	                            mov rdi, rax	       901	pull.c	FUNCTION_34	IF_16	CALL_29
0x4001f65	      0xe88ee2ffff	                         call sym.oidcmp	       901	pull.c	FUNCTION_34	IF_16	CALL_29
0x4001f6a	            0x85c0	                           test eax, eax	       900	pull.c	FUNCTION_34	IF_16	CALL_28
0x4001f6c	            0x746e	                            je 0x4001fdc	       900	pull.c	FUNCTION_34	IF_16	CALL_28
0x4001f6e	        0x488d4590	                   lea rax, [rbp - 0x70]	       910	pull.c	FUNCTION_34	IF_16	CALL_31
0x4001f72	          0x4889c7	                            mov rdi, rax	       910	pull.c	FUNCTION_34	IF_16	CALL_31
0x4001f75	      0xe800000000	                          call 0x4001f7a	       910	pull.c	FUNCTION_34	IF_16	CALL_31
0x4001f7a	          0x4889c3	                            mov rbx, rax	       910	pull.c	FUNCTION_34	IF_16	CALL_31
0x4001f7d	      0xbf00000000	                              mov edi, 0	       910	pull.c	FUNCTION_34	IF_16	CALL_31
0x4001f82	      0xe81be2ffff	                               call sym.	       910	pull.c	FUNCTION_34	IF_16	CALL_31
0x4001f87	          0x4889de	                            mov rsi, rbx	       910	pull.c	FUNCTION_34	IF_16	CALL_31
0x4001f8a	          0x4889c7	                            mov rdi, rax	       910	pull.c	FUNCTION_34	IF_16	CALL_31
0x4001f8d	      0xb800000000	                              mov eax, 0	       910	pull.c	FUNCTION_34	IF_16	CALL_31
0x4001f92	      0xe800000000	                          call 0x4001f97	       910	pull.c	FUNCTION_34	IF_16	CALL_31
0x4001f97	        0x488d4db0	                   lea rcx, [rbp - 0x50]	       914	pull.c	FUNCTION_34	IF_16	IF_17	CALL_33
0x4001f9b	        0x488d4590	                   lea rax, [rbp - 0x70]	       914	pull.c	FUNCTION_34	IF_16	IF_17	CALL_33
0x4001f9f	      0xba00000000	                              mov edx, 0	       914	pull.c	FUNCTION_34	IF_16	IF_17	CALL_33
0x4001fa4	          0x4889ce	                            mov rsi, rcx	       914	pull.c	FUNCTION_34	IF_16	IF_17	CALL_33
0x4001fa7	          0x4889c7	                            mov rdi, rax	       914	pull.c	FUNCTION_34	IF_16	IF_17	CALL_33
0x4001faa	      0xe800000000	                          call 0x4001faf	       914	pull.c	FUNCTION_34	IF_16	IF_17	CALL_33
0x4001faf	            0x85c0	                           test eax, eax	       914	pull.c	FUNCTION_34	IF_16	IF_17	CALL_33
0x4001fb1	            0x7429	                            je 0x4001fdc	       914	pull.c	FUNCTION_34	IF_16	IF_17	CALL_33
0x4001fb3	        0x488d4590	                   lea rax, [rbp - 0x70]	       915	pull.c	FUNCTION_34	IF_16	IF_17	CALL_35
0x4001fb7	          0x4889c7	                            mov rdi, rax	       915	pull.c	FUNCTION_34	IF_16	IF_17	CALL_35
0x4001fba	      0xe800000000	                          call 0x4001fbf	       915	pull.c	FUNCTION_34	IF_16	IF_17	CALL_35
0x4001fbf	          0x4889c3	                            mov rbx, rax	       915	pull.c	FUNCTION_34	IF_16	IF_17	CALL_35
0x4001fc2	      0xbf00000000	                              mov edi, 0	       915	pull.c	FUNCTION_34	IF_16	IF_17	CALL_35
0x4001fc7	      0xe8d6e1ffff	                               call sym.	       915	pull.c	FUNCTION_34	IF_16	IF_17	CALL_35
0x4001fcc	          0x4889de	                            mov rsi, rbx	       915	pull.c	FUNCTION_34	IF_16	IF_17	CALL_35
0x4001fcf	          0x4889c7	                            mov rdi, rax	       915	pull.c	FUNCTION_34	IF_16	IF_17	CALL_35
0x4001fd2	      0xb800000000	                              mov eax, 0	       915	pull.c	FUNCTION_34	IF_16	IF_17	CALL_35
0x4001fd7	      0xe800000000	                          call 0x4001fdc	       915	pull.c	FUNCTION_34	IF_16	IF_17	CALL_35
0x4001fdc	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       923	pull.c	FUNCTION_34	CALL_37
0x4001fe3	          0x4889c7	                            mov rdi, rax	       923	pull.c	FUNCTION_34	CALL_37
0x4001fe6	      0xe806e8ffff	                call sym.get_merge_heads	       923	pull.c	FUNCTION_34	CALL_37
0x4001feb	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       925	pull.c	FUNCTION_34	IF_18
0x4001ff1	            0x85c0	                           test eax, eax	       925	pull.c	FUNCTION_34	IF_18
0x4001ff3	            0x7519	                           jne 0x400200e	       925	pull.c	FUNCTION_34	IF_18
0x4001ff5	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       926	pull.c	FUNCTION_34	CALL_38
0x4001ffc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       926	pull.c	FUNCTION_34	CALL_38
0x4002003	          0x4889d6	                            mov rsi, rdx	       926	pull.c	FUNCTION_34	CALL_38
0x4002006	          0x4889c7	                            mov rdi, rax	       926	pull.c	FUNCTION_34	CALL_38
0x4002009	      0xe801e9ffff	        call sym.die_no_merge_candidates	       926	pull.c	FUNCTION_34	CALL_38
0x400200e	        0x488d4590	                   lea rax, [rbp - 0x70]	       928	pull.c	FUNCTION_34	IF_19	CALL_39
0x4002012	          0x4889c7	                            mov rdi, rax	       928	pull.c	FUNCTION_34	IF_19	CALL_39
0x4002015	      0xe803e2ffff	                    call sym.is_null_oid	       928	pull.c	FUNCTION_34	IF_19	CALL_39
0x400201a	            0x85c0	                           test eax, eax	       928	pull.c	FUNCTION_34	IF_19	CALL_39
0x400201c	            0x743d	                            je 0x400205b	       928	pull.c	FUNCTION_34	IF_19	CALL_39
0x400201e	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       929	pull.c	FUNCTION_34	IF_19	IF_20
0x4002024	          0x83f801	                              cmp eax, 1	       929	pull.c	FUNCTION_34	IF_19	IF_20
0x4002027	            0x7e17	                           jle 0x4002040	       929	pull.c	FUNCTION_34	IF_19	IF_20
0x4002029	      0xbf00000000	                              mov edi, 0	       930	pull.c	FUNCTION_34	IF_19	CALL_41
0x400202e	      0xe86fe1ffff	                               call sym.	       930	pull.c	FUNCTION_34	IF_19	CALL_41
0x4002033	          0x4889c7	                            mov rdi, rax	       930	pull.c	FUNCTION_34	IF_19	CALL_41
0x4002036	      0xb800000000	                              mov eax, 0	       930	pull.c	FUNCTION_34	IF_19	CALL_41
0x400203b	      0xe800000000	                          call 0x4002040	       930	pull.c	FUNCTION_34	IF_19	CALL_41
0x4002040	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       931	pull.c	FUNCTION_34	IF_19	CALL_42
0x4002047	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       931	pull.c	FUNCTION_34	IF_19	CALL_42
0x400204b	          0x4889d6	                            mov rsi, rdx	       931	pull.c	FUNCTION_34	IF_19	CALL_42
0x400204e	          0x4889c7	                            mov rdi, rax	       931	pull.c	FUNCTION_34	IF_19	CALL_42
0x4002051	      0xe87cf0ffff	                 call sym.pull_into_void	       931	pull.c	FUNCTION_34	IF_19	CALL_42
0x4002056	      0xe9a2010000	                           jmp 0x40021fd	       931	pull.c	FUNCTION_34	IF_19	CALL_42
0x400205b	    0x8b0500000000	            mov eax, dword [0x04002061] 	       933	pull.c	FUNCTION_34	IF_21
0x4002061	            0x85c0	                           test eax, eax	       933	pull.c	FUNCTION_34	IF_21
0x4002063	            0x7422	                            je 0x4002087	       933	pull.c	FUNCTION_34	IF_21
0x4002065	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       933	pull.c	FUNCTION_34	IF_21
0x400206b	          0x83f801	                              cmp eax, 1	       933	pull.c	FUNCTION_34	IF_21
0x400206e	            0x7e17	                           jle 0x4002087	       933	pull.c	FUNCTION_34	IF_21
0x4002070	      0xbf00000000	                              mov edi, 0	       934	pull.c	FUNCTION_34	CALL_44
0x4002075	      0xe828e1ffff	                               call sym.	       934	pull.c	FUNCTION_34	CALL_44
0x400207a	          0x4889c7	                            mov rdi, rax	       934	pull.c	FUNCTION_34	CALL_44
0x400207d	      0xb800000000	                              mov eax, 0	       934	pull.c	FUNCTION_34	CALL_44
0x4002082	      0xe800000000	                          call 0x4002087	       934	pull.c	FUNCTION_34	CALL_44
0x4002087	    0x8b0500000000	            mov eax, dword [0x0400208d] 	       936	pull.c	FUNCTION_34	IF_22
0x400208d	            0x85c0	                           test eax, eax	       936	pull.c	FUNCTION_34	IF_22
0x400208f	     0xf842d010000	                            je 0x40021c2	       936	pull.c	FUNCTION_34	IF_22
0x4002095	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	       937	pull.c	FUNCTION_34	IF_22
0x400209f	    0x8b0500000000	            mov eax, dword [0x040020a5] 	       938	pull.c	FUNCTION_34	IF_22	IF_23
0x40020a5	          0x83f802	                              cmp eax, 2	       938	pull.c	FUNCTION_34	IF_22	IF_23
0x40020a8	            0x740b	                            je 0x40020b5	       938	pull.c	FUNCTION_34	IF_22	IF_23
0x40020aa	    0x8b0500000000	            mov eax, dword [0x040020b0] 	       939	pull.c	FUNCTION_34	IF_22	IF_23
0x40020b0	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       938	pull.c	FUNCTION_34	IF_22	IF_23
0x40020b3	            0x752e	                           jne 0x40020e3	       938	pull.c	FUNCTION_34	IF_22	IF_23
0x40020b5	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       940	pull.c	FUNCTION_34	IF_22	IF_23	CALL_45
0x40020b9	        0x488d45d0	                   lea rax, [rbp - 0x30]	       940	pull.c	FUNCTION_34	IF_22	IF_23	CALL_45
0x40020bd	          0x4889d6	                            mov rsi, rdx	       940	pull.c	FUNCTION_34	IF_22	IF_23	CALL_45
0x40020c0	          0x4889c7	                            mov rdi, rax	       940	pull.c	FUNCTION_34	IF_22	IF_23	CALL_45
0x40020c3	      0xe800000000	                          call 0x40020c8	       940	pull.c	FUNCTION_34	IF_22	IF_23	CALL_45
0x40020c8	            0x85c0	                           test eax, eax	       939	pull.c	FUNCTION_34	IF_22	IF_23
0x40020ca	            0x7417	                            je 0x40020e3	       939	pull.c	FUNCTION_34	IF_22	IF_23
0x40020cc	      0xbf00000000	                              mov edi, 0	       941	pull.c	FUNCTION_34	IF_22	CALL_47
0x40020d1	      0xe8cce0ffff	                               call sym.	       941	pull.c	FUNCTION_34	IF_22	CALL_47
0x40020d6	          0x4889c7	                            mov rdi, rax	       941	pull.c	FUNCTION_34	IF_22	CALL_47
0x40020d9	      0xb800000000	                              mov eax, 0	       941	pull.c	FUNCTION_34	IF_22	CALL_47
0x40020de	      0xe800000000	                          call 0x40020e3	       941	pull.c	FUNCTION_34	IF_22	CALL_47
0x40020e3	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	       942	pull.c	FUNCTION_34	IF_22	IF_24
0x40020ea	     0xf8580000000	                           jne 0x4002170	       942	pull.c	FUNCTION_34	IF_22	IF_24
0x40020f0	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	       943	pull.c	FUNCTION_34	IF_22	IF_24
0x40020fb	        0x488d4590	                   lea rax, [rbp - 0x70]	       946	pull.c	FUNCTION_34	IF_22	IF_24	CALL_48
0x40020ff	          0x4889c7	                            mov rdi, rax	       946	pull.c	FUNCTION_34	IF_22	IF_24	CALL_48
0x4002102	      0xe800000000	                          call 0x4002107	       946	pull.c	FUNCTION_34	IF_22	IF_24	CALL_48
0x4002107	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       946	pull.c	FUNCTION_34	IF_22	IF_24	CALL_48
0x400210e	    0x488d9558ffff	                   lea rdx, [rbp - 0xa8]	       947	pull.c	FUNCTION_34	IF_22	IF_24	CALL_49
0x4002115	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       947	pull.c	FUNCTION_34	IF_22	IF_24	CALL_49
0x400211c	          0x4889d6	                            mov rsi, rdx	       947	pull.c	FUNCTION_34	IF_22	IF_24	CALL_49
0x400211f	          0x4889c7	                            mov rdi, rax	       947	pull.c	FUNCTION_34	IF_22	IF_24	CALL_49
0x4002122	      0xe800000000	                          call 0x4002127	       947	pull.c	FUNCTION_34	IF_22	IF_24	CALL_49
0x4002127	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       948	pull.c	FUNCTION_34	IF_22	IF_24	CALL_50
0x400212e	          0x4889c7	                            mov rdi, rax	       948	pull.c	FUNCTION_34	IF_22	IF_24	CALL_50
0x4002131	      0xe800000000	                          call 0x4002136	       948	pull.c	FUNCTION_34	IF_22	IF_24	CALL_50
0x4002136	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       948	pull.c	FUNCTION_34	IF_22	IF_24	CALL_50
0x400213d	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       949	pull.c	FUNCTION_34	IF_22	IF_24	IF_25	CALL_51
0x4002144	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       949	pull.c	FUNCTION_34	IF_22	IF_24	IF_25	CALL_51
0x400214b	          0x4889d6	                            mov rsi, rdx	       949	pull.c	FUNCTION_34	IF_22	IF_24	IF_25	CALL_51
0x400214e	          0x4889c7	                            mov rdi, rax	       949	pull.c	FUNCTION_34	IF_22	IF_24	IF_25	CALL_51
0x4002151	      0xe800000000	                          call 0x4002156	       949	pull.c	FUNCTION_34	IF_22	IF_24	IF_25	CALL_51
0x4002156	            0x85c0	                           test eax, eax	       949	pull.c	FUNCTION_34	IF_22	IF_24	IF_25	CALL_51
0x4002158	            0x7416	                            je 0x4002170	       949	pull.c	FUNCTION_34	IF_22	IF_24	IF_25	CALL_51
0x400215a	    0x48c705000000	               mov qword [0x04002165], 0	       951	pull.c	FUNCTION_34	IF_22	IF_24	IF_25
0x4002165	      0xe843f1ffff	                      call sym.run_merge	       952	pull.c	FUNCTION_34	IF_22	IF_24	IF_25	CALL_52
0x400216a	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	       952	pull.c	FUNCTION_34	IF_22	IF_24	IF_25	CALL_52
0x4002170	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	       955	pull.c	FUNCTION_34	IF_22	CALL_53
0x4002177	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       955	pull.c	FUNCTION_34	IF_22	CALL_53
0x400217b	        0x488d45b0	                   lea rax, [rbp - 0x50]	       955	pull.c	FUNCTION_34	IF_22	CALL_53
0x400217f	          0x4889ce	                            mov rsi, rcx	       955	pull.c	FUNCTION_34	IF_22	CALL_53
0x4002182	          0x4889c7	                            mov rdi, rax	       955	pull.c	FUNCTION_34	IF_22	CALL_53
0x4002185	      0xe861f8ffff	                     call sym.run_rebase	       955	pull.c	FUNCTION_34	IF_22	CALL_53
0x400218a	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	       955	pull.c	FUNCTION_34	IF_22	CALL_53
0x4002190	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	       957	pull.c	FUNCTION_34	IF_22	IF_26
0x4002197	            0x7521	                           jne 0x40021ba	       957	pull.c	FUNCTION_34	IF_22	IF_26
0x4002199	    0x8b0500000000	            mov eax, dword [0x0400219f] 	       957	pull.c	FUNCTION_34	IF_22	IF_26
0x400219f	          0x83f802	                              cmp eax, 2	       957	pull.c	FUNCTION_34	IF_22	IF_26
0x40021a2	            0x740b	                            je 0x40021af	       957	pull.c	FUNCTION_34	IF_22	IF_26
0x40021a4	    0x8b0500000000	            mov eax, dword [0x040021aa] 	       958	pull.c	FUNCTION_34	IF_22	IF_26
0x40021aa	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       957	pull.c	FUNCTION_34	IF_22	IF_26
0x40021ad	            0x750b	                           jne 0x40021ba	       957	pull.c	FUNCTION_34	IF_22	IF_26
0x40021af	      0xe897efffff	              call sym.rebase_submodules	       959	pull.c	FUNCTION_34	IF_22	CALL_54
0x40021b4	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	       959	pull.c	FUNCTION_34	IF_22	CALL_54
0x40021ba	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	       961	pull.c	FUNCTION_34	IF_22
0x40021c0	            0xeb3b	                           jmp 0x40021fd	       961	pull.c	FUNCTION_34	IF_22
0x40021c2	      0xe8e6f0ffff	                      call sym.run_merge	       963	pull.c	FUNCTION_34	ELSE_1	CALL_55
0x40021c7	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	       963	pull.c	FUNCTION_34	ELSE_1	CALL_55
0x40021cd	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	       964	pull.c	FUNCTION_34	ELSE_1	IF_27
0x40021d4	            0x7521	                           jne 0x40021f7	       964	pull.c	FUNCTION_34	ELSE_1	IF_27
0x40021d6	    0x8b0500000000	            mov eax, dword [0x040021dc] 	       964	pull.c	FUNCTION_34	ELSE_1	IF_27
0x40021dc	          0x83f802	                              cmp eax, 2	       964	pull.c	FUNCTION_34	ELSE_1	IF_27
0x40021df	            0x740b	                            je 0x40021ec	       964	pull.c	FUNCTION_34	ELSE_1	IF_27
0x40021e1	    0x8b0500000000	            mov eax, dword [0x040021e7] 	       965	pull.c	FUNCTION_34	ELSE_1	IF_27
0x40021e7	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       964	pull.c	FUNCTION_34	ELSE_1	IF_27
0x40021ea	            0x750b	                           jne 0x40021f7	       964	pull.c	FUNCTION_34	ELSE_1	IF_27
0x40021ec	      0xe80bf0ffff	              call sym.update_submodules	       966	pull.c	FUNCTION_34	ELSE_1	CALL_56
0x40021f1	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	       966	pull.c	FUNCTION_34	ELSE_1	CALL_56
0x40021f7	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       967	pull.c	FUNCTION_34	ELSE_1
0x40021fd	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       969	pull.c	FUNCTION_34
0x4002201	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       969	pull.c	FUNCTION_34
0x400220a	            0x7405	                            je 0x4002211	       969	pull.c	FUNCTION_34
0x400220c	      0xe800000000	                          call 0x4002211	       969	pull.c	FUNCTION_34
0x4002211	    0x4881c4e80000	                           add rsp, 0xe8	       969	pull.c	FUNCTION_34
0x4002218	              0x5b	                                 pop rbx	       969	pull.c	FUNCTION_34
0x4002219	              0x5d	                                 pop rbp	       969	pull.c	FUNCTION_34
0x400221a	              0xc3	                                     ret	       969	pull.c	FUNCTION_34
get_merge_heads	functions,0:CALL,8:ELSE,0:IF,2:SWITCH,0:WHILE,1:DO,0:FOR,0	59
0x40007f1	              0x55	                                push rbp	       357	pull.c	FUNCTION_20
0x40007f2	          0x4889e5	                            mov rbp, rsp	       357	pull.c	FUNCTION_20
0x40007f5	        0x4883ec60	                           sub rsp, 0x60	       357	pull.c	FUNCTION_20
0x40007f9	        0x48897da8	             mov qword [rbp - 0x58], rdi	       357	pull.c	FUNCTION_20
0x40007fd	    0x64488b042528	                mov rax, qword fs:[0x28]	       357	pull.c	FUNCTION_20
0x4000806	        0x488945f8	                mov qword [rbp - 8], rax	       357	pull.c	FUNCTION_20
0x400080a	            0x31c0	                            xor eax, eax	       357	pull.c	FUNCTION_20
0x400080c	      0xe800000000	                          call 0x4000811	       358	pull.c	FUNCTION_20	CALL_1
0x4000811	        0x488945b0	             mov qword [rbp - 0x50], rax	       358	pull.c	FUNCTION_20	CALL_1
0x4000815	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       360	pull.c	FUNCTION_20
0x400081d	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       360	pull.c	FUNCTION_20
0x4000825	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       360	pull.c	FUNCTION_20
0x400082d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       363	pull.c	FUNCTION_20	CALL_2
0x4000831	      0xbe00000000	                              mov esi, 0	       363	pull.c	FUNCTION_20	CALL_2
0x4000836	          0x4889c7	                            mov rdi, rax	       363	pull.c	FUNCTION_20	CALL_2
0x4000839	      0xe800000000	                          call 0x400083e	       363	pull.c	FUNCTION_20	CALL_2
0x400083e	        0x488945b8	             mov qword [rbp - 0x48], rax	       363	pull.c	FUNCTION_20	CALL_2
0x4000842	            0xeb47	                           jmp 0x400088b	       364	pull.c	FUNCTION_20	WHILE_1	CALL_3
0x4000844	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       365	pull.c	FUNCTION_20	WHILE_1	IF_1	CALL_4
0x4000848	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       365	pull.c	FUNCTION_20	WHILE_1	IF_1	CALL_4
0x400084c	          0x4889d6	                            mov rsi, rdx	       365	pull.c	FUNCTION_20	WHILE_1	IF_1	CALL_4
0x400084f	          0x4889c7	                            mov rdi, rax	       365	pull.c	FUNCTION_20	WHILE_1	IF_1	CALL_4
0x4000852	      0xe800000000	                          call 0x4000857	       365	pull.c	FUNCTION_20	WHILE_1	IF_1	CALL_4
0x4000857	            0x85c0	                           test eax, eax	       365	pull.c	FUNCTION_20	WHILE_1	IF_1	CALL_4
0x4000859	            0x7402	                            je 0x400085d	       365	pull.c	FUNCTION_20	WHILE_1	IF_1	CALL_4
0x400085b	            0xeb2e	                           jmp 0x400088b	       366	pull.c	FUNCTION_20	WHILE_1	IF_1
0x400085d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       367	pull.c	FUNCTION_20	WHILE_1	IF_2	CALL_5
0x4000861	        0x4883c028	                           add rax, 0x28	       367	pull.c	FUNCTION_20	WHILE_1	IF_2	CALL_5
0x4000865	      0xbe00000000	                              mov esi, 0	       367	pull.c	FUNCTION_20	WHILE_1	IF_2	CALL_5
0x400086a	          0x4889c7	                            mov rdi, rax	       367	pull.c	FUNCTION_20	WHILE_1	IF_2	CALL_5
0x400086d	      0xe800000000	                          call 0x4000872	       367	pull.c	FUNCTION_20	WHILE_1	IF_2	CALL_5
0x4000872	            0x85c0	                           test eax, eax	       367	pull.c	FUNCTION_20	WHILE_1	IF_2	CALL_5
0x4000874	            0x7402	                            je 0x4000878	       367	pull.c	FUNCTION_20	WHILE_1	IF_2	CALL_5
0x4000876	            0xeb13	                           jmp 0x400088b	       368	pull.c	FUNCTION_20	WHILE_1	IF_2
0x4000878	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       369	pull.c	FUNCTION_20	WHILE_1	CALL_6
0x400087c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       369	pull.c	FUNCTION_20	WHILE_1	CALL_6
0x4000880	          0x4889d6	                            mov rsi, rdx	       369	pull.c	FUNCTION_20	WHILE_1	CALL_6
0x4000883	          0x4889c7	                            mov rdi, rax	       369	pull.c	FUNCTION_20	WHILE_1	CALL_6
0x4000886	      0xe800000000	                          call 0x400088b	       369	pull.c	FUNCTION_20	WHILE_1	CALL_6
0x400088b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       364	pull.c	FUNCTION_20	WHILE_1	CALL_3
0x400088f	        0x488d45c0	                   lea rax, [rbp - 0x40]	       364	pull.c	FUNCTION_20	WHILE_1	CALL_3
0x4000893	          0x4889d6	                            mov rsi, rdx	       364	pull.c	FUNCTION_20	WHILE_1	CALL_3
0x4000896	          0x4889c7	                            mov rdi, rax	       364	pull.c	FUNCTION_20	WHILE_1	CALL_3
0x4000899	      0xe800000000	                          call 0x400089e	       364	pull.c	FUNCTION_20	WHILE_1	CALL_3
0x400089e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       364	pull.c	FUNCTION_20	WHILE_1	CALL_3
0x40008a1	            0x75a1	                           jne 0x4000844	       364	pull.c	FUNCTION_20	WHILE_1	CALL_3
0x40008a3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       371	pull.c	FUNCTION_20	CALL_7
0x40008a7	          0x4889c7	                            mov rdi, rax	       371	pull.c	FUNCTION_20	CALL_7
0x40008aa	      0xe800000000	                          call 0x40008af	       371	pull.c	FUNCTION_20	CALL_7
0x40008af	        0x488d45c0	                   lea rax, [rbp - 0x40]	       372	pull.c	FUNCTION_20	CALL_8
0x40008b3	          0x4889c7	                            mov rdi, rax	       372	pull.c	FUNCTION_20	CALL_8
0x40008b6	      0xe800000000	                          call 0x40008bb	       372	pull.c	FUNCTION_20	CALL_8
0x40008bb	              0x90	                                     nop	       373	pull.c	FUNCTION_20
0x40008bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       373	pull.c	FUNCTION_20
0x40008c0	    0x644833042528	                xor rax, qword fs:[0x28]	       373	pull.c	FUNCTION_20
0x40008c9	            0x7405	                            je 0x40008d0	       373	pull.c	FUNCTION_20
0x40008cb	      0xe800000000	                          call 0x40008d0	       373	pull.c	FUNCTION_20
0x40008d0	              0xc9	                                   leave	       373	pull.c	FUNCTION_20
0x40008d1	              0xc3	                                     ret	       373	pull.c	FUNCTION_20
parse_repo_refspecs	functions,0:CALL,0:ELSE,1:IF,1:SWITCH,0:WHILE,0:DO,0:FOR,0	24
0x4000d2a	              0x55	                                push rbp	       472	pull.c	FUNCTION_23
0x4000d2b	          0x4889e5	                            mov rbp, rsp	       472	pull.c	FUNCTION_23
0x4000d2e	          0x897dfc	                mov dword [rbp - 4], edi	       472	pull.c	FUNCTION_23
0x4000d31	        0x488975f0	             mov qword [rbp - 0x10], rsi	       472	pull.c	FUNCTION_23
0x4000d35	        0x488955e8	             mov qword [rbp - 0x18], rdx	       472	pull.c	FUNCTION_23
0x4000d39	        0x48894de0	             mov qword [rbp - 0x20], rcx	       472	pull.c	FUNCTION_23
0x4000d3d	        0x837dfc00	                  cmp dword [rbp - 4], 0	       473	pull.c	FUNCTION_23	IF_1
0x4000d41	            0x7e1c	                           jle 0x4000d5f	       473	pull.c	FUNCTION_23	IF_1
0x4000d43	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       474	pull.c	FUNCTION_23	IF_1
0x4000d47	        0x488d5008	                      lea rdx, [rax + 8]	       474	pull.c	FUNCTION_23	IF_1
0x4000d4b	        0x488955f0	             mov qword [rbp - 0x10], rdx	       474	pull.c	FUNCTION_23	IF_1
0x4000d4f	          0x488b10	                    mov rdx, qword [rax]	       474	pull.c	FUNCTION_23	IF_1
0x4000d52	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       474	pull.c	FUNCTION_23	IF_1
0x4000d56	          0x488910	                    mov qword [rax], rdx	       474	pull.c	FUNCTION_23	IF_1
0x4000d59	        0x836dfc01	                  sub dword [rbp - 4], 1	       475	pull.c	FUNCTION_23	IF_1
0x4000d5d	            0xeb0b	                           jmp 0x4000d6a	       475	pull.c	FUNCTION_23	IF_1
0x4000d5f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       477	pull.c	FUNCTION_23	ELSE_1
0x4000d63	    0x48c700000000	                      mov qword [rax], 0	       477	pull.c	FUNCTION_23	ELSE_1
0x4000d6a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       478	pull.c	FUNCTION_23	ELSE_1
0x4000d6e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       478	pull.c	FUNCTION_23	ELSE_1
0x4000d72	          0x488910	                    mov qword [rax], rdx	       478	pull.c	FUNCTION_23	ELSE_1
0x4000d75	              0x90	                                     nop	       479	pull.c	FUNCTION_23	ELSE_1
0x4000d76	              0x5d	                                 pop rbp	       479	pull.c	FUNCTION_23	ELSE_1
0x4000d77	              0xc3	                                     ret	       479	pull.c	FUNCTION_23	ELSE_1
strbuf_avail	functions,0:CALL,0:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0:FOR,0	18
0x40000c9	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_2
0x40000ca	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_2
0x40000cd	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_2
0x40000d1	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x40000d5	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_2
0x40000d8	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_2
0x40000db	            0x741b	                            je 0x40000f8	       141	strbuf.h	FUNCTION_2
0x40000dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x40000e1	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_2
0x40000e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x40000e8	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_2
0x40000ec	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_2
0x40000ef	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_2
0x40000f2	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_2
0x40000f6	            0xeb05	                           jmp 0x40000fd	       141	strbuf.h	FUNCTION_2
0x40000f8	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_2
0x40000fd	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_2
0x40000fe	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_2
capture_command	functions,0:CALL,1:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0:FOR,0	21
0x40002ba	              0x55	                                push rbp	       111	run-command.h	FUNCTION_89
0x40002bb	          0x4889e5	                            mov rbp, rsp	       111	run-command.h	FUNCTION_89
0x40002be	        0x4883ec20	                           sub rsp, 0x20	       111	run-command.h	FUNCTION_89
0x40002c2	        0x48897df8	                mov qword [rbp - 8], rdi	       111	run-command.h	FUNCTION_89
0x40002c6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       111	run-command.h	FUNCTION_89
0x40002ca	        0x488955e8	             mov qword [rbp - 0x18], rdx	       111	run-command.h	FUNCTION_89
0x40002ce	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       112	run-command.h	FUNCTION_89	CALL_1
0x40002d2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       112	run-command.h	FUNCTION_89	CALL_1
0x40002d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	run-command.h	FUNCTION_89	CALL_1
0x40002da	        0x4883ec08	                              sub rsp, 8	       112	run-command.h	FUNCTION_89	CALL_1
0x40002de	            0x6a00	                                  push 0	       112	run-command.h	FUNCTION_89	CALL_1
0x40002e0	    0x41b900000000	                              mov r9d, 0	       112	run-command.h	FUNCTION_89	CALL_1
0x40002e6	          0x4989c8	                             mov r8, rcx	       112	run-command.h	FUNCTION_89	CALL_1
0x40002e9	          0x4889d1	                            mov rcx, rdx	       112	run-command.h	FUNCTION_89	CALL_1
0x40002ec	      0xba00000000	                              mov edx, 0	       112	run-command.h	FUNCTION_89	CALL_1
0x40002f1	      0xbe00000000	                              mov esi, 0	       112	run-command.h	FUNCTION_89	CALL_1
0x40002f6	          0x4889c7	                            mov rdi, rax	       112	run-command.h	FUNCTION_89	CALL_1
0x40002f9	      0xe800000000	                          call 0x40002fe	       112	run-command.h	FUNCTION_89	CALL_1
0x40002fe	        0x4883c410	                           add rsp, 0x10	       112	run-command.h	FUNCTION_89	CALL_1
0x4000302	              0xc9	                                   leave	       113	run-command.h	FUNCTION_89
0x4000303	              0xc3	                                     ret	       113	run-command.h	FUNCTION_89
_	functions,0:CALL,0:ELSE,0:IF,1:SWITCH,0:WHILE,0:DO,0:FOR,0	15
0x40001a2	              0x55	                                push rbp	        51	gettext.h	FUNCTION_92
0x40001a3	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_92
0x40001a6	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_92
0x40001aa	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_92
0x40001ae	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_92	IF_1
0x40001b2	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_92	IF_1
0x40001b5	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_92	IF_1
0x40001b7	            0x7507	                           jne 0x40001c0	        52	gettext.h	FUNCTION_92	IF_1
0x40001b9	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_92	IF_1
0x40001be	            0xeb0c	                           jmp 0x40001cc	        53	gettext.h	FUNCTION_92	IF_1
0x40001c0	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_92
0x40001c4	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_92
0x40001c7	      0xe800000000	                          call 0x40001cc	        54	gettext.h	FUNCTION_92
0x40001cc	              0xc9	                                   leave	        55	gettext.h	FUNCTION_92
0x40001cd	              0xc3	                                     ret	        55	gettext.h	FUNCTION_92
get_upstream_branch	functions,0:CALL,6:ELSE,0:IF,3:SWITCH,0:WHILE,0:DO,0:FOR,0	47
0x40014e6	              0x55	                                push rbp	       652	pull.c	FUNCTION_29
0x40014e7	          0x4889e5	                            mov rbp, rsp	       652	pull.c	FUNCTION_29
0x40014ea	        0x4883ec30	                           sub rsp, 0x30	       652	pull.c	FUNCTION_29
0x40014ee	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       652	pull.c	FUNCTION_29
0x40014f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       657	pull.c	FUNCTION_29	CALL_1
0x40014f6	          0x4889c7	                            mov rdi, rax	       657	pull.c	FUNCTION_29	CALL_1
0x40014f9	      0xe800000000	                          call 0x40014fe	       657	pull.c	FUNCTION_29	CALL_1
0x40014fe	        0x488945e8	             mov qword [rbp - 0x18], rax	       657	pull.c	FUNCTION_29	CALL_1
0x4001502	      0x48837de800	               cmp qword [rbp - 0x18], 0	       658	pull.c	FUNCTION_29	IF_1
0x4001507	            0x750a	                           jne 0x4001513	       658	pull.c	FUNCTION_29	IF_1
0x4001509	      0xb800000000	                              mov eax, 0	       659	pull.c	FUNCTION_29	IF_1
0x400150e	      0xe984000000	                           jmp 0x4001597	       659	pull.c	FUNCTION_29	IF_1
0x4001513	      0xbf00000000	                              mov edi, 0	       661	pull.c	FUNCTION_29	CALL_2
0x4001518	      0xe800000000	                          call 0x400151d	       661	pull.c	FUNCTION_29	CALL_2
0x400151d	        0x488945f0	             mov qword [rbp - 0x10], rax	       661	pull.c	FUNCTION_29	CALL_2
0x4001521	      0x48837df000	               cmp qword [rbp - 0x10], 0	       662	pull.c	FUNCTION_29	IF_2
0x4001526	            0x7507	                           jne 0x400152f	       662	pull.c	FUNCTION_29	IF_2
0x4001528	      0xb800000000	                              mov eax, 0	       663	pull.c	FUNCTION_29	IF_2
0x400152d	            0xeb68	                           jmp 0x4001597	       663	pull.c	FUNCTION_29	IF_2
0x400152f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       665	pull.c	FUNCTION_29	CALL_3
0x4001533	      0xbe00000000	                              mov esi, 0	       665	pull.c	FUNCTION_29	CALL_3
0x4001538	          0x4889c7	                            mov rdi, rax	       665	pull.c	FUNCTION_29	CALL_3
0x400153b	      0xe800000000	                          call 0x4001540	       665	pull.c	FUNCTION_29	CALL_3
0x4001540	        0x488945f8	                mov qword [rbp - 8], rax	       665	pull.c	FUNCTION_29	CALL_3
0x4001544	      0x48837df800	                  cmp qword [rbp - 8], 0	       666	pull.c	FUNCTION_29	CALL_4
0x4001549	            0x7519	                           jne 0x4001564	       666	pull.c	FUNCTION_29	CALL_4
0x400154b	      0xb900000000	                              mov ecx, 0	       666	pull.c	FUNCTION_29	CALL_4
0x4001550	      0xba9a020000	                          mov edx, 0x29a	       666	pull.c	FUNCTION_29	CALL_4
0x4001555	      0xbe00000000	                              mov esi, 0	       666	pull.c	FUNCTION_29	CALL_4
0x400155a	      0xbf00000000	                              mov edi, 0	       666	pull.c	FUNCTION_29	CALL_4
0x400155f	      0xe800000000	                          call 0x4001564	       666	pull.c	FUNCTION_29	CALL_4
0x4001564	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       668	pull.c	FUNCTION_29	IF_3	CALL_5
0x4001568	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       668	pull.c	FUNCTION_29	IF_3	CALL_5
0x400156c	        0x488b45f8	                mov rax, qword [rbp - 8]	       668	pull.c	FUNCTION_29	IF_3	CALL_5
0x4001570	          0x4889d6	                            mov rsi, rdx	       668	pull.c	FUNCTION_29	IF_3	CALL_5
0x4001573	          0x4889c7	                            mov rdi, rax	       668	pull.c	FUNCTION_29	IF_3	CALL_5
0x4001576	      0xe800000000	                          call 0x400157b	       668	pull.c	FUNCTION_29	IF_3	CALL_5
0x400157b	            0x85c0	                           test eax, eax	       668	pull.c	FUNCTION_29	IF_3	CALL_5
0x400157d	            0x7407	                            je 0x4001586	       668	pull.c	FUNCTION_29	IF_3	CALL_5
0x400157f	      0xb800000000	                              mov eax, 0	       669	pull.c	FUNCTION_29	IF_3
0x4001584	            0xeb11	                           jmp 0x4001597	       669	pull.c	FUNCTION_29	IF_3
0x4001586	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       671	pull.c	FUNCTION_29	CALL_6
0x400158a	      0xbe00000000	                              mov esi, 0	       671	pull.c	FUNCTION_29	CALL_6
0x400158f	          0x4889c7	                            mov rdi, rax	       671	pull.c	FUNCTION_29	CALL_6
0x4001592	      0xe800000000	                          call 0x4001597	       671	pull.c	FUNCTION_29	CALL_6
0x4001597	              0xc9	                                   leave	       672	pull.c	FUNCTION_29
0x4001598	              0xc3	                                     ret	       672	pull.c	FUNCTION_29
parse_opt_rebase	functions,0:CALL,1:ELSE,1:IF,1:SWITCH,0:WHILE,0:DO,0:FOR,0	34
0x40003f9	              0x55	                                push rbp	        69	pull.c	FUNCTION_13
0x40003fa	          0x4889e5	                            mov rbp, rsp	        69	pull.c	FUNCTION_13
0x40003fd	        0x4883ec30	                           sub rsp, 0x30	        69	pull.c	FUNCTION_13
0x4000401	        0x48897de8	             mov qword [rbp - 0x18], rdi	        69	pull.c	FUNCTION_13
0x4000405	        0x488975e0	             mov qword [rbp - 0x20], rsi	        69	pull.c	FUNCTION_13
0x4000409	          0x8955dc	             mov dword [rbp - 0x24], edx	        69	pull.c	FUNCTION_13
0x400040c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	pull.c	FUNCTION_13
0x4000410	        0x488b4010	            mov rax, qword [rax + 0x10] 	        70	pull.c	FUNCTION_13
0x4000414	        0x488945f8	                mov qword [rbp - 8], rax	        70	pull.c	FUNCTION_13
0x4000418	      0x48837de000	               cmp qword [rbp - 0x20], 0	        72	pull.c	FUNCTION_13	IF_1
0x400041d	            0x7420	                            je 0x400043f	        72	pull.c	FUNCTION_13	IF_1
0x400041f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        73	pull.c	FUNCTION_13	CALL_1
0x4000423	      0xba00000000	                              mov edx, 0	        73	pull.c	FUNCTION_13	CALL_1
0x4000428	          0x4889c6	                            mov rsi, rax	        73	pull.c	FUNCTION_13	CALL_1
0x400042b	      0xbf00000000	                              mov edi, 0	        73	pull.c	FUNCTION_13	CALL_1
0x4000430	      0xe8cffeffff	            call sym.parse_config_rebase	        73	pull.c	FUNCTION_13	CALL_1
0x4000435	            0x89c2	                            mov edx, eax	        73	pull.c	FUNCTION_13	CALL_1
0x4000437	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	pull.c	FUNCTION_13	CALL_1
0x400043b	            0x8910	                    mov dword [rax], edx	        73	pull.c	FUNCTION_13	CALL_1
0x400043d	            0xeb10	                           jmp 0x400044f	        73	pull.c	FUNCTION_13	CALL_1
0x400043f	        0x837ddc00	               cmp dword [rbp - 0x24], 0	        75	pull.c	FUNCTION_13	ELSE_1
0x4000443	           0xf94c0	                                 sete al	        75	pull.c	FUNCTION_13	ELSE_1
0x4000446	           0xfb6d0	                           movzx edx, al	        75	pull.c	FUNCTION_13	ELSE_1
0x4000449	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	pull.c	FUNCTION_13	ELSE_1
0x400044d	            0x8910	                    mov dword [rax], edx	        75	pull.c	FUNCTION_13	ELSE_1
0x400044f	        0x488b45f8	                mov rax, qword [rbp - 8]	        76	pull.c	FUNCTION_13
0x4000453	            0x8b00	                    mov eax, dword [rax]	        76	pull.c	FUNCTION_13
0x4000455	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        76	pull.c	FUNCTION_13
0x4000458	            0x7507	                           jne 0x4000461	        76	pull.c	FUNCTION_13
0x400045a	      0xb8ffffffff	                     mov eax, 0xffffffff	        76	pull.c	FUNCTION_13
0x400045f	            0xeb05	                           jmp 0x4000466	        76	pull.c	FUNCTION_13
0x4000461	      0xb800000000	                              mov eax, 0	        76	pull.c	FUNCTION_13
0x4000466	              0xc9	                                   leave	        77	pull.c	FUNCTION_13
0x4000467	              0xc3	                                     ret	        77	pull.c	FUNCTION_13
oidclr	functions,0:CALL,1:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0:FOR,0	12
0x4000295	              0x55	                                push rbp	      1016	cache.h	FUNCTION_50
0x4000296	          0x4889e5	                            mov rbp, rsp	      1016	cache.h	FUNCTION_50
0x4000299	        0x4883ec10	                           sub rsp, 0x10	      1016	cache.h	FUNCTION_50
0x400029d	        0x48897df8	                mov qword [rbp - 8], rdi	      1016	cache.h	FUNCTION_50
0x40002a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1017	cache.h	FUNCTION_50	CALL_1
0x40002a5	      0xba14000000	                           mov edx, 0x14	      1017	cache.h	FUNCTION_50	CALL_1
0x40002aa	      0xbe00000000	                              mov esi, 0	      1017	cache.h	FUNCTION_50	CALL_1
0x40002af	          0x4889c7	                            mov rdi, rax	      1017	cache.h	FUNCTION_50	CALL_1
0x40002b2	      0xe800000000	                          call 0x40002b7	      1017	cache.h	FUNCTION_50	CALL_1
0x40002b7	              0x90	                                     nop	      1018	cache.h	FUNCTION_50
0x40002b8	              0xc9	                                   leave	      1018	cache.h	FUNCTION_50
0x40002b9	              0xc3	                                     ret	      1018	cache.h	FUNCTION_50
config_get_rebase	functions,0:CALL,8:ELSE,0:IF,3:SWITCH,0:WHILE,0:DO,0:FOR,0	59
0x400066a	              0x55	                                push rbp	       314	pull.c	FUNCTION_18
0x400066b	          0x4889e5	                            mov rbp, rsp	       314	pull.c	FUNCTION_18
0x400066e	        0x4883ec30	                           sub rsp, 0x30	       314	pull.c	FUNCTION_18
0x4000672	    0x64488b042528	                mov rax, qword fs:[0x28]	       314	pull.c	FUNCTION_18
0x400067b	        0x488945f8	                mov qword [rbp - 8], rax	       314	pull.c	FUNCTION_18
0x400067f	            0x31c0	                            xor eax, eax	       314	pull.c	FUNCTION_18
0x4000681	      0xbf00000000	                              mov edi, 0	       315	pull.c	FUNCTION_18	CALL_1
0x4000686	      0xe800000000	                          call 0x400068b	       315	pull.c	FUNCTION_18	CALL_1
0x400068b	        0x488945e8	             mov qword [rbp - 0x18], rax	       315	pull.c	FUNCTION_18	CALL_1
0x400068f	      0x48837de800	               cmp qword [rbp - 0x18], 0	       318	pull.c	FUNCTION_18	IF_1
0x4000694	            0x746c	                            je 0x4000702	       318	pull.c	FUNCTION_18	IF_1
0x4000696	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       319	pull.c	FUNCTION_18	IF_1	CALL_2
0x400069a	          0x488b00	                    mov rax, qword [rax]	       319	pull.c	FUNCTION_18	IF_1	CALL_2
0x400069d	          0x4889c6	                            mov rsi, rax	       319	pull.c	FUNCTION_18	IF_1	CALL_2
0x40006a0	      0xbf00000000	                              mov edi, 0	       319	pull.c	FUNCTION_18	IF_1	CALL_2
0x40006a5	      0xb800000000	                              mov eax, 0	       319	pull.c	FUNCTION_18	IF_1	CALL_2
0x40006aa	      0xe800000000	                          call 0x40006af	       319	pull.c	FUNCTION_18	IF_1	CALL_2
0x40006af	        0x488945f0	             mov qword [rbp - 0x10], rax	       319	pull.c	FUNCTION_18	IF_1	CALL_2
0x40006b3	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       321	pull.c	FUNCTION_18	IF_1	IF_2	CALL_3
0x40006b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       321	pull.c	FUNCTION_18	IF_1	IF_2	CALL_3
0x40006bb	          0x4889d6	                            mov rsi, rdx	       321	pull.c	FUNCTION_18	IF_1	IF_2	CALL_3
0x40006be	          0x4889c7	                            mov rdi, rax	       321	pull.c	FUNCTION_18	IF_1	IF_2	CALL_3
0x40006c1	      0xe800000000	                          call 0x40006c6	       321	pull.c	FUNCTION_18	IF_1	IF_2	CALL_3
0x40006c6	            0x85c0	                           test eax, eax	       321	pull.c	FUNCTION_18	IF_1	IF_2	CALL_3
0x40006c8	            0x752c	                           jne 0x40006f6	       321	pull.c	FUNCTION_18	IF_1	IF_2	CALL_3
0x40006ca	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       322	pull.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x40006ce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       322	pull.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x40006d2	      0xba01000000	                              mov edx, 1	       322	pull.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x40006d7	          0x4889ce	                            mov rsi, rcx	       322	pull.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x40006da	          0x4889c7	                            mov rdi, rax	       322	pull.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x40006dd	      0xe822fcffff	            call sym.parse_config_rebase	       322	pull.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x40006e2	          0x8945dc	             mov dword [rbp - 0x24], eax	       322	pull.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x40006e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       323	pull.c	FUNCTION_18	IF_1	IF_2	CALL_5
0x40006e9	          0x4889c7	                            mov rdi, rax	       323	pull.c	FUNCTION_18	IF_1	IF_2	CALL_5
0x40006ec	      0xe800000000	                          call 0x40006f1	       323	pull.c	FUNCTION_18	IF_1	IF_2	CALL_5
0x40006f1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       324	pull.c	FUNCTION_18	IF_1	IF_2
0x40006f4	            0xeb3e	                           jmp 0x4000734	       324	pull.c	FUNCTION_18	IF_1	IF_2
0x40006f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       327	pull.c	FUNCTION_18	IF_1	CALL_6
0x40006fa	          0x4889c7	                            mov rdi, rax	       327	pull.c	FUNCTION_18	IF_1	CALL_6
0x40006fd	      0xe800000000	                          call 0x4000702	       327	pull.c	FUNCTION_18	IF_1	CALL_6
0x4000702	        0x488d45e0	                   lea rax, [rbp - 0x20]	       330	pull.c	FUNCTION_18	IF_3	CALL_7
0x4000706	          0x4889c6	                            mov rsi, rax	       330	pull.c	FUNCTION_18	IF_3	CALL_7
0x4000709	      0xbf00000000	                              mov edi, 0	       330	pull.c	FUNCTION_18	IF_3	CALL_7
0x400070e	      0xe800000000	                          call 0x4000713	       330	pull.c	FUNCTION_18	IF_3	CALL_7
0x4000713	            0x85c0	                           test eax, eax	       330	pull.c	FUNCTION_18	IF_3	CALL_7
0x4000715	            0x7518	                           jne 0x400072f	       330	pull.c	FUNCTION_18	IF_3	CALL_7
0x4000717	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       331	pull.c	FUNCTION_18	CALL_8
0x400071b	      0xba01000000	                              mov edx, 1	       331	pull.c	FUNCTION_18	CALL_8
0x4000720	          0x4889c6	                            mov rsi, rax	       331	pull.c	FUNCTION_18	CALL_8
0x4000723	      0xbf00000000	                              mov edi, 0	       331	pull.c	FUNCTION_18	CALL_8
0x4000728	      0xe8d7fbffff	            call sym.parse_config_rebase	       331	pull.c	FUNCTION_18	CALL_8
0x400072d	            0xeb05	                           jmp 0x4000734	       331	pull.c	FUNCTION_18	CALL_8
0x400072f	      0xb800000000	                              mov eax, 0	       333	pull.c	FUNCTION_18
0x4000734	        0x488b4df8	                mov rcx, qword [rbp - 8]	       334	pull.c	FUNCTION_18
0x4000738	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       334	pull.c	FUNCTION_18
0x4000741	            0x7405	                            je 0x4000748	       334	pull.c	FUNCTION_18
0x4000743	      0xe800000000	                          call 0x4000748	       334	pull.c	FUNCTION_18
0x4000748	              0xc9	                                   leave	       334	pull.c	FUNCTION_18
0x4000749	              0xc3	                                     ret	       334	pull.c	FUNCTION_18
oidcpy	functions,0:CALL,1:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0:FOR,0	13
0x400026f	              0x55	                                push rbp	       999	cache.h	FUNCTION_47
0x4000270	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_47
0x4000273	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_47
0x4000277	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_47
0x400027b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_47
0x400027f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_47	CALL_1
0x4000283	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_47	CALL_1
0x4000287	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_47	CALL_1
0x400028a	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_47	CALL_1
0x400028d	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_47	CALL_1
0x4000292	              0x90	                                     nop	      1001	cache.h	FUNCTION_47
0x4000293	              0xc9	                                   leave	      1001	cache.h	FUNCTION_47
0x4000294	              0xc3	                                     ret	      1001	cache.h	FUNCTION_47
pull_into_void	functions,0:CALL,2:ELSE,0:IF,2:SWITCH,0:WHILE,0:DO,0:FOR,0	33
0x40010d2	              0x55	                                push rbp	       557	pull.c	FUNCTION_25
0x40010d3	          0x4889e5	                            mov rbp, rsp	       557	pull.c	FUNCTION_25
0x40010d6	        0x4883ec10	                           sub rsp, 0x10	       557	pull.c	FUNCTION_25
0x40010da	        0x48897df8	                mov qword [rbp - 8], rdi	       557	pull.c	FUNCTION_25
0x40010de	        0x488975f0	             mov qword [rbp - 0x10], rsi	       557	pull.c	FUNCTION_25
0x40010e2	    0x488b05000000	            mov rax, qword [0x040010e9] 	       564	pull.c	FUNCTION_25	IF_1	CALL_1
0x40010e9	        0x488b4058	            mov rax, qword [rax + 0x58] 	       564	pull.c	FUNCTION_25	IF_1	CALL_1
0x40010ed	        0x488b4038	            mov rax, qword [rax + 0x38] 	       564	pull.c	FUNCTION_25	IF_1	CALL_1
0x40010f1	        0x488b4df8	                mov rcx, qword [rbp - 8]	       564	pull.c	FUNCTION_25	IF_1	CALL_1
0x40010f5	      0xba00000000	                              mov edx, 0	       564	pull.c	FUNCTION_25	IF_1	CALL_1
0x40010fa	          0x4889ce	                            mov rsi, rcx	       564	pull.c	FUNCTION_25	IF_1	CALL_1
0x40010fd	          0x4889c7	                            mov rdi, rax	       564	pull.c	FUNCTION_25	IF_1	CALL_1
0x4001100	      0xe800000000	                          call 0x4001105	       564	pull.c	FUNCTION_25	IF_1	CALL_1
0x4001105	            0x85c0	                           test eax, eax	       564	pull.c	FUNCTION_25	IF_1	CALL_1
0x4001107	            0x7407	                            je 0x4001110	       564	pull.c	FUNCTION_25	IF_1	CALL_1
0x4001109	      0xb801000000	                              mov eax, 1	       565	pull.c	FUNCTION_25	IF_1
0x400110e	            0xeb39	                           jmp 0x4001149	       565	pull.c	FUNCTION_25	IF_1
0x4001110	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       567	pull.c	FUNCTION_25	IF_2	CALL_2
0x4001114	        0x488b45f8	                mov rax, qword [rbp - 8]	       567	pull.c	FUNCTION_25	IF_2	CALL_2
0x4001118	    0x41b901000000	                              mov r9d, 1	       567	pull.c	FUNCTION_25	IF_2	CALL_2
0x400111e	    0x41b800000000	                              mov r8d, 0	       567	pull.c	FUNCTION_25	IF_2	CALL_2
0x4001124	          0x4889d1	                            mov rcx, rdx	       567	pull.c	FUNCTION_25	IF_2	CALL_2
0x4001127	          0x4889c2	                            mov rdx, rax	       567	pull.c	FUNCTION_25	IF_2	CALL_2
0x400112a	      0xbe00000000	                              mov esi, 0	       567	pull.c	FUNCTION_25	IF_2	CALL_2
0x400112f	      0xbf00000000	                              mov edi, 0	       567	pull.c	FUNCTION_25	IF_2	CALL_2
0x4001134	      0xe800000000	                          call 0x4001139	       567	pull.c	FUNCTION_25	IF_2	CALL_2
0x4001139	            0x85c0	                           test eax, eax	       567	pull.c	FUNCTION_25	IF_2	CALL_2
0x400113b	            0x7407	                            je 0x4001144	       567	pull.c	FUNCTION_25	IF_2	CALL_2
0x400113d	      0xb801000000	                              mov eax, 1	       568	pull.c	FUNCTION_25	IF_2
0x4001142	            0xeb05	                           jmp 0x4001149	       568	pull.c	FUNCTION_25	IF_2
0x4001144	      0xb800000000	                              mov eax, 0	       570	pull.c	FUNCTION_25
0x4001149	              0xc9	                                   leave	       571	pull.c	FUNCTION_25
0x400114a	              0xc3	                                     ret	       571	pull.c	FUNCTION_25
strbuf_addch	functions,0:CALL,2:ELSE,0:IF,1:SWITCH,0:WHILE,0:DO,0:FOR,0	33
0x40000ff	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_4
0x4000100	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_4
0x4000103	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_4
0x4000107	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_4
0x400010b	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_4
0x400010e	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000112	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000115	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x400011a	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x400011d	            0x7511	                           jne 0x4000130	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x400011f	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_4	CALL_2
0x4000123	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_4	CALL_2
0x4000128	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_4	CALL_2
0x400012b	      0xe800000000	                          call 0x4000130	       228	strbuf.h	FUNCTION_4	CALL_2
0x4000130	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x4000134	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_4
0x4000138	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x400013c	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_4
0x4000140	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_4
0x4000144	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x4000148	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_4
0x400014c	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_4
0x400014f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_4
0x4000152	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_4
0x4000154	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x4000158	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_4
0x400015c	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x4000160	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_4
0x4000164	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_4
0x4000167	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_4
0x400016a	              0x90	                                     nop	       231	strbuf.h	FUNCTION_4
0x400016b	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_4
0x400016c	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_4
set_reflog_message	functions,0:CALL,3:ELSE,0:IF,1:SWITCH,0:WHILE,0:DO,0:FOR,1	48
0x40004fb	              0x55	                                push rbp	       265	pull.c	FUNCTION_16
0x40004fc	          0x4889e5	                            mov rbp, rsp	       265	pull.c	FUNCTION_16
0x40004ff	        0x4883ec40	                           sub rsp, 0x40	       265	pull.c	FUNCTION_16
0x4000503	          0x897dcc	             mov dword [rbp - 0x34], edi	       265	pull.c	FUNCTION_16
0x4000506	        0x488975c0	             mov qword [rbp - 0x40], rsi	       265	pull.c	FUNCTION_16
0x400050a	    0x64488b042528	                mov rax, qword fs:[0x28]	       265	pull.c	FUNCTION_16
0x4000513	        0x488945f8	                mov qword [rbp - 8], rax	       265	pull.c	FUNCTION_16
0x4000517	            0x31c0	                            xor eax, eax	       265	pull.c	FUNCTION_16
0x4000519	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       267	pull.c	FUNCTION_16
0x4000521	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       267	pull.c	FUNCTION_16
0x4000529	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       267	pull.c	FUNCTION_16
0x4000531	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       269	pull.c	FUNCTION_16	FOR_1
0x4000538	            0xeb41	                           jmp 0x400057b	       269	pull.c	FUNCTION_16	FOR_1
0x400053a	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       270	pull.c	FUNCTION_16	FOR_1	IF_1
0x400053e	            0x7411	                            je 0x4000551	       270	pull.c	FUNCTION_16	FOR_1	IF_1
0x4000540	        0x488d45e0	                   lea rax, [rbp - 0x20]	       271	pull.c	FUNCTION_16	FOR_1	CALL_1
0x4000544	      0xbe20000000	                           mov esi, 0x20	       271	pull.c	FUNCTION_16	FOR_1	CALL_1
0x4000549	          0x4889c7	                            mov rdi, rax	       271	pull.c	FUNCTION_16	FOR_1	CALL_1
0x400054c	      0xe8aefbffff	                   call sym.strbuf_addch	       271	pull.c	FUNCTION_16	FOR_1	CALL_1
0x4000551	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       272	pull.c	FUNCTION_16	FOR_1	CALL_2
0x4000554	            0x4898	                                    cdqe	       272	pull.c	FUNCTION_16	FOR_1	CALL_2
0x4000556	    0x488d14c50000	                        lea rdx, [rax*8]	       272	pull.c	FUNCTION_16	FOR_1	CALL_2
0x400055e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       272	pull.c	FUNCTION_16	FOR_1	CALL_2
0x4000562	          0x4801d0	                            add rax, rdx	       272	pull.c	FUNCTION_16	FOR_1	CALL_2
0x4000565	          0x488b10	                    mov rdx, qword [rax]	       272	pull.c	FUNCTION_16	FOR_1	CALL_2
0x4000568	        0x488d45e0	                   lea rax, [rbp - 0x20]	       272	pull.c	FUNCTION_16	FOR_1	CALL_2
0x400056c	          0x4889d6	                            mov rsi, rdx	       272	pull.c	FUNCTION_16	FOR_1	CALL_2
0x400056f	          0x4889c7	                            mov rdi, rax	       272	pull.c	FUNCTION_16	FOR_1	CALL_2
0x4000572	      0xe8f6fbffff	                  call sym.strbuf_addstr	       272	pull.c	FUNCTION_16	FOR_1	CALL_2
0x4000577	        0x8345dc01	               add dword [rbp - 0x24], 1	       269	pull.c	FUNCTION_16	FOR_1
0x400057b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       269	pull.c	FUNCTION_16	FOR_1
0x400057e	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	       269	pull.c	FUNCTION_16	FOR_1
0x4000581	            0x7cb7	                            jl 0x400053a	       269	pull.c	FUNCTION_16	FOR_1
0x4000583	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       275	pull.c	FUNCTION_16
0x4000587	      0xba00000000	                              mov edx, 0	       275	pull.c	FUNCTION_16
0x400058c	          0x4889c6	                            mov rsi, rax	       275	pull.c	FUNCTION_16
0x400058f	      0xbf00000000	                              mov edi, 0	       275	pull.c	FUNCTION_16
0x4000594	      0xe800000000	                          call 0x4000599	       275	pull.c	FUNCTION_16
0x4000599	        0x488d45e0	                   lea rax, [rbp - 0x20]	       277	pull.c	FUNCTION_16	CALL_3
0x400059d	          0x4889c7	                            mov rdi, rax	       277	pull.c	FUNCTION_16	CALL_3
0x40005a0	      0xe800000000	                          call 0x40005a5	       277	pull.c	FUNCTION_16	CALL_3
0x40005a5	              0x90	                                     nop	       278	pull.c	FUNCTION_16
0x40005a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	pull.c	FUNCTION_16
0x40005aa	    0x644833042528	                xor rax, qword fs:[0x28]	       278	pull.c	FUNCTION_16
0x40005b3	            0x7405	                            je 0x40005ba	       278	pull.c	FUNCTION_16
0x40005b5	      0xe800000000	                          call 0x40005ba	       278	pull.c	FUNCTION_16
0x40005ba	              0xc9	                                   leave	       278	pull.c	FUNCTION_16
0x40005bb	              0xc3	                                     ret	       278	pull.c	FUNCTION_16
get_rebase_fork_point	functions,0:CALL,7:ELSE,1:IF,5:SWITCH,0:WHILE,0:DO,0:FOR,0	97
0x400170b	              0x55	                                push rbp	       718	pull.c	FUNCTION_31
0x400170c	          0x4889e5	                            mov rbp, rsp	       718	pull.c	FUNCTION_31
0x400170f	    0x4881ecd00000	                           sub rsp, 0xd0	       718	pull.c	FUNCTION_31
0x4001716	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       718	pull.c	FUNCTION_31
0x400171d	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       718	pull.c	FUNCTION_31
0x4001724	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       718	pull.c	FUNCTION_31
0x400172b	    0x64488b042528	                mov rax, qword fs:[0x28]	       718	pull.c	FUNCTION_31
0x4001734	        0x488945f8	                mov qword [rbp - 8], rax	       718	pull.c	FUNCTION_31
0x4001738	            0x31c0	                            xor eax, eax	       718	pull.c	FUNCTION_31
0x400173a	        0x488d5590	                   lea rdx, [rbp - 0x70]	       722	pull.c	FUNCTION_31
0x400173e	      0xb800000000	                              mov eax, 0	       722	pull.c	FUNCTION_31
0x4001743	      0xb90c000000	                            mov ecx, 0xc	       722	pull.c	FUNCTION_31
0x4001748	          0x4889d7	                            mov rdi, rdx	       722	pull.c	FUNCTION_31
0x400174b	          0xf348ab	              rep stosq qword [rdi], rax	       722	pull.c	FUNCTION_31
0x400174e	    0x48c745980000	               mov qword [rbp - 0x68], 0	       722	pull.c	FUNCTION_31
0x4001756	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       722	pull.c	FUNCTION_31
0x400175e	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       723	pull.c	FUNCTION_31
0x4001769	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       723	pull.c	FUNCTION_31
0x4001774	    0x48c745800000	               mov qword [rbp - 0x80], 0	       723	pull.c	FUNCTION_31
0x400177c	      0xbf00000000	                              mov edi, 0	       725	pull.c	FUNCTION_31	CALL_1
0x4001781	      0xe800000000	                          call 0x4001786	       725	pull.c	FUNCTION_31	CALL_1
0x4001786	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       725	pull.c	FUNCTION_31	CALL_1
0x400178d	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	       726	pull.c	FUNCTION_31	IF_1
0x4001795	            0x750a	                           jne 0x40017a1	       726	pull.c	FUNCTION_31	IF_1
0x4001797	      0xb8ffffffff	                     mov eax, 0xffffffff	       727	pull.c	FUNCTION_31	IF_1
0x400179c	      0xe922010000	                           jmp 0x40018c3	       727	pull.c	FUNCTION_31	IF_1
0x40017a1	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	       729	pull.c	FUNCTION_31	IF_2
0x40017a9	            0x7422	                            je 0x40017cd	       729	pull.c	FUNCTION_31	IF_2
0x40017ab	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       730	pull.c	FUNCTION_31	CALL_2
0x40017b2	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       730	pull.c	FUNCTION_31	CALL_2
0x40017b9	          0x4889d6	                            mov rsi, rdx	       730	pull.c	FUNCTION_31	CALL_2
0x40017bc	          0x4889c7	                            mov rdi, rax	       730	pull.c	FUNCTION_31	CALL_2
0x40017bf	      0xe8d5fdffff	            call sym.get_tracking_branch	       730	pull.c	FUNCTION_31	CALL_2
0x40017c4	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       730	pull.c	FUNCTION_31	CALL_2
0x40017cb	            0xeb16	                           jmp 0x40017e3	       730	pull.c	FUNCTION_31	CALL_2
0x40017cd	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       732	pull.c	FUNCTION_31	CALL_3
0x40017d4	          0x4889c7	                            mov rdi, rax	       732	pull.c	FUNCTION_31	CALL_3
0x40017d7	      0xe80afdffff	            call sym.get_upstream_branch	       732	pull.c	FUNCTION_31	CALL_3
0x40017dc	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       732	pull.c	FUNCTION_31	CALL_3
0x40017e3	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	       734	pull.c	FUNCTION_31	IF_3
0x40017eb	            0x750a	                           jne 0x40017f7	       734	pull.c	FUNCTION_31	IF_3
0x40017ed	      0xb8ffffffff	                     mov eax, 0xffffffff	       735	pull.c	FUNCTION_31	IF_3
0x40017f2	      0xe9cc000000	                           jmp 0x40018c3	       735	pull.c	FUNCTION_31	IF_3
0x40017f7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       737	pull.c	FUNCTION_31	CALL_4
0x40017fe	          0x488b10	                    mov rdx, qword [rax]	       737	pull.c	FUNCTION_31	CALL_4
0x4001801	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       737	pull.c	FUNCTION_31	CALL_4
0x4001808	        0x488d4d90	                   lea rcx, [rbp - 0x70]	       737	pull.c	FUNCTION_31	CALL_4
0x400180c	        0x488d7908	                      lea rdi, [rcx + 8]	       737	pull.c	FUNCTION_31	CALL_4
0x4001810	    0x41b900000000	                              mov r9d, 0	       737	pull.c	FUNCTION_31	CALL_4
0x4001816	          0x4989d0	                             mov r8, rdx	       737	pull.c	FUNCTION_31	CALL_4
0x4001819	          0x4889c1	                            mov rcx, rax	       737	pull.c	FUNCTION_31	CALL_4
0x400181c	      0xba00000000	                              mov edx, 0	       737	pull.c	FUNCTION_31	CALL_4
0x4001821	      0xbe00000000	                              mov esi, 0	       737	pull.c	FUNCTION_31	CALL_4
0x4001826	      0xb800000000	                              mov eax, 0	       737	pull.c	FUNCTION_31	CALL_4
0x400182b	      0xe800000000	                          call 0x4001830	       737	pull.c	FUNCTION_31	CALL_4
0x4001830	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       739	pull.c	FUNCTION_31
0x4001834	          0x83c801	                               or eax, 1	       739	pull.c	FUNCTION_31
0x4001837	          0x8845d8	               mov byte [rbp - 0x28], al	       739	pull.c	FUNCTION_31
0x400183a	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       740	pull.c	FUNCTION_31
0x400183e	          0x83c804	                               or eax, 4	       740	pull.c	FUNCTION_31
0x4001841	          0x8845d8	               mov byte [rbp - 0x28], al	       740	pull.c	FUNCTION_31
0x4001844	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       741	pull.c	FUNCTION_31
0x4001848	          0x83c808	                               or eax, 8	       741	pull.c	FUNCTION_31
0x400184b	          0x8845d8	               mov byte [rbp - 0x28], al	       741	pull.c	FUNCTION_31
0x400184e	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	       743	pull.c	FUNCTION_31	CALL_5
0x4001855	        0x488d4590	                   lea rax, [rbp - 0x70]	       743	pull.c	FUNCTION_31	CALL_5
0x4001859	      0xba28000000	                           mov edx, 0x28	       743	pull.c	FUNCTION_31	CALL_5
0x400185e	          0x4889ce	                            mov rsi, rcx	       743	pull.c	FUNCTION_31	CALL_5
0x4001861	          0x4889c7	                            mov rdi, rax	       743	pull.c	FUNCTION_31	CALL_5
0x4001864	      0xe851eaffff	                call sym.capture_command	       743	pull.c	FUNCTION_31	CALL_5
0x4001869	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	       743	pull.c	FUNCTION_31	CALL_5
0x400186f	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	       744	pull.c	FUNCTION_31	IF_4
0x4001876	            0x7525	                           jne 0x400189d	       744	pull.c	FUNCTION_31	IF_4
0x4001878	        0x488b4580	             mov rax, qword [rbp - 0x80]	       747	pull.c	FUNCTION_31	CALL_6
0x400187c	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       747	pull.c	FUNCTION_31	CALL_6
0x4001883	          0x4889d6	                            mov rsi, rdx	       747	pull.c	FUNCTION_31	CALL_6
0x4001886	          0x4889c7	                            mov rdi, rax	       747	pull.c	FUNCTION_31	CALL_6
0x4001889	      0xe800000000	                          call 0x400188e	       747	pull.c	FUNCTION_31	CALL_6
0x400188e	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	       747	pull.c	FUNCTION_31	CALL_6
0x4001894	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	       748	pull.c	FUNCTION_31	IF_5
0x400189b	            0xeb01	                           jmp 0x400189e	       748	pull.c	FUNCTION_31	IF_5
0x400189d	              0x90	                                     nop	       745	pull.c	FUNCTION_31	IF_4
0x400189e	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       752	pull.c	FUNCTION_31	CALL_7
0x40018a5	          0x4889c7	                            mov rdi, rax	       752	pull.c	FUNCTION_31	CALL_7
0x40018a8	      0xe800000000	                          call 0x40018ad	       752	pull.c	FUNCTION_31	CALL_7
0x40018ad	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	       753	pull.c	FUNCTION_31
0x40018b4	            0x7407	                            je 0x40018bd	       753	pull.c	FUNCTION_31
0x40018b6	      0xb8ffffffff	                     mov eax, 0xffffffff	       753	pull.c	FUNCTION_31
0x40018bb	            0xeb06	                           jmp 0x40018c3	       753	pull.c	FUNCTION_31
0x40018bd	      0xb800000000	                              mov eax, 0	       753	pull.c	FUNCTION_31
0x40018c2	              0x90	                                     nop	       753	pull.c	FUNCTION_31
0x40018c3	        0x488b75f8	                mov rsi, qword [rbp - 8]	       754	pull.c	FUNCTION_31
0x40018c7	    0x644833342528	                xor rsi, qword fs:[0x28]	       754	pull.c	FUNCTION_31
0x40018d0	            0x7405	                            je 0x40018d7	       754	pull.c	FUNCTION_31
0x40018d2	      0xe800000000	                          call 0x40018d7	       754	pull.c	FUNCTION_31
0x40018d7	              0xc9	                                   leave	       754	pull.c	FUNCTION_31
0x40018d8	              0xc3	                                     ret	       754	pull.c	FUNCTION_31
run_fetch	functions,0:CALL,26:ELSE,1:IF,18:SWITCH,1:WHILE,0:DO,0:FOR,0	209
0x4000d78	              0x55	                                push rbp	       486	pull.c	ELSE_1	FUNCTION_24
0x4000d79	          0x4889e5	                            mov rbp, rsp	       486	pull.c	ELSE_1	FUNCTION_24
0x4000d7c	        0x4883ec40	                           sub rsp, 0x40	       486	pull.c	ELSE_1	FUNCTION_24
0x4000d80	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       486	pull.c	ELSE_1	FUNCTION_24
0x4000d84	        0x488975c0	             mov qword [rbp - 0x40], rsi	       486	pull.c	ELSE_1	FUNCTION_24
0x4000d88	    0x64488b042528	                mov rax, qword fs:[0x28]	       486	pull.c	ELSE_1	FUNCTION_24
0x4000d91	        0x488945f8	                mov qword [rbp - 8], rax	       486	pull.c	ELSE_1	FUNCTION_24
0x4000d95	            0x31c0	                            xor eax, eax	       486	pull.c	ELSE_1	FUNCTION_24
0x4000d97	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       487	pull.c	ELSE_1	FUNCTION_24
0x4000d9f	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       487	pull.c	ELSE_1	FUNCTION_24
0x4000da6	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       487	pull.c	ELSE_1	FUNCTION_24
0x4000dad	        0x488d45e0	                   lea rax, [rbp - 0x20]	       490	pull.c	ELSE_1	FUNCTION_24	CALL_1
0x4000db1	      0xb900000000	                              mov ecx, 0	       490	pull.c	ELSE_1	FUNCTION_24	CALL_1
0x4000db6	      0xba00000000	                              mov edx, 0	       490	pull.c	ELSE_1	FUNCTION_24	CALL_1
0x4000dbb	      0xbe00000000	                              mov esi, 0	       490	pull.c	ELSE_1	FUNCTION_24	CALL_1
0x4000dc0	          0x4889c7	                            mov rdi, rax	       490	pull.c	ELSE_1	FUNCTION_24	CALL_1
0x4000dc3	      0xb800000000	                              mov eax, 0	       490	pull.c	ELSE_1	FUNCTION_24	CALL_1
0x4000dc8	      0xe800000000	                          call 0x4000dcd	       490	pull.c	ELSE_1	FUNCTION_24	CALL_1
0x4000dcd	        0x488d45e0	                   lea rax, [rbp - 0x20]	       493	pull.c	ELSE_1	FUNCTION_24	CALL_2
0x4000dd1	          0x4889c7	                            mov rdi, rax	       493	pull.c	ELSE_1	FUNCTION_24	CALL_2
0x4000dd4	      0xe88ff6ffff	            call sym.argv_push_verbosity	       493	pull.c	ELSE_1	FUNCTION_24	CALL_2
0x4000dd9	    0x488b05000000	            mov rax, qword [0x04000de0] 	       494	pull.c	ELSE_1	FUNCTION_24	IF_1
0x4000de0	          0x4885c0	                           test rax, rax	       494	pull.c	ELSE_1	FUNCTION_24	IF_1
0x4000de3	            0x7416	                            je 0x4000dfb	       494	pull.c	ELSE_1	FUNCTION_24	IF_1
0x4000de5	    0x488b15000000	            mov rdx, qword [0x04000dec] 	       495	pull.c	ELSE_1	FUNCTION_24	CALL_3
0x4000dec	        0x488d45e0	                   lea rax, [rbp - 0x20]	       495	pull.c	ELSE_1	FUNCTION_24	CALL_3
0x4000df0	          0x4889d6	                            mov rsi, rdx	       495	pull.c	ELSE_1	FUNCTION_24	CALL_3
0x4000df3	          0x4889c7	                            mov rdi, rax	       495	pull.c	ELSE_1	FUNCTION_24	CALL_3
0x4000df6	      0xe800000000	                          call 0x4000dfb	       495	pull.c	ELSE_1	FUNCTION_24	CALL_3
0x4000dfb	    0x488b05000000	            mov rax, qword [0x04000e02] 	       498	pull.c	ELSE_1	FUNCTION_24	IF_2
0x4000e02	          0x4885c0	                           test rax, rax	       498	pull.c	ELSE_1	FUNCTION_24	IF_2
0x4000e05	            0x7416	                            je 0x4000e1d	       498	pull.c	ELSE_1	FUNCTION_24	IF_2
0x4000e07	    0x488b15000000	            mov rdx, qword [0x04000e0e] 	       499	pull.c	ELSE_1	FUNCTION_24	CALL_4
0x4000e0e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       499	pull.c	ELSE_1	FUNCTION_24	CALL_4
0x4000e12	          0x4889d6	                            mov rsi, rdx	       499	pull.c	ELSE_1	FUNCTION_24	CALL_4
0x4000e15	          0x4889c7	                            mov rdi, rax	       499	pull.c	ELSE_1	FUNCTION_24	CALL_4
0x4000e18	      0xe800000000	                          call 0x4000e1d	       499	pull.c	ELSE_1	FUNCTION_24	CALL_4
0x4000e1d	    0x488b05000000	            mov rax, qword [0x04000e24] 	       500	pull.c	ELSE_1	FUNCTION_24	IF_3
0x4000e24	          0x4885c0	                           test rax, rax	       500	pull.c	ELSE_1	FUNCTION_24	IF_3
0x4000e27	            0x7416	                            je 0x4000e3f	       500	pull.c	ELSE_1	FUNCTION_24	IF_3
0x4000e29	    0x488b15000000	            mov rdx, qword [0x04000e30] 	       501	pull.c	ELSE_1	FUNCTION_24	CALL_5
0x4000e30	        0x488d45e0	                   lea rax, [rbp - 0x20]	       501	pull.c	ELSE_1	FUNCTION_24	CALL_5
0x4000e34	          0x4889d6	                            mov rsi, rdx	       501	pull.c	ELSE_1	FUNCTION_24	CALL_5
0x4000e37	          0x4889c7	                            mov rdi, rax	       501	pull.c	ELSE_1	FUNCTION_24	CALL_5
0x4000e3a	      0xe800000000	                          call 0x4000e3f	       501	pull.c	ELSE_1	FUNCTION_24	CALL_5
0x4000e3f	    0x488b05000000	            mov rax, qword [0x04000e46] 	       502	pull.c	ELSE_1	FUNCTION_24	IF_4
0x4000e46	          0x4885c0	                           test rax, rax	       502	pull.c	ELSE_1	FUNCTION_24	IF_4
0x4000e49	            0x7416	                            je 0x4000e61	       502	pull.c	ELSE_1	FUNCTION_24	IF_4
0x4000e4b	    0x488b15000000	            mov rdx, qword [0x04000e52] 	       503	pull.c	ELSE_1	FUNCTION_24	CALL_6
0x4000e52	        0x488d45e0	                   lea rax, [rbp - 0x20]	       503	pull.c	ELSE_1	FUNCTION_24	CALL_6
0x4000e56	          0x4889d6	                            mov rsi, rdx	       503	pull.c	ELSE_1	FUNCTION_24	CALL_6
0x4000e59	          0x4889c7	                            mov rdi, rax	       503	pull.c	ELSE_1	FUNCTION_24	CALL_6
0x4000e5c	      0xe800000000	                          call 0x4000e61	       503	pull.c	ELSE_1	FUNCTION_24	CALL_6
0x4000e61	        0x488d45e0	                   lea rax, [rbp - 0x20]	       504	pull.c	ELSE_1	FUNCTION_24	CALL_7
0x4000e65	          0x4889c7	                            mov rdi, rax	       504	pull.c	ELSE_1	FUNCTION_24	CALL_7
0x4000e68	      0xe856f6ffff	                call sym.argv_push_force	       504	pull.c	ELSE_1	FUNCTION_24	CALL_7
0x4000e6d	    0x488b05000000	            mov rax, qword [0x04000e74] 	       505	pull.c	ELSE_1	FUNCTION_24	IF_5
0x4000e74	          0x4885c0	                           test rax, rax	       505	pull.c	ELSE_1	FUNCTION_24	IF_5
0x4000e77	            0x7416	                            je 0x4000e8f	       505	pull.c	ELSE_1	FUNCTION_24	IF_5
0x4000e79	    0x488b15000000	            mov rdx, qword [0x04000e80] 	       506	pull.c	ELSE_1	FUNCTION_24	CALL_8
0x4000e80	        0x488d45e0	                   lea rax, [rbp - 0x20]	       506	pull.c	ELSE_1	FUNCTION_24	CALL_8
0x4000e84	          0x4889d6	                            mov rsi, rdx	       506	pull.c	ELSE_1	FUNCTION_24	CALL_8
0x4000e87	          0x4889c7	                            mov rdi, rax	       506	pull.c	ELSE_1	FUNCTION_24	CALL_8
0x4000e8a	      0xe800000000	                          call 0x4000e8f	       506	pull.c	ELSE_1	FUNCTION_24	CALL_8
0x4000e8f	    0x488b05000000	            mov rax, qword [0x04000e96] 	       507	pull.c	ELSE_1	FUNCTION_24	IF_6
0x4000e96	          0x4885c0	                           test rax, rax	       507	pull.c	ELSE_1	FUNCTION_24	IF_6
0x4000e99	            0x7416	                            je 0x4000eb1	       507	pull.c	ELSE_1	FUNCTION_24	IF_6
0x4000e9b	    0x488b15000000	            mov rdx, qword [0x04000ea2] 	       508	pull.c	ELSE_1	FUNCTION_24	CALL_9
0x4000ea2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       508	pull.c	ELSE_1	FUNCTION_24	CALL_9
0x4000ea6	          0x4889d6	                            mov rsi, rdx	       508	pull.c	ELSE_1	FUNCTION_24	CALL_9
0x4000ea9	          0x4889c7	                            mov rdi, rax	       508	pull.c	ELSE_1	FUNCTION_24	CALL_9
0x4000eac	      0xe800000000	                          call 0x4000eb1	       508	pull.c	ELSE_1	FUNCTION_24	CALL_9
0x4000eb1	    0x8b0500000000	            mov eax, dword [0x04000eb7] 	       509	pull.c	ELSE_1	FUNCTION_24	IF_7
0x4000eb7	          0x83f801	                              cmp eax, 1	       509	pull.c	ELSE_1	FUNCTION_24	IF_7
0x4000eba	            0x7468	                            je 0x4000f24	       509	pull.c	ELSE_1	FUNCTION_24	IF_7
0x4000ebc	    0x8b0500000000	            mov eax, dword [0x04000ec2] 	       510	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000ec2	            0x85c0	                           test eax, eax	       510	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000ec4	            0x741f	                            je 0x4000ee5	       510	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000ec6	          0x83f802	                              cmp eax, 2	       510	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000ec9	            0x7407	                            je 0x4000ed2	       510	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000ecb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       510	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000ece	            0x7428	                            je 0x4000ef8	       510	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000ed0	            0xeb39	                           jmp 0x4000f0b	       510	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000ed2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       512	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1	CALL_10
0x4000ed6	      0xbe00000000	                              mov esi, 0	       512	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1	CALL_10
0x4000edb	          0x4889c7	                            mov rdi, rax	       512	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1	CALL_10
0x4000ede	      0xe800000000	                          call 0x4000ee3	       512	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1	CALL_10
0x4000ee3	            0xeb3f	                           jmp 0x4000f24	       513	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000ee5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       515	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1	CALL_11
0x4000ee9	      0xbe00000000	                              mov esi, 0	       515	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1	CALL_11
0x4000eee	          0x4889c7	                            mov rdi, rax	       515	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1	CALL_11
0x4000ef1	      0xe800000000	                          call 0x4000ef6	       515	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1	CALL_11
0x4000ef6	            0xeb2c	                           jmp 0x4000f24	       516	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000ef8	        0x488d45e0	                   lea rax, [rbp - 0x20]	       518	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1	CALL_12
0x4000efc	      0xbe00000000	                              mov esi, 0	       518	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1	CALL_12
0x4000f01	          0x4889c7	                            mov rdi, rax	       518	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1	CALL_12
0x4000f04	      0xe800000000	                          call 0x4000f09	       518	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1	CALL_12
0x4000f09	            0xeb19	                           jmp 0x4000f24	       519	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000f0b	      0xba00000000	                              mov edx, 0	       521	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000f10	      0xbe09020000	                          mov esi, 0x209	       521	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000f15	      0xbf00000000	                              mov edi, 0	       521	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000f1a	      0xb800000000	                              mov eax, 0	       521	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000f1f	      0xe800000000	                          call 0x4000f24	       521	pull.c	ELSE_1	FUNCTION_24	IF_7	SWITCH_1
0x4000f24	    0x488b05000000	            mov rax, qword [0x04000f2b] 	       523	pull.c	ELSE_1	FUNCTION_24	IF_8
0x4000f2b	          0x4885c0	                           test rax, rax	       523	pull.c	ELSE_1	FUNCTION_24	IF_8
0x4000f2e	            0x7416	                            je 0x4000f46	       523	pull.c	ELSE_1	FUNCTION_24	IF_8
0x4000f30	    0x488b15000000	            mov rdx, qword [0x04000f37] 	       524	pull.c	ELSE_1	FUNCTION_24	CALL_13
0x4000f37	        0x488d45e0	                   lea rax, [rbp - 0x20]	       524	pull.c	ELSE_1	FUNCTION_24	CALL_13
0x4000f3b	          0x4889d6	                            mov rsi, rdx	       524	pull.c	ELSE_1	FUNCTION_24	CALL_13
0x4000f3e	          0x4889c7	                            mov rdi, rax	       524	pull.c	ELSE_1	FUNCTION_24	CALL_13
0x4000f41	      0xe800000000	                          call 0x4000f46	       524	pull.c	ELSE_1	FUNCTION_24	CALL_13
0x4000f46	    0x8b0500000000	            mov eax, dword [0x04000f4c] 	       525	pull.c	ELSE_1	FUNCTION_24	IF_9
0x4000f4c	            0x85c0	                           test eax, eax	       525	pull.c	ELSE_1	FUNCTION_24	IF_9
0x4000f4e	            0x7411	                            je 0x4000f61	       525	pull.c	ELSE_1	FUNCTION_24	IF_9
0x4000f50	        0x488d45e0	                   lea rax, [rbp - 0x20]	       526	pull.c	ELSE_1	FUNCTION_24	CALL_14
0x4000f54	      0xbe00000000	                              mov esi, 0	       526	pull.c	ELSE_1	FUNCTION_24	CALL_14
0x4000f59	          0x4889c7	                            mov rdi, rax	       526	pull.c	ELSE_1	FUNCTION_24	CALL_14
0x4000f5c	      0xe800000000	                          call 0x4000f61	       526	pull.c	ELSE_1	FUNCTION_24	CALL_14
0x4000f61	    0x488b05000000	            mov rax, qword [0x04000f68] 	       527	pull.c	ELSE_1	FUNCTION_24	IF_10
0x4000f68	          0x4885c0	                           test rax, rax	       527	pull.c	ELSE_1	FUNCTION_24	IF_10
0x4000f6b	            0x7416	                            je 0x4000f83	       527	pull.c	ELSE_1	FUNCTION_24	IF_10
0x4000f6d	    0x488b15000000	            mov rdx, qword [0x04000f74] 	       528	pull.c	ELSE_1	FUNCTION_24	CALL_15
0x4000f74	        0x488d45e0	                   lea rax, [rbp - 0x20]	       528	pull.c	ELSE_1	FUNCTION_24	CALL_15
0x4000f78	          0x4889d6	                            mov rsi, rdx	       528	pull.c	ELSE_1	FUNCTION_24	CALL_15
0x4000f7b	          0x4889c7	                            mov rdi, rax	       528	pull.c	ELSE_1	FUNCTION_24	CALL_15
0x4000f7e	      0xe800000000	                          call 0x4000f83	       528	pull.c	ELSE_1	FUNCTION_24	CALL_15
0x4000f83	    0x488b05000000	            mov rax, qword [0x04000f8a] 	       529	pull.c	ELSE_1	FUNCTION_24	IF_11
0x4000f8a	          0x4885c0	                           test rax, rax	       529	pull.c	ELSE_1	FUNCTION_24	IF_11
0x4000f8d	            0x7416	                            je 0x4000fa5	       529	pull.c	ELSE_1	FUNCTION_24	IF_11
0x4000f8f	    0x488b15000000	            mov rdx, qword [0x04000f96] 	       530	pull.c	ELSE_1	FUNCTION_24	CALL_16
0x4000f96	        0x488d45e0	                   lea rax, [rbp - 0x20]	       530	pull.c	ELSE_1	FUNCTION_24	CALL_16
0x4000f9a	          0x4889d6	                            mov rsi, rdx	       530	pull.c	ELSE_1	FUNCTION_24	CALL_16
0x4000f9d	          0x4889c7	                            mov rdi, rax	       530	pull.c	ELSE_1	FUNCTION_24	CALL_16
0x4000fa0	      0xe800000000	                          call 0x4000fa5	       530	pull.c	ELSE_1	FUNCTION_24	CALL_16
0x4000fa5	    0x488b05000000	            mov rax, qword [0x04000fac] 	       531	pull.c	ELSE_1	FUNCTION_24	IF_12
0x4000fac	          0x4885c0	                           test rax, rax	       531	pull.c	ELSE_1	FUNCTION_24	IF_12
0x4000faf	            0x7416	                            je 0x4000fc7	       531	pull.c	ELSE_1	FUNCTION_24	IF_12
0x4000fb1	    0x488b15000000	            mov rdx, qword [0x04000fb8] 	       532	pull.c	ELSE_1	FUNCTION_24	CALL_17
0x4000fb8	        0x488d45e0	                   lea rax, [rbp - 0x20]	       532	pull.c	ELSE_1	FUNCTION_24	CALL_17
0x4000fbc	          0x4889d6	                            mov rsi, rdx	       532	pull.c	ELSE_1	FUNCTION_24	CALL_17
0x4000fbf	          0x4889c7	                            mov rdi, rax	       532	pull.c	ELSE_1	FUNCTION_24	CALL_17
0x4000fc2	      0xe800000000	                          call 0x4000fc7	       532	pull.c	ELSE_1	FUNCTION_24	CALL_17
0x4000fc7	    0x488b05000000	            mov rax, qword [0x04000fce] 	       533	pull.c	ELSE_1	FUNCTION_24	IF_13
0x4000fce	          0x4885c0	                           test rax, rax	       533	pull.c	ELSE_1	FUNCTION_24	IF_13
0x4000fd1	            0x7416	                            je 0x4000fe9	       533	pull.c	ELSE_1	FUNCTION_24	IF_13
0x4000fd3	    0x488b15000000	            mov rdx, qword [0x04000fda] 	       534	pull.c	ELSE_1	FUNCTION_24	CALL_18
0x4000fda	        0x488d45e0	                   lea rax, [rbp - 0x20]	       534	pull.c	ELSE_1	FUNCTION_24	CALL_18
0x4000fde	          0x4889d6	                            mov rsi, rdx	       534	pull.c	ELSE_1	FUNCTION_24	CALL_18
0x4000fe1	          0x4889c7	                            mov rdi, rax	       534	pull.c	ELSE_1	FUNCTION_24	CALL_18
0x4000fe4	      0xe800000000	                          call 0x4000fe9	       534	pull.c	ELSE_1	FUNCTION_24	CALL_18
0x4000fe9	    0x488b05000000	            mov rax, qword [0x04000ff0] 	       535	pull.c	ELSE_1	FUNCTION_24	IF_14
0x4000ff0	          0x4885c0	                           test rax, rax	       535	pull.c	ELSE_1	FUNCTION_24	IF_14
0x4000ff3	            0x7416	                            je 0x400100b	       535	pull.c	ELSE_1	FUNCTION_24	IF_14
0x4000ff5	    0x488b15000000	            mov rdx, qword [0x04000ffc] 	       536	pull.c	ELSE_1	FUNCTION_24	CALL_19
0x4000ffc	        0x488d45e0	                   lea rax, [rbp - 0x20]	       536	pull.c	ELSE_1	FUNCTION_24	CALL_19
0x4001000	          0x4889d6	                            mov rsi, rdx	       536	pull.c	ELSE_1	FUNCTION_24	CALL_19
0x4001003	          0x4889c7	                            mov rdi, rax	       536	pull.c	ELSE_1	FUNCTION_24	CALL_19
0x4001006	      0xe800000000	                          call 0x400100b	       536	pull.c	ELSE_1	FUNCTION_24	CALL_19
0x400100b	    0x488b05000000	            mov rax, qword [0x04001012] 	       537	pull.c	ELSE_1	FUNCTION_24	IF_15
0x4001012	          0x4885c0	                           test rax, rax	       537	pull.c	ELSE_1	FUNCTION_24	IF_15
0x4001015	            0x7416	                            je 0x400102d	       537	pull.c	ELSE_1	FUNCTION_24	IF_15
0x4001017	    0x488b15000000	            mov rdx, qword [0x0400101e] 	       538	pull.c	ELSE_1	FUNCTION_24	CALL_20
0x400101e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       538	pull.c	ELSE_1	FUNCTION_24	CALL_20
0x4001022	          0x4889d6	                            mov rsi, rdx	       538	pull.c	ELSE_1	FUNCTION_24	CALL_20
0x4001025	          0x4889c7	                            mov rdi, rax	       538	pull.c	ELSE_1	FUNCTION_24	CALL_20
0x4001028	      0xe800000000	                          call 0x400102d	       538	pull.c	ELSE_1	FUNCTION_24	CALL_20
0x400102d	    0x488b05000000	            mov rax, qword [0x04001034] 	       539	pull.c	ELSE_1	FUNCTION_24	IF_16
0x4001034	          0x4885c0	                           test rax, rax	       539	pull.c	ELSE_1	FUNCTION_24	IF_16
0x4001037	            0x7416	                            je 0x400104f	       539	pull.c	ELSE_1	FUNCTION_24	IF_16
0x4001039	    0x488b15000000	            mov rdx, qword [0x04001040] 	       540	pull.c	ELSE_1	FUNCTION_24	CALL_21
0x4001040	        0x488d45e0	                   lea rax, [rbp - 0x20]	       540	pull.c	ELSE_1	FUNCTION_24	CALL_21
0x4001044	          0x4889d6	                            mov rsi, rdx	       540	pull.c	ELSE_1	FUNCTION_24	CALL_21
0x4001047	          0x4889c7	                            mov rdi, rax	       540	pull.c	ELSE_1	FUNCTION_24	CALL_21
0x400104a	      0xe800000000	                          call 0x400104f	       540	pull.c	ELSE_1	FUNCTION_24	CALL_21
0x400104f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       542	pull.c	ELSE_1	FUNCTION_24	IF_17
0x4001054	            0x7428	                            je 0x400107e	       542	pull.c	ELSE_1	FUNCTION_24	IF_17
0x4001056	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       543	pull.c	ELSE_1	FUNCTION_24	IF_17	CALL_22
0x400105a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       543	pull.c	ELSE_1	FUNCTION_24	IF_17	CALL_22
0x400105e	          0x4889d6	                            mov rsi, rdx	       543	pull.c	ELSE_1	FUNCTION_24	IF_17	CALL_22
0x4001061	          0x4889c7	                            mov rdi, rax	       543	pull.c	ELSE_1	FUNCTION_24	IF_17	CALL_22
0x4001064	      0xe800000000	                          call 0x4001069	       543	pull.c	ELSE_1	FUNCTION_24	IF_17	CALL_22
0x4001069	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       544	pull.c	ELSE_1	FUNCTION_24	IF_17	CALL_23
0x400106d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       544	pull.c	ELSE_1	FUNCTION_24	IF_17	CALL_23
0x4001071	          0x4889d6	                            mov rsi, rdx	       544	pull.c	ELSE_1	FUNCTION_24	IF_17	CALL_23
0x4001074	          0x4889c7	                            mov rdi, rax	       544	pull.c	ELSE_1	FUNCTION_24	IF_17	CALL_23
0x4001077	      0xe800000000	                          call 0x400107c	       544	pull.c	ELSE_1	FUNCTION_24	IF_17	CALL_23
0x400107c	            0xeb1b	                           jmp 0x4001099	       544	pull.c	ELSE_1	FUNCTION_24	IF_17	CALL_23
0x400107e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       545	pull.c	ELSE_1	FUNCTION_24	IF_17
0x4001082	          0x488b00	                    mov rax, qword [rax]	       545	pull.c	ELSE_1	FUNCTION_24	IF_17
0x4001085	          0x4885c0	                           test rax, rax	       545	pull.c	ELSE_1	FUNCTION_24	IF_17
0x4001088	            0x740f	                            je 0x4001099	       545	pull.c	ELSE_1	FUNCTION_24	IF_17
0x400108a	      0xbf00000000	                              mov edi, 0	       546	pull.c	FUNCTION_24	ELSE_1	CALL_24
0x400108f	      0xb800000000	                              mov eax, 0	       546	pull.c	FUNCTION_24	ELSE_1	CALL_24
0x4001094	      0xe800000000	                          call 0x4001099	       546	pull.c	FUNCTION_24	ELSE_1	CALL_24
0x4001099	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       547	pull.c	FUNCTION_24	ELSE_1	CALL_25
0x400109d	      0xbe02000000	                              mov esi, 2	       547	pull.c	FUNCTION_24	ELSE_1	CALL_25
0x40010a2	          0x4889c7	                            mov rdi, rax	       547	pull.c	FUNCTION_24	ELSE_1	CALL_25
0x40010a5	      0xe800000000	                          call 0x40010aa	       547	pull.c	FUNCTION_24	ELSE_1	CALL_25
0x40010aa	          0x8945dc	             mov dword [rbp - 0x24], eax	       547	pull.c	FUNCTION_24	ELSE_1	CALL_25
0x40010ad	        0x488d45e0	                   lea rax, [rbp - 0x20]	       548	pull.c	FUNCTION_24	ELSE_1	CALL_26
0x40010b1	          0x4889c7	                            mov rdi, rax	       548	pull.c	FUNCTION_24	ELSE_1	CALL_26
0x40010b4	      0xe800000000	                          call 0x40010b9	       548	pull.c	FUNCTION_24	ELSE_1	CALL_26
0x40010b9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       549	pull.c	FUNCTION_24	ELSE_1
0x40010bc	        0x488b4df8	                mov rcx, qword [rbp - 8]	       550	pull.c	FUNCTION_24	ELSE_1
0x40010c0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       550	pull.c	FUNCTION_24	ELSE_1
0x40010c9	            0x7405	                            je 0x40010d0	       550	pull.c	FUNCTION_24	ELSE_1
0x40010cb	      0xe800000000	                          call 0x40010d0	       550	pull.c	FUNCTION_24	ELSE_1
0x40010d0	              0xc9	                                   leave	       550	pull.c	FUNCTION_24	ELSE_1
0x40010d1	              0xc3	                                     ret	       550	pull.c	FUNCTION_24	ELSE_1
xstrdup_or_null	functions,0:CALL,1:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0:FOR,0	13
0x40000a1	              0x55	                                push rbp	       923	git-compat-util.h	FUNCTION_80
0x40000a2	          0x4889e5	                            mov rbp, rsp	       923	git-compat-util.h	FUNCTION_80
0x40000a5	        0x4883ec10	                           sub rsp, 0x10	       923	git-compat-util.h	FUNCTION_80
0x40000a9	        0x48897df8	                mov qword [rbp - 8], rdi	       923	git-compat-util.h	FUNCTION_80
0x40000ad	      0x48837df800	                  cmp qword [rbp - 8], 0	       924	git-compat-util.h	FUNCTION_80	CALL_1
0x40000b2	            0x740e	                            je 0x40000c2	       924	git-compat-util.h	FUNCTION_80	CALL_1
0x40000b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	git-compat-util.h	FUNCTION_80	CALL_1
0x40000b8	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_80	CALL_1
0x40000bb	      0xe800000000	                          call 0x40000c0	       924	git-compat-util.h	FUNCTION_80	CALL_1
0x40000c0	            0xeb05	                           jmp 0x40000c7	       924	git-compat-util.h	FUNCTION_80	CALL_1
0x40000c2	      0xb800000000	                              mov eax, 0	       924	git-compat-util.h	FUNCTION_80	CALL_1
0x40000c7	              0xc9	                                   leave	       925	git-compat-util.h	FUNCTION_80
0x40000c8	              0xc3	                                     ret	       925	git-compat-util.h	FUNCTION_80
run_merge	functions,0:CALL,18:ELSE,0:IF,11:SWITCH,0:WHILE,0:DO,0:FOR,0	134
0x40012ad	              0x55	                                push rbp	       603	pull.c	FUNCTION_28
0x40012ae	          0x4889e5	                            mov rbp, rsp	       603	pull.c	FUNCTION_28
0x40012b1	        0x4883ec30	                           sub rsp, 0x30	       603	pull.c	FUNCTION_28
0x40012b5	    0x64488b042528	                mov rax, qword fs:[0x28]	       603	pull.c	FUNCTION_28
0x40012be	        0x488945f8	                mov qword [rbp - 8], rax	       603	pull.c	FUNCTION_28
0x40012c2	            0x31c0	                            xor eax, eax	       603	pull.c	FUNCTION_28
0x40012c4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       605	pull.c	FUNCTION_28
0x40012cc	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       605	pull.c	FUNCTION_28
0x40012d3	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       605	pull.c	FUNCTION_28
0x40012da	        0x488d45e0	                   lea rax, [rbp - 0x20]	       607	pull.c	FUNCTION_28	CALL_1
0x40012de	      0xba00000000	                              mov edx, 0	       607	pull.c	FUNCTION_28	CALL_1
0x40012e3	      0xbe00000000	                              mov esi, 0	       607	pull.c	FUNCTION_28	CALL_1
0x40012e8	          0x4889c7	                            mov rdi, rax	       607	pull.c	FUNCTION_28	CALL_1
0x40012eb	      0xb800000000	                              mov eax, 0	       607	pull.c	FUNCTION_28	CALL_1
0x40012f0	      0xe800000000	                          call 0x40012f5	       607	pull.c	FUNCTION_28	CALL_1
0x40012f5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       610	pull.c	FUNCTION_28	CALL_2
0x40012f9	          0x4889c7	                            mov rdi, rax	       610	pull.c	FUNCTION_28	CALL_2
0x40012fc	      0xe867f1ffff	            call sym.argv_push_verbosity	       610	pull.c	FUNCTION_28	CALL_2
0x4001301	    0x488b05000000	            mov rax, qword [0x04001308] 	       611	pull.c	FUNCTION_28	IF_1
0x4001308	          0x4885c0	                           test rax, rax	       611	pull.c	FUNCTION_28	IF_1
0x400130b	            0x7416	                            je 0x4001323	       611	pull.c	FUNCTION_28	IF_1
0x400130d	    0x488b15000000	            mov rdx, qword [0x04001314] 	       612	pull.c	FUNCTION_28	CALL_3
0x4001314	        0x488d45e0	                   lea rax, [rbp - 0x20]	       612	pull.c	FUNCTION_28	CALL_3
0x4001318	          0x4889d6	                            mov rsi, rdx	       612	pull.c	FUNCTION_28	CALL_3
0x400131b	          0x4889c7	                            mov rdi, rax	       612	pull.c	FUNCTION_28	CALL_3
0x400131e	      0xe800000000	                          call 0x4001323	       612	pull.c	FUNCTION_28	CALL_3
0x4001323	    0x488b05000000	            mov rax, qword [0x0400132a] 	       615	pull.c	FUNCTION_28	IF_2
0x400132a	          0x4885c0	                           test rax, rax	       615	pull.c	FUNCTION_28	IF_2
0x400132d	            0x7416	                            je 0x4001345	       615	pull.c	FUNCTION_28	IF_2
0x400132f	    0x488b15000000	            mov rdx, qword [0x04001336] 	       616	pull.c	FUNCTION_28	CALL_4
0x4001336	        0x488d45e0	                   lea rax, [rbp - 0x20]	       616	pull.c	FUNCTION_28	CALL_4
0x400133a	          0x4889d6	                            mov rsi, rdx	       616	pull.c	FUNCTION_28	CALL_4
0x400133d	          0x4889c7	                            mov rdi, rax	       616	pull.c	FUNCTION_28	CALL_4
0x4001340	      0xe800000000	                          call 0x4001345	       616	pull.c	FUNCTION_28	CALL_4
0x4001345	    0x488b05000000	            mov rax, qword [0x0400134c] 	       617	pull.c	FUNCTION_28	IF_3
0x400134c	          0x4885c0	                           test rax, rax	       617	pull.c	FUNCTION_28	IF_3
0x400134f	            0x7416	                            je 0x4001367	       617	pull.c	FUNCTION_28	IF_3
0x4001351	    0x488b15000000	            mov rdx, qword [0x04001358] 	       618	pull.c	FUNCTION_28	CALL_5
0x4001358	        0x488d45e0	                   lea rax, [rbp - 0x20]	       618	pull.c	FUNCTION_28	CALL_5
0x400135c	          0x4889d6	                            mov rsi, rdx	       618	pull.c	FUNCTION_28	CALL_5
0x400135f	          0x4889c7	                            mov rdi, rax	       618	pull.c	FUNCTION_28	CALL_5
0x4001362	      0xe800000000	                          call 0x4001367	       618	pull.c	FUNCTION_28	CALL_5
0x4001367	    0x488b05000000	            mov rax, qword [0x0400136e] 	       619	pull.c	FUNCTION_28	IF_4
0x400136e	          0x4885c0	                           test rax, rax	       619	pull.c	FUNCTION_28	IF_4
0x4001371	            0x7416	                            je 0x4001389	       619	pull.c	FUNCTION_28	IF_4
0x4001373	    0x488b15000000	            mov rdx, qword [0x0400137a] 	       620	pull.c	FUNCTION_28	CALL_6
0x400137a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       620	pull.c	FUNCTION_28	CALL_6
0x400137e	          0x4889d6	                            mov rsi, rdx	       620	pull.c	FUNCTION_28	CALL_6
0x4001381	          0x4889c7	                            mov rdi, rax	       620	pull.c	FUNCTION_28	CALL_6
0x4001384	      0xe800000000	                          call 0x4001389	       620	pull.c	FUNCTION_28	CALL_6
0x4001389	    0x488b05000000	            mov rax, qword [0x04001390] 	       621	pull.c	FUNCTION_28	IF_5
0x4001390	          0x4885c0	                           test rax, rax	       621	pull.c	FUNCTION_28	IF_5
0x4001393	            0x7416	                            je 0x40013ab	       621	pull.c	FUNCTION_28	IF_5
0x4001395	    0x488b15000000	            mov rdx, qword [0x0400139c] 	       622	pull.c	FUNCTION_28	CALL_7
0x400139c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       622	pull.c	FUNCTION_28	CALL_7
0x40013a0	          0x4889d6	                            mov rsi, rdx	       622	pull.c	FUNCTION_28	CALL_7
0x40013a3	          0x4889c7	                            mov rdi, rax	       622	pull.c	FUNCTION_28	CALL_7
0x40013a6	      0xe800000000	                          call 0x40013ab	       622	pull.c	FUNCTION_28	CALL_7
0x40013ab	    0x488b05000000	            mov rax, qword [0x040013b2] 	       623	pull.c	FUNCTION_28	IF_6
0x40013b2	          0x4885c0	                           test rax, rax	       623	pull.c	FUNCTION_28	IF_6
0x40013b5	            0x7416	                            je 0x40013cd	       623	pull.c	FUNCTION_28	IF_6
0x40013b7	    0x488b15000000	            mov rdx, qword [0x040013be] 	       624	pull.c	FUNCTION_28	CALL_8
0x40013be	        0x488d45e0	                   lea rax, [rbp - 0x20]	       624	pull.c	FUNCTION_28	CALL_8
0x40013c2	          0x4889d6	                            mov rsi, rdx	       624	pull.c	FUNCTION_28	CALL_8
0x40013c5	          0x4889c7	                            mov rdi, rax	       624	pull.c	FUNCTION_28	CALL_8
0x40013c8	      0xe800000000	                          call 0x40013cd	       624	pull.c	FUNCTION_28	CALL_8
0x40013cd	    0x488b05000000	            mov rax, qword [0x040013d4] 	       625	pull.c	FUNCTION_28	IF_7
0x40013d4	          0x4885c0	                           test rax, rax	       625	pull.c	FUNCTION_28	IF_7
0x40013d7	            0x7416	                            je 0x40013ef	       625	pull.c	FUNCTION_28	IF_7
0x40013d9	    0x488b15000000	            mov rdx, qword [0x040013e0] 	       626	pull.c	FUNCTION_28	CALL_9
0x40013e0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       626	pull.c	FUNCTION_28	CALL_9
0x40013e4	          0x4889d6	                            mov rsi, rdx	       626	pull.c	FUNCTION_28	CALL_9
0x40013e7	          0x4889c7	                            mov rdi, rax	       626	pull.c	FUNCTION_28	CALL_9
0x40013ea	      0xe800000000	                          call 0x40013ef	       626	pull.c	FUNCTION_28	CALL_9
0x40013ef	    0x488b05000000	            mov rax, qword [0x040013f6] 	       627	pull.c	FUNCTION_28	IF_8
0x40013f6	          0x4885c0	                           test rax, rax	       627	pull.c	FUNCTION_28	IF_8
0x40013f9	            0x7416	                            je 0x4001411	       627	pull.c	FUNCTION_28	IF_8
0x40013fb	    0x488b15000000	            mov rdx, qword [0x04001402] 	       628	pull.c	FUNCTION_28	CALL_10
0x4001402	        0x488d45e0	                   lea rax, [rbp - 0x20]	       628	pull.c	FUNCTION_28	CALL_10
0x4001406	          0x4889d6	                            mov rsi, rdx	       628	pull.c	FUNCTION_28	CALL_10
0x4001409	          0x4889c7	                            mov rdi, rax	       628	pull.c	FUNCTION_28	CALL_10
0x400140c	      0xe800000000	                          call 0x4001411	       628	pull.c	FUNCTION_28	CALL_10
0x4001411	    0x488b05000000	            mov rax, qword [0x04001418] 	       629	pull.c	FUNCTION_28	IF_9
0x4001418	          0x4885c0	                           test rax, rax	       629	pull.c	FUNCTION_28	IF_9
0x400141b	            0x7416	                            je 0x4001433	       629	pull.c	FUNCTION_28	IF_9
0x400141d	    0x488b15000000	            mov rdx, qword [0x04001424] 	       630	pull.c	FUNCTION_28	CALL_11
0x4001424	        0x488d45e0	                   lea rax, [rbp - 0x20]	       630	pull.c	FUNCTION_28	CALL_11
0x4001428	          0x4889d6	                            mov rsi, rdx	       630	pull.c	FUNCTION_28	CALL_11
0x400142b	          0x4889c7	                            mov rdi, rax	       630	pull.c	FUNCTION_28	CALL_11
0x400142e	      0xe800000000	                          call 0x4001433	       630	pull.c	FUNCTION_28	CALL_11
0x4001433	    0x488b15000000	            mov rdx, qword [0x0400143a] 	       631	pull.c	FUNCTION_28	CALL_12
0x400143a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       631	pull.c	FUNCTION_28	CALL_12
0x400143e	          0x4889d6	                            mov rsi, rdx	       631	pull.c	FUNCTION_28	CALL_12
0x4001441	          0x4889c7	                            mov rdi, rax	       631	pull.c	FUNCTION_28	CALL_12
0x4001444	      0xe800000000	                          call 0x4001449	       631	pull.c	FUNCTION_28	CALL_12
0x4001449	    0x488b15000000	            mov rdx, qword [0x04001450] 	       632	pull.c	FUNCTION_28	CALL_13
0x4001450	        0x488d45e0	                   lea rax, [rbp - 0x20]	       632	pull.c	FUNCTION_28	CALL_13
0x4001454	          0x4889d6	                            mov rsi, rdx	       632	pull.c	FUNCTION_28	CALL_13
0x4001457	          0x4889c7	                            mov rdi, rax	       632	pull.c	FUNCTION_28	CALL_13
0x400145a	      0xe800000000	                          call 0x400145f	       632	pull.c	FUNCTION_28	CALL_13
0x400145f	    0x488b05000000	            mov rax, qword [0x04001466] 	       633	pull.c	FUNCTION_28	IF_10
0x4001466	          0x4885c0	                           test rax, rax	       633	pull.c	FUNCTION_28	IF_10
0x4001469	            0x7416	                            je 0x4001481	       633	pull.c	FUNCTION_28	IF_10
0x400146b	    0x488b15000000	            mov rdx, qword [0x04001472] 	       634	pull.c	FUNCTION_28	CALL_14
0x4001472	        0x488d45e0	                   lea rax, [rbp - 0x20]	       634	pull.c	FUNCTION_28	CALL_14
0x4001476	          0x4889d6	                            mov rsi, rdx	       634	pull.c	FUNCTION_28	CALL_14
0x4001479	          0x4889c7	                            mov rdi, rax	       634	pull.c	FUNCTION_28	CALL_14
0x400147c	      0xe800000000	                          call 0x4001481	       634	pull.c	FUNCTION_28	CALL_14
0x4001481	    0x8b0500000000	            mov eax, dword [0x04001487] 	       635	pull.c	FUNCTION_28	IF_11
0x4001487	            0x85c0	                           test eax, eax	       635	pull.c	FUNCTION_28	IF_11
0x4001489	            0x7e11	                           jle 0x400149c	       635	pull.c	FUNCTION_28	IF_11
0x400148b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       636	pull.c	FUNCTION_28	CALL_15
0x400148f	      0xbe00000000	                              mov esi, 0	       636	pull.c	FUNCTION_28	CALL_15
0x4001494	          0x4889c7	                            mov rdi, rax	       636	pull.c	FUNCTION_28	CALL_15
0x4001497	      0xe800000000	                          call 0x400149c	       636	pull.c	FUNCTION_28	CALL_15
0x400149c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       638	pull.c	FUNCTION_28	CALL_16
0x40014a0	      0xbe00000000	                              mov esi, 0	       638	pull.c	FUNCTION_28	CALL_16
0x40014a5	          0x4889c7	                            mov rdi, rax	       638	pull.c	FUNCTION_28	CALL_16
0x40014a8	      0xe800000000	                          call 0x40014ad	       638	pull.c	FUNCTION_28	CALL_16
0x40014ad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       639	pull.c	FUNCTION_28	CALL_17
0x40014b1	      0xbe02000000	                              mov esi, 2	       639	pull.c	FUNCTION_28	CALL_17
0x40014b6	          0x4889c7	                            mov rdi, rax	       639	pull.c	FUNCTION_28	CALL_17
0x40014b9	      0xe800000000	                          call 0x40014be	       639	pull.c	FUNCTION_28	CALL_17
0x40014be	          0x8945dc	             mov dword [rbp - 0x24], eax	       639	pull.c	FUNCTION_28	CALL_17
0x40014c1	        0x488d45e0	                   lea rax, [rbp - 0x20]	       640	pull.c	FUNCTION_28	CALL_18
0x40014c5	          0x4889c7	                            mov rdi, rax	       640	pull.c	FUNCTION_28	CALL_18
0x40014c8	      0xe800000000	                          call 0x40014cd	       640	pull.c	FUNCTION_28	CALL_18
0x40014cd	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       641	pull.c	FUNCTION_28
0x40014d0	        0x488b4df8	                mov rcx, qword [rbp - 8]	       642	pull.c	FUNCTION_28
0x40014d4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       642	pull.c	FUNCTION_28
0x40014dd	            0x7405	                            je 0x40014e4	       642	pull.c	FUNCTION_28
0x40014df	      0xe800000000	                          call 0x40014e4	       642	pull.c	FUNCTION_28
0x40014e4	              0xc9	                                   leave	       642	pull.c	FUNCTION_28
0x40014e5	              0xc3	                                     ret	       642	pull.c	FUNCTION_28
rebase_submodules	functions,0:CALL,3:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0:FOR,0	42
0x400114b	              0x55	                                push rbp	       574	pull.c	FUNCTION_26
0x400114c	          0x4889e5	                            mov rbp, rsp	       574	pull.c	FUNCTION_26
0x400114f	        0x4883ec70	                           sub rsp, 0x70	       574	pull.c	FUNCTION_26
0x4001153	    0x64488b042528	                mov rax, qword fs:[0x28]	       574	pull.c	FUNCTION_26
0x400115c	        0x488945f8	                mov qword [rbp - 8], rax	       574	pull.c	FUNCTION_26
0x4001160	            0x31c0	                            xor eax, eax	       574	pull.c	FUNCTION_26
0x4001162	        0x488d5590	                   lea rdx, [rbp - 0x70]	       575	pull.c	FUNCTION_26
0x4001166	      0xb800000000	                              mov eax, 0	       575	pull.c	FUNCTION_26
0x400116b	      0xb90c000000	                            mov ecx, 0xc	       575	pull.c	FUNCTION_26
0x4001170	          0x4889d7	                            mov rdi, rdx	       575	pull.c	FUNCTION_26
0x4001173	          0xf348ab	              rep stosq qword [rdi], rax	       575	pull.c	FUNCTION_26
0x4001176	    0x48c745980000	               mov qword [rbp - 0x68], 0	       575	pull.c	FUNCTION_26
0x400117e	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       575	pull.c	FUNCTION_26
0x4001186	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       577	pull.c	FUNCTION_26
0x400118a	          0x83c808	                               or eax, 8	       577	pull.c	FUNCTION_26
0x400118d	          0x8845d8	               mov byte [rbp - 0x28], al	       577	pull.c	FUNCTION_26
0x4001190	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       578	pull.c	FUNCTION_26
0x4001194	          0x83c801	                               or eax, 1	       578	pull.c	FUNCTION_26
0x4001197	          0x8845d8	               mov byte [rbp - 0x28], al	       578	pull.c	FUNCTION_26
0x400119a	        0x488d4590	                   lea rax, [rbp - 0x70]	       579	pull.c	FUNCTION_26	CALL_1
0x400119e	        0x4883c008	                              add rax, 8	       579	pull.c	FUNCTION_26	CALL_1
0x40011a2	    0x41b900000000	                              mov r9d, 0	       579	pull.c	FUNCTION_26	CALL_1
0x40011a8	    0x41b800000000	                              mov r8d, 0	       579	pull.c	FUNCTION_26	CALL_1
0x40011ae	      0xb900000000	                              mov ecx, 0	       579	pull.c	FUNCTION_26	CALL_1
0x40011b3	      0xba00000000	                              mov edx, 0	       579	pull.c	FUNCTION_26	CALL_1
0x40011b8	      0xbe00000000	                              mov esi, 0	       579	pull.c	FUNCTION_26	CALL_1
0x40011bd	          0x4889c7	                            mov rdi, rax	       579	pull.c	FUNCTION_26	CALL_1
0x40011c0	      0xb800000000	                              mov eax, 0	       579	pull.c	FUNCTION_26	CALL_1
0x40011c5	      0xe800000000	                          call 0x40011ca	       579	pull.c	FUNCTION_26	CALL_1
0x40011ca	        0x488d4590	                   lea rax, [rbp - 0x70]	       581	pull.c	FUNCTION_26	CALL_2
0x40011ce	        0x4883c008	                              add rax, 8	       581	pull.c	FUNCTION_26	CALL_2
0x40011d2	          0x4889c7	                            mov rdi, rax	       581	pull.c	FUNCTION_26	CALL_2
0x40011d5	      0xe88ef2ffff	            call sym.argv_push_verbosity	       581	pull.c	FUNCTION_26	CALL_2
0x40011da	        0x488d4590	                   lea rax, [rbp - 0x70]	       583	pull.c	FUNCTION_26	CALL_3
0x40011de	          0x4889c7	                            mov rdi, rax	       583	pull.c	FUNCTION_26	CALL_3
0x40011e1	      0xe800000000	                          call 0x40011e6	       583	pull.c	FUNCTION_26	CALL_3
0x40011e6	        0x488b75f8	                mov rsi, qword [rbp - 8]	       584	pull.c	FUNCTION_26
0x40011ea	    0x644833342528	                xor rsi, qword fs:[0x28]	       584	pull.c	FUNCTION_26
0x40011f3	            0x7405	                            je 0x40011fa	       584	pull.c	FUNCTION_26
0x40011f5	      0xe800000000	                          call 0x40011fa	       584	pull.c	FUNCTION_26
0x40011fa	              0xc9	                                   leave	       584	pull.c	FUNCTION_26
0x40011fb	              0xc3	                                     ret	       584	pull.c	FUNCTION_26
oidcmp	functions,0:CALL,1:ELSE,0:IF,0:SWITCH,0:WHILE,0:DO,0:FOR,0	12
0x40001f8	              0x55	                                push rbp	       979	cache.h	FUNCTION_43
0x40001f9	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_43
0x40001fc	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_43
0x4000200	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_43
0x4000204	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_43
0x4000208	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_43	CALL_1
0x400020c	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_43	CALL_1
0x4000210	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_43	CALL_1
0x4000213	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_43	CALL_1
0x4000216	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_43	CALL_1
0x400021b	              0xc9	                                   leave	       981	cache.h	FUNCTION_43
0x400021c	              0xc3	                                     ret	       981	cache.h	FUNCTION_43
config_get_ff	functions,0:CALL,5:ELSE,0:IF,2:SWITCH,1:WHILE,0:DO,0:FOR,0	50
0x40005bc	              0x55	                                push rbp	       287	pull.c	FUNCTION_17
0x40005bd	          0x4889e5	                            mov rbp, rsp	       287	pull.c	FUNCTION_17
0x40005c0	              0x53	                                push rbx	       287	pull.c	FUNCTION_17
0x40005c1	        0x4883ec18	                           sub rsp, 0x18	       287	pull.c	FUNCTION_17
0x40005c5	    0x64488b042528	                mov rax, qword fs:[0x28]	       287	pull.c	FUNCTION_17
0x40005ce	        0x488945e8	             mov qword [rbp - 0x18], rax	       287	pull.c	FUNCTION_17
0x40005d2	            0x31c0	                            xor eax, eax	       287	pull.c	FUNCTION_17
0x40005d4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       290	pull.c	FUNCTION_17	IF_1	CALL_1
0x40005d8	          0x4889c6	                            mov rsi, rax	       290	pull.c	FUNCTION_17	IF_1	CALL_1
0x40005db	      0xbf00000000	                              mov edi, 0	       290	pull.c	FUNCTION_17	IF_1	CALL_1
0x40005e0	      0xe800000000	                          call 0x40005e5	       290	pull.c	FUNCTION_17	IF_1	CALL_1
0x40005e5	            0x85c0	                           test eax, eax	       290	pull.c	FUNCTION_17	IF_1	CALL_1
0x40005e7	            0x7407	                            je 0x40005f0	       290	pull.c	FUNCTION_17	IF_1	CALL_1
0x40005e9	      0xb800000000	                              mov eax, 0	       291	pull.c	FUNCTION_17	IF_1
0x40005ee	            0xeb5f	                           jmp 0x400064f	       291	pull.c	FUNCTION_17	IF_1
0x40005f0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       293	pull.c	FUNCTION_17	SWITCH_1	CALL_2
0x40005f4	          0x4889c7	                            mov rdi, rax	       293	pull.c	FUNCTION_17	SWITCH_1	CALL_2
0x40005f7	      0xe800000000	                          call 0x40005fc	       293	pull.c	FUNCTION_17	SWITCH_1	CALL_2
0x40005fc	            0x85c0	                           test eax, eax	       293	pull.c	FUNCTION_17	SWITCH_1	CALL_2
0x40005fe	            0x7407	                            je 0x4000607	       293	pull.c	FUNCTION_17	SWITCH_1	CALL_2
0x4000600	          0x83f801	                              cmp eax, 1	       293	pull.c	FUNCTION_17	SWITCH_1	CALL_2
0x4000603	            0x7409	                            je 0x400060e	       293	pull.c	FUNCTION_17	SWITCH_1	CALL_2
0x4000605	            0xeb0e	                           jmp 0x4000615	       293	pull.c	FUNCTION_17	SWITCH_1	CALL_2
0x4000607	      0xb800000000	                              mov eax, 0	       295	pull.c	FUNCTION_17	SWITCH_1
0x400060c	            0xeb41	                           jmp 0x400064f	       295	pull.c	FUNCTION_17	SWITCH_1
0x400060e	      0xb800000000	                              mov eax, 0	       297	pull.c	FUNCTION_17	SWITCH_1
0x4000613	            0xeb3a	                           jmp 0x400064f	       297	pull.c	FUNCTION_17	SWITCH_1
0x4000615	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       300	pull.c	FUNCTION_17	IF_2	CALL_3
0x4000619	      0xbe00000000	                              mov esi, 0	       300	pull.c	FUNCTION_17	IF_2	CALL_3
0x400061e	          0x4889c7	                            mov rdi, rax	       300	pull.c	FUNCTION_17	IF_2	CALL_3
0x4000621	      0xe800000000	                          call 0x4000626	       300	pull.c	FUNCTION_17	IF_2	CALL_3
0x4000626	            0x85c0	                           test eax, eax	       300	pull.c	FUNCTION_17	IF_2	CALL_3
0x4000628	            0x7507	                           jne 0x4000631	       300	pull.c	FUNCTION_17	IF_2	CALL_3
0x400062a	      0xb800000000	                              mov eax, 0	       301	pull.c	FUNCTION_17	IF_2
0x400062f	            0xeb1e	                           jmp 0x400064f	       301	pull.c	FUNCTION_17	IF_2
0x4000631	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       303	pull.c	FUNCTION_17	CALL_5
0x4000635	      0xbf00000000	                              mov edi, 0	       303	pull.c	FUNCTION_17	CALL_5
0x400063a	      0xe863fbffff	                               call sym.	       303	pull.c	FUNCTION_17	CALL_5
0x400063f	          0x4889de	                            mov rsi, rbx	       303	pull.c	FUNCTION_17	CALL_5
0x4000642	          0x4889c7	                            mov rdi, rax	       303	pull.c	FUNCTION_17	CALL_5
0x4000645	      0xb800000000	                              mov eax, 0	       303	pull.c	FUNCTION_17	CALL_5
0x400064a	      0xe800000000	                          call 0x400064f	       303	pull.c	FUNCTION_17	CALL_5
0x400064f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       304	pull.c	FUNCTION_17
0x4000653	    0x644833142528	                xor rdx, qword fs:[0x28]	       304	pull.c	FUNCTION_17
0x400065c	            0x7405	                            je 0x4000663	       304	pull.c	FUNCTION_17
0x400065e	      0xe800000000	                          call 0x4000663	       304	pull.c	FUNCTION_17
0x4000663	        0x4883c418	                           add rsp, 0x18	       304	pull.c	FUNCTION_17
0x4000667	              0x5b	                                 pop rbx	       304	pull.c	FUNCTION_17
0x4000668	              0x5d	                                 pop rbp	       304	pull.c	FUNCTION_17
0x4000669	              0xc3	                                     ret	       304	pull.c	FUNCTION_17
argv_push_force	functions,0:CALL,1:ELSE,0:IF,0:SWITCH,0:WHILE,1:DO,0:FOR,0	19
0x40004c3	              0x55	                                push rbp	       255	pull.c	FUNCTION_15
0x40004c4	          0x4889e5	                            mov rbp, rsp	       255	pull.c	FUNCTION_15
0x40004c7	        0x4883ec20	                           sub rsp, 0x20	       255	pull.c	FUNCTION_15
0x40004cb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       255	pull.c	FUNCTION_15
0x40004cf	    0x8b0500000000	            mov eax, dword [0x040004d5] 	       256	pull.c	FUNCTION_15
0x40004d5	          0x8945fc	                mov dword [rbp - 4], eax	       256	pull.c	FUNCTION_15
0x40004d8	            0xeb11	                           jmp 0x40004eb	       257	pull.c	FUNCTION_15	WHILE_1
0x40004da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       258	pull.c	FUNCTION_15	CALL_1
0x40004de	      0xbe00000000	                              mov esi, 0	       258	pull.c	FUNCTION_15	CALL_1
0x40004e3	          0x4889c7	                            mov rdi, rax	       258	pull.c	FUNCTION_15	CALL_1
0x40004e6	      0xe800000000	                          call 0x40004eb	       258	pull.c	FUNCTION_15	CALL_1
0x40004eb	          0x8b45fc	                mov eax, dword [rbp - 4]	       257	pull.c	FUNCTION_15	WHILE_1
0x40004ee	          0x8d50ff	                      lea edx, [rax - 1]	       257	pull.c	FUNCTION_15	WHILE_1
0x40004f1	          0x8955fc	                mov dword [rbp - 4], edx	       257	pull.c	FUNCTION_15	WHILE_1
0x40004f4	            0x85c0	                           test eax, eax	       257	pull.c	FUNCTION_15	WHILE_1
0x40004f6	            0x7fe2	                            jg 0x40004da	       257	pull.c	FUNCTION_15	WHILE_1
0x40004f8	              0x90	                                     nop	       259	pull.c	FUNCTION_15
0x40004f9	              0xc9	                                   leave	       259	pull.c	FUNCTION_15
0x40004fa	              0xc3	                                     ret	       259	pull.c	FUNCTION_15
git_pull_config	functions,0:CALL,5:ELSE,1:IF,2:SWITCH,0:WHILE,0:DO,0:FOR,0	47
0x400074a	              0x55	                                push rbp	       340	pull.c	FUNCTION_19
0x400074b	          0x4889e5	                            mov rbp, rsp	       340	pull.c	FUNCTION_19
0x400074e	        0x4883ec20	                           sub rsp, 0x20	       340	pull.c	FUNCTION_19
0x4000752	        0x48897df8	                mov qword [rbp - 8], rdi	       340	pull.c	FUNCTION_19
0x4000756	        0x488975f0	             mov qword [rbp - 0x10], rsi	       340	pull.c	FUNCTION_19
0x400075a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       340	pull.c	FUNCTION_19
0x400075e	        0x488b45f8	                mov rax, qword [rbp - 8]	       341	pull.c	FUNCTION_19	IF_1	CALL_1
0x4000762	      0xbe00000000	                              mov esi, 0	       341	pull.c	FUNCTION_19	IF_1	CALL_1
0x4000767	          0x4889c7	                            mov rdi, rax	       341	pull.c	FUNCTION_19	IF_1	CALL_1
0x400076a	      0xe800000000	                          call 0x400076f	       341	pull.c	FUNCTION_19	IF_1	CALL_1
0x400076f	            0x85c0	                           test eax, eax	       341	pull.c	FUNCTION_19	IF_1	CALL_1
0x4000771	            0x7520	                           jne 0x4000793	       341	pull.c	FUNCTION_19	IF_1	CALL_1
0x4000773	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       342	pull.c	FUNCTION_19	IF_1	CALL_2
0x4000777	        0x488b45f8	                mov rax, qword [rbp - 8]	       342	pull.c	FUNCTION_19	IF_1	CALL_2
0x400077b	          0x4889d6	                            mov rsi, rdx	       342	pull.c	FUNCTION_19	IF_1	CALL_2
0x400077e	          0x4889c7	                            mov rdi, rax	       342	pull.c	FUNCTION_19	IF_1	CALL_2
0x4000781	      0xe800000000	                          call 0x4000786	       342	pull.c	FUNCTION_19	IF_1	CALL_2
0x4000786	    0x890500000000	            mov dword [0x0400078c], eax 	       342	pull.c	FUNCTION_19	IF_1	CALL_2
0x400078c	      0xb800000000	                              mov eax, 0	       343	pull.c	FUNCTION_19	IF_1
0x4000791	            0xeb5c	                           jmp 0x40007ef	       343	pull.c	FUNCTION_19	IF_1
0x4000793	        0x488b45f8	                mov rax, qword [rbp - 8]	       344	pull.c	FUNCTION_19	ELSE_1	IF_2	CALL_3
0x4000797	      0xbe00000000	                              mov esi, 0	       344	pull.c	FUNCTION_19	ELSE_1	IF_2	CALL_3
0x400079c	          0x4889c7	                            mov rdi, rax	       344	pull.c	FUNCTION_19	ELSE_1	IF_2	CALL_3
0x400079f	      0xe800000000	                          call 0x40007a4	       344	pull.c	FUNCTION_19	ELSE_1	IF_2	CALL_3
0x40007a4	            0x85c0	                           test eax, eax	       344	pull.c	FUNCTION_19	ELSE_1	IF_2	CALL_3
0x40007a6	            0x7530	                           jne 0x40007d8	       344	pull.c	FUNCTION_19	ELSE_1	IF_2	CALL_3
0x40007a8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       345	pull.c	FUNCTION_19	ELSE_1	IF_2	CALL_4
0x40007ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       345	pull.c	FUNCTION_19	ELSE_1	IF_2	CALL_4
0x40007b0	          0x4889d6	                            mov rsi, rdx	       345	pull.c	FUNCTION_19	ELSE_1	IF_2	CALL_4
0x40007b3	          0x4889c7	                            mov rdi, rax	       345	pull.c	FUNCTION_19	ELSE_1	IF_2	CALL_4
0x40007b6	      0xe800000000	                          call 0x40007bb	       345	pull.c	FUNCTION_19	ELSE_1	IF_2	CALL_4
0x40007bb	            0x85c0	                           test eax, eax	       346	pull.c	FUNCTION_19	ELSE_1	IF_2
0x40007bd	            0x7407	                            je 0x40007c6	       346	pull.c	FUNCTION_19	ELSE_1	IF_2
0x40007bf	      0xb802000000	                              mov eax, 2	       346	pull.c	FUNCTION_19	ELSE_1	IF_2
0x40007c4	            0xeb05	                           jmp 0x40007cb	       346	pull.c	FUNCTION_19	ELSE_1	IF_2
0x40007c6	      0xb800000000	                              mov eax, 0	       346	pull.c	FUNCTION_19	ELSE_1	IF_2
0x40007cb	    0x890500000000	            mov dword [0x040007d1], eax 	       345	pull.c	FUNCTION_19	ELSE_1	IF_2	CALL_4
0x40007d1	      0xb800000000	                              mov eax, 0	       347	pull.c	FUNCTION_19	ELSE_1	IF_2
0x40007d6	            0xeb17	                           jmp 0x40007ef	       347	pull.c	FUNCTION_19	ELSE_1	IF_2
0x40007d8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       349	pull.c	FUNCTION_19	CALL_5
0x40007dc	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       349	pull.c	FUNCTION_19	CALL_5
0x40007e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       349	pull.c	FUNCTION_19	CALL_5
0x40007e4	          0x4889ce	                            mov rsi, rcx	       349	pull.c	FUNCTION_19	CALL_5
0x40007e7	          0x4889c7	                            mov rdi, rax	       349	pull.c	FUNCTION_19	CALL_5
0x40007ea	      0xe800000000	                          call 0x40007ef	       349	pull.c	FUNCTION_19	CALL_5
0x40007ef	              0xc9	                                   leave	       350	pull.c	FUNCTION_19
0x40007f0	              0xc3	                                     ret	       350	pull.c	FUNCTION_19
