read_tree_recursive	CALL,3:ELSE,0:IF,0:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	45
0x4000812	              0x55	                                push rbp	       134	tree.c	FUNCTION_5
0x4000813	          0x4889e5	                            mov rbp, rsp	       134	tree.c	FUNCTION_5
0x4000816	        0x4883ec60	                           sub rsp, 0x60	       134	tree.c	FUNCTION_5
0x400081a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       134	tree.c	FUNCTION_5
0x400081e	        0x488975c0	             mov qword [rbp - 0x40], rsi	       134	tree.c	FUNCTION_5
0x4000822	          0x8955bc	             mov dword [rbp - 0x44], edx	       134	tree.c	FUNCTION_5
0x4000825	          0x894db8	             mov dword [rbp - 0x48], ecx	       134	tree.c	FUNCTION_5
0x4000828	        0x4c8945b0	              mov qword [rbp - 0x50], r8	       134	tree.c	FUNCTION_5
0x400082c	        0x4c894da8	              mov qword [rbp - 0x58], r9	       134	tree.c	FUNCTION_5
0x4000830	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       134	tree.c	FUNCTION_5
0x4000834	        0x488945a0	             mov qword [rbp - 0x60], rax	       134	tree.c	FUNCTION_5
0x4000838	    0x64488b042528	                mov rax, qword fs:[0x28]	       134	tree.c	FUNCTION_5
0x4000841	        0x488945f8	                mov qword [rbp - 8], rax	       134	tree.c	FUNCTION_5
0x4000845	            0x31c0	                            xor eax, eax	       134	tree.c	FUNCTION_5
0x4000847	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       135	tree.c	FUNCTION_5
0x400084f	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       135	tree.c	FUNCTION_5
0x4000857	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       135	tree.c	FUNCTION_5
0x400085f	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       138	tree.c	FUNCTION_5	CALL_1
0x4000862	          0x4863d0	                         movsxd rdx, eax	       138	tree.c	FUNCTION_5	CALL_1
0x4000865	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       138	tree.c	FUNCTION_5	CALL_1
0x4000869	        0x488d45e0	                   lea rax, [rbp - 0x20]	       138	tree.c	FUNCTION_5	CALL_1
0x400086d	          0x4889ce	                            mov rsi, rcx	       138	tree.c	FUNCTION_5	CALL_1
0x4000870	          0x4889c7	                            mov rdi, rax	       138	tree.c	FUNCTION_5	CALL_1
0x4000873	      0xe800000000	                          call 0x4000878	       138	tree.c	FUNCTION_5	CALL_1
0x4000878	        0x4c8b45a0	              mov r8, qword [rbp - 0x60]	       139	tree.c	FUNCTION_5	CALL_2
0x400087c	        0x488b7da8	             mov rdi, qword [rbp - 0x58]	       139	tree.c	FUNCTION_5	CALL_2
0x4000880	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       139	tree.c	FUNCTION_5	CALL_2
0x4000884	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       139	tree.c	FUNCTION_5	CALL_2
0x4000887	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       139	tree.c	FUNCTION_5	CALL_2
0x400088b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       139	tree.c	FUNCTION_5	CALL_2
0x400088f	          0x4d89c1	                              mov r9, r8	       139	tree.c	FUNCTION_5	CALL_2
0x4000892	          0x4989f8	                             mov r8, rdi	       139	tree.c	FUNCTION_5	CALL_2
0x4000895	          0x4889c7	                            mov rdi, rax	       139	tree.c	FUNCTION_5	CALL_2
0x4000898	      0xe854fcffff	                    call sym.read_tree_1	       139	tree.c	FUNCTION_5	CALL_2
0x400089d	          0x8945dc	             mov dword [rbp - 0x24], eax	       139	tree.c	FUNCTION_5	CALL_2
0x40008a0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       140	tree.c	FUNCTION_5	CALL_3
0x40008a4	          0x4889c7	                            mov rdi, rax	       140	tree.c	FUNCTION_5	CALL_3
0x40008a7	      0xe800000000	                          call 0x40008ac	       140	tree.c	FUNCTION_5	CALL_3
0x40008ac	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       141	tree.c	FUNCTION_5
0x40008af	        0x488b75f8	                mov rsi, qword [rbp - 8]	       142	tree.c	FUNCTION_5
0x40008b3	    0x644833342528	                xor rsi, qword fs:[0x28]	       142	tree.c	FUNCTION_5
0x40008bc	            0x7405	                            je 0x40008c3	       142	tree.c	FUNCTION_5
0x40008be	      0xe800000000	                          call 0x40008c3	       142	tree.c	FUNCTION_5
0x40008c3	              0xc9	                                   leave	       142	tree.c	FUNCTION_5
0x40008c4	              0xc3	                                     ret	       142	tree.c	FUNCTION_5
create_ce_mode	CALL,2:ELSE,0:IF,2:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	28
0x40001d2	              0x55	                                push rbp	       255	cache.h	FUNCTION_15
0x40001d3	          0x4889e5	                            mov rbp, rsp	       255	cache.h	FUNCTION_15
0x40001d6	          0x897dfc	                mov dword [rbp - 4], edi	       255	cache.h	FUNCTION_15
0x40001d9	          0x8b45fc	                mov eax, dword [rbp - 4]	       256	cache.h	FUNCTION_15	IF_1	CALL_1
0x40001dc	      0x2500f00000	                         and eax, 0xf000	       256	cache.h	FUNCTION_15	IF_1	CALL_1
0x40001e1	      0x3d00a00000	                         cmp eax, 0xa000	       256	cache.h	FUNCTION_15	IF_1	CALL_1
0x40001e6	            0x7507	                           jne 0x40001ef	       256	cache.h	FUNCTION_15	IF_1	CALL_1
0x40001e8	      0xb800a00000	                         mov eax, 0xa000	       257	cache.h	FUNCTION_15	IF_1
0x40001ed	            0xeb3b	                           jmp 0x400022a	       257	cache.h	FUNCTION_15	IF_1
0x40001ef	          0x8b45fc	                mov eax, dword [rbp - 4]	       258	cache.h	FUNCTION_15	IF_2	CALL_2
0x40001f2	      0x2500f00000	                         and eax, 0xf000	       258	cache.h	FUNCTION_15	IF_2	CALL_2
0x40001f7	      0x3d00400000	                         cmp eax, 0x4000	       258	cache.h	FUNCTION_15	IF_2	CALL_2
0x40001fc	            0x740f	                            je 0x400020d	       258	cache.h	FUNCTION_15	IF_2	CALL_2
0x40001fe	          0x8b45fc	                mov eax, dword [rbp - 4]	       258	cache.h	FUNCTION_15	IF_2	CALL_2
0x4000201	      0x2500f00000	                         and eax, 0xf000	       258	cache.h	FUNCTION_15	IF_2	CALL_2
0x4000206	      0x3d00e00000	                         cmp eax, 0xe000	       258	cache.h	FUNCTION_15	IF_2	CALL_2
0x400020b	            0x7507	                           jne 0x4000214	       258	cache.h	FUNCTION_15	IF_2	CALL_2
0x400020d	      0xb800e00000	                         mov eax, 0xe000	       259	cache.h	FUNCTION_15	IF_2
0x4000212	            0xeb16	                           jmp 0x400022a	       259	cache.h	FUNCTION_15	IF_2
0x4000214	          0x8b45fc	                mov eax, dword [rbp - 4]	       260	cache.h	FUNCTION_15
0x4000217	          0x83e040	                           and eax, 0x40	       260	cache.h	FUNCTION_15
0x400021a	            0x85c0	                           test eax, eax	       260	cache.h	FUNCTION_15
0x400021c	            0x7407	                            je 0x4000225	       260	cache.h	FUNCTION_15
0x400021e	      0xb8ed810000	                         mov eax, 0x81ed	       260	cache.h	FUNCTION_15
0x4000223	            0xeb05	                           jmp 0x400022a	       260	cache.h	FUNCTION_15
0x4000225	      0xb8a4810000	                         mov eax, 0x81a4	       260	cache.h	FUNCTION_15
0x400022a	              0x5d	                                 pop rbp	       261	cache.h	FUNCTION_15
0x400022b	              0xc3	                                     ret	       261	cache.h	FUNCTION_15
parse_commit	CALL,1:ELSE,0:IF,0:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	10
0x40002f0	              0x55	                                push rbp	        74	commit.h	FUNCTION_40
0x40002f1	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_40
0x40002f4	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_40
0x40002f8	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_40
0x40002fc	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_40	CALL_1
0x4000300	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_40	CALL_1
0x4000305	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_40	CALL_1
0x4000308	      0xe800000000	                          call 0x400030d	        75	commit.h	FUNCTION_40	CALL_1
0x400030d	              0xc9	                                   leave	        76	commit.h	FUNCTION_40
0x400030e	              0xc3	                                     ret	        76	commit.h	FUNCTION_40
read_tree_1	CALL,21:ELSE,2:IF,9:DO,0:FOR,0:WHILE,1:SWITCH,1:functions,0	180
0x40004f1	              0x55	                                push rbp	        65	tree.c	FUNCTION_4
0x40004f2	          0x4889e5	                            mov rbp, rsp	        65	tree.c	FUNCTION_4
0x40004f5	            0x4154	                                push r12	        65	tree.c	FUNCTION_4
0x40004f7	              0x53	                                push rbx	        65	tree.c	FUNCTION_4
0x40004f8	    0x4881ecc00000	                           sub rsp, 0xc0	        65	tree.c	FUNCTION_4
0x40004ff	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	        65	tree.c	FUNCTION_4
0x4000506	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	        65	tree.c	FUNCTION_4
0x400050d	    0x89954cffffff	             mov dword [rbp - 0xb4], edx	        65	tree.c	FUNCTION_4
0x4000513	    0x48898d40ffff	             mov qword [rbp - 0xc0], rcx	        65	tree.c	FUNCTION_4
0x400051a	    0x4c898538ffff	              mov qword [rbp - 0xc8], r8	        65	tree.c	FUNCTION_4
0x4000521	    0x4c898d30ffff	              mov qword [rbp - 0xd0], r9	        65	tree.c	FUNCTION_4
0x4000528	    0x64488b042528	                mov rax, qword fs:[0x28]	        65	tree.c	FUNCTION_4
0x4000531	        0x488945e8	             mov qword [rbp - 0x18], rax	        65	tree.c	FUNCTION_4
0x4000535	            0x31c0	                            xor eax, eax	        65	tree.c	FUNCTION_4
0x4000537	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	        69	tree.c	FUNCTION_4
0x400053e	        0x488b4008	                mov rax, qword [rax + 8]	        69	tree.c	FUNCTION_4
0x4000542	    0x898570ffffff	             mov dword [rbp - 0x90], eax	        69	tree.c	FUNCTION_4
0x4000548	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	        70	tree.c	FUNCTION_4
0x4000552	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        72	tree.c	FUNCTION_4	IF_1	CALL_1
0x4000559	          0x4889c7	                            mov rdi, rax	        72	tree.c	FUNCTION_4	IF_1	CALL_1
0x400055c	      0xe84bfdffff	                     call sym.parse_tree	        72	tree.c	FUNCTION_4	IF_1	CALL_1
0x4000561	            0x85c0	                           test eax, eax	        72	tree.c	FUNCTION_4	IF_1	CALL_1
0x4000563	            0x740a	                            je 0x400056f	        72	tree.c	FUNCTION_4	IF_1	CALL_1
0x4000565	      0xb8ffffffff	                     mov eax, 0xffffffff	        73	tree.c	FUNCTION_4	IF_1
0x400056a	      0xe983020000	                           jmp 0x40007f2	        73	tree.c	FUNCTION_4	IF_1
0x400056f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        75	tree.c	FUNCTION_4	CALL_2
0x4000576	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        75	tree.c	FUNCTION_4	CALL_2
0x400057a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        75	tree.c	FUNCTION_4	CALL_2
0x4000581	        0x488b4818	            mov rcx, qword [rax + 0x18] 	        75	tree.c	FUNCTION_4	CALL_2
0x4000585	        0x488d45a0	                   lea rax, [rbp - 0x60]	        75	tree.c	FUNCTION_4	CALL_2
0x4000589	          0x4889ce	                            mov rsi, rcx	        75	tree.c	FUNCTION_4	CALL_2
0x400058c	          0x4889c7	                            mov rdi, rax	        75	tree.c	FUNCTION_4	CALL_2
0x400058f	      0xe800000000	                          call 0x4000594	        75	tree.c	FUNCTION_4	CALL_2
0x4000594	      0xe936020000	                           jmp 0x40007cf	        77	tree.c	FUNCTION_4	WHILE_1	CALL_3
0x4000599	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 2	        78	tree.c	FUNCTION_4	WHILE_1	IF_2
0x40005a0	            0x7443	                            je 0x40005e5	        78	tree.c	FUNCTION_4	WHILE_1	IF_2
0x40005a2	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	        79	tree.c	FUNCTION_4	WHILE_1	IF_2	CALL_4
0x40005a9	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	        79	tree.c	FUNCTION_4	WHILE_1	IF_2	CALL_4
0x40005b0	        0x488d4580	                   lea rax, [rbp - 0x80]	        79	tree.c	FUNCTION_4	WHILE_1	IF_2	CALL_4
0x40005b4	          0x4889d1	                            mov rcx, rdx	        79	tree.c	FUNCTION_4	WHILE_1	IF_2	CALL_4
0x40005b7	      0xba00000000	                              mov edx, 0	        79	tree.c	FUNCTION_4	WHILE_1	IF_2	CALL_4
0x40005bc	          0x4889c7	                            mov rdi, rax	        79	tree.c	FUNCTION_4	WHILE_1	IF_2	CALL_4
0x40005bf	      0xe800000000	                          call 0x40005c4	        79	tree.c	FUNCTION_4	WHILE_1	IF_2	CALL_4
0x40005c4	    0x89856cffffff	             mov dword [rbp - 0x94], eax	        79	tree.c	FUNCTION_4	WHILE_1	IF_2	CALL_4
0x40005ca	    0x83bd6cffffff	cmp dword [rbp - 0x94], 0xffffffffffffffff	        80	tree.c	FUNCTION_4	WHILE_1	IF_2	IF_3
0x40005d1	     0xf8415020000	                            je 0x40007ec	        80	tree.c	FUNCTION_4	WHILE_1	IF_2	IF_3
0x40005d7	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	        82	tree.c	FUNCTION_4	WHILE_1	IF_2	IF_4
0x40005de	            0x7505	                           jne 0x40005e5	        82	tree.c	FUNCTION_4	WHILE_1	IF_2	IF_4
0x40005e0	      0xe9ea010000	                           jmp 0x40007cf	        83	tree.c	FUNCTION_4	WHILE_1	IF_2	IF_4
0x40005e5	          0x8b4d90	             mov ecx, dword [rbp - 0x70]	        86	tree.c	FUNCTION_4	WHILE_1	SWITCH_1	CALL_5
0x40005e8	        0x488b5588	             mov rdx, qword [rbp - 0x78]	        86	tree.c	FUNCTION_4	WHILE_1	SWITCH_1	CALL_5
0x40005ec	        0x488b7d80	             mov rdi, qword [rbp - 0x80]	        86	tree.c	FUNCTION_4	WHILE_1	SWITCH_1	CALL_5
0x40005f0	    0x4c8b8d30ffff	              mov r9, qword [rbp - 0xd0]	        86	tree.c	FUNCTION_4	WHILE_1	SWITCH_1	CALL_5
0x40005f7	    0x448b854cffff	             mov r8d, dword [rbp - 0xb4]	        86	tree.c	FUNCTION_4	WHILE_1	SWITCH_1	CALL_5
0x40005fe	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	        86	tree.c	FUNCTION_4	WHILE_1	SWITCH_1	CALL_5
0x4000605	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        86	tree.c	FUNCTION_4	WHILE_1	SWITCH_1	CALL_5
0x400060c	            0xffd0	                                call rax	        86	tree.c	FUNCTION_4	WHILE_1	SWITCH_1	CALL_5
0x400060e	            0x85c0	                           test eax, eax	        86	tree.c	FUNCTION_4	WHILE_1	SWITCH_1	CALL_5
0x4000610	     0xf84b9010000	                            je 0x40007cf	        86	tree.c	FUNCTION_4	WHILE_1	SWITCH_1	CALL_5
0x4000616	          0x83f801	                              cmp eax, 1	        86	tree.c	FUNCTION_4	WHILE_1	SWITCH_1	CALL_5
0x4000619	            0x740a	                            je 0x4000625	        86	tree.c	FUNCTION_4	WHILE_1	SWITCH_1	CALL_5
0x400061b	      0xb8ffffffff	                     mov eax, 0xffffffff	        93	tree.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000620	      0xe9cd010000	                           jmp 0x40007f2	        93	tree.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000625	              0x90	                                     nop	        91	tree.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000626	          0x8b4590	             mov eax, dword [rbp - 0x70]	        96	tree.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x4000629	      0x2500f00000	                         and eax, 0xf000	        96	tree.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x400062e	      0x3d00400000	                         cmp eax, 0x4000	        96	tree.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x4000633	            0x7518	                           jne 0x400064d	        96	tree.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x4000635	        0x488b5580	             mov rdx, qword [rbp - 0x80]	        97	tree.c	FUNCTION_4	WHILE_1	CALL_7
0x4000639	        0x488d45d0	                   lea rax, [rbp - 0x30]	        97	tree.c	FUNCTION_4	WHILE_1	CALL_7
0x400063d	          0x4889d6	                            mov rsi, rdx	        97	tree.c	FUNCTION_4	WHILE_1	CALL_7
0x4000640	          0x4889c7	                            mov rdi, rax	        97	tree.c	FUNCTION_4	WHILE_1	CALL_7
0x4000643	      0xe80ffcffff	                         call sym.oidcpy	        97	tree.c	FUNCTION_4	WHILE_1	CALL_7
0x4000648	      0xe9ca000000	                           jmp 0x4000717	        97	tree.c	FUNCTION_4	WHILE_1	CALL_7
0x400064d	          0x8b4590	             mov eax, dword [rbp - 0x70]	        98	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6
0x4000650	      0x2500f00000	                         and eax, 0xf000	        98	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6
0x4000655	      0x3d00e00000	                         cmp eax, 0xe000	        98	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6
0x400065a	     0xf856f010000	                           jne 0x40007cf	        98	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6
0x4000660	        0x488b4580	             mov rax, qword [rbp - 0x80]	       101	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_8
0x4000664	          0x4889c7	                            mov rdi, rax	       101	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_8
0x4000667	      0xe800000000	                          call 0x400066c	       101	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_8
0x400066c	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       101	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_8
0x4000673	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       102	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_7
0x400067b	            0x7533	                           jne 0x40006b0	       102	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_7
0x400067d	        0x4c8b6588	             mov r12, qword [rbp - 0x78]	       103	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_7	CALL_9
0x4000681	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       103	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_7	CALL_9
0x4000688	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       103	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_7	CALL_9
0x400068c	        0x488b4580	             mov rax, qword [rbp - 0x80]	       103	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_7	CALL_9
0x4000690	          0x4889c7	                            mov rdi, rax	       103	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_7	CALL_9
0x4000693	      0xe800000000	                          call 0x4000698	       103	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_7	CALL_9
0x4000698	          0x4c89e1	                            mov rcx, r12	       103	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_7	CALL_9
0x400069b	          0x4889da	                            mov rdx, rbx	       103	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_7	CALL_9
0x400069e	          0x4889c6	                            mov rsi, rax	       103	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_7	CALL_9
0x40006a1	      0xbf00000000	                              mov edi, 0	       103	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_7	CALL_9
0x40006a6	      0xb800000000	                              mov eax, 0	       103	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_7	CALL_9
0x40006ab	      0xe800000000	                          call 0x40006b0	       103	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_7	CALL_9
0x40006b0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       107	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_11
0x40006b7	          0x4889c7	                            mov rdi, rax	       107	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_11
0x40006ba	      0xe831fcffff	                   call sym.parse_commit	       107	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_11
0x40006bf	            0x85c0	                           test eax, eax	       107	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_11
0x40006c1	            0x7433	                            je 0x40006f6	       107	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_11
0x40006c3	        0x4c8b6588	             mov r12, qword [rbp - 0x78]	       108	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_12
0x40006c7	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       108	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_12
0x40006ce	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       108	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_12
0x40006d2	        0x488b4580	             mov rax, qword [rbp - 0x80]	       108	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_12
0x40006d6	          0x4889c7	                            mov rdi, rax	       108	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_12
0x40006d9	      0xe800000000	                          call 0x40006de	       108	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_12
0x40006de	          0x4c89e1	                            mov rcx, r12	       108	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_12
0x40006e1	          0x4889da	                            mov rdx, rbx	       108	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_12
0x40006e4	          0x4889c6	                            mov rsi, rax	       108	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_12
0x40006e7	      0xbf00000000	                              mov edi, 0	       108	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_12
0x40006ec	      0xb800000000	                              mov eax, 0	       108	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_12
0x40006f1	      0xe800000000	                          call 0x40006f6	       108	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	IF_8	CALL_12
0x40006f6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       112	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_15
0x40006fd	          0x4889c7	                            mov rdi, rax	       112	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_15
0x4000700	      0xe800000000	                          call 0x4000705	       112	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_15
0x4000705	          0x4889c2	                            mov rdx, rax	       112	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_15
0x4000708	        0x488d45d0	                   lea rax, [rbp - 0x30]	       112	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_15
0x400070c	          0x4889d6	                            mov rsi, rdx	       112	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_15
0x400070f	          0x4889c7	                            mov rdi, rax	       112	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_15
0x4000712	      0xe840fbffff	                         call sym.oidcpy	       112	tree.c	FUNCTION_4	WHILE_1	ELSE_1	IF_6	CALL_15
0x4000717	        0x488d4580	                   lea rax, [rbp - 0x80]	       117	tree.c	FUNCTION_4	WHILE_1	CALL_16
0x400071b	          0x4889c7	                            mov rdi, rax	       117	tree.c	FUNCTION_4	WHILE_1	CALL_16
0x400071e	      0xe8a8fbffff	                 call sym.tree_entry_len	       117	tree.c	FUNCTION_4	WHILE_1	CALL_16
0x4000723	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	       117	tree.c	FUNCTION_4	WHILE_1	CALL_16
0x4000729	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	       118	tree.c	FUNCTION_4	WHILE_1	CALL_17
0x400072f	          0x4863d0	                         movsxd rdx, eax	       118	tree.c	FUNCTION_4	WHILE_1	CALL_17
0x4000732	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       118	tree.c	FUNCTION_4	WHILE_1	CALL_17
0x4000736	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       118	tree.c	FUNCTION_4	WHILE_1	CALL_17
0x400073d	          0x4889ce	                            mov rsi, rcx	       118	tree.c	FUNCTION_4	WHILE_1	CALL_17
0x4000740	          0x4889c7	                            mov rdi, rax	       118	tree.c	FUNCTION_4	WHILE_1	CALL_17
0x4000743	      0xe800000000	                          call 0x4000748	       118	tree.c	FUNCTION_4	WHILE_1	CALL_17
0x4000748	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       119	tree.c	FUNCTION_4	WHILE_1	CALL_18
0x400074f	      0xbe2f000000	                           mov esi, 0x2f	       119	tree.c	FUNCTION_4	WHILE_1	CALL_18
0x4000754	          0x4889c7	                            mov rdi, rax	       119	tree.c	FUNCTION_4	WHILE_1	CALL_18
0x4000757	      0xe8f9f9ffff	                   call sym.strbuf_addch	       119	tree.c	FUNCTION_4	WHILE_1	CALL_18
0x400075c	        0x488d45d0	                   lea rax, [rbp - 0x30]	       120	tree.c	FUNCTION_4	WHILE_1	CALL_20
0x4000760	          0x4889c7	                            mov rdi, rax	       120	tree.c	FUNCTION_4	WHILE_1	CALL_20
0x4000763	      0xe800000000	                          call 0x4000768	       120	tree.c	FUNCTION_4	WHILE_1	CALL_20
0x4000768	          0x4989c2	                            mov r10, rax	       120	tree.c	FUNCTION_4	WHILE_1	CALL_20
0x400076b	    0x488bbd30ffff	             mov rdi, qword [rbp - 0xd0]	       120	tree.c	FUNCTION_4	WHILE_1	CALL_20
0x4000772	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       120	tree.c	FUNCTION_4	WHILE_1	CALL_20
0x4000779	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	       120	tree.c	FUNCTION_4	WHILE_1	CALL_20
0x4000780	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       120	tree.c	FUNCTION_4	WHILE_1	CALL_20
0x4000786	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       120	tree.c	FUNCTION_4	WHILE_1	CALL_20
0x400078d	          0x4989f9	                             mov r9, rdi	       120	tree.c	FUNCTION_4	WHILE_1	CALL_20
0x4000790	          0x4989f0	                             mov r8, rsi	       120	tree.c	FUNCTION_4	WHILE_1	CALL_20
0x4000793	          0x4889c6	                            mov rsi, rax	       120	tree.c	FUNCTION_4	WHILE_1	CALL_20
0x4000796	          0x4c89d7	                            mov rdi, r10	       120	tree.c	FUNCTION_4	WHILE_1	CALL_20
0x4000799	      0xe853fdffff	                    call sym.read_tree_1	       120	tree.c	FUNCTION_4	WHILE_1	CALL_20
0x400079e	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       120	tree.c	FUNCTION_4	WHILE_1	CALL_20
0x40007a4	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	       123	tree.c	FUNCTION_4	WHILE_1	CALL_21
0x40007aa	          0x4863d0	                         movsxd rdx, eax	       123	tree.c	FUNCTION_4	WHILE_1	CALL_21
0x40007ad	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       123	tree.c	FUNCTION_4	WHILE_1	CALL_21
0x40007b4	          0x4889d6	                            mov rsi, rdx	       123	tree.c	FUNCTION_4	WHILE_1	CALL_21
0x40007b7	          0x4889c7	                            mov rdi, rax	       123	tree.c	FUNCTION_4	WHILE_1	CALL_21
0x40007ba	      0xe8fcf8ffff	                  call sym.strbuf_setlen	       123	tree.c	FUNCTION_4	WHILE_1	CALL_21
0x40007bf	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       124	tree.c	FUNCTION_4	WHILE_1	IF_9
0x40007c6	            0x7407	                            je 0x40007cf	       124	tree.c	FUNCTION_4	WHILE_1	IF_9
0x40007c8	      0xb8ffffffff	                     mov eax, 0xffffffff	       125	tree.c	FUNCTION_4	WHILE_1	IF_9
0x40007cd	            0xeb23	                           jmp 0x40007f2	       125	tree.c	FUNCTION_4	WHILE_1	IF_9
0x40007cf	        0x488d5580	                   lea rdx, [rbp - 0x80]	        77	tree.c	FUNCTION_4	WHILE_1	CALL_3
0x40007d3	        0x488d45a0	                   lea rax, [rbp - 0x60]	        77	tree.c	FUNCTION_4	WHILE_1	CALL_3
0x40007d7	          0x4889d6	                            mov rsi, rdx	        77	tree.c	FUNCTION_4	WHILE_1	CALL_3
0x40007da	          0x4889c7	                            mov rdi, rax	        77	tree.c	FUNCTION_4	WHILE_1	CALL_3
0x40007dd	      0xe800000000	                          call 0x40007e2	        77	tree.c	FUNCTION_4	WHILE_1	CALL_3
0x40007e2	            0x85c0	                           test eax, eax	        77	tree.c	FUNCTION_4	WHILE_1	CALL_3
0x40007e4	     0xf85affdffff	                           jne 0x4000599	        77	tree.c	FUNCTION_4	WHILE_1	CALL_3
0x40007ea	            0xeb01	                           jmp 0x40007ed	        77	tree.c	FUNCTION_4	WHILE_1	CALL_3
0x40007ec	              0x90	                                     nop	        81	tree.c	FUNCTION_4	WHILE_1	IF_2	IF_3
0x40007ed	      0xb800000000	                              mov eax, 0	       127	tree.c	FUNCTION_4
0x40007f2	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       128	tree.c	FUNCTION_4
0x40007f6	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       128	tree.c	FUNCTION_4
0x40007ff	            0x7405	                            je 0x4000806	       128	tree.c	FUNCTION_4
0x4000801	      0xe800000000	                          call 0x4000806	       128	tree.c	FUNCTION_4
0x4000806	    0x4881c4c00000	                           add rsp, 0xc0	       128	tree.c	FUNCTION_4
0x400080d	              0x5b	                                 pop rbx	       128	tree.c	FUNCTION_4
0x400080e	            0x415c	                                 pop r12	       128	tree.c	FUNCTION_4
0x4000810	              0x5d	                                 pop rbp	       128	tree.c	FUNCTION_4
0x4000811	              0xc3	                                     ret	       128	tree.c	FUNCTION_4
strbuf_addch	CALL,2:ELSE,0:IF,1:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	33
0x4000155	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_44
0x4000156	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_44
0x4000159	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_44
0x400015d	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_44
0x4000161	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_44
0x4000164	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_44	IF_1	CALL_1
0x4000168	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_44	IF_1	CALL_1
0x400016b	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_44	IF_1	CALL_1
0x4000170	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_44	IF_1	CALL_1
0x4000173	            0x7511	                           jne 0x4000186	       227	strbuf.h	FUNCTION_44	IF_1	CALL_1
0x4000175	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_44	CALL_2
0x4000179	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_44	CALL_2
0x400017e	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_44	CALL_2
0x4000181	      0xe800000000	                          call 0x4000186	       228	strbuf.h	FUNCTION_44	CALL_2
0x4000186	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_44
0x400018a	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_44
0x400018e	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_44
0x4000192	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_44
0x4000196	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_44
0x400019a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_44
0x400019e	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_44
0x40001a2	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_44
0x40001a5	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_44
0x40001a8	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_44
0x40001aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_44
0x40001ae	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_44
0x40001b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_44
0x40001b6	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_44
0x40001ba	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_44
0x40001bd	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_44
0x40001c0	              0x90	                                     nop	       231	strbuf.h	FUNCTION_44
0x40001c1	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_44
0x40001c2	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_44
oidcpy	CALL,1:ELSE,0:IF,0:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	13
0x4000257	              0x55	                                push rbp	       999	cache.h	FUNCTION_25
0x4000258	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_25
0x400025b	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_25
0x400025f	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_25
0x4000263	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_25
0x4000267	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_25	CALL_1
0x400026b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_25	CALL_1
0x400026f	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_25	CALL_1
0x4000272	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_25	CALL_1
0x4000275	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_25	CALL_1
0x400027a	              0x90	                                     nop	      1001	cache.h	FUNCTION_25
0x400027b	              0xc9	                                   leave	      1001	cache.h	FUNCTION_25
0x400027c	              0xc3	                                     ret	      1001	cache.h	FUNCTION_25
read_object_file	CALL,1:ELSE,0:IF,0:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	14
0x400027d	              0x55	                                push rbp	      1199	cache.h	FUNCTION_34
0x400027e	          0x4889e5	                            mov rbp, rsp	      1199	cache.h	FUNCTION_34
0x4000281	        0x4883ec20	                           sub rsp, 0x20	      1199	cache.h	FUNCTION_34
0x4000285	        0x48897df8	                mov qword [rbp - 8], rdi	      1199	cache.h	FUNCTION_34
0x4000289	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1199	cache.h	FUNCTION_34
0x400028d	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1199	cache.h	FUNCTION_34
0x4000291	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1200	cache.h	FUNCTION_34	CALL_1
0x4000295	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1200	cache.h	FUNCTION_34	CALL_1
0x4000299	        0x488b45f8	                mov rax, qword [rbp - 8]	      1200	cache.h	FUNCTION_34	CALL_1
0x400029d	      0xb901000000	                              mov ecx, 1	      1200	cache.h	FUNCTION_34	CALL_1
0x40002a2	          0x4889c7	                            mov rdi, rax	      1200	cache.h	FUNCTION_34	CALL_1
0x40002a5	      0xe800000000	                          call 0x40002aa	      1200	cache.h	FUNCTION_34	CALL_1
0x40002aa	              0xc9	                                   leave	      1201	cache.h	FUNCTION_34
0x40002ab	              0xc3	                                     ret	      1201	cache.h	FUNCTION_34
parse_tree_indirect	CALL,3:ELSE,3:IF,5:DO,1:FOR,0:WHILE,0:SWITCH,0:functions,0	52
0x4000c38	              0x55	                                push rbp	       243	tree.c	FUNCTION_12
0x4000c39	          0x4889e5	                            mov rbp, rsp	       243	tree.c	FUNCTION_12
0x4000c3c	        0x4883ec20	                           sub rsp, 0x20	       243	tree.c	FUNCTION_12
0x4000c40	        0x48897de8	             mov qword [rbp - 0x18], rdi	       243	tree.c	FUNCTION_12
0x4000c44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       244	tree.c	FUNCTION_12	CALL_1
0x4000c48	          0x4889c7	                            mov rdi, rax	       244	tree.c	FUNCTION_12	CALL_1
0x4000c4b	      0xe800000000	                          call 0x4000c50	       244	tree.c	FUNCTION_12	CALL_1
0x4000c50	        0x488945f8	                mov qword [rbp - 8], rax	       244	tree.c	FUNCTION_12	CALL_1
0x4000c54	      0x48837df800	                  cmp qword [rbp - 8], 0	       246	tree.c	FUNCTION_12	DO_1	IF_1
0x4000c59	            0x7507	                           jne 0x4000c62	       246	tree.c	FUNCTION_12	DO_1	IF_1
0x4000c5b	      0xb800000000	                              mov eax, 0	       247	tree.c	FUNCTION_12	DO_1	IF_1
0x4000c60	            0xeb7a	                           jmp 0x4000cdc	       247	tree.c	FUNCTION_12	DO_1	IF_1
0x4000c62	        0x488b45f8	                mov rax, qword [rbp - 8]	       248	tree.c	FUNCTION_12	DO_1	IF_2
0x4000c66	           0xfb600	                   movzx eax, byte [rax]	       248	tree.c	FUNCTION_12	DO_1	IF_2
0x4000c69	          0x83e00e	                            and eax, 0xe	       248	tree.c	FUNCTION_12	DO_1	IF_2
0x4000c6c	            0x3c04	                               cmp al, 4	       248	tree.c	FUNCTION_12	DO_1	IF_2
0x4000c6e	            0x7506	                           jne 0x4000c76	       248	tree.c	FUNCTION_12	DO_1	IF_2
0x4000c70	        0x488b45f8	                mov rax, qword [rbp - 8]	       249	tree.c	FUNCTION_12	DO_1	IF_2
0x4000c74	            0xeb66	                           jmp 0x4000cdc	       249	tree.c	FUNCTION_12	DO_1	IF_2
0x4000c76	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	tree.c	FUNCTION_12	DO_1	ELSE_1	IF_3
0x4000c7a	           0xfb600	                   movzx eax, byte [rax]	       250	tree.c	FUNCTION_12	DO_1	ELSE_1	IF_3
0x4000c7d	          0x83e00e	                            and eax, 0xe	       250	tree.c	FUNCTION_12	DO_1	ELSE_1	IF_3
0x4000c80	            0x3c02	                               cmp al, 2	       250	tree.c	FUNCTION_12	DO_1	ELSE_1	IF_3
0x4000c82	            0x7512	                           jne 0x4000c96	       250	tree.c	FUNCTION_12	DO_1	ELSE_1	IF_3
0x4000c84	        0x488b45f8	                mov rax, qword [rbp - 8]	       251	tree.c	FUNCTION_12	DO_1	ELSE_1	IF_3
0x4000c88	          0x4889c7	                            mov rdi, rax	       251	tree.c	FUNCTION_12	DO_1	ELSE_1	IF_3
0x4000c8b	      0xe800000000	                          call 0x4000c90	       251	tree.c	FUNCTION_12	DO_1	ELSE_1	IF_3
0x4000c90	        0x488945f8	                mov qword [rbp - 8], rax	       251	tree.c	FUNCTION_12	DO_1	ELSE_1	IF_3
0x4000c94	            0xeb23	                           jmp 0x4000cb9	       251	tree.c	FUNCTION_12	DO_1	ELSE_1	IF_3
0x4000c96	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	tree.c	FUNCTION_12	DO_1	ELSE_2	IF_4
0x4000c9a	           0xfb600	                   movzx eax, byte [rax]	       252	tree.c	FUNCTION_12	DO_1	ELSE_2	IF_4
0x4000c9d	          0x83e00e	                            and eax, 0xe	       252	tree.c	FUNCTION_12	DO_1	ELSE_2	IF_4
0x4000ca0	            0x3c08	                               cmp al, 8	       252	tree.c	FUNCTION_12	DO_1	ELSE_2	IF_4
0x4000ca2	            0x750e	                           jne 0x4000cb2	       252	tree.c	FUNCTION_12	DO_1	ELSE_2	IF_4
0x4000ca4	        0x488b45f8	                mov rax, qword [rbp - 8]	       253	tree.c	FUNCTION_12	DO_1	ELSE_2	IF_4
0x4000ca8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       253	tree.c	FUNCTION_12	DO_1	ELSE_2	IF_4
0x4000cac	        0x488945f8	                mov qword [rbp - 8], rax	       253	tree.c	FUNCTION_12	DO_1	ELSE_2	IF_4
0x4000cb0	            0xeb07	                           jmp 0x4000cb9	       253	tree.c	FUNCTION_12	DO_1	ELSE_2	IF_4
0x4000cb2	      0xb800000000	                              mov eax, 0	       255	tree.c	FUNCTION_12	DO_1	ELSE_3
0x4000cb7	            0xeb23	                           jmp 0x4000cdc	       255	tree.c	FUNCTION_12	DO_1	ELSE_3
0x4000cb9	        0x488b45f8	                mov rax, qword [rbp - 8]	       256	tree.c	FUNCTION_12	DO_1	IF_5
0x4000cbd	           0xfb600	                   movzx eax, byte [rax]	       256	tree.c	FUNCTION_12	DO_1	IF_5
0x4000cc0	          0x83e001	                              and eax, 1	       256	tree.c	FUNCTION_12	DO_1	IF_5
0x4000cc3	            0x84c0	                             test al, al	       256	tree.c	FUNCTION_12	DO_1	IF_5
0x4000cc5	            0x758d	                           jne 0x4000c54	       256	tree.c	FUNCTION_12	DO_1	IF_5
0x4000cc7	        0x488b45f8	                mov rax, qword [rbp - 8]	       257	tree.c	FUNCTION_12	DO_1	CALL_3
0x4000ccb	        0x4883c004	                              add rax, 4	       257	tree.c	FUNCTION_12	DO_1	CALL_3
0x4000ccf	          0x4889c7	                            mov rdi, rax	       257	tree.c	FUNCTION_12	DO_1	CALL_3
0x4000cd2	      0xe800000000	                          call 0x4000cd7	       257	tree.c	FUNCTION_12	DO_1	CALL_3
0x4000cd7	      0xe978ffffff	                           jmp 0x4000c54	       258	tree.c	FUNCTION_12	DO_1
0x4000cdc	              0xc9	                                   leave	       259	tree.c	FUNCTION_12
0x4000cdd	              0xc3	                                     ret	       259	tree.c	FUNCTION_12
parse_tree_buffer	CALL,0:ELSE,0:IF,1:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	25
0x4000aa9	              0x55	                                push rbp	       204	tree.c	FUNCTION_9
0x4000aaa	          0x4889e5	                            mov rbp, rsp	       204	tree.c	FUNCTION_9
0x4000aad	        0x48897df8	                mov qword [rbp - 8], rdi	       204	tree.c	FUNCTION_9
0x4000ab1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       204	tree.c	FUNCTION_9
0x4000ab5	        0x488955e8	             mov qword [rbp - 0x18], rdx	       204	tree.c	FUNCTION_9
0x4000ab9	        0x488b45f8	                mov rax, qword [rbp - 8]	       205	tree.c	FUNCTION_9	IF_1
0x4000abd	           0xfb600	                   movzx eax, byte [rax]	       205	tree.c	FUNCTION_9	IF_1
0x4000ac0	          0x83e001	                              and eax, 1	       205	tree.c	FUNCTION_9	IF_1
0x4000ac3	            0x84c0	                             test al, al	       205	tree.c	FUNCTION_9	IF_1
0x4000ac5	            0x7407	                            je 0x4000ace	       205	tree.c	FUNCTION_9	IF_1
0x4000ac7	      0xb800000000	                              mov eax, 0	       206	tree.c	FUNCTION_9	IF_1
0x4000acc	            0xeb29	                           jmp 0x4000af7	       206	tree.c	FUNCTION_9	IF_1
0x4000ace	        0x488b45f8	                mov rax, qword [rbp - 8]	       207	tree.c	FUNCTION_9
0x4000ad2	           0xfb610	                   movzx edx, byte [rax]	       207	tree.c	FUNCTION_9
0x4000ad5	          0x83ca01	                               or edx, 1	       207	tree.c	FUNCTION_9
0x4000ad8	            0x8810	                      mov byte [rax], dl	       207	tree.c	FUNCTION_9
0x4000ada	        0x488b45f8	                mov rax, qword [rbp - 8]	       208	tree.c	FUNCTION_9
0x4000ade	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       208	tree.c	FUNCTION_9
0x4000ae2	        0x48895018	             mov qword [rax + 0x18], rdx	       208	tree.c	FUNCTION_9
0x4000ae6	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	tree.c	FUNCTION_9
0x4000aea	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       209	tree.c	FUNCTION_9
0x4000aee	        0x48895020	             mov qword [rax + 0x20], rdx	       209	tree.c	FUNCTION_9
0x4000af2	      0xb800000000	                              mov eax, 0	       211	tree.c	FUNCTION_9
0x4000af7	              0x5d	                                 pop rbp	       212	tree.c	FUNCTION_9
0x4000af8	              0xc3	                                     ret	       212	tree.c	FUNCTION_9
read_one_entry	CALL,1:ELSE,0:IF,0:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	31
0x4000423	              0x55	                                push rbp	        41	tree.c	FUNCTION_2
0x4000424	          0x4889e5	                            mov rbp, rsp	        41	tree.c	FUNCTION_2
0x4000427	        0x4883ec40	                           sub rsp, 0x40	        41	tree.c	FUNCTION_2
0x400042b	        0x48897de8	             mov qword [rbp - 0x18], rdi	        41	tree.c	FUNCTION_2
0x400042f	        0x488975e0	             mov qword [rbp - 0x20], rsi	        41	tree.c	FUNCTION_2
0x4000433	        0x488955d8	             mov qword [rbp - 0x28], rdx	        41	tree.c	FUNCTION_2
0x4000437	          0x894dd4	             mov dword [rbp - 0x2c], ecx	        41	tree.c	FUNCTION_2
0x400043a	        0x448945d0	             mov dword [rbp - 0x30], r8d	        41	tree.c	FUNCTION_2
0x400043e	        0x4c894dc8	              mov qword [rbp - 0x38], r9	        41	tree.c	FUNCTION_2
0x4000442	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        42	tree.c	FUNCTION_2
0x4000446	        0x488945f8	                mov qword [rbp - 8], rax	        42	tree.c	FUNCTION_2
0x400044a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        43	tree.c	FUNCTION_2	CALL_1
0x400044e	        0x488b4008	                mov rax, qword [rax + 8]	        43	tree.c	FUNCTION_2	CALL_1
0x4000452	          0x4189c2	                           mov r10d, eax	        43	tree.c	FUNCTION_2	CALL_1
0x4000455	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        43	tree.c	FUNCTION_2	CALL_1
0x4000459	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        43	tree.c	FUNCTION_2	CALL_1
0x400045d	        0x448b45d4	             mov r8d, dword [rbp - 0x2c]	        43	tree.c	FUNCTION_2	CALL_1
0x4000461	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	        43	tree.c	FUNCTION_2	CALL_1
0x4000465	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	        43	tree.c	FUNCTION_2	CALL_1
0x4000469	        0x488b45f8	                mov rax, qword [rbp - 8]	        43	tree.c	FUNCTION_2	CALL_1
0x400046d	            0x6a05	                                  push 5	        43	tree.c	FUNCTION_2	CALL_1
0x400046f	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	        43	tree.c	FUNCTION_2	CALL_1
0x4000472	              0x51	                                push rcx	        43	tree.c	FUNCTION_2	CALL_1
0x4000473	          0x4589c1	                            mov r9d, r8d	        43	tree.c	FUNCTION_2	CALL_1
0x4000476	          0x4989f8	                             mov r8, rdi	        43	tree.c	FUNCTION_2	CALL_1
0x4000479	          0x4489d1	                           mov ecx, r10d	        43	tree.c	FUNCTION_2	CALL_1
0x400047c	          0x4889c7	                            mov rdi, rax	        43	tree.c	FUNCTION_2	CALL_1
0x400047f	      0xe88bfeffff	             call sym.read_one_entry_opt	        43	tree.c	FUNCTION_2	CALL_1
0x4000484	        0x4883c410	                           add rsp, 0x10	        43	tree.c	FUNCTION_2	CALL_1
0x4000488	              0xc9	                                   leave	        46	tree.c	FUNCTION_2
0x4000489	              0xc3	                                     ret	        46	tree.c	FUNCTION_2
read_tree	CALL,2:ELSE,0:IF,3:DO,0:FOR,1:WHILE,0:SWITCH,0:functions,0	75
0x4000945	              0x55	                                push rbp	       156	tree.c	FUNCTION_7
0x4000946	          0x4889e5	                            mov rbp, rsp	       156	tree.c	FUNCTION_7
0x4000949	        0x4883ec40	                           sub rsp, 0x40	       156	tree.c	FUNCTION_7
0x400094d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       156	tree.c	FUNCTION_7
0x4000951	          0x8975d4	             mov dword [rbp - 0x2c], esi	       156	tree.c	FUNCTION_7
0x4000954	        0x488955c8	             mov qword [rbp - 0x38], rdx	       156	tree.c	FUNCTION_7
0x4000958	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       156	tree.c	FUNCTION_7
0x400095c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       157	tree.c	FUNCTION_7
0x4000964	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       175	tree.c	FUNCTION_7	FOR_1
0x400096b	            0xeb3f	                           jmp 0x40009ac	       175	tree.c	FUNCTION_7	FOR_1
0x400096d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       176	tree.c	FUNCTION_7	FOR_1
0x4000971	          0x488b00	                    mov rax, qword [rax]	       176	tree.c	FUNCTION_7	FOR_1
0x4000974	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       176	tree.c	FUNCTION_7	FOR_1
0x4000977	          0x4863d2	                         movsxd rdx, edx	       176	tree.c	FUNCTION_7	FOR_1
0x400097a	        0x48c1e203	                              shl rdx, 3	       176	tree.c	FUNCTION_7	FOR_1
0x400097e	          0x4801d0	                            add rax, rdx	       176	tree.c	FUNCTION_7	FOR_1
0x4000981	          0x488b00	                    mov rax, qword [rax]	       176	tree.c	FUNCTION_7	FOR_1
0x4000984	        0x488945f8	                mov qword [rbp - 8], rax	       176	tree.c	FUNCTION_7	FOR_1
0x4000988	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	tree.c	FUNCTION_7	FOR_1	IF_1
0x400098c	          0x8b4038	            mov eax, dword [rax + 0x38] 	       177	tree.c	FUNCTION_7	FOR_1	IF_1
0x400098f	      0x2500300000	                         and eax, 0x3000	       177	tree.c	FUNCTION_7	FOR_1	IF_1
0x4000994	          0xc1e80c	                            shr eax, 0xc	       177	tree.c	FUNCTION_7	FOR_1	IF_1
0x4000997	            0x89c2	                            mov edx, eax	       177	tree.c	FUNCTION_7	FOR_1	IF_1
0x4000999	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       177	tree.c	FUNCTION_7	FOR_1	IF_1
0x400099c	            0x39c2	                            cmp edx, eax	       177	tree.c	FUNCTION_7	FOR_1	IF_1
0x400099e	            0x7508	                           jne 0x40009a8	       177	tree.c	FUNCTION_7	FOR_1	IF_1
0x40009a0	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       178	tree.c	FUNCTION_7	FOR_1	IF_1
0x40009a8	        0x8345e801	               add dword [rbp - 0x18], 1	       175	tree.c	FUNCTION_7	FOR_1
0x40009ac	      0x48837df000	               cmp qword [rbp - 0x10], 0	       175	tree.c	FUNCTION_7	FOR_1
0x40009b1	            0x750e	                           jne 0x40009c1	       175	tree.c	FUNCTION_7	FOR_1
0x40009b3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       175	tree.c	FUNCTION_7	FOR_1
0x40009b7	          0x8b500c	              mov edx, dword [rax + 0xc]	       175	tree.c	FUNCTION_7	FOR_1
0x40009ba	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       175	tree.c	FUNCTION_7	FOR_1
0x40009bd	            0x39c2	                            cmp edx, eax	       175	tree.c	FUNCTION_7	FOR_1
0x40009bf	            0x77ac	                            ja 0x400096d	       175	tree.c	FUNCTION_7	FOR_1
0x40009c1	      0x48837df000	               cmp qword [rbp - 0x10], 0	       181	tree.c	FUNCTION_7	IF_2
0x40009c6	            0x7508	                           jne 0x40009d0	       181	tree.c	FUNCTION_7	IF_2
0x40009c8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       182	tree.c	FUNCTION_7	IF_2
0x40009d0	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       183	tree.c	FUNCTION_7	CALL_1
0x40009d4	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       183	tree.c	FUNCTION_7	CALL_1
0x40009d8	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       183	tree.c	FUNCTION_7	CALL_1
0x40009db	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       183	tree.c	FUNCTION_7	CALL_1
0x40009df	        0x4883ec08	                              sub rsp, 8	       183	tree.c	FUNCTION_7	CALL_1
0x40009e3	          0xff75c0	                 push qword [rbp - 0x40]	       183	tree.c	FUNCTION_7	CALL_1
0x40009e6	          0x4989f1	                             mov r9, rsi	       183	tree.c	FUNCTION_7	CALL_1
0x40009e9	          0x4989c8	                             mov r8, rcx	       183	tree.c	FUNCTION_7	CALL_1
0x40009ec	            0x89d1	                            mov ecx, edx	       183	tree.c	FUNCTION_7	CALL_1
0x40009ee	      0xba00000000	                              mov edx, 0	       183	tree.c	FUNCTION_7	CALL_1
0x40009f3	      0xbe00000000	                              mov esi, 0	       183	tree.c	FUNCTION_7	CALL_1
0x40009f8	          0x4889c7	                            mov rdi, rax	       183	tree.c	FUNCTION_7	CALL_1
0x40009fb	      0xe800000000	                          call 0x4000a00	       183	tree.c	FUNCTION_7	CALL_1
0x4000a00	        0x4883c410	                           add rsp, 0x10	       183	tree.c	FUNCTION_7	CALL_1
0x4000a04	          0x8945ec	             mov dword [rbp - 0x14], eax	       183	tree.c	FUNCTION_7	CALL_1
0x4000a07	    0x48817df00000	               cmp qword [rbp - 0x10], 0	       184	tree.c	FUNCTION_7	IF_3
0x4000a0f	            0x7406	                            je 0x4000a17	       184	tree.c	FUNCTION_7	IF_3
0x4000a11	        0x837dec00	               cmp dword [rbp - 0x14], 0	       184	tree.c	FUNCTION_7	IF_3
0x4000a15	            0x7405	                            je 0x4000a1c	       184	tree.c	FUNCTION_7	IF_3
0x4000a17	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       185	tree.c	FUNCTION_7	IF_3
0x4000a1a	            0xeb37	                           jmp 0x4000a53	       185	tree.c	FUNCTION_7	IF_3
0x4000a1c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       190	tree.c	FUNCTION_7	CALL_2
0x4000a20	        0x4883c020	                           add rax, 0x20	       190	tree.c	FUNCTION_7	CALL_2
0x4000a24	          0x4889c7	                            mov rdi, rax	       190	tree.c	FUNCTION_7	CALL_2
0x4000a27	      0xe800000000	                          call 0x4000a2c	       190	tree.c	FUNCTION_7	CALL_2
0x4000a2c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       191	tree.c	FUNCTION_7
0x4000a30	          0x8b400c	              mov eax, dword [rax + 0xc]	       191	tree.c	FUNCTION_7
0x4000a33	            0x89c6	                            mov esi, eax	       191	tree.c	FUNCTION_7
0x4000a35	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       191	tree.c	FUNCTION_7
0x4000a39	          0x488b00	                    mov rax, qword [rax]	       191	tree.c	FUNCTION_7
0x4000a3c	      0xb900000000	                              mov ecx, 0	       191	tree.c	FUNCTION_7
0x4000a41	      0xba08000000	                              mov edx, 8	       191	tree.c	FUNCTION_7
0x4000a46	          0x4889c7	                            mov rdi, rax	       191	tree.c	FUNCTION_7
0x4000a49	      0xe8fdf5ffff	                     call sym.sane_qsort	       191	tree.c	FUNCTION_7
0x4000a4e	      0xb800000000	                              mov eax, 0	       192	tree.c	FUNCTION_7
0x4000a53	              0xc9	                                   leave	       193	tree.c	FUNCTION_7
0x4000a54	              0xc3	                                     ret	       193	tree.c	FUNCTION_7
strbuf_setlen	CALL,2:ELSE,1:IF,2:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	43
0x40000bb	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_43
0x40000bc	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_43
0x40000bf	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_43
0x40000c3	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_43
0x40000c7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_43
0x40000cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_43	IF_1
0x40000cf	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_43	IF_1
0x40000d2	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_43	IF_1
0x40000d5	            0x740d	                            je 0x40000e4	       162	strbuf.h	FUNCTION_43	IF_1
0x40000d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_43	IF_1
0x40000db	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_43	IF_1
0x40000de	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_43	IF_1
0x40000e2	            0xeb05	                           jmp 0x40000e9	       162	strbuf.h	FUNCTION_43	IF_1
0x40000e4	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_43	IF_1
0x40000e9	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_43	IF_1
0x40000ed	            0x730f	                           jae 0x40000fe	       162	strbuf.h	FUNCTION_43	IF_1
0x40000ef	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_43	CALL_1
0x40000f4	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_43	CALL_1
0x40000f9	      0xe800000000	                          call 0x40000fe	       163	strbuf.h	FUNCTION_43	CALL_1
0x40000fe	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_43
0x4000102	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_43
0x4000106	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_43
0x400010a	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_43	IF_2
0x400010e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_43	IF_2
0x4000112	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_43	IF_2
0x4000118	            0x7414	                            je 0x400012e	       165	strbuf.h	FUNCTION_43	IF_2
0x400011a	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_43	IF_2
0x400011e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_43	IF_2
0x4000122	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_43	IF_2
0x4000126	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_43	IF_2
0x4000129	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_43	IF_2
0x400012c	            0xeb24	                           jmp 0x4000152	       169	strbuf.h	FUNCTION_43
0x400012e	     0xfb605000000	           movzx eax, byte [0x04000135] 	       168	strbuf.h	FUNCTION_43	CALL_2
0x4000135	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_43	CALL_2
0x4000137	            0x7419	                            je 0x4000152	       168	strbuf.h	FUNCTION_43	CALL_2
0x4000139	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_43	CALL_2
0x400013e	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_43	CALL_2
0x4000143	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_43	CALL_2
0x4000148	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_43	CALL_2
0x400014d	      0xe800000000	                          call 0x4000152	       168	strbuf.h	FUNCTION_43	CALL_2
0x4000152	              0x90	                                     nop	       169	strbuf.h	FUNCTION_43
0x4000153	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_43
0x4000154	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_43
free_tree_buffer	CALL,0:ELSE,0:IF,0:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	19
0x4000bf5	              0x55	                                push rbp	       236	tree.c	FUNCTION_11
0x4000bf6	          0x4889e5	                            mov rbp, rsp	       236	tree.c	FUNCTION_11
0x4000bf9	        0x4883ec10	                           sub rsp, 0x10	       236	tree.c	FUNCTION_11
0x4000bfd	        0x48897df8	                mov qword [rbp - 8], rdi	       236	tree.c	FUNCTION_11
0x4000c01	        0x488b45f8	                mov rax, qword [rbp - 8]	       237	tree.c	FUNCTION_11
0x4000c05	        0x488b4018	            mov rax, qword [rax + 0x18] 	       237	tree.c	FUNCTION_11
0x4000c09	          0x4889c7	                            mov rdi, rax	       237	tree.c	FUNCTION_11
0x4000c0c	      0xe800000000	                          call 0x4000c11	       237	tree.c	FUNCTION_11
0x4000c11	        0x488b45f8	                mov rax, qword [rbp - 8]	       237	tree.c	FUNCTION_11
0x4000c15	    0x48c740180000	               mov qword [rax + 0x18], 0	       237	tree.c	FUNCTION_11
0x4000c1d	        0x488b45f8	                mov rax, qword [rbp - 8]	       238	tree.c	FUNCTION_11
0x4000c21	    0x48c740200000	               mov qword [rax + 0x20], 0	       238	tree.c	FUNCTION_11
0x4000c29	        0x488b45f8	                mov rax, qword [rbp - 8]	       239	tree.c	FUNCTION_11
0x4000c2d	           0xfb610	                   movzx edx, byte [rax]	       239	tree.c	FUNCTION_11
0x4000c30	          0x83e2fe	                     and edx, 0xfffffffe	       239	tree.c	FUNCTION_11
0x4000c33	            0x8810	                      mov byte [rax], dl	       239	tree.c	FUNCTION_11
0x4000c35	              0x90	                                     nop	       240	tree.c	FUNCTION_11
0x4000c36	              0xc9	                                   leave	       240	tree.c	FUNCTION_11
0x4000c37	              0xc3	                                     ret	       240	tree.c	FUNCTION_11
sane_qsort	CALL,0:ELSE,0:IF,1:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	18
0x400004b	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_77
0x400004c	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_77
0x400004f	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_77
0x4000053	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_77
0x4000057	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_77
0x400005b	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_77
0x400005f	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_77
0x4000063	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_77	IF_1
0x4000068	            0x7618	                           jbe 0x4000082	      1048	git-compat-util.h	FUNCTION_77	IF_1
0x400006a	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_77	IF_1
0x400006e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_77	IF_1
0x4000072	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_77	IF_1
0x4000076	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_77	IF_1
0x400007a	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_77	IF_1
0x400007d	      0xe800000000	                          call 0x4000082	      1049	git-compat-util.h	FUNCTION_77	IF_1
0x4000082	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_77
0x4000083	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_77
0x4000084	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_77
parse_tree	CALL,1:ELSE,0:IF,0:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	10
0x40002ac	              0x55	                                push rbp	        21	tree.h	FUNCTION_52
0x40002ad	          0x4889e5	                            mov rbp, rsp	        21	tree.h	FUNCTION_52
0x40002b0	        0x4883ec10	                           sub rsp, 0x10	        21	tree.h	FUNCTION_52
0x40002b4	        0x48897df8	                mov qword [rbp - 8], rdi	        21	tree.h	FUNCTION_52
0x40002b8	        0x488b45f8	                mov rax, qword [rbp - 8]	        22	tree.h	FUNCTION_52	CALL_1
0x40002bc	      0xbe00000000	                              mov esi, 0	        22	tree.h	FUNCTION_52	CALL_1
0x40002c1	          0x4889c7	                            mov rdi, rax	        22	tree.h	FUNCTION_52	CALL_1
0x40002c4	      0xe800000000	                          call 0x40002c9	        22	tree.h	FUNCTION_52	CALL_1
0x40002c9	              0xc9	                                   leave	        23	tree.h	FUNCTION_52
0x40002ca	              0xc3	                                     ret	        23	tree.h	FUNCTION_52
parse_tree_gently	CALL,5:ELSE,0:IF,3:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	67
0x4000af9	              0x55	                                push rbp	       215	tree.c	FUNCTION_10
0x4000afa	          0x4889e5	                            mov rbp, rsp	       215	tree.c	FUNCTION_10
0x4000afd	        0x4883ec30	                           sub rsp, 0x30	       215	tree.c	FUNCTION_10
0x4000b01	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       215	tree.c	FUNCTION_10
0x4000b05	          0x8975d4	             mov dword [rbp - 0x2c], esi	       215	tree.c	FUNCTION_10
0x4000b08	    0x64488b042528	                mov rax, qword fs:[0x28]	       215	tree.c	FUNCTION_10
0x4000b11	        0x488945f8	                mov qword [rbp - 8], rax	       215	tree.c	FUNCTION_10
0x4000b15	            0x31c0	                            xor eax, eax	       215	tree.c	FUNCTION_10
0x4000b17	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       220	tree.c	FUNCTION_10	IF_1
0x4000b1b	           0xfb600	                   movzx eax, byte [rax]	       220	tree.c	FUNCTION_10	IF_1
0x4000b1e	          0x83e001	                              and eax, 1	       220	tree.c	FUNCTION_10	IF_1
0x4000b21	            0x84c0	                             test al, al	       220	tree.c	FUNCTION_10	IF_1
0x4000b23	            0x740a	                            je 0x4000b2f	       220	tree.c	FUNCTION_10	IF_1
0x4000b25	      0xb800000000	                              mov eax, 0	       221	tree.c	FUNCTION_10	IF_1
0x4000b2a	      0xe9b0000000	                           jmp 0x4000bdf	       221	tree.c	FUNCTION_10	IF_1
0x4000b2f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       222	tree.c	FUNCTION_10	CALL_1
0x4000b33	        0x488d4804	                      lea rcx, [rax + 4]	       222	tree.c	FUNCTION_10	CALL_1
0x4000b37	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       222	tree.c	FUNCTION_10	CALL_1
0x4000b3b	        0x488d45e4	                   lea rax, [rbp - 0x1c]	       222	tree.c	FUNCTION_10	CALL_1
0x4000b3f	          0x4889c6	                            mov rsi, rax	       222	tree.c	FUNCTION_10	CALL_1
0x4000b42	          0x4889cf	                            mov rdi, rcx	       222	tree.c	FUNCTION_10	CALL_1
0x4000b45	      0xe833f7ffff	               call sym.read_object_file	       222	tree.c	FUNCTION_10	CALL_1
0x4000b4a	        0x488945f0	             mov qword [rbp - 0x10], rax	       222	tree.c	FUNCTION_10	CALL_1
0x4000b4e	      0x48837df000	               cmp qword [rbp - 0x10], 0	       223	tree.c	FUNCTION_10	IF_2
0x4000b53	            0x7536	                           jne 0x4000b8b	       223	tree.c	FUNCTION_10	IF_2
0x4000b55	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       224	tree.c	FUNCTION_10	IF_2
0x4000b59	            0x7529	                           jne 0x4000b84	       224	tree.c	FUNCTION_10	IF_2
0x4000b5b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       225	tree.c	FUNCTION_10	IF_2
0x4000b5f	        0x4883c004	                              add rax, 4	       225	tree.c	FUNCTION_10	IF_2
0x4000b63	          0x4889c7	                            mov rdi, rax	       225	tree.c	FUNCTION_10	IF_2
0x4000b66	      0xe800000000	                          call 0x4000b6b	       225	tree.c	FUNCTION_10	IF_2
0x4000b6b	          0x4889c6	                            mov rsi, rax	       225	tree.c	FUNCTION_10	IF_2
0x4000b6e	      0xbf00000000	                              mov edi, 0	       225	tree.c	FUNCTION_10	IF_2
0x4000b73	      0xb800000000	                              mov eax, 0	       225	tree.c	FUNCTION_10	IF_2
0x4000b78	      0xe800000000	                          call 0x4000b7d	       225	tree.c	FUNCTION_10	IF_2
0x4000b7d	      0xe8bef4ffff	                    call sym.const_error	       224	tree.c	FUNCTION_10	IF_2
0x4000b82	            0xeb5b	                           jmp 0x4000bdf	       224	tree.c	FUNCTION_10	IF_2
0x4000b84	      0xb8ffffffff	                     mov eax, 0xffffffff	       224	tree.c	FUNCTION_10	IF_2
0x4000b89	            0xeb54	                           jmp 0x4000bdf	       224	tree.c	FUNCTION_10	IF_2
0x4000b8b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       227	tree.c	FUNCTION_10	IF_3
0x4000b8e	          0x83f802	                              cmp eax, 2	       227	tree.c	FUNCTION_10	IF_3
0x4000b91	            0x7435	                            je 0x4000bc8	       227	tree.c	FUNCTION_10	IF_3
0x4000b93	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       228	tree.c	FUNCTION_10	IF_3	CALL_3
0x4000b97	          0x4889c7	                            mov rdi, rax	       228	tree.c	FUNCTION_10	IF_3	CALL_3
0x4000b9a	      0xe800000000	                          call 0x4000b9f	       228	tree.c	FUNCTION_10	IF_3	CALL_3
0x4000b9f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       229	tree.c	FUNCTION_10	IF_3
0x4000ba3	        0x4883c004	                              add rax, 4	       229	tree.c	FUNCTION_10	IF_3
0x4000ba7	          0x4889c7	                            mov rdi, rax	       229	tree.c	FUNCTION_10	IF_3
0x4000baa	      0xe800000000	                          call 0x4000baf	       229	tree.c	FUNCTION_10	IF_3
0x4000baf	          0x4889c6	                            mov rsi, rax	       229	tree.c	FUNCTION_10	IF_3
0x4000bb2	      0xbf00000000	                              mov edi, 0	       229	tree.c	FUNCTION_10	IF_3
0x4000bb7	      0xb800000000	                              mov eax, 0	       229	tree.c	FUNCTION_10	IF_3
0x4000bbc	      0xe800000000	                          call 0x4000bc1	       229	tree.c	FUNCTION_10	IF_3
0x4000bc1	      0xe87af4ffff	                    call sym.const_error	       229	tree.c	FUNCTION_10	IF_3
0x4000bc6	            0xeb17	                           jmp 0x4000bdf	       229	tree.c	FUNCTION_10	IF_3
0x4000bc8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       232	tree.c	FUNCTION_10	CALL_5
0x4000bcc	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       232	tree.c	FUNCTION_10	CALL_5
0x4000bd0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       232	tree.c	FUNCTION_10	CALL_5
0x4000bd4	          0x4889ce	                            mov rsi, rcx	       232	tree.c	FUNCTION_10	CALL_5
0x4000bd7	          0x4889c7	                            mov rdi, rax	       232	tree.c	FUNCTION_10	CALL_5
0x4000bda	      0xe800000000	                          call 0x4000bdf	       232	tree.c	FUNCTION_10	CALL_5
0x4000bdf	        0x488b4df8	                mov rcx, qword [rbp - 8]	       233	tree.c	FUNCTION_10
0x4000be3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       233	tree.c	FUNCTION_10
0x4000bec	            0x7405	                            je 0x4000bf3	       233	tree.c	FUNCTION_10
0x4000bee	      0xe800000000	                          call 0x4000bf3	       233	tree.c	FUNCTION_10
0x4000bf3	              0xc9	                                   leave	       233	tree.c	FUNCTION_10
0x4000bf4	              0xc3	                                     ret	       233	tree.c	FUNCTION_10
strbuf_avail	CALL,0:ELSE,0:IF,0:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	18
0x4000085	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_42
0x4000086	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_42
0x4000089	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_42
0x400008d	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_42
0x4000091	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_42
0x4000094	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_42
0x4000097	            0x741b	                            je 0x40000b4	       141	strbuf.h	FUNCTION_42
0x4000099	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_42
0x400009d	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_42
0x40000a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_42
0x40000a4	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_42
0x40000a8	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_42
0x40000ab	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_42
0x40000ae	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_42
0x40000b2	            0xeb05	                           jmp 0x40000b9	       141	strbuf.h	FUNCTION_42
0x40000b4	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_42
0x40000b9	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_42
0x40000ba	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_42
const_error	CALL,0:ELSE,0:IF,0:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_58
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_58
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_58
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_58
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_58
cmp_cache_name_compare	CALL,1:ELSE,0:IF,0:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	39
0x40008c5	              0x55	                                push rbp	       145	tree.c	FUNCTION_6
0x40008c6	          0x4889e5	                            mov rbp, rsp	       145	tree.c	FUNCTION_6
0x40008c9	        0x4883ec20	                           sub rsp, 0x20	       145	tree.c	FUNCTION_6
0x40008cd	        0x48897de8	             mov qword [rbp - 0x18], rdi	       145	tree.c	FUNCTION_6
0x40008d1	        0x488975e0	             mov qword [rbp - 0x20], rsi	       145	tree.c	FUNCTION_6
0x40008d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       148	tree.c	FUNCTION_6
0x40008d9	          0x488b00	                    mov rax, qword [rax]	       148	tree.c	FUNCTION_6
0x40008dc	        0x488945f0	             mov qword [rbp - 0x10], rax	       148	tree.c	FUNCTION_6
0x40008e0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       149	tree.c	FUNCTION_6
0x40008e4	          0x488b00	                    mov rax, qword [rax]	       149	tree.c	FUNCTION_6
0x40008e7	        0x488945f8	                mov qword [rbp - 8], rax	       149	tree.c	FUNCTION_6
0x40008eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       151	tree.c	FUNCTION_6
0x40008ef	          0x8b4038	            mov eax, dword [rax + 0x38] 	       151	tree.c	FUNCTION_6
0x40008f2	      0x2500300000	                         and eax, 0x3000	       151	tree.c	FUNCTION_6
0x40008f7	          0xc1e80c	                            shr eax, 0xc	       151	tree.c	FUNCTION_6
0x40008fa	          0x4189c0	                            mov r8d, eax	       150	tree.c	FUNCTION_6	CALL_1
0x40008fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       151	tree.c	FUNCTION_6
0x4000901	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       151	tree.c	FUNCTION_6
0x4000904	            0x89c1	                            mov ecx, eax	       150	tree.c	FUNCTION_6	CALL_1
0x4000906	        0x488b45f8	                mov rax, qword [rbp - 8]	       151	tree.c	FUNCTION_6
0x400090a	        0x488d5058	                   lea rdx, [rax + 0x58]	       151	tree.c	FUNCTION_6
0x400090e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       150	tree.c	FUNCTION_6	CALL_1
0x4000912	          0x8b4038	            mov eax, dword [rax + 0x38] 	       150	tree.c	FUNCTION_6	CALL_1
0x4000915	      0x2500300000	                         and eax, 0x3000	       150	tree.c	FUNCTION_6	CALL_1
0x400091a	          0xc1e80c	                            shr eax, 0xc	       150	tree.c	FUNCTION_6	CALL_1
0x400091d	            0x89c7	                            mov edi, eax	       150	tree.c	FUNCTION_6	CALL_1
0x400091f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       150	tree.c	FUNCTION_6	CALL_1
0x4000923	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       150	tree.c	FUNCTION_6	CALL_1
0x4000926	            0x89c6	                            mov esi, eax	       150	tree.c	FUNCTION_6	CALL_1
0x4000928	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       150	tree.c	FUNCTION_6	CALL_1
0x400092c	        0x4883c058	                           add rax, 0x58	       150	tree.c	FUNCTION_6	CALL_1
0x4000930	          0x4589c1	                            mov r9d, r8d	       150	tree.c	FUNCTION_6	CALL_1
0x4000933	          0x4189c8	                            mov r8d, ecx	       150	tree.c	FUNCTION_6	CALL_1
0x4000936	          0x4889d1	                            mov rcx, rdx	       150	tree.c	FUNCTION_6	CALL_1
0x4000939	            0x89fa	                            mov edx, edi	       150	tree.c	FUNCTION_6	CALL_1
0x400093b	          0x4889c7	                            mov rdi, rax	       150	tree.c	FUNCTION_6	CALL_1
0x400093e	      0xe800000000	                          call 0x4000943	       150	tree.c	FUNCTION_6	CALL_1
0x4000943	              0xc9	                                   leave	       152	tree.c	FUNCTION_6
0x4000944	              0xc3	                                     ret	       152	tree.c	FUNCTION_6
lookup_tree	CALL,4:ELSE,0:IF,1:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	24
0x4000a55	              0x55	                                push rbp	       196	tree.c	FUNCTION_8
0x4000a56	          0x4889e5	                            mov rbp, rsp	       196	tree.c	FUNCTION_8
0x4000a59	        0x4883ec20	                           sub rsp, 0x20	       196	tree.c	FUNCTION_8
0x4000a5d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       196	tree.c	FUNCTION_8
0x4000a61	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       197	tree.c	FUNCTION_8	CALL_1
0x4000a65	          0x4889c7	                            mov rdi, rax	       197	tree.c	FUNCTION_8	CALL_1
0x4000a68	      0xe800000000	                          call 0x4000a6d	       197	tree.c	FUNCTION_8	CALL_1
0x4000a6d	        0x488945f8	                mov qword [rbp - 8], rax	       197	tree.c	FUNCTION_8	CALL_1
0x4000a71	      0x48837df800	                  cmp qword [rbp - 8], 0	       198	tree.c	FUNCTION_8	IF_1
0x4000a76	            0x7519	                           jne 0x4000a91	       198	tree.c	FUNCTION_8	IF_1
0x4000a78	      0xe800000000	                          call 0x4000a7d	       199	tree.c	FUNCTION_8	CALL_3
0x4000a7d	          0x4889c2	                            mov rdx, rax	       199	tree.c	FUNCTION_8	CALL_3
0x4000a80	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       199	tree.c	FUNCTION_8	CALL_3
0x4000a84	          0x4889d6	                            mov rsi, rdx	       199	tree.c	FUNCTION_8	CALL_3
0x4000a87	          0x4889c7	                            mov rdi, rax	       199	tree.c	FUNCTION_8	CALL_3
0x4000a8a	      0xe800000000	                          call 0x4000a8f	       199	tree.c	FUNCTION_8	CALL_3
0x4000a8f	            0xeb16	                           jmp 0x4000aa7	       199	tree.c	FUNCTION_8	CALL_3
0x4000a91	        0x488b45f8	                mov rax, qword [rbp - 8]	       200	tree.c	FUNCTION_8	CALL_4
0x4000a95	      0xba00000000	                              mov edx, 0	       200	tree.c	FUNCTION_8	CALL_4
0x4000a9a	      0xbe02000000	                              mov esi, 2	       200	tree.c	FUNCTION_8	CALL_4
0x4000a9f	          0x4889c7	                            mov rdi, rax	       200	tree.c	FUNCTION_8	CALL_4
0x4000aa2	      0xe800000000	                          call 0x4000aa7	       200	tree.c	FUNCTION_8	CALL_4
0x4000aa7	              0xc9	                                   leave	       201	tree.c	FUNCTION_8
0x4000aa8	              0xc3	                                     ret	       201	tree.c	FUNCTION_8
hashcpy	CALL,1:ELSE,0:IF,0:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	14
0x400022c	              0x55	                                push rbp	       994	cache.h	FUNCTION_24
0x400022d	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_24
0x4000230	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_24
0x4000234	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_24
0x4000238	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_24
0x400023c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_24	CALL_1
0x4000240	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_24	CALL_1
0x4000244	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_24	CALL_1
0x4000249	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_24	CALL_1
0x400024c	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_24	CALL_1
0x400024f	      0xe800000000	                          call 0x4000254	       995	cache.h	FUNCTION_24	CALL_1
0x4000254	              0x90	                                     nop	       996	cache.h	FUNCTION_24
0x4000255	              0xc9	                                   leave	       996	cache.h	FUNCTION_24
0x4000256	              0xc3	                                     ret	       996	cache.h	FUNCTION_24
read_one_entry_opt	CALL,9:ELSE,0:IF,1:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	81
0x400030f	              0x55	                                push rbp	        17	tree.c	FUNCTION_1
0x4000310	          0x4889e5	                            mov rbp, rsp	        17	tree.c	FUNCTION_1
0x4000313	        0x4883ec40	                           sub rsp, 0x40	        17	tree.c	FUNCTION_1
0x4000317	        0x48897de8	             mov qword [rbp - 0x18], rdi	        17	tree.c	FUNCTION_1
0x400031b	        0x488975e0	             mov qword [rbp - 0x20], rsi	        17	tree.c	FUNCTION_1
0x400031f	        0x488955d8	             mov qword [rbp - 0x28], rdx	        17	tree.c	FUNCTION_1
0x4000323	          0x894dd4	             mov dword [rbp - 0x2c], ecx	        17	tree.c	FUNCTION_1
0x4000326	        0x4c8945c8	              mov qword [rbp - 0x38], r8	        17	tree.c	FUNCTION_1
0x400032a	        0x44894dd0	             mov dword [rbp - 0x30], r9d	        17	tree.c	FUNCTION_1
0x400032e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	        22	tree.c	FUNCTION_1	IF_1	CALL_1
0x4000331	      0x2500f00000	                         and eax, 0xf000	        22	tree.c	FUNCTION_1	IF_1	CALL_1
0x4000336	      0x3d00400000	                         cmp eax, 0x4000	        22	tree.c	FUNCTION_1	IF_1	CALL_1
0x400033b	            0x750a	                           jne 0x4000347	        22	tree.c	FUNCTION_1	IF_1	CALL_1
0x400033d	      0xb801000000	                              mov eax, 1	        23	tree.c	FUNCTION_1	IF_1
0x4000342	      0xe9da000000	                           jmp 0x4000421	        23	tree.c	FUNCTION_1	IF_1
0x4000347	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        25	tree.c	FUNCTION_1	CALL_2
0x400034b	          0x4889c7	                            mov rdi, rax	        25	tree.c	FUNCTION_1	CALL_2
0x400034e	      0xe800000000	                          call 0x4000353	        25	tree.c	FUNCTION_1	CALL_2
0x4000353	          0x8945f0	             mov dword [rbp - 0x10], eax	        25	tree.c	FUNCTION_1	CALL_2
0x4000356	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        26	tree.c	FUNCTION_1
0x4000359	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        26	tree.c	FUNCTION_1
0x400035c	             0x1d0	                            add eax, edx	        26	tree.c	FUNCTION_1
0x400035e	          0x83c059	                           add eax, 0x59	        26	tree.c	FUNCTION_1
0x4000361	          0x8945f4	              mov dword [rbp - 0xc], eax	        26	tree.c	FUNCTION_1
0x4000364	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        27	tree.c	FUNCTION_1	CALL_3
0x4000367	          0x4889c6	                            mov rsi, rax	        27	tree.c	FUNCTION_1	CALL_3
0x400036a	      0xbf01000000	                              mov edi, 1	        27	tree.c	FUNCTION_1	CALL_3
0x400036f	      0xe800000000	                          call 0x4000374	        27	tree.c	FUNCTION_1	CALL_3
0x4000374	        0x488945f8	                mov qword [rbp - 8], rax	        27	tree.c	FUNCTION_1	CALL_3
0x4000378	          0x8b45d0	             mov eax, dword [rbp - 0x30]	        29	tree.c	FUNCTION_1	CALL_4
0x400037b	            0x89c7	                            mov edi, eax	        29	tree.c	FUNCTION_1	CALL_4
0x400037d	      0xe850feffff	                 call sym.create_ce_mode	        29	tree.c	FUNCTION_1	CALL_4
0x4000382	            0x89c2	                            mov edx, eax	        29	tree.c	FUNCTION_1	CALL_4
0x4000384	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	tree.c	FUNCTION_1	CALL_4
0x4000388	          0x895034	             mov dword [rax + 0x34], edx	        29	tree.c	FUNCTION_1	CALL_4
0x400038b	          0x8b4510	            mov eax, dword [rbp + 0x10] 	        30	tree.c	FUNCTION_1	CALL_5
0x400038e	            0x89c7	                            mov edi, eax	        30	tree.c	FUNCTION_1	CALL_5
0x4000390	      0xe82efeffff	                call sym.create_ce_flags	        30	tree.c	FUNCTION_1	CALL_5
0x4000395	            0x89c2	                            mov edx, eax	        30	tree.c	FUNCTION_1	CALL_5
0x4000397	        0x488b45f8	                mov rax, qword [rbp - 8]	        30	tree.c	FUNCTION_1	CALL_5
0x400039b	          0x895038	             mov dword [rax + 0x38], edx	        30	tree.c	FUNCTION_1	CALL_5
0x400039e	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        31	tree.c	FUNCTION_1
0x40003a1	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        31	tree.c	FUNCTION_1
0x40003a4	             0x1d0	                            add eax, edx	        31	tree.c	FUNCTION_1
0x40003a6	            0x89c2	                            mov edx, eax	        31	tree.c	FUNCTION_1
0x40003a8	        0x488b45f8	                mov rax, qword [rbp - 8]	        31	tree.c	FUNCTION_1
0x40003ac	          0x89503c	             mov dword [rax + 0x3c], edx	        31	tree.c	FUNCTION_1
0x40003af	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	        32	tree.c	FUNCTION_1	CALL_6
0x40003b2	          0x4863d0	                         movsxd rdx, eax	        32	tree.c	FUNCTION_1	CALL_6
0x40003b5	        0x488b45f8	                mov rax, qword [rbp - 8]	        32	tree.c	FUNCTION_1	CALL_6
0x40003b9	        0x488d4858	                   lea rcx, [rax + 0x58]	        32	tree.c	FUNCTION_1	CALL_6
0x40003bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        32	tree.c	FUNCTION_1	CALL_6
0x40003c1	          0x4889c6	                            mov rsi, rax	        32	tree.c	FUNCTION_1	CALL_6
0x40003c4	          0x4889cf	                            mov rdi, rcx	        32	tree.c	FUNCTION_1	CALL_6
0x40003c7	      0xe800000000	                          call 0x40003cc	        32	tree.c	FUNCTION_1	CALL_6
0x40003cc	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        33	tree.c	FUNCTION_1	CALL_7
0x40003cf	          0x83c001	                              add eax, 1	        33	tree.c	FUNCTION_1	CALL_7
0x40003d2	          0x4863d0	                         movsxd rdx, eax	        33	tree.c	FUNCTION_1	CALL_7
0x40003d5	        0x488b45f8	                mov rax, qword [rbp - 8]	        33	tree.c	FUNCTION_1	CALL_7
0x40003d9	        0x488d4858	                   lea rcx, [rax + 0x58]	        33	tree.c	FUNCTION_1	CALL_7
0x40003dd	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	        33	tree.c	FUNCTION_1	CALL_7
0x40003e0	            0x4898	                                    cdqe	        33	tree.c	FUNCTION_1	CALL_7
0x40003e2	          0x4801c1	                            add rcx, rax	        33	tree.c	FUNCTION_1	CALL_7
0x40003e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        33	tree.c	FUNCTION_1	CALL_7
0x40003e9	          0x4889c6	                            mov rsi, rax	        33	tree.c	FUNCTION_1	CALL_7
0x40003ec	          0x4889cf	                            mov rdi, rcx	        33	tree.c	FUNCTION_1	CALL_7
0x40003ef	      0xe800000000	                          call 0x40003f4	        33	tree.c	FUNCTION_1	CALL_7
0x40003f4	        0x488b45f8	                mov rax, qword [rbp - 8]	        34	tree.c	FUNCTION_1	CALL_8
0x40003f8	        0x488d5044	                   lea rdx, [rax + 0x44]	        34	tree.c	FUNCTION_1	CALL_8
0x40003fc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        34	tree.c	FUNCTION_1	CALL_8
0x4000400	          0x4889c6	                            mov rsi, rax	        34	tree.c	FUNCTION_1	CALL_8
0x4000403	          0x4889d7	                            mov rdi, rdx	        34	tree.c	FUNCTION_1	CALL_8
0x4000406	      0xe84cfeffff	                         call sym.oidcpy	        34	tree.c	FUNCTION_1	CALL_8
0x400040b	          0x8b5518	            mov edx, dword [rbp + 0x18] 	        35	tree.c	FUNCTION_1	CALL_9
0x400040e	        0x488b4df8	                mov rcx, qword [rbp - 8]	        35	tree.c	FUNCTION_1	CALL_9
0x4000412	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        35	tree.c	FUNCTION_1	CALL_9
0x4000416	          0x4889ce	                            mov rsi, rcx	        35	tree.c	FUNCTION_1	CALL_9
0x4000419	          0x4889c7	                            mov rdi, rax	        35	tree.c	FUNCTION_1	CALL_9
0x400041c	      0xe800000000	                          call 0x4000421	        35	tree.c	FUNCTION_1	CALL_9
0x4000421	              0xc9	                                   leave	        36	tree.c	FUNCTION_1
0x4000422	              0xc3	                                     ret	        36	tree.c	FUNCTION_1
read_one_entry_quick	CALL,1:ELSE,0:IF,0:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	31
0x400048a	              0x55	                                push rbp	        55	tree.c	FUNCTION_3
0x400048b	          0x4889e5	                            mov rbp, rsp	        55	tree.c	FUNCTION_3
0x400048e	        0x4883ec40	                           sub rsp, 0x40	        55	tree.c	FUNCTION_3
0x4000492	        0x48897de8	             mov qword [rbp - 0x18], rdi	        55	tree.c	FUNCTION_3
0x4000496	        0x488975e0	             mov qword [rbp - 0x20], rsi	        55	tree.c	FUNCTION_3
0x400049a	        0x488955d8	             mov qword [rbp - 0x28], rdx	        55	tree.c	FUNCTION_3
0x400049e	          0x894dd4	             mov dword [rbp - 0x2c], ecx	        55	tree.c	FUNCTION_3
0x40004a1	        0x448945d0	             mov dword [rbp - 0x30], r8d	        55	tree.c	FUNCTION_3
0x40004a5	        0x4c894dc8	              mov qword [rbp - 0x38], r9	        55	tree.c	FUNCTION_3
0x40004a9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        56	tree.c	FUNCTION_3
0x40004ad	        0x488945f8	                mov qword [rbp - 8], rax	        56	tree.c	FUNCTION_3
0x40004b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        57	tree.c	FUNCTION_3	CALL_1
0x40004b5	        0x488b4008	                mov rax, qword [rax + 8]	        57	tree.c	FUNCTION_3	CALL_1
0x40004b9	          0x4189c2	                           mov r10d, eax	        57	tree.c	FUNCTION_3	CALL_1
0x40004bc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        57	tree.c	FUNCTION_3	CALL_1
0x40004c0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        57	tree.c	FUNCTION_3	CALL_1
0x40004c4	        0x448b45d4	             mov r8d, dword [rbp - 0x2c]	        57	tree.c	FUNCTION_3	CALL_1
0x40004c8	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	        57	tree.c	FUNCTION_3	CALL_1
0x40004cc	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	        57	tree.c	FUNCTION_3	CALL_1
0x40004d0	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	tree.c	FUNCTION_3	CALL_1
0x40004d4	            0x6a08	                                  push 8	        57	tree.c	FUNCTION_3	CALL_1
0x40004d6	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	        57	tree.c	FUNCTION_3	CALL_1
0x40004d9	              0x51	                                push rcx	        57	tree.c	FUNCTION_3	CALL_1
0x40004da	          0x4589c1	                            mov r9d, r8d	        57	tree.c	FUNCTION_3	CALL_1
0x40004dd	          0x4989f8	                             mov r8, rdi	        57	tree.c	FUNCTION_3	CALL_1
0x40004e0	          0x4489d1	                           mov ecx, r10d	        57	tree.c	FUNCTION_3	CALL_1
0x40004e3	          0x4889c7	                            mov rdi, rax	        57	tree.c	FUNCTION_3	CALL_1
0x40004e6	      0xe824feffff	             call sym.read_one_entry_opt	        57	tree.c	FUNCTION_3	CALL_1
0x40004eb	        0x4883c410	                           add rsp, 0x10	        57	tree.c	FUNCTION_3	CALL_1
0x40004ef	              0xc9	                                   leave	        60	tree.c	FUNCTION_3
0x40004f0	              0xc3	                                     ret	        60	tree.c	FUNCTION_3
tree_entry_len	CALL,0:ELSE,0:IF,0:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	13
0x40002cb	              0x55	                                push rbp	        24	tree-walk.h	FUNCTION_81
0x40002cc	          0x4889e5	                            mov rbp, rsp	        24	tree-walk.h	FUNCTION_81
0x40002cf	        0x48897df8	                mov qword [rbp - 8], rdi	        24	tree-walk.h	FUNCTION_81
0x40002d3	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	tree-walk.h	FUNCTION_81
0x40002d7	          0x488b00	                    mov rax, qword [rax]	        25	tree-walk.h	FUNCTION_81
0x40002da	          0x4889c2	                            mov rdx, rax	        25	tree-walk.h	FUNCTION_81
0x40002dd	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	tree-walk.h	FUNCTION_81
0x40002e1	        0x488b4008	                mov rax, qword [rax + 8]	        25	tree-walk.h	FUNCTION_81
0x40002e5	          0x4829c2	                            sub rdx, rax	        25	tree-walk.h	FUNCTION_81
0x40002e8	          0x4889d0	                            mov rax, rdx	        25	tree-walk.h	FUNCTION_81
0x40002eb	          0x83e801	                              sub eax, 1	        25	tree-walk.h	FUNCTION_81
0x40002ee	              0x5d	                                 pop rbp	        26	tree-walk.h	FUNCTION_81
0x40002ef	              0xc3	                                     ret	        26	tree-walk.h	FUNCTION_81
create_ce_flags	CALL,0:ELSE,0:IF,0:DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0	7
0x40001c3	              0x55	                                push rbp	       241	cache.h	FUNCTION_14
0x40001c4	          0x4889e5	                            mov rbp, rsp	       241	cache.h	FUNCTION_14
0x40001c7	          0x897dfc	                mov dword [rbp - 4], edi	       241	cache.h	FUNCTION_14
0x40001ca	          0x8b45fc	                mov eax, dword [rbp - 4]	       242	cache.h	FUNCTION_14
0x40001cd	          0xc1e00c	                            shl eax, 0xc	       242	cache.h	FUNCTION_14
0x40001d0	              0x5d	                                 pop rbp	       243	cache.h	FUNCTION_14
0x40001d1	              0xc3	                                     ret	       243	cache.h	FUNCTION_14
