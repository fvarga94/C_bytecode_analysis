run_add_interactive	FOR,1:functions,0:ELSE,0:SWITCH,0:CALL,7:IF,2:WHILE,0:DO,0	70
0x40009dd	              0x55	                                push rbp	       184	add.c	FUNCTION_8
0x40009de	          0x4889e5	                            mov rbp, rsp	       184	add.c	FUNCTION_8
0x40009e1	        0x4883ec50	                           sub rsp, 0x50	       184	add.c	FUNCTION_8
0x40009e5	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       184	add.c	FUNCTION_8
0x40009e9	        0x488975c0	             mov qword [rbp - 0x40], rsi	       184	add.c	FUNCTION_8
0x40009ed	        0x488955b8	             mov qword [rbp - 0x48], rdx	       184	add.c	FUNCTION_8
0x40009f1	    0x64488b042528	                mov rax, qword fs:[0x28]	       184	add.c	FUNCTION_8
0x40009fa	        0x488945f8	                mov qword [rbp - 8], rax	       184	add.c	FUNCTION_8
0x40009fe	            0x31c0	                            xor eax, eax	       184	add.c	FUNCTION_8
0x4000a00	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       186	add.c	FUNCTION_8
0x4000a08	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       186	add.c	FUNCTION_8
0x4000a0f	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       186	add.c	FUNCTION_8
0x4000a16	        0x488d45e0	                   lea rax, [rbp - 0x20]	       188	add.c	FUNCTION_8	CALL_1
0x4000a1a	      0xbe00000000	                              mov esi, 0	       188	add.c	FUNCTION_8	CALL_1
0x4000a1f	          0x4889c7	                            mov rdi, rax	       188	add.c	FUNCTION_8	CALL_1
0x4000a22	      0xe800000000	                          call 0x4000a27	       188	add.c	FUNCTION_8	CALL_1
0x4000a27	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       189	add.c	FUNCTION_8	IF_1
0x4000a2c	            0x7413	                            je 0x4000a41	       189	add.c	FUNCTION_8	IF_1
0x4000a2e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       190	add.c	FUNCTION_8	CALL_2
0x4000a32	        0x488d45e0	                   lea rax, [rbp - 0x20]	       190	add.c	FUNCTION_8	CALL_2
0x4000a36	          0x4889d6	                            mov rsi, rdx	       190	add.c	FUNCTION_8	CALL_2
0x4000a39	          0x4889c7	                            mov rdi, rax	       190	add.c	FUNCTION_8	CALL_2
0x4000a3c	      0xe800000000	                          call 0x4000a41	       190	add.c	FUNCTION_8	CALL_2
0x4000a41	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       191	add.c	FUNCTION_8	IF_2
0x4000a46	            0x7413	                            je 0x4000a5b	       191	add.c	FUNCTION_8	IF_2
0x4000a48	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       192	add.c	FUNCTION_8	CALL_3
0x4000a4c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       192	add.c	FUNCTION_8	CALL_3
0x4000a50	          0x4889d6	                            mov rsi, rdx	       192	add.c	FUNCTION_8	CALL_3
0x4000a53	          0x4889c7	                            mov rdi, rax	       192	add.c	FUNCTION_8	CALL_3
0x4000a56	      0xe800000000	                          call 0x4000a5b	       192	add.c	FUNCTION_8	CALL_3
0x4000a5b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       193	add.c	FUNCTION_8	CALL_4
0x4000a5f	      0xbe00000000	                              mov esi, 0	       193	add.c	FUNCTION_8	CALL_4
0x4000a64	          0x4889c7	                            mov rdi, rax	       193	add.c	FUNCTION_8	CALL_4
0x4000a67	      0xe800000000	                          call 0x4000a6c	       193	add.c	FUNCTION_8	CALL_4
0x4000a6c	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       194	add.c	FUNCTION_8	FOR_1
0x4000a73	            0xeb39	                           jmp 0x4000aae	       194	add.c	FUNCTION_8	FOR_1
0x4000a75	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       196	add.c	FUNCTION_8	CALL_5
0x4000a79	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       196	add.c	FUNCTION_8	CALL_5
0x4000a7d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       196	add.c	FUNCTION_8	CALL_5
0x4000a80	            0x4898	                                    cdqe	       196	add.c	FUNCTION_8	CALL_5
0x4000a82	        0x48c1e003	                              shl rax, 3	       196	add.c	FUNCTION_8	CALL_5
0x4000a86	    0x488d0cc50000	                        lea rcx, [rax*8]	       196	add.c	FUNCTION_8	CALL_5
0x4000a8e	          0x4829c1	                            sub rcx, rax	       196	add.c	FUNCTION_8	CALL_5
0x4000a91	          0x4889c8	                            mov rax, rcx	       196	add.c	FUNCTION_8	CALL_5
0x4000a94	          0x4801d0	                            add rax, rdx	       196	add.c	FUNCTION_8	CALL_5
0x4000a97	        0x488b5008	                mov rdx, qword [rax + 8]	       196	add.c	FUNCTION_8	CALL_5
0x4000a9b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       196	add.c	FUNCTION_8	CALL_5
0x4000a9f	          0x4889d6	                            mov rsi, rdx	       196	add.c	FUNCTION_8	CALL_5
0x4000aa2	          0x4889c7	                            mov rdi, rax	       196	add.c	FUNCTION_8	CALL_5
0x4000aa5	      0xe800000000	                          call 0x4000aaa	       196	add.c	FUNCTION_8	CALL_5
0x4000aaa	        0x8345d801	               add dword [rbp - 0x28], 1	       194	add.c	FUNCTION_8	FOR_1
0x4000aae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       194	add.c	FUNCTION_8	FOR_1
0x4000ab2	            0x8b00	                    mov eax, dword [rax]	       194	add.c	FUNCTION_8	FOR_1
0x4000ab4	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	       194	add.c	FUNCTION_8	FOR_1
0x4000ab7	            0x7fbc	                            jg 0x4000a75	       194	add.c	FUNCTION_8	FOR_1
0x4000ab9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       198	add.c	FUNCTION_8	CALL_6
0x4000abd	      0xbe02000000	                              mov esi, 2	       198	add.c	FUNCTION_8	CALL_6
0x4000ac2	          0x4889c7	                            mov rdi, rax	       198	add.c	FUNCTION_8	CALL_6
0x4000ac5	      0xe800000000	                          call 0x4000aca	       198	add.c	FUNCTION_8	CALL_6
0x4000aca	          0x8945dc	             mov dword [rbp - 0x24], eax	       198	add.c	FUNCTION_8	CALL_6
0x4000acd	        0x488d45e0	                   lea rax, [rbp - 0x20]	       199	add.c	FUNCTION_8	CALL_7
0x4000ad1	          0x4889c7	                            mov rdi, rax	       199	add.c	FUNCTION_8	CALL_7
0x4000ad4	      0xe800000000	                          call 0x4000ad9	       199	add.c	FUNCTION_8	CALL_7
0x4000ad9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       200	add.c	FUNCTION_8
0x4000adc	        0x488b4df8	                mov rcx, qword [rbp - 8]	       201	add.c	FUNCTION_8
0x4000ae0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       201	add.c	FUNCTION_8
0x4000ae9	            0x7405	                            je 0x4000af0	       201	add.c	FUNCTION_8
0x4000aeb	      0xe800000000	                          call 0x4000af0	       201	add.c	FUNCTION_8
0x4000af0	              0xc9	                                   leave	       201	add.c	FUNCTION_8
0x4000af1	              0xc3	                                     ret	       201	add.c	FUNCTION_8
refresh	FOR,1:functions,0:ELSE,0:SWITCH,0:CALL,6:IF,1:WHILE,0:DO,0	66
0x40008fb	              0x55	                                push rbp	       167	add.c	FUNCTION_7
0x40008fc	          0x4889e5	                            mov rbp, rsp	       167	add.c	FUNCTION_7
0x40008ff	              0x53	                                push rbx	       167	add.c	FUNCTION_7
0x4000900	        0x4883ec28	                           sub rsp, 0x28	       167	add.c	FUNCTION_7
0x4000904	          0x897ddc	             mov dword [rbp - 0x24], edi	       167	add.c	FUNCTION_7
0x4000907	        0x488975d0	             mov qword [rbp - 0x30], rsi	       167	add.c	FUNCTION_7
0x400090b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       171	add.c	FUNCTION_7	CALL_1
0x400090f	            0x8b00	                    mov eax, dword [rax]	       171	add.c	FUNCTION_7	CALL_1
0x4000911	            0x4898	                                    cdqe	       171	add.c	FUNCTION_7	CALL_1
0x4000913	      0xbe01000000	                              mov esi, 1	       171	add.c	FUNCTION_7	CALL_1
0x4000918	          0x4889c7	                            mov rdi, rax	       171	add.c	FUNCTION_7	CALL_1
0x400091b	      0xe800000000	                          call 0x4000920	       171	add.c	FUNCTION_7	CALL_1
0x4000920	        0x488945e8	             mov qword [rbp - 0x18], rax	       171	add.c	FUNCTION_7	CALL_1
0x4000924	      0xbf00000000	                              mov edi, 0	       172	add.c	FUNCTION_7	CALL_2
0x4000929	      0xe849f9ffff	                               call sym.	       172	add.c	FUNCTION_7	CALL_2
0x400092e	          0x4889c1	                            mov rcx, rax	       172	add.c	FUNCTION_7	CALL_2
0x4000931	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       172	add.c	FUNCTION_7	CALL_2
0x4000935	            0x7407	                            je 0x400093e	       172	add.c	FUNCTION_7	CALL_2
0x4000937	      0xbe20000000	                           mov esi, 0x20	       172	add.c	FUNCTION_7	CALL_2
0x400093c	            0xeb05	                           jmp 0x4000943	       172	add.c	FUNCTION_7	CALL_2
0x400093e	      0xbe04000000	                              mov esi, 4	       172	add.c	FUNCTION_7	CALL_2
0x4000943	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       172	add.c	FUNCTION_7	CALL_2
0x4000947	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       172	add.c	FUNCTION_7	CALL_2
0x400094b	          0x4989c8	                             mov r8, rcx	       172	add.c	FUNCTION_7	CALL_2
0x400094e	          0x4889d1	                            mov rcx, rdx	       172	add.c	FUNCTION_7	CALL_2
0x4000951	          0x4889c2	                            mov rdx, rax	       172	add.c	FUNCTION_7	CALL_2
0x4000954	      0xbf00000000	                              mov edi, 0	       172	add.c	FUNCTION_7	CALL_2
0x4000959	      0xe800000000	                          call 0x400095e	       172	add.c	FUNCTION_7	CALL_2
0x400095e	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       174	add.c	FUNCTION_7	FOR_1
0x4000965	            0xeb57	                           jmp 0x40009be	       174	add.c	FUNCTION_7	FOR_1
0x4000967	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       175	add.c	FUNCTION_7	FOR_1	IF_1
0x400096a	          0x4863d0	                         movsxd rdx, eax	       175	add.c	FUNCTION_7	FOR_1	IF_1
0x400096d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       175	add.c	FUNCTION_7	FOR_1	IF_1
0x4000971	          0x4801d0	                            add rax, rdx	       175	add.c	FUNCTION_7	FOR_1	IF_1
0x4000974	           0xfb600	                   movzx eax, byte [rax]	       175	add.c	FUNCTION_7	FOR_1	IF_1
0x4000977	            0x84c0	                             test al, al	       175	add.c	FUNCTION_7	FOR_1	IF_1
0x4000979	            0x753f	                           jne 0x40009ba	       175	add.c	FUNCTION_7	FOR_1	IF_1
0x400097b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x400097f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x4000983	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x4000986	            0x4898	                                    cdqe	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x4000988	        0x48c1e003	                              shl rax, 3	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x400098c	    0x488d0cc50000	                        lea rcx, [rax*8]	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x4000994	          0x4829c1	                            sub rcx, rax	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x4000997	          0x4889c8	                            mov rax, rcx	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x400099a	          0x4801d0	                            add rax, rdx	       177	add.c	FUNCTION_7	FOR_1	IF_1
0x400099d	          0x488b18	                    mov rbx, qword [rax]	       176	add.c	FUNCTION_7	FOR_1	IF_1	CALL_5
0x40009a0	      0xbf00000000	                              mov edi, 0	       176	add.c	FUNCTION_7	FOR_1	IF_1	CALL_5
0x40009a5	      0xe8cdf8ffff	                               call sym.	       176	add.c	FUNCTION_7	FOR_1	IF_1	CALL_5
0x40009aa	          0x4889de	                            mov rsi, rbx	       176	add.c	FUNCTION_7	FOR_1	IF_1	CALL_5
0x40009ad	          0x4889c7	                            mov rdi, rax	       176	add.c	FUNCTION_7	FOR_1	IF_1	CALL_5
0x40009b0	      0xb800000000	                              mov eax, 0	       176	add.c	FUNCTION_7	FOR_1	IF_1	CALL_5
0x40009b5	      0xe800000000	                          call 0x40009ba	       176	add.c	FUNCTION_7	FOR_1	IF_1	CALL_5
0x40009ba	        0x8345e401	               add dword [rbp - 0x1c], 1	       174	add.c	FUNCTION_7	FOR_1
0x40009be	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       174	add.c	FUNCTION_7	FOR_1
0x40009c2	            0x8b00	                    mov eax, dword [rax]	       174	add.c	FUNCTION_7	FOR_1
0x40009c4	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       174	add.c	FUNCTION_7	FOR_1
0x40009c7	            0x7f9e	                            jg 0x4000967	       174	add.c	FUNCTION_7	FOR_1
0x40009c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       179	add.c	FUNCTION_7	CALL_6
0x40009cd	          0x4889c7	                            mov rdi, rax	       179	add.c	FUNCTION_7	CALL_6
0x40009d0	      0xe800000000	                          call 0x40009d5	       179	add.c	FUNCTION_7	CALL_6
0x40009d5	              0x90	                                     nop	       180	add.c	FUNCTION_7
0x40009d6	        0x4883c428	                           add rsp, 0x28	       180	add.c	FUNCTION_7
0x40009da	              0x5b	                                 pop rbx	       180	add.c	FUNCTION_7
0x40009db	              0x5d	                                 pop rbp	       180	add.c	FUNCTION_7
0x40009dc	              0xc3	                                     ret	       180	add.c	FUNCTION_7
strbuf_addstr	FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,2:IF,0:WHILE,0:DO,0	17
0x40001ea	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_20
0x40001eb	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_20
0x40001ee	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_20
0x40001f2	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_20
0x40001f6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_20
0x40001fa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_20	CALL_2
0x40001fe	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_20	CALL_2
0x4000201	      0xe800000000	                          call 0x4000206	       279	strbuf.h	FUNCTION_20	CALL_2
0x4000206	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_20	CALL_2
0x4000209	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_20	CALL_2
0x400020d	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_20	CALL_2
0x4000211	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_20	CALL_2
0x4000214	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_20	CALL_2
0x4000217	      0xe800000000	                          call 0x400021c	       279	strbuf.h	FUNCTION_20	CALL_2
0x400021c	              0x90	                                     nop	       280	strbuf.h	FUNCTION_20
0x400021d	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_20
0x400021e	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_20
strip_suffix	FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,2:IF,0:WHILE,0:DO,0	20
0x40000c1	              0x55	                                push rbp	       554	git-compat-util.h	FUNCTION_37
0x40000c2	          0x4889e5	                            mov rbp, rsp	       554	git-compat-util.h	FUNCTION_37
0x40000c5	        0x4883ec20	                           sub rsp, 0x20	       554	git-compat-util.h	FUNCTION_37
0x40000c9	        0x48897df8	                mov qword [rbp - 8], rdi	       554	git-compat-util.h	FUNCTION_37
0x40000cd	        0x488975f0	             mov qword [rbp - 0x10], rsi	       554	git-compat-util.h	FUNCTION_37
0x40000d1	        0x488955e8	             mov qword [rbp - 0x18], rdx	       554	git-compat-util.h	FUNCTION_37
0x40000d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       555	git-compat-util.h	FUNCTION_37	CALL_1
0x40000d9	          0x4889c7	                            mov rdi, rax	       555	git-compat-util.h	FUNCTION_37	CALL_1
0x40000dc	      0xe800000000	                          call 0x40000e1	       555	git-compat-util.h	FUNCTION_37	CALL_1
0x40000e1	          0x4889c2	                            mov rdx, rax	       555	git-compat-util.h	FUNCTION_37	CALL_1
0x40000e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       555	git-compat-util.h	FUNCTION_37	CALL_1
0x40000e8	          0x488910	                    mov qword [rax], rdx	       555	git-compat-util.h	FUNCTION_37	CALL_1
0x40000eb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       556	git-compat-util.h	FUNCTION_37	CALL_2
0x40000ef	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       556	git-compat-util.h	FUNCTION_37	CALL_2
0x40000f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       556	git-compat-util.h	FUNCTION_37	CALL_2
0x40000f7	          0x4889ce	                            mov rsi, rcx	       556	git-compat-util.h	FUNCTION_37	CALL_2
0x40000fa	          0x4889c7	                            mov rdi, rax	       556	git-compat-util.h	FUNCTION_37	CALL_2
0x40000fd	      0xe83effffff	               call sym.strip_suffix_mem	       556	git-compat-util.h	FUNCTION_37	CALL_2
0x4000102	              0xc9	                                   leave	       557	git-compat-util.h	FUNCTION_37
0x4000103	              0xc3	                                     ret	       557	git-compat-util.h	FUNCTION_37
dir_path_match	FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,1:IF,0:WHILE,0:DO,0	45
0x4000319	              0x55	                                push rbp	       343	dir.h	FUNCTION_56
0x400031a	          0x4889e5	                            mov rbp, rsp	       343	dir.h	FUNCTION_56
0x400031d	        0x4883ec30	                           sub rsp, 0x30	       343	dir.h	FUNCTION_56
0x4000321	        0x48897de8	             mov qword [rbp - 0x18], rdi	       343	dir.h	FUNCTION_56
0x4000325	        0x488975e0	             mov qword [rbp - 0x20], rsi	       343	dir.h	FUNCTION_56
0x4000329	          0x8955dc	             mov dword [rbp - 0x24], edx	       343	dir.h	FUNCTION_56
0x400032c	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       343	dir.h	FUNCTION_56
0x4000330	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       344	dir.h	FUNCTION_56
0x4000334	            0x8b00	                    mov eax, dword [rax]	       344	dir.h	FUNCTION_56
0x4000336	            0x85c0	                           test eax, eax	       344	dir.h	FUNCTION_56
0x4000338	            0x741f	                            je 0x4000359	       344	dir.h	FUNCTION_56
0x400033a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       344	dir.h	FUNCTION_56
0x400033e	            0x8b00	                    mov eax, dword [rax]	       344	dir.h	FUNCTION_56
0x4000340	          0x8d50ff	                      lea edx, [rax - 1]	       344	dir.h	FUNCTION_56
0x4000343	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       344	dir.h	FUNCTION_56
0x4000347	            0x89d2	                            mov edx, edx	       344	dir.h	FUNCTION_56
0x4000349	       0xfb6441004	        movzx eax, byte [rax + rdx + 4] 	       344	dir.h	FUNCTION_56
0x400034e	            0x3c2f	                            cmp al, 0x2f	       344	dir.h	FUNCTION_56
0x4000350	            0x7507	                           jne 0x4000359	       344	dir.h	FUNCTION_56
0x4000352	      0xb801000000	                              mov eax, 1	       344	dir.h	FUNCTION_56
0x4000357	            0xeb05	                           jmp 0x400035e	       344	dir.h	FUNCTION_56
0x4000359	      0xb800000000	                              mov eax, 0	       344	dir.h	FUNCTION_56
0x400035e	          0x8945f8	                mov dword [rbp - 8], eax	       344	dir.h	FUNCTION_56
0x4000361	        0x837df800	                  cmp dword [rbp - 8], 0	       345	dir.h	FUNCTION_56
0x4000365	            0x740b	                            je 0x4000372	       345	dir.h	FUNCTION_56
0x4000367	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       345	dir.h	FUNCTION_56
0x400036b	            0x8b00	                    mov eax, dword [rax]	       345	dir.h	FUNCTION_56
0x400036d	          0x83e801	                              sub eax, 1	       345	dir.h	FUNCTION_56
0x4000370	            0xeb06	                           jmp 0x4000378	       345	dir.h	FUNCTION_56
0x4000372	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       345	dir.h	FUNCTION_56
0x4000376	            0x8b00	                    mov eax, dword [rax]	       345	dir.h	FUNCTION_56
0x4000378	          0x8945fc	                mov dword [rbp - 4], eax	       345	dir.h	FUNCTION_56
0x400037b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       346	dir.h	FUNCTION_56	CALL_1
0x400037f	        0x488d7004	                      lea rsi, [rax + 4]	       346	dir.h	FUNCTION_56	CALL_1
0x4000383	        0x448b45f8	                mov r8d, dword [rbp - 8]	       346	dir.h	FUNCTION_56	CALL_1
0x4000387	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	       346	dir.h	FUNCTION_56	CALL_1
0x400038b	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	       346	dir.h	FUNCTION_56	CALL_1
0x400038e	          0x8b55fc	                mov edx, dword [rbp - 4]	       346	dir.h	FUNCTION_56	CALL_1
0x4000391	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       346	dir.h	FUNCTION_56	CALL_1
0x4000395	          0x4589c1	                            mov r9d, r8d	       346	dir.h	FUNCTION_56	CALL_1
0x4000398	          0x4989f8	                             mov r8, rdi	       346	dir.h	FUNCTION_56	CALL_1
0x400039b	          0x4889c7	                            mov rdi, rax	       346	dir.h	FUNCTION_56	CALL_1
0x400039e	      0xe800000000	                          call 0x40003a3	       346	dir.h	FUNCTION_56	CALL_1
0x40003a3	              0xc9	                                   leave	       348	dir.h	FUNCTION_56
0x40003a4	              0xc3	                                     ret	       348	dir.h	FUNCTION_56
fix_unmerged_status	FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,0:IF,2:WHILE,0:DO,0	27
0x4000459	              0x55	                                push rbp	        53	add.c	FUNCTION_2
0x400045a	          0x4889e5	                            mov rbp, rsp	        53	add.c	FUNCTION_2
0x400045d	        0x48897df8	                mov qword [rbp - 8], rdi	        53	add.c	FUNCTION_2
0x4000461	        0x488975f0	             mov qword [rbp - 0x10], rsi	        53	add.c	FUNCTION_2
0x4000465	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	add.c	FUNCTION_2	IF_1
0x4000469	         0xfb64012	           movzx eax, byte [rax + 0x12] 	        54	add.c	FUNCTION_2	IF_1
0x400046d	            0x3c55	                            cmp al, 0x55	        54	add.c	FUNCTION_2	IF_1
0x400046f	            0x740d	                            je 0x400047e	        54	add.c	FUNCTION_2	IF_1
0x4000471	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	add.c	FUNCTION_2	IF_1
0x4000475	         0xfb64012	           movzx eax, byte [rax + 0x12] 	        55	add.c	FUNCTION_2	IF_1
0x4000479	           0xfbec0	                           movsx eax, al	        55	add.c	FUNCTION_2	IF_1
0x400047c	            0xeb2a	                           jmp 0x40004a8	        55	add.c	FUNCTION_2	IF_1
0x400047e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        56	add.c	FUNCTION_2	IF_2
0x4000482	            0x8b00	                    mov eax, dword [rax]	        56	add.c	FUNCTION_2	IF_2
0x4000484	          0x83e008	                              and eax, 8	        56	add.c	FUNCTION_2	IF_2
0x4000487	            0x85c0	                           test eax, eax	        56	add.c	FUNCTION_2	IF_2
0x4000489	            0x7518	                           jne 0x40004a3	        56	add.c	FUNCTION_2	IF_2
0x400048b	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	add.c	FUNCTION_2	IF_2
0x400048f	        0x488b4008	                mov rax, qword [rax + 8]	        56	add.c	FUNCTION_2	IF_2
0x4000493	         0xfb74040	           movzx eax, word [rax + 0x40] 	        56	add.c	FUNCTION_2	IF_2
0x4000497	          0x6685c0	                             test ax, ax	        56	add.c	FUNCTION_2	IF_2
0x400049a	            0x7507	                           jne 0x40004a3	        56	add.c	FUNCTION_2	IF_2
0x400049c	      0xb844000000	                           mov eax, 0x44	        61	add.c	FUNCTION_2	IF_2
0x40004a1	            0xeb05	                           jmp 0x40004a8	        61	add.c	FUNCTION_2	IF_2
0x40004a3	      0xb84d000000	                           mov eax, 0x4d	        69	add.c	FUNCTION_2	ELSE_1
0x40004a8	              0x5d	                                 pop rbp	        70	add.c	FUNCTION_2	ELSE_1
0x40004a9	              0xc3	                                     ret	        70	add.c	FUNCTION_2	ELSE_1
prune_directory	FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,3:IF,1:WHILE,1:DO,0	60
0x400082c	              0x55	                                push rbp	       147	add.c	FUNCTION_6
0x400082d	          0x4889e5	                            mov rbp, rsp	       147	add.c	FUNCTION_6
0x4000830	        0x4883ec50	                           sub rsp, 0x50	       147	add.c	FUNCTION_6
0x4000834	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       147	add.c	FUNCTION_6
0x4000838	        0x488975c0	             mov qword [rbp - 0x40], rsi	       147	add.c	FUNCTION_6
0x400083c	          0x8955bc	             mov dword [rbp - 0x44], edx	       147	add.c	FUNCTION_6
0x400083f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       152	add.c	FUNCTION_6	CALL_1
0x4000843	            0x8b00	                    mov eax, dword [rax]	       152	add.c	FUNCTION_6	CALL_1
0x4000845	            0x4898	                                    cdqe	       152	add.c	FUNCTION_6	CALL_1
0x4000847	      0xbe01000000	                              mov esi, 1	       152	add.c	FUNCTION_6	CALL_1
0x400084c	          0x4889c7	                            mov rdi, rax	       152	add.c	FUNCTION_6	CALL_1
0x400084f	      0xe800000000	                          call 0x4000854	       152	add.c	FUNCTION_6	CALL_1
0x4000854	        0x488945f0	             mov qword [rbp - 0x10], rax	       152	add.c	FUNCTION_6	CALL_1
0x4000858	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       154	add.c	FUNCTION_6
0x400085c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       154	add.c	FUNCTION_6
0x4000860	        0x488945e8	             mov qword [rbp - 0x18], rax	       154	add.c	FUNCTION_6
0x4000864	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       154	add.c	FUNCTION_6
0x4000868	        0x488945e0	             mov qword [rbp - 0x20], rax	       154	add.c	FUNCTION_6
0x400086c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       155	add.c	FUNCTION_6
0x4000870	            0x8b00	                    mov eax, dword [rax]	       155	add.c	FUNCTION_6
0x4000872	          0x8945dc	             mov dword [rbp - 0x24], eax	       155	add.c	FUNCTION_6
0x4000875	            0xeb41	                           jmp 0x40008b8	       156	add.c	FUNCTION_6	WHILE_1
0x4000877	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       157	add.c	FUNCTION_6	WHILE_1
0x400087b	        0x488d5008	                      lea rdx, [rax + 8]	       157	add.c	FUNCTION_6	WHILE_1
0x400087f	        0x488955e0	             mov qword [rbp - 0x20], rdx	       157	add.c	FUNCTION_6	WHILE_1
0x4000883	          0x488b00	                    mov rax, qword [rax]	       157	add.c	FUNCTION_6	WHILE_1
0x4000886	        0x488945f8	                mov qword [rbp - 8], rax	       157	add.c	FUNCTION_6	WHILE_1
0x400088a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x400088e	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x4000891	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x4000895	        0x488b45f8	                mov rax, qword [rbp - 8]	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x4000899	          0x4889c7	                            mov rdi, rax	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x400089c	      0xe878faffff	                 call sym.dir_path_match	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x40008a1	            0x85c0	                           test eax, eax	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x40008a3	            0x7413	                            je 0x40008b8	       158	add.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x40008a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	add.c	FUNCTION_6	WHILE_1	IF_1
0x40008a9	        0x488d5008	                      lea rdx, [rax + 8]	       159	add.c	FUNCTION_6	WHILE_1	IF_1
0x40008ad	        0x488955e8	             mov qword [rbp - 0x18], rdx	       159	add.c	FUNCTION_6	WHILE_1	IF_1
0x40008b1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       159	add.c	FUNCTION_6	WHILE_1	IF_1
0x40008b5	          0x488910	                    mov qword [rax], rdx	       159	add.c	FUNCTION_6	WHILE_1	IF_1
0x40008b8	        0x836ddc01	               sub dword [rbp - 0x24], 1	       156	add.c	FUNCTION_6	WHILE_1
0x40008bc	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       156	add.c	FUNCTION_6	WHILE_1
0x40008c0	            0x79b5	                           jns 0x4000877	       156	add.c	FUNCTION_6	WHILE_1
0x40008c2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       161	add.c	FUNCTION_6
0x40008c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       161	add.c	FUNCTION_6
0x40008ca	        0x488b4018	            mov rax, qword [rax + 0x18] 	       161	add.c	FUNCTION_6
0x40008ce	          0x4829c2	                            sub rdx, rax	       161	add.c	FUNCTION_6
0x40008d1	          0x4889d0	                            mov rax, rdx	       161	add.c	FUNCTION_6
0x40008d4	        0x48c1f803	                              sar rax, 3	       161	add.c	FUNCTION_6
0x40008d8	            0x89c2	                            mov edx, eax	       161	add.c	FUNCTION_6
0x40008da	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       161	add.c	FUNCTION_6
0x40008de	            0x8910	                    mov dword [rax], edx	       161	add.c	FUNCTION_6
0x40008e0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       162	add.c	FUNCTION_6	CALL_3
0x40008e4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       162	add.c	FUNCTION_6	CALL_3
0x40008e8	      0xbe00000000	                              mov esi, 0	       162	add.c	FUNCTION_6	CALL_3
0x40008ed	          0x4889c7	                            mov rdi, rax	       162	add.c	FUNCTION_6	CALL_3
0x40008f0	      0xe800000000	                          call 0x40008f5	       162	add.c	FUNCTION_6	CALL_3
0x40008f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       163	add.c	FUNCTION_6
0x40008f9	              0xc9	                                   leave	       164	add.c	FUNCTION_6
0x40008fa	              0xc3	                                     ret	       164	add.c	FUNCTION_6
strbuf_strip_suffix	FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,2:IF,1:WHILE,0:DO,0	26
0x400021f	              0x55	                                push rbp	       495	strbuf.h	FUNCTION_21
0x4000220	          0x4889e5	                            mov rbp, rsp	       495	strbuf.h	FUNCTION_21
0x4000223	        0x4883ec10	                           sub rsp, 0x10	       495	strbuf.h	FUNCTION_21
0x4000227	        0x48897df8	                mov qword [rbp - 8], rdi	       495	strbuf.h	FUNCTION_21
0x400022b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       495	strbuf.h	FUNCTION_21
0x400022f	        0x488b45f8	                mov rax, qword [rbp - 8]	       496	strbuf.h	FUNCTION_21	IF_1	CALL_1
0x4000233	        0x488d4808	                      lea rcx, [rax + 8]	       496	strbuf.h	FUNCTION_21	IF_1	CALL_1
0x4000237	        0x488b45f8	                mov rax, qword [rbp - 8]	       496	strbuf.h	FUNCTION_21	IF_1	CALL_1
0x400023b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       496	strbuf.h	FUNCTION_21	IF_1	CALL_1
0x400023f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       496	strbuf.h	FUNCTION_21	IF_1	CALL_1
0x4000243	          0x4889ce	                            mov rsi, rcx	       496	strbuf.h	FUNCTION_21	IF_1	CALL_1
0x4000246	          0x4889c7	                            mov rdi, rax	       496	strbuf.h	FUNCTION_21	IF_1	CALL_1
0x4000249	      0xe8f2fdffff	               call sym.strip_suffix_mem	       496	strbuf.h	FUNCTION_21	IF_1	CALL_1
0x400024e	            0x85c0	                           test eax, eax	       496	strbuf.h	FUNCTION_21	IF_1	CALL_1
0x4000250	            0x741e	                            je 0x4000270	       496	strbuf.h	FUNCTION_21	IF_1	CALL_1
0x4000252	        0x488b45f8	                mov rax, qword [rbp - 8]	       497	strbuf.h	FUNCTION_21	IF_1	CALL_2
0x4000256	        0x488b5008	                mov rdx, qword [rax + 8]	       497	strbuf.h	FUNCTION_21	IF_1	CALL_2
0x400025a	        0x488b45f8	                mov rax, qword [rbp - 8]	       497	strbuf.h	FUNCTION_21	IF_1	CALL_2
0x400025e	          0x4889d6	                            mov rsi, rdx	       497	strbuf.h	FUNCTION_21	IF_1	CALL_2
0x4000261	          0x4889c7	                            mov rdi, rax	       497	strbuf.h	FUNCTION_21	IF_1	CALL_2
0x4000264	      0xe8e7feffff	                  call sym.strbuf_setlen	       497	strbuf.h	FUNCTION_21	IF_1	CALL_2
0x4000269	      0xb801000000	                              mov eax, 1	       498	strbuf.h	FUNCTION_21	IF_1
0x400026e	            0xeb05	                           jmp 0x4000275	       498	strbuf.h	FUNCTION_21	IF_1
0x4000270	      0xb800000000	                              mov eax, 0	       500	strbuf.h	FUNCTION_21	ELSE_1
0x4000275	              0xc9	                                   leave	       501	strbuf.h	FUNCTION_21
0x4000276	              0xc3	                                     ret	       501	strbuf.h	FUNCTION_21
_	FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,0:IF,1:WHILE,0:DO,0	15
0x4000277	              0x55	                                push rbp	        51	gettext.h	FUNCTION_59
0x4000278	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_59
0x400027b	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_59
0x400027f	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_59
0x4000283	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_59	IF_1
0x4000287	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_59	IF_1
0x400028a	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_59	IF_1
0x400028c	            0x7507	                           jne 0x4000295	        52	gettext.h	FUNCTION_59	IF_1
0x400028e	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_59	IF_1
0x4000293	            0xeb0c	                           jmp 0x40002a1	        53	gettext.h	FUNCTION_59	IF_1
0x4000295	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_59
0x4000299	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_59
0x400029c	      0xe800000000	                          call 0x40002a1	        54	gettext.h	FUNCTION_59
0x40002a1	              0xc9	                                   leave	        55	gettext.h	FUNCTION_59
0x40002a2	              0xc3	                                     ret	        55	gettext.h	FUNCTION_59
strbuf_setlen	FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,2:IF,2:WHILE,0:DO,0	43
0x4000150	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_18
0x4000151	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_18
0x4000154	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_18
0x4000158	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_18
0x400015c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_18
0x4000160	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_18	IF_1
0x4000164	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_18	IF_1
0x4000167	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_18	IF_1
0x400016a	            0x740d	                            je 0x4000179	       162	strbuf.h	FUNCTION_18	IF_1
0x400016c	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_18	IF_1
0x4000170	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_18	IF_1
0x4000173	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_18	IF_1
0x4000177	            0xeb05	                           jmp 0x400017e	       162	strbuf.h	FUNCTION_18	IF_1
0x4000179	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_18	IF_1
0x400017e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_18	IF_1
0x4000182	            0x730f	                           jae 0x4000193	       162	strbuf.h	FUNCTION_18	IF_1
0x4000184	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_18	CALL_1
0x4000189	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_18	CALL_1
0x400018e	      0xe800000000	                          call 0x4000193	       163	strbuf.h	FUNCTION_18	CALL_1
0x4000193	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_18
0x4000197	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_18
0x400019b	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_18
0x400019f	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_18	IF_2
0x40001a3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_18	IF_2
0x40001a7	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_18	IF_2
0x40001ad	            0x7414	                            je 0x40001c3	       165	strbuf.h	FUNCTION_18	IF_2
0x40001af	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_18	IF_2
0x40001b3	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_18	IF_2
0x40001b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_18	IF_2
0x40001bb	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_18	IF_2
0x40001be	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_18	IF_2
0x40001c1	            0xeb24	                           jmp 0x40001e7	       169	strbuf.h	FUNCTION_18
0x40001c3	     0xfb605000000	           movzx eax, byte [0x040001ca] 	       168	strbuf.h	FUNCTION_18	CALL_2
0x40001ca	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_18	CALL_2
0x40001cc	            0x7419	                            je 0x40001e7	       168	strbuf.h	FUNCTION_18	CALL_2
0x40001ce	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_18	CALL_2
0x40001d3	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_18	CALL_2
0x40001d8	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_18	CALL_2
0x40001dd	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_18	CALL_2
0x40001e2	      0xe800000000	                          call 0x40001e7	       168	strbuf.h	FUNCTION_18	CALL_2
0x40001e7	              0x90	                                     nop	       169	strbuf.h	FUNCTION_18
0x40001e8	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_18
0x40001e9	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_18
chmod_pathspec	FOR,1:functions,0:ELSE,0:SWITCH,0:CALL,3:IF,2:WHILE,0:DO,0	50
0x40003a5	              0x55	                                push rbp	        37	add.c	FUNCTION_1
0x40003a6	          0x4889e5	                            mov rbp, rsp	        37	add.c	FUNCTION_1
0x40003a9	        0x4883ec20	                           sub rsp, 0x20	        37	add.c	FUNCTION_1
0x40003ad	        0x48897de8	             mov qword [rbp - 0x18], rdi	        37	add.c	FUNCTION_1
0x40003b1	            0x89f0	                            mov eax, esi	        37	add.c	FUNCTION_1
0x40003b3	          0x8845e4	               mov byte [rbp - 0x1c], al	        37	add.c	FUNCTION_1
0x40003b6	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        40	add.c	FUNCTION_1	FOR_1
0x40003bd	      0xe983000000	                           jmp 0x4000445	        40	add.c	FUNCTION_1	FOR_1
0x40003c2	    0x488b05000000	            mov rax, qword [0x040003c9] 	        41	add.c	FUNCTION_1	FOR_1
0x40003c9	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        41	add.c	FUNCTION_1	FOR_1
0x40003cc	          0x4863d2	                         movsxd rdx, edx	        41	add.c	FUNCTION_1	FOR_1
0x40003cf	        0x48c1e203	                              shl rdx, 3	        41	add.c	FUNCTION_1	FOR_1
0x40003d3	          0x4801d0	                            add rax, rdx	        41	add.c	FUNCTION_1	FOR_1
0x40003d6	          0x488b00	                    mov rax, qword [rax]	        41	add.c	FUNCTION_1	FOR_1
0x40003d9	        0x488945f8	                mov qword [rbp - 8], rax	        41	add.c	FUNCTION_1	FOR_1
0x40003dd	      0x48837de800	               cmp qword [rbp - 0x18], 0	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40003e2	            0x741c	                            je 0x4000400	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40003e4	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40003e8	        0x488b45f8	                mov rax, qword [rbp - 8]	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40003ec	      0xba00000000	                              mov edx, 0	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40003f1	          0x4889ce	                            mov rsi, rcx	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40003f4	          0x4889c7	                            mov rdi, rax	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40003f7	      0xe8a7feffff	                  call sym.ce_path_match	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40003fc	            0x85c0	                           test eax, eax	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40003fe	            0x7440	                            je 0x4000440	        43	add.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000400	         0xfbe55e4	            movsx edx, byte [rbp - 0x1c]	        46	add.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000404	        0x488b45f8	                mov rax, qword [rbp - 8]	        46	add.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000408	          0x4889c6	                            mov rsi, rax	        46	add.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x400040b	      0xbf00000000	                              mov edi, 0	        46	add.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000410	      0xe800000000	                          call 0x4000415	        46	add.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000415	            0x85c0	                           test eax, eax	        46	add.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000417	            0x7928	                           jns 0x4000441	        46	add.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000419	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x400041d	        0x488d4858	                   lea rcx, [rax + 0x58]	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x4000421	         0xfbe55e4	            movsx edx, byte [rbp - 0x1c]	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x4000425	    0x488b05000000	            mov rax, qword [0x0400042c] 	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x400042c	      0xbe00000000	                              mov esi, 0	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x4000431	          0x4889c7	                            mov rdi, rax	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x4000434	      0xb800000000	                              mov eax, 0	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x4000439	      0xe800000000	                          call 0x400043e	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x400043e	            0xeb01	                           jmp 0x4000441	        47	add.c	FUNCTION_1	FOR_1	CALL_3
0x4000440	              0x90	                                     nop	        44	add.c	FUNCTION_1	FOR_1	IF_1
0x4000441	        0x8345f401	                add dword [rbp - 0xc], 1	        40	add.c	FUNCTION_1	FOR_1
0x4000445	    0x8b1500000000	            mov edx, dword [0x0400044b] 	        40	add.c	FUNCTION_1	FOR_1
0x400044b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        40	add.c	FUNCTION_1	FOR_1
0x400044e	            0x39c2	                            cmp edx, eax	        40	add.c	FUNCTION_1	FOR_1
0x4000450	     0xf876cffffff	                            ja 0x40003c2	        40	add.c	FUNCTION_1	FOR_1
0x4000456	              0x90	                                     nop	        49	add.c	FUNCTION_1
0x4000457	              0xc9	                                   leave	        49	add.c	FUNCTION_1
0x4000458	              0xc3	                                     ret	        49	add.c	FUNCTION_1
check_embedded_repo	FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,7:IF,3:WHILE,0:DO,0	61
0x4000f38	              0x55	                                push rbp	       342	add.c	FUNCTION_13
0x4000f39	          0x4889e5	                            mov rbp, rsp	       342	add.c	FUNCTION_13
0x4000f3c	              0x53	                                push rbx	       342	add.c	FUNCTION_13
0x4000f3d	        0x4883ec38	                           sub rsp, 0x38	       342	add.c	FUNCTION_13
0x4000f41	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       342	add.c	FUNCTION_13
0x4000f45	    0x64488b042528	                mov rax, qword fs:[0x28]	       342	add.c	FUNCTION_13
0x4000f4e	        0x488945e8	             mov qword [rbp - 0x18], rax	       342	add.c	FUNCTION_13
0x4000f52	            0x31c0	                            xor eax, eax	       342	add.c	FUNCTION_13
0x4000f54	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       343	add.c	FUNCTION_13
0x4000f5c	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       343	add.c	FUNCTION_13
0x4000f64	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       343	add.c	FUNCTION_13
0x4000f6c	    0x8b0500000000	            mov eax, dword [0x04000f72] 	       345	add.c	FUNCTION_13	IF_1
0x4000f72	            0x85c0	                           test eax, eax	       345	add.c	FUNCTION_13	IF_1
0x4000f74	     0xf8497000000	                            je 0x4001011	       345	add.c	FUNCTION_13	IF_1
0x4000f7a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       347	add.c	FUNCTION_13	IF_2	CALL_1
0x4000f7e	      0xbe00000000	                              mov esi, 0	       347	add.c	FUNCTION_13	IF_2	CALL_1
0x4000f83	          0x4889c7	                            mov rdi, rax	       347	add.c	FUNCTION_13	IF_2	CALL_1
0x4000f86	      0xe879f1ffff	                      call sym.ends_with	       347	add.c	FUNCTION_13	IF_2	CALL_1
0x4000f8b	            0x85c0	                           test eax, eax	       347	add.c	FUNCTION_13	IF_2	CALL_1
0x4000f8d	     0xf8481000000	                            je 0x4001014	       347	add.c	FUNCTION_13	IF_2	CALL_1
0x4000f93	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       351	add.c	FUNCTION_13	CALL_2
0x4000f97	        0x488d45d0	                   lea rax, [rbp - 0x30]	       351	add.c	FUNCTION_13	CALL_2
0x4000f9b	          0x4889d6	                            mov rsi, rdx	       351	add.c	FUNCTION_13	CALL_2
0x4000f9e	          0x4889c7	                            mov rdi, rax	       351	add.c	FUNCTION_13	CALL_2
0x4000fa1	      0xe844f2ffff	                  call sym.strbuf_addstr	       351	add.c	FUNCTION_13	CALL_2
0x4000fa6	        0x488d45d0	                   lea rax, [rbp - 0x30]	       352	add.c	FUNCTION_13	CALL_3
0x4000faa	      0xbe00000000	                              mov esi, 0	       352	add.c	FUNCTION_13	CALL_3
0x4000faf	          0x4889c7	                            mov rdi, rax	       352	add.c	FUNCTION_13	CALL_3
0x4000fb2	      0xe868f2ffff	            call sym.strbuf_strip_suffix	       352	add.c	FUNCTION_13	CALL_3
0x4000fb7	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       354	add.c	FUNCTION_13	CALL_5
0x4000fbb	      0xbf00000000	                              mov edi, 0	       354	add.c	FUNCTION_13	CALL_5
0x4000fc0	      0xe8b2f2ffff	                               call sym.	       354	add.c	FUNCTION_13	CALL_5
0x4000fc5	          0x4889de	                            mov rsi, rbx	       354	add.c	FUNCTION_13	CALL_5
0x4000fc8	          0x4889c7	                            mov rdi, rax	       354	add.c	FUNCTION_13	CALL_5
0x4000fcb	      0xb800000000	                              mov eax, 0	       354	add.c	FUNCTION_13	CALL_5
0x4000fd0	      0xe800000000	                          call 0x4000fd5	       354	add.c	FUNCTION_13	CALL_5
0x4000fd5	    0x8b0500000000	            mov eax, dword [0x04000fdb] 	       355	add.c	FUNCTION_13	IF_3
0x4000fdb	            0x85c0	                           test eax, eax	       355	add.c	FUNCTION_13	IF_3
0x4000fdd	            0x7424	                            je 0x4001003	       355	add.c	FUNCTION_13	IF_3
0x4000fdf	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       356	add.c	FUNCTION_13	IF_3	CALL_6
0x4000fe3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       356	add.c	FUNCTION_13	IF_3	CALL_6
0x4000fe7	          0x4889c6	                            mov rsi, rax	       356	add.c	FUNCTION_13	IF_3	CALL_6
0x4000fea	      0xbf00000000	                              mov edi, 0	       356	add.c	FUNCTION_13	IF_3	CALL_6
0x4000fef	      0xb800000000	                              mov eax, 0	       356	add.c	FUNCTION_13	IF_3	CALL_6
0x4000ff4	      0xe800000000	                          call 0x4000ff9	       356	add.c	FUNCTION_13	IF_3	CALL_6
0x4000ff9	    0xc70500000000	               mov dword [0x04001003], 0	       358	add.c	FUNCTION_13	IF_3
0x4001003	        0x488d45d0	                   lea rax, [rbp - 0x30]	       361	add.c	FUNCTION_13	CALL_7
0x4001007	          0x4889c7	                            mov rdi, rax	       361	add.c	FUNCTION_13	CALL_7
0x400100a	      0xe800000000	                          call 0x400100f	       361	add.c	FUNCTION_13	CALL_7
0x400100f	            0xeb04	                           jmp 0x4001015	       361	add.c	FUNCTION_13	CALL_7
0x4001011	              0x90	                                     nop	       346	add.c	FUNCTION_13	IF_1
0x4001012	            0xeb01	                           jmp 0x4001015	       346	add.c	FUNCTION_13	IF_1
0x4001014	              0x90	                                     nop	       348	add.c	FUNCTION_13	IF_2
0x4001015	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       362	add.c	FUNCTION_13
0x4001019	    0x644833042528	                xor rax, qword fs:[0x28]	       362	add.c	FUNCTION_13
0x4001022	            0x7405	                            je 0x4001029	       362	add.c	FUNCTION_13
0x4001024	      0xe800000000	                          call 0x4001029	       362	add.c	FUNCTION_13
0x4001029	        0x4883c438	                           add rsp, 0x38	       362	add.c	FUNCTION_13
0x400102d	              0x5b	                                 pop rbx	       362	add.c	FUNCTION_13
0x400102e	              0x5d	                                 pop rbp	       362	add.c	FUNCTION_13
0x400102f	              0xc3	                                     ret	       362	add.c	FUNCTION_13
update_callback	FOR,1:functions,0:ELSE,0:SWITCH,1:CALL,9:IF,5:WHILE,0:DO,0	110
0x40004aa	              0x55	                                push rbp	        74	add.c	ELSE_1	FUNCTION_3
0x40004ab	          0x4889e5	                            mov rbp, rsp	        74	add.c	ELSE_1	FUNCTION_3
0x40004ae	              0x53	                                push rbx	        74	add.c	ELSE_1	FUNCTION_3
0x40004af	        0x4883ec48	                           sub rsp, 0x48	        74	add.c	ELSE_1	FUNCTION_3
0x40004b3	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        74	add.c	ELSE_1	FUNCTION_3
0x40004b7	        0x488975c0	             mov qword [rbp - 0x40], rsi	        74	add.c	ELSE_1	FUNCTION_3
0x40004bb	        0x488955b8	             mov qword [rbp - 0x48], rdx	        74	add.c	ELSE_1	FUNCTION_3
0x40004bf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        76	add.c	ELSE_1	FUNCTION_3
0x40004c3	        0x488945d8	             mov qword [rbp - 0x28], rax	        76	add.c	ELSE_1	FUNCTION_3
0x40004c7	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40004ce	      0xe92c010000	                           jmp 0x40005ff	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40004d3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40004d7	          0x488b00	                    mov rax, qword [rax]	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40004da	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40004dd	          0x4863d2	                         movsxd rdx, edx	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40004e0	        0x48c1e203	                              shl rdx, 3	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40004e4	          0x4801d0	                            add rax, rdx	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40004e7	          0x488b00	                    mov rax, qword [rax]	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40004ea	        0x488945e0	             mov qword [rbp - 0x20], rax	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40004ee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        80	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40004f2	          0x488b00	                    mov rax, qword [rax]	        80	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40004f5	        0x488b4018	            mov rax, qword [rax + 0x18] 	        80	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40004f9	        0x488945e8	             mov qword [rbp - 0x18], rax	        80	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40004fd	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000501	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000505	          0x4889d6	                            mov rsi, rdx	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000508	          0x4889c7	                            mov rdi, rax	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x400050b	      0xe849ffffff	            call sym.fix_unmerged_status	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000510	          0x83f84d	                           cmp eax, 0x4d	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000513	            0x742e	                            je 0x4000543	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000515	          0x83f854	                           cmp eax, 0x54	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000518	            0x7429	                            je 0x4000543	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x400051a	          0x83f844	                           cmp eax, 0x44	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x400051d	            0x747a	                            je 0x4000599	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x400051f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000523	         0xfb64012	           movzx eax, byte [rax + 0x12] 	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000527	           0xfbed8	                           movsx ebx, al	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x400052a	      0xbf00000000	                              mov edi, 0	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x400052f	      0xe843fdffff	                               call sym.	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000534	            0x89de	                            mov esi, ebx	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000536	          0x4889c7	                            mov rdi, rax	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000539	      0xb800000000	                              mov eax, 0	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x400053e	      0xe800000000	                          call 0x4000543	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000543	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x4000547	            0x8b10	                    mov edx, dword [rax]	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x4000549	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x400054d	          0x4889c6	                            mov rsi, rax	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x4000550	      0xbf00000000	                              mov edi, 0	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x4000555	      0xe800000000	                          call 0x400055a	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x400055a	            0x85c0	                           test eax, eax	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x400055c	     0xf8492000000	                            je 0x40005f4	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x4000562	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x4000566	            0x8b00	                    mov eax, dword [rax]	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x4000568	          0x83e004	                              and eax, 4	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x400056b	            0x85c0	                           test eax, eax	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x400056d	            0x7517	                           jne 0x4000586	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x400056f	      0xbf00000000	                              mov edi, 0	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x4000574	      0xe8fefcffff	                               call sym.	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x4000579	          0x4889c7	                            mov rdi, rax	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x400057c	      0xb800000000	                              mov eax, 0	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x4000581	      0xe800000000	                          call 0x4000586	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x4000586	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x400058a	          0x8b4004	                mov eax, dword [rax + 4]	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x400058d	          0x8d5001	                      lea edx, [rax + 1]	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x4000590	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x4000594	          0x895004	                mov dword [rax + 4], edx	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x4000597	            0xeb5b	                           jmp 0x40005f4	        91	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1
0x4000599	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x400059d	            0x8b00	                    mov eax, dword [rax]	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x400059f	          0x83e008	                              and eax, 8	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40005a2	            0x85c0	                           test eax, eax	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40005a4	            0x7551	                           jne 0x40005f7	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40005a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x40005aa	            0x8b00	                    mov eax, dword [rax]	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x40005ac	          0x83e002	                              and eax, 2	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x40005af	            0x85c0	                           test eax, eax	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x40005b1	            0x7511	                           jne 0x40005c4	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x40005b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x40005b7	          0x4889c6	                            mov rsi, rax	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x40005ba	      0xbf00000000	                              mov edi, 0	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x40005bf	      0xe800000000	                          call 0x40005c4	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x40005c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x40005c8	            0x8b00	                    mov eax, dword [rax]	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x40005ca	          0x83e003	                              and eax, 3	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x40005cd	            0x85c0	                           test eax, eax	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x40005cf	            0x7429	                            je 0x40005fa	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x40005d1	      0xbf00000000	                              mov edi, 0	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x40005d6	      0xe89cfcffff	                               call sym.	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x40005db	          0x4889c2	                            mov rdx, rax	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x40005de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x40005e2	          0x4889c6	                            mov rsi, rax	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x40005e5	          0x4889d7	                            mov rdi, rdx	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x40005e8	      0xb800000000	                              mov eax, 0	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x40005ed	      0xe800000000	                          call 0x40005f2	        98	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_9
0x40005f2	            0xeb06	                           jmp 0x40005fa	        99	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1
0x40005f4	              0x90	                                     nop	        91	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1
0x40005f5	            0xeb04	                           jmp 0x40005fb	        91	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1
0x40005f7	              0x90	                                     nop	        94	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40005f8	            0xeb01	                           jmp 0x40005fb	        94	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40005fa	              0x90	                                     nop	        99	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1
0x40005fb	        0x8345d401	               add dword [rbp - 0x2c], 1	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40005ff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000603	          0x8b400c	              mov eax, dword [rax + 0xc]	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000606	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000609	     0xf8fc4feffff	                            jg 0x40004d3	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x400060f	              0x90	                                     nop	       102	add.c	ELSE_1	FUNCTION_3
0x4000610	        0x4883c448	                           add rsp, 0x48	       102	add.c	ELSE_1	FUNCTION_3
0x4000614	              0x5b	                                 pop rbx	       102	add.c	ELSE_1	FUNCTION_3
0x4000615	              0x5d	                                 pop rbp	       102	add.c	ELSE_1	FUNCTION_3
0x4000616	              0xc3	                                     ret	       102	add.c	ELSE_1	FUNCTION_3
ce_path_match	FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,4:IF,0:WHILE,0:DO,0	34
0x40002a3	              0x55	                                push rbp	       335	dir.h	FUNCTION_55
0x40002a4	          0x4889e5	                            mov rbp, rsp	       335	dir.h	FUNCTION_55
0x40002a7	        0x4883ec20	                           sub rsp, 0x20	       335	dir.h	FUNCTION_55
0x40002ab	        0x48897df8	                mov qword [rbp - 8], rdi	       335	dir.h	FUNCTION_55
0x40002af	        0x488975f0	             mov qword [rbp - 0x10], rsi	       335	dir.h	FUNCTION_55
0x40002b3	        0x488955e8	             mov qword [rbp - 0x18], rdx	       335	dir.h	FUNCTION_55
0x40002b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_55	CALL_4
0x40002bb	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_55	CALL_4
0x40002be	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_55	CALL_4
0x40002c3	      0x3d00400000	                         cmp eax, 0x4000	       336	dir.h	FUNCTION_55	CALL_2
0x40002c8	            0x7413	                            je 0x40002dd	       336	dir.h	FUNCTION_55	CALL_2
0x40002ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_55	CALL_4
0x40002ce	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_55	CALL_4
0x40002d1	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_55	CALL_4
0x40002d6	      0x3d00e00000	                         cmp eax, 0xe000	       336	dir.h	FUNCTION_55	CALL_2
0x40002db	            0x7507	                           jne 0x40002e4	       336	dir.h	FUNCTION_55	CALL_2
0x40002dd	      0xb901000000	                              mov ecx, 1	       336	dir.h	FUNCTION_55	CALL_2
0x40002e2	            0xeb05	                           jmp 0x40002e9	       336	dir.h	FUNCTION_55	CALL_2
0x40002e4	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_55	CALL_2
0x40002e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_55	CALL_2
0x40002ed	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       336	dir.h	FUNCTION_55	CALL_2
0x40002f0	            0x89c7	                            mov edi, eax	       336	dir.h	FUNCTION_55	CALL_2
0x40002f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_55	CALL_2
0x40002f6	        0x488d7058	                   lea rsi, [rax + 0x58]	       336	dir.h	FUNCTION_55	CALL_2
0x40002fa	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       336	dir.h	FUNCTION_55	CALL_2
0x40002fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       336	dir.h	FUNCTION_55	CALL_2
0x4000302	          0x4189c9	                            mov r9d, ecx	       336	dir.h	FUNCTION_55	CALL_2
0x4000305	          0x4989d0	                             mov r8, rdx	       336	dir.h	FUNCTION_55	CALL_2
0x4000308	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_55	CALL_2
0x400030d	            0x89fa	                            mov edx, edi	       336	dir.h	FUNCTION_55	CALL_2
0x400030f	          0x4889c7	                            mov rdi, rax	       336	dir.h	FUNCTION_55	CALL_2
0x4000312	      0xe800000000	                          call 0x4000317	       336	dir.h	FUNCTION_55	CALL_2
0x4000317	              0xc9	                                   leave	       338	dir.h	FUNCTION_55
0x4000318	              0xc3	                                     ret	       338	dir.h	FUNCTION_55
edit_patch	FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,26:IF,7:WHILE,0:DO,0	157
0x4000b77	              0x55	                                push rbp	       219	add.c	FUNCTION_10
0x4000b78	          0x4889e5	                            mov rbp, rsp	       219	add.c	FUNCTION_10
0x4000b7b	    0x4881ec100a00	                          sub rsp, 0xa10	       219	add.c	FUNCTION_10
0x4000b82	    0x89bd0cf6ffff	            mov dword [rbp - 0x9f4], edi	       219	add.c	FUNCTION_10
0x4000b88	    0x4889b500f6ff	            mov qword [rbp - 0xa00], rsi	       219	add.c	FUNCTION_10
0x4000b8f	    0x488995f8f5ff	            mov qword [rbp - 0xa08], rdx	       219	add.c	FUNCTION_10
0x4000b96	    0x64488b042528	                mov rax, qword fs:[0x28]	       219	add.c	FUNCTION_10
0x4000b9f	        0x488945f8	                mov qword [rbp - 8], rax	       219	add.c	FUNCTION_10
0x4000ba3	            0x31c0	                            xor eax, eax	       219	add.c	FUNCTION_10
0x4000ba5	      0xbf00000000	                              mov edi, 0	       220	add.c	FUNCTION_10	CALL_1
0x4000baa	      0xb800000000	                              mov eax, 0	       220	add.c	FUNCTION_10	CALL_1
0x4000baf	      0xe800000000	                          call 0x4000bb4	       220	add.c	FUNCTION_10	CALL_1
0x4000bb4	    0x48898518f6ff	            mov qword [rbp - 0x9e8], rax	       220	add.c	FUNCTION_10	CALL_1
0x4000bbb	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	       221	add.c	FUNCTION_10
0x4000bc6	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	       221	add.c	FUNCTION_10
0x4000bd1	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	       221	add.c	FUNCTION_10
0x4000bdc	    0x48c78598f6ff	              mov qword [rbp - 0x968], 0	       221	add.c	FUNCTION_10
0x4000be7	    0x48c785a0f6ff	              mov qword [rbp - 0x960], 0	       221	add.c	FUNCTION_10
0x4000bf2	    0x488d9520f6ff	                  lea rdx, [rbp - 0x9e0]	       223	add.c	FUNCTION_10
0x4000bf9	      0xb800000000	                              mov eax, 0	       223	add.c	FUNCTION_10
0x4000bfe	      0xb90c000000	                            mov ecx, 0xc	       223	add.c	FUNCTION_10
0x4000c03	          0x4889d7	                            mov rdi, rdx	       223	add.c	FUNCTION_10
0x4000c06	          0xf348ab	              rep stosq qword [rdi], rax	       223	add.c	FUNCTION_10
0x4000c09	    0x48c78528f6ff	              mov qword [rbp - 0x9d8], 0	       223	add.c	FUNCTION_10
0x4000c14	    0x48c78538f6ff	              mov qword [rbp - 0x9c8], 0	       223	add.c	FUNCTION_10
0x4000c1f	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       228	add.c	FUNCTION_10
0x4000c26	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	       228	add.c	FUNCTION_10
0x4000c2d	      0xbe00000000	                              mov esi, 0	       230	add.c	FUNCTION_10	CALL_2
0x4000c32	      0xbf00000000	                              mov edi, 0	       230	add.c	FUNCTION_10	CALL_2
0x4000c37	      0xe800000000	                          call 0x4000c3c	       230	add.c	FUNCTION_10	CALL_2
0x4000c3c	      0xbf00000000	                              mov edi, 0	       232	add.c	FUNCTION_10	IF_1	CALL_3
0x4000c41	      0xe800000000	                          call 0x4000c46	       232	add.c	FUNCTION_10	IF_1	CALL_3
0x4000c46	            0x85c0	                           test eax, eax	       232	add.c	FUNCTION_10	IF_1	CALL_3
0x4000c48	            0x7917	                           jns 0x4000c61	       232	add.c	FUNCTION_10	IF_1	CALL_3
0x4000c4a	      0xbf00000000	                              mov edi, 0	       233	add.c	FUNCTION_10	CALL_5
0x4000c4f	      0xe823f6ffff	                               call sym.	       233	add.c	FUNCTION_10	CALL_5
0x4000c54	          0x4889c7	                            mov rdi, rax	       233	add.c	FUNCTION_10	CALL_5
0x4000c57	      0xb800000000	                              mov eax, 0	       233	add.c	FUNCTION_10	CALL_5
0x4000c5c	      0xe800000000	                          call 0x4000c61	       233	add.c	FUNCTION_10	CALL_5
0x4000c61	    0x488b95f8f5ff	            mov rdx, qword [rbp - 0xa08]	       235	add.c	FUNCTION_10	CALL_6
0x4000c68	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       235	add.c	FUNCTION_10	CALL_6
0x4000c6f	          0x4889d6	                            mov rsi, rdx	       235	add.c	FUNCTION_10	CALL_6
0x4000c72	          0x4889c7	                            mov rdi, rax	       235	add.c	FUNCTION_10	CALL_6
0x4000c75	      0xe800000000	                          call 0x4000c7a	       235	add.c	FUNCTION_10	CALL_6
0x4000c7a	    0xc7857cfcffff	              mov dword [rbp - 0x384], 7	       236	add.c	FUNCTION_10
0x4000c84	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       238	add.c	FUNCTION_10	CALL_7
0x4000c8b	    0x488bb500f6ff	            mov rsi, qword [rbp - 0xa00]	       238	add.c	FUNCTION_10	CALL_7
0x4000c92	    0x8b850cf6ffff	            mov eax, dword [rbp - 0x9f4]	       238	add.c	FUNCTION_10	CALL_7
0x4000c98	      0xb900000000	                              mov ecx, 0	       238	add.c	FUNCTION_10	CALL_7
0x4000c9d	            0x89c7	                            mov edi, eax	       238	add.c	FUNCTION_10	CALL_7
0x4000c9f	      0xe800000000	                          call 0x4000ca4	       238	add.c	FUNCTION_10	CALL_7
0x4000ca4	    0x89850cf6ffff	            mov dword [rbp - 0x9f4], eax	       238	add.c	FUNCTION_10	CALL_7
0x4000caa	    0xc78598fcffff	          mov dword [rbp - 0x368], 0x10 	       239	add.c	FUNCTION_10
0x4000cb4	    0xc78578fcffff	              mov dword [rbp - 0x388], 0	       240	add.c	FUNCTION_10
0x4000cbe	     0xfb68573fcff	           movzx eax, byte [rbp - 0x38d]	       241	add.c	FUNCTION_10
0x4000cc5	          0x83c802	                               or eax, 2	       241	add.c	FUNCTION_10
0x4000cc8	    0x888573fcffff	              mov byte [rbp - 0x38d], al	       241	add.c	FUNCTION_10
0x4000cce	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       242	add.c	FUNCTION_10	CALL_8
0x4000cd5	      0xbab6010000	                          mov edx, 0x1b6	       242	add.c	FUNCTION_10	CALL_8
0x4000cda	      0xbe41000000	                           mov esi, 0x41	       242	add.c	FUNCTION_10	CALL_8
0x4000cdf	          0x4889c7	                            mov rdi, rax	       242	add.c	FUNCTION_10	CALL_8
0x4000ce2	      0xb800000000	                              mov eax, 0	       242	add.c	FUNCTION_10	CALL_8
0x4000ce7	      0xe800000000	                          call 0x4000cec	       242	add.c	FUNCTION_10	CALL_8
0x4000cec	    0x898514f6ffff	            mov dword [rbp - 0x9ec], eax	       242	add.c	FUNCTION_10	CALL_8
0x4000cf2	    0x83bd14f6ffff	              cmp dword [rbp - 0x9ec], 0	       243	add.c	FUNCTION_10	IF_2
0x4000cf9	            0x7924	                           jns 0x4000d1f	       243	add.c	FUNCTION_10	IF_2
0x4000cfb	      0xbf00000000	                              mov edi, 0	       244	add.c	FUNCTION_10	CALL_10
0x4000d00	      0xe872f5ffff	                               call sym.	       244	add.c	FUNCTION_10	CALL_10
0x4000d05	          0x4889c2	                            mov rdx, rax	       244	add.c	FUNCTION_10	CALL_10
0x4000d08	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       244	add.c	FUNCTION_10	CALL_10
0x4000d0f	          0x4889c6	                            mov rsi, rax	       244	add.c	FUNCTION_10	CALL_10
0x4000d12	          0x4889d7	                            mov rdi, rdx	       244	add.c	FUNCTION_10	CALL_10
0x4000d15	      0xb800000000	                              mov eax, 0	       244	add.c	FUNCTION_10	CALL_10
0x4000d1a	      0xe800000000	                          call 0x4000d1f	       244	add.c	FUNCTION_10	CALL_10
0x4000d1f	    0x8b8514f6ffff	            mov eax, dword [rbp - 0x9ec]	       245	add.c	FUNCTION_10	CALL_11
0x4000d25	      0xbe00000000	                              mov esi, 0	       245	add.c	FUNCTION_10	CALL_11
0x4000d2a	            0x89c7	                            mov edi, eax	       245	add.c	FUNCTION_10	CALL_11
0x4000d2c	      0xe800000000	                          call 0x4000d31	       245	add.c	FUNCTION_10	CALL_11
0x4000d31	    0x48898538fdff	            mov qword [rbp - 0x2c8], rax	       245	add.c	FUNCTION_10	CALL_11
0x4000d38	    0xc78540fdffff	              mov dword [rbp - 0x2c0], 1	       246	add.c	FUNCTION_10
0x4000d42	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       247	add.c	FUNCTION_10	IF_3	CALL_12
0x4000d49	      0xbe00000000	                              mov esi, 0	       247	add.c	FUNCTION_10	IF_3	CALL_12
0x4000d4e	          0x4889c7	                            mov rdi, rax	       247	add.c	FUNCTION_10	IF_3	CALL_12
0x4000d51	      0xe800000000	                          call 0x4000d56	       247	add.c	FUNCTION_10	IF_3	CALL_12
0x4000d56	            0x85c0	                           test eax, eax	       247	add.c	FUNCTION_10	IF_3	CALL_12
0x4000d58	            0x7417	                            je 0x4000d71	       247	add.c	FUNCTION_10	IF_3	CALL_12
0x4000d5a	      0xbf00000000	                              mov edi, 0	       248	add.c	FUNCTION_10	CALL_14
0x4000d5f	      0xe813f5ffff	                               call sym.	       248	add.c	FUNCTION_10	CALL_14
0x4000d64	          0x4889c7	                            mov rdi, rax	       248	add.c	FUNCTION_10	CALL_14
0x4000d67	      0xb800000000	                              mov eax, 0	       248	add.c	FUNCTION_10	CALL_14
0x4000d6c	      0xe800000000	                          call 0x4000d71	       248	add.c	FUNCTION_10	CALL_14
0x4000d71	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       250	add.c	FUNCTION_10	IF_4	CALL_15
0x4000d78	      0xba00000000	                              mov edx, 0	       250	add.c	FUNCTION_10	IF_4	CALL_15
0x4000d7d	      0xbe00000000	                              mov esi, 0	       250	add.c	FUNCTION_10	IF_4	CALL_15
0x4000d82	          0x4889c7	                            mov rdi, rax	       250	add.c	FUNCTION_10	IF_4	CALL_15
0x4000d85	      0xe800000000	                          call 0x4000d8a	       250	add.c	FUNCTION_10	IF_4	CALL_15
0x4000d8a	            0x85c0	                           test eax, eax	       250	add.c	FUNCTION_10	IF_4	CALL_15
0x4000d8c	            0x7417	                            je 0x4000da5	       250	add.c	FUNCTION_10	IF_4	CALL_15
0x4000d8e	      0xbf00000000	                              mov edi, 0	       251	add.c	FUNCTION_10	CALL_17
0x4000d93	      0xe8dff4ffff	                               call sym.	       251	add.c	FUNCTION_10	CALL_17
0x4000d98	          0x4889c7	                            mov rdi, rax	       251	add.c	FUNCTION_10	CALL_17
0x4000d9b	      0xb800000000	                              mov eax, 0	       251	add.c	FUNCTION_10	CALL_17
0x4000da0	      0xe800000000	                          call 0x4000da5	       251	add.c	FUNCTION_10	CALL_17
0x4000da5	    0x488d95b0f6ff	                  lea rdx, [rbp - 0x950]	       253	add.c	FUNCTION_10	IF_5
0x4000dac	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       253	add.c	FUNCTION_10	IF_5
0x4000db3	          0x4889d6	                            mov rsi, rdx	       253	add.c	FUNCTION_10	IF_5
0x4000db6	          0x4889c7	                            mov rdi, rax	       253	add.c	FUNCTION_10	IF_5
0x4000db9	      0xe800000000	                          call 0x4000dbe	       253	add.c	FUNCTION_10	IF_5
0x4000dbe	            0x85c0	                           test eax, eax	       253	add.c	FUNCTION_10	IF_5
0x4000dc0	            0x7424	                            je 0x4000de6	       253	add.c	FUNCTION_10	IF_5
0x4000dc2	      0xbf00000000	                              mov edi, 0	       254	add.c	FUNCTION_10	CALL_19
0x4000dc7	      0xe8abf4ffff	                               call sym.	       254	add.c	FUNCTION_10	CALL_19
0x4000dcc	          0x4889c2	                            mov rdx, rax	       254	add.c	FUNCTION_10	CALL_19
0x4000dcf	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       254	add.c	FUNCTION_10	CALL_19
0x4000dd6	          0x4889c6	                            mov rsi, rax	       254	add.c	FUNCTION_10	CALL_19
0x4000dd9	          0x4889d7	                            mov rdi, rdx	       254	add.c	FUNCTION_10	CALL_19
0x4000ddc	      0xb800000000	                              mov eax, 0	       254	add.c	FUNCTION_10	CALL_19
0x4000de1	      0xe800000000	                          call 0x4000de6	       254	add.c	FUNCTION_10	CALL_19
0x4000de6	    0x488b85e0f6ff	            mov rax, qword [rbp - 0x920]	       255	add.c	FUNCTION_10	IF_6
0x4000ded	          0x4885c0	                           test rax, rax	       255	add.c	FUNCTION_10	IF_6
0x4000df0	            0x7517	                           jne 0x4000e09	       255	add.c	FUNCTION_10	IF_6
0x4000df2	      0xbf00000000	                              mov edi, 0	       256	add.c	FUNCTION_10	CALL_21
0x4000df7	      0xe87bf4ffff	                               call sym.	       256	add.c	FUNCTION_10	CALL_21
0x4000dfc	          0x4889c7	                            mov rdi, rax	       256	add.c	FUNCTION_10	CALL_21
0x4000dff	      0xb800000000	                              mov eax, 0	       256	add.c	FUNCTION_10	CALL_21
0x4000e04	      0xe800000000	                          call 0x4000e09	       256	add.c	FUNCTION_10	CALL_21
0x4000e09	     0xfb68568f6ff	           movzx eax, byte [rbp - 0x998]	       258	add.c	FUNCTION_10
0x4000e10	          0x83c808	                               or eax, 8	       258	add.c	FUNCTION_10
0x4000e13	    0x888568f6ffff	              mov byte [rbp - 0x998], al	       258	add.c	FUNCTION_10
0x4000e19	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	       259	add.c	FUNCTION_10
0x4000e20	    0x48898520f6ff	            mov qword [rbp - 0x9e0], rax	       259	add.c	FUNCTION_10
0x4000e27	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	       260	add.c	FUNCTION_10	IF_7	CALL_22
0x4000e2e	          0x4889c7	                            mov rdi, rax	       260	add.c	FUNCTION_10	IF_7	CALL_22
0x4000e31	      0xe800000000	                          call 0x4000e36	       260	add.c	FUNCTION_10	IF_7	CALL_22
0x4000e36	            0x85c0	                           test eax, eax	       260	add.c	FUNCTION_10	IF_7	CALL_22
0x4000e38	            0x7424	                            je 0x4000e5e	       260	add.c	FUNCTION_10	IF_7	CALL_22
0x4000e3a	      0xbf00000000	                              mov edi, 0	       261	add.c	FUNCTION_10	CALL_24
0x4000e3f	      0xe833f4ffff	                               call sym.	       261	add.c	FUNCTION_10	CALL_24
0x4000e44	          0x4889c2	                            mov rdx, rax	       261	add.c	FUNCTION_10	CALL_24
0x4000e47	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       261	add.c	FUNCTION_10	CALL_24
0x4000e4e	          0x4889c6	                            mov rsi, rax	       261	add.c	FUNCTION_10	CALL_24
0x4000e51	          0x4889d7	                            mov rdi, rdx	       261	add.c	FUNCTION_10	CALL_24
0x4000e54	      0xb800000000	                              mov eax, 0	       261	add.c	FUNCTION_10	CALL_24
0x4000e59	      0xe800000000	                          call 0x4000e5e	       261	add.c	FUNCTION_10	CALL_24
0x4000e5e	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       263	add.c	FUNCTION_10	CALL_25
0x4000e65	          0x4889c7	                            mov rdi, rax	       263	add.c	FUNCTION_10	CALL_25
0x4000e68	      0xe800000000	                          call 0x4000e6d	       263	add.c	FUNCTION_10	CALL_25
0x4000e6d	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       264	add.c	FUNCTION_10	CALL_26
0x4000e74	          0x4889c7	                            mov rdi, rax	       264	add.c	FUNCTION_10	CALL_26
0x4000e77	      0xe800000000	                          call 0x4000e7c	       264	add.c	FUNCTION_10	CALL_26
0x4000e7c	      0xb800000000	                              mov eax, 0	       265	add.c	FUNCTION_10
0x4000e81	        0x488b4df8	                mov rcx, qword [rbp - 8]	       266	add.c	FUNCTION_10
0x4000e85	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       266	add.c	FUNCTION_10
0x4000e8e	            0x7405	                            je 0x4000e95	       266	add.c	FUNCTION_10
0x4000e90	      0xe800000000	                          call 0x4000e95	       266	add.c	FUNCTION_10
0x4000e95	              0xc9	                                   leave	       266	add.c	FUNCTION_10
0x4000e96	              0xc3	                                     ret	       266	add.c	FUNCTION_10
interactive_add	FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,2:IF,0:WHILE,0:DO,0	35
0x4000af2	              0x55	                                push rbp	       204	add.c	FUNCTION_9
0x4000af3	          0x4889e5	                            mov rbp, rsp	       204	add.c	FUNCTION_9
0x4000af6	        0x4883ec40	                           sub rsp, 0x40	       204	add.c	FUNCTION_9
0x4000afa	          0x897ddc	             mov dword [rbp - 0x24], edi	       204	add.c	FUNCTION_9
0x4000afd	        0x488975d0	             mov qword [rbp - 0x30], rsi	       204	add.c	FUNCTION_9
0x4000b01	        0x488955c8	             mov qword [rbp - 0x38], rdx	       204	add.c	FUNCTION_9
0x4000b05	          0x894dd8	             mov dword [rbp - 0x28], ecx	       204	add.c	FUNCTION_9
0x4000b08	    0x64488b042528	                mov rax, qword fs:[0x28]	       204	add.c	FUNCTION_9
0x4000b11	        0x488945f8	                mov qword [rbp - 8], rax	       204	add.c	FUNCTION_9
0x4000b15	            0x31c0	                            xor eax, eax	       204	add.c	FUNCTION_9
0x4000b17	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       207	add.c	FUNCTION_9	CALL_1
0x4000b1b	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       207	add.c	FUNCTION_9	CALL_1
0x4000b1f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       207	add.c	FUNCTION_9	CALL_1
0x4000b23	          0x4989c8	                             mov r8, rcx	       207	add.c	FUNCTION_9	CALL_1
0x4000b26	          0x4889d1	                            mov rcx, rdx	       207	add.c	FUNCTION_9	CALL_1
0x4000b29	      0xba1a000000	                           mov edx, 0x1a	       207	add.c	FUNCTION_9	CALL_1
0x4000b2e	      0xbe00000000	                              mov esi, 0	       207	add.c	FUNCTION_9	CALL_1
0x4000b33	          0x4889c7	                            mov rdi, rax	       207	add.c	FUNCTION_9	CALL_1
0x4000b36	      0xe800000000	                          call 0x4000b3b	       207	add.c	FUNCTION_9	CALL_1
0x4000b3b	        0x837dd800	               cmp dword [rbp - 0x28], 0	       213	add.c	FUNCTION_9	CALL_2
0x4000b3f	            0x7407	                            je 0x4000b48	       213	add.c	FUNCTION_9	CALL_2
0x4000b41	      0xb900000000	                              mov ecx, 0	       213	add.c	FUNCTION_9	CALL_2
0x4000b46	            0xeb05	                           jmp 0x4000b4d	       213	add.c	FUNCTION_9	CALL_2
0x4000b48	      0xb900000000	                              mov ecx, 0	       213	add.c	FUNCTION_9	CALL_2
0x4000b4d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       213	add.c	FUNCTION_9	CALL_2
0x4000b51	          0x4889c2	                            mov rdx, rax	       213	add.c	FUNCTION_9	CALL_2
0x4000b54	          0x4889ce	                            mov rsi, rcx	       213	add.c	FUNCTION_9	CALL_2
0x4000b57	      0xbf00000000	                              mov edi, 0	       213	add.c	FUNCTION_9	CALL_2
0x4000b5c	      0xe800000000	                          call 0x4000b61	       213	add.c	FUNCTION_9	CALL_2
0x4000b61	        0x488b75f8	                mov rsi, qword [rbp - 8]	       216	add.c	FUNCTION_9
0x4000b65	    0x644833342528	                xor rsi, qword fs:[0x28]	       216	add.c	FUNCTION_9
0x4000b6e	            0x7405	                            je 0x4000b75	       216	add.c	FUNCTION_9
0x4000b70	      0xe800000000	                          call 0x4000b75	       216	add.c	FUNCTION_9
0x4000b75	              0xc9	                                   leave	       216	add.c	FUNCTION_9
0x4000b76	              0xc3	                                     ret	       216	add.c	FUNCTION_9
ends_with	FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,1:IF,0:WHILE,0:DO,0	20
0x4000104	              0x55	                                push rbp	       560	git-compat-util.h	FUNCTION_38
0x4000105	          0x4889e5	                            mov rbp, rsp	       560	git-compat-util.h	FUNCTION_38
0x4000108	        0x4883ec20	                           sub rsp, 0x20	       560	git-compat-util.h	FUNCTION_38
0x400010c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       560	git-compat-util.h	FUNCTION_38
0x4000110	        0x488975e0	             mov qword [rbp - 0x20], rsi	       560	git-compat-util.h	FUNCTION_38
0x4000114	    0x64488b042528	                mov rax, qword fs:[0x28]	       560	git-compat-util.h	FUNCTION_38
0x400011d	        0x488945f8	                mov qword [rbp - 8], rax	       560	git-compat-util.h	FUNCTION_38
0x4000121	            0x31c0	                            xor eax, eax	       560	git-compat-util.h	FUNCTION_38
0x4000123	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       562	git-compat-util.h	FUNCTION_38	CALL_1
0x4000127	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       562	git-compat-util.h	FUNCTION_38	CALL_1
0x400012b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       562	git-compat-util.h	FUNCTION_38	CALL_1
0x400012f	          0x4889ce	                            mov rsi, rcx	       562	git-compat-util.h	FUNCTION_38	CALL_1
0x4000132	          0x4889c7	                            mov rdi, rax	       562	git-compat-util.h	FUNCTION_38	CALL_1
0x4000135	      0xe887ffffff	                   call sym.strip_suffix	       562	git-compat-util.h	FUNCTION_38	CALL_1
0x400013a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       563	git-compat-util.h	FUNCTION_38
0x400013e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       563	git-compat-util.h	FUNCTION_38
0x4000147	            0x7405	                            je 0x400014e	       563	git-compat-util.h	FUNCTION_38
0x4000149	      0xe800000000	                          call 0x400014e	       563	git-compat-util.h	FUNCTION_38
0x400014e	              0xc9	                                   leave	       563	git-compat-util.h	FUNCTION_38
0x400014f	              0xc3	                                     ret	       563	git-compat-util.h	FUNCTION_38
cmd_add	FOR,1:functions,0:ELSE,3:SWITCH,0:CALL,44:IF,25:WHILE,0:DO,0	458
0x4001194	              0x55	                                push rbp	       388	add.c	FUNCTION_15
0x4001195	          0x4889e5	                            mov rbp, rsp	       388	add.c	FUNCTION_15
0x4001198	              0x53	                                push rbx	       388	add.c	FUNCTION_15
0x4001199	    0x4881ec980100	                          sub rsp, 0x198	       388	add.c	FUNCTION_15
0x40011a0	    0x89bd7cfeffff	            mov dword [rbp - 0x184], edi	       388	add.c	FUNCTION_15
0x40011a6	    0x4889b570feff	            mov qword [rbp - 0x190], rsi	       388	add.c	FUNCTION_15
0x40011ad	    0x48899568feff	            mov qword [rbp - 0x198], rdx	       388	add.c	FUNCTION_15
0x40011b4	    0x64488b042528	                mov rax, qword fs:[0x28]	       388	add.c	FUNCTION_15
0x40011bd	        0x488945e8	             mov qword [rbp - 0x18], rax	       388	add.c	FUNCTION_15
0x40011c1	            0x31c0	                            xor eax, eax	       388	add.c	FUNCTION_15
0x40011c3	    0xc78588feffff	              mov dword [rbp - 0x178], 0	       389	add.c	FUNCTION_15
0x40011cd	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	       395	add.c	FUNCTION_15
0x40011d8	      0xbe00000000	                              mov esi, 0	       397	add.c	FUNCTION_15	CALL_1
0x40011dd	      0xbf00000000	                              mov edi, 0	       397	add.c	FUNCTION_15	CALL_1
0x40011e2	      0xe800000000	                          call 0x40011e7	       397	add.c	FUNCTION_15	CALL_1
0x40011e7	    0x488b9568feff	            mov rdx, qword [rbp - 0x198]	       399	add.c	FUNCTION_15	CALL_2
0x40011ee	    0x488bb570feff	            mov rsi, qword [rbp - 0x190]	       399	add.c	FUNCTION_15	CALL_2
0x40011f5	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	       399	add.c	FUNCTION_15	CALL_2
0x40011fb	    0x41b904000000	                              mov r9d, 4	       399	add.c	FUNCTION_15	CALL_2
0x4001201	    0x41b800000000	                              mov r8d, 0	       399	add.c	FUNCTION_15	CALL_2
0x4001207	      0xb900000000	                              mov ecx, 0	       399	add.c	FUNCTION_15	CALL_2
0x400120c	            0x89c7	                            mov edi, eax	       399	add.c	FUNCTION_15	CALL_2
0x400120e	      0xe800000000	                          call 0x4001213	       399	add.c	FUNCTION_15	CALL_2
0x4001213	    0x89857cfeffff	            mov dword [rbp - 0x184], eax	       399	add.c	FUNCTION_15	CALL_2
0x4001219	    0x8b0500000000	            mov eax, dword [0x0400121f] 	       401	add.c	FUNCTION_15	IF_1
0x400121f	            0x85c0	                           test eax, eax	       401	add.c	FUNCTION_15	IF_1
0x4001221	            0x740a	                            je 0x400122d	       401	add.c	FUNCTION_15	IF_1
0x4001223	    0xc70500000000	               mov dword [0x0400122d], 1	       402	add.c	FUNCTION_15	IF_1
0x400122d	    0x8b0500000000	            mov eax, dword [0x04001233] 	       403	add.c	FUNCTION_15	IF_2
0x4001233	            0x85c0	                           test eax, eax	       403	add.c	FUNCTION_15	IF_2
0x4001235	            0x7432	                            je 0x4001269	       403	add.c	FUNCTION_15	IF_2
0x4001237	    0x8b1500000000	            mov edx, dword [0x0400123d] 	       404	add.c	FUNCTION_15	CALL_4
0x400123d	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	       404	add.c	FUNCTION_15	CALL_4
0x4001244	        0x488d7008	                      lea rsi, [rax + 8]	       404	add.c	FUNCTION_15	CALL_4
0x4001248	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	       404	add.c	FUNCTION_15	CALL_4
0x400124e	          0x8d78ff	                      lea edi, [rax - 1]	       404	add.c	FUNCTION_15	CALL_4
0x4001251	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	       404	add.c	FUNCTION_15	CALL_4
0x4001258	            0x89d1	                            mov ecx, edx	       404	add.c	FUNCTION_15	CALL_4
0x400125a	          0x4889c2	                            mov rdx, rax	       404	add.c	FUNCTION_15	CALL_4
0x400125d	      0xe800000000	                          call 0x4001262	       404	add.c	FUNCTION_15	CALL_4
0x4001262	            0x89c7	                            mov edi, eax	       404	add.c	FUNCTION_15	CALL_4
0x4001264	      0xe800000000	                          call 0x4001269	       404	add.c	FUNCTION_15	CALL_4
0x4001269	    0x8b0500000000	            mov eax, dword [0x0400126f] 	       406	add.c	FUNCTION_15	IF_3
0x400126f	            0x85c0	                           test eax, eax	       406	add.c	FUNCTION_15	IF_3
0x4001271	            0x7423	                            je 0x4001296	       406	add.c	FUNCTION_15	IF_3
0x4001273	    0x488b9568feff	            mov rdx, qword [rbp - 0x198]	       407	add.c	FUNCTION_15	CALL_5
0x400127a	    0x488b8d70feff	            mov rcx, qword [rbp - 0x190]	       407	add.c	FUNCTION_15	CALL_5
0x4001281	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	       407	add.c	FUNCTION_15	CALL_5
0x4001287	          0x4889ce	                            mov rsi, rcx	       407	add.c	FUNCTION_15	CALL_5
0x400128a	            0x89c7	                            mov edi, eax	       407	add.c	FUNCTION_15	CALL_5
0x400128c	      0xe8e6f8ffff	                     call sym.edit_patch	       407	add.c	FUNCTION_15	CALL_5
0x4001291	      0xe9c7060000	                           jmp 0x400195d	       407	add.c	FUNCTION_15	CALL_5
0x4001296	    0x83ad7cfeffff	              sub dword [rbp - 0x184], 1	       408	add.c	FUNCTION_15
0x400129d	    0x48838570feff	              add qword [rbp - 0x190], 8	       409	add.c	FUNCTION_15
0x40012a5	    0x8b0500000000	            mov eax, dword [0x040012ab] 	       411	add.c	FUNCTION_15	IF_4
0x40012ab	            0x85c0	                           test eax, eax	       411	add.c	FUNCTION_15	IF_4
0x40012ad	            0x780e	                            js 0x40012bd	       411	add.c	FUNCTION_15	IF_4
0x40012af	    0x8b0500000000	            mov eax, dword [0x040012b5] 	       412	add.c	FUNCTION_15	IF_4
0x40012b5	    0x890500000000	            mov dword [0x040012bb], eax 	       412	add.c	FUNCTION_15	IF_4
0x40012bb	            0xeb14	                           jmp 0x40012d1	       412	add.c	FUNCTION_15	IF_4
0x40012bd	    0x8b0500000000	            mov eax, dword [0x040012c3] 	       413	add.c	FUNCTION_15	ELSE_1	IF_5
0x40012c3	            0x85c0	                           test eax, eax	       413	add.c	FUNCTION_15	ELSE_1	IF_5
0x40012c5	            0x740a	                            je 0x40012d1	       413	add.c	FUNCTION_15	ELSE_1	IF_5
0x40012c7	    0xc70500000000	               mov dword [0x040012d1], 0	       414	add.c	FUNCTION_15	ELSE_1	IF_5
0x40012d1	    0x8b0500000000	            mov eax, dword [0x040012d7] 	       416	add.c	FUNCTION_15	IF_6
0x40012d7	            0x85c0	                           test eax, eax	       416	add.c	FUNCTION_15	IF_6
0x40012d9	            0x7421	                            je 0x40012fc	       416	add.c	FUNCTION_15	IF_6
0x40012db	    0x8b0500000000	            mov eax, dword [0x040012e1] 	       416	add.c	FUNCTION_15	IF_6
0x40012e1	            0x85c0	                           test eax, eax	       416	add.c	FUNCTION_15	IF_6
0x40012e3	            0x7417	                            je 0x40012fc	       416	add.c	FUNCTION_15	IF_6
0x40012e5	      0xbf00000000	                              mov edi, 0	       417	add.c	FUNCTION_15	CALL_7
0x40012ea	      0xe888efffff	                               call sym.	       417	add.c	FUNCTION_15	CALL_7
0x40012ef	          0x4889c7	                            mov rdi, rax	       417	add.c	FUNCTION_15	CALL_7
0x40012f2	      0xb800000000	                              mov eax, 0	       417	add.c	FUNCTION_15	CALL_7
0x40012f7	      0xe800000000	                          call 0x40012fc	       417	add.c	FUNCTION_15	CALL_7
0x40012fc	    0x8b0500000000	            mov eax, dword [0x04001302] 	       419	add.c	FUNCTION_15	IF_7
0x4001302	            0x85c0	                           test eax, eax	       419	add.c	FUNCTION_15	IF_7
0x4001304	            0x751d	                           jne 0x4001323	       419	add.c	FUNCTION_15	IF_7
0x4001306	    0x8b0500000000	            mov eax, dword [0x0400130c] 	       419	add.c	FUNCTION_15	IF_7
0x400130c	            0x85c0	                           test eax, eax	       419	add.c	FUNCTION_15	IF_7
0x400130e	            0x7913	                           jns 0x4001323	       419	add.c	FUNCTION_15	IF_7
0x4001310	    0x83bd7cfeffff	              cmp dword [rbp - 0x184], 0	       419	add.c	FUNCTION_15	IF_7
0x4001317	            0x740a	                            je 0x4001323	       419	add.c	FUNCTION_15	IF_7
0x4001319	    0xc70500000000	               mov dword [0x04001323], 1	       421	add.c	FUNCTION_15	IF_7
0x4001323	    0x8b0500000000	            mov eax, dword [0x04001329] 	       423	add.c	FUNCTION_15	IF_8
0x4001329	            0x85c0	                           test eax, eax	       423	add.c	FUNCTION_15	IF_8
0x400132b	            0x7521	                           jne 0x400134e	       423	add.c	FUNCTION_15	IF_8
0x400132d	    0x8b0500000000	            mov eax, dword [0x04001333] 	       423	add.c	FUNCTION_15	IF_8
0x4001333	            0x85c0	                           test eax, eax	       423	add.c	FUNCTION_15	IF_8
0x4001335	            0x7417	                            je 0x400134e	       423	add.c	FUNCTION_15	IF_8
0x4001337	      0xbf00000000	                              mov edi, 0	       424	add.c	FUNCTION_15	CALL_9
0x400133c	      0xe836efffff	                               call sym.	       424	add.c	FUNCTION_15	CALL_9
0x4001341	          0x4889c7	                            mov rdi, rax	       424	add.c	FUNCTION_15	CALL_9
0x4001344	      0xb800000000	                              mov eax, 0	       424	add.c	FUNCTION_15	CALL_9
0x4001349	      0xe800000000	                          call 0x400134e	       424	add.c	FUNCTION_15	CALL_9
0x400134e	    0x488b05000000	            mov rax, qword [0x04001355] 	       426	add.c	FUNCTION_15	IF_9
0x4001355	          0x4885c0	                           test rax, rax	       426	add.c	FUNCTION_15	IF_9
0x4001358	            0x7461	                            je 0x40013bb	       426	add.c	FUNCTION_15	IF_9
0x400135a	    0x488b05000000	            mov rax, qword [0x04001361] 	       426	add.c	FUNCTION_15	IF_9
0x4001361	           0xfb600	                   movzx eax, byte [rax]	       426	add.c	FUNCTION_15	IF_9
0x4001364	            0x3c2d	                            cmp al, 0x2d	       426	add.c	FUNCTION_15	IF_9
0x4001366	            0x740e	                            je 0x4001376	       426	add.c	FUNCTION_15	IF_9
0x4001368	    0x488b05000000	            mov rax, qword [0x0400136f] 	       426	add.c	FUNCTION_15	IF_9
0x400136f	           0xfb600	                   movzx eax, byte [rax]	       426	add.c	FUNCTION_15	IF_9
0x4001372	            0x3c2b	                            cmp al, 0x2b	       426	add.c	FUNCTION_15	IF_9
0x4001374	            0x7524	                           jne 0x400139a	       426	add.c	FUNCTION_15	IF_9
0x4001376	    0x488b05000000	            mov rax, qword [0x0400137d] 	       427	add.c	FUNCTION_15	IF_9
0x400137d	        0x4883c001	                              add rax, 1	       427	add.c	FUNCTION_15	IF_9
0x4001381	           0xfb600	                   movzx eax, byte [rax]	       427	add.c	FUNCTION_15	IF_9
0x4001384	            0x3c78	                            cmp al, 0x78	       426	add.c	FUNCTION_15	IF_9
0x4001386	            0x7512	                           jne 0x400139a	       426	add.c	FUNCTION_15	IF_9
0x4001388	    0x488b05000000	            mov rax, qword [0x0400138f] 	       427	add.c	FUNCTION_15	IF_9
0x400138f	        0x4883c002	                              add rax, 2	       427	add.c	FUNCTION_15	IF_9
0x4001393	           0xfb600	                   movzx eax, byte [rax]	       427	add.c	FUNCTION_15	IF_9
0x4001396	            0x84c0	                             test al, al	       427	add.c	FUNCTION_15	IF_9
0x4001398	            0x7421	                            je 0x40013bb	       427	add.c	FUNCTION_15	IF_9
0x400139a	    0x488b1d000000	            mov rbx, qword [0x040013a1] 	       428	add.c	FUNCTION_15	CALL_11
0x40013a1	      0xbf00000000	                              mov edi, 0	       428	add.c	FUNCTION_15	CALL_11
0x40013a6	      0xe8cceeffff	                               call sym.	       428	add.c	FUNCTION_15	CALL_11
0x40013ab	          0x4889de	                            mov rsi, rbx	       428	add.c	FUNCTION_15	CALL_11
0x40013ae	          0x4889c7	                            mov rdi, rax	       428	add.c	FUNCTION_15	CALL_11
0x40013b1	      0xb800000000	                              mov eax, 0	       428	add.c	FUNCTION_15	CALL_11
0x40013b6	      0xe800000000	                          call 0x40013bb	       428	add.c	FUNCTION_15	CALL_11
0x40013bb	    0x8b0500000000	            mov eax, dword [0x040013c1] 	       430	add.c	FUNCTION_15
0x40013c1	            0x85c0	                           test eax, eax	       430	add.c	FUNCTION_15
0x40013c3	            0x751b	                           jne 0x40013e0	       430	add.c	FUNCTION_15
0x40013c5	    0x8b0500000000	            mov eax, dword [0x040013cb] 	       430	add.c	FUNCTION_15
0x40013cb	            0x85c0	                           test eax, eax	       430	add.c	FUNCTION_15
0x40013cd	            0x7511	                           jne 0x40013e0	       430	add.c	FUNCTION_15
0x40013cf	    0x8b0500000000	            mov eax, dword [0x040013d5] 	       430	add.c	FUNCTION_15
0x40013d5	            0x85c0	                           test eax, eax	       430	add.c	FUNCTION_15
0x40013d7	            0x7507	                           jne 0x40013e0	       430	add.c	FUNCTION_15
0x40013d9	      0xb801000000	                              mov eax, 1	       430	add.c	FUNCTION_15
0x40013de	            0xeb05	                           jmp 0x40013e5	       430	add.c	FUNCTION_15
0x40013e0	      0xb800000000	                              mov eax, 0	       430	add.c	FUNCTION_15
0x40013e5	    0x898590feffff	            mov dword [rbp - 0x170], eax	       430	add.c	FUNCTION_15
0x40013eb	    0x8b0500000000	            mov eax, dword [0x040013f1] 	       431	add.c	FUNCTION_15
0x40013f1	            0x85c0	                           test eax, eax	       431	add.c	FUNCTION_15
0x40013f3	            0x7511	                           jne 0x4001406	       431	add.c	FUNCTION_15
0x40013f5	    0x8b0500000000	            mov eax, dword [0x040013fb] 	       431	add.c	FUNCTION_15
0x40013fb	            0x85c0	                           test eax, eax	       431	add.c	FUNCTION_15
0x40013fd	            0x7f07	                            jg 0x4001406	       431	add.c	FUNCTION_15
0x40013ff	      0xb801000000	                              mov eax, 1	       431	add.c	FUNCTION_15
0x4001404	            0xeb05	                           jmp 0x400140b	       431	add.c	FUNCTION_15
0x4001406	      0xb800000000	                              mov eax, 0	       431	add.c	FUNCTION_15
0x400140b	    0x898594feffff	            mov dword [rbp - 0x16c], eax	       431	add.c	FUNCTION_15
0x4001411	      0xbe01000000	                              mov esi, 1	       433	add.c	FUNCTION_15	CALL_12
0x4001416	      0xbf00000000	                              mov edi, 0	       433	add.c	FUNCTION_15	CALL_12
0x400141b	      0xe800000000	                          call 0x4001420	       433	add.c	FUNCTION_15	CALL_12
0x4001420	    0x8b0500000000	            mov eax, dword [0x04001426] 	       435	add.c	FUNCTION_15
0x4001426	            0x85c0	                           test eax, eax	       435	add.c	FUNCTION_15
0x4001428	           0xf95c0	                                setne al	       435	add.c	FUNCTION_15
0x400142b	           0xfb6d0	                           movzx edx, al	       435	add.c	FUNCTION_15
0x400142e	    0x8b0500000000	            mov eax, dword [0x04001434] 	       436	add.c	FUNCTION_15
0x4001434	            0x85c0	                           test eax, eax	       436	add.c	FUNCTION_15
0x4001436	            0x7407	                            je 0x400143f	       436	add.c	FUNCTION_15
0x4001438	      0xb802000000	                              mov eax, 2	       436	add.c	FUNCTION_15
0x400143d	            0xeb05	                           jmp 0x4001444	       436	add.c	FUNCTION_15
0x400143f	      0xb800000000	                              mov eax, 0	       436	add.c	FUNCTION_15
0x4001444	             0x9c2	                             or edx, eax	       435	add.c	FUNCTION_15
0x4001446	    0x8b0500000000	            mov eax, dword [0x0400144c] 	       437	add.c	FUNCTION_15
0x400144c	            0x85c0	                           test eax, eax	       437	add.c	FUNCTION_15
0x400144e	            0x7407	                            je 0x4001457	       437	add.c	FUNCTION_15
0x4001450	      0xb810000000	                           mov eax, 0x10	       437	add.c	FUNCTION_15
0x4001455	            0xeb05	                           jmp 0x400145c	       437	add.c	FUNCTION_15
0x4001457	      0xb800000000	                              mov eax, 0	       437	add.c	FUNCTION_15
0x400145c	             0x9c2	                             or edx, eax	       436	add.c	FUNCTION_15
0x400145e	    0x8b0500000000	            mov eax, dword [0x04001464] 	       438	add.c	FUNCTION_15
0x4001464	            0x85c0	                           test eax, eax	       438	add.c	FUNCTION_15
0x4001466	            0x7407	                            je 0x400146f	       438	add.c	FUNCTION_15
0x4001468	      0xb804000000	                              mov eax, 4	       438	add.c	FUNCTION_15
0x400146d	            0xeb05	                           jmp 0x4001474	       438	add.c	FUNCTION_15
0x400146f	      0xb800000000	                              mov eax, 0	       438	add.c	FUNCTION_15
0x4001474	             0x9c2	                             or edx, eax	       437	add.c	FUNCTION_15
0x4001476	    0x8b0500000000	            mov eax, dword [0x0400147c] 	       439	add.c	FUNCTION_15
0x400147c	            0x85c0	                           test eax, eax	       440	add.c	FUNCTION_15
0x400147e	            0x7511	                           jne 0x4001491	       440	add.c	FUNCTION_15
0x4001480	    0x8b0500000000	            mov eax, dword [0x04001486] 	       439	add.c	FUNCTION_15
0x4001486	            0x85c0	                           test eax, eax	       439	add.c	FUNCTION_15
0x4001488	            0x7507	                           jne 0x4001491	       439	add.c	FUNCTION_15
0x400148a	      0xb808000000	                              mov eax, 8	       440	add.c	FUNCTION_15
0x400148f	            0xeb05	                           jmp 0x4001496	       440	add.c	FUNCTION_15
0x4001491	      0xb800000000	                              mov eax, 0	       440	add.c	FUNCTION_15
0x4001496	             0x9d0	                             or eax, edx	       435	add.c	FUNCTION_15
0x4001498	    0x898598feffff	            mov dword [rbp - 0x168], eax	       435	add.c	FUNCTION_15
0x400149e	    0x83bd94feffff	              cmp dword [rbp - 0x16c], 0	       442	add.c	FUNCTION_15	IF_10
0x40014a5	            0x745b	                            je 0x4001502	       442	add.c	FUNCTION_15	IF_10
0x40014a7	    0x83bd7cfeffff	              cmp dword [rbp - 0x184], 0	       442	add.c	FUNCTION_15	IF_10
0x40014ae	            0x7552	                           jne 0x4001502	       442	add.c	FUNCTION_15	IF_10
0x40014b0	      0xbf00000000	                              mov edi, 0	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x40014b5	      0xe8bdedffff	                               call sym.	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x40014ba	          0x4889c2	                            mov rdx, rax	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x40014bd	    0x488b05000000	            mov rax, qword [0x040014c4] 	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x40014c4	          0x4889d6	                            mov rsi, rdx	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x40014c7	          0x4889c7	                            mov rdi, rax	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x40014ca	      0xb800000000	                              mov eax, 0	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x40014cf	      0xe800000000	                          call 0x40014d4	       443	add.c	FUNCTION_15	IF_10	CALL_14
0x40014d4	      0xbf00000000	                              mov edi, 0	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x40014d9	      0xe899edffff	                               call sym.	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x40014de	          0x4889c2	                            mov rdx, rax	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x40014e1	    0x488b05000000	            mov rax, qword [0x040014e8] 	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x40014e8	          0x4889d6	                            mov rsi, rdx	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x40014eb	          0x4889c7	                            mov rdi, rax	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x40014ee	      0xb800000000	                              mov eax, 0	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x40014f3	      0xe800000000	                          call 0x40014f8	       444	add.c	FUNCTION_15	IF_10	CALL_16
0x40014f8	      0xb800000000	                              mov eax, 0	       445	add.c	FUNCTION_15	IF_10
0x40014fd	      0xe95b040000	                           jmp 0x400195d	       445	add.c	FUNCTION_15	IF_10
0x4001502	      0xbf00000000	                              mov edi, 0	       448	add.c	FUNCTION_15	IF_11	CALL_17
0x4001507	      0xe800000000	                          call 0x400150c	       448	add.c	FUNCTION_15	IF_11	CALL_17
0x400150c	            0x85c0	                           test eax, eax	       448	add.c	FUNCTION_15	IF_11	CALL_17
0x400150e	            0x7917	                           jns 0x4001527	       448	add.c	FUNCTION_15	IF_11	CALL_17
0x4001510	      0xbf00000000	                              mov edi, 0	       449	add.c	FUNCTION_15	CALL_19
0x4001515	      0xe85dedffff	                               call sym.	       449	add.c	FUNCTION_15	CALL_19
0x400151a	          0x4889c7	                            mov rdi, rax	       449	add.c	FUNCTION_15	CALL_19
0x400151d	      0xb800000000	                              mov eax, 0	       449	add.c	FUNCTION_15	CALL_19
0x4001522	      0xe800000000	                          call 0x4001527	       449	add.c	FUNCTION_15	CALL_19
0x4001527	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	       451	add.c	FUNCTION_15	CALL_20
0x400152e	          0x4889c6	                            mov rsi, rax	       451	add.c	FUNCTION_15	CALL_20
0x4001531	      0xbf00000000	                              mov edi, 0	       451	add.c	FUNCTION_15	CALL_20
0x4001536	      0xe800000000	                          call 0x400153b	       451	add.c	FUNCTION_15	CALL_20
0x400153b	    0x488b8d70feff	            mov rcx, qword [rbp - 0x190]	       457	add.c	FUNCTION_15	CALL_21
0x4001542	    0x488b9568feff	            mov rdx, qword [rbp - 0x198]	       457	add.c	FUNCTION_15	CALL_21
0x4001549	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       457	add.c	FUNCTION_15	CALL_21
0x4001550	          0x4989c8	                             mov r8, rcx	       457	add.c	FUNCTION_15	CALL_21
0x4001553	          0x4889d1	                            mov rcx, rdx	       457	add.c	FUNCTION_15	CALL_21
0x4001556	      0xba0a000000	                            mov edx, 0xa	       457	add.c	FUNCTION_15	CALL_21
0x400155b	      0xbe00000000	                              mov esi, 0	       457	add.c	FUNCTION_15	CALL_21
0x4001560	          0x4889c7	                            mov rdi, rax	       457	add.c	FUNCTION_15	CALL_21
0x4001563	      0xe800000000	                          call 0x4001568	       457	add.c	FUNCTION_15	CALL_21
0x4001568	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       462	add.c	FUNCTION_15	CALL_22
0x400156f	          0x4889c6	                            mov rsi, rax	       462	add.c	FUNCTION_15	CALL_22
0x4001572	      0xbf00000000	                              mov edi, 0	       462	add.c	FUNCTION_15	CALL_22
0x4001577	      0xe800000000	                          call 0x400157c	       462	add.c	FUNCTION_15	CALL_22
0x400157c	    0x83bd90feffff	              cmp dword [rbp - 0x170], 0	       464	add.c	FUNCTION_15	IF_12
0x4001583	     0xf8492000000	                            je 0x400161b	       464	add.c	FUNCTION_15	IF_12
0x4001589	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       468	add.c	FUNCTION_15	IF_12	CALL_23
0x4001590	      0xba10010000	                          mov edx, 0x110	       468	add.c	FUNCTION_15	IF_12	CALL_23
0x4001595	      0xbe00000000	                              mov esi, 0	       468	add.c	FUNCTION_15	IF_12	CALL_23
0x400159a	          0x4889c7	                            mov rdi, rax	       468	add.c	FUNCTION_15	IF_12	CALL_23
0x400159d	      0xe800000000	                          call 0x40015a2	       468	add.c	FUNCTION_15	IF_12	CALL_23
0x40015a2	    0x8b0500000000	            mov eax, dword [0x040015a8] 	       469	add.c	FUNCTION_15	IF_12	IF_13
0x40015a8	            0x85c0	                           test eax, eax	       469	add.c	FUNCTION_15	IF_12	IF_13
0x40015aa	            0x751e	                           jne 0x40015ca	       469	add.c	FUNCTION_15	IF_12	IF_13
0x40015ac	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	       470	add.c	FUNCTION_15	IF_12	IF_13
0x40015b2	          0x83c810	                            or eax, 0x10	       470	add.c	FUNCTION_15	IF_12	IF_13
0x40015b5	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	       470	add.c	FUNCTION_15	IF_12	IF_13
0x40015bb	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       471	add.c	FUNCTION_15	IF_12	IF_13	CALL_24
0x40015c2	          0x4889c7	                            mov rdi, rax	       471	add.c	FUNCTION_15	IF_12	IF_13	CALL_24
0x40015c5	      0xe800000000	                          call 0x40015ca	       471	add.c	FUNCTION_15	IF_12	IF_13	CALL_24
0x40015ca	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	       475	add.c	FUNCTION_15	IF_12	CALL_25
0x40015d1	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       475	add.c	FUNCTION_15	IF_12	CALL_25
0x40015d8	      0xbe00000000	                              mov esi, 0	       475	add.c	FUNCTION_15	IF_12	CALL_25
0x40015dd	          0x4889c7	                            mov rdi, rax	       475	add.c	FUNCTION_15	IF_12	CALL_25
0x40015e0	      0xe800000000	                          call 0x40015e5	       475	add.c	FUNCTION_15	IF_12	CALL_25
0x40015e5	    0x89859cfeffff	            mov dword [rbp - 0x164], eax	       475	add.c	FUNCTION_15	IF_12	CALL_25
0x40015eb	    0x8b85b0feffff	            mov eax, dword [rbp - 0x150]	       476	add.c	FUNCTION_15	IF_12	IF_14
0x40015f1	            0x85c0	                           test eax, eax	       476	add.c	FUNCTION_15	IF_12	IF_14
0x40015f3	            0x7426	                            je 0x400161b	       476	add.c	FUNCTION_15	IF_12	IF_14
0x40015f5	    0x8b959cfeffff	            mov edx, dword [rbp - 0x164]	       477	add.c	FUNCTION_15	IF_12	CALL_26
0x40015fb	    0x488d8db0feff	                  lea rcx, [rbp - 0x150]	       477	add.c	FUNCTION_15	IF_12	CALL_26
0x4001602	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       477	add.c	FUNCTION_15	IF_12	CALL_26
0x4001609	          0x4889ce	                            mov rsi, rcx	       477	add.c	FUNCTION_15	IF_12	CALL_26
0x400160c	          0x4889c7	                            mov rdi, rax	       477	add.c	FUNCTION_15	IF_12	CALL_26
0x400160f	      0xe818f2ffff	                call sym.prune_directory	       477	add.c	FUNCTION_15	IF_12	CALL_26
0x4001614	    0x488985a0feff	            mov qword [rbp - 0x160], rax	       477	add.c	FUNCTION_15	IF_12	CALL_26
0x400161b	    0x8b0500000000	            mov eax, dword [0x04001621] 	       480	add.c	FUNCTION_15	IF_15
0x4001621	            0x85c0	                           test eax, eax	       480	add.c	FUNCTION_15	IF_15
0x4001623	            0x741c	                            je 0x4001641	       480	add.c	FUNCTION_15	IF_15
0x4001625	    0x8b0500000000	            mov eax, dword [0x0400162b] 	       481	add.c	FUNCTION_15	IF_15	CALL_27
0x400162b	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	       481	add.c	FUNCTION_15	IF_15	CALL_27
0x4001632	          0x4889d6	                            mov rsi, rdx	       481	add.c	FUNCTION_15	IF_15	CALL_27
0x4001635	            0x89c7	                            mov edi, eax	       481	add.c	FUNCTION_15	IF_15	CALL_27
0x4001637	      0xe8bff2ffff	                        call sym.refresh	       481	add.c	FUNCTION_15	IF_15	CALL_27
0x400163c	      0xe9e7020000	                           jmp 0x4001928	       482	add.c	FUNCTION_15	IF_15
0x4001641	    0x8b85b0feffff	            mov eax, dword [rbp - 0x150]	       485	add.c	FUNCTION_15	IF_16
0x4001647	            0x85c0	                           test eax, eax	       485	add.c	FUNCTION_15	IF_16
0x4001649	     0xf8427020000	                            je 0x4001876	       485	add.c	FUNCTION_15	IF_16
0x400164f	    0x4883bda0feff	              cmp qword [rbp - 0x160], 0	       488	add.c	FUNCTION_15	IF_16	IF_17
0x4001657	            0x751b	                           jne 0x4001674	       488	add.c	FUNCTION_15	IF_16	IF_17
0x4001659	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       489	add.c	FUNCTION_15	IF_16	CALL_28
0x4001660	      0xbe00000000	                              mov esi, 0	       489	add.c	FUNCTION_15	IF_16	CALL_28
0x4001665	          0x4889c7	                            mov rdi, rax	       489	add.c	FUNCTION_15	IF_16	CALL_28
0x4001668	      0xe800000000	                          call 0x400166d	       489	add.c	FUNCTION_15	IF_16	CALL_28
0x400166d	    0x488985a0feff	            mov qword [rbp - 0x160], rax	       489	add.c	FUNCTION_15	IF_16	CALL_28
0x4001674	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x400167a	          0x83e0c2	                     and eax, 0xffffffc2	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x400167d	            0x85c0	                           test eax, eax	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x400167f	            0x7424	                            je 0x40016a5	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x4001681	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x4001687	          0x83e0c2	                     and eax, 0xffffffc2	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x400168a	            0x89c1	                            mov ecx, eax	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x400168c	      0xbaf3010000	                          mov edx, 0x1f3	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x4001691	      0xbe00000000	                              mov esi, 0	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x4001696	      0xbf00000000	                              mov edi, 0	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x400169b	      0xb800000000	                              mov eax, 0	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x40016a0	      0xe800000000	                          call 0x40016a5	       494	add.c	FUNCTION_15	IF_16	CALL_29
0x40016a5	    0xc7858cfeffff	              mov dword [rbp - 0x174], 0	       501	add.c	FUNCTION_15	IF_16	FOR_1
0x40016af	      0xe9a1010000	                           jmp 0x4001855	       501	add.c	FUNCTION_15	IF_16	FOR_1
0x40016b4	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x40016bb	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x40016c1	            0x4898	                                    cdqe	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x40016c3	        0x48c1e003	                              shl rax, 3	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x40016c7	    0x488d0cc50000	                        lea rcx, [rax*8]	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x40016cf	          0x4829c1	                            sub rcx, rax	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x40016d2	          0x4889c8	                            mov rax, rcx	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x40016d5	          0x4801d0	                            add rax, rdx	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x40016d8	          0x488b00	                    mov rax, qword [rax]	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x40016db	    0x488985a8feff	            mov qword [rbp - 0x158], rax	       502	add.c	FUNCTION_15	IF_16	FOR_1
0x40016e2	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x40016e9	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x40016ef	            0x4898	                                    cdqe	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x40016f1	        0x48c1e003	                              shl rax, 3	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x40016f5	    0x488d0cc50000	                        lea rcx, [rax*8]	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x40016fd	          0x4829c1	                            sub rcx, rax	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x4001700	          0x4889c8	                            mov rax, rcx	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x4001703	          0x4801d0	                            add rax, rdx	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x4001706	          0x8b4010	            mov eax, dword [rax + 0x10] 	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x4001709	          0x83e020	                           and eax, 0x20	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x400170c	            0x85c0	                           test eax, eax	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x400170e	     0xf8539010000	                           jne 0x400184d	       503	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x4001714	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x400171a	          0x4863d0	                         movsxd rdx, eax	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x400171d	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x4001724	          0x4801d0	                            add rax, rdx	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x4001727	           0xfb600	                   movzx eax, byte [rax]	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x400172a	            0x84c0	                             test al, al	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x400172c	     0xf851c010000	                           jne 0x400184e	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x4001732	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x4001739	           0xfb600	                   movzx eax, byte [rax]	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x400173c	            0x84c0	                             test al, al	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x400173e	     0xf840a010000	                            je 0x400184e	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x4001744	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x400174b	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x4001751	            0x4898	                                    cdqe	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x4001753	        0x48c1e003	                              shl rax, 3	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x4001757	    0x488d0cc50000	                        lea rcx, [rax*8]	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x400175f	          0x4829c1	                            sub rcx, rax	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x4001762	          0x4889c8	                            mov rax, rcx	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x4001765	          0x4801d0	                            add rax, rdx	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x4001768	          0x8b4010	            mov eax, dword [rax + 0x10] 	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x400176b	          0x83e018	                           and eax, 0x18	       506	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x400176e	            0x85c0	                           test eax, eax	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x4001770	            0x7517	                           jne 0x4001789	       505	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x4001772	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       508	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	CALL_30
0x4001779	          0x4889c7	                            mov rdi, rax	       508	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	CALL_30
0x400177c	      0xe800000000	                          call 0x4001781	       508	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	CALL_30
0x4001781	            0x85c0	                           test eax, eax	       507	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x4001783	     0xf85c5000000	                           jne 0x400184e	       507	add.c	FUNCTION_15	IF_16	FOR_1	IF_19
0x4001789	    0x8b0500000000	            mov eax, dword [0x0400178f] 	       509	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20
0x400178f	            0x85c0	                           test eax, eax	       509	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20
0x4001791	            0x7478	                            je 0x400180b	       509	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20
0x4001793	    0xc78584feffff	              mov dword [rbp - 0x17c], 0	       510	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20
0x400179d	    0x488d8d84feff	                  lea rcx, [rbp - 0x17c]	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x40017a4	    0x488b95a8feff	            mov rdx, qword [rbp - 0x158]	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x40017ab	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x40017b2	      0xbe00000000	                              mov esi, 0	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x40017b7	          0x4889c7	                            mov rdi, rax	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x40017ba	      0xe800000000	                          call 0x40017bf	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x40017bf	            0x85c0	                           test eax, eax	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x40017c1	     0xf8487000000	                            je 0x400184e	       511	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_31
0x40017c7	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x40017ce	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x40017d4	            0x4898	                                    cdqe	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x40017d6	        0x48c1e003	                              shl rax, 3	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x40017da	    0x488d0cc50000	                        lea rcx, [rax*8]	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x40017e2	          0x4829c1	                            sub rcx, rax	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x40017e5	          0x4889c8	                            mov rax, rcx	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x40017e8	          0x4801d0	                            add rax, rdx	       513	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21
0x40017eb	          0x8b4814	            mov ecx, dword [rax + 0x14] 	       512	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_32
0x40017ee	    0x488b95a8feff	            mov rdx, qword [rbp - 0x158]	       512	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_32
0x40017f5	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       512	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_32
0x40017fc	      0xbe00000000	                              mov esi, 0	       512	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_32
0x4001801	          0x4889c7	                            mov rdi, rax	       512	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_32
0x4001804	      0xe800000000	                          call 0x4001809	       512	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_32
0x4001809	            0xeb43	                           jmp 0x400184e	       512	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	IF_20	IF_21	CALL_32
0x400180b	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x4001812	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x4001818	            0x4898	                                    cdqe	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x400181a	        0x48c1e003	                              shl rax, 3	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x400181e	    0x488d0cc50000	                        lea rcx, [rax*8]	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x4001826	          0x4829c1	                            sub rcx, rax	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x4001829	          0x4889c8	                            mov rax, rcx	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x400182c	          0x4801d0	                            add rax, rdx	       516	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2
0x400182f	        0x488b5808	                mov rbx, qword [rax + 8]	       515	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2	CALL_34
0x4001833	      0xbf00000000	                              mov edi, 0	       515	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2	CALL_34
0x4001838	      0xe83aeaffff	                               call sym.	       515	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2	CALL_34
0x400183d	          0x4889de	                            mov rsi, rbx	       515	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2	CALL_34
0x4001840	          0x4889c7	                            mov rdi, rax	       515	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2	CALL_34
0x4001843	      0xb800000000	                              mov eax, 0	       515	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2	CALL_34
0x4001848	      0xe800000000	                          call 0x400184d	       515	add.c	FUNCTION_15	IF_16	FOR_1	IF_19	ELSE_2	CALL_34
0x400184d	              0x90	                                     nop	       504	add.c	FUNCTION_15	IF_16	FOR_1	IF_18
0x400184e	    0x83858cfeffff	              add dword [rbp - 0x174], 1	       501	add.c	FUNCTION_15	IF_16	FOR_1
0x4001855	    0x8b85b0feffff	            mov eax, dword [rbp - 0x150]	       501	add.c	FUNCTION_15	IF_16	FOR_1
0x400185b	    0x3b858cfeffff	            cmp eax, dword [rbp - 0x174]	       501	add.c	FUNCTION_15	IF_16	FOR_1
0x4001861	     0xf8f4dfeffff	                            jg 0x40016b4	       501	add.c	FUNCTION_15	IF_16	FOR_1
0x4001867	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       519	add.c	FUNCTION_15	IF_16	CALL_35
0x400186e	          0x4889c7	                            mov rdi, rax	       519	add.c	FUNCTION_15	IF_16	CALL_35
0x4001871	      0xe800000000	                          call 0x4001876	       519	add.c	FUNCTION_15	IF_16	CALL_35
0x4001876	      0xe800000000	                          call 0x400187b	       522	add.c	FUNCTION_15	CALL_36
0x400187b	    0x8b0500000000	            mov eax, dword [0x04001881] 	       524	add.c	FUNCTION_15	IF_22
0x4001881	            0x85c0	                           test eax, eax	       524	add.c	FUNCTION_15	IF_22
0x4001883	            0x741f	                            je 0x40018a4	       524	add.c	FUNCTION_15	IF_22
0x4001885	    0x8b9598feffff	            mov edx, dword [rbp - 0x168]	       525	add.c	FUNCTION_15	CALL_37
0x400188b	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       525	add.c	FUNCTION_15	CALL_37
0x4001892	            0x89d6	                            mov esi, edx	       525	add.c	FUNCTION_15	CALL_37
0x4001894	          0x4889c7	                            mov rdi, rax	       525	add.c	FUNCTION_15	CALL_37
0x4001897	      0xe8b4eeffff	      call sym.renormalize_tracked_files	       525	add.c	FUNCTION_15	CALL_37
0x400189c	     0x98588feffff	             or dword [rbp - 0x178], eax	       525	add.c	FUNCTION_15	CALL_37
0x40018a2	            0xeb25	                           jmp 0x40018c9	       525	add.c	FUNCTION_15	CALL_37
0x40018a4	    0x8b9598feffff	            mov edx, dword [rbp - 0x168]	       527	add.c	FUNCTION_15	CALL_38
0x40018aa	    0x488d8db0feff	                  lea rcx, [rbp - 0x150]	       527	add.c	FUNCTION_15	CALL_38
0x40018b1	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	       527	add.c	FUNCTION_15	CALL_38
0x40018b8	          0x4889ce	                            mov rsi, rcx	       527	add.c	FUNCTION_15	CALL_38
0x40018bb	          0x4889c7	                            mov rdi, rax	       527	add.c	FUNCTION_15	CALL_38
0x40018be	      0xe800000000	                          call 0x40018c3	       527	add.c	FUNCTION_15	CALL_38
0x40018c3	     0x98588feffff	             or dword [rbp - 0x178], eax	       527	add.c	FUNCTION_15	CALL_38
0x40018c9	    0x83bd90feffff	              cmp dword [rbp - 0x170], 0	       529	add.c	FUNCTION_15	IF_23
0x40018d0	            0x741d	                            je 0x40018ef	       529	add.c	FUNCTION_15	IF_23
0x40018d2	    0x8b9598feffff	            mov edx, dword [rbp - 0x168]	       530	add.c	FUNCTION_15	CALL_39
0x40018d8	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       530	add.c	FUNCTION_15	CALL_39
0x40018df	            0x89d6	                            mov esi, edx	       530	add.c	FUNCTION_15	CALL_39
0x40018e1	          0x4889c7	                            mov rdi, rax	       530	add.c	FUNCTION_15	CALL_39
0x40018e4	      0xe847f7ffff	                      call sym.add_files	       530	add.c	FUNCTION_15	CALL_39
0x40018e9	     0x98588feffff	             or dword [rbp - 0x178], eax	       530	add.c	FUNCTION_15	CALL_39
0x40018ef	    0x488b05000000	            mov rax, qword [0x040018f6] 	       532	add.c	FUNCTION_15	IF_24
0x40018f6	          0x4885c0	                           test rax, rax	       532	add.c	FUNCTION_15	IF_24
0x40018f9	            0x7428	                            je 0x4001923	       532	add.c	FUNCTION_15	IF_24
0x40018fb	    0x8b85b0feffff	            mov eax, dword [rbp - 0x150]	       532	add.c	FUNCTION_15	IF_24
0x4001901	            0x85c0	                           test eax, eax	       532	add.c	FUNCTION_15	IF_24
0x4001903	            0x741e	                            je 0x4001923	       532	add.c	FUNCTION_15	IF_24
0x4001905	    0x488b05000000	            mov rax, qword [0x0400190c] 	       533	add.c	FUNCTION_15	CALL_40
0x400190c	           0xfb600	                   movzx eax, byte [rax]	       533	add.c	FUNCTION_15	CALL_40
0x400190f	           0xfbed0	                           movsx edx, al	       533	add.c	FUNCTION_15	CALL_40
0x4001912	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       533	add.c	FUNCTION_15	CALL_40
0x4001919	            0x89d6	                            mov esi, edx	       533	add.c	FUNCTION_15	CALL_40
0x400191b	          0x4889c7	                            mov rdi, rax	       533	add.c	FUNCTION_15	CALL_40
0x400191e	      0xe882eaffff	                 call sym.chmod_pathspec	       533	add.c	FUNCTION_15	CALL_40
0x4001923	      0xe800000000	                          call 0x4001928	       534	add.c	FUNCTION_15	CALL_41
0x4001928	      0xba03000000	                              mov edx, 3	       537	add.c	FUNCTION_15	IF_25	CALL_42
0x400192d	      0xbe00000000	                              mov esi, 0	       537	add.c	FUNCTION_15	IF_25	CALL_42
0x4001932	      0xbf00000000	                              mov edi, 0	       537	add.c	FUNCTION_15	IF_25	CALL_42
0x4001937	      0xe800000000	                          call 0x400193c	       537	add.c	FUNCTION_15	IF_25	CALL_42
0x400193c	            0x85c0	                           test eax, eax	       537	add.c	FUNCTION_15	IF_25	CALL_42
0x400193e	            0x7417	                            je 0x4001957	       537	add.c	FUNCTION_15	IF_25	CALL_42
0x4001940	      0xbf00000000	                              mov edi, 0	       539	add.c	FUNCTION_15	CALL_44
0x4001945	      0xe82de9ffff	                               call sym.	       539	add.c	FUNCTION_15	CALL_44
0x400194a	          0x4889c7	                            mov rdi, rax	       539	add.c	FUNCTION_15	CALL_44
0x400194d	      0xb800000000	                              mov eax, 0	       539	add.c	FUNCTION_15	CALL_44
0x4001952	      0xe800000000	                          call 0x4001957	       539	add.c	FUNCTION_15	CALL_44
0x4001957	    0x8b8588feffff	            mov eax, dword [rbp - 0x178]	       543	add.c	FUNCTION_15
0x400195d	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       544	add.c	FUNCTION_15
0x4001961	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       544	add.c	FUNCTION_15
0x400196a	            0x7405	                            je 0x4001971	       544	add.c	FUNCTION_15
0x400196c	      0xe800000000	                          call 0x4001971	       544	add.c	FUNCTION_15
0x4001971	    0x4881c4980100	                          add rsp, 0x198	       544	add.c	FUNCTION_15
0x4001978	              0x5b	                                 pop rbx	       544	add.c	FUNCTION_15
0x4001979	              0x5d	                                 pop rbp	       544	add.c	FUNCTION_15
0x400197a	              0xc3	                                     ret	       544	add.c	FUNCTION_15
add_files_to_cache	FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,6:IF,1:WHILE,0:DO,0	61
0x4000617	              0x55	                                push rbp	       106	add.c	FUNCTION_4
0x4000618	          0x4889e5	                            mov rbp, rsp	       106	add.c	FUNCTION_4
0x400061b	    0x4881ecf00800	                          sub rsp, 0x8f0	       106	add.c	FUNCTION_4
0x4000622	    0x4889bd28f7ff	            mov qword [rbp - 0x8d8], rdi	       106	add.c	FUNCTION_4
0x4000629	    0x4889b520f7ff	            mov qword [rbp - 0x8e0], rsi	       106	add.c	FUNCTION_4
0x4000630	    0x89951cf7ffff	            mov dword [rbp - 0x8e4], edx	       106	add.c	FUNCTION_4
0x4000636	    0x64488b042528	                mov rax, qword fs:[0x28]	       106	add.c	FUNCTION_4
0x400063f	        0x488945f8	                mov qword [rbp - 8], rax	       106	add.c	FUNCTION_4
0x4000643	            0x31c0	                            xor eax, eax	       106	add.c	FUNCTION_4
0x4000645	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       110	add.c	FUNCTION_4	CALL_1
0x400064c	      0xba08000000	                              mov edx, 8	       110	add.c	FUNCTION_4	CALL_1
0x4000651	      0xbe00000000	                              mov esi, 0	       110	add.c	FUNCTION_4	CALL_1
0x4000656	          0x4889c7	                            mov rdi, rax	       110	add.c	FUNCTION_4	CALL_1
0x4000659	      0xe800000000	                          call 0x400065e	       110	add.c	FUNCTION_4	CALL_1
0x400065e	    0x8b851cf7ffff	            mov eax, dword [rbp - 0x8e4]	       111	add.c	FUNCTION_4
0x4000664	    0x898530f7ffff	            mov dword [rbp - 0x8d0], eax	       111	add.c	FUNCTION_4
0x400066a	    0x488b9528f7ff	            mov rdx, qword [rbp - 0x8d8]	       113	add.c	FUNCTION_4	CALL_2
0x4000671	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       113	add.c	FUNCTION_4	CALL_2
0x4000678	          0x4889d6	                            mov rsi, rdx	       113	add.c	FUNCTION_4	CALL_2
0x400067b	          0x4889c7	                            mov rdi, rax	       113	add.c	FUNCTION_4	CALL_2
0x400067e	      0xe800000000	                          call 0x4000683	       113	add.c	FUNCTION_4	CALL_2
0x4000683	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       114	add.c	FUNCTION_4	CALL_3
0x400068a	      0xb900000000	                              mov ecx, 0	       114	add.c	FUNCTION_4	CALL_3
0x400068f	          0x4889c2	                            mov rdx, rax	       114	add.c	FUNCTION_4	CALL_3
0x4000692	      0xbe00000000	                              mov esi, 0	       114	add.c	FUNCTION_4	CALL_3
0x4000697	      0xbf00000000	                              mov edi, 0	       114	add.c	FUNCTION_4	CALL_3
0x400069c	      0xe800000000	                          call 0x40006a1	       114	add.c	FUNCTION_4	CALL_3
0x40006a1	    0x4883bd20f7ff	              cmp qword [rbp - 0x8e0], 0	       115	add.c	FUNCTION_4	IF_1
0x40006a9	            0x741d	                            je 0x40006c8	       115	add.c	FUNCTION_4	IF_1
0x40006ab	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       116	add.c	FUNCTION_4	CALL_4
0x40006b2	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       116	add.c	FUNCTION_4	CALL_4
0x40006b9	        0x4883c250	                           add rdx, 0x50	       116	add.c	FUNCTION_4	CALL_4
0x40006bd	          0x4889c6	                            mov rsi, rax	       116	add.c	FUNCTION_4	CALL_4
0x40006c0	          0x4889d7	                            mov rdi, rdx	       116	add.c	FUNCTION_4	CALL_4
0x40006c3	      0xe800000000	                          call 0x40006c8	       116	add.c	FUNCTION_4	CALL_4
0x40006c8	    0xc78598fcffff	         mov dword [rbp - 0x368], 0x1000	       117	add.c	FUNCTION_4
0x40006d2	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	       118	add.c	FUNCTION_4
0x40006dd	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       119	add.c	FUNCTION_4
0x40006e4	    0x48898588fdff	            mov qword [rbp - 0x278], rax	       119	add.c	FUNCTION_4
0x40006eb	     0xfb68573fcff	           movzx eax, byte [rbp - 0x38d]	       120	add.c	FUNCTION_4
0x40006f2	          0x83c804	                               or eax, 4	       120	add.c	FUNCTION_4
0x40006f5	    0x888573fcffff	              mov byte [rbp - 0x38d], al	       120	add.c	FUNCTION_4
0x40006fb	    0xc7850cfcffff	              mov dword [rbp - 0x3f4], 0	       121	add.c	FUNCTION_4
0x4000705	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       122	add.c	FUNCTION_4	CALL_5
0x400070c	      0xbe02000000	                              mov esi, 2	       122	add.c	FUNCTION_4	CALL_5
0x4000711	          0x4889c7	                            mov rdi, rax	       122	add.c	FUNCTION_4	CALL_5
0x4000714	      0xe800000000	                          call 0x4000719	       122	add.c	FUNCTION_4	CALL_5
0x4000719	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       123	add.c	FUNCTION_4	CALL_6
0x4000720	        0x4883c050	                           add rax, 0x50	       123	add.c	FUNCTION_4	CALL_6
0x4000724	          0x4889c7	                            mov rdi, rax	       123	add.c	FUNCTION_4	CALL_6
0x4000727	      0xe800000000	                          call 0x400072c	       123	add.c	FUNCTION_4	CALL_6
0x400072c	    0x8b8534f7ffff	            mov eax, dword [rbp - 0x8cc]	       124	add.c	FUNCTION_4
0x4000732	            0x85c0	                           test eax, eax	       124	add.c	FUNCTION_4
0x4000734	           0xf95c0	                                setne al	       124	add.c	FUNCTION_4
0x4000737	           0xfb6c0	                           movzx eax, al	       124	add.c	FUNCTION_4
0x400073a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       125	add.c	FUNCTION_4
0x400073e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       125	add.c	FUNCTION_4
0x4000747	            0x7405	                            je 0x400074e	       125	add.c	FUNCTION_4
0x4000749	      0xe800000000	                          call 0x400074e	       125	add.c	FUNCTION_4
0x400074e	              0xc9	                                   leave	       125	add.c	FUNCTION_4
0x400074f	              0xc3	                                     ret	       125	add.c	FUNCTION_4
ignore_removal_cb	FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,0:IF,0:WHILE,0:DO,0	14
0x4000e97	              0x55	                                push rbp	       284	add.c	FUNCTION_11
0x4000e98	          0x4889e5	                            mov rbp, rsp	       284	add.c	FUNCTION_11
0x4000e9b	        0x48897df8	                mov qword [rbp - 8], rdi	       284	add.c	FUNCTION_11
0x4000e9f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       284	add.c	FUNCTION_11
0x4000ea3	          0x8955ec	             mov dword [rbp - 0x14], edx	       284	add.c	FUNCTION_11
0x4000ea6	        0x488b45f8	                mov rax, qword [rbp - 8]	       286	add.c	FUNCTION_11
0x4000eaa	        0x488b4010	            mov rax, qword [rax + 0x10] 	       286	add.c	FUNCTION_11
0x4000eae	        0x837dec00	               cmp dword [rbp - 0x14], 0	       286	add.c	FUNCTION_11
0x4000eb2	           0xf95c2	                                setne dl	       286	add.c	FUNCTION_11
0x4000eb5	           0xfb6d2	                           movzx edx, dl	       286	add.c	FUNCTION_11
0x4000eb8	            0x8910	                    mov dword [rax], edx	       286	add.c	FUNCTION_11
0x4000eba	      0xb800000000	                              mov eax, 0	       287	add.c	FUNCTION_11
0x4000ebf	              0x5d	                                 pop rbp	       288	add.c	FUNCTION_11
0x4000ec0	              0xc3	                                     ret	       288	add.c	FUNCTION_11
renormalize_tracked_files	FOR,1:functions,0:ELSE,0:SWITCH,0:CALL,5:IF,3:WHILE,0:DO,0	64
0x4000750	              0x55	                                push rbp	       128	add.c	FUNCTION_5
0x4000751	          0x4889e5	                            mov rbp, rsp	       128	add.c	FUNCTION_5
0x4000754	        0x4883ec20	                           sub rsp, 0x20	       128	add.c	FUNCTION_5
0x4000758	        0x48897de8	             mov qword [rbp - 0x18], rdi	       128	add.c	FUNCTION_5
0x400075c	          0x8975e4	             mov dword [rbp - 0x1c], esi	       128	add.c	FUNCTION_5
0x400075f	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       129	add.c	FUNCTION_5
0x4000766	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       131	add.c	FUNCTION_5	FOR_1
0x400076d	      0xe9a4000000	                           jmp 0x4000816	       131	add.c	FUNCTION_5	FOR_1
0x4000772	    0x488b05000000	            mov rax, qword [0x04000779] 	       132	add.c	FUNCTION_5	FOR_1
0x4000779	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       132	add.c	FUNCTION_5	FOR_1
0x400077c	          0x4863d2	                         movsxd rdx, edx	       132	add.c	FUNCTION_5	FOR_1
0x400077f	        0x48c1e203	                              shl rdx, 3	       132	add.c	FUNCTION_5	FOR_1
0x4000783	          0x4801d0	                            add rax, rdx	       132	add.c	FUNCTION_5	FOR_1
0x4000786	          0x488b00	                    mov rax, qword [rax]	       132	add.c	FUNCTION_5	FOR_1
0x4000789	        0x488945f8	                mov qword [rbp - 8], rax	       132	add.c	FUNCTION_5	FOR_1
0x400078d	        0x488b45f8	                mov rax, qword [rbp - 8]	       134	add.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x4000791	          0x8b4038	            mov eax, dword [rax + 0x38] 	       134	add.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x4000794	      0x2500300000	                         and eax, 0x3000	       134	add.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x4000799	          0xc1e80c	                            shr eax, 0xc	       134	add.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x400079c	            0x85c0	                           test eax, eax	       134	add.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x400079e	            0x756b	                           jne 0x400080b	       134	add.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x40007a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x40007a4	          0x8b4034	            mov eax, dword [rax + 0x34] 	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x40007a7	      0x2500f00000	                         and eax, 0xf000	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x40007ac	      0x3d00800000	                         cmp eax, 0x8000	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x40007b1	            0x7413	                            je 0x40007c6	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x40007b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x40007b7	          0x8b4034	            mov eax, dword [rax + 0x34] 	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x40007ba	      0x2500f00000	                         and eax, 0xf000	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x40007bf	      0x3d00a00000	                         cmp eax, 0xa000	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x40007c4	            0x7548	                           jne 0x400080e	       136	add.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x40007c6	      0x48837de800	               cmp qword [rbp - 0x18], 0	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x40007cb	            0x741c	                            je 0x40007e9	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x40007cd	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x40007d1	        0x488b45f8	                mov rax, qword [rbp - 8]	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x40007d5	      0xba00000000	                              mov edx, 0	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x40007da	          0x4889ce	                            mov rsi, rcx	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x40007dd	          0x4889c7	                            mov rdi, rax	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x40007e0	      0xe8befaffff	                  call sym.ce_path_match	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x40007e5	            0x85c0	                           test eax, eax	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x40007e7	            0x7428	                            je 0x4000811	       138	add.c	FUNCTION_5	FOR_1	IF_3	CALL_4
0x40007e9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x40007ec	          0x83c804	                               or eax, 4	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x40007ef	            0x89c2	                            mov edx, eax	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x40007f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x40007f5	        0x4883c058	                           add rax, 0x58	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x40007f9	          0x4889c6	                            mov rsi, rax	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x40007fc	      0xbf00000000	                              mov edi, 0	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x4000801	      0xe800000000	                          call 0x4000806	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x4000806	           0x945f4	               or dword [rbp - 0xc], eax	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x4000809	            0xeb07	                           jmp 0x4000812	       140	add.c	FUNCTION_5	FOR_1	CALL_5
0x400080b	              0x90	                                     nop	       135	add.c	FUNCTION_5	FOR_1	IF_1
0x400080c	            0xeb04	                           jmp 0x4000812	       135	add.c	FUNCTION_5	FOR_1	IF_1
0x400080e	              0x90	                                     nop	       137	add.c	FUNCTION_5	FOR_1	IF_2
0x400080f	            0xeb01	                           jmp 0x4000812	       137	add.c	FUNCTION_5	FOR_1	IF_2
0x4000811	              0x90	                                     nop	       139	add.c	FUNCTION_5	FOR_1	IF_3
0x4000812	        0x8345f001	               add dword [rbp - 0x10], 1	       131	add.c	FUNCTION_5	FOR_1
0x4000816	    0x8b1500000000	            mov edx, dword [0x0400081c] 	       131	add.c	FUNCTION_5	FOR_1
0x400081c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       131	add.c	FUNCTION_5	FOR_1
0x400081f	            0x39c2	                            cmp edx, eax	       131	add.c	FUNCTION_5	FOR_1
0x4000821	     0xf874bffffff	                            ja 0x4000772	       131	add.c	FUNCTION_5	FOR_1
0x4000827	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       143	add.c	FUNCTION_5
0x400082a	              0xc9	                                   leave	       144	add.c	FUNCTION_5
0x400082b	              0xc3	                                     ret	       144	add.c	FUNCTION_5
strip_suffix_mem	FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,2:IF,1:WHILE,0:DO,0	38
0x4000040	              0x55	                                push rbp	       538	git-compat-util.h	FUNCTION_36
0x4000041	          0x4889e5	                            mov rbp, rsp	       538	git-compat-util.h	FUNCTION_36
0x4000044	        0x4883ec30	                           sub rsp, 0x30	       538	git-compat-util.h	FUNCTION_36
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	       538	git-compat-util.h	FUNCTION_36
0x400004c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       538	git-compat-util.h	FUNCTION_36
0x4000050	        0x488955d8	             mov qword [rbp - 0x28], rdx	       538	git-compat-util.h	FUNCTION_36
0x4000054	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       539	git-compat-util.h	FUNCTION_36	CALL_1
0x4000058	          0x4889c7	                            mov rdi, rax	       539	git-compat-util.h	FUNCTION_36	CALL_1
0x400005b	      0xe800000000	                          call 0x4000060	       539	git-compat-util.h	FUNCTION_36	CALL_1
0x4000060	        0x488945f8	                mov qword [rbp - 8], rax	       539	git-compat-util.h	FUNCTION_36	CALL_1
0x4000064	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x4000068	          0x488b00	                    mov rax, qword [rax]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x400006b	        0x483b45f8	                cmp rax, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x400006f	            0x722d	                            jb 0x400009e	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x4000071	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x4000075	          0x488b00	                    mov rax, qword [rax]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x4000078	        0x482b45f8	                sub rax, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x400007c	          0x4889c2	                            mov rdx, rax	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x400007f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x4000083	        0x488d0c02	                    lea rcx, [rdx + rax]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x4000087	        0x488b55f8	                mov rdx, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x400008b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x400008f	          0x4889c6	                            mov rsi, rax	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x4000092	          0x4889cf	                            mov rdi, rcx	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x4000095	      0xe800000000	                          call 0x400009a	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x400009a	            0x85c0	                           test eax, eax	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x400009c	            0x7407	                            je 0x40000a5	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0x400009e	      0xb800000000	                              mov eax, 0	       541	git-compat-util.h	FUNCTION_36	IF_1
0x40000a3	            0xeb1a	                           jmp 0x40000bf	       541	git-compat-util.h	FUNCTION_36	IF_1
0x40000a5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       542	git-compat-util.h	FUNCTION_36
0x40000a9	          0x488b00	                    mov rax, qword [rax]	       542	git-compat-util.h	FUNCTION_36
0x40000ac	        0x482b45f8	                sub rax, qword [rbp - 8]	       542	git-compat-util.h	FUNCTION_36
0x40000b0	          0x4889c2	                            mov rdx, rax	       542	git-compat-util.h	FUNCTION_36
0x40000b3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       542	git-compat-util.h	FUNCTION_36
0x40000b7	          0x488910	                    mov qword [rax], rdx	       542	git-compat-util.h	FUNCTION_36
0x40000ba	      0xb801000000	                              mov eax, 1	       543	git-compat-util.h	FUNCTION_36
0x40000bf	              0xc9	                                   leave	       544	git-compat-util.h	FUNCTION_36
0x40000c0	              0xc3	                                     ret	       544	git-compat-util.h	FUNCTION_36
add_config	FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,4:IF,1:WHILE,0:DO,0	34
0x4000ec1	              0x55	                                push rbp	       316	add.c	FUNCTION_12
0x4000ec2	          0x4889e5	                            mov rbp, rsp	       316	add.c	FUNCTION_12
0x4000ec5	        0x4883ec20	                           sub rsp, 0x20	       316	add.c	FUNCTION_12
0x4000ec9	        0x48897df8	                mov qword [rbp - 8], rdi	       316	add.c	FUNCTION_12
0x4000ecd	        0x488975f0	             mov qword [rbp - 0x10], rsi	       316	add.c	FUNCTION_12
0x4000ed1	        0x488955e8	             mov qword [rbp - 0x18], rdx	       316	add.c	FUNCTION_12
0x4000ed5	        0x488b45f8	                mov rax, qword [rbp - 8]	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x4000ed9	      0xbe00000000	                              mov esi, 0	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x4000ede	          0x4889c7	                            mov rdi, rax	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x4000ee1	      0xe800000000	                          call 0x4000ee6	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x4000ee6	            0x85c0	                           test eax, eax	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x4000ee8	            0x7415	                            je 0x4000eff	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x4000eea	        0x488b45f8	                mov rax, qword [rbp - 8]	       318	add.c	FUNCTION_12	IF_1	CALL_2
0x4000eee	      0xbe00000000	                              mov esi, 0	       318	add.c	FUNCTION_12	IF_1	CALL_2
0x4000ef3	          0x4889c7	                            mov rdi, rax	       318	add.c	FUNCTION_12	IF_1	CALL_2
0x4000ef6	      0xe800000000	                          call 0x4000efb	       318	add.c	FUNCTION_12	IF_1	CALL_2
0x4000efb	            0x85c0	                           test eax, eax	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x4000efd	            0x7520	                           jne 0x4000f1f	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x4000eff	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       319	add.c	FUNCTION_12	IF_1	CALL_3
0x4000f03	        0x488b45f8	                mov rax, qword [rbp - 8]	       319	add.c	FUNCTION_12	IF_1	CALL_3
0x4000f07	          0x4889d6	                            mov rsi, rdx	       319	add.c	FUNCTION_12	IF_1	CALL_3
0x4000f0a	          0x4889c7	                            mov rdi, rax	       319	add.c	FUNCTION_12	IF_1	CALL_3
0x4000f0d	      0xe800000000	                          call 0x4000f12	       319	add.c	FUNCTION_12	IF_1	CALL_3
0x4000f12	    0x890500000000	            mov dword [0x04000f18], eax 	       319	add.c	FUNCTION_12	IF_1	CALL_3
0x4000f18	      0xb800000000	                              mov eax, 0	       320	add.c	FUNCTION_12	IF_1
0x4000f1d	            0xeb17	                           jmp 0x4000f36	       320	add.c	FUNCTION_12	IF_1
0x4000f1f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       322	add.c	FUNCTION_12	CALL_4
0x4000f23	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       322	add.c	FUNCTION_12	CALL_4
0x4000f27	        0x488b45f8	                mov rax, qword [rbp - 8]	       322	add.c	FUNCTION_12	CALL_4
0x4000f2b	          0x4889ce	                            mov rsi, rcx	       322	add.c	FUNCTION_12	CALL_4
0x4000f2e	          0x4889c7	                            mov rdi, rax	       322	add.c	FUNCTION_12	CALL_4
0x4000f31	      0xe800000000	                          call 0x4000f36	       322	add.c	FUNCTION_12	CALL_4
0x4000f36	              0xc9	                                   leave	       323	add.c	FUNCTION_12
0x4000f37	              0xc3	                                     ret	       323	add.c	FUNCTION_12
add_files	FOR,2:functions,0:ELSE,0:SWITCH,0:CALL,9:IF,3:WHILE,0:DO,0	91
0x4001030	              0x55	                                push rbp	       365	add.c	FUNCTION_14
0x4001031	          0x4889e5	                            mov rbp, rsp	       365	add.c	FUNCTION_14
0x4001034	        0x4883ec20	                           sub rsp, 0x20	       365	add.c	FUNCTION_14
0x4001038	        0x48897de8	             mov qword [rbp - 0x18], rdi	       365	add.c	FUNCTION_14
0x400103c	          0x8975e4	             mov dword [rbp - 0x1c], esi	       365	add.c	FUNCTION_14
0x400103f	    0xc745fc000000	                  mov dword [rbp - 4], 0	       366	add.c	FUNCTION_14
0x4001046	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       368	add.c	FUNCTION_14	IF_1
0x400104a	          0x8b4008	                mov eax, dword [rax + 8]	       368	add.c	FUNCTION_14	IF_1
0x400104d	            0x85c0	                           test eax, eax	       368	add.c	FUNCTION_14	IF_1
0x400104f	     0xf849d000000	                            je 0x40010f2	       368	add.c	FUNCTION_14	IF_1
0x4001055	      0xbf00000000	                              mov edi, 0	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x400105a	      0xe818f2ffff	                               call sym.	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x400105f	          0x4889c2	                            mov rdx, rax	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x4001062	    0x488b05000000	            mov rax, qword [0x04001069] 	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x4001069	          0x4889d6	                            mov rsi, rdx	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x400106c	          0x4889c7	                            mov rdi, rax	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x400106f	      0xb800000000	                              mov eax, 0	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x4001074	      0xe800000000	                          call 0x4001079	       369	add.c	FUNCTION_14	IF_1	CALL_2
0x4001079	    0xc745f8000000	                  mov dword [rbp - 8], 0	       370	add.c	FUNCTION_14	IF_1	FOR_1
0x4001080	            0xeb39	                           jmp 0x40010bb	       370	add.c	FUNCTION_14	IF_1	FOR_1
0x4001082	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x4001086	        0x488b4020	            mov rax, qword [rax + 0x20] 	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x400108a	          0x8b55f8	                mov edx, dword [rbp - 8]	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x400108d	          0x4863d2	                         movsxd rdx, edx	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x4001090	        0x48c1e203	                              shl rdx, 3	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x4001094	          0x4801d0	                            add rax, rdx	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x4001097	          0x488b00	                    mov rax, qword [rax]	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x400109a	        0x488d5004	                      lea rdx, [rax + 4]	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x400109e	    0x488b05000000	            mov rax, qword [0x040010a5] 	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x40010a5	      0xbe00000000	                              mov esi, 0	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x40010aa	          0x4889c7	                            mov rdi, rax	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x40010ad	      0xb800000000	                              mov eax, 0	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x40010b2	      0xe800000000	                          call 0x40010b7	       371	add.c	FUNCTION_14	IF_1	CALL_3
0x40010b7	        0x8345f801	                  add dword [rbp - 8], 1	       370	add.c	FUNCTION_14	IF_1	FOR_1
0x40010bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       370	add.c	FUNCTION_14	IF_1	FOR_1
0x40010bf	          0x8b4008	                mov eax, dword [rax + 8]	       370	add.c	FUNCTION_14	IF_1	FOR_1
0x40010c2	          0x3b45f8	                cmp eax, dword [rbp - 8]	       370	add.c	FUNCTION_14	IF_1	FOR_1
0x40010c5	            0x7fbb	                            jg 0x4001082	       370	add.c	FUNCTION_14	IF_1	FOR_1
0x40010c7	      0xbf00000000	                              mov edi, 0	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x40010cc	      0xe8a6f1ffff	                               call sym.	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x40010d1	          0x4889c2	                            mov rdx, rax	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x40010d4	    0x488b05000000	            mov rax, qword [0x040010db] 	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x40010db	          0x4889d6	                            mov rsi, rdx	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x40010de	          0x4889c7	                            mov rdi, rax	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x40010e1	      0xb800000000	                              mov eax, 0	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x40010e6	      0xe800000000	                          call 0x40010eb	       372	add.c	FUNCTION_14	IF_1	CALL_5
0x40010eb	    0xc745fc010000	                  mov dword [rbp - 4], 1	       373	add.c	FUNCTION_14	IF_1
0x40010f2	    0xc745f8000000	                  mov dword [rbp - 8], 0	       376	add.c	FUNCTION_14	FOR_2
0x40010f9	      0xe982000000	                           jmp 0x4001180	       376	add.c	FUNCTION_14	FOR_2
0x40010fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x4001102	        0x488b4018	            mov rax, qword [rax + 0x18] 	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x4001106	          0x8b55f8	                mov edx, dword [rbp - 8]	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x4001109	          0x4863d2	                         movsxd rdx, edx	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x400110c	        0x48c1e203	                              shl rdx, 3	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x4001110	          0x4801d0	                            add rax, rdx	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x4001113	          0x488b00	                    mov rax, qword [rax]	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x4001116	        0x4883c004	                              add rax, 4	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x400111a	          0x4889c7	                            mov rdi, rax	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x400111d	      0xe816feffff	            call sym.check_embedded_repo	       377	add.c	FUNCTION_14	FOR_2	CALL_6
0x4001122	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x4001126	        0x488b4018	            mov rax, qword [rax + 0x18] 	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x400112a	          0x8b55f8	                mov edx, dword [rbp - 8]	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x400112d	          0x4863d2	                         movsxd rdx, edx	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x4001130	        0x48c1e203	                              shl rdx, 3	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x4001134	          0x4801d0	                            add rax, rdx	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x4001137	          0x488b00	                    mov rax, qword [rax]	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x400113a	        0x488d4804	                      lea rcx, [rax + 4]	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x400113e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x4001141	            0x89c2	                            mov edx, eax	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x4001143	          0x4889ce	                            mov rsi, rcx	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x4001146	      0xbf00000000	                              mov edi, 0	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x400114b	      0xe800000000	                          call 0x4001150	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x4001150	            0x85c0	                           test eax, eax	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x4001152	            0x7428	                            je 0x400117c	       378	add.c	FUNCTION_14	FOR_2	IF_2	CALL_7
0x4001154	    0x8b0500000000	            mov eax, dword [0x0400115a] 	       379	add.c	FUNCTION_14	FOR_2	IF_2	IF_3
0x400115a	            0x85c0	                           test eax, eax	       379	add.c	FUNCTION_14	FOR_2	IF_2	IF_3
0x400115c	            0x7517	                           jne 0x4001175	       379	add.c	FUNCTION_14	FOR_2	IF_2	IF_3
0x400115e	      0xbf00000000	                              mov edi, 0	       380	add.c	FUNCTION_14	FOR_2	IF_2	CALL_9
0x4001163	      0xe80ff1ffff	                               call sym.	       380	add.c	FUNCTION_14	FOR_2	IF_2	CALL_9
0x4001168	          0x4889c7	                            mov rdi, rax	       380	add.c	FUNCTION_14	FOR_2	IF_2	CALL_9
0x400116b	      0xb800000000	                              mov eax, 0	       380	add.c	FUNCTION_14	FOR_2	IF_2	CALL_9
0x4001170	      0xe800000000	                          call 0x4001175	       380	add.c	FUNCTION_14	FOR_2	IF_2	CALL_9
0x4001175	    0xc745fc010000	                  mov dword [rbp - 4], 1	       381	add.c	FUNCTION_14	FOR_2	IF_2
0x400117c	        0x8345f801	                  add dword [rbp - 8], 1	       376	add.c	FUNCTION_14	FOR_2
0x4001180	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       376	add.c	FUNCTION_14	FOR_2
0x4001184	            0x8b00	                    mov eax, dword [rax]	       376	add.c	FUNCTION_14	FOR_2
0x4001186	          0x3b45f8	                cmp eax, dword [rbp - 8]	       376	add.c	FUNCTION_14	FOR_2
0x4001189	     0xf8f6fffffff	                            jg 0x40010fe	       376	add.c	FUNCTION_14	FOR_2
0x400118f	          0x8b45fc	                mov eax, dword [rbp - 4]	       384	add.c	FUNCTION_14
0x4001192	              0xc9	                                   leave	       385	add.c	FUNCTION_14
0x4001193	              0xc3	                                     ret	       385	add.c	FUNCTION_14
