st_mult	CALL,1:IF,1:WHILE,0:SWITCH,0:DO,0:functions,0:FOR,0:ELSE,0	22
0x4000040	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_15
0x4000041	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_15
0x4000044	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_15
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_15
0x400004c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_15
0x4000050	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_15	IF_1
0x4000055	            0x7430	                            je 0x4000087	       795	git-compat-util.h	FUNCTION_15	IF_1
0x4000057	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_15	IF_1
0x400005e	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_15	IF_1
0x4000063	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_15	IF_1
0x4000067	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_15	IF_1
0x400006b	            0x731a	                           jae 0x4000087	       795	git-compat-util.h	FUNCTION_15	IF_1
0x400006d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x4000071	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x4000075	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x4000078	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x400007d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x4000082	      0xe800000000	                          call 0x4000087	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x4000087	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_15
0x400008b	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_15
0x4000090	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_15
0x4000091	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_15
swap	CALL,0:IF,0:WHILE,0:SWITCH,0:DO,0:functions,0:FOR,0:ELSE,0	46
0x400012d	              0x55	                                push rbp	        14	prio-queue.c	FUNCTION_29
0x400012e	          0x4889e5	                            mov rbp, rsp	        14	prio-queue.c	FUNCTION_29
0x4000131	        0x4883ec40	                           sub rsp, 0x40	        14	prio-queue.c	FUNCTION_29
0x4000135	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        14	prio-queue.c	FUNCTION_29
0x4000139	          0x8975c4	             mov dword [rbp - 0x3c], esi	        14	prio-queue.c	FUNCTION_29
0x400013c	          0x8955c0	             mov dword [rbp - 0x40], edx	        14	prio-queue.c	FUNCTION_29
0x400013f	    0x64488b042528	                mov rax, qword fs:[0x28]	        14	prio-queue.c	FUNCTION_29
0x4000148	        0x488945f8	                mov qword [rbp - 8], rax	        14	prio-queue.c	FUNCTION_29
0x400014c	            0x31c0	                            xor eax, eax	        14	prio-queue.c	FUNCTION_29
0x400014e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        15	prio-queue.c	FUNCTION_29
0x4000152	        0x488b4020	            mov rax, qword [rax + 0x20] 	        15	prio-queue.c	FUNCTION_29
0x4000156	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	        15	prio-queue.c	FUNCTION_29
0x4000159	          0x4863d2	                         movsxd rdx, edx	        15	prio-queue.c	FUNCTION_29
0x400015c	        0x48c1e204	                              shl rdx, 4	        15	prio-queue.c	FUNCTION_29
0x4000160	          0x4801d0	                            add rax, rdx	        15	prio-queue.c	FUNCTION_29
0x4000163	        0x488945d0	             mov qword [rbp - 0x30], rax	        15	prio-queue.c	FUNCTION_29
0x4000167	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        15	prio-queue.c	FUNCTION_29
0x400016b	        0x488b4020	            mov rax, qword [rax + 0x20] 	        15	prio-queue.c	FUNCTION_29
0x400016f	          0x8b55c0	             mov edx, dword [rbp - 0x40]	        15	prio-queue.c	FUNCTION_29
0x4000172	          0x4863d2	                         movsxd rdx, edx	        15	prio-queue.c	FUNCTION_29
0x4000175	        0x48c1e204	                              shl rdx, 4	        15	prio-queue.c	FUNCTION_29
0x4000179	          0x4801d0	                            add rax, rdx	        15	prio-queue.c	FUNCTION_29
0x400017c	        0x488945d8	             mov qword [rbp - 0x28], rax	        15	prio-queue.c	FUNCTION_29
0x4000180	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        15	prio-queue.c	FUNCTION_29
0x4000184	        0x488b5008	                mov rdx, qword [rax + 8]	        15	prio-queue.c	FUNCTION_29
0x4000188	          0x488b00	                    mov rax, qword [rax]	        15	prio-queue.c	FUNCTION_29
0x400018b	        0x488945e0	             mov qword [rbp - 0x20], rax	        15	prio-queue.c	FUNCTION_29
0x400018f	        0x488955e8	             mov qword [rbp - 0x18], rdx	        15	prio-queue.c	FUNCTION_29
0x4000193	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        15	prio-queue.c	FUNCTION_29
0x4000197	        0x488b5008	                mov rdx, qword [rax + 8]	        15	prio-queue.c	FUNCTION_29
0x400019b	          0x488b00	                    mov rax, qword [rax]	        15	prio-queue.c	FUNCTION_29
0x400019e	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	        15	prio-queue.c	FUNCTION_29
0x40001a2	          0x488901	                    mov qword [rcx], rax	        15	prio-queue.c	FUNCTION_29
0x40001a5	        0x48895108	                mov qword [rcx + 8], rdx	        15	prio-queue.c	FUNCTION_29
0x40001a9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        15	prio-queue.c	FUNCTION_29
0x40001ad	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        15	prio-queue.c	FUNCTION_29
0x40001b1	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	        15	prio-queue.c	FUNCTION_29
0x40001b5	          0x488901	                    mov qword [rcx], rax	        15	prio-queue.c	FUNCTION_29
0x40001b8	        0x48895108	                mov qword [rcx + 8], rdx	        15	prio-queue.c	FUNCTION_29
0x40001bc	              0x90	                                     nop	        16	prio-queue.c	FUNCTION_29
0x40001bd	        0x488b45f8	                mov rax, qword [rbp - 8]	        16	prio-queue.c	FUNCTION_29
0x40001c1	    0x644833042528	                xor rax, qword fs:[0x28]	        16	prio-queue.c	FUNCTION_29
0x40001ca	            0x7405	                            je 0x40001d1	        16	prio-queue.c	FUNCTION_29
0x40001cc	      0xe800000000	                          call 0x40001d1	        16	prio-queue.c	FUNCTION_29
0x40001d1	              0xc9	                                   leave	        16	prio-queue.c	FUNCTION_29
0x40001d2	              0xc3	                                     ret	        16	prio-queue.c	FUNCTION_29
prio_queue_put	CALL,3:IF,2:WHILE,0:SWITCH,0:DO,0:functions,0:FOR,1:ELSE,0	129
0x4000282	              0x55	                                push rbp	        37	prio-queue.c	FUNCTION_32
0x4000283	          0x4889e5	                            mov rbp, rsp	        37	prio-queue.c	FUNCTION_32
0x4000286	        0x4883ec20	                           sub rsp, 0x20	        37	prio-queue.c	FUNCTION_32
0x400028a	        0x48897de8	             mov qword [rbp - 0x18], rdi	        37	prio-queue.c	FUNCTION_32
0x400028e	        0x488975e0	             mov qword [rbp - 0x20], rsi	        37	prio-queue.c	FUNCTION_32
0x4000292	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	prio-queue.c	FUNCTION_32	CALL_1
0x4000296	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        41	prio-queue.c	FUNCTION_32	CALL_1
0x4000299	          0x8d5001	                      lea edx, [rax + 1]	        41	prio-queue.c	FUNCTION_32	CALL_1
0x400029c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002a0	          0x8b4018	            mov eax, dword [rax + 0x18] 	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002a3	            0x39c2	                            cmp edx, eax	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002a5	     0xf8e95000000	                           jle 0x4000340	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002af	          0x8b4018	            mov eax, dword [rax + 0x18] 	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002b2	          0x8d5010	                   lea edx, [rax + 0x10]	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002b5	            0x89d0	                            mov eax, edx	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002b7	             0x1c0	                            add eax, eax	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002b9	             0x1d0	                            add eax, edx	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002bb	            0x89c2	                            mov edx, eax	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002bd	          0xc1ea1f	                           shr edx, 0x1f	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002c0	             0x1d0	                            add eax, edx	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002c2	            0xd1f8	                              sar eax, 1	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002c4	            0x89c2	                            mov edx, eax	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002ca	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002cd	          0x83c001	                              add eax, 1	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002d0	            0x39c2	                            cmp edx, eax	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002d2	            0x7d13	                           jge 0x40002e7	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002d8	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002db	          0x8d5001	                      lea edx, [rax + 1]	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002e2	          0x895018	             mov dword [rax + 0x18], edx	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002e5	            0xeb22	                           jmp 0x4000309	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002eb	          0x8b4018	            mov eax, dword [rax + 0x18] 	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002ee	          0x8d5010	                   lea edx, [rax + 0x10]	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002f1	            0x89d0	                            mov eax, edx	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002f3	             0x1c0	                            add eax, eax	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002f5	             0x1d0	                            add eax, edx	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002f7	            0x89c2	                            mov edx, eax	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002f9	          0xc1ea1f	                           shr edx, 0x1f	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002fc	             0x1d0	                            add eax, edx	        41	prio-queue.c	FUNCTION_32	CALL_1
0x40002fe	            0xd1f8	                              sar eax, 1	        41	prio-queue.c	FUNCTION_32	CALL_1
0x4000300	            0x89c2	                            mov edx, eax	        41	prio-queue.c	FUNCTION_32	CALL_1
0x4000302	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	prio-queue.c	FUNCTION_32	CALL_1
0x4000306	          0x895018	             mov dword [rax + 0x18], edx	        41	prio-queue.c	FUNCTION_32	CALL_1
0x4000309	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	prio-queue.c	FUNCTION_32	CALL_1
0x400030d	          0x8b4018	            mov eax, dword [rax + 0x18] 	        41	prio-queue.c	FUNCTION_32	CALL_1
0x4000310	            0x4898	                                    cdqe	        41	prio-queue.c	FUNCTION_32	CALL_1
0x4000312	          0x4889c6	                            mov rsi, rax	        41	prio-queue.c	FUNCTION_32	CALL_1
0x4000315	      0xbf10000000	                           mov edi, 0x10	        41	prio-queue.c	FUNCTION_32	CALL_1
0x400031a	      0xe821fdffff	                        call sym.st_mult	        41	prio-queue.c	FUNCTION_32	CALL_1
0x400031f	          0x4889c2	                            mov rdx, rax	        41	prio-queue.c	FUNCTION_32	CALL_1
0x4000322	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	prio-queue.c	FUNCTION_32	CALL_1
0x4000326	        0x488b4020	            mov rax, qword [rax + 0x20] 	        41	prio-queue.c	FUNCTION_32	CALL_1
0x400032a	          0x4889d6	                            mov rsi, rdx	        41	prio-queue.c	FUNCTION_32	CALL_1
0x400032d	          0x4889c7	                            mov rdi, rax	        41	prio-queue.c	FUNCTION_32	CALL_1
0x4000330	      0xe800000000	                          call 0x4000335	        41	prio-queue.c	FUNCTION_32	CALL_1
0x4000335	          0x4889c2	                            mov rdx, rax	        41	prio-queue.c	FUNCTION_32	CALL_1
0x4000338	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	prio-queue.c	FUNCTION_32	CALL_1
0x400033c	        0x48895020	             mov qword [rax + 0x20], rdx	        41	prio-queue.c	FUNCTION_32	CALL_1
0x4000340	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        42	prio-queue.c	FUNCTION_32
0x4000344	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        42	prio-queue.c	FUNCTION_32
0x4000348	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        42	prio-queue.c	FUNCTION_32
0x400034c	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        42	prio-queue.c	FUNCTION_32
0x400034f	            0x4898	                                    cdqe	        42	prio-queue.c	FUNCTION_32
0x4000351	        0x48c1e004	                              shl rax, 4	        42	prio-queue.c	FUNCTION_32
0x4000355	        0x488d3402	                    lea rsi, [rdx + rax]	        42	prio-queue.c	FUNCTION_32
0x4000359	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        42	prio-queue.c	FUNCTION_32
0x400035d	          0x8b4008	                mov eax, dword [rax + 8]	        42	prio-queue.c	FUNCTION_32
0x4000360	          0x8d4801	                      lea ecx, [rax + 1]	        42	prio-queue.c	FUNCTION_32
0x4000363	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        42	prio-queue.c	FUNCTION_32
0x4000367	          0x894a08	                mov dword [rdx + 8], ecx	        42	prio-queue.c	FUNCTION_32
0x400036a	            0x8906	                    mov dword [rsi], eax	        42	prio-queue.c	FUNCTION_32
0x400036c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        43	prio-queue.c	FUNCTION_32
0x4000370	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        43	prio-queue.c	FUNCTION_32
0x4000374	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        43	prio-queue.c	FUNCTION_32
0x4000378	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        43	prio-queue.c	FUNCTION_32
0x400037b	            0x4898	                                    cdqe	        43	prio-queue.c	FUNCTION_32
0x400037d	        0x48c1e004	                              shl rax, 4	        43	prio-queue.c	FUNCTION_32
0x4000381	          0x4801c2	                            add rdx, rax	        43	prio-queue.c	FUNCTION_32
0x4000384	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        43	prio-queue.c	FUNCTION_32
0x4000388	        0x48894208	                mov qword [rdx + 8], rax	        43	prio-queue.c	FUNCTION_32
0x400038c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        44	prio-queue.c	FUNCTION_32
0x4000390	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        44	prio-queue.c	FUNCTION_32
0x4000393	          0x8d5001	                      lea edx, [rax + 1]	        44	prio-queue.c	FUNCTION_32
0x4000396	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        44	prio-queue.c	FUNCTION_32
0x400039a	          0x89501c	             mov dword [rax + 0x1c], edx	        44	prio-queue.c	FUNCTION_32
0x400039d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        45	prio-queue.c	FUNCTION_32	IF_1
0x40003a1	          0x488b00	                    mov rax, qword [rax]	        45	prio-queue.c	FUNCTION_32	IF_1
0x40003a4	          0x4885c0	                           test rax, rax	        45	prio-queue.c	FUNCTION_32	IF_1
0x40003a7	            0x745b	                            je 0x4000404	        45	prio-queue.c	FUNCTION_32	IF_1
0x40003a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        49	prio-queue.c	FUNCTION_32	FOR_1
0x40003ad	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        49	prio-queue.c	FUNCTION_32	FOR_1
0x40003b0	          0x83e801	                              sub eax, 1	        49	prio-queue.c	FUNCTION_32	FOR_1
0x40003b3	          0x8945f8	                mov dword [rbp - 8], eax	        49	prio-queue.c	FUNCTION_32	FOR_1
0x40003b6	            0xeb44	                           jmp 0x40003fc	        49	prio-queue.c	FUNCTION_32	FOR_1
0x40003b8	          0x8b45f8	                mov eax, dword [rbp - 8]	        50	prio-queue.c	FUNCTION_32	FOR_1
0x40003bb	          0x83e801	                              sub eax, 1	        50	prio-queue.c	FUNCTION_32	FOR_1
0x40003be	            0x89c2	                            mov edx, eax	        50	prio-queue.c	FUNCTION_32	FOR_1
0x40003c0	          0xc1ea1f	                           shr edx, 0x1f	        50	prio-queue.c	FUNCTION_32	FOR_1
0x40003c3	             0x1d0	                            add eax, edx	        50	prio-queue.c	FUNCTION_32	FOR_1
0x40003c5	            0xd1f8	                              sar eax, 1	        50	prio-queue.c	FUNCTION_32	FOR_1
0x40003c7	          0x8945fc	                mov dword [rbp - 4], eax	        50	prio-queue.c	FUNCTION_32	FOR_1
0x40003ca	          0x8b55f8	                mov edx, dword [rbp - 8]	        51	prio-queue.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x40003cd	          0x8b4dfc	                mov ecx, dword [rbp - 4]	        51	prio-queue.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x40003d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        51	prio-queue.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x40003d4	            0x89ce	                            mov esi, ecx	        51	prio-queue.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x40003d6	          0x4889c7	                            mov rdi, rax	        51	prio-queue.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x40003d9	      0xe8b4fcffff	                        call sym.compare	        51	prio-queue.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x40003de	            0x85c0	                           test eax, eax	        51	prio-queue.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x40003e0	            0x7e25	                           jle 0x4000407	        51	prio-queue.c	FUNCTION_32	FOR_1	IF_2	CALL_2
0x40003e2	          0x8b55f8	                mov edx, dword [rbp - 8]	        54	prio-queue.c	FUNCTION_32	FOR_1	CALL_3
0x40003e5	          0x8b4dfc	                mov ecx, dword [rbp - 4]	        54	prio-queue.c	FUNCTION_32	FOR_1	CALL_3
0x40003e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        54	prio-queue.c	FUNCTION_32	FOR_1	CALL_3
0x40003ec	            0x89ce	                            mov esi, ecx	        54	prio-queue.c	FUNCTION_32	FOR_1	CALL_3
0x40003ee	          0x4889c7	                            mov rdi, rax	        54	prio-queue.c	FUNCTION_32	FOR_1	CALL_3
0x40003f1	      0xe837fdffff	                           call sym.swap	        54	prio-queue.c	FUNCTION_32	FOR_1	CALL_3
0x40003f6	          0x8b45fc	                mov eax, dword [rbp - 4]	        49	prio-queue.c	FUNCTION_32	FOR_1
0x40003f9	          0x8945f8	                mov dword [rbp - 8], eax	        49	prio-queue.c	FUNCTION_32	FOR_1
0x40003fc	        0x837df800	                  cmp dword [rbp - 8], 0	        49	prio-queue.c	FUNCTION_32	FOR_1
0x4000400	            0x75b6	                           jne 0x40003b8	        49	prio-queue.c	FUNCTION_32	FOR_1
0x4000402	            0xeb04	                           jmp 0x4000408	        49	prio-queue.c	FUNCTION_32	FOR_1
0x4000404	              0x90	                                     nop	        46	prio-queue.c	FUNCTION_32	IF_1
0x4000405	            0xeb01	                           jmp 0x4000408	        46	prio-queue.c	FUNCTION_32	IF_1
0x4000407	              0x90	                                     nop	        52	prio-queue.c	FUNCTION_32	FOR_1	IF_2
0x4000408	              0xc9	                                   leave	        56	prio-queue.c	FUNCTION_32
0x4000409	              0xc3	                                     ret	        56	prio-queue.c	FUNCTION_32
compare	CALL,1:IF,1:WHILE,0:SWITCH,0:DO,0:functions,0:FOR,0:ELSE,0	49
0x4000092	              0x55	                                push rbp	         5	prio-queue.c	FUNCTION_28
0x4000093	          0x4889e5	                            mov rbp, rsp	         5	prio-queue.c	FUNCTION_28
0x4000096	        0x4883ec20	                           sub rsp, 0x20	         5	prio-queue.c	FUNCTION_28
0x400009a	        0x48897de8	             mov qword [rbp - 0x18], rdi	         5	prio-queue.c	FUNCTION_28
0x400009e	          0x8975e4	             mov dword [rbp - 0x1c], esi	         5	prio-queue.c	FUNCTION_28
0x40000a1	          0x8955e0	             mov dword [rbp - 0x20], edx	         5	prio-queue.c	FUNCTION_28
0x40000a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000a8	          0x488b00	                    mov rax, qword [rax]	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000ab	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000af	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000b3	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000b7	        0x488b4920	            mov rcx, qword [rcx + 0x20] 	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000bb	          0x8b75e0	             mov esi, dword [rbp - 0x20]	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000be	          0x4863f6	                         movsxd rsi, esi	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000c1	        0x48c1e604	                              shl rsi, 4	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000c5	          0x4801f1	                            add rcx, rsi	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000c8	        0x488b7108	                mov rsi, qword [rcx + 8]	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000cc	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000d0	        0x488b4920	            mov rcx, qword [rcx + 0x20] 	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000d4	          0x8b7de4	             mov edi, dword [rbp - 0x1c]	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000d7	          0x4863ff	                         movsxd rdi, edi	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000da	        0x48c1e704	                              shl rdi, 4	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000de	          0x4801f9	                            add rcx, rdi	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000e1	        0x488b4908	                mov rcx, qword [rcx + 8]	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000e5	          0x4889cf	                            mov rdi, rcx	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000e8	            0xffd0	                                call rax	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000ea	          0x8945fc	                mov dword [rbp - 4], eax	         6	prio-queue.c	FUNCTION_28	CALL_1
0x40000ed	        0x837dfc00	                  cmp dword [rbp - 4], 0	         8	prio-queue.c	FUNCTION_28	IF_1
0x40000f1	            0x7535	                           jne 0x4000128	         8	prio-queue.c	FUNCTION_28	IF_1
0x40000f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	         9	prio-queue.c	FUNCTION_28	IF_1
0x40000f7	        0x488b4020	            mov rax, qword [rax + 0x20] 	         9	prio-queue.c	FUNCTION_28	IF_1
0x40000fb	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	         9	prio-queue.c	FUNCTION_28	IF_1
0x40000fe	          0x4863d2	                         movsxd rdx, edx	         9	prio-queue.c	FUNCTION_28	IF_1
0x4000101	        0x48c1e204	                              shl rdx, 4	         9	prio-queue.c	FUNCTION_28	IF_1
0x4000105	          0x4801d0	                            add rax, rdx	         9	prio-queue.c	FUNCTION_28	IF_1
0x4000108	            0x8b10	                    mov edx, dword [rax]	         9	prio-queue.c	FUNCTION_28	IF_1
0x400010a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	         9	prio-queue.c	FUNCTION_28	IF_1
0x400010e	        0x488b4020	            mov rax, qword [rax + 0x20] 	         9	prio-queue.c	FUNCTION_28	IF_1
0x4000112	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	         9	prio-queue.c	FUNCTION_28	IF_1
0x4000115	          0x4863c9	                         movsxd rcx, ecx	         9	prio-queue.c	FUNCTION_28	IF_1
0x4000118	        0x48c1e104	                              shl rcx, 4	         9	prio-queue.c	FUNCTION_28	IF_1
0x400011c	          0x4801c8	                            add rax, rcx	         9	prio-queue.c	FUNCTION_28	IF_1
0x400011f	            0x8b00	                    mov eax, dword [rax]	         9	prio-queue.c	FUNCTION_28	IF_1
0x4000121	            0x29c2	                            sub edx, eax	         9	prio-queue.c	FUNCTION_28	IF_1
0x4000123	            0x89d0	                            mov eax, edx	         9	prio-queue.c	FUNCTION_28	IF_1
0x4000125	          0x8945fc	                mov dword [rbp - 4], eax	         9	prio-queue.c	FUNCTION_28	IF_1
0x4000128	          0x8b45fc	                mov eax, dword [rbp - 4]	        10	prio-queue.c	FUNCTION_28
0x400012b	              0xc9	                                   leave	        11	prio-queue.c	FUNCTION_28
0x400012c	              0xc3	                                     ret	        11	prio-queue.c	FUNCTION_28
prio_queue_get	CALL,3:IF,5:WHILE,0:SWITCH,0:DO,0:functions,0:FOR,1:ELSE,0	106
0x400040a	              0x55	                                push rbp	        59	prio-queue.c	FUNCTION_33
0x400040b	          0x4889e5	                            mov rbp, rsp	        59	prio-queue.c	FUNCTION_33
0x400040e	        0x4883ec20	                           sub rsp, 0x20	        59	prio-queue.c	FUNCTION_33
0x4000412	        0x48897de8	             mov qword [rbp - 0x18], rdi	        59	prio-queue.c	FUNCTION_33
0x4000416	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        63	prio-queue.c	FUNCTION_33	IF_1
0x400041a	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        63	prio-queue.c	FUNCTION_33	IF_1
0x400041d	            0x85c0	                           test eax, eax	        63	prio-queue.c	FUNCTION_33	IF_1
0x400041f	            0x750a	                           jne 0x400042b	        63	prio-queue.c	FUNCTION_33	IF_1
0x4000421	      0xb800000000	                              mov eax, 0	        64	prio-queue.c	FUNCTION_33	IF_1
0x4000426	      0xe931010000	                           jmp 0x400055c	        64	prio-queue.c	FUNCTION_33	IF_1
0x400042b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        65	prio-queue.c	FUNCTION_33	IF_2
0x400042f	          0x488b00	                    mov rax, qword [rax]	        65	prio-queue.c	FUNCTION_33	IF_2
0x4000432	          0x4885c0	                           test rax, rax	        65	prio-queue.c	FUNCTION_33	IF_2
0x4000435	            0x7532	                           jne 0x4000469	        65	prio-queue.c	FUNCTION_33	IF_2
0x4000437	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        66	prio-queue.c	FUNCTION_33	IF_2
0x400043b	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        66	prio-queue.c	FUNCTION_33	IF_2
0x400043f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        66	prio-queue.c	FUNCTION_33	IF_2
0x4000443	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        66	prio-queue.c	FUNCTION_33	IF_2
0x4000446	          0x8d48ff	                      lea ecx, [rax - 1]	        66	prio-queue.c	FUNCTION_33	IF_2
0x4000449	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        66	prio-queue.c	FUNCTION_33	IF_2
0x400044d	          0x89481c	             mov dword [rax + 0x1c], ecx	        66	prio-queue.c	FUNCTION_33	IF_2
0x4000450	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        66	prio-queue.c	FUNCTION_33	IF_2
0x4000454	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        66	prio-queue.c	FUNCTION_33	IF_2
0x4000457	            0x4898	                                    cdqe	        66	prio-queue.c	FUNCTION_33	IF_2
0x4000459	        0x48c1e004	                              shl rax, 4	        66	prio-queue.c	FUNCTION_33	IF_2
0x400045d	          0x4801d0	                            add rax, rdx	        66	prio-queue.c	FUNCTION_33	IF_2
0x4000460	        0x488b4008	                mov rax, qword [rax + 8]	        66	prio-queue.c	FUNCTION_33	IF_2
0x4000464	      0xe9f3000000	                           jmp 0x400055c	        66	prio-queue.c	FUNCTION_33	IF_2
0x4000469	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        68	prio-queue.c	FUNCTION_33
0x400046d	        0x488b4020	            mov rax, qword [rax + 0x20] 	        68	prio-queue.c	FUNCTION_33
0x4000471	        0x488b4008	                mov rax, qword [rax + 8]	        68	prio-queue.c	FUNCTION_33
0x4000475	        0x488945f8	                mov qword [rbp - 8], rax	        68	prio-queue.c	FUNCTION_33
0x4000479	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	prio-queue.c	FUNCTION_33	IF_3
0x400047d	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        69	prio-queue.c	FUNCTION_33	IF_3
0x4000480	          0x8d50ff	                      lea edx, [rax - 1]	        69	prio-queue.c	FUNCTION_33	IF_3
0x4000483	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	prio-queue.c	FUNCTION_33	IF_3
0x4000487	          0x89501c	             mov dword [rax + 0x1c], edx	        69	prio-queue.c	FUNCTION_33	IF_3
0x400048a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	prio-queue.c	FUNCTION_33	IF_3
0x400048e	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        69	prio-queue.c	FUNCTION_33	IF_3
0x4000491	            0x85c0	                           test eax, eax	        69	prio-queue.c	FUNCTION_33	IF_3
0x4000493	            0x7509	                           jne 0x400049e	        69	prio-queue.c	FUNCTION_33	IF_3
0x4000495	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	prio-queue.c	FUNCTION_33	IF_3
0x4000499	      0xe9be000000	                           jmp 0x400055c	        70	prio-queue.c	FUNCTION_33	IF_3
0x400049e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	prio-queue.c	FUNCTION_33
0x40004a2	        0x488b4820	            mov rcx, qword [rax + 0x20] 	        72	prio-queue.c	FUNCTION_33
0x40004a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	prio-queue.c	FUNCTION_33
0x40004aa	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        72	prio-queue.c	FUNCTION_33
0x40004ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	prio-queue.c	FUNCTION_33
0x40004b2	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        72	prio-queue.c	FUNCTION_33
0x40004b5	            0x4898	                                    cdqe	        72	prio-queue.c	FUNCTION_33
0x40004b7	        0x48c1e004	                              shl rax, 4	        72	prio-queue.c	FUNCTION_33
0x40004bb	          0x4801d0	                            add rax, rdx	        72	prio-queue.c	FUNCTION_33
0x40004be	        0x488b5008	                mov rdx, qword [rax + 8]	        72	prio-queue.c	FUNCTION_33
0x40004c2	          0x488b00	                    mov rax, qword [rax]	        72	prio-queue.c	FUNCTION_33
0x40004c5	          0x488901	                    mov qword [rcx], rax	        72	prio-queue.c	FUNCTION_33
0x40004c8	        0x48895108	                mov qword [rcx + 8], rdx	        72	prio-queue.c	FUNCTION_33
0x40004cc	    0xc745f0000000	               mov dword [rbp - 0x10], 0	        75	prio-queue.c	FUNCTION_33	FOR_1
0x40004d3	            0xeb6d	                           jmp 0x4000542	        75	prio-queue.c	FUNCTION_33	FOR_1
0x40004d5	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        76	prio-queue.c	FUNCTION_33	FOR_1
0x40004d8	             0x1c0	                            add eax, eax	        76	prio-queue.c	FUNCTION_33	FOR_1
0x40004da	          0x83c001	                              add eax, 1	        76	prio-queue.c	FUNCTION_33	FOR_1
0x40004dd	          0x8945f4	              mov dword [rbp - 0xc], eax	        76	prio-queue.c	FUNCTION_33	FOR_1
0x40004e0	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        77	prio-queue.c	FUNCTION_33	FOR_1	IF_4
0x40004e3	          0x8d5001	                      lea edx, [rax + 1]	        77	prio-queue.c	FUNCTION_33	FOR_1	IF_4
0x40004e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        77	prio-queue.c	FUNCTION_33	FOR_1	IF_4
0x40004ea	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        77	prio-queue.c	FUNCTION_33	FOR_1	IF_4
0x40004ed	            0x39c2	                            cmp edx, eax	        77	prio-queue.c	FUNCTION_33	FOR_1	IF_4
0x40004ef	            0x7d1f	                           jge 0x4000510	        77	prio-queue.c	FUNCTION_33	FOR_1	IF_4
0x40004f1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        78	prio-queue.c	FUNCTION_33	FOR_1	IF_4	CALL_1
0x40004f4	          0x8d5001	                      lea edx, [rax + 1]	        78	prio-queue.c	FUNCTION_33	FOR_1	IF_4	CALL_1
0x40004f7	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	        78	prio-queue.c	FUNCTION_33	FOR_1	IF_4	CALL_1
0x40004fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        78	prio-queue.c	FUNCTION_33	FOR_1	IF_4	CALL_1
0x40004fe	            0x89ce	                            mov esi, ecx	        78	prio-queue.c	FUNCTION_33	FOR_1	IF_4	CALL_1
0x4000500	          0x4889c7	                            mov rdi, rax	        78	prio-queue.c	FUNCTION_33	FOR_1	IF_4	CALL_1
0x4000503	      0xe88afbffff	                        call sym.compare	        78	prio-queue.c	FUNCTION_33	FOR_1	IF_4	CALL_1
0x4000508	            0x85c0	                           test eax, eax	        77	prio-queue.c	FUNCTION_33	FOR_1	IF_4
0x400050a	            0x7804	                            js 0x4000510	        77	prio-queue.c	FUNCTION_33	FOR_1	IF_4
0x400050c	        0x8345f401	                add dword [rbp - 0xc], 1	        79	prio-queue.c	FUNCTION_33	FOR_1	IF_4
0x4000510	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        81	prio-queue.c	FUNCTION_33	FOR_1	IF_5	CALL_2
0x4000513	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	        81	prio-queue.c	FUNCTION_33	FOR_1	IF_5	CALL_2
0x4000516	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        81	prio-queue.c	FUNCTION_33	FOR_1	IF_5	CALL_2
0x400051a	            0x89ce	                            mov esi, ecx	        81	prio-queue.c	FUNCTION_33	FOR_1	IF_5	CALL_2
0x400051c	          0x4889c7	                            mov rdi, rax	        81	prio-queue.c	FUNCTION_33	FOR_1	IF_5	CALL_2
0x400051f	      0xe86efbffff	                        call sym.compare	        81	prio-queue.c	FUNCTION_33	FOR_1	IF_5	CALL_2
0x4000524	            0x85c0	                           test eax, eax	        81	prio-queue.c	FUNCTION_33	FOR_1	IF_5	CALL_2
0x4000526	            0x7e2f	                           jle 0x4000557	        81	prio-queue.c	FUNCTION_33	FOR_1	IF_5	CALL_2
0x4000528	          0x8b55f0	             mov edx, dword [rbp - 0x10]	        84	prio-queue.c	FUNCTION_33	FOR_1	CALL_3
0x400052b	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	        84	prio-queue.c	FUNCTION_33	FOR_1	CALL_3
0x400052e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	prio-queue.c	FUNCTION_33	FOR_1	CALL_3
0x4000532	            0x89ce	                            mov esi, ecx	        84	prio-queue.c	FUNCTION_33	FOR_1	CALL_3
0x4000534	          0x4889c7	                            mov rdi, rax	        84	prio-queue.c	FUNCTION_33	FOR_1	CALL_3
0x4000537	      0xe8f1fbffff	                           call sym.swap	        84	prio-queue.c	FUNCTION_33	FOR_1	CALL_3
0x400053c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        75	prio-queue.c	FUNCTION_33	FOR_1
0x400053f	          0x8945f0	             mov dword [rbp - 0x10], eax	        75	prio-queue.c	FUNCTION_33	FOR_1
0x4000542	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        75	prio-queue.c	FUNCTION_33	FOR_1
0x4000545	             0x1c0	                            add eax, eax	        75	prio-queue.c	FUNCTION_33	FOR_1
0x4000547	          0x8d5001	                      lea edx, [rax + 1]	        75	prio-queue.c	FUNCTION_33	FOR_1
0x400054a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        75	prio-queue.c	FUNCTION_33	FOR_1
0x400054e	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        75	prio-queue.c	FUNCTION_33	FOR_1
0x4000551	            0x39c2	                            cmp edx, eax	        75	prio-queue.c	FUNCTION_33	FOR_1
0x4000553	            0x7c80	                            jl 0x40004d5	        75	prio-queue.c	FUNCTION_33	FOR_1
0x4000555	            0xeb01	                           jmp 0x4000558	        75	prio-queue.c	FUNCTION_33	FOR_1
0x4000557	              0x90	                                     nop	        82	prio-queue.c	FUNCTION_33	FOR_1	IF_5
0x4000558	        0x488b45f8	                mov rax, qword [rbp - 8]	        86	prio-queue.c	FUNCTION_33
0x400055c	              0xc9	                                   leave	        87	prio-queue.c	FUNCTION_33
0x400055d	              0xc3	                                     ret	        87	prio-queue.c	FUNCTION_33
prio_queue_reverse	CALL,2:IF,1:WHILE,0:SWITCH,0:DO,0:functions,0:FOR,1:ELSE,0	31
0x40001d3	              0x55	                                push rbp	        19	prio-queue.c	FUNCTION_30
0x40001d4	          0x4889e5	                            mov rbp, rsp	        19	prio-queue.c	FUNCTION_30
0x40001d7	        0x4883ec20	                           sub rsp, 0x20	        19	prio-queue.c	FUNCTION_30
0x40001db	        0x48897de8	             mov qword [rbp - 0x18], rdi	        19	prio-queue.c	FUNCTION_30
0x40001df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        22	prio-queue.c	FUNCTION_30	IF_1
0x40001e3	          0x488b00	                    mov rax, qword [rax]	        22	prio-queue.c	FUNCTION_30	IF_1
0x40001e6	          0x4885c0	                           test rax, rax	        22	prio-queue.c	FUNCTION_30	IF_1
0x40001e9	            0x740f	                            je 0x40001fa	        22	prio-queue.c	FUNCTION_30	IF_1
0x40001eb	      0xbf00000000	                              mov edi, 0	        23	prio-queue.c	FUNCTION_30	CALL_1
0x40001f0	      0xb800000000	                              mov eax, 0	        23	prio-queue.c	FUNCTION_30	CALL_1
0x40001f5	      0xe800000000	                          call 0x40001fa	        23	prio-queue.c	FUNCTION_30	CALL_1
0x40001fa	    0xc745f8000000	                  mov dword [rbp - 8], 0	        24	prio-queue.c	FUNCTION_30	FOR_1
0x4000201	            0xeb18	                           jmp 0x400021b	        24	prio-queue.c	FUNCTION_30	FOR_1
0x4000203	          0x8b55fc	                mov edx, dword [rbp - 4]	        25	prio-queue.c	FUNCTION_30	CALL_2
0x4000206	          0x8b4df8	                mov ecx, dword [rbp - 8]	        25	prio-queue.c	FUNCTION_30	CALL_2
0x4000209	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        25	prio-queue.c	FUNCTION_30	CALL_2
0x400020d	            0x89ce	                            mov esi, ecx	        25	prio-queue.c	FUNCTION_30	CALL_2
0x400020f	          0x4889c7	                            mov rdi, rax	        25	prio-queue.c	FUNCTION_30	CALL_2
0x4000212	      0xe816ffffff	                           call sym.swap	        25	prio-queue.c	FUNCTION_30	CALL_2
0x4000217	        0x8345f801	                  add dword [rbp - 8], 1	        24	prio-queue.c	FUNCTION_30	FOR_1
0x400021b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        24	prio-queue.c	FUNCTION_30	FOR_1
0x400021f	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        24	prio-queue.c	FUNCTION_30	FOR_1
0x4000222	          0x83e801	                              sub eax, 1	        24	prio-queue.c	FUNCTION_30	FOR_1
0x4000225	          0x2b45f8	                sub eax, dword [rbp - 8]	        24	prio-queue.c	FUNCTION_30	FOR_1
0x4000228	          0x8945fc	                mov dword [rbp - 4], eax	        24	prio-queue.c	FUNCTION_30	FOR_1
0x400022b	          0x8b45fc	                mov eax, dword [rbp - 4]	        24	prio-queue.c	FUNCTION_30	FOR_1
0x400022e	          0x3b45f8	                cmp eax, dword [rbp - 8]	        24	prio-queue.c	FUNCTION_30	FOR_1
0x4000231	            0x7fd0	                            jg 0x4000203	        24	prio-queue.c	FUNCTION_30	FOR_1
0x4000233	              0x90	                                     nop	        26	prio-queue.c	FUNCTION_30
0x4000234	              0xc9	                                   leave	        26	prio-queue.c	FUNCTION_30
0x4000235	              0xc3	                                     ret	        26	prio-queue.c	FUNCTION_30
clear_prio_queue	CALL,0:IF,0:WHILE,0:SWITCH,0:DO,0:functions,0:FOR,0:ELSE,0	19
0x4000236	              0x55	                                push rbp	        29	prio-queue.c	FUNCTION_31
0x4000237	          0x4889e5	                            mov rbp, rsp	        29	prio-queue.c	FUNCTION_31
0x400023a	        0x4883ec10	                           sub rsp, 0x10	        29	prio-queue.c	FUNCTION_31
0x400023e	        0x48897df8	                mov qword [rbp - 8], rdi	        29	prio-queue.c	FUNCTION_31
0x4000242	        0x488b45f8	                mov rax, qword [rbp - 8]	        30	prio-queue.c	FUNCTION_31
0x4000246	        0x488b4020	            mov rax, qword [rax + 0x20] 	        30	prio-queue.c	FUNCTION_31
0x400024a	          0x4889c7	                            mov rdi, rax	        30	prio-queue.c	FUNCTION_31
0x400024d	      0xe800000000	                          call 0x4000252	        30	prio-queue.c	FUNCTION_31
0x4000252	        0x488b45f8	                mov rax, qword [rbp - 8]	        30	prio-queue.c	FUNCTION_31
0x4000256	    0x48c740200000	               mov qword [rax + 0x20], 0	        30	prio-queue.c	FUNCTION_31
0x400025e	        0x488b45f8	                mov rax, qword [rbp - 8]	        31	prio-queue.c	FUNCTION_31
0x4000262	    0xc7401c000000	               mov dword [rax + 0x1c], 0	        31	prio-queue.c	FUNCTION_31
0x4000269	        0x488b45f8	                mov rax, qword [rbp - 8]	        32	prio-queue.c	FUNCTION_31
0x400026d	    0xc74018000000	               mov dword [rax + 0x18], 0	        32	prio-queue.c	FUNCTION_31
0x4000274	        0x488b45f8	                mov rax, qword [rbp - 8]	        33	prio-queue.c	FUNCTION_31
0x4000278	    0xc74008000000	                  mov dword [rax + 8], 0	        33	prio-queue.c	FUNCTION_31
0x400027f	              0x90	                                     nop	        34	prio-queue.c	FUNCTION_31
0x4000280	              0xc9	                                   leave	        34	prio-queue.c	FUNCTION_31
0x4000281	              0xc3	                                     ret	        34	prio-queue.c	FUNCTION_31
