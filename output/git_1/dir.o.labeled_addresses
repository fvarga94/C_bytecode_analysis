write_untracked_extension	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,33:functions,0:FOR,0	221
0x4006707	              0x55	                                push rbp	      2653	dir.c	FUNCTION_85
0x4006708	          0x4889e5	                            mov rbp, rsp	      2653	dir.c	FUNCTION_85
0x400670b	    0x4881ecc00000	                           sub rsp, 0xc0	      2653	dir.c	FUNCTION_85
0x4006712	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      2653	dir.c	FUNCTION_85
0x4006719	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	      2653	dir.c	FUNCTION_85
0x4006720	    0x64488b042528	                mov rax, qword fs:[0x28]	      2653	dir.c	FUNCTION_85
0x4006729	        0x488945f8	                mov qword [rbp - 8], rax	      2653	dir.c	FUNCTION_85
0x400672d	            0x31c0	                            xor eax, eax	      2653	dir.c	FUNCTION_85
0x400672f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2658	dir.c	FUNCTION_85	CALL_1
0x4006736	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2658	dir.c	FUNCTION_85	CALL_1
0x400673a	          0x4889c7	                            mov rdi, rax	      2658	dir.c	FUNCTION_85	CALL_1
0x400673d	      0xe800000000	                          call 0x4006742	      2658	dir.c	FUNCTION_85	CALL_1
0x4006742	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2658	dir.c	FUNCTION_85	CALL_1
0x4006749	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2660	dir.c	FUNCTION_85
0x4006750	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2660	dir.c	FUNCTION_85
0x4006757	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2660	dir.c	FUNCTION_85
0x400675e	          0x4889c6	                            mov rsi, rax	      2660	dir.c	FUNCTION_85
0x4006761	      0xbf74000000	                           mov edi, 0x74	      2660	dir.c	FUNCTION_85
0x4006766	      0xe80799ffff	                         call sym.st_add	      2660	dir.c	FUNCTION_85
0x400676b	      0xbe01000000	                              mov esi, 1	      2660	dir.c	FUNCTION_85
0x4006770	          0x4889c7	                            mov rdi, rax	      2660	dir.c	FUNCTION_85
0x4006773	      0xe8fa98ffff	                         call sym.st_add	      2660	dir.c	FUNCTION_85
0x4006778	          0x4889c6	                            mov rsi, rax	      2660	dir.c	FUNCTION_85
0x400677b	      0xbf01000000	                              mov edi, 1	      2660	dir.c	FUNCTION_85
0x4006780	      0xe800000000	                          call 0x4006785	      2660	dir.c	FUNCTION_85
0x4006785	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2660	dir.c	FUNCTION_85
0x400678c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2660	dir.c	FUNCTION_85
0x4006793	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2660	dir.c	FUNCTION_85
0x4006797	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      2660	dir.c	FUNCTION_85
0x400679e	        0x488d4a74	                   lea rcx, [rdx + 0x74]	      2660	dir.c	FUNCTION_85
0x40067a2	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2660	dir.c	FUNCTION_85
0x40067a9	          0x4889c6	                            mov rsi, rax	      2660	dir.c	FUNCTION_85
0x40067ac	          0x4889cf	                            mov rdi, rcx	      2660	dir.c	FUNCTION_85
0x40067af	      0xe800000000	                          call 0x40067b4	      2660	dir.c	FUNCTION_85
0x40067b4	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      2661	dir.c	FUNCTION_85	CALL_2
0x40067bb	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2661	dir.c	FUNCTION_85	CALL_2
0x40067c2	          0x4889d6	                            mov rsi, rdx	      2661	dir.c	FUNCTION_85	CALL_2
0x40067c5	          0x4889c7	                            mov rdi, rax	      2661	dir.c	FUNCTION_85	CALL_2
0x40067c8	      0xe876fbffff	              call sym.stat_data_to_disk	      2661	dir.c	FUNCTION_85	CALL_2
0x40067cd	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2662	dir.c	FUNCTION_85	CALL_3
0x40067d4	        0x488d503c	                   lea rdx, [rax + 0x3c]	      2662	dir.c	FUNCTION_85	CALL_3
0x40067d8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2662	dir.c	FUNCTION_85	CALL_3
0x40067df	        0x4883c024	                           add rax, 0x24	      2662	dir.c	FUNCTION_85	CALL_3
0x40067e3	          0x4889d6	                            mov rsi, rdx	      2662	dir.c	FUNCTION_85	CALL_3
0x40067e6	          0x4889c7	                            mov rdi, rax	      2662	dir.c	FUNCTION_85	CALL_3
0x40067e9	      0xe855fbffff	              call sym.stat_data_to_disk	      2662	dir.c	FUNCTION_85	CALL_3
0x40067ee	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2663	dir.c	FUNCTION_85	CALL_4
0x40067f5	        0x488d5024	                   lea rdx, [rax + 0x24]	      2663	dir.c	FUNCTION_85	CALL_4
0x40067f9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2663	dir.c	FUNCTION_85	CALL_4
0x4006800	        0x4883c04c	                           add rax, 0x4c	      2663	dir.c	FUNCTION_85	CALL_4
0x4006804	          0x4889d6	                            mov rsi, rdx	      2663	dir.c	FUNCTION_85	CALL_4
0x4006807	          0x4889c7	                            mov rdi, rax	      2663	dir.c	FUNCTION_85	CALL_4
0x400680a	      0xe8d59cffff	                        call sym.hashcpy	      2663	dir.c	FUNCTION_85	CALL_4
0x400680f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2664	dir.c	FUNCTION_85	CALL_5
0x4006816	        0x488d5060	                   lea rdx, [rax + 0x60]	      2664	dir.c	FUNCTION_85	CALL_5
0x400681a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2664	dir.c	FUNCTION_85	CALL_5
0x4006821	        0x4883c060	                           add rax, 0x60	      2664	dir.c	FUNCTION_85	CALL_5
0x4006825	          0x4889d6	                            mov rsi, rdx	      2664	dir.c	FUNCTION_85	CALL_5
0x4006828	          0x4889c7	                            mov rdi, rax	      2664	dir.c	FUNCTION_85	CALL_5
0x400682b	      0xe8b49cffff	                        call sym.hashcpy	      2664	dir.c	FUNCTION_85	CALL_5
0x4006830	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2665	dir.c	FUNCTION_85
0x4006837	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      2665	dir.c	FUNCTION_85
0x400683d	            0x89c7	                            mov edi, eax	      2665	dir.c	FUNCTION_85
0x400683f	      0xe80f98ffff	                    call sym.git_bswap32	      2665	dir.c	FUNCTION_85
0x4006844	            0x89c2	                            mov edx, eax	      2665	dir.c	FUNCTION_85
0x4006846	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2665	dir.c	FUNCTION_85
0x400684d	          0x895048	             mov dword [rax + 0x48], edx	      2665	dir.c	FUNCTION_85
0x4006850	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2667	dir.c	FUNCTION_85	CALL_6
0x4006857	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2667	dir.c	FUNCTION_85	CALL_6
0x400685e	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2667	dir.c	FUNCTION_85	CALL_6
0x4006862	          0x4889d6	                            mov rsi, rdx	      2667	dir.c	FUNCTION_85	CALL_6
0x4006865	          0x4889c7	                            mov rdi, rax	      2667	dir.c	FUNCTION_85	CALL_6
0x4006868	      0xe800000000	                          call 0x400686d	      2667	dir.c	FUNCTION_85	CALL_6
0x400686d	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2667	dir.c	FUNCTION_85	CALL_6
0x4006873	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2668	dir.c	FUNCTION_85	CALL_7
0x4006879	          0x4863d0	                         movsxd rdx, eax	      2668	dir.c	FUNCTION_85	CALL_7
0x400687c	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2668	dir.c	FUNCTION_85	CALL_7
0x4006880	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2668	dir.c	FUNCTION_85	CALL_7
0x4006887	          0x4889ce	                            mov rsi, rcx	      2668	dir.c	FUNCTION_85	CALL_7
0x400688a	          0x4889c7	                            mov rdi, rax	      2668	dir.c	FUNCTION_85	CALL_7
0x400688d	      0xe800000000	                          call 0x4006892	      2668	dir.c	FUNCTION_85	CALL_7
0x4006892	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2669	dir.c	FUNCTION_85	CALL_8
0x4006899	    0x488d90800000	                   lea rdx, [rax + 0x80]	      2669	dir.c	FUNCTION_85	CALL_8
0x40068a0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2669	dir.c	FUNCTION_85	CALL_8
0x40068a7	          0x4889d6	                            mov rsi, rdx	      2669	dir.c	FUNCTION_85	CALL_8
0x40068aa	          0x4889c7	                            mov rdi, rax	      2669	dir.c	FUNCTION_85	CALL_8
0x40068ad	      0xe800000000	                          call 0x40068b2	      2669	dir.c	FUNCTION_85	CALL_8
0x40068b2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2671	dir.c	FUNCTION_85	CALL_9
0x40068b9	        0x488d5075	                   lea rdx, [rax + 0x75]	      2671	dir.c	FUNCTION_85	CALL_9
0x40068bd	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	      2671	dir.c	FUNCTION_85	CALL_9
0x40068c4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2671	dir.c	FUNCTION_85	CALL_9
0x40068cb	          0x4889ce	                            mov rsi, rcx	      2671	dir.c	FUNCTION_85	CALL_9
0x40068ce	          0x4889c7	                            mov rdi, rax	      2671	dir.c	FUNCTION_85	CALL_9
0x40068d1	      0xe800000000	                          call 0x40068d6	      2671	dir.c	FUNCTION_85	CALL_9
0x40068d6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2672	dir.c	FUNCTION_85
0x40068dd	          0x4889c7	                            mov rdi, rax	      2672	dir.c	FUNCTION_85
0x40068e0	      0xe800000000	                          call 0x40068e5	      2672	dir.c	FUNCTION_85
0x40068e5	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2672	dir.c	FUNCTION_85
0x40068f0	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2674	dir.c	FUNCTION_85	IF_1
0x40068f7	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2674	dir.c	FUNCTION_85	IF_1
0x40068fe	          0x4885c0	                           test rax, rax	      2674	dir.c	FUNCTION_85	IF_1
0x4006901	            0x753b	                           jne 0x400693e	      2674	dir.c	FUNCTION_85	IF_1
0x4006903	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2675	dir.c	FUNCTION_85	IF_1	CALL_10
0x4006907	          0x4889c6	                            mov rsi, rax	      2675	dir.c	FUNCTION_85	IF_1	CALL_10
0x400690a	      0xbf00000000	                              mov edi, 0	      2675	dir.c	FUNCTION_85	IF_1	CALL_10
0x400690f	      0xe800000000	                          call 0x4006914	      2675	dir.c	FUNCTION_85	IF_1	CALL_10
0x4006914	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2675	dir.c	FUNCTION_85	IF_1	CALL_10
0x400691a	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4006920	          0x4863d0	                         movsxd rdx, eax	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4006923	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4006927	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x400692e	          0x4889ce	                            mov rsi, rcx	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4006931	          0x4889c7	                            mov rdi, rax	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4006934	      0xe800000000	                          call 0x4006939	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4006939	      0xe9dc010000	                           jmp 0x4006b1a	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x400693e	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	      2680	dir.c	FUNCTION_85
0x4006948	      0xe800000000	                          call 0x400694d	      2681	dir.c	FUNCTION_85	CALL_12
0x400694d	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2681	dir.c	FUNCTION_85	CALL_12
0x4006954	      0xe800000000	                          call 0x4006959	      2682	dir.c	FUNCTION_85	CALL_13
0x4006959	        0x48894580	             mov qword [rbp - 0x80], rax	      2682	dir.c	FUNCTION_85	CALL_13
0x400695d	      0xe800000000	                          call 0x4006962	      2683	dir.c	FUNCTION_85	CALL_14
0x4006962	        0x48894588	             mov qword [rbp - 0x78], rax	      2683	dir.c	FUNCTION_85	CALL_14
0x4006966	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2684	dir.c	FUNCTION_85	CALL_15
0x400696d	        0x4883c020	                           add rax, 0x20	      2684	dir.c	FUNCTION_85	CALL_15
0x4006971	      0xbe00040000	                          mov esi, 0x400	      2684	dir.c	FUNCTION_85	CALL_15
0x4006976	          0x4889c7	                            mov rdi, rax	      2684	dir.c	FUNCTION_85	CALL_15
0x4006979	      0xe800000000	                          call 0x400697e	      2684	dir.c	FUNCTION_85	CALL_15
0x400697e	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2685	dir.c	FUNCTION_85	CALL_16
0x4006985	        0x4883c038	                           add rax, 0x38	      2685	dir.c	FUNCTION_85	CALL_16
0x4006989	      0xbe00040000	                          mov esi, 0x400	      2685	dir.c	FUNCTION_85	CALL_16
0x400698e	          0x4889c7	                            mov rdi, rax	      2685	dir.c	FUNCTION_85	CALL_16
0x4006991	      0xe800000000	                          call 0x4006996	      2685	dir.c	FUNCTION_85	CALL_16
0x4006996	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2686	dir.c	FUNCTION_85	CALL_17
0x400699d	        0x4883c050	                           add rax, 0x50	      2686	dir.c	FUNCTION_85	CALL_17
0x40069a1	      0xbe00040000	                          mov esi, 0x400	      2686	dir.c	FUNCTION_85	CALL_17
0x40069a6	          0x4889c7	                            mov rdi, rax	      2686	dir.c	FUNCTION_85	CALL_17
0x40069a9	      0xe800000000	                          call 0x40069ae	      2686	dir.c	FUNCTION_85	CALL_17
0x40069ae	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2687	dir.c	FUNCTION_85	CALL_18
0x40069b5	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2687	dir.c	FUNCTION_85	CALL_18
0x40069bc	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      2687	dir.c	FUNCTION_85	CALL_18
0x40069c3	          0x4889d6	                            mov rsi, rdx	      2687	dir.c	FUNCTION_85	CALL_18
0x40069c6	          0x4889c7	                            mov rdi, rax	      2687	dir.c	FUNCTION_85	CALL_18
0x40069c9	      0xe855faffff	                  call sym.write_one_dir	      2687	dir.c	FUNCTION_85	CALL_18
0x40069ce	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      2689	dir.c	FUNCTION_85	CALL_19
0x40069d4	            0x4898	                                    cdqe	      2689	dir.c	FUNCTION_85	CALL_19
0x40069d6	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2689	dir.c	FUNCTION_85	CALL_19
0x40069da	          0x4889d6	                            mov rsi, rdx	      2689	dir.c	FUNCTION_85	CALL_19
0x40069dd	          0x4889c7	                            mov rdi, rax	      2689	dir.c	FUNCTION_85	CALL_19
0x40069e0	      0xe800000000	                          call 0x40069e5	      2689	dir.c	FUNCTION_85	CALL_19
0x40069e5	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2689	dir.c	FUNCTION_85	CALL_19
0x40069eb	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2690	dir.c	FUNCTION_85	CALL_20
0x40069f1	          0x4863d0	                         movsxd rdx, eax	      2690	dir.c	FUNCTION_85	CALL_20
0x40069f4	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2690	dir.c	FUNCTION_85	CALL_20
0x40069f8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2690	dir.c	FUNCTION_85	CALL_20
0x40069ff	          0x4889ce	                            mov rsi, rcx	      2690	dir.c	FUNCTION_85	CALL_20
0x4006a02	          0x4889c7	                            mov rdi, rax	      2690	dir.c	FUNCTION_85	CALL_20
0x4006a05	      0xe800000000	                          call 0x4006a0a	      2690	dir.c	FUNCTION_85	CALL_20
0x4006a0a	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2691	dir.c	FUNCTION_85	CALL_21
0x4006a11	        0x488d5020	                   lea rdx, [rax + 0x20]	      2691	dir.c	FUNCTION_85	CALL_21
0x4006a15	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2691	dir.c	FUNCTION_85	CALL_21
0x4006a1c	          0x4889d6	                            mov rsi, rdx	      2691	dir.c	FUNCTION_85	CALL_21
0x4006a1f	          0x4889c7	                            mov rdi, rax	      2691	dir.c	FUNCTION_85	CALL_21
0x4006a22	      0xe800000000	                          call 0x4006a27	      2691	dir.c	FUNCTION_85	CALL_21
0x4006a27	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2692	dir.c	FUNCTION_85	CALL_22
0x4006a2b	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      2692	dir.c	FUNCTION_85	CALL_22
0x4006a32	          0x4889d6	                            mov rsi, rdx	      2692	dir.c	FUNCTION_85	CALL_22
0x4006a35	          0x4889c7	                            mov rdi, rax	      2692	dir.c	FUNCTION_85	CALL_22
0x4006a38	      0xe800000000	                          call 0x4006a3d	      2692	dir.c	FUNCTION_85	CALL_22
0x4006a3d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2693	dir.c	FUNCTION_85	CALL_23
0x4006a44	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      2693	dir.c	FUNCTION_85	CALL_23
0x4006a4b	          0x4889d6	                            mov rsi, rdx	      2693	dir.c	FUNCTION_85	CALL_23
0x4006a4e	          0x4889c7	                            mov rdi, rax	      2693	dir.c	FUNCTION_85	CALL_23
0x4006a51	      0xe800000000	                          call 0x4006a56	      2693	dir.c	FUNCTION_85	CALL_23
0x4006a56	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2694	dir.c	FUNCTION_85	CALL_24
0x4006a5a	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      2694	dir.c	FUNCTION_85	CALL_24
0x4006a61	          0x4889d6	                            mov rsi, rdx	      2694	dir.c	FUNCTION_85	CALL_24
0x4006a64	          0x4889c7	                            mov rdi, rax	      2694	dir.c	FUNCTION_85	CALL_24
0x4006a67	      0xe800000000	                          call 0x4006a6c	      2694	dir.c	FUNCTION_85	CALL_24
0x4006a6c	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2695	dir.c	FUNCTION_85	CALL_25
0x4006a73	        0x488d5038	                   lea rdx, [rax + 0x38]	      2695	dir.c	FUNCTION_85	CALL_25
0x4006a77	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2695	dir.c	FUNCTION_85	CALL_25
0x4006a7e	          0x4889d6	                            mov rsi, rdx	      2695	dir.c	FUNCTION_85	CALL_25
0x4006a81	          0x4889c7	                            mov rdi, rax	      2695	dir.c	FUNCTION_85	CALL_25
0x4006a84	      0xe800000000	                          call 0x4006a89	      2695	dir.c	FUNCTION_85	CALL_25
0x4006a89	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2696	dir.c	FUNCTION_85	CALL_26
0x4006a90	        0x488d5050	                   lea rdx, [rax + 0x50]	      2696	dir.c	FUNCTION_85	CALL_26
0x4006a94	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2696	dir.c	FUNCTION_85	CALL_26
0x4006a9b	          0x4889d6	                            mov rsi, rdx	      2696	dir.c	FUNCTION_85	CALL_26
0x4006a9e	          0x4889c7	                            mov rdi, rax	      2696	dir.c	FUNCTION_85	CALL_26
0x4006aa1	      0xe800000000	                          call 0x4006aa6	      2696	dir.c	FUNCTION_85	CALL_26
0x4006aa6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2697	dir.c	FUNCTION_85	CALL_27
0x4006aad	      0xbe00000000	                              mov esi, 0	      2697	dir.c	FUNCTION_85	CALL_27
0x4006ab2	          0x4889c7	                            mov rdi, rax	      2697	dir.c	FUNCTION_85	CALL_27
0x4006ab5	      0xe82b98ffff	                   call sym.strbuf_addch	      2697	dir.c	FUNCTION_85	CALL_27
0x4006aba	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2699	dir.c	FUNCTION_85	CALL_28
0x4006abe	          0x4889c7	                            mov rdi, rax	      2699	dir.c	FUNCTION_85	CALL_28
0x4006ac1	      0xe800000000	                          call 0x4006ac6	      2699	dir.c	FUNCTION_85	CALL_28
0x4006ac6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2700	dir.c	FUNCTION_85	CALL_29
0x4006acd	          0x4889c7	                            mov rdi, rax	      2700	dir.c	FUNCTION_85	CALL_29
0x4006ad0	      0xe800000000	                          call 0x4006ad5	      2700	dir.c	FUNCTION_85	CALL_29
0x4006ad5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2701	dir.c	FUNCTION_85	CALL_30
0x4006ad9	          0x4889c7	                            mov rdi, rax	      2701	dir.c	FUNCTION_85	CALL_30
0x4006adc	      0xe800000000	                          call 0x4006ae1	      2701	dir.c	FUNCTION_85	CALL_30
0x4006ae1	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2702	dir.c	FUNCTION_85	CALL_31
0x4006ae8	        0x4883c020	                           add rax, 0x20	      2702	dir.c	FUNCTION_85	CALL_31
0x4006aec	          0x4889c7	                            mov rdi, rax	      2702	dir.c	FUNCTION_85	CALL_31
0x4006aef	      0xe800000000	                          call 0x4006af4	      2702	dir.c	FUNCTION_85	CALL_31
0x4006af4	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2703	dir.c	FUNCTION_85	CALL_32
0x4006afb	        0x4883c038	                           add rax, 0x38	      2703	dir.c	FUNCTION_85	CALL_32
0x4006aff	          0x4889c7	                            mov rdi, rax	      2703	dir.c	FUNCTION_85	CALL_32
0x4006b02	      0xe800000000	                          call 0x4006b07	      2703	dir.c	FUNCTION_85	CALL_32
0x4006b07	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2704	dir.c	FUNCTION_85	CALL_33
0x4006b0e	        0x4883c050	                           add rax, 0x50	      2704	dir.c	FUNCTION_85	CALL_33
0x4006b12	          0x4889c7	                            mov rdi, rax	      2704	dir.c	FUNCTION_85	CALL_33
0x4006b15	      0xe800000000	                          call 0x4006b1a	      2704	dir.c	FUNCTION_85	CALL_33
0x4006b1a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2705	dir.c	FUNCTION_85
0x4006b1e	    0x644833042528	                xor rax, qword fs:[0x28]	      2705	dir.c	FUNCTION_85
0x4006b27	            0x7405	                            je 0x4006b2e	      2705	dir.c	FUNCTION_85
0x4006b29	      0xe800000000	                          call 0x4006b2e	      2705	dir.c	FUNCTION_85
0x4006b2e	              0xc9	                                   leave	      2705	dir.c	FUNCTION_85
0x4006b2f	              0xc3	                                     ret	      2705	dir.c	FUNCTION_85
set_check_only	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,0:functions,0:FOR,0	20
0x40070dd	              0x55	                                push rbp	      2810	dir.c	FUNCTION_90
0x40070de	          0x4889e5	                            mov rbp, rsp	      2810	dir.c	FUNCTION_90
0x40070e1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2810	dir.c	FUNCTION_90
0x40070e5	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2810	dir.c	FUNCTION_90
0x40070e9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2811	dir.c	FUNCTION_90
0x40070ed	        0x488945f0	             mov qword [rbp - 0x10], rax	      2811	dir.c	FUNCTION_90
0x40070f1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2812	dir.c	FUNCTION_90
0x40070f5	        0x488b4008	                mov rax, qword [rax + 8]	      2812	dir.c	FUNCTION_90
0x40070f9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2812	dir.c	FUNCTION_90
0x40070fd	        0x48c1e203	                              shl rdx, 3	      2812	dir.c	FUNCTION_90
0x4007101	          0x4801d0	                            add rax, rdx	      2812	dir.c	FUNCTION_90
0x4007104	          0x488b00	                    mov rax, qword [rax]	      2812	dir.c	FUNCTION_90
0x4007107	        0x488945f8	                mov qword [rbp - 8], rax	      2812	dir.c	FUNCTION_90
0x400710b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2813	dir.c	FUNCTION_90
0x400710f	         0xfb65044	           movzx edx, byte [rax + 0x44] 	      2813	dir.c	FUNCTION_90
0x4007113	          0x83ca01	                               or edx, 1	      2813	dir.c	FUNCTION_90
0x4007116	          0x885044	               mov byte [rax + 0x44], dl	      2813	dir.c	FUNCTION_90
0x4007119	              0x90	                                     nop	      2814	dir.c	FUNCTION_90
0x400711a	              0x5d	                                 pop rbp	      2814	dir.c	FUNCTION_90
0x400711b	              0xc3	                                     ret	      2814	dir.c	FUNCTION_90
st_mult	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,1:functions,0:FOR,0	22
0x40000b6	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_117
0x40000b7	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_117
0x40000ba	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_117
0x40000be	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_117
0x40000c2	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_117
0x40000c6	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_117	IF_1
0x40000cb	            0x7430	                            je 0x40000fd	       795	git-compat-util.h	FUNCTION_117	IF_1
0x40000cd	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_117	IF_1
0x40000d4	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_117	IF_1
0x40000d9	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_117	IF_1
0x40000dd	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_117	IF_1
0x40000e1	            0x731a	                           jae 0x40000fd	       795	git-compat-util.h	FUNCTION_117	IF_1
0x40000e3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_117	IF_1	CALL_1
0x40000e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_117	IF_1	CALL_1
0x40000eb	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_117	IF_1	CALL_1
0x40000ee	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_117	IF_1	CALL_1
0x40000f3	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_117	IF_1	CALL_1
0x40000f8	      0xe800000000	                          call 0x40000fd	       796	git-compat-util.h	FUNCTION_117	IF_1	CALL_1
0x40000fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_117
0x4000101	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_117
0x4000106	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_117
0x4000107	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_117
untracked_cache_invalidate_path	SWITCH,0:ELSE,0:WHILE,0:IF,2:DO,0:CALL,3:functions,0:FOR,0	40
0x4007784	              0x55	                                push rbp	      2993	dir.c	FUNCTION_97
0x4007785	          0x4889e5	                            mov rbp, rsp	      2993	dir.c	FUNCTION_97
0x4007788	        0x4883ec20	                           sub rsp, 0x20	      2993	dir.c	FUNCTION_97
0x400778c	        0x48897df8	                mov qword [rbp - 8], rdi	      2993	dir.c	FUNCTION_97
0x4007790	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2993	dir.c	FUNCTION_97
0x4007794	          0x8955ec	             mov dword [rbp - 0x14], edx	      2993	dir.c	FUNCTION_97
0x4007797	        0x488b45f8	                mov rax, qword [rbp - 8]	      2994	dir.c	FUNCTION_97	IF_1
0x400779b	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      2994	dir.c	FUNCTION_97	IF_1
0x40077a2	          0x4885c0	                           test rax, rax	      2994	dir.c	FUNCTION_97	IF_1
0x40077a5	            0x7466	                            je 0x400780d	      2994	dir.c	FUNCTION_97	IF_1
0x40077a7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2994	dir.c	FUNCTION_97	IF_1
0x40077ab	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      2994	dir.c	FUNCTION_97	IF_1
0x40077b2	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2994	dir.c	FUNCTION_97	IF_1
0x40077b9	          0x4885c0	                           test rax, rax	      2994	dir.c	FUNCTION_97	IF_1
0x40077bc	            0x744f	                            je 0x400780d	      2994	dir.c	FUNCTION_97	IF_1
0x40077be	        0x837dec00	               cmp dword [rbp - 0x14], 0	      2996	dir.c	FUNCTION_97	IF_2	CALL_1
0x40077c2	            0x7510	                           jne 0x40077d4	      2996	dir.c	FUNCTION_97	IF_2	CALL_1
0x40077c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2996	dir.c	FUNCTION_97	IF_2	CALL_1
0x40077c8	          0x4889c7	                            mov rdi, rax	      2996	dir.c	FUNCTION_97	IF_2	CALL_1
0x40077cb	      0xe800000000	                          call 0x40077d0	      2996	dir.c	FUNCTION_97	IF_2	CALL_1
0x40077d0	            0x85c0	                           test eax, eax	      2996	dir.c	FUNCTION_97	IF_2	CALL_1
0x40077d2	            0x743c	                            je 0x4007810	      2996	dir.c	FUNCTION_97	IF_2	CALL_1
0x40077d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2999	dir.c	FUNCTION_97	CALL_3
0x40077d8	          0x4889c7	                            mov rdi, rax	      2999	dir.c	FUNCTION_97	CALL_3
0x40077db	      0xe800000000	                          call 0x40077e0	      2999	dir.c	FUNCTION_97	CALL_3
0x40077e0	            0x89c1	                            mov ecx, eax	      2998	dir.c	FUNCTION_97	CALL_2
0x40077e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2998	dir.c	FUNCTION_97	CALL_2
0x40077e6	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      2998	dir.c	FUNCTION_97	CALL_2
0x40077ed	    0x488bb0a00000	            mov rsi, qword [rax + 0xa0] 	      2998	dir.c	FUNCTION_97	CALL_2
0x40077f4	        0x488b45f8	                mov rax, qword [rbp - 8]	      2998	dir.c	FUNCTION_97	CALL_2
0x40077f8	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      2998	dir.c	FUNCTION_97	CALL_2
0x40077ff	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2998	dir.c	FUNCTION_97	CALL_2
0x4007803	          0x4889c7	                            mov rdi, rax	      2998	dir.c	FUNCTION_97	CALL_2
0x4007806	      0xe8b2feffff	       call sym.invalidate_one_component	      2998	dir.c	FUNCTION_97	CALL_2
0x400780b	            0xeb04	                           jmp 0x4007811	      2998	dir.c	FUNCTION_97	CALL_2
0x400780d	              0x90	                                     nop	      2995	dir.c	FUNCTION_97	IF_1
0x400780e	            0xeb01	                           jmp 0x4007811	      2995	dir.c	FUNCTION_97	IF_1
0x4007810	              0x90	                                     nop	      2997	dir.c	FUNCTION_97	IF_2
0x4007811	              0xc9	                                   leave	      3000	dir.c	FUNCTION_97
0x4007812	              0xc3	                                     ret	      3000	dir.c	FUNCTION_97
sane_qsort	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,0:functions,0:FOR,0	18
0x40001ba	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_127
0x40001bb	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_127
0x40001be	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_127
0x40001c2	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_127
0x40001c6	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_127
0x40001ca	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_127
0x40001ce	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_127
0x40001d2	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_127	IF_1
0x40001d7	            0x7618	                           jbe 0x40001f1	      1048	git-compat-util.h	FUNCTION_127	IF_1
0x40001d9	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_127	IF_1
0x40001dd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_127	IF_1
0x40001e1	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_127	IF_1
0x40001e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_127	IF_1
0x40001e9	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_127	IF_1
0x40001ec	      0xe800000000	                          call 0x40001f1	      1049	git-compat-util.h	FUNCTION_127	IF_1
0x40001f1	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_127
0x40001f2	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_127
0x40001f3	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_127
add_untracked	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,1:functions,0:FOR,0	79
0x40043e7	              0x55	                                push rbp	      1795	dir.c	FUNCTION_56
0x40043e8	          0x4889e5	                            mov rbp, rsp	      1795	dir.c	FUNCTION_56
0x40043eb	              0x53	                                push rbx	      1795	dir.c	FUNCTION_56
0x40043ec	        0x4883ec18	                           sub rsp, 0x18	      1795	dir.c	FUNCTION_56
0x40043f0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1795	dir.c	FUNCTION_56
0x40043f4	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1795	dir.c	FUNCTION_56
0x40043f8	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1796	dir.c	FUNCTION_56	IF_1
0x40043fd	     0xf84d4000000	                            je 0x40044d7	      1796	dir.c	FUNCTION_56	IF_1
0x4004403	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1798	dir.c	FUNCTION_56
0x4004407	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1798	dir.c	FUNCTION_56
0x400440a	          0x8d5001	                      lea edx, [rax + 1]	      1798	dir.c	FUNCTION_56
0x400440d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1798	dir.c	FUNCTION_56
0x4004411	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1798	dir.c	FUNCTION_56
0x4004414	            0x39c2	                            cmp edx, eax	      1798	dir.c	FUNCTION_56
0x4004416	     0xf8687000000	                           jbe 0x40044a3	      1798	dir.c	FUNCTION_56
0x400441c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1798	dir.c	FUNCTION_56
0x4004420	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1798	dir.c	FUNCTION_56
0x4004423	            0x89d0	                            mov eax, edx	      1798	dir.c	FUNCTION_56
0x4004425	             0x1c0	                            add eax, eax	      1798	dir.c	FUNCTION_56
0x4004427	             0x1d0	                            add eax, edx	      1798	dir.c	FUNCTION_56
0x4004429	          0x83c030	                           add eax, 0x30	      1798	dir.c	FUNCTION_56
0x400442c	            0xd1e8	                              shr eax, 1	      1798	dir.c	FUNCTION_56
0x400442e	            0x89c2	                            mov edx, eax	      1798	dir.c	FUNCTION_56
0x4004430	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1798	dir.c	FUNCTION_56
0x4004434	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1798	dir.c	FUNCTION_56
0x4004437	          0x83c001	                              add eax, 1	      1798	dir.c	FUNCTION_56
0x400443a	            0x39c2	                            cmp edx, eax	      1798	dir.c	FUNCTION_56
0x400443c	            0x7313	                           jae 0x4004451	      1798	dir.c	FUNCTION_56
0x400443e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1798	dir.c	FUNCTION_56
0x4004442	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1798	dir.c	FUNCTION_56
0x4004445	          0x8d5001	                      lea edx, [rax + 1]	      1798	dir.c	FUNCTION_56
0x4004448	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1798	dir.c	FUNCTION_56
0x400444c	          0x895034	             mov dword [rax + 0x34], edx	      1798	dir.c	FUNCTION_56
0x400444f	            0xeb1b	                           jmp 0x400446c	      1798	dir.c	FUNCTION_56
0x4004451	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1798	dir.c	FUNCTION_56
0x4004455	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1798	dir.c	FUNCTION_56
0x4004458	            0x89d0	                            mov eax, edx	      1798	dir.c	FUNCTION_56
0x400445a	             0x1c0	                            add eax, eax	      1798	dir.c	FUNCTION_56
0x400445c	             0x1d0	                            add eax, edx	      1798	dir.c	FUNCTION_56
0x400445e	          0x83c030	                           add eax, 0x30	      1798	dir.c	FUNCTION_56
0x4004461	            0xd1e8	                              shr eax, 1	      1798	dir.c	FUNCTION_56
0x4004463	            0x89c2	                            mov edx, eax	      1798	dir.c	FUNCTION_56
0x4004465	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1798	dir.c	FUNCTION_56
0x4004469	          0x895034	             mov dword [rax + 0x34], edx	      1798	dir.c	FUNCTION_56
0x400446c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1798	dir.c	FUNCTION_56
0x4004470	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1798	dir.c	FUNCTION_56
0x4004473	            0x89c0	                            mov eax, eax	      1798	dir.c	FUNCTION_56
0x4004475	          0x4889c6	                            mov rsi, rax	      1798	dir.c	FUNCTION_56
0x4004478	      0xbf08000000	                              mov edi, 8	      1798	dir.c	FUNCTION_56
0x400447d	      0xe834bcffff	                        call sym.st_mult	      1798	dir.c	FUNCTION_56
0x4004482	          0x4889c2	                            mov rdx, rax	      1798	dir.c	FUNCTION_56
0x4004485	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1798	dir.c	FUNCTION_56
0x4004489	        0x488b4008	                mov rax, qword [rax + 8]	      1798	dir.c	FUNCTION_56
0x400448d	          0x4889d6	                            mov rsi, rdx	      1798	dir.c	FUNCTION_56
0x4004490	          0x4889c7	                            mov rdi, rax	      1798	dir.c	FUNCTION_56
0x4004493	      0xe800000000	                          call 0x4004498	      1798	dir.c	FUNCTION_56
0x4004498	          0x4889c2	                            mov rdx, rax	      1798	dir.c	FUNCTION_56
0x400449b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1798	dir.c	FUNCTION_56
0x400449f	        0x48895008	                mov qword [rax + 8], rdx	      1798	dir.c	FUNCTION_56
0x40044a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1800	dir.c	FUNCTION_56	CALL_1
0x40044a7	        0x488b7008	                mov rsi, qword [rax + 8]	      1800	dir.c	FUNCTION_56	CALL_1
0x40044ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1800	dir.c	FUNCTION_56	CALL_1
0x40044af	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1800	dir.c	FUNCTION_56	CALL_1
0x40044b2	          0x8d4801	                      lea ecx, [rax + 1]	      1800	dir.c	FUNCTION_56	CALL_1
0x40044b5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1800	dir.c	FUNCTION_56	CALL_1
0x40044b9	          0x894a40	             mov dword [rdx + 0x40], ecx	      1800	dir.c	FUNCTION_56	CALL_1
0x40044bc	            0x89c0	                            mov eax, eax	      1800	dir.c	FUNCTION_56	CALL_1
0x40044be	        0x48c1e003	                              shl rax, 3	      1800	dir.c	FUNCTION_56	CALL_1
0x40044c2	        0x488d1c06	                    lea rbx, [rsi + rax]	      1800	dir.c	FUNCTION_56	CALL_1
0x40044c6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1800	dir.c	FUNCTION_56	CALL_1
0x40044ca	          0x4889c7	                            mov rdi, rax	      1800	dir.c	FUNCTION_56	CALL_1
0x40044cd	      0xe800000000	                          call 0x40044d2	      1800	dir.c	FUNCTION_56	CALL_1
0x40044d2	          0x488903	                    mov qword [rbx], rax	      1800	dir.c	FUNCTION_56	CALL_1
0x40044d5	            0xeb01	                           jmp 0x40044d8	      1800	dir.c	FUNCTION_56	CALL_1
0x40044d7	              0x90	                                     nop	      1797	dir.c	FUNCTION_56	IF_1
0x40044d8	        0x4883c418	                           add rsp, 0x18	      1801	dir.c	FUNCTION_56
0x40044dc	              0x5b	                                 pop rbx	      1801	dir.c	FUNCTION_56
0x40044dd	              0x5d	                                 pop rbp	      1801	dir.c	FUNCTION_56
0x40044de	              0xc3	                                     ret	      1801	dir.c	FUNCTION_56
strbuf_addch	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,2:functions,0:FOR,0	33
0x40002e5	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_133
0x40002e6	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_133
0x40002e9	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_133
0x40002ed	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_133
0x40002f1	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_133
0x40002f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_133	IF_1	CALL_1
0x40002f8	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_133	IF_1	CALL_1
0x40002fb	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_133	IF_1	CALL_1
0x4000300	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_133	IF_1	CALL_1
0x4000303	            0x7511	                           jne 0x4000316	       227	strbuf.h	FUNCTION_133	IF_1	CALL_1
0x4000305	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_133	CALL_2
0x4000309	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_133	CALL_2
0x400030e	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_133	CALL_2
0x4000311	      0xe800000000	                          call 0x4000316	       228	strbuf.h	FUNCTION_133	CALL_2
0x4000316	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_133
0x400031a	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_133
0x400031e	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_133
0x4000322	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_133
0x4000326	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_133
0x400032a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_133
0x400032e	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_133
0x4000332	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_133
0x4000335	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_133
0x4000338	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_133
0x400033a	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_133
0x400033e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_133
0x4000342	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_133
0x4000346	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_133
0x400034a	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_133
0x400034d	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_133
0x4000350	              0x90	                                     nop	       231	strbuf.h	FUNCTION_133
0x4000351	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_133
0x4000352	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_133
strbuf_setlen	SWITCH,0:ELSE,1:WHILE,0:IF,2:DO,0:CALL,2:functions,0:FOR,0	43
0x400024b	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_132
0x400024c	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_132
0x400024f	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_132
0x4000253	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_132
0x4000257	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_132
0x400025b	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_132	IF_1
0x400025f	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_132	IF_1
0x4000262	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_132	IF_1
0x4000265	            0x740d	                            je 0x4000274	       162	strbuf.h	FUNCTION_132	IF_1
0x4000267	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_132	IF_1
0x400026b	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_132	IF_1
0x400026e	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_132	IF_1
0x4000272	            0xeb05	                           jmp 0x4000279	       162	strbuf.h	FUNCTION_132	IF_1
0x4000274	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_132	IF_1
0x4000279	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_132	IF_1
0x400027d	            0x730f	                           jae 0x400028e	       162	strbuf.h	FUNCTION_132	IF_1
0x400027f	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_132	CALL_1
0x4000284	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_132	CALL_1
0x4000289	      0xe800000000	                          call 0x400028e	       163	strbuf.h	FUNCTION_132	CALL_1
0x400028e	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_132
0x4000292	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_132
0x4000296	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_132
0x400029a	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_132	IF_2
0x400029e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_132	IF_2
0x40002a2	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_132	IF_2
0x40002a8	            0x7414	                            je 0x40002be	       165	strbuf.h	FUNCTION_132	IF_2
0x40002aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_132	IF_2
0x40002ae	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_132	IF_2
0x40002b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_132	IF_2
0x40002b6	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_132	IF_2
0x40002b9	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_132	IF_2
0x40002bc	            0xeb24	                           jmp 0x40002e2	       169	strbuf.h	FUNCTION_132
0x40002be	     0xfb605000000	           movzx eax, byte [0x040002c5] 	       168	strbuf.h	FUNCTION_132	CALL_2
0x40002c5	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_132	CALL_2
0x40002c7	            0x7419	                            je 0x40002e2	       168	strbuf.h	FUNCTION_132	CALL_2
0x40002c9	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_132	CALL_2
0x40002ce	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_132	CALL_2
0x40002d3	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_132	CALL_2
0x40002d8	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_132	CALL_2
0x40002dd	      0xe800000000	                          call 0x40002e2	       168	strbuf.h	FUNCTION_132	CALL_2
0x40002e2	              0x90	                                     nop	       169	strbuf.h	FUNCTION_132
0x40002e3	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_132
0x40002e4	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_132
git_fnmatch	SWITCH,0:ELSE,1:WHILE,0:IF,4:DO,0:CALL,6:functions,0:FOR,0	93
0x4000747	              0x55	                                push rbp	        80	dir.c	FUNCTION_4
0x4000748	          0x4889e5	                            mov rbp, rsp	        80	dir.c	FUNCTION_4
0x400074b	        0x4883ec30	                           sub rsp, 0x30	        80	dir.c	FUNCTION_4
0x400074f	        0x48897de8	             mov qword [rbp - 0x18], rdi	        80	dir.c	FUNCTION_4
0x4000753	        0x488975e0	             mov qword [rbp - 0x20], rsi	        80	dir.c	FUNCTION_4
0x4000757	        0x488955d8	             mov qword [rbp - 0x28], rdx	        80	dir.c	FUNCTION_4
0x400075b	          0x894dd4	             mov dword [rbp - 0x2c], ecx	        80	dir.c	FUNCTION_4
0x400075e	        0x837dd400	               cmp dword [rbp - 0x2c], 0	        81	dir.c	FUNCTION_4	IF_1
0x4000762	            0x7e3a	                           jle 0x400079e	        81	dir.c	FUNCTION_4	IF_1
0x4000764	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4000767	          0x4863c8	                         movsxd rcx, eax	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x400076a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x400076e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4000772	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4000776	          0x4889c7	                            mov rdi, rax	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4000779	      0xe859feffff	                     call sym.ps_strncmp	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x400077e	            0x85c0	                           test eax, eax	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4000780	            0x740a	                            je 0x400078c	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4000782	      0xb801000000	                              mov eax, 1	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x4000787	      0xe9e7000000	                           jmp 0x4000873	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x400078c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	        84	dir.c	FUNCTION_4	IF_1
0x400078f	            0x4898	                                    cdqe	        84	dir.c	FUNCTION_4	IF_1
0x4000791	        0x480145e0	            add qword [rbp - 0x20], rax 	        84	dir.c	FUNCTION_4	IF_1
0x4000795	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	        85	dir.c	FUNCTION_4	IF_1
0x4000798	            0x4898	                                    cdqe	        85	dir.c	FUNCTION_4	IF_1
0x400079a	        0x480145d8	            add qword [rbp - 0x28], rax 	        85	dir.c	FUNCTION_4	IF_1
0x400079e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        87	dir.c	FUNCTION_4	IF_3
0x40007a2	          0x8b4020	            mov eax, dword [rax + 0x20] 	        87	dir.c	FUNCTION_4	IF_3
0x40007a5	          0x83e001	                              and eax, 1	        87	dir.c	FUNCTION_4	IF_3
0x40007a8	            0x85c0	                           test eax, eax	        87	dir.c	FUNCTION_4	IF_3
0x40007aa	            0x7465	                            je 0x4000811	        87	dir.c	FUNCTION_4	IF_3
0x40007ac	      0x488345e001	               add qword [rbp - 0x20], 1	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x40007b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x40007b5	          0x4889c7	                            mov rdi, rax	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x40007b8	      0xe800000000	                          call 0x40007bd	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x40007bd	          0x8945f8	                mov dword [rbp - 8], eax	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x40007c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        89	dir.c	FUNCTION_4	IF_3	CALL_3
0x40007c4	          0x4889c7	                            mov rdi, rax	        89	dir.c	FUNCTION_4	IF_3	CALL_3
0x40007c7	      0xe800000000	                          call 0x40007cc	        89	dir.c	FUNCTION_4	IF_3	CALL_3
0x40007cc	          0x8945fc	                mov dword [rbp - 4], eax	        89	dir.c	FUNCTION_4	IF_3	CALL_3
0x40007cf	          0x8b45fc	                mov eax, dword [rbp - 4]	        90	dir.c	FUNCTION_4	IF_3
0x40007d2	          0x3b45f8	                cmp eax, dword [rbp - 8]	        90	dir.c	FUNCTION_4	IF_3
0x40007d5	            0x7c2c	                            jl 0x4000803	        90	dir.c	FUNCTION_4	IF_3
0x40007d7	          0x8b45fc	                mov eax, dword [rbp - 4]	        92	dir.c	FUNCTION_4	IF_3
0x40007da	          0x4863d0	                         movsxd rdx, eax	        92	dir.c	FUNCTION_4	IF_3
0x40007dd	          0x8b45f8	                mov eax, dword [rbp - 8]	        92	dir.c	FUNCTION_4	IF_3
0x40007e0	            0x4898	                                    cdqe	        92	dir.c	FUNCTION_4	IF_3
0x40007e2	          0x4829c2	                            sub rdx, rax	        92	dir.c	FUNCTION_4	IF_3
0x40007e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x40007e9	          0x4801c2	                            add rdx, rax	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x40007ec	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x40007f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x40007f4	          0x4889ce	                            mov rsi, rcx	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x40007f7	          0x4889c7	                            mov rdi, rax	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x40007fa	      0xe830feffff	                      call sym.ps_strcmp	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x40007ff	            0x85c0	                           test eax, eax	        90	dir.c	FUNCTION_4	IF_3
0x4000801	            0x7407	                            je 0x400080a	        90	dir.c	FUNCTION_4	IF_3
0x4000803	      0xb801000000	                              mov eax, 1	        90	dir.c	FUNCTION_4	IF_3
0x4000808	            0xeb69	                           jmp 0x4000873	        90	dir.c	FUNCTION_4	IF_3
0x400080a	      0xb800000000	                              mov eax, 0	        90	dir.c	FUNCTION_4	IF_3
0x400080f	            0xeb62	                           jmp 0x4000873	        90	dir.c	FUNCTION_4	IF_3
0x4000811	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        94	dir.c	FUNCTION_4	IF_4
0x4000815	          0x8b4010	            mov eax, dword [rax + 0x10] 	        94	dir.c	FUNCTION_4	IF_4
0x4000818	          0x83e008	                              and eax, 8	        94	dir.c	FUNCTION_4	IF_4
0x400081b	            0x85c0	                           test eax, eax	        94	dir.c	FUNCTION_4	IF_4
0x400081d	            0x742f	                            je 0x400084e	        94	dir.c	FUNCTION_4	IF_4
0x400081f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	dir.c	FUNCTION_4	IF_4
0x4000823	          0x8b4010	            mov eax, dword [rax + 0x10] 	        97	dir.c	FUNCTION_4	IF_4
0x4000826	          0x83e010	                           and eax, 0x10	        97	dir.c	FUNCTION_4	IF_4
0x4000829	            0x85c0	                           test eax, eax	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x400082b	            0x7407	                            je 0x4000834	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x400082d	      0xba03000000	                              mov edx, 3	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x4000832	            0xeb05	                           jmp 0x4000839	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x4000834	      0xba02000000	                              mov edx, 2	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x4000839	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x400083d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x4000841	          0x4889ce	                            mov rsi, rcx	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x4000844	          0x4889c7	                            mov rdi, rax	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x4000847	      0xe800000000	                          call 0x400084c	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x400084c	            0xeb25	                           jmp 0x4000873	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x400084e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       101	dir.c	FUNCTION_4	ELSE_1
0x4000852	          0x8b4010	            mov eax, dword [rax + 0x10] 	       101	dir.c	FUNCTION_4	ELSE_1
0x4000855	          0x83e010	                           and eax, 0x10	       101	dir.c	FUNCTION_4	ELSE_1
0x4000858	            0x85c0	                           test eax, eax	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x400085a	           0xf95c0	                                setne al	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x400085d	           0xfb6d0	                           movzx edx, al	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x4000860	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x4000864	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x4000868	          0x4889ce	                            mov rsi, rcx	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x400086b	          0x4889c7	                            mov rdi, rax	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x400086e	      0xe800000000	                          call 0x4000873	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x4000873	              0xc9	                                   leave	       102	dir.c	FUNCTION_4
0x4000874	              0xc3	                                     ret	       102	dir.c	FUNCTION_4
invalidate_one_directory	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,0:functions,0:FOR,0	18
0x400767e	              0x55	                                push rbp	      2939	dir.c	FUNCTION_95
0x400767f	          0x4889e5	                            mov rbp, rsp	      2939	dir.c	FUNCTION_95
0x4007682	        0x48897df8	                mov qword [rbp - 8], rdi	      2939	dir.c	FUNCTION_95
0x4007686	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2939	dir.c	FUNCTION_95
0x400768a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2940	dir.c	FUNCTION_95
0x400768e	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      2940	dir.c	FUNCTION_95
0x4007694	          0x8d5001	                      lea edx, [rax + 1]	      2940	dir.c	FUNCTION_95
0x4007697	        0x488b45f8	                mov rax, qword [rbp - 8]	      2940	dir.c	FUNCTION_95
0x400769b	    0x8990b0000000	             mov dword [rax + 0xb0], edx	      2940	dir.c	FUNCTION_95
0x40076a1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2941	dir.c	FUNCTION_95
0x40076a5	         0xfb65044	           movzx edx, byte [rax + 0x44] 	      2941	dir.c	FUNCTION_95
0x40076a9	          0x83e2fd	                     and edx, 0xfffffffd	      2941	dir.c	FUNCTION_95
0x40076ac	          0x885044	               mov byte [rax + 0x44], dl	      2941	dir.c	FUNCTION_95
0x40076af	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2942	dir.c	FUNCTION_95
0x40076b3	    0xc74040000000	               mov dword [rax + 0x40], 0	      2942	dir.c	FUNCTION_95
0x40076ba	              0x90	                                     nop	      2943	dir.c	FUNCTION_95
0x40076bb	              0x5d	                                 pop rbp	      2943	dir.c	FUNCTION_95
0x40076bc	              0xc3	                                     ret	      2943	dir.c	FUNCTION_95
exclude_matches_pathspec	SWITCH,0:ELSE,0:WHILE,0:IF,3:DO,0:CALL,2:functions,0:FOR,1	89
0x4003c4c	              0x55	                                push rbp	      1566	dir.c	FUNCTION_50
0x4003c4d	          0x4889e5	                            mov rbp, rsp	      1566	dir.c	FUNCTION_50
0x4003c50	        0x4883ec30	                           sub rsp, 0x30	      1566	dir.c	FUNCTION_50
0x4003c54	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1566	dir.c	FUNCTION_50
0x4003c58	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1566	dir.c	FUNCTION_50
0x4003c5b	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1566	dir.c	FUNCTION_50
0x4003c5f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1569	dir.c	FUNCTION_50	IF_1
0x4003c64	            0x740a	                            je 0x4003c70	      1569	dir.c	FUNCTION_50	IF_1
0x4003c66	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1569	dir.c	FUNCTION_50	IF_1
0x4003c6a	            0x8b00	                    mov eax, dword [rax]	      1569	dir.c	FUNCTION_50	IF_1
0x4003c6c	            0x85c0	                           test eax, eax	      1569	dir.c	FUNCTION_50	IF_1
0x4003c6e	            0x750a	                           jne 0x4003c7a	      1569	dir.c	FUNCTION_50	IF_1
0x4003c70	      0xb800000000	                              mov eax, 0	      1570	dir.c	FUNCTION_50	IF_1
0x4003c75	      0xe9fd000000	                           jmp 0x4003d77	      1570	dir.c	FUNCTION_50	IF_1
0x4003c7a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1572	dir.c	FUNCTION_50
0x4003c7e	          0x8b4008	                mov eax, dword [rax + 8]	      1572	dir.c	FUNCTION_50
0x4003c81	          0x83e0c0	                     and eax, 0xffffffc0	      1572	dir.c	FUNCTION_50
0x4003c84	            0x85c0	                           test eax, eax	      1572	dir.c	FUNCTION_50
0x4003c86	            0x7425	                            je 0x4003cad	      1572	dir.c	FUNCTION_50
0x4003c88	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1572	dir.c	FUNCTION_50
0x4003c8c	          0x8b4008	                mov eax, dword [rax + 8]	      1572	dir.c	FUNCTION_50
0x4003c8f	          0x83e0c0	                     and eax, 0xffffffc0	      1572	dir.c	FUNCTION_50
0x4003c92	            0x89c1	                            mov ecx, eax	      1572	dir.c	FUNCTION_50
0x4003c94	      0xba2a060000	                          mov edx, 0x62a	      1572	dir.c	FUNCTION_50
0x4003c99	      0xbe00000000	                              mov esi, 0	      1572	dir.c	FUNCTION_50
0x4003c9e	      0xbf00000000	                              mov edi, 0	      1572	dir.c	FUNCTION_50
0x4003ca3	      0xb800000000	                              mov eax, 0	      1572	dir.c	FUNCTION_50
0x4003ca8	      0xe800000000	                          call 0x4003cad	      1572	dir.c	FUNCTION_50
0x4003cad	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1580	dir.c	FUNCTION_50	FOR_1
0x4003cb4	      0xe9aa000000	                           jmp 0x4003d63	      1580	dir.c	FUNCTION_50	FOR_1
0x4003cb9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1581	dir.c	FUNCTION_50	FOR_1
0x4003cbd	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1581	dir.c	FUNCTION_50	FOR_1
0x4003cc1	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1581	dir.c	FUNCTION_50	FOR_1
0x4003cc4	            0x4898	                                    cdqe	      1581	dir.c	FUNCTION_50	FOR_1
0x4003cc6	        0x48c1e003	                              shl rax, 3	      1581	dir.c	FUNCTION_50	FOR_1
0x4003cca	    0x488d0cc50000	                        lea rcx, [rax*8]	      1581	dir.c	FUNCTION_50	FOR_1
0x4003cd2	          0x4829c1	                            sub rcx, rax	      1581	dir.c	FUNCTION_50	FOR_1
0x4003cd5	          0x4889c8	                            mov rax, rcx	      1581	dir.c	FUNCTION_50	FOR_1
0x4003cd8	          0x4801d0	                            add rax, rdx	      1581	dir.c	FUNCTION_50	FOR_1
0x4003cdb	        0x488945f8	                mov qword [rbp - 8], rax	      1581	dir.c	FUNCTION_50	FOR_1
0x4003cdf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1582	dir.c	FUNCTION_50	FOR_1
0x4003ce3	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1582	dir.c	FUNCTION_50	FOR_1
0x4003ce6	          0x8945f4	              mov dword [rbp - 0xc], eax	      1582	dir.c	FUNCTION_50	FOR_1
0x4003ce9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1584	dir.c	FUNCTION_50	FOR_1	IF_2
0x4003cec	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1584	dir.c	FUNCTION_50	FOR_1	IF_2
0x4003cef	            0x7528	                           jne 0x4003d19	      1584	dir.c	FUNCTION_50	FOR_1	IF_2
0x4003cf1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1585	dir.c	FUNCTION_50	FOR_1	IF_2	CALL_1
0x4003cf4	          0x4863c8	                         movsxd rcx, eax	      1585	dir.c	FUNCTION_50	FOR_1	IF_2	CALL_1
0x4003cf7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1585	dir.c	FUNCTION_50	FOR_1	IF_2	CALL_1
0x4003cfb	          0x488b30	                    mov rsi, qword [rax]	      1585	dir.c	FUNCTION_50	FOR_1	IF_2	CALL_1
0x4003cfe	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1585	dir.c	FUNCTION_50	FOR_1	IF_2	CALL_1
0x4003d02	        0x488b45f8	                mov rax, qword [rbp - 8]	      1585	dir.c	FUNCTION_50	FOR_1	IF_2	CALL_1
0x4003d06	          0x4889c7	                            mov rdi, rax	      1585	dir.c	FUNCTION_50	FOR_1	IF_2	CALL_1
0x4003d09	      0xe8c9c8ffff	                     call sym.ps_strncmp	      1585	dir.c	FUNCTION_50	FOR_1	IF_2	CALL_1
0x4003d0e	            0x85c0	                           test eax, eax	      1584	dir.c	FUNCTION_50	FOR_1	IF_2
0x4003d10	            0x7507	                           jne 0x4003d19	      1584	dir.c	FUNCTION_50	FOR_1	IF_2
0x4003d12	      0xb801000000	                              mov eax, 1	      1586	dir.c	FUNCTION_50	FOR_1	IF_2
0x4003d17	            0xeb5e	                           jmp 0x4003d77	      1586	dir.c	FUNCTION_50	FOR_1	IF_2
0x4003d19	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1587	dir.c	FUNCTION_50	FOR_1	IF_3
0x4003d1c	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1587	dir.c	FUNCTION_50	FOR_1	IF_3
0x4003d1f	            0x7e3e	                           jle 0x4003d5f	      1587	dir.c	FUNCTION_50	FOR_1	IF_3
0x4003d21	        0x488b45f8	                mov rax, qword [rbp - 8]	      1588	dir.c	FUNCTION_50	FOR_1	IF_3
0x4003d25	          0x488b10	                    mov rdx, qword [rax]	      1588	dir.c	FUNCTION_50	FOR_1	IF_3
0x4003d28	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1588	dir.c	FUNCTION_50	FOR_1	IF_3
0x4003d2b	            0x4898	                                    cdqe	      1588	dir.c	FUNCTION_50	FOR_1	IF_3
0x4003d2d	          0x4801d0	                            add rax, rdx	      1588	dir.c	FUNCTION_50	FOR_1	IF_3
0x4003d30	           0xfb600	                   movzx eax, byte [rax]	      1588	dir.c	FUNCTION_50	FOR_1	IF_3
0x4003d33	            0x3c2f	                            cmp al, 0x2f	      1587	dir.c	FUNCTION_50	FOR_1	IF_3
0x4003d35	            0x7528	                           jne 0x4003d5f	      1587	dir.c	FUNCTION_50	FOR_1	IF_3
0x4003d37	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1589	dir.c	FUNCTION_50	FOR_1	IF_3	CALL_2
0x4003d3a	          0x4863c8	                         movsxd rcx, eax	      1589	dir.c	FUNCTION_50	FOR_1	IF_3	CALL_2
0x4003d3d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1589	dir.c	FUNCTION_50	FOR_1	IF_3	CALL_2
0x4003d41	          0x488b30	                    mov rsi, qword [rax]	      1589	dir.c	FUNCTION_50	FOR_1	IF_3	CALL_2
0x4003d44	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1589	dir.c	FUNCTION_50	FOR_1	IF_3	CALL_2
0x4003d48	        0x488b45f8	                mov rax, qword [rbp - 8]	      1589	dir.c	FUNCTION_50	FOR_1	IF_3	CALL_2
0x4003d4c	          0x4889c7	                            mov rdi, rax	      1589	dir.c	FUNCTION_50	FOR_1	IF_3	CALL_2
0x4003d4f	      0xe883c8ffff	                     call sym.ps_strncmp	      1589	dir.c	FUNCTION_50	FOR_1	IF_3	CALL_2
0x4003d54	            0x85c0	                           test eax, eax	      1588	dir.c	FUNCTION_50	FOR_1	IF_3
0x4003d56	            0x7507	                           jne 0x4003d5f	      1588	dir.c	FUNCTION_50	FOR_1	IF_3
0x4003d58	      0xb801000000	                              mov eax, 1	      1590	dir.c	FUNCTION_50	FOR_1	IF_3
0x4003d5d	            0xeb18	                           jmp 0x4003d77	      1590	dir.c	FUNCTION_50	FOR_1	IF_3
0x4003d5f	        0x8345f001	               add dword [rbp - 0x10], 1	      1580	dir.c	FUNCTION_50	FOR_1
0x4003d63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1580	dir.c	FUNCTION_50	FOR_1
0x4003d67	            0x8b00	                    mov eax, dword [rax]	      1580	dir.c	FUNCTION_50	FOR_1
0x4003d69	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1580	dir.c	FUNCTION_50	FOR_1
0x4003d6c	     0xf8f47ffffff	                            jg 0x4003cb9	      1580	dir.c	FUNCTION_50	FOR_1
0x4003d72	      0xb800000000	                              mov eax, 0	      1592	dir.c	FUNCTION_50
0x4003d77	              0xc9	                                   leave	      1593	dir.c	FUNCTION_50
0x4003d78	              0xc3	                                     ret	      1593	dir.c	FUNCTION_50
remove_dir_recurse	SWITCH,0:ELSE,5:WHILE,1:IF,13:DO,0:CALL,14:functions,0:FOR,0	189
0x4005cf6	              0x55	                                push rbp	      2415	dir.c	FUNCTION_78
0x4005cf7	          0x4889e5	                            mov rbp, rsp	      2415	dir.c	FUNCTION_78
0x4005cfa	    0x4881ec100100	                          sub rsp, 0x110	      2415	dir.c	FUNCTION_78
0x4005d01	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	      2415	dir.c	FUNCTION_78
0x4005d08	    0x89b504ffffff	             mov dword [rbp - 0xfc], esi	      2415	dir.c	FUNCTION_78
0x4005d0e	    0x488995f8feff	            mov qword [rbp - 0x108], rdx	      2415	dir.c	FUNCTION_78
0x4005d15	    0x64488b042528	                mov rax, qword fs:[0x28]	      2415	dir.c	FUNCTION_78
0x4005d1e	        0x488945f8	                mov qword [rbp - 8], rax	      2415	dir.c	FUNCTION_78
0x4005d22	            0x31c0	                            xor eax, eax	      2415	dir.c	FUNCTION_78
0x4005d24	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      2418	dir.c	FUNCTION_78
0x4005d2e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2418	dir.c	FUNCTION_78
0x4005d35	        0x488b4008	                mov rax, qword [rax + 8]	      2418	dir.c	FUNCTION_78
0x4005d39	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	      2418	dir.c	FUNCTION_78
0x4005d3f	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	      2418	dir.c	FUNCTION_78
0x4005d49	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2419	dir.c	FUNCTION_78
0x4005d4f	          0x83e001	                              and eax, 1	      2419	dir.c	FUNCTION_78
0x4005d52	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      2419	dir.c	FUNCTION_78
0x4005d58	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2420	dir.c	FUNCTION_78
0x4005d5e	          0x83e004	                              and eax, 4	      2420	dir.c	FUNCTION_78
0x4005d61	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      2420	dir.c	FUNCTION_78
0x4005d67	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2423	dir.c	FUNCTION_78	IF_1
0x4005d6d	          0x83e002	                              and eax, 2	      2423	dir.c	FUNCTION_78	IF_1
0x4005d70	            0x85c0	                           test eax, eax	      2423	dir.c	FUNCTION_78	IF_1
0x4005d72	            0x7444	                            je 0x4005db8	      2423	dir.c	FUNCTION_78	IF_1
0x4005d74	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2424	dir.c	FUNCTION_78	IF_1	CALL_1
0x4005d7b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2424	dir.c	FUNCTION_78	IF_1	CALL_1
0x4005d7f	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	      2424	dir.c	FUNCTION_78	IF_1	CALL_1
0x4005d86	      0xbe00000000	                              mov esi, 0	      2424	dir.c	FUNCTION_78	IF_1	CALL_1
0x4005d8b	          0x4889c7	                            mov rdi, rax	      2424	dir.c	FUNCTION_78	IF_1	CALL_1
0x4005d8e	      0xe800000000	                          call 0x4005d93	      2424	dir.c	FUNCTION_78	IF_1	CALL_1
0x4005d93	            0x85c0	                           test eax, eax	      2423	dir.c	FUNCTION_78	IF_1
0x4005d95	            0x7521	                           jne 0x4005db8	      2423	dir.c	FUNCTION_78	IF_1
0x4005d97	    0x4883bdf8feff	              cmp qword [rbp - 0x108], 0	      2426	dir.c	FUNCTION_78	IF_1	IF_2
0x4005d9f	            0x740d	                            je 0x4005dae	      2426	dir.c	FUNCTION_78	IF_1	IF_2
0x4005da1	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2427	dir.c	FUNCTION_78	IF_1	IF_2
0x4005da8	    0xc70001000000	                      mov dword [rax], 1	      2427	dir.c	FUNCTION_78	IF_1	IF_2
0x4005dae	      0xb800000000	                              mov eax, 0	      2428	dir.c	FUNCTION_78	IF_1
0x4005db3	      0xe970020000	                           jmp 0x4006028	      2428	dir.c	FUNCTION_78	IF_1
0x4005db8	    0x83a504ffffff	      and dword [rbp - 0xfc], 0xfffffffb	      2431	dir.c	FUNCTION_78
0x4005dbf	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2432	dir.c	FUNCTION_78	CALL_2
0x4005dc6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2432	dir.c	FUNCTION_78	CALL_2
0x4005dca	          0x4889c7	                            mov rdi, rax	      2432	dir.c	FUNCTION_78	CALL_2
0x4005dcd	      0xe800000000	                          call 0x4005dd2	      2432	dir.c	FUNCTION_78	CALL_2
0x4005dd2	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      2432	dir.c	FUNCTION_78	CALL_2
0x4005dd9	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      2433	dir.c	FUNCTION_78	IF_3
0x4005de1	            0x7560	                           jne 0x4005e43	      2433	dir.c	FUNCTION_78	IF_3
0x4005de3	      0xe800000000	                          call 0x4005de8	      2434	dir.c	FUNCTION_78	IF_3	IF_4
0x4005de8	            0x8b00	                    mov eax, dword [rax]	      2434	dir.c	FUNCTION_78	IF_3	IF_4
0x4005dea	          0x83f802	                              cmp eax, 2	      2434	dir.c	FUNCTION_78	IF_3	IF_4
0x4005ded	            0x751d	                           jne 0x4005e0c	      2434	dir.c	FUNCTION_78	IF_3	IF_4
0x4005def	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      2435	dir.c	FUNCTION_78	IF_3	IF_4
0x4005df6	            0x740a	                            je 0x4005e02	      2435	dir.c	FUNCTION_78	IF_3	IF_4
0x4005df8	      0xb8ffffffff	                     mov eax, 0xffffffff	      2435	dir.c	FUNCTION_78	IF_3	IF_4
0x4005dfd	      0xe926020000	                           jmp 0x4006028	      2435	dir.c	FUNCTION_78	IF_3	IF_4
0x4005e02	      0xb800000000	                              mov eax, 0	      2435	dir.c	FUNCTION_78	IF_3	IF_4
0x4005e07	      0xe91c020000	                           jmp 0x4006028	      2435	dir.c	FUNCTION_78	IF_3	IF_4
0x4005e0c	      0xe800000000	                          call 0x4005e11	      2436	dir.c	FUNCTION_78	IF_3	ELSE_1	IF_5
0x4005e11	            0x8b00	                    mov eax, dword [rax]	      2436	dir.c	FUNCTION_78	IF_3	ELSE_1	IF_5
0x4005e13	          0x83f80d	                            cmp eax, 0xd	      2436	dir.c	FUNCTION_78	IF_3	ELSE_1	IF_5
0x4005e16	            0x7521	                           jne 0x4005e39	      2436	dir.c	FUNCTION_78	IF_3	ELSE_1	IF_5
0x4005e18	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      2436	dir.c	FUNCTION_78	IF_3	ELSE_1	IF_5
0x4005e1f	            0x7518	                           jne 0x4005e39	      2436	dir.c	FUNCTION_78	IF_3	ELSE_1	IF_5
0x4005e21	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2441	dir.c	FUNCTION_78	IF_3	ELSE_1	IF_5
0x4005e28	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2441	dir.c	FUNCTION_78	IF_3	ELSE_1	IF_5
0x4005e2c	          0x4889c7	                            mov rdi, rax	      2441	dir.c	FUNCTION_78	IF_3	ELSE_1	IF_5
0x4005e2f	      0xe800000000	                          call 0x4005e34	      2441	dir.c	FUNCTION_78	IF_3	ELSE_1	IF_5
0x4005e34	      0xe9ef010000	                           jmp 0x4006028	      2441	dir.c	FUNCTION_78	IF_3	ELSE_1	IF_5
0x4005e39	      0xb8ffffffff	                     mov eax, 0xffffffff	      2443	dir.c	FUNCTION_78	IF_3	ELSE_2
0x4005e3e	      0xe9e5010000	                           jmp 0x4006028	      2443	dir.c	FUNCTION_78	IF_3	ELSE_2
0x4005e43	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2445	dir.c	FUNCTION_78	CALL_4
0x4005e4a	      0xbe2f000000	                           mov esi, 0x2f	      2445	dir.c	FUNCTION_78	CALL_4
0x4005e4f	          0x4889c7	                            mov rdi, rax	      2445	dir.c	FUNCTION_78	CALL_4
0x4005e52	      0xe831a5ffff	                call sym.strbuf_complete	      2445	dir.c	FUNCTION_78	CALL_4
0x4005e57	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2447	dir.c	FUNCTION_78
0x4005e5e	        0x488b4008	                mov rax, qword [rax + 8]	      2447	dir.c	FUNCTION_78
0x4005e62	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      2447	dir.c	FUNCTION_78
0x4005e68	      0xe9f4000000	                           jmp 0x4005f61	      2448	dir.c	FUNCTION_78	WHILE_1	CALL_5
0x4005e6d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2450	dir.c	FUNCTION_78	WHILE_1	IF_6	CALL_6
0x4005e74	        0x4883c013	                           add rax, 0x13	      2450	dir.c	FUNCTION_78	WHILE_1	IF_6	CALL_6
0x4005e78	          0x4889c7	                            mov rdi, rax	      2450	dir.c	FUNCTION_78	WHILE_1	IF_6	CALL_6
0x4005e7b	      0xe809a7ffff	               call sym.is_dot_or_dotdot	      2450	dir.c	FUNCTION_78	WHILE_1	IF_6	CALL_6
0x4005e80	            0x85c0	                           test eax, eax	      2450	dir.c	FUNCTION_78	WHILE_1	IF_6	CALL_6
0x4005e82	     0xf85d5000000	                           jne 0x4005f5d	      2450	dir.c	FUNCTION_78	WHILE_1	IF_6	CALL_6
0x4005e88	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      2453	dir.c	FUNCTION_78	WHILE_1	CALL_7
0x4005e8e	          0x4863d0	                         movsxd rdx, eax	      2453	dir.c	FUNCTION_78	WHILE_1	CALL_7
0x4005e91	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2453	dir.c	FUNCTION_78	WHILE_1	CALL_7
0x4005e98	          0x4889d6	                            mov rsi, rdx	      2453	dir.c	FUNCTION_78	WHILE_1	CALL_7
0x4005e9b	          0x4889c7	                            mov rdi, rax	      2453	dir.c	FUNCTION_78	WHILE_1	CALL_7
0x4005e9e	      0xe8a8a3ffff	                  call sym.strbuf_setlen	      2453	dir.c	FUNCTION_78	WHILE_1	CALL_7
0x4005ea3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2454	dir.c	FUNCTION_78	WHILE_1	CALL_8
0x4005eaa	        0x488d5013	                   lea rdx, [rax + 0x13]	      2454	dir.c	FUNCTION_78	WHILE_1	CALL_8
0x4005eae	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2454	dir.c	FUNCTION_78	WHILE_1	CALL_8
0x4005eb5	          0x4889d6	                            mov rsi, rdx	      2454	dir.c	FUNCTION_78	WHILE_1	CALL_8
0x4005eb8	          0x4889c7	                            mov rdi, rax	      2454	dir.c	FUNCTION_78	WHILE_1	CALL_8
0x4005ebb	      0xe893a4ffff	                  call sym.strbuf_addstr	      2454	dir.c	FUNCTION_78	WHILE_1	CALL_8
0x4005ec0	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2455	dir.c	FUNCTION_78	WHILE_1	IF_7
0x4005ec7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2455	dir.c	FUNCTION_78	WHILE_1	IF_7
0x4005ecb	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      2455	dir.c	FUNCTION_78	WHILE_1	IF_7
0x4005ed2	          0x4889d6	                            mov rsi, rdx	      2455	dir.c	FUNCTION_78	WHILE_1	IF_7
0x4005ed5	          0x4889c7	                            mov rdi, rax	      2455	dir.c	FUNCTION_78	WHILE_1	IF_7
0x4005ed8	      0xe800000000	                          call 0x4005edd	      2455	dir.c	FUNCTION_78	WHILE_1	IF_7
0x4005edd	            0x85c0	                           test eax, eax	      2455	dir.c	FUNCTION_78	WHILE_1	IF_7
0x4005edf	            0x740e	                            je 0x4005eef	      2455	dir.c	FUNCTION_78	WHILE_1	IF_7
0x4005ee1	      0xe800000000	                          call 0x4005ee6	      2456	dir.c	FUNCTION_78	WHILE_1	IF_7	IF_8
0x4005ee6	            0x8b00	                    mov eax, dword [rax]	      2456	dir.c	FUNCTION_78	WHILE_1	IF_7	IF_8
0x4005ee8	          0x83f802	                              cmp eax, 2	      2456	dir.c	FUNCTION_78	WHILE_1	IF_7	IF_8
0x4005eeb	            0x7564	                           jne 0x4005f51	      2456	dir.c	FUNCTION_78	WHILE_1	IF_7	IF_8
0x4005eed	            0xeb72	                           jmp 0x4005f61	      2461	dir.c	FUNCTION_78	WHILE_1	IF_7	IF_8
0x4005eef	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2463	dir.c	FUNCTION_78	WHILE_1	ELSE_3	IF_9	CALL_9
0x4005ef5	      0x2500f00000	                         and eax, 0xf000	      2463	dir.c	FUNCTION_78	WHILE_1	ELSE_3	IF_9	CALL_9
0x4005efa	      0x3d00400000	                         cmp eax, 0x4000	      2463	dir.c	FUNCTION_78	WHILE_1	ELSE_3	IF_9	CALL_9
0x4005eff	            0x7524	                           jne 0x4005f25	      2463	dir.c	FUNCTION_78	WHILE_1	ELSE_3	IF_9	CALL_9
0x4005f01	    0x488d9518ffff	                   lea rdx, [rbp - 0xe8]	      2464	dir.c	FUNCTION_78	WHILE_1	ELSE_3	IF_9	IF_10	CALL_10
0x4005f08	    0x8b8d04ffffff	             mov ecx, dword [rbp - 0xfc]	      2464	dir.c	FUNCTION_78	WHILE_1	ELSE_3	IF_9	IF_10	CALL_10
0x4005f0e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2464	dir.c	FUNCTION_78	WHILE_1	ELSE_3	IF_9	IF_10	CALL_10
0x4005f15	            0x89ce	                            mov esi, ecx	      2464	dir.c	FUNCTION_78	WHILE_1	ELSE_3	IF_9	IF_10	CALL_10
0x4005f17	          0x4889c7	                            mov rdi, rax	      2464	dir.c	FUNCTION_78	WHILE_1	ELSE_3	IF_9	IF_10	CALL_10
0x4005f1a	      0xe8d7fdffff	             call sym.remove_dir_recurse	      2464	dir.c	FUNCTION_78	WHILE_1	ELSE_3	IF_9	IF_10	CALL_10
0x4005f1f	            0x85c0	                           test eax, eax	      2464	dir.c	FUNCTION_78	WHILE_1	ELSE_3	IF_9	IF_10	CALL_10
0x4005f21	            0x752e	                           jne 0x4005f51	      2464	dir.c	FUNCTION_78	WHILE_1	ELSE_3	IF_9	IF_10	CALL_10
0x4005f23	            0xeb3c	                           jmp 0x4005f61	      2465	dir.c	FUNCTION_78	WHILE_1	ELSE_3	IF_9	IF_10
0x4005f25	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      2466	dir.c	FUNCTION_78	WHILE_1	ELSE_4	IF_11
0x4005f2c	            0x7523	                           jne 0x4005f51	      2466	dir.c	FUNCTION_78	WHILE_1	ELSE_4	IF_11
0x4005f2e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2467	dir.c	FUNCTION_78	WHILE_1	ELSE_4	IF_11	CALL_11
0x4005f35	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2467	dir.c	FUNCTION_78	WHILE_1	ELSE_4	IF_11	CALL_11
0x4005f39	          0x4889c7	                            mov rdi, rax	      2467	dir.c	FUNCTION_78	WHILE_1	ELSE_4	IF_11	CALL_11
0x4005f3c	      0xe800000000	                          call 0x4005f41	      2467	dir.c	FUNCTION_78	WHILE_1	ELSE_4	IF_11	CALL_11
0x4005f41	            0x85c0	                           test eax, eax	      2466	dir.c	FUNCTION_78	WHILE_1	ELSE_4	IF_11
0x4005f43	            0x741b	                            je 0x4005f60	      2466	dir.c	FUNCTION_78	WHILE_1	ELSE_4	IF_11
0x4005f45	      0xe800000000	                          call 0x4005f4a	      2467	dir.c	FUNCTION_78	WHILE_1	ELSE_4	IF_11	CALL_11
0x4005f4a	            0x8b00	                    mov eax, dword [rax]	      2467	dir.c	FUNCTION_78	WHILE_1	ELSE_4	IF_11	CALL_11
0x4005f4c	          0x83f802	                              cmp eax, 2	      2467	dir.c	FUNCTION_78	WHILE_1	ELSE_4	IF_11	CALL_11
0x4005f4f	            0x740f	                            je 0x4005f60	      2467	dir.c	FUNCTION_78	WHILE_1	ELSE_4	IF_11	CALL_11
0x4005f51	    0xc7851cffffff	     mov dword [rbp - 0xe4], 0xffffffff 	      2472	dir.c	FUNCTION_78	WHILE_1
0x4005f5b	            0xeb28	                           jmp 0x4005f85	      2472	dir.c	FUNCTION_78	WHILE_1
0x4005f5d	              0x90	                                     nop	      2451	dir.c	FUNCTION_78	WHILE_1	IF_6
0x4005f5e	            0xeb01	                           jmp 0x4005f61	      2451	dir.c	FUNCTION_78	WHILE_1	IF_6
0x4005f60	              0x90	                                     nop	      2468	dir.c	FUNCTION_78	WHILE_1	ELSE_4	IF_11
0x4005f61	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2448	dir.c	FUNCTION_78	WHILE_1	CALL_5
0x4005f68	          0x4889c7	                            mov rdi, rax	      2448	dir.c	FUNCTION_78	WHILE_1	CALL_5
0x4005f6b	      0xe800000000	                          call 0x4005f70	      2448	dir.c	FUNCTION_78	WHILE_1	CALL_5
0x4005f70	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      2448	dir.c	FUNCTION_78	WHILE_1	CALL_5
0x4005f77	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      2448	dir.c	FUNCTION_78	WHILE_1	CALL_5
0x4005f7f	     0xf85e8feffff	                           jne 0x4005e6d	      2448	dir.c	FUNCTION_78	WHILE_1	CALL_5
0x4005f85	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2475	dir.c	FUNCTION_78	CALL_12
0x4005f8c	          0x4889c7	                            mov rdi, rax	      2475	dir.c	FUNCTION_78	CALL_12
0x4005f8f	      0xe800000000	                          call 0x4005f94	      2475	dir.c	FUNCTION_78	CALL_12
0x4005f94	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      2477	dir.c	FUNCTION_78	CALL_13
0x4005f9a	          0x4863d0	                         movsxd rdx, eax	      2477	dir.c	FUNCTION_78	CALL_13
0x4005f9d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2477	dir.c	FUNCTION_78	CALL_13
0x4005fa4	          0x4889d6	                            mov rsi, rdx	      2477	dir.c	FUNCTION_78	CALL_13
0x4005fa7	          0x4889c7	                            mov rdi, rax	      2477	dir.c	FUNCTION_78	CALL_13
0x4005faa	      0xe89ca2ffff	                  call sym.strbuf_setlen	      2477	dir.c	FUNCTION_78	CALL_13
0x4005faf	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      2478	dir.c	FUNCTION_78	IF_12
0x4005fb6	            0x754a	                           jne 0x4006002	      2478	dir.c	FUNCTION_78	IF_12
0x4005fb8	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      2478	dir.c	FUNCTION_78	IF_12
0x4005fbf	            0x7541	                           jne 0x4006002	      2478	dir.c	FUNCTION_78	IF_12
0x4005fc1	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	      2478	dir.c	FUNCTION_78	IF_12
0x4005fc7	            0x85c0	                           test eax, eax	      2478	dir.c	FUNCTION_78	IF_12
0x4005fc9	            0x7537	                           jne 0x4006002	      2478	dir.c	FUNCTION_78	IF_12
0x4005fcb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2479	dir.c	FUNCTION_78	CALL_14
0x4005fd2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2479	dir.c	FUNCTION_78	CALL_14
0x4005fd6	          0x4889c7	                            mov rdi, rax	      2479	dir.c	FUNCTION_78	CALL_14
0x4005fd9	      0xe800000000	                          call 0x4005fde	      2479	dir.c	FUNCTION_78	CALL_14
0x4005fde	            0x85c0	                           test eax, eax	      2479	dir.c	FUNCTION_78	CALL_14
0x4005fe0	            0x740c	                            je 0x4005fee	      2479	dir.c	FUNCTION_78	CALL_14
0x4005fe2	      0xe800000000	                          call 0x4005fe7	      2479	dir.c	FUNCTION_78	CALL_14
0x4005fe7	            0x8b00	                    mov eax, dword [rax]	      2479	dir.c	FUNCTION_78	CALL_14
0x4005fe9	          0x83f802	                              cmp eax, 2	      2479	dir.c	FUNCTION_78	CALL_14
0x4005fec	            0x7507	                           jne 0x4005ff5	      2479	dir.c	FUNCTION_78	CALL_14
0x4005fee	      0xb800000000	                              mov eax, 0	      2479	dir.c	FUNCTION_78	CALL_14
0x4005ff3	            0xeb05	                           jmp 0x4005ffa	      2479	dir.c	FUNCTION_78	CALL_14
0x4005ff5	      0xb8ffffffff	                     mov eax, 0xffffffff	      2479	dir.c	FUNCTION_78	CALL_14
0x4005ffa	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	      2479	dir.c	FUNCTION_78	CALL_14
0x4006000	            0xeb20	                           jmp 0x4006022	      2479	dir.c	FUNCTION_78	CALL_14
0x4006002	    0x4883bdf8feff	              cmp qword [rbp - 0x108], 0	      2480	dir.c	FUNCTION_78	ELSE_5	IF_13
0x400600a	            0x7416	                            je 0x4006022	      2480	dir.c	FUNCTION_78	ELSE_5	IF_13
0x400600c	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      2485	dir.c	FUNCTION_78	ELSE_5	IF_13
0x4006013	           0xf94c0	                                 sete al	      2485	dir.c	FUNCTION_78	ELSE_5	IF_13
0x4006016	           0xfb6d0	                           movzx edx, al	      2485	dir.c	FUNCTION_78	ELSE_5	IF_13
0x4006019	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2485	dir.c	FUNCTION_78	ELSE_5	IF_13
0x4006020	            0x8910	                    mov dword [rax], edx	      2485	dir.c	FUNCTION_78	ELSE_5	IF_13
0x4006022	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      2486	dir.c	FUNCTION_78
0x4006028	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2487	dir.c	FUNCTION_78
0x400602c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2487	dir.c	FUNCTION_78
0x4006035	            0x7405	                            je 0x400603c	      2487	dir.c	FUNCTION_78
0x4006037	      0xe800000000	                          call 0x400603c	      2487	dir.c	FUNCTION_78
0x400603c	              0xc9	                                   leave	      2487	dir.c	FUNCTION_78
0x400603d	              0xc3	                                     ret	      2487	dir.c	FUNCTION_78
ident_in_untracked	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,2:functions,0:FOR,0	16
0x400514d	              0x55	                                push rbp	      2116	dir.c	FUNCTION_66
0x400514e	          0x4889e5	                            mov rbp, rsp	      2116	dir.c	FUNCTION_66
0x4005151	        0x4883ec10	                           sub rsp, 0x10	      2116	dir.c	FUNCTION_66
0x4005155	        0x48897df8	                mov qword [rbp - 8], rdi	      2116	dir.c	FUNCTION_66
0x4005159	      0xe853ffffff	               call sym.get_ident_string	      2123	dir.c	FUNCTION_66	CALL_2
0x400515e	          0x4889c2	                            mov rdx, rax	      2123	dir.c	FUNCTION_66	CALL_2
0x4005161	        0x488b45f8	                mov rax, qword [rbp - 8]	      2123	dir.c	FUNCTION_66	CALL_2
0x4005165	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      2123	dir.c	FUNCTION_66	CALL_2
0x400516c	          0x4889d6	                            mov rsi, rdx	      2123	dir.c	FUNCTION_66	CALL_2
0x400516f	          0x4889c7	                            mov rdi, rax	      2123	dir.c	FUNCTION_66	CALL_2
0x4005172	      0xe800000000	                          call 0x4005177	      2123	dir.c	FUNCTION_66	CALL_2
0x4005177	            0x85c0	                           test eax, eax	      2123	dir.c	FUNCTION_66	CALL_2
0x4005179	           0xf94c0	                                 sete al	      2123	dir.c	FUNCTION_66	CALL_2
0x400517c	           0xfb6c0	                           movzx eax, al	      2123	dir.c	FUNCTION_66	CALL_2
0x400517f	              0xc9	                                   leave	      2124	dir.c	FUNCTION_66
0x4005180	              0xc3	                                     ret	      2124	dir.c	FUNCTION_66
add_excludes	SWITCH,0:ELSE,4:WHILE,0:IF,10:DO,0:CALL,21:functions,0:FOR,0	213
0x4002004	              0x55	                                push rbp	       807	dir.c	FUNCTION_28
0x4002005	          0x4889e5	                            mov rbp, rsp	       807	dir.c	FUNCTION_28
0x4002008	    0x4881ecf00000	                           sub rsp, 0xf0	       807	dir.c	FUNCTION_28
0x400200f	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	       807	dir.c	FUNCTION_28
0x4002016	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	       807	dir.c	FUNCTION_28
0x400201d	    0x89952cffffff	             mov dword [rbp - 0xd4], edx	       807	dir.c	FUNCTION_28
0x4002023	    0x48898d20ffff	             mov qword [rbp - 0xe0], rcx	       807	dir.c	FUNCTION_28
0x400202a	    0x4c898518ffff	              mov qword [rbp - 0xe8], r8	       807	dir.c	FUNCTION_28
0x4002031	    0x4c898d10ffff	              mov qword [rbp - 0xf0], r9	       807	dir.c	FUNCTION_28
0x4002038	    0x64488b042528	                mov rax, qword fs:[0x28]	       807	dir.c	FUNCTION_28
0x4002041	        0x488945f8	                mov qword [rbp - 8], rax	       807	dir.c	FUNCTION_28
0x4002045	            0x31c0	                            xor eax, eax	       807	dir.c	FUNCTION_28
0x4002047	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       811	dir.c	FUNCTION_28
0x4002052	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       814	dir.c	FUNCTION_28	CALL_1
0x4002059	      0xbe00000000	                              mov esi, 0	       814	dir.c	FUNCTION_28	CALL_1
0x400205e	          0x4889c7	                            mov rdi, rax	       814	dir.c	FUNCTION_28	CALL_1
0x4002061	      0xb800000000	                              mov eax, 0	       814	dir.c	FUNCTION_28	CALL_1
0x4002066	      0xe800000000	                          call 0x400206b	       814	dir.c	FUNCTION_28	CALL_1
0x400206b	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	       814	dir.c	FUNCTION_28	CALL_1
0x4002071	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	       815	dir.c	FUNCTION_28	IF_1
0x4002078	            0x781f	                            js 0x4002099	       815	dir.c	FUNCTION_28	IF_1
0x400207a	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       815	dir.c	FUNCTION_28	IF_1
0x4002081	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       815	dir.c	FUNCTION_28	IF_1
0x4002087	          0x4889d6	                            mov rsi, rdx	       815	dir.c	FUNCTION_28	IF_1
0x400208a	            0x89c7	                            mov edi, eax	       815	dir.c	FUNCTION_28	IF_1
0x400208c	      0xe800000000	                          call 0x4002091	       815	dir.c	FUNCTION_28	IF_1
0x4002091	            0x85c0	                           test eax, eax	       815	dir.c	FUNCTION_28	IF_1
0x4002093	     0xf8987000000	                           jns 0x4002120	       815	dir.c	FUNCTION_28	IF_1
0x4002099	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	       816	dir.c	FUNCTION_28	IF_1	IF_2
0x40020a0	            0x7911	                           jns 0x40020b3	       816	dir.c	FUNCTION_28	IF_1	IF_2
0x40020a2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       817	dir.c	FUNCTION_28	IF_1	CALL_2
0x40020a9	          0x4889c7	                            mov rdi, rax	       817	dir.c	FUNCTION_28	IF_1	CALL_2
0x40020ac	      0xe800000000	                          call 0x40020b1	       817	dir.c	FUNCTION_28	IF_1	CALL_2
0x40020b1	            0xeb0d	                           jmp 0x40020c0	       817	dir.c	FUNCTION_28	IF_1	CALL_2
0x40020b3	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       819	dir.c	FUNCTION_28	IF_1	CALL_3
0x40020b9	            0x89c7	                            mov edi, eax	       819	dir.c	FUNCTION_28	IF_1	CALL_3
0x40020bb	      0xe800000000	                          call 0x40020c0	       819	dir.c	FUNCTION_28	IF_1	CALL_3
0x40020c0	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	       820	dir.c	FUNCTION_28	IF_1	IF_3
0x40020c8	            0x750a	                           jne 0x40020d4	       820	dir.c	FUNCTION_28	IF_1	IF_3
0x40020ca	      0xb8ffffffff	                     mov eax, 0xffffffff	       821	dir.c	FUNCTION_28	IF_1	IF_3
0x40020cf	      0xe91c030000	                           jmp 0x40023f0	       821	dir.c	FUNCTION_28	IF_1	IF_3
0x40020d4	    0x488bbd10ffff	             mov rdi, qword [rbp - 0xf0]	       822	dir.c	FUNCTION_28	IF_1	CALL_4
0x40020db	    0x488d8d58ffff	                   lea rcx, [rbp - 0xa8]	       822	dir.c	FUNCTION_28	IF_1	CALL_4
0x40020e2	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       822	dir.c	FUNCTION_28	IF_1	CALL_4
0x40020e9	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       822	dir.c	FUNCTION_28	IF_1	CALL_4
0x40020f0	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       822	dir.c	FUNCTION_28	IF_1	CALL_4
0x40020f7	          0x4989f8	                             mov r8, rdi	       822	dir.c	FUNCTION_28	IF_1	CALL_4
0x40020fa	          0x4889c7	                            mov rdi, rax	       822	dir.c	FUNCTION_28	IF_1	CALL_4
0x40020fd	      0xe8aef9ffff	call sym.read_skip_worktree_file_from_index	       822	dir.c	FUNCTION_28	IF_1	CALL_4
0x4002102	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       822	dir.c	FUNCTION_28	IF_1	CALL_4
0x4002108	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 1	       825	dir.c	FUNCTION_28	IF_1	IF_4
0x400210f	     0xf84a9020000	                            je 0x40023be	       825	dir.c	FUNCTION_28	IF_1	IF_4
0x4002115	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       826	dir.c	FUNCTION_28	IF_1	IF_4
0x400211b	      0xe9d0020000	                           jmp 0x40023f0	       826	dir.c	FUNCTION_28	IF_1	IF_4
0x4002120	        0x488b4590	             mov rax, qword [rbp - 0x70]	       828	dir.c	FUNCTION_28	ELSE_2	CALL_5
0x4002124	          0x4889c7	                            mov rdi, rax	       828	dir.c	FUNCTION_28	ELSE_2	CALL_5
0x4002127	      0xe827e0ffff	                        call sym.xsize_t	       828	dir.c	FUNCTION_28	ELSE_2	CALL_5
0x400212c	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       828	dir.c	FUNCTION_28	ELSE_2	CALL_5
0x4002133	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       829	dir.c	FUNCTION_28	ELSE_2	IF_5
0x400213a	          0x4885c0	                           test rax, rax	       829	dir.c	FUNCTION_28	ELSE_2	IF_5
0x400213d	            0x7560	                           jne 0x400219f	       829	dir.c	FUNCTION_28	ELSE_2	IF_5
0x400213f	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	       830	dir.c	FUNCTION_28	ELSE_2	IF_5	IF_6
0x4002147	            0x743f	                            je 0x4002188	       830	dir.c	FUNCTION_28	ELSE_2	IF_5	IF_6
0x4002149	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       831	dir.c	FUNCTION_28	ELSE_2	IF_5	IF_6	CALL_6
0x4002150	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       831	dir.c	FUNCTION_28	ELSE_2	IF_5	IF_6	CALL_6
0x4002157	          0x4889d6	                            mov rsi, rdx	       831	dir.c	FUNCTION_28	ELSE_2	IF_5	IF_6	CALL_6
0x400215a	          0x4889c7	                            mov rdi, rax	       831	dir.c	FUNCTION_28	ELSE_2	IF_5	IF_6	CALL_6
0x400215d	      0xe800000000	                          call 0x4002162	       831	dir.c	FUNCTION_28	ELSE_2	IF_5	IF_6	CALL_6
0x4002162	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       832	dir.c	FUNCTION_28	ELSE_2	IF_5	IF_6	CALL_7
0x4002169	        0x4883c024	                           add rax, 0x24	       832	dir.c	FUNCTION_28	ELSE_2	IF_5	IF_6	CALL_7
0x400216d	      0xbe00000000	                              mov esi, 0	       832	dir.c	FUNCTION_28	ELSE_2	IF_5	IF_6	CALL_7
0x4002172	          0x4889c7	                            mov rdi, rax	       832	dir.c	FUNCTION_28	ELSE_2	IF_5	IF_6	CALL_7
0x4002175	      0xe895e3ffff	                         call sym.oidcpy	       832	dir.c	FUNCTION_28	ELSE_2	IF_5	IF_6	CALL_7
0x400217a	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       833	dir.c	FUNCTION_28	ELSE_2	IF_5	IF_6
0x4002181	    0xc74038010000	               mov dword [rax + 0x38], 1	       833	dir.c	FUNCTION_28	ELSE_2	IF_5	IF_6
0x4002188	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       835	dir.c	FUNCTION_28	ELSE_2	IF_5	CALL_8
0x400218e	            0x89c7	                            mov edi, eax	       835	dir.c	FUNCTION_28	ELSE_2	IF_5	CALL_8
0x4002190	      0xe800000000	                          call 0x4002195	       835	dir.c	FUNCTION_28	ELSE_2	IF_5	CALL_8
0x4002195	      0xb800000000	                              mov eax, 0	       836	dir.c	FUNCTION_28	ELSE_2	IF_5
0x400219a	      0xe951020000	                           jmp 0x40023f0	       836	dir.c	FUNCTION_28	ELSE_2	IF_5
0x400219f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       838	dir.c	FUNCTION_28	ELSE_2	CALL_9
0x40021a6	          0x4889c7	                            mov rdi, rax	       838	dir.c	FUNCTION_28	ELSE_2	CALL_9
0x40021a9	      0xe800000000	                          call 0x40021ae	       838	dir.c	FUNCTION_28	ELSE_2	CALL_9
0x40021ae	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       838	dir.c	FUNCTION_28	ELSE_2	CALL_9
0x40021b5	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       839	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x40021bc	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	       839	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x40021c3	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       839	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x40021c9	          0x4889ce	                            mov rsi, rcx	       839	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x40021cc	            0x89c7	                            mov edi, eax	       839	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x40021ce	      0xe800000000	                          call 0x40021d3	       839	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x40021d3	          0x4889c2	                            mov rdx, rax	       839	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x40021d6	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       839	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x40021dd	          0x4839c2	                            cmp rdx, rax	       839	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x40021e0	            0x7426	                            je 0x4002208	       839	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x40021e2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       840	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x40021e9	          0x4889c7	                            mov rdi, rax	       840	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x40021ec	      0xe800000000	                          call 0x40021f1	       840	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x40021f1	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       841	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_12
0x40021f7	            0x89c7	                            mov edi, eax	       841	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_12
0x40021f9	      0xe800000000	                          call 0x40021fe	       841	dir.c	FUNCTION_28	ELSE_2	IF_7	CALL_12
0x40021fe	      0xb8ffffffff	                     mov eax, 0xffffffff	       842	dir.c	FUNCTION_28	ELSE_2	IF_7
0x4002203	      0xe9e8010000	                           jmp 0x40023f0	       842	dir.c	FUNCTION_28	ELSE_2	IF_7
0x4002208	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	       844	dir.c	FUNCTION_28	ELSE_2
0x400220f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       844	dir.c	FUNCTION_28	ELSE_2
0x4002216	        0x488d5001	                      lea rdx, [rax + 1]	       844	dir.c	FUNCTION_28	ELSE_2
0x400221a	    0x48899550ffff	             mov qword [rbp - 0xb0], rdx	       844	dir.c	FUNCTION_28	ELSE_2
0x4002221	          0x4801c8	                            add rax, rcx	       844	dir.c	FUNCTION_28	ELSE_2
0x4002224	          0xc6000a	                     mov byte [rax], 0xa	       844	dir.c	FUNCTION_28	ELSE_2
0x4002227	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       845	dir.c	FUNCTION_28	ELSE_2	CALL_13
0x400222d	            0x89c7	                            mov edi, eax	       845	dir.c	FUNCTION_28	ELSE_2	CALL_13
0x400222f	      0xe800000000	                          call 0x4002234	       845	dir.c	FUNCTION_28	ELSE_2	CALL_13
0x4002234	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	       846	dir.c	FUNCTION_28	ELSE_2	IF_8
0x400223c	     0xf847c010000	                            je 0x40023be	       846	dir.c	FUNCTION_28	ELSE_2	IF_8
0x4002242	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       848	dir.c	FUNCTION_28	ELSE_2	IF_8	IF_9
0x4002249	          0x8b4038	            mov eax, dword [rax + 0x38] 	       848	dir.c	FUNCTION_28	ELSE_2	IF_8	IF_9
0x400224c	            0x85c0	                           test eax, eax	       848	dir.c	FUNCTION_28	ELSE_2	IF_8	IF_9
0x400224e	            0x7428	                            je 0x4002278	       848	dir.c	FUNCTION_28	ELSE_2	IF_8	IF_9
0x4002250	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	       849	dir.c	FUNCTION_28	ELSE_2	IF_8	IF_9	CALL_14
0x4002257	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       849	dir.c	FUNCTION_28	ELSE_2	IF_8	IF_9	CALL_14
0x400225e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       849	dir.c	FUNCTION_28	ELSE_2	IF_8	IF_9	CALL_14
0x4002265	          0x4889ce	                            mov rsi, rcx	       849	dir.c	FUNCTION_28	ELSE_2	IF_8	IF_9	CALL_14
0x4002268	          0x4889c7	                            mov rdi, rax	       849	dir.c	FUNCTION_28	ELSE_2	IF_8	IF_9	CALL_14
0x400226b	      0xe800000000	                          call 0x4002270	       849	dir.c	FUNCTION_28	ELSE_2	IF_8	IF_9	CALL_14
0x4002270	            0x85c0	                           test eax, eax	       848	dir.c	FUNCTION_28	ELSE_2	IF_8	IF_9
0x4002272	     0xf841f010000	                            je 0x4002397	       848	dir.c	FUNCTION_28	ELSE_2	IF_8	IF_9
0x4002278	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	       851	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x4002280	     0xf84e8000000	                            je 0x400236e	       851	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x4002286	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       852	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_16
0x400228d	          0x4889c7	                            mov rdi, rax	       852	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_16
0x4002290	      0xe800000000	                          call 0x4002295	       852	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_16
0x4002295	            0x89c2	                            mov edx, eax	       852	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_16
0x4002297	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	       851	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x400229e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       851	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022a5	          0x4889ce	                            mov rsi, rcx	       851	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022a8	          0x4889c7	                            mov rdi, rax	       851	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022ab	      0xe800000000	                          call 0x40022b0	       851	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022b0	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       851	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022b6	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	       851	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022bd	     0xf88ab000000	                            js 0x400236e	       851	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022c3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       853	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022ca	          0x488b00	                    mov rax, qword [rax]	       853	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022cd	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       853	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022d3	          0x4863d2	                         movsxd rdx, edx	       853	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022d6	        0x48c1e203	                              shl rdx, 3	       853	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022da	          0x4801d0	                            add rax, rdx	       853	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022dd	          0x488b00	                    mov rax, qword [rax]	       853	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022e0	          0x8b4038	            mov eax, dword [rax + 0x38] 	       853	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022e3	      0x2500300000	                         and eax, 0x3000	       853	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022e8	          0xc1e80c	                            shr eax, 0xc	       853	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022eb	            0x85c0	                           test eax, eax	       852	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_16
0x40022ed	            0x757f	                           jne 0x400236e	       852	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_16
0x40022ef	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       854	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022f6	          0x488b00	                    mov rax, qword [rax]	       854	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022f9	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       854	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x40022ff	          0x4863d2	                         movsxd rdx, edx	       854	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x4002302	        0x48c1e203	                              shl rdx, 3	       854	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x4002306	          0x4801d0	                            add rax, rdx	       854	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x4002309	          0x488b00	                    mov rax, qword [rax]	       854	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x400230c	          0x8b4038	            mov eax, dword [rax + 0x38] 	       854	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x400230f	      0x2500000400	                        and eax, 0x40000	       854	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x4002314	            0x85c0	                           test eax, eax	       853	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x4002316	            0x7456	                            je 0x400236e	       853	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x4002318	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       855	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_17
0x400231f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       855	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_17
0x4002326	          0x4889d6	                            mov rsi, rdx	       855	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_17
0x4002329	          0x4889c7	                            mov rdi, rax	       855	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_17
0x400232c	      0xe8d5e0ffff	           call sym.would_convert_to_git	       855	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_17
0x4002331	            0x85c0	                           test eax, eax	       854	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x4002333	            0x7539	                           jne 0x400236e	       854	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x4002335	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       857	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x400233c	          0x488b00	                    mov rax, qword [rax]	       857	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x400233f	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	       857	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x4002345	          0x4863d2	                         movsxd rdx, edx	       857	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x4002348	        0x48c1e203	                              shl rdx, 3	       857	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x400234c	          0x4801d0	                            add rax, rdx	       857	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x400234f	          0x488b00	                    mov rax, qword [rax]	       857	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x4002352	        0x488d5044	                   lea rdx, [rax + 0x44]	       857	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10
0x4002356	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       856	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_18
0x400235d	        0x4883c024	                           add rax, 0x24	       856	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_18
0x4002361	          0x4889d6	                            mov rsi, rdx	       856	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_18
0x4002364	          0x4889c7	                            mov rdi, rax	       856	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_18
0x4002367	      0xe8a3e1ffff	                         call sym.oidcpy	       856	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_18
0x400236c	            0xeb29	                           jmp 0x4002397	       856	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_3	IF_10	CALL_18
0x400236e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       859	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_4	CALL_19
0x4002375	        0x488d5024	                   lea rdx, [rax + 0x24]	       859	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_4	CALL_19
0x4002379	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	       859	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_4	CALL_19
0x4002380	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       859	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_4	CALL_19
0x4002387	          0x4889d1	                            mov rcx, rdx	       859	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_4	CALL_19
0x400238a	      0xba00000000	                              mov edx, 0	       859	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_4	CALL_19
0x400238f	          0x4889c7	                            mov rdi, rax	       859	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_4	CALL_19
0x4002392	      0xe800000000	                          call 0x4002397	       859	dir.c	FUNCTION_28	ELSE_2	IF_8	ELSE_4	CALL_19
0x4002397	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       861	dir.c	FUNCTION_28	ELSE_2	IF_8	CALL_20
0x400239e	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       861	dir.c	FUNCTION_28	ELSE_2	IF_8	CALL_20
0x40023a5	          0x4889d6	                            mov rsi, rdx	       861	dir.c	FUNCTION_28	ELSE_2	IF_8	CALL_20
0x40023a8	          0x4889c7	                            mov rdi, rax	       861	dir.c	FUNCTION_28	ELSE_2	IF_8	CALL_20
0x40023ab	      0xe800000000	                          call 0x40023b0	       861	dir.c	FUNCTION_28	ELSE_2	IF_8	CALL_20
0x40023b0	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       862	dir.c	FUNCTION_28	ELSE_2	IF_8
0x40023b7	    0xc74038010000	               mov dword [rax + 0x38], 1	       862	dir.c	FUNCTION_28	ELSE_2	IF_8
0x40023be	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	       866	dir.c	FUNCTION_28	CALL_21
0x40023c5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       866	dir.c	FUNCTION_28	CALL_21
0x40023cc	    0x488bbd20ffff	             mov rdi, qword [rbp - 0xe0]	       866	dir.c	FUNCTION_28	CALL_21
0x40023d3	    0x8b8d2cffffff	             mov ecx, dword [rbp - 0xd4]	       866	dir.c	FUNCTION_28	CALL_21
0x40023d9	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	       866	dir.c	FUNCTION_28	CALL_21
0x40023e0	          0x4989f8	                             mov r8, rdi	       866	dir.c	FUNCTION_28	CALL_21
0x40023e3	          0x4889c7	                            mov rdi, rax	       866	dir.c	FUNCTION_28	CALL_21
0x40023e6	      0xe81b000000	       call sym.add_excludes_from_buffer	       866	dir.c	FUNCTION_28	CALL_21
0x40023eb	      0xb800000000	                              mov eax, 0	       867	dir.c	FUNCTION_28
0x40023f0	        0x488b4df8	                mov rcx, qword [rbp - 8]	       868	dir.c	FUNCTION_28
0x40023f4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       868	dir.c	FUNCTION_28
0x40023fd	            0x7405	                            je 0x4002404	       868	dir.c	FUNCTION_28
0x40023ff	      0xe800000000	                          call 0x4002404	       868	dir.c	FUNCTION_28
0x4002404	              0xc9	                                   leave	       868	dir.c	FUNCTION_28
0x4002405	              0xc3	                                     ret	       868	dir.c	FUNCTION_28
validate_untracked_cache	SWITCH,0:ELSE,0:WHILE,0:IF,12:DO,0:CALL,11:functions,0:FOR,0	202
0x4005309	              0x55	                                push rbp	      2174	dir.c	FUNCTION_71
0x400530a	          0x4889e5	                            mov rbp, rsp	      2174	dir.c	FUNCTION_71
0x400530d	              0x53	                                push rbx	      2174	dir.c	FUNCTION_71
0x400530e	        0x4883ec38	                           sub rsp, 0x38	      2174	dir.c	FUNCTION_71
0x4005312	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2174	dir.c	FUNCTION_71
0x4005316	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2174	dir.c	FUNCTION_71
0x4005319	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2174	dir.c	FUNCTION_71
0x400531d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2178	dir.c	FUNCTION_71	IF_1
0x4005321	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2178	dir.c	FUNCTION_71	IF_1
0x4005328	          0x4885c0	                           test rax, rax	      2178	dir.c	FUNCTION_71	IF_1
0x400532b	            0x750a	                           jne 0x4005337	      2178	dir.c	FUNCTION_71	IF_1
0x400532d	      0xb800000000	                              mov eax, 0	      2179	dir.c	FUNCTION_71	IF_1
0x4005332	      0xe91e030000	                           jmp 0x4005655	      2179	dir.c	FUNCTION_71	IF_1
0x4005337	    0x8b0500000000	            mov eax, dword [0x0400533d] 	      2180	dir.c	FUNCTION_71	IF_2
0x400533d	            0x85c0	                           test eax, eax	      2180	dir.c	FUNCTION_71	IF_2
0x400533f	            0x7915	                           jns 0x4005356	      2180	dir.c	FUNCTION_71	IF_2
0x4005341	      0xbe00000000	                              mov esi, 0	      2181	dir.c	FUNCTION_71	CALL_1
0x4005346	      0xbf00000000	                              mov edi, 0	      2181	dir.c	FUNCTION_71	CALL_1
0x400534b	      0xe800000000	                          call 0x4005350	      2181	dir.c	FUNCTION_71	CALL_1
0x4005350	    0x890500000000	            mov dword [0x04005356], eax 	      2181	dir.c	FUNCTION_71	CALL_1
0x4005356	    0x8b0500000000	            mov eax, dword [0x0400535c] 	      2182	dir.c	FUNCTION_71	IF_3
0x400535c	            0x85c0	                           test eax, eax	      2182	dir.c	FUNCTION_71	IF_3
0x400535e	            0x740a	                            je 0x400536a	      2182	dir.c	FUNCTION_71	IF_3
0x4005360	      0xb800000000	                              mov eax, 0	      2183	dir.c	FUNCTION_71	IF_3
0x4005365	      0xe9eb020000	                           jmp 0x4005655	      2183	dir.c	FUNCTION_71	IF_3
0x400536a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2192	dir.c	FUNCTION_71	IF_4
0x400536e	    0x8b8008010000	           mov eax, dword [rax + 0x108] 	      2192	dir.c	FUNCTION_71	IF_4
0x4005374	            0x85c0	                           test eax, eax	      2192	dir.c	FUNCTION_71	IF_4
0x4005376	            0x740a	                            je 0x4005382	      2192	dir.c	FUNCTION_71	IF_4
0x4005378	      0xb800000000	                              mov eax, 0	      2193	dir.c	FUNCTION_71	IF_4
0x400537d	      0xe9d3020000	                           jmp 0x4005655	      2193	dir.c	FUNCTION_71	IF_4
0x4005382	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      2201	dir.c	FUNCTION_71	IF_5
0x4005386	            0x7511	                           jne 0x4005399	      2201	dir.c	FUNCTION_71	IF_5
0x4005388	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2201	dir.c	FUNCTION_71	IF_5
0x400538d	            0x7414	                            je 0x40053a3	      2201	dir.c	FUNCTION_71	IF_5
0x400538f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2201	dir.c	FUNCTION_71	IF_5
0x4005393	            0x8b00	                    mov eax, dword [rax]	      2201	dir.c	FUNCTION_71	IF_5
0x4005395	            0x85c0	                           test eax, eax	      2201	dir.c	FUNCTION_71	IF_5
0x4005397	            0x740a	                            je 0x40053a3	      2201	dir.c	FUNCTION_71	IF_5
0x4005399	      0xb800000000	                              mov eax, 0	      2202	dir.c	FUNCTION_71	IF_5
0x400539e	      0xe9b2020000	                           jmp 0x4005655	      2202	dir.c	FUNCTION_71	IF_5
0x40053a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2205	dir.c	FUNCTION_71	IF_6
0x40053a7	          0x8b5010	            mov edx, dword [rax + 0x10] 	      2205	dir.c	FUNCTION_71	IF_6
0x40053aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2205	dir.c	FUNCTION_71	IF_6
0x40053ae	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2205	dir.c	FUNCTION_71	IF_6
0x40053b5	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      2205	dir.c	FUNCTION_71	IF_6
0x40053bb	            0x39c2	                            cmp edx, eax	      2205	dir.c	FUNCTION_71	IF_6
0x40053bd	            0x751c	                           jne 0x40053db	      2205	dir.c	FUNCTION_71	IF_6
0x40053bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2211	dir.c	FUNCTION_71	IF_6
0x40053c3	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2211	dir.c	FUNCTION_71	IF_6
0x40053c6	          0x83e002	                              and eax, 2	      2211	dir.c	FUNCTION_71	IF_6
0x40053c9	            0x85c0	                           test eax, eax	      2205	dir.c	FUNCTION_71	IF_6
0x40053cb	            0x740e	                            je 0x40053db	      2205	dir.c	FUNCTION_71	IF_6
0x40053cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2213	dir.c	FUNCTION_71	IF_6
0x40053d1	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2213	dir.c	FUNCTION_71	IF_6
0x40053d4	          0x83e031	                           and eax, 0x31	      2213	dir.c	FUNCTION_71	IF_6
0x40053d7	            0x85c0	                           test eax, eax	      2211	dir.c	FUNCTION_71	IF_6
0x40053d9	            0x740a	                            je 0x40053e5	      2211	dir.c	FUNCTION_71	IF_6
0x40053db	      0xb800000000	                              mov eax, 0	      2215	dir.c	FUNCTION_71	IF_6
0x40053e0	      0xe970020000	                           jmp 0x4005655	      2215	dir.c	FUNCTION_71	IF_6
0x40053e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2221	dir.c	FUNCTION_71	IF_7
0x40053e9	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2221	dir.c	FUNCTION_71	IF_7
0x40053ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2221	dir.c	FUNCTION_71	IF_7
0x40053f1	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2221	dir.c	FUNCTION_71	IF_7
0x40053f8	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2221	dir.c	FUNCTION_71	IF_7
0x40053fc	          0x4839c2	                            cmp rdx, rax	      2221	dir.c	FUNCTION_71	IF_7
0x40053ff	            0x7430	                            je 0x4005431	      2221	dir.c	FUNCTION_71	IF_7
0x4005401	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2222	dir.c	FUNCTION_71	IF_7	CALL_2
0x4005405	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2222	dir.c	FUNCTION_71	IF_7	CALL_2
0x400540c	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2222	dir.c	FUNCTION_71	IF_7	CALL_2
0x4005410	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2222	dir.c	FUNCTION_71	IF_7	CALL_2
0x4005414	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2222	dir.c	FUNCTION_71	IF_7	CALL_2
0x4005418	          0x4889d6	                            mov rsi, rdx	      2222	dir.c	FUNCTION_71	IF_7	CALL_2
0x400541b	          0x4889c7	                            mov rdi, rax	      2222	dir.c	FUNCTION_71	IF_7	CALL_2
0x400541e	      0xe800000000	                          call 0x4005423	      2222	dir.c	FUNCTION_71	IF_7	CALL_2
0x4005423	            0x85c0	                           test eax, eax	      2221	dir.c	FUNCTION_71	IF_7
0x4005425	            0x740a	                            je 0x4005431	      2221	dir.c	FUNCTION_71	IF_7
0x4005427	      0xb800000000	                              mov eax, 0	      2223	dir.c	FUNCTION_71	IF_7
0x400542c	      0xe924020000	                           jmp 0x4005655	      2223	dir.c	FUNCTION_71	IF_7
0x4005431	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2229	dir.c	FUNCTION_71	IF_8
0x4005435	          0x8b4030	            mov eax, dword [rax + 0x30] 	      2229	dir.c	FUNCTION_71	IF_8
0x4005438	            0x85c0	                           test eax, eax	      2229	dir.c	FUNCTION_71	IF_8
0x400543a	            0x740a	                            je 0x4005446	      2229	dir.c	FUNCTION_71	IF_8
0x400543c	      0xb800000000	                              mov eax, 0	      2230	dir.c	FUNCTION_71	IF_8
0x4005441	      0xe90f020000	                           jmp 0x4005655	      2230	dir.c	FUNCTION_71	IF_8
0x4005446	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2232	dir.c	FUNCTION_71	IF_9	CALL_3
0x400544a	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2232	dir.c	FUNCTION_71	IF_9	CALL_3
0x4005451	          0x4889c7	                            mov rdi, rax	      2232	dir.c	FUNCTION_71	IF_9	CALL_3
0x4005454	      0xe8f4fcffff	             call sym.ident_in_untracked	      2232	dir.c	FUNCTION_71	IF_9	CALL_3
0x4005459	            0x85c0	                           test eax, eax	      2232	dir.c	FUNCTION_71	IF_9	CALL_3
0x400545b	            0x7521	                           jne 0x400547e	      2232	dir.c	FUNCTION_71	IF_9	CALL_3
0x400545d	      0xbf00000000	                              mov edi, 0	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x4005462	      0xe873afffff	                               call sym.	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x4005467	          0x4889c7	                            mov rdi, rax	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x400546a	      0xb800000000	                              mov eax, 0	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x400546f	      0xe800000000	                          call 0x4005474	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x4005474	      0xb800000000	                              mov eax, 0	      2234	dir.c	FUNCTION_71	IF_9
0x4005479	      0xe9d7010000	                           jmp 0x4005655	      2234	dir.c	FUNCTION_71	IF_9
0x400547e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2237	dir.c	FUNCTION_71	IF_10
0x4005482	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2237	dir.c	FUNCTION_71	IF_10
0x4005489	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2237	dir.c	FUNCTION_71	IF_10
0x4005490	          0x4885c0	                           test rax, rax	      2237	dir.c	FUNCTION_71	IF_10
0x4005493	            0x754b	                           jne 0x40054e0	      2237	dir.c	FUNCTION_71	IF_10
0x4005495	    0xc745e4600000	           mov dword [rbp - 0x1c], 0x60 	      2238	dir.c	FUNCTION_71	IF_10
0x400549c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x40054a0	    0x488b98880000	            mov rbx, qword [rax + 0x88] 	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x40054a7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x40054aa	            0x4898	                                    cdqe	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x40054ac	          0x4889c7	                            mov rdi, rax	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x40054af	      0xe800000000	                          call 0x40054b4	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x40054b4	    0x488983a00000	             mov qword [rbx + 0xa0], rax	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x40054bb	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2240	dir.c	FUNCTION_71	IF_10	CALL_7
0x40054be	          0x4863d0	                         movsxd rdx, eax	      2240	dir.c	FUNCTION_71	IF_10	CALL_7
0x40054c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2240	dir.c	FUNCTION_71	IF_10	CALL_7
0x40054c5	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2240	dir.c	FUNCTION_71	IF_10	CALL_7
0x40054cc	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2240	dir.c	FUNCTION_71	IF_10	CALL_7
0x40054d3	      0xbe00000000	                              mov esi, 0	      2240	dir.c	FUNCTION_71	IF_10	CALL_7
0x40054d8	          0x4889c7	                            mov rdi, rax	      2240	dir.c	FUNCTION_71	IF_10	CALL_7
0x40054db	      0xe800000000	                          call 0x40054e0	      2240	dir.c	FUNCTION_71	IF_10	CALL_7
0x40054e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2244	dir.c	FUNCTION_71
0x40054e4	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2244	dir.c	FUNCTION_71
0x40054eb	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2244	dir.c	FUNCTION_71
0x40054f2	        0x488945e8	             mov qword [rbp - 0x18], rax	      2244	dir.c	FUNCTION_71
0x40054f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2246	dir.c	FUNCTION_71	IF_11
0x40054fa	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2246	dir.c	FUNCTION_71	IF_11
0x4005501	        0x488d5024	                   lea rdx, [rax + 0x24]	      2246	dir.c	FUNCTION_71	IF_11
0x4005505	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2245	dir.c	FUNCTION_71	IF_11	CALL_8
0x4005509	    0x4805b4000000	                           add rax, 0xb4	      2245	dir.c	FUNCTION_71	IF_11	CALL_8
0x400550f	          0x4889d6	                            mov rsi, rdx	      2245	dir.c	FUNCTION_71	IF_11	CALL_8
0x4005512	          0x4889c7	                            mov rdi, rax	      2245	dir.c	FUNCTION_71	IF_11	CALL_8
0x4005515	      0xe87eafffff	                         call sym.oidcmp	      2245	dir.c	FUNCTION_71	IF_11	CALL_8
0x400551a	            0x85c0	                           test eax, eax	      2245	dir.c	FUNCTION_71	IF_11	CALL_8
0x400551c	            0x747e	                            je 0x400559c	      2245	dir.c	FUNCTION_71	IF_11	CALL_8
0x400551e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2247	dir.c	FUNCTION_71	IF_11	CALL_9
0x4005522	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2247	dir.c	FUNCTION_71	IF_11	CALL_9
0x4005529	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2247	dir.c	FUNCTION_71	IF_11	CALL_9
0x400552d	          0x4889d6	                            mov rsi, rdx	      2247	dir.c	FUNCTION_71	IF_11	CALL_9
0x4005530	          0x4889c7	                            mov rdi, rax	      2247	dir.c	FUNCTION_71	IF_11	CALL_9
0x4005533	      0xe80ccaffff	           call sym.invalidate_gitignore	      2247	dir.c	FUNCTION_71	IF_11	CALL_9
0x4005538	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2248	dir.c	FUNCTION_71	IF_11
0x400553c	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2248	dir.c	FUNCTION_71	IF_11
0x4005543	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2248	dir.c	FUNCTION_71	IF_11
0x4005547	    0x488b8a900000	            mov rcx, qword [rdx + 0x90] 	      2248	dir.c	FUNCTION_71	IF_11
0x400554e	          0x488908	                    mov qword [rax], rcx	      2248	dir.c	FUNCTION_71	IF_11
0x4005551	    0x488b8a980000	            mov rcx, qword [rdx + 0x98] 	      2248	dir.c	FUNCTION_71	IF_11
0x4005558	        0x48894808	                mov qword [rax + 8], rcx	      2248	dir.c	FUNCTION_71	IF_11
0x400555c	    0x488b8aa00000	            mov rcx, qword [rdx + 0xa0] 	      2248	dir.c	FUNCTION_71	IF_11
0x4005563	        0x48894810	             mov qword [rax + 0x10], rcx	      2248	dir.c	FUNCTION_71	IF_11
0x4005567	    0x488b8aa80000	            mov rcx, qword [rdx + 0xa8] 	      2248	dir.c	FUNCTION_71	IF_11
0x400556e	        0x48894818	             mov qword [rax + 0x18], rcx	      2248	dir.c	FUNCTION_71	IF_11
0x4005572	    0x488b8ab00000	            mov rcx, qword [rdx + 0xb0] 	      2248	dir.c	FUNCTION_71	IF_11
0x4005579	        0x48894820	             mov qword [rax + 0x20], rcx	      2248	dir.c	FUNCTION_71	IF_11
0x400557d	    0x488b8ab80000	            mov rcx, qword [rdx + 0xb8] 	      2248	dir.c	FUNCTION_71	IF_11
0x4005584	        0x48894828	             mov qword [rax + 0x28], rcx	      2248	dir.c	FUNCTION_71	IF_11
0x4005588	    0x488b8ac00000	            mov rcx, qword [rdx + 0xc0] 	      2248	dir.c	FUNCTION_71	IF_11
0x400558f	        0x48894830	             mov qword [rax + 0x30], rcx	      2248	dir.c	FUNCTION_71	IF_11
0x4005593	    0x8b92c8000000	            mov edx, dword [rdx + 0xc8] 	      2248	dir.c	FUNCTION_71	IF_11
0x4005599	          0x895038	             mov dword [rax + 0x38], edx	      2248	dir.c	FUNCTION_71	IF_11
0x400559c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2251	dir.c	FUNCTION_71	IF_12
0x40055a0	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2251	dir.c	FUNCTION_71	IF_12
0x40055a7	        0x488d5060	                   lea rdx, [rax + 0x60]	      2251	dir.c	FUNCTION_71	IF_12
0x40055ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2250	dir.c	FUNCTION_71	IF_12	CALL_10
0x40055af	    0x4805f0000000	                           add rax, 0xf0	      2250	dir.c	FUNCTION_71	IF_12	CALL_10
0x40055b5	          0x4889d6	                            mov rsi, rdx	      2250	dir.c	FUNCTION_71	IF_12	CALL_10
0x40055b8	          0x4889c7	                            mov rdi, rax	      2250	dir.c	FUNCTION_71	IF_12	CALL_10
0x40055bb	      0xe8d8aeffff	                         call sym.oidcmp	      2250	dir.c	FUNCTION_71	IF_12	CALL_10
0x40055c0	            0x85c0	                           test eax, eax	      2250	dir.c	FUNCTION_71	IF_12	CALL_10
0x40055c2	            0x747f	                            je 0x4005643	      2250	dir.c	FUNCTION_71	IF_12	CALL_10
0x40055c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2252	dir.c	FUNCTION_71	IF_12	CALL_11
0x40055c8	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2252	dir.c	FUNCTION_71	IF_12	CALL_11
0x40055cf	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2252	dir.c	FUNCTION_71	IF_12	CALL_11
0x40055d3	          0x4889d6	                            mov rsi, rdx	      2252	dir.c	FUNCTION_71	IF_12	CALL_11
0x40055d6	          0x4889c7	                            mov rdi, rax	      2252	dir.c	FUNCTION_71	IF_12	CALL_11
0x40055d9	      0xe866c9ffff	           call sym.invalidate_gitignore	      2252	dir.c	FUNCTION_71	IF_12	CALL_11
0x40055de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2253	dir.c	FUNCTION_71	IF_12
0x40055e2	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2253	dir.c	FUNCTION_71	IF_12
0x40055e9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2253	dir.c	FUNCTION_71	IF_12
0x40055ed	    0x488b8acc0000	            mov rcx, qword [rdx + 0xcc] 	      2253	dir.c	FUNCTION_71	IF_12
0x40055f4	        0x4889483c	             mov qword [rax + 0x3c], rcx	      2253	dir.c	FUNCTION_71	IF_12
0x40055f8	    0x488b8ad40000	            mov rcx, qword [rdx + 0xd4] 	      2253	dir.c	FUNCTION_71	IF_12
0x40055ff	        0x48894844	             mov qword [rax + 0x44], rcx	      2253	dir.c	FUNCTION_71	IF_12
0x4005603	    0x488b8adc0000	            mov rcx, qword [rdx + 0xdc] 	      2253	dir.c	FUNCTION_71	IF_12
0x400560a	        0x4889484c	             mov qword [rax + 0x4c], rcx	      2253	dir.c	FUNCTION_71	IF_12
0x400560e	    0x488b8ae40000	            mov rcx, qword [rdx + 0xe4] 	      2253	dir.c	FUNCTION_71	IF_12
0x4005615	        0x48894854	             mov qword [rax + 0x54], rcx	      2253	dir.c	FUNCTION_71	IF_12
0x4005619	    0x488b8aec0000	            mov rcx, qword [rdx + 0xec] 	      2253	dir.c	FUNCTION_71	IF_12
0x4005620	        0x4889485c	             mov qword [rax + 0x5c], rcx	      2253	dir.c	FUNCTION_71	IF_12
0x4005624	    0x488b8af40000	            mov rcx, qword [rdx + 0xf4] 	      2253	dir.c	FUNCTION_71	IF_12
0x400562b	        0x48894864	             mov qword [rax + 0x64], rcx	      2253	dir.c	FUNCTION_71	IF_12
0x400562f	    0x488b8afc0000	            mov rcx, qword [rdx + 0xfc] 	      2253	dir.c	FUNCTION_71	IF_12
0x4005636	        0x4889486c	             mov qword [rax + 0x6c], rcx	      2253	dir.c	FUNCTION_71	IF_12
0x400563a	    0x8b9204010000	           mov edx, dword [rdx + 0x104] 	      2253	dir.c	FUNCTION_71	IF_12
0x4005640	          0x895074	             mov dword [rax + 0x74], edx	      2253	dir.c	FUNCTION_71	IF_12
0x4005643	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2257	dir.c	FUNCTION_71
0x4005647	         0xfb65044	           movzx edx, byte [rax + 0x44] 	      2257	dir.c	FUNCTION_71
0x400564b	          0x83ca04	                               or edx, 4	      2257	dir.c	FUNCTION_71
0x400564e	          0x885044	               mov byte [rax + 0x44], dl	      2257	dir.c	FUNCTION_71
0x4005651	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2258	dir.c	FUNCTION_71
0x4005655	        0x4883c438	                           add rsp, 0x38	      2259	dir.c	FUNCTION_71
0x4005659	              0x5b	                                 pop rbx	      2259	dir.c	FUNCTION_71
0x400565a	              0x5d	                                 pop rbp	      2259	dir.c	FUNCTION_71
0x400565b	              0xc3	                                     ret	      2259	dir.c	FUNCTION_71
match_basename	SWITCH,0:ELSE,2:WHILE,0:IF,5:DO,0:CALL,3:functions,0:FOR,0	69
0x400280c	              0x55	                                push rbp	       964	dir.c	FUNCTION_35
0x400280d	          0x4889e5	                            mov rbp, rsp	       964	dir.c	FUNCTION_35
0x4002810	        0x4883ec20	                           sub rsp, 0x20	       964	dir.c	FUNCTION_35
0x4002814	        0x48897df8	                mov qword [rbp - 8], rdi	       964	dir.c	FUNCTION_35
0x4002818	          0x8975f4	              mov dword [rbp - 0xc], esi	       964	dir.c	FUNCTION_35
0x400281b	        0x488955e8	             mov qword [rbp - 0x18], rdx	       964	dir.c	FUNCTION_35
0x400281f	          0x894df0	             mov dword [rbp - 0x10], ecx	       964	dir.c	FUNCTION_35
0x4002822	        0x448945e4	             mov dword [rbp - 0x1c], r8d	       964	dir.c	FUNCTION_35
0x4002826	        0x44894de0	             mov dword [rbp - 0x20], r9d	       964	dir.c	FUNCTION_35
0x400282a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       965	dir.c	FUNCTION_35	IF_1
0x400282d	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       965	dir.c	FUNCTION_35	IF_1
0x4002830	            0x7537	                           jne 0x4002869	       965	dir.c	FUNCTION_35	IF_1
0x4002832	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       966	dir.c	FUNCTION_35	IF_1	IF_2
0x4002835	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       966	dir.c	FUNCTION_35	IF_1	IF_2
0x4002838	     0xf85ab000000	                           jne 0x40028e9	       966	dir.c	FUNCTION_35	IF_1	IF_2
0x400283e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       967	dir.c	FUNCTION_35	IF_1	IF_2	CALL_1
0x4002841	          0x4863d0	                         movsxd rdx, eax	       967	dir.c	FUNCTION_35	IF_1	IF_2	CALL_1
0x4002844	        0x488b4df8	                mov rcx, qword [rbp - 8]	       967	dir.c	FUNCTION_35	IF_1	IF_2	CALL_1
0x4002848	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       967	dir.c	FUNCTION_35	IF_1	IF_2	CALL_1
0x400284c	          0x4889ce	                            mov rsi, rcx	       967	dir.c	FUNCTION_35	IF_1	IF_2	CALL_1
0x400284f	          0x4889c7	                            mov rdi, rax	       967	dir.c	FUNCTION_35	IF_1	IF_2	CALL_1
0x4002852	      0xe800000000	                          call 0x4002857	       967	dir.c	FUNCTION_35	IF_1	IF_2	CALL_1
0x4002857	            0x85c0	                           test eax, eax	       966	dir.c	FUNCTION_35	IF_1	IF_2
0x4002859	     0xf858a000000	                           jne 0x40028e9	       966	dir.c	FUNCTION_35	IF_1	IF_2
0x400285f	      0xb801000000	                              mov eax, 1	       968	dir.c	FUNCTION_35	IF_1	IF_2
0x4002864	      0xe985000000	                           jmp 0x40028ee	       968	dir.c	FUNCTION_35	IF_1	IF_2
0x4002869	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       969	dir.c	FUNCTION_35	ELSE_1	IF_3
0x400286c	          0x83e004	                              and eax, 4	       969	dir.c	FUNCTION_35	ELSE_1	IF_3
0x400286f	            0x85c0	                           test eax, eax	       969	dir.c	FUNCTION_35	ELSE_1	IF_3
0x4002871	            0x744f	                            je 0x40028c2	       969	dir.c	FUNCTION_35	ELSE_1	IF_3
0x4002873	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       971	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x4002876	          0x83e801	                              sub eax, 1	       971	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x4002879	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       971	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x400287c	            0x7f6b	                            jg 0x40028e9	       971	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x400287e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       974	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x4002881	          0x83e801	                              sub eax, 1	       974	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x4002884	            0x4898	                                    cdqe	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x4002886	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       973	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x4002889	          0x4863ca	                         movsxd rcx, edx	       973	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x400288c	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       973	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x400288f	          0x4863d2	                         movsxd rdx, edx	       973	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x4002892	          0x4829d1	                            sub rcx, rdx	       973	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x4002895	          0x4889ca	                            mov rdx, rcx	       973	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x4002898	        0x488d4a01	                      lea rcx, [rdx + 1]	       973	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x400289c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40028a0	        0x488d3411	                    lea rsi, [rcx + rdx]	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40028a4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40028a8	        0x488d4a01	                      lea rcx, [rdx + 1]	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40028ac	          0x4889c2	                            mov rdx, rax	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40028af	          0x4889cf	                            mov rdi, rcx	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40028b2	      0xe800000000	                          call 0x40028b7	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40028b7	            0x85c0	                           test eax, eax	       971	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x40028b9	            0x752e	                           jne 0x40028e9	       971	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x40028bb	      0xb801000000	                              mov eax, 1	       975	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x40028c0	            0xeb2c	                           jmp 0x40028ee	       975	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x40028c2	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       977	dir.c	FUNCTION_35	ELSE_2	IF_5	CALL_3
0x40028c5	        0x488b55f8	                mov rdx, qword [rbp - 8]	       977	dir.c	FUNCTION_35	ELSE_2	IF_5	CALL_3
0x40028c9	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       977	dir.c	FUNCTION_35	ELSE_2	IF_5	CALL_3
0x40028cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       977	dir.c	FUNCTION_35	ELSE_2	IF_5	CALL_3
0x40028d0	    0x41b800000000	                              mov r8d, 0	       977	dir.c	FUNCTION_35	ELSE_2	IF_5	CALL_3
0x40028d6	          0x4889c7	                            mov rdi, rax	       977	dir.c	FUNCTION_35	ELSE_2	IF_5	CALL_3
0x40028d9	      0xe897dfffff	              call sym.fnmatch_icase_mem	       977	dir.c	FUNCTION_35	ELSE_2	IF_5	CALL_3
0x40028de	            0x85c0	                           test eax, eax	       977	dir.c	FUNCTION_35	ELSE_2	IF_5	CALL_3
0x40028e0	            0x7507	                           jne 0x40028e9	       977	dir.c	FUNCTION_35	ELSE_2	IF_5	CALL_3
0x40028e2	      0xb801000000	                              mov eax, 1	       980	dir.c	FUNCTION_35	ELSE_2	IF_5
0x40028e7	            0xeb05	                           jmp 0x40028ee	       980	dir.c	FUNCTION_35	ELSE_2	IF_5
0x40028e9	      0xb800000000	                              mov eax, 0	       982	dir.c	FUNCTION_35
0x40028ee	              0xc9	                                   leave	       983	dir.c	FUNCTION_35
0x40028ef	              0xc3	                                     ret	       983	dir.c	FUNCTION_35
oidclr	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	12
0x4000535	              0x55	                                push rbp	      1016	cache.h	FUNCTION_156
0x4000536	          0x4889e5	                            mov rbp, rsp	      1016	cache.h	FUNCTION_156
0x4000539	        0x4883ec10	                           sub rsp, 0x10	      1016	cache.h	FUNCTION_156
0x400053d	        0x48897df8	                mov qword [rbp - 8], rdi	      1016	cache.h	FUNCTION_156
0x4000541	        0x488b45f8	                mov rax, qword [rbp - 8]	      1017	cache.h	FUNCTION_156	CALL_1
0x4000545	      0xba14000000	                           mov edx, 0x14	      1017	cache.h	FUNCTION_156	CALL_1
0x400054a	      0xbe00000000	                              mov esi, 0	      1017	cache.h	FUNCTION_156	CALL_1
0x400054f	          0x4889c7	                            mov rdi, rax	      1017	cache.h	FUNCTION_156	CALL_1
0x4000552	      0xe800000000	                          call 0x4000557	      1017	cache.h	FUNCTION_156	CALL_1
0x4000557	              0x90	                                     nop	      1018	cache.h	FUNCTION_156
0x4000558	              0xc9	                                   leave	      1018	cache.h	FUNCTION_156
0x4000559	              0xc3	                                     ret	      1018	cache.h	FUNCTION_156
read_object_file	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	14
0x400055a	              0x55	                                push rbp	      1199	cache.h	FUNCTION_162
0x400055b	          0x4889e5	                            mov rbp, rsp	      1199	cache.h	FUNCTION_162
0x400055e	        0x4883ec20	                           sub rsp, 0x20	      1199	cache.h	FUNCTION_162
0x4000562	        0x48897df8	                mov qword [rbp - 8], rdi	      1199	cache.h	FUNCTION_162
0x4000566	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1199	cache.h	FUNCTION_162
0x400056a	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1199	cache.h	FUNCTION_162
0x400056e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1200	cache.h	FUNCTION_162	CALL_1
0x4000572	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1200	cache.h	FUNCTION_162	CALL_1
0x4000576	        0x488b45f8	                mov rax, qword [rbp - 8]	      1200	cache.h	FUNCTION_162	CALL_1
0x400057a	      0xb901000000	                              mov ecx, 1	      1200	cache.h	FUNCTION_162	CALL_1
0x400057f	          0x4889c7	                            mov rdi, rax	      1200	cache.h	FUNCTION_162	CALL_1
0x4000582	      0xe800000000	                          call 0x4000587	      1200	cache.h	FUNCTION_162	CALL_1
0x4000587	              0xc9	                                   leave	      1201	cache.h	FUNCTION_162
0x4000588	              0xc3	                                     ret	      1201	cache.h	FUNCTION_162
cmp_dir_entry	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	25
0x4004e11	              0x55	                                push rbp	      2044	dir.c	FUNCTION_62
0x4004e12	          0x4889e5	                            mov rbp, rsp	      2044	dir.c	FUNCTION_62
0x4004e15	        0x4883ec20	                           sub rsp, 0x20	      2044	dir.c	FUNCTION_62
0x4004e19	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2044	dir.c	FUNCTION_62
0x4004e1d	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2044	dir.c	FUNCTION_62
0x4004e21	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2045	dir.c	FUNCTION_62
0x4004e25	          0x488b00	                    mov rax, qword [rax]	      2045	dir.c	FUNCTION_62
0x4004e28	        0x488945f0	             mov qword [rbp - 0x10], rax	      2045	dir.c	FUNCTION_62
0x4004e2c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2046	dir.c	FUNCTION_62
0x4004e30	          0x488b00	                    mov rax, qword [rax]	      2046	dir.c	FUNCTION_62
0x4004e33	        0x488945f8	                mov qword [rbp - 8], rax	      2046	dir.c	FUNCTION_62
0x4004e37	        0x488b45f8	                mov rax, qword [rbp - 8]	      2048	dir.c	FUNCTION_62	CALL_1
0x4004e3b	            0x8b00	                    mov eax, dword [rax]	      2048	dir.c	FUNCTION_62	CALL_1
0x4004e3d	            0x89c1	                            mov ecx, eax	      2048	dir.c	FUNCTION_62	CALL_1
0x4004e3f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2048	dir.c	FUNCTION_62	CALL_1
0x4004e43	        0x488d5004	                      lea rdx, [rax + 4]	      2048	dir.c	FUNCTION_62	CALL_1
0x4004e47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2048	dir.c	FUNCTION_62	CALL_1
0x4004e4b	            0x8b00	                    mov eax, dword [rax]	      2048	dir.c	FUNCTION_62	CALL_1
0x4004e4d	            0x89c6	                            mov esi, eax	      2048	dir.c	FUNCTION_62	CALL_1
0x4004e4f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2048	dir.c	FUNCTION_62	CALL_1
0x4004e53	        0x4883c004	                              add rax, 4	      2048	dir.c	FUNCTION_62	CALL_1
0x4004e57	          0x4889c7	                            mov rdi, rax	      2048	dir.c	FUNCTION_62	CALL_1
0x4004e5a	      0xe800000000	                          call 0x4004e5f	      2048	dir.c	FUNCTION_62	CALL_1
0x4004e5f	              0xc9	                                   leave	      2049	dir.c	FUNCTION_62
0x4004e60	              0xc3	                                     ret	      2049	dir.c	FUNCTION_62
free_untracked	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,5:functions,0:FOR,2	55
0x4006b30	              0x55	                                push rbp	      2708	dir.c	FUNCTION_86
0x4006b31	          0x4889e5	                            mov rbp, rsp	      2708	dir.c	FUNCTION_86
0x4006b34	        0x4883ec20	                           sub rsp, 0x20	      2708	dir.c	FUNCTION_86
0x4006b38	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2708	dir.c	FUNCTION_86
0x4006b3c	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2710	dir.c	FUNCTION_86	IF_1
0x4006b41	     0xf84a2000000	                            je 0x4006be9	      2710	dir.c	FUNCTION_86	IF_1
0x4006b47	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2712	dir.c	FUNCTION_86	FOR_1
0x4006b4e	            0xeb23	                           jmp 0x4006b73	      2712	dir.c	FUNCTION_86	FOR_1
0x4006b50	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2713	dir.c	FUNCTION_86	CALL_1
0x4006b54	          0x488b00	                    mov rax, qword [rax]	      2713	dir.c	FUNCTION_86	CALL_1
0x4006b57	          0x8b55fc	                mov edx, dword [rbp - 4]	      2713	dir.c	FUNCTION_86	CALL_1
0x4006b5a	          0x4863d2	                         movsxd rdx, edx	      2713	dir.c	FUNCTION_86	CALL_1
0x4006b5d	        0x48c1e203	                              shl rdx, 3	      2713	dir.c	FUNCTION_86	CALL_1
0x4006b61	          0x4801d0	                            add rax, rdx	      2713	dir.c	FUNCTION_86	CALL_1
0x4006b64	          0x488b00	                    mov rax, qword [rax]	      2713	dir.c	FUNCTION_86	CALL_1
0x4006b67	          0x4889c7	                            mov rdi, rax	      2713	dir.c	FUNCTION_86	CALL_1
0x4006b6a	      0xe8c1ffffff	                 call sym.free_untracked	      2713	dir.c	FUNCTION_86	CALL_1
0x4006b6f	        0x8345fc01	                  add dword [rbp - 4], 1	      2712	dir.c	FUNCTION_86	FOR_1
0x4006b73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2712	dir.c	FUNCTION_86	FOR_1
0x4006b77	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2712	dir.c	FUNCTION_86	FOR_1
0x4006b7a	          0x8b45fc	                mov eax, dword [rbp - 4]	      2712	dir.c	FUNCTION_86	FOR_1
0x4006b7d	            0x39c2	                            cmp edx, eax	      2712	dir.c	FUNCTION_86	FOR_1
0x4006b7f	            0x77cf	                            ja 0x4006b50	      2712	dir.c	FUNCTION_86	FOR_1
0x4006b81	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2714	dir.c	FUNCTION_86	FOR_2
0x4006b88	            0xeb24	                           jmp 0x4006bae	      2714	dir.c	FUNCTION_86	FOR_2
0x4006b8a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2715	dir.c	FUNCTION_86	CALL_2
0x4006b8e	        0x488b4008	                mov rax, qword [rax + 8]	      2715	dir.c	FUNCTION_86	CALL_2
0x4006b92	          0x8b55fc	                mov edx, dword [rbp - 4]	      2715	dir.c	FUNCTION_86	CALL_2
0x4006b95	          0x4863d2	                         movsxd rdx, edx	      2715	dir.c	FUNCTION_86	CALL_2
0x4006b98	        0x48c1e203	                              shl rdx, 3	      2715	dir.c	FUNCTION_86	CALL_2
0x4006b9c	          0x4801d0	                            add rax, rdx	      2715	dir.c	FUNCTION_86	CALL_2
0x4006b9f	          0x488b00	                    mov rax, qword [rax]	      2715	dir.c	FUNCTION_86	CALL_2
0x4006ba2	          0x4889c7	                            mov rdi, rax	      2715	dir.c	FUNCTION_86	CALL_2
0x4006ba5	      0xe800000000	                          call 0x4006baa	      2715	dir.c	FUNCTION_86	CALL_2
0x4006baa	        0x8345fc01	                  add dword [rbp - 4], 1	      2714	dir.c	FUNCTION_86	FOR_2
0x4006bae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2714	dir.c	FUNCTION_86	FOR_2
0x4006bb2	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2714	dir.c	FUNCTION_86	FOR_2
0x4006bb5	          0x8b45fc	                mov eax, dword [rbp - 4]	      2714	dir.c	FUNCTION_86	FOR_2
0x4006bb8	            0x39c2	                            cmp edx, eax	      2714	dir.c	FUNCTION_86	FOR_2
0x4006bba	            0x77ce	                            ja 0x4006b8a	      2714	dir.c	FUNCTION_86	FOR_2
0x4006bbc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2716	dir.c	FUNCTION_86	CALL_3
0x4006bc0	        0x488b4008	                mov rax, qword [rax + 8]	      2716	dir.c	FUNCTION_86	CALL_3
0x4006bc4	          0x4889c7	                            mov rdi, rax	      2716	dir.c	FUNCTION_86	CALL_3
0x4006bc7	      0xe800000000	                          call 0x4006bcc	      2716	dir.c	FUNCTION_86	CALL_3
0x4006bcc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2717	dir.c	FUNCTION_86	CALL_4
0x4006bd0	          0x488b00	                    mov rax, qword [rax]	      2717	dir.c	FUNCTION_86	CALL_4
0x4006bd3	          0x4889c7	                            mov rdi, rax	      2717	dir.c	FUNCTION_86	CALL_4
0x4006bd6	      0xe800000000	                          call 0x4006bdb	      2717	dir.c	FUNCTION_86	CALL_4
0x4006bdb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2718	dir.c	FUNCTION_86	CALL_5
0x4006bdf	          0x4889c7	                            mov rdi, rax	      2718	dir.c	FUNCTION_86	CALL_5
0x4006be2	      0xe800000000	                          call 0x4006be7	      2718	dir.c	FUNCTION_86	CALL_5
0x4006be7	            0xeb01	                           jmp 0x4006bea	      2718	dir.c	FUNCTION_86	CALL_5
0x4006be9	              0x90	                                     nop	      2711	dir.c	FUNCTION_86	IF_1
0x4006bea	              0xc9	                                   leave	      2719	dir.c	FUNCTION_86
0x4006beb	              0xc3	                                     ret	      2719	dir.c	FUNCTION_86
add_excludes_from_file_1	SWITCH,0:ELSE,0:WHILE,0:IF,2:DO,0:CALL,3:functions,0:FOR,0	41
0x400272f	              0x55	                                push rbp	       941	dir.c	FUNCTION_33
0x4002730	          0x4889e5	                            mov rbp, rsp	       941	dir.c	FUNCTION_33
0x4002733	        0x4883ec30	                           sub rsp, 0x30	       941	dir.c	FUNCTION_33
0x4002737	        0x48897de8	             mov qword [rbp - 0x18], rdi	       941	dir.c	FUNCTION_33
0x400273b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       941	dir.c	FUNCTION_33
0x400273f	        0x488955d8	             mov qword [rbp - 0x28], rdx	       941	dir.c	FUNCTION_33
0x4002743	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       948	dir.c	FUNCTION_33	IF_1
0x4002747	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       948	dir.c	FUNCTION_33	IF_1
0x400274e	          0x4885c0	                           test rax, rax	       948	dir.c	FUNCTION_33	IF_1
0x4002751	            0x7517	                           jne 0x400276a	       948	dir.c	FUNCTION_33	IF_1
0x4002753	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       949	dir.c	FUNCTION_33	IF_1
0x4002757	    0x8b8008010000	           mov eax, dword [rax + 0x108] 	       949	dir.c	FUNCTION_33	IF_1
0x400275d	          0x8d5001	                      lea edx, [rax + 1]	       949	dir.c	FUNCTION_33	IF_1
0x4002760	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       949	dir.c	FUNCTION_33	IF_1
0x4002764	    0x899008010000	            mov dword [rax + 0x108], edx	       949	dir.c	FUNCTION_33	IF_1
0x400276a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       950	dir.c	FUNCTION_33	CALL_1
0x400276e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       950	dir.c	FUNCTION_33	CALL_1
0x4002772	      0xbe02000000	                              mov esi, 2	       950	dir.c	FUNCTION_33	CALL_1
0x4002777	          0x4889c7	                            mov rdi, rax	       950	dir.c	FUNCTION_33	CALL_1
0x400277a	      0xe800000000	                          call 0x400277f	       950	dir.c	FUNCTION_33	CALL_1
0x400277f	        0x488945f8	                mov qword [rbp - 8], rax	       950	dir.c	FUNCTION_33	CALL_1
0x4002783	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002787	        0x488b55f8	                mov rdx, qword [rbp - 8]	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x400278b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x400278f	          0x4989c9	                             mov r9, rcx	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002792	    0x41b800000000	                              mov r8d, 0	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002798	          0x4889d1	                            mov rcx, rdx	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x400279b	      0xba00000000	                              mov edx, 0	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x40027a0	      0xbe00000000	                              mov esi, 0	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x40027a5	          0x4889c7	                            mov rdi, rax	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x40027a8	      0xe857f8ffff	                   call sym.add_excludes	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x40027ad	            0x85c0	                           test eax, eax	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x40027af	            0x7916	                           jns 0x40027c7	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x40027b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       952	dir.c	FUNCTION_33	CALL_3
0x40027b5	          0x4889c6	                            mov rsi, rax	       952	dir.c	FUNCTION_33	CALL_3
0x40027b8	      0xbf00000000	                              mov edi, 0	       952	dir.c	FUNCTION_33	CALL_3
0x40027bd	      0xb800000000	                              mov eax, 0	       952	dir.c	FUNCTION_33	CALL_3
0x40027c2	      0xe800000000	                          call 0x40027c7	       952	dir.c	FUNCTION_33	CALL_3
0x40027c7	              0x90	                                     nop	       953	dir.c	FUNCTION_33
0x40027c8	              0xc9	                                   leave	       953	dir.c	FUNCTION_33
0x40027c9	              0xc3	                                     ret	       953	dir.c	FUNCTION_33
load_oid_stat	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,2:functions,0:FOR,0	22
0x400724e	              0x55	                                push rbp	      2843	dir.c	FUNCTION_93
0x400724f	          0x4889e5	                            mov rbp, rsp	      2843	dir.c	FUNCTION_93
0x4007252	        0x4883ec20	                           sub rsp, 0x20	      2843	dir.c	FUNCTION_93
0x4007256	        0x48897df8	                mov qword [rbp - 8], rdi	      2843	dir.c	FUNCTION_93
0x400725a	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2843	dir.c	FUNCTION_93
0x400725e	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2843	dir.c	FUNCTION_93
0x4007262	        0x488b45f8	                mov rax, qword [rbp - 8]	      2844	dir.c	FUNCTION_93	CALL_1
0x4007266	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2844	dir.c	FUNCTION_93	CALL_1
0x400726a	          0x4889d6	                            mov rsi, rdx	      2844	dir.c	FUNCTION_93	CALL_1
0x400726d	          0x4889c7	                            mov rdi, rax	      2844	dir.c	FUNCTION_93	CALL_1
0x4007270	      0xe8acf9ffff	            call sym.stat_data_from_disk	      2844	dir.c	FUNCTION_93	CALL_1
0x4007275	        0x488b45f8	                mov rax, qword [rbp - 8]	      2845	dir.c	FUNCTION_93	CALL_2
0x4007279	        0x488d5024	                   lea rdx, [rax + 0x24]	      2845	dir.c	FUNCTION_93	CALL_2
0x400727d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2845	dir.c	FUNCTION_93	CALL_2
0x4007281	          0x4889c6	                            mov rsi, rax	      2845	dir.c	FUNCTION_93	CALL_2
0x4007284	          0x4889d7	                            mov rdi, rdx	      2845	dir.c	FUNCTION_93	CALL_2
0x4007287	      0xe85892ffff	                        call sym.hashcpy	      2845	dir.c	FUNCTION_93	CALL_2
0x400728c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2846	dir.c	FUNCTION_93
0x4007290	    0xc74038010000	               mov dword [rax + 0x38], 1	      2846	dir.c	FUNCTION_93
0x4007297	              0x90	                                     nop	      2847	dir.c	FUNCTION_93
0x4007298	              0xc9	                                   leave	      2847	dir.c	FUNCTION_93
0x4007299	              0xc3	                                     ret	      2847	dir.c	FUNCTION_93
treat_path	SWITCH,0:ELSE,0:WHILE,0:IF,3:DO,0:CALL,7:functions,0:FOR,0	86
0x40042b5	              0x55	                                push rbp	      1776	dir.c	FUNCTION_55
0x40042b6	          0x4889e5	                            mov rbp, rsp	      1776	dir.c	FUNCTION_55
0x40042b9	        0x4883ec40	                           sub rsp, 0x40	      1776	dir.c	FUNCTION_55
0x40042bd	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1776	dir.c	FUNCTION_55
0x40042c1	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1776	dir.c	FUNCTION_55
0x40042c5	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1776	dir.c	FUNCTION_55
0x40042c9	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1776	dir.c	FUNCTION_55
0x40042cd	        0x4c8945c8	              mov qword [rbp - 0x38], r8	      1776	dir.c	FUNCTION_55
0x40042d1	        0x44894dc4	             mov dword [rbp - 0x3c], r9d	      1776	dir.c	FUNCTION_55
0x40042d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1778	dir.c	FUNCTION_55
0x40042d9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1778	dir.c	FUNCTION_55
0x40042dd	        0x488945f8	                mov qword [rbp - 8], rax	      1778	dir.c	FUNCTION_55
0x40042e1	      0x48837df800	                  cmp qword [rbp - 8], 0	      1780	dir.c	FUNCTION_55	IF_1
0x40042e6	            0x7536	                           jne 0x400431e	      1780	dir.c	FUNCTION_55	IF_1
0x40042e8	        0x448b45c4	             mov r8d, dword [rbp - 0x3c]	      1781	dir.c	FUNCTION_55	IF_1	CALL_1
0x40042ec	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	      1781	dir.c	FUNCTION_55	IF_1	CALL_1
0x40042f0	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1781	dir.c	FUNCTION_55	IF_1	CALL_1
0x40042f4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1781	dir.c	FUNCTION_55	IF_1	CALL_1
0x40042f8	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1781	dir.c	FUNCTION_55	IF_1	CALL_1
0x40042fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1781	dir.c	FUNCTION_55	IF_1	CALL_1
0x4004300	        0x4883ec08	                              sub rsp, 8	      1781	dir.c	FUNCTION_55	IF_1	CALL_1
0x4004304	          0xff7510	                 push qword [rbp + 0x10]	      1781	dir.c	FUNCTION_55	IF_1	CALL_1
0x4004307	          0x4589c1	                            mov r9d, r8d	      1781	dir.c	FUNCTION_55	IF_1	CALL_1
0x400430a	          0x4989f8	                             mov r8, rdi	      1781	dir.c	FUNCTION_55	IF_1	CALL_1
0x400430d	          0x4889c7	                            mov rdi, rax	      1781	dir.c	FUNCTION_55	IF_1	CALL_1
0x4004310	      0xe8b7feffff	                call sym.treat_path_fast	      1781	dir.c	FUNCTION_55	IF_1	CALL_1
0x4004315	        0x4883c410	                           add rsp, 0x10	      1781	dir.c	FUNCTION_55	IF_1	CALL_1
0x4004319	      0xe9c7000000	                           jmp 0x40043e5	      1781	dir.c	FUNCTION_55	IF_1	CALL_1
0x400431e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1783	dir.c	FUNCTION_55	IF_2	CALL_3
0x4004322	        0x4883c013	                           add rax, 0x13	      1783	dir.c	FUNCTION_55	IF_2	CALL_3
0x4004326	          0x4889c7	                            mov rdi, rax	      1783	dir.c	FUNCTION_55	IF_2	CALL_3
0x4004329	      0xe85bc2ffff	               call sym.is_dot_or_dotdot	      1783	dir.c	FUNCTION_55	IF_2	CALL_3
0x400432e	            0x85c0	                           test eax, eax	      1783	dir.c	FUNCTION_55	IF_2	CALL_3
0x4004330	            0x7519	                           jne 0x400434b	      1783	dir.c	FUNCTION_55	IF_2	CALL_3
0x4004332	        0x488b45f8	                mov rax, qword [rbp - 8]	      1783	dir.c	FUNCTION_55	IF_2	CALL_3
0x4004336	        0x4883c013	                           add rax, 0x13	      1783	dir.c	FUNCTION_55	IF_2	CALL_3
0x400433a	      0xbe00000000	                              mov esi, 0	      1783	dir.c	FUNCTION_55	IF_2	CALL_3
0x400433f	          0x4889c7	                            mov rdi, rax	      1783	dir.c	FUNCTION_55	IF_2	CALL_3
0x4004342	      0xe800000000	                          call 0x4004347	      1783	dir.c	FUNCTION_55	IF_2	CALL_3
0x4004347	            0x85c0	                           test eax, eax	      1783	dir.c	FUNCTION_55	IF_2	CALL_3
0x4004349	            0x750a	                           jne 0x4004355	      1783	dir.c	FUNCTION_55	IF_2	CALL_3
0x400434b	      0xb800000000	                              mov eax, 0	      1784	dir.c	FUNCTION_55	IF_2
0x4004350	      0xe990000000	                           jmp 0x40043e5	      1784	dir.c	FUNCTION_55	IF_2
0x4004355	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1785	dir.c	FUNCTION_55	CALL_4
0x4004358	          0x4863d0	                         movsxd rdx, eax	      1785	dir.c	FUNCTION_55	CALL_4
0x400435b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1785	dir.c	FUNCTION_55	CALL_4
0x400435f	          0x4889d6	                            mov rsi, rdx	      1785	dir.c	FUNCTION_55	CALL_4
0x4004362	          0x4889c7	                            mov rdi, rax	      1785	dir.c	FUNCTION_55	CALL_4
0x4004365	      0xe8e1beffff	                  call sym.strbuf_setlen	      1785	dir.c	FUNCTION_55	CALL_4
0x400436a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1786	dir.c	FUNCTION_55	CALL_5
0x400436e	        0x488d5013	                   lea rdx, [rax + 0x13]	      1786	dir.c	FUNCTION_55	CALL_5
0x4004372	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1786	dir.c	FUNCTION_55	CALL_5
0x4004376	          0x4889d6	                            mov rsi, rdx	      1786	dir.c	FUNCTION_55	CALL_5
0x4004379	          0x4889c7	                            mov rdi, rax	      1786	dir.c	FUNCTION_55	CALL_5
0x400437c	      0xe8d2bfffff	                  call sym.strbuf_addstr	      1786	dir.c	FUNCTION_55	CALL_5
0x4004381	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1787	dir.c	FUNCTION_55	IF_3	CALL_6
0x4004385	        0x488b4008	                mov rax, qword [rax + 8]	      1787	dir.c	FUNCTION_55	IF_3	CALL_6
0x4004389	            0x89c1	                            mov ecx, eax	      1787	dir.c	FUNCTION_55	IF_3	CALL_6
0x400438b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1787	dir.c	FUNCTION_55	IF_3	CALL_6
0x400438f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1787	dir.c	FUNCTION_55	IF_3	CALL_6
0x4004393	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1787	dir.c	FUNCTION_55	IF_3	CALL_6
0x4004397	            0x89ce	                            mov esi, ecx	      1787	dir.c	FUNCTION_55	IF_3	CALL_6
0x4004399	          0x4889c7	                            mov rdi, rax	      1787	dir.c	FUNCTION_55	IF_3	CALL_6
0x400439c	      0xe8c5f7ffff	                  call sym.simplify_away	      1787	dir.c	FUNCTION_55	IF_3	CALL_6
0x40043a1	            0x85c0	                           test eax, eax	      1787	dir.c	FUNCTION_55	IF_3	CALL_6
0x40043a3	            0x7407	                            je 0x40043ac	      1787	dir.c	FUNCTION_55	IF_3	CALL_6
0x40043a5	      0xb800000000	                              mov eax, 0	      1788	dir.c	FUNCTION_55	IF_3
0x40043aa	            0xeb39	                           jmp 0x40043e5	      1788	dir.c	FUNCTION_55	IF_3
0x40043ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      1790	dir.c	FUNCTION_55
0x40043b0	         0xfb64012	           movzx eax, byte [rax + 0x12] 	      1790	dir.c	FUNCTION_55
0x40043b4	           0xfb6c0	                           movzx eax, al	      1790	dir.c	FUNCTION_55
0x40043b7	          0x8945f4	              mov dword [rbp - 0xc], eax	      1790	dir.c	FUNCTION_55
0x40043ba	        0x448b45c4	             mov r8d, dword [rbp - 0x3c]	      1791	dir.c	FUNCTION_55	CALL_7
0x40043be	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1791	dir.c	FUNCTION_55	CALL_7
0x40043c2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1791	dir.c	FUNCTION_55	CALL_7
0x40043c6	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1791	dir.c	FUNCTION_55	CALL_7
0x40043ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1791	dir.c	FUNCTION_55	CALL_7
0x40043ce	          0xff75f8	                    push qword [rbp - 8]	      1791	dir.c	FUNCTION_55	CALL_7
0x40043d1	          0x8b7df4	              mov edi, dword [rbp - 0xc]	      1791	dir.c	FUNCTION_55	CALL_7
0x40043d4	              0x57	                                push rdi	      1791	dir.c	FUNCTION_55	CALL_7
0x40043d5	        0x4c8b4d10	              mov r9, qword [rbp + 0x10]	      1791	dir.c	FUNCTION_55	CALL_7
0x40043d9	          0x4889c7	                            mov rdi, rax	      1791	dir.c	FUNCTION_55	CALL_7
0x40043dc	      0xe80dfcffff	                 call sym.treat_one_path	      1791	dir.c	FUNCTION_55	CALL_7
0x40043e1	        0x4883c410	                           add rsp, 0x10	      1791	dir.c	FUNCTION_55	CALL_7
0x40043e5	              0xc9	                                   leave	      1792	dir.c	FUNCTION_55
0x40043e6	              0xc3	                                     ret	      1792	dir.c	FUNCTION_55
read_one_dir	SWITCH,0:ELSE,0:WHILE,0:IF,6:DO,0:CALL,11:functions,0:FOR,2	203
0x4006d19	              0x55	                                push rbp	      2754	dir.c	FUNCTION_89
0x4006d1a	          0x4889e5	                            mov rbp, rsp	      2754	dir.c	FUNCTION_89
0x4006d1d	              0x53	                                push rbx	      2754	dir.c	FUNCTION_89
0x4006d1e	    0x4881ecb80000	                           sub rsp, 0xb8	      2754	dir.c	FUNCTION_89
0x4006d25	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      2754	dir.c	FUNCTION_89
0x4006d2c	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	      2754	dir.c	FUNCTION_89
0x4006d33	    0x64488b042528	                mov rax, qword fs:[0x28]	      2754	dir.c	FUNCTION_89
0x4006d3c	        0x488945e8	             mov qword [rbp - 0x18], rax	      2754	dir.c	FUNCTION_89
0x4006d40	            0x31c0	                            xor eax, eax	      2754	dir.c	FUNCTION_89
0x4006d42	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2756	dir.c	FUNCTION_89
0x4006d49	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2756	dir.c	FUNCTION_89
0x4006d4d	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2756	dir.c	FUNCTION_89
0x4006d54	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2756	dir.c	FUNCTION_89
0x4006d5b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2756	dir.c	FUNCTION_89
0x4006d5f	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2756	dir.c	FUNCTION_89
0x4006d66	        0x488d4580	                   lea rax, [rbp - 0x80]	      2760	dir.c	FUNCTION_89	CALL_1
0x4006d6a	      0xba60000000	                           mov edx, 0x60	      2760	dir.c	FUNCTION_89	CALL_1
0x4006d6f	      0xbe00000000	                              mov esi, 0	      2760	dir.c	FUNCTION_89	CALL_1
0x4006d74	          0x4889c7	                            mov rdi, rax	      2760	dir.c	FUNCTION_89	CALL_1
0x4006d77	      0xe800000000	                          call 0x4006d7c	      2760	dir.c	FUNCTION_89	CALL_1
0x4006d7c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2762	dir.c	FUNCTION_89
0x4006d83	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2762	dir.c	FUNCTION_89
0x4006d8a	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      2763	dir.c	FUNCTION_89	CALL_2
0x4006d91	          0x4889c7	                            mov rdi, rax	      2763	dir.c	FUNCTION_89	CALL_2
0x4006d94	      0xe800000000	                          call 0x4006d99	      2763	dir.c	FUNCTION_89	CALL_2
0x4006d99	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2763	dir.c	FUNCTION_89	CALL_2
0x4006d9f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2764	dir.c	FUNCTION_89	IF_1
0x4006da6	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	      2764	dir.c	FUNCTION_89	IF_1
0x4006dad	            0x760a	                           jbe 0x4006db9	      2764	dir.c	FUNCTION_89	IF_1
0x4006daf	      0xb8ffffffff	                     mov eax, 0xffffffff	      2765	dir.c	FUNCTION_89	IF_1
0x4006db4	      0xe906030000	                           jmp 0x40070bf	      2765	dir.c	FUNCTION_89	IF_1
0x4006db9	         0xfb645c4	            movzx eax, byte [rbp - 0x3c]	      2766	dir.c	FUNCTION_89
0x4006dbd	          0x83c804	                               or eax, 4	      2766	dir.c	FUNCTION_89
0x4006dc0	          0x8845c4	               mov byte [rbp - 0x3c], al	      2766	dir.c	FUNCTION_89
0x4006dc3	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2767	dir.c	FUNCTION_89
0x4006dc9	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2767	dir.c	FUNCTION_89
0x4006dcc	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2768	dir.c	FUNCTION_89
0x4006dd2	          0x8945c0	             mov dword [rbp - 0x40], eax	      2768	dir.c	FUNCTION_89
0x4006dd5	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2769	dir.c	FUNCTION_89	IF_2
0x4006dd8	            0x85c0	                           test eax, eax	      2769	dir.c	FUNCTION_89	IF_2
0x4006dda	            0x741e	                            je 0x4006dfa	      2769	dir.c	FUNCTION_89	IF_2
0x4006ddc	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2770	dir.c	FUNCTION_89	IF_2
0x4006ddf	            0x89c0	                            mov eax, eax	      2770	dir.c	FUNCTION_89	IF_2
0x4006de1	          0x4889c6	                            mov rsi, rax	      2770	dir.c	FUNCTION_89	IF_2
0x4006de4	      0xbf08000000	                              mov edi, 8	      2770	dir.c	FUNCTION_89	IF_2
0x4006de9	      0xe8c892ffff	                        call sym.st_mult	      2770	dir.c	FUNCTION_89	IF_2
0x4006dee	          0x4889c7	                            mov rdi, rax	      2770	dir.c	FUNCTION_89	IF_2
0x4006df1	      0xe800000000	                          call 0x4006df6	      2770	dir.c	FUNCTION_89	IF_2
0x4006df6	        0x48894588	             mov qword [rbp - 0x78], rax	      2770	dir.c	FUNCTION_89	IF_2
0x4006dfa	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2771	dir.c	FUNCTION_89
0x4006e01	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2771	dir.c	FUNCTION_89
0x4006e08	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2773	dir.c	FUNCTION_89
0x4006e0f	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2773	dir.c	FUNCTION_89
0x4006e16	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      2774	dir.c	FUNCTION_89	CALL_3
0x4006e1d	          0x4889c7	                            mov rdi, rax	      2774	dir.c	FUNCTION_89	CALL_3
0x4006e20	      0xe800000000	                          call 0x4006e25	      2774	dir.c	FUNCTION_89	CALL_3
0x4006e25	          0x8945b8	             mov dword [rbp - 0x48], eax	      2774	dir.c	FUNCTION_89	CALL_3
0x4006e28	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2774	dir.c	FUNCTION_89	CALL_3
0x4006e2b	          0x8945bc	             mov dword [rbp - 0x44], eax	      2774	dir.c	FUNCTION_89	CALL_3
0x4006e2e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2775	dir.c	FUNCTION_89	IF_3
0x4006e35	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	      2775	dir.c	FUNCTION_89	IF_3
0x4006e3c	            0x760a	                           jbe 0x4006e48	      2775	dir.c	FUNCTION_89	IF_3
0x4006e3e	      0xb8ffffffff	                     mov eax, 0xffffffff	      2776	dir.c	FUNCTION_89	IF_3
0x4006e43	      0xe977020000	                           jmp 0x40070bf	      2776	dir.c	FUNCTION_89	IF_3
0x4006e48	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2777	dir.c	FUNCTION_89
0x4006e4b	            0x89c0	                            mov eax, eax	      2777	dir.c	FUNCTION_89
0x4006e4d	          0x4889c6	                            mov rsi, rax	      2777	dir.c	FUNCTION_89
0x4006e50	      0xbf08000000	                              mov edi, 8	      2777	dir.c	FUNCTION_89
0x4006e55	      0xe85c92ffff	                        call sym.st_mult	      2777	dir.c	FUNCTION_89
0x4006e5a	          0x4889c7	                            mov rdi, rax	      2777	dir.c	FUNCTION_89
0x4006e5d	      0xe800000000	                          call 0x4006e62	      2777	dir.c	FUNCTION_89
0x4006e62	        0x48894580	             mov qword [rbp - 0x80], rax	      2777	dir.c	FUNCTION_89
0x4006e66	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2778	dir.c	FUNCTION_89
0x4006e6d	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2778	dir.c	FUNCTION_89
0x4006e74	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2780	dir.c	FUNCTION_89	CALL_4
0x4006e7b	          0x4889c7	                            mov rdi, rax	      2780	dir.c	FUNCTION_89	CALL_4
0x4006e7e	      0xe800000000	                          call 0x4006e83	      2780	dir.c	FUNCTION_89	CALL_4
0x4006e83	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2780	dir.c	FUNCTION_89	CALL_4
0x4006e89	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2781	dir.c	FUNCTION_89
0x4006e8f	            0x4898	                                    cdqe	      2781	dir.c	FUNCTION_89
0x4006e91	        0x488d5001	                      lea rdx, [rax + 1]	      2781	dir.c	FUNCTION_89
0x4006e95	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2781	dir.c	FUNCTION_89
0x4006e9c	          0x4801d0	                            add rax, rdx	      2781	dir.c	FUNCTION_89
0x4006e9f	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2781	dir.c	FUNCTION_89
0x4006ea6	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2782	dir.c	FUNCTION_89	IF_4
0x4006ead	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2782	dir.c	FUNCTION_89	IF_4
0x4006eb1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2782	dir.c	FUNCTION_89	IF_4
0x4006eb8	          0x4839c2	                            cmp rdx, rax	      2782	dir.c	FUNCTION_89	IF_4
0x4006ebb	            0x730a	                           jae 0x4006ec7	      2782	dir.c	FUNCTION_89	IF_4
0x4006ebd	      0xb8ffffffff	                     mov eax, 0xffffffff	      2783	dir.c	FUNCTION_89	IF_4
0x4006ec2	      0xe9f8010000	                           jmp 0x40070bf	      2783	dir.c	FUNCTION_89	IF_4
0x4006ec7	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2784	dir.c	FUNCTION_89	CALL_6
0x4006ecd	            0x4898	                                    cdqe	      2784	dir.c	FUNCTION_89	CALL_6
0x4006ecf	          0x4889c6	                            mov rsi, rax	      2784	dir.c	FUNCTION_89	CALL_6
0x4006ed2	      0xbf60000000	                           mov edi, 0x60	      2784	dir.c	FUNCTION_89	CALL_6
0x4006ed7	      0xe89691ffff	                         call sym.st_add	      2784	dir.c	FUNCTION_89	CALL_6
0x4006edc	          0x4889c7	                            mov rdi, rax	      2784	dir.c	FUNCTION_89	CALL_6
0x4006edf	      0xe800000000	                          call 0x4006ee4	      2784	dir.c	FUNCTION_89	CALL_6
0x4006ee4	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2784	dir.c	FUNCTION_89	CALL_6
0x4006eeb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2784	dir.c	FUNCTION_89	CALL_6
0x4006ef2	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      2784	dir.c	FUNCTION_89	CALL_6
0x4006ef9	          0x488910	                    mov qword [rax], rdx	      2784	dir.c	FUNCTION_89	CALL_6
0x4006efc	        0x488d4d80	                   lea rcx, [rbp - 0x80]	      2785	dir.c	FUNCTION_89	CALL_7
0x4006f00	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2785	dir.c	FUNCTION_89	CALL_7
0x4006f07	      0xba60000000	                           mov edx, 0x60	      2785	dir.c	FUNCTION_89	CALL_7
0x4006f0c	          0x4889ce	                            mov rsi, rcx	      2785	dir.c	FUNCTION_89	CALL_7
0x4006f0f	          0x4889c7	                            mov rdi, rax	      2785	dir.c	FUNCTION_89	CALL_7
0x4006f12	      0xe800000000	                          call 0x4006f17	      2785	dir.c	FUNCTION_89	CALL_7
0x4006f17	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2786	dir.c	FUNCTION_89	CALL_8
0x4006f1d	          0x83c001	                              add eax, 1	      2786	dir.c	FUNCTION_89	CALL_8
0x4006f20	          0x4863d0	                         movsxd rdx, eax	      2786	dir.c	FUNCTION_89	CALL_8
0x4006f23	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2786	dir.c	FUNCTION_89	CALL_8
0x4006f2a	        0x488d4859	                   lea rcx, [rax + 0x59]	      2786	dir.c	FUNCTION_89	CALL_8
0x4006f2e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2786	dir.c	FUNCTION_89	CALL_8
0x4006f35	          0x4889c6	                            mov rsi, rax	      2786	dir.c	FUNCTION_89	CALL_8
0x4006f38	          0x4889cf	                            mov rdi, rcx	      2786	dir.c	FUNCTION_89	CALL_8
0x4006f3b	      0xe800000000	                          call 0x4006f40	      2786	dir.c	FUNCTION_89	CALL_8
0x4006f40	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2787	dir.c	FUNCTION_89
0x4006f47	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2787	dir.c	FUNCTION_89
0x4006f4e	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      2789	dir.c	FUNCTION_89	FOR_1
0x4006f58	      0xe996000000	                           jmp 0x4006ff3	      2789	dir.c	FUNCTION_89	FOR_1
0x4006f5d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x4006f64	          0x4889c7	                            mov rdi, rax	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x4006f67	      0xe800000000	                          call 0x4006f6c	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x4006f6c	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x4006f72	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2791	dir.c	FUNCTION_89	FOR_1
0x4006f78	            0x4898	                                    cdqe	      2791	dir.c	FUNCTION_89	FOR_1
0x4006f7a	        0x488d5001	                      lea rdx, [rax + 1]	      2791	dir.c	FUNCTION_89	FOR_1
0x4006f7e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2791	dir.c	FUNCTION_89	FOR_1
0x4006f85	          0x4801d0	                            add rax, rdx	      2791	dir.c	FUNCTION_89	FOR_1
0x4006f88	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2791	dir.c	FUNCTION_89	FOR_1
0x4006f8f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2792	dir.c	FUNCTION_89	FOR_1	IF_5
0x4006f96	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2792	dir.c	FUNCTION_89	FOR_1	IF_5
0x4006f9a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2792	dir.c	FUNCTION_89	FOR_1	IF_5
0x4006fa1	          0x4839c2	                            cmp rdx, rax	      2792	dir.c	FUNCTION_89	FOR_1	IF_5
0x4006fa4	            0x730a	                           jae 0x4006fb0	      2792	dir.c	FUNCTION_89	FOR_1	IF_5
0x4006fa6	      0xb8ffffffff	                     mov eax, 0xffffffff	      2793	dir.c	FUNCTION_89	FOR_1	IF_5
0x4006fab	      0xe90f010000	                           jmp 0x40070bf	      2793	dir.c	FUNCTION_89	FOR_1	IF_5
0x4006fb0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4006fb7	        0x488b4008	                mov rax, qword [rax + 8]	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4006fbb	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4006fc1	          0x4863d2	                         movsxd rdx, edx	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4006fc4	        0x48c1e203	                              shl rdx, 3	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4006fc8	        0x488d1c10	                    lea rbx, [rax + rdx]	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4006fcc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4006fd3	          0x4889c7	                            mov rdi, rax	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4006fd6	      0xe800000000	                          call 0x4006fdb	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4006fdb	          0x488903	                    mov qword [rbx], rax	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4006fde	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2795	dir.c	FUNCTION_89	FOR_1
0x4006fe5	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2795	dir.c	FUNCTION_89	FOR_1
0x4006fec	    0x838554ffffff	               add dword [rbp - 0xac], 1	      2789	dir.c	FUNCTION_89	FOR_1
0x4006ff3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2789	dir.c	FUNCTION_89	FOR_1
0x4006ffa	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2789	dir.c	FUNCTION_89	FOR_1
0x4006ffd	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2789	dir.c	FUNCTION_89	FOR_1
0x4007003	            0x39c2	                            cmp edx, eax	      2789	dir.c	FUNCTION_89	FOR_1
0x4007005	     0xf8752ffffff	                            ja 0x4006f5d	      2789	dir.c	FUNCTION_89	FOR_1
0x400700b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2798	dir.c	FUNCTION_89
0x4007012	        0x488b7008	                mov rsi, qword [rax + 8]	      2798	dir.c	FUNCTION_89
0x4007016	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2798	dir.c	FUNCTION_89
0x400701d	            0x8b00	                    mov eax, dword [rax]	      2798	dir.c	FUNCTION_89
0x400701f	          0x8d4801	                      lea ecx, [rax + 1]	      2798	dir.c	FUNCTION_89
0x4007022	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      2798	dir.c	FUNCTION_89
0x4007029	            0x890a	                    mov dword [rdx], ecx	      2798	dir.c	FUNCTION_89
0x400702b	            0x4898	                                    cdqe	      2798	dir.c	FUNCTION_89
0x400702d	        0x48c1e003	                              shl rax, 3	      2798	dir.c	FUNCTION_89
0x4007031	        0x488d1406	                    lea rdx, [rsi + rax]	      2798	dir.c	FUNCTION_89
0x4007035	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2798	dir.c	FUNCTION_89
0x400703c	          0x488902	                    mov qword [rdx], rax	      2798	dir.c	FUNCTION_89
0x400703f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2799	dir.c	FUNCTION_89
0x4007046	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      2799	dir.c	FUNCTION_89
0x400704d	        0x48895028	             mov qword [rax + 0x28], rdx	      2799	dir.c	FUNCTION_89
0x4007051	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      2801	dir.c	FUNCTION_89	FOR_2
0x400705b	            0xeb49	                           jmp 0x40070a6	      2801	dir.c	FUNCTION_89	FOR_2
0x400705d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4007064	          0x488b00	                    mov rax, qword [rax]	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4007067	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x400706d	          0x4863d2	                         movsxd rdx, edx	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4007070	        0x48c1e203	                              shl rdx, 3	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4007074	          0x4801c2	                            add rdx, rax	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4007077	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x400707e	          0x4889c6	                            mov rsi, rax	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4007081	          0x4889d7	                            mov rdi, rdx	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4007084	      0xe890fcffff	                   call sym.read_one_dir	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4007089	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x400708f	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      2803	dir.c	FUNCTION_89	FOR_2	IF_6
0x4007096	            0x7907	                           jns 0x400709f	      2803	dir.c	FUNCTION_89	FOR_2	IF_6
0x4007098	      0xb8ffffffff	                     mov eax, 0xffffffff	      2804	dir.c	FUNCTION_89	FOR_2	IF_6
0x400709d	            0xeb20	                           jmp 0x40070bf	      2804	dir.c	FUNCTION_89	FOR_2	IF_6
0x400709f	    0x838554ffffff	               add dword [rbp - 0xac], 1	      2801	dir.c	FUNCTION_89	FOR_2
0x40070a6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2801	dir.c	FUNCTION_89	FOR_2
0x40070ad	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2801	dir.c	FUNCTION_89	FOR_2
0x40070b0	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2801	dir.c	FUNCTION_89	FOR_2
0x40070b6	            0x39c2	                            cmp edx, eax	      2801	dir.c	FUNCTION_89	FOR_2
0x40070b8	            0x77a3	                            ja 0x400705d	      2801	dir.c	FUNCTION_89	FOR_2
0x40070ba	      0xb800000000	                              mov eax, 0	      2806	dir.c	FUNCTION_89
0x40070bf	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2807	dir.c	FUNCTION_89
0x40070c3	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2807	dir.c	FUNCTION_89
0x40070cc	            0x7405	                            je 0x40070d3	      2807	dir.c	FUNCTION_89
0x40070ce	      0xe800000000	                          call 0x40070d3	      2807	dir.c	FUNCTION_89
0x40070d3	    0x4881c4b80000	                           add rsp, 0xb8	      2807	dir.c	FUNCTION_89
0x40070da	              0x5b	                                 pop rbx	      2807	dir.c	FUNCTION_89
0x40070db	              0x5d	                                 pop rbp	      2807	dir.c	FUNCTION_89
0x40070dc	              0xc3	                                     ret	      2807	dir.c	FUNCTION_89
no_wildcard	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	16
0x4001731	              0x55	                                push rbp	       586	dir.c	FUNCTION_18
0x4001732	          0x4889e5	                            mov rbp, rsp	       586	dir.c	FUNCTION_18
0x4001735	        0x4883ec08	                              sub rsp, 8	       586	dir.c	FUNCTION_18
0x4001739	        0x48897df8	                mov qword [rbp - 8], rdi	       586	dir.c	FUNCTION_18
0x400173d	        0x488b45f8	                mov rax, qword [rbp - 8]	       587	dir.c	FUNCTION_18	CALL_1
0x4001741	          0x4889c7	                            mov rdi, rax	       587	dir.c	FUNCTION_18	CALL_1
0x4001744	      0xe800000000	                          call 0x4001749	       587	dir.c	FUNCTION_18	CALL_1
0x4001749	          0x4863d0	                         movsxd rdx, eax	       587	dir.c	FUNCTION_18	CALL_1
0x400174c	        0x488b45f8	                mov rax, qword [rbp - 8]	       587	dir.c	FUNCTION_18	CALL_1
0x4001750	          0x4801d0	                            add rax, rdx	       587	dir.c	FUNCTION_18	CALL_1
0x4001753	           0xfb600	                   movzx eax, byte [rax]	       587	dir.c	FUNCTION_18	CALL_1
0x4001756	            0x84c0	                             test al, al	       587	dir.c	FUNCTION_18	CALL_1
0x4001758	           0xf94c0	                                 sete al	       587	dir.c	FUNCTION_18	CALL_1
0x400175b	           0xfb6c0	                           movzx eax, al	       587	dir.c	FUNCTION_18	CALL_1
0x400175e	              0xc9	                                   leave	       588	dir.c	FUNCTION_18
0x400175f	              0xc3	                                     ret	       588	dir.c	FUNCTION_18
stat_data_from_disk	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	77
0x4006c21	              0x55	                                push rbp	      2739	dir.c	FUNCTION_88
0x4006c22	          0x4889e5	                            mov rbp, rsp	      2739	dir.c	FUNCTION_88
0x4006c25	        0x4883ec10	                           sub rsp, 0x10	      2739	dir.c	FUNCTION_88
0x4006c29	        0x48897df8	                mov qword [rbp - 8], rdi	      2739	dir.c	FUNCTION_88
0x4006c2d	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2739	dir.c	FUNCTION_88
0x4006c31	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2740	dir.c	FUNCTION_88	CALL_1
0x4006c35	        0x488b45f8	                mov rax, qword [rbp - 8]	      2740	dir.c	FUNCTION_88	CALL_1
0x4006c39	      0xba24000000	                           mov edx, 0x24	      2740	dir.c	FUNCTION_88	CALL_1
0x4006c3e	          0x4889ce	                            mov rsi, rcx	      2740	dir.c	FUNCTION_88	CALL_1
0x4006c41	          0x4889c7	                            mov rdi, rax	      2740	dir.c	FUNCTION_88	CALL_1
0x4006c44	      0xe800000000	                          call 0x4006c49	      2740	dir.c	FUNCTION_88	CALL_1
0x4006c49	        0x488b45f8	                mov rax, qword [rbp - 8]	      2741	dir.c	FUNCTION_88
0x4006c4d	            0x8b00	                    mov eax, dword [rax]	      2741	dir.c	FUNCTION_88
0x4006c4f	            0x89c7	                            mov edi, eax	      2741	dir.c	FUNCTION_88
0x4006c51	      0xe8fd93ffff	                    call sym.git_bswap32	      2741	dir.c	FUNCTION_88
0x4006c56	            0x89c2	                            mov edx, eax	      2741	dir.c	FUNCTION_88
0x4006c58	        0x488b45f8	                mov rax, qword [rbp - 8]	      2741	dir.c	FUNCTION_88
0x4006c5c	            0x8910	                    mov dword [rax], edx	      2741	dir.c	FUNCTION_88
0x4006c5e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2742	dir.c	FUNCTION_88
0x4006c62	          0x8b4004	                mov eax, dword [rax + 4]	      2742	dir.c	FUNCTION_88
0x4006c65	            0x89c7	                            mov edi, eax	      2742	dir.c	FUNCTION_88
0x4006c67	      0xe8e793ffff	                    call sym.git_bswap32	      2742	dir.c	FUNCTION_88
0x4006c6c	            0x89c2	                            mov edx, eax	      2742	dir.c	FUNCTION_88
0x4006c6e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2742	dir.c	FUNCTION_88
0x4006c72	          0x895004	                mov dword [rax + 4], edx	      2742	dir.c	FUNCTION_88
0x4006c75	        0x488b45f8	                mov rax, qword [rbp - 8]	      2743	dir.c	FUNCTION_88
0x4006c79	          0x8b4008	                mov eax, dword [rax + 8]	      2743	dir.c	FUNCTION_88
0x4006c7c	            0x89c7	                            mov edi, eax	      2743	dir.c	FUNCTION_88
0x4006c7e	      0xe8d093ffff	                    call sym.git_bswap32	      2743	dir.c	FUNCTION_88
0x4006c83	            0x89c2	                            mov edx, eax	      2743	dir.c	FUNCTION_88
0x4006c85	        0x488b45f8	                mov rax, qword [rbp - 8]	      2743	dir.c	FUNCTION_88
0x4006c89	          0x895008	                mov dword [rax + 8], edx	      2743	dir.c	FUNCTION_88
0x4006c8c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2744	dir.c	FUNCTION_88
0x4006c90	          0x8b400c	              mov eax, dword [rax + 0xc]	      2744	dir.c	FUNCTION_88
0x4006c93	            0x89c7	                            mov edi, eax	      2744	dir.c	FUNCTION_88
0x4006c95	      0xe8b993ffff	                    call sym.git_bswap32	      2744	dir.c	FUNCTION_88
0x4006c9a	            0x89c2	                            mov edx, eax	      2744	dir.c	FUNCTION_88
0x4006c9c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2744	dir.c	FUNCTION_88
0x4006ca0	          0x89500c	              mov dword [rax + 0xc], edx	      2744	dir.c	FUNCTION_88
0x4006ca3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2745	dir.c	FUNCTION_88
0x4006ca7	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2745	dir.c	FUNCTION_88
0x4006caa	            0x89c7	                            mov edi, eax	      2745	dir.c	FUNCTION_88
0x4006cac	      0xe8a293ffff	                    call sym.git_bswap32	      2745	dir.c	FUNCTION_88
0x4006cb1	            0x89c2	                            mov edx, eax	      2745	dir.c	FUNCTION_88
0x4006cb3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2745	dir.c	FUNCTION_88
0x4006cb7	          0x895010	             mov dword [rax + 0x10], edx	      2745	dir.c	FUNCTION_88
0x4006cba	        0x488b45f8	                mov rax, qword [rbp - 8]	      2746	dir.c	FUNCTION_88
0x4006cbe	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2746	dir.c	FUNCTION_88
0x4006cc1	            0x89c7	                            mov edi, eax	      2746	dir.c	FUNCTION_88
0x4006cc3	      0xe88b93ffff	                    call sym.git_bswap32	      2746	dir.c	FUNCTION_88
0x4006cc8	            0x89c2	                            mov edx, eax	      2746	dir.c	FUNCTION_88
0x4006cca	        0x488b45f8	                mov rax, qword [rbp - 8]	      2746	dir.c	FUNCTION_88
0x4006cce	          0x895014	             mov dword [rax + 0x14], edx	      2746	dir.c	FUNCTION_88
0x4006cd1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2747	dir.c	FUNCTION_88
0x4006cd5	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2747	dir.c	FUNCTION_88
0x4006cd8	            0x89c7	                            mov edi, eax	      2747	dir.c	FUNCTION_88
0x4006cda	      0xe87493ffff	                    call sym.git_bswap32	      2747	dir.c	FUNCTION_88
0x4006cdf	            0x89c2	                            mov edx, eax	      2747	dir.c	FUNCTION_88
0x4006ce1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2747	dir.c	FUNCTION_88
0x4006ce5	          0x895018	             mov dword [rax + 0x18], edx	      2747	dir.c	FUNCTION_88
0x4006ce8	        0x488b45f8	                mov rax, qword [rbp - 8]	      2748	dir.c	FUNCTION_88
0x4006cec	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      2748	dir.c	FUNCTION_88
0x4006cef	            0x89c7	                            mov edi, eax	      2748	dir.c	FUNCTION_88
0x4006cf1	      0xe85d93ffff	                    call sym.git_bswap32	      2748	dir.c	FUNCTION_88
0x4006cf6	            0x89c2	                            mov edx, eax	      2748	dir.c	FUNCTION_88
0x4006cf8	        0x488b45f8	                mov rax, qword [rbp - 8]	      2748	dir.c	FUNCTION_88
0x4006cfc	          0x89501c	             mov dword [rax + 0x1c], edx	      2748	dir.c	FUNCTION_88
0x4006cff	        0x488b45f8	                mov rax, qword [rbp - 8]	      2749	dir.c	FUNCTION_88
0x4006d03	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2749	dir.c	FUNCTION_88
0x4006d06	            0x89c7	                            mov edi, eax	      2749	dir.c	FUNCTION_88
0x4006d08	      0xe84693ffff	                    call sym.git_bswap32	      2749	dir.c	FUNCTION_88
0x4006d0d	            0x89c2	                            mov edx, eax	      2749	dir.c	FUNCTION_88
0x4006d0f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2749	dir.c	FUNCTION_88
0x4006d13	          0x895020	             mov dword [rax + 0x20], edx	      2749	dir.c	FUNCTION_88
0x4006d16	              0x90	                                     nop	      2750	dir.c	FUNCTION_88
0x4006d17	              0xc9	                                   leave	      2750	dir.c	FUNCTION_88
0x4006d18	              0xc3	                                     ret	      2750	dir.c	FUNCTION_88
count_slashes	SWITCH,0:ELSE,0:WHILE,1:IF,1:DO,0:CALL,0:functions,0:FOR,0	19
0x400067b	              0x55	                                push rbp	        59	dir.c	FUNCTION_1
0x400067c	          0x4889e5	                            mov rbp, rsp	        59	dir.c	FUNCTION_1
0x400067f	        0x48897de8	             mov qword [rbp - 0x18], rdi	        59	dir.c	FUNCTION_1
0x4000683	    0xc745fc000000	                  mov dword [rbp - 4], 0	        60	dir.c	FUNCTION_1
0x400068a	            0xeb17	                           jmp 0x40006a3	        61	dir.c	FUNCTION_1	WHILE_1
0x400068c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        62	dir.c	FUNCTION_1	WHILE_1	IF_1
0x4000690	        0x488d5001	                      lea rdx, [rax + 1]	        62	dir.c	FUNCTION_1	WHILE_1	IF_1
0x4000694	        0x488955e8	             mov qword [rbp - 0x18], rdx	        62	dir.c	FUNCTION_1	WHILE_1	IF_1
0x4000698	           0xfb600	                   movzx eax, byte [rax]	        62	dir.c	FUNCTION_1	WHILE_1	IF_1
0x400069b	            0x3c2f	                            cmp al, 0x2f	        62	dir.c	FUNCTION_1	WHILE_1	IF_1
0x400069d	            0x7504	                           jne 0x40006a3	        62	dir.c	FUNCTION_1	WHILE_1	IF_1
0x400069f	        0x8345fc01	                  add dword [rbp - 4], 1	        63	dir.c	FUNCTION_1	WHILE_1	IF_1
0x40006a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        61	dir.c	FUNCTION_1	WHILE_1
0x40006a7	           0xfb600	                   movzx eax, byte [rax]	        61	dir.c	FUNCTION_1	WHILE_1
0x40006aa	            0x84c0	                             test al, al	        61	dir.c	FUNCTION_1	WHILE_1
0x40006ac	            0x75de	                           jne 0x400068c	        61	dir.c	FUNCTION_1	WHILE_1
0x40006ae	          0x8b45fc	                mov eax, dword [rbp - 4]	        64	dir.c	FUNCTION_1
0x40006b1	              0x5d	                                 pop rbp	        65	dir.c	FUNCTION_1
0x40006b2	              0xc3	                                     ret	        65	dir.c	FUNCTION_1
parse_exclude_pattern	SWITCH,0:ELSE,0:WHILE,0:IF,6:DO,0:CALL,3:functions,0:FOR,1	107
0x4001760	              0x55	                                push rbp	       594	dir.c	FUNCTION_19
0x4001761	          0x4889e5	                            mov rbp, rsp	       594	dir.c	FUNCTION_19
0x4001764	        0x4883ec40	                           sub rsp, 0x40	       594	dir.c	FUNCTION_19
0x4001768	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       594	dir.c	FUNCTION_19
0x400176c	        0x488975d0	             mov qword [rbp - 0x30], rsi	       594	dir.c	FUNCTION_19
0x4001770	        0x488955c8	             mov qword [rbp - 0x38], rdx	       594	dir.c	FUNCTION_19
0x4001774	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       594	dir.c	FUNCTION_19
0x4001778	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       595	dir.c	FUNCTION_19
0x400177c	          0x488b00	                    mov rax, qword [rax]	       595	dir.c	FUNCTION_19
0x400177f	        0x488945e8	             mov qword [rbp - 0x18], rax	       595	dir.c	FUNCTION_19
0x4001783	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       598	dir.c	FUNCTION_19
0x4001787	    0xc70000000000	                      mov dword [rax], 0	       598	dir.c	FUNCTION_19
0x400178d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       599	dir.c	FUNCTION_19	IF_1
0x4001791	           0xfb600	                   movzx eax, byte [rax]	       599	dir.c	FUNCTION_19	IF_1
0x4001794	            0x3c21	                            cmp al, 0x21	       599	dir.c	FUNCTION_19	IF_1
0x4001796	            0x7516	                           jne 0x40017ae	       599	dir.c	FUNCTION_19	IF_1
0x4001798	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       600	dir.c	FUNCTION_19	IF_1
0x400179c	            0x8b00	                    mov eax, dword [rax]	       600	dir.c	FUNCTION_19	IF_1
0x400179e	          0x83c810	                            or eax, 0x10	       600	dir.c	FUNCTION_19	IF_1
0x40017a1	            0x89c2	                            mov edx, eax	       600	dir.c	FUNCTION_19	IF_1
0x40017a3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       600	dir.c	FUNCTION_19	IF_1
0x40017a7	            0x8910	                    mov dword [rax], edx	       600	dir.c	FUNCTION_19	IF_1
0x40017a9	      0x488345e801	               add qword [rbp - 0x18], 1	       601	dir.c	FUNCTION_19	IF_1
0x40017ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       603	dir.c	FUNCTION_19	CALL_1
0x40017b2	          0x4889c7	                            mov rdi, rax	       603	dir.c	FUNCTION_19	CALL_1
0x40017b5	      0xe800000000	                          call 0x40017ba	       603	dir.c	FUNCTION_19	CALL_1
0x40017ba	        0x488945f8	                mov qword [rbp - 8], rax	       603	dir.c	FUNCTION_19	CALL_1
0x40017be	      0x48837df800	                  cmp qword [rbp - 8], 0	       604	dir.c	FUNCTION_19	IF_2
0x40017c3	            0x742c	                            je 0x40017f1	       604	dir.c	FUNCTION_19	IF_2
0x40017c5	        0x488b45f8	                mov rax, qword [rbp - 8]	       604	dir.c	FUNCTION_19	IF_2
0x40017c9	        0x488d50ff	                      lea rdx, [rax - 1]	       604	dir.c	FUNCTION_19	IF_2
0x40017cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       604	dir.c	FUNCTION_19	IF_2
0x40017d1	          0x4801d0	                            add rax, rdx	       604	dir.c	FUNCTION_19	IF_2
0x40017d4	           0xfb600	                   movzx eax, byte [rax]	       604	dir.c	FUNCTION_19	IF_2
0x40017d7	            0x3c2f	                            cmp al, 0x2f	       604	dir.c	FUNCTION_19	IF_2
0x40017d9	            0x7516	                           jne 0x40017f1	       604	dir.c	FUNCTION_19	IF_2
0x40017db	      0x48836df801	                  sub qword [rbp - 8], 1	       605	dir.c	FUNCTION_19	IF_2
0x40017e0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       606	dir.c	FUNCTION_19	IF_2
0x40017e4	            0x8b00	                    mov eax, dword [rax]	       606	dir.c	FUNCTION_19	IF_2
0x40017e6	          0x83c808	                               or eax, 8	       606	dir.c	FUNCTION_19	IF_2
0x40017e9	            0x89c2	                            mov edx, eax	       606	dir.c	FUNCTION_19	IF_2
0x40017eb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       606	dir.c	FUNCTION_19	IF_2
0x40017ef	            0x8910	                    mov dword [rax], edx	       606	dir.c	FUNCTION_19	IF_2
0x40017f1	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       608	dir.c	FUNCTION_19	FOR_1
0x40017f9	            0xeb17	                           jmp 0x4001812	       608	dir.c	FUNCTION_19	FOR_1
0x40017fb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x40017ff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4001803	          0x4801d0	                            add rax, rdx	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4001806	           0xfb600	                   movzx eax, byte [rax]	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4001809	            0x3c2f	                            cmp al, 0x2f	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x400180b	            0x7411	                            je 0x400181e	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x400180d	      0x488345f001	               add qword [rbp - 0x10], 1	       608	dir.c	FUNCTION_19	FOR_1
0x4001812	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       608	dir.c	FUNCTION_19	FOR_1
0x4001816	        0x483b45f8	                cmp rax, qword [rbp - 8]	       608	dir.c	FUNCTION_19	FOR_1
0x400181a	            0x72df	                            jb 0x40017fb	       608	dir.c	FUNCTION_19	FOR_1
0x400181c	            0xeb01	                           jmp 0x400181f	       608	dir.c	FUNCTION_19	FOR_1
0x400181e	              0x90	                                     nop	       610	dir.c	FUNCTION_19	FOR_1	IF_3
0x400181f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       612	dir.c	FUNCTION_19	IF_4
0x4001823	        0x483b45f8	                cmp rax, qword [rbp - 8]	       612	dir.c	FUNCTION_19	IF_4
0x4001827	            0x7511	                           jne 0x400183a	       612	dir.c	FUNCTION_19	IF_4
0x4001829	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       613	dir.c	FUNCTION_19	IF_4
0x400182d	            0x8b00	                    mov eax, dword [rax]	       613	dir.c	FUNCTION_19	IF_4
0x400182f	          0x83c801	                               or eax, 1	       613	dir.c	FUNCTION_19	IF_4
0x4001832	            0x89c2	                            mov edx, eax	       613	dir.c	FUNCTION_19	IF_4
0x4001834	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       613	dir.c	FUNCTION_19	IF_4
0x4001838	            0x8910	                    mov dword [rax], edx	       613	dir.c	FUNCTION_19	IF_4
0x400183a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       614	dir.c	FUNCTION_19	CALL_2
0x400183e	          0x4889c7	                            mov rdi, rax	       614	dir.c	FUNCTION_19	CALL_2
0x4001841	      0xe800000000	                          call 0x4001846	       614	dir.c	FUNCTION_19	CALL_2
0x4001846	            0x89c2	                            mov edx, eax	       614	dir.c	FUNCTION_19	CALL_2
0x4001848	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       614	dir.c	FUNCTION_19	CALL_2
0x400184c	            0x8910	                    mov dword [rax], edx	       614	dir.c	FUNCTION_19	CALL_2
0x400184e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       620	dir.c	FUNCTION_19	IF_5
0x4001852	            0x8b00	                    mov eax, dword [rax]	       620	dir.c	FUNCTION_19	IF_5
0x4001854	            0x4898	                                    cdqe	       620	dir.c	FUNCTION_19	IF_5
0x4001856	        0x483b45f8	                cmp rax, qword [rbp - 8]	       620	dir.c	FUNCTION_19	IF_5
0x400185a	            0x760c	                           jbe 0x4001868	       620	dir.c	FUNCTION_19	IF_5
0x400185c	        0x488b45f8	                mov rax, qword [rbp - 8]	       621	dir.c	FUNCTION_19	IF_5
0x4001860	            0x89c2	                            mov edx, eax	       621	dir.c	FUNCTION_19	IF_5
0x4001862	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       621	dir.c	FUNCTION_19	IF_5
0x4001866	            0x8910	                    mov dword [rax], edx	       621	dir.c	FUNCTION_19	IF_5
0x4001868	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x400186c	           0xfb600	                   movzx eax, byte [rax]	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x400186f	            0x3c2a	                            cmp al, 0x2a	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x4001871	            0x7525	                           jne 0x4001898	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x4001873	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x4001877	        0x4883c001	                              add rax, 1	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x400187b	          0x4889c7	                            mov rdi, rax	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x400187e	      0xe800000000	                          call 0x4001883	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x4001883	            0x85c0	                           test eax, eax	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x4001885	            0x7411	                            je 0x4001898	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x4001887	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       623	dir.c	FUNCTION_19	IF_6
0x400188b	            0x8b00	                    mov eax, dword [rax]	       623	dir.c	FUNCTION_19	IF_6
0x400188d	          0x83c804	                               or eax, 4	       623	dir.c	FUNCTION_19	IF_6
0x4001890	            0x89c2	                            mov edx, eax	       623	dir.c	FUNCTION_19	IF_6
0x4001892	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       623	dir.c	FUNCTION_19	IF_6
0x4001896	            0x8910	                    mov dword [rax], edx	       623	dir.c	FUNCTION_19	IF_6
0x4001898	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       624	dir.c	FUNCTION_19
0x400189c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       624	dir.c	FUNCTION_19
0x40018a0	          0x488910	                    mov qword [rax], rdx	       624	dir.c	FUNCTION_19
0x40018a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       625	dir.c	FUNCTION_19
0x40018a7	            0x89c2	                            mov edx, eax	       625	dir.c	FUNCTION_19
0x40018a9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       625	dir.c	FUNCTION_19
0x40018ad	            0x8910	                    mov dword [rax], edx	       625	dir.c	FUNCTION_19
0x40018af	              0x90	                                     nop	       626	dir.c	FUNCTION_19
0x40018b0	              0xc9	                                   leave	       626	dir.c	FUNCTION_19
0x40018b1	              0xc3	                                     ret	       626	dir.c	FUNCTION_19
xsize_t	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,1:functions,0:FOR,0	15
0x4000153	              0x55	                                push rbp	       928	git-compat-util.h	FUNCTION_122
0x4000154	          0x4889e5	                            mov rbp, rsp	       928	git-compat-util.h	FUNCTION_122
0x4000157	        0x4883ec20	                           sub rsp, 0x20	       928	git-compat-util.h	FUNCTION_122
0x400015b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       928	git-compat-util.h	FUNCTION_122
0x400015f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       929	git-compat-util.h	FUNCTION_122
0x4000163	        0x488945f8	                mov qword [rbp - 8], rax	       929	git-compat-util.h	FUNCTION_122
0x4000167	        0x488b45f8	                mov rax, qword [rbp - 8]	       931	git-compat-util.h	FUNCTION_122	IF_1
0x400016b	        0x483945e8	            cmp qword [rbp - 0x18], rax 	       931	git-compat-util.h	FUNCTION_122	IF_1
0x400016f	            0x740f	                            je 0x4000180	       931	git-compat-util.h	FUNCTION_122	IF_1
0x4000171	      0xbf00000000	                              mov edi, 0	       932	git-compat-util.h	FUNCTION_122	CALL_1
0x4000176	      0xb800000000	                              mov eax, 0	       932	git-compat-util.h	FUNCTION_122	CALL_1
0x400017b	      0xe800000000	                          call 0x4000180	       932	git-compat-util.h	FUNCTION_122	CALL_1
0x4000180	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	git-compat-util.h	FUNCTION_122
0x4000184	              0xc9	                                   leave	       934	git-compat-util.h	FUNCTION_122
0x4000185	              0xc3	                                     ret	       934	git-compat-util.h	FUNCTION_122
read_stat	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,1:functions,0:FOR,0	45
0x400711c	              0x55	                                push rbp	      2817	dir.c	FUNCTION_91
0x400711d	          0x4889e5	                            mov rbp, rsp	      2817	dir.c	FUNCTION_91
0x4007120	        0x4883ec20	                           sub rsp, 0x20	      2817	dir.c	FUNCTION_91
0x4007124	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2817	dir.c	FUNCTION_91
0x4007128	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2817	dir.c	FUNCTION_91
0x400712c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2818	dir.c	FUNCTION_91
0x4007130	        0x488945f0	             mov qword [rbp - 0x10], rax	      2818	dir.c	FUNCTION_91
0x4007134	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2819	dir.c	FUNCTION_91
0x4007138	        0x488b4008	                mov rax, qword [rax + 8]	      2819	dir.c	FUNCTION_91
0x400713c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2819	dir.c	FUNCTION_91
0x4007140	        0x48c1e203	                              shl rdx, 3	      2819	dir.c	FUNCTION_91
0x4007144	          0x4801d0	                            add rax, rdx	      2819	dir.c	FUNCTION_91
0x4007147	          0x488b00	                    mov rax, qword [rax]	      2819	dir.c	FUNCTION_91
0x400714a	        0x488945f8	                mov qword [rbp - 8], rax	      2819	dir.c	FUNCTION_91
0x400714e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2820	dir.c	FUNCTION_91	IF_1
0x4007152	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2820	dir.c	FUNCTION_91	IF_1
0x4007156	        0x488d5024	                   lea rdx, [rax + 0x24]	      2820	dir.c	FUNCTION_91	IF_1
0x400715a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2820	dir.c	FUNCTION_91	IF_1
0x400715e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2820	dir.c	FUNCTION_91	IF_1
0x4007162	          0x4839c2	                            cmp rdx, rax	      2820	dir.c	FUNCTION_91	IF_1
0x4007165	            0x7616	                           jbe 0x400717d	      2820	dir.c	FUNCTION_91	IF_1
0x4007167	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2821	dir.c	FUNCTION_91	IF_1
0x400716b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2821	dir.c	FUNCTION_91	IF_1
0x400716f	        0x488d5001	                      lea rdx, [rax + 1]	      2821	dir.c	FUNCTION_91	IF_1
0x4007173	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2821	dir.c	FUNCTION_91	IF_1
0x4007177	        0x48895028	             mov qword [rax + 0x28], rdx	      2821	dir.c	FUNCTION_91	IF_1
0x400717b	            0xeb3d	                           jmp 0x40071ba	      2822	dir.c	FUNCTION_91	IF_1
0x400717d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2824	dir.c	FUNCTION_91	CALL_1
0x4007181	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2824	dir.c	FUNCTION_91	CALL_1
0x4007185	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2824	dir.c	FUNCTION_91	CALL_1
0x4007189	        0x4883c210	                           add rdx, 0x10	      2824	dir.c	FUNCTION_91	CALL_1
0x400718d	          0x4889c6	                            mov rsi, rax	      2824	dir.c	FUNCTION_91	CALL_1
0x4007190	          0x4889d7	                            mov rdi, rdx	      2824	dir.c	FUNCTION_91	CALL_1
0x4007193	      0xe889faffff	            call sym.stat_data_from_disk	      2824	dir.c	FUNCTION_91	CALL_1
0x4007198	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2825	dir.c	FUNCTION_91
0x400719c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2825	dir.c	FUNCTION_91
0x40071a0	        0x488d5024	                   lea rdx, [rax + 0x24]	      2825	dir.c	FUNCTION_91
0x40071a4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2825	dir.c	FUNCTION_91
0x40071a8	        0x48895028	             mov qword [rax + 0x28], rdx	      2825	dir.c	FUNCTION_91
0x40071ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      2826	dir.c	FUNCTION_91
0x40071b0	         0xfb65044	           movzx edx, byte [rax + 0x44] 	      2826	dir.c	FUNCTION_91
0x40071b4	          0x83ca02	                               or edx, 2	      2826	dir.c	FUNCTION_91
0x40071b7	          0x885044	               mov byte [rax + 0x44], dl	      2826	dir.c	FUNCTION_91
0x40071ba	              0xc9	                                   leave	      2827	dir.c	FUNCTION_91
0x40071bb	              0xc3	                                     ret	      2827	dir.c	FUNCTION_91
free_untracked_cache	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,2:functions,0:FOR,0	16
0x4006bec	              0x55	                                push rbp	      2722	dir.c	FUNCTION_87
0x4006bed	          0x4889e5	                            mov rbp, rsp	      2722	dir.c	FUNCTION_87
0x4006bf0	        0x4883ec10	                           sub rsp, 0x10	      2722	dir.c	FUNCTION_87
0x4006bf4	        0x48897df8	                mov qword [rbp - 8], rdi	      2722	dir.c	FUNCTION_87
0x4006bf8	      0x48837df800	                  cmp qword [rbp - 8], 0	      2723	dir.c	FUNCTION_87	IF_1
0x4006bfd	            0x7413	                            je 0x4006c12	      2723	dir.c	FUNCTION_87	IF_1
0x4006bff	        0x488b45f8	                mov rax, qword [rbp - 8]	      2724	dir.c	FUNCTION_87	CALL_1
0x4006c03	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2724	dir.c	FUNCTION_87	CALL_1
0x4006c0a	          0x4889c7	                            mov rdi, rax	      2724	dir.c	FUNCTION_87	CALL_1
0x4006c0d	      0xe81effffff	                 call sym.free_untracked	      2724	dir.c	FUNCTION_87	CALL_1
0x4006c12	        0x488b45f8	                mov rax, qword [rbp - 8]	      2725	dir.c	FUNCTION_87	CALL_2
0x4006c16	          0x4889c7	                            mov rdi, rax	      2725	dir.c	FUNCTION_87	CALL_2
0x4006c19	      0xe800000000	                          call 0x4006c1e	      2725	dir.c	FUNCTION_87	CALL_2
0x4006c1e	              0x90	                                     nop	      2726	dir.c	FUNCTION_87
0x4006c1f	              0xc9	                                   leave	      2726	dir.c	FUNCTION_87
0x4006c20	              0xc3	                                     ret	      2726	dir.c	FUNCTION_87
last_exclude_matching_from_list	SWITCH,0:ELSE,0:WHILE,0:IF,7:DO,0:CALL,4:functions,0:FOR,1	144
0x4002a32	              0x55	                                push rbp	      1056	dir.c	FUNCTION_37
0x4002a33	          0x4889e5	                            mov rbp, rsp	      1056	dir.c	FUNCTION_37
0x4002a36	        0x4883ec50	                           sub rsp, 0x50	      1056	dir.c	FUNCTION_37
0x4002a3a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1056	dir.c	FUNCTION_37
0x4002a3e	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1056	dir.c	FUNCTION_37
0x4002a41	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1056	dir.c	FUNCTION_37
0x4002a45	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      1056	dir.c	FUNCTION_37
0x4002a49	        0x4c8945b8	              mov qword [rbp - 0x48], r8	      1056	dir.c	FUNCTION_37
0x4002a4d	        0x4c894db0	              mov qword [rbp - 0x50], r9	      1056	dir.c	FUNCTION_37
0x4002a51	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1057	dir.c	FUNCTION_37
0x4002a59	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1060	dir.c	FUNCTION_37	IF_1
0x4002a5d	            0x8b00	                    mov eax, dword [rax]	      1060	dir.c	FUNCTION_37	IF_1
0x4002a5f	            0x85c0	                           test eax, eax	      1060	dir.c	FUNCTION_37	IF_1
0x4002a61	            0x750a	                           jne 0x4002a6d	      1060	dir.c	FUNCTION_37	IF_1
0x4002a63	      0xb800000000	                              mov eax, 0	      1061	dir.c	FUNCTION_37	IF_1
0x4002a68	      0xe9a8010000	                           jmp 0x4002c15	      1061	dir.c	FUNCTION_37	IF_1
0x4002a6d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1063	dir.c	FUNCTION_37	FOR_1
0x4002a71	            0x8b00	                    mov eax, dword [rax]	      1063	dir.c	FUNCTION_37	FOR_1
0x4002a73	          0x83e801	                              sub eax, 1	      1063	dir.c	FUNCTION_37	FOR_1
0x4002a76	          0x8945e0	             mov dword [rbp - 0x20], eax	      1063	dir.c	FUNCTION_37	FOR_1
0x4002a79	      0xe989010000	                           jmp 0x4002c07	      1063	dir.c	FUNCTION_37	FOR_1
0x4002a7e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1064	dir.c	FUNCTION_37	FOR_1
0x4002a82	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1064	dir.c	FUNCTION_37	FOR_1
0x4002a86	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1064	dir.c	FUNCTION_37	FOR_1
0x4002a89	          0x4863d2	                         movsxd rdx, edx	      1064	dir.c	FUNCTION_37	FOR_1
0x4002a8c	        0x48c1e203	                              shl rdx, 3	      1064	dir.c	FUNCTION_37	FOR_1
0x4002a90	          0x4801d0	                            add rax, rdx	      1064	dir.c	FUNCTION_37	FOR_1
0x4002a93	          0x488b00	                    mov rax, qword [rax]	      1064	dir.c	FUNCTION_37	FOR_1
0x4002a96	        0x488945f0	             mov qword [rbp - 0x10], rax	      1064	dir.c	FUNCTION_37	FOR_1
0x4002a9a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1065	dir.c	FUNCTION_37	FOR_1
0x4002a9e	        0x488b4008	                mov rax, qword [rax + 8]	      1065	dir.c	FUNCTION_37	FOR_1
0x4002aa2	        0x488945f8	                mov qword [rbp - 8], rax	      1065	dir.c	FUNCTION_37	FOR_1
0x4002aa6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1066	dir.c	FUNCTION_37	FOR_1
0x4002aaa	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1066	dir.c	FUNCTION_37	FOR_1
0x4002aad	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1066	dir.c	FUNCTION_37	FOR_1
0x4002ab0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1068	dir.c	FUNCTION_37	FOR_1	IF_2
0x4002ab4	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1068	dir.c	FUNCTION_37	FOR_1	IF_2
0x4002ab7	          0x83e008	                              and eax, 8	      1068	dir.c	FUNCTION_37	FOR_1	IF_2
0x4002aba	            0x85c0	                           test eax, eax	      1068	dir.c	FUNCTION_37	FOR_1	IF_2
0x4002abc	            0x7439	                            je 0x4002af7	      1068	dir.c	FUNCTION_37	FOR_1	IF_2
0x4002abe	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1069	dir.c	FUNCTION_37	FOR_1	IF_2	IF_3
0x4002ac2	            0x8b00	                    mov eax, dword [rax]	      1069	dir.c	FUNCTION_37	FOR_1	IF_2	IF_3
0x4002ac4	            0x85c0	                           test eax, eax	      1069	dir.c	FUNCTION_37	FOR_1	IF_2	IF_3
0x4002ac6	            0x7520	                           jne 0x4002ae8	      1069	dir.c	FUNCTION_37	FOR_1	IF_2	IF_3
0x4002ac8	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      1070	dir.c	FUNCTION_37	FOR_1	IF_2	CALL_1
0x4002acb	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1070	dir.c	FUNCTION_37	FOR_1	IF_2	CALL_1
0x4002acf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1070	dir.c	FUNCTION_37	FOR_1	IF_2	CALL_1
0x4002ad3	          0x4889c6	                            mov rsi, rax	      1070	dir.c	FUNCTION_37	FOR_1	IF_2	CALL_1
0x4002ad6	      0xbf00000000	                              mov edi, 0	      1070	dir.c	FUNCTION_37	FOR_1	IF_2	CALL_1
0x4002adb	      0xe8de130000	                      call sym.get_dtype	      1070	dir.c	FUNCTION_37	FOR_1	IF_2	CALL_1
0x4002ae0	            0x89c2	                            mov edx, eax	      1070	dir.c	FUNCTION_37	FOR_1	IF_2	CALL_1
0x4002ae2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1070	dir.c	FUNCTION_37	FOR_1	IF_2	CALL_1
0x4002ae6	            0x8910	                    mov dword [rax], edx	      1070	dir.c	FUNCTION_37	FOR_1	IF_2	CALL_1
0x4002ae8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1071	dir.c	FUNCTION_37	FOR_1	IF_2	IF_4
0x4002aec	            0x8b00	                    mov eax, dword [rax]	      1071	dir.c	FUNCTION_37	FOR_1	IF_2	IF_4
0x4002aee	          0x83f804	                              cmp eax, 4	      1071	dir.c	FUNCTION_37	FOR_1	IF_2	IF_4
0x4002af1	     0xf8508010000	                           jne 0x4002bff	      1071	dir.c	FUNCTION_37	FOR_1	IF_2	IF_4
0x4002af7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1075	dir.c	FUNCTION_37	FOR_1	IF_5
0x4002afb	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1075	dir.c	FUNCTION_37	FOR_1	IF_5
0x4002afe	          0x83e001	                              and eax, 1	      1075	dir.c	FUNCTION_37	FOR_1	IF_5
0x4002b01	            0x85c0	                           test eax, eax	      1075	dir.c	FUNCTION_37	FOR_1	IF_5
0x4002b03	            0x7455	                            je 0x4002b5a	      1075	dir.c	FUNCTION_37	FOR_1	IF_5
0x4002b05	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b09	          0x8b7824	            mov edi, dword [rax + 0x24] 	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b0c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b10	          0x8b7010	            mov esi, dword [rax + 0x10] 	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b13	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b16	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1077	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6
0x4002b1a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1077	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6
0x4002b1e	          0x4829d1	                            sub rcx, rdx	      1077	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6
0x4002b21	          0x4889ca	                            mov rdx, rcx	      1077	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6
0x4002b24	            0x29d0	                            sub eax, edx	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b26	          0x4189c2	                           mov r10d, eax	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b29	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b2c	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b30	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b34	          0x4189f9	                            mov r9d, edi	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b37	          0x4189f0	                            mov r8d, esi	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b3a	          0x4489d6	                           mov esi, r10d	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b3d	          0x4889c7	                            mov rdi, rax	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b40	      0xe800000000	                          call 0x4002b45	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b45	            0x85c0	                           test eax, eax	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b47	     0xf84b5000000	                            je 0x4002c02	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002b4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1080	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6
0x4002b51	        0x488945e8	             mov qword [rbp - 0x18], rax	      1080	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6
0x4002b55	      0xe9b7000000	                           jmp 0x4002c11	      1081	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6
0x4002b5a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b5e	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b61	            0x85c0	                           test eax, eax	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b63	            0x7438	                            je 0x4002b9d	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b65	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b69	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b6d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b71	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b74	            0x4898	                                    cdqe	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b76	        0x4883e801	                              sub rax, 1	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b7a	          0x4801d0	                            add rax, rdx	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b7d	           0xfb600	                   movzx eax, byte [rax]	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b80	            0x3c2f	                            cmp al, 0x2f	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b82	            0x7419	                            je 0x4002b9d	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b84	      0xb900000000	                              mov ecx, 0	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b89	      0xba3e040000	                          mov edx, 0x43e	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b8e	      0xbe00000000	                              mov esi, 0	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b93	      0xbf00000000	                              mov edi, 0	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b98	      0xe800000000	                          call 0x4002b9d	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x4002b9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002ba1	        0x448b4024	            mov r8d, dword [rax + 0x24] 	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002ba5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002ba9	          0x8b7810	            mov edi, dword [rax + 0x10] 	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1088	dir.c	FUNCTION_37	FOR_1	IF_7
0x4002bb0	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1088	dir.c	FUNCTION_37	FOR_1	IF_7
0x4002bb3	            0x85c0	                           test eax, eax	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bb5	            0x740c	                            je 0x4002bc3	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bb7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1088	dir.c	FUNCTION_37	FOR_1	IF_7
0x4002bbb	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1088	dir.c	FUNCTION_37	FOR_1	IF_7
0x4002bbe	          0x8d48ff	                      lea ecx, [rax - 1]	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bc1	            0xeb05	                           jmp 0x4002bc8	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bc3	      0xb900000000	                              mov ecx, 0	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bc8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bcc	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bd0	        0x448b4de4	             mov r9d, dword [rbp - 0x1c]	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bd4	        0x4c8b55f8	                mov r10, qword [rbp - 8]	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bd8	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bdb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bdf	            0x4150	                                 push r8	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002be1	              0x57	                                push rdi	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002be2	          0x4d89d0	                             mov r8, r10	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002be5	          0x4889c7	                            mov rdi, rax	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002be8	      0xe800000000	                          call 0x4002bed	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bed	        0x4883c410	                           add rsp, 0x10	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bf1	            0x85c0	                           test eax, eax	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bf3	            0x740e	                            je 0x4002c03	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002bf5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1090	dir.c	FUNCTION_37	FOR_1	IF_7
0x4002bf9	        0x488945e8	             mov qword [rbp - 0x18], rax	      1090	dir.c	FUNCTION_37	FOR_1	IF_7
0x4002bfd	            0xeb12	                           jmp 0x4002c11	      1091	dir.c	FUNCTION_37	FOR_1	IF_7
0x4002bff	              0x90	                                     nop	      1072	dir.c	FUNCTION_37	FOR_1	IF_2	IF_4
0x4002c00	            0xeb01	                           jmp 0x4002c03	      1072	dir.c	FUNCTION_37	FOR_1	IF_2	IF_4
0x4002c02	              0x90	                                     nop	      1083	dir.c	FUNCTION_37	FOR_1	IF_5
0x4002c03	        0x836de001	               sub dword [rbp - 0x20], 1	      1063	dir.c	FUNCTION_37	FOR_1
0x4002c07	        0x837de000	               cmp dword [rbp - 0x20], 0	      1063	dir.c	FUNCTION_37	FOR_1
0x4002c0b	     0xf896dfeffff	                           jns 0x4002a7e	      1063	dir.c	FUNCTION_37	FOR_1
0x4002c11	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1094	dir.c	FUNCTION_37
0x4002c15	              0xc9	                                   leave	      1095	dir.c	FUNCTION_37
0x4002c16	              0xc3	                                     ret	      1095	dir.c	FUNCTION_37
move_array	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,2:functions,0:FOR,0	23
0x4000108	              0x55	                                push rbp	       860	git-compat-util.h	FUNCTION_120
0x4000109	          0x4889e5	                            mov rbp, rsp	       860	git-compat-util.h	FUNCTION_120
0x400010c	        0x4883ec20	                           sub rsp, 0x20	       860	git-compat-util.h	FUNCTION_120
0x4000110	        0x48897df8	                mov qword [rbp - 8], rdi	       860	git-compat-util.h	FUNCTION_120
0x4000114	        0x488975f0	             mov qword [rbp - 0x10], rsi	       860	git-compat-util.h	FUNCTION_120
0x4000118	        0x488955e8	             mov qword [rbp - 0x18], rdx	       860	git-compat-util.h	FUNCTION_120
0x400011c	        0x48894de0	             mov qword [rbp - 0x20], rcx	       860	git-compat-util.h	FUNCTION_120
0x4000120	      0x48837de800	               cmp qword [rbp - 0x18], 0	       861	git-compat-util.h	FUNCTION_120	IF_1
0x4000125	            0x7429	                            je 0x4000150	       861	git-compat-util.h	FUNCTION_120	IF_1
0x4000127	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       862	git-compat-util.h	FUNCTION_120	CALL_2
0x400012b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       862	git-compat-util.h	FUNCTION_120	CALL_2
0x400012f	          0x4889d6	                            mov rsi, rdx	       862	git-compat-util.h	FUNCTION_120	CALL_2
0x4000132	          0x4889c7	                            mov rdi, rax	       862	git-compat-util.h	FUNCTION_120	CALL_2
0x4000135	      0xe87cffffff	                        call sym.st_mult	       862	git-compat-util.h	FUNCTION_120	CALL_2
0x400013a	          0x4889c2	                            mov rdx, rax	       862	git-compat-util.h	FUNCTION_120	CALL_2
0x400013d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       862	git-compat-util.h	FUNCTION_120	CALL_2
0x4000141	        0x488b45f8	                mov rax, qword [rbp - 8]	       862	git-compat-util.h	FUNCTION_120	CALL_2
0x4000145	          0x4889ce	                            mov rsi, rcx	       862	git-compat-util.h	FUNCTION_120	CALL_2
0x4000148	          0x4889c7	                            mov rdi, rax	       862	git-compat-util.h	FUNCTION_120	CALL_2
0x400014b	      0xe800000000	                          call 0x4000150	       862	git-compat-util.h	FUNCTION_120	CALL_2
0x4000150	              0x90	                                     nop	       863	git-compat-util.h	FUNCTION_120
0x4000151	              0xc9	                                   leave	       863	git-compat-util.h	FUNCTION_120
0x4000152	              0xc3	                                     ret	       863	git-compat-util.h	FUNCTION_120
strbuf_addstr	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,2:functions,0:FOR,0	17
0x4000353	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_134
0x4000354	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_134
0x4000357	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_134
0x400035b	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_134
0x400035f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_134
0x4000363	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_134	CALL_2
0x4000367	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_134	CALL_2
0x400036a	      0xe800000000	                          call 0x400036f	       279	strbuf.h	FUNCTION_134	CALL_2
0x400036f	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_134	CALL_2
0x4000372	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_134	CALL_2
0x4000376	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_134	CALL_2
0x400037a	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_134	CALL_2
0x400037d	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_134	CALL_2
0x4000380	      0xe800000000	                          call 0x4000385	       279	strbuf.h	FUNCTION_134	CALL_2
0x4000385	              0x90	                                     nop	       280	strbuf.h	FUNCTION_134
0x4000386	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_134
0x4000387	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_134
prep_exclude	SWITCH,0:ELSE,2:WHILE,2:IF,11:DO,0:CALL,24:functions,0:FOR,0	373
0x4002d36	              0x55	                                push rbp	      1141	dir.c	FUNCTION_40
0x4002d37	          0x4889e5	                            mov rbp, rsp	      1141	dir.c	FUNCTION_40
0x4002d3a	    0x4881ecc00000	                           sub rsp, 0xc0	      1141	dir.c	FUNCTION_40
0x4002d41	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      1141	dir.c	FUNCTION_40
0x4002d48	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	      1141	dir.c	FUNCTION_40
0x4002d4f	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      1141	dir.c	FUNCTION_40
0x4002d56	    0x898d44ffffff	             mov dword [rbp - 0xbc], ecx	      1141	dir.c	FUNCTION_40
0x4002d5c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1141	dir.c	FUNCTION_40
0x4002d65	        0x488945f8	                mov qword [rbp - 8], rax	      1141	dir.c	FUNCTION_40
0x4002d69	            0x31c0	                            xor eax, eax	      1141	dir.c	FUNCTION_40
0x4002d6b	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      1144	dir.c	FUNCTION_40
0x4002d76	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1148	dir.c	FUNCTION_40
0x4002d7d	        0x4883c040	                           add rax, 0x40	      1148	dir.c	FUNCTION_40
0x4002d81	        0x48894580	             mov qword [rbp - 0x80], rax	      1148	dir.c	FUNCTION_40
0x4002d85	      0xe9c8000000	                           jmp 0x4002e52	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002d8a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002d91	          0x8b4008	                mov eax, dword [rax + 8]	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002d94	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002d9a	            0x7f35	                            jg 0x4002dd1	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002d9c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002da3	          0x8b4008	                mov eax, dword [rax + 8]	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002da6	          0x4863d0	                         movsxd rdx, eax	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002da9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002db0	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002db7	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002dbe	          0x4889ce	                            mov rsi, rcx	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002dc1	          0x4889c7	                            mov rdi, rax	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002dc4	      0xe800000000	                          call 0x4002dc9	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002dc9	            0x85c0	                           test eax, eax	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002dcb	     0xf84a3000000	                            je 0x4002e74	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002dd1	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1159	dir.c	FUNCTION_40	WHILE_1
0x4002dd5	        0x488b5008	                mov rdx, qword [rax + 8]	      1159	dir.c	FUNCTION_40	WHILE_1
0x4002dd9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1159	dir.c	FUNCTION_40	WHILE_1
0x4002de0	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1159	dir.c	FUNCTION_40	WHILE_1
0x4002de4	          0x8b400c	              mov eax, dword [rax + 0xc]	      1159	dir.c	FUNCTION_40	WHILE_1
0x4002de7	            0x4898	                                    cdqe	      1159	dir.c	FUNCTION_40	WHILE_1
0x4002de9	        0x48c1e005	                              shl rax, 5	      1159	dir.c	FUNCTION_40	WHILE_1
0x4002ded	          0x4801d0	                            add rax, rdx	      1159	dir.c	FUNCTION_40	WHILE_1
0x4002df0	        0x48894588	             mov qword [rbp - 0x78], rax	      1159	dir.c	FUNCTION_40	WHILE_1
0x4002df4	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1160	dir.c	FUNCTION_40	WHILE_1
0x4002dfb	          0x488b10	                    mov rdx, qword [rax]	      1160	dir.c	FUNCTION_40	WHILE_1
0x4002dfe	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1160	dir.c	FUNCTION_40	WHILE_1
0x4002e05	        0x48895060	             mov qword [rax + 0x60], rdx	      1160	dir.c	FUNCTION_40	WHILE_1
0x4002e09	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1161	dir.c	FUNCTION_40	WHILE_1
0x4002e10	    0x48c740680000	               mov qword [rax + 0x68], 0	      1161	dir.c	FUNCTION_40	WHILE_1
0x4002e18	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1162	dir.c	FUNCTION_40	WHILE_1	CALL_2
0x4002e1c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1162	dir.c	FUNCTION_40	WHILE_1	CALL_2
0x4002e20	          0x4889c7	                            mov rdi, rax	      1162	dir.c	FUNCTION_40	WHILE_1	CALL_2
0x4002e23	      0xe800000000	                          call 0x4002e28	      1162	dir.c	FUNCTION_40	WHILE_1	CALL_2
0x4002e28	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1163	dir.c	FUNCTION_40	WHILE_1	CALL_3
0x4002e2c	          0x4889c7	                            mov rdi, rax	      1163	dir.c	FUNCTION_40	WHILE_1	CALL_3
0x4002e2f	      0xe800000000	                          call 0x4002e34	      1163	dir.c	FUNCTION_40	WHILE_1	CALL_3
0x4002e34	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1164	dir.c	FUNCTION_40	WHILE_1	CALL_4
0x4002e3b	          0x4889c7	                            mov rdi, rax	      1164	dir.c	FUNCTION_40	WHILE_1	CALL_4
0x4002e3e	      0xe800000000	                          call 0x4002e43	      1164	dir.c	FUNCTION_40	WHILE_1	CALL_4
0x4002e43	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1165	dir.c	FUNCTION_40	WHILE_1
0x4002e47	            0x8b00	                    mov eax, dword [rax]	      1165	dir.c	FUNCTION_40	WHILE_1
0x4002e49	          0x8d50ff	                      lea edx, [rax - 1]	      1165	dir.c	FUNCTION_40	WHILE_1
0x4002e4c	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1165	dir.c	FUNCTION_40	WHILE_1
0x4002e50	            0x8910	                    mov dword [rax], edx	      1165	dir.c	FUNCTION_40	WHILE_1
0x4002e52	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002e59	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002e5d	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002e64	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002e6c	     0xf8518ffffff	                           jne 0x4002d8a	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002e72	            0xeb01	                           jmp 0x4002e75	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002e74	              0x90	                                     nop	      1158	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002e75	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1169	dir.c	FUNCTION_40	IF_2
0x4002e7c	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1169	dir.c	FUNCTION_40	IF_2
0x4002e80	          0x4885c0	                           test rax, rax	      1169	dir.c	FUNCTION_40	IF_2
0x4002e83	     0xf8581050000	                           jne 0x400340a	      1169	dir.c	FUNCTION_40	IF_2
0x4002e89	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1177	dir.c	FUNCTION_40	IF_3
0x4002e90	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1177	dir.c	FUNCTION_40	IF_3
0x4002e97	          0x4885c0	                           test rax, rax	      1177	dir.c	FUNCTION_40	IF_3
0x4002e9a	            0x7518	                           jne 0x4002eb4	      1177	dir.c	FUNCTION_40	IF_3
0x4002e9c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1178	dir.c	FUNCTION_40	CALL_5
0x4002ea3	        0x4883c070	                           add rax, 0x70	      1178	dir.c	FUNCTION_40	CALL_5
0x4002ea7	      0xbe00100000	                         mov esi, 0x1000	      1178	dir.c	FUNCTION_40	CALL_5
0x4002eac	          0x4889c7	                            mov rdi, rax	      1178	dir.c	FUNCTION_40	CALL_5
0x4002eaf	      0xe800000000	                          call 0x4002eb4	      1178	dir.c	FUNCTION_40	CALL_5
0x4002eb4	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      1181	dir.c	FUNCTION_40
0x4002ebc	            0x740c	                            je 0x4002eca	      1181	dir.c	FUNCTION_40
0x4002ebe	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1181	dir.c	FUNCTION_40
0x4002ec5	          0x8b4008	                mov eax, dword [rax + 8]	      1181	dir.c	FUNCTION_40
0x4002ec8	            0xeb05	                           jmp 0x4002ecf	      1181	dir.c	FUNCTION_40
0x4002eca	      0xb8ffffffff	                     mov eax, 0xffffffff	      1181	dir.c	FUNCTION_40
0x4002ecf	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	      1181	dir.c	FUNCTION_40
0x4002ed5	      0xb800000000	                              mov eax, 0	      1182	dir.c	FUNCTION_40	CALL_6
0x4002eda	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      1182	dir.c	FUNCTION_40	CALL_6
0x4002ee1	     0xf498564ffff	          cmovns eax, dword [rbp - 0x9c]	      1182	dir.c	FUNCTION_40	CALL_6
0x4002ee8	            0x4898	                                    cdqe	      1182	dir.c	FUNCTION_40	CALL_6
0x4002eea	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1182	dir.c	FUNCTION_40	CALL_6
0x4002ef1	        0x4883c270	                           add rdx, 0x70	      1182	dir.c	FUNCTION_40	CALL_6
0x4002ef5	          0x4889c6	                            mov rsi, rax	      1182	dir.c	FUNCTION_40	CALL_6
0x4002ef8	          0x4889d7	                            mov rdi, rdx	      1182	dir.c	FUNCTION_40	CALL_6
0x4002efb	      0xe84bd3ffff	                  call sym.strbuf_setlen	      1182	dir.c	FUNCTION_40	CALL_6
0x4002f00	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1183	dir.c	FUNCTION_40	IF_4
0x4002f07	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1183	dir.c	FUNCTION_40	IF_4
0x4002f0e	          0x4885c0	                           test rax, rax	      1183	dir.c	FUNCTION_40	IF_4
0x4002f11	            0x7438	                            je 0x4002f4b	      1183	dir.c	FUNCTION_40	IF_4
0x4002f13	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      1184	dir.c	FUNCTION_40	IF_4
0x4002f1b	            0x740d	                            je 0x4002f2a	      1184	dir.c	FUNCTION_40	IF_4
0x4002f1d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1184	dir.c	FUNCTION_40	IF_4
0x4002f24	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1184	dir.c	FUNCTION_40	IF_4
0x4002f28	            0xeb15	                           jmp 0x4002f3f	      1184	dir.c	FUNCTION_40	IF_4
0x4002f2a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1184	dir.c	FUNCTION_40	IF_4
0x4002f31	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1184	dir.c	FUNCTION_40	IF_4
0x4002f38	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      1184	dir.c	FUNCTION_40	IF_4
0x4002f3f	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1184	dir.c	FUNCTION_40	IF_4
0x4002f46	      0xe98d040000	                           jmp 0x40033d8	      1184	dir.c	FUNCTION_40	IF_4
0x4002f4b	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      1186	dir.c	FUNCTION_40	ELSE_1
0x4002f56	      0xe97d040000	                           jmp 0x40033d8	      1188	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002f5b	      0xbe18000000	                           mov esi, 0x18	      1192	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_7
0x4002f60	      0xbf01000000	                              mov edi, 1	      1192	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_7
0x4002f65	      0xe800000000	                          call 0x4002f6a	      1192	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_7
0x4002f6a	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1192	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_7
0x4002f71	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      1193	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_5
0x4002f78	            0x791d	                           jns 0x4002f97	      1193	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_5
0x4002f7a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1194	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_5
0x4002f81	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1194	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_5
0x4002f88	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      1195	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_5
0x4002f92	      0xe9a4000000	                           jmp 0x400303b	      1195	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_5
0x4002f97	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x4002f9d	            0x4898	                                    cdqe	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x4002f9f	        0x488d5001	                      lea rdx, [rax + 1]	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x4002fa3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x4002faa	          0x4801d0	                            add rax, rdx	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x4002fad	      0xbe2f000000	                           mov esi, 0x2f	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x4002fb2	          0x4889c7	                            mov rdi, rax	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x4002fb5	      0xe800000000	                          call 0x4002fba	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x4002fba	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x4002fc1	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      1198	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	IF_6
0x4002fc9	            0x750f	                           jne 0x4002fda	      1198	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	IF_6
0x4002fcb	      0xbf00000000	                              mov edi, 0	      1199	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_9
0x4002fd0	      0xb800000000	                              mov eax, 0	      1199	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_9
0x4002fd5	      0xe800000000	                          call 0x4002fda	      1199	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_9
0x4002fda	    0x48838570ffff	               add qword [rbp - 0x90], 1	      1200	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002fe2	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      1204	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002fe9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1204	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002ff0	          0x4829c2	                            sub rdx, rax	      1204	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002ff3	          0x4889d0	                            mov rax, rdx	      1204	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002ff6	            0x89c2	                            mov edx, eax	      1202	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_10
0x4002ff8	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1202	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_10
0x4002ffe	            0x29c2	                            sub edx, eax	      1202	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_10
0x4003000	            0x89d0	                            mov eax, edx	      1202	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_10
0x4003002	            0x89c1	                            mov ecx, eax	      1202	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_10
0x4003004	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1202	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_10
0x400300a	          0x4863d0	                         movsxd rdx, eax	      1202	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_10
0x400300d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1202	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_10
0x4003014	          0x4801c2	                            add rdx, rax	      1202	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_10
0x4003017	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1202	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_10
0x400301e	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1202	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_10
0x4003025	    0x488bb568ffff	             mov rsi, qword [rbp - 0x98]	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x400302c	          0x4889c7	                            mov rdi, rax	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x400302f	      0xe824ecffff	               call sym.lookup_untracked	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4003034	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x400303b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1206	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003042	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1206	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003046	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1206	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x400304d	          0x488910	                    mov qword [rax], rdx	      1206	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003050	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      1207	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003057	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1207	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x400305e	          0x4829c2	                            sub rdx, rax	      1207	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003061	          0x4889d0	                            mov rax, rdx	      1207	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003064	            0x89c2	                            mov edx, eax	      1207	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003066	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1207	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x400306d	          0x895008	                mov dword [rax + 8], edx	      1207	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003070	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1208	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003074	            0x8b10	                    mov edx, dword [rax]	      1208	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003076	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1208	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x400307d	          0x89500c	              mov dword [rax + 0xc], edx	      1208	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003080	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1209	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003087	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      1209	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x400308e	        0x48895010	             mov qword [rax + 0x10], rdx	      1209	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003092	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x4003099	      0xba00000000	                              mov edx, 0	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x400309e	      0xbe01000000	                              mov esi, 1	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x40030a3	          0x4889c7	                            mov rdi, rax	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x40030a6	      0xe800000000	                          call 0x40030ab	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x40030ab	        0x48894588	             mov qword [rbp - 0x78], rax	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x40030af	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x40030b6	          0x8b4008	                mov eax, dword [rax + 8]	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x40030b9	    0x2b8564ffffff	             sub eax, dword [rbp - 0x9c]	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x40030bf	            0x4898	                                    cdqe	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x40030c1	    0x8b9564ffffff	             mov edx, dword [rbp - 0x9c]	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x40030c7	          0x4863ca	                         movsxd rcx, edx	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x40030ca	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x40030d1	        0x488d3411	                    lea rsi, [rcx + rdx]	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x40030d5	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x40030dc	        0x488d4a70	                   lea rcx, [rdx + 0x70]	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x40030e0	          0x4889c2	                            mov rdx, rax	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x40030e3	          0x4889cf	                            mov rdi, rcx	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x40030e6	      0xe800000000	                          call 0x40030eb	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x40030eb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x40030f2	          0x8b4008	                mov eax, dword [rax + 8]	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x40030f5	          0x4863d0	                         movsxd rdx, eax	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x40030f8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x40030ff	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4003103	          0x4839c2	                            cmp rdx, rax	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4003106	            0x7419	                            je 0x4003121	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4003108	      0xb900000000	                              mov ecx, 0	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x400310d	      0xbabc040000	                          mov edx, 0x4bc	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4003112	      0xbe00000000	                              mov esi, 0	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4003117	      0xbf00000000	                              mov edi, 0	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x400311c	      0xe800000000	                          call 0x4003121	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4003121	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1215	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4003128	          0x8b4008	                mov eax, dword [rax + 8]	      1215	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x400312b	            0x85c0	                           test eax, eax	      1215	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x400312d	     0xf840a010000	                            je 0x400323d	      1215	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4003133	    0xc74590040000	               mov dword [rbp - 0x70], 4	      1216	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x400313a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1217	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4003141	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      1217	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4003148	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1217	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x400314f	          0x8b4008	                mov eax, dword [rax + 8]	      1217	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4003152	            0x4898	                                    cdqe	      1217	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4003154	        0x4883e801	                              sub rax, 1	      1217	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4003158	          0x4801d0	                            add rax, rdx	      1217	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x400315b	          0xc60000	                       mov byte [rax], 0	      1217	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x400315e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1221	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4003165	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      1221	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x400316c	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4003172	            0x4898	                                    cdqe	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4003174	        0x4c8d0402	                     lea r8, [rdx + rax]	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4003178	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1220	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x400317f	          0x8b4008	                mov eax, dword [rax + 8]	      1220	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4003182	          0x8d48ff	                      lea ecx, [rax - 1]	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4003185	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1220	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x400318c	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      1220	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4003193	        0x488d7d90	                   lea rdi, [rbp - 0x70]	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4003197	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x400319e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x40031a5	          0x4989f9	                             mov r9, rdi	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x40031a8	          0x4889c7	                            mov rdi, rax	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x40031ab	      0xe8d1faffff	call sym.last_exclude_matching_from_lists	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x40031b0	          0x4889c2	                            mov rdx, rax	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x40031b3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x40031ba	        0x48895068	             mov qword [rax + 0x68], rdx	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x40031be	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1222	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x40031c5	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      1222	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x40031cc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1222	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x40031d3	          0x8b4008	                mov eax, dword [rax + 8]	      1222	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x40031d6	            0x4898	                                    cdqe	      1222	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x40031d8	        0x4883e801	                              sub rax, 1	      1222	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x40031dc	          0x4801d0	                            add rax, rdx	      1222	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x40031df	          0xc6002f	                    mov byte [rax], 0x2f	      1222	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x40031e2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x40031e9	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x40031ed	          0x4885c0	                           test rax, rax	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x40031f0	            0x7424	                            je 0x4003216	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x40031f2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1224	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x40031f9	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1224	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x40031fd	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1224	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x4003200	          0x83e010	                           and eax, 0x10	      1224	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x4003203	            0x85c0	                           test eax, eax	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x4003205	            0x740f	                            je 0x4003216	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x4003207	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1225	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x400320e	    0x48c740680000	               mov qword [rax + 0x68], 0	      1225	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x4003216	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1226	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x400321d	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1226	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x4003221	          0x4885c0	                           test rax, rax	      1226	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x4003224	            0x7417	                            je 0x400323d	      1226	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x4003226	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1227	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x400322d	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1227	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x4003234	        0x48895060	             mov qword [rax + 0x60], rdx	      1227	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x4003238	      0xe9ce010000	                           jmp 0x400340b	      1227	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x400323d	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1233	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_15
0x4003241	        0x4883c024	                           add rax, 0x24	      1233	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_15
0x4003245	          0x4889c7	                            mov rdi, rax	      1233	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_15
0x4003248	      0xe8e8d2ffff	                         call sym.oidclr	      1233	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_15
0x400324d	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1234	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4003254	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1235	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x400325b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1235	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x400325f	          0x4885c0	                           test rax, rax	      1235	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003262	     0xf84e4000000	                            je 0x400334c	      1235	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003268	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      1235	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003270	            0x742d	                            je 0x400329f	      1235	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003272	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003279	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x400327d	          0x83e002	                              and eax, 2	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003280	            0x84c0	                             test al, al	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003282	            0x741b	                            je 0x400329f	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003284	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1248	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_16
0x400328b	        0x4883c045	                           add rax, 0x45	      1248	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_16
0x400328f	          0x4889c7	                            mov rdi, rax	      1248	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_16
0x4003292	      0xe826d2ffff	                   call sym.is_null_sha1	      1248	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_16
0x4003297	            0x85c0	                           test eax, eax	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4003299	     0xf85ad000000	                           jne 0x400334c	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x400329f	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1257	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x40032a7	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1257	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x40032af	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1257	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x40032b7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x40032be	        0x488d5070	                   lea rdx, [rax + 0x70]	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x40032c2	        0x488d4590	                   lea rax, [rbp - 0x70]	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x40032c6	          0x4889d6	                            mov rsi, rdx	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x40032c9	          0x4889c7	                            mov rdi, rax	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x40032cc	      0xe800000000	                          call 0x40032d1	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x40032d1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1259	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_18
0x40032d8	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1259	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_18
0x40032dc	        0x488d4590	                   lea rax, [rbp - 0x70]	      1259	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_18
0x40032e0	          0x4889d6	                            mov rsi, rdx	      1259	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_18
0x40032e3	          0x4889c7	                            mov rdi, rax	      1259	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_18
0x40032e6	      0xe868d0ffff	                  call sym.strbuf_addstr	      1259	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_18
0x40032eb	        0x488d4590	                   lea rax, [rbp - 0x70]	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x40032ef	      0xbe00000000	                              mov esi, 0	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x40032f4	          0x4889c7	                            mov rdi, rax	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x40032f7	      0xe800000000	                          call 0x40032fc	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x40032fc	          0x4889c2	                            mov rdx, rax	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x40032ff	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x4003303	        0x48895010	             mov qword [rax + 0x10], rdx	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x4003307	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x400330f	            0x7406	                            je 0x4003317	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4003311	        0x488d7db0	                   lea rdi, [rbp - 0x50]	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4003315	            0xeb05	                           jmp 0x400331c	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4003317	      0xbf00000000	                              mov edi, 0	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x400331c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4003323	          0x8b5008	                mov edx, dword [rax + 8]	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4003326	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x400332a	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x400332e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4003332	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4003336	    0x4c8b8550ffff	              mov r8, qword [rbp - 0xb0]	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x400333d	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4003341	          0x4989f9	                             mov r9, rdi	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4003344	          0x4889c7	                            mov rdi, rax	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4003347	      0xe8b8ecffff	                   call sym.add_excludes	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x400334c	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      1278	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11
0x4003354	            0x7460	                            je 0x40033b6	      1278	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11
0x4003356	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1279	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_21
0x400335d	        0x488d5045	                   lea rdx, [rax + 0x45]	      1279	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_21
0x4003361	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1279	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_21
0x4003365	        0x4883c024	                           add rax, 0x24	      1279	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_21
0x4003369	          0x4889d6	                            mov rsi, rdx	      1279	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_21
0x400336c	          0x4889c7	                            mov rdi, rax	      1279	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_21
0x400336f	      0xe8fad0ffff	                        call sym.hashcmp	      1279	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_21
0x4003374	            0x85c0	                           test eax, eax	      1278	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11
0x4003376	            0x743e	                            je 0x40033b6	      1278	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11
0x4003378	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1280	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_22
0x400337f	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1280	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_22
0x4003386	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      1280	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_22
0x400338d	          0x4889d6	                            mov rsi, rdx	      1280	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_22
0x4003390	          0x4889c7	                            mov rdi, rax	      1280	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_22
0x4003393	      0xe8acebffff	           call sym.invalidate_gitignore	      1280	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_22
0x4003398	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1281	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_23
0x400339f	        0x4883c045	                           add rax, 0x45	      1281	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_23
0x40033a3	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1281	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_23
0x40033a7	        0x4883c224	                           add rdx, 0x24	      1281	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_23
0x40033ab	          0x4889d6	                            mov rsi, rdx	      1281	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_23
0x40033ae	          0x4889c7	                            mov rdi, rax	      1281	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_23
0x40033b1	      0xe82ed1ffff	                        call sym.hashcpy	      1281	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_23
0x40033b6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1283	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x40033bd	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1283	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x40033c4	        0x48895060	             mov qword [rax + 0x60], rdx	      1283	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x40033c8	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1284	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x40033cf	          0x8b4008	                mov eax, dword [rax + 8]	      1284	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x40033d2	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	      1284	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x40033d8	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1188	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x40033de	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      1188	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x40033e4	     0xf8c71fbffff	                            jl 0x4002f5b	      1188	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x40033ea	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      1286	dir.c	FUNCTION_40	CALL_24
0x40033f0	            0x4898	                                    cdqe	      1286	dir.c	FUNCTION_40	CALL_24
0x40033f2	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1286	dir.c	FUNCTION_40	CALL_24
0x40033f9	        0x4883c270	                           add rdx, 0x70	      1286	dir.c	FUNCTION_40	CALL_24
0x40033fd	          0x4889c6	                            mov rsi, rax	      1286	dir.c	FUNCTION_40	CALL_24
0x4003400	          0x4889d7	                            mov rdi, rdx	      1286	dir.c	FUNCTION_40	CALL_24
0x4003403	      0xe843ceffff	                  call sym.strbuf_setlen	      1286	dir.c	FUNCTION_40	CALL_24
0x4003408	            0xeb01	                           jmp 0x400340b	      1286	dir.c	FUNCTION_40	CALL_24
0x400340a	              0x90	                                     nop	      1170	dir.c	FUNCTION_40	IF_2
0x400340b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1287	dir.c	FUNCTION_40
0x400340f	    0x644833042528	                xor rax, qword fs:[0x28]	      1287	dir.c	FUNCTION_40
0x4003418	            0x7405	                            je 0x400341f	      1287	dir.c	FUNCTION_40
0x400341a	      0xe800000000	                          call 0x400341f	      1287	dir.c	FUNCTION_40
0x400341f	              0xc9	                                   leave	      1287	dir.c	FUNCTION_40
0x4003420	              0xc3	                                     ret	      1287	dir.c	FUNCTION_40
const_error	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,0:functions,0:FOR,0	5
0x4000067	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_108
0x4000068	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_108
0x400006b	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_108
0x4000070	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_108
0x4000071	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_108
setup_standard_excludes	SWITCH,0:ELSE,0:WHILE,0:IF,4:DO,0:CALL,6:functions,0:FOR,0	64
0x4006094	              0x55	                                push rbp	      2497	dir.c	FUNCTION_80
0x4006095	          0x4889e5	                            mov rbp, rsp	      2497	dir.c	FUNCTION_80
0x4006098	        0x4883ec20	                           sub rsp, 0x20	      2497	dir.c	FUNCTION_80
0x400609c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2497	dir.c	FUNCTION_80
0x40060a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2498	dir.c	FUNCTION_80
0x40060a4	    0x48c740280000	               mov qword [rax + 0x28], 0	      2498	dir.c	FUNCTION_80
0x40060ac	    0x488b05000000	            mov rax, qword [0x040060b3] 	      2501	dir.c	FUNCTION_80	IF_1
0x40060b3	          0x4885c0	                           test rax, rax	      2501	dir.c	FUNCTION_80	IF_1
0x40060b6	            0x7511	                           jne 0x40060c9	      2501	dir.c	FUNCTION_80	IF_1
0x40060b8	      0xbf00000000	                              mov edi, 0	      2502	dir.c	FUNCTION_80	CALL_1
0x40060bd	      0xe800000000	                          call 0x40060c2	      2502	dir.c	FUNCTION_80	CALL_1
0x40060c2	    0x488905000000	            mov qword [0x040060c9], rax 	      2502	dir.c	FUNCTION_80	CALL_1
0x40060c9	    0x488b05000000	            mov rax, qword [0x040060d0] 	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x40060d0	          0x4885c0	                           test rax, rax	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x40060d3	            0x7455	                            je 0x400612a	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x40060d5	    0x488b05000000	            mov rax, qword [0x040060dc] 	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x40060dc	      0xba00000000	                              mov edx, 0	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x40060e1	      0xbe04000000	                              mov esi, 4	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x40060e6	          0x4889c7	                            mov rdi, rax	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x40060e9	      0xe800000000	                          call 0x40060ee	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x40060ee	            0x85c0	                           test eax, eax	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x40060f0	            0x7538	                           jne 0x400612a	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x40060f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2505	dir.c	FUNCTION_80	IF_2
0x40060f6	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2505	dir.c	FUNCTION_80	IF_2
0x40060fd	          0x4885c0	                           test rax, rax	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4006100	            0x740d	                            je 0x400610f	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4006102	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4006106	    0x488d90cc0000	                   lea rdx, [rax + 0xcc]	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x400610d	            0xeb05	                           jmp 0x4006114	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x400610f	      0xba00000000	                              mov edx, 0	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4006114	    0x488b0d000000	            mov rcx, qword [0x0400611b] 	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x400611b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x400611f	          0x4889ce	                            mov rsi, rcx	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4006122	          0x4889c7	                            mov rdi, rax	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4006125	      0xe805c6ffff	       call sym.add_excludes_from_file_1	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x400612a	    0x488b05000000	            mov rax, qword [0x04006131] 	      2508	dir.c	FUNCTION_80	IF_3
0x4006131	            0x8b00	                    mov eax, dword [rax]	      2508	dir.c	FUNCTION_80	IF_3
0x4006133	            0x85c0	                           test eax, eax	      2508	dir.c	FUNCTION_80	IF_3
0x4006135	            0x7458	                            je 0x400618f	      2508	dir.c	FUNCTION_80	IF_3
0x4006137	      0xe829ffffff	          call sym.git_path_info_exclude	      2509	dir.c	FUNCTION_80	IF_3	CALL_4
0x400613c	        0x488945f8	                mov qword [rbp - 8], rax	      2509	dir.c	FUNCTION_80	IF_3	CALL_4
0x4006140	        0x488b45f8	                mov rax, qword [rbp - 8]	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x4006144	      0xba00000000	                              mov edx, 0	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x4006149	      0xbe04000000	                              mov esi, 4	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x400614e	          0x4889c7	                            mov rdi, rax	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x4006151	      0xe800000000	                          call 0x4006156	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x4006156	            0x85c0	                           test eax, eax	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x4006158	            0x7535	                           jne 0x400618f	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x400615a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2512	dir.c	FUNCTION_80	IF_3	IF_4
0x400615e	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2512	dir.c	FUNCTION_80	IF_3	IF_4
0x4006165	          0x4885c0	                           test rax, rax	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x4006168	            0x740d	                            je 0x4006177	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x400616a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x400616e	    0x488d90900000	                   lea rdx, [rax + 0x90]	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x4006175	            0xeb05	                           jmp 0x400617c	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x4006177	      0xba00000000	                              mov edx, 0	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x400617c	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x4006180	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x4006184	          0x4889ce	                            mov rsi, rcx	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x4006187	          0x4889c7	                            mov rdi, rax	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x400618a	      0xe8a0c5ffff	       call sym.add_excludes_from_file_1	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x400618f	              0x90	                                     nop	      2514	dir.c	FUNCTION_80
0x4006190	              0xc9	                                   leave	      2514	dir.c	FUNCTION_80
0x4006191	              0xc3	                                     ret	      2514	dir.c	FUNCTION_80
untracked_cache_add_to_index	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	14
0x400783e	              0x55	                                push rbp	      3010	dir.c	FUNCTION_99
0x400783f	          0x4889e5	                            mov rbp, rsp	      3010	dir.c	FUNCTION_99
0x4007842	        0x4883ec10	                           sub rsp, 0x10	      3010	dir.c	FUNCTION_99
0x4007846	        0x48897df8	                mov qword [rbp - 8], rdi	      3010	dir.c	FUNCTION_99
0x400784a	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3010	dir.c	FUNCTION_99
0x400784e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      3011	dir.c	FUNCTION_99	CALL_1
0x4007852	        0x488b45f8	                mov rax, qword [rbp - 8]	      3011	dir.c	FUNCTION_99	CALL_1
0x4007856	      0xba01000000	                              mov edx, 1	      3011	dir.c	FUNCTION_99	CALL_1
0x400785b	          0x4889ce	                            mov rsi, rcx	      3011	dir.c	FUNCTION_99	CALL_1
0x400785e	          0x4889c7	                            mov rdi, rax	      3011	dir.c	FUNCTION_99	CALL_1
0x4007861	      0xe800000000	                          call 0x4007866	      3011	dir.c	FUNCTION_99	CALL_1
0x4007866	              0x90	                                     nop	      3012	dir.c	FUNCTION_99
0x4007867	              0xc9	                                   leave	      3012	dir.c	FUNCTION_99
0x4007868	              0xc3	                                     ret	      3012	dir.c	FUNCTION_99
is_empty_dir	SWITCH,0:ELSE,0:WHILE,1:IF,2:DO,0:CALL,4:functions,0:FOR,0	33
0x4005c80	              0x55	                                push rbp	      2396	dir.c	FUNCTION_77
0x4005c81	          0x4889e5	                            mov rbp, rsp	      2396	dir.c	FUNCTION_77
0x4005c84	        0x4883ec30	                           sub rsp, 0x30	      2396	dir.c	FUNCTION_77
0x4005c88	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2396	dir.c	FUNCTION_77
0x4005c8c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2397	dir.c	FUNCTION_77	CALL_1
0x4005c90	          0x4889c7	                            mov rdi, rax	      2397	dir.c	FUNCTION_77	CALL_1
0x4005c93	      0xe800000000	                          call 0x4005c98	      2397	dir.c	FUNCTION_77	CALL_1
0x4005c98	        0x488945f0	             mov qword [rbp - 0x10], rax	      2397	dir.c	FUNCTION_77	CALL_1
0x4005c9c	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      2399	dir.c	FUNCTION_77
0x4005ca3	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2401	dir.c	FUNCTION_77	IF_1
0x4005ca8	            0x7524	                           jne 0x4005cce	      2401	dir.c	FUNCTION_77	IF_1
0x4005caa	      0xb800000000	                              mov eax, 0	      2402	dir.c	FUNCTION_77	IF_1
0x4005caf	            0xeb43	                           jmp 0x4005cf4	      2402	dir.c	FUNCTION_77	IF_1
0x4005cb1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2405	dir.c	FUNCTION_77	WHILE_1	IF_2	CALL_3
0x4005cb5	        0x4883c013	                           add rax, 0x13	      2405	dir.c	FUNCTION_77	WHILE_1	IF_2	CALL_3
0x4005cb9	          0x4889c7	                            mov rdi, rax	      2405	dir.c	FUNCTION_77	WHILE_1	IF_2	CALL_3
0x4005cbc	      0xe8c8a8ffff	               call sym.is_dot_or_dotdot	      2405	dir.c	FUNCTION_77	WHILE_1	IF_2	CALL_3
0x4005cc1	            0x85c0	                           test eax, eax	      2405	dir.c	FUNCTION_77	WHILE_1	IF_2	CALL_3
0x4005cc3	            0x7509	                           jne 0x4005cce	      2405	dir.c	FUNCTION_77	WHILE_1	IF_2	CALL_3
0x4005cc5	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2406	dir.c	FUNCTION_77	WHILE_1	IF_2
0x4005ccc	            0xeb17	                           jmp 0x4005ce5	      2407	dir.c	FUNCTION_77	WHILE_1	IF_2
0x4005cce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4005cd2	          0x4889c7	                            mov rdi, rax	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4005cd5	      0xe800000000	                          call 0x4005cda	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4005cda	        0x488945f8	                mov qword [rbp - 8], rax	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4005cde	      0x48837df800	                  cmp qword [rbp - 8], 0	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4005ce3	            0x75cc	                           jne 0x4005cb1	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4005ce5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2410	dir.c	FUNCTION_77	CALL_4
0x4005ce9	          0x4889c7	                            mov rdi, rax	      2410	dir.c	FUNCTION_77	CALL_4
0x4005cec	      0xe800000000	                          call 0x4005cf1	      2410	dir.c	FUNCTION_77	CALL_4
0x4005cf1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2411	dir.c	FUNCTION_77
0x4005cf4	              0xc9	                                   leave	      2412	dir.c	FUNCTION_77
0x4005cf5	              0xc3	                                     ret	      2412	dir.c	FUNCTION_77
lookup_untracked	SWITCH,0:ELSE,0:WHILE,1:IF,5:DO,0:CALL,2:functions,0:FOR,0	192
0x4001c58	              0x55	                                push rbp	       720	dir.c	FUNCTION_24
0x4001c59	          0x4889e5	                            mov rbp, rsp	       720	dir.c	FUNCTION_24
0x4001c5c	        0x4883ec40	                           sub rsp, 0x40	       720	dir.c	FUNCTION_24
0x4001c60	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       720	dir.c	FUNCTION_24
0x4001c64	        0x488975d0	             mov qword [rbp - 0x30], rsi	       720	dir.c	FUNCTION_24
0x4001c68	        0x488955c8	             mov qword [rbp - 0x38], rdx	       720	dir.c	FUNCTION_24
0x4001c6c	          0x894dc4	             mov dword [rbp - 0x3c], ecx	       720	dir.c	FUNCTION_24
0x4001c6f	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       723	dir.c	FUNCTION_24	IF_1
0x4001c74	            0x750a	                           jne 0x4001c80	       723	dir.c	FUNCTION_24	IF_1
0x4001c76	      0xb800000000	                              mov eax, 0	       724	dir.c	FUNCTION_24	IF_1
0x4001c7b	      0xe960020000	                           jmp 0x4001ee0	       724	dir.c	FUNCTION_24	IF_1
0x4001c80	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       725	dir.c	FUNCTION_24	IF_2
0x4001c84	            0x741b	                            je 0x4001ca1	       725	dir.c	FUNCTION_24	IF_2
0x4001c86	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       725	dir.c	FUNCTION_24	IF_2
0x4001c89	            0x4898	                                    cdqe	       725	dir.c	FUNCTION_24	IF_2
0x4001c8b	        0x488d50ff	                      lea rdx, [rax - 1]	       725	dir.c	FUNCTION_24	IF_2
0x4001c8f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       725	dir.c	FUNCTION_24	IF_2
0x4001c93	          0x4801d0	                            add rax, rdx	       725	dir.c	FUNCTION_24	IF_2
0x4001c96	           0xfb600	                   movzx eax, byte [rax]	       725	dir.c	FUNCTION_24	IF_2
0x4001c99	            0x3c2f	                            cmp al, 0x2f	       725	dir.c	FUNCTION_24	IF_2
0x4001c9b	            0x7504	                           jne 0x4001ca1	       725	dir.c	FUNCTION_24	IF_2
0x4001c9d	        0x836dc401	               sub dword [rbp - 0x3c], 1	       726	dir.c	FUNCTION_24	IF_2
0x4001ca1	    0xc745e0000000	               mov dword [rbp - 0x20], 0	       727	dir.c	FUNCTION_24
0x4001ca8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       728	dir.c	FUNCTION_24
0x4001cac	          0x8b4038	            mov eax, dword [rax + 0x38] 	       728	dir.c	FUNCTION_24
0x4001caf	          0x8945e4	             mov dword [rbp - 0x1c], eax	       728	dir.c	FUNCTION_24
0x4001cb2	      0xe998000000	                           jmp 0x4001d4f	       729	dir.c	FUNCTION_24	WHILE_1
0x4001cb7	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       730	dir.c	FUNCTION_24	WHILE_1
0x4001cba	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       730	dir.c	FUNCTION_24	WHILE_1
0x4001cbd	             0x1d0	                            add eax, edx	       730	dir.c	FUNCTION_24	WHILE_1
0x4001cbf	            0xd1f8	                              sar eax, 1	       730	dir.c	FUNCTION_24	WHILE_1
0x4001cc1	          0x8945ec	             mov dword [rbp - 0x14], eax	       730	dir.c	FUNCTION_24	WHILE_1
0x4001cc4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       731	dir.c	FUNCTION_24	WHILE_1
0x4001cc8	          0x488b00	                    mov rax, qword [rax]	       731	dir.c	FUNCTION_24	WHILE_1
0x4001ccb	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       731	dir.c	FUNCTION_24	WHILE_1
0x4001cce	          0x4863d2	                         movsxd rdx, edx	       731	dir.c	FUNCTION_24	WHILE_1
0x4001cd1	        0x48c1e203	                              shl rdx, 3	       731	dir.c	FUNCTION_24	WHILE_1
0x4001cd5	          0x4801d0	                            add rax, rdx	       731	dir.c	FUNCTION_24	WHILE_1
0x4001cd8	          0x488b00	                    mov rax, qword [rax]	       731	dir.c	FUNCTION_24	WHILE_1
0x4001cdb	        0x488945f0	             mov qword [rbp - 0x10], rax	       731	dir.c	FUNCTION_24	WHILE_1
0x4001cdf	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x4001ce2	          0x4863d0	                         movsxd rdx, eax	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x4001ce5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x4001ce9	        0x488d4859	                   lea rcx, [rax + 0x59]	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x4001ced	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x4001cf1	          0x4889ce	                            mov rsi, rcx	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x4001cf4	          0x4889c7	                            mov rdi, rax	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x4001cf7	      0xe800000000	                          call 0x4001cfc	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x4001cfc	          0x8945e8	             mov dword [rbp - 0x18], eax	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x4001cff	        0x837de800	               cmp dword [rbp - 0x18], 0	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4001d03	            0x7524	                           jne 0x4001d29	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4001d05	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4001d09	        0x4883c059	                           add rax, 0x59	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4001d0d	          0x4889c7	                            mov rdi, rax	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4001d10	      0xe800000000	                          call 0x4001d15	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4001d15	          0x4889c2	                            mov rdx, rax	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4001d18	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4001d1b	            0x4898	                                    cdqe	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4001d1d	          0x4839c2	                            cmp rdx, rax	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4001d20	            0x7607	                           jbe 0x4001d29	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4001d22	    0xc745e8ffffff	     mov dword [rbp - 0x18], 0xffffffff 	       734	dir.c	FUNCTION_24	WHILE_1	IF_3
0x4001d29	        0x837de800	               cmp dword [rbp - 0x18], 0	       735	dir.c	FUNCTION_24	WHILE_1	IF_4
0x4001d2d	            0x7509	                           jne 0x4001d38	       735	dir.c	FUNCTION_24	WHILE_1	IF_4
0x4001d2f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       736	dir.c	FUNCTION_24	WHILE_1	IF_4
0x4001d33	      0xe9a8010000	                           jmp 0x4001ee0	       736	dir.c	FUNCTION_24	WHILE_1	IF_4
0x4001d38	        0x837de800	               cmp dword [rbp - 0x18], 0	       737	dir.c	FUNCTION_24	WHILE_1	IF_5
0x4001d3c	            0x7908	                           jns 0x4001d46	       737	dir.c	FUNCTION_24	WHILE_1	IF_5
0x4001d3e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       738	dir.c	FUNCTION_24	WHILE_1	IF_5
0x4001d41	          0x8945e4	             mov dword [rbp - 0x1c], eax	       738	dir.c	FUNCTION_24	WHILE_1	IF_5
0x4001d44	            0xeb09	                           jmp 0x4001d4f	       739	dir.c	FUNCTION_24	WHILE_1	IF_5
0x4001d46	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       741	dir.c	FUNCTION_24	WHILE_1
0x4001d49	          0x83c001	                              add eax, 1	       741	dir.c	FUNCTION_24	WHILE_1
0x4001d4c	          0x8945e0	             mov dword [rbp - 0x20], eax	       741	dir.c	FUNCTION_24	WHILE_1
0x4001d4f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       729	dir.c	FUNCTION_24	WHILE_1
0x4001d52	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	       729	dir.c	FUNCTION_24	WHILE_1
0x4001d55	     0xf8f5cffffff	                            jg 0x4001cb7	       729	dir.c	FUNCTION_24	WHILE_1
0x4001d5b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       744	dir.c	FUNCTION_24
0x4001d5f	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	       744	dir.c	FUNCTION_24
0x4001d65	          0x8d5001	                      lea edx, [rax + 1]	       744	dir.c	FUNCTION_24
0x4001d68	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       744	dir.c	FUNCTION_24
0x4001d6c	    0x8990a8000000	             mov dword [rax + 0xa8], edx	       744	dir.c	FUNCTION_24
0x4001d72	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       745	dir.c	FUNCTION_24
0x4001d75	            0x4898	                                    cdqe	       745	dir.c	FUNCTION_24
0x4001d77	        0x488945f8	                mov qword [rbp - 8], rax	       745	dir.c	FUNCTION_24
0x4001d7b	        0x488b45f8	                mov rax, qword [rbp - 8]	       745	dir.c	FUNCTION_24
0x4001d7f	          0x4889c6	                            mov rsi, rax	       745	dir.c	FUNCTION_24
0x4001d82	      0xbf60000000	                           mov edi, 0x60	       745	dir.c	FUNCTION_24
0x4001d87	      0xe8e6e2ffff	                         call sym.st_add	       745	dir.c	FUNCTION_24
0x4001d8c	      0xbe01000000	                              mov esi, 1	       745	dir.c	FUNCTION_24
0x4001d91	          0x4889c7	                            mov rdi, rax	       745	dir.c	FUNCTION_24
0x4001d94	      0xe8d9e2ffff	                         call sym.st_add	       745	dir.c	FUNCTION_24
0x4001d99	          0x4889c6	                            mov rsi, rax	       745	dir.c	FUNCTION_24
0x4001d9c	      0xbf01000000	                              mov edi, 1	       745	dir.c	FUNCTION_24
0x4001da1	      0xe800000000	                          call 0x4001da6	       745	dir.c	FUNCTION_24
0x4001da6	        0x488945f0	             mov qword [rbp - 0x10], rax	       745	dir.c	FUNCTION_24
0x4001daa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       745	dir.c	FUNCTION_24
0x4001dae	        0x488d4859	                   lea rcx, [rax + 0x59]	       745	dir.c	FUNCTION_24
0x4001db2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       745	dir.c	FUNCTION_24
0x4001db6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       745	dir.c	FUNCTION_24
0x4001dba	          0x4889c6	                            mov rsi, rax	       745	dir.c	FUNCTION_24
0x4001dbd	          0x4889cf	                            mov rdi, rcx	       745	dir.c	FUNCTION_24
0x4001dc0	      0xe800000000	                          call 0x4001dc5	       745	dir.c	FUNCTION_24
0x4001dc5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       747	dir.c	FUNCTION_24
0x4001dc9	          0x8b4038	            mov eax, dword [rax + 0x38] 	       747	dir.c	FUNCTION_24
0x4001dcc	          0x8d5001	                      lea edx, [rax + 1]	       747	dir.c	FUNCTION_24
0x4001dcf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       747	dir.c	FUNCTION_24
0x4001dd3	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       747	dir.c	FUNCTION_24
0x4001dd6	            0x39c2	                            cmp edx, eax	       747	dir.c	FUNCTION_24
0x4001dd8	     0xf8685000000	                           jbe 0x4001e63	       747	dir.c	FUNCTION_24
0x4001dde	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       747	dir.c	FUNCTION_24
0x4001de2	          0x8b503c	            mov edx, dword [rax + 0x3c] 	       747	dir.c	FUNCTION_24
0x4001de5	            0x89d0	                            mov eax, edx	       747	dir.c	FUNCTION_24
0x4001de7	             0x1c0	                            add eax, eax	       747	dir.c	FUNCTION_24
0x4001de9	             0x1d0	                            add eax, edx	       747	dir.c	FUNCTION_24
0x4001deb	          0x83c030	                           add eax, 0x30	       747	dir.c	FUNCTION_24
0x4001dee	            0xd1e8	                              shr eax, 1	       747	dir.c	FUNCTION_24
0x4001df0	            0x89c2	                            mov edx, eax	       747	dir.c	FUNCTION_24
0x4001df2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       747	dir.c	FUNCTION_24
0x4001df6	          0x8b4038	            mov eax, dword [rax + 0x38] 	       747	dir.c	FUNCTION_24
0x4001df9	          0x83c001	                              add eax, 1	       747	dir.c	FUNCTION_24
0x4001dfc	            0x39c2	                            cmp edx, eax	       747	dir.c	FUNCTION_24
0x4001dfe	            0x7313	                           jae 0x4001e13	       747	dir.c	FUNCTION_24
0x4001e00	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       747	dir.c	FUNCTION_24
0x4001e04	          0x8b4038	            mov eax, dword [rax + 0x38] 	       747	dir.c	FUNCTION_24
0x4001e07	          0x8d5001	                      lea edx, [rax + 1]	       747	dir.c	FUNCTION_24
0x4001e0a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       747	dir.c	FUNCTION_24
0x4001e0e	          0x89503c	             mov dword [rax + 0x3c], edx	       747	dir.c	FUNCTION_24
0x4001e11	            0xeb1b	                           jmp 0x4001e2e	       747	dir.c	FUNCTION_24
0x4001e13	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       747	dir.c	FUNCTION_24
0x4001e17	          0x8b503c	            mov edx, dword [rax + 0x3c] 	       747	dir.c	FUNCTION_24
0x4001e1a	            0x89d0	                            mov eax, edx	       747	dir.c	FUNCTION_24
0x4001e1c	             0x1c0	                            add eax, eax	       747	dir.c	FUNCTION_24
0x4001e1e	             0x1d0	                            add eax, edx	       747	dir.c	FUNCTION_24
0x4001e20	          0x83c030	                           add eax, 0x30	       747	dir.c	FUNCTION_24
0x4001e23	            0xd1e8	                              shr eax, 1	       747	dir.c	FUNCTION_24
0x4001e25	            0x89c2	                            mov edx, eax	       747	dir.c	FUNCTION_24
0x4001e27	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       747	dir.c	FUNCTION_24
0x4001e2b	          0x89503c	             mov dword [rax + 0x3c], edx	       747	dir.c	FUNCTION_24
0x4001e2e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       747	dir.c	FUNCTION_24
0x4001e32	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       747	dir.c	FUNCTION_24
0x4001e35	            0x89c0	                            mov eax, eax	       747	dir.c	FUNCTION_24
0x4001e37	          0x4889c6	                            mov rsi, rax	       747	dir.c	FUNCTION_24
0x4001e3a	      0xbf08000000	                              mov edi, 8	       747	dir.c	FUNCTION_24
0x4001e3f	      0xe872e2ffff	                        call sym.st_mult	       747	dir.c	FUNCTION_24
0x4001e44	          0x4889c2	                            mov rdx, rax	       747	dir.c	FUNCTION_24
0x4001e47	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       747	dir.c	FUNCTION_24
0x4001e4b	          0x488b00	                    mov rax, qword [rax]	       747	dir.c	FUNCTION_24
0x4001e4e	          0x4889d6	                            mov rsi, rdx	       747	dir.c	FUNCTION_24
0x4001e51	          0x4889c7	                            mov rdi, rax	       747	dir.c	FUNCTION_24
0x4001e54	      0xe800000000	                          call 0x4001e59	       747	dir.c	FUNCTION_24
0x4001e59	          0x4889c2	                            mov rdx, rax	       747	dir.c	FUNCTION_24
0x4001e5c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       747	dir.c	FUNCTION_24
0x4001e60	          0x488910	                    mov qword [rax], rdx	       747	dir.c	FUNCTION_24
0x4001e63	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       748	dir.c	FUNCTION_24
0x4001e67	          0x8b5038	            mov edx, dword [rax + 0x38] 	       748	dir.c	FUNCTION_24
0x4001e6a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       748	dir.c	FUNCTION_24
0x4001e6d	            0x29c2	                            sub edx, eax	       748	dir.c	FUNCTION_24
0x4001e6f	            0x89d0	                            mov eax, edx	       748	dir.c	FUNCTION_24
0x4001e71	            0x89c7	                            mov edi, eax	       748	dir.c	FUNCTION_24
0x4001e73	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       748	dir.c	FUNCTION_24
0x4001e77	          0x488b00	                    mov rax, qword [rax]	       748	dir.c	FUNCTION_24
0x4001e7a	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       748	dir.c	FUNCTION_24
0x4001e7d	          0x4863d2	                         movsxd rdx, edx	       748	dir.c	FUNCTION_24
0x4001e80	        0x48c1e203	                              shl rdx, 3	       748	dir.c	FUNCTION_24
0x4001e84	        0x488d3410	                    lea rsi, [rax + rdx]	       748	dir.c	FUNCTION_24
0x4001e88	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       748	dir.c	FUNCTION_24
0x4001e8c	          0x488b00	                    mov rax, qword [rax]	       748	dir.c	FUNCTION_24
0x4001e8f	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       748	dir.c	FUNCTION_24
0x4001e92	          0x4863d2	                         movsxd rdx, edx	       748	dir.c	FUNCTION_24
0x4001e95	        0x4883c201	                              add rdx, 1	       748	dir.c	FUNCTION_24
0x4001e99	        0x48c1e203	                              shl rdx, 3	       748	dir.c	FUNCTION_24
0x4001e9d	          0x4801d0	                            add rax, rdx	       748	dir.c	FUNCTION_24
0x4001ea0	      0xb908000000	                              mov ecx, 8	       748	dir.c	FUNCTION_24
0x4001ea5	          0x4889fa	                            mov rdx, rdi	       748	dir.c	FUNCTION_24
0x4001ea8	          0x4889c7	                            mov rdi, rax	       748	dir.c	FUNCTION_24
0x4001eab	      0xe858e2ffff	                     call sym.move_array	       748	dir.c	FUNCTION_24
0x4001eb0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       750	dir.c	FUNCTION_24
0x4001eb4	          0x8b4038	            mov eax, dword [rax + 0x38] 	       750	dir.c	FUNCTION_24
0x4001eb7	          0x8d5001	                      lea edx, [rax + 1]	       750	dir.c	FUNCTION_24
0x4001eba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       750	dir.c	FUNCTION_24
0x4001ebe	          0x895038	             mov dword [rax + 0x38], edx	       750	dir.c	FUNCTION_24
0x4001ec1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       751	dir.c	FUNCTION_24
0x4001ec5	          0x488b00	                    mov rax, qword [rax]	       751	dir.c	FUNCTION_24
0x4001ec8	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       751	dir.c	FUNCTION_24
0x4001ecb	          0x4863d2	                         movsxd rdx, edx	       751	dir.c	FUNCTION_24
0x4001ece	        0x48c1e203	                              shl rdx, 3	       751	dir.c	FUNCTION_24
0x4001ed2	          0x4801c2	                            add rdx, rax	       751	dir.c	FUNCTION_24
0x4001ed5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       751	dir.c	FUNCTION_24
0x4001ed9	          0x488902	                    mov qword [rdx], rax	       751	dir.c	FUNCTION_24
0x4001edc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       752	dir.c	FUNCTION_24
0x4001ee0	              0xc9	                                   leave	       753	dir.c	FUNCTION_24
0x4001ee1	              0xc3	                                     ret	       753	dir.c	FUNCTION_24
simplify_away	SWITCH,0:ELSE,0:WHILE,0:IF,3:DO,0:CALL,1:functions,0:FOR,1	68
0x4003b66	              0x55	                                push rbp	      1525	dir.c	FUNCTION_49
0x4003b67	          0x4889e5	                            mov rbp, rsp	      1525	dir.c	FUNCTION_49
0x4003b6a	        0x4883ec30	                           sub rsp, 0x30	      1525	dir.c	FUNCTION_49
0x4003b6e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1525	dir.c	FUNCTION_49
0x4003b72	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1525	dir.c	FUNCTION_49
0x4003b75	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1525	dir.c	FUNCTION_49
0x4003b79	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1528	dir.c	FUNCTION_49	IF_1
0x4003b7e	            0x740a	                            je 0x4003b8a	      1528	dir.c	FUNCTION_49	IF_1
0x4003b80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1528	dir.c	FUNCTION_49	IF_1
0x4003b84	            0x8b00	                    mov eax, dword [rax]	      1528	dir.c	FUNCTION_49	IF_1
0x4003b86	            0x85c0	                           test eax, eax	      1528	dir.c	FUNCTION_49	IF_1
0x4003b88	            0x750a	                           jne 0x4003b94	      1528	dir.c	FUNCTION_49	IF_1
0x4003b8a	      0xb800000000	                              mov eax, 0	      1529	dir.c	FUNCTION_49	IF_1
0x4003b8f	      0xe9b6000000	                           jmp 0x4003c4a	      1529	dir.c	FUNCTION_49	IF_1
0x4003b94	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1531	dir.c	FUNCTION_49
0x4003b98	          0x8b4008	                mov eax, dword [rax + 8]	      1531	dir.c	FUNCTION_49
0x4003b9b	          0x83e080	                     and eax, 0xffffff80	      1531	dir.c	FUNCTION_49
0x4003b9e	            0x85c0	                           test eax, eax	      1531	dir.c	FUNCTION_49
0x4003ba0	            0x7425	                            je 0x4003bc7	      1531	dir.c	FUNCTION_49
0x4003ba2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1531	dir.c	FUNCTION_49
0x4003ba6	          0x8b4008	                mov eax, dword [rax + 8]	      1531	dir.c	FUNCTION_49
0x4003ba9	          0x83e080	                     and eax, 0xffffff80	      1531	dir.c	FUNCTION_49
0x4003bac	            0x89c1	                            mov ecx, eax	      1531	dir.c	FUNCTION_49
0x4003bae	      0xba02060000	                          mov edx, 0x602	      1531	dir.c	FUNCTION_49
0x4003bb3	      0xbe00000000	                              mov esi, 0	      1531	dir.c	FUNCTION_49
0x4003bb8	      0xbf00000000	                              mov edi, 0	      1531	dir.c	FUNCTION_49
0x4003bbd	      0xb800000000	                              mov eax, 0	      1531	dir.c	FUNCTION_49
0x4003bc2	      0xe800000000	                          call 0x4003bc7	      1531	dir.c	FUNCTION_49
0x4003bc7	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1540	dir.c	FUNCTION_49	FOR_1
0x4003bce	            0xeb6a	                           jmp 0x4003c3a	      1540	dir.c	FUNCTION_49	FOR_1
0x4003bd0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1541	dir.c	FUNCTION_49	FOR_1
0x4003bd4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1541	dir.c	FUNCTION_49	FOR_1
0x4003bd8	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1541	dir.c	FUNCTION_49	FOR_1
0x4003bdb	            0x4898	                                    cdqe	      1541	dir.c	FUNCTION_49	FOR_1
0x4003bdd	        0x48c1e003	                              shl rax, 3	      1541	dir.c	FUNCTION_49	FOR_1
0x4003be1	    0x488d0cc50000	                        lea rcx, [rax*8]	      1541	dir.c	FUNCTION_49	FOR_1
0x4003be9	          0x4829c1	                            sub rcx, rax	      1541	dir.c	FUNCTION_49	FOR_1
0x4003bec	          0x4889c8	                            mov rax, rcx	      1541	dir.c	FUNCTION_49	FOR_1
0x4003bef	          0x4801d0	                            add rax, rdx	      1541	dir.c	FUNCTION_49	FOR_1
0x4003bf2	        0x488945f8	                mov qword [rbp - 8], rax	      1541	dir.c	FUNCTION_49	FOR_1
0x4003bf6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1542	dir.c	FUNCTION_49	FOR_1
0x4003bfa	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1542	dir.c	FUNCTION_49	FOR_1
0x4003bfd	          0x8945f4	              mov dword [rbp - 0xc], eax	      1542	dir.c	FUNCTION_49	FOR_1
0x4003c00	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1544	dir.c	FUNCTION_49	FOR_1	IF_2
0x4003c03	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1544	dir.c	FUNCTION_49	FOR_1	IF_2
0x4003c06	            0x7e06	                           jle 0x4003c0e	      1544	dir.c	FUNCTION_49	FOR_1	IF_2
0x4003c08	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1545	dir.c	FUNCTION_49	FOR_1	IF_2
0x4003c0b	          0x8945f4	              mov dword [rbp - 0xc], eax	      1545	dir.c	FUNCTION_49	FOR_1	IF_2
0x4003c0e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4003c11	          0x4863c8	                         movsxd rcx, eax	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4003c14	        0x488b45f8	                mov rax, qword [rbp - 8]	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4003c18	          0x488b30	                    mov rsi, qword [rax]	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4003c1b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4003c1f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4003c23	          0x4889c7	                            mov rdi, rax	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4003c26	      0xe8acc9ffff	                     call sym.ps_strncmp	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4003c2b	            0x85c0	                           test eax, eax	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4003c2d	            0x7507	                           jne 0x4003c36	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4003c2f	      0xb800000000	                              mov eax, 0	      1547	dir.c	FUNCTION_49	FOR_1	IF_3
0x4003c34	            0xeb14	                           jmp 0x4003c4a	      1547	dir.c	FUNCTION_49	FOR_1	IF_3
0x4003c36	        0x8345f001	               add dword [rbp - 0x10], 1	      1540	dir.c	FUNCTION_49	FOR_1
0x4003c3a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1540	dir.c	FUNCTION_49	FOR_1
0x4003c3e	            0x8b00	                    mov eax, dword [rax]	      1540	dir.c	FUNCTION_49	FOR_1
0x4003c40	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1540	dir.c	FUNCTION_49	FOR_1
0x4003c43	            0x7f8b	                            jg 0x4003bd0	      1540	dir.c	FUNCTION_49	FOR_1
0x4003c45	      0xb801000000	                              mov eax, 1	      1550	dir.c	FUNCTION_49
0x4003c4a	              0xc9	                                   leave	      1551	dir.c	FUNCTION_49
0x4003c4b	              0xc3	                                     ret	      1551	dir.c	FUNCTION_49
common_prefix	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,2:functions,0:FOR,0	21
0x4000b7a	              0x55	                                push rbp	       184	dir.c	FUNCTION_7
0x4000b7b	          0x4889e5	                            mov rbp, rsp	       184	dir.c	FUNCTION_7
0x4000b7e	        0x4883ec20	                           sub rsp, 0x20	       184	dir.c	FUNCTION_7
0x4000b82	        0x48897de8	             mov qword [rbp - 0x18], rdi	       184	dir.c	FUNCTION_7
0x4000b86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       185	dir.c	FUNCTION_7	CALL_1
0x4000b8a	          0x4889c7	                            mov rdi, rax	       185	dir.c	FUNCTION_7	CALL_1
0x4000b8d	      0xe80efeffff	              call sym.common_prefix_len	       185	dir.c	FUNCTION_7	CALL_1
0x4000b92	        0x488945f8	                mov qword [rbp - 8], rax	       185	dir.c	FUNCTION_7	CALL_1
0x4000b96	      0x48837df800	                  cmp qword [rbp - 8], 0	       187	dir.c	FUNCTION_7	CALL_2
0x4000b9b	            0x741c	                            je 0x4000bb9	       187	dir.c	FUNCTION_7	CALL_2
0x4000b9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       187	dir.c	FUNCTION_7	CALL_2
0x4000ba1	        0x488b4010	            mov rax, qword [rax + 0x10] 	       187	dir.c	FUNCTION_7	CALL_2
0x4000ba5	          0x488b00	                    mov rax, qword [rax]	       187	dir.c	FUNCTION_7	CALL_2
0x4000ba8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       187	dir.c	FUNCTION_7	CALL_2
0x4000bac	          0x4889d6	                            mov rsi, rdx	       187	dir.c	FUNCTION_7	CALL_2
0x4000baf	          0x4889c7	                            mov rdi, rax	       187	dir.c	FUNCTION_7	CALL_2
0x4000bb2	      0xe800000000	                          call 0x4000bb7	       187	dir.c	FUNCTION_7	CALL_2
0x4000bb7	            0xeb05	                           jmp 0x4000bbe	       187	dir.c	FUNCTION_7	CALL_2
0x4000bb9	      0xb800000000	                              mov eax, 0	       187	dir.c	FUNCTION_7	CALL_2
0x4000bbe	              0xc9	                                   leave	       188	dir.c	FUNCTION_7
0x4000bbf	              0xc3	                                     ret	       188	dir.c	FUNCTION_7
ps_strcmp	SWITCH,0:ELSE,1:WHILE,0:IF,1:DO,0:CALL,2:functions,0:FOR,0	24
0x400062f	              0x55	                                push rbp	       100	pathspec.h	FUNCTION_169
0x4000630	          0x4889e5	                            mov rbp, rsp	       100	pathspec.h	FUNCTION_169
0x4000633	        0x4883ec20	                           sub rsp, 0x20	       100	pathspec.h	FUNCTION_169
0x4000637	        0x48897df8	                mov qword [rbp - 8], rdi	       100	pathspec.h	FUNCTION_169
0x400063b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       100	pathspec.h	FUNCTION_169
0x400063f	        0x488955e8	             mov qword [rbp - 0x18], rdx	       100	pathspec.h	FUNCTION_169
0x4000643	        0x488b45f8	                mov rax, qword [rbp - 8]	       101	pathspec.h	FUNCTION_169	IF_1
0x4000647	          0x8b4010	            mov eax, dword [rax + 0x10] 	       101	pathspec.h	FUNCTION_169	IF_1
0x400064a	          0x83e010	                           and eax, 0x10	       101	pathspec.h	FUNCTION_169	IF_1
0x400064d	            0x85c0	                           test eax, eax	       101	pathspec.h	FUNCTION_169	IF_1
0x400064f	            0x7415	                            je 0x4000666	       101	pathspec.h	FUNCTION_169	IF_1
0x4000651	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       102	pathspec.h	FUNCTION_169	CALL_1
0x4000655	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       102	pathspec.h	FUNCTION_169	CALL_1
0x4000659	          0x4889d6	                            mov rsi, rdx	       102	pathspec.h	FUNCTION_169	CALL_1
0x400065c	          0x4889c7	                            mov rdi, rax	       102	pathspec.h	FUNCTION_169	CALL_1
0x400065f	      0xe800000000	                          call 0x4000664	       102	pathspec.h	FUNCTION_169	CALL_1
0x4000664	            0xeb13	                           jmp 0x4000679	       102	pathspec.h	FUNCTION_169	CALL_1
0x4000666	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       104	pathspec.h	FUNCTION_169	CALL_2
0x400066a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       104	pathspec.h	FUNCTION_169	CALL_2
0x400066e	          0x4889d6	                            mov rsi, rdx	       104	pathspec.h	FUNCTION_169	CALL_2
0x4000671	          0x4889c7	                            mov rdi, rax	       104	pathspec.h	FUNCTION_169	CALL_2
0x4000674	      0xe800000000	                          call 0x4000679	       104	pathspec.h	FUNCTION_169	CALL_2
0x4000679	              0xc9	                                   leave	       105	pathspec.h	FUNCTION_169
0x400067a	              0xc3	                                     ret	       105	pathspec.h	FUNCTION_169
add_excludes_from_file	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	19
0x40027ca	              0x55	                                push rbp	       956	dir.c	FUNCTION_34
0x40027cb	          0x4889e5	                            mov rbp, rsp	       956	dir.c	FUNCTION_34
0x40027ce	        0x4883ec10	                           sub rsp, 0x10	       956	dir.c	FUNCTION_34
0x40027d2	        0x48897df8	                mov qword [rbp - 8], rdi	       956	dir.c	FUNCTION_34
0x40027d6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       956	dir.c	FUNCTION_34
0x40027da	        0x488b45f8	                mov rax, qword [rbp - 8]	       957	dir.c	FUNCTION_34
0x40027de	    0x8b8008010000	           mov eax, dword [rax + 0x108] 	       957	dir.c	FUNCTION_34
0x40027e4	          0x8d5001	                      lea edx, [rax + 1]	       957	dir.c	FUNCTION_34
0x40027e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       957	dir.c	FUNCTION_34
0x40027eb	    0x899008010000	            mov dword [rax + 0x108], edx	       957	dir.c	FUNCTION_34
0x40027f1	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       958	dir.c	FUNCTION_34	CALL_1
0x40027f5	        0x488b45f8	                mov rax, qword [rbp - 8]	       958	dir.c	FUNCTION_34	CALL_1
0x40027f9	      0xba00000000	                              mov edx, 0	       958	dir.c	FUNCTION_34	CALL_1
0x40027fe	          0x4889ce	                            mov rsi, rcx	       958	dir.c	FUNCTION_34	CALL_1
0x4002801	          0x4889c7	                            mov rdi, rax	       958	dir.c	FUNCTION_34	CALL_1
0x4002804	      0xe826ffffff	       call sym.add_excludes_from_file_1	       958	dir.c	FUNCTION_34	CALL_1
0x4002809	              0x90	                                     nop	       959	dir.c	FUNCTION_34
0x400280a	              0xc9	                                   leave	       959	dir.c	FUNCTION_34
0x400280b	              0xc3	                                     ret	       959	dir.c	FUNCTION_34
read_skip_worktree_file_from_index	SWITCH,0:ELSE,0:WHILE,0:IF,2:DO,0:CALL,3:functions,0:FOR,0	51
0x4001ab0	              0x55	                                push rbp	       658	dir.c	FUNCTION_21
0x4001ab1	          0x4889e5	                            mov rbp, rsp	       658	dir.c	FUNCTION_21
0x4001ab4	        0x4883ec40	                           sub rsp, 0x40	       658	dir.c	FUNCTION_21
0x4001ab8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       658	dir.c	FUNCTION_21
0x4001abc	        0x488975e0	             mov qword [rbp - 0x20], rsi	       658	dir.c	FUNCTION_21
0x4001ac0	        0x488955d8	             mov qword [rbp - 0x28], rdx	       658	dir.c	FUNCTION_21
0x4001ac4	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       658	dir.c	FUNCTION_21
0x4001ac8	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       658	dir.c	FUNCTION_21
0x4001acc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       661	dir.c	FUNCTION_21	CALL_1
0x4001ad0	          0x4889c7	                            mov rdi, rax	       661	dir.c	FUNCTION_21	CALL_1
0x4001ad3	      0xe800000000	                          call 0x4001ad8	       661	dir.c	FUNCTION_21	CALL_1
0x4001ad8	          0x8945f8	                mov dword [rbp - 8], eax	       661	dir.c	FUNCTION_21	CALL_1
0x4001adb	          0x8b55f8	                mov edx, dword [rbp - 8]	       662	dir.c	FUNCTION_21	CALL_2
0x4001ade	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       662	dir.c	FUNCTION_21	CALL_2
0x4001ae2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       662	dir.c	FUNCTION_21	CALL_2
0x4001ae6	          0x4889ce	                            mov rsi, rcx	       662	dir.c	FUNCTION_21	CALL_2
0x4001ae9	          0x4889c7	                            mov rdi, rax	       662	dir.c	FUNCTION_21	CALL_2
0x4001aec	      0xe800000000	                          call 0x4001af1	       662	dir.c	FUNCTION_21	CALL_2
0x4001af1	          0x8945fc	                mov dword [rbp - 4], eax	       662	dir.c	FUNCTION_21	CALL_2
0x4001af4	        0x837dfc00	                  cmp dword [rbp - 4], 0	       663	dir.c	FUNCTION_21	IF_1
0x4001af8	            0x7907	                           jns 0x4001b01	       663	dir.c	FUNCTION_21	IF_1
0x4001afa	      0xb8ffffffff	                     mov eax, 0xffffffff	       664	dir.c	FUNCTION_21	IF_1
0x4001aff	            0xeb59	                           jmp 0x4001b5a	       664	dir.c	FUNCTION_21	IF_1
0x4001b01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       665	dir.c	FUNCTION_21	IF_2
0x4001b05	          0x488b00	                    mov rax, qword [rax]	       665	dir.c	FUNCTION_21	IF_2
0x4001b08	          0x8b55fc	                mov edx, dword [rbp - 4]	       665	dir.c	FUNCTION_21	IF_2
0x4001b0b	          0x4863d2	                         movsxd rdx, edx	       665	dir.c	FUNCTION_21	IF_2
0x4001b0e	        0x48c1e203	                              shl rdx, 3	       665	dir.c	FUNCTION_21	IF_2
0x4001b12	          0x4801d0	                            add rax, rdx	       665	dir.c	FUNCTION_21	IF_2
0x4001b15	          0x488b00	                    mov rax, qword [rax]	       665	dir.c	FUNCTION_21	IF_2
0x4001b18	          0x8b4038	            mov eax, dword [rax + 0x38] 	       665	dir.c	FUNCTION_21	IF_2
0x4001b1b	      0x2500000040	                     and eax, 0x40000000	       665	dir.c	FUNCTION_21	IF_2
0x4001b20	            0x85c0	                           test eax, eax	       665	dir.c	FUNCTION_21	IF_2
0x4001b22	            0x7507	                           jne 0x4001b2b	       665	dir.c	FUNCTION_21	IF_2
0x4001b24	      0xb8ffffffff	                     mov eax, 0xffffffff	       666	dir.c	FUNCTION_21	IF_2
0x4001b29	            0xeb2f	                           jmp 0x4001b5a	       666	dir.c	FUNCTION_21	IF_2
0x4001b2b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       668	dir.c	FUNCTION_21	CALL_3
0x4001b2f	          0x488b00	                    mov rax, qword [rax]	       668	dir.c	FUNCTION_21	CALL_3
0x4001b32	          0x8b55fc	                mov edx, dword [rbp - 4]	       668	dir.c	FUNCTION_21	CALL_3
0x4001b35	          0x4863d2	                         movsxd rdx, edx	       668	dir.c	FUNCTION_21	CALL_3
0x4001b38	        0x48c1e203	                              shl rdx, 3	       668	dir.c	FUNCTION_21	CALL_3
0x4001b3c	          0x4801d0	                            add rax, rdx	       668	dir.c	FUNCTION_21	CALL_3
0x4001b3f	          0x488b00	                    mov rax, qword [rax]	       668	dir.c	FUNCTION_21	CALL_3
0x4001b42	        0x488d7844	                   lea rdi, [rax + 0x44]	       668	dir.c	FUNCTION_21	CALL_3
0x4001b46	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       668	dir.c	FUNCTION_21	CALL_3
0x4001b4a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       668	dir.c	FUNCTION_21	CALL_3
0x4001b4e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       668	dir.c	FUNCTION_21	CALL_3
0x4001b52	          0x4889c6	                            mov rsi, rax	       668	dir.c	FUNCTION_21	CALL_3
0x4001b55	      0xe835f1ffff	                   call sym.do_read_blob	       668	dir.c	FUNCTION_21	CALL_3
0x4001b5a	              0xc9	                                   leave	       669	dir.c	FUNCTION_21
0x4001b5b	              0xc3	                                     ret	       669	dir.c	FUNCTION_21
get_ident_string	SWITCH,0:ELSE,0:WHILE,0:IF,2:DO,0:CALL,5:functions,0:FOR,0	36
0x40050b1	              0x55	                                push rbp	      2102	dir.c	FUNCTION_65
0x40050b2	          0x4889e5	                            mov rbp, rsp	      2102	dir.c	FUNCTION_65
0x40050b5	    0x4881ec900100	                          sub rsp, 0x190	      2102	dir.c	FUNCTION_65
0x40050bc	    0x64488b042528	                mov rax, qword fs:[0x28]	      2102	dir.c	FUNCTION_65
0x40050c5	        0x488945f8	                mov qword [rbp - 8], rax	      2102	dir.c	FUNCTION_65
0x40050c9	            0x31c0	                            xor eax, eax	      2102	dir.c	FUNCTION_65
0x40050cb	    0x488b05000000	            mov rax, qword [0x040050d2] 	      2106	dir.c	FUNCTION_65	IF_1
0x40050d2	          0x4885c0	                           test rax, rax	      2106	dir.c	FUNCTION_65	IF_1
0x40050d5	            0x7409	                            je 0x40050e0	      2106	dir.c	FUNCTION_65	IF_1
0x40050d7	    0x488b05000000	            mov rax, qword [0x040050de] 	      2107	dir.c	FUNCTION_65	IF_1
0x40050de	            0xeb57	                           jmp 0x4005137	      2107	dir.c	FUNCTION_65	IF_1
0x40050e0	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      2108	dir.c	FUNCTION_65	IF_2	CALL_1
0x40050e7	          0x4889c7	                            mov rdi, rax	      2108	dir.c	FUNCTION_65	IF_2	CALL_1
0x40050ea	      0xe800000000	                          call 0x40050ef	      2108	dir.c	FUNCTION_65	IF_2	CALL_1
0x40050ef	            0x85c0	                           test eax, eax	      2108	dir.c	FUNCTION_65	IF_2	CALL_1
0x40050f1	            0x7917	                           jns 0x400510a	      2108	dir.c	FUNCTION_65	IF_2	CALL_1
0x40050f3	      0xbf00000000	                              mov edi, 0	      2109	dir.c	FUNCTION_65	CALL_3
0x40050f8	      0xe8ddb2ffff	                               call sym.	      2109	dir.c	FUNCTION_65	CALL_3
0x40050fd	          0x4889c7	                            mov rdi, rax	      2109	dir.c	FUNCTION_65	CALL_3
0x4005100	      0xb800000000	                              mov eax, 0	      2109	dir.c	FUNCTION_65	CALL_3
0x4005105	      0xe800000000	                          call 0x400510a	      2109	dir.c	FUNCTION_65	CALL_3
0x400510a	      0xe800000000	                          call 0x400510f	      2110	dir.c	FUNCTION_65	CALL_5
0x400510f	          0x4889c2	                            mov rdx, rax	      2110	dir.c	FUNCTION_65	CALL_5
0x4005112	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      2110	dir.c	FUNCTION_65	CALL_5
0x4005119	          0x4889c1	                            mov rcx, rax	      2110	dir.c	FUNCTION_65	CALL_5
0x400511c	      0xbe00000000	                              mov esi, 0	      2110	dir.c	FUNCTION_65	CALL_5
0x4005121	      0xbf00000000	                              mov edi, 0	      2110	dir.c	FUNCTION_65	CALL_5
0x4005126	      0xb800000000	                              mov eax, 0	      2110	dir.c	FUNCTION_65	CALL_5
0x400512b	      0xe800000000	                          call 0x4005130	      2110	dir.c	FUNCTION_65	CALL_5
0x4005130	    0x488b05000000	            mov rax, qword [0x04005137] 	      2112	dir.c	FUNCTION_65
0x4005137	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2113	dir.c	FUNCTION_65
0x400513b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2113	dir.c	FUNCTION_65
0x4005144	            0x7405	                            je 0x400514b	      2113	dir.c	FUNCTION_65
0x4005146	      0xe800000000	                          call 0x400514b	      2113	dir.c	FUNCTION_65
0x400514b	              0xc9	                                   leave	      2113	dir.c	FUNCTION_65
0x400514c	              0xc3	                                     ret	      2113	dir.c	FUNCTION_65
submodule_path_match	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,2:functions,0:FOR,0	23
0x400154c	              0x55	                                push rbp	       520	dir.c	FUNCTION_15
0x400154d	          0x4889e5	                            mov rbp, rsp	       520	dir.c	FUNCTION_15
0x4001550	        0x4883ec30	                           sub rsp, 0x30	       520	dir.c	FUNCTION_15
0x4001554	        0x48897de8	             mov qword [rbp - 0x18], rdi	       520	dir.c	FUNCTION_15
0x4001558	        0x488975e0	             mov qword [rbp - 0x20], rsi	       520	dir.c	FUNCTION_15
0x400155c	        0x488955d8	             mov qword [rbp - 0x28], rdx	       520	dir.c	FUNCTION_15
0x4001560	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       522	dir.c	FUNCTION_15	CALL_2
0x4001564	          0x4889c7	                            mov rdi, rax	       522	dir.c	FUNCTION_15	CALL_2
0x4001567	      0xe800000000	                          call 0x400156c	       522	dir.c	FUNCTION_15	CALL_2
0x400156c	            0x89c7	                            mov edi, eax	       521	dir.c	FUNCTION_15	CALL_1
0x400156e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       521	dir.c	FUNCTION_15	CALL_1
0x4001572	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       521	dir.c	FUNCTION_15	CALL_1
0x4001576	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       521	dir.c	FUNCTION_15	CALL_1
0x400157a	    0x41b906000000	                              mov r9d, 6	       521	dir.c	FUNCTION_15	CALL_1
0x4001580	          0x4989d0	                             mov r8, rdx	       521	dir.c	FUNCTION_15	CALL_1
0x4001583	      0xb900000000	                              mov ecx, 0	       521	dir.c	FUNCTION_15	CALL_1
0x4001588	            0x89fa	                            mov edx, edi	       521	dir.c	FUNCTION_15	CALL_1
0x400158a	          0x4889c7	                            mov rdi, rax	       521	dir.c	FUNCTION_15	CALL_1
0x400158d	      0xe8eafbffff	              call sym.do_match_pathspec	       521	dir.c	FUNCTION_15	CALL_1
0x4001592	          0x8945fc	                mov dword [rbp - 4], eax	       521	dir.c	FUNCTION_15	CALL_1
0x4001595	          0x8b45fc	                mov eax, dword [rbp - 4]	       526	dir.c	FUNCTION_15
0x4001598	              0xc9	                                   leave	       527	dir.c	FUNCTION_15
0x4001599	              0xc3	                                     ret	       527	dir.c	FUNCTION_15
do_read_blob	SWITCH,0:ELSE,0:WHILE,0:IF,4:DO,0:CALL,8:functions,0:FOR,0	91
0x4000c8f	              0x55	                                push rbp	       239	dir.c	FUNCTION_10
0x4000c90	          0x4889e5	                            mov rbp, rsp	       239	dir.c	FUNCTION_10
0x4000c93	        0x4883ec40	                           sub rsp, 0x40	       239	dir.c	FUNCTION_10
0x4000c97	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       239	dir.c	FUNCTION_10
0x4000c9b	        0x488975d0	             mov qword [rbp - 0x30], rsi	       239	dir.c	FUNCTION_10
0x4000c9f	        0x488955c8	             mov qword [rbp - 0x38], rdx	       239	dir.c	FUNCTION_10
0x4000ca3	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       239	dir.c	FUNCTION_10
0x4000ca7	    0x64488b042528	                mov rax, qword fs:[0x28]	       239	dir.c	FUNCTION_10
0x4000cb0	        0x488945f8	                mov qword [rbp - 8], rax	       239	dir.c	FUNCTION_10
0x4000cb4	            0x31c0	                            xor eax, eax	       239	dir.c	FUNCTION_10
0x4000cb6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       244	dir.c	FUNCTION_10
0x4000cba	    0x48c700000000	                      mov qword [rax], 0	       244	dir.c	FUNCTION_10
0x4000cc1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       245	dir.c	FUNCTION_10
0x4000cc5	    0x48c700000000	                      mov qword [rax], 0	       245	dir.c	FUNCTION_10
0x4000ccc	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       247	dir.c	FUNCTION_10	CALL_1
0x4000cd0	        0x488d4de4	                   lea rcx, [rbp - 0x1c]	       247	dir.c	FUNCTION_10	CALL_1
0x4000cd4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       247	dir.c	FUNCTION_10	CALL_1
0x4000cd8	          0x4889ce	                            mov rsi, rcx	       247	dir.c	FUNCTION_10	CALL_1
0x4000cdb	          0x4889c7	                            mov rdi, rax	       247	dir.c	FUNCTION_10	CALL_1
0x4000cde	      0xe877f8ffff	               call sym.read_object_file	       247	dir.c	FUNCTION_10	CALL_1
0x4000ce3	        0x488945f0	             mov qword [rbp - 0x10], rax	       247	dir.c	FUNCTION_10	CALL_1
0x4000ce7	      0x48837df000	               cmp qword [rbp - 0x10], 0	       248	dir.c	FUNCTION_10	IF_1
0x4000cec	            0x7408	                            je 0x4000cf6	       248	dir.c	FUNCTION_10	IF_1
0x4000cee	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       248	dir.c	FUNCTION_10	IF_1
0x4000cf1	          0x83f803	                              cmp eax, 3	       248	dir.c	FUNCTION_10	IF_1
0x4000cf4	            0x7416	                            je 0x4000d0c	       248	dir.c	FUNCTION_10	IF_1
0x4000cf6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       249	dir.c	FUNCTION_10	IF_1	CALL_2
0x4000cfa	          0x4889c7	                            mov rdi, rax	       249	dir.c	FUNCTION_10	IF_1	CALL_2
0x4000cfd	      0xe800000000	                          call 0x4000d02	       249	dir.c	FUNCTION_10	IF_1	CALL_2
0x4000d02	      0xb8ffffffff	                     mov eax, 0xffffffff	       250	dir.c	FUNCTION_10	IF_1
0x4000d07	      0xe9c9000000	                           jmp 0x4000dd5	       250	dir.c	FUNCTION_10	IF_1
0x4000d0c	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       253	dir.c	FUNCTION_10	IF_2
0x4000d11	            0x742d	                            je 0x4000d40	       253	dir.c	FUNCTION_10	IF_2
0x4000d13	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       254	dir.c	FUNCTION_10	IF_2	CALL_3
0x4000d17	      0xba24000000	                           mov edx, 0x24	       254	dir.c	FUNCTION_10	IF_2	CALL_3
0x4000d1c	      0xbe00000000	                              mov esi, 0	       254	dir.c	FUNCTION_10	IF_2	CALL_3
0x4000d21	          0x4889c7	                            mov rdi, rax	       254	dir.c	FUNCTION_10	IF_2	CALL_3
0x4000d24	      0xe800000000	                          call 0x4000d29	       254	dir.c	FUNCTION_10	IF_2	CALL_3
0x4000d29	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       255	dir.c	FUNCTION_10	IF_2	CALL_4
0x4000d2d	        0x488d5024	                   lea rdx, [rax + 0x24]	       255	dir.c	FUNCTION_10	IF_2	CALL_4
0x4000d31	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       255	dir.c	FUNCTION_10	IF_2	CALL_4
0x4000d35	          0x4889c6	                            mov rsi, rax	       255	dir.c	FUNCTION_10	IF_2	CALL_4
0x4000d38	          0x4889d7	                            mov rdi, rdx	       255	dir.c	FUNCTION_10	IF_2	CALL_4
0x4000d3b	      0xe8cff7ffff	                         call sym.oidcpy	       255	dir.c	FUNCTION_10	IF_2	CALL_4
0x4000d40	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       258	dir.c	FUNCTION_10	IF_3
0x4000d44	          0x4885c0	                           test rax, rax	       258	dir.c	FUNCTION_10	IF_3
0x4000d47	            0x7513	                           jne 0x4000d5c	       258	dir.c	FUNCTION_10	IF_3
0x4000d49	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       259	dir.c	FUNCTION_10	IF_3	CALL_5
0x4000d4d	          0x4889c7	                            mov rdi, rax	       259	dir.c	FUNCTION_10	IF_3	CALL_5
0x4000d50	      0xe800000000	                          call 0x4000d55	       259	dir.c	FUNCTION_10	IF_3	CALL_5
0x4000d55	      0xb800000000	                              mov eax, 0	       260	dir.c	FUNCTION_10	IF_3
0x4000d5a	            0xeb79	                           jmp 0x4000dd5	       260	dir.c	FUNCTION_10	IF_3
0x4000d5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       263	dir.c	FUNCTION_10	IF_4
0x4000d60	        0x488d50ff	                      lea rdx, [rax - 1]	       263	dir.c	FUNCTION_10	IF_4
0x4000d64	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       263	dir.c	FUNCTION_10	IF_4
0x4000d68	          0x4801d0	                            add rax, rdx	       263	dir.c	FUNCTION_10	IF_4
0x4000d6b	           0xfb600	                   movzx eax, byte [rax]	       263	dir.c	FUNCTION_10	IF_4
0x4000d6e	            0x3c0a	                             cmp al, 0xa	       263	dir.c	FUNCTION_10	IF_4
0x4000d70	            0x743d	                            je 0x4000daf	       263	dir.c	FUNCTION_10	IF_4
0x4000d72	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x4000d76	      0xbe01000000	                              mov esi, 1	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x4000d7b	          0x4889c7	                            mov rdi, rax	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x4000d7e	      0xe8eff2ffff	                         call sym.st_add	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x4000d83	          0x4889c2	                            mov rdx, rax	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x4000d86	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x4000d8a	          0x4889d6	                            mov rsi, rdx	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x4000d8d	          0x4889c7	                            mov rdi, rax	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x4000d90	      0xe800000000	                          call 0x4000d95	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x4000d95	        0x488945f0	             mov qword [rbp - 0x10], rax	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x4000d99	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       265	dir.c	FUNCTION_10	IF_4
0x4000d9d	        0x488d5001	                      lea rdx, [rax + 1]	       265	dir.c	FUNCTION_10	IF_4
0x4000da1	        0x488955e8	             mov qword [rbp - 0x18], rdx	       265	dir.c	FUNCTION_10	IF_4
0x4000da5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       265	dir.c	FUNCTION_10	IF_4
0x4000da9	          0x4801d0	                            add rax, rdx	       265	dir.c	FUNCTION_10	IF_4
0x4000dac	          0xc6000a	                     mov byte [rax], 0xa	       265	dir.c	FUNCTION_10	IF_4
0x4000daf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       268	dir.c	FUNCTION_10	CALL_8
0x4000db3	          0x4889c7	                            mov rdi, rax	       268	dir.c	FUNCTION_10	CALL_8
0x4000db6	      0xe898f3ffff	                        call sym.xsize_t	       268	dir.c	FUNCTION_10	CALL_8
0x4000dbb	          0x4889c2	                            mov rdx, rax	       268	dir.c	FUNCTION_10	CALL_8
0x4000dbe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       268	dir.c	FUNCTION_10	CALL_8
0x4000dc2	          0x488910	                    mov qword [rax], rdx	       268	dir.c	FUNCTION_10	CALL_8
0x4000dc5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       269	dir.c	FUNCTION_10
0x4000dc9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       269	dir.c	FUNCTION_10
0x4000dcd	          0x488910	                    mov qword [rax], rdx	       269	dir.c	FUNCTION_10
0x4000dd0	      0xb801000000	                              mov eax, 1	       271	dir.c	FUNCTION_10
0x4000dd5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       272	dir.c	FUNCTION_10
0x4000dd9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       272	dir.c	FUNCTION_10
0x4000de2	            0x7405	                            je 0x4000de9	       272	dir.c	FUNCTION_10
0x4000de4	      0xe800000000	                          call 0x4000de9	       272	dir.c	FUNCTION_10
0x4000de9	              0xc9	                                   leave	       272	dir.c	FUNCTION_10
0x4000dea	              0xc3	                                     ret	       272	dir.c	FUNCTION_10
invalidate_directory	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,0:functions,0:FOR,1	41
0x4001f7a	              0x55	                                push rbp	       773	dir.c	FUNCTION_27
0x4001f7b	          0x4889e5	                            mov rbp, rsp	       773	dir.c	FUNCTION_27
0x4001f7e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       773	dir.c	FUNCTION_27
0x4001f82	        0x488975e0	             mov qword [rbp - 0x20], rsi	       773	dir.c	FUNCTION_27
0x4001f86	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       782	dir.c	FUNCTION_27	IF_1
0x4001f8a	         0xfb64044	           movzx eax, byte [rax + 0x44] 	       782	dir.c	FUNCTION_27	IF_1
0x4001f8e	          0x83e002	                              and eax, 2	       782	dir.c	FUNCTION_27	IF_1
0x4001f91	            0x84c0	                             test al, al	       782	dir.c	FUNCTION_27	IF_1
0x4001f93	            0x7417	                            je 0x4001fac	       782	dir.c	FUNCTION_27	IF_1
0x4001f95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       783	dir.c	FUNCTION_27	IF_1
0x4001f99	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	       783	dir.c	FUNCTION_27	IF_1
0x4001f9f	          0x8d5001	                      lea edx, [rax + 1]	       783	dir.c	FUNCTION_27	IF_1
0x4001fa2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       783	dir.c	FUNCTION_27	IF_1
0x4001fa6	    0x8990b0000000	             mov dword [rax + 0xb0], edx	       783	dir.c	FUNCTION_27	IF_1
0x4001fac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       785	dir.c	FUNCTION_27
0x4001fb0	         0xfb65044	           movzx edx, byte [rax + 0x44] 	       785	dir.c	FUNCTION_27
0x4001fb4	          0x83e2fd	                     and edx, 0xfffffffd	       785	dir.c	FUNCTION_27
0x4001fb7	          0x885044	               mov byte [rax + 0x44], dl	       785	dir.c	FUNCTION_27
0x4001fba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       786	dir.c	FUNCTION_27
0x4001fbe	    0xc74040000000	               mov dword [rax + 0x40], 0	       786	dir.c	FUNCTION_27
0x4001fc5	    0xc745fc000000	                  mov dword [rbp - 4], 0	       787	dir.c	FUNCTION_27	FOR_1
0x4001fcc	            0xeb25	                           jmp 0x4001ff3	       787	dir.c	FUNCTION_27	FOR_1
0x4001fce	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       788	dir.c	FUNCTION_27	FOR_1
0x4001fd2	          0x488b00	                    mov rax, qword [rax]	       788	dir.c	FUNCTION_27	FOR_1
0x4001fd5	          0x8b55fc	                mov edx, dword [rbp - 4]	       788	dir.c	FUNCTION_27	FOR_1
0x4001fd8	          0x4863d2	                         movsxd rdx, edx	       788	dir.c	FUNCTION_27	FOR_1
0x4001fdb	        0x48c1e203	                              shl rdx, 3	       788	dir.c	FUNCTION_27	FOR_1
0x4001fdf	          0x4801d0	                            add rax, rdx	       788	dir.c	FUNCTION_27	FOR_1
0x4001fe2	          0x488b00	                    mov rax, qword [rax]	       788	dir.c	FUNCTION_27	FOR_1
0x4001fe5	         0xfb65044	           movzx edx, byte [rax + 0x44] 	       788	dir.c	FUNCTION_27	FOR_1
0x4001fe9	          0x83e2fb	                     and edx, 0xfffffffb	       788	dir.c	FUNCTION_27	FOR_1
0x4001fec	          0x885044	               mov byte [rax + 0x44], dl	       788	dir.c	FUNCTION_27	FOR_1
0x4001fef	        0x8345fc01	                  add dword [rbp - 4], 1	       787	dir.c	FUNCTION_27	FOR_1
0x4001ff3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       787	dir.c	FUNCTION_27	FOR_1
0x4001ff7	          0x8b5038	            mov edx, dword [rax + 0x38] 	       787	dir.c	FUNCTION_27	FOR_1
0x4001ffa	          0x8b45fc	                mov eax, dword [rbp - 4]	       787	dir.c	FUNCTION_27	FOR_1
0x4001ffd	            0x39c2	                            cmp edx, eax	       787	dir.c	FUNCTION_27	FOR_1
0x4001fff	            0x77cd	                            ja 0x4001fce	       787	dir.c	FUNCTION_27	FOR_1
0x4002001	              0x90	                                     nop	       789	dir.c	FUNCTION_27
0x4002002	              0x5d	                                 pop rbp	       789	dir.c	FUNCTION_27
0x4002003	              0xc3	                                     ret	       789	dir.c	FUNCTION_27
fspathcmp	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,2:functions,0:FOR,0	21
0x40006b3	              0x55	                                push rbp	        68	dir.c	FUNCTION_2
0x40006b4	          0x4889e5	                            mov rbp, rsp	        68	dir.c	FUNCTION_2
0x40006b7	        0x4883ec10	                           sub rsp, 0x10	        68	dir.c	FUNCTION_2
0x40006bb	        0x48897df8	                mov qword [rbp - 8], rdi	        68	dir.c	FUNCTION_2
0x40006bf	        0x488975f0	             mov qword [rbp - 0x10], rsi	        68	dir.c	FUNCTION_2
0x40006c3	    0x8b0500000000	            mov eax, dword [0x040006c9] 	        69	dir.c	FUNCTION_2	CALL_2
0x40006c9	            0x85c0	                           test eax, eax	        69	dir.c	FUNCTION_2	CALL_2
0x40006cb	            0x7415	                            je 0x40006e2	        69	dir.c	FUNCTION_2	CALL_2
0x40006cd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        69	dir.c	FUNCTION_2	CALL_2
0x40006d1	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	dir.c	FUNCTION_2	CALL_2
0x40006d5	          0x4889d6	                            mov rsi, rdx	        69	dir.c	FUNCTION_2	CALL_2
0x40006d8	          0x4889c7	                            mov rdi, rax	        69	dir.c	FUNCTION_2	CALL_2
0x40006db	      0xe800000000	                          call 0x40006e0	        69	dir.c	FUNCTION_2	CALL_2
0x40006e0	            0xeb13	                           jmp 0x40006f5	        69	dir.c	FUNCTION_2	CALL_2
0x40006e2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        69	dir.c	FUNCTION_2	CALL_2
0x40006e6	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	dir.c	FUNCTION_2	CALL_2
0x40006ea	          0x4889d6	                            mov rsi, rdx	        69	dir.c	FUNCTION_2	CALL_2
0x40006ed	          0x4889c7	                            mov rdi, rax	        69	dir.c	FUNCTION_2	CALL_2
0x40006f0	      0xe800000000	                          call 0x40006f5	        69	dir.c	FUNCTION_2	CALL_2
0x40006f5	              0xc9	                                   leave	        70	dir.c	FUNCTION_2
0x40006f6	              0xc3	                                     ret	        70	dir.c	FUNCTION_2
dir_entry_new	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,0:functions,0:FOR,0	32
0x400352e	              0x55	                                push rbp	      1329	dir.c	FUNCTION_43
0x400352f	          0x4889e5	                            mov rbp, rsp	      1329	dir.c	FUNCTION_43
0x4003532	        0x4883ec20	                           sub rsp, 0x20	      1329	dir.c	FUNCTION_43
0x4003536	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1329	dir.c	FUNCTION_43
0x400353a	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1329	dir.c	FUNCTION_43
0x400353d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1332	dir.c	FUNCTION_43
0x4003540	            0x4898	                                    cdqe	      1332	dir.c	FUNCTION_43
0x4003542	        0x488945f0	             mov qword [rbp - 0x10], rax	      1332	dir.c	FUNCTION_43
0x4003546	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1332	dir.c	FUNCTION_43
0x400354a	          0x4889c6	                            mov rsi, rax	      1332	dir.c	FUNCTION_43
0x400354d	      0xbf04000000	                              mov edi, 4	      1332	dir.c	FUNCTION_43
0x4003552	      0xe81bcbffff	                         call sym.st_add	      1332	dir.c	FUNCTION_43
0x4003557	      0xbe01000000	                              mov esi, 1	      1332	dir.c	FUNCTION_43
0x400355c	          0x4889c7	                            mov rdi, rax	      1332	dir.c	FUNCTION_43
0x400355f	      0xe80ecbffff	                         call sym.st_add	      1332	dir.c	FUNCTION_43
0x4003564	          0x4889c6	                            mov rsi, rax	      1332	dir.c	FUNCTION_43
0x4003567	      0xbf01000000	                              mov edi, 1	      1332	dir.c	FUNCTION_43
0x400356c	      0xe800000000	                          call 0x4003571	      1332	dir.c	FUNCTION_43
0x4003571	        0x488945f8	                mov qword [rbp - 8], rax	      1332	dir.c	FUNCTION_43
0x4003575	        0x488b45f8	                mov rax, qword [rbp - 8]	      1332	dir.c	FUNCTION_43
0x4003579	        0x488d4804	                      lea rcx, [rax + 4]	      1332	dir.c	FUNCTION_43
0x400357d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1332	dir.c	FUNCTION_43
0x4003581	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1332	dir.c	FUNCTION_43
0x4003585	          0x4889c6	                            mov rsi, rax	      1332	dir.c	FUNCTION_43
0x4003588	          0x4889cf	                            mov rdi, rcx	      1332	dir.c	FUNCTION_43
0x400358b	      0xe800000000	                          call 0x4003590	      1332	dir.c	FUNCTION_43
0x4003590	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1333	dir.c	FUNCTION_43
0x4003593	        0x488b45f8	                mov rax, qword [rbp - 8]	      1333	dir.c	FUNCTION_43
0x4003597	            0x8910	                    mov dword [rax], edx	      1333	dir.c	FUNCTION_43
0x4003599	        0x488b45f8	                mov rax, qword [rbp - 8]	      1334	dir.c	FUNCTION_43
0x400359d	              0xc9	                                   leave	      1335	dir.c	FUNCTION_43
0x400359e	              0xc3	                                     ret	      1335	dir.c	FUNCTION_43
_	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,0:functions,0:FOR,0	15
0x40003da	              0x55	                                push rbp	        51	gettext.h	FUNCTION_172
0x40003db	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_172
0x40003de	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_172
0x40003e2	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_172
0x40003e6	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_172	IF_1
0x40003ea	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_172	IF_1
0x40003ed	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_172	IF_1
0x40003ef	            0x7507	                           jne 0x40003f8	        52	gettext.h	FUNCTION_172	IF_1
0x40003f1	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_172	IF_1
0x40003f6	            0xeb0c	                           jmp 0x4000404	        53	gettext.h	FUNCTION_172	IF_1
0x40003f8	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_172
0x40003fc	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_172
0x40003ff	      0xe800000000	                          call 0x4000404	        54	gettext.h	FUNCTION_172
0x4000404	              0xc9	                                   leave	        55	gettext.h	FUNCTION_172
0x4000405	              0xc3	                                     ret	        55	gettext.h	FUNCTION_172
do_invalidate_gitignore	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,1	30
0x4001ee2	              0x55	                                push rbp	       756	dir.c	FUNCTION_25
0x4001ee3	          0x4889e5	                            mov rbp, rsp	       756	dir.c	FUNCTION_25
0x4001ee6	        0x4883ec20	                           sub rsp, 0x20	       756	dir.c	FUNCTION_25
0x4001eea	        0x48897de8	             mov qword [rbp - 0x18], rdi	       756	dir.c	FUNCTION_25
0x4001eee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       758	dir.c	FUNCTION_25
0x4001ef2	         0xfb65044	           movzx edx, byte [rax + 0x44] 	       758	dir.c	FUNCTION_25
0x4001ef6	          0x83e2fd	                     and edx, 0xfffffffd	       758	dir.c	FUNCTION_25
0x4001ef9	          0x885044	               mov byte [rax + 0x44], dl	       758	dir.c	FUNCTION_25
0x4001efc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       759	dir.c	FUNCTION_25
0x4001f00	    0xc74040000000	               mov dword [rax + 0x40], 0	       759	dir.c	FUNCTION_25
0x4001f07	    0xc745fc000000	                  mov dword [rbp - 4], 0	       760	dir.c	FUNCTION_25	FOR_1
0x4001f0e	            0xeb23	                           jmp 0x4001f33	       760	dir.c	FUNCTION_25	FOR_1
0x4001f10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       761	dir.c	FUNCTION_25	CALL_1
0x4001f14	          0x488b00	                    mov rax, qword [rax]	       761	dir.c	FUNCTION_25	CALL_1
0x4001f17	          0x8b55fc	                mov edx, dword [rbp - 4]	       761	dir.c	FUNCTION_25	CALL_1
0x4001f1a	          0x4863d2	                         movsxd rdx, edx	       761	dir.c	FUNCTION_25	CALL_1
0x4001f1d	        0x48c1e203	                              shl rdx, 3	       761	dir.c	FUNCTION_25	CALL_1
0x4001f21	          0x4801d0	                            add rax, rdx	       761	dir.c	FUNCTION_25	CALL_1
0x4001f24	          0x488b00	                    mov rax, qword [rax]	       761	dir.c	FUNCTION_25	CALL_1
0x4001f27	          0x4889c7	                            mov rdi, rax	       761	dir.c	FUNCTION_25	CALL_1
0x4001f2a	      0xe8b3ffffff	        call sym.do_invalidate_gitignore	       761	dir.c	FUNCTION_25	CALL_1
0x4001f2f	        0x8345fc01	                  add dword [rbp - 4], 1	       760	dir.c	FUNCTION_25	FOR_1
0x4001f33	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       760	dir.c	FUNCTION_25	FOR_1
0x4001f37	          0x8b5038	            mov edx, dword [rax + 0x38] 	       760	dir.c	FUNCTION_25	FOR_1
0x4001f3a	          0x8b45fc	                mov eax, dword [rbp - 4]	       760	dir.c	FUNCTION_25	FOR_1
0x4001f3d	            0x39c2	                            cmp edx, eax	       760	dir.c	FUNCTION_25	FOR_1
0x4001f3f	            0x77cf	                            ja 0x4001f10	       760	dir.c	FUNCTION_25	FOR_1
0x4001f41	              0x90	                                     nop	       762	dir.c	FUNCTION_25
0x4001f42	              0xc9	                                   leave	       762	dir.c	FUNCTION_25
0x4001f43	              0xc3	                                     ret	       762	dir.c	FUNCTION_25
match_pathname	SWITCH,0:ELSE,0:WHILE,0:IF,6:DO,0:CALL,3:functions,0:FOR,0	102
0x40028f0	              0x55	                                push rbp	       989	dir.c	FUNCTION_36
0x40028f1	          0x4889e5	                            mov rbp, rsp	       989	dir.c	FUNCTION_36
0x40028f4	        0x4883ec40	                           sub rsp, 0x40	       989	dir.c	FUNCTION_36
0x40028f8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       989	dir.c	FUNCTION_36
0x40028fc	          0x8975e4	             mov dword [rbp - 0x1c], esi	       989	dir.c	FUNCTION_36
0x40028ff	        0x488955d8	             mov qword [rbp - 0x28], rdx	       989	dir.c	FUNCTION_36
0x4002903	          0x894de0	             mov dword [rbp - 0x20], ecx	       989	dir.c	FUNCTION_36
0x4002906	        0x4c8945d0	              mov qword [rbp - 0x30], r8	       989	dir.c	FUNCTION_36
0x400290a	        0x44894dcc	             mov dword [rbp - 0x34], r9d	       989	dir.c	FUNCTION_36
0x400290e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       997	dir.c	FUNCTION_36	IF_1
0x4002912	           0xfb600	                   movzx eax, byte [rax]	       997	dir.c	FUNCTION_36	IF_1
0x4002915	            0x3c2f	                            cmp al, 0x2f	       997	dir.c	FUNCTION_36	IF_1
0x4002917	            0x750d	                           jne 0x4002926	       997	dir.c	FUNCTION_36	IF_1
0x4002919	      0x488345d001	               add qword [rbp - 0x30], 1	       998	dir.c	FUNCTION_36	IF_1
0x400291e	        0x836d1001	               sub dword [rbp + 0x10], 1	       999	dir.c	FUNCTION_36	IF_1
0x4002922	        0x836dcc01	               sub dword [rbp - 0x34], 1	      1000	dir.c	FUNCTION_36	IF_1
0x4002926	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1007	dir.c	FUNCTION_36	IF_2
0x4002929	          0x83c001	                              add eax, 1	      1007	dir.c	FUNCTION_36	IF_2
0x400292c	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1007	dir.c	FUNCTION_36	IF_2
0x400292f	            0x7f37	                            jg 0x4002968	      1007	dir.c	FUNCTION_36	IF_2
0x4002931	        0x837de000	               cmp dword [rbp - 0x20], 0	      1007	dir.c	FUNCTION_36	IF_2
0x4002935	            0x7414	                            je 0x400294b	      1007	dir.c	FUNCTION_36	IF_2
0x4002937	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1008	dir.c	FUNCTION_36	IF_2
0x400293a	          0x4863d0	                         movsxd rdx, eax	      1008	dir.c	FUNCTION_36	IF_2
0x400293d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1008	dir.c	FUNCTION_36	IF_2
0x4002941	          0x4801d0	                            add rax, rdx	      1008	dir.c	FUNCTION_36	IF_2
0x4002944	           0xfb600	                   movzx eax, byte [rax]	      1008	dir.c	FUNCTION_36	IF_2
0x4002947	            0x3c2f	                            cmp al, 0x2f	      1008	dir.c	FUNCTION_36	IF_2
0x4002949	            0x751d	                           jne 0x4002968	      1008	dir.c	FUNCTION_36	IF_2
0x400294b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x400294e	          0x4863d0	                         movsxd rdx, eax	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x4002951	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x4002955	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x4002959	          0x4889ce	                            mov rsi, rcx	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x400295c	          0x4889c7	                            mov rdi, rax	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x400295f	      0xe800000000	                          call 0x4002964	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x4002964	            0x85c0	                           test eax, eax	      1008	dir.c	FUNCTION_36	IF_2
0x4002966	            0x740a	                            je 0x4002972	      1008	dir.c	FUNCTION_36	IF_2
0x4002968	      0xb800000000	                              mov eax, 0	      1010	dir.c	FUNCTION_36	IF_2
0x400296d	      0xe9be000000	                           jmp 0x4002a30	      1010	dir.c	FUNCTION_36	IF_2
0x4002972	        0x837de000	               cmp dword [rbp - 0x20], 0	      1012	dir.c	FUNCTION_36
0x4002976	            0x740b	                            je 0x4002983	      1012	dir.c	FUNCTION_36
0x4002978	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1012	dir.c	FUNCTION_36
0x400297b	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      1012	dir.c	FUNCTION_36
0x400297e	          0x83e801	                              sub eax, 1	      1012	dir.c	FUNCTION_36
0x4002981	            0xeb03	                           jmp 0x4002986	      1012	dir.c	FUNCTION_36
0x4002983	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1012	dir.c	FUNCTION_36
0x4002986	          0x8945f4	              mov dword [rbp - 0xc], eax	      1012	dir.c	FUNCTION_36
0x4002989	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1013	dir.c	FUNCTION_36
0x400298c	          0x4863d0	                         movsxd rdx, eax	      1013	dir.c	FUNCTION_36
0x400298f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1013	dir.c	FUNCTION_36
0x4002992	            0x4898	                                    cdqe	      1013	dir.c	FUNCTION_36
0x4002994	          0x4829c2	                            sub rdx, rax	      1013	dir.c	FUNCTION_36
0x4002997	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1013	dir.c	FUNCTION_36
0x400299b	          0x4801d0	                            add rax, rdx	      1013	dir.c	FUNCTION_36
0x400299e	        0x488945f8	                mov qword [rbp - 8], rax	      1013	dir.c	FUNCTION_36
0x40029a2	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1015	dir.c	FUNCTION_36	IF_3
0x40029a6	            0x7464	                            je 0x4002a0c	      1015	dir.c	FUNCTION_36	IF_3
0x40029a8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1020	dir.c	FUNCTION_36	IF_3	IF_4
0x40029ab	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      1020	dir.c	FUNCTION_36	IF_3	IF_4
0x40029ae	            0x7e07	                           jle 0x40029b7	      1020	dir.c	FUNCTION_36	IF_3	IF_4
0x40029b0	      0xb800000000	                              mov eax, 0	      1021	dir.c	FUNCTION_36	IF_3	IF_4
0x40029b5	            0xeb79	                           jmp 0x4002a30	      1021	dir.c	FUNCTION_36	IF_3	IF_4
0x40029b7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x40029ba	          0x4863d0	                         movsxd rdx, eax	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x40029bd	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x40029c1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x40029c5	          0x4889ce	                            mov rsi, rcx	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x40029c8	          0x4889c7	                            mov rdi, rax	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x40029cb	      0xe800000000	                          call 0x40029d0	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x40029d0	            0x85c0	                           test eax, eax	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x40029d2	            0x7407	                            je 0x40029db	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x40029d4	      0xb800000000	                              mov eax, 0	      1024	dir.c	FUNCTION_36	IF_3	IF_5
0x40029d9	            0xeb55	                           jmp 0x4002a30	      1024	dir.c	FUNCTION_36	IF_3	IF_5
0x40029db	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1025	dir.c	FUNCTION_36	IF_3
0x40029de	            0x4898	                                    cdqe	      1025	dir.c	FUNCTION_36	IF_3
0x40029e0	        0x480145d0	            add qword [rbp - 0x30], rax 	      1025	dir.c	FUNCTION_36	IF_3
0x40029e4	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1026	dir.c	FUNCTION_36	IF_3
0x40029e7	          0x294510	             sub dword [rbp + 0x10], eax	      1026	dir.c	FUNCTION_36	IF_3
0x40029ea	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1027	dir.c	FUNCTION_36	IF_3
0x40029ed	            0x4898	                                    cdqe	      1027	dir.c	FUNCTION_36	IF_3
0x40029ef	        0x480145f8	                add qword [rbp - 8], rax	      1027	dir.c	FUNCTION_36	IF_3
0x40029f3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1028	dir.c	FUNCTION_36	IF_3
0x40029f6	          0x2945f4	              sub dword [rbp - 0xc], eax	      1028	dir.c	FUNCTION_36	IF_3
0x40029f9	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1035	dir.c	FUNCTION_36	IF_3	IF_6
0x40029fd	            0x750d	                           jne 0x4002a0c	      1035	dir.c	FUNCTION_36	IF_3	IF_6
0x40029ff	        0x837df400	                cmp dword [rbp - 0xc], 0	      1035	dir.c	FUNCTION_36	IF_3	IF_6
0x4002a03	            0x7507	                           jne 0x4002a0c	      1035	dir.c	FUNCTION_36	IF_3	IF_6
0x4002a05	      0xb801000000	                              mov eax, 1	      1036	dir.c	FUNCTION_36	IF_3	IF_6
0x4002a0a	            0xeb24	                           jmp 0x4002a30	      1036	dir.c	FUNCTION_36	IF_3	IF_6
0x4002a0c	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1039	dir.c	FUNCTION_36	CALL_3
0x4002a0f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1039	dir.c	FUNCTION_36	CALL_3
0x4002a13	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1039	dir.c	FUNCTION_36	CALL_3
0x4002a17	    0x41b802000000	                              mov r8d, 2	      1039	dir.c	FUNCTION_36	CALL_3
0x4002a1d	          0x8b7510	            mov esi, dword [rbp + 0x10] 	      1039	dir.c	FUNCTION_36	CALL_3
0x4002a20	          0x4889c7	                            mov rdi, rax	      1039	dir.c	FUNCTION_36	CALL_3
0x4002a23	      0xe84ddeffff	              call sym.fnmatch_icase_mem	      1039	dir.c	FUNCTION_36	CALL_3
0x4002a28	            0x85c0	                           test eax, eax	      1041	dir.c	FUNCTION_36
0x4002a2a	           0xf94c0	                                 sete al	      1041	dir.c	FUNCTION_36
0x4002a2d	           0xfb6c0	                           movzx eax, al	      1039	dir.c	FUNCTION_36	CALL_3
0x4002a30	              0xc9	                                   leave	      1042	dir.c	FUNCTION_36
0x4002a31	              0xc3	                                     ret	      1042	dir.c	FUNCTION_36
is_null_sha1	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	13
0x40004bd	              0x55	                                push rbp	       984	cache.h	FUNCTION_150
0x40004be	          0x4889e5	                            mov rbp, rsp	       984	cache.h	FUNCTION_150
0x40004c1	        0x4883ec10	                           sub rsp, 0x10	       984	cache.h	FUNCTION_150
0x40004c5	        0x48897df8	                mov qword [rbp - 8], rdi	       984	cache.h	FUNCTION_150
0x40004c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       985	cache.h	FUNCTION_150	CALL_1
0x40004cd	      0xbe00000000	                              mov esi, 0	       985	cache.h	FUNCTION_150	CALL_1
0x40004d2	          0x4889c7	                            mov rdi, rax	       985	cache.h	FUNCTION_150	CALL_1
0x40004d5	      0xe894ffffff	                        call sym.hashcmp	       985	cache.h	FUNCTION_150	CALL_1
0x40004da	            0x85c0	                           test eax, eax	       985	cache.h	FUNCTION_150	CALL_1
0x40004dc	           0xf94c0	                                 sete al	       985	cache.h	FUNCTION_150	CALL_1
0x40004df	           0xfb6c0	                           movzx eax, al	       985	cache.h	FUNCTION_150	CALL_1
0x40004e2	              0xc9	                                   leave	       986	cache.h	FUNCTION_150
0x40004e3	              0xc3	                                     ret	       986	cache.h	FUNCTION_150
valid_cached_dir	SWITCH,0:ELSE,1:WHILE,0:IF,6:DO,0:CALL,8:functions,0:FOR,0	138
0x40044df	              0x55	                                push rbp	      1808	dir.c	FUNCTION_57
0x40044e0	          0x4889e5	                            mov rbp, rsp	      1808	dir.c	FUNCTION_57
0x40044e3	    0x4881ecd00000	                           sub rsp, 0xd0	      1808	dir.c	FUNCTION_57
0x40044ea	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      1808	dir.c	FUNCTION_57
0x40044f1	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	      1808	dir.c	FUNCTION_57
0x40044f8	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      1808	dir.c	FUNCTION_57
0x40044ff	    0x48898d40ffff	             mov qword [rbp - 0xc0], rcx	      1808	dir.c	FUNCTION_57
0x4004506	    0x4489853cffff	             mov dword [rbp - 0xc4], r8d	      1808	dir.c	FUNCTION_57
0x400450d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1808	dir.c	FUNCTION_57
0x4004516	        0x488945f8	                mov qword [rbp - 8], rax	      1808	dir.c	FUNCTION_57
0x400451a	            0x31c0	                            xor eax, eax	      1808	dir.c	FUNCTION_57
0x400451c	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      1811	dir.c	FUNCTION_57	IF_1
0x4004524	            0x750a	                           jne 0x4004530	      1811	dir.c	FUNCTION_57	IF_1
0x4004526	      0xb800000000	                              mov eax, 0	      1812	dir.c	FUNCTION_57	IF_1
0x400452b	      0xe90b020000	                           jmp 0x400473b	      1812	dir.c	FUNCTION_57	IF_1
0x4004530	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1817	dir.c	FUNCTION_57	CALL_1
0x4004537	          0x4889c7	                            mov rdi, rax	      1817	dir.c	FUNCTION_57	CALL_1
0x400453a	      0xe800000000	                          call 0x400453f	      1817	dir.c	FUNCTION_57	CALL_1
0x400453f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1818	dir.c	FUNCTION_57	IF_2
0x4004546	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1818	dir.c	FUNCTION_57	IF_2
0x400454d	     0xfb680b80000	           movzx eax, byte [rax + 0xb8] 	      1818	dir.c	FUNCTION_57	IF_2
0x4004554	          0x83e001	                              and eax, 1	      1818	dir.c	FUNCTION_57	IF_2
0x4004557	            0x84c0	                             test al, al	      1818	dir.c	FUNCTION_57	IF_2
0x4004559	            0x7416	                            je 0x4004571	      1818	dir.c	FUNCTION_57	IF_2
0x400455b	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1818	dir.c	FUNCTION_57	IF_2
0x4004562	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      1818	dir.c	FUNCTION_57	IF_2
0x4004566	          0x83e002	                              and eax, 2	      1818	dir.c	FUNCTION_57	IF_2
0x4004569	            0x84c0	                             test al, al	      1818	dir.c	FUNCTION_57	IF_2
0x400456b	     0xf85c0000000	                           jne 0x4004631	      1818	dir.c	FUNCTION_57	IF_2
0x4004571	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1819	dir.c	FUNCTION_57	IF_2	IF_3
0x4004578	        0x488b4008	                mov rax, qword [rax + 8]	      1819	dir.c	FUNCTION_57	IF_2	IF_3
0x400457c	          0x4885c0	                           test rax, rax	      1819	dir.c	FUNCTION_57	IF_2	IF_3
0x400457f	            0x740d	                            je 0x400458e	      1819	dir.c	FUNCTION_57	IF_2	IF_3
0x4004581	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1819	dir.c	FUNCTION_57	IF_2	IF_3
0x4004588	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1819	dir.c	FUNCTION_57	IF_2	IF_3
0x400458c	            0xeb05	                           jmp 0x4004593	      1819	dir.c	FUNCTION_57	IF_2	IF_3
0x400458e	      0xb800000000	                              mov eax, 0	      1819	dir.c	FUNCTION_57	IF_2	IF_3
0x4004593	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1819	dir.c	FUNCTION_57	IF_2	IF_3
0x400459a	          0x4889d6	                            mov rsi, rdx	      1819	dir.c	FUNCTION_57	IF_2	IF_3
0x400459d	          0x4889c7	                            mov rdi, rax	      1819	dir.c	FUNCTION_57	IF_2	IF_3
0x40045a0	      0xe800000000	                          call 0x40045a5	      1819	dir.c	FUNCTION_57	IF_2	IF_3
0x40045a5	            0x85c0	                           test eax, eax	      1819	dir.c	FUNCTION_57	IF_2	IF_3
0x40045a7	            0x7427	                            je 0x40045d0	      1819	dir.c	FUNCTION_57	IF_2	IF_3
0x40045a9	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1820	dir.c	FUNCTION_57	IF_2	IF_3	CALL_2
0x40045b0	        0x4883c010	                           add rax, 0x10	      1820	dir.c	FUNCTION_57	IF_2	IF_3	CALL_2
0x40045b4	      0xba24000000	                           mov edx, 0x24	      1820	dir.c	FUNCTION_57	IF_2	IF_3	CALL_2
0x40045b9	      0xbe00000000	                              mov esi, 0	      1820	dir.c	FUNCTION_57	IF_2	IF_3	CALL_2
0x40045be	          0x4889c7	                            mov rdi, rax	      1820	dir.c	FUNCTION_57	IF_2	IF_3	CALL_2
0x40045c1	      0xe800000000	                          call 0x40045c6	      1820	dir.c	FUNCTION_57	IF_2	IF_3	CALL_2
0x40045c6	      0xb800000000	                              mov eax, 0	      1821	dir.c	FUNCTION_57	IF_2	IF_3
0x40045cb	      0xe96b010000	                           jmp 0x400473b	      1821	dir.c	FUNCTION_57	IF_2	IF_3
0x40045d0	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1823	dir.c	FUNCTION_57	IF_2	IF_4
0x40045d7	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      1823	dir.c	FUNCTION_57	IF_2	IF_4
0x40045db	          0x83e002	                              and eax, 2	      1823	dir.c	FUNCTION_57	IF_2	IF_4
0x40045de	            0x84c0	                             test al, al	      1823	dir.c	FUNCTION_57	IF_2	IF_4
0x40045e0	            0x7428	                            je 0x400460a	      1823	dir.c	FUNCTION_57	IF_2	IF_4
0x40045e2	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1824	dir.c	FUNCTION_57	IF_2	IF_4	CALL_3
0x40045e9	        0x488d4810	                   lea rcx, [rax + 0x10]	      1824	dir.c	FUNCTION_57	IF_2	IF_4	CALL_3
0x40045ed	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1824	dir.c	FUNCTION_57	IF_2	IF_4	CALL_3
0x40045f4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1824	dir.c	FUNCTION_57	IF_2	IF_4	CALL_3
0x40045fb	          0x4889ce	                            mov rsi, rcx	      1824	dir.c	FUNCTION_57	IF_2	IF_4	CALL_3
0x40045fe	          0x4889c7	                            mov rdi, rax	      1824	dir.c	FUNCTION_57	IF_2	IF_4	CALL_3
0x4004601	      0xe800000000	                          call 0x4004606	      1824	dir.c	FUNCTION_57	IF_2	IF_4	CALL_3
0x4004606	            0x85c0	                           test eax, eax	      1823	dir.c	FUNCTION_57	IF_2	IF_4
0x4004608	            0x7427	                            je 0x4004631	      1823	dir.c	FUNCTION_57	IF_2	IF_4
0x400460a	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1825	dir.c	FUNCTION_57	IF_2	IF_4	CALL_4
0x4004611	        0x488d5010	                   lea rdx, [rax + 0x10]	      1825	dir.c	FUNCTION_57	IF_2	IF_4	CALL_4
0x4004615	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      1825	dir.c	FUNCTION_57	IF_2	IF_4	CALL_4
0x400461c	          0x4889c6	                            mov rsi, rax	      1825	dir.c	FUNCTION_57	IF_2	IF_4	CALL_4
0x400461f	          0x4889d7	                            mov rdi, rdx	      1825	dir.c	FUNCTION_57	IF_2	IF_4	CALL_4
0x4004622	      0xe800000000	                          call 0x4004627	      1825	dir.c	FUNCTION_57	IF_2	IF_4	CALL_4
0x4004627	      0xb800000000	                              mov eax, 0	      1826	dir.c	FUNCTION_57	IF_2	IF_4
0x400462c	      0xe90a010000	                           jmp 0x400473b	      1826	dir.c	FUNCTION_57	IF_2	IF_4
0x4004631	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1830	dir.c	FUNCTION_57	IF_5
0x4004638	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      1830	dir.c	FUNCTION_57	IF_5
0x400463c	          0x83e001	                              and eax, 1	      1830	dir.c	FUNCTION_57	IF_5
0x400463f	           0xfb6d0	                           movzx edx, al	      1830	dir.c	FUNCTION_57	IF_5
0x4004642	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	      1830	dir.c	FUNCTION_57	IF_5
0x4004649	           0xf95c0	                                setne al	      1830	dir.c	FUNCTION_57	IF_5
0x400464c	           0xfb6c0	                           movzx eax, al	      1830	dir.c	FUNCTION_57	IF_5
0x400464f	            0x39c2	                            cmp edx, eax	      1830	dir.c	FUNCTION_57	IF_5
0x4004651	            0x740a	                            je 0x400465d	      1830	dir.c	FUNCTION_57	IF_5
0x4004653	      0xb800000000	                              mov eax, 0	      1831	dir.c	FUNCTION_57	IF_5
0x4004658	      0xe9de000000	                           jmp 0x400473b	      1831	dir.c	FUNCTION_57	IF_5
0x400465d	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1840	dir.c	FUNCTION_57	IF_6
0x4004664	        0x488b4008	                mov rax, qword [rax + 8]	      1840	dir.c	FUNCTION_57	IF_6
0x4004668	          0x4885c0	                           test rax, rax	      1840	dir.c	FUNCTION_57	IF_6
0x400466b	     0xf8489000000	                            je 0x40046fa	      1840	dir.c	FUNCTION_57	IF_6
0x4004671	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1840	dir.c	FUNCTION_57	IF_6
0x4004678	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1840	dir.c	FUNCTION_57	IF_6
0x400467c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1840	dir.c	FUNCTION_57	IF_6
0x4004683	        0x488b4008	                mov rax, qword [rax + 8]	      1840	dir.c	FUNCTION_57	IF_6
0x4004687	        0x4883e801	                              sub rax, 1	      1840	dir.c	FUNCTION_57	IF_6
0x400468b	          0x4801d0	                            add rax, rdx	      1840	dir.c	FUNCTION_57	IF_6
0x400468e	           0xfb600	                   movzx eax, byte [rax]	      1840	dir.c	FUNCTION_57	IF_6
0x4004691	            0x3c2f	                            cmp al, 0x2f	      1840	dir.c	FUNCTION_57	IF_6
0x4004693	            0x7465	                            je 0x40046fa	      1840	dir.c	FUNCTION_57	IF_6
0x4004695	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1841	dir.c	FUNCTION_57	IF_6	CALL_5
0x400469c	      0xbe2f000000	                           mov esi, 0x2f	      1841	dir.c	FUNCTION_57	IF_6	CALL_5
0x40046a1	          0x4889c7	                            mov rdi, rax	      1841	dir.c	FUNCTION_57	IF_6	CALL_5
0x40046a4	      0xe83cbcffff	                   call sym.strbuf_addch	      1841	dir.c	FUNCTION_57	IF_6	CALL_5
0x40046a9	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1842	dir.c	FUNCTION_57	IF_6	CALL_6
0x40046b0	        0x488b4008	                mov rax, qword [rax + 8]	      1842	dir.c	FUNCTION_57	IF_6	CALL_6
0x40046b4	            0x89c1	                            mov ecx, eax	      1842	dir.c	FUNCTION_57	IF_6	CALL_6
0x40046b6	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1842	dir.c	FUNCTION_57	IF_6	CALL_6
0x40046bd	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1842	dir.c	FUNCTION_57	IF_6	CALL_6
0x40046c1	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      1842	dir.c	FUNCTION_57	IF_6	CALL_6
0x40046c8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1842	dir.c	FUNCTION_57	IF_6	CALL_6
0x40046cf	          0x4889c7	                            mov rdi, rax	      1842	dir.c	FUNCTION_57	IF_6	CALL_6
0x40046d2	      0xe85fe6ffff	                   call sym.prep_exclude	      1842	dir.c	FUNCTION_57	IF_6	CALL_6
0x40046d7	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1843	dir.c	FUNCTION_57	IF_6	CALL_7
0x40046de	        0x488b4008	                mov rax, qword [rax + 8]	      1843	dir.c	FUNCTION_57	IF_6	CALL_7
0x40046e2	        0x488d50ff	                      lea rdx, [rax - 1]	      1843	dir.c	FUNCTION_57	IF_6	CALL_7
0x40046e6	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1843	dir.c	FUNCTION_57	IF_6	CALL_7
0x40046ed	          0x4889d6	                            mov rsi, rdx	      1843	dir.c	FUNCTION_57	IF_6	CALL_7
0x40046f0	          0x4889c7	                            mov rdi, rax	      1843	dir.c	FUNCTION_57	IF_6	CALL_7
0x40046f3	      0xe853bbffff	                  call sym.strbuf_setlen	      1843	dir.c	FUNCTION_57	IF_6	CALL_7
0x40046f8	            0xeb2e	                           jmp 0x4004728	      1843	dir.c	FUNCTION_57	IF_6	CALL_7
0x40046fa	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1845	dir.c	FUNCTION_57	CALL_8
0x4004701	        0x488b4008	                mov rax, qword [rax + 8]	      1845	dir.c	FUNCTION_57	CALL_8
0x4004705	            0x89c1	                            mov ecx, eax	      1845	dir.c	FUNCTION_57	CALL_8
0x4004707	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1845	dir.c	FUNCTION_57	CALL_8
0x400470e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1845	dir.c	FUNCTION_57	CALL_8
0x4004712	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      1845	dir.c	FUNCTION_57	CALL_8
0x4004719	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1845	dir.c	FUNCTION_57	CALL_8
0x4004720	          0x4889c7	                            mov rdi, rax	      1845	dir.c	FUNCTION_57	CALL_8
0x4004723	      0xe80ee6ffff	                   call sym.prep_exclude	      1845	dir.c	FUNCTION_57	CALL_8
0x4004728	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1848	dir.c	FUNCTION_57
0x400472f	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      1848	dir.c	FUNCTION_57
0x4004733	            0xd0e8	                               shr al, 1	      1848	dir.c	FUNCTION_57
0x4004735	          0x83e001	                              and eax, 1	      1848	dir.c	FUNCTION_57
0x4004738	           0xfb6c0	                           movzx eax, al	      1848	dir.c	FUNCTION_57
0x400473b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1849	dir.c	FUNCTION_57
0x400473f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1849	dir.c	FUNCTION_57
0x4004748	            0x7405	                            je 0x400474f	      1849	dir.c	FUNCTION_57
0x400474a	      0xe800000000	                          call 0x400474f	      1849	dir.c	FUNCTION_57
0x400474f	              0xc9	                                   leave	      1849	dir.c	FUNCTION_57
0x4004750	              0xc3	                                     ret	      1849	dir.c	FUNCTION_57
add_exclude	SWITCH,0:ELSE,1:WHILE,0:IF,1:DO,0:CALL,2:functions,0:FOR,0	150
0x40018b2	              0x55	                                push rbp	       630	dir.c	FUNCTION_20
0x40018b3	          0x4889e5	                            mov rbp, rsp	       630	dir.c	FUNCTION_20
0x40018b6	        0x4883ec50	                           sub rsp, 0x50	       630	dir.c	FUNCTION_20
0x40018ba	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       630	dir.c	FUNCTION_20
0x40018be	        0x488975c0	             mov qword [rbp - 0x40], rsi	       630	dir.c	FUNCTION_20
0x40018c2	          0x8955bc	             mov dword [rbp - 0x44], edx	       630	dir.c	FUNCTION_20
0x40018c5	        0x48894db0	             mov qword [rbp - 0x50], rcx	       630	dir.c	FUNCTION_20
0x40018c9	        0x448945b8	             mov dword [rbp - 0x48], r8d	       630	dir.c	FUNCTION_20
0x40018cd	    0x64488b042528	                mov rax, qword fs:[0x28]	       630	dir.c	FUNCTION_20
0x40018d6	        0x488945f8	                mov qword [rbp - 8], rax	       630	dir.c	FUNCTION_20
0x40018da	            0x31c0	                            xor eax, eax	       630	dir.c	FUNCTION_20
0x40018dc	        0x488d4de4	                   lea rcx, [rbp - 0x1c]	       636	dir.c	FUNCTION_20	CALL_1
0x40018e0	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       636	dir.c	FUNCTION_20	CALL_1
0x40018e4	        0x488d75dc	                   lea rsi, [rbp - 0x24]	       636	dir.c	FUNCTION_20	CALL_1
0x40018e8	        0x488d45c8	                   lea rax, [rbp - 0x38]	       636	dir.c	FUNCTION_20	CALL_1
0x40018ec	          0x4889c7	                            mov rdi, rax	       636	dir.c	FUNCTION_20	CALL_1
0x40018ef	      0xe800000000	                          call 0x40018f4	       636	dir.c	FUNCTION_20	CALL_1
0x40018f4	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       637	dir.c	FUNCTION_20	IF_1
0x40018f7	          0x83e008	                              and eax, 8	       637	dir.c	FUNCTION_20	IF_1
0x40018fa	            0x85c0	                           test eax, eax	       637	dir.c	FUNCTION_20	IF_1
0x40018fc	            0x7465	                            je 0x4001963	       637	dir.c	FUNCTION_20	IF_1
0x40018fe	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       638	dir.c	FUNCTION_20	IF_1
0x4001901	            0x4898	                                    cdqe	       638	dir.c	FUNCTION_20	IF_1
0x4001903	        0x488945f0	             mov qword [rbp - 0x10], rax	       638	dir.c	FUNCTION_20	IF_1
0x4001907	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       638	dir.c	FUNCTION_20	IF_1
0x400190b	          0x4889c6	                            mov rsi, rax	       638	dir.c	FUNCTION_20	IF_1
0x400190e	      0xbf30000000	                           mov edi, 0x30	       638	dir.c	FUNCTION_20	IF_1
0x4001913	      0xe85ae7ffff	                         call sym.st_add	       638	dir.c	FUNCTION_20	IF_1
0x4001918	      0xbe01000000	                              mov esi, 1	       638	dir.c	FUNCTION_20	IF_1
0x400191d	          0x4889c7	                            mov rdi, rax	       638	dir.c	FUNCTION_20	IF_1
0x4001920	      0xe84de7ffff	                         call sym.st_add	       638	dir.c	FUNCTION_20	IF_1
0x4001925	          0x4889c6	                            mov rsi, rax	       638	dir.c	FUNCTION_20	IF_1
0x4001928	      0xbf01000000	                              mov edi, 1	       638	dir.c	FUNCTION_20	IF_1
0x400192d	      0xe800000000	                          call 0x4001932	       638	dir.c	FUNCTION_20	IF_1
0x4001932	        0x488945e8	             mov qword [rbp - 0x18], rax	       638	dir.c	FUNCTION_20	IF_1
0x4001936	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       638	dir.c	FUNCTION_20	IF_1
0x400193a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       638	dir.c	FUNCTION_20	IF_1
0x400193e	        0x488d4a30	                   lea rcx, [rdx + 0x30]	       638	dir.c	FUNCTION_20	IF_1
0x4001942	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       638	dir.c	FUNCTION_20	IF_1
0x4001946	          0x4889c6	                            mov rsi, rax	       638	dir.c	FUNCTION_20	IF_1
0x4001949	          0x4889cf	                            mov rdi, rcx	       638	dir.c	FUNCTION_20	IF_1
0x400194c	      0xe800000000	                          call 0x4001951	       638	dir.c	FUNCTION_20	IF_1
0x4001951	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       638	dir.c	FUNCTION_20	IF_1
0x4001955	        0x488d5030	                   lea rdx, [rax + 0x30]	       638	dir.c	FUNCTION_20	IF_1
0x4001959	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       638	dir.c	FUNCTION_20	IF_1
0x400195d	        0x48895008	                mov qword [rax + 8], rdx	       638	dir.c	FUNCTION_20	IF_1
0x4001961	            0xeb1a	                           jmp 0x400197d	       638	dir.c	FUNCTION_20	IF_1
0x4001963	      0xbf30000000	                           mov edi, 0x30	       640	dir.c	FUNCTION_20	ELSE_1	CALL_2
0x4001968	      0xe800000000	                          call 0x400196d	       640	dir.c	FUNCTION_20	ELSE_1	CALL_2
0x400196d	        0x488945e8	             mov qword [rbp - 0x18], rax	       640	dir.c	FUNCTION_20	ELSE_1	CALL_2
0x4001971	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       641	dir.c	FUNCTION_20	ELSE_1
0x4001975	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       641	dir.c	FUNCTION_20	ELSE_1
0x4001979	        0x48895008	                mov qword [rax + 8], rdx	       641	dir.c	FUNCTION_20	ELSE_1
0x400197d	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       643	dir.c	FUNCTION_20
0x4001980	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       643	dir.c	FUNCTION_20
0x4001984	          0x895010	             mov dword [rax + 0x10], edx	       643	dir.c	FUNCTION_20
0x4001987	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       644	dir.c	FUNCTION_20
0x400198a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       644	dir.c	FUNCTION_20
0x400198e	          0x895014	             mov dword [rax + 0x14], edx	       644	dir.c	FUNCTION_20
0x4001991	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	dir.c	FUNCTION_20
0x4001995	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       645	dir.c	FUNCTION_20
0x4001999	        0x48895018	             mov qword [rax + 0x18], rdx	       645	dir.c	FUNCTION_20
0x400199d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       646	dir.c	FUNCTION_20
0x40019a1	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       646	dir.c	FUNCTION_20
0x40019a4	          0x895020	             mov dword [rax + 0x20], edx	       646	dir.c	FUNCTION_20
0x40019a7	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       647	dir.c	FUNCTION_20
0x40019aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       647	dir.c	FUNCTION_20
0x40019ae	          0x895024	             mov dword [rax + 0x24], edx	       647	dir.c	FUNCTION_20
0x40019b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       648	dir.c	FUNCTION_20
0x40019b5	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       648	dir.c	FUNCTION_20
0x40019b8	          0x895028	             mov dword [rax + 0x28], edx	       648	dir.c	FUNCTION_20
0x40019bb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       649	dir.c	FUNCTION_20
0x40019bf	            0x8b00	                    mov eax, dword [rax]	       649	dir.c	FUNCTION_20
0x40019c1	          0x8d5001	                      lea edx, [rax + 1]	       649	dir.c	FUNCTION_20
0x40019c4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       649	dir.c	FUNCTION_20
0x40019c8	          0x8b4004	                mov eax, dword [rax + 4]	       649	dir.c	FUNCTION_20
0x40019cb	            0x39c2	                            cmp edx, eax	       649	dir.c	FUNCTION_20
0x40019cd	     0xf8e93000000	                           jle 0x4001a66	       649	dir.c	FUNCTION_20
0x40019d3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       649	dir.c	FUNCTION_20
0x40019d7	          0x8b4004	                mov eax, dword [rax + 4]	       649	dir.c	FUNCTION_20
0x40019da	          0x8d5010	                   lea edx, [rax + 0x10]	       649	dir.c	FUNCTION_20
0x40019dd	            0x89d0	                            mov eax, edx	       649	dir.c	FUNCTION_20
0x40019df	             0x1c0	                            add eax, eax	       649	dir.c	FUNCTION_20
0x40019e1	             0x1d0	                            add eax, edx	       649	dir.c	FUNCTION_20
0x40019e3	            0x89c2	                            mov edx, eax	       649	dir.c	FUNCTION_20
0x40019e5	          0xc1ea1f	                           shr edx, 0x1f	       649	dir.c	FUNCTION_20
0x40019e8	             0x1d0	                            add eax, edx	       649	dir.c	FUNCTION_20
0x40019ea	            0xd1f8	                              sar eax, 1	       649	dir.c	FUNCTION_20
0x40019ec	            0x89c2	                            mov edx, eax	       649	dir.c	FUNCTION_20
0x40019ee	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       649	dir.c	FUNCTION_20
0x40019f2	            0x8b00	                    mov eax, dword [rax]	       649	dir.c	FUNCTION_20
0x40019f4	          0x83c001	                              add eax, 1	       649	dir.c	FUNCTION_20
0x40019f7	            0x39c2	                            cmp edx, eax	       649	dir.c	FUNCTION_20
0x40019f9	            0x7d12	                           jge 0x4001a0d	       649	dir.c	FUNCTION_20
0x40019fb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       649	dir.c	FUNCTION_20
0x40019ff	            0x8b00	                    mov eax, dword [rax]	       649	dir.c	FUNCTION_20
0x4001a01	          0x8d5001	                      lea edx, [rax + 1]	       649	dir.c	FUNCTION_20
0x4001a04	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       649	dir.c	FUNCTION_20
0x4001a08	          0x895004	                mov dword [rax + 4], edx	       649	dir.c	FUNCTION_20
0x4001a0b	            0xeb22	                           jmp 0x4001a2f	       649	dir.c	FUNCTION_20
0x4001a0d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       649	dir.c	FUNCTION_20
0x4001a11	          0x8b4004	                mov eax, dword [rax + 4]	       649	dir.c	FUNCTION_20
0x4001a14	          0x8d5010	                   lea edx, [rax + 0x10]	       649	dir.c	FUNCTION_20
0x4001a17	            0x89d0	                            mov eax, edx	       649	dir.c	FUNCTION_20
0x4001a19	             0x1c0	                            add eax, eax	       649	dir.c	FUNCTION_20
0x4001a1b	             0x1d0	                            add eax, edx	       649	dir.c	FUNCTION_20
0x4001a1d	            0x89c2	                            mov edx, eax	       649	dir.c	FUNCTION_20
0x4001a1f	          0xc1ea1f	                           shr edx, 0x1f	       649	dir.c	FUNCTION_20
0x4001a22	             0x1d0	                            add eax, edx	       649	dir.c	FUNCTION_20
0x4001a24	            0xd1f8	                              sar eax, 1	       649	dir.c	FUNCTION_20
0x4001a26	            0x89c2	                            mov edx, eax	       649	dir.c	FUNCTION_20
0x4001a28	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       649	dir.c	FUNCTION_20
0x4001a2c	          0x895004	                mov dword [rax + 4], edx	       649	dir.c	FUNCTION_20
0x4001a2f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       649	dir.c	FUNCTION_20
0x4001a33	          0x8b4004	                mov eax, dword [rax + 4]	       649	dir.c	FUNCTION_20
0x4001a36	            0x4898	                                    cdqe	       649	dir.c	FUNCTION_20
0x4001a38	          0x4889c6	                            mov rsi, rax	       649	dir.c	FUNCTION_20
0x4001a3b	      0xbf08000000	                              mov edi, 8	       649	dir.c	FUNCTION_20
0x4001a40	      0xe871e6ffff	                        call sym.st_mult	       649	dir.c	FUNCTION_20
0x4001a45	          0x4889c2	                            mov rdx, rax	       649	dir.c	FUNCTION_20
0x4001a48	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       649	dir.c	FUNCTION_20
0x4001a4c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       649	dir.c	FUNCTION_20
0x4001a50	          0x4889d6	                            mov rsi, rdx	       649	dir.c	FUNCTION_20
0x4001a53	          0x4889c7	                            mov rdi, rax	       649	dir.c	FUNCTION_20
0x4001a56	      0xe800000000	                          call 0x4001a5b	       649	dir.c	FUNCTION_20
0x4001a5b	          0x4889c2	                            mov rdx, rax	       649	dir.c	FUNCTION_20
0x4001a5e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       649	dir.c	FUNCTION_20
0x4001a62	        0x48895018	             mov qword [rax + 0x18], rdx	       649	dir.c	FUNCTION_20
0x4001a66	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       650	dir.c	FUNCTION_20
0x4001a6a	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       650	dir.c	FUNCTION_20
0x4001a6e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       650	dir.c	FUNCTION_20
0x4001a72	            0x8b00	                    mov eax, dword [rax]	       650	dir.c	FUNCTION_20
0x4001a74	          0x8d4801	                      lea ecx, [rax + 1]	       650	dir.c	FUNCTION_20
0x4001a77	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       650	dir.c	FUNCTION_20
0x4001a7b	            0x890a	                    mov dword [rdx], ecx	       650	dir.c	FUNCTION_20
0x4001a7d	            0x4898	                                    cdqe	       650	dir.c	FUNCTION_20
0x4001a7f	        0x48c1e003	                              shl rax, 3	       650	dir.c	FUNCTION_20
0x4001a83	        0x488d1406	                    lea rdx, [rsi + rax]	       650	dir.c	FUNCTION_20
0x4001a87	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       650	dir.c	FUNCTION_20
0x4001a8b	          0x488902	                    mov qword [rdx], rax	       650	dir.c	FUNCTION_20
0x4001a8e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       651	dir.c	FUNCTION_20
0x4001a92	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       651	dir.c	FUNCTION_20
0x4001a96	          0x488910	                    mov qword [rax], rdx	       651	dir.c	FUNCTION_20
0x4001a99	              0x90	                                     nop	       652	dir.c	FUNCTION_20
0x4001a9a	        0x488b45f8	                mov rax, qword [rbp - 8]	       652	dir.c	FUNCTION_20
0x4001a9e	    0x644833042528	                xor rax, qword fs:[0x28]	       652	dir.c	FUNCTION_20
0x4001aa7	            0x7405	                            je 0x4001aae	       652	dir.c	FUNCTION_20
0x4001aa9	      0xe800000000	                          call 0x4001aae	       652	dir.c	FUNCTION_20
0x4001aae	              0xc9	                                   leave	       652	dir.c	FUNCTION_20
0x4001aaf	              0xc3	                                     ret	       652	dir.c	FUNCTION_20
is_missing_file_error	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,0:functions,0:FOR,0	12
0x40001f4	              0x55	                                push rbp	      1196	git-compat-util.h	FUNCTION_129
0x40001f5	          0x4889e5	                            mov rbp, rsp	      1196	git-compat-util.h	FUNCTION_129
0x40001f8	          0x897dfc	                mov dword [rbp - 4], edi	      1196	git-compat-util.h	FUNCTION_129
0x40001fb	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1197	git-compat-util.h	FUNCTION_129
0x40001ff	            0x7406	                            je 0x4000207	      1197	git-compat-util.h	FUNCTION_129
0x4000201	        0x837dfc14	               cmp dword [rbp - 4], 0x14	      1197	git-compat-util.h	FUNCTION_129
0x4000205	            0x7507	                           jne 0x400020e	      1197	git-compat-util.h	FUNCTION_129
0x4000207	      0xb801000000	                              mov eax, 1	      1197	git-compat-util.h	FUNCTION_129
0x400020c	            0xeb05	                           jmp 0x4000213	      1197	git-compat-util.h	FUNCTION_129
0x400020e	      0xb800000000	                              mov eax, 0	      1197	git-compat-util.h	FUNCTION_129
0x4000213	              0x5d	                                 pop rbp	      1198	git-compat-util.h	FUNCTION_129
0x4000214	              0xc3	                                     ret	      1198	git-compat-util.h	FUNCTION_129
would_convert_to_git	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	15
0x4000406	              0x55	                                push rbp	        80	convert.h	FUNCTION_174
0x4000407	          0x4889e5	                            mov rbp, rsp	        80	convert.h	FUNCTION_174
0x400040a	        0x4883ec10	                           sub rsp, 0x10	        80	convert.h	FUNCTION_174
0x400040e	        0x48897df8	                mov qword [rbp - 8], rdi	        80	convert.h	FUNCTION_174
0x4000412	        0x488975f0	             mov qword [rbp - 0x10], rsi	        80	convert.h	FUNCTION_174
0x4000416	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	        81	convert.h	FUNCTION_174	CALL_1
0x400041a	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	convert.h	FUNCTION_174	CALL_1
0x400041e	    0x41b900000000	                              mov r9d, 0	        81	convert.h	FUNCTION_174	CALL_1
0x4000424	    0x41b800000000	                              mov r8d, 0	        81	convert.h	FUNCTION_174	CALL_1
0x400042a	      0xb900000000	                              mov ecx, 0	        81	convert.h	FUNCTION_174	CALL_1
0x400042f	      0xba00000000	                              mov edx, 0	        81	convert.h	FUNCTION_174	CALL_1
0x4000434	          0x4889c7	                            mov rdi, rax	        81	convert.h	FUNCTION_174	CALL_1
0x4000437	      0xe800000000	                          call 0x400043c	        81	convert.h	FUNCTION_174	CALL_1
0x400043c	              0xc9	                                   leave	        82	convert.h	FUNCTION_174
0x400043d	              0xc3	                                     ret	        82	convert.h	FUNCTION_174
match_attrs	SWITCH,0:ELSE,3:WHILE,0:IF,4:DO,0:CALL,5:functions,0:FOR,1	83
0x4000deb	              0x55	                                push rbp	       280	dir.c	FUNCTION_11
0x4000dec	          0x4889e5	                            mov rbp, rsp	       280	dir.c	FUNCTION_11
0x4000def	        0x4883ec40	                           sub rsp, 0x40	       280	dir.c	FUNCTION_11
0x4000df3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       280	dir.c	FUNCTION_11
0x4000df7	          0x8975d4	             mov dword [rbp - 0x2c], esi	       280	dir.c	FUNCTION_11
0x4000dfa	        0x488955c8	             mov qword [rbp - 0x38], rdx	       280	dir.c	FUNCTION_11
0x4000dfe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       283	dir.c	FUNCTION_11	CALL_1
0x4000e02	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       283	dir.c	FUNCTION_11	CALL_1
0x4000e06	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       283	dir.c	FUNCTION_11	CALL_1
0x4000e0a	          0x4889d6	                            mov rsi, rdx	       283	dir.c	FUNCTION_11	CALL_1
0x4000e0d	          0x4889c7	                            mov rdi, rax	       283	dir.c	FUNCTION_11	CALL_1
0x4000e10	      0xe800000000	                          call 0x4000e15	       283	dir.c	FUNCTION_11	CALL_1
0x4000e15	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       284	dir.c	FUNCTION_11	FOR_1
0x4000e1c	      0xe9d5000000	                           jmp 0x4000ef6	       284	dir.c	FUNCTION_11	FOR_1
0x4000e21	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       289	dir.c	FUNCTION_11	FOR_1
0x4000e25	        0x488b4030	            mov rax, qword [rax + 0x30] 	       289	dir.c	FUNCTION_11	FOR_1
0x4000e29	        0x488b4008	                mov rax, qword [rax + 8]	       289	dir.c	FUNCTION_11	FOR_1
0x4000e2d	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       289	dir.c	FUNCTION_11	FOR_1
0x4000e30	          0x4863d2	                         movsxd rdx, edx	       289	dir.c	FUNCTION_11	FOR_1
0x4000e33	        0x48c1e204	                              shl rdx, 4	       289	dir.c	FUNCTION_11	FOR_1
0x4000e37	          0x4801d0	                            add rax, rdx	       289	dir.c	FUNCTION_11	FOR_1
0x4000e3a	        0x488b4008	                mov rax, qword [rax + 8]	       289	dir.c	FUNCTION_11	FOR_1
0x4000e3e	        0x488945f8	                mov qword [rbp - 8], rax	       289	dir.c	FUNCTION_11	FOR_1
0x4000e42	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       290	dir.c	FUNCTION_11	FOR_1
0x4000e46	        0x488b4028	            mov rax, qword [rax + 0x28] 	       290	dir.c	FUNCTION_11	FOR_1
0x4000e4a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       290	dir.c	FUNCTION_11	FOR_1
0x4000e4d	          0x4863d2	                         movsxd rdx, edx	       290	dir.c	FUNCTION_11	FOR_1
0x4000e50	        0x48c1e204	                              shl rdx, 4	       290	dir.c	FUNCTION_11	FOR_1
0x4000e54	          0x4801d0	                            add rax, rdx	       290	dir.c	FUNCTION_11	FOR_1
0x4000e57	          0x8b4008	                mov eax, dword [rax + 8]	       290	dir.c	FUNCTION_11	FOR_1
0x4000e5a	          0x8945f4	              mov dword [rbp - 0xc], eax	       290	dir.c	FUNCTION_11	FOR_1
0x4000e5d	    0x48817df80000	                  cmp qword [rbp - 8], 0	       292	dir.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4000e65	            0x750f	                           jne 0x4000e76	       292	dir.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4000e67	        0x837df400	                cmp dword [rbp - 0xc], 0	       293	dir.c	FUNCTION_11	FOR_1	IF_1
0x4000e6b	           0xf94c0	                                 sete al	       293	dir.c	FUNCTION_11	FOR_1	IF_1
0x4000e6e	           0xfb6c0	                           movzx eax, al	       293	dir.c	FUNCTION_11	FOR_1	IF_1
0x4000e71	          0x8945f0	             mov dword [rbp - 0x10], eax	       293	dir.c	FUNCTION_11	FOR_1	IF_1
0x4000e74	            0xeb6f	                           jmp 0x4000ee5	       293	dir.c	FUNCTION_11	FOR_1	IF_1
0x4000e76	    0x48817df80000	                  cmp qword [rbp - 8], 0	       294	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2	CALL_3
0x4000e7e	            0x750f	                           jne 0x4000e8f	       294	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2	CALL_3
0x4000e80	        0x837df401	                cmp dword [rbp - 0xc], 1	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x4000e84	           0xf94c0	                                 sete al	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x4000e87	           0xfb6c0	                           movzx eax, al	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x4000e8a	          0x8945f0	             mov dword [rbp - 0x10], eax	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x4000e8d	            0xeb56	                           jmp 0x4000ee5	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x4000e8f	      0x48837df800	                  cmp qword [rbp - 8], 0	       296	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3	CALL_4
0x4000e94	            0x750f	                           jne 0x4000ea5	       296	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3	CALL_4
0x4000e96	        0x837df403	                cmp dword [rbp - 0xc], 3	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4000e9a	           0xf94c0	                                 sete al	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4000e9d	           0xfb6c0	                           movzx eax, al	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4000ea0	          0x8945f0	             mov dword [rbp - 0x10], eax	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4000ea3	            0xeb40	                           jmp 0x4000ee5	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4000ea5	        0x837df402	                cmp dword [rbp - 0xc], 2	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4000ea9	            0x7532	                           jne 0x4000edd	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4000eab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4000eaf	        0x488b4028	            mov rax, qword [rax + 0x28] 	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4000eb3	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4000eb6	          0x4863d2	                         movsxd rdx, edx	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4000eb9	        0x48c1e204	                              shl rdx, 4	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4000ebd	          0x4801d0	                            add rax, rdx	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4000ec0	          0x488b00	                    mov rax, qword [rax]	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4000ec3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4000ec7	          0x4889d6	                            mov rsi, rdx	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4000eca	          0x4889c7	                            mov rdi, rax	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4000ecd	      0xe800000000	                          call 0x4000ed2	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4000ed2	            0x85c0	                           test eax, eax	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4000ed4	            0x7507	                           jne 0x4000edd	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4000ed6	      0xb801000000	                              mov eax, 1	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4000edb	            0xeb05	                           jmp 0x4000ee2	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4000edd	      0xb800000000	                              mov eax, 0	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4000ee2	          0x8945f0	             mov dword [rbp - 0x10], eax	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4000ee5	        0x837df000	               cmp dword [rbp - 0x10], 0	       301	dir.c	FUNCTION_11	FOR_1	IF_4
0x4000ee9	            0x7507	                           jne 0x4000ef2	       301	dir.c	FUNCTION_11	FOR_1	IF_4
0x4000eeb	      0xb800000000	                              mov eax, 0	       302	dir.c	FUNCTION_11	FOR_1	IF_4
0x4000ef0	            0xeb19	                           jmp 0x4000f0b	       302	dir.c	FUNCTION_11	FOR_1	IF_4
0x4000ef2	        0x8345ec01	               add dword [rbp - 0x14], 1	       284	dir.c	FUNCTION_11	FOR_1
0x4000ef6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       284	dir.c	FUNCTION_11	FOR_1
0x4000efa	          0x8b4024	            mov eax, dword [rax + 0x24] 	       284	dir.c	FUNCTION_11	FOR_1
0x4000efd	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       284	dir.c	FUNCTION_11	FOR_1
0x4000f00	     0xf8f1bffffff	                            jg 0x4000e21	       284	dir.c	FUNCTION_11	FOR_1
0x4000f06	      0xb801000000	                              mov eax, 1	       305	dir.c	FUNCTION_11
0x4000f0b	              0xc9	                                   leave	       306	dir.c	FUNCTION_11
0x4000f0c	              0xc3	                                     ret	       306	dir.c	FUNCTION_11
remove_dir_recursively	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	13
0x400603e	              0x55	                                push rbp	      2490	dir.c	FUNCTION_79
0x400603f	          0x4889e5	                            mov rbp, rsp	      2490	dir.c	FUNCTION_79
0x4006042	        0x4883ec10	                           sub rsp, 0x10	      2490	dir.c	FUNCTION_79
0x4006046	        0x48897df8	                mov qword [rbp - 8], rdi	      2490	dir.c	FUNCTION_79
0x400604a	          0x8975f4	              mov dword [rbp - 0xc], esi	      2490	dir.c	FUNCTION_79
0x400604d	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      2491	dir.c	FUNCTION_79	CALL_1
0x4006050	        0x488b45f8	                mov rax, qword [rbp - 8]	      2491	dir.c	FUNCTION_79	CALL_1
0x4006054	      0xba00000000	                              mov edx, 0	      2491	dir.c	FUNCTION_79	CALL_1
0x4006059	            0x89ce	                            mov esi, ecx	      2491	dir.c	FUNCTION_79	CALL_1
0x400605b	          0x4889c7	                            mov rdi, rax	      2491	dir.c	FUNCTION_79	CALL_1
0x400605e	      0xe893fcffff	             call sym.remove_dir_recurse	      2491	dir.c	FUNCTION_79	CALL_1
0x4006063	              0xc9	                                   leave	      2492	dir.c	FUNCTION_79
0x4006064	              0xc3	                                     ret	      2492	dir.c	FUNCTION_79
ps_strncmp	SWITCH,0:ELSE,1:WHILE,0:IF,1:DO,0:CALL,2:functions,0:FOR,0	27
0x40005d7	              0x55	                                push rbp	        91	pathspec.h	FUNCTION_168
0x40005d8	          0x4889e5	                            mov rbp, rsp	        91	pathspec.h	FUNCTION_168
0x40005db	        0x4883ec20	                           sub rsp, 0x20	        91	pathspec.h	FUNCTION_168
0x40005df	        0x48897df8	                mov qword [rbp - 8], rdi	        91	pathspec.h	FUNCTION_168
0x40005e3	        0x488975f0	             mov qword [rbp - 0x10], rsi	        91	pathspec.h	FUNCTION_168
0x40005e7	        0x488955e8	             mov qword [rbp - 0x18], rdx	        91	pathspec.h	FUNCTION_168
0x40005eb	        0x48894de0	             mov qword [rbp - 0x20], rcx	        91	pathspec.h	FUNCTION_168
0x40005ef	        0x488b45f8	                mov rax, qword [rbp - 8]	        92	pathspec.h	FUNCTION_168	IF_1
0x40005f3	          0x8b4010	            mov eax, dword [rax + 0x10] 	        92	pathspec.h	FUNCTION_168	IF_1
0x40005f6	          0x83e010	                           and eax, 0x10	        92	pathspec.h	FUNCTION_168	IF_1
0x40005f9	            0x85c0	                           test eax, eax	        92	pathspec.h	FUNCTION_168	IF_1
0x40005fb	            0x7419	                            je 0x4000616	        92	pathspec.h	FUNCTION_168	IF_1
0x40005fd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        93	pathspec.h	FUNCTION_168	CALL_1
0x4000601	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        93	pathspec.h	FUNCTION_168	CALL_1
0x4000605	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        93	pathspec.h	FUNCTION_168	CALL_1
0x4000609	          0x4889ce	                            mov rsi, rcx	        93	pathspec.h	FUNCTION_168	CALL_1
0x400060c	          0x4889c7	                            mov rdi, rax	        93	pathspec.h	FUNCTION_168	CALL_1
0x400060f	      0xe800000000	                          call 0x4000614	        93	pathspec.h	FUNCTION_168	CALL_1
0x4000614	            0xeb17	                           jmp 0x400062d	        93	pathspec.h	FUNCTION_168	CALL_1
0x4000616	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        95	pathspec.h	FUNCTION_168	CALL_2
0x400061a	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        95	pathspec.h	FUNCTION_168	CALL_2
0x400061e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        95	pathspec.h	FUNCTION_168	CALL_2
0x4000622	          0x4889ce	                            mov rsi, rcx	        95	pathspec.h	FUNCTION_168	CALL_2
0x4000625	          0x4889c7	                            mov rdi, rax	        95	pathspec.h	FUNCTION_168	CALL_2
0x4000628	      0xe800000000	                          call 0x400062d	        95	pathspec.h	FUNCTION_168	CALL_2
0x400062d	              0xc9	                                   leave	        96	pathspec.h	FUNCTION_168
0x400062e	              0xc3	                                     ret	        96	pathspec.h	FUNCTION_168
dir_add_ignored	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,2:functions,0:FOR,0	96
0x40036c9	              0x55	                                push rbp	      1351	dir.c	FUNCTION_45
0x40036ca	          0x4889e5	                            mov rbp, rsp	      1351	dir.c	FUNCTION_45
0x40036cd	              0x53	                                push rbx	      1351	dir.c	FUNCTION_45
0x40036ce	        0x4883ec28	                           sub rsp, 0x28	      1351	dir.c	FUNCTION_45
0x40036d2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1351	dir.c	FUNCTION_45
0x40036d6	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1351	dir.c	FUNCTION_45
0x40036da	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1351	dir.c	FUNCTION_45
0x40036de	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      1351	dir.c	FUNCTION_45
0x40036e1	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40036e4	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40036e8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40036ec	          0x4889ce	                            mov rsi, rcx	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40036ef	          0x4889c7	                            mov rdi, rax	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40036f2	      0xe800000000	                          call 0x40036f7	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40036f7	            0x85c0	                           test eax, eax	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40036f9	            0x750a	                           jne 0x4003705	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40036fb	      0xb800000000	                              mov eax, 0	      1353	dir.c	FUNCTION_45	IF_1
0x4003700	      0xe9e8000000	                           jmp 0x40037ed	      1353	dir.c	FUNCTION_45	IF_1
0x4003705	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1355	dir.c	FUNCTION_45
0x4003709	          0x8b4008	                mov eax, dword [rax + 8]	      1355	dir.c	FUNCTION_45
0x400370c	          0x8d5001	                      lea edx, [rax + 1]	      1355	dir.c	FUNCTION_45
0x400370f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1355	dir.c	FUNCTION_45
0x4003713	          0x8b400c	              mov eax, dword [rax + 0xc]	      1355	dir.c	FUNCTION_45
0x4003716	            0x39c2	                            cmp edx, eax	      1355	dir.c	FUNCTION_45
0x4003718	     0xf8e95000000	                           jle 0x40037b3	      1355	dir.c	FUNCTION_45
0x400371e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1355	dir.c	FUNCTION_45
0x4003722	          0x8b400c	              mov eax, dword [rax + 0xc]	      1355	dir.c	FUNCTION_45
0x4003725	          0x8d5010	                   lea edx, [rax + 0x10]	      1355	dir.c	FUNCTION_45
0x4003728	            0x89d0	                            mov eax, edx	      1355	dir.c	FUNCTION_45
0x400372a	             0x1c0	                            add eax, eax	      1355	dir.c	FUNCTION_45
0x400372c	             0x1d0	                            add eax, edx	      1355	dir.c	FUNCTION_45
0x400372e	            0x89c2	                            mov edx, eax	      1355	dir.c	FUNCTION_45
0x4003730	          0xc1ea1f	                           shr edx, 0x1f	      1355	dir.c	FUNCTION_45
0x4003733	             0x1d0	                            add eax, edx	      1355	dir.c	FUNCTION_45
0x4003735	            0xd1f8	                              sar eax, 1	      1355	dir.c	FUNCTION_45
0x4003737	            0x89c2	                            mov edx, eax	      1355	dir.c	FUNCTION_45
0x4003739	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1355	dir.c	FUNCTION_45
0x400373d	          0x8b4008	                mov eax, dword [rax + 8]	      1355	dir.c	FUNCTION_45
0x4003740	          0x83c001	                              add eax, 1	      1355	dir.c	FUNCTION_45
0x4003743	            0x39c2	                            cmp edx, eax	      1355	dir.c	FUNCTION_45
0x4003745	            0x7d13	                           jge 0x400375a	      1355	dir.c	FUNCTION_45
0x4003747	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1355	dir.c	FUNCTION_45
0x400374b	          0x8b4008	                mov eax, dword [rax + 8]	      1355	dir.c	FUNCTION_45
0x400374e	          0x8d5001	                      lea edx, [rax + 1]	      1355	dir.c	FUNCTION_45
0x4003751	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1355	dir.c	FUNCTION_45
0x4003755	          0x89500c	              mov dword [rax + 0xc], edx	      1355	dir.c	FUNCTION_45
0x4003758	            0xeb22	                           jmp 0x400377c	      1355	dir.c	FUNCTION_45
0x400375a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1355	dir.c	FUNCTION_45
0x400375e	          0x8b400c	              mov eax, dword [rax + 0xc]	      1355	dir.c	FUNCTION_45
0x4003761	          0x8d5010	                   lea edx, [rax + 0x10]	      1355	dir.c	FUNCTION_45
0x4003764	            0x89d0	                            mov eax, edx	      1355	dir.c	FUNCTION_45
0x4003766	             0x1c0	                            add eax, eax	      1355	dir.c	FUNCTION_45
0x4003768	             0x1d0	                            add eax, edx	      1355	dir.c	FUNCTION_45
0x400376a	            0x89c2	                            mov edx, eax	      1355	dir.c	FUNCTION_45
0x400376c	          0xc1ea1f	                           shr edx, 0x1f	      1355	dir.c	FUNCTION_45
0x400376f	             0x1d0	                            add eax, edx	      1355	dir.c	FUNCTION_45
0x4003771	            0xd1f8	                              sar eax, 1	      1355	dir.c	FUNCTION_45
0x4003773	            0x89c2	                            mov edx, eax	      1355	dir.c	FUNCTION_45
0x4003775	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1355	dir.c	FUNCTION_45
0x4003779	          0x89500c	              mov dword [rax + 0xc], edx	      1355	dir.c	FUNCTION_45
0x400377c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1355	dir.c	FUNCTION_45
0x4003780	          0x8b400c	              mov eax, dword [rax + 0xc]	      1355	dir.c	FUNCTION_45
0x4003783	            0x4898	                                    cdqe	      1355	dir.c	FUNCTION_45
0x4003785	          0x4889c6	                            mov rsi, rax	      1355	dir.c	FUNCTION_45
0x4003788	      0xbf08000000	                              mov edi, 8	      1355	dir.c	FUNCTION_45
0x400378d	      0xe824c9ffff	                        call sym.st_mult	      1355	dir.c	FUNCTION_45
0x4003792	          0x4889c2	                            mov rdx, rax	      1355	dir.c	FUNCTION_45
0x4003795	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1355	dir.c	FUNCTION_45
0x4003799	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1355	dir.c	FUNCTION_45
0x400379d	          0x4889d6	                            mov rsi, rdx	      1355	dir.c	FUNCTION_45
0x40037a0	          0x4889c7	                            mov rdi, rax	      1355	dir.c	FUNCTION_45
0x40037a3	      0xe800000000	                          call 0x40037a8	      1355	dir.c	FUNCTION_45
0x40037a8	          0x4889c2	                            mov rdx, rax	      1355	dir.c	FUNCTION_45
0x40037ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1355	dir.c	FUNCTION_45
0x40037af	        0x48895020	             mov qword [rax + 0x20], rdx	      1355	dir.c	FUNCTION_45
0x40037b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1356	dir.c	FUNCTION_45	CALL_2
0x40037b7	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      1356	dir.c	FUNCTION_45	CALL_2
0x40037bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1356	dir.c	FUNCTION_45	CALL_2
0x40037bf	          0x8b4008	                mov eax, dword [rax + 8]	      1356	dir.c	FUNCTION_45	CALL_2
0x40037c2	          0x8d4801	                      lea ecx, [rax + 1]	      1356	dir.c	FUNCTION_45	CALL_2
0x40037c5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1356	dir.c	FUNCTION_45	CALL_2
0x40037c9	          0x894a08	                mov dword [rdx + 8], ecx	      1356	dir.c	FUNCTION_45	CALL_2
0x40037cc	            0x4898	                                    cdqe	      1356	dir.c	FUNCTION_45	CALL_2
0x40037ce	        0x48c1e003	                              shl rax, 3	      1356	dir.c	FUNCTION_45	CALL_2
0x40037d2	        0x488d1c06	                    lea rbx, [rsi + rax]	      1356	dir.c	FUNCTION_45	CALL_2
0x40037d6	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1356	dir.c	FUNCTION_45	CALL_2
0x40037d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1356	dir.c	FUNCTION_45	CALL_2
0x40037dd	            0x89d6	                            mov esi, edx	      1356	dir.c	FUNCTION_45	CALL_2
0x40037df	          0x4889c7	                            mov rdi, rax	      1356	dir.c	FUNCTION_45	CALL_2
0x40037e2	      0xe847fdffff	                  call sym.dir_entry_new	      1356	dir.c	FUNCTION_45	CALL_2
0x40037e7	          0x488903	                    mov qword [rbx], rax	      1356	dir.c	FUNCTION_45	CALL_2
0x40037ea	          0x488b03	                    mov rax, qword [rbx]	      1356	dir.c	FUNCTION_45	CALL_2
0x40037ed	        0x4883c428	                           add rsp, 0x28	      1357	dir.c	FUNCTION_45
0x40037f1	              0x5b	                                 pop rbx	      1357	dir.c	FUNCTION_45
0x40037f2	              0x5d	                                 pop rbp	      1357	dir.c	FUNCTION_45
0x40037f3	              0xc3	                                     ret	      1357	dir.c	FUNCTION_45
fill_directory	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,2:functions,0:FOR,0	31
0x4000bc0	              0x55	                                push rbp	       193	dir.c	FUNCTION_8
0x4000bc1	          0x4889e5	                            mov rbp, rsp	       193	dir.c	FUNCTION_8
0x4000bc4	        0x4883ec30	                           sub rsp, 0x30	       193	dir.c	FUNCTION_8
0x4000bc8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       193	dir.c	FUNCTION_8
0x4000bcc	        0x488975e0	             mov qword [rbp - 0x20], rsi	       193	dir.c	FUNCTION_8
0x4000bd0	        0x488955d8	             mov qword [rbp - 0x28], rdx	       193	dir.c	FUNCTION_8
0x4000bd4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       201	dir.c	FUNCTION_8	CALL_1
0x4000bd8	          0x4889c7	                            mov rdi, rax	       201	dir.c	FUNCTION_8	CALL_1
0x4000bdb	      0xe8c0fdffff	              call sym.common_prefix_len	       201	dir.c	FUNCTION_8	CALL_1
0x4000be0	        0x488945f0	             mov qword [rbp - 0x10], rax	       201	dir.c	FUNCTION_8	CALL_1
0x4000be4	      0x48837df000	               cmp qword [rbp - 0x10], 0	       202	dir.c	FUNCTION_8
0x4000be9	            0x740d	                            je 0x4000bf8	       202	dir.c	FUNCTION_8
0x4000beb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       202	dir.c	FUNCTION_8
0x4000bef	        0x488b4010	            mov rax, qword [rax + 0x10] 	       202	dir.c	FUNCTION_8
0x4000bf3	          0x488b00	                    mov rax, qword [rax]	       202	dir.c	FUNCTION_8
0x4000bf6	            0xeb05	                           jmp 0x4000bfd	       202	dir.c	FUNCTION_8
0x4000bf8	      0xb800000000	                              mov eax, 0	       202	dir.c	FUNCTION_8
0x4000bfd	        0x488945f8	                mov qword [rbp - 8], rax	       202	dir.c	FUNCTION_8
0x4000c01	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       205	dir.c	FUNCTION_8	CALL_2
0x4000c05	            0x89c7	                            mov edi, eax	       205	dir.c	FUNCTION_8	CALL_2
0x4000c07	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       205	dir.c	FUNCTION_8	CALL_2
0x4000c0b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       205	dir.c	FUNCTION_8	CALL_2
0x4000c0f	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       205	dir.c	FUNCTION_8	CALL_2
0x4000c13	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       205	dir.c	FUNCTION_8	CALL_2
0x4000c17	          0x4989c8	                             mov r8, rcx	       205	dir.c	FUNCTION_8	CALL_2
0x4000c1a	            0x89f9	                            mov ecx, edi	       205	dir.c	FUNCTION_8	CALL_2
0x4000c1c	          0x4889c7	                            mov rdi, rax	       205	dir.c	FUNCTION_8	CALL_2
0x4000c1f	      0xe800000000	                          call 0x4000c24	       205	dir.c	FUNCTION_8	CALL_2
0x4000c24	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       207	dir.c	FUNCTION_8
0x4000c28	              0xc9	                                   leave	       208	dir.c	FUNCTION_8
0x4000c29	              0xc3	                                     ret	       208	dir.c	FUNCTION_8
last_exclude_matching	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,4:functions,0:FOR,0	52
0x4003421	              0x55	                                push rbp	      1299	dir.c	FUNCTION_41
0x4003422	          0x4889e5	                            mov rbp, rsp	      1299	dir.c	FUNCTION_41
0x4003425	        0x4883ec30	                           sub rsp, 0x30	      1299	dir.c	FUNCTION_41
0x4003429	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1299	dir.c	FUNCTION_41
0x400342d	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1299	dir.c	FUNCTION_41
0x4003431	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1299	dir.c	FUNCTION_41
0x4003435	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1299	dir.c	FUNCTION_41
0x4003439	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1300	dir.c	FUNCTION_41	CALL_1
0x400343d	          0x4889c7	                            mov rdi, rax	      1300	dir.c	FUNCTION_41	CALL_1
0x4003440	      0xe800000000	                          call 0x4003445	      1300	dir.c	FUNCTION_41	CALL_1
0x4003445	          0x8945f4	              mov dword [rbp - 0xc], eax	      1300	dir.c	FUNCTION_41	CALL_1
0x4003448	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1301	dir.c	FUNCTION_41	CALL_2
0x400344c	      0xbe2f000000	                           mov esi, 0x2f	      1301	dir.c	FUNCTION_41	CALL_2
0x4003451	          0x4889c7	                            mov rdi, rax	      1301	dir.c	FUNCTION_41	CALL_2
0x4003454	      0xe800000000	                          call 0x4003459	      1301	dir.c	FUNCTION_41	CALL_2
0x4003459	        0x488945f8	                mov qword [rbp - 8], rax	      1301	dir.c	FUNCTION_41	CALL_2
0x400345d	      0x48837df800	                  cmp qword [rbp - 8], 0	      1302	dir.c	FUNCTION_41
0x4003462	            0x740a	                            je 0x400346e	      1302	dir.c	FUNCTION_41
0x4003464	        0x488b45f8	                mov rax, qword [rbp - 8]	      1302	dir.c	FUNCTION_41
0x4003468	        0x4883c001	                              add rax, 1	      1302	dir.c	FUNCTION_41
0x400346c	            0xeb04	                           jmp 0x4003472	      1302	dir.c	FUNCTION_41
0x400346e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1302	dir.c	FUNCTION_41
0x4003472	        0x488945f8	                mov qword [rbp - 8], rax	      1302	dir.c	FUNCTION_41
0x4003476	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1304	dir.c	FUNCTION_41	CALL_3
0x400347a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1304	dir.c	FUNCTION_41	CALL_3
0x400347e	          0x4829c2	                            sub rdx, rax	      1304	dir.c	FUNCTION_41	CALL_3
0x4003481	          0x4889d0	                            mov rax, rdx	      1304	dir.c	FUNCTION_41	CALL_3
0x4003484	            0x89c1	                            mov ecx, eax	      1304	dir.c	FUNCTION_41	CALL_3
0x4003486	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1304	dir.c	FUNCTION_41	CALL_3
0x400348a	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1304	dir.c	FUNCTION_41	CALL_3
0x400348e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1304	dir.c	FUNCTION_41	CALL_3
0x4003492	          0x4889c7	                            mov rdi, rax	      1304	dir.c	FUNCTION_41	CALL_3
0x4003495	      0xe89cf8ffff	                   call sym.prep_exclude	      1304	dir.c	FUNCTION_41	CALL_3
0x400349a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1306	dir.c	FUNCTION_41	IF_1
0x400349e	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1306	dir.c	FUNCTION_41	IF_1
0x40034a2	          0x4885c0	                           test rax, rax	      1306	dir.c	FUNCTION_41	IF_1
0x40034a5	            0x740a	                            je 0x40034b1	      1306	dir.c	FUNCTION_41	IF_1
0x40034a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1307	dir.c	FUNCTION_41	IF_1
0x40034ab	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1307	dir.c	FUNCTION_41	IF_1
0x40034af	            0xeb25	                           jmp 0x40034d6	      1307	dir.c	FUNCTION_41	IF_1
0x40034b1	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	      1309	dir.c	FUNCTION_41	CALL_4
0x40034b5	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1309	dir.c	FUNCTION_41	CALL_4
0x40034b9	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1309	dir.c	FUNCTION_41	CALL_4
0x40034bc	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1309	dir.c	FUNCTION_41	CALL_4
0x40034c0	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1309	dir.c	FUNCTION_41	CALL_4
0x40034c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1309	dir.c	FUNCTION_41	CALL_4
0x40034c8	          0x4d89c1	                              mov r9, r8	      1309	dir.c	FUNCTION_41	CALL_4
0x40034cb	          0x4989f8	                             mov r8, rdi	      1309	dir.c	FUNCTION_41	CALL_4
0x40034ce	          0x4889c7	                            mov rdi, rax	      1309	dir.c	FUNCTION_41	CALL_4
0x40034d1	      0xe8abf7ffff	call sym.last_exclude_matching_from_lists	      1309	dir.c	FUNCTION_41	CALL_4
0x40034d6	              0xc9	                                   leave	      1311	dir.c	FUNCTION_41
0x40034d7	              0xc3	                                     ret	      1311	dir.c	FUNCTION_41
file_exists	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,0:functions,0:FOR,0	21
0x4005a2a	              0x55	                                push rbp	      2335	dir.c	FUNCTION_73
0x4005a2b	          0x4889e5	                            mov rbp, rsp	      2335	dir.c	FUNCTION_73
0x4005a2e	    0x4881ecb00000	                           sub rsp, 0xb0	      2335	dir.c	FUNCTION_73
0x4005a35	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      2335	dir.c	FUNCTION_73
0x4005a3c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2335	dir.c	FUNCTION_73
0x4005a45	        0x488945f8	                mov qword [rbp - 8], rax	      2335	dir.c	FUNCTION_73
0x4005a49	            0x31c0	                            xor eax, eax	      2335	dir.c	FUNCTION_73
0x4005a4b	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      2337	dir.c	FUNCTION_73
0x4005a52	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2337	dir.c	FUNCTION_73
0x4005a59	          0x4889d6	                            mov rsi, rdx	      2337	dir.c	FUNCTION_73
0x4005a5c	          0x4889c7	                            mov rdi, rax	      2337	dir.c	FUNCTION_73
0x4005a5f	      0xe800000000	                          call 0x4005a64	      2337	dir.c	FUNCTION_73
0x4005a64	            0x85c0	                           test eax, eax	      2337	dir.c	FUNCTION_73
0x4005a66	           0xf94c0	                                 sete al	      2337	dir.c	FUNCTION_73
0x4005a69	           0xfb6c0	                           movzx eax, al	      2337	dir.c	FUNCTION_73
0x4005a6c	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2338	dir.c	FUNCTION_73
0x4005a70	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2338	dir.c	FUNCTION_73
0x4005a79	            0x7405	                            je 0x4005a80	      2338	dir.c	FUNCTION_73
0x4005a7b	      0xe800000000	                          call 0x4005a80	      2338	dir.c	FUNCTION_73
0x4005a80	              0xc9	                                   leave	      2338	dir.c	FUNCTION_73
0x4005a81	              0xc3	                                     ret	      2338	dir.c	FUNCTION_73
treat_path_fast	SWITCH,0:ELSE,0:WHILE,0:IF,2:DO,0:CALL,5:functions,0:FOR,0	65
0x40041cc	              0x55	                                push rbp	      1743	dir.c	FUNCTION_54
0x40041cd	          0x4889e5	                            mov rbp, rsp	      1743	dir.c	FUNCTION_54
0x40041d0	        0x4883ec30	                           sub rsp, 0x30	      1743	dir.c	FUNCTION_54
0x40041d4	        0x48897df8	                mov qword [rbp - 8], rdi	      1743	dir.c	FUNCTION_54
0x40041d8	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1743	dir.c	FUNCTION_54
0x40041dc	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1743	dir.c	FUNCTION_54
0x40041e0	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1743	dir.c	FUNCTION_54
0x40041e4	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      1743	dir.c	FUNCTION_54
0x40041e8	        0x44894dd4	             mov dword [rbp - 0x2c], r9d	      1743	dir.c	FUNCTION_54
0x40041ec	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1744	dir.c	FUNCTION_54	CALL_1
0x40041ef	          0x4863d0	                         movsxd rdx, eax	      1744	dir.c	FUNCTION_54	CALL_1
0x40041f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1744	dir.c	FUNCTION_54	CALL_1
0x40041f6	          0x4889d6	                            mov rsi, rdx	      1744	dir.c	FUNCTION_54	CALL_1
0x40041f9	          0x4889c7	                            mov rdi, rax	      1744	dir.c	FUNCTION_54	CALL_1
0x40041fc	      0xe84ac0ffff	                  call sym.strbuf_setlen	      1744	dir.c	FUNCTION_54	CALL_1
0x4004201	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1745	dir.c	FUNCTION_54	IF_1
0x4004205	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1745	dir.c	FUNCTION_54	IF_1
0x4004209	          0x4885c0	                           test rax, rax	      1745	dir.c	FUNCTION_54	IF_1
0x400420c	            0x7521	                           jne 0x400422f	      1745	dir.c	FUNCTION_54	IF_1
0x400420e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1746	dir.c	FUNCTION_54	IF_1	CALL_2
0x4004212	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1746	dir.c	FUNCTION_54	IF_1	CALL_2
0x4004216	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1746	dir.c	FUNCTION_54	IF_1	CALL_2
0x400421a	          0x4889d6	                            mov rsi, rdx	      1746	dir.c	FUNCTION_54	IF_1	CALL_2
0x400421d	          0x4889c7	                            mov rdi, rax	      1746	dir.c	FUNCTION_54	IF_1	CALL_2
0x4004220	      0xe82ec1ffff	                  call sym.strbuf_addstr	      1746	dir.c	FUNCTION_54	IF_1	CALL_2
0x4004225	      0xb803000000	                              mov eax, 3	      1747	dir.c	FUNCTION_54	IF_1
0x400422a	      0xe984000000	                           jmp 0x40042b3	      1747	dir.c	FUNCTION_54	IF_1
0x400422f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1749	dir.c	FUNCTION_54	CALL_3
0x4004233	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1749	dir.c	FUNCTION_54	CALL_3
0x4004237	        0x488d5059	                   lea rdx, [rax + 0x59]	      1749	dir.c	FUNCTION_54	CALL_3
0x400423b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1749	dir.c	FUNCTION_54	CALL_3
0x400423f	          0x4889d6	                            mov rsi, rdx	      1749	dir.c	FUNCTION_54	CALL_3
0x4004242	          0x4889c7	                            mov rdi, rax	      1749	dir.c	FUNCTION_54	CALL_3
0x4004245	      0xe809c1ffff	                  call sym.strbuf_addstr	      1749	dir.c	FUNCTION_54	CALL_3
0x400424a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1751	dir.c	FUNCTION_54	CALL_4
0x400424e	      0xbe2f000000	                           mov esi, 0x2f	      1751	dir.c	FUNCTION_54	CALL_4
0x4004253	          0x4889c7	                            mov rdi, rax	      1751	dir.c	FUNCTION_54	CALL_4
0x4004256	      0xe82dc1ffff	                call sym.strbuf_complete	      1751	dir.c	FUNCTION_54	CALL_4
0x400425b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1752	dir.c	FUNCTION_54	IF_2
0x400425f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1752	dir.c	FUNCTION_54	IF_2
0x4004263	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      1752	dir.c	FUNCTION_54	IF_2
0x4004267	          0x83e001	                              and eax, 1	      1752	dir.c	FUNCTION_54	IF_2
0x400426a	            0x84c0	                             test al, al	      1752	dir.c	FUNCTION_54	IF_2
0x400426c	            0x7440	                            je 0x40042ae	      1752	dir.c	FUNCTION_54	IF_2
0x400426e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x4004272	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x4004276	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x400427a	        0x488b4008	                mov rax, qword [rax + 8]	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x400427e	            0x89c7	                            mov edi, eax	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x4004280	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x4004284	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x4004288	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x400428c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x4004290	          0xff7510	                 push qword [rbp + 0x10]	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x4004293	            0x6a00	                                  push 0	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x4004295	    0x41b901000000	                              mov r9d, 1	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x400429b	          0x4989c8	                             mov r8, rcx	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x400429e	            0x89f9	                            mov ecx, edi	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x40042a0	          0x4889c7	                            mov rdi, rax	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x40042a3	      0xe87c070000	       call sym.read_directory_recursive	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x40042a8	        0x4883c410	                           add rsp, 0x10	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x40042ac	            0xeb05	                           jmp 0x40042b3	      1758	dir.c	FUNCTION_54	IF_2	CALL_5
0x40042ae	      0xb801000000	                              mov eax, 1	      1766	dir.c	FUNCTION_54
0x40042b3	              0xc9	                                   leave	      1767	dir.c	FUNCTION_54
0x40042b4	              0xc3	                                     ret	      1767	dir.c	FUNCTION_54
trim_trailing_spaces	SWITCH,1:ELSE,0:WHILE,0:IF,3:DO,0:CALL,0:functions,0:FOR,1	41
0x4001bd9	              0x55	                                push rbp	       688	dir.c	FUNCTION_23
0x4001bda	          0x4889e5	                            mov rbp, rsp	       688	dir.c	FUNCTION_23
0x4001bdd	        0x48897de8	             mov qword [rbp - 0x18], rdi	       688	dir.c	FUNCTION_23
0x4001be1	    0x48c745f80000	                  mov qword [rbp - 8], 0	       689	dir.c	FUNCTION_23
0x4001be9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       691	dir.c	FUNCTION_23	FOR_1
0x4001bed	        0x488945f0	             mov qword [rbp - 0x10], rax	       691	dir.c	FUNCTION_23	FOR_1
0x4001bf1	            0xeb47	                           jmp 0x4001c3a	       691	dir.c	FUNCTION_23	FOR_1
0x4001bf3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4001bf7	           0xfb600	                   movzx eax, byte [rax]	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4001bfa	           0xfbec0	                           movsx eax, al	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4001bfd	          0x83f820	                           cmp eax, 0x20	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4001c00	            0x7407	                            je 0x4001c09	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4001c02	          0x83f85c	                           cmp eax, 0x5c	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4001c05	            0x7413	                            je 0x4001c1a	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4001c07	            0xeb21	                           jmp 0x4001c2a	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4001c09	      0x48837df800	                  cmp qword [rbp - 8], 0	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x4001c0e	            0x7524	                           jne 0x4001c34	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x4001c10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       695	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x4001c14	        0x488945f8	                mov qword [rbp - 8], rax	       695	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x4001c18	            0xeb1a	                           jmp 0x4001c34	       696	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4001c1a	      0x488345f001	               add qword [rbp - 0x10], 1	       698	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4001c1f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       699	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_2
0x4001c23	           0xfb600	                   movzx eax, byte [rax]	       699	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_2
0x4001c26	            0x84c0	                             test al, al	       699	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_2
0x4001c28	            0x742b	                            je 0x4001c55	       699	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_2
0x4001c2a	    0x48c745f80000	                  mov qword [rbp - 8], 0	       703	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4001c32	            0xeb01	                           jmp 0x4001c35	       703	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4001c34	              0x90	                                     nop	       696	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4001c35	      0x488345f001	               add qword [rbp - 0x10], 1	       691	dir.c	FUNCTION_23	FOR_1
0x4001c3a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       691	dir.c	FUNCTION_23	FOR_1
0x4001c3e	           0xfb600	                   movzx eax, byte [rax]	       691	dir.c	FUNCTION_23	FOR_1
0x4001c41	            0x84c0	                             test al, al	       691	dir.c	FUNCTION_23	FOR_1
0x4001c43	            0x75ae	                           jne 0x4001bf3	       691	dir.c	FUNCTION_23	FOR_1
0x4001c45	      0x48837df800	                  cmp qword [rbp - 8], 0	       706	dir.c	FUNCTION_23	IF_3
0x4001c4a	            0x740a	                            je 0x4001c56	       706	dir.c	FUNCTION_23	IF_3
0x4001c4c	        0x488b45f8	                mov rax, qword [rbp - 8]	       707	dir.c	FUNCTION_23	IF_3
0x4001c50	          0xc60000	                       mov byte [rax], 0	       707	dir.c	FUNCTION_23	IF_3
0x4001c53	            0xeb01	                           jmp 0x4001c56	       707	dir.c	FUNCTION_23	IF_3
0x4001c55	              0x90	                                     nop	       700	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_2
0x4001c56	              0x5d	                                 pop rbp	       708	dir.c	FUNCTION_23
0x4001c57	              0xc3	                                     ret	       708	dir.c	FUNCTION_23
do_match_pathspec	SWITCH,0:ELSE,2:WHILE,0:IF,12:DO,0:CALL,3:functions,0:FOR,1	234
0x400117c	              0x55	                                push rbp	       432	dir.c	FUNCTION_13
0x400117d	          0x4889e5	                            mov rbp, rsp	       432	dir.c	FUNCTION_13
0x4001180	        0x4883ec50	                           sub rsp, 0x50	       432	dir.c	FUNCTION_13
0x4001184	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       432	dir.c	FUNCTION_13
0x4001188	        0x488975d0	             mov qword [rbp - 0x30], rsi	       432	dir.c	FUNCTION_13
0x400118c	          0x8955cc	             mov dword [rbp - 0x34], edx	       432	dir.c	FUNCTION_13
0x400118f	          0x894dc8	             mov dword [rbp - 0x38], ecx	       432	dir.c	FUNCTION_13
0x4001192	        0x4c8945c0	              mov qword [rbp - 0x40], r8	       432	dir.c	FUNCTION_13
0x4001196	        0x44894dbc	             mov dword [rbp - 0x44], r9d	       432	dir.c	FUNCTION_13
0x400119a	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       433	dir.c	FUNCTION_13
0x40011a1	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       433	dir.c	FUNCTION_13
0x40011a4	          0x83e001	                              and eax, 1	       433	dir.c	FUNCTION_13
0x40011a7	          0x8945fc	                mov dword [rbp - 4], eax	       433	dir.c	FUNCTION_13
0x40011aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       435	dir.c	FUNCTION_13
0x40011ae	          0x8b4008	                mov eax, dword [rax + 8]	       435	dir.c	FUNCTION_13
0x40011b1	          0x83e080	                     and eax, 0xffffff80	       435	dir.c	FUNCTION_13
0x40011b4	            0x85c0	                           test eax, eax	       435	dir.c	FUNCTION_13
0x40011b6	            0x7425	                            je 0x40011dd	       435	dir.c	FUNCTION_13
0x40011b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       435	dir.c	FUNCTION_13
0x40011bc	          0x8b4008	                mov eax, dword [rax + 8]	       435	dir.c	FUNCTION_13
0x40011bf	          0x83e080	                     and eax, 0xffffff80	       435	dir.c	FUNCTION_13
0x40011c2	            0x89c1	                            mov ecx, eax	       435	dir.c	FUNCTION_13
0x40011c4	      0xbaba010000	                          mov edx, 0x1ba	       435	dir.c	FUNCTION_13
0x40011c9	      0xbe00000000	                              mov esi, 0	       435	dir.c	FUNCTION_13
0x40011ce	      0xbf00000000	                              mov edi, 0	       435	dir.c	FUNCTION_13
0x40011d3	      0xb800000000	                              mov eax, 0	       435	dir.c	FUNCTION_13
0x40011d8	      0xe800000000	                          call 0x40011dd	       435	dir.c	FUNCTION_13
0x40011dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       444	dir.c	FUNCTION_13	IF_1
0x40011e1	            0x8b00	                    mov eax, dword [rax]	       444	dir.c	FUNCTION_13	IF_1
0x40011e3	            0x85c0	                           test eax, eax	       444	dir.c	FUNCTION_13	IF_1
0x40011e5	            0x7568	                           jne 0x400124f	       444	dir.c	FUNCTION_13	IF_1
0x40011e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x40011eb	         0xfb64004	               movzx eax, byte [rax + 4]	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x40011ef	          0x83e002	                              and eax, 2	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x40011f2	            0x84c0	                             test al, al	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x40011f4	            0x741a	                            je 0x4001210	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x40011f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       446	dir.c	FUNCTION_13	IF_1	IF_2
0x40011fa	          0x8b4008	                mov eax, dword [rax + 8]	       446	dir.c	FUNCTION_13	IF_1	IF_2
0x40011fd	          0x83e002	                              and eax, 2	       446	dir.c	FUNCTION_13	IF_1	IF_2
0x4001200	            0x85c0	                           test eax, eax	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x4001202	            0x740c	                            je 0x4001210	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x4001204	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       447	dir.c	FUNCTION_13	IF_1	IF_2
0x4001208	          0x8b400c	              mov eax, dword [rax + 0xc]	       447	dir.c	FUNCTION_13	IF_1	IF_2
0x400120b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       446	dir.c	FUNCTION_13	IF_1	IF_2
0x400120e	            0x750a	                           jne 0x400121a	       446	dir.c	FUNCTION_13	IF_1	IF_2
0x4001210	      0xb801000000	                              mov eax, 1	       448	dir.c	FUNCTION_13	IF_1	IF_2
0x4001215	      0xe97e020000	                           jmp 0x4001498	       448	dir.c	FUNCTION_13	IF_1	IF_2
0x400121a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       450	dir.c	FUNCTION_13	IF_1	IF_3	CALL_1
0x400121e	          0x8b500c	              mov edx, dword [rax + 0xc]	       450	dir.c	FUNCTION_13	IF_1	IF_3	CALL_1
0x4001221	          0x8b75cc	             mov esi, dword [rbp - 0x34]	       450	dir.c	FUNCTION_13	IF_1	IF_3	CALL_1
0x4001224	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       450	dir.c	FUNCTION_13	IF_1	IF_3	CALL_1
0x4001228	            0x89d1	                            mov ecx, edx	       450	dir.c	FUNCTION_13	IF_1	IF_3	CALL_1
0x400122a	      0xba00000000	                              mov edx, 0	       450	dir.c	FUNCTION_13	IF_1	IF_3	CALL_1
0x400122f	          0x4889c7	                            mov rdi, rax	       450	dir.c	FUNCTION_13	IF_1	IF_3	CALL_1
0x4001232	      0xe800000000	                          call 0x4001237	       450	dir.c	FUNCTION_13	IF_1	IF_3	CALL_1
0x4001237	            0x85c0	                           test eax, eax	       450	dir.c	FUNCTION_13	IF_1	IF_3	CALL_1
0x4001239	            0x740a	                            je 0x4001245	       450	dir.c	FUNCTION_13	IF_1	IF_3	CALL_1
0x400123b	      0xb803000000	                              mov eax, 3	       451	dir.c	FUNCTION_13	IF_1	IF_3
0x4001240	      0xe953020000	                           jmp 0x4001498	       451	dir.c	FUNCTION_13	IF_1	IF_3
0x4001245	      0xb800000000	                              mov eax, 0	       453	dir.c	FUNCTION_13	IF_1	ELSE_1
0x400124a	      0xe949020000	                           jmp 0x4001498	       453	dir.c	FUNCTION_13	IF_1	ELSE_1
0x400124f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       456	dir.c	FUNCTION_13	ELSE_1
0x4001252	            0x4898	                                    cdqe	       456	dir.c	FUNCTION_13	ELSE_1
0x4001254	        0x480145d0	            add qword [rbp - 0x30], rax 	       456	dir.c	FUNCTION_13	ELSE_1
0x4001258	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       457	dir.c	FUNCTION_13	ELSE_1
0x400125b	          0x2945cc	             sub dword [rbp - 0x34], eax	       457	dir.c	FUNCTION_13	ELSE_1
0x400125e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001262	            0x8b00	                    mov eax, dword [rax]	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001264	          0x83e801	                              sub eax, 1	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001267	          0x8945ec	             mov dword [rbp - 0x14], eax	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x400126a	      0xe91c020000	                           jmp 0x400148b	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x400126f	        0x837dfc00	                  cmp dword [rbp - 4], 0	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001273	            0x7530	                           jne 0x40012a5	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001275	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001279	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x400127d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001280	            0x4898	                                    cdqe	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001282	        0x48c1e003	                              shl rax, 3	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001286	    0x488d0cc50000	                        lea rcx, [rax*8]	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x400128e	          0x4829c1	                            sub rcx, rax	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001291	          0x4889c8	                            mov rax, rcx	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001294	          0x4801d0	                            add rax, rdx	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001297	          0x8b4010	            mov eax, dword [rax + 0x10] 	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x400129a	          0x83e020	                           and eax, 0x20	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x400129d	            0x85c0	                           test eax, eax	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x400129f	     0xf85de010000	                           jne 0x4001483	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012a5	        0x837dfc00	                  cmp dword [rbp - 4], 0	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012a9	            0x7430	                            je 0x40012db	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012af	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012b3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012b6	            0x4898	                                    cdqe	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012b8	        0x48c1e003	                              shl rax, 3	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012bc	    0x488d0cc50000	                        lea rcx, [rax*8]	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012c4	          0x4829c1	                            sub rcx, rax	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012c7	          0x4889c8	                            mov rax, rcx	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012ca	          0x4801d0	                            add rax, rdx	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012cd	          0x8b4010	            mov eax, dword [rax + 0x10] 	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012d0	          0x83e020	                           and eax, 0x20	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012d3	            0x85c0	                           test eax, eax	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012d5	     0xf84a8010000	                            je 0x4001483	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40012db	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40012e0	            0x7418	                            je 0x40012fa	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40012e2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40012e5	          0x4863d0	                         movsxd rdx, eax	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40012e8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40012ec	          0x4801d0	                            add rax, rdx	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40012ef	           0xfb600	                   movzx eax, byte [rax]	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40012f2	            0x3c03	                               cmp al, 3	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40012f4	     0xf848c010000	                            je 0x4001486	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40012fa	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x40012ff	            0x743c	                            je 0x400133d	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001301	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001305	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001309	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x400130c	            0x4898	                                    cdqe	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x400130e	        0x48c1e003	                              shl rax, 3	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001312	    0x488d0cc50000	                        lea rcx, [rax*8]	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x400131a	          0x4829c1	                            sub rcx, rax	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x400131d	          0x4889c8	                            mov rax, rcx	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001320	          0x4801d0	                            add rax, rdx	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001323	          0x8b4010	            mov eax, dword [rax + 0x10] 	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001326	          0x83e020	                           and eax, 0x20	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001329	            0x85c0	                           test eax, eax	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x400132b	            0x7410	                            je 0x400133d	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x400132d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       473	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001330	          0x4863d0	                         movsxd rdx, eax	       473	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001333	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       473	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001337	          0x4801d0	                            add rax, rdx	       473	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x400133a	          0xc60002	                       mov byte [rax], 2	       473	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x400133d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x4001341	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x4001345	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x4001348	            0x4898	                                    cdqe	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x400134a	        0x48c1e003	                              shl rax, 3	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x400134e	    0x488d0cc50000	                        lea rcx, [rax*8]	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x4001356	          0x4829c1	                            sub rcx, rax	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x4001359	          0x4889c8	                            mov rax, rcx	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x400135c	        0x488d3c02	                    lea rdi, [rdx + rax]	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x4001360	          0x8b75bc	             mov esi, dword [rbp - 0x44]	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x4001363	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x4001366	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x400136a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x400136d	          0x4189f0	                            mov r8d, esi	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x4001370	            0x89c6	                            mov esi, eax	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x4001372	      0xe896fbffff	            call sym.match_pathspec_item	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x4001377	          0x8945f4	              mov dword [rbp - 0xc], eax	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x400137a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x400137e	         0xfb64004	               movzx eax, byte [rax + 4]	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001382	          0x83e002	                              and eax, 2	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001385	            0x84c0	                             test al, al	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001387	     0xf84af000000	                            je 0x400143c	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x400138d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       477	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001391	          0x8b4008	                mov eax, dword [rax + 8]	       477	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001394	          0x83e002	                              and eax, 2	       477	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001397	            0x85c0	                           test eax, eax	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001399	     0xf849d000000	                            je 0x400143c	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x400139f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       478	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013a3	          0x8b400c	              mov eax, dword [rax + 0xc]	       478	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013a6	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       477	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013a9	     0xf848d000000	                            je 0x400143c	       477	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013af	        0x837df400	                cmp dword [rbp - 0xc], 0	       478	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013b3	     0xf8483000000	                            je 0x400143c	       478	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013b9	        0x837df402	                cmp dword [rbp - 0xc], 2	       479	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013bd	            0x747d	                            je 0x400143c	       479	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013c3	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013c7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013ca	            0x4898	                                    cdqe	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013cc	        0x48c1e003	                              shl rax, 3	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013d0	    0x488d0cc50000	                        lea rcx, [rax*8]	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013d8	          0x4829c1	                            sub rcx, rax	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013db	          0x4889c8	                            mov rax, rcx	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013de	          0x4801d0	                            add rax, rdx	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013e1	          0x8b4014	            mov eax, dword [rax + 0x14] 	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013e4	          0x8945f8	                mov dword [rbp - 8], eax	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x40013e7	          0x8b45f8	                mov eax, dword [rbp - 8]	       481	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x40013ea	          0x4863d0	                         movsxd rdx, eax	       481	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x40013ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       481	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x40013f1	          0x4801d0	                            add rax, rdx	       481	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x40013f4	           0xfb600	                   movzx eax, byte [rax]	       481	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x40013f7	            0x3c2f	                            cmp al, 0x2f	       481	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x40013f9	            0x7504	                           jne 0x40013ff	       481	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x40013fb	        0x8345f801	                  add dword [rbp - 8], 1	       482	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x40013ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001403	          0x8b500c	              mov edx, dword [rax + 0xc]	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001406	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001409	          0x2b45f8	                sub eax, dword [rbp - 8]	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x400140c	          0x8b4df8	                mov ecx, dword [rbp - 8]	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x400140f	          0x4863f1	                         movsxd rsi, ecx	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001412	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001416	        0x488d3c0e	                    lea rdi, [rsi + rcx]	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x400141a	            0x89d1	                            mov ecx, edx	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x400141c	      0xba00000000	                              mov edx, 0	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001421	            0x89c6	                            mov esi, eax	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001423	      0xe800000000	                          call 0x4001428	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001428	            0x85c0	                           test eax, eax	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x400142a	            0x7409	                            je 0x4001435	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x400142c	    0xc745f4030000	                mov dword [rbp - 0xc], 3	       484	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9
0x4001433	            0xeb07	                           jmp 0x400143c	       484	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9
0x4001435	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       486	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	ELSE_2
0x400143c	        0x837df400	                cmp dword [rbp - 0xc], 0	       488	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10
0x4001440	            0x7445	                            je 0x4001487	       488	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10
0x4001442	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       489	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_11
0x4001445	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       489	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_11
0x4001448	            0x7d06	                           jge 0x4001450	       489	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_11
0x400144a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       490	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_11
0x400144d	          0x8945f0	             mov dword [rbp - 0x10], eax	       490	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_11
0x4001450	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001455	            0x7430	                            je 0x4001487	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001457	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x400145a	          0x4863d0	                         movsxd rdx, eax	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x400145d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001461	          0x4801d0	                            add rax, rdx	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001464	           0xfb600	                   movzx eax, byte [rax]	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001467	           0xfbec0	                           movsx eax, al	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x400146a	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x400146d	            0x7d18	                           jge 0x4001487	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x400146f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       492	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001472	          0x4863d0	                         movsxd rdx, eax	       492	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001475	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       492	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001479	          0x4801d0	                            add rax, rdx	       492	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x400147c	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       492	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x400147f	            0x8810	                      mov byte [rax], dl	       492	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001481	            0xeb04	                           jmp 0x4001487	       492	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001483	              0x90	                                     nop	       464	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001484	            0xeb01	                           jmp 0x4001487	       464	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001486	              0x90	                                     nop	       467	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x4001487	        0x836dec01	               sub dword [rbp - 0x14], 1	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x400148b	        0x837dec00	               cmp dword [rbp - 0x14], 0	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x400148f	     0xf89dafdffff	                           jns 0x400126f	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001495	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       495	dir.c	FUNCTION_13
0x4001498	              0xc9	                                   leave	       496	dir.c	FUNCTION_13
0x4001499	              0xc3	                                     ret	       496	dir.c	FUNCTION_13
hashcpy	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	14
0x40004e4	              0x55	                                push rbp	       994	cache.h	FUNCTION_152
0x40004e5	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_152
0x40004e8	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_152
0x40004ec	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_152
0x40004f0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_152
0x40004f4	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_152	CALL_1
0x40004f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_152	CALL_1
0x40004fc	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_152	CALL_1
0x4000501	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_152	CALL_1
0x4000504	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_152	CALL_1
0x4000507	      0xe800000000	                          call 0x400050c	       995	cache.h	FUNCTION_152	CALL_1
0x400050c	              0x90	                                     nop	       996	cache.h	FUNCTION_152
0x400050d	              0xc9	                                   leave	       996	cache.h	FUNCTION_152
0x400050e	              0xc3	                                     ret	       996	cache.h	FUNCTION_152
match_pathspec	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,2:functions,0:FOR,0	56
0x400149a	              0x55	                                push rbp	       501	dir.c	FUNCTION_14
0x400149b	          0x4889e5	                            mov rbp, rsp	       501	dir.c	FUNCTION_14
0x400149e	        0x4883ec40	                           sub rsp, 0x40	       501	dir.c	FUNCTION_14
0x40014a2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       501	dir.c	FUNCTION_14
0x40014a6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       501	dir.c	FUNCTION_14
0x40014aa	          0x8955dc	             mov dword [rbp - 0x24], edx	       501	dir.c	FUNCTION_14
0x40014ad	          0x894dd8	             mov dword [rbp - 0x28], ecx	       501	dir.c	FUNCTION_14
0x40014b0	        0x4c8945d0	              mov qword [rbp - 0x30], r8	       501	dir.c	FUNCTION_14
0x40014b4	        0x44894dcc	             mov dword [rbp - 0x34], r9d	       501	dir.c	FUNCTION_14
0x40014b8	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       503	dir.c	FUNCTION_14
0x40014bc	            0x7407	                            je 0x40014c5	       503	dir.c	FUNCTION_14
0x40014be	      0xb802000000	                              mov eax, 2	       503	dir.c	FUNCTION_14
0x40014c3	            0xeb05	                           jmp 0x40014ca	       503	dir.c	FUNCTION_14
0x40014c5	      0xb800000000	                              mov eax, 0	       503	dir.c	FUNCTION_14
0x40014ca	          0x8945f4	              mov dword [rbp - 0xc], eax	       503	dir.c	FUNCTION_14
0x40014cd	        0x448b45f4	              mov r8d, dword [rbp - 0xc]	       504	dir.c	FUNCTION_14	CALL_1
0x40014d1	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	       504	dir.c	FUNCTION_14	CALL_1
0x40014d5	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	       504	dir.c	FUNCTION_14	CALL_1
0x40014d8	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       504	dir.c	FUNCTION_14	CALL_1
0x40014db	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       504	dir.c	FUNCTION_14	CALL_1
0x40014df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       504	dir.c	FUNCTION_14	CALL_1
0x40014e3	          0x4589c1	                            mov r9d, r8d	       504	dir.c	FUNCTION_14	CALL_1
0x40014e6	          0x4989f8	                             mov r8, rdi	       504	dir.c	FUNCTION_14	CALL_1
0x40014e9	          0x4889c7	                            mov rdi, rax	       504	dir.c	FUNCTION_14	CALL_1
0x40014ec	      0xe88bfcffff	              call sym.do_match_pathspec	       504	dir.c	FUNCTION_14	CALL_1
0x40014f1	          0x8945f8	                mov dword [rbp - 8], eax	       504	dir.c	FUNCTION_14	CALL_1
0x40014f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       506	dir.c	FUNCTION_14	IF_1
0x40014f8	          0x8b4008	                mov eax, dword [rax + 8]	       506	dir.c	FUNCTION_14	IF_1
0x40014fb	          0x83e020	                           and eax, 0x20	       506	dir.c	FUNCTION_14	IF_1
0x40014fe	            0x85c0	                           test eax, eax	       506	dir.c	FUNCTION_14	IF_1
0x4001500	            0x7406	                            je 0x4001508	       506	dir.c	FUNCTION_14	IF_1
0x4001502	        0x837df800	                  cmp dword [rbp - 8], 0	       506	dir.c	FUNCTION_14	IF_1
0x4001506	            0x7505	                           jne 0x400150d	       506	dir.c	FUNCTION_14	IF_1
0x4001508	          0x8b45f8	                mov eax, dword [rbp - 8]	       507	dir.c	FUNCTION_14	IF_1
0x400150b	            0xeb3d	                           jmp 0x400154a	       507	dir.c	FUNCTION_14	IF_1
0x400150d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       508	dir.c	FUNCTION_14	CALL_2
0x4001510	          0x83c801	                               or eax, 1	       508	dir.c	FUNCTION_14	CALL_2
0x4001513	          0x4189c0	                            mov r8d, eax	       508	dir.c	FUNCTION_14	CALL_2
0x4001516	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	       508	dir.c	FUNCTION_14	CALL_2
0x400151a	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	       508	dir.c	FUNCTION_14	CALL_2
0x400151d	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       508	dir.c	FUNCTION_14	CALL_2
0x4001520	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       508	dir.c	FUNCTION_14	CALL_2
0x4001524	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       508	dir.c	FUNCTION_14	CALL_2
0x4001528	          0x4589c1	                            mov r9d, r8d	       508	dir.c	FUNCTION_14	CALL_2
0x400152b	          0x4989f8	                             mov r8, rdi	       508	dir.c	FUNCTION_14	CALL_2
0x400152e	          0x4889c7	                            mov rdi, rax	       508	dir.c	FUNCTION_14	CALL_2
0x4001531	      0xe846fcffff	              call sym.do_match_pathspec	       508	dir.c	FUNCTION_14	CALL_2
0x4001536	          0x8945fc	                mov dword [rbp - 4], eax	       508	dir.c	FUNCTION_14	CALL_2
0x4001539	        0x837dfc00	                  cmp dword [rbp - 4], 0	       511	dir.c	FUNCTION_14
0x400153d	            0x7505	                           jne 0x4001544	       511	dir.c	FUNCTION_14
0x400153f	          0x8b45f8	                mov eax, dword [rbp - 8]	       511	dir.c	FUNCTION_14
0x4001542	            0xeb05	                           jmp 0x4001549	       511	dir.c	FUNCTION_14
0x4001544	      0xb800000000	                              mov eax, 0	       511	dir.c	FUNCTION_14
0x4001549	              0x90	                                     nop	       511	dir.c	FUNCTION_14
0x400154a	              0xc9	                                   leave	       512	dir.c	FUNCTION_14
0x400154b	              0xc3	                                     ret	       512	dir.c	FUNCTION_14
common_prefix_len	SWITCH,0:ELSE,1:WHILE,1:IF,6:DO,0:CALL,0:functions,0:FOR,1	134
0x40009a0	              0x55	                                push rbp	       134	dir.c	FUNCTION_6
0x40009a1	          0x4889e5	                            mov rbp, rsp	       134	dir.c	FUNCTION_6
0x40009a4	        0x4883ec40	                           sub rsp, 0x40	       134	dir.c	FUNCTION_6
0x40009a8	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       134	dir.c	FUNCTION_6
0x40009ac	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       136	dir.c	FUNCTION_6
0x40009b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       145	dir.c	FUNCTION_6
0x40009b8	          0x8b4008	                mov eax, dword [rax + 8]	       145	dir.c	FUNCTION_6
0x40009bb	          0x83e080	                     and eax, 0xffffff80	       145	dir.c	FUNCTION_6
0x40009be	            0x85c0	                           test eax, eax	       145	dir.c	FUNCTION_6
0x40009c0	            0x7425	                            je 0x40009e7	       145	dir.c	FUNCTION_6
0x40009c2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       145	dir.c	FUNCTION_6
0x40009c6	          0x8b4008	                mov eax, dword [rax + 8]	       145	dir.c	FUNCTION_6
0x40009c9	          0x83e080	                     and eax, 0xffffff80	       145	dir.c	FUNCTION_6
0x40009cc	            0x89c1	                            mov ecx, eax	       145	dir.c	FUNCTION_6
0x40009ce	      0xba98000000	                           mov edx, 0x98	       145	dir.c	FUNCTION_6
0x40009d3	      0xbe00000000	                              mov esi, 0	       145	dir.c	FUNCTION_6
0x40009d8	      0xbf00000000	                              mov edi, 0	       145	dir.c	FUNCTION_6
0x40009dd	      0xb800000000	                              mov eax, 0	       145	dir.c	FUNCTION_6
0x40009e2	      0xe800000000	                          call 0x40009e7	       145	dir.c	FUNCTION_6
0x40009e7	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       154	dir.c	FUNCTION_6	FOR_1
0x40009ee	      0xe96f010000	                           jmp 0x4000b62	       154	dir.c	FUNCTION_6	FOR_1
0x40009f3	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       155	dir.c	FUNCTION_6	FOR_1
0x40009fb	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       155	dir.c	FUNCTION_6	FOR_1
0x4000a03	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x4000a07	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x4000a0b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x4000a0e	            0x4898	                                    cdqe	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x4000a10	        0x48c1e003	                              shl rax, 3	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x4000a14	    0x488d0cc50000	                        lea rcx, [rax*8]	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x4000a1c	          0x4829c1	                            sub rcx, rax	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x4000a1f	          0x4889c8	                            mov rax, rcx	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x4000a22	          0x4801d0	                            add rax, rdx	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x4000a25	          0x8b4010	            mov eax, dword [rax + 0x10] 	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x4000a28	          0x83e020	                           and eax, 0x20	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x4000a2b	            0x85c0	                           test eax, eax	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x4000a2d	     0xf852a010000	                           jne 0x4000b5d	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x4000a33	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       158	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a37	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       158	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a3b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       158	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a3e	            0x4898	                                    cdqe	       158	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a40	        0x48c1e003	                              shl rax, 3	       158	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a44	    0x488d0cc50000	                        lea rcx, [rax*8]	       158	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a4c	          0x4829c1	                            sub rcx, rax	       158	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a4f	          0x4889c8	                            mov rax, rcx	       158	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a52	          0x4801d0	                            add rax, rdx	       158	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a55	          0x8b4010	            mov eax, dword [rax + 0x10] 	       158	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a58	          0x83e010	                           and eax, 0x10	       158	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a5b	            0x85c0	                           test eax, eax	       158	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a5d	            0x7430	                            je 0x4000a8f	       158	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a5f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       159	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a63	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       159	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a67	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       159	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a6a	            0x4898	                                    cdqe	       159	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a6c	        0x48c1e003	                              shl rax, 3	       159	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a70	    0x488d0cc50000	                        lea rcx, [rax*8]	       159	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a78	          0x4829c1	                            sub rcx, rax	       159	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a7b	          0x4889c8	                            mov rax, rcx	       159	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a7e	          0x4801d0	                            add rax, rdx	       159	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a81	          0x8b4018	            mov eax, dword [rax + 0x18] 	       159	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a84	            0x4898	                                    cdqe	       159	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a86	        0x488945f8	                mov qword [rbp - 8], rax	       159	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a8a	      0xe990000000	                           jmp 0x4000b1f	       159	dir.c	FUNCTION_6	FOR_1	IF_2
0x4000a8f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       161	dir.c	FUNCTION_6	FOR_1	ELSE_1
0x4000a93	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       161	dir.c	FUNCTION_6	FOR_1	ELSE_1
0x4000a97	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       161	dir.c	FUNCTION_6	FOR_1	ELSE_1
0x4000a9a	            0x4898	                                    cdqe	       161	dir.c	FUNCTION_6	FOR_1	ELSE_1
0x4000a9c	        0x48c1e003	                              shl rax, 3	       161	dir.c	FUNCTION_6	FOR_1	ELSE_1
0x4000aa0	    0x488d0cc50000	                        lea rcx, [rax*8]	       161	dir.c	FUNCTION_6	FOR_1	ELSE_1
0x4000aa8	          0x4829c1	                            sub rcx, rax	       161	dir.c	FUNCTION_6	FOR_1	ELSE_1
0x4000aab	          0x4889c8	                            mov rax, rcx	       161	dir.c	FUNCTION_6	FOR_1	ELSE_1
0x4000aae	          0x4801d0	                            add rax, rdx	       161	dir.c	FUNCTION_6	FOR_1	ELSE_1
0x4000ab1	          0x8b401c	            mov eax, dword [rax + 0x1c] 	       161	dir.c	FUNCTION_6	FOR_1	ELSE_1
0x4000ab4	            0x4898	                                    cdqe	       161	dir.c	FUNCTION_6	FOR_1	ELSE_1
0x4000ab6	        0x488945f8	                mov qword [rbp - 8], rax	       161	dir.c	FUNCTION_6	FOR_1	ELSE_1
0x4000aba	            0xeb63	                           jmp 0x4000b1f	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000abc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000ac0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000ac4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000ac7	            0x4898	                                    cdqe	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000ac9	        0x48c1e003	                              shl rax, 3	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000acd	    0x488d0cc50000	                        lea rcx, [rax*8]	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000ad5	          0x4829c1	                            sub rcx, rax	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000ad8	          0x4889c8	                            mov rax, rcx	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000adb	          0x4801d0	                            add rax, rdx	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000ade	          0x488b10	                    mov rdx, qword [rax]	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000ae1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000ae5	          0x4801d0	                            add rax, rdx	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000ae8	           0xfb600	                   movzx eax, byte [rax]	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000aeb	          0x8845db	               mov byte [rbp - 0x25], al	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000aee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x4000af2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x4000af6	          0x488b10	                    mov rdx, qword [rax]	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x4000af9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x4000afd	          0x4801d0	                            add rax, rdx	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x4000b00	           0xfb600	                   movzx eax, byte [rax]	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x4000b03	          0x3a45db	               cmp al, byte [rbp - 0x25]	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x4000b06	            0x7533	                           jne 0x4000b3b	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x4000b08	        0x807ddb2f	            cmp byte [rbp - 0x25], 0x2f 	       166	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_4
0x4000b0c	            0x750c	                           jne 0x4000b1a	       166	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_4
0x4000b0e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       167	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_4
0x4000b12	        0x4883c001	                              add rax, 1	       167	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_4
0x4000b16	        0x488945f0	             mov qword [rbp - 0x10], rax	       167	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_4
0x4000b1a	      0x488345e801	               add qword [rbp - 0x18], 1	       168	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000b1f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000b23	        0x483b45f8	                cmp rax, qword [rbp - 8]	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000b27	            0x7313	                           jae 0x4000b3c	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000b29	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000b2d	            0x748d	                            je 0x4000abc	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000b2f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000b33	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000b37	            0x7283	                            jb 0x4000abc	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000b39	            0xeb01	                           jmp 0x4000b3c	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000b3b	              0x90	                                     nop	       165	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x4000b3c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       170	dir.c	FUNCTION_6	FOR_1	IF_5
0x4000b40	            0x740a	                            je 0x4000b4c	       170	dir.c	FUNCTION_6	FOR_1	IF_5
0x4000b42	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       170	dir.c	FUNCTION_6	FOR_1	IF_5
0x4000b46	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       170	dir.c	FUNCTION_6	FOR_1	IF_5
0x4000b4a	            0x7312	                           jae 0x4000b5e	       170	dir.c	FUNCTION_6	FOR_1	IF_5
0x4000b4c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       171	dir.c	FUNCTION_6	FOR_1	IF_5
0x4000b50	        0x488945e0	             mov qword [rbp - 0x20], rax	       171	dir.c	FUNCTION_6	FOR_1	IF_5
0x4000b54	      0x48837de000	               cmp qword [rbp - 0x20], 0	       172	dir.c	FUNCTION_6	FOR_1	IF_5	IF_6
0x4000b59	            0x7418	                            je 0x4000b73	       172	dir.c	FUNCTION_6	FOR_1	IF_5	IF_6
0x4000b5b	            0xeb01	                           jmp 0x4000b5e	       172	dir.c	FUNCTION_6	FOR_1	IF_5	IF_6
0x4000b5d	              0x90	                                     nop	       157	dir.c	FUNCTION_6	FOR_1	IF_1
0x4000b5e	        0x8345dc01	               add dword [rbp - 0x24], 1	       154	dir.c	FUNCTION_6	FOR_1
0x4000b62	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       154	dir.c	FUNCTION_6	FOR_1
0x4000b66	            0x8b00	                    mov eax, dword [rax]	       154	dir.c	FUNCTION_6	FOR_1
0x4000b68	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       154	dir.c	FUNCTION_6	FOR_1
0x4000b6b	     0xf8f82feffff	                            jg 0x40009f3	       154	dir.c	FUNCTION_6	FOR_1
0x4000b71	            0xeb01	                           jmp 0x4000b74	       154	dir.c	FUNCTION_6	FOR_1
0x4000b73	              0x90	                                     nop	       173	dir.c	FUNCTION_6	FOR_1	IF_5	IF_6
0x4000b74	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       176	dir.c	FUNCTION_6
0x4000b78	              0xc9	                                   leave	       177	dir.c	FUNCTION_6
0x4000b79	              0xc3	                                     ret	       177	dir.c	FUNCTION_6
dir_inside_of	SWITCH,0:ELSE,0:WHILE,1:IF,3:DO,0:CALL,2:functions,0:FOR,0	101
0x4005af0	              0x55	                                push rbp	      2355	dir.c	FUNCTION_75
0x4005af1	          0x4889e5	                            mov rbp, rsp	      2355	dir.c	FUNCTION_75
0x4005af4	        0x4883ec20	                           sub rsp, 0x20	      2355	dir.c	FUNCTION_75
0x4005af8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2355	dir.c	FUNCTION_75
0x4005afc	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2355	dir.c	FUNCTION_75
0x4005b00	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2356	dir.c	FUNCTION_75
0x4005b07	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b0c	            0x741d	                            je 0x4005b2b	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b0e	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b13	            0x7416	                            je 0x4005b2b	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b15	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b19	           0xfb600	                   movzx eax, byte [rax]	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b1c	            0x84c0	                             test al, al	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b1e	            0x740b	                            je 0x4005b2b	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b20	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b24	           0xfb600	                   movzx eax, byte [rax]	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b27	            0x84c0	                             test al, al	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b29	            0x7527	                           jne 0x4005b52	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b2b	      0xb900000000	                              mov ecx, 0	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b30	      0xba36090000	                          mov edx, 0x936	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b35	      0xbe00000000	                              mov esi, 0	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b3a	      0xbf00000000	                              mov edi, 0	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b3f	      0xe800000000	                          call 0x4005b44	      2358	dir.c	FUNCTION_75	CALL_1
0x4005b44	      0x488345e001	               add qword [rbp - 0x20], 1	      2361	dir.c	FUNCTION_75	WHILE_1
0x4005b49	      0x488345e801	               add qword [rbp - 0x18], 1	      2362	dir.c	FUNCTION_75	WHILE_1
0x4005b4e	        0x8345fc01	                  add dword [rbp - 4], 1	      2363	dir.c	FUNCTION_75	WHILE_1
0x4005b52	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b56	           0xfb600	                   movzx eax, byte [rax]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b59	            0x84c0	                             test al, al	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b5b	            0x742c	                            je 0x4005b89	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b5d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b61	           0xfb600	                   movzx eax, byte [rax]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b64	            0x84c0	                             test al, al	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b66	            0x7421	                            je 0x4005b89	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b68	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b6c	           0xfb600	                   movzx eax, byte [rax]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b6f	           0xfbed0	                           movsx edx, al	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b72	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b76	           0xfb600	                   movzx eax, byte [rax]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b79	           0xfbec0	                           movsx eax, al	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b7c	            0x89d6	                            mov esi, edx	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b7e	            0x89c7	                            mov edi, eax	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b80	      0xe8fdfeffff	                      call sym.cmp_icase	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b85	            0x85c0	                           test eax, eax	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b87	            0x74bb	                            je 0x4005b44	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4005b89	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2367	dir.c	FUNCTION_75	IF_1
0x4005b8d	           0xfb600	                   movzx eax, byte [rax]	      2367	dir.c	FUNCTION_75	IF_1
0x4005b90	            0x84c0	                             test al, al	      2367	dir.c	FUNCTION_75	IF_1
0x4005b92	            0x7415	                            je 0x4005ba9	      2367	dir.c	FUNCTION_75	IF_1
0x4005b94	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2367	dir.c	FUNCTION_75	IF_1
0x4005b98	           0xfb600	                   movzx eax, byte [rax]	      2367	dir.c	FUNCTION_75	IF_1
0x4005b9b	            0x84c0	                             test al, al	      2367	dir.c	FUNCTION_75	IF_1
0x4005b9d	            0x740a	                            je 0x4005ba9	      2367	dir.c	FUNCTION_75	IF_1
0x4005b9f	      0xb8ffffffff	                     mov eax, 0xffffffff	      2368	dir.c	FUNCTION_75	IF_1
0x4005ba4	      0xe983000000	                           jmp 0x4005c2c	      2368	dir.c	FUNCTION_75	IF_1
0x4005ba9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2370	dir.c	FUNCTION_75	IF_2
0x4005bad	           0xfb600	                   movzx eax, byte [rax]	      2370	dir.c	FUNCTION_75	IF_2
0x4005bb0	            0x84c0	                             test al, al	      2370	dir.c	FUNCTION_75	IF_2
0x4005bb2	            0x7517	                           jne 0x4005bcb	      2370	dir.c	FUNCTION_75	IF_2
0x4005bb4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2371	dir.c	FUNCTION_75	IF_2
0x4005bb8	           0xfb600	                   movzx eax, byte [rax]	      2371	dir.c	FUNCTION_75	IF_2
0x4005bbb	            0x84c0	                             test al, al	      2371	dir.c	FUNCTION_75	IF_2
0x4005bbd	            0x7505	                           jne 0x4005bc4	      2371	dir.c	FUNCTION_75	IF_2
0x4005bbf	          0x8b45fc	                mov eax, dword [rbp - 4]	      2371	dir.c	FUNCTION_75	IF_2
0x4005bc2	            0xeb68	                           jmp 0x4005c2c	      2371	dir.c	FUNCTION_75	IF_2
0x4005bc4	      0xb8ffffffff	                     mov eax, 0xffffffff	      2371	dir.c	FUNCTION_75	IF_2
0x4005bc9	            0xeb61	                           jmp 0x4005c2c	      2371	dir.c	FUNCTION_75	IF_2
0x4005bcb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2374	dir.c	FUNCTION_75	IF_3
0x4005bcf	        0x4883e801	                              sub rax, 1	      2374	dir.c	FUNCTION_75	IF_3
0x4005bd3	           0xfb600	                   movzx eax, byte [rax]	      2374	dir.c	FUNCTION_75	IF_3
0x4005bd6	           0xfbec0	                           movsx eax, al	      2374	dir.c	FUNCTION_75	IF_3
0x4005bd9	            0x89c7	                            mov edi, eax	      2374	dir.c	FUNCTION_75	IF_3
0x4005bdb	      0xe860a4ffff	                 call sym.git_is_dir_sep	      2374	dir.c	FUNCTION_75	IF_3
0x4005be0	            0x85c0	                           test eax, eax	      2374	dir.c	FUNCTION_75	IF_3
0x4005be2	            0x7425	                            je 0x4005c09	      2374	dir.c	FUNCTION_75	IF_3
0x4005be4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2375	dir.c	FUNCTION_75	IF_3
0x4005be8	        0x4883e801	                              sub rax, 1	      2375	dir.c	FUNCTION_75	IF_3
0x4005bec	           0xfb600	                   movzx eax, byte [rax]	      2375	dir.c	FUNCTION_75	IF_3
0x4005bef	           0xfbec0	                           movsx eax, al	      2375	dir.c	FUNCTION_75	IF_3
0x4005bf2	            0x89c7	                            mov edi, eax	      2375	dir.c	FUNCTION_75	IF_3
0x4005bf4	      0xe847a4ffff	                 call sym.git_is_dir_sep	      2375	dir.c	FUNCTION_75	IF_3
0x4005bf9	            0x85c0	                           test eax, eax	      2375	dir.c	FUNCTION_75	IF_3
0x4005bfb	            0x7405	                            je 0x4005c02	      2375	dir.c	FUNCTION_75	IF_3
0x4005bfd	          0x8b45fc	                mov eax, dword [rbp - 4]	      2375	dir.c	FUNCTION_75	IF_3
0x4005c00	            0xeb2a	                           jmp 0x4005c2c	      2375	dir.c	FUNCTION_75	IF_3
0x4005c02	      0xb8ffffffff	                     mov eax, 0xffffffff	      2375	dir.c	FUNCTION_75	IF_3
0x4005c07	            0xeb23	                           jmp 0x4005c2c	      2375	dir.c	FUNCTION_75	IF_3
0x4005c09	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2378	dir.c	FUNCTION_75
0x4005c0d	           0xfb600	                   movzx eax, byte [rax]	      2378	dir.c	FUNCTION_75
0x4005c10	           0xfbec0	                           movsx eax, al	      2378	dir.c	FUNCTION_75
0x4005c13	            0x89c7	                            mov edi, eax	      2378	dir.c	FUNCTION_75
0x4005c15	      0xe826a4ffff	                 call sym.git_is_dir_sep	      2378	dir.c	FUNCTION_75
0x4005c1a	            0x85c0	                           test eax, eax	      2378	dir.c	FUNCTION_75
0x4005c1c	            0x7408	                            je 0x4005c26	      2378	dir.c	FUNCTION_75
0x4005c1e	          0x8b45fc	                mov eax, dword [rbp - 4]	      2378	dir.c	FUNCTION_75
0x4005c21	          0x83c001	                              add eax, 1	      2378	dir.c	FUNCTION_75
0x4005c24	            0xeb05	                           jmp 0x4005c2b	      2378	dir.c	FUNCTION_75
0x4005c26	      0xb8ffffffff	                     mov eax, 0xffffffff	      2378	dir.c	FUNCTION_75
0x4005c2b	              0x90	                                     nop	      2378	dir.c	FUNCTION_75
0x4005c2c	              0xc9	                                   leave	      2379	dir.c	FUNCTION_75
0x4005c2d	              0xc3	                                     ret	      2379	dir.c	FUNCTION_75
read_directory_recursive	SWITCH,1:ELSE,1:WHILE,1:IF,14:DO,0:CALL,15:functions,0:FOR,0	240
0x4004a24	              0x55	                                push rbp	      1941	dir.c	FUNCTION_61
0x4004a25	          0x4889e5	                            mov rbp, rsp	      1941	dir.c	FUNCTION_61
0x4004a28	    0x4881ecb00000	                           sub rsp, 0xb0	      1941	dir.c	FUNCTION_61
0x4004a2f	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      1941	dir.c	FUNCTION_61
0x4004a36	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      1941	dir.c	FUNCTION_61
0x4004a3d	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      1941	dir.c	FUNCTION_61
0x4004a44	    0x898d64ffffff	             mov dword [rbp - 0x9c], ecx	      1941	dir.c	FUNCTION_61
0x4004a4a	    0x4c898558ffff	              mov qword [rbp - 0xa8], r8	      1941	dir.c	FUNCTION_61
0x4004a51	    0x44898d60ffff	             mov dword [rbp - 0xa0], r9d	      1941	dir.c	FUNCTION_61
0x4004a58	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1941	dir.c	FUNCTION_61
0x4004a5c	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1941	dir.c	FUNCTION_61
0x4004a63	    0x64488b042528	                mov rax, qword fs:[0x28]	      1941	dir.c	FUNCTION_61
0x4004a6c	        0x488945f8	                mov qword [rbp - 8], rax	      1941	dir.c	FUNCTION_61
0x4004a70	            0x31c0	                            xor eax, eax	      1941	dir.c	FUNCTION_61
0x4004a72	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      1943	dir.c	FUNCTION_61
0x4004a79	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1944	dir.c	FUNCTION_61
0x4004a81	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1944	dir.c	FUNCTION_61
0x4004a89	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1944	dir.c	FUNCTION_61
0x4004a91	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1946	dir.c	FUNCTION_61	CALL_1
0x4004a97	          0x4863d0	                         movsxd rdx, eax	      1946	dir.c	FUNCTION_61	CALL_1
0x4004a9a	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	      1946	dir.c	FUNCTION_61	CALL_1
0x4004aa1	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1946	dir.c	FUNCTION_61	CALL_1
0x4004aa5	          0x4889ce	                            mov rsi, rcx	      1946	dir.c	FUNCTION_61	CALL_1
0x4004aa8	          0x4889c7	                            mov rdi, rax	      1946	dir.c	FUNCTION_61	CALL_1
0x4004aab	      0xe800000000	                          call 0x4004ab0	      1946	dir.c	FUNCTION_61	CALL_1
0x4004ab0	    0x448b8560ffff	             mov r8d, dword [rbp - 0xa0]	      1948	dir.c	FUNCTION_61	IF_1	CALL_2
0x4004ab7	        0x488d7da0	                   lea rdi, [rbp - 0x60]	      1948	dir.c	FUNCTION_61	IF_1	CALL_2
0x4004abb	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      1948	dir.c	FUNCTION_61	IF_1	CALL_2
0x4004ac2	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1948	dir.c	FUNCTION_61	IF_1	CALL_2
0x4004ac9	    0x488bb578ffff	             mov rsi, qword [rbp - 0x88]	      1948	dir.c	FUNCTION_61	IF_1	CALL_2
0x4004ad0	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1948	dir.c	FUNCTION_61	IF_1	CALL_2
0x4004ad4	          0x4589c1	                            mov r9d, r8d	      1948	dir.c	FUNCTION_61	IF_1	CALL_2
0x4004ad7	          0x4989f8	                             mov r8, rdi	      1948	dir.c	FUNCTION_61	IF_1	CALL_2
0x4004ada	          0x4889c7	                            mov rdi, rax	      1948	dir.c	FUNCTION_61	IF_1	CALL_2
0x4004add	      0xe86ffcffff	                call sym.open_cached_dir	      1948	dir.c	FUNCTION_61	IF_1	CALL_2
0x4004ae2	            0x85c0	                           test eax, eax	      1948	dir.c	FUNCTION_61	IF_1	CALL_2
0x4004ae4	     0xf8501030000	                           jne 0x4004deb	      1948	dir.c	FUNCTION_61	IF_1	CALL_2
0x4004aea	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      1951	dir.c	FUNCTION_61	IF_2
0x4004af2	     0xf84ce020000	                            je 0x4004dc6	      1951	dir.c	FUNCTION_61	IF_2
0x4004af8	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      1952	dir.c	FUNCTION_61	IF_2
0x4004aff	           0xf95c2	                                setne dl	      1952	dir.c	FUNCTION_61	IF_2
0x4004b02	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1952	dir.c	FUNCTION_61	IF_2
0x4004b09	            0x89d1	                            mov ecx, edx	      1952	dir.c	FUNCTION_61	IF_2
0x4004b0b	          0x83e101	                              and ecx, 1	      1952	dir.c	FUNCTION_61	IF_2
0x4004b0e	         0xfb65044	           movzx edx, byte [rax + 0x44] 	      1952	dir.c	FUNCTION_61	IF_2
0x4004b12	          0x83e2fe	                     and edx, 0xfffffffe	      1952	dir.c	FUNCTION_61	IF_2
0x4004b15	             0x9ca	                             or edx, ecx	      1952	dir.c	FUNCTION_61	IF_2
0x4004b17	          0x885044	               mov byte [rax + 0x44], dl	      1952	dir.c	FUNCTION_61	IF_2
0x4004b1a	      0xe9a7020000	                           jmp 0x4004dc6	      1954	dir.c	FUNCTION_61	WHILE_1	CALL_3
0x4004b1f	    0x448b8564ffff	             mov r8d, dword [rbp - 0x9c]	      1956	dir.c	FUNCTION_61	WHILE_1	CALL_4
0x4004b26	        0x488d7da0	                   lea rdi, [rbp - 0x60]	      1956	dir.c	FUNCTION_61	WHILE_1	CALL_4
0x4004b2a	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      1956	dir.c	FUNCTION_61	WHILE_1	CALL_4
0x4004b31	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      1956	dir.c	FUNCTION_61	WHILE_1	CALL_4
0x4004b35	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      1956	dir.c	FUNCTION_61	WHILE_1	CALL_4
0x4004b3c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1956	dir.c	FUNCTION_61	WHILE_1	CALL_4
0x4004b43	        0x4883ec08	                              sub rsp, 8	      1956	dir.c	FUNCTION_61	WHILE_1	CALL_4
0x4004b47	    0xffb550ffffff	                 push qword [rbp - 0xb0]	      1956	dir.c	FUNCTION_61	WHILE_1	CALL_4
0x4004b4d	          0x4589c1	                            mov r9d, r8d	      1956	dir.c	FUNCTION_61	WHILE_1	CALL_4
0x4004b50	          0x4989f8	                             mov r8, rdi	      1956	dir.c	FUNCTION_61	WHILE_1	CALL_4
0x4004b53	          0x4889c7	                            mov rdi, rax	      1956	dir.c	FUNCTION_61	WHILE_1	CALL_4
0x4004b56	      0xe85af7ffff	                     call sym.treat_path	      1956	dir.c	FUNCTION_61	WHILE_1	CALL_4
0x4004b5b	        0x4883c410	                           add rsp, 0x10	      1956	dir.c	FUNCTION_61	WHILE_1	CALL_4
0x4004b5f	          0x894590	             mov dword [rbp - 0x70], eax	      1956	dir.c	FUNCTION_61	WHILE_1	CALL_4
0x4004b62	          0x8b4590	             mov eax, dword [rbp - 0x70]	      1959	dir.c	FUNCTION_61	WHILE_1	IF_3
0x4004b65	          0x3b458c	             cmp eax, dword [rbp - 0x74]	      1959	dir.c	FUNCTION_61	WHILE_1	IF_3
0x4004b68	            0x7606	                           jbe 0x4004b70	      1959	dir.c	FUNCTION_61	WHILE_1	IF_3
0x4004b6a	          0x8b4590	             mov eax, dword [rbp - 0x70]	      1960	dir.c	FUNCTION_61	WHILE_1	IF_3
0x4004b6d	          0x89458c	             mov dword [rbp - 0x74], eax	      1960	dir.c	FUNCTION_61	WHILE_1	IF_3
0x4004b70	        0x837d9001	               cmp dword [rbp - 0x70], 1	      1963	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004b74	            0x7445	                            je 0x4004bbb	      1963	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004b76	        0x837d9003	               cmp dword [rbp - 0x70], 3	      1963	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004b7a	     0xf85d1000000	                           jne 0x4004c51	      1963	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004b80	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1965	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004b87	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1965	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004b8a	          0x83e020	                           and eax, 0x20	      1965	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004b8d	            0x85c0	                           test eax, eax	      1964	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004b8f	     0xf84bc000000	                            je 0x4004c51	      1964	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004b95	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1966	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_5
0x4004b99	            0x89c1	                            mov ecx, eax	      1966	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_5
0x4004b9b	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1966	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_5
0x4004b9f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1966	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_5
0x4004ba3	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	      1966	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_5
0x4004baa	          0x4889c7	                            mov rdi, rax	      1966	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_5
0x4004bad	      0xe80cf3ffff	                      call sym.get_dtype	      1966	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_5
0x4004bb2	          0x83f804	                              cmp eax, 4	      1965	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004bb5	     0xf8596000000	                           jne 0x4004c51	      1965	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004bbb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1970	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004bbf	            0x89c2	                            mov edx, eax	      1968	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_6
0x4004bc1	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1968	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_6
0x4004bc7	            0x29c2	                            sub edx, eax	      1968	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_6
0x4004bc9	            0x89d0	                            mov eax, edx	      1968	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_6
0x4004bcb	            0x89c1	                            mov ecx, eax	      1968	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_6
0x4004bcd	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1969	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004bd1	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      1968	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_6
0x4004bd7	            0x4898	                                    cdqe	      1968	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_6
0x4004bd9	          0x4801c2	                            add rdx, rax	      1968	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_6
0x4004bdc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1968	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_6
0x4004be3	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1968	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_6
0x4004bea	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      1968	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_6
0x4004bf1	          0x4889c7	                            mov rdi, rax	      1968	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_6
0x4004bf4	      0xe85fd0ffff	               call sym.lookup_untracked	      1968	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_6
0x4004bf9	        0x48894598	             mov qword [rbp - 0x68], rax	      1968	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_6
0x4004bfd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1973	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004c01	          0x4189c2	                           mov r10d, eax	      1972	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_7
0x4004c04	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1972	dir.c	FUNCTION_61	WHILE_1	IF_4	CALL_7
0x4004c08	    0x448b8560ffff	             mov r8d, dword [rbp - 0xa0]	      1971	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004c0f	        0x488b7d98	             mov rdi, qword [rbp - 0x68]	      1971	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004c13	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	      1971	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004c1a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1971	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004c21	    0xffb550ffffff	                 push qword [rbp - 0xb0]	      1971	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004c27	          0x8b4d10	            mov ecx, dword [rbp + 0x10] 	      1971	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004c2a	              0x51	                                push rcx	      1971	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004c2b	          0x4589c1	                            mov r9d, r8d	      1971	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004c2e	          0x4989f8	                             mov r8, rdi	      1971	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004c31	          0x4489d1	                           mov ecx, r10d	      1971	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004c34	          0x4889c7	                            mov rdi, rax	      1971	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004c37	      0xe8e8fdffff	       call sym.read_directory_recursive	      1971	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004c3c	        0x4883c410	                           add rsp, 0x10	      1971	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004c40	          0x894594	             mov dword [rbp - 0x6c], eax	      1971	dir.c	FUNCTION_61	WHILE_1	IF_4
0x4004c43	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1975	dir.c	FUNCTION_61	WHILE_1	IF_4	IF_5
0x4004c46	          0x3b458c	             cmp eax, dword [rbp - 0x74]	      1975	dir.c	FUNCTION_61	WHILE_1	IF_4	IF_5
0x4004c49	            0x7606	                           jbe 0x4004c51	      1975	dir.c	FUNCTION_61	WHILE_1	IF_4	IF_5
0x4004c4b	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1976	dir.c	FUNCTION_61	WHILE_1	IF_4	IF_5
0x4004c4e	          0x89458c	             mov dword [rbp - 0x74], eax	      1976	dir.c	FUNCTION_61	WHILE_1	IF_4	IF_5
0x4004c51	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      1979	dir.c	FUNCTION_61	WHILE_1	IF_6
0x4004c58	            0x7455	                            je 0x4004caf	      1979	dir.c	FUNCTION_61	WHILE_1	IF_6
0x4004c5a	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1980	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_7
0x4004c5e	            0x7412	                            je 0x4004c72	      1980	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_7
0x4004c60	        0x837d8c01	               cmp dword [rbp - 0x74], 1	      1996	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_7	IF_8
0x4004c64	            0x760c	                           jbe 0x4004c72	      1996	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_7	IF_8
0x4004c66	    0xc7458c020000	               mov dword [rbp - 0x74], 2	      1997	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_7	IF_8
0x4004c6d	      0xe96b010000	                           jmp 0x4004ddd	      1998	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_7	IF_8
0x4004c72	        0x837d8c03	               cmp dword [rbp - 0x74], 3	      2003	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_9
0x4004c76	     0xf854a010000	                           jne 0x4004dc6	      2003	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_9
0x4004c7c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2004	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_9	IF_10
0x4004c80	          0x4885c0	                           test rax, rax	      2004	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_9	IF_10
0x4004c83	     0xf8453010000	                            je 0x4004ddc	      2004	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_9	IF_10
0x4004c89	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2005	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_9	CALL_8
0x4004c8d	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      2005	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_9	CALL_8
0x4004c93	            0x4898	                                    cdqe	      2005	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_9	CALL_8
0x4004c95	          0x4801c2	                            add rdx, rax	      2005	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_9	CALL_8
0x4004c98	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2005	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_9	CALL_8
0x4004c9f	          0x4889d6	                            mov rsi, rdx	      2005	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_9	CALL_8
0x4004ca2	          0x4889c7	                            mov rdi, rax	      2005	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_9	CALL_8
0x4004ca5	      0xe83df7ffff	                  call sym.add_untracked	      2005	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_9	CALL_8
0x4004caa	      0xe92d010000	                           jmp 0x4004ddc	      2006	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_9
0x4004caf	          0x8b4590	             mov eax, dword [rbp - 0x70]	      2013	dir.c	FUNCTION_61	WHILE_1	SWITCH_1
0x4004cb2	          0x83f802	                              cmp eax, 2	      2013	dir.c	FUNCTION_61	WHILE_1	SWITCH_1
0x4004cb5	            0x740e	                            je 0x4004cc5	      2013	dir.c	FUNCTION_61	WHILE_1	SWITCH_1
0x4004cb7	          0x83f803	                              cmp eax, 3	      2013	dir.c	FUNCTION_61	WHILE_1	SWITCH_1
0x4004cba	     0xf84a6000000	                            je 0x4004d66	      2013	dir.c	FUNCTION_61	WHILE_1	SWITCH_1
0x4004cc0	      0xe900010000	                           jmp 0x4004dc5	      2013	dir.c	FUNCTION_61	WHILE_1	SWITCH_1
0x4004cc5	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2015	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	IF_11
0x4004ccc	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2015	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	IF_11
0x4004ccf	          0x83e001	                              and eax, 1	      2015	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	IF_11
0x4004cd2	            0x85c0	                           test eax, eax	      2015	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	IF_11
0x4004cd4	            0x7425	                            je 0x4004cfb	      2015	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	IF_11
0x4004cd6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2016	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_9
0x4004cda	            0x89c1	                            mov ecx, eax	      2016	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_9
0x4004cdc	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2016	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_9
0x4004ce0	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	      2016	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_9
0x4004ce7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2016	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_9
0x4004cee	          0x4889c7	                            mov rdi, rax	      2016	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_9
0x4004cf1	      0xe8a9e8ffff	                   call sym.dir_add_name	      2016	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_9
0x4004cf6	      0xe9cb000000	                           jmp 0x4004dc6	      2016	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_9
0x4004cfb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2017	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d02	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2017	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d05	          0x83e020	                           and eax, 0x20	      2017	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d08	            0x85c0	                           test eax, eax	      2017	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d0a	            0x7538	                           jne 0x4004d44	      2017	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d0c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2018	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d13	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2018	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d16	          0x83e010	                           and eax, 0x10	      2018	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d19	            0x85c0	                           test eax, eax	      2017	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d1b	     0xf84a5000000	                            je 0x4004dc6	      2017	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d21	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2019	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12	CALL_10
0x4004d25	            0x89c1	                            mov ecx, eax	      2019	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12	CALL_10
0x4004d27	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2019	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12	CALL_10
0x4004d2b	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      2019	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12	CALL_10
0x4004d32	            0x89ce	                            mov esi, ecx	      2019	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12	CALL_10
0x4004d34	          0x4889c7	                            mov rdi, rax	      2019	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12	CALL_10
0x4004d37	      0xe810efffff	       call sym.exclude_matches_pathspec	      2019	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12	CALL_10
0x4004d3c	            0x85c0	                           test eax, eax	      2018	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d3e	     0xf8482000000	                            je 0x4004dc6	      2018	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d44	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2021	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d48	            0x89c1	                            mov ecx, eax	      2021	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d4a	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2021	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d4e	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	      2021	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d55	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2021	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d5c	          0x4889c7	                            mov rdi, rax	      2021	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d5f	      0xe800000000	                          call 0x4004d64	      2021	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	ELSE_1	IF_12
0x4004d64	            0xeb60	                           jmp 0x4004dc6	      2022	dir.c	FUNCTION_61	WHILE_1	SWITCH_1
0x4004d66	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2025	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	IF_13
0x4004d6d	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2025	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	IF_13
0x4004d70	          0x83e001	                              and eax, 1	      2025	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	IF_13
0x4004d73	            0x85c0	                           test eax, eax	      2025	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	IF_13
0x4004d75	            0x7402	                            je 0x4004d79	      2025	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	IF_13
0x4004d77	            0xeb4d	                           jmp 0x4004dc6	      2026	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	IF_13
0x4004d79	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2027	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_12
0x4004d7d	            0x89c1	                            mov ecx, eax	      2027	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_12
0x4004d7f	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2027	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_12
0x4004d83	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	      2027	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_12
0x4004d8a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2027	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_12
0x4004d91	          0x4889c7	                            mov rdi, rax	      2027	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_12
0x4004d94	      0xe806e8ffff	                   call sym.dir_add_name	      2027	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_12
0x4004d99	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2028	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	IF_14
0x4004d9d	          0x4885c0	                           test rax, rax	      2028	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	IF_14
0x4004da0	            0x7424	                            je 0x4004dc6	      2028	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	IF_14
0x4004da2	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2029	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_13
0x4004da6	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      2029	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_13
0x4004dac	            0x4898	                                    cdqe	      2029	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_13
0x4004dae	          0x4801c2	                            add rdx, rax	      2029	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_13
0x4004db1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2029	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_13
0x4004db8	          0x4889d6	                            mov rsi, rdx	      2029	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_13
0x4004dbb	          0x4889c7	                            mov rdi, rax	      2029	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_13
0x4004dbe	      0xe824f6ffff	                  call sym.add_untracked	      2029	dir.c	FUNCTION_61	WHILE_1	SWITCH_1	CALL_13
0x4004dc3	            0xeb01	                           jmp 0x4004dc6	      2030	dir.c	FUNCTION_61	WHILE_1	SWITCH_1
0x4004dc5	              0x90	                                     nop	      2033	dir.c	FUNCTION_61	WHILE_1	SWITCH_1
0x4004dc6	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1954	dir.c	FUNCTION_61	WHILE_1	CALL_3
0x4004dca	          0x4889c7	                            mov rdi, rax	      1954	dir.c	FUNCTION_61	WHILE_1	CALL_3
0x4004dcd	      0xe8aefaffff	                call sym.read_cached_dir	      1954	dir.c	FUNCTION_61	WHILE_1	CALL_3
0x4004dd2	            0x85c0	                           test eax, eax	      1954	dir.c	FUNCTION_61	WHILE_1	CALL_3
0x4004dd4	     0xf8445fdffff	                            je 0x4004b1f	      1954	dir.c	FUNCTION_61	WHILE_1	CALL_3
0x4004dda	            0xeb01	                           jmp 0x4004ddd	      1954	dir.c	FUNCTION_61	WHILE_1	CALL_3
0x4004ddc	              0x90	                                     nop	      2006	dir.c	FUNCTION_61	WHILE_1	IF_6	IF_9
0x4004ddd	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2036	dir.c	FUNCTION_61	CALL_14
0x4004de1	          0x4889c7	                            mov rdi, rax	      2036	dir.c	FUNCTION_61	CALL_14
0x4004de4	      0xe8e0fbffff	               call sym.close_cached_dir	      2036	dir.c	FUNCTION_61	CALL_14
0x4004de9	            0xeb01	                           jmp 0x4004dec	      2036	dir.c	FUNCTION_61	CALL_14
0x4004deb	              0x90	                                     nop	      1949	dir.c	FUNCTION_61	IF_1
0x4004dec	        0x488d45a0	                   lea rax, [rbp - 0x60]	      2038	dir.c	FUNCTION_61	CALL_15
0x4004df0	          0x4889c7	                            mov rdi, rax	      2038	dir.c	FUNCTION_61	CALL_15
0x4004df3	      0xe800000000	                          call 0x4004df8	      2038	dir.c	FUNCTION_61	CALL_15
0x4004df8	          0x8b458c	             mov eax, dword [rbp - 0x74]	      2040	dir.c	FUNCTION_61
0x4004dfb	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2041	dir.c	FUNCTION_61
0x4004dff	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2041	dir.c	FUNCTION_61
0x4004e08	            0x7405	                            je 0x4004e0f	      2041	dir.c	FUNCTION_61
0x4004e0a	      0xe800000000	                          call 0x4004e0f	      2041	dir.c	FUNCTION_61
0x4004e0f	              0xc9	                                   leave	      2041	dir.c	FUNCTION_61
0x4004e10	              0xc3	                                     ret	      2041	dir.c	FUNCTION_61
connect_wt_gitdir_in_nested	SWITCH,0:ELSE,0:WHILE,1:IF,4:DO,0:CALL,12:functions,0:FOR,1	146
0x4007869	              0x55	                                push rbp	      3016	dir.c	FUNCTION_100
0x400786a	          0x4889e5	                            mov rbp, rsp	      3016	dir.c	FUNCTION_100
0x400786d	    0x4881ece00000	                           sub rsp, 0xe0	      3016	dir.c	FUNCTION_100
0x4007874	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	      3016	dir.c	FUNCTION_100
0x400787b	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	      3016	dir.c	FUNCTION_100
0x4007882	    0x64488b042528	                mov rax, qword fs:[0x28]	      3016	dir.c	FUNCTION_100
0x400788b	        0x488945f8	                mov qword [rbp - 8], rax	      3016	dir.c	FUNCTION_100
0x400788f	            0x31c0	                            xor eax, eax	      3016	dir.c	FUNCTION_100
0x4007891	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      3019	dir.c	FUNCTION_100
0x400789c	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      3019	dir.c	FUNCTION_100
0x40078a7	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      3019	dir.c	FUNCTION_100
0x40078b2	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      3020	dir.c	FUNCTION_100
0x40078bd	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      3020	dir.c	FUNCTION_100
0x40078c8	    0x48c745800000	               mov qword [rbp - 0x80], 0	      3020	dir.c	FUNCTION_100
0x40078d0	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x40078d7	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x40078de	        0x488d4590	                   lea rax, [rbp - 0x70]	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x40078e2	          0x4889ce	                            mov rsi, rcx	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x40078e5	          0x4889c7	                            mov rdi, rax	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x40078e8	      0xe800000000	                          call 0x40078ed	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x40078ed	            0x85c0	                           test eax, eax	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x40078ef	     0xf8504020000	                           jne 0x4007af9	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x40078f5	        0x488d4590	                   lea rax, [rbp - 0x70]	      3028	dir.c	FUNCTION_100	IF_2	CALL_2
0x40078f9	          0x4889c7	                            mov rdi, rax	      3028	dir.c	FUNCTION_100	IF_2	CALL_2
0x40078fc	      0xe800000000	                          call 0x4007901	      3028	dir.c	FUNCTION_100	IF_2	CALL_2
0x4007901	            0x85c0	                           test eax, eax	      3028	dir.c	FUNCTION_100	IF_2	CALL_2
0x4007903	            0x7916	                           jns 0x400791b	      3028	dir.c	FUNCTION_100	IF_2	CALL_2
0x4007905	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3029	dir.c	FUNCTION_100	CALL_3
0x4007909	          0x4889c6	                            mov rsi, rax	      3029	dir.c	FUNCTION_100	CALL_3
0x400790c	      0xbf00000000	                              mov edi, 0	      3029	dir.c	FUNCTION_100	CALL_3
0x4007911	      0xb800000000	                              mov eax, 0	      3029	dir.c	FUNCTION_100	CALL_3
0x4007916	      0xe800000000	                          call 0x400791b	      3029	dir.c	FUNCTION_100	CALL_3
0x400791b	    0xc7853cffffff	               mov dword [rbp - 0xc4], 0	      3031	dir.c	FUNCTION_100	FOR_1
0x4007925	      0xe98e010000	                           jmp 0x4007ab8	      3031	dir.c	FUNCTION_100	FOR_1
0x400792a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3032	dir.c	FUNCTION_100	FOR_1
0x400792e	          0x488b00	                    mov rax, qword [rax]	      3032	dir.c	FUNCTION_100	FOR_1
0x4007931	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      3032	dir.c	FUNCTION_100	FOR_1
0x4007937	          0x4863d2	                         movsxd rdx, edx	      3032	dir.c	FUNCTION_100	FOR_1
0x400793a	        0x48c1e203	                              shl rdx, 3	      3032	dir.c	FUNCTION_100	FOR_1
0x400793e	          0x4801d0	                            add rax, rdx	      3032	dir.c	FUNCTION_100	FOR_1
0x4007941	          0x488b00	                    mov rax, qword [rax]	      3032	dir.c	FUNCTION_100	FOR_1
0x4007944	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      3032	dir.c	FUNCTION_100	FOR_1
0x400794b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4007952	          0x8b4034	            mov eax, dword [rax + 0x34] 	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4007955	      0x2500f00000	                         and eax, 0xf000	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x400795a	      0x3d00e00000	                         cmp eax, 0xe000	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x400795f	     0xf8548010000	                           jne 0x4007aad	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4007965	            0xeb07	                           jmp 0x400796e	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x4007967	    0x83853cffffff	               add dword [rbp - 0xc4], 1	      3043	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x400796e	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x4007974	          0x83c001	                              add eax, 1	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x4007977	            0x89c2	                            mov edx, eax	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x4007979	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x400797d	          0x8b400c	              mov eax, dword [rax + 0xc]	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x4007980	            0x39c2	                            cmp edx, eax	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x4007982	            0x733c	                           jae 0x40079c0	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x4007984	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x4007988	          0x488b00	                    mov rax, qword [rax]	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x400798b	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x4007991	          0x4863d2	                         movsxd rdx, edx	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x4007994	        0x4883c201	                              add rdx, 1	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x4007998	        0x48c1e203	                              shl rdx, 3	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x400799c	          0x4801d0	                            add rax, rdx	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x400799f	          0x488b00	                    mov rax, qword [rax]	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x40079a2	        0x488d5058	                   lea rdx, [rax + 0x58]	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x40079a6	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x40079ad	        0x4883c058	                           add rax, 0x58	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x40079b1	          0x4889d6	                            mov rsi, rdx	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x40079b4	          0x4889c7	                            mov rdi, rax	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x40079b7	      0xe800000000	                          call 0x40079bc	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x40079bc	            0x85c0	                           test eax, eax	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x40079be	            0x74a7	                            je 0x4007967	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x40079c0	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x40079c7	        0x488d5058	                   lea rdx, [rax + 0x58]	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x40079cb	        0x488d4590	                   lea rax, [rbp - 0x70]	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x40079cf	      0xbe00000000	                              mov esi, 0	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x40079d4	          0x4889c7	                            mov rdi, rax	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x40079d7	      0xe800000000	                          call 0x40079dc	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x40079dc	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x40079e3	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x40079eb	     0xf84bf000000	                            je 0x4007ab0	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x40079f1	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x40079f8	        0x488d5058	                   lea rdx, [rax + 0x58]	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x40079fc	        0x488d4590	                   lea rax, [rbp - 0x70]	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x4007a00	          0x4889d6	                            mov rsi, rdx	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x4007a03	          0x4889c7	                            mov rdi, rax	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x4007a06	      0xe800000000	                          call 0x4007a0b	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x4007a0b	            0x85c0	                           test eax, eax	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x4007a0d	     0xf849d000000	                            je 0x4007ab0	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x4007a13	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      3050	dir.c	FUNCTION_100	FOR_1
0x4007a1a	      0xbe00000000	                              mov esi, 0	      3050	dir.c	FUNCTION_100	FOR_1
0x4007a1f	          0x4889c7	                            mov rdi, rax	      3050	dir.c	FUNCTION_100	FOR_1
0x4007a22	      0xe82488ffff	                  call sym.strbuf_setlen	      3050	dir.c	FUNCTION_100	FOR_1
0x4007a27	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3051	dir.c	FUNCTION_100	FOR_1
0x4007a2e	      0xbe00000000	                              mov esi, 0	      3051	dir.c	FUNCTION_100	FOR_1
0x4007a33	          0x4889c7	                            mov rdi, rax	      3051	dir.c	FUNCTION_100	FOR_1
0x4007a36	      0xe81088ffff	                  call sym.strbuf_setlen	      3051	dir.c	FUNCTION_100	FOR_1
0x4007a3b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4007a42	          0x488b08	                    mov rcx, qword [rax]	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4007a45	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4007a4c	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4007a53	      0xbe00000000	                              mov esi, 0	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4007a58	          0x4889c7	                            mov rdi, rax	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4007a5b	      0xb800000000	                              mov eax, 0	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4007a60	      0xe800000000	                          call 0x4007a65	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4007a65	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4007a6c	        0x488b4808	                mov rcx, qword [rax + 8]	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4007a70	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4007a77	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4007a7e	      0xbe00000000	                              mov esi, 0	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4007a83	          0x4889c7	                            mov rdi, rax	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4007a86	      0xb800000000	                              mov eax, 0	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4007a8b	      0xe800000000	                          call 0x4007a90	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4007a90	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x4007a94	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x4007a9b	      0xba01000000	                              mov edx, 1	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x4007aa0	          0x4889ce	                            mov rsi, rcx	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x4007aa3	          0x4889c7	                            mov rdi, rax	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x4007aa6	      0xe800000000	                          call 0x4007aab	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x4007aab	            0xeb04	                           jmp 0x4007ab1	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x4007aad	              0x90	                                     nop	      3035	dir.c	FUNCTION_100	FOR_1	IF_3
0x4007aae	            0xeb01	                           jmp 0x4007ab1	      3035	dir.c	FUNCTION_100	FOR_1	IF_3
0x4007ab0	              0x90	                                     nop	      3048	dir.c	FUNCTION_100	FOR_1	IF_4
0x4007ab1	    0x83853cffffff	               add dword [rbp - 0xc4], 1	      3031	dir.c	FUNCTION_100	FOR_1
0x4007ab8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3031	dir.c	FUNCTION_100	FOR_1
0x4007abc	          0x8b500c	              mov edx, dword [rax + 0xc]	      3031	dir.c	FUNCTION_100	FOR_1
0x4007abf	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      3031	dir.c	FUNCTION_100	FOR_1
0x4007ac5	            0x39c2	                            cmp edx, eax	      3031	dir.c	FUNCTION_100	FOR_1
0x4007ac7	     0xf875dfeffff	                            ja 0x400792a	      3031	dir.c	FUNCTION_100	FOR_1
0x4007acd	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      3057	dir.c	FUNCTION_100	CALL_10
0x4007ad4	          0x4889c7	                            mov rdi, rax	      3057	dir.c	FUNCTION_100	CALL_10
0x4007ad7	      0xe800000000	                          call 0x4007adc	      3057	dir.c	FUNCTION_100	CALL_10
0x4007adc	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3058	dir.c	FUNCTION_100	CALL_11
0x4007ae3	          0x4889c7	                            mov rdi, rax	      3058	dir.c	FUNCTION_100	CALL_11
0x4007ae6	      0xe800000000	                          call 0x4007aeb	      3058	dir.c	FUNCTION_100	CALL_11
0x4007aeb	        0x488d4590	                   lea rax, [rbp - 0x70]	      3059	dir.c	FUNCTION_100	CALL_12
0x4007aef	          0x4889c7	                            mov rdi, rax	      3059	dir.c	FUNCTION_100	CALL_12
0x4007af2	      0xe800000000	                          call 0x4007af7	      3059	dir.c	FUNCTION_100	CALL_12
0x4007af7	            0xeb01	                           jmp 0x4007afa	      3059	dir.c	FUNCTION_100	CALL_12
0x4007af9	              0x90	                                     nop	      3026	dir.c	FUNCTION_100	IF_1
0x4007afa	        0x488b45f8	                mov rax, qword [rbp - 8]	      3060	dir.c	FUNCTION_100
0x4007afe	    0x644833042528	                xor rax, qword fs:[0x28]	      3060	dir.c	FUNCTION_100
0x4007b07	            0x7405	                            je 0x4007b0e	      3060	dir.c	FUNCTION_100
0x4007b09	      0xe800000000	                          call 0x4007b0e	      3060	dir.c	FUNCTION_100
0x4007b0e	              0xc9	                                   leave	      3060	dir.c	FUNCTION_100
0x4007b0f	              0xc3	                                     ret	      3060	dir.c	FUNCTION_100
hashcmp	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	13
0x400046e	              0x55	                                push rbp	       974	cache.h	FUNCTION_148
0x400046f	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_148
0x4000472	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_148
0x4000476	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_148
0x400047a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_148
0x400047e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_148	CALL_1
0x4000482	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_148	CALL_1
0x4000486	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_148	CALL_1
0x400048b	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_148	CALL_1
0x400048e	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_148	CALL_1
0x4000491	      0xe800000000	                          call 0x4000496	       975	cache.h	FUNCTION_148	CALL_1
0x4000496	              0xc9	                                   leave	       976	cache.h	FUNCTION_148
0x4000497	              0xc3	                                     ret	       976	cache.h	FUNCTION_148
is_excluded	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,1:functions,0:FOR,0	26
0x40034d8	              0x55	                                push rbp	      1320	dir.c	FUNCTION_42
0x40034d9	          0x4889e5	                            mov rbp, rsp	      1320	dir.c	FUNCTION_42
0x40034dc	        0x4883ec30	                           sub rsp, 0x30	      1320	dir.c	FUNCTION_42
0x40034e0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1320	dir.c	FUNCTION_42
0x40034e4	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1320	dir.c	FUNCTION_42
0x40034e8	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1320	dir.c	FUNCTION_42
0x40034ec	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1320	dir.c	FUNCTION_42
0x40034f0	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1321	dir.c	FUNCTION_42
0x40034f4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1321	dir.c	FUNCTION_42
0x40034f8	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1321	dir.c	FUNCTION_42
0x40034fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1321	dir.c	FUNCTION_42
0x4003500	          0x4889c7	                            mov rdi, rax	      1321	dir.c	FUNCTION_42
0x4003503	      0xe800000000	                          call 0x4003508	      1321	dir.c	FUNCTION_42
0x4003508	        0x488945f8	                mov qword [rbp - 8], rax	      1321	dir.c	FUNCTION_42
0x400350c	      0x48837df800	                  cmp qword [rbp - 8], 0	      1323	dir.c	FUNCTION_42	IF_1
0x4003511	            0x7414	                            je 0x4003527	      1323	dir.c	FUNCTION_42	IF_1
0x4003513	        0x488b45f8	                mov rax, qword [rbp - 8]	      1324	dir.c	FUNCTION_42	IF_1
0x4003517	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1324	dir.c	FUNCTION_42	IF_1
0x400351a	          0x83e010	                           and eax, 0x10	      1324	dir.c	FUNCTION_42	IF_1
0x400351d	            0x85c0	                           test eax, eax	      1324	dir.c	FUNCTION_42	IF_1
0x400351f	           0xf94c0	                                 sete al	      1324	dir.c	FUNCTION_42	IF_1
0x4003522	           0xfb6c0	                           movzx eax, al	      1324	dir.c	FUNCTION_42	IF_1
0x4003525	            0xeb05	                           jmp 0x400352c	      1324	dir.c	FUNCTION_42	IF_1
0x4003527	      0xb800000000	                              mov eax, 0	      1325	dir.c	FUNCTION_42
0x400352c	              0xc9	                                   leave	      1326	dir.c	FUNCTION_42
0x400352d	              0xc3	                                     ret	      1326	dir.c	FUNCTION_42
directory_exists_in_index	SWITCH,0:ELSE,0:WHILE,1:IF,6:DO,0:CALL,3:functions,0:FOR,0	79
0x400386d	              0x55	                                push rbp	      1394	dir.c	FUNCTION_47
0x400386e	          0x4889e5	                            mov rbp, rsp	      1394	dir.c	FUNCTION_47
0x4003871	        0x4883ec30	                           sub rsp, 0x30	      1394	dir.c	FUNCTION_47
0x4003875	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1394	dir.c	FUNCTION_47
0x4003879	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1394	dir.c	FUNCTION_47
0x400387d	          0x8955dc	             mov dword [rbp - 0x24], edx	      1394	dir.c	FUNCTION_47
0x4003880	    0x8b0500000000	            mov eax, dword [0x04003886] 	      1397	dir.c	FUNCTION_47	IF_1
0x4003886	            0x85c0	                           test eax, eax	      1397	dir.c	FUNCTION_47	IF_1
0x4003888	            0x741b	                            je 0x40038a5	      1397	dir.c	FUNCTION_47	IF_1
0x400388a	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1398	dir.c	FUNCTION_47	CALL_1
0x400388d	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1398	dir.c	FUNCTION_47	CALL_1
0x4003891	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1398	dir.c	FUNCTION_47	CALL_1
0x4003895	          0x4889ce	                            mov rsi, rcx	      1398	dir.c	FUNCTION_47	CALL_1
0x4003898	          0x4889c7	                            mov rdi, rax	      1398	dir.c	FUNCTION_47	CALL_1
0x400389b	      0xe854ffffff	call sym.directory_exists_in_index_icase	      1398	dir.c	FUNCTION_47	CALL_1
0x40038a0	      0xe9cd000000	                           jmp 0x4003972	      1398	dir.c	FUNCTION_47	CALL_1
0x40038a5	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1400	dir.c	FUNCTION_47	CALL_2
0x40038a8	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1400	dir.c	FUNCTION_47	CALL_2
0x40038ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1400	dir.c	FUNCTION_47	CALL_2
0x40038b0	          0x4889ce	                            mov rsi, rcx	      1400	dir.c	FUNCTION_47	CALL_2
0x40038b3	          0x4889c7	                            mov rdi, rax	      1400	dir.c	FUNCTION_47	CALL_2
0x40038b6	      0xe800000000	                          call 0x40038bb	      1400	dir.c	FUNCTION_47	CALL_2
0x40038bb	          0x8945f4	              mov dword [rbp - 0xc], eax	      1400	dir.c	FUNCTION_47	CALL_2
0x40038be	        0x837df400	                cmp dword [rbp - 0xc], 0	      1401	dir.c	FUNCTION_47	IF_2
0x40038c2	     0xf898d000000	                           jns 0x4003955	      1401	dir.c	FUNCTION_47	IF_2
0x40038c8	          0xf755f4	                   not dword [rbp - 0xc]	      1402	dir.c	FUNCTION_47	IF_2
0x40038cb	      0xe985000000	                           jmp 0x4003955	      1403	dir.c	FUNCTION_47	WHILE_1
0x40038d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1404	dir.c	FUNCTION_47	WHILE_1
0x40038d4	          0x488b08	                    mov rcx, qword [rax]	      1404	dir.c	FUNCTION_47	WHILE_1
0x40038d7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1404	dir.c	FUNCTION_47	WHILE_1
0x40038da	          0x8d5001	                      lea edx, [rax + 1]	      1404	dir.c	FUNCTION_47	WHILE_1
0x40038dd	          0x8955f4	              mov dword [rbp - 0xc], edx	      1404	dir.c	FUNCTION_47	WHILE_1
0x40038e0	            0x4898	                                    cdqe	      1404	dir.c	FUNCTION_47	WHILE_1
0x40038e2	        0x48c1e003	                              shl rax, 3	      1404	dir.c	FUNCTION_47	WHILE_1
0x40038e6	          0x4801c8	                            add rax, rcx	      1404	dir.c	FUNCTION_47	WHILE_1
0x40038e9	          0x488b00	                    mov rax, qword [rax]	      1404	dir.c	FUNCTION_47	WHILE_1
0x40038ec	        0x488945f8	                mov qword [rbp - 8], rax	      1404	dir.c	FUNCTION_47	WHILE_1
0x40038f0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x40038f3	          0x4863d0	                         movsxd rdx, eax	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x40038f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x40038fa	        0x488d4858	                   lea rcx, [rax + 0x58]	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x40038fe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x4003902	          0x4889c6	                            mov rsi, rax	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x4003905	          0x4889cf	                            mov rdi, rcx	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x4003908	      0xe800000000	                          call 0x400390d	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x400390d	            0x85c0	                           test eax, eax	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x400390f	            0x7558	                           jne 0x4003969	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x4003911	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1409	dir.c	FUNCTION_47	WHILE_1
0x4003915	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1409	dir.c	FUNCTION_47	WHILE_1
0x4003918	            0x4898	                                    cdqe	      1409	dir.c	FUNCTION_47	WHILE_1
0x400391a	       0xfb6440258	     movzx eax, byte [rdx + rax + 0x58] 	      1409	dir.c	FUNCTION_47	WHILE_1
0x400391f	          0x8845f3	                mov byte [rbp - 0xd], al	      1409	dir.c	FUNCTION_47	WHILE_1
0x4003922	        0x807df32f	              cmp byte [rbp - 0xd], 0x2f	      1410	dir.c	FUNCTION_47	WHILE_1	IF_4
0x4003926	            0x7744	                            ja 0x400396c	      1410	dir.c	FUNCTION_47	WHILE_1	IF_4
0x4003928	        0x807df32f	              cmp byte [rbp - 0xd], 0x2f	      1412	dir.c	FUNCTION_47	WHILE_1	IF_5
0x400392c	            0x7507	                           jne 0x4003935	      1412	dir.c	FUNCTION_47	WHILE_1	IF_5
0x400392e	      0xb801000000	                              mov eax, 1	      1413	dir.c	FUNCTION_47	WHILE_1	IF_5
0x4003933	            0xeb3d	                           jmp 0x4003972	      1413	dir.c	FUNCTION_47	WHILE_1	IF_5
0x4003935	        0x807df300	                 cmp byte [rbp - 0xd], 0	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x4003939	            0x751a	                           jne 0x4003955	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x400393b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x400393f	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x4003942	      0x2500f00000	                         and eax, 0xf000	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x4003947	      0x3d00e00000	                         cmp eax, 0xe000	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x400394c	            0x7507	                           jne 0x4003955	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x400394e	      0xb802000000	                              mov eax, 2	      1415	dir.c	FUNCTION_47	WHILE_1	IF_6
0x4003953	            0xeb1d	                           jmp 0x4003972	      1415	dir.c	FUNCTION_47	WHILE_1	IF_6
0x4003955	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1403	dir.c	FUNCTION_47	WHILE_1
0x4003959	          0x8b500c	              mov edx, dword [rax + 0xc]	      1403	dir.c	FUNCTION_47	WHILE_1
0x400395c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1403	dir.c	FUNCTION_47	WHILE_1
0x400395f	            0x39c2	                            cmp edx, eax	      1403	dir.c	FUNCTION_47	WHILE_1
0x4003961	     0xf8769ffffff	                            ja 0x40038d0	      1403	dir.c	FUNCTION_47	WHILE_1
0x4003967	            0xeb04	                           jmp 0x400396d	      1403	dir.c	FUNCTION_47	WHILE_1
0x4003969	              0x90	                                     nop	      1408	dir.c	FUNCTION_47	WHILE_1	IF_3
0x400396a	            0xeb01	                           jmp 0x400396d	      1408	dir.c	FUNCTION_47	WHILE_1	IF_3
0x400396c	              0x90	                                     nop	      1411	dir.c	FUNCTION_47	WHILE_1	IF_4
0x400396d	      0xb800000000	                              mov eax, 0	      1417	dir.c	FUNCTION_47
0x4003972	              0xc9	                                   leave	      1418	dir.c	FUNCTION_47
0x4003973	              0xc3	                                     ret	      1418	dir.c	FUNCTION_47
is_excluded_from_list	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,1:functions,0:FOR,0	32
0x4002c17	              0x55	                                push rbp	      1104	dir.c	FUNCTION_38
0x4002c18	          0x4889e5	                            mov rbp, rsp	      1104	dir.c	FUNCTION_38
0x4002c1b	        0x4883ec40	                           sub rsp, 0x40	      1104	dir.c	FUNCTION_38
0x4002c1f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1104	dir.c	FUNCTION_38
0x4002c23	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1104	dir.c	FUNCTION_38
0x4002c26	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1104	dir.c	FUNCTION_38
0x4002c2a	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1104	dir.c	FUNCTION_38
0x4002c2e	        0x4c8945c8	              mov qword [rbp - 0x38], r8	      1104	dir.c	FUNCTION_38
0x4002c32	        0x4c894dc0	              mov qword [rbp - 0x40], r9	      1104	dir.c	FUNCTION_38
0x4002c36	        0x4c8b45c0	              mov r8, qword [rbp - 0x40]	      1106	dir.c	FUNCTION_38	CALL_1
0x4002c3a	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	      1106	dir.c	FUNCTION_38	CALL_1
0x4002c3e	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1106	dir.c	FUNCTION_38	CALL_1
0x4002c42	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1106	dir.c	FUNCTION_38	CALL_1
0x4002c46	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      1106	dir.c	FUNCTION_38	CALL_1
0x4002c49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1106	dir.c	FUNCTION_38	CALL_1
0x4002c4d	          0x4d89c1	                              mov r9, r8	      1106	dir.c	FUNCTION_38	CALL_1
0x4002c50	          0x4989f8	                             mov r8, rdi	      1106	dir.c	FUNCTION_38	CALL_1
0x4002c53	          0x4889c7	                            mov rdi, rax	      1106	dir.c	FUNCTION_38	CALL_1
0x4002c56	      0xe8d7fdffff	call sym.last_exclude_matching_from_list	      1106	dir.c	FUNCTION_38	CALL_1
0x4002c5b	        0x488945f8	                mov qword [rbp - 8], rax	      1106	dir.c	FUNCTION_38	CALL_1
0x4002c5f	      0x48837df800	                  cmp qword [rbp - 8], 0	      1108	dir.c	FUNCTION_38	IF_1
0x4002c64	            0x7414	                            je 0x4002c7a	      1108	dir.c	FUNCTION_38	IF_1
0x4002c66	        0x488b45f8	                mov rax, qword [rbp - 8]	      1109	dir.c	FUNCTION_38	IF_1
0x4002c6a	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1109	dir.c	FUNCTION_38	IF_1
0x4002c6d	          0x83e010	                           and eax, 0x10	      1109	dir.c	FUNCTION_38	IF_1
0x4002c70	            0x85c0	                           test eax, eax	      1109	dir.c	FUNCTION_38	IF_1
0x4002c72	           0xf94c0	                                 sete al	      1109	dir.c	FUNCTION_38	IF_1
0x4002c75	           0xfb6c0	                           movzx eax, al	      1109	dir.c	FUNCTION_38	IF_1
0x4002c78	            0xeb05	                           jmp 0x4002c7f	      1109	dir.c	FUNCTION_38	IF_1
0x4002c7a	      0xb8ffffffff	                     mov eax, 0xffffffff	      1110	dir.c	FUNCTION_38
0x4002c7f	              0xc9	                                   leave	      1111	dir.c	FUNCTION_38
0x4002c80	              0xc3	                                     ret	      1111	dir.c	FUNCTION_38
treat_directory	SWITCH,1:ELSE,0:WHILE,0:IF,7:DO,0:CALL,5:functions,0:FOR,0	139
0x4003974	              0x55	                                push rbp	      1458	dir.c	FUNCTION_48
0x4003975	          0x4889e5	                            mov rbp, rsp	      1458	dir.c	FUNCTION_48
0x4003978	        0x4883ec50	                           sub rsp, 0x50	      1458	dir.c	FUNCTION_48
0x400397c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1458	dir.c	FUNCTION_48
0x4003980	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1458	dir.c	FUNCTION_48
0x4003984	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1458	dir.c	FUNCTION_48
0x4003988	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      1458	dir.c	FUNCTION_48
0x400398c	        0x448945bc	             mov dword [rbp - 0x44], r8d	      1458	dir.c	FUNCTION_48
0x4003990	        0x44894db8	             mov dword [rbp - 0x48], r9d	      1458	dir.c	FUNCTION_48
0x4003994	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1458	dir.c	FUNCTION_48
0x4003998	        0x488945b0	             mov qword [rbp - 0x50], rax	      1458	dir.c	FUNCTION_48
0x400399c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1458	dir.c	FUNCTION_48
0x40039a5	        0x488945f8	                mov qword [rbp - 8], rax	      1458	dir.c	FUNCTION_48
0x40039a9	            0x31c0	                            xor eax, eax	      1458	dir.c	FUNCTION_48
0x40039ab	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40039ae	          0x8d50ff	                      lea edx, [rax - 1]	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40039b1	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40039b5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40039b9	          0x4889ce	                            mov rsi, rcx	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40039bc	          0x4889c7	                            mov rdi, rax	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40039bf	      0xe8a9feffff	      call sym.directory_exists_in_index	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40039c4	          0x83f801	                              cmp eax, 1	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40039c7	            0x740f	                            je 0x40039d8	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40039c9	          0x83f801	                              cmp eax, 1	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40039cc	            0x721e	                            jb 0x40039ec	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40039ce	          0x83f802	                              cmp eax, 2	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40039d1	            0x740f	                            je 0x40039e2	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40039d3	      0xe9f4000000	                           jmp 0x4003acc	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40039d8	      0xb801000000	                              mov eax, 1	      1462	dir.c	FUNCTION_48	SWITCH_1
0x40039dd	      0xe96e010000	                           jmp 0x4003b50	      1462	dir.c	FUNCTION_48	SWITCH_1
0x40039e2	      0xb800000000	                              mov eax, 0	      1465	dir.c	FUNCTION_48	SWITCH_1
0x40039e7	      0xe964010000	                           jmp 0x4003b50	      1465	dir.c	FUNCTION_48	SWITCH_1
0x40039ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1468	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x40039f0	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1468	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x40039f3	          0x83e002	                              and eax, 2	      1468	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x40039f6	            0x85c0	                           test eax, eax	      1468	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x40039f8	     0xf85cd000000	                           jne 0x4003acb	      1468	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x40039fe	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1470	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003a02	            0x747c	                            je 0x4003a80	      1470	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003a04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003a08	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003a0b	          0x83e020	                           and eax, 0x20	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003a0e	            0x85c0	                           test eax, eax	      1470	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003a10	            0x746e	                            je 0x4003a80	      1470	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003a12	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1472	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003a16	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1472	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003a19	      0x2500010000	                          and eax, 0x100	      1472	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003a1e	            0x85c0	                           test eax, eax	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003a20	            0x745e	                            je 0x4003a80	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003a22	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1485	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x4003a26	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1485	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x4003a29	          0x83e004	                              and eax, 4	      1485	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x4003a2c	            0x85c0	                           test eax, eax	      1485	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x4003a2e	            0x750a	                           jne 0x4003a3a	      1485	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x4003a30	      0xb802000000	                              mov eax, 2	      1486	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x4003a35	      0xe916010000	                           jmp 0x4003b50	      1486	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x4003a3a	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003a3e	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003a41	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003a45	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003a49	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003a4d	          0xff75b0	                 push qword [rbp - 0x50]	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003a50	            0x6a01	                                  push 1	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003a52	    0x41b901000000	                              mov r9d, 1	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003a58	          0x4989f8	                             mov r8, rdi	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003a5b	          0x4889c7	                            mov rdi, rax	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003a5e	      0xe8c10f0000	       call sym.read_directory_recursive	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003a63	        0x4883c410	                           add rsp, 0x10	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003a67	          0x83f802	                              cmp eax, 2	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003a6a	            0x750a	                           jne 0x4003a76	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003a6c	      0xb802000000	                              mov eax, 2	      1490	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4
0x4003a71	      0xe9da000000	                           jmp 0x4003b50	      1490	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4
0x4003a76	      0xb800000000	                              mov eax, 0	      1492	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003a7b	      0xe9d0000000	                           jmp 0x4003b50	      1492	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003a80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1494	dir.c	FUNCTION_48	SWITCH_1	IF_5
0x4003a84	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1494	dir.c	FUNCTION_48	SWITCH_1	IF_5
0x4003a87	          0x83e008	                              and eax, 8	      1494	dir.c	FUNCTION_48	SWITCH_1	IF_5
0x4003a8a	            0x85c0	                           test eax, eax	      1494	dir.c	FUNCTION_48	SWITCH_1	IF_5
0x4003a8c	            0x7533	                           jne 0x4003ac1	      1494	dir.c	FUNCTION_48	SWITCH_1	IF_5
0x4003a8e	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4003a92	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4003a96	      0xbe00000000	                              mov esi, 0	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4003a9b	          0x4889c7	                            mov rdi, rax	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4003a9e	      0xe800000000	                          call 0x4003aa3	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4003aa3	            0x85c0	                           test eax, eax	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4003aa5	            0x751a	                           jne 0x4003ac1	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4003aa7	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x4003aab	            0x740a	                            je 0x4003ab7	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x4003aad	      0xb802000000	                              mov eax, 2	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x4003ab2	      0xe999000000	                           jmp 0x4003b50	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x4003ab7	      0xb803000000	                              mov eax, 3	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x4003abc	      0xe98f000000	                           jmp 0x4003b50	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x4003ac1	      0xb801000000	                              mov eax, 1	      1499	dir.c	FUNCTION_48	SWITCH_1
0x4003ac6	      0xe985000000	                           jmp 0x4003b50	      1499	dir.c	FUNCTION_48	SWITCH_1
0x4003acb	              0x90	                                     nop	      1469	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x4003acc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1504	dir.c	FUNCTION_48	IF_7
0x4003ad0	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1504	dir.c	FUNCTION_48	IF_7
0x4003ad3	          0x83e004	                              and eax, 4	      1504	dir.c	FUNCTION_48	IF_7
0x4003ad6	            0x85c0	                           test eax, eax	      1504	dir.c	FUNCTION_48	IF_7
0x4003ad8	            0x7514	                           jne 0x4003aee	      1504	dir.c	FUNCTION_48	IF_7
0x4003ada	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1505	dir.c	FUNCTION_48	IF_7
0x4003ade	            0x7407	                            je 0x4003ae7	      1505	dir.c	FUNCTION_48	IF_7
0x4003ae0	      0xb802000000	                              mov eax, 2	      1505	dir.c	FUNCTION_48	IF_7
0x4003ae5	            0xeb69	                           jmp 0x4003b50	      1505	dir.c	FUNCTION_48	IF_7
0x4003ae7	      0xb803000000	                              mov eax, 3	      1505	dir.c	FUNCTION_48	IF_7
0x4003aec	            0xeb62	                           jmp 0x4003b50	      1505	dir.c	FUNCTION_48	IF_7
0x4003aee	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1507	dir.c	FUNCTION_48	CALL_4
0x4003af1	          0x2b45b8	             sub eax, dword [rbp - 0x48]	      1507	dir.c	FUNCTION_48	CALL_4
0x4003af4	            0x89c2	                            mov edx, eax	      1507	dir.c	FUNCTION_48	CALL_4
0x4003af6	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1507	dir.c	FUNCTION_48	CALL_4
0x4003af9	          0x4863c8	                         movsxd rcx, eax	      1507	dir.c	FUNCTION_48	CALL_4
0x4003afc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1507	dir.c	FUNCTION_48	CALL_4
0x4003b00	        0x488d3c01	                    lea rdi, [rcx + rax]	      1507	dir.c	FUNCTION_48	CALL_4
0x4003b04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1507	dir.c	FUNCTION_48	CALL_4
0x4003b08	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1507	dir.c	FUNCTION_48	CALL_4
0x4003b0f	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      1507	dir.c	FUNCTION_48	CALL_4
0x4003b13	            0x89d1	                            mov ecx, edx	      1507	dir.c	FUNCTION_48	CALL_4
0x4003b15	          0x4889fa	                            mov rdx, rdi	      1507	dir.c	FUNCTION_48	CALL_4
0x4003b18	          0x4889c7	                            mov rdi, rax	      1507	dir.c	FUNCTION_48	CALL_4
0x4003b1b	      0xe838e1ffff	               call sym.lookup_untracked	      1507	dir.c	FUNCTION_48	CALL_4
0x4003b20	        0x488945c8	             mov qword [rbp - 0x38], rax	      1507	dir.c	FUNCTION_48	CALL_4
0x4003b24	        0x4c8b45c8	              mov r8, qword [rbp - 0x38]	      1514	dir.c	FUNCTION_48	CALL_5
0x4003b28	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1514	dir.c	FUNCTION_48	CALL_5
0x4003b2b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1514	dir.c	FUNCTION_48	CALL_5
0x4003b2f	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1514	dir.c	FUNCTION_48	CALL_5
0x4003b33	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1514	dir.c	FUNCTION_48	CALL_5
0x4003b37	          0xff75b0	                 push qword [rbp - 0x50]	      1514	dir.c	FUNCTION_48	CALL_5
0x4003b3a	          0x8b7d10	            mov edi, dword [rbp + 0x10] 	      1514	dir.c	FUNCTION_48	CALL_5
0x4003b3d	              0x57	                                push rdi	      1514	dir.c	FUNCTION_48	CALL_5
0x4003b3e	    0x41b901000000	                              mov r9d, 1	      1514	dir.c	FUNCTION_48	CALL_5
0x4003b44	          0x4889c7	                            mov rdi, rax	      1514	dir.c	FUNCTION_48	CALL_5
0x4003b47	      0xe8d80e0000	       call sym.read_directory_recursive	      1514	dir.c	FUNCTION_48	CALL_5
0x4003b4c	        0x4883c410	                           add rsp, 0x10	      1514	dir.c	FUNCTION_48	CALL_5
0x4003b50	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1516	dir.c	FUNCTION_48
0x4003b54	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1516	dir.c	FUNCTION_48
0x4003b5d	            0x7405	                            je 0x4003b64	      1516	dir.c	FUNCTION_48
0x4003b5f	      0xe800000000	                          call 0x4003b64	      1516	dir.c	FUNCTION_48
0x4003b64	              0xc9	                                   leave	      1516	dir.c	FUNCTION_48
0x4003b65	              0xc3	                                     ret	      1516	dir.c	FUNCTION_48
get_dtype	SWITCH,0:ELSE,0:WHILE,0:IF,6:DO,0:CALL,4:functions,0:FOR,0	67
0x4003ebe	              0x55	                                push rbp	      1636	dir.c	FUNCTION_52
0x4003ebf	          0x4889e5	                            mov rbp, rsp	      1636	dir.c	FUNCTION_52
0x4003ec2	    0x4881ecd00000	                           sub rsp, 0xd0	      1636	dir.c	FUNCTION_52
0x4003ec9	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      1636	dir.c	FUNCTION_52
0x4003ed0	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	      1636	dir.c	FUNCTION_52
0x4003ed7	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	      1636	dir.c	FUNCTION_52
0x4003ede	    0x898d34ffffff	             mov dword [rbp - 0xcc], ecx	      1636	dir.c	FUNCTION_52
0x4003ee4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1636	dir.c	FUNCTION_52
0x4003eed	        0x488945f8	                mov qword [rbp - 8], rax	      1636	dir.c	FUNCTION_52
0x4003ef1	            0x31c0	                            xor eax, eax	      1636	dir.c	FUNCTION_52
0x4003ef3	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      1637	dir.c	FUNCTION_52
0x4003efb	            0x7410	                            je 0x4003f0d	      1637	dir.c	FUNCTION_52
0x4003efd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1637	dir.c	FUNCTION_52
0x4003f04	         0xfb64012	           movzx eax, byte [rax + 0x12] 	      1637	dir.c	FUNCTION_52
0x4003f08	           0xfb6c0	                           movzx eax, al	      1637	dir.c	FUNCTION_52
0x4003f0b	            0xeb05	                           jmp 0x4003f12	      1637	dir.c	FUNCTION_52
0x4003f0d	      0xb800000000	                              mov eax, 0	      1637	dir.c	FUNCTION_52
0x4003f12	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      1637	dir.c	FUNCTION_52
0x4003f18	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      1640	dir.c	FUNCTION_52	IF_1
0x4003f1f	            0x740b	                            je 0x4003f2c	      1640	dir.c	FUNCTION_52	IF_1
0x4003f21	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1641	dir.c	FUNCTION_52	IF_1
0x4003f27	      0xe9ac000000	                           jmp 0x4003fd8	      1641	dir.c	FUNCTION_52	IF_1
0x4003f2c	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	      1642	dir.c	FUNCTION_52	CALL_1
0x4003f32	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	      1642	dir.c	FUNCTION_52	CALL_1
0x4003f39	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1642	dir.c	FUNCTION_52	CALL_1
0x4003f40	          0x4889ce	                            mov rsi, rcx	      1642	dir.c	FUNCTION_52	CALL_1
0x4003f43	          0x4889c7	                            mov rdi, rax	      1642	dir.c	FUNCTION_52	CALL_1
0x4003f46	      0xe82efeffff	                call sym.get_index_dtype	      1642	dir.c	FUNCTION_52	CALL_1
0x4003f4b	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      1642	dir.c	FUNCTION_52	CALL_1
0x4003f51	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      1643	dir.c	FUNCTION_52	IF_2
0x4003f58	            0x7408	                            je 0x4003f62	      1643	dir.c	FUNCTION_52	IF_2
0x4003f5a	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1644	dir.c	FUNCTION_52	IF_2
0x4003f60	            0xeb76	                           jmp 0x4003fd8	      1644	dir.c	FUNCTION_52	IF_2
0x4003f62	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1645	dir.c	FUNCTION_52	IF_3
0x4003f69	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1645	dir.c	FUNCTION_52	IF_3
0x4003f70	          0x4889d6	                            mov rsi, rdx	      1645	dir.c	FUNCTION_52	IF_3
0x4003f73	          0x4889c7	                            mov rdi, rax	      1645	dir.c	FUNCTION_52	IF_3
0x4003f76	      0xe800000000	                          call 0x4003f7b	      1645	dir.c	FUNCTION_52	IF_3
0x4003f7b	            0x85c0	                           test eax, eax	      1645	dir.c	FUNCTION_52	IF_3
0x4003f7d	            0x7408	                            je 0x4003f87	      1645	dir.c	FUNCTION_52	IF_3
0x4003f7f	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1646	dir.c	FUNCTION_52	IF_3
0x4003f85	            0xeb51	                           jmp 0x4003fd8	      1646	dir.c	FUNCTION_52	IF_3
0x4003f87	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      1647	dir.c	FUNCTION_52	IF_4	CALL_2
0x4003f8d	      0x2500f00000	                         and eax, 0xf000	      1647	dir.c	FUNCTION_52	IF_4	CALL_2
0x4003f92	      0x3d00800000	                         cmp eax, 0x8000	      1647	dir.c	FUNCTION_52	IF_4	CALL_2
0x4003f97	            0x7507	                           jne 0x4003fa0	      1647	dir.c	FUNCTION_52	IF_4	CALL_2
0x4003f99	      0xb808000000	                              mov eax, 8	      1648	dir.c	FUNCTION_52	IF_4
0x4003f9e	            0xeb38	                           jmp 0x4003fd8	      1648	dir.c	FUNCTION_52	IF_4
0x4003fa0	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      1649	dir.c	FUNCTION_52	IF_5	CALL_3
0x4003fa6	      0x2500f00000	                         and eax, 0xf000	      1649	dir.c	FUNCTION_52	IF_5	CALL_3
0x4003fab	      0x3d00400000	                         cmp eax, 0x4000	      1649	dir.c	FUNCTION_52	IF_5	CALL_3
0x4003fb0	            0x7507	                           jne 0x4003fb9	      1649	dir.c	FUNCTION_52	IF_5	CALL_3
0x4003fb2	      0xb804000000	                              mov eax, 4	      1650	dir.c	FUNCTION_52	IF_5
0x4003fb7	            0xeb1f	                           jmp 0x4003fd8	      1650	dir.c	FUNCTION_52	IF_5
0x4003fb9	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      1651	dir.c	FUNCTION_52	IF_6	CALL_4
0x4003fbf	      0x2500f00000	                         and eax, 0xf000	      1651	dir.c	FUNCTION_52	IF_6	CALL_4
0x4003fc4	      0x3d00a00000	                         cmp eax, 0xa000	      1651	dir.c	FUNCTION_52	IF_6	CALL_4
0x4003fc9	            0x7507	                           jne 0x4003fd2	      1651	dir.c	FUNCTION_52	IF_6	CALL_4
0x4003fcb	      0xb80a000000	                            mov eax, 0xa	      1652	dir.c	FUNCTION_52	IF_6
0x4003fd0	            0xeb06	                           jmp 0x4003fd8	      1652	dir.c	FUNCTION_52	IF_6
0x4003fd2	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1653	dir.c	FUNCTION_52
0x4003fd8	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1654	dir.c	FUNCTION_52
0x4003fdc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1654	dir.c	FUNCTION_52
0x4003fe5	            0x7405	                            je 0x4003fec	      1654	dir.c	FUNCTION_52
0x4003fe7	      0xe800000000	                          call 0x4003fec	      1654	dir.c	FUNCTION_52
0x4003fec	              0xc9	                                   leave	      1654	dir.c	FUNCTION_52
0x4003fed	              0xc3	                                     ret	      1654	dir.c	FUNCTION_52
git_bswap32	SWITCH,0:ELSE,1:WHILE,0:IF,1:DO,0:CALL,3:functions,0:FOR,0	9
0x4000053	              0x55	                                push rbp	        39	bswap.h	FUNCTION_177
0x4000054	          0x4889e5	                            mov rbp, rsp	        39	bswap.h	FUNCTION_177
0x4000057	          0x897dec	             mov dword [rbp - 0x14], edi	        39	bswap.h	FUNCTION_177
0x400005a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        44	bswap.h	FUNCTION_177	CALL_3
0x400005d	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_177	CALL_3
0x400005f	          0x8945fc	                mov dword [rbp - 4], eax	        44	bswap.h	FUNCTION_177	CALL_3
0x4000062	          0x8b45fc	                mov eax, dword [rbp - 4]	        45	bswap.h	FUNCTION_177
0x4000065	              0x5d	                                 pop rbp	        46	bswap.h	FUNCTION_177
0x4000066	              0xc3	                                     ret	        46	bswap.h	FUNCTION_177
sane_case	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,0:functions,0:FOR,0	19
0x4000186	              0x55	                                push rbp	       992	git-compat-util.h	FUNCTION_123
0x4000187	          0x4889e5	                            mov rbp, rsp	       992	git-compat-util.h	FUNCTION_123
0x400018a	          0x897dfc	                mov dword [rbp - 4], edi	       992	git-compat-util.h	FUNCTION_123
0x400018d	          0x8975f8	                mov dword [rbp - 8], esi	       992	git-compat-util.h	FUNCTION_123
0x4000190	          0x8b45fc	                mov eax, dword [rbp - 4]	       993	git-compat-util.h	FUNCTION_123	IF_1
0x4000193	           0xfb6c0	                           movzx eax, al	       993	git-compat-util.h	FUNCTION_123	IF_1
0x4000196	            0x4898	                                    cdqe	       993	git-compat-util.h	FUNCTION_123	IF_1
0x4000198	     0xfb680000000	                   movzx eax, byte [rax]	       993	git-compat-util.h	FUNCTION_123	IF_1
0x400019f	           0xfb6c0	                           movzx eax, al	       993	git-compat-util.h	FUNCTION_123	IF_1
0x40001a2	          0x83e004	                              and eax, 4	       993	git-compat-util.h	FUNCTION_123	IF_1
0x40001a5	            0x85c0	                           test eax, eax	       993	git-compat-util.h	FUNCTION_123	IF_1
0x40001a7	            0x740c	                            je 0x40001b5	       993	git-compat-util.h	FUNCTION_123	IF_1
0x40001a9	          0x8b45fc	                mov eax, dword [rbp - 4]	       994	git-compat-util.h	FUNCTION_123	IF_1
0x40001ac	          0x83e0df	                     and eax, 0xffffffdf	       994	git-compat-util.h	FUNCTION_123	IF_1
0x40001af	           0xb45f8	                 or eax, dword [rbp - 8]	       994	git-compat-util.h	FUNCTION_123	IF_1
0x40001b2	          0x8945fc	                mov dword [rbp - 4], eax	       994	git-compat-util.h	FUNCTION_123	IF_1
0x40001b5	          0x8b45fc	                mov eax, dword [rbp - 4]	       995	git-compat-util.h	FUNCTION_123
0x40001b8	              0x5d	                                 pop rbp	       996	git-compat-util.h	FUNCTION_123
0x40001b9	              0xc3	                                     ret	       996	git-compat-util.h	FUNCTION_123
remove_untracked_cache	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,1:functions,0:FOR,0	23
0x40052b6	              0x55	                                push rbp	      2163	dir.c	FUNCTION_70
0x40052b7	          0x4889e5	                            mov rbp, rsp	      2163	dir.c	FUNCTION_70
0x40052ba	        0x4883ec10	                           sub rsp, 0x10	      2163	dir.c	FUNCTION_70
0x40052be	        0x48897df8	                mov qword [rbp - 8], rdi	      2163	dir.c	FUNCTION_70
0x40052c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2164	dir.c	FUNCTION_70	IF_1
0x40052c6	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      2164	dir.c	FUNCTION_70	IF_1
0x40052cd	          0x4885c0	                           test rax, rax	      2164	dir.c	FUNCTION_70	IF_1
0x40052d0	            0x7434	                            je 0x4005306	      2164	dir.c	FUNCTION_70	IF_1
0x40052d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2165	dir.c	FUNCTION_70	IF_1	CALL_1
0x40052d6	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      2165	dir.c	FUNCTION_70	IF_1	CALL_1
0x40052dd	          0x4889c7	                            mov rdi, rax	      2165	dir.c	FUNCTION_70	IF_1	CALL_1
0x40052e0	      0xe800000000	                          call 0x40052e5	      2165	dir.c	FUNCTION_70	IF_1	CALL_1
0x40052e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2166	dir.c	FUNCTION_70	IF_1
0x40052e9	    0x48c780b80000	               mov qword [rax + 0xb8], 0	      2166	dir.c	FUNCTION_70	IF_1
0x40052f4	        0x488b45f8	                mov rax, qword [rbp - 8]	      2167	dir.c	FUNCTION_70	IF_1
0x40052f8	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2167	dir.c	FUNCTION_70	IF_1
0x40052fb	             0xc80	                             or al, 0x80	      2167	dir.c	FUNCTION_70	IF_1
0x40052fd	            0x89c2	                            mov edx, eax	      2167	dir.c	FUNCTION_70	IF_1
0x40052ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      2167	dir.c	FUNCTION_70	IF_1
0x4005303	          0x895014	             mov dword [rax + 0x14], edx	      2167	dir.c	FUNCTION_70	IF_1
0x4005306	              0x90	                                     nop	      2169	dir.c	FUNCTION_70
0x4005307	              0xc9	                                   leave	      2169	dir.c	FUNCTION_70
0x4005308	              0xc3	                                     ret	      2169	dir.c	FUNCTION_70
oidcmp	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	12
0x4000498	              0x55	                                push rbp	       979	cache.h	FUNCTION_149
0x4000499	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_149
0x400049c	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_149
0x40004a0	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_149
0x40004a4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_149
0x40004a8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_149	CALL_1
0x40004ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_149	CALL_1
0x40004b0	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_149	CALL_1
0x40004b3	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_149	CALL_1
0x40004b6	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_149	CALL_1
0x40004bb	              0xc9	                                   leave	       981	cache.h	FUNCTION_149
0x40004bc	              0xc3	                                     ret	       981	cache.h	FUNCTION_149
match_pathspec_item	SWITCH,0:ELSE,1:WHILE,0:IF,11:DO,0:CALL,7:functions,0:FOR,0	195
0x4000f0d	              0x55	                                push rbp	       322	dir.c	FUNCTION_12
0x4000f0e	          0x4889e5	                            mov rbp, rsp	       322	dir.c	FUNCTION_12
0x4000f11	        0x4883ec30	                           sub rsp, 0x30	       322	dir.c	FUNCTION_12
0x4000f15	        0x48897de8	             mov qword [rbp - 0x18], rdi	       322	dir.c	FUNCTION_12
0x4000f19	          0x8975e4	             mov dword [rbp - 0x1c], esi	       322	dir.c	FUNCTION_12
0x4000f1c	        0x488955d8	             mov qword [rbp - 0x28], rdx	       322	dir.c	FUNCTION_12
0x4000f20	          0x894de0	             mov dword [rbp - 0x20], ecx	       322	dir.c	FUNCTION_12
0x4000f23	        0x448945d4	             mov dword [rbp - 0x2c], r8d	       322	dir.c	FUNCTION_12
0x4000f27	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       324	dir.c	FUNCTION_12
0x4000f2b	          0x488b10	                    mov rdx, qword [rax]	       324	dir.c	FUNCTION_12
0x4000f2e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       324	dir.c	FUNCTION_12
0x4000f31	            0x4898	                                    cdqe	       324	dir.c	FUNCTION_12
0x4000f33	          0x4801d0	                            add rax, rdx	       324	dir.c	FUNCTION_12
0x4000f36	        0x488945f8	                mov qword [rbp - 8], rax	       324	dir.c	FUNCTION_12
0x4000f3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       325	dir.c	FUNCTION_12
0x4000f3e	          0x8b4014	            mov eax, dword [rax + 0x14] 	       325	dir.c	FUNCTION_12
0x4000f41	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	       325	dir.c	FUNCTION_12
0x4000f44	          0x8945f4	              mov dword [rbp - 0xc], eax	       325	dir.c	FUNCTION_12
0x4000f47	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       356	dir.c	FUNCTION_12	IF_1
0x4000f4b	          0x8b4018	            mov eax, dword [rax + 0x18] 	       356	dir.c	FUNCTION_12	IF_1
0x4000f4e	            0x85c0	                           test eax, eax	       356	dir.c	FUNCTION_12	IF_1
0x4000f50	            0x744a	                            je 0x4000f9c	       356	dir.c	FUNCTION_12	IF_1
0x4000f52	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       356	dir.c	FUNCTION_12	IF_1
0x4000f56	          0x8b4010	            mov eax, dword [rax + 0x10] 	       356	dir.c	FUNCTION_12	IF_1
0x4000f59	          0x83e010	                           and eax, 0x10	       356	dir.c	FUNCTION_12	IF_1
0x4000f5c	            0x85c0	                           test eax, eax	       356	dir.c	FUNCTION_12	IF_1
0x4000f5e	            0x743c	                            je 0x4000f9c	       356	dir.c	FUNCTION_12	IF_1
0x4000f60	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4000f64	          0x8b4018	            mov eax, dword [rax + 0x18] 	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4000f67	          0x4863d0	                         movsxd rdx, eax	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4000f6a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4000f6d	            0x4898	                                    cdqe	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4000f6f	          0x48f7d8	                                 neg rax	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4000f72	          0x4889c1	                            mov rcx, rax	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4000f75	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4000f79	          0x4801c1	                            add rcx, rax	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4000f7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4000f80	          0x488b00	                    mov rax, qword [rax]	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4000f83	          0x4889ce	                            mov rsi, rcx	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4000f86	          0x4889c7	                            mov rdi, rax	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4000f89	      0xe800000000	                          call 0x4000f8e	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4000f8e	            0x85c0	                           test eax, eax	       356	dir.c	FUNCTION_12	IF_1
0x4000f90	            0x740a	                            je 0x4000f9c	       356	dir.c	FUNCTION_12	IF_1
0x4000f92	      0xb800000000	                              mov eax, 0	       358	dir.c	FUNCTION_12	IF_1
0x4000f97	      0xe9de010000	                           jmp 0x400117a	       358	dir.c	FUNCTION_12	IF_1
0x4000f9c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4000fa0	          0x8b4024	            mov eax, dword [rax + 0x24] 	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4000fa3	            0x85c0	                           test eax, eax	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4000fa5	            0x7423	                            je 0x4000fca	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4000fa7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4000fab	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4000fae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4000fb2	            0x89ce	                            mov esi, ecx	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4000fb4	          0x4889c7	                            mov rdi, rax	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4000fb7	      0xe82ffeffff	                    call sym.match_attrs	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4000fbc	            0x85c0	                           test eax, eax	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4000fbe	            0x750a	                           jne 0x4000fca	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4000fc0	      0xb800000000	                              mov eax, 0	       361	dir.c	FUNCTION_12	IF_2
0x4000fc5	      0xe9b0010000	                           jmp 0x400117a	       361	dir.c	FUNCTION_12	IF_2
0x4000fca	        0x488b45f8	                mov rax, qword [rbp - 8]	       364	dir.c	FUNCTION_12	IF_3
0x4000fce	           0xfb600	                   movzx eax, byte [rax]	       364	dir.c	FUNCTION_12	IF_3
0x4000fd1	            0x84c0	                             test al, al	       364	dir.c	FUNCTION_12	IF_3
0x4000fd3	            0x750a	                           jne 0x4000fdf	       364	dir.c	FUNCTION_12	IF_3
0x4000fd5	      0xb801000000	                              mov eax, 1	       365	dir.c	FUNCTION_12	IF_3
0x4000fda	      0xe99b010000	                           jmp 0x400117a	       365	dir.c	FUNCTION_12	IF_3
0x4000fdf	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4000fe2	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4000fe5	            0x7f65	                            jg 0x400104c	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4000fe7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4000fea	          0x4863c8	                         movsxd rcx, eax	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4000fed	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4000ff1	        0x488b75f8	                mov rsi, qword [rbp - 8]	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4000ff5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4000ff9	          0x4889c7	                            mov rdi, rax	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4000ffc	      0xe8d6f5ffff	                     call sym.ps_strncmp	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4001001	            0x85c0	                           test eax, eax	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4001003	            0x7547	                           jne 0x400104c	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4001005	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       368	dir.c	FUNCTION_12	IF_4	IF_5
0x4001008	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	       368	dir.c	FUNCTION_12	IF_4	IF_5
0x400100b	            0x750a	                           jne 0x4001017	       368	dir.c	FUNCTION_12	IF_4	IF_5
0x400100d	      0xb803000000	                              mov eax, 3	       369	dir.c	FUNCTION_12	IF_4	IF_5
0x4001012	      0xe963010000	                           jmp 0x400117a	       369	dir.c	FUNCTION_12	IF_4	IF_5
0x4001017	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x400101a	            0x4898	                                    cdqe	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x400101c	        0x488d50ff	                      lea rdx, [rax - 1]	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001020	        0x488b45f8	                mov rax, qword [rbp - 8]	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001024	          0x4801d0	                            add rax, rdx	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001027	           0xfb600	                   movzx eax, byte [rax]	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x400102a	            0x3c2f	                            cmp al, 0x2f	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x400102c	            0x7414	                            je 0x4001042	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x400102e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001031	          0x4863d0	                         movsxd rdx, eax	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001034	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001038	          0x4801d0	                            add rax, rdx	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x400103b	           0xfb600	                   movzx eax, byte [rax]	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x400103e	            0x3c2f	                            cmp al, 0x2f	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001040	            0x755e	                           jne 0x40010a0	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001042	      0xb801000000	                              mov eax, 1	       372	dir.c	FUNCTION_12	IF_4	IF_6
0x4001047	      0xe92e010000	                           jmp 0x400117a	       372	dir.c	FUNCTION_12	IF_4	IF_6
0x400104c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x400104f	          0x83e002	                              and eax, 2	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001052	            0x85c0	                           test eax, eax	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001054	            0x744b	                            je 0x40010a1	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001056	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001059	            0x4898	                                    cdqe	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x400105b	        0x488d50ff	                      lea rdx, [rax - 1]	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x400105f	        0x488b45f8	                mov rax, qword [rbp - 8]	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001063	          0x4801d0	                            add rax, rdx	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001066	           0xfb600	                   movzx eax, byte [rax]	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001069	            0x3c2f	                            cmp al, 0x2f	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x400106b	            0x7534	                           jne 0x40010a1	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x400106d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       375	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001070	          0x83e801	                              sub eax, 1	       375	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001073	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001076	            0x7529	                           jne 0x40010a1	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001078	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       376	dir.c	FUNCTION_12	ELSE_1	IF_7	CALL_4
0x400107b	          0x4863c8	                         movsxd rcx, eax	       376	dir.c	FUNCTION_12	ELSE_1	IF_7	CALL_4
0x400107e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       376	dir.c	FUNCTION_12	ELSE_1	IF_7	CALL_4
0x4001082	        0x488b75f8	                mov rsi, qword [rbp - 8]	       376	dir.c	FUNCTION_12	ELSE_1	IF_7	CALL_4
0x4001086	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       376	dir.c	FUNCTION_12	ELSE_1	IF_7	CALL_4
0x400108a	          0x4889c7	                            mov rdi, rax	       376	dir.c	FUNCTION_12	ELSE_1	IF_7	CALL_4
0x400108d	      0xe845f5ffff	                     call sym.ps_strncmp	       376	dir.c	FUNCTION_12	ELSE_1	IF_7	CALL_4
0x4001092	            0x85c0	                           test eax, eax	       375	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001094	            0x750b	                           jne 0x40010a1	       375	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001096	      0xb803000000	                              mov eax, 3	       377	dir.c	FUNCTION_12	ELSE_1	IF_7
0x400109b	      0xe9da000000	                           jmp 0x400117a	       377	dir.c	FUNCTION_12	ELSE_1	IF_7
0x40010a0	              0x90	                                     nop	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x40010a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       379	dir.c	FUNCTION_12	IF_8
0x40010a5	          0x8b501c	            mov edx, dword [rax + 0x1c] 	       379	dir.c	FUNCTION_12	IF_8
0x40010a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       379	dir.c	FUNCTION_12	IF_8
0x40010ac	          0x8b4014	            mov eax, dword [rax + 0x14] 	       379	dir.c	FUNCTION_12	IF_8
0x40010af	            0x39c2	                            cmp edx, eax	       379	dir.c	FUNCTION_12	IF_8
0x40010b1	            0x7d2e	                           jge 0x40010e1	       379	dir.c	FUNCTION_12	IF_8
0x40010b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       381	dir.c	FUNCTION_12	IF_8
0x40010b7	          0x8b401c	            mov eax, dword [rax + 0x1c] 	       381	dir.c	FUNCTION_12	IF_8
0x40010ba	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x40010bd	            0x89c1	                            mov ecx, eax	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x40010bf	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x40010c3	        0x488b75f8	                mov rsi, qword [rbp - 8]	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x40010c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x40010cb	          0x4889c7	                            mov rdi, rax	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x40010ce	      0xe800000000	                          call 0x40010d3	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x40010d3	            0x85c0	                           test eax, eax	       379	dir.c	FUNCTION_12	IF_8
0x40010d5	            0x750a	                           jne 0x40010e1	       379	dir.c	FUNCTION_12	IF_8
0x40010d7	      0xb802000000	                              mov eax, 2	       382	dir.c	FUNCTION_12	IF_8
0x40010dc	      0xe999000000	                           jmp 0x400117a	       382	dir.c	FUNCTION_12	IF_8
0x40010e1	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       385	dir.c	FUNCTION_12	IF_9
0x40010e4	          0x83e004	                              and eax, 4	       385	dir.c	FUNCTION_12	IF_9
0x40010e7	            0x85c0	                           test eax, eax	       385	dir.c	FUNCTION_12	IF_9
0x40010e9	     0xf8486000000	                            je 0x4001175	       385	dir.c	FUNCTION_12	IF_9
0x40010ef	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x40010f2	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x40010f5	            0x7d39	                           jge 0x4001130	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x40010f7	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x40010fa	          0x4863d0	                         movsxd rdx, eax	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x40010fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4001101	          0x4801d0	                            add rax, rdx	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4001104	           0xfb600	                   movzx eax, byte [rax]	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4001107	            0x3c2f	                            cmp al, 0x2f	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4001109	            0x7525	                           jne 0x4001130	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x400110b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       389	dir.c	FUNCTION_12	IF_9	IF_10	CALL_6
0x400110e	          0x4863c8	                         movsxd rcx, eax	       389	dir.c	FUNCTION_12	IF_9	IF_10	CALL_6
0x4001111	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       389	dir.c	FUNCTION_12	IF_9	IF_10	CALL_6
0x4001115	        0x488b75f8	                mov rsi, qword [rbp - 8]	       389	dir.c	FUNCTION_12	IF_9	IF_10	CALL_6
0x4001119	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       389	dir.c	FUNCTION_12	IF_9	IF_10	CALL_6
0x400111d	          0x4889c7	                            mov rdi, rax	       389	dir.c	FUNCTION_12	IF_9	IF_10	CALL_6
0x4001120	      0xe8b2f4ffff	                     call sym.ps_strncmp	       389	dir.c	FUNCTION_12	IF_9	IF_10	CALL_6
0x4001125	            0x85c0	                           test eax, eax	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4001127	            0x7507	                           jne 0x4001130	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4001129	      0xb801000000	                              mov eax, 1	       390	dir.c	FUNCTION_12	IF_9	IF_10
0x400112e	            0xeb4a	                           jmp 0x400117a	       390	dir.c	FUNCTION_12	IF_9	IF_10
0x4001130	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001134	          0x8b501c	            mov edx, dword [rax + 0x1c] 	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001137	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x400113b	          0x8b4014	            mov eax, dword [rax + 0x14] 	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x400113e	            0x39c2	                            cmp edx, eax	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001140	            0x7d2c	                           jge 0x400116e	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001142	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	dir.c	FUNCTION_12	IF_9	IF_11
0x4001146	          0x8b401c	            mov eax, dword [rax + 0x1c] 	       395	dir.c	FUNCTION_12	IF_9	IF_11
0x4001149	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	       395	dir.c	FUNCTION_12	IF_9	IF_11
0x400114c	          0x4863c8	                         movsxd rcx, eax	       394	dir.c	FUNCTION_12	IF_9	IF_11	CALL_7
0x400114f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       394	dir.c	FUNCTION_12	IF_9	IF_11	CALL_7
0x4001153	        0x488b75f8	                mov rsi, qword [rbp - 8]	       394	dir.c	FUNCTION_12	IF_9	IF_11	CALL_7
0x4001157	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       394	dir.c	FUNCTION_12	IF_9	IF_11	CALL_7
0x400115b	          0x4889c7	                            mov rdi, rax	       394	dir.c	FUNCTION_12	IF_9	IF_11	CALL_7
0x400115e	      0xe874f4ffff	                     call sym.ps_strncmp	       394	dir.c	FUNCTION_12	IF_9	IF_11	CALL_7
0x4001163	            0x85c0	                           test eax, eax	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001165	            0x7407	                            je 0x400116e	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001167	      0xb800000000	                              mov eax, 0	       396	dir.c	FUNCTION_12	IF_9	IF_11
0x400116c	            0xeb0c	                           jmp 0x400117a	       396	dir.c	FUNCTION_12	IF_9	IF_11
0x400116e	      0xb801000000	                              mov eax, 1	       407	dir.c	FUNCTION_12	IF_9
0x4001173	            0xeb05	                           jmp 0x400117a	       407	dir.c	FUNCTION_12	IF_9
0x4001175	      0xb800000000	                              mov eax, 0	       410	dir.c	FUNCTION_12
0x400117a	              0xc9	                                   leave	       411	dir.c	FUNCTION_12
0x400117b	              0xc3	                                     ret	       411	dir.c	FUNCTION_12
last_exclude_matching_from_lists	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,1:functions,0:FOR,2	52
0x4002c81	              0x55	                                push rbp	      1117	dir.c	FUNCTION_39
0x4002c82	          0x4889e5	                            mov rbp, rsp	      1117	dir.c	FUNCTION_39
0x4002c85	        0x4883ec50	                           sub rsp, 0x50	      1117	dir.c	FUNCTION_39
0x4002c89	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1117	dir.c	FUNCTION_39
0x4002c8d	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1117	dir.c	FUNCTION_39
0x4002c91	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1117	dir.c	FUNCTION_39
0x4002c95	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      1117	dir.c	FUNCTION_39
0x4002c98	        0x4c8945b8	              mov qword [rbp - 0x48], r8	      1117	dir.c	FUNCTION_39
0x4002c9c	        0x4c894db0	              mov qword [rbp - 0x50], r9	      1117	dir.c	FUNCTION_39
0x4002ca0	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1121	dir.c	FUNCTION_39	FOR_1
0x4002ca7	            0xeb7c	                           jmp 0x4002d25	      1121	dir.c	FUNCTION_39	FOR_1
0x4002ca9	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1122	dir.c	FUNCTION_39	FOR_1
0x4002cac	            0x4898	                                    cdqe	      1122	dir.c	FUNCTION_39	FOR_1
0x4002cae	        0x4883c003	                              add rax, 3	      1122	dir.c	FUNCTION_39	FOR_1
0x4002cb2	        0x48c1e004	                              shl rax, 4	      1122	dir.c	FUNCTION_39	FOR_1
0x4002cb6	          0x4889c2	                            mov rdx, rax	      1122	dir.c	FUNCTION_39	FOR_1
0x4002cb9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1122	dir.c	FUNCTION_39	FOR_1
0x4002cbd	          0x4801d0	                            add rax, rdx	      1122	dir.c	FUNCTION_39	FOR_1
0x4002cc0	        0x488945f0	             mov qword [rbp - 0x10], rax	      1122	dir.c	FUNCTION_39	FOR_1
0x4002cc4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002cc8	            0x8b00	                    mov eax, dword [rax]	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002cca	          0x83e801	                              sub eax, 1	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002ccd	          0x8945ec	             mov dword [rbp - 0x14], eax	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002cd0	            0xeb49	                           jmp 0x4002d1b	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002cd2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1126	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002cd6	        0x488b4008	                mov rax, qword [rax + 8]	      1126	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002cda	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002cdd	          0x4863d2	                         movsxd rdx, edx	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002ce0	        0x48c1e205	                              shl rdx, 5	      1126	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002ce4	        0x4c8d0410	                     lea r8, [rax + rdx]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002ce8	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002cec	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002cf0	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002cf4	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002cf7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002cfb	          0x4989f9	                             mov r9, rdi	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002cfe	          0x4889c7	                            mov rdi, rax	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002d01	      0xe82cfdffff	call sym.last_exclude_matching_from_list	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002d06	        0x488945f8	                mov qword [rbp - 8], rax	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002d0a	      0x48837df800	                  cmp qword [rbp - 8], 0	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002d0f	            0x7406	                            je 0x4002d17	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002d11	        0x488b45f8	                mov rax, qword [rbp - 8]	      1128	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002d15	            0xeb1d	                           jmp 0x4002d34	      1128	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002d17	        0x836dec01	               sub dword [rbp - 0x14], 1	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002d1b	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002d1f	            0x79b1	                           jns 0x4002cd2	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002d21	        0x8345e801	               add dword [rbp - 0x18], 1	      1121	dir.c	FUNCTION_39	FOR_1
0x4002d25	        0x837de802	               cmp dword [rbp - 0x18], 2	      1121	dir.c	FUNCTION_39	FOR_1
0x4002d29	     0xf8e7affffff	                           jle 0x4002ca9	      1121	dir.c	FUNCTION_39	FOR_1
0x4002d2f	      0xb800000000	                              mov eax, 0	      1131	dir.c	FUNCTION_39
0x4002d34	              0xc9	                                   leave	      1132	dir.c	FUNCTION_39
0x4002d35	              0xc3	                                     ret	      1132	dir.c	FUNCTION_39
is_inside_dir	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,3:functions,0:FOR,0	25
0x4005c2e	              0x55	                                push rbp	      2382	dir.c	FUNCTION_76
0x4005c2f	          0x4889e5	                            mov rbp, rsp	      2382	dir.c	FUNCTION_76
0x4005c32	        0x4883ec20	                           sub rsp, 0x20	      2382	dir.c	FUNCTION_76
0x4005c36	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2382	dir.c	FUNCTION_76
0x4005c3a	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2386	dir.c	FUNCTION_76	IF_1
0x4005c3f	            0x7507	                           jne 0x4005c48	      2386	dir.c	FUNCTION_76	IF_1
0x4005c41	      0xb800000000	                              mov eax, 0	      2387	dir.c	FUNCTION_76	IF_1
0x4005c46	            0xeb36	                           jmp 0x4005c7e	      2387	dir.c	FUNCTION_76	IF_1
0x4005c48	      0xe800000000	                          call 0x4005c4d	      2389	dir.c	FUNCTION_76	CALL_1
0x4005c4d	        0x488945f8	                mov qword [rbp - 8], rax	      2389	dir.c	FUNCTION_76	CALL_1
0x4005c51	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2390	dir.c	FUNCTION_76	CALL_2
0x4005c55	        0x488b45f8	                mov rax, qword [rbp - 8]	      2390	dir.c	FUNCTION_76	CALL_2
0x4005c59	          0x4889d6	                            mov rsi, rdx	      2390	dir.c	FUNCTION_76	CALL_2
0x4005c5c	          0x4889c7	                            mov rdi, rax	      2390	dir.c	FUNCTION_76	CALL_2
0x4005c5f	      0xe800000000	                          call 0x4005c64	      2390	dir.c	FUNCTION_76	CALL_2
0x4005c64	            0xf7d0	                                 not eax	      2390	dir.c	FUNCTION_76	CALL_2
0x4005c66	          0xc1e81f	                           shr eax, 0x1f	      2390	dir.c	FUNCTION_76	CALL_2
0x4005c69	           0xfb6c0	                           movzx eax, al	      2390	dir.c	FUNCTION_76	CALL_2
0x4005c6c	          0x8945f4	              mov dword [rbp - 0xc], eax	      2390	dir.c	FUNCTION_76	CALL_2
0x4005c6f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2391	dir.c	FUNCTION_76	CALL_3
0x4005c73	          0x4889c7	                            mov rdi, rax	      2391	dir.c	FUNCTION_76	CALL_3
0x4005c76	      0xe800000000	                          call 0x4005c7b	      2391	dir.c	FUNCTION_76	CALL_3
0x4005c7b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2392	dir.c	FUNCTION_76
0x4005c7e	              0xc9	                                   leave	      2393	dir.c	FUNCTION_76
0x4005c7f	              0xc3	                                     ret	      2393	dir.c	FUNCTION_76
open_cached_dir	SWITCH,0:ELSE,0:WHILE,0:IF,4:DO,0:CALL,6:functions,0:FOR,0	80
0x4004751	              0x55	                                push rbp	      1857	dir.c	FUNCTION_58
0x4004752	          0x4889e5	                            mov rbp, rsp	      1857	dir.c	FUNCTION_58
0x4004755	        0x4883ec40	                           sub rsp, 0x40	      1857	dir.c	FUNCTION_58
0x4004759	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1857	dir.c	FUNCTION_58
0x400475d	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1857	dir.c	FUNCTION_58
0x4004761	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1857	dir.c	FUNCTION_58
0x4004765	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1857	dir.c	FUNCTION_58
0x4004769	        0x4c8945c8	              mov qword [rbp - 0x38], r8	      1857	dir.c	FUNCTION_58
0x400476d	        0x44894dc4	             mov dword [rbp - 0x3c], r9d	      1857	dir.c	FUNCTION_58
0x4004771	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1860	dir.c	FUNCTION_58	CALL_1
0x4004775	      0xba30000000	                           mov edx, 0x30	      1860	dir.c	FUNCTION_58	CALL_1
0x400477a	      0xbe00000000	                              mov esi, 0	      1860	dir.c	FUNCTION_58	CALL_1
0x400477f	          0x4889c7	                            mov rdi, rax	      1860	dir.c	FUNCTION_58	CALL_1
0x4004782	      0xe800000000	                          call 0x4004787	      1860	dir.c	FUNCTION_58	CALL_1
0x4004787	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1861	dir.c	FUNCTION_58
0x400478b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1861	dir.c	FUNCTION_58
0x400478f	        0x48895008	                mov qword [rax + 8], rdx	      1861	dir.c	FUNCTION_58
0x4004793	          0x8b7dc4	             mov edi, dword [rbp - 0x3c]	      1862	dir.c	FUNCTION_58	IF_1	CALL_2
0x4004796	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1862	dir.c	FUNCTION_58	IF_1	CALL_2
0x400479a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1862	dir.c	FUNCTION_58	IF_1	CALL_2
0x400479e	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1862	dir.c	FUNCTION_58	IF_1	CALL_2
0x40047a2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1862	dir.c	FUNCTION_58	IF_1	CALL_2
0x40047a6	          0x4189f8	                            mov r8d, edi	      1862	dir.c	FUNCTION_58	IF_1	CALL_2
0x40047a9	          0x4889c7	                            mov rdi, rax	      1862	dir.c	FUNCTION_58	IF_1	CALL_2
0x40047ac	      0xe82efdffff	               call sym.valid_cached_dir	      1862	dir.c	FUNCTION_58	IF_1	CALL_2
0x40047b1	            0x85c0	                           test eax, eax	      1862	dir.c	FUNCTION_58	IF_1	CALL_2
0x40047b3	            0x740a	                            je 0x40047bf	      1862	dir.c	FUNCTION_58	IF_1	CALL_2
0x40047b5	      0xb800000000	                              mov eax, 0	      1863	dir.c	FUNCTION_58	IF_1
0x40047ba	      0xe9bf000000	                           jmp 0x400487e	      1863	dir.c	FUNCTION_58	IF_1
0x40047bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1864	dir.c	FUNCTION_58
0x40047c3	        0x488b4008	                mov rax, qword [rax + 8]	      1864	dir.c	FUNCTION_58
0x40047c7	          0x4885c0	                           test rax, rax	      1864	dir.c	FUNCTION_58
0x40047ca	            0x740a	                            je 0x40047d6	      1864	dir.c	FUNCTION_58
0x40047cc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1864	dir.c	FUNCTION_58
0x40047d0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1864	dir.c	FUNCTION_58
0x40047d4	            0xeb05	                           jmp 0x40047db	      1864	dir.c	FUNCTION_58
0x40047d6	      0xb800000000	                              mov eax, 0	      1864	dir.c	FUNCTION_58
0x40047db	        0x488945f8	                mov qword [rbp - 8], rax	      1864	dir.c	FUNCTION_58
0x40047df	        0x488b45f8	                mov rax, qword [rbp - 8]	      1865	dir.c	FUNCTION_58	CALL_3
0x40047e3	          0x4889c7	                            mov rdi, rax	      1865	dir.c	FUNCTION_58	CALL_3
0x40047e6	      0xe800000000	                          call 0x40047eb	      1865	dir.c	FUNCTION_58	CALL_3
0x40047eb	          0x4889c2	                            mov rdx, rax	      1865	dir.c	FUNCTION_58	CALL_3
0x40047ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1865	dir.c	FUNCTION_58	CALL_3
0x40047f2	          0x488910	                    mov qword [rax], rdx	      1865	dir.c	FUNCTION_58	CALL_3
0x40047f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1866	dir.c	FUNCTION_58	IF_2
0x40047f9	          0x488b00	                    mov rax, qword [rax]	      1866	dir.c	FUNCTION_58	IF_2
0x40047fc	          0x4885c0	                           test rax, rax	      1866	dir.c	FUNCTION_58	IF_2
0x40047ff	            0x7521	                           jne 0x4004822	      1866	dir.c	FUNCTION_58	IF_2
0x4004801	      0xbf00000000	                              mov edi, 0	      1867	dir.c	FUNCTION_58	CALL_5
0x4004806	      0xe8cfbbffff	                               call sym.	      1867	dir.c	FUNCTION_58	CALL_5
0x400480b	          0x4889c2	                            mov rdx, rax	      1867	dir.c	FUNCTION_58	CALL_5
0x400480e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1867	dir.c	FUNCTION_58	CALL_5
0x4004812	          0x4889c6	                            mov rsi, rax	      1867	dir.c	FUNCTION_58	CALL_5
0x4004815	          0x4889d7	                            mov rdi, rdx	      1867	dir.c	FUNCTION_58	CALL_5
0x4004818	      0xb800000000	                              mov eax, 0	      1867	dir.c	FUNCTION_58	CALL_5
0x400481d	      0xe800000000	                          call 0x4004822	      1867	dir.c	FUNCTION_58	CALL_5
0x4004822	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1868	dir.c	FUNCTION_58	IF_3
0x4004826	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1868	dir.c	FUNCTION_58	IF_3
0x400482d	          0x4885c0	                           test rax, rax	      1868	dir.c	FUNCTION_58	IF_3
0x4004830	            0x7434	                            je 0x4004866	      1868	dir.c	FUNCTION_58	IF_3
0x4004832	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1869	dir.c	FUNCTION_58	IF_3	CALL_6
0x4004836	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1869	dir.c	FUNCTION_58	IF_3	CALL_6
0x400483d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1869	dir.c	FUNCTION_58	IF_3	CALL_6
0x4004841	          0x4889d6	                            mov rsi, rdx	      1869	dir.c	FUNCTION_58	IF_3	CALL_6
0x4004844	          0x4889c7	                            mov rdi, rax	      1869	dir.c	FUNCTION_58	IF_3	CALL_6
0x4004847	      0xe82ed7ffff	           call sym.invalidate_directory	      1869	dir.c	FUNCTION_58	IF_3	CALL_6
0x400484c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1870	dir.c	FUNCTION_58	IF_3
0x4004850	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1870	dir.c	FUNCTION_58	IF_3
0x4004857	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      1870	dir.c	FUNCTION_58	IF_3
0x400485d	          0x83c201	                              add edx, 1	      1870	dir.c	FUNCTION_58	IF_3
0x4004860	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1870	dir.c	FUNCTION_58	IF_3
0x4004866	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1872	dir.c	FUNCTION_58	IF_4
0x400486a	          0x488b00	                    mov rax, qword [rax]	      1872	dir.c	FUNCTION_58	IF_4
0x400486d	          0x4885c0	                           test rax, rax	      1872	dir.c	FUNCTION_58	IF_4
0x4004870	            0x7507	                           jne 0x4004879	      1872	dir.c	FUNCTION_58	IF_4
0x4004872	      0xb8ffffffff	                     mov eax, 0xffffffff	      1873	dir.c	FUNCTION_58	IF_4
0x4004877	            0xeb05	                           jmp 0x400487e	      1873	dir.c	FUNCTION_58	IF_4
0x4004879	      0xb800000000	                              mov eax, 0	      1874	dir.c	FUNCTION_58
0x400487e	              0xc9	                                   leave	      1875	dir.c	FUNCTION_58
0x400487f	              0xc3	                                     ret	      1875	dir.c	FUNCTION_58
invalidate_gitignore	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	16
0x4001f44	              0x55	                                push rbp	       766	dir.c	FUNCTION_26
0x4001f45	          0x4889e5	                            mov rbp, rsp	       766	dir.c	FUNCTION_26
0x4001f48	        0x4883ec10	                           sub rsp, 0x10	       766	dir.c	FUNCTION_26
0x4001f4c	        0x48897df8	                mov qword [rbp - 8], rdi	       766	dir.c	FUNCTION_26
0x4001f50	        0x488975f0	             mov qword [rbp - 0x10], rsi	       766	dir.c	FUNCTION_26
0x4001f54	        0x488b45f8	                mov rax, qword [rbp - 8]	       767	dir.c	FUNCTION_26
0x4001f58	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       767	dir.c	FUNCTION_26
0x4001f5e	          0x8d5001	                      lea edx, [rax + 1]	       767	dir.c	FUNCTION_26
0x4001f61	        0x488b45f8	                mov rax, qword [rbp - 8]	       767	dir.c	FUNCTION_26
0x4001f65	    0x8990ac000000	             mov dword [rax + 0xac], edx	       767	dir.c	FUNCTION_26
0x4001f6b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       768	dir.c	FUNCTION_26	CALL_1
0x4001f6f	          0x4889c7	                            mov rdi, rax	       768	dir.c	FUNCTION_26	CALL_1
0x4001f72	      0xe86bffffff	        call sym.do_invalidate_gitignore	       768	dir.c	FUNCTION_26	CALL_1
0x4001f77	              0x90	                                     nop	       769	dir.c	FUNCTION_26
0x4001f78	              0xc9	                                   leave	       769	dir.c	FUNCTION_26
0x4001f79	              0xc3	                                     ret	       769	dir.c	FUNCTION_26
read_directory	SWITCH,0:ELSE,1:WHILE,0:IF,9:DO,0:CALL,7:functions,0:FOR,1	250
0x400565c	              0x55	                                push rbp	      2263	dir.c	FUNCTION_72
0x400565d	          0x4889e5	                            mov rbp, rsp	      2263	dir.c	FUNCTION_72
0x4005660	        0x4883ec50	                           sub rsp, 0x50	      2263	dir.c	FUNCTION_72
0x4005664	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2263	dir.c	FUNCTION_72
0x4005668	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2263	dir.c	FUNCTION_72
0x400566c	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2263	dir.c	FUNCTION_72
0x4005670	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      2263	dir.c	FUNCTION_72
0x4005673	        0x4c8945b8	              mov qword [rbp - 0x48], r8	      2263	dir.c	FUNCTION_72
0x4005677	      0xe800000000	                          call 0x400567c	      2265	dir.c	FUNCTION_72	CALL_1
0x400567c	        0x488945f0	             mov qword [rbp - 0x10], rax	      2265	dir.c	FUNCTION_72	CALL_1
0x4005680	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4005683	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4005687	            0x89d6	                            mov esi, edx	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4005689	          0x4889c7	                            mov rdi, rax	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x400568c	      0xe800000000	                          call 0x4005691	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4005691	            0x85c0	                           test eax, eax	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4005693	            0x740b	                            je 0x40056a0	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4005695	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2268	dir.c	FUNCTION_72	IF_1
0x4005699	            0x8b00	                    mov eax, dword [rax]	      2268	dir.c	FUNCTION_72	IF_1
0x400569b	      0xe988030000	                           jmp 0x4005a28	      2268	dir.c	FUNCTION_72	IF_1
0x40056a0	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2270	dir.c	FUNCTION_72	CALL_3
0x40056a4	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      2270	dir.c	FUNCTION_72	CALL_3
0x40056a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2270	dir.c	FUNCTION_72	CALL_3
0x40056ab	            0x89ce	                            mov esi, ecx	      2270	dir.c	FUNCTION_72	CALL_3
0x40056ad	          0x4889c7	                            mov rdi, rax	      2270	dir.c	FUNCTION_72	CALL_3
0x40056b0	      0xe854fcffff	       call sym.validate_untracked_cache	      2270	dir.c	FUNCTION_72	CALL_3
0x40056b5	        0x488945f8	                mov qword [rbp - 8], rax	      2270	dir.c	FUNCTION_72	CALL_3
0x40056b9	      0x48837df800	                  cmp qword [rbp - 8], 0	      2271	dir.c	FUNCTION_72	IF_2
0x40056be	            0x750f	                           jne 0x40056cf	      2271	dir.c	FUNCTION_72	IF_2
0x40056c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2276	dir.c	FUNCTION_72	IF_2
0x40056c4	    0x48c780880000	               mov qword [rax + 0x88], 0	      2276	dir.c	FUNCTION_72	IF_2
0x40056cf	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40056d3	            0x7422	                            je 0x40056f7	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40056d5	        0x488b7db8	             mov rdi, qword [rbp - 0x48]	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40056d9	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40056dc	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40056e0	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40056e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40056e8	          0x4989f8	                             mov r8, rdi	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40056eb	          0x4889c7	                            mov rdi, rax	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40056ee	      0xe8dbf7ffff	             call sym.treat_leading_path	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40056f3	            0x85c0	                           test eax, eax	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40056f5	            0x742d	                            je 0x4005724	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40056f7	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2278	dir.c	FUNCTION_72	CALL_5
0x40056fb	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      2278	dir.c	FUNCTION_72	CALL_5
0x40056fe	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2278	dir.c	FUNCTION_72	CALL_5
0x4005702	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      2278	dir.c	FUNCTION_72	CALL_5
0x4005706	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2278	dir.c	FUNCTION_72	CALL_5
0x400570a	          0xff75b8	                 push qword [rbp - 0x48]	      2278	dir.c	FUNCTION_72	CALL_5
0x400570d	            0x6a00	                                  push 0	      2278	dir.c	FUNCTION_72	CALL_5
0x400570f	    0x41b900000000	                              mov r9d, 0	      2278	dir.c	FUNCTION_72	CALL_5
0x4005715	          0x4989f8	                             mov r8, rdi	      2278	dir.c	FUNCTION_72	CALL_5
0x4005718	          0x4889c7	                            mov rdi, rax	      2278	dir.c	FUNCTION_72	CALL_5
0x400571b	      0xe804f3ffff	       call sym.read_directory_recursive	      2278	dir.c	FUNCTION_72	CALL_5
0x4005720	        0x4883c410	                           add rsp, 0x10	      2278	dir.c	FUNCTION_72	CALL_5
0x4005724	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2279	dir.c	FUNCTION_72
0x4005728	            0x8b00	                    mov eax, dword [rax]	      2279	dir.c	FUNCTION_72
0x400572a	          0x4863f0	                         movsxd rsi, eax	      2279	dir.c	FUNCTION_72
0x400572d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2279	dir.c	FUNCTION_72
0x4005731	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2279	dir.c	FUNCTION_72
0x4005735	      0xb900000000	                              mov ecx, 0	      2279	dir.c	FUNCTION_72
0x400573a	      0xba08000000	                              mov edx, 8	      2279	dir.c	FUNCTION_72
0x400573f	          0x4889c7	                            mov rdi, rax	      2279	dir.c	FUNCTION_72
0x4005742	      0xe873aaffff	                     call sym.sane_qsort	      2279	dir.c	FUNCTION_72
0x4005747	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2280	dir.c	FUNCTION_72
0x400574b	          0x8b4008	                mov eax, dword [rax + 8]	      2280	dir.c	FUNCTION_72
0x400574e	          0x4863f0	                         movsxd rsi, eax	      2280	dir.c	FUNCTION_72
0x4005751	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2280	dir.c	FUNCTION_72
0x4005755	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2280	dir.c	FUNCTION_72
0x4005759	      0xb900000000	                              mov ecx, 0	      2280	dir.c	FUNCTION_72
0x400575e	      0xba08000000	                              mov edx, 8	      2280	dir.c	FUNCTION_72
0x4005763	          0x4889c7	                            mov rdi, rax	      2280	dir.c	FUNCTION_72
0x4005766	      0xe84faaffff	                     call sym.sane_qsort	      2280	dir.c	FUNCTION_72
0x400576b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2287	dir.c	FUNCTION_72	IF_4
0x400576f	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2287	dir.c	FUNCTION_72	IF_4
0x4005772	          0x83e020	                           and eax, 0x20	      2287	dir.c	FUNCTION_72	IF_4
0x4005775	            0x85c0	                           test eax, eax	      2287	dir.c	FUNCTION_72	IF_4
0x4005777	     0xf8403010000	                            je 0x4005880	      2287	dir.c	FUNCTION_72	IF_4
0x400577d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2288	dir.c	FUNCTION_72	IF_4
0x4005781	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2288	dir.c	FUNCTION_72	IF_4
0x4005784	      0x2580000000	                           and eax, 0x80	      2288	dir.c	FUNCTION_72	IF_4
0x4005789	            0x85c0	                           test eax, eax	      2287	dir.c	FUNCTION_72	IF_4
0x400578b	     0xf85ef000000	                           jne 0x4005880	      2287	dir.c	FUNCTION_72	IF_4
0x4005791	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4005798	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x400579b	          0x8945e8	             mov dword [rbp - 0x18], eax	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x400579e	      0xe9c5000000	                           jmp 0x4005868	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40057a3	        0x837de800	               cmp dword [rbp - 0x18], 0	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40057a7	     0xf8481000000	                            je 0x400582e	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40057ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057b1	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057b5	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057b8	          0x4863d2	                         movsxd rdx, edx	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057bb	        0x48c1e203	                              shl rdx, 3	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057bf	          0x4801d0	                            add rax, rdx	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057c2	          0x488b10	                    mov rdx, qword [rax]	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057c9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057cd	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057d0	          0x4863c9	                         movsxd rcx, ecx	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057d3	        0x48c1e103	                              shl rcx, 3	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057d7	        0x4883e908	                              sub rcx, 8	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057db	          0x4801c8	                            add rax, rcx	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057de	          0x488b00	                    mov rax, qword [rax]	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057e1	          0x4889d6	                            mov rsi, rdx	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057e4	          0x4889c7	                            mov rdi, rax	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057e7	      0xe800000000	                          call 0x40057ec	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40057ec	            0x85c0	                           test eax, eax	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40057ee	            0x743e	                            je 0x400582e	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40057f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40057f4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40057f8	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40057fb	          0x4863d2	                         movsxd rdx, edx	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40057fe	        0x48c1e203	                              shl rdx, 3	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4005802	          0x4801d0	                            add rax, rdx	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4005805	          0x488b00	                    mov rax, qword [rax]	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4005808	          0x4889c7	                            mov rdi, rax	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x400580b	      0xe800000000	                          call 0x4005810	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4005810	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4005814	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4005818	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x400581b	          0x4863d2	                         movsxd rdx, edx	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x400581e	        0x48c1e203	                              shl rdx, 3	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4005822	          0x4801d0	                            add rax, rdx	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4005825	    0x48c700000000	                      mov qword [rax], 0	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x400582c	            0xeb36	                           jmp 0x4005864	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x400582e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x4005832	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x4005836	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x4005839	          0x8d5001	                      lea edx, [rax + 1]	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x400583c	          0x8955e8	             mov dword [rbp - 0x18], edx	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x400583f	            0x4898	                                    cdqe	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x4005841	        0x48c1e003	                              shl rax, 3	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x4005845	        0x488d1401	                    lea rdx, [rcx + rax]	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x4005849	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x400584d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x4005851	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x4005854	          0x4863c9	                         movsxd rcx, ecx	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x4005857	        0x48c1e103	                              shl rcx, 3	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x400585b	          0x4801c8	                            add rax, rcx	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x400585e	          0x488b00	                    mov rax, qword [rax]	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x4005861	          0x488902	                    mov qword [rdx], rax	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x4005864	        0x8345ec01	               add dword [rbp - 0x14], 1	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4005868	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x400586c	            0x8b00	                    mov eax, dword [rax]	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x400586e	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4005871	     0xf8f2cffffff	                            jg 0x40057a3	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4005877	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2301	dir.c	FUNCTION_72	IF_4
0x400587b	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      2301	dir.c	FUNCTION_72	IF_4
0x400587e	            0x8910	                    mov dword [rax], edx	      2301	dir.c	FUNCTION_72	IF_4
0x4005880	      0xbf00000000	                              mov edi, 0	      2304	dir.c	FUNCTION_72
0x4005885	      0xe8b4abffff	                  call sym.trace_pass_fl	      2304	dir.c	FUNCTION_72
0x400588a	            0x85c0	                           test eax, eax	      2304	dir.c	FUNCTION_72
0x400588c	            0x7432	                            je 0x40058c0	      2304	dir.c	FUNCTION_72
0x400588e	      0xe800000000	                          call 0x4005893	      2304	dir.c	FUNCTION_72
0x4005893	        0x482b45f0	             sub rax, qword [rbp - 0x10]	      2304	dir.c	FUNCTION_72
0x4005897	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2304	dir.c	FUNCTION_72
0x400589b	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      2304	dir.c	FUNCTION_72
0x400589e	          0x4989c9	                             mov r9, rcx	      2304	dir.c	FUNCTION_72
0x40058a1	          0x4189d0	                            mov r8d, edx	      2304	dir.c	FUNCTION_72
0x40058a4	      0xb900000000	                              mov ecx, 0	      2304	dir.c	FUNCTION_72
0x40058a9	          0x4889c2	                            mov rdx, rax	      2304	dir.c	FUNCTION_72
0x40058ac	      0xbe00090000	                          mov esi, 0x900	      2304	dir.c	FUNCTION_72
0x40058b1	      0xbf00000000	                              mov edi, 0	      2304	dir.c	FUNCTION_72
0x40058b6	      0xb800000000	                              mov eax, 0	      2304	dir.c	FUNCTION_72
0x40058bb	      0xe800000000	                          call 0x40058c0	      2304	dir.c	FUNCTION_72
0x40058c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2305	dir.c	FUNCTION_72	IF_6
0x40058c4	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2305	dir.c	FUNCTION_72	IF_6
0x40058cb	          0x4885c0	                           test rax, rax	      2305	dir.c	FUNCTION_72	IF_6
0x40058ce	     0xf844e010000	                            je 0x4005a22	      2305	dir.c	FUNCTION_72	IF_6
0x40058d4	    0x8b0500000000	            mov eax, dword [0x040058da] 	      2309	dir.c	FUNCTION_72	IF_6	IF_7
0x40058da	            0x85c0	                           test eax, eax	      2309	dir.c	FUNCTION_72	IF_6	IF_7
0x40058dc	            0x7915	                           jns 0x40058f3	      2309	dir.c	FUNCTION_72	IF_6	IF_7
0x40058de	      0xbe00000000	                              mov esi, 0	      2311	dir.c	FUNCTION_72	IF_6	CALL_7
0x40058e3	      0xbf00000000	                              mov edi, 0	      2311	dir.c	FUNCTION_72	IF_6	CALL_7
0x40058e8	      0xe800000000	                          call 0x40058ed	      2311	dir.c	FUNCTION_72	IF_6	CALL_7
0x40058ed	    0x890500000000	            mov dword [0x040058f3], eax 	      2310	dir.c	FUNCTION_72	IF_6	IF_7
0x40058f3	      0xbf00000000	                              mov edi, 0	      2312	dir.c	FUNCTION_72	IF_6
0x40058f8	      0xe841abffff	                  call sym.trace_pass_fl	      2312	dir.c	FUNCTION_72	IF_6
0x40058fd	            0x85c0	                           test eax, eax	      2312	dir.c	FUNCTION_72	IF_6
0x40058ff	            0x746e	                            je 0x400596f	      2312	dir.c	FUNCTION_72	IF_6
0x4005901	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2312	dir.c	FUNCTION_72	IF_6
0x4005905	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2312	dir.c	FUNCTION_72	IF_6
0x400590c	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      2312	dir.c	FUNCTION_72	IF_6
0x4005912	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2312	dir.c	FUNCTION_72	IF_6
0x4005916	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2312	dir.c	FUNCTION_72	IF_6
0x400591d	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      2312	dir.c	FUNCTION_72	IF_6
0x4005923	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2312	dir.c	FUNCTION_72	IF_6
0x4005927	    0x488b89880000	            mov rcx, qword [rcx + 0x88] 	      2312	dir.c	FUNCTION_72	IF_6
0x400592e	    0x8bb1ac000000	            mov esi, dword [rcx + 0xac] 	      2312	dir.c	FUNCTION_72	IF_6
0x4005934	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2312	dir.c	FUNCTION_72	IF_6
0x4005938	    0x488b89880000	            mov rcx, qword [rcx + 0x88] 	      2312	dir.c	FUNCTION_72	IF_6
0x400593f	    0x8b89a8000000	            mov ecx, dword [rcx + 0xa8] 	      2312	dir.c	FUNCTION_72	IF_6
0x4005945	              0x52	                                push rdx	      2312	dir.c	FUNCTION_72	IF_6
0x4005946	              0x50	                                push rax	      2312	dir.c	FUNCTION_72	IF_6
0x4005947	          0x4189f1	                            mov r9d, esi	      2312	dir.c	FUNCTION_72	IF_6
0x400594a	          0x4189c8	                            mov r8d, ecx	      2312	dir.c	FUNCTION_72	IF_6
0x400594d	      0xb900000000	                              mov ecx, 0	      2312	dir.c	FUNCTION_72	IF_6
0x4005952	      0xba00000000	                              mov edx, 0	      2312	dir.c	FUNCTION_72	IF_6
0x4005957	      0xbe10090000	                          mov esi, 0x910	      2312	dir.c	FUNCTION_72	IF_6
0x400595c	      0xbf00000000	                              mov edi, 0	      2312	dir.c	FUNCTION_72	IF_6
0x4005961	      0xb800000000	                              mov eax, 0	      2312	dir.c	FUNCTION_72	IF_6
0x4005966	      0xe800000000	                          call 0x400596b	      2312	dir.c	FUNCTION_72	IF_6
0x400596b	        0x4883c410	                           add rsp, 0x10	      2312	dir.c	FUNCTION_72	IF_6
0x400596f	    0x8b0500000000	            mov eax, dword [0x04005975] 	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x4005975	            0x85c0	                           test eax, eax	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x4005977	            0x746c	                            je 0x40059e5	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x4005979	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2322	dir.c	FUNCTION_72	IF_6	IF_8
0x400597d	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      2322	dir.c	FUNCTION_72	IF_6	IF_8
0x4005984	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2322	dir.c	FUNCTION_72	IF_6	IF_8
0x4005988	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      2322	dir.c	FUNCTION_72	IF_6	IF_8
0x400598f	          0x4839c2	                            cmp rdx, rax	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x4005992	            0x7551	                           jne 0x40059e5	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x4005994	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2323	dir.c	FUNCTION_72	IF_6	IF_8
0x4005998	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2323	dir.c	FUNCTION_72	IF_6	IF_8
0x400599f	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2323	dir.c	FUNCTION_72	IF_6	IF_8
0x40059a5	            0x85c0	                           test eax, eax	      2322	dir.c	FUNCTION_72	IF_6	IF_8
0x40059a7	            0x752a	                           jne 0x40059d3	      2322	dir.c	FUNCTION_72	IF_6	IF_8
0x40059a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2324	dir.c	FUNCTION_72	IF_6	IF_8
0x40059ad	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2324	dir.c	FUNCTION_72	IF_6	IF_8
0x40059b4	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2324	dir.c	FUNCTION_72	IF_6	IF_8
0x40059ba	            0x85c0	                           test eax, eax	      2323	dir.c	FUNCTION_72	IF_6	IF_8
0x40059bc	            0x7515	                           jne 0x40059d3	      2323	dir.c	FUNCTION_72	IF_6	IF_8
0x40059be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2325	dir.c	FUNCTION_72	IF_6	IF_8
0x40059c2	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2325	dir.c	FUNCTION_72	IF_6	IF_8
0x40059c9	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      2325	dir.c	FUNCTION_72	IF_6	IF_8
0x40059cf	            0x85c0	                           test eax, eax	      2324	dir.c	FUNCTION_72	IF_6	IF_8
0x40059d1	            0x7412	                            je 0x40059e5	      2324	dir.c	FUNCTION_72	IF_6	IF_8
0x40059d3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2326	dir.c	FUNCTION_72	IF_6	IF_8
0x40059d7	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2326	dir.c	FUNCTION_72	IF_6	IF_8
0x40059da	             0xc80	                             or al, 0x80	      2326	dir.c	FUNCTION_72	IF_6	IF_8
0x40059dc	            0x89c2	                            mov edx, eax	      2326	dir.c	FUNCTION_72	IF_6	IF_8
0x40059de	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2326	dir.c	FUNCTION_72	IF_6	IF_8
0x40059e2	          0x895014	             mov dword [rax + 0x14], edx	      2326	dir.c	FUNCTION_72	IF_6	IF_8
0x40059e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x40059e9	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x40059f0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x40059f4	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x40059fb	          0x4839c2	                            cmp rdx, rax	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x40059fe	            0x7422	                            je 0x4005a22	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x4005a00	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x4005a04	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x4005a0b	          0x4889c7	                            mov rdi, rax	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x4005a0e	      0xe800000000	                          call 0x4005a13	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x4005a13	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x4005a17	    0x48c780880000	               mov qword [rax + 0x88], 0	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x4005a22	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2331	dir.c	FUNCTION_72
0x4005a26	            0x8b00	                    mov eax, dword [rax]	      2331	dir.c	FUNCTION_72
0x4005a28	              0xc9	                                   leave	      2332	dir.c	FUNCTION_72
0x4005a29	              0xc3	                                     ret	      2332	dir.c	FUNCTION_72
directory_exists_in_index_icase	SWITCH,0:ELSE,0:WHILE,0:IF,2:DO,0:CALL,2:functions,0:FOR,0	35
0x40037f4	              0x55	                                push rbp	      1372	dir.c	FUNCTION_46
0x40037f5	          0x4889e5	                            mov rbp, rsp	      1372	dir.c	FUNCTION_46
0x40037f8	        0x4883ec30	                           sub rsp, 0x30	      1372	dir.c	FUNCTION_46
0x40037fc	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1372	dir.c	FUNCTION_46
0x4003800	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1372	dir.c	FUNCTION_46
0x4003804	          0x8955dc	             mov dword [rbp - 0x24], edx	      1372	dir.c	FUNCTION_46
0x4003807	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1375	dir.c	FUNCTION_46	IF_1	CALL_1
0x400380a	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1375	dir.c	FUNCTION_46	IF_1	CALL_1
0x400380e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1375	dir.c	FUNCTION_46	IF_1	CALL_1
0x4003812	          0x4889ce	                            mov rsi, rcx	      1375	dir.c	FUNCTION_46	IF_1	CALL_1
0x4003815	          0x4889c7	                            mov rdi, rax	      1375	dir.c	FUNCTION_46	IF_1	CALL_1
0x4003818	      0xe800000000	                          call 0x400381d	      1375	dir.c	FUNCTION_46	IF_1	CALL_1
0x400381d	            0x85c0	                           test eax, eax	      1375	dir.c	FUNCTION_46	IF_1	CALL_1
0x400381f	            0x7407	                            je 0x4003828	      1375	dir.c	FUNCTION_46	IF_1	CALL_1
0x4003821	      0xb801000000	                              mov eax, 1	      1376	dir.c	FUNCTION_46	IF_1
0x4003826	            0xeb43	                           jmp 0x400386b	      1376	dir.c	FUNCTION_46	IF_1
0x4003828	    0x8b0d00000000	            mov ecx, dword [0x0400382e] 	      1378	dir.c	FUNCTION_46	CALL_2
0x400382e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1378	dir.c	FUNCTION_46	CALL_2
0x4003831	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1378	dir.c	FUNCTION_46	CALL_2
0x4003835	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1378	dir.c	FUNCTION_46	CALL_2
0x4003839	          0x4889c7	                            mov rdi, rax	      1378	dir.c	FUNCTION_46	CALL_2
0x400383c	      0xe800000000	                          call 0x4003841	      1378	dir.c	FUNCTION_46	CALL_2
0x4003841	        0x488945f8	                mov qword [rbp - 8], rax	      1378	dir.c	FUNCTION_46	CALL_2
0x4003845	      0x48837df800	                  cmp qword [rbp - 8], 0	      1379	dir.c	FUNCTION_46	IF_2
0x400384a	            0x741a	                            je 0x4003866	      1379	dir.c	FUNCTION_46	IF_2
0x400384c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1379	dir.c	FUNCTION_46	IF_2
0x4003850	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1379	dir.c	FUNCTION_46	IF_2
0x4003853	      0x2500f00000	                         and eax, 0xf000	      1379	dir.c	FUNCTION_46	IF_2
0x4003858	      0x3d00e00000	                         cmp eax, 0xe000	      1379	dir.c	FUNCTION_46	IF_2
0x400385d	            0x7507	                           jne 0x4003866	      1379	dir.c	FUNCTION_46	IF_2
0x400385f	      0xb802000000	                              mov eax, 2	      1380	dir.c	FUNCTION_46	IF_2
0x4003864	            0xeb05	                           jmp 0x400386b	      1380	dir.c	FUNCTION_46	IF_2
0x4003866	      0xb800000000	                              mov eax, 0	      1382	dir.c	FUNCTION_46
0x400386b	              0xc9	                                   leave	      1383	dir.c	FUNCTION_46
0x400386c	              0xc3	                                     ret	      1383	dir.c	FUNCTION_46
strbuf_avail	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,0:functions,0:FOR,0	18
0x4000215	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_131
0x4000216	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_131
0x4000219	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_131
0x400021d	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_131
0x4000221	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_131
0x4000224	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_131
0x4000227	            0x741b	                            je 0x4000244	       141	strbuf.h	FUNCTION_131
0x4000229	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_131
0x400022d	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_131
0x4000230	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_131
0x4000234	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_131
0x4000238	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_131
0x400023b	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_131
0x400023e	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_131
0x4000242	            0xeb05	                           jmp 0x4000249	       141	strbuf.h	FUNCTION_131
0x4000244	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_131
0x4000249	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_131
0x400024a	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_131
clear_directory	SWITCH,0:ELSE,0:WHILE,1:IF,1:DO,0:CALL,5:functions,0:FOR,2	65
0x4006258	              0x55	                                push rbp	      2540	dir.c	FUNCTION_82
0x4006259	          0x4889e5	                            mov rbp, rsp	      2540	dir.c	FUNCTION_82
0x400625c	        0x4883ec40	                           sub rsp, 0x40	      2540	dir.c	FUNCTION_82
0x4006260	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2540	dir.c	FUNCTION_82
0x4006264	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      2546	dir.c	FUNCTION_82	FOR_1
0x400626b	      0xe982000000	                           jmp 0x40062f2	      2546	dir.c	FUNCTION_82	FOR_1
0x4006270	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2547	dir.c	FUNCTION_82	FOR_1
0x4006273	            0x4898	                                    cdqe	      2547	dir.c	FUNCTION_82	FOR_1
0x4006275	        0x4883c003	                              add rax, 3	      2547	dir.c	FUNCTION_82	FOR_1
0x4006279	        0x48c1e004	                              shl rax, 4	      2547	dir.c	FUNCTION_82	FOR_1
0x400627d	          0x4889c2	                            mov rdx, rax	      2547	dir.c	FUNCTION_82	FOR_1
0x4006280	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2547	dir.c	FUNCTION_82	FOR_1
0x4006284	          0x4801d0	                            add rax, rdx	      2547	dir.c	FUNCTION_82	FOR_1
0x4006287	        0x488945e8	             mov qword [rbp - 0x18], rax	      2547	dir.c	FUNCTION_82	FOR_1
0x400628b	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4006292	            0xeb3f	                           jmp 0x40062d3	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4006294	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2549	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4006298	        0x488b4008	                mov rax, qword [rax + 8]	      2549	dir.c	FUNCTION_82	FOR_1	FOR_2
0x400629c	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2549	dir.c	FUNCTION_82	FOR_1	FOR_2
0x400629f	          0x4863d2	                         movsxd rdx, edx	      2549	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40062a2	        0x48c1e205	                              shl rdx, 5	      2549	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40062a6	          0x4801d0	                            add rax, rdx	      2549	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40062a9	        0x488945f0	             mov qword [rbp - 0x10], rax	      2549	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40062ad	        0x837dd801	               cmp dword [rbp - 0x28], 1	      2550	dir.c	FUNCTION_82	FOR_1	FOR_2	IF_1
0x40062b1	            0x7510	                           jne 0x40062c3	      2550	dir.c	FUNCTION_82	FOR_1	FOR_2	IF_1
0x40062b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2551	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_1
0x40062b7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2551	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_1
0x40062bb	          0x4889c7	                            mov rdi, rax	      2551	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_1
0x40062be	      0xe800000000	                          call 0x40062c3	      2551	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_1
0x40062c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2552	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_2
0x40062c7	          0x4889c7	                            mov rdi, rax	      2552	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_2
0x40062ca	      0xe800000000	                          call 0x40062cf	      2552	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_2
0x40062cf	        0x8345dc01	               add dword [rbp - 0x24], 1	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40062d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40062d7	            0x8b00	                    mov eax, dword [rax]	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40062d9	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40062dc	            0x7fb6	                            jg 0x4006294	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x40062de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2554	dir.c	FUNCTION_82	FOR_1	CALL_3
0x40062e2	        0x488b4008	                mov rax, qword [rax + 8]	      2554	dir.c	FUNCTION_82	FOR_1	CALL_3
0x40062e6	          0x4889c7	                            mov rdi, rax	      2554	dir.c	FUNCTION_82	FOR_1	CALL_3
0x40062e9	      0xe800000000	                          call 0x40062ee	      2554	dir.c	FUNCTION_82	FOR_1	CALL_3
0x40062ee	        0x8345d801	               add dword [rbp - 0x28], 1	      2546	dir.c	FUNCTION_82	FOR_1
0x40062f2	        0x837dd802	               cmp dword [rbp - 0x28], 2	      2546	dir.c	FUNCTION_82	FOR_1
0x40062f6	     0xf8e74ffffff	                           jle 0x4006270	      2546	dir.c	FUNCTION_82	FOR_1
0x40062fc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2557	dir.c	FUNCTION_82
0x4006300	        0x488b4060	            mov rax, qword [rax + 0x60] 	      2557	dir.c	FUNCTION_82
0x4006304	        0x488945e0	             mov qword [rbp - 0x20], rax	      2557	dir.c	FUNCTION_82
0x4006308	            0xeb1f	                           jmp 0x4006329	      2558	dir.c	FUNCTION_82	WHILE_1
0x400630a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2559	dir.c	FUNCTION_82	WHILE_1
0x400630e	          0x488b00	                    mov rax, qword [rax]	      2559	dir.c	FUNCTION_82	WHILE_1
0x4006311	        0x488945f8	                mov qword [rbp - 8], rax	      2559	dir.c	FUNCTION_82	WHILE_1
0x4006315	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2560	dir.c	FUNCTION_82	WHILE_1	CALL_4
0x4006319	          0x4889c7	                            mov rdi, rax	      2560	dir.c	FUNCTION_82	WHILE_1	CALL_4
0x400631c	      0xe800000000	                          call 0x4006321	      2560	dir.c	FUNCTION_82	WHILE_1	CALL_4
0x4006321	        0x488b45f8	                mov rax, qword [rbp - 8]	      2561	dir.c	FUNCTION_82	WHILE_1
0x4006325	        0x488945e0	             mov qword [rbp - 0x20], rax	      2561	dir.c	FUNCTION_82	WHILE_1
0x4006329	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2558	dir.c	FUNCTION_82	WHILE_1
0x400632e	            0x75da	                           jne 0x400630a	      2558	dir.c	FUNCTION_82	WHILE_1
0x4006330	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2563	dir.c	FUNCTION_82	CALL_5
0x4006334	        0x4883c070	                           add rax, 0x70	      2563	dir.c	FUNCTION_82	CALL_5
0x4006338	          0x4889c7	                            mov rdi, rax	      2563	dir.c	FUNCTION_82	CALL_5
0x400633b	      0xe800000000	                          call 0x4006340	      2563	dir.c	FUNCTION_82	CALL_5
0x4006340	              0x90	                                     nop	      2564	dir.c	FUNCTION_82
0x4006341	              0xc9	                                   leave	      2564	dir.c	FUNCTION_82
0x4006342	              0xc3	                                     ret	      2564	dir.c	FUNCTION_82
add_excludes_from_file_to_list	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	19
0x4002543	              0x55	                                push rbp	       901	dir.c	FUNCTION_30
0x4002544	          0x4889e5	                            mov rbp, rsp	       901	dir.c	FUNCTION_30
0x4002547	        0x4883ec30	                           sub rsp, 0x30	       901	dir.c	FUNCTION_30
0x400254b	        0x48897df8	                mov qword [rbp - 8], rdi	       901	dir.c	FUNCTION_30
0x400254f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       901	dir.c	FUNCTION_30
0x4002553	          0x8955ec	             mov dword [rbp - 0x14], edx	       901	dir.c	FUNCTION_30
0x4002556	        0x48894de0	             mov qword [rbp - 0x20], rcx	       901	dir.c	FUNCTION_30
0x400255a	        0x4c8945d8	              mov qword [rbp - 0x28], r8	       901	dir.c	FUNCTION_30
0x400255e	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	       902	dir.c	FUNCTION_30	CALL_1
0x4002562	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       902	dir.c	FUNCTION_30	CALL_1
0x4002566	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       902	dir.c	FUNCTION_30	CALL_1
0x4002569	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       902	dir.c	FUNCTION_30	CALL_1
0x400256d	        0x488b45f8	                mov rax, qword [rbp - 8]	       902	dir.c	FUNCTION_30	CALL_1
0x4002571	    0x41b900000000	                              mov r9d, 0	       902	dir.c	FUNCTION_30	CALL_1
0x4002577	          0x4989f8	                             mov r8, rdi	       902	dir.c	FUNCTION_30	CALL_1
0x400257a	          0x4889c7	                            mov rdi, rax	       902	dir.c	FUNCTION_30	CALL_1
0x400257d	      0xe882faffff	                   call sym.add_excludes	       902	dir.c	FUNCTION_30	CALL_1
0x4002582	              0xc9	                                   leave	       903	dir.c	FUNCTION_30
0x4002583	              0xc3	                                     ret	       903	dir.c	FUNCTION_30
simple_length	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,0:functions,0:FOR,1	22
0x40016ea	              0x55	                                push rbp	       574	dir.c	FUNCTION_17
0x40016eb	          0x4889e5	                            mov rbp, rsp	       574	dir.c	FUNCTION_17
0x40016ee	        0x48897de8	             mov qword [rbp - 0x18], rdi	       574	dir.c	FUNCTION_17
0x40016f2	    0xc745fcffffff	        mov dword [rbp - 4], 0xffffffff 	       575	dir.c	FUNCTION_17
0x40016f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       578	dir.c	FUNCTION_17	FOR_1
0x40016fd	        0x488d5001	                      lea rdx, [rax + 1]	       578	dir.c	FUNCTION_17	FOR_1
0x4001701	        0x488955e8	             mov qword [rbp - 0x18], rdx	       578	dir.c	FUNCTION_17	FOR_1
0x4001705	           0xfb600	                   movzx eax, byte [rax]	       578	dir.c	FUNCTION_17	FOR_1
0x4001708	          0x8845fb	                  mov byte [rbp - 5], al	       578	dir.c	FUNCTION_17	FOR_1
0x400170b	        0x8345fc01	                  add dword [rbp - 4], 1	       579	dir.c	FUNCTION_17	FOR_1
0x400170f	        0x807dfb00	                   cmp byte [rbp - 5], 0	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x4001713	            0x7417	                            je 0x400172c	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x4001715	         0xfb645fb	               movzx eax, byte [rbp - 5]	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x4001719	            0x4898	                                    cdqe	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x400171b	     0xfb680000000	                   movzx eax, byte [rax]	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x4001722	           0xfb6c0	                           movzx eax, al	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x4001725	          0x83e008	                              and eax, 8	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x4001728	            0x85c0	                           test eax, eax	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x400172a	            0x74cd	                            je 0x40016f9	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x400172c	          0x8b45fc	                mov eax, dword [rbp - 4]	       581	dir.c	FUNCTION_17	FOR_1	IF_1
0x400172f	              0x5d	                                 pop rbp	       583	dir.c	FUNCTION_17
0x4001730	              0xc3	                                     ret	       583	dir.c	FUNCTION_17
add_untracked_cache	SWITCH,0:ELSE,1:WHILE,0:IF,2:DO,0:CALL,4:functions,0:FOR,0	28
0x4005253	              0x55	                                push rbp	      2151	dir.c	FUNCTION_69
0x4005254	          0x4889e5	                            mov rbp, rsp	      2151	dir.c	FUNCTION_69
0x4005257	        0x4883ec10	                           sub rsp, 0x10	      2151	dir.c	FUNCTION_69
0x400525b	        0x48897df8	                mov qword [rbp - 8], rdi	      2151	dir.c	FUNCTION_69
0x400525f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2152	dir.c	FUNCTION_69	IF_1
0x4005263	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      2152	dir.c	FUNCTION_69	IF_1
0x400526a	          0x4885c0	                           test rax, rax	      2152	dir.c	FUNCTION_69	IF_1
0x400526d	            0x750e	                           jne 0x400527d	      2152	dir.c	FUNCTION_69	IF_1
0x400526f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2153	dir.c	FUNCTION_69	IF_1	CALL_1
0x4005273	          0x4889c7	                            mov rdi, rax	      2153	dir.c	FUNCTION_69	IF_1	CALL_1
0x4005276	      0xe85affffff	            call sym.new_untracked_cache	      2153	dir.c	FUNCTION_69	IF_1	CALL_1
0x400527b	            0xeb36	                           jmp 0x40052b3	      2160	dir.c	FUNCTION_69
0x400527d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2155	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_2
0x4005281	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      2155	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_2
0x4005288	          0x4889c7	                            mov rdi, rax	      2155	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_2
0x400528b	      0xe8bdfeffff	             call sym.ident_in_untracked	      2155	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_2
0x4005290	            0x85c0	                           test eax, eax	      2155	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_2
0x4005292	            0x751f	                           jne 0x40052b3	      2155	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_2
0x4005294	        0x488b45f8	                mov rax, qword [rbp - 8]	      2156	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_3
0x4005298	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      2156	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_3
0x400529f	          0x4889c7	                            mov rdi, rax	      2156	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_3
0x40052a2	      0xe800000000	                          call 0x40052a7	      2156	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_3
0x40052a7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2157	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_4
0x40052ab	          0x4889c7	                            mov rdi, rax	      2157	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_4
0x40052ae	      0xe822ffffff	            call sym.new_untracked_cache	      2157	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_4
0x40052b3	              0x90	                                     nop	      2160	dir.c	FUNCTION_69
0x40052b4	              0xc9	                                   leave	      2160	dir.c	FUNCTION_69
0x40052b5	              0xc3	                                     ret	      2160	dir.c	FUNCTION_69
treat_leading_path	SWITCH,0:ELSE,1:WHILE,2:IF,6:DO,0:CALL,7:functions,0:FOR,0	137
0x4004ece	              0x55	                                push rbp	      2063	dir.c	FUNCTION_64
0x4004ecf	          0x4889e5	                            mov rbp, rsp	      2063	dir.c	FUNCTION_64
0x4004ed2	        0x4883ec70	                           sub rsp, 0x70	      2063	dir.c	FUNCTION_64
0x4004ed6	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2063	dir.c	FUNCTION_64
0x4004eda	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2063	dir.c	FUNCTION_64
0x4004ede	        0x488955a8	             mov qword [rbp - 0x58], rdx	      2063	dir.c	FUNCTION_64
0x4004ee2	          0x894da4	             mov dword [rbp - 0x5c], ecx	      2063	dir.c	FUNCTION_64
0x4004ee5	        0x4c894598	              mov qword [rbp - 0x68], r8	      2063	dir.c	FUNCTION_64
0x4004ee9	    0x64488b042528	                mov rax, qword fs:[0x28]	      2063	dir.c	FUNCTION_64
0x4004ef2	        0x488945f8	                mov qword [rbp - 8], rax	      2063	dir.c	FUNCTION_64
0x4004ef6	            0x31c0	                            xor eax, eax	      2063	dir.c	FUNCTION_64
0x4004ef8	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2064	dir.c	FUNCTION_64
0x4004f00	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2064	dir.c	FUNCTION_64
0x4004f08	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2064	dir.c	FUNCTION_64
0x4004f10	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      2065	dir.c	FUNCTION_64
0x4004f17	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2067	dir.c	FUNCTION_64
0x4004f1b	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2067	dir.c	FUNCTION_64
0x4004f1e	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2067	dir.c	FUNCTION_64
0x4004f21	            0xeb04	                           jmp 0x4004f27	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004f23	        0x836da401	               sub dword [rbp - 0x5c], 1	      2070	dir.c	FUNCTION_64	WHILE_1
0x4004f27	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004f2b	            0x7417	                            je 0x4004f44	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004f2d	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004f30	            0x4898	                                    cdqe	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004f32	        0x488d50ff	                      lea rdx, [rax - 1]	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004f36	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004f3a	          0x4801d0	                            add rax, rdx	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004f3d	           0xfb600	                   movzx eax, byte [rax]	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004f40	            0x3c2f	                            cmp al, 0x2f	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004f42	            0x74df	                            je 0x4004f23	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004f44	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2071	dir.c	FUNCTION_64	IF_1
0x4004f48	            0x750a	                           jne 0x4004f54	      2071	dir.c	FUNCTION_64	IF_1
0x4004f4a	      0xb801000000	                              mov eax, 1	      2072	dir.c	FUNCTION_64	IF_1
0x4004f4f	      0xe947010000	                           jmp 0x400509b	      2072	dir.c	FUNCTION_64	IF_1
0x4004f54	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2073	dir.c	FUNCTION_64
0x4004f5b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2074	dir.c	FUNCTION_64
0x4004f5f	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2074	dir.c	FUNCTION_64
0x4004f62	          0x83e0fd	                     and eax, 0xfffffffd	      2074	dir.c	FUNCTION_64
0x4004f65	            0x89c2	                            mov edx, eax	      2074	dir.c	FUNCTION_64
0x4004f67	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2074	dir.c	FUNCTION_64
0x4004f6b	          0x895010	             mov dword [rax + 0x10], edx	      2074	dir.c	FUNCTION_64
0x4004f6e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2076	dir.c	FUNCTION_64	WHILE_2
0x4004f71	          0x4863d0	                         movsxd rdx, eax	      2076	dir.c	FUNCTION_64	WHILE_2
0x4004f74	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2076	dir.c	FUNCTION_64	WHILE_2
0x4004f78	           0xf95c0	                                setne al	      2076	dir.c	FUNCTION_64	WHILE_2
0x4004f7b	           0xfb6c0	                           movzx eax, al	      2076	dir.c	FUNCTION_64	WHILE_2
0x4004f7e	          0x4801c2	                            add rdx, rax	      2076	dir.c	FUNCTION_64	WHILE_2
0x4004f81	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2076	dir.c	FUNCTION_64	WHILE_2
0x4004f85	          0x4801d0	                            add rax, rdx	      2076	dir.c	FUNCTION_64	WHILE_2
0x4004f88	        0x488945d8	             mov qword [rbp - 0x28], rax	      2076	dir.c	FUNCTION_64	WHILE_2
0x4004f8c	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004f8f	          0x4863d0	                         movsxd rdx, eax	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004f92	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004f96	          0x4801d0	                            add rax, rdx	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004f99	          0x4889c2	                            mov rdx, rax	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004f9c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004fa0	          0x4829c2	                            sub rdx, rax	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004fa3	          0x4889d0	                            mov rax, rdx	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004fa6	          0x4889c2	                            mov rdx, rax	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004fa9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004fad	      0xbe2f000000	                           mov esi, 0x2f	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004fb2	          0x4889c7	                            mov rdi, rax	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004fb5	      0xe800000000	                          call 0x4004fba	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004fba	        0x488945d8	             mov qword [rbp - 0x28], rax	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004fbe	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2078	dir.c	FUNCTION_64	WHILE_2	IF_2
0x4004fc3	            0x7508	                           jne 0x4004fcd	      2078	dir.c	FUNCTION_64	WHILE_2	IF_2
0x4004fc5	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      2079	dir.c	FUNCTION_64	WHILE_2	IF_2
0x4004fc8	          0x8945cc	             mov dword [rbp - 0x34], eax	      2079	dir.c	FUNCTION_64	WHILE_2	IF_2
0x4004fcb	            0xeb11	                           jmp 0x4004fde	      2079	dir.c	FUNCTION_64	WHILE_2	IF_2
0x4004fcd	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x4004fd1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x4004fd5	          0x4829c2	                            sub rdx, rax	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x4004fd8	          0x4889d0	                            mov rax, rdx	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x4004fdb	          0x8945cc	             mov dword [rbp - 0x34], eax	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x4004fde	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2082	dir.c	FUNCTION_64	WHILE_2	CALL_2
0x4004fe2	      0xbe00000000	                              mov esi, 0	      2082	dir.c	FUNCTION_64	WHILE_2	CALL_2
0x4004fe7	          0x4889c7	                            mov rdi, rax	      2082	dir.c	FUNCTION_64	WHILE_2	CALL_2
0x4004fea	      0xe85cb2ffff	                  call sym.strbuf_setlen	      2082	dir.c	FUNCTION_64	WHILE_2	CALL_2
0x4004fef	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x4004ff2	          0x4863d0	                         movsxd rdx, eax	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x4004ff5	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x4004ff9	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x4004ffd	          0x4889ce	                            mov rsi, rcx	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x4005000	          0x4889c7	                            mov rdi, rax	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x4005003	      0xe800000000	                          call 0x4005008	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x4005008	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x400500c	          0x4889c7	                            mov rdi, rax	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x400500f	      0xe800000000	                          call 0x4005014	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x4005014	            0x85c0	                           test eax, eax	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x4005016	            0x7463	                            je 0x400507b	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x4005018	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x400501c	            0x89c1	                            mov ecx, eax	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x400501e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x4005022	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x4005026	            0x89ce	                            mov esi, ecx	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x4005028	          0x4889c7	                            mov rdi, rax	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x400502b	      0xe836ebffff	                  call sym.simplify_away	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x4005030	            0x85c0	                           test eax, eax	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x4005032	            0x754a	                           jne 0x400507e	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x4005034	        0x488b7d98	             mov rdi, qword [rbp - 0x68]	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4005038	          0x8b75cc	             mov esi, dword [rbp - 0x34]	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x400503b	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x400503f	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4005043	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4005047	            0x6a00	                                  push 0	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4005049	            0x6a04	                                  push 4	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x400504b	          0x4989f9	                             mov r9, rdi	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x400504e	          0x4189f0	                            mov r8d, esi	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4005051	      0xbe00000000	                              mov esi, 0	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4005056	          0x4889c7	                            mov rdi, rax	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4005059	      0xe890efffff	                 call sym.treat_one_path	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x400505e	        0x4883c410	                           add rsp, 0x10	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4005062	            0x85c0	                           test eax, eax	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4005064	            0x741b	                            je 0x4005081	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4005066	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      2091	dir.c	FUNCTION_64	WHILE_2	IF_6
0x4005069	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      2091	dir.c	FUNCTION_64	WHILE_2	IF_6
0x400506c	     0xf8ffcfeffff	                            jg 0x4004f6e	      2091	dir.c	FUNCTION_64	WHILE_2	IF_6
0x4005072	    0xc745d0010000	               mov dword [rbp - 0x30], 1	      2092	dir.c	FUNCTION_64	WHILE_2	IF_6
0x4005079	            0xeb07	                           jmp 0x4005082	      2093	dir.c	FUNCTION_64	WHILE_2	IF_6
0x400507b	              0x90	                                     nop	      2085	dir.c	FUNCTION_64	WHILE_2	IF_3
0x400507c	            0xeb04	                           jmp 0x4005082	      2085	dir.c	FUNCTION_64	WHILE_2	IF_3
0x400507e	              0x90	                                     nop	      2087	dir.c	FUNCTION_64	WHILE_2	IF_4
0x400507f	            0xeb01	                           jmp 0x4005082	      2087	dir.c	FUNCTION_64	WHILE_2	IF_4
0x4005081	              0x90	                                     nop	      2090	dir.c	FUNCTION_64	WHILE_2	IF_5
0x4005082	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2096	dir.c	FUNCTION_64	CALL_7
0x4005086	          0x4889c7	                            mov rdi, rax	      2096	dir.c	FUNCTION_64	CALL_7
0x4005089	      0xe800000000	                          call 0x400508e	      2096	dir.c	FUNCTION_64	CALL_7
0x400508e	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2097	dir.c	FUNCTION_64
0x4005091	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2097	dir.c	FUNCTION_64
0x4005095	          0x895010	             mov dword [rax + 0x10], edx	      2097	dir.c	FUNCTION_64
0x4005098	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2098	dir.c	FUNCTION_64
0x400509b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2099	dir.c	FUNCTION_64
0x400509f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2099	dir.c	FUNCTION_64
0x40050a8	            0x7405	                            je 0x40050af	      2099	dir.c	FUNCTION_64
0x40050aa	      0xe800000000	                          call 0x40050af	      2099	dir.c	FUNCTION_64
0x40050af	              0xc9	                                   leave	      2099	dir.c	FUNCTION_64
0x40050b0	              0xc3	                                     ret	      2099	dir.c	FUNCTION_64
report_path_error	SWITCH,0:ELSE,0:WHILE,0:IF,4:DO,0:CALL,1:functions,0:FOR,2	95
0x400159a	              0x55	                                push rbp	       532	dir.c	FUNCTION_16
0x400159b	          0x4889e5	                            mov rbp, rsp	       532	dir.c	FUNCTION_16
0x400159e	        0x4883ec30	                           sub rsp, 0x30	       532	dir.c	FUNCTION_16
0x40015a2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       532	dir.c	FUNCTION_16
0x40015a6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       532	dir.c	FUNCTION_16
0x40015aa	        0x488955d8	             mov qword [rbp - 0x28], rdx	       532	dir.c	FUNCTION_16
0x40015ae	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       536	dir.c	FUNCTION_16
0x40015b5	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       537	dir.c	FUNCTION_16	FOR_1
0x40015bc	      0xe915010000	                           jmp 0x40016d6	       537	dir.c	FUNCTION_16	FOR_1
0x40015c1	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x40015c4	          0x4863d0	                         movsxd rdx, eax	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x40015c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x40015cb	          0x4801d0	                            add rax, rdx	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x40015ce	           0xfb600	                   movzx eax, byte [rax]	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x40015d1	            0x84c0	                             test al, al	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x40015d3	     0xf85f5000000	                           jne 0x40016ce	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x40015d9	    0xc745f8000000	                  mov dword [rbp - 8], 0	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40015e0	          0x8b45f8	                mov eax, dword [rbp - 8]	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40015e3	          0x8945fc	                mov dword [rbp - 4], eax	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40015e6	      0xe985000000	                           jmp 0x4001670	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40015eb	          0x8b45f8	                mov eax, dword [rbp - 8]	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x40015ee	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x40015f1	            0x7478	                            je 0x400166b	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x40015f3	          0x8b45f8	                mov eax, dword [rbp - 8]	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x40015f6	          0x4863d0	                         movsxd rdx, eax	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x40015f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x40015fd	          0x4801d0	                            add rax, rdx	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x4001600	           0xfb600	                   movzx eax, byte [rax]	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x4001603	            0x84c0	                             test al, al	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x4001605	            0x7464	                            je 0x400166b	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x4001607	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       554	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3
0x400160b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       554	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3
0x400160f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       554	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3
0x4001612	            0x4898	                                    cdqe	       554	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3
0x4001614	        0x48c1e003	                              shl rax, 3	       554	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3
0x4001618	    0x488d0cc50000	                        lea rcx, [rax*8]	       554	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3
0x4001620	          0x4829c1	                            sub rcx, rax	       554	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3
0x4001623	          0x4889c8	                            mov rax, rcx	       554	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3
0x4001626	          0x4801d0	                            add rax, rdx	       554	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3
0x4001629	        0x488b5008	                mov rdx, qword [rax + 8]	       554	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3
0x400162d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001631	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001635	          0x8b45f8	                mov eax, dword [rbp - 8]	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001638	            0x4898	                                    cdqe	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x400163a	        0x48c1e003	                              shl rax, 3	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x400163e	    0x488d34c50000	                        lea rsi, [rax*8]	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001646	          0x4829c6	                            sub rsi, rax	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001649	          0x4889f0	                            mov rax, rsi	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x400164c	          0x4801c8	                            add rax, rcx	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x400164f	        0x488b4008	                mov rax, qword [rax + 8]	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001653	          0x4889d6	                            mov rsi, rdx	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001656	          0x4889c7	                            mov rdi, rax	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001659	      0xe800000000	                          call 0x400165e	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x400165e	            0x85c0	                           test eax, eax	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001660	            0x750a	                           jne 0x400166c	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001662	    0xc745fc010000	                  mov dword [rbp - 4], 1	       558	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3
0x4001669	            0xeb01	                           jmp 0x400166c	       558	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3
0x400166b	              0x90	                                     nop	       552	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x400166c	        0x8345f801	                  add dword [rbp - 8], 1	       550	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4001670	        0x837dfc00	                  cmp dword [rbp - 4], 0	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4001674	            0x750f	                           jne 0x4001685	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4001676	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x400167a	            0x8b00	                    mov eax, dword [rax]	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x400167c	          0x3b45f8	                cmp eax, dword [rbp - 8]	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x400167f	     0xf8f66ffffff	                            jg 0x40015eb	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4001685	        0x837dfc00	                  cmp dword [rbp - 4], 0	       560	dir.c	FUNCTION_16	FOR_1	IF_4
0x4001689	            0x7546	                           jne 0x40016d1	       560	dir.c	FUNCTION_16	FOR_1	IF_4
0x400168b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       563	dir.c	FUNCTION_16	FOR_1
0x400168f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       563	dir.c	FUNCTION_16	FOR_1
0x4001693	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       563	dir.c	FUNCTION_16	FOR_1
0x4001696	            0x4898	                                    cdqe	       563	dir.c	FUNCTION_16	FOR_1
0x4001698	        0x48c1e003	                              shl rax, 3	       563	dir.c	FUNCTION_16	FOR_1
0x400169c	    0x488d0cc50000	                        lea rcx, [rax*8]	       563	dir.c	FUNCTION_16	FOR_1
0x40016a4	          0x4829c1	                            sub rcx, rax	       563	dir.c	FUNCTION_16	FOR_1
0x40016a7	          0x4889c8	                            mov rax, rcx	       563	dir.c	FUNCTION_16	FOR_1
0x40016aa	          0x4801d0	                            add rax, rdx	       563	dir.c	FUNCTION_16	FOR_1
0x40016ad	        0x488b4008	                mov rax, qword [rax + 8]	       563	dir.c	FUNCTION_16	FOR_1
0x40016b1	          0x4889c6	                            mov rsi, rax	       563	dir.c	FUNCTION_16	FOR_1
0x40016b4	      0xbf00000000	                              mov edi, 0	       563	dir.c	FUNCTION_16	FOR_1
0x40016b9	      0xb800000000	                              mov eax, 0	       563	dir.c	FUNCTION_16	FOR_1
0x40016be	      0xe800000000	                          call 0x40016c3	       563	dir.c	FUNCTION_16	FOR_1
0x40016c3	      0xe89fe9ffff	                    call sym.const_error	       563	dir.c	FUNCTION_16	FOR_1
0x40016c8	        0x8345f401	                add dword [rbp - 0xc], 1	       565	dir.c	FUNCTION_16	FOR_1
0x40016cc	            0xeb04	                           jmp 0x40016d2	       565	dir.c	FUNCTION_16	FOR_1
0x40016ce	              0x90	                                     nop	       541	dir.c	FUNCTION_16	FOR_1	IF_1
0x40016cf	            0xeb01	                           jmp 0x40016d2	       541	dir.c	FUNCTION_16	FOR_1	IF_1
0x40016d1	              0x90	                                     nop	       561	dir.c	FUNCTION_16	FOR_1	IF_4
0x40016d2	        0x8345f001	               add dword [rbp - 0x10], 1	       537	dir.c	FUNCTION_16	FOR_1
0x40016d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       537	dir.c	FUNCTION_16	FOR_1
0x40016da	            0x8b00	                    mov eax, dword [rax]	       537	dir.c	FUNCTION_16	FOR_1
0x40016dc	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       537	dir.c	FUNCTION_16	FOR_1
0x40016df	     0xf8fdcfeffff	                            jg 0x40015c1	       537	dir.c	FUNCTION_16	FOR_1
0x40016e5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       567	dir.c	FUNCTION_16
0x40016e8	              0xc9	                                   leave	       568	dir.c	FUNCTION_16
0x40016e9	              0xc3	                                     ret	       568	dir.c	FUNCTION_16
read_untracked_extension	SWITCH,0:ELSE,0:WHILE,0:IF,10:DO,0:CALL,24:functions,0:FOR,0	257
0x400729a	              0x55	                                push rbp	      2850	dir.c	FUNCTION_94
0x400729b	          0x4889e5	                            mov rbp, rsp	      2850	dir.c	FUNCTION_94
0x400729e	              0x53	                                push rbx	      2850	dir.c	FUNCTION_94
0x400729f	    0x4881ec880000	                           sub rsp, 0x88	      2850	dir.c	FUNCTION_94
0x40072a6	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      2850	dir.c	FUNCTION_94
0x40072ad	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      2850	dir.c	FUNCTION_94
0x40072b4	    0x64488b042528	                mov rax, qword fs:[0x28]	      2850	dir.c	FUNCTION_94
0x40072bd	        0x488945e8	             mov qword [rbp - 0x18], rax	      2850	dir.c	FUNCTION_94
0x40072c1	            0x31c0	                            xor eax, eax	      2850	dir.c	FUNCTION_94
0x40072c3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2853	dir.c	FUNCTION_94
0x40072ca	        0x48894588	             mov qword [rbp - 0x78], rax	      2853	dir.c	FUNCTION_94
0x40072ce	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      2853	dir.c	FUNCTION_94
0x40072d5	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2853	dir.c	FUNCTION_94
0x40072dc	          0x4801d0	                            add rax, rdx	      2853	dir.c	FUNCTION_94
0x40072df	        0x48894598	             mov qword [rbp - 0x68], rax	      2853	dir.c	FUNCTION_94
0x40072e3	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 1	      2858	dir.c	FUNCTION_94	IF_1
0x40072eb	            0x760f	                           jbe 0x40072fc	      2858	dir.c	FUNCTION_94	IF_1
0x40072ed	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2858	dir.c	FUNCTION_94	IF_1
0x40072f1	        0x4883e801	                              sub rax, 1	      2858	dir.c	FUNCTION_94	IF_1
0x40072f5	           0xfb600	                   movzx eax, byte [rax]	      2858	dir.c	FUNCTION_94	IF_1
0x40072f8	            0x84c0	                             test al, al	      2858	dir.c	FUNCTION_94	IF_1
0x40072fa	            0x740a	                            je 0x4007306	      2858	dir.c	FUNCTION_94	IF_1
0x40072fc	      0xb800000000	                              mov eax, 0	      2859	dir.c	FUNCTION_94	IF_1
0x4007301	      0xe95a030000	                           jmp 0x4007660	      2859	dir.c	FUNCTION_94	IF_1
0x4007306	      0x48836d9801	               sub qword [rbp - 0x68], 1	      2860	dir.c	FUNCTION_94
0x400730b	        0x488d4588	                   lea rax, [rbp - 0x78]	      2862	dir.c	FUNCTION_94	CALL_1
0x400730f	          0x4889c7	                            mov rdi, rax	      2862	dir.c	FUNCTION_94	CALL_1
0x4007312	      0xe800000000	                          call 0x4007317	      2862	dir.c	FUNCTION_94	CALL_1
0x4007317	          0x894580	             mov dword [rbp - 0x80], eax	      2862	dir.c	FUNCTION_94	CALL_1
0x400731a	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2863	dir.c	FUNCTION_94	IF_2
0x400731e	          0x8b4580	             mov eax, dword [rbp - 0x80]	      2863	dir.c	FUNCTION_94	IF_2
0x4007321	            0x4898	                                    cdqe	      2863	dir.c	FUNCTION_94	IF_2
0x4007323	          0x4801d0	                            add rax, rdx	      2863	dir.c	FUNCTION_94	IF_2
0x4007326	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2863	dir.c	FUNCTION_94	IF_2
0x400732a	            0x760a	                           jbe 0x4007336	      2863	dir.c	FUNCTION_94	IF_2
0x400732c	      0xb800000000	                              mov eax, 0	      2864	dir.c	FUNCTION_94	IF_2
0x4007331	      0xe92a030000	                           jmp 0x4007660	      2864	dir.c	FUNCTION_94	IF_2
0x4007336	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2865	dir.c	FUNCTION_94
0x400733a	        0x488945a0	             mov qword [rbp - 0x60], rax	      2865	dir.c	FUNCTION_94
0x400733e	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2866	dir.c	FUNCTION_94
0x4007342	          0x8b4580	             mov eax, dword [rbp - 0x80]	      2866	dir.c	FUNCTION_94
0x4007345	            0x4898	                                    cdqe	      2866	dir.c	FUNCTION_94
0x4007347	          0x4801d0	                            add rax, rdx	      2866	dir.c	FUNCTION_94
0x400734a	        0x48894588	             mov qword [rbp - 0x78], rax	      2866	dir.c	FUNCTION_94
0x400734e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2868	dir.c	FUNCTION_94	IF_3
0x4007352	        0x4883c075	                           add rax, 0x75	      2868	dir.c	FUNCTION_94	IF_3
0x4007356	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2868	dir.c	FUNCTION_94	IF_3
0x400735a	            0x760a	                           jbe 0x4007366	      2868	dir.c	FUNCTION_94	IF_3
0x400735c	      0xb800000000	                              mov eax, 0	      2869	dir.c	FUNCTION_94	IF_3
0x4007361	      0xe9fa020000	                           jmp 0x4007660	      2869	dir.c	FUNCTION_94	IF_3
0x4007366	      0xbec0000000	                           mov esi, 0xc0	      2871	dir.c	FUNCTION_94	CALL_2
0x400736b	      0xbf01000000	                              mov edi, 1	      2871	dir.c	FUNCTION_94	CALL_2
0x4007370	      0xe800000000	                          call 0x4007375	      2871	dir.c	FUNCTION_94	CALL_2
0x4007375	        0x48894590	             mov qword [rbp - 0x70], rax	      2871	dir.c	FUNCTION_94	CALL_2
0x4007379	          0x8b4580	             mov eax, dword [rbp - 0x80]	      2872	dir.c	FUNCTION_94	CALL_3
0x400737c	            0x4898	                                    cdqe	      2872	dir.c	FUNCTION_94	CALL_3
0x400737e	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2872	dir.c	FUNCTION_94	CALL_3
0x4007382	        0x4883ea80	             sub rdx, 0xffffffffffffff80	      2872	dir.c	FUNCTION_94	CALL_3
0x4007386	          0x4889c6	                            mov rsi, rax	      2872	dir.c	FUNCTION_94	CALL_3
0x4007389	          0x4889d7	                            mov rdi, rdx	      2872	dir.c	FUNCTION_94	CALL_3
0x400738c	      0xe800000000	                          call 0x4007391	      2872	dir.c	FUNCTION_94	CALL_3
0x4007391	          0x8b4580	             mov eax, dword [rbp - 0x80]	      2873	dir.c	FUNCTION_94	CALL_4
0x4007394	          0x4863d0	                         movsxd rdx, eax	      2873	dir.c	FUNCTION_94	CALL_4
0x4007397	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2873	dir.c	FUNCTION_94	CALL_4
0x400739b	    0x488d88800000	                   lea rcx, [rax + 0x80]	      2873	dir.c	FUNCTION_94	CALL_4
0x40073a2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2873	dir.c	FUNCTION_94	CALL_4
0x40073a6	          0x4889c6	                            mov rsi, rax	      2873	dir.c	FUNCTION_94	CALL_4
0x40073a9	          0x4889cf	                            mov rdi, rcx	      2873	dir.c	FUNCTION_94	CALL_4
0x40073ac	      0xe800000000	                          call 0x40073b1	      2873	dir.c	FUNCTION_94	CALL_4
0x40073b1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2874	dir.c	FUNCTION_94	CALL_5
0x40073b5	        0x488d504c	                   lea rdx, [rax + 0x4c]	      2874	dir.c	FUNCTION_94	CALL_5
0x40073b9	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      2874	dir.c	FUNCTION_94	CALL_5
0x40073bd	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2874	dir.c	FUNCTION_94	CALL_5
0x40073c1	          0x4889ce	                            mov rsi, rcx	      2874	dir.c	FUNCTION_94	CALL_5
0x40073c4	          0x4889c7	                            mov rdi, rax	      2874	dir.c	FUNCTION_94	CALL_5
0x40073c7	      0xe882feffff	                  call sym.load_oid_stat	      2874	dir.c	FUNCTION_94	CALL_5
0x40073cc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2877	dir.c	FUNCTION_94	CALL_6
0x40073d0	        0x488d5060	                   lea rdx, [rax + 0x60]	      2877	dir.c	FUNCTION_94	CALL_6
0x40073d4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2877	dir.c	FUNCTION_94	CALL_6
0x40073d8	        0x488d4824	                   lea rcx, [rax + 0x24]	      2877	dir.c	FUNCTION_94	CALL_6
0x40073dc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2877	dir.c	FUNCTION_94	CALL_6
0x40073e0	        0x4883c03c	                           add rax, 0x3c	      2877	dir.c	FUNCTION_94	CALL_6
0x40073e4	          0x4889ce	                            mov rsi, rcx	      2877	dir.c	FUNCTION_94	CALL_6
0x40073e7	          0x4889c7	                            mov rdi, rax	      2877	dir.c	FUNCTION_94	CALL_6
0x40073ea	      0xe85ffeffff	                  call sym.load_oid_stat	      2877	dir.c	FUNCTION_94	CALL_6
0x40073ef	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2880	dir.c	FUNCTION_94
0x40073f3	        0x4883c048	                           add rax, 0x48	      2880	dir.c	FUNCTION_94
0x40073f7	            0x8b00	                    mov eax, dword [rax]	      2880	dir.c	FUNCTION_94
0x40073f9	            0x89c7	                            mov edi, eax	      2880	dir.c	FUNCTION_94
0x40073fb	      0xe8538cffff	                    call sym.git_bswap32	      2880	dir.c	FUNCTION_94
0x4007400	            0x89c2	                            mov edx, eax	      2880	dir.c	FUNCTION_94
0x4007402	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2880	dir.c	FUNCTION_94
0x4007406	    0x899098000000	             mov dword [rax + 0x98], edx	      2880	dir.c	FUNCTION_94
0x400740c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2881	dir.c	FUNCTION_94
0x4007410	        0x4883c074	                           add rax, 0x74	      2881	dir.c	FUNCTION_94
0x4007414	        0x488945a8	             mov qword [rbp - 0x58], rax	      2881	dir.c	FUNCTION_94
0x4007418	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2882	dir.c	FUNCTION_94	CALL_7
0x400741c	          0x4889c7	                            mov rdi, rax	      2882	dir.c	FUNCTION_94	CALL_7
0x400741f	      0xe800000000	                          call 0x4007424	      2882	dir.c	FUNCTION_94	CALL_7
0x4007424	          0x4889c2	                            mov rdx, rax	      2882	dir.c	FUNCTION_94	CALL_7
0x4007427	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2882	dir.c	FUNCTION_94	CALL_7
0x400742b	        0x48895078	             mov qword [rax + 0x78], rdx	      2882	dir.c	FUNCTION_94	CALL_7
0x400742f	        0x488b5d88	             mov rbx, qword [rbp - 0x78]	      2884	dir.c	FUNCTION_94	CALL_8
0x4007433	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2884	dir.c	FUNCTION_94	CALL_8
0x4007437	          0x4889c7	                            mov rdi, rax	      2884	dir.c	FUNCTION_94	CALL_8
0x400743a	      0xe800000000	                          call 0x400743f	      2884	dir.c	FUNCTION_94	CALL_8
0x400743f	        0x4883c075	                           add rax, 0x75	      2884	dir.c	FUNCTION_94	CALL_8
0x4007443	          0x4801d8	                            add rax, rbx	      2884	dir.c	FUNCTION_94	CALL_8
0x4007446	        0x48894588	             mov qword [rbp - 0x78], rax	      2884	dir.c	FUNCTION_94	CALL_8
0x400744a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2885	dir.c	FUNCTION_94	IF_4
0x400744e	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2885	dir.c	FUNCTION_94	IF_4
0x4007452	     0xf83e5010000	                           jae 0x400763d	      2885	dir.c	FUNCTION_94	IF_4
0x4007458	        0x488d4588	                   lea rax, [rbp - 0x78]	      2888	dir.c	FUNCTION_94	CALL_9
0x400745c	          0x4889c7	                            mov rdi, rax	      2888	dir.c	FUNCTION_94	CALL_9
0x400745f	      0xe800000000	                          call 0x4007464	      2888	dir.c	FUNCTION_94	CALL_9
0x4007464	          0x894584	             mov dword [rbp - 0x7c], eax	      2888	dir.c	FUNCTION_94	CALL_9
0x4007467	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2889	dir.c	FUNCTION_94	IF_5
0x400746b	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2889	dir.c	FUNCTION_94	IF_5
0x400746f	     0xf87c9010000	                            ja 0x400763e	      2889	dir.c	FUNCTION_94	IF_5
0x4007475	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      2889	dir.c	FUNCTION_94	IF_5
0x4007479	     0xf84bf010000	                            je 0x400763e	      2889	dir.c	FUNCTION_94	IF_5
0x400747f	      0xe800000000	                          call 0x4007484	      2892	dir.c	FUNCTION_94	CALL_10
0x4007484	        0x488945c8	             mov qword [rbp - 0x38], rax	      2892	dir.c	FUNCTION_94	CALL_10
0x4007488	      0xe800000000	                          call 0x400748d	      2893	dir.c	FUNCTION_94	CALL_11
0x400748d	        0x488945c0	             mov qword [rbp - 0x40], rax	      2893	dir.c	FUNCTION_94	CALL_11
0x4007491	      0xe800000000	                          call 0x4007496	      2894	dir.c	FUNCTION_94	CALL_12
0x4007496	        0x488945d0	             mov qword [rbp - 0x30], rax	      2894	dir.c	FUNCTION_94	CALL_12
0x400749a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2895	dir.c	FUNCTION_94
0x400749e	        0x488945d8	             mov qword [rbp - 0x28], rax	      2895	dir.c	FUNCTION_94
0x40074a2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2896	dir.c	FUNCTION_94
0x40074a6	        0x488945e0	             mov qword [rbp - 0x20], rax	      2896	dir.c	FUNCTION_94
0x40074aa	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      2897	dir.c	FUNCTION_94
0x40074b1	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      2898	dir.c	FUNCTION_94
0x40074b4	            0x4898	                                    cdqe	      2898	dir.c	FUNCTION_94
0x40074b6	          0x4889c6	                            mov rsi, rax	      2898	dir.c	FUNCTION_94
0x40074b9	      0xbf08000000	                              mov edi, 8	      2898	dir.c	FUNCTION_94
0x40074be	      0xe8f38bffff	                        call sym.st_mult	      2898	dir.c	FUNCTION_94
0x40074c3	          0x4889c7	                            mov rdi, rax	      2898	dir.c	FUNCTION_94
0x40074c6	      0xe800000000	                          call 0x40074cb	      2898	dir.c	FUNCTION_94
0x40074cb	        0x488945b8	             mov qword [rbp - 0x48], rax	      2898	dir.c	FUNCTION_94
0x40074cf	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40074d3	    0x488d90a00000	                   lea rdx, [rax + 0xa0]	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40074da	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40074de	          0x4889c6	                            mov rsi, rax	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40074e1	          0x4889d7	                            mov rdi, rdx	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40074e4	      0xe830f8ffff	                   call sym.read_one_dir	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40074e9	            0x85c0	                           test eax, eax	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40074eb	     0xf851a010000	                           jne 0x400760b	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40074f1	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40074f4	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40074f7	     0xf850e010000	                           jne 0x400760b	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40074fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2903	dir.c	FUNCTION_94
0x4007501	        0x48894588	             mov qword [rbp - 0x78], rax	      2903	dir.c	FUNCTION_94
0x4007505	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2904	dir.c	FUNCTION_94	CALL_14
0x4007509	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2904	dir.c	FUNCTION_94	CALL_14
0x400750d	          0x4829d0	                            sub rax, rdx	      2904	dir.c	FUNCTION_94	CALL_14
0x4007510	          0x4889c2	                            mov rdx, rax	      2904	dir.c	FUNCTION_94	CALL_14
0x4007513	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      2904	dir.c	FUNCTION_94	CALL_14
0x4007517	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2904	dir.c	FUNCTION_94	CALL_14
0x400751b	          0x4889ce	                            mov rsi, rcx	      2904	dir.c	FUNCTION_94	CALL_14
0x400751e	          0x4889c7	                            mov rdi, rax	      2904	dir.c	FUNCTION_94	CALL_14
0x4007521	      0xe800000000	                          call 0x4007526	      2904	dir.c	FUNCTION_94	CALL_14
0x4007526	          0x894584	             mov dword [rbp - 0x7c], eax	      2904	dir.c	FUNCTION_94	CALL_14
0x4007529	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      2905	dir.c	FUNCTION_94	IF_7
0x400752d	     0xf88d1000000	                            js 0x4007604	      2905	dir.c	FUNCTION_94	IF_7
0x4007533	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2908	dir.c	FUNCTION_94
0x4007537	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      2908	dir.c	FUNCTION_94
0x400753a	            0x4898	                                    cdqe	      2908	dir.c	FUNCTION_94
0x400753c	          0x4801d0	                            add rax, rdx	      2908	dir.c	FUNCTION_94
0x400753f	        0x48894588	             mov qword [rbp - 0x78], rax	      2908	dir.c	FUNCTION_94
0x4007543	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2909	dir.c	FUNCTION_94	CALL_15
0x4007547	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2909	dir.c	FUNCTION_94	CALL_15
0x400754b	          0x4829d0	                            sub rax, rdx	      2909	dir.c	FUNCTION_94	CALL_15
0x400754e	          0x4889c2	                            mov rdx, rax	      2909	dir.c	FUNCTION_94	CALL_15
0x4007551	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      2909	dir.c	FUNCTION_94	CALL_15
0x4007555	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2909	dir.c	FUNCTION_94	CALL_15
0x4007559	          0x4889ce	                            mov rsi, rcx	      2909	dir.c	FUNCTION_94	CALL_15
0x400755c	          0x4889c7	                            mov rdi, rax	      2909	dir.c	FUNCTION_94	CALL_15
0x400755f	      0xe800000000	                          call 0x4007564	      2909	dir.c	FUNCTION_94	CALL_15
0x4007564	          0x894584	             mov dword [rbp - 0x7c], eax	      2909	dir.c	FUNCTION_94	CALL_15
0x4007567	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      2910	dir.c	FUNCTION_94	IF_8
0x400756b	     0xf8896000000	                            js 0x4007607	      2910	dir.c	FUNCTION_94	IF_8
0x4007571	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2913	dir.c	FUNCTION_94
0x4007575	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      2913	dir.c	FUNCTION_94
0x4007578	            0x4898	                                    cdqe	      2913	dir.c	FUNCTION_94
0x400757a	          0x4801d0	                            add rax, rdx	      2913	dir.c	FUNCTION_94
0x400757d	        0x48894588	             mov qword [rbp - 0x78], rax	      2913	dir.c	FUNCTION_94
0x4007581	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2914	dir.c	FUNCTION_94	CALL_16
0x4007585	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2914	dir.c	FUNCTION_94	CALL_16
0x4007589	          0x4829d0	                            sub rax, rdx	      2914	dir.c	FUNCTION_94	CALL_16
0x400758c	          0x4889c2	                            mov rdx, rax	      2914	dir.c	FUNCTION_94	CALL_16
0x400758f	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      2914	dir.c	FUNCTION_94	CALL_16
0x4007593	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2914	dir.c	FUNCTION_94	CALL_16
0x4007597	          0x4889ce	                            mov rsi, rcx	      2914	dir.c	FUNCTION_94	CALL_16
0x400759a	          0x4889c7	                            mov rdi, rax	      2914	dir.c	FUNCTION_94	CALL_16
0x400759d	      0xe800000000	                          call 0x40075a2	      2914	dir.c	FUNCTION_94	CALL_16
0x40075a2	          0x894584	             mov dword [rbp - 0x7c], eax	      2914	dir.c	FUNCTION_94	CALL_16
0x40075a5	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      2915	dir.c	FUNCTION_94	IF_9
0x40075a9	            0x785f	                            js 0x400760a	      2915	dir.c	FUNCTION_94	IF_9
0x40075ab	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2918	dir.c	FUNCTION_94	CALL_17
0x40075af	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2918	dir.c	FUNCTION_94	CALL_17
0x40075b3	      0xbe00000000	                              mov esi, 0	      2918	dir.c	FUNCTION_94	CALL_17
0x40075b8	          0x4889c7	                            mov rdi, rax	      2918	dir.c	FUNCTION_94	CALL_17
0x40075bb	      0xe800000000	                          call 0x40075c0	      2918	dir.c	FUNCTION_94	CALL_17
0x40075c0	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2919	dir.c	FUNCTION_94
0x40075c4	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      2919	dir.c	FUNCTION_94
0x40075c7	            0x4898	                                    cdqe	      2919	dir.c	FUNCTION_94
0x40075c9	          0x4801d0	                            add rax, rdx	      2919	dir.c	FUNCTION_94
0x40075cc	        0x488945d8	             mov qword [rbp - 0x28], rax	      2919	dir.c	FUNCTION_94
0x40075d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2920	dir.c	FUNCTION_94	CALL_18
0x40075d4	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2920	dir.c	FUNCTION_94	CALL_18
0x40075d8	      0xbe00000000	                              mov esi, 0	      2920	dir.c	FUNCTION_94	CALL_18
0x40075dd	          0x4889c7	                            mov rdi, rax	      2920	dir.c	FUNCTION_94	CALL_18
0x40075e0	      0xe800000000	                          call 0x40075e5	      2920	dir.c	FUNCTION_94	CALL_18
0x40075e5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2921	dir.c	FUNCTION_94	CALL_19
0x40075e9	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2921	dir.c	FUNCTION_94	CALL_19
0x40075ed	      0xbe00000000	                              mov esi, 0	      2921	dir.c	FUNCTION_94	CALL_19
0x40075f2	          0x4889c7	                            mov rdi, rax	      2921	dir.c	FUNCTION_94	CALL_19
0x40075f5	      0xe800000000	                          call 0x40075fa	      2921	dir.c	FUNCTION_94	CALL_19
0x40075fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2922	dir.c	FUNCTION_94
0x40075fe	        0x48894588	             mov qword [rbp - 0x78], rax	      2922	dir.c	FUNCTION_94
0x4007602	            0xeb07	                           jmp 0x400760b	      2922	dir.c	FUNCTION_94
0x4007604	              0x90	                                     nop	      2906	dir.c	FUNCTION_94	IF_7
0x4007605	            0xeb04	                           jmp 0x400760b	      2906	dir.c	FUNCTION_94	IF_7
0x4007607	              0x90	                                     nop	      2911	dir.c	FUNCTION_94	IF_8
0x4007608	            0xeb01	                           jmp 0x400760b	      2911	dir.c	FUNCTION_94	IF_8
0x400760a	              0x90	                                     nop	      2916	dir.c	FUNCTION_94	IF_9
0x400760b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2925	dir.c	FUNCTION_94	CALL_20
0x400760f	          0x4889c7	                            mov rdi, rax	      2925	dir.c	FUNCTION_94	CALL_20
0x4007612	      0xe800000000	                          call 0x4007617	      2925	dir.c	FUNCTION_94	CALL_20
0x4007617	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2926	dir.c	FUNCTION_94	CALL_21
0x400761b	          0x4889c7	                            mov rdi, rax	      2926	dir.c	FUNCTION_94	CALL_21
0x400761e	      0xe800000000	                          call 0x4007623	      2926	dir.c	FUNCTION_94	CALL_21
0x4007623	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2927	dir.c	FUNCTION_94	CALL_22
0x4007627	          0x4889c7	                            mov rdi, rax	      2927	dir.c	FUNCTION_94	CALL_22
0x400762a	      0xe800000000	                          call 0x400762f	      2927	dir.c	FUNCTION_94	CALL_22
0x400762f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2928	dir.c	FUNCTION_94	CALL_23
0x4007633	          0x4889c7	                            mov rdi, rax	      2928	dir.c	FUNCTION_94	CALL_23
0x4007636	      0xe800000000	                          call 0x400763b	      2928	dir.c	FUNCTION_94	CALL_23
0x400763b	            0xeb01	                           jmp 0x400763e	      2928	dir.c	FUNCTION_94	CALL_23
0x400763d	              0x90	                                     nop	      2886	dir.c	FUNCTION_94	IF_4
0x400763e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2930	dir.c	FUNCTION_94	IF_10
0x4007642	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2930	dir.c	FUNCTION_94	IF_10
0x4007646	            0x7414	                            je 0x400765c	      2930	dir.c	FUNCTION_94	IF_10
0x4007648	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2931	dir.c	FUNCTION_94	IF_10	CALL_24
0x400764c	          0x4889c7	                            mov rdi, rax	      2931	dir.c	FUNCTION_94	IF_10	CALL_24
0x400764f	      0xe800000000	                          call 0x4007654	      2931	dir.c	FUNCTION_94	IF_10	CALL_24
0x4007654	    0x48c745900000	               mov qword [rbp - 0x70], 0	      2932	dir.c	FUNCTION_94	IF_10
0x400765c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2934	dir.c	FUNCTION_94
0x4007660	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2935	dir.c	FUNCTION_94
0x4007664	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2935	dir.c	FUNCTION_94
0x400766d	            0x7405	                            je 0x4007674	      2935	dir.c	FUNCTION_94
0x400766f	      0xe800000000	                          call 0x4007674	      2935	dir.c	FUNCTION_94
0x4007674	    0x4881c4880000	                           add rsp, 0x88	      2935	dir.c	FUNCTION_94
0x400767b	              0x5b	                                 pop rbx	      2935	dir.c	FUNCTION_94
0x400767c	              0x5d	                                 pop rbp	      2935	dir.c	FUNCTION_94
0x400767d	              0xc3	                                     ret	      2935	dir.c	FUNCTION_94
set_untracked_ident	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,3:functions,0:FOR,0	24
0x4005181	              0x55	                                push rbp	      2127	dir.c	FUNCTION_67
0x4005182	          0x4889e5	                            mov rbp, rsp	      2127	dir.c	FUNCTION_67
0x4005185	        0x4883ec10	                           sub rsp, 0x10	      2127	dir.c	FUNCTION_67
0x4005189	        0x48897df8	                mov qword [rbp - 8], rdi	      2127	dir.c	FUNCTION_67
0x400518d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2128	dir.c	FUNCTION_67
0x4005191	        0x4883e880	             sub rax, 0xffffffffffffff80	      2128	dir.c	FUNCTION_67
0x4005195	      0xbe00000000	                              mov esi, 0	      2128	dir.c	FUNCTION_67
0x400519a	          0x4889c7	                            mov rdi, rax	      2128	dir.c	FUNCTION_67
0x400519d	      0xe8a9b0ffff	                  call sym.strbuf_setlen	      2128	dir.c	FUNCTION_67
0x40051a2	      0xe80affffff	               call sym.get_ident_string	      2129	dir.c	FUNCTION_67	CALL_2
0x40051a7	          0x4889c2	                            mov rdx, rax	      2129	dir.c	FUNCTION_67	CALL_2
0x40051aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      2129	dir.c	FUNCTION_67	CALL_2
0x40051ae	        0x4883e880	             sub rax, 0xffffffffffffff80	      2129	dir.c	FUNCTION_67	CALL_2
0x40051b2	          0x4889d6	                            mov rsi, rdx	      2129	dir.c	FUNCTION_67	CALL_2
0x40051b5	          0x4889c7	                            mov rdi, rax	      2129	dir.c	FUNCTION_67	CALL_2
0x40051b8	      0xe896b1ffff	                  call sym.strbuf_addstr	      2129	dir.c	FUNCTION_67	CALL_2
0x40051bd	        0x488b45f8	                mov rax, qword [rbp - 8]	      2135	dir.c	FUNCTION_67	CALL_3
0x40051c1	        0x4883e880	             sub rax, 0xffffffffffffff80	      2135	dir.c	FUNCTION_67	CALL_3
0x40051c5	      0xbe00000000	                              mov esi, 0	      2135	dir.c	FUNCTION_67	CALL_3
0x40051ca	          0x4889c7	                            mov rdi, rax	      2135	dir.c	FUNCTION_67	CALL_3
0x40051cd	      0xe813b1ffff	                   call sym.strbuf_addch	      2135	dir.c	FUNCTION_67	CALL_3
0x40051d2	              0x90	                                     nop	      2136	dir.c	FUNCTION_67
0x40051d3	              0xc9	                                   leave	      2136	dir.c	FUNCTION_67
0x40051d4	              0xc3	                                     ret	      2136	dir.c	FUNCTION_67
get_index_dtype	SWITCH,0:ELSE,0:WHILE,1:IF,8:DO,0:CALL,3:functions,0:FOR,0	98
0x4003d79	              0x55	                                push rbp	      1597	dir.c	FUNCTION_51
0x4003d7a	          0x4889e5	                            mov rbp, rsp	      1597	dir.c	FUNCTION_51
0x4003d7d	        0x4883ec30	                           sub rsp, 0x30	      1597	dir.c	FUNCTION_51
0x4003d81	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1597	dir.c	FUNCTION_51
0x4003d85	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1597	dir.c	FUNCTION_51
0x4003d89	          0x8955dc	             mov dword [rbp - 0x24], edx	      1597	dir.c	FUNCTION_51
0x4003d8c	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1601	dir.c	FUNCTION_51	CALL_1
0x4003d8f	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1601	dir.c	FUNCTION_51	CALL_1
0x4003d93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1601	dir.c	FUNCTION_51	CALL_1
0x4003d97	      0xb900000000	                              mov ecx, 0	      1601	dir.c	FUNCTION_51	CALL_1
0x4003d9c	          0x4889c7	                            mov rdi, rax	      1601	dir.c	FUNCTION_51	CALL_1
0x4003d9f	      0xe800000000	                          call 0x4003da4	      1601	dir.c	FUNCTION_51	CALL_1
0x4003da4	        0x488945f8	                mov qword [rbp - 8], rax	      1601	dir.c	FUNCTION_51	CALL_1
0x4003da8	      0x48837df800	                  cmp qword [rbp - 8], 0	      1602	dir.c	FUNCTION_51	IF_1
0x4003dad	            0x7441	                            je 0x4003df0	      1602	dir.c	FUNCTION_51	IF_1
0x4003daf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1603	dir.c	FUNCTION_51	IF_1	IF_2
0x4003db3	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1603	dir.c	FUNCTION_51	IF_1	IF_2
0x4003db6	      0x2500000400	                        and eax, 0x40000	      1603	dir.c	FUNCTION_51	IF_1	IF_2
0x4003dbb	            0x85c0	                           test eax, eax	      1603	dir.c	FUNCTION_51	IF_1	IF_2
0x4003dbd	            0x750a	                           jne 0x4003dc9	      1603	dir.c	FUNCTION_51	IF_1	IF_2
0x4003dbf	      0xb800000000	                              mov eax, 0	      1604	dir.c	FUNCTION_51	IF_1	IF_2
0x4003dc4	      0xe9f3000000	                           jmp 0x4003ebc	      1604	dir.c	FUNCTION_51	IF_1	IF_2
0x4003dc9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1605	dir.c	FUNCTION_51	IF_1	IF_3
0x4003dcd	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1605	dir.c	FUNCTION_51	IF_1	IF_3
0x4003dd0	      0x2500f00000	                         and eax, 0xf000	      1605	dir.c	FUNCTION_51	IF_1	IF_3
0x4003dd5	      0x3d00e00000	                         cmp eax, 0xe000	      1605	dir.c	FUNCTION_51	IF_1	IF_3
0x4003dda	            0x750a	                           jne 0x4003de6	      1605	dir.c	FUNCTION_51	IF_1	IF_3
0x4003ddc	      0xb804000000	                              mov eax, 4	      1606	dir.c	FUNCTION_51	IF_1	IF_3
0x4003de1	      0xe9d6000000	                           jmp 0x4003ebc	      1606	dir.c	FUNCTION_51	IF_1	IF_3
0x4003de6	      0xb808000000	                              mov eax, 8	      1611	dir.c	FUNCTION_51	IF_1
0x4003deb	      0xe9cc000000	                           jmp 0x4003ebc	      1611	dir.c	FUNCTION_51	IF_1
0x4003df0	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1615	dir.c	FUNCTION_51	CALL_2
0x4003df3	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1615	dir.c	FUNCTION_51	CALL_2
0x4003df7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1615	dir.c	FUNCTION_51	CALL_2
0x4003dfb	          0x4889ce	                            mov rsi, rcx	      1615	dir.c	FUNCTION_51	CALL_2
0x4003dfe	          0x4889c7	                            mov rdi, rax	      1615	dir.c	FUNCTION_51	CALL_2
0x4003e01	      0xe800000000	                          call 0x4003e06	      1615	dir.c	FUNCTION_51	CALL_2
0x4003e06	          0x8945f4	              mov dword [rbp - 0xc], eax	      1615	dir.c	FUNCTION_51	CALL_2
0x4003e09	        0x837df400	                cmp dword [rbp - 0xc], 0	      1616	dir.c	FUNCTION_51	IF_4
0x4003e0d	            0x780a	                            js 0x4003e19	      1616	dir.c	FUNCTION_51	IF_4
0x4003e0f	      0xb800000000	                              mov eax, 0	      1617	dir.c	FUNCTION_51	IF_4
0x4003e14	      0xe9a3000000	                           jmp 0x4003ebc	      1617	dir.c	FUNCTION_51	IF_4
0x4003e19	          0xf755f4	                   not dword [rbp - 0xc]	      1618	dir.c	FUNCTION_51
0x4003e1c	            0xeb7e	                           jmp 0x4003e9c	      1619	dir.c	FUNCTION_51	WHILE_1
0x4003e1e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1620	dir.c	FUNCTION_51	WHILE_1
0x4003e22	          0x488b08	                    mov rcx, qword [rax]	      1620	dir.c	FUNCTION_51	WHILE_1
0x4003e25	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1620	dir.c	FUNCTION_51	WHILE_1
0x4003e28	          0x8d5001	                      lea edx, [rax + 1]	      1620	dir.c	FUNCTION_51	WHILE_1
0x4003e2b	          0x8955f4	              mov dword [rbp - 0xc], edx	      1620	dir.c	FUNCTION_51	WHILE_1
0x4003e2e	            0x4898	                                    cdqe	      1620	dir.c	FUNCTION_51	WHILE_1
0x4003e30	        0x48c1e003	                              shl rax, 3	      1620	dir.c	FUNCTION_51	WHILE_1
0x4003e34	          0x4801c8	                            add rax, rcx	      1620	dir.c	FUNCTION_51	WHILE_1
0x4003e37	          0x488b00	                    mov rax, qword [rax]	      1620	dir.c	FUNCTION_51	WHILE_1
0x4003e3a	        0x488945f8	                mov qword [rbp - 8], rax	      1620	dir.c	FUNCTION_51	WHILE_1
0x4003e3e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1621	dir.c	FUNCTION_51	WHILE_1	IF_5	CALL_3
0x4003e41	          0x4863d0	                         movsxd rdx, eax	      1621	dir.c	FUNCTION_51	WHILE_1	IF_5	CALL_3
0x4003e44	        0x488b45f8	                mov rax, qword [rbp - 8]	      1621	dir.c	FUNCTION_51	WHILE_1	IF_5	CALL_3
0x4003e48	        0x488d4858	                   lea rcx, [rax + 0x58]	      1621	dir.c	FUNCTION_51	WHILE_1	IF_5	CALL_3
0x4003e4c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1621	dir.c	FUNCTION_51	WHILE_1	IF_5	CALL_3
0x4003e50	          0x4889c6	                            mov rsi, rax	      1621	dir.c	FUNCTION_51	WHILE_1	IF_5	CALL_3
0x4003e53	          0x4889cf	                            mov rdi, rcx	      1621	dir.c	FUNCTION_51	WHILE_1	IF_5	CALL_3
0x4003e56	      0xe800000000	                          call 0x4003e5b	      1621	dir.c	FUNCTION_51	WHILE_1	IF_5	CALL_3
0x4003e5b	            0x85c0	                           test eax, eax	      1621	dir.c	FUNCTION_51	WHILE_1	IF_5	CALL_3
0x4003e5d	            0x7551	                           jne 0x4003eb0	      1621	dir.c	FUNCTION_51	WHILE_1	IF_5	CALL_3
0x4003e5f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1623	dir.c	FUNCTION_51	WHILE_1	IF_6
0x4003e63	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1623	dir.c	FUNCTION_51	WHILE_1	IF_6
0x4003e66	            0x4898	                                    cdqe	      1623	dir.c	FUNCTION_51	WHILE_1	IF_6
0x4003e68	       0xfb6440258	     movzx eax, byte [rdx + rax + 0x58] 	      1623	dir.c	FUNCTION_51	WHILE_1	IF_6
0x4003e6d	            0x3c2f	                            cmp al, 0x2f	      1623	dir.c	FUNCTION_51	WHILE_1	IF_6
0x4003e6f	            0x7f42	                            jg 0x4003eb3	      1623	dir.c	FUNCTION_51	WHILE_1	IF_6
0x4003e71	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1625	dir.c	FUNCTION_51	WHILE_1	IF_7
0x4003e75	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1625	dir.c	FUNCTION_51	WHILE_1	IF_7
0x4003e78	            0x4898	                                    cdqe	      1625	dir.c	FUNCTION_51	WHILE_1	IF_7
0x4003e7a	       0xfb6440258	     movzx eax, byte [rdx + rax + 0x58] 	      1625	dir.c	FUNCTION_51	WHILE_1	IF_7
0x4003e7f	            0x3c2e	                            cmp al, 0x2e	      1625	dir.c	FUNCTION_51	WHILE_1	IF_7
0x4003e81	            0x7f02	                            jg 0x4003e85	      1625	dir.c	FUNCTION_51	WHILE_1	IF_7
0x4003e83	            0xeb17	                           jmp 0x4003e9c	      1626	dir.c	FUNCTION_51	WHILE_1	IF_7
0x4003e85	        0x488b45f8	                mov rax, qword [rbp - 8]	      1627	dir.c	FUNCTION_51	WHILE_1	IF_8
0x4003e89	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1627	dir.c	FUNCTION_51	WHILE_1	IF_8
0x4003e8c	      0x2500000400	                        and eax, 0x40000	      1627	dir.c	FUNCTION_51	WHILE_1	IF_8
0x4003e91	            0x85c0	                           test eax, eax	      1627	dir.c	FUNCTION_51	WHILE_1	IF_8
0x4003e93	            0x7421	                            je 0x4003eb6	      1627	dir.c	FUNCTION_51	WHILE_1	IF_8
0x4003e95	      0xb804000000	                              mov eax, 4	      1629	dir.c	FUNCTION_51	WHILE_1
0x4003e9a	            0xeb20	                           jmp 0x4003ebc	      1629	dir.c	FUNCTION_51	WHILE_1
0x4003e9c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1619	dir.c	FUNCTION_51	WHILE_1
0x4003ea0	          0x8b500c	              mov edx, dword [rax + 0xc]	      1619	dir.c	FUNCTION_51	WHILE_1
0x4003ea3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1619	dir.c	FUNCTION_51	WHILE_1
0x4003ea6	            0x39c2	                            cmp edx, eax	      1619	dir.c	FUNCTION_51	WHILE_1
0x4003ea8	     0xf8770ffffff	                            ja 0x4003e1e	      1619	dir.c	FUNCTION_51	WHILE_1
0x4003eae	            0xeb07	                           jmp 0x4003eb7	      1619	dir.c	FUNCTION_51	WHILE_1
0x4003eb0	              0x90	                                     nop	      1622	dir.c	FUNCTION_51	WHILE_1	IF_5
0x4003eb1	            0xeb04	                           jmp 0x4003eb7	      1622	dir.c	FUNCTION_51	WHILE_1	IF_5
0x4003eb3	              0x90	                                     nop	      1624	dir.c	FUNCTION_51	WHILE_1	IF_6
0x4003eb4	            0xeb01	                           jmp 0x4003eb7	      1624	dir.c	FUNCTION_51	WHILE_1	IF_6
0x4003eb6	              0x90	                                     nop	      1628	dir.c	FUNCTION_51	WHILE_1	IF_8
0x4003eb7	      0xb800000000	                              mov eax, 0	      1631	dir.c	FUNCTION_51
0x4003ebc	              0xc9	                                   leave	      1632	dir.c	FUNCTION_51
0x4003ebd	              0xc3	                                     ret	      1632	dir.c	FUNCTION_51
relocate_gitdir	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,4:functions,0:FOR,0	31
0x4007d1f	              0x55	                                push rbp	      3106	dir.c	FUNCTION_102
0x4007d20	          0x4889e5	                            mov rbp, rsp	      3106	dir.c	FUNCTION_102
0x4007d23	        0x4883ec20	                           sub rsp, 0x20	      3106	dir.c	FUNCTION_102
0x4007d27	        0x48897df8	                mov qword [rbp - 8], rdi	      3106	dir.c	FUNCTION_102
0x4007d2b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3106	dir.c	FUNCTION_102
0x4007d2f	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3106	dir.c	FUNCTION_102
0x4007d33	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4007d37	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4007d3b	          0x4889d6	                            mov rsi, rdx	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4007d3e	          0x4889c7	                            mov rdi, rax	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4007d41	      0xe800000000	                          call 0x4007d46	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4007d46	            0x85c0	                           test eax, eax	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4007d48	            0x7925	                           jns 0x4007d6f	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4007d4a	      0xbf00000000	                              mov edi, 0	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x4007d4f	      0xe88686ffff	                               call sym.	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x4007d54	          0x4889c1	                            mov rcx, rax	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x4007d57	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x4007d5b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x4007d5f	          0x4889c6	                            mov rsi, rax	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x4007d62	          0x4889cf	                            mov rdi, rcx	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x4007d65	      0xb800000000	                              mov eax, 0	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x4007d6a	      0xe800000000	                          call 0x4007d6f	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x4007d6f	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      3111	dir.c	FUNCTION_102	CALL_4
0x4007d73	        0x488b45f8	                mov rax, qword [rbp - 8]	      3111	dir.c	FUNCTION_102	CALL_4
0x4007d77	      0xba00000000	                              mov edx, 0	      3111	dir.c	FUNCTION_102	CALL_4
0x4007d7c	          0x4889ce	                            mov rsi, rcx	      3111	dir.c	FUNCTION_102	CALL_4
0x4007d7f	          0x4889c7	                            mov rdi, rax	      3111	dir.c	FUNCTION_102	CALL_4
0x4007d82	      0xe800000000	                          call 0x4007d87	      3111	dir.c	FUNCTION_102	CALL_4
0x4007d87	              0x90	                                     nop	      3112	dir.c	FUNCTION_102
0x4007d88	              0xc9	                                   leave	      3112	dir.c	FUNCTION_102
0x4007d89	              0xc3	                                     ret	      3112	dir.c	FUNCTION_102
stat_data_to_disk	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,0:functions,0:FOR,0	71
0x4006343	              0x55	                                push rbp	      2589	dir.c	FUNCTION_83
0x4006344	          0x4889e5	                            mov rbp, rsp	      2589	dir.c	FUNCTION_83
0x4006347	        0x4883ec10	                           sub rsp, 0x10	      2589	dir.c	FUNCTION_83
0x400634b	        0x48897df8	                mov qword [rbp - 8], rdi	      2589	dir.c	FUNCTION_83
0x400634f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2589	dir.c	FUNCTION_83
0x4006353	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2590	dir.c	FUNCTION_83
0x4006357	            0x8b00	                    mov eax, dword [rax]	      2590	dir.c	FUNCTION_83
0x4006359	            0x89c7	                            mov edi, eax	      2590	dir.c	FUNCTION_83
0x400635b	      0xe8f39cffff	                    call sym.git_bswap32	      2590	dir.c	FUNCTION_83
0x4006360	            0x89c2	                            mov edx, eax	      2590	dir.c	FUNCTION_83
0x4006362	        0x488b45f8	                mov rax, qword [rbp - 8]	      2590	dir.c	FUNCTION_83
0x4006366	            0x8910	                    mov dword [rax], edx	      2590	dir.c	FUNCTION_83
0x4006368	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2591	dir.c	FUNCTION_83
0x400636c	          0x8b4004	                mov eax, dword [rax + 4]	      2591	dir.c	FUNCTION_83
0x400636f	            0x89c7	                            mov edi, eax	      2591	dir.c	FUNCTION_83
0x4006371	      0xe8dd9cffff	                    call sym.git_bswap32	      2591	dir.c	FUNCTION_83
0x4006376	            0x89c2	                            mov edx, eax	      2591	dir.c	FUNCTION_83
0x4006378	        0x488b45f8	                mov rax, qword [rbp - 8]	      2591	dir.c	FUNCTION_83
0x400637c	          0x895004	                mov dword [rax + 4], edx	      2591	dir.c	FUNCTION_83
0x400637f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2592	dir.c	FUNCTION_83
0x4006383	          0x8b4008	                mov eax, dword [rax + 8]	      2592	dir.c	FUNCTION_83
0x4006386	            0x89c7	                            mov edi, eax	      2592	dir.c	FUNCTION_83
0x4006388	      0xe8c69cffff	                    call sym.git_bswap32	      2592	dir.c	FUNCTION_83
0x400638d	            0x89c2	                            mov edx, eax	      2592	dir.c	FUNCTION_83
0x400638f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2592	dir.c	FUNCTION_83
0x4006393	          0x895008	                mov dword [rax + 8], edx	      2592	dir.c	FUNCTION_83
0x4006396	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2593	dir.c	FUNCTION_83
0x400639a	          0x8b400c	              mov eax, dword [rax + 0xc]	      2593	dir.c	FUNCTION_83
0x400639d	            0x89c7	                            mov edi, eax	      2593	dir.c	FUNCTION_83
0x400639f	      0xe8af9cffff	                    call sym.git_bswap32	      2593	dir.c	FUNCTION_83
0x40063a4	            0x89c2	                            mov edx, eax	      2593	dir.c	FUNCTION_83
0x40063a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      2593	dir.c	FUNCTION_83
0x40063aa	          0x89500c	              mov dword [rax + 0xc], edx	      2593	dir.c	FUNCTION_83
0x40063ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2594	dir.c	FUNCTION_83
0x40063b1	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2594	dir.c	FUNCTION_83
0x40063b4	            0x89c7	                            mov edi, eax	      2594	dir.c	FUNCTION_83
0x40063b6	      0xe8989cffff	                    call sym.git_bswap32	      2594	dir.c	FUNCTION_83
0x40063bb	            0x89c2	                            mov edx, eax	      2594	dir.c	FUNCTION_83
0x40063bd	        0x488b45f8	                mov rax, qword [rbp - 8]	      2594	dir.c	FUNCTION_83
0x40063c1	          0x895010	             mov dword [rax + 0x10], edx	      2594	dir.c	FUNCTION_83
0x40063c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2595	dir.c	FUNCTION_83
0x40063c8	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2595	dir.c	FUNCTION_83
0x40063cb	            0x89c7	                            mov edi, eax	      2595	dir.c	FUNCTION_83
0x40063cd	      0xe8819cffff	                    call sym.git_bswap32	      2595	dir.c	FUNCTION_83
0x40063d2	            0x89c2	                            mov edx, eax	      2595	dir.c	FUNCTION_83
0x40063d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      2595	dir.c	FUNCTION_83
0x40063d8	          0x895014	             mov dword [rax + 0x14], edx	      2595	dir.c	FUNCTION_83
0x40063db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2596	dir.c	FUNCTION_83
0x40063df	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2596	dir.c	FUNCTION_83
0x40063e2	            0x89c7	                            mov edi, eax	      2596	dir.c	FUNCTION_83
0x40063e4	      0xe86a9cffff	                    call sym.git_bswap32	      2596	dir.c	FUNCTION_83
0x40063e9	            0x89c2	                            mov edx, eax	      2596	dir.c	FUNCTION_83
0x40063eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2596	dir.c	FUNCTION_83
0x40063ef	          0x895018	             mov dword [rax + 0x18], edx	      2596	dir.c	FUNCTION_83
0x40063f2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2597	dir.c	FUNCTION_83
0x40063f6	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      2597	dir.c	FUNCTION_83
0x40063f9	            0x89c7	                            mov edi, eax	      2597	dir.c	FUNCTION_83
0x40063fb	      0xe8539cffff	                    call sym.git_bswap32	      2597	dir.c	FUNCTION_83
0x4006400	            0x89c2	                            mov edx, eax	      2597	dir.c	FUNCTION_83
0x4006402	        0x488b45f8	                mov rax, qword [rbp - 8]	      2597	dir.c	FUNCTION_83
0x4006406	          0x89501c	             mov dword [rax + 0x1c], edx	      2597	dir.c	FUNCTION_83
0x4006409	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2598	dir.c	FUNCTION_83
0x400640d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2598	dir.c	FUNCTION_83
0x4006410	            0x89c7	                            mov edi, eax	      2598	dir.c	FUNCTION_83
0x4006412	      0xe83c9cffff	                    call sym.git_bswap32	      2598	dir.c	FUNCTION_83
0x4006417	            0x89c2	                            mov edx, eax	      2598	dir.c	FUNCTION_83
0x4006419	        0x488b45f8	                mov rax, qword [rbp - 8]	      2598	dir.c	FUNCTION_83
0x400641d	          0x895020	             mov dword [rax + 0x20], edx	      2598	dir.c	FUNCTION_83
0x4006420	              0x90	                                     nop	      2599	dir.c	FUNCTION_83
0x4006421	              0xc9	                                   leave	      2599	dir.c	FUNCTION_83
0x4006422	              0xc3	                                     ret	      2599	dir.c	FUNCTION_83
trace_pass_fl	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,0:functions,0:FOR,0	17
0x400043e	              0x55	                                push rbp	       134	trace.h	FUNCTION_180
0x400043f	          0x4889e5	                            mov rbp, rsp	       134	trace.h	FUNCTION_180
0x4000442	        0x48897df8	                mov qword [rbp - 8], rdi	       134	trace.h	FUNCTION_180
0x4000446	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_180
0x400044a	          0x8b4008	                mov eax, dword [rax + 8]	       135	trace.h	FUNCTION_180
0x400044d	            0x85c0	                           test eax, eax	       135	trace.h	FUNCTION_180
0x400044f	            0x750f	                           jne 0x4000460	       135	trace.h	FUNCTION_180
0x4000451	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_180
0x4000455	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	       135	trace.h	FUNCTION_180
0x4000459	          0x83e001	                              and eax, 1	       135	trace.h	FUNCTION_180
0x400045c	            0x84c0	                             test al, al	       135	trace.h	FUNCTION_180
0x400045e	            0x7507	                           jne 0x4000467	       135	trace.h	FUNCTION_180
0x4000460	      0xb801000000	                              mov eax, 1	       135	trace.h	FUNCTION_180
0x4000465	            0xeb05	                           jmp 0x400046c	       135	trace.h	FUNCTION_180
0x4000467	      0xb800000000	                              mov eax, 0	       135	trace.h	FUNCTION_180
0x400046c	              0x5d	                                 pop rbp	       136	trace.h	FUNCTION_180
0x400046d	              0xc3	                                     ret	       136	trace.h	FUNCTION_180
is_dot_or_dotdot	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,0:functions,0:FOR,0	27
0x4000589	              0x55	                                push rbp	       276	dir.h	FUNCTION_181
0x400058a	          0x4889e5	                            mov rbp, rsp	       276	dir.h	FUNCTION_181
0x400058d	        0x48897df8	                mov qword [rbp - 8], rdi	       276	dir.h	FUNCTION_181
0x4000591	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	dir.h	FUNCTION_181
0x4000595	           0xfb600	                   movzx eax, byte [rax]	       277	dir.h	FUNCTION_181
0x4000598	            0x3c2e	                            cmp al, 0x2e	       277	dir.h	FUNCTION_181
0x400059a	            0x7534	                           jne 0x40005d0	       277	dir.h	FUNCTION_181
0x400059c	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	dir.h	FUNCTION_181
0x40005a0	        0x4883c001	                              add rax, 1	       278	dir.h	FUNCTION_181
0x40005a4	           0xfb600	                   movzx eax, byte [rax]	       278	dir.h	FUNCTION_181
0x40005a7	            0x84c0	                             test al, al	       277	dir.h	FUNCTION_181
0x40005a9	            0x741e	                            je 0x40005c9	       277	dir.h	FUNCTION_181
0x40005ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_181
0x40005af	        0x4883c001	                              add rax, 1	       279	dir.h	FUNCTION_181
0x40005b3	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_181
0x40005b6	            0x3c2e	                            cmp al, 0x2e	       278	dir.h	FUNCTION_181
0x40005b8	            0x7516	                           jne 0x40005d0	       278	dir.h	FUNCTION_181
0x40005ba	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_181
0x40005be	        0x4883c002	                              add rax, 2	       279	dir.h	FUNCTION_181
0x40005c2	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_181
0x40005c5	            0x84c0	                             test al, al	       279	dir.h	FUNCTION_181
0x40005c7	            0x7507	                           jne 0x40005d0	       279	dir.h	FUNCTION_181
0x40005c9	      0xb801000000	                              mov eax, 1	       277	dir.h	FUNCTION_181
0x40005ce	            0xeb05	                           jmp 0x40005d5	       277	dir.h	FUNCTION_181
0x40005d0	      0xb800000000	                              mov eax, 0	       277	dir.h	FUNCTION_181
0x40005d5	              0x5d	                                 pop rbp	       280	dir.h	FUNCTION_181
0x40005d6	              0xc3	                                     ret	       280	dir.h	FUNCTION_181
check_dir_entry_contains	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	36
0x4004e61	              0x55	                                push rbp	      2053	dir.c	FUNCTION_63
0x4004e62	          0x4889e5	                            mov rbp, rsp	      2053	dir.c	FUNCTION_63
0x4004e65	        0x4883ec10	                           sub rsp, 0x10	      2053	dir.c	FUNCTION_63
0x4004e69	        0x48897df8	                mov qword [rbp - 8], rdi	      2053	dir.c	FUNCTION_63
0x4004e6d	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2053	dir.c	FUNCTION_63
0x4004e71	        0x488b45f8	                mov rax, qword [rbp - 8]	      2054	dir.c	FUNCTION_63
0x4004e75	            0x8b10	                    mov edx, dword [rax]	      2054	dir.c	FUNCTION_63
0x4004e77	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2054	dir.c	FUNCTION_63
0x4004e7b	            0x8b00	                    mov eax, dword [rax]	      2054	dir.c	FUNCTION_63
0x4004e7d	            0x39c2	                            cmp edx, eax	      2055	dir.c	FUNCTION_63
0x4004e7f	            0x7346	                           jae 0x4004ec7	      2055	dir.c	FUNCTION_63
0x4004e81	        0x488b45f8	                mov rax, qword [rbp - 8]	      2055	dir.c	FUNCTION_63
0x4004e85	            0x8b00	                    mov eax, dword [rax]	      2055	dir.c	FUNCTION_63
0x4004e87	          0x8d50ff	                      lea edx, [rax - 1]	      2055	dir.c	FUNCTION_63
0x4004e8a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2055	dir.c	FUNCTION_63
0x4004e8e	            0x89d2	                            mov edx, edx	      2055	dir.c	FUNCTION_63
0x4004e90	       0xfb6441004	        movzx eax, byte [rax + rdx + 4] 	      2055	dir.c	FUNCTION_63
0x4004e95	            0x3c2f	                            cmp al, 0x2f	      2054	dir.c	FUNCTION_63
0x4004e97	            0x752e	                           jne 0x4004ec7	      2054	dir.c	FUNCTION_63
0x4004e99	        0x488b45f8	                mov rax, qword [rbp - 8]	      2056	dir.c	FUNCTION_63	CALL_1
0x4004e9d	            0x8b00	                    mov eax, dword [rax]	      2056	dir.c	FUNCTION_63	CALL_1
0x4004e9f	            0x89c2	                            mov edx, eax	      2056	dir.c	FUNCTION_63	CALL_1
0x4004ea1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2056	dir.c	FUNCTION_63	CALL_1
0x4004ea5	        0x488d4804	                      lea rcx, [rax + 4]	      2056	dir.c	FUNCTION_63	CALL_1
0x4004ea9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2056	dir.c	FUNCTION_63	CALL_1
0x4004ead	        0x4883c004	                              add rax, 4	      2056	dir.c	FUNCTION_63	CALL_1
0x4004eb1	          0x4889ce	                            mov rsi, rcx	      2056	dir.c	FUNCTION_63	CALL_1
0x4004eb4	          0x4889c7	                            mov rdi, rax	      2056	dir.c	FUNCTION_63	CALL_1
0x4004eb7	      0xe800000000	                          call 0x4004ebc	      2056	dir.c	FUNCTION_63	CALL_1
0x4004ebc	            0x85c0	                           test eax, eax	      2055	dir.c	FUNCTION_63
0x4004ebe	            0x7507	                           jne 0x4004ec7	      2055	dir.c	FUNCTION_63
0x4004ec0	      0xb801000000	                              mov eax, 1	      2055	dir.c	FUNCTION_63
0x4004ec5	            0xeb05	                           jmp 0x4004ecc	      2055	dir.c	FUNCTION_63
0x4004ec7	      0xb800000000	                              mov eax, 0	      2055	dir.c	FUNCTION_63
0x4004ecc	              0xc9	                                   leave	      2057	dir.c	FUNCTION_63
0x4004ecd	              0xc3	                                     ret	      2057	dir.c	FUNCTION_63
read_cached_dir	SWITCH,0:ELSE,0:WHILE,1:IF,4:DO,0:CALL,1:functions,0:FOR,0	93
0x4004880	              0x55	                                push rbp	      1878	dir.c	FUNCTION_59
0x4004881	          0x4889e5	                            mov rbp, rsp	      1878	dir.c	FUNCTION_59
0x4004884	        0x4883ec20	                           sub rsp, 0x20	      1878	dir.c	FUNCTION_59
0x4004888	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1878	dir.c	FUNCTION_59
0x400488c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1879	dir.c	FUNCTION_59	IF_1
0x4004890	          0x488b00	                    mov rax, qword [rax]	      1879	dir.c	FUNCTION_59	IF_1
0x4004893	          0x4885c0	                           test rax, rax	      1879	dir.c	FUNCTION_59	IF_1
0x4004896	     0xf84a6000000	                            je 0x4004942	      1879	dir.c	FUNCTION_59	IF_1
0x400489c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1880	dir.c	FUNCTION_59	IF_1	CALL_1
0x40048a0	          0x488b00	                    mov rax, qword [rax]	      1880	dir.c	FUNCTION_59	IF_1	CALL_1
0x40048a3	          0x4889c7	                            mov rdi, rax	      1880	dir.c	FUNCTION_59	IF_1	CALL_1
0x40048a6	      0xe800000000	                          call 0x40048ab	      1880	dir.c	FUNCTION_59	IF_1	CALL_1
0x40048ab	          0x4889c2	                            mov rdx, rax	      1880	dir.c	FUNCTION_59	IF_1	CALL_1
0x40048ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1880	dir.c	FUNCTION_59	IF_1	CALL_1
0x40048b2	        0x48895018	             mov qword [rax + 0x18], rdx	      1880	dir.c	FUNCTION_59	IF_1	CALL_1
0x40048b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	dir.c	FUNCTION_59	IF_1	IF_2
0x40048ba	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1881	dir.c	FUNCTION_59	IF_1	IF_2
0x40048be	          0x4885c0	                           test rax, rax	      1881	dir.c	FUNCTION_59	IF_1	IF_2
0x40048c1	            0x750a	                           jne 0x40048cd	      1881	dir.c	FUNCTION_59	IF_1	IF_2
0x40048c3	      0xb8ffffffff	                     mov eax, 0xffffffff	      1882	dir.c	FUNCTION_59	IF_1	IF_2
0x40048c8	      0xe9fa000000	                           jmp 0x40049c7	      1882	dir.c	FUNCTION_59	IF_1	IF_2
0x40048cd	      0xb800000000	                              mov eax, 0	      1883	dir.c	FUNCTION_59	IF_1
0x40048d2	      0xe9f0000000	                           jmp 0x40049c7	      1883	dir.c	FUNCTION_59	IF_1
0x40048d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1886	dir.c	FUNCTION_59	WHILE_1
0x40048db	        0x488b4008	                mov rax, qword [rax + 8]	      1886	dir.c	FUNCTION_59	WHILE_1
0x40048df	          0x488b10	                    mov rdx, qword [rax]	      1886	dir.c	FUNCTION_59	WHILE_1
0x40048e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1886	dir.c	FUNCTION_59	WHILE_1
0x40048e6	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1886	dir.c	FUNCTION_59	WHILE_1
0x40048e9	            0x4898	                                    cdqe	      1886	dir.c	FUNCTION_59	WHILE_1
0x40048eb	        0x48c1e003	                              shl rax, 3	      1886	dir.c	FUNCTION_59	WHILE_1
0x40048ef	          0x4801d0	                            add rax, rdx	      1886	dir.c	FUNCTION_59	WHILE_1
0x40048f2	          0x488b00	                    mov rax, qword [rax]	      1886	dir.c	FUNCTION_59	WHILE_1
0x40048f5	        0x488945f0	             mov qword [rbp - 0x10], rax	      1886	dir.c	FUNCTION_59	WHILE_1
0x40048f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1887	dir.c	FUNCTION_59	WHILE_1	IF_3
0x40048fd	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      1887	dir.c	FUNCTION_59	WHILE_1	IF_3
0x4004901	          0x83e004	                              and eax, 4	      1887	dir.c	FUNCTION_59	WHILE_1	IF_3
0x4004904	            0x84c0	                             test al, al	      1887	dir.c	FUNCTION_59	WHILE_1	IF_3
0x4004906	            0x7513	                           jne 0x400491b	      1887	dir.c	FUNCTION_59	WHILE_1	IF_3
0x4004908	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1888	dir.c	FUNCTION_59	WHILE_1	IF_3
0x400490c	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1888	dir.c	FUNCTION_59	WHILE_1	IF_3
0x400490f	          0x8d5001	                      lea edx, [rax + 1]	      1888	dir.c	FUNCTION_59	WHILE_1	IF_3
0x4004912	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1888	dir.c	FUNCTION_59	WHILE_1	IF_3
0x4004916	          0x895014	             mov dword [rax + 0x14], edx	      1888	dir.c	FUNCTION_59	WHILE_1	IF_3
0x4004919	            0xeb27	                           jmp 0x4004942	      1889	dir.c	FUNCTION_59	WHILE_1	IF_3
0x400491b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1891	dir.c	FUNCTION_59	WHILE_1
0x400491f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1891	dir.c	FUNCTION_59	WHILE_1
0x4004923	        0x48895028	             mov qword [rax + 0x28], rdx	      1891	dir.c	FUNCTION_59	WHILE_1
0x4004927	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1892	dir.c	FUNCTION_59	WHILE_1
0x400492b	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1892	dir.c	FUNCTION_59	WHILE_1
0x400492e	          0x8d5001	                      lea edx, [rax + 1]	      1892	dir.c	FUNCTION_59	WHILE_1
0x4004931	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1892	dir.c	FUNCTION_59	WHILE_1
0x4004935	          0x895014	             mov dword [rax + 0x14], edx	      1892	dir.c	FUNCTION_59	WHILE_1
0x4004938	      0xb800000000	                              mov eax, 0	      1893	dir.c	FUNCTION_59	WHILE_1
0x400493d	      0xe985000000	                           jmp 0x40049c7	      1893	dir.c	FUNCTION_59	WHILE_1
0x4004942	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1885	dir.c	FUNCTION_59	WHILE_1
0x4004946	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1885	dir.c	FUNCTION_59	WHILE_1
0x4004949	            0x89c2	                            mov edx, eax	      1885	dir.c	FUNCTION_59	WHILE_1
0x400494b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1885	dir.c	FUNCTION_59	WHILE_1
0x400494f	        0x488b4008	                mov rax, qword [rax + 8]	      1885	dir.c	FUNCTION_59	WHILE_1
0x4004953	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1885	dir.c	FUNCTION_59	WHILE_1
0x4004956	            0x39c2	                            cmp edx, eax	      1885	dir.c	FUNCTION_59	WHILE_1
0x4004958	     0xf8279ffffff	                            jb 0x40048d7	      1885	dir.c	FUNCTION_59	WHILE_1
0x400495e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1895	dir.c	FUNCTION_59
0x4004962	    0x48c740280000	               mov qword [rax + 0x28], 0	      1895	dir.c	FUNCTION_59
0x400496a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1896	dir.c	FUNCTION_59	IF_4
0x400496e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1896	dir.c	FUNCTION_59	IF_4
0x4004971	            0x89c2	                            mov edx, eax	      1896	dir.c	FUNCTION_59	IF_4
0x4004973	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1896	dir.c	FUNCTION_59	IF_4
0x4004977	        0x488b4008	                mov rax, qword [rax + 8]	      1896	dir.c	FUNCTION_59	IF_4
0x400497b	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1896	dir.c	FUNCTION_59	IF_4
0x400497e	            0x39c2	                            cmp edx, eax	      1896	dir.c	FUNCTION_59	IF_4
0x4004980	            0x7340	                           jae 0x40049c2	      1896	dir.c	FUNCTION_59	IF_4
0x4004982	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1897	dir.c	FUNCTION_59	IF_4
0x4004986	        0x488b4008	                mov rax, qword [rax + 8]	      1897	dir.c	FUNCTION_59	IF_4
0x400498a	        0x488945f8	                mov qword [rbp - 8], rax	      1897	dir.c	FUNCTION_59	IF_4
0x400498e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1898	dir.c	FUNCTION_59	IF_4
0x4004992	        0x488b7008	                mov rsi, qword [rax + 8]	      1898	dir.c	FUNCTION_59	IF_4
0x4004996	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1898	dir.c	FUNCTION_59	IF_4
0x400499a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1898	dir.c	FUNCTION_59	IF_4
0x400499d	          0x8d4801	                      lea ecx, [rax + 1]	      1898	dir.c	FUNCTION_59	IF_4
0x40049a0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1898	dir.c	FUNCTION_59	IF_4
0x40049a4	          0x894a10	             mov dword [rdx + 0x10], ecx	      1898	dir.c	FUNCTION_59	IF_4
0x40049a7	            0x4898	                                    cdqe	      1898	dir.c	FUNCTION_59	IF_4
0x40049a9	        0x48c1e003	                              shl rax, 3	      1898	dir.c	FUNCTION_59	IF_4
0x40049ad	          0x4801f0	                            add rax, rsi	      1898	dir.c	FUNCTION_59	IF_4
0x40049b0	          0x488b10	                    mov rdx, qword [rax]	      1898	dir.c	FUNCTION_59	IF_4
0x40049b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1898	dir.c	FUNCTION_59	IF_4
0x40049b7	        0x48895020	             mov qword [rax + 0x20], rdx	      1898	dir.c	FUNCTION_59	IF_4
0x40049bb	      0xb800000000	                              mov eax, 0	      1899	dir.c	FUNCTION_59	IF_4
0x40049c0	            0xeb05	                           jmp 0x40049c7	      1899	dir.c	FUNCTION_59	IF_4
0x40049c2	      0xb8ffffffff	                     mov eax, 0xffffffff	      1901	dir.c	FUNCTION_59
0x40049c7	              0xc9	                                   leave	      1902	dir.c	FUNCTION_59
0x40049c8	              0xc3	                                     ret	      1902	dir.c	FUNCTION_59
remove_path	SWITCH,0:ELSE,0:WHILE,0:IF,2:DO,1:CALL,7:functions,0:FOR,0	56
0x4006192	              0x55	                                push rbp	      2517	dir.c	FUNCTION_81
0x4006193	          0x4889e5	                            mov rbp, rsp	      2517	dir.c	FUNCTION_81
0x4006196	        0x4883ec20	                           sub rsp, 0x20	      2517	dir.c	FUNCTION_81
0x400619a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2517	dir.c	FUNCTION_81
0x400619e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40061a2	          0x4889c7	                            mov rdi, rax	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40061a5	      0xe800000000	                          call 0x40061aa	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40061aa	            0x85c0	                           test eax, eax	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40061ac	            0x741c	                            je 0x40061ca	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40061ae	      0xe800000000	                          call 0x40061b3	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40061b3	            0x8b00	                    mov eax, dword [rax]	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40061b5	            0x89c7	                            mov edi, eax	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40061b7	      0xe838a0ffff	          call sym.is_missing_file_error	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40061bc	            0x85c0	                           test eax, eax	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40061be	            0x750a	                           jne 0x40061ca	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40061c0	      0xb8ffffffff	                     mov eax, 0xffffffff	      2521	dir.c	FUNCTION_81	IF_1
0x40061c5	      0xe98c000000	                           jmp 0x4006256	      2521	dir.c	FUNCTION_81	IF_1
0x40061ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2523	dir.c	FUNCTION_81	CALL_3
0x40061ce	      0xbe2f000000	                           mov esi, 0x2f	      2523	dir.c	FUNCTION_81	CALL_3
0x40061d3	          0x4889c7	                            mov rdi, rax	      2523	dir.c	FUNCTION_81	CALL_3
0x40061d6	      0xe800000000	                          call 0x40061db	      2523	dir.c	FUNCTION_81	CALL_3
0x40061db	        0x488945f0	             mov qword [rbp - 0x10], rax	      2523	dir.c	FUNCTION_81	CALL_3
0x40061df	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2524	dir.c	FUNCTION_81	IF_2
0x40061e4	            0x746b	                            je 0x4006251	      2524	dir.c	FUNCTION_81	IF_2
0x40061e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2525	dir.c	FUNCTION_81	IF_2	CALL_4
0x40061ea	          0x4889c7	                            mov rdi, rax	      2525	dir.c	FUNCTION_81	IF_2	CALL_4
0x40061ed	      0xe800000000	                          call 0x40061f2	      2525	dir.c	FUNCTION_81	IF_2	CALL_4
0x40061f2	        0x488945f8	                mov qword [rbp - 8], rax	      2525	dir.c	FUNCTION_81	IF_2	CALL_4
0x40061f6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2526	dir.c	FUNCTION_81	IF_2
0x40061fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2526	dir.c	FUNCTION_81	IF_2
0x40061fe	          0x4829c2	                            sub rdx, rax	      2526	dir.c	FUNCTION_81	IF_2
0x4006201	          0x4889d0	                            mov rax, rdx	      2526	dir.c	FUNCTION_81	IF_2
0x4006204	          0x4889c2	                            mov rdx, rax	      2526	dir.c	FUNCTION_81	IF_2
0x4006207	        0x488b45f8	                mov rax, qword [rbp - 8]	      2526	dir.c	FUNCTION_81	IF_2
0x400620b	          0x4801d0	                            add rax, rdx	      2526	dir.c	FUNCTION_81	IF_2
0x400620e	        0x488945f0	             mov qword [rbp - 0x10], rax	      2526	dir.c	FUNCTION_81	IF_2
0x4006212	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2528	dir.c	FUNCTION_81	IF_2	DO_1
0x4006216	          0xc60000	                       mov byte [rax], 0	      2528	dir.c	FUNCTION_81	IF_2	DO_1
0x4006219	        0x488b45f8	                mov rax, qword [rbp - 8]	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x400621d	          0x4889c7	                            mov rdi, rax	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4006220	      0xe800000000	                          call 0x4006225	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4006225	            0x85c0	                           test eax, eax	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4006227	            0x751c	                           jne 0x4006245	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4006229	        0x488b45f8	                mov rax, qword [rbp - 8]	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x400622d	      0xbe2f000000	                           mov esi, 0x2f	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4006232	          0x4889c7	                            mov rdi, rax	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4006235	      0xe800000000	                          call 0x400623a	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x400623a	        0x488945f0	             mov qword [rbp - 0x10], rax	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x400623e	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4006243	            0x75cd	                           jne 0x4006212	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4006245	        0x488b45f8	                mov rax, qword [rbp - 8]	      2530	dir.c	FUNCTION_81	IF_2	CALL_7
0x4006249	          0x4889c7	                            mov rdi, rax	      2530	dir.c	FUNCTION_81	IF_2	CALL_7
0x400624c	      0xe800000000	                          call 0x4006251	      2530	dir.c	FUNCTION_81	IF_2	CALL_7
0x4006251	      0xb800000000	                              mov eax, 0	      2532	dir.c	FUNCTION_81
0x4006256	              0xc9	                                   leave	      2533	dir.c	FUNCTION_81
0x4006257	              0xc3	                                     ret	      2533	dir.c	FUNCTION_81
add_excludes_from_buffer	SWITCH,0:ELSE,0:WHILE,0:IF,3:DO,0:CALL,3:functions,0:FOR,1	92
0x4002406	              0x55	                                push rbp	       873	dir.c	FUNCTION_29
0x4002407	          0x4889e5	                            mov rbp, rsp	       873	dir.c	FUNCTION_29
0x400240a	        0x4883ec40	                           sub rsp, 0x40	       873	dir.c	FUNCTION_29
0x400240e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       873	dir.c	FUNCTION_29
0x4002412	        0x488975e0	             mov qword [rbp - 0x20], rsi	       873	dir.c	FUNCTION_29
0x4002416	        0x488955d8	             mov qword [rbp - 0x28], rdx	       873	dir.c	FUNCTION_29
0x400241a	          0x894dd4	             mov dword [rbp - 0x2c], ecx	       873	dir.c	FUNCTION_29
0x400241d	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       873	dir.c	FUNCTION_29
0x4002421	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       874	dir.c	FUNCTION_29
0x4002428	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       877	dir.c	FUNCTION_29
0x400242c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       877	dir.c	FUNCTION_29
0x4002430	        0x48895008	                mov qword [rax + 8], rdx	       877	dir.c	FUNCTION_29
0x4002434	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x4002438	        0x488d45e8	                   lea rax, [rbp - 0x18]	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x400243c	          0x4889d6	                            mov rsi, rdx	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x400243f	          0x4889c7	                            mov rdi, rax	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x4002442	      0xe800000000	                          call 0x4002447	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x4002447	            0x85c0	                           test eax, eax	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x4002449	            0x7419	                            je 0x4002464	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x400244b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       880	dir.c	FUNCTION_29	IF_1
0x400244f	          0x4889c2	                            mov rdx, rax	       880	dir.c	FUNCTION_29	IF_1
0x4002452	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       880	dir.c	FUNCTION_29	IF_1
0x4002456	        0x488b4008	                mov rax, qword [rax + 8]	       880	dir.c	FUNCTION_29	IF_1
0x400245a	          0x4829c2	                            sub rdx, rax	       880	dir.c	FUNCTION_29	IF_1
0x400245d	          0x4889d0	                            mov rax, rdx	       880	dir.c	FUNCTION_29	IF_1
0x4002460	        0x482945e0	             sub qword [rbp - 0x20], rax	       880	dir.c	FUNCTION_29	IF_1
0x4002464	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       882	dir.c	FUNCTION_29
0x4002468	        0x488945f8	                mov qword [rbp - 8], rax	       882	dir.c	FUNCTION_29
0x400246c	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       884	dir.c	FUNCTION_29	FOR_1
0x4002473	      0xe9b5000000	                           jmp 0x400252d	       884	dir.c	FUNCTION_29	FOR_1
0x4002478	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x400247c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x400247f	            0x4898	                                    cdqe	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x4002481	          0x4801d0	                            add rax, rdx	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x4002484	           0xfb600	                   movzx eax, byte [rax]	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x4002487	            0x3c0a	                             cmp al, 0xa	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x4002489	     0xf859a000000	                           jne 0x4002529	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x400248f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4002493	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4002496	            0x4898	                                    cdqe	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4002498	          0x4801d0	                            add rax, rdx	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x400249b	        0x483b45f8	                cmp rax, qword [rbp - 8]	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x400249f	            0x746f	                            je 0x4002510	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024a5	           0xfb600	                   movzx eax, byte [rax]	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024a8	            0x3c23	                            cmp al, 0x23	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024aa	            0x7464	                            je 0x4002510	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024ac	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024b0	        0x837df000	               cmp dword [rbp - 0x10], 0	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024b4	            0x741f	                            je 0x40024d5	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024ba	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024bd	          0x4863c9	                         movsxd rcx, ecx	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024c0	        0x4883e901	                              sub rcx, 1	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024c4	          0x4801c8	                            add rax, rcx	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024c7	           0xfb600	                   movzx eax, byte [rax]	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024ca	            0x3c0d	                             cmp al, 0xd	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024cc	            0x7507	                           jne 0x40024d5	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024ce	      0xb901000000	                              mov ecx, 1	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024d3	            0xeb05	                           jmp 0x40024da	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024d5	      0xb900000000	                              mov ecx, 0	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024da	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024dd	            0x29c8	                            sub eax, ecx	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024df	            0x4898	                                    cdqe	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024e1	          0x4801d0	                            add rax, rdx	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024e4	          0xc60000	                       mov byte [rax], 0	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40024e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       888	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_2
0x40024eb	          0x4889c7	                            mov rdi, rax	       888	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_2
0x40024ee	      0xe8e6f6ffff	           call sym.trim_trailing_spaces	       888	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_2
0x40024f3	          0x8b7df4	              mov edi, dword [rbp - 0xc]	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x40024f6	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x40024fa	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x40024fd	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x4002501	        0x488b45f8	                mov rax, qword [rbp - 8]	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x4002505	          0x4189f8	                            mov r8d, edi	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x4002508	          0x4889c7	                            mov rdi, rax	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x400250b	      0xe800000000	                          call 0x4002510	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x4002510	        0x8345f401	                add dword [rbp - 0xc], 1	       891	dir.c	FUNCTION_29	FOR_1	IF_2
0x4002514	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       892	dir.c	FUNCTION_29	FOR_1	IF_2
0x4002518	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       892	dir.c	FUNCTION_29	FOR_1	IF_2
0x400251b	          0x4863d2	                         movsxd rdx, edx	       892	dir.c	FUNCTION_29	FOR_1	IF_2
0x400251e	        0x4883c201	                              add rdx, 1	       892	dir.c	FUNCTION_29	FOR_1	IF_2
0x4002522	          0x4801d0	                            add rax, rdx	       892	dir.c	FUNCTION_29	FOR_1	IF_2
0x4002525	        0x488945f8	                mov qword [rbp - 8], rax	       892	dir.c	FUNCTION_29	FOR_1	IF_2
0x4002529	        0x8345f001	               add dword [rbp - 0x10], 1	       884	dir.c	FUNCTION_29	FOR_1
0x400252d	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       884	dir.c	FUNCTION_29	FOR_1
0x4002530	            0x4898	                                    cdqe	       884	dir.c	FUNCTION_29	FOR_1
0x4002532	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       884	dir.c	FUNCTION_29	FOR_1
0x4002536	     0xf823cffffff	                            jb 0x4002478	       884	dir.c	FUNCTION_29	FOR_1
0x400253c	      0xb800000000	                              mov eax, 0	       895	dir.c	FUNCTION_29
0x4002541	              0xc9	                                   leave	       896	dir.c	FUNCTION_29
0x4002542	              0xc3	                                     ret	       896	dir.c	FUNCTION_29
treat_one_path	SWITCH,1:ELSE,0:WHILE,0:IF,5:DO,0:CALL,6:functions,0:FOR,0	140
0x4003fee	              0x55	                                push rbp	      1663	dir.c	FUNCTION_53
0x4003fef	          0x4889e5	                            mov rbp, rsp	      1663	dir.c	FUNCTION_53
0x4003ff2	        0x4883ec40	                           sub rsp, 0x40	      1663	dir.c	FUNCTION_53
0x4003ff6	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1663	dir.c	FUNCTION_53
0x4003ffa	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1663	dir.c	FUNCTION_53
0x4003ffe	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1663	dir.c	FUNCTION_53
0x4004002	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1663	dir.c	FUNCTION_53
0x4004006	        0x448945cc	             mov dword [rbp - 0x34], r8d	      1663	dir.c	FUNCTION_53
0x400400a	        0x4c894dc0	              mov qword [rbp - 0x40], r9	      1663	dir.c	FUNCTION_53
0x400400e	    0x8b1500000000	            mov edx, dword [0x04004014] 	      1665	dir.c	FUNCTION_53	CALL_1
0x4004014	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1665	dir.c	FUNCTION_53	CALL_1
0x4004018	        0x488b4008	                mov rax, qword [rax + 8]	      1665	dir.c	FUNCTION_53	CALL_1
0x400401c	            0x89c7	                            mov edi, eax	      1665	dir.c	FUNCTION_53	CALL_1
0x400401e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1665	dir.c	FUNCTION_53	CALL_1
0x4004022	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1665	dir.c	FUNCTION_53	CALL_1
0x4004026	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1665	dir.c	FUNCTION_53	CALL_1
0x400402a	            0x89d1	                            mov ecx, edx	      1665	dir.c	FUNCTION_53	CALL_1
0x400402c	            0x89fa	                            mov edx, edi	      1665	dir.c	FUNCTION_53	CALL_1
0x400402e	          0x4889c7	                            mov rdi, rax	      1665	dir.c	FUNCTION_53	CALL_1
0x4004031	      0xe800000000	                          call 0x4004036	      1665	dir.c	FUNCTION_53	CALL_1
0x4004036	          0x4885c0	                           test rax, rax	      1665	dir.c	FUNCTION_53	CALL_1
0x4004039	           0xf95c0	                                setne al	      1665	dir.c	FUNCTION_53	CALL_1
0x400403c	           0xfb6c0	                           movzx eax, al	      1665	dir.c	FUNCTION_53	CALL_1
0x400403f	          0x8945f4	              mov dword [rbp - 0xc], eax	      1665	dir.c	FUNCTION_53	CALL_1
0x4004042	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      1668	dir.c	FUNCTION_53	IF_1
0x4004045	            0x85c0	                           test eax, eax	      1668	dir.c	FUNCTION_53	IF_1
0x4004047	            0x7525	                           jne 0x400406e	      1668	dir.c	FUNCTION_53	IF_1
0x4004049	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1669	dir.c	FUNCTION_53	CALL_2
0x400404d	        0x488b4008	                mov rax, qword [rax + 8]	      1669	dir.c	FUNCTION_53	CALL_2
0x4004051	            0x89c1	                            mov ecx, eax	      1669	dir.c	FUNCTION_53	CALL_2
0x4004053	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1669	dir.c	FUNCTION_53	CALL_2
0x4004057	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1669	dir.c	FUNCTION_53	CALL_2
0x400405b	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1669	dir.c	FUNCTION_53	CALL_2
0x400405f	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1669	dir.c	FUNCTION_53	CALL_2
0x4004063	          0x4889c7	                            mov rdi, rax	      1669	dir.c	FUNCTION_53	CALL_2
0x4004066	      0xe853feffff	                      call sym.get_dtype	      1669	dir.c	FUNCTION_53	CALL_2
0x400406b	          0x894510	            mov dword [rbp + 0x10], eax 	      1669	dir.c	FUNCTION_53	CALL_2
0x400406e	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      1672	dir.c	FUNCTION_53	IF_2
0x4004071	          0x83f804	                              cmp eax, 4	      1672	dir.c	FUNCTION_53	IF_2
0x4004074	            0x7410	                            je 0x4004086	      1672	dir.c	FUNCTION_53	IF_2
0x4004076	        0x837df400	                cmp dword [rbp - 0xc], 0	      1672	dir.c	FUNCTION_53	IF_2
0x400407a	            0x740a	                            je 0x4004086	      1672	dir.c	FUNCTION_53	IF_2
0x400407c	      0xb800000000	                              mov eax, 0	      1673	dir.c	FUNCTION_53	IF_2
0x4004081	      0xe944010000	                           jmp 0x40041ca	      1673	dir.c	FUNCTION_53	IF_2
0x4004086	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1693	dir.c	FUNCTION_53	IF_3
0x400408a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1693	dir.c	FUNCTION_53	IF_3
0x400408d	          0x83e040	                           and eax, 0x40	      1693	dir.c	FUNCTION_53	IF_3
0x4004090	            0x85c0	                           test eax, eax	      1693	dir.c	FUNCTION_53	IF_3
0x4004092	            0x743d	                            je 0x40040d1	      1693	dir.c	FUNCTION_53	IF_3
0x4004094	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      1694	dir.c	FUNCTION_53	IF_3
0x4004097	          0x83f804	                              cmp eax, 4	      1693	dir.c	FUNCTION_53	IF_3
0x400409a	            0x7535	                           jne 0x40040d1	      1693	dir.c	FUNCTION_53	IF_3
0x400409c	        0x837df400	                cmp dword [rbp - 0xc], 0	      1694	dir.c	FUNCTION_53	IF_3
0x40040a0	            0x752f	                           jne 0x40040d1	      1694	dir.c	FUNCTION_53	IF_3
0x40040a2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x40040a6	        0x488b4008	                mov rax, qword [rax + 8]	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x40040aa	            0x89c2	                            mov edx, eax	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x40040ac	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x40040b0	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x40040b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x40040b8	          0x4889ce	                            mov rsi, rcx	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x40040bb	          0x4889c7	                            mov rdi, rax	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x40040be	      0xe8aaf7ffff	      call sym.directory_exists_in_index	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x40040c3	            0x85c0	                           test eax, eax	      1695	dir.c	FUNCTION_53	IF_3
0x40040c5	            0x750a	                           jne 0x40040d1	      1695	dir.c	FUNCTION_53	IF_3
0x40040c7	      0xb800000000	                              mov eax, 0	      1697	dir.c	FUNCTION_53	IF_3
0x40040cc	      0xe9f9000000	                           jmp 0x40041ca	      1697	dir.c	FUNCTION_53	IF_3
0x40040d1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1699	dir.c	FUNCTION_53	CALL_4
0x40040d5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1699	dir.c	FUNCTION_53	CALL_4
0x40040d9	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1699	dir.c	FUNCTION_53	CALL_4
0x40040dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1699	dir.c	FUNCTION_53	CALL_4
0x40040e1	        0x488d4d10	                   lea rcx, [rbp + 0x10]	      1699	dir.c	FUNCTION_53	CALL_4
0x40040e5	          0x4889c7	                            mov rdi, rax	      1699	dir.c	FUNCTION_53	CALL_4
0x40040e8	      0xe800000000	                          call 0x40040ed	      1699	dir.c	FUNCTION_53	CALL_4
0x40040ed	          0x8945f8	                mov dword [rbp - 8], eax	      1699	dir.c	FUNCTION_53	CALL_4
0x40040f0	        0x837df800	                  cmp dword [rbp - 8], 0	      1705	dir.c	FUNCTION_53	IF_4
0x40040f4	            0x7418	                            je 0x400410e	      1705	dir.c	FUNCTION_53	IF_4
0x40040f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1705	dir.c	FUNCTION_53	IF_4
0x40040fa	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1705	dir.c	FUNCTION_53	IF_4
0x40040fd	          0x83e021	                           and eax, 0x21	      1705	dir.c	FUNCTION_53	IF_4
0x4004100	            0x85c0	                           test eax, eax	      1705	dir.c	FUNCTION_53	IF_4
0x4004102	            0x750a	                           jne 0x400410e	      1705	dir.c	FUNCTION_53	IF_4
0x4004104	      0xb802000000	                              mov eax, 2	      1706	dir.c	FUNCTION_53	IF_4
0x4004109	      0xe9bc000000	                           jmp 0x40041ca	      1706	dir.c	FUNCTION_53	IF_4
0x400410e	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4004111	          0x83f808	                              cmp eax, 8	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4004114	     0xf849e000000	                            je 0x40041b8	      1708	dir.c	FUNCTION_53	SWITCH_1
0x400411a	          0x83f80a	                            cmp eax, 0xa	      1708	dir.c	FUNCTION_53	SWITCH_1
0x400411d	     0xf8495000000	                            je 0x40041b8	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4004123	          0x83f804	                              cmp eax, 4	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4004126	            0x740a	                            je 0x4004132	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4004128	      0xb800000000	                              mov eax, 0	      1710	dir.c	FUNCTION_53	SWITCH_1
0x400412d	      0xe998000000	                           jmp 0x40041ca	      1710	dir.c	FUNCTION_53	SWITCH_1
0x4004132	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1712	dir.c	FUNCTION_53	SWITCH_1	CALL_5
0x4004136	      0xbe2f000000	                           mov esi, 0x2f	      1712	dir.c	FUNCTION_53	SWITCH_1	CALL_5
0x400413b	          0x4889c7	                            mov rdi, rax	      1712	dir.c	FUNCTION_53	SWITCH_1	CALL_5
0x400413e	      0xe8a2c1ffff	                   call sym.strbuf_addch	      1712	dir.c	FUNCTION_53	SWITCH_1	CALL_5
0x4004143	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1714	dir.c	FUNCTION_53	SWITCH_1
0x4004147	        0x488b4008	                mov rax, qword [rax + 8]	      1714	dir.c	FUNCTION_53	SWITCH_1
0x400414b	          0x4189c2	                           mov r10d, eax	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x400414e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1714	dir.c	FUNCTION_53	SWITCH_1
0x4004152	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1714	dir.c	FUNCTION_53	SWITCH_1
0x4004156	        0x448b45cc	             mov r8d, dword [rbp - 0x34]	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x400415a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x400415e	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4004162	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4004166	          0xff75c0	                 push qword [rbp - 0x40]	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4004169	          0x8b7df8	                mov edi, dword [rbp - 8]	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x400416c	              0x57	                                push rdi	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x400416d	          0x4589c1	                            mov r9d, r8d	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4004170	          0x4589d0	                           mov r8d, r10d	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4004173	          0x4889c7	                            mov rdi, rax	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4004176	      0xe8f9f7ffff	                call sym.treat_directory	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x400417b	        0x4883c410	                           add rsp, 0x10	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x400417f	          0x8945fc	                mov dword [rbp - 4], eax	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4004182	        0x837df800	                  cmp dword [rbp - 8], 0	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4004186	            0x752b	                           jne 0x40041b3	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4004188	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x400418c	            0x7525	                           jne 0x40041b3	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x400418e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1726	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4004192	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1726	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4004195	          0x83e020	                           and eax, 0x20	      1726	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4004198	            0x85c0	                           test eax, eax	      1725	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x400419a	            0x7417	                            je 0x40041b3	      1725	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x400419c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1727	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x40041a0	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1727	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x40041a3	      0x2500010000	                          and eax, 0x100	      1727	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x40041a8	            0x85c0	                           test eax, eax	      1726	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x40041aa	            0x7407	                            je 0x40041b3	      1726	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x40041ac	      0xb801000000	                              mov eax, 1	      1728	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x40041b1	            0xeb17	                           jmp 0x40041ca	      1728	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x40041b3	          0x8b45fc	                mov eax, dword [rbp - 4]	      1729	dir.c	FUNCTION_53	SWITCH_1
0x40041b6	            0xeb12	                           jmp 0x40041ca	      1729	dir.c	FUNCTION_53	SWITCH_1
0x40041b8	        0x837df800	                  cmp dword [rbp - 8], 0	      1732	dir.c	FUNCTION_53	SWITCH_1
0x40041bc	            0x7407	                            je 0x40041c5	      1732	dir.c	FUNCTION_53	SWITCH_1
0x40041be	      0xb802000000	                              mov eax, 2	      1732	dir.c	FUNCTION_53	SWITCH_1
0x40041c3	            0xeb05	                           jmp 0x40041ca	      1732	dir.c	FUNCTION_53	SWITCH_1
0x40041c5	      0xb803000000	                              mov eax, 3	      1732	dir.c	FUNCTION_53	SWITCH_1
0x40041ca	              0xc9	                                   leave	      1734	dir.c	FUNCTION_53
0x40041cb	              0xc3	                                     ret	      1734	dir.c	FUNCTION_53
connect_work_tree_and_git_dir	SWITCH,0:ELSE,0:WHILE,0:IF,3:DO,0:CALL,20:functions,0:FOR,0	119
0x4007b10	              0x55	                                push rbp	      3065	dir.c	FUNCTION_101
0x4007b11	          0x4889e5	                            mov rbp, rsp	      3065	dir.c	FUNCTION_101
0x4007b14	              0x53	                                push rbx	      3065	dir.c	FUNCTION_101
0x4007b15	    0x4881ec980000	                           sub rsp, 0x98	      3065	dir.c	FUNCTION_101
0x4007b1c	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      3065	dir.c	FUNCTION_101
0x4007b23	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      3065	dir.c	FUNCTION_101
0x4007b2a	    0x89956cffffff	             mov dword [rbp - 0x94], edx	      3065	dir.c	FUNCTION_101
0x4007b30	    0x64488b042528	                mov rax, qword fs:[0x28]	      3065	dir.c	FUNCTION_101
0x4007b39	        0x488945e8	             mov qword [rbp - 0x18], rax	      3065	dir.c	FUNCTION_101
0x4007b3d	            0x31c0	                            xor eax, eax	      3065	dir.c	FUNCTION_101
0x4007b3f	    0x48c745900000	               mov qword [rbp - 0x70], 0	      3066	dir.c	FUNCTION_101
0x4007b47	    0x48c745980000	               mov qword [rbp - 0x68], 0	      3066	dir.c	FUNCTION_101
0x4007b4f	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      3066	dir.c	FUNCTION_101
0x4007b57	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      3067	dir.c	FUNCTION_101
0x4007b5f	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      3067	dir.c	FUNCTION_101
0x4007b67	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      3067	dir.c	FUNCTION_101
0x4007b6f	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      3068	dir.c	FUNCTION_101
0x4007b77	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      3068	dir.c	FUNCTION_101
0x4007b7f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3068	dir.c	FUNCTION_101
0x4007b87	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      3072	dir.c	FUNCTION_101	CALL_1
0x4007b8e	        0x488d4590	                   lea rax, [rbp - 0x70]	      3072	dir.c	FUNCTION_101	CALL_1
0x4007b92	      0xbe00000000	                              mov esi, 0	      3072	dir.c	FUNCTION_101	CALL_1
0x4007b97	          0x4889c7	                            mov rdi, rax	      3072	dir.c	FUNCTION_101	CALL_1
0x4007b9a	      0xb800000000	                              mov eax, 0	      3072	dir.c	FUNCTION_101	CALL_1
0x4007b9f	      0xe800000000	                          call 0x4007ba4	      3072	dir.c	FUNCTION_101	CALL_1
0x4007ba4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x4007ba8	          0x4889c7	                            mov rdi, rax	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x4007bab	      0xe800000000	                          call 0x4007bb0	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x4007bb0	            0x85c0	                           test eax, eax	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x4007bb2	            0x741e	                            je 0x4007bd2	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x4007bb4	        0x488b5da0	             mov rbx, qword [rbp - 0x60]	      3074	dir.c	FUNCTION_101	CALL_4
0x4007bb8	      0xbf00000000	                              mov edi, 0	      3074	dir.c	FUNCTION_101	CALL_4
0x4007bbd	      0xe81888ffff	                               call sym.	      3074	dir.c	FUNCTION_101	CALL_4
0x4007bc2	          0x4889de	                            mov rsi, rbx	      3074	dir.c	FUNCTION_101	CALL_4
0x4007bc5	          0x4889c7	                            mov rdi, rax	      3074	dir.c	FUNCTION_101	CALL_4
0x4007bc8	      0xb800000000	                              mov eax, 0	      3074	dir.c	FUNCTION_101	CALL_4
0x4007bcd	      0xe800000000	                          call 0x4007bd2	      3074	dir.c	FUNCTION_101	CALL_4
0x4007bd2	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      3077	dir.c	FUNCTION_101	CALL_5
0x4007bd9	        0x488d45b0	                   lea rax, [rbp - 0x50]	      3077	dir.c	FUNCTION_101	CALL_5
0x4007bdd	      0xbe00000000	                              mov esi, 0	      3077	dir.c	FUNCTION_101	CALL_5
0x4007be2	          0x4889c7	                            mov rdi, rax	      3077	dir.c	FUNCTION_101	CALL_5
0x4007be5	      0xb800000000	                              mov eax, 0	      3077	dir.c	FUNCTION_101	CALL_5
0x4007bea	      0xe800000000	                          call 0x4007bef	      3077	dir.c	FUNCTION_101	CALL_5
0x4007bef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x4007bf3	          0x4889c7	                            mov rdi, rax	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x4007bf6	      0xe800000000	                          call 0x4007bfb	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x4007bfb	            0x85c0	                           test eax, eax	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x4007bfd	            0x741e	                            je 0x4007c1d	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x4007bff	        0x488b5dc0	             mov rbx, qword [rbp - 0x40]	      3079	dir.c	FUNCTION_101	CALL_8
0x4007c03	      0xbf00000000	                              mov edi, 0	      3079	dir.c	FUNCTION_101	CALL_8
0x4007c08	      0xe8cd87ffff	                               call sym.	      3079	dir.c	FUNCTION_101	CALL_8
0x4007c0d	          0x4889de	                            mov rsi, rbx	      3079	dir.c	FUNCTION_101	CALL_8
0x4007c10	          0x4889c7	                            mov rdi, rax	      3079	dir.c	FUNCTION_101	CALL_8
0x4007c13	      0xb800000000	                              mov eax, 0	      3079	dir.c	FUNCTION_101	CALL_8
0x4007c18	      0xe800000000	                          call 0x4007c1d	      3079	dir.c	FUNCTION_101	CALL_8
0x4007c1d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3081	dir.c	FUNCTION_101	CALL_9
0x4007c24	      0xbe01000000	                              mov esi, 1	      3081	dir.c	FUNCTION_101	CALL_9
0x4007c29	          0x4889c7	                            mov rdi, rax	      3081	dir.c	FUNCTION_101	CALL_9
0x4007c2c	      0xe800000000	                          call 0x4007c31	      3081	dir.c	FUNCTION_101	CALL_9
0x4007c31	        0x48894580	             mov qword [rbp - 0x80], rax	      3081	dir.c	FUNCTION_101	CALL_9
0x4007c35	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3082	dir.c	FUNCTION_101	CALL_10
0x4007c3c	      0xbe01000000	                              mov esi, 1	      3082	dir.c	FUNCTION_101	CALL_10
0x4007c41	          0x4889c7	                            mov rdi, rax	      3082	dir.c	FUNCTION_101	CALL_10
0x4007c44	      0xe800000000	                          call 0x4007c49	      3082	dir.c	FUNCTION_101	CALL_10
0x4007c49	        0x48894588	             mov qword [rbp - 0x78], rax	      3082	dir.c	FUNCTION_101	CALL_10
0x4007c4d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3085	dir.c	FUNCTION_101	CALL_11
0x4007c51	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      3085	dir.c	FUNCTION_101	CALL_11
0x4007c55	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3085	dir.c	FUNCTION_101	CALL_11
0x4007c59	          0x4889ce	                            mov rsi, rcx	      3085	dir.c	FUNCTION_101	CALL_11
0x4007c5c	          0x4889c7	                            mov rdi, rax	      3085	dir.c	FUNCTION_101	CALL_11
0x4007c5f	      0xe800000000	                          call 0x4007c64	      3085	dir.c	FUNCTION_101	CALL_11
0x4007c64	          0x4889c2	                            mov rdx, rax	      3085	dir.c	FUNCTION_101	CALL_11
0x4007c67	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3085	dir.c	FUNCTION_101	CALL_11
0x4007c6b	      0xbe00000000	                              mov esi, 0	      3085	dir.c	FUNCTION_101	CALL_11
0x4007c70	          0x4889c7	                            mov rdi, rax	      3085	dir.c	FUNCTION_101	CALL_11
0x4007c73	      0xb800000000	                              mov eax, 0	      3085	dir.c	FUNCTION_101	CALL_11
0x4007c78	      0xe800000000	                          call 0x4007c7d	      3085	dir.c	FUNCTION_101	CALL_11
0x4007c7d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3088	dir.c	FUNCTION_101	CALL_13
0x4007c81	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      3088	dir.c	FUNCTION_101	CALL_13
0x4007c85	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3088	dir.c	FUNCTION_101	CALL_13
0x4007c89	          0x4889ce	                            mov rsi, rcx	      3088	dir.c	FUNCTION_101	CALL_13
0x4007c8c	          0x4889c7	                            mov rdi, rax	      3088	dir.c	FUNCTION_101	CALL_13
0x4007c8f	      0xe800000000	                          call 0x4007c94	      3088	dir.c	FUNCTION_101	CALL_13
0x4007c94	          0x4889c2	                            mov rdx, rax	      3088	dir.c	FUNCTION_101	CALL_13
0x4007c97	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3088	dir.c	FUNCTION_101	CALL_13
0x4007c9b	      0xbe00000000	                              mov esi, 0	      3088	dir.c	FUNCTION_101	CALL_13
0x4007ca0	          0x4889c7	                            mov rdi, rax	      3088	dir.c	FUNCTION_101	CALL_13
0x4007ca3	      0xe800000000	                          call 0x4007ca8	      3088	dir.c	FUNCTION_101	CALL_13
0x4007ca8	        0x488d4590	                   lea rax, [rbp - 0x70]	      3091	dir.c	FUNCTION_101	CALL_15
0x4007cac	          0x4889c7	                            mov rdi, rax	      3091	dir.c	FUNCTION_101	CALL_15
0x4007caf	      0xe800000000	                          call 0x4007cb4	      3091	dir.c	FUNCTION_101	CALL_15
0x4007cb4	        0x488d45b0	                   lea rax, [rbp - 0x50]	      3092	dir.c	FUNCTION_101	CALL_16
0x4007cb8	          0x4889c7	                            mov rdi, rax	      3092	dir.c	FUNCTION_101	CALL_16
0x4007cbb	      0xe800000000	                          call 0x4007cc0	      3092	dir.c	FUNCTION_101	CALL_16
0x4007cc0	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3093	dir.c	FUNCTION_101	CALL_17
0x4007cc4	          0x4889c7	                            mov rdi, rax	      3093	dir.c	FUNCTION_101	CALL_17
0x4007cc7	      0xe800000000	                          call 0x4007ccc	      3093	dir.c	FUNCTION_101	CALL_17
0x4007ccc	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      3095	dir.c	FUNCTION_101	IF_3
0x4007cd3	            0x7413	                            je 0x4007ce8	      3095	dir.c	FUNCTION_101	IF_3
0x4007cd5	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      3096	dir.c	FUNCTION_101	CALL_18
0x4007cd9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3096	dir.c	FUNCTION_101	CALL_18
0x4007cdd	          0x4889d6	                            mov rsi, rdx	      3096	dir.c	FUNCTION_101	CALL_18
0x4007ce0	          0x4889c7	                            mov rdi, rax	      3096	dir.c	FUNCTION_101	CALL_18
0x4007ce3	      0xe881fbffff	    call sym.connect_wt_gitdir_in_nested	      3096	dir.c	FUNCTION_101	CALL_18
0x4007ce8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3098	dir.c	FUNCTION_101	CALL_19
0x4007cec	          0x4889c7	                            mov rdi, rax	      3098	dir.c	FUNCTION_101	CALL_19
0x4007cef	      0xe800000000	                          call 0x4007cf4	      3098	dir.c	FUNCTION_101	CALL_19
0x4007cf4	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3099	dir.c	FUNCTION_101	CALL_20
0x4007cf8	          0x4889c7	                            mov rdi, rax	      3099	dir.c	FUNCTION_101	CALL_20
0x4007cfb	      0xe800000000	                          call 0x4007d00	      3099	dir.c	FUNCTION_101	CALL_20
0x4007d00	              0x90	                                     nop	      3100	dir.c	FUNCTION_101
0x4007d01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3100	dir.c	FUNCTION_101
0x4007d05	    0x644833042528	                xor rax, qword fs:[0x28]	      3100	dir.c	FUNCTION_101
0x4007d0e	            0x7405	                            je 0x4007d15	      3100	dir.c	FUNCTION_101
0x4007d10	      0xe800000000	                          call 0x4007d15	      3100	dir.c	FUNCTION_101
0x4007d15	    0x4881c4980000	                           add rsp, 0x98	      3100	dir.c	FUNCTION_101
0x4007d1c	              0x5b	                                 pop rbx	      3100	dir.c	FUNCTION_101
0x4007d1d	              0x5d	                                 pop rbp	      3100	dir.c	FUNCTION_101
0x4007d1e	              0xc3	                                     ret	      3100	dir.c	FUNCTION_101
strbuf_complete	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,1:functions,0:FOR,0	27
0x4000388	              0x55	                                push rbp	       594	strbuf.h	FUNCTION_139
0x4000389	          0x4889e5	                            mov rbp, rsp	       594	strbuf.h	FUNCTION_139
0x400038c	        0x4883ec10	                           sub rsp, 0x10	       594	strbuf.h	FUNCTION_139
0x4000390	        0x48897df8	                mov qword [rbp - 8], rdi	       594	strbuf.h	FUNCTION_139
0x4000394	            0x89f0	                            mov eax, esi	       594	strbuf.h	FUNCTION_139
0x4000396	          0x8845f4	                mov byte [rbp - 0xc], al	       594	strbuf.h	FUNCTION_139
0x4000399	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_139	IF_1
0x400039d	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_139	IF_1
0x40003a1	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_139	IF_1
0x40003a4	            0x7431	                            je 0x40003d7	       595	strbuf.h	FUNCTION_139	IF_1
0x40003a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_139	IF_1
0x40003aa	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       595	strbuf.h	FUNCTION_139	IF_1
0x40003ae	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_139	IF_1
0x40003b2	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_139	IF_1
0x40003b6	        0x4883e801	                              sub rax, 1	       595	strbuf.h	FUNCTION_139	IF_1
0x40003ba	          0x4801d0	                            add rax, rdx	       595	strbuf.h	FUNCTION_139	IF_1
0x40003bd	           0xfb600	                   movzx eax, byte [rax]	       595	strbuf.h	FUNCTION_139	IF_1
0x40003c0	          0x3a45f4	                cmp al, byte [rbp - 0xc]	       595	strbuf.h	FUNCTION_139	IF_1
0x40003c3	            0x7412	                            je 0x40003d7	       595	strbuf.h	FUNCTION_139	IF_1
0x40003c5	         0xfbe55f4	             movsx edx, byte [rbp - 0xc]	       596	strbuf.h	FUNCTION_139	CALL_1
0x40003c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	strbuf.h	FUNCTION_139	CALL_1
0x40003cd	            0x89d6	                            mov esi, edx	       596	strbuf.h	FUNCTION_139	CALL_1
0x40003cf	          0x4889c7	                            mov rdi, rax	       596	strbuf.h	FUNCTION_139	CALL_1
0x40003d2	      0xe80effffff	                   call sym.strbuf_addch	       596	strbuf.h	FUNCTION_139	CALL_1
0x40003d7	              0x90	                                     nop	       597	strbuf.h	FUNCTION_139
0x40003d8	              0xc9	                                   leave	       597	strbuf.h	FUNCTION_139
0x40003d9	              0xc3	                                     ret	       597	strbuf.h	FUNCTION_139
oidcpy	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	13
0x400050f	              0x55	                                push rbp	       999	cache.h	FUNCTION_153
0x4000510	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_153
0x4000513	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_153
0x4000517	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_153
0x400051b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_153
0x400051f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_153	CALL_1
0x4000523	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_153	CALL_1
0x4000527	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_153	CALL_1
0x400052a	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_153	CALL_1
0x400052d	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_153	CALL_1
0x4000532	              0x90	                                     nop	      1001	cache.h	FUNCTION_153
0x4000533	              0xc9	                                   leave	      1001	cache.h	FUNCTION_153
0x4000534	              0xc3	                                     ret	      1001	cache.h	FUNCTION_153
untracked_cache_remove_from_index	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	14
0x4007813	              0x55	                                push rbp	      3004	dir.c	FUNCTION_98
0x4007814	          0x4889e5	                            mov rbp, rsp	      3004	dir.c	FUNCTION_98
0x4007817	        0x4883ec10	                           sub rsp, 0x10	      3004	dir.c	FUNCTION_98
0x400781b	        0x48897df8	                mov qword [rbp - 8], rdi	      3004	dir.c	FUNCTION_98
0x400781f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3004	dir.c	FUNCTION_98
0x4007823	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      3005	dir.c	FUNCTION_98	CALL_1
0x4007827	        0x488b45f8	                mov rax, qword [rbp - 8]	      3005	dir.c	FUNCTION_98	CALL_1
0x400782b	      0xba01000000	                              mov edx, 1	      3005	dir.c	FUNCTION_98	CALL_1
0x4007830	          0x4889ce	                            mov rsi, rcx	      3005	dir.c	FUNCTION_98	CALL_1
0x4007833	          0x4889c7	                            mov rdi, rax	      3005	dir.c	FUNCTION_98	CALL_1
0x4007836	      0xe800000000	                          call 0x400783b	      3005	dir.c	FUNCTION_98	CALL_1
0x400783b	              0x90	                                     nop	      3006	dir.c	FUNCTION_98
0x400783c	              0xc9	                                   leave	      3006	dir.c	FUNCTION_98
0x400783d	              0xc3	                                     ret	      3006	dir.c	FUNCTION_98
within_depth	SWITCH,0:ELSE,0:WHILE,1:IF,2:DO,0:CALL,0:functions,0:FOR,0	33
0x4000c2a	              0x55	                                push rbp	       212	dir.c	FUNCTION_9
0x4000c2b	          0x4889e5	                            mov rbp, rsp	       212	dir.c	FUNCTION_9
0x4000c2e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       212	dir.c	FUNCTION_9
0x4000c32	          0x8975e4	             mov dword [rbp - 0x1c], esi	       212	dir.c	FUNCTION_9
0x4000c35	          0x8955e0	             mov dword [rbp - 0x20], edx	       212	dir.c	FUNCTION_9
0x4000c38	          0x894ddc	             mov dword [rbp - 0x24], ecx	       212	dir.c	FUNCTION_9
0x4000c3b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       213	dir.c	FUNCTION_9
0x4000c3f	        0x488945f0	             mov qword [rbp - 0x10], rax	       213	dir.c	FUNCTION_9
0x4000c43	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       213	dir.c	FUNCTION_9
0x4000c46	          0x4863d0	                         movsxd rdx, eax	       213	dir.c	FUNCTION_9
0x4000c49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       213	dir.c	FUNCTION_9
0x4000c4d	          0x4801d0	                            add rax, rdx	       213	dir.c	FUNCTION_9
0x4000c50	        0x488945f8	                mov qword [rbp - 8], rax	       213	dir.c	FUNCTION_9
0x4000c54	            0xeb28	                           jmp 0x4000c7e	       215	dir.c	FUNCTION_9	WHILE_1
0x4000c56	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4000c5a	        0x488d5001	                      lea rdx, [rax + 1]	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4000c5e	        0x488955f0	             mov qword [rbp - 0x10], rdx	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4000c62	           0xfb600	                   movzx eax, byte [rax]	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4000c65	            0x3c2f	                            cmp al, 0x2f	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4000c67	            0x7402	                            je 0x4000c6b	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4000c69	            0xeb13	                           jmp 0x4000c7e	       217	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4000c6b	        0x8345e001	               add dword [rbp - 0x20], 1	       218	dir.c	FUNCTION_9	WHILE_1
0x4000c6f	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       219	dir.c	FUNCTION_9	WHILE_1	IF_2
0x4000c72	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       219	dir.c	FUNCTION_9	WHILE_1	IF_2
0x4000c75	            0x7e07	                           jle 0x4000c7e	       219	dir.c	FUNCTION_9	WHILE_1	IF_2
0x4000c77	      0xb800000000	                              mov eax, 0	       220	dir.c	FUNCTION_9	WHILE_1	IF_2
0x4000c7c	            0xeb0f	                           jmp 0x4000c8d	       220	dir.c	FUNCTION_9	WHILE_1	IF_2
0x4000c7e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       215	dir.c	FUNCTION_9	WHILE_1
0x4000c82	        0x483b45f8	                cmp rax, qword [rbp - 8]	       215	dir.c	FUNCTION_9	WHILE_1
0x4000c86	            0x72ce	                            jb 0x4000c56	       215	dir.c	FUNCTION_9	WHILE_1
0x4000c88	      0xb801000000	                              mov eax, 1	       222	dir.c	FUNCTION_9
0x4000c8d	              0x5d	                                 pop rbp	       223	dir.c	FUNCTION_9
0x4000c8e	              0xc3	                                     ret	       223	dir.c	FUNCTION_9
close_cached_dir	SWITCH,0:ELSE,0:WHILE,0:IF,2:DO,0:CALL,1:functions,0:FOR,0	29
0x40049c9	              0x55	                                push rbp	      1905	dir.c	FUNCTION_60
0x40049ca	          0x4889e5	                            mov rbp, rsp	      1905	dir.c	FUNCTION_60
0x40049cd	        0x4883ec10	                           sub rsp, 0x10	      1905	dir.c	FUNCTION_60
0x40049d1	        0x48897df8	                mov qword [rbp - 8], rdi	      1905	dir.c	FUNCTION_60
0x40049d5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1906	dir.c	FUNCTION_60	IF_1
0x40049d9	          0x488b00	                    mov rax, qword [rax]	      1906	dir.c	FUNCTION_60	IF_1
0x40049dc	          0x4885c0	                           test rax, rax	      1906	dir.c	FUNCTION_60	IF_1
0x40049df	            0x740f	                            je 0x40049f0	      1906	dir.c	FUNCTION_60	IF_1
0x40049e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1907	dir.c	FUNCTION_60	CALL_1
0x40049e5	          0x488b00	                    mov rax, qword [rax]	      1907	dir.c	FUNCTION_60	CALL_1
0x40049e8	          0x4889c7	                            mov rdi, rax	      1907	dir.c	FUNCTION_60	CALL_1
0x40049eb	      0xe800000000	                          call 0x40049f0	      1907	dir.c	FUNCTION_60	CALL_1
0x40049f0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1912	dir.c	FUNCTION_60	IF_2
0x40049f4	        0x488b4008	                mov rax, qword [rax + 8]	      1912	dir.c	FUNCTION_60	IF_2
0x40049f8	          0x4885c0	                           test rax, rax	      1912	dir.c	FUNCTION_60	IF_2
0x40049fb	            0x7424	                            je 0x4004a21	      1912	dir.c	FUNCTION_60	IF_2
0x40049fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1913	dir.c	FUNCTION_60	IF_2
0x4004a01	        0x488b4008	                mov rax, qword [rax + 8]	      1913	dir.c	FUNCTION_60	IF_2
0x4004a05	         0xfb65044	           movzx edx, byte [rax + 0x44] 	      1913	dir.c	FUNCTION_60	IF_2
0x4004a09	          0x83ca02	                               or edx, 2	      1913	dir.c	FUNCTION_60	IF_2
0x4004a0c	          0x885044	               mov byte [rax + 0x44], dl	      1913	dir.c	FUNCTION_60	IF_2
0x4004a0f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1914	dir.c	FUNCTION_60	IF_2
0x4004a13	        0x488b4008	                mov rax, qword [rax + 8]	      1914	dir.c	FUNCTION_60	IF_2
0x4004a17	         0xfb65044	           movzx edx, byte [rax + 0x44] 	      1914	dir.c	FUNCTION_60	IF_2
0x4004a1b	          0x83ca04	                               or edx, 4	      1914	dir.c	FUNCTION_60	IF_2
0x4004a1e	          0x885044	               mov byte [rax + 0x44], dl	      1914	dir.c	FUNCTION_60	IF_2
0x4004a21	              0x90	                                     nop	      1916	dir.c	FUNCTION_60
0x4004a22	              0xc9	                                   leave	      1916	dir.c	FUNCTION_60
0x4004a23	              0xc3	                                     ret	      1916	dir.c	FUNCTION_60
fspathncmp	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,2:functions,0:FOR,0	24
0x40006f7	              0x55	                                push rbp	        73	dir.c	FUNCTION_3
0x40006f8	          0x4889e5	                            mov rbp, rsp	        73	dir.c	FUNCTION_3
0x40006fb	        0x4883ec20	                           sub rsp, 0x20	        73	dir.c	FUNCTION_3
0x40006ff	        0x48897df8	                mov qword [rbp - 8], rdi	        73	dir.c	FUNCTION_3
0x4000703	        0x488975f0	             mov qword [rbp - 0x10], rsi	        73	dir.c	FUNCTION_3
0x4000707	        0x488955e8	             mov qword [rbp - 0x18], rdx	        73	dir.c	FUNCTION_3
0x400070b	    0x8b0500000000	            mov eax, dword [0x04000711] 	        74	dir.c	FUNCTION_3	CALL_2
0x4000711	            0x85c0	                           test eax, eax	        74	dir.c	FUNCTION_3	CALL_2
0x4000713	            0x7419	                            je 0x400072e	        74	dir.c	FUNCTION_3	CALL_2
0x4000715	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        74	dir.c	FUNCTION_3	CALL_2
0x4000719	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        74	dir.c	FUNCTION_3	CALL_2
0x400071d	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	dir.c	FUNCTION_3	CALL_2
0x4000721	          0x4889ce	                            mov rsi, rcx	        74	dir.c	FUNCTION_3	CALL_2
0x4000724	          0x4889c7	                            mov rdi, rax	        74	dir.c	FUNCTION_3	CALL_2
0x4000727	      0xe800000000	                          call 0x400072c	        74	dir.c	FUNCTION_3	CALL_2
0x400072c	            0xeb17	                           jmp 0x4000745	        74	dir.c	FUNCTION_3	CALL_2
0x400072e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        74	dir.c	FUNCTION_3	CALL_2
0x4000732	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        74	dir.c	FUNCTION_3	CALL_2
0x4000736	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	dir.c	FUNCTION_3	CALL_2
0x400073a	          0x4889ce	                            mov rsi, rcx	        74	dir.c	FUNCTION_3	CALL_2
0x400073d	          0x4889c7	                            mov rdi, rax	        74	dir.c	FUNCTION_3	CALL_2
0x4000740	      0xe800000000	                          call 0x4000745	        74	dir.c	FUNCTION_3	CALL_2
0x4000745	              0xc9	                                   leave	        75	dir.c	FUNCTION_3
0x4000746	              0xc3	                                     ret	        75	dir.c	FUNCTION_3
new_untracked_cache	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,3:functions,0:FOR,0	32
0x40051d5	              0x55	                                push rbp	      2139	dir.c	FUNCTION_68
0x40051d6	          0x4889e5	                            mov rbp, rsp	      2139	dir.c	FUNCTION_68
0x40051d9	        0x4883ec20	                           sub rsp, 0x20	      2139	dir.c	FUNCTION_68
0x40051dd	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2139	dir.c	FUNCTION_68
0x40051e1	      0xbec0000000	                           mov esi, 0xc0	      2140	dir.c	FUNCTION_68	CALL_1
0x40051e6	      0xbf01000000	                              mov edi, 1	      2140	dir.c	FUNCTION_68	CALL_1
0x40051eb	      0xe800000000	                          call 0x40051f0	      2140	dir.c	FUNCTION_68	CALL_1
0x40051f0	        0x488945f8	                mov qword [rbp - 8], rax	      2140	dir.c	FUNCTION_68	CALL_1
0x40051f4	        0x488b45f8	                mov rax, qword [rbp - 8]	      2141	dir.c	FUNCTION_68	CALL_2
0x40051f8	        0x4883e880	             sub rax, 0xffffffffffffff80	      2141	dir.c	FUNCTION_68	CALL_2
0x40051fc	      0xbe64000000	                           mov esi, 0x64	      2141	dir.c	FUNCTION_68	CALL_2
0x4005201	          0x4889c7	                            mov rdi, rax	      2141	dir.c	FUNCTION_68	CALL_2
0x4005204	      0xe800000000	                          call 0x4005209	      2141	dir.c	FUNCTION_68	CALL_2
0x4005209	        0x488b45f8	                mov rax, qword [rbp - 8]	      2142	dir.c	FUNCTION_68
0x400520d	    0x48c740780000	               mov qword [rax + 0x78], 0	      2142	dir.c	FUNCTION_68
0x4005215	        0x488b45f8	                mov rax, qword [rbp - 8]	      2144	dir.c	FUNCTION_68
0x4005219	    0xc78098000000	               mov dword [rax + 0x98], 6	      2144	dir.c	FUNCTION_68
0x4005223	        0x488b45f8	                mov rax, qword [rbp - 8]	      2145	dir.c	FUNCTION_68	CALL_3
0x4005227	          0x4889c7	                            mov rdi, rax	      2145	dir.c	FUNCTION_68	CALL_3
0x400522a	      0xe852ffffff	            call sym.set_untracked_ident	      2145	dir.c	FUNCTION_68	CALL_3
0x400522f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2146	dir.c	FUNCTION_68
0x4005233	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2146	dir.c	FUNCTION_68
0x4005237	    0x488990b80000	             mov qword [rax + 0xb8], rdx	      2146	dir.c	FUNCTION_68
0x400523e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2147	dir.c	FUNCTION_68
0x4005242	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2147	dir.c	FUNCTION_68
0x4005245	             0xc80	                             or al, 0x80	      2147	dir.c	FUNCTION_68
0x4005247	            0x89c2	                            mov edx, eax	      2147	dir.c	FUNCTION_68
0x4005249	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2147	dir.c	FUNCTION_68
0x400524d	          0x895014	             mov dword [rax + 0x14], edx	      2147	dir.c	FUNCTION_68
0x4005250	              0x90	                                     nop	      2148	dir.c	FUNCTION_68
0x4005251	              0xc9	                                   leave	      2148	dir.c	FUNCTION_68
0x4005252	              0xc3	                                     ret	      2148	dir.c	FUNCTION_68
invalidate_one_component	SWITCH,0:ELSE,0:WHILE,0:IF,2:DO,0:CALL,5:functions,0:FOR,0	57
0x40076bd	              0x55	                                push rbp	      2972	dir.c	FUNCTION_96
0x40076be	          0x4889e5	                            mov rbp, rsp	      2972	dir.c	FUNCTION_96
0x40076c1	        0x4883ec40	                           sub rsp, 0x40	      2972	dir.c	FUNCTION_96
0x40076c5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2972	dir.c	FUNCTION_96
0x40076c9	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2972	dir.c	FUNCTION_96
0x40076cd	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2972	dir.c	FUNCTION_96
0x40076d1	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      2972	dir.c	FUNCTION_96
0x40076d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2973	dir.c	FUNCTION_96	CALL_1
0x40076d8	      0xbe2f000000	                           mov esi, 0x2f	      2973	dir.c	FUNCTION_96	CALL_1
0x40076dd	          0x4889c7	                            mov rdi, rax	      2973	dir.c	FUNCTION_96	CALL_1
0x40076e0	      0xe800000000	                          call 0x40076e5	      2973	dir.c	FUNCTION_96	CALL_1
0x40076e5	        0x488945f0	             mov qword [rbp - 0x10], rax	      2973	dir.c	FUNCTION_96	CALL_1
0x40076e9	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2975	dir.c	FUNCTION_96	IF_1
0x40076ee	            0x7472	                            je 0x4007762	      2975	dir.c	FUNCTION_96	IF_1
0x40076f0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2976	dir.c	FUNCTION_96	IF_1
0x40076f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2976	dir.c	FUNCTION_96	IF_1
0x40076f8	          0x4829c2	                            sub rdx, rax	      2976	dir.c	FUNCTION_96	IF_1
0x40076fb	          0x4889d0	                            mov rax, rdx	      2976	dir.c	FUNCTION_96	IF_1
0x40076fe	          0x8945e8	             mov dword [rbp - 0x18], eax	      2976	dir.c	FUNCTION_96	IF_1
0x4007701	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      2977	dir.c	FUNCTION_96	IF_1
0x4007704	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2977	dir.c	FUNCTION_96	IF_1
0x4007708	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      2977	dir.c	FUNCTION_96	IF_1
0x400770c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2977	dir.c	FUNCTION_96	IF_1
0x4007710	          0x4889c7	                            mov rdi, rax	      2977	dir.c	FUNCTION_96	IF_1
0x4007713	      0xe840a5ffff	               call sym.lookup_untracked	      2977	dir.c	FUNCTION_96	IF_1
0x4007718	        0x488945f8	                mov qword [rbp - 8], rax	      2977	dir.c	FUNCTION_96	IF_1
0x400771c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2981	dir.c	FUNCTION_96	IF_1
0x400771f	          0x8d5001	                      lea edx, [rax + 1]	      2981	dir.c	FUNCTION_96	IF_1
0x4007722	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2980	dir.c	FUNCTION_96	IF_1	CALL_3
0x4007725	            0x29d0	                            sub eax, edx	      2980	dir.c	FUNCTION_96	IF_1	CALL_3
0x4007727	            0x89c1	                            mov ecx, eax	      2980	dir.c	FUNCTION_96	IF_1	CALL_3
0x4007729	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2980	dir.c	FUNCTION_96	IF_1	CALL_3
0x400772d	        0x488d5001	                      lea rdx, [rax + 1]	      2980	dir.c	FUNCTION_96	IF_1	CALL_3
0x4007731	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2979	dir.c	FUNCTION_96	IF_1
0x4007735	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2979	dir.c	FUNCTION_96	IF_1
0x4007739	          0x4889c7	                            mov rdi, rax	      2979	dir.c	FUNCTION_96	IF_1
0x400773c	      0xe87cffffff	       call sym.invalidate_one_component	      2979	dir.c	FUNCTION_96	IF_1
0x4007741	          0x8945ec	             mov dword [rbp - 0x14], eax	      2979	dir.c	FUNCTION_96	IF_1
0x4007744	        0x837dec00	               cmp dword [rbp - 0x14], 0	      2982	dir.c	FUNCTION_96	IF_1	IF_2
0x4007748	            0x7413	                            je 0x400775d	      2982	dir.c	FUNCTION_96	IF_1	IF_2
0x400774a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2983	dir.c	FUNCTION_96	IF_1	CALL_4
0x400774e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2983	dir.c	FUNCTION_96	IF_1	CALL_4
0x4007752	          0x4889d6	                            mov rsi, rdx	      2983	dir.c	FUNCTION_96	IF_1	CALL_4
0x4007755	          0x4889c7	                            mov rdi, rax	      2983	dir.c	FUNCTION_96	IF_1	CALL_4
0x4007758	      0xe821ffffff	       call sym.invalidate_one_directory	      2983	dir.c	FUNCTION_96	IF_1	CALL_4
0x400775d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2984	dir.c	FUNCTION_96	IF_1
0x4007760	            0xeb20	                           jmp 0x4007782	      2984	dir.c	FUNCTION_96	IF_1
0x4007762	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2987	dir.c	FUNCTION_96	CALL_5
0x4007766	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2987	dir.c	FUNCTION_96	CALL_5
0x400776a	          0x4889d6	                            mov rsi, rdx	      2987	dir.c	FUNCTION_96	CALL_5
0x400776d	          0x4889c7	                            mov rdi, rax	      2987	dir.c	FUNCTION_96	CALL_5
0x4007770	      0xe809ffffff	       call sym.invalidate_one_directory	      2987	dir.c	FUNCTION_96	CALL_5
0x4007775	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2988	dir.c	FUNCTION_96
0x4007779	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      2988	dir.c	FUNCTION_96
0x400777f	          0x83e002	                              and eax, 2	      2988	dir.c	FUNCTION_96
0x4007782	              0xc9	                                   leave	      2989	dir.c	FUNCTION_96
0x4007783	              0xc3	                                     ret	      2989	dir.c	FUNCTION_96
st_add	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,1:functions,0:FOR,0	20
0x4000072	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_116
0x4000073	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_116
0x4000076	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_116
0x400007a	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_116
0x400007e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_116
0x4000082	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_116	IF_1
0x4000086	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_116	IF_1
0x4000089	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_116	IF_1
0x400008d	            0x731a	                           jae 0x40000a9	       785	git-compat-util.h	FUNCTION_116	IF_1
0x400008f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_116	IF_1	CALL_1
0x4000093	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_116	IF_1	CALL_1
0x4000097	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_116	IF_1	CALL_1
0x400009a	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_116	IF_1	CALL_1
0x400009f	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_116	IF_1	CALL_1
0x40000a4	      0xe800000000	                          call 0x40000a9	       786	git-compat-util.h	FUNCTION_116	IF_1	CALL_1
0x40000a9	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_116
0x40000ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_116
0x40000b1	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_116
0x40000b4	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_116
0x40000b5	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_116
dir_add_name	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,2:functions,0:FOR,0	96
0x400359f	              0x55	                                push rbp	      1340	dir.c	FUNCTION_44
0x40035a0	          0x4889e5	                            mov rbp, rsp	      1340	dir.c	FUNCTION_44
0x40035a3	              0x53	                                push rbx	      1340	dir.c	FUNCTION_44
0x40035a4	        0x4883ec28	                           sub rsp, 0x28	      1340	dir.c	FUNCTION_44
0x40035a8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1340	dir.c	FUNCTION_44
0x40035ac	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1340	dir.c	FUNCTION_44
0x40035b0	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1340	dir.c	FUNCTION_44
0x40035b4	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      1340	dir.c	FUNCTION_44
0x40035b7	    0x8b0d00000000	            mov ecx, dword [0x040035bd] 	      1341	dir.c	FUNCTION_44	IF_1	CALL_1
0x40035bd	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1341	dir.c	FUNCTION_44	IF_1	CALL_1
0x40035c0	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1341	dir.c	FUNCTION_44	IF_1	CALL_1
0x40035c4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1341	dir.c	FUNCTION_44	IF_1	CALL_1
0x40035c8	          0x4889c7	                            mov rdi, rax	      1341	dir.c	FUNCTION_44	IF_1	CALL_1
0x40035cb	      0xe800000000	                          call 0x40035d0	      1341	dir.c	FUNCTION_44	IF_1	CALL_1
0x40035d0	          0x4885c0	                           test rax, rax	      1341	dir.c	FUNCTION_44	IF_1	CALL_1
0x40035d3	            0x740a	                            je 0x40035df	      1341	dir.c	FUNCTION_44	IF_1	CALL_1
0x40035d5	      0xb800000000	                              mov eax, 0	      1342	dir.c	FUNCTION_44	IF_1
0x40035da	      0xe9e3000000	                           jmp 0x40036c2	      1342	dir.c	FUNCTION_44	IF_1
0x40035df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1344	dir.c	FUNCTION_44
0x40035e3	            0x8b00	                    mov eax, dword [rax]	      1344	dir.c	FUNCTION_44
0x40035e5	          0x8d5001	                      lea edx, [rax + 1]	      1344	dir.c	FUNCTION_44
0x40035e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1344	dir.c	FUNCTION_44
0x40035ec	          0x8b4004	                mov eax, dword [rax + 4]	      1344	dir.c	FUNCTION_44
0x40035ef	            0x39c2	                            cmp edx, eax	      1344	dir.c	FUNCTION_44
0x40035f1	     0xf8e93000000	                           jle 0x400368a	      1344	dir.c	FUNCTION_44
0x40035f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1344	dir.c	FUNCTION_44
0x40035fb	          0x8b4004	                mov eax, dword [rax + 4]	      1344	dir.c	FUNCTION_44
0x40035fe	          0x8d5010	                   lea edx, [rax + 0x10]	      1344	dir.c	FUNCTION_44
0x4003601	            0x89d0	                            mov eax, edx	      1344	dir.c	FUNCTION_44
0x4003603	             0x1c0	                            add eax, eax	      1344	dir.c	FUNCTION_44
0x4003605	             0x1d0	                            add eax, edx	      1344	dir.c	FUNCTION_44
0x4003607	            0x89c2	                            mov edx, eax	      1344	dir.c	FUNCTION_44
0x4003609	          0xc1ea1f	                           shr edx, 0x1f	      1344	dir.c	FUNCTION_44
0x400360c	             0x1d0	                            add eax, edx	      1344	dir.c	FUNCTION_44
0x400360e	            0xd1f8	                              sar eax, 1	      1344	dir.c	FUNCTION_44
0x4003610	            0x89c2	                            mov edx, eax	      1344	dir.c	FUNCTION_44
0x4003612	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1344	dir.c	FUNCTION_44
0x4003616	            0x8b00	                    mov eax, dword [rax]	      1344	dir.c	FUNCTION_44
0x4003618	          0x83c001	                              add eax, 1	      1344	dir.c	FUNCTION_44
0x400361b	            0x39c2	                            cmp edx, eax	      1344	dir.c	FUNCTION_44
0x400361d	            0x7d12	                           jge 0x4003631	      1344	dir.c	FUNCTION_44
0x400361f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1344	dir.c	FUNCTION_44
0x4003623	            0x8b00	                    mov eax, dword [rax]	      1344	dir.c	FUNCTION_44
0x4003625	          0x8d5001	                      lea edx, [rax + 1]	      1344	dir.c	FUNCTION_44
0x4003628	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1344	dir.c	FUNCTION_44
0x400362c	          0x895004	                mov dword [rax + 4], edx	      1344	dir.c	FUNCTION_44
0x400362f	            0xeb22	                           jmp 0x4003653	      1344	dir.c	FUNCTION_44
0x4003631	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1344	dir.c	FUNCTION_44
0x4003635	          0x8b4004	                mov eax, dword [rax + 4]	      1344	dir.c	FUNCTION_44
0x4003638	          0x8d5010	                   lea edx, [rax + 0x10]	      1344	dir.c	FUNCTION_44
0x400363b	            0x89d0	                            mov eax, edx	      1344	dir.c	FUNCTION_44
0x400363d	             0x1c0	                            add eax, eax	      1344	dir.c	FUNCTION_44
0x400363f	             0x1d0	                            add eax, edx	      1344	dir.c	FUNCTION_44
0x4003641	            0x89c2	                            mov edx, eax	      1344	dir.c	FUNCTION_44
0x4003643	          0xc1ea1f	                           shr edx, 0x1f	      1344	dir.c	FUNCTION_44
0x4003646	             0x1d0	                            add eax, edx	      1344	dir.c	FUNCTION_44
0x4003648	            0xd1f8	                              sar eax, 1	      1344	dir.c	FUNCTION_44
0x400364a	            0x89c2	                            mov edx, eax	      1344	dir.c	FUNCTION_44
0x400364c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1344	dir.c	FUNCTION_44
0x4003650	          0x895004	                mov dword [rax + 4], edx	      1344	dir.c	FUNCTION_44
0x4003653	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1344	dir.c	FUNCTION_44
0x4003657	          0x8b4004	                mov eax, dword [rax + 4]	      1344	dir.c	FUNCTION_44
0x400365a	            0x4898	                                    cdqe	      1344	dir.c	FUNCTION_44
0x400365c	          0x4889c6	                            mov rsi, rax	      1344	dir.c	FUNCTION_44
0x400365f	      0xbf08000000	                              mov edi, 8	      1344	dir.c	FUNCTION_44
0x4003664	      0xe84dcaffff	                        call sym.st_mult	      1344	dir.c	FUNCTION_44
0x4003669	          0x4889c2	                            mov rdx, rax	      1344	dir.c	FUNCTION_44
0x400366c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1344	dir.c	FUNCTION_44
0x4003670	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1344	dir.c	FUNCTION_44
0x4003674	          0x4889d6	                            mov rsi, rdx	      1344	dir.c	FUNCTION_44
0x4003677	          0x4889c7	                            mov rdi, rax	      1344	dir.c	FUNCTION_44
0x400367a	      0xe800000000	                          call 0x400367f	      1344	dir.c	FUNCTION_44
0x400367f	          0x4889c2	                            mov rdx, rax	      1344	dir.c	FUNCTION_44
0x4003682	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1344	dir.c	FUNCTION_44
0x4003686	        0x48895018	             mov qword [rax + 0x18], rdx	      1344	dir.c	FUNCTION_44
0x400368a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1345	dir.c	FUNCTION_44	CALL_2
0x400368e	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1345	dir.c	FUNCTION_44	CALL_2
0x4003692	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1345	dir.c	FUNCTION_44	CALL_2
0x4003696	            0x8b00	                    mov eax, dword [rax]	      1345	dir.c	FUNCTION_44	CALL_2
0x4003698	          0x8d4801	                      lea ecx, [rax + 1]	      1345	dir.c	FUNCTION_44	CALL_2
0x400369b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1345	dir.c	FUNCTION_44	CALL_2
0x400369f	            0x890a	                    mov dword [rdx], ecx	      1345	dir.c	FUNCTION_44	CALL_2
0x40036a1	            0x4898	                                    cdqe	      1345	dir.c	FUNCTION_44	CALL_2
0x40036a3	        0x48c1e003	                              shl rax, 3	      1345	dir.c	FUNCTION_44	CALL_2
0x40036a7	        0x488d1c06	                    lea rbx, [rsi + rax]	      1345	dir.c	FUNCTION_44	CALL_2
0x40036ab	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1345	dir.c	FUNCTION_44	CALL_2
0x40036ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1345	dir.c	FUNCTION_44	CALL_2
0x40036b2	            0x89d6	                            mov esi, edx	      1345	dir.c	FUNCTION_44	CALL_2
0x40036b4	          0x4889c7	                            mov rdi, rax	      1345	dir.c	FUNCTION_44	CALL_2
0x40036b7	      0xe872feffff	                  call sym.dir_entry_new	      1345	dir.c	FUNCTION_44	CALL_2
0x40036bc	          0x488903	                    mov qword [rbx], rax	      1345	dir.c	FUNCTION_44	CALL_2
0x40036bf	          0x488b03	                    mov rax, qword [rbx]	      1345	dir.c	FUNCTION_44	CALL_2
0x40036c2	        0x4883c428	                           add rsp, 0x28	      1346	dir.c	FUNCTION_44
0x40036c6	              0x5b	                                 pop rbx	      1346	dir.c	FUNCTION_44
0x40036c7	              0x5d	                                 pop rbp	      1346	dir.c	FUNCTION_44
0x40036c8	              0xc3	                                     ret	      1346	dir.c	FUNCTION_44
fnmatch_icase_mem	SWITCH,0:ELSE,0:WHILE,0:IF,3:DO,0:CALL,5:functions,0:FOR,0	77
0x4000875	              0x55	                                push rbp	       107	dir.c	FUNCTION_5
0x4000876	          0x4889e5	                            mov rbp, rsp	       107	dir.c	FUNCTION_5
0x4000879	        0x4883c480	             add rsp, 0xffffffffffffff80	       107	dir.c	FUNCTION_5
0x400087d	        0x48897d98	             mov qword [rbp - 0x68], rdi	       107	dir.c	FUNCTION_5
0x4000881	          0x897594	             mov dword [rbp - 0x6c], esi	       107	dir.c	FUNCTION_5
0x4000884	        0x48895588	             mov qword [rbp - 0x78], rdx	       107	dir.c	FUNCTION_5
0x4000888	          0x894d90	             mov dword [rbp - 0x70], ecx	       107	dir.c	FUNCTION_5
0x400088b	        0x44894584	             mov dword [rbp - 0x7c], r8d	       107	dir.c	FUNCTION_5
0x400088f	    0x64488b042528	                mov rax, qword fs:[0x28]	       107	dir.c	FUNCTION_5
0x4000898	        0x488945f8	                mov qword [rbp - 8], rax	       107	dir.c	FUNCTION_5
0x400089c	            0x31c0	                            xor eax, eax	       107	dir.c	FUNCTION_5
0x400089e	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       109	dir.c	FUNCTION_5
0x40008a6	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       109	dir.c	FUNCTION_5
0x40008ae	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       109	dir.c	FUNCTION_5
0x40008b6	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       110	dir.c	FUNCTION_5
0x40008be	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       110	dir.c	FUNCTION_5
0x40008c6	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       110	dir.c	FUNCTION_5
0x40008ce	        0x488b4598	             mov rax, qword [rbp - 0x68]	       111	dir.c	FUNCTION_5
0x40008d2	        0x488945b0	             mov qword [rbp - 0x50], rax	       111	dir.c	FUNCTION_5
0x40008d6	        0x488b4588	             mov rax, qword [rbp - 0x78]	       112	dir.c	FUNCTION_5
0x40008da	        0x488945b8	             mov qword [rbp - 0x48], rax	       112	dir.c	FUNCTION_5
0x40008de	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       114	dir.c	FUNCTION_5	IF_1
0x40008e1	          0x4863d0	                         movsxd rdx, eax	       114	dir.c	FUNCTION_5	IF_1
0x40008e4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       114	dir.c	FUNCTION_5	IF_1
0x40008e8	          0x4801d0	                            add rax, rdx	       114	dir.c	FUNCTION_5	IF_1
0x40008eb	           0xfb600	                   movzx eax, byte [rax]	       114	dir.c	FUNCTION_5	IF_1
0x40008ee	            0x84c0	                             test al, al	       114	dir.c	FUNCTION_5	IF_1
0x40008f0	            0x7421	                            je 0x4000913	       114	dir.c	FUNCTION_5	IF_1
0x40008f2	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       115	dir.c	FUNCTION_5	IF_1	CALL_1
0x40008f5	          0x4863d0	                         movsxd rdx, eax	       115	dir.c	FUNCTION_5	IF_1	CALL_1
0x40008f8	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       115	dir.c	FUNCTION_5	IF_1	CALL_1
0x40008fc	        0x488d45c0	                   lea rax, [rbp - 0x40]	       115	dir.c	FUNCTION_5	IF_1	CALL_1
0x4000900	          0x4889ce	                            mov rsi, rcx	       115	dir.c	FUNCTION_5	IF_1	CALL_1
0x4000903	          0x4889c7	                            mov rdi, rax	       115	dir.c	FUNCTION_5	IF_1	CALL_1
0x4000906	      0xe800000000	                          call 0x400090b	       115	dir.c	FUNCTION_5	IF_1	CALL_1
0x400090b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       116	dir.c	FUNCTION_5	IF_1
0x400090f	        0x488945b0	             mov qword [rbp - 0x50], rax	       116	dir.c	FUNCTION_5	IF_1
0x4000913	          0x8b4590	             mov eax, dword [rbp - 0x70]	       118	dir.c	FUNCTION_5	IF_2
0x4000916	          0x4863d0	                         movsxd rdx, eax	       118	dir.c	FUNCTION_5	IF_2
0x4000919	        0x488b4588	             mov rax, qword [rbp - 0x78]	       118	dir.c	FUNCTION_5	IF_2
0x400091d	          0x4801d0	                            add rax, rdx	       118	dir.c	FUNCTION_5	IF_2
0x4000920	           0xfb600	                   movzx eax, byte [rax]	       118	dir.c	FUNCTION_5	IF_2
0x4000923	            0x84c0	                             test al, al	       118	dir.c	FUNCTION_5	IF_2
0x4000925	            0x7421	                            je 0x4000948	       118	dir.c	FUNCTION_5	IF_2
0x4000927	          0x8b4590	             mov eax, dword [rbp - 0x70]	       119	dir.c	FUNCTION_5	IF_2	CALL_2
0x400092a	          0x4863d0	                         movsxd rdx, eax	       119	dir.c	FUNCTION_5	IF_2	CALL_2
0x400092d	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       119	dir.c	FUNCTION_5	IF_2	CALL_2
0x4000931	        0x488d45e0	                   lea rax, [rbp - 0x20]	       119	dir.c	FUNCTION_5	IF_2	CALL_2
0x4000935	          0x4889ce	                            mov rsi, rcx	       119	dir.c	FUNCTION_5	IF_2	CALL_2
0x4000938	          0x4889c7	                            mov rdi, rax	       119	dir.c	FUNCTION_5	IF_2	CALL_2
0x400093b	      0xe800000000	                          call 0x4000940	       119	dir.c	FUNCTION_5	IF_2	CALL_2
0x4000940	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       120	dir.c	FUNCTION_5	IF_2
0x4000944	        0x488945b8	             mov qword [rbp - 0x48], rax	       120	dir.c	FUNCTION_5	IF_2
0x4000948	    0x8b0500000000	            mov eax, dword [0x0400094e] 	       123	dir.c	FUNCTION_5	IF_3
0x400094e	            0x85c0	                           test eax, eax	       123	dir.c	FUNCTION_5	IF_3
0x4000950	            0x7404	                            je 0x4000956	       123	dir.c	FUNCTION_5	IF_3
0x4000952	        0x834d8401	                or dword [rbp - 0x7c], 1	       124	dir.c	FUNCTION_5	IF_3
0x4000956	          0x8b5584	             mov edx, dword [rbp - 0x7c]	       125	dir.c	FUNCTION_5	CALL_3
0x4000959	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       125	dir.c	FUNCTION_5	CALL_3
0x400095d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       125	dir.c	FUNCTION_5	CALL_3
0x4000961	          0x4889ce	                            mov rsi, rcx	       125	dir.c	FUNCTION_5	CALL_3
0x4000964	          0x4889c7	                            mov rdi, rax	       125	dir.c	FUNCTION_5	CALL_3
0x4000967	      0xe800000000	                          call 0x400096c	       125	dir.c	FUNCTION_5	CALL_3
0x400096c	          0x8945ac	             mov dword [rbp - 0x54], eax	       125	dir.c	FUNCTION_5	CALL_3
0x400096f	        0x488d45c0	                   lea rax, [rbp - 0x40]	       127	dir.c	FUNCTION_5	CALL_4
0x4000973	          0x4889c7	                            mov rdi, rax	       127	dir.c	FUNCTION_5	CALL_4
0x4000976	      0xe800000000	                          call 0x400097b	       127	dir.c	FUNCTION_5	CALL_4
0x400097b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       128	dir.c	FUNCTION_5	CALL_5
0x400097f	          0x4889c7	                            mov rdi, rax	       128	dir.c	FUNCTION_5	CALL_5
0x4000982	      0xe800000000	                          call 0x4000987	       128	dir.c	FUNCTION_5	CALL_5
0x4000987	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       130	dir.c	FUNCTION_5
0x400098a	        0x488b75f8	                mov rsi, qword [rbp - 8]	       131	dir.c	FUNCTION_5
0x400098e	    0x644833342528	                xor rsi, qword fs:[0x28]	       131	dir.c	FUNCTION_5
0x4000997	            0x7405	                            je 0x400099e	       131	dir.c	FUNCTION_5
0x4000999	      0xe800000000	                          call 0x400099e	       131	dir.c	FUNCTION_5
0x400099e	              0xc9	                                   leave	       131	dir.c	FUNCTION_5
0x400099f	              0xc3	                                     ret	       131	dir.c	FUNCTION_5
cmp_icase	SWITCH,0:ELSE,0:WHILE,0:IF,2:DO,0:CALL,0:functions,0:FOR,0	38
0x4005a82	              0x55	                                push rbp	      2341	dir.c	FUNCTION_74
0x4005a83	          0x4889e5	                            mov rbp, rsp	      2341	dir.c	FUNCTION_74
0x4005a86	              0x53	                                push rbx	      2341	dir.c	FUNCTION_74
0x4005a87	        0x4883ec08	                              sub rsp, 8	      2341	dir.c	FUNCTION_74
0x4005a8b	            0x89fa	                            mov edx, edi	      2341	dir.c	FUNCTION_74
0x4005a8d	            0x89f0	                            mov eax, esi	      2341	dir.c	FUNCTION_74
0x4005a8f	          0x8855f4	                mov byte [rbp - 0xc], dl	      2341	dir.c	FUNCTION_74
0x4005a92	          0x8845f0	               mov byte [rbp - 0x10], al	      2341	dir.c	FUNCTION_74
0x4005a95	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      2342	dir.c	FUNCTION_74	IF_1
0x4005a99	          0x3a45f0	               cmp al, byte [rbp - 0x10]	      2342	dir.c	FUNCTION_74	IF_1
0x4005a9c	            0x7507	                           jne 0x4005aa5	      2342	dir.c	FUNCTION_74	IF_1
0x4005a9e	      0xb800000000	                              mov eax, 0	      2343	dir.c	FUNCTION_74	IF_1
0x4005aa3	            0xeb44	                           jmp 0x4005ae9	      2343	dir.c	FUNCTION_74	IF_1
0x4005aa5	    0x8b0500000000	            mov eax, dword [0x04005aab] 	      2344	dir.c	FUNCTION_74	IF_2
0x4005aab	            0x85c0	                           test eax, eax	      2344	dir.c	FUNCTION_74	IF_2
0x4005aad	            0x742e	                            je 0x4005add	      2344	dir.c	FUNCTION_74	IF_2
0x4005aaf	         0xfb645f4	             movzx eax, byte [rbp - 0xc]	      2345	dir.c	FUNCTION_74	IF_2
0x4005ab3	           0xfb6c0	                           movzx eax, al	      2345	dir.c	FUNCTION_74	IF_2
0x4005ab6	      0xbe00000000	                              mov esi, 0	      2345	dir.c	FUNCTION_74	IF_2
0x4005abb	            0x89c7	                            mov edi, eax	      2345	dir.c	FUNCTION_74	IF_2
0x4005abd	      0xe8c4a6ffff	                      call sym.sane_case	      2345	dir.c	FUNCTION_74	IF_2
0x4005ac2	            0x89c3	                            mov ebx, eax	      2345	dir.c	FUNCTION_74	IF_2
0x4005ac4	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	      2345	dir.c	FUNCTION_74	IF_2
0x4005ac8	           0xfb6c0	                           movzx eax, al	      2345	dir.c	FUNCTION_74	IF_2
0x4005acb	      0xbe00000000	                              mov esi, 0	      2345	dir.c	FUNCTION_74	IF_2
0x4005ad0	            0x89c7	                            mov edi, eax	      2345	dir.c	FUNCTION_74	IF_2
0x4005ad2	      0xe8afa6ffff	                      call sym.sane_case	      2345	dir.c	FUNCTION_74	IF_2
0x4005ad7	            0x29c3	                            sub ebx, eax	      2345	dir.c	FUNCTION_74	IF_2
0x4005ad9	            0x89d8	                            mov eax, ebx	      2345	dir.c	FUNCTION_74	IF_2
0x4005adb	            0xeb0c	                           jmp 0x4005ae9	      2345	dir.c	FUNCTION_74	IF_2
0x4005add	         0xfbe55f4	             movsx edx, byte [rbp - 0xc]	      2346	dir.c	FUNCTION_74
0x4005ae1	         0xfbe45f0	            movsx eax, byte [rbp - 0x10]	      2346	dir.c	FUNCTION_74
0x4005ae5	            0x29c2	                            sub edx, eax	      2346	dir.c	FUNCTION_74
0x4005ae7	            0x89d0	                            mov eax, edx	      2346	dir.c	FUNCTION_74
0x4005ae9	        0x4883c408	                              add rsp, 8	      2347	dir.c	FUNCTION_74
0x4005aed	              0x5b	                                 pop rbx	      2347	dir.c	FUNCTION_74
0x4005aee	              0x5d	                                 pop rbp	      2347	dir.c	FUNCTION_74
0x4005aef	              0xc3	                                     ret	      2347	dir.c	FUNCTION_74
clear_exclude_list	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,4:functions,0:FOR,1	36
0x4001b5c	              0x55	                                push rbp	       676	dir.c	FUNCTION_22
0x4001b5d	          0x4889e5	                            mov rbp, rsp	       676	dir.c	FUNCTION_22
0x4001b60	        0x4883ec20	                           sub rsp, 0x20	       676	dir.c	FUNCTION_22
0x4001b64	        0x48897de8	             mov qword [rbp - 0x18], rdi	       676	dir.c	FUNCTION_22
0x4001b68	    0xc745fc000000	                  mov dword [rbp - 4], 0	       679	dir.c	FUNCTION_22	FOR_1
0x4001b6f	            0xeb24	                           jmp 0x4001b95	       679	dir.c	FUNCTION_22	FOR_1
0x4001b71	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       680	dir.c	FUNCTION_22	CALL_1
0x4001b75	        0x488b4018	            mov rax, qword [rax + 0x18] 	       680	dir.c	FUNCTION_22	CALL_1
0x4001b79	          0x8b55fc	                mov edx, dword [rbp - 4]	       680	dir.c	FUNCTION_22	CALL_1
0x4001b7c	          0x4863d2	                         movsxd rdx, edx	       680	dir.c	FUNCTION_22	CALL_1
0x4001b7f	        0x48c1e203	                              shl rdx, 3	       680	dir.c	FUNCTION_22	CALL_1
0x4001b83	          0x4801d0	                            add rax, rdx	       680	dir.c	FUNCTION_22	CALL_1
0x4001b86	          0x488b00	                    mov rax, qword [rax]	       680	dir.c	FUNCTION_22	CALL_1
0x4001b89	          0x4889c7	                            mov rdi, rax	       680	dir.c	FUNCTION_22	CALL_1
0x4001b8c	      0xe800000000	                          call 0x4001b91	       680	dir.c	FUNCTION_22	CALL_1
0x4001b91	        0x8345fc01	                  add dword [rbp - 4], 1	       679	dir.c	FUNCTION_22	FOR_1
0x4001b95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       679	dir.c	FUNCTION_22	FOR_1
0x4001b99	            0x8b00	                    mov eax, dword [rax]	       679	dir.c	FUNCTION_22	FOR_1
0x4001b9b	          0x3b45fc	                cmp eax, dword [rbp - 4]	       679	dir.c	FUNCTION_22	FOR_1
0x4001b9e	            0x7fd1	                            jg 0x4001b71	       679	dir.c	FUNCTION_22	FOR_1
0x4001ba0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       681	dir.c	FUNCTION_22	CALL_2
0x4001ba4	        0x488b4018	            mov rax, qword [rax + 0x18] 	       681	dir.c	FUNCTION_22	CALL_2
0x4001ba8	          0x4889c7	                            mov rdi, rax	       681	dir.c	FUNCTION_22	CALL_2
0x4001bab	      0xe800000000	                          call 0x4001bb0	       681	dir.c	FUNCTION_22	CALL_2
0x4001bb0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       682	dir.c	FUNCTION_22	CALL_3
0x4001bb4	        0x488b4008	                mov rax, qword [rax + 8]	       682	dir.c	FUNCTION_22	CALL_3
0x4001bb8	          0x4889c7	                            mov rdi, rax	       682	dir.c	FUNCTION_22	CALL_3
0x4001bbb	      0xe800000000	                          call 0x4001bc0	       682	dir.c	FUNCTION_22	CALL_3
0x4001bc0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       684	dir.c	FUNCTION_22	CALL_4
0x4001bc4	      0xba20000000	                           mov edx, 0x20	       684	dir.c	FUNCTION_22	CALL_4
0x4001bc9	      0xbe00000000	                              mov esi, 0	       684	dir.c	FUNCTION_22	CALL_4
0x4001bce	          0x4889c7	                            mov rdi, rax	       684	dir.c	FUNCTION_22	CALL_4
0x4001bd1	      0xe800000000	                          call 0x4001bd6	       684	dir.c	FUNCTION_22	CALL_4
0x4001bd6	              0x90	                                     nop	       685	dir.c	FUNCTION_22
0x4001bd7	              0xc9	                                   leave	       685	dir.c	FUNCTION_22
0x4001bd8	              0xc3	                                     ret	       685	dir.c	FUNCTION_22
write_one_dir	SWITCH,0:ELSE,0:WHILE,0:IF,6:DO,0:CALL,16:functions,0:FOR,3	210
0x4006423	              0x55	                                push rbp	      2603	dir.c	FUNCTION_84
0x4006424	          0x4889e5	                            mov rbp, rsp	      2603	dir.c	FUNCTION_84
0x4006427	        0x4883c480	             add rsp, 0xffffffffffffff80	      2603	dir.c	FUNCTION_84
0x400642b	        0x48897d88	             mov qword [rbp - 0x78], rdi	      2603	dir.c	FUNCTION_84
0x400642f	        0x48897580	             mov qword [rbp - 0x80], rsi	      2603	dir.c	FUNCTION_84
0x4006433	    0x64488b042528	                mov rax, qword fs:[0x28]	      2603	dir.c	FUNCTION_84
0x400643c	        0x488945f8	                mov qword [rbp - 8], rax	      2603	dir.c	FUNCTION_84
0x4006440	            0x31c0	                            xor eax, eax	      2603	dir.c	FUNCTION_84
0x4006442	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2605	dir.c	FUNCTION_84
0x4006446	        0x4883c020	                           add rax, 0x20	      2605	dir.c	FUNCTION_84
0x400644a	        0x488945a8	             mov qword [rbp - 0x58], rax	      2605	dir.c	FUNCTION_84
0x400644e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2608	dir.c	FUNCTION_84
0x4006452	            0x8b00	                    mov eax, dword [rax]	      2608	dir.c	FUNCTION_84
0x4006454	          0x8d4801	                      lea ecx, [rax + 1]	      2608	dir.c	FUNCTION_84
0x4006457	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2608	dir.c	FUNCTION_84
0x400645b	            0x890a	                    mov dword [rdx], ecx	      2608	dir.c	FUNCTION_84
0x400645d	          0x8945a0	             mov dword [rbp - 0x60], eax	      2608	dir.c	FUNCTION_84
0x4006460	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2614	dir.c	FUNCTION_84	IF_1
0x4006464	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      2614	dir.c	FUNCTION_84	IF_1
0x4006468	          0x83e002	                              and eax, 2	      2614	dir.c	FUNCTION_84	IF_1
0x400646b	            0x84c0	                             test al, al	      2614	dir.c	FUNCTION_84	IF_1
0x400646d	            0x7519	                           jne 0x4006488	      2614	dir.c	FUNCTION_84	IF_1
0x400646f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2615	dir.c	FUNCTION_84	IF_1
0x4006473	    0xc74040000000	               mov dword [rax + 0x40], 0	      2615	dir.c	FUNCTION_84	IF_1
0x400647a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2616	dir.c	FUNCTION_84	IF_1
0x400647e	         0xfb65044	           movzx edx, byte [rax + 0x44] 	      2616	dir.c	FUNCTION_84	IF_1
0x4006482	          0x83e2fe	                     and edx, 0xfffffffe	      2616	dir.c	FUNCTION_84	IF_1
0x4006485	          0x885044	               mov byte [rax + 0x44], dl	      2616	dir.c	FUNCTION_84	IF_1
0x4006488	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2619	dir.c	FUNCTION_84	IF_2
0x400648c	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      2619	dir.c	FUNCTION_84	IF_2
0x4006490	          0x83e001	                              and eax, 1	      2619	dir.c	FUNCTION_84	IF_2
0x4006493	            0x84c0	                             test al, al	      2619	dir.c	FUNCTION_84	IF_2
0x4006495	            0x7419	                            je 0x40064b0	      2619	dir.c	FUNCTION_84	IF_2
0x4006497	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      2620	dir.c	FUNCTION_84	CALL_1
0x400649a	          0x4863d0	                         movsxd rdx, eax	      2620	dir.c	FUNCTION_84	CALL_1
0x400649d	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2620	dir.c	FUNCTION_84	CALL_1
0x40064a1	        0x488b4008	                mov rax, qword [rax + 8]	      2620	dir.c	FUNCTION_84	CALL_1
0x40064a5	          0x4889d6	                            mov rsi, rdx	      2620	dir.c	FUNCTION_84	CALL_1
0x40064a8	          0x4889c7	                            mov rdi, rax	      2620	dir.c	FUNCTION_84	CALL_1
0x40064ab	      0xe800000000	                          call 0x40064b0	      2620	dir.c	FUNCTION_84	CALL_1
0x40064b0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2621	dir.c	FUNCTION_84	IF_3
0x40064b4	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      2621	dir.c	FUNCTION_84	IF_3
0x40064b8	          0x83e002	                              and eax, 2	      2621	dir.c	FUNCTION_84	IF_3
0x40064bb	            0x84c0	                             test al, al	      2621	dir.c	FUNCTION_84	IF_3
0x40064bd	            0x744c	                            je 0x400650b	      2621	dir.c	FUNCTION_84	IF_3
0x40064bf	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x40064c2	          0x4863d0	                         movsxd rdx, eax	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x40064c5	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x40064c9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x40064cd	          0x4889d6	                            mov rsi, rdx	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x40064d0	          0x4889c7	                            mov rdi, rax	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x40064d3	      0xe800000000	                          call 0x40064d8	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x40064d8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2623	dir.c	FUNCTION_84	IF_3	CALL_3
0x40064dc	        0x488d5010	                   lea rdx, [rax + 0x10]	      2623	dir.c	FUNCTION_84	IF_3	CALL_3
0x40064e0	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2623	dir.c	FUNCTION_84	IF_3	CALL_3
0x40064e4	          0x4889d6	                            mov rsi, rdx	      2623	dir.c	FUNCTION_84	IF_3	CALL_3
0x40064e7	          0x4889c7	                            mov rdi, rax	      2623	dir.c	FUNCTION_84	IF_3	CALL_3
0x40064ea	      0xe854feffff	              call sym.stat_data_to_disk	      2623	dir.c	FUNCTION_84	IF_3	CALL_3
0x40064ef	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x40064f3	        0x488d4838	                   lea rcx, [rax + 0x38]	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x40064f7	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x40064fb	      0xba24000000	                           mov edx, 0x24	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x4006500	          0x4889c6	                            mov rsi, rax	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x4006503	          0x4889cf	                            mov rdi, rcx	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x4006506	      0xe800000000	                          call 0x400650b	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x400650b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2626	dir.c	FUNCTION_84	IF_4	CALL_5
0x400650f	        0x4883c045	                           add rax, 0x45	      2626	dir.c	FUNCTION_84	IF_4	CALL_5
0x4006513	          0x4889c7	                            mov rdi, rax	      2626	dir.c	FUNCTION_84	IF_4	CALL_5
0x4006516	      0xe8a29fffff	                   call sym.is_null_sha1	      2626	dir.c	FUNCTION_84	IF_4	CALL_5
0x400651b	            0x85c0	                           test eax, eax	      2626	dir.c	FUNCTION_84	IF_4	CALL_5
0x400651d	            0x7539	                           jne 0x4006558	      2626	dir.c	FUNCTION_84	IF_4	CALL_5
0x400651f	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x4006522	          0x4863d0	                         movsxd rdx, eax	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x4006525	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x4006529	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x400652d	          0x4889d6	                            mov rsi, rdx	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x4006530	          0x4889c7	                            mov rdi, rax	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x4006533	      0xe800000000	                          call 0x4006538	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x4006538	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x400653c	        0x488d4845	                   lea rcx, [rax + 0x45]	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4006540	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4006544	        0x4883c050	                           add rax, 0x50	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4006548	      0xba14000000	                           mov edx, 0x14	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x400654d	          0x4889ce	                            mov rsi, rcx	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4006550	          0x4889c7	                            mov rdi, rax	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4006553	      0xe800000000	                          call 0x4006558	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4006558	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2631	dir.c	FUNCTION_84	CALL_8
0x400655c	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2631	dir.c	FUNCTION_84	CALL_8
0x400655f	            0x89c2	                            mov edx, eax	      2631	dir.c	FUNCTION_84	CALL_8
0x4006561	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2631	dir.c	FUNCTION_84	CALL_8
0x4006565	          0x4889c6	                            mov rsi, rax	      2631	dir.c	FUNCTION_84	CALL_8
0x4006568	          0x4889d7	                            mov rdi, rdx	      2631	dir.c	FUNCTION_84	CALL_8
0x400656b	      0xe800000000	                          call 0x4006570	      2631	dir.c	FUNCTION_84	CALL_8
0x4006570	          0x8945a4	             mov dword [rbp - 0x5c], eax	      2631	dir.c	FUNCTION_84	CALL_8
0x4006573	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	      2632	dir.c	FUNCTION_84	CALL_9
0x4006576	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2632	dir.c	FUNCTION_84	CALL_9
0x400657a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2632	dir.c	FUNCTION_84	CALL_9
0x400657e	          0x4889ce	                            mov rsi, rcx	      2632	dir.c	FUNCTION_84	CALL_9
0x4006581	          0x4889c7	                            mov rdi, rax	      2632	dir.c	FUNCTION_84	CALL_9
0x4006584	      0xe800000000	                          call 0x4006589	      2632	dir.c	FUNCTION_84	CALL_9
0x4006589	    0xc745a0000000	               mov dword [rbp - 0x60], 0	      2635	dir.c	FUNCTION_84	FOR_1
0x4006590	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      2635	dir.c	FUNCTION_84	FOR_1
0x4006597	            0xeb2a	                           jmp 0x40065c3	      2635	dir.c	FUNCTION_84	FOR_1
0x4006599	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x400659d	          0x488b00	                    mov rax, qword [rax]	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x40065a0	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x40065a3	          0x4863d2	                         movsxd rdx, edx	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x40065a6	        0x48c1e203	                              shl rdx, 3	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x40065aa	          0x4801d0	                            add rax, rdx	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x40065ad	          0x488b00	                    mov rax, qword [rax]	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x40065b0	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x40065b4	          0x83e004	                              and eax, 4	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x40065b7	            0x84c0	                             test al, al	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x40065b9	            0x7404	                            je 0x40065bf	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x40065bb	        0x83459c01	               add dword [rbp - 0x64], 1	      2637	dir.c	FUNCTION_84	FOR_1	IF_5
0x40065bf	        0x8345a001	               add dword [rbp - 0x60], 1	      2635	dir.c	FUNCTION_84	FOR_1
0x40065c3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2635	dir.c	FUNCTION_84	FOR_1
0x40065c7	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2635	dir.c	FUNCTION_84	FOR_1
0x40065ca	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      2635	dir.c	FUNCTION_84	FOR_1
0x40065cd	            0x39c2	                            cmp edx, eax	      2635	dir.c	FUNCTION_84	FOR_1
0x40065cf	            0x77c8	                            ja 0x4006599	      2635	dir.c	FUNCTION_84	FOR_1
0x40065d1	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2638	dir.c	FUNCTION_84	CALL_10
0x40065d4	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2638	dir.c	FUNCTION_84	CALL_10
0x40065d8	          0x4889d6	                            mov rsi, rdx	      2638	dir.c	FUNCTION_84	CALL_10
0x40065db	          0x4889c7	                            mov rdi, rax	      2638	dir.c	FUNCTION_84	CALL_10
0x40065de	      0xe800000000	                          call 0x40065e3	      2638	dir.c	FUNCTION_84	CALL_10
0x40065e3	          0x8945a4	             mov dword [rbp - 0x5c], eax	      2638	dir.c	FUNCTION_84	CALL_10
0x40065e6	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	      2639	dir.c	FUNCTION_84	CALL_11
0x40065e9	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2639	dir.c	FUNCTION_84	CALL_11
0x40065ed	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2639	dir.c	FUNCTION_84	CALL_11
0x40065f1	          0x4889ce	                            mov rsi, rcx	      2639	dir.c	FUNCTION_84	CALL_11
0x40065f4	          0x4889c7	                            mov rdi, rax	      2639	dir.c	FUNCTION_84	CALL_11
0x40065f7	      0xe800000000	                          call 0x40065fc	      2639	dir.c	FUNCTION_84	CALL_11
0x40065fc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2641	dir.c	FUNCTION_84	CALL_13
0x4006600	        0x4883c059	                           add rax, 0x59	      2641	dir.c	FUNCTION_84	CALL_13
0x4006604	          0x4889c7	                            mov rdi, rax	      2641	dir.c	FUNCTION_84	CALL_13
0x4006607	      0xe800000000	                          call 0x400660c	      2641	dir.c	FUNCTION_84	CALL_13
0x400660c	        0x488d5001	                      lea rdx, [rax + 1]	      2641	dir.c	FUNCTION_84	CALL_13
0x4006610	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2641	dir.c	FUNCTION_84	CALL_13
0x4006614	        0x488d4859	                   lea rcx, [rax + 0x59]	      2641	dir.c	FUNCTION_84	CALL_13
0x4006618	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2641	dir.c	FUNCTION_84	CALL_13
0x400661c	          0x4889ce	                            mov rsi, rcx	      2641	dir.c	FUNCTION_84	CALL_13
0x400661f	          0x4889c7	                            mov rdi, rax	      2641	dir.c	FUNCTION_84	CALL_13
0x4006622	      0xe800000000	                          call 0x4006627	      2641	dir.c	FUNCTION_84	CALL_13
0x4006627	    0xc745a0000000	               mov dword [rbp - 0x60], 0	      2643	dir.c	FUNCTION_84	FOR_2
0x400662e	            0xeb4f	                           jmp 0x400667f	      2643	dir.c	FUNCTION_84	FOR_2
0x4006630	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2645	dir.c	FUNCTION_84	CALL_15
0x4006634	        0x488b4008	                mov rax, qword [rax + 8]	      2645	dir.c	FUNCTION_84	CALL_15
0x4006638	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      2645	dir.c	FUNCTION_84	CALL_15
0x400663b	          0x4863d2	                         movsxd rdx, edx	      2645	dir.c	FUNCTION_84	CALL_15
0x400663e	        0x48c1e203	                              shl rdx, 3	      2645	dir.c	FUNCTION_84	CALL_15
0x4006642	          0x4801d0	                            add rax, rdx	      2645	dir.c	FUNCTION_84	CALL_15
0x4006645	          0x488b00	                    mov rax, qword [rax]	      2645	dir.c	FUNCTION_84	CALL_15
0x4006648	          0x4889c7	                            mov rdi, rax	      2645	dir.c	FUNCTION_84	CALL_15
0x400664b	      0xe800000000	                          call 0x4006650	      2645	dir.c	FUNCTION_84	CALL_15
0x4006650	        0x488d5001	                      lea rdx, [rax + 1]	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x4006654	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x4006658	        0x488b4008	                mov rax, qword [rax + 8]	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x400665c	          0x8b4da0	             mov ecx, dword [rbp - 0x60]	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x400665f	          0x4863c9	                         movsxd rcx, ecx	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x4006662	        0x48c1e103	                              shl rcx, 3	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x4006666	          0x4801c8	                            add rax, rcx	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x4006669	          0x488b08	                    mov rcx, qword [rax]	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x400666c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x4006670	          0x4889ce	                            mov rsi, rcx	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x4006673	          0x4889c7	                            mov rdi, rax	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x4006676	      0xe800000000	                          call 0x400667b	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x400667b	        0x8345a001	               add dword [rbp - 0x60], 1	      2643	dir.c	FUNCTION_84	FOR_2
0x400667f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2643	dir.c	FUNCTION_84	FOR_2
0x4006683	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2643	dir.c	FUNCTION_84	FOR_2
0x4006686	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      2643	dir.c	FUNCTION_84	FOR_2
0x4006689	            0x39c2	                            cmp edx, eax	      2643	dir.c	FUNCTION_84	FOR_2
0x400668b	            0x77a3	                            ja 0x4006630	      2643	dir.c	FUNCTION_84	FOR_2
0x400668d	    0xc745a0000000	               mov dword [rbp - 0x60], 0	      2647	dir.c	FUNCTION_84	FOR_3
0x4006694	            0xeb4c	                           jmp 0x40066e2	      2647	dir.c	FUNCTION_84	FOR_3
0x4006696	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x400669a	          0x488b00	                    mov rax, qword [rax]	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x400669d	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066a0	          0x4863d2	                         movsxd rdx, edx	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066a3	        0x48c1e203	                              shl rdx, 3	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066a7	          0x4801d0	                            add rax, rdx	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066aa	          0x488b00	                    mov rax, qword [rax]	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066ad	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066b1	          0x83e004	                              and eax, 4	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066b4	            0x84c0	                             test al, al	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066b6	            0x7426	                            je 0x40066de	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066b8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066bc	          0x488b00	                    mov rax, qword [rax]	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066bf	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066c2	          0x4863d2	                         movsxd rdx, edx	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066c5	        0x48c1e203	                              shl rdx, 3	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066c9	          0x4801d0	                            add rax, rdx	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066cc	          0x488b00	                    mov rax, qword [rax]	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066cf	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066d3	          0x4889d6	                            mov rsi, rdx	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066d6	          0x4889c7	                            mov rdi, rax	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066d9	      0xe845fdffff	                  call sym.write_one_dir	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40066de	        0x8345a001	               add dword [rbp - 0x60], 1	      2647	dir.c	FUNCTION_84	FOR_3
0x40066e2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2647	dir.c	FUNCTION_84	FOR_3
0x40066e6	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2647	dir.c	FUNCTION_84	FOR_3
0x40066e9	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      2647	dir.c	FUNCTION_84	FOR_3
0x40066ec	            0x39c2	                            cmp edx, eax	      2647	dir.c	FUNCTION_84	FOR_3
0x40066ee	            0x77a6	                            ja 0x4006696	      2647	dir.c	FUNCTION_84	FOR_3
0x40066f0	              0x90	                                     nop	      2650	dir.c	FUNCTION_84
0x40066f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2650	dir.c	FUNCTION_84
0x40066f5	    0x644833042528	                xor rax, qword fs:[0x28]	      2650	dir.c	FUNCTION_84
0x40066fe	            0x7405	                            je 0x4006705	      2650	dir.c	FUNCTION_84
0x4006700	      0xe800000000	                          call 0x4006705	      2650	dir.c	FUNCTION_84
0x4006705	              0xc9	                                   leave	      2650	dir.c	FUNCTION_84
0x4006706	              0xc3	                                     ret	      2650	dir.c	FUNCTION_84
add_exclude_list	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	93
0x400260a	              0x55	                                push rbp	       924	dir.c	FUNCTION_32
0x400260b	          0x4889e5	                            mov rbp, rsp	       924	dir.c	FUNCTION_32
0x400260e	        0x4883ec30	                           sub rsp, 0x30	       924	dir.c	FUNCTION_32
0x4002612	        0x48897de8	             mov qword [rbp - 0x18], rdi	       924	dir.c	FUNCTION_32
0x4002616	          0x8975e4	             mov dword [rbp - 0x1c], esi	       924	dir.c	FUNCTION_32
0x4002619	        0x488955d8	             mov qword [rbp - 0x28], rdx	       924	dir.c	FUNCTION_32
0x400261d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       928	dir.c	FUNCTION_32
0x4002620	            0x4898	                                    cdqe	       928	dir.c	FUNCTION_32
0x4002622	        0x4883c003	                              add rax, 3	       928	dir.c	FUNCTION_32
0x4002626	        0x48c1e004	                              shl rax, 4	       928	dir.c	FUNCTION_32
0x400262a	          0x4889c2	                            mov rdx, rax	       928	dir.c	FUNCTION_32
0x400262d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       928	dir.c	FUNCTION_32
0x4002631	          0x4801d0	                            add rax, rdx	       928	dir.c	FUNCTION_32
0x4002634	        0x488945f0	             mov qword [rbp - 0x10], rax	       928	dir.c	FUNCTION_32
0x4002638	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       929	dir.c	FUNCTION_32
0x400263c	            0x8b00	                    mov eax, dword [rax]	       929	dir.c	FUNCTION_32
0x400263e	          0x8d5001	                      lea edx, [rax + 1]	       929	dir.c	FUNCTION_32
0x4002641	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       929	dir.c	FUNCTION_32
0x4002645	          0x8b4004	                mov eax, dword [rax + 4]	       929	dir.c	FUNCTION_32
0x4002648	            0x39c2	                            cmp edx, eax	       929	dir.c	FUNCTION_32
0x400264a	     0xf8e93000000	                           jle 0x40026e3	       929	dir.c	FUNCTION_32
0x4002650	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       929	dir.c	FUNCTION_32
0x4002654	          0x8b4004	                mov eax, dword [rax + 4]	       929	dir.c	FUNCTION_32
0x4002657	          0x8d5010	                   lea edx, [rax + 0x10]	       929	dir.c	FUNCTION_32
0x400265a	            0x89d0	                            mov eax, edx	       929	dir.c	FUNCTION_32
0x400265c	             0x1c0	                            add eax, eax	       929	dir.c	FUNCTION_32
0x400265e	             0x1d0	                            add eax, edx	       929	dir.c	FUNCTION_32
0x4002660	            0x89c2	                            mov edx, eax	       929	dir.c	FUNCTION_32
0x4002662	          0xc1ea1f	                           shr edx, 0x1f	       929	dir.c	FUNCTION_32
0x4002665	             0x1d0	                            add eax, edx	       929	dir.c	FUNCTION_32
0x4002667	            0xd1f8	                              sar eax, 1	       929	dir.c	FUNCTION_32
0x4002669	            0x89c2	                            mov edx, eax	       929	dir.c	FUNCTION_32
0x400266b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       929	dir.c	FUNCTION_32
0x400266f	            0x8b00	                    mov eax, dword [rax]	       929	dir.c	FUNCTION_32
0x4002671	          0x83c001	                              add eax, 1	       929	dir.c	FUNCTION_32
0x4002674	            0x39c2	                            cmp edx, eax	       929	dir.c	FUNCTION_32
0x4002676	            0x7d12	                           jge 0x400268a	       929	dir.c	FUNCTION_32
0x4002678	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       929	dir.c	FUNCTION_32
0x400267c	            0x8b00	                    mov eax, dword [rax]	       929	dir.c	FUNCTION_32
0x400267e	          0x8d5001	                      lea edx, [rax + 1]	       929	dir.c	FUNCTION_32
0x4002681	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       929	dir.c	FUNCTION_32
0x4002685	          0x895004	                mov dword [rax + 4], edx	       929	dir.c	FUNCTION_32
0x4002688	            0xeb22	                           jmp 0x40026ac	       929	dir.c	FUNCTION_32
0x400268a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       929	dir.c	FUNCTION_32
0x400268e	          0x8b4004	                mov eax, dword [rax + 4]	       929	dir.c	FUNCTION_32
0x4002691	          0x8d5010	                   lea edx, [rax + 0x10]	       929	dir.c	FUNCTION_32
0x4002694	            0x89d0	                            mov eax, edx	       929	dir.c	FUNCTION_32
0x4002696	             0x1c0	                            add eax, eax	       929	dir.c	FUNCTION_32
0x4002698	             0x1d0	                            add eax, edx	       929	dir.c	FUNCTION_32
0x400269a	            0x89c2	                            mov edx, eax	       929	dir.c	FUNCTION_32
0x400269c	          0xc1ea1f	                           shr edx, 0x1f	       929	dir.c	FUNCTION_32
0x400269f	             0x1d0	                            add eax, edx	       929	dir.c	FUNCTION_32
0x40026a1	            0xd1f8	                              sar eax, 1	       929	dir.c	FUNCTION_32
0x40026a3	            0x89c2	                            mov edx, eax	       929	dir.c	FUNCTION_32
0x40026a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       929	dir.c	FUNCTION_32
0x40026a9	          0x895004	                mov dword [rax + 4], edx	       929	dir.c	FUNCTION_32
0x40026ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       929	dir.c	FUNCTION_32
0x40026b0	          0x8b4004	                mov eax, dword [rax + 4]	       929	dir.c	FUNCTION_32
0x40026b3	            0x4898	                                    cdqe	       929	dir.c	FUNCTION_32
0x40026b5	          0x4889c6	                            mov rsi, rax	       929	dir.c	FUNCTION_32
0x40026b8	      0xbf20000000	                           mov edi, 0x20	       929	dir.c	FUNCTION_32
0x40026bd	      0xe8f4d9ffff	                        call sym.st_mult	       929	dir.c	FUNCTION_32
0x40026c2	          0x4889c2	                            mov rdx, rax	       929	dir.c	FUNCTION_32
0x40026c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       929	dir.c	FUNCTION_32
0x40026c9	        0x488b4008	                mov rax, qword [rax + 8]	       929	dir.c	FUNCTION_32
0x40026cd	          0x4889d6	                            mov rsi, rdx	       929	dir.c	FUNCTION_32
0x40026d0	          0x4889c7	                            mov rdi, rax	       929	dir.c	FUNCTION_32
0x40026d3	      0xe800000000	                          call 0x40026d8	       929	dir.c	FUNCTION_32
0x40026d8	          0x4889c2	                            mov rdx, rax	       929	dir.c	FUNCTION_32
0x40026db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       929	dir.c	FUNCTION_32
0x40026df	        0x48895008	                mov qword [rax + 8], rdx	       929	dir.c	FUNCTION_32
0x40026e3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       930	dir.c	FUNCTION_32
0x40026e7	        0x488b7008	                mov rsi, qword [rax + 8]	       930	dir.c	FUNCTION_32
0x40026eb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       930	dir.c	FUNCTION_32
0x40026ef	            0x8b00	                    mov eax, dword [rax]	       930	dir.c	FUNCTION_32
0x40026f1	          0x8d4801	                      lea ecx, [rax + 1]	       930	dir.c	FUNCTION_32
0x40026f4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       930	dir.c	FUNCTION_32
0x40026f8	            0x890a	                    mov dword [rdx], ecx	       930	dir.c	FUNCTION_32
0x40026fa	            0x4898	                                    cdqe	       930	dir.c	FUNCTION_32
0x40026fc	        0x48c1e005	                              shl rax, 5	       930	dir.c	FUNCTION_32
0x4002700	          0x4801f0	                            add rax, rsi	       930	dir.c	FUNCTION_32
0x4002703	        0x488945f8	                mov qword [rbp - 8], rax	       930	dir.c	FUNCTION_32
0x4002707	        0x488b45f8	                mov rax, qword [rbp - 8]	       931	dir.c	FUNCTION_32	CALL_1
0x400270b	      0xba20000000	                           mov edx, 0x20	       931	dir.c	FUNCTION_32	CALL_1
0x4002710	      0xbe00000000	                              mov esi, 0	       931	dir.c	FUNCTION_32	CALL_1
0x4002715	          0x4889c7	                            mov rdi, rax	       931	dir.c	FUNCTION_32	CALL_1
0x4002718	      0xe800000000	                          call 0x400271d	       931	dir.c	FUNCTION_32	CALL_1
0x400271d	        0x488b45f8	                mov rax, qword [rbp - 8]	       932	dir.c	FUNCTION_32
0x4002721	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       932	dir.c	FUNCTION_32
0x4002725	        0x48895010	             mov qword [rax + 0x10], rdx	       932	dir.c	FUNCTION_32
0x4002729	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	dir.c	FUNCTION_32
0x400272d	              0xc9	                                   leave	       934	dir.c	FUNCTION_32
0x400272e	              0xc3	                                     ret	       934	dir.c	FUNCTION_32
read_sha1	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,1:functions,0:FOR,0	41
0x40071bc	              0x55	                                push rbp	      2830	dir.c	FUNCTION_92
0x40071bd	          0x4889e5	                            mov rbp, rsp	      2830	dir.c	FUNCTION_92
0x40071c0	        0x4883ec20	                           sub rsp, 0x20	      2830	dir.c	FUNCTION_92
0x40071c4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2830	dir.c	FUNCTION_92
0x40071c8	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2830	dir.c	FUNCTION_92
0x40071cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2831	dir.c	FUNCTION_92
0x40071d0	        0x488945f0	             mov qword [rbp - 0x10], rax	      2831	dir.c	FUNCTION_92
0x40071d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2832	dir.c	FUNCTION_92
0x40071d8	        0x488b4008	                mov rax, qword [rax + 8]	      2832	dir.c	FUNCTION_92
0x40071dc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2832	dir.c	FUNCTION_92
0x40071e0	        0x48c1e203	                              shl rdx, 3	      2832	dir.c	FUNCTION_92
0x40071e4	          0x4801d0	                            add rax, rdx	      2832	dir.c	FUNCTION_92
0x40071e7	          0x488b00	                    mov rax, qword [rax]	      2832	dir.c	FUNCTION_92
0x40071ea	        0x488945f8	                mov qword [rbp - 8], rax	      2832	dir.c	FUNCTION_92
0x40071ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2833	dir.c	FUNCTION_92	IF_1
0x40071f2	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2833	dir.c	FUNCTION_92	IF_1
0x40071f6	        0x488d5014	                   lea rdx, [rax + 0x14]	      2833	dir.c	FUNCTION_92	IF_1
0x40071fa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2833	dir.c	FUNCTION_92	IF_1
0x40071fe	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2833	dir.c	FUNCTION_92	IF_1
0x4007202	          0x4839c2	                            cmp rdx, rax	      2833	dir.c	FUNCTION_92	IF_1
0x4007205	            0x7616	                           jbe 0x400721d	      2833	dir.c	FUNCTION_92	IF_1
0x4007207	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2834	dir.c	FUNCTION_92	IF_1
0x400720b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2834	dir.c	FUNCTION_92	IF_1
0x400720f	        0x488d5001	                      lea rdx, [rax + 1]	      2834	dir.c	FUNCTION_92	IF_1
0x4007213	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2834	dir.c	FUNCTION_92	IF_1
0x4007217	        0x48895028	             mov qword [rax + 0x28], rdx	      2834	dir.c	FUNCTION_92	IF_1
0x400721b	            0xeb2f	                           jmp 0x400724c	      2835	dir.c	FUNCTION_92	IF_1
0x400721d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2837	dir.c	FUNCTION_92	CALL_1
0x4007221	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2837	dir.c	FUNCTION_92	CALL_1
0x4007225	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2837	dir.c	FUNCTION_92	CALL_1
0x4007229	        0x4883c245	                           add rdx, 0x45	      2837	dir.c	FUNCTION_92	CALL_1
0x400722d	          0x4889c6	                            mov rsi, rax	      2837	dir.c	FUNCTION_92	CALL_1
0x4007230	          0x4889d7	                            mov rdi, rdx	      2837	dir.c	FUNCTION_92	CALL_1
0x4007233	      0xe8ac92ffff	                        call sym.hashcpy	      2837	dir.c	FUNCTION_92	CALL_1
0x4007238	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2838	dir.c	FUNCTION_92
0x400723c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2838	dir.c	FUNCTION_92
0x4007240	        0x488d5014	                   lea rdx, [rax + 0x14]	      2838	dir.c	FUNCTION_92
0x4007244	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2838	dir.c	FUNCTION_92
0x4007248	        0x48895028	             mov qword [rax + 0x28], rdx	      2838	dir.c	FUNCTION_92
0x400724c	              0xc9	                                   leave	      2839	dir.c	FUNCTION_92
0x400724d	              0xc3	                                     ret	      2839	dir.c	FUNCTION_92
add_excludes_from_blob_to_list	SWITCH,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,2:functions,0:FOR,0	36
0x4002584	              0x55	                                push rbp	       909	dir.c	FUNCTION_31
0x4002585	          0x4889e5	                            mov rbp, rsp	       909	dir.c	FUNCTION_31
0x4002588	        0x4883ec40	                           sub rsp, 0x40	       909	dir.c	FUNCTION_31
0x400258c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       909	dir.c	FUNCTION_31
0x4002590	        0x488975d0	             mov qword [rbp - 0x30], rsi	       909	dir.c	FUNCTION_31
0x4002594	          0x8955cc	             mov dword [rbp - 0x34], edx	       909	dir.c	FUNCTION_31
0x4002597	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       909	dir.c	FUNCTION_31
0x400259b	    0x64488b042528	                mov rax, qword fs:[0x28]	       909	dir.c	FUNCTION_31
0x40025a4	        0x488945f8	                mov qword [rbp - 8], rax	       909	dir.c	FUNCTION_31
0x40025a8	            0x31c0	                            xor eax, eax	       909	dir.c	FUNCTION_31
0x40025aa	        0x488d4de8	                   lea rcx, [rbp - 0x18]	       914	dir.c	FUNCTION_31	CALL_1
0x40025ae	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       914	dir.c	FUNCTION_31	CALL_1
0x40025b2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       914	dir.c	FUNCTION_31	CALL_1
0x40025b6	      0xbe00000000	                              mov esi, 0	       914	dir.c	FUNCTION_31	CALL_1
0x40025bb	          0x4889c7	                            mov rdi, rax	       914	dir.c	FUNCTION_31	CALL_1
0x40025be	      0xe8cce6ffff	                   call sym.do_read_blob	       914	dir.c	FUNCTION_31	CALL_1
0x40025c3	          0x8945e4	             mov dword [rbp - 0x1c], eax	       914	dir.c	FUNCTION_31	CALL_1
0x40025c6	        0x837de401	               cmp dword [rbp - 0x1c], 1	       915	dir.c	FUNCTION_31	IF_1
0x40025ca	            0x7405	                            je 0x40025d1	       915	dir.c	FUNCTION_31	IF_1
0x40025cc	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       916	dir.c	FUNCTION_31	IF_1
0x40025cf	            0xeb23	                           jmp 0x40025f4	       916	dir.c	FUNCTION_31	IF_1
0x40025d1	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       918	dir.c	FUNCTION_31	CALL_2
0x40025d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       918	dir.c	FUNCTION_31	CALL_2
0x40025d9	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	       918	dir.c	FUNCTION_31	CALL_2
0x40025dd	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	       918	dir.c	FUNCTION_31	CALL_2
0x40025e0	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       918	dir.c	FUNCTION_31	CALL_2
0x40025e4	          0x4989f8	                             mov r8, rdi	       918	dir.c	FUNCTION_31	CALL_2
0x40025e7	          0x4889c7	                            mov rdi, rax	       918	dir.c	FUNCTION_31	CALL_2
0x40025ea	      0xe817feffff	       call sym.add_excludes_from_buffer	       918	dir.c	FUNCTION_31	CALL_2
0x40025ef	      0xb800000000	                              mov eax, 0	       919	dir.c	FUNCTION_31
0x40025f4	        0x488b75f8	                mov rsi, qword [rbp - 8]	       920	dir.c	FUNCTION_31
0x40025f8	    0x644833342528	                xor rsi, qword fs:[0x28]	       920	dir.c	FUNCTION_31
0x4002601	            0x7405	                            je 0x4002608	       920	dir.c	FUNCTION_31
0x4002603	      0xe800000000	                          call 0x4002608	       920	dir.c	FUNCTION_31
0x4002608	              0xc9	                                   leave	       920	dir.c	FUNCTION_31
0x4002609	              0xc3	                                     ret	       920	dir.c	FUNCTION_31
git_is_dir_sep	SWITCH,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,0:functions,0:FOR,0	8
0x4000040	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_105
0x4000041	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_105
0x4000044	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_105
0x4000047	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_105
0x400004b	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_105
0x400004e	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_105
0x4000051	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_105
0x4000052	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_105
