cmd_merge_recursive	FOR,1:IF,12:CALL,29:functions,0:SWITCH,0:WHILE,0:ELSE,1:DO,0	194
0x400008e	            0x4157	                                push r15	        23	merge-recursive.c	FUNCTION_2
0x4000090	            0x4156	                                push r14	        23	merge-recursive.c	FUNCTION_2
0x4000092	            0x4155	                                push r13	        23	merge-recursive.c	FUNCTION_2
0x4000094	            0x4154	                                push r12	        23	merge-recursive.c	FUNCTION_2
0x4000096	              0x55	                                push rbp	        23	merge-recursive.c	FUNCTION_2
0x4000097	              0x53	                                push rbx	        23	merge-recursive.c	FUNCTION_2
0x4000098	    0x4881ecb80500	                          sub rsp, 0x5b8	        23	merge-recursive.c	FUNCTION_2
0x400009f	          0x4189ff	                           mov r15d, edi	        23	merge-recursive.c	FUNCTION_2
0x40000a2	          0x4889f3	                            mov rbx, rsi	        23	merge-recursive.c	FUNCTION_2
0x40000a5	      0x4889742408	                mov qword [rsp + 8], rsi	        23	merge-recursive.c	FUNCTION_2
0x40000aa	    0x64488b042528	                mov rax, qword fs:[0x28]	        23	merge-recursive.c	FUNCTION_2
0x40000b3	    0x48898424a805	            mov qword [rsp + 0x5a8], rax	        23	merge-recursive.c	FUNCTION_2
0x40000bb	            0x31c0	                            xor eax, eax	        23	merge-recursive.c	FUNCTION_2
0x40000bd	    0x488dbc241001	                  lea rdi, [rsp + 0x110]	        31	merge-recursive.c	FUNCTION_2	CALL_1
0x40000c5	      0xe800000000	                          call 0x40000ca	        31	merge-recursive.c	FUNCTION_2	CALL_1
0x40000ca	          0x488b1b	                    mov rbx, qword [rbx]	        32	merge-recursive.c	FUNCTION_2	IF_1	CALL_2
0x40000cd	          0x4885db	                           test rbx, rbx	        32	merge-recursive.c	FUNCTION_2	IF_1	CALL_2
0x40000d0	            0x7445	                            je 0x4000117	        32	merge-recursive.c	FUNCTION_2	IF_1	CALL_2
0x40000d2	      0xb800000000	                              mov eax, 0	       555	git-compat-util.h	FUNCTION_13	CALL_1
0x40000d7	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       555	git-compat-util.h	FUNCTION_13	CALL_1
0x40000de	          0x4889df	                            mov rdi, rbx	       555	git-compat-util.h	FUNCTION_13	CALL_1
0x40000e1	            0xf2ae	              repne scasb al, byte [rdi]	       555	git-compat-util.h	FUNCTION_13	CALL_1
0x40000e3	          0x4889c8	                            mov rax, rcx	       555	git-compat-util.h	FUNCTION_13	CALL_1
0x40000e6	          0x48f7d0	                                 not rax	       555	git-compat-util.h	FUNCTION_13	CALL_1
0x40000e9	        0x4883e801	                              sub rax, 1	       555	git-compat-util.h	FUNCTION_13	CALL_1
0x40000ed	        0x4883f807	                              cmp rax, 7	       540	git-compat-util.h	FUNCTION_12	IF_1	CALL_2
0x40000f1	            0x7624	                           jbe 0x4000117	       540	git-compat-util.h	FUNCTION_12	IF_1	CALL_2
0x40000f3	      0x488d7c03f8	                lea rdi, [rbx + rax - 8]	       540	git-compat-util.h	FUNCTION_12	IF_1	CALL_2
0x40000f8	      0xba08000000	                              mov edx, 8	       540	git-compat-util.h	FUNCTION_12	IF_1	CALL_2
0x40000fd	      0xbe00000000	                              mov esi, 0	       540	git-compat-util.h	FUNCTION_12	IF_1	CALL_2
0x4000102	      0xe800000000	                          call 0x4000107	       540	git-compat-util.h	FUNCTION_12	IF_1	CALL_2
0x4000107	            0x85c0	                           test eax, eax	        32	merge-recursive.c	FUNCTION_2	IF_1	CALL_2
0x4000109	            0x750c	                           jne 0x4000117	        32	merge-recursive.c	FUNCTION_2	IF_1	CALL_2
0x400010b	    0x48c784243001	              mov qword [rsp + 0x130], 0	        33	merge-recursive.c	FUNCTION_2	IF_1
0x4000117	        0x4183ff03	                             cmp r15d, 3	        35	merge-recursive.c	FUNCTION_2	IF_2
0x400011b	            0x7e1f	                           jle 0x400013c	        35	merge-recursive.c	FUNCTION_2	IF_2
0x400011d	      0x488b442408	                mov rax, qword [rsp + 8]	        35	merge-recursive.c	FUNCTION_2	IF_2
0x4000122	        0x488d5808	                      lea rbx, [rax + 8]	        35	merge-recursive.c	FUNCTION_2	IF_2
0x4000126	      0xbd01000000	                              mov ebp, 1	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x400012b	    0x41be00000000	                             mov r14d, 0	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x4000131	        0x4183ff01	                             cmp r15d, 1	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x4000135	            0x7f17	                            jg 0x400014e	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x4000137	      0xe910010000	                           jmp 0x400024c	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x400013c	          0x4889de	                            mov rsi, rbx	        36	merge-recursive.c	FUNCTION_2	CALL_3
0x400013f	      0xbf00000000	                              mov edi, 0	        36	merge-recursive.c	FUNCTION_2	CALL_3
0x4000144	      0xb800000000	                              mov eax, 0	        36	merge-recursive.c	FUNCTION_2	CALL_3
0x4000149	      0xe800000000	                          call 0x400014e	        36	merge-recursive.c	FUNCTION_2	CALL_3
0x400014e	          0x4c8b23	                    mov r12, qword [rbx]	        39	merge-recursive.c	FUNCTION_2	FOR_1
0x4000151	      0xbe00000000	                              mov esi, 0	        41	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x4000156	          0x4c89e7	                            mov rdi, r12	        41	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x4000159	      0xe800000000	                          call 0x400015e	        41	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x400015e	            0x85c0	                           test eax, eax	        41	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x4000160	            0x744a	                            je 0x40001ac	        41	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x4000162	    0x41807c240200	                   cmp byte [r12 + 2], 0	        42	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000168	     0xf84de000000	                            je 0x400024c	        42	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x400016e	      0x498d742402	                      lea rsi, [r12 + 2]	        44	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	IF_5	CALL_5
0x4000173	    0x488dbc241001	                  lea rdi, [rsp + 0x110]	        44	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	IF_5	CALL_5
0x400017b	      0xe800000000	                          call 0x4000180	        44	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	IF_5	CALL_5
0x4000180	            0x85c0	                           test eax, eax	        44	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	IF_5	CALL_5
0x4000182	     0xf84b2000000	                            je 0x400023a	        44	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	IF_5	CALL_5
0x4000188	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_32	CALL_2
0x400018d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_32	CALL_2
0x4000192	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_32	CALL_2
0x4000197	      0xe800000000	                          call 0x400019c	        54	gettext.h	FUNCTION_32	CALL_2
0x400019c	          0x4c89e6	                            mov rsi, r12	        45	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_7
0x400019f	          0x4889c7	                            mov rdi, rax	        45	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_7
0x40001a2	      0xb800000000	                              mov eax, 0	        45	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_7
0x40001a7	      0xe800000000	                          call 0x40001ac	        45	merge-recursive.c	FUNCTION_2	FOR_1	IF_3	CALL_7
0x40001ac	        0x4183fe13	                          cmp r14d, 0x13	        48	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	CALL_8
0x40001b0	            0x7751	                            ja 0x4000203	        48	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	CALL_8
0x40001b2	      0xbf14000000	                           mov edi, 0x14	        49	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	CALL_9
0x40001b7	      0xe800000000	                          call 0x40001bc	        49	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	CALL_9
0x40001bc	          0x4989c4	                            mov r12, rax	        49	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	CALL_9
0x40001bf	          0x4889c6	                            mov rsi, rax	        50	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	IF_7	CALL_10
0x40001c2	          0x488b3b	                    mov rdi, qword [rbx]	        50	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	IF_7	CALL_10
0x40001c5	      0xe800000000	                          call 0x40001ca	        50	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	IF_7	CALL_10
0x40001ca	            0x85c0	                           test eax, eax	        50	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	IF_7	CALL_10
0x40001cc	            0x7427	                            je 0x40001f5	        50	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	IF_7	CALL_10
0x40001ce	          0x488b1b	                    mov rbx, qword [rbx]	        51	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	CALL_12
0x40001d1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_32	CALL_2
0x40001d6	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_32	CALL_2
0x40001db	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_32	CALL_2
0x40001e0	      0xe800000000	                          call 0x40001e5	        54	gettext.h	FUNCTION_32	CALL_2
0x40001e5	          0x4889de	                            mov rsi, rbx	        51	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	CALL_12
0x40001e8	          0x4889c7	                            mov rdi, rax	        51	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	CALL_12
0x40001eb	      0xb800000000	                              mov eax, 0	        51	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	CALL_12
0x40001f0	      0xe800000000	                          call 0x40001f5	        51	merge-recursive.c	FUNCTION_2	FOR_1	IF_6	CALL_12
0x40001f5	          0x4489f0	                           mov eax, r14d	        52	merge-recursive.c	FUNCTION_2	FOR_1	IF_6
0x40001f8	      0x4c8964c460	     mov qword [rsp + rax*8 + 0x60], r12	        52	merge-recursive.c	FUNCTION_2	FOR_1	IF_6
0x40001fd	        0x458d7601	                     lea r14d, [r14 + 1]	        52	merge-recursive.c	FUNCTION_2	FOR_1	IF_6
0x4000201	            0xeb37	                           jmp 0x400023a	        52	merge-recursive.c	FUNCTION_2	FOR_1	IF_6
0x4000203	          0x4c8b23	                    mov r12, qword [rbx]	        55	merge-recursive.c	FUNCTION_2	FOR_1	ELSE_1	CALL_14
0x4000206	    0x41b805000000	                              mov r8d, 5	        62	gettext.h	FUNCTION_33	CALL_2
0x400020c	      0xb914000000	                           mov ecx, 0x14	        62	gettext.h	FUNCTION_33	CALL_2
0x4000211	      0xba00000000	                              mov edx, 0	        62	gettext.h	FUNCTION_33	CALL_2
0x4000216	      0xbe00000000	                              mov esi, 0	        62	gettext.h	FUNCTION_33	CALL_2
0x400021b	      0xbf00000000	                              mov edi, 0	        62	gettext.h	FUNCTION_33	CALL_2
0x4000220	      0xe800000000	                          call 0x4000225	        62	gettext.h	FUNCTION_33	CALL_2
0x4000225	          0x4c89e2	                            mov rdx, r12	        55	merge-recursive.c	FUNCTION_2	FOR_1	ELSE_1	CALL_14
0x4000228	      0xbe14000000	                           mov esi, 0x14	        55	merge-recursive.c	FUNCTION_2	FOR_1	ELSE_1	CALL_14
0x400022d	          0x4889c7	                            mov rdi, rax	        55	merge-recursive.c	FUNCTION_2	FOR_1	ELSE_1	CALL_14
0x4000230	      0xb800000000	                              mov eax, 0	        55	merge-recursive.c	FUNCTION_2	FOR_1	ELSE_1	CALL_14
0x4000235	      0xe800000000	                          call 0x400023a	        55	merge-recursive.c	FUNCTION_2	FOR_1	ELSE_1	CALL_14
0x400023a	          0x83c501	                              add ebp, 1	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x400023d	        0x4883c308	                              add rbx, 8	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x4000241	          0x4139ef	                           cmp r15d, ebp	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x4000244	     0xf8504ffffff	                           jne 0x400014e	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x400024a	            0xeb09	                           jmp 0x4000255	        38	merge-recursive.c	FUNCTION_2	FOR_1
0x400024c	          0x4129ef	                           sub r15d, ebp	        62	merge-recursive.c	FUNCTION_2	IF_8
0x400024f	        0x4183ff03	                             cmp r15d, 3	        62	merge-recursive.c	FUNCTION_2	IF_8
0x4000253	            0x7421	                            je 0x4000276	        62	merge-recursive.c	FUNCTION_2	IF_8
0x4000255	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_32	CALL_2
0x400025a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_32	CALL_2
0x400025f	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_32	CALL_2
0x4000264	      0xe800000000	                          call 0x4000269	        54	gettext.h	FUNCTION_32	CALL_2
0x4000269	          0x4889c7	                            mov rdi, rax	        63	merge-recursive.c	FUNCTION_2	CALL_18
0x400026c	      0xb800000000	                              mov eax, 0	        63	merge-recursive.c	FUNCTION_2	CALL_18
0x4000271	      0xe800000000	                          call 0x4000276	        63	merge-recursive.c	FUNCTION_2	CALL_18
0x4000276	          0x83c501	                              add ebp, 1	        65	merge-recursive.c	FUNCTION_2
0x4000279	          0x4863ed	                         movsxd rbp, ebp	        65	merge-recursive.c	FUNCTION_2
0x400027c	      0x488b442408	                mov rax, qword [rsp + 8]	        65	merge-recursive.c	FUNCTION_2
0x4000281	        0x488b3ce8	            mov rdi, qword [rax + rbp*8]	        65	merge-recursive.c	FUNCTION_2
0x4000285	    0x4889bc241801	            mov qword [rsp + 0x118], rdi	        65	merge-recursive.c	FUNCTION_2
0x400028d	      0x488b44e808	       mov rax, qword [rax + rbp*8 + 8] 	        66	merge-recursive.c	FUNCTION_2
0x4000292	    0x488984242001	            mov qword [rsp + 0x120], rax	        66	merge-recursive.c	FUNCTION_2
0x400029a	      0x488d742420	                   lea rsi, [rsp + 0x20]	        68	merge-recursive.c	FUNCTION_2	IF_9	CALL_19
0x400029f	      0xe800000000	                          call 0x40002a4	        68	merge-recursive.c	FUNCTION_2	IF_9	CALL_19
0x40002a4	            0x85c0	                           test eax, eax	        68	merge-recursive.c	FUNCTION_2	IF_9	CALL_19
0x40002a6	            0x742c	                            je 0x40002d4	        68	merge-recursive.c	FUNCTION_2	IF_9	CALL_19
0x40002a8	    0x488b9c241801	           mov rbx, qword [rsp + 0x118] 	        69	merge-recursive.c	FUNCTION_2	CALL_21
0x40002b0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_32	CALL_2
0x40002b5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_32	CALL_2
0x40002ba	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_32	CALL_2
0x40002bf	      0xe800000000	                          call 0x40002c4	        54	gettext.h	FUNCTION_32	CALL_2
0x40002c4	          0x4889de	                            mov rsi, rbx	        69	merge-recursive.c	FUNCTION_2	CALL_21
0x40002c7	          0x4889c7	                            mov rdi, rax	        69	merge-recursive.c	FUNCTION_2	CALL_21
0x40002ca	      0xb800000000	                              mov eax, 0	        69	merge-recursive.c	FUNCTION_2	CALL_21
0x40002cf	      0xe800000000	                          call 0x40002d4	        69	merge-recursive.c	FUNCTION_2	CALL_21
0x40002d4	      0x488d742440	                   lea rsi, [rsp + 0x40]	        70	merge-recursive.c	FUNCTION_2	IF_10	CALL_22
0x40002d9	    0x488bbc242001	           mov rdi, qword [rsp + 0x120] 	        70	merge-recursive.c	FUNCTION_2	IF_10	CALL_22
0x40002e1	      0xe800000000	                          call 0x40002e6	        70	merge-recursive.c	FUNCTION_2	IF_10	CALL_22
0x40002e6	            0x85c0	                           test eax, eax	        70	merge-recursive.c	FUNCTION_2	IF_10	CALL_22
0x40002e8	            0x742c	                            je 0x4000316	        70	merge-recursive.c	FUNCTION_2	IF_10	CALL_22
0x40002ea	    0x488b9c242001	           mov rbx, qword [rsp + 0x120] 	        71	merge-recursive.c	FUNCTION_2	CALL_24
0x40002f2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_32	CALL_2
0x40002f7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_32	CALL_2
0x40002fc	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_32	CALL_2
0x4000301	      0xe800000000	                          call 0x4000306	        54	gettext.h	FUNCTION_32	CALL_2
0x4000306	          0x4889de	                            mov rsi, rbx	        71	merge-recursive.c	FUNCTION_2	CALL_24
0x4000309	          0x4889c7	                            mov rdi, rax	        71	merge-recursive.c	FUNCTION_2	CALL_24
0x400030c	      0xb800000000	                              mov eax, 0	        71	merge-recursive.c	FUNCTION_2	CALL_24
0x4000311	      0xe800000000	                          call 0x4000316	        71	merge-recursive.c	FUNCTION_2	CALL_24
0x4000316	    0x488bbc241801	           mov rdi, qword [rsp + 0x118] 	        73	merge-recursive.c	FUNCTION_2	CALL_25
0x400031e	      0xe81dfdffff	             call sym.better_branch_name	        73	merge-recursive.c	FUNCTION_2	CALL_25
0x4000323	    0x488984241801	            mov qword [rsp + 0x118], rax	        73	merge-recursive.c	FUNCTION_2	CALL_25
0x400032b	    0x488bbc242001	           mov rdi, qword [rsp + 0x120] 	        74	merge-recursive.c	FUNCTION_2	CALL_26
0x4000333	      0xe808fdffff	             call sym.better_branch_name	        74	merge-recursive.c	FUNCTION_2	CALL_26
0x4000338	          0x4889c3	                            mov rbx, rax	        74	merge-recursive.c	FUNCTION_2	CALL_26
0x400033b	    0x488984242001	            mov qword [rsp + 0x120], rax	        74	merge-recursive.c	FUNCTION_2	CALL_26
0x4000343	    0x83bc24480100	              cmp dword [rsp + 0x148], 2	        76	merge-recursive.c	FUNCTION_2	IF_11
0x400034b	            0x7e34	                           jle 0x4000381	        76	merge-recursive.c	FUNCTION_2	IF_11
0x400034d	    0x488bac241801	           mov rbp, qword [rsp + 0x118] 	        77	merge-recursive.c	FUNCTION_2	CALL_28
0x4000355	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_32	CALL_2
0x400035a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_32	CALL_2
0x400035f	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_32	CALL_2
0x4000364	      0xe800000000	                          call 0x4000369	        54	gettext.h	FUNCTION_32	CALL_2
0x4000369	          0x4889d9	                            mov rcx, rbx	       104	stdio2.h	FUNCTION_39	CALL_2
0x400036c	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	FUNCTION_39	CALL_2
0x400036f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	FUNCTION_39	CALL_2
0x4000372	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_39	CALL_2
0x4000377	      0xb800000000	                              mov eax, 0	       104	stdio2.h	FUNCTION_39	CALL_2
0x400037c	      0xe800000000	                          call 0x4000381	       104	stdio2.h	FUNCTION_39	CALL_2
0x4000381	      0x4c8d4c2418	                    lea r9, [rsp + 0x18]	        79	merge-recursive.c	FUNCTION_2	CALL_29
0x4000386	      0x4c8d442460	                    lea r8, [rsp + 0x60]	        79	merge-recursive.c	FUNCTION_2	CALL_29
0x400038b	          0x4489f1	                           mov ecx, r14d	        79	merge-recursive.c	FUNCTION_2	CALL_29
0x400038e	      0x488d542440	                   lea rdx, [rsp + 0x40]	        79	merge-recursive.c	FUNCTION_2	CALL_29
0x4000393	      0x488d742420	                   lea rsi, [rsp + 0x20]	        79	merge-recursive.c	FUNCTION_2	CALL_29
0x4000398	    0x488dbc241001	                  lea rdi, [rsp + 0x110]	        79	merge-recursive.c	FUNCTION_2	CALL_29
0x40003a0	      0xe800000000	                          call 0x40003a5	        79	merge-recursive.c	FUNCTION_2	CALL_29
0x40003a5	            0x85c0	                           test eax, eax	        82	merge-recursive.c	FUNCTION_2
0x40003a7	      0xba80000000	                           mov edx, 0x80	        82	merge-recursive.c	FUNCTION_2
0x40003ac	           0xf48c2	                          cmovs eax, edx	        82	merge-recursive.c	FUNCTION_2
0x40003af	    0x488b8c24a805	           mov rcx, qword [rsp + 0x5a8] 	        83	merge-recursive.c	FUNCTION_2
0x40003b7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        83	merge-recursive.c	FUNCTION_2
0x40003c0	            0x7405	                            je 0x40003c7	        83	merge-recursive.c	FUNCTION_2
0x40003c2	      0xe800000000	                          call 0x40003c7	        83	merge-recursive.c	FUNCTION_2
0x40003c7	    0x4881c4b80500	                          add rsp, 0x5b8	        83	merge-recursive.c	FUNCTION_2
0x40003ce	              0x5b	                                 pop rbx	        83	merge-recursive.c	FUNCTION_2
0x40003cf	              0x5d	                                 pop rbp	        83	merge-recursive.c	FUNCTION_2
0x40003d0	            0x415c	                                 pop r12	        83	merge-recursive.c	FUNCTION_2
0x40003d2	            0x415d	                                 pop r13	        83	merge-recursive.c	FUNCTION_2
0x40003d4	            0x415e	                                 pop r14	        83	merge-recursive.c	FUNCTION_2
0x40003d6	            0x415f	                                 pop r15	        83	merge-recursive.c	FUNCTION_2
0x40003d8	              0xc3	                                     ret	        83	merge-recursive.c	FUNCTION_2
better_branch_name	FOR,0:IF,1:CALL,3:functions,0:SWITCH,0:WHILE,0:ELSE,0:DO,0	21
0x4000040	          0x4889fa	                            mov rdx, rdi	        11	merge-recursive.c	FUNCTION_1
0x4000043	      0xb800000000	                              mov eax, 0	        15	merge-recursive.c	FUNCTION_1	IF_1	CALL_1
0x4000048	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        15	merge-recursive.c	FUNCTION_1	IF_1	CALL_1
0x400004f	            0xf2ae	              repne scasb al, byte [rdi]	        15	merge-recursive.c	FUNCTION_1	IF_1	CALL_1
0x4000051	          0x4889d0	                            mov rax, rdx	        16	merge-recursive.c	FUNCTION_1	IF_1
0x4000054	        0x4883f9d6	             cmp rcx, 0xffffffffffffffd6	        15	merge-recursive.c	FUNCTION_1	IF_1	CALL_1
0x4000058	            0x7532	                           jne 0x400008c	        15	merge-recursive.c	FUNCTION_1	IF_1	CALL_1
0x400005a	              0x53	                                push rbx	        11	merge-recursive.c	FUNCTION_1
0x400005b	          0x4889d3	                            mov rbx, rdx	        11	merge-recursive.c	FUNCTION_1
0x400005e	          0x4889d1	                            mov rcx, rdx	        17	merge-recursive.c	FUNCTION_1	CALL_2
0x4000061	      0xba00000000	                              mov edx, 0	        17	merge-recursive.c	FUNCTION_1	CALL_2
0x4000066	      0xbe31000000	                           mov esi, 0x31	        17	merge-recursive.c	FUNCTION_1	CALL_2
0x400006b	      0xbf00000000	                              mov edi, 0	        17	merge-recursive.c	FUNCTION_1	CALL_2
0x4000070	      0xb800000000	                              mov eax, 0	        17	merge-recursive.c	FUNCTION_1	CALL_2
0x4000075	      0xe800000000	                          call 0x400007a	        17	merge-recursive.c	FUNCTION_1	CALL_2
0x400007a	      0xbf00000000	                              mov edi, 0	        18	merge-recursive.c	FUNCTION_1	CALL_3
0x400007f	      0xe800000000	                          call 0x4000084	        18	merge-recursive.c	FUNCTION_1	CALL_3
0x4000084	          0x4885c0	                           test rax, rax	        19	merge-recursive.c	FUNCTION_1
0x4000087	        0x480f44c3	                          cmove rax, rbx	        19	merge-recursive.c	FUNCTION_1
0x400008b	              0x5b	                                 pop rbx	        20	merge-recursive.c	FUNCTION_1
0x400008c	            0xf3c3	                                     ret	        20	merge-recursive.c	FUNCTION_1
