copy_or_link_directory	functions,0:FOR,0:IF,14:WHILE,1:CALL,33:ELSE,2:SWITCH,0:DO,0	240
0x4000f78	              0x55	                                push rbp	       394	clone.c	FUNCTION_36
0x4000f79	          0x4889e5	                            mov rbp, rsp	       394	clone.c	FUNCTION_36
0x4000f7c	              0x53	                                push rbx	       394	clone.c	FUNCTION_36
0x4000f7d	    0x4881ece80000	                           sub rsp, 0xe8	       394	clone.c	FUNCTION_36
0x4000f84	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       394	clone.c	FUNCTION_36
0x4000f8b	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       394	clone.c	FUNCTION_36
0x4000f92	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	       394	clone.c	FUNCTION_36
0x4000f99	    0x898d14ffffff	             mov dword [rbp - 0xec], ecx	       394	clone.c	FUNCTION_36
0x4000f9f	    0x64488b042528	                mov rax, qword fs:[0x28]	       394	clone.c	FUNCTION_36
0x4000fa8	        0x488945e8	             mov qword [rbp - 0x18], rax	       394	clone.c	FUNCTION_36
0x4000fac	            0x31c0	                            xor eax, eax	       394	clone.c	FUNCTION_36
0x4000fae	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       400	clone.c	FUNCTION_36	CALL_1
0x4000fb5	        0x488b4010	            mov rax, qword [rax + 0x10] 	       400	clone.c	FUNCTION_36	CALL_1
0x4000fb9	          0x4889c7	                            mov rdi, rax	       400	clone.c	FUNCTION_36	CALL_1
0x4000fbc	      0xe800000000	                          call 0x4000fc1	       400	clone.c	FUNCTION_36	CALL_1
0x4000fc1	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       400	clone.c	FUNCTION_36	CALL_1
0x4000fc8	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       401	clone.c	FUNCTION_36	IF_1
0x4000fd0	            0x7525	                           jne 0x4000ff7	       401	clone.c	FUNCTION_36	IF_1
0x4000fd2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       402	clone.c	FUNCTION_36	CALL_3
0x4000fd9	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       402	clone.c	FUNCTION_36	CALL_3
0x4000fdd	      0xbf00000000	                              mov edi, 0	       402	clone.c	FUNCTION_36	CALL_3
0x4000fe2	      0xe854f3ffff	                               call sym.	       402	clone.c	FUNCTION_36	CALL_3
0x4000fe7	          0x4889de	                            mov rsi, rbx	       402	clone.c	FUNCTION_36	CALL_3
0x4000fea	          0x4889c7	                            mov rdi, rax	       402	clone.c	FUNCTION_36	CALL_3
0x4000fed	      0xb800000000	                              mov eax, 0	       402	clone.c	FUNCTION_36	CALL_3
0x4000ff2	      0xe800000000	                          call 0x4000ff7	       402	clone.c	FUNCTION_36	CALL_3
0x4000ff7	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       404	clone.c	FUNCTION_36	IF_2
0x4000ffe	        0x488b4010	            mov rax, qword [rax + 0x10] 	       404	clone.c	FUNCTION_36	IF_2
0x4001002	      0xbeff010000	                          mov esi, 0x1ff	       404	clone.c	FUNCTION_36	IF_2
0x4001007	          0x4889c7	                            mov rdi, rax	       404	clone.c	FUNCTION_36	IF_2
0x400100a	      0xe800000000	                          call 0x400100f	       404	clone.c	FUNCTION_36	IF_2
0x400100f	            0x85c0	                           test eax, eax	       404	clone.c	FUNCTION_36	IF_2
0x4001011	     0xf84ae000000	                            je 0x40010c5	       404	clone.c	FUNCTION_36	IF_2
0x4001017	      0xe800000000	                          call 0x400101c	       405	clone.c	FUNCTION_36	IF_2	IF_3
0x400101c	            0x8b00	                    mov eax, dword [rax]	       405	clone.c	FUNCTION_36	IF_2	IF_3
0x400101e	          0x83f811	                           cmp eax, 0x11	       405	clone.c	FUNCTION_36	IF_2	IF_3
0x4001021	            0x7425	                            je 0x4001048	       405	clone.c	FUNCTION_36	IF_2	IF_3
0x4001023	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       406	clone.c	FUNCTION_36	IF_2	CALL_5
0x400102a	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       406	clone.c	FUNCTION_36	IF_2	CALL_5
0x400102e	      0xbf00000000	                              mov edi, 0	       406	clone.c	FUNCTION_36	IF_2	CALL_5
0x4001033	      0xe803f3ffff	                               call sym.	       406	clone.c	FUNCTION_36	IF_2	CALL_5
0x4001038	          0x4889de	                            mov rsi, rbx	       406	clone.c	FUNCTION_36	IF_2	CALL_5
0x400103b	          0x4889c7	                            mov rdi, rax	       406	clone.c	FUNCTION_36	IF_2	CALL_5
0x400103e	      0xb800000000	                              mov eax, 0	       406	clone.c	FUNCTION_36	IF_2	CALL_5
0x4001043	      0xe800000000	                          call 0x4001048	       406	clone.c	FUNCTION_36	IF_2	CALL_5
0x4001048	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       407	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x400104f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       407	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4001053	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       407	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x400105a	          0x4889d6	                            mov rsi, rdx	       407	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x400105d	          0x4889c7	                            mov rdi, rax	       407	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4001060	      0xe800000000	                          call 0x4001065	       407	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4001065	            0x85c0	                           test eax, eax	       407	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4001067	            0x7425	                            je 0x400108e	       407	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4001069	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       408	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4001070	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       408	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4001074	      0xbf00000000	                              mov edi, 0	       408	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4001079	      0xe8bdf2ffff	                               call sym.	       408	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x400107e	          0x4889de	                            mov rsi, rbx	       408	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4001081	          0x4889c7	                            mov rdi, rax	       408	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4001084	      0xb800000000	                              mov eax, 0	       408	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4001089	      0xe800000000	                          call 0x400108e	       408	clone.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x400108e	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	       409	clone.c	FUNCTION_36	IF_2	ELSE_2	IF_5	CALL_8
0x4001094	      0x2500f00000	                         and eax, 0xf000	       409	clone.c	FUNCTION_36	IF_2	ELSE_2	IF_5	CALL_8
0x4001099	      0x3d00400000	                         cmp eax, 0x4000	       409	clone.c	FUNCTION_36	IF_2	ELSE_2	IF_5	CALL_8
0x400109e	            0x7425	                            je 0x40010c5	       409	clone.c	FUNCTION_36	IF_2	ELSE_2	IF_5	CALL_8
0x40010a0	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       410	clone.c	FUNCTION_36	IF_2	ELSE_2	IF_5
0x40010a7	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       410	clone.c	FUNCTION_36	IF_2	ELSE_2	IF_5
0x40010ab	      0xbf00000000	                              mov edi, 0	       410	clone.c	FUNCTION_36	IF_2	ELSE_2	IF_5
0x40010b0	      0xe886f2ffff	                               call sym.	       410	clone.c	FUNCTION_36	IF_2	ELSE_2	IF_5
0x40010b5	          0x4889de	                            mov rsi, rbx	       410	clone.c	FUNCTION_36	IF_2	ELSE_2	IF_5
0x40010b8	          0x4889c7	                            mov rdi, rax	       410	clone.c	FUNCTION_36	IF_2	ELSE_2	IF_5
0x40010bb	      0xb800000000	                              mov eax, 0	       410	clone.c	FUNCTION_36	IF_2	ELSE_2	IF_5
0x40010c0	      0xe800000000	                          call 0x40010c5	       410	clone.c	FUNCTION_36	IF_2	ELSE_2	IF_5
0x40010c5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       413	clone.c	FUNCTION_36	CALL_11
0x40010cc	      0xbe2f000000	                           mov esi, 0x2f	       413	clone.c	FUNCTION_36	CALL_11
0x40010d1	          0x4889c7	                            mov rdi, rax	       413	clone.c	FUNCTION_36	CALL_11
0x40010d4	      0xe8bff1ffff	                   call sym.strbuf_addch	       413	clone.c	FUNCTION_36	CALL_11
0x40010d9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       414	clone.c	FUNCTION_36
0x40010e0	        0x488b4008	                mov rax, qword [rax + 8]	       414	clone.c	FUNCTION_36
0x40010e4	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	       414	clone.c	FUNCTION_36
0x40010ea	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       415	clone.c	FUNCTION_36	CALL_12
0x40010f1	      0xbe2f000000	                           mov esi, 0x2f	       415	clone.c	FUNCTION_36	CALL_12
0x40010f6	          0x4889c7	                            mov rdi, rax	       415	clone.c	FUNCTION_36	CALL_12
0x40010f9	      0xe89af1ffff	                   call sym.strbuf_addch	       415	clone.c	FUNCTION_36	CALL_12
0x40010fe	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       416	clone.c	FUNCTION_36
0x4001105	        0x488b4008	                mov rax, qword [rax + 8]	       416	clone.c	FUNCTION_36
0x4001109	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       416	clone.c	FUNCTION_36
0x400110f	      0xe958020000	                           jmp 0x400136c	       418	clone.c	FUNCTION_36	WHILE_1	CALL_13
0x4001114	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       419	clone.c	FUNCTION_36	WHILE_1	CALL_14
0x400111a	          0x4863d0	                         movsxd rdx, eax	       419	clone.c	FUNCTION_36	WHILE_1	CALL_14
0x400111d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       419	clone.c	FUNCTION_36	WHILE_1	CALL_14
0x4001124	          0x4889d6	                            mov rsi, rdx	       419	clone.c	FUNCTION_36	WHILE_1	CALL_14
0x4001127	          0x4889c7	                            mov rdi, rax	       419	clone.c	FUNCTION_36	WHILE_1	CALL_14
0x400112a	      0xe8cff0ffff	                  call sym.strbuf_setlen	       419	clone.c	FUNCTION_36	WHILE_1	CALL_14
0x400112f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       420	clone.c	FUNCTION_36	WHILE_1	CALL_15
0x4001136	        0x488d5013	                   lea rdx, [rax + 0x13]	       420	clone.c	FUNCTION_36	WHILE_1	CALL_15
0x400113a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       420	clone.c	FUNCTION_36	WHILE_1	CALL_15
0x4001141	          0x4889d6	                            mov rsi, rdx	       420	clone.c	FUNCTION_36	WHILE_1	CALL_15
0x4001144	          0x4889c7	                            mov rdi, rax	       420	clone.c	FUNCTION_36	WHILE_1	CALL_15
0x4001147	      0xe8baf1ffff	                  call sym.strbuf_addstr	       420	clone.c	FUNCTION_36	WHILE_1	CALL_15
0x400114c	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       421	clone.c	FUNCTION_36	WHILE_1	CALL_16
0x4001152	          0x4863d0	                         movsxd rdx, eax	       421	clone.c	FUNCTION_36	WHILE_1	CALL_16
0x4001155	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       421	clone.c	FUNCTION_36	WHILE_1	CALL_16
0x400115c	          0x4889d6	                            mov rsi, rdx	       421	clone.c	FUNCTION_36	WHILE_1	CALL_16
0x400115f	          0x4889c7	                            mov rdi, rax	       421	clone.c	FUNCTION_36	WHILE_1	CALL_16
0x4001162	      0xe897f0ffff	                  call sym.strbuf_setlen	       421	clone.c	FUNCTION_36	WHILE_1	CALL_16
0x4001167	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       422	clone.c	FUNCTION_36	WHILE_1	CALL_17
0x400116e	        0x488d5013	                   lea rdx, [rax + 0x13]	       422	clone.c	FUNCTION_36	WHILE_1	CALL_17
0x4001172	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       422	clone.c	FUNCTION_36	WHILE_1	CALL_17
0x4001179	          0x4889d6	                            mov rsi, rdx	       422	clone.c	FUNCTION_36	WHILE_1	CALL_17
0x400117c	          0x4889c7	                            mov rdi, rax	       422	clone.c	FUNCTION_36	WHILE_1	CALL_17
0x400117f	      0xe882f1ffff	                  call sym.strbuf_addstr	       422	clone.c	FUNCTION_36	WHILE_1	CALL_17
0x4001184	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       423	clone.c	FUNCTION_36	WHILE_1	IF_6
0x400118b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       423	clone.c	FUNCTION_36	WHILE_1	IF_6
0x400118f	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       423	clone.c	FUNCTION_36	WHILE_1	IF_6
0x4001196	          0x4889d6	                            mov rsi, rdx	       423	clone.c	FUNCTION_36	WHILE_1	IF_6
0x4001199	          0x4889c7	                            mov rdi, rax	       423	clone.c	FUNCTION_36	WHILE_1	IF_6
0x400119c	      0xe800000000	                          call 0x40011a1	       423	clone.c	FUNCTION_36	WHILE_1	IF_6
0x40011a1	            0x85c0	                           test eax, eax	       423	clone.c	FUNCTION_36	WHILE_1	IF_6
0x40011a3	            0x742a	                            je 0x40011cf	       423	clone.c	FUNCTION_36	WHILE_1	IF_6
0x40011a5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       424	clone.c	FUNCTION_36	WHILE_1	IF_6	CALL_19
0x40011ac	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       424	clone.c	FUNCTION_36	WHILE_1	IF_6	CALL_19
0x40011b0	      0xbf00000000	                              mov edi, 0	       424	clone.c	FUNCTION_36	WHILE_1	IF_6	CALL_19
0x40011b5	      0xe881f1ffff	                               call sym.	       424	clone.c	FUNCTION_36	WHILE_1	IF_6	CALL_19
0x40011ba	          0x4889de	                            mov rsi, rbx	       424	clone.c	FUNCTION_36	WHILE_1	IF_6	CALL_19
0x40011bd	          0x4889c7	                            mov rdi, rax	       424	clone.c	FUNCTION_36	WHILE_1	IF_6	CALL_19
0x40011c0	      0xb800000000	                              mov eax, 0	       424	clone.c	FUNCTION_36	WHILE_1	IF_6	CALL_19
0x40011c5	      0xe800000000	                          call 0x40011ca	       424	clone.c	FUNCTION_36	WHILE_1	IF_6	CALL_19
0x40011ca	      0xe99d010000	                           jmp 0x400136c	       425	clone.c	FUNCTION_36	WHILE_1	IF_6
0x40011cf	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	       427	clone.c	FUNCTION_36	WHILE_1	IF_7	CALL_20
0x40011d5	      0x2500f00000	                         and eax, 0xf000	       427	clone.c	FUNCTION_36	WHILE_1	IF_7	CALL_20
0x40011da	      0x3d00400000	                         cmp eax, 0x4000	       427	clone.c	FUNCTION_36	WHILE_1	IF_7	CALL_20
0x40011df	            0x753b	                           jne 0x400121c	       427	clone.c	FUNCTION_36	WHILE_1	IF_7	CALL_20
0x40011e1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       428	clone.c	FUNCTION_36	WHILE_1	IF_7	IF_8
0x40011e8	         0xfb64013	           movzx eax, byte [rax + 0x13] 	       428	clone.c	FUNCTION_36	WHILE_1	IF_7	IF_8
0x40011ec	            0x3c2e	                            cmp al, 0x2e	       428	clone.c	FUNCTION_36	WHILE_1	IF_7	IF_8
0x40011ee	     0xf8478010000	                            je 0x400136c	       428	clone.c	FUNCTION_36	WHILE_1	IF_7	IF_8
0x40011f4	    0x8b8d14ffffff	             mov ecx, dword [rbp - 0xec]	       429	clone.c	FUNCTION_36	WHILE_1	IF_7	IF_8	CALL_21
0x40011fa	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       429	clone.c	FUNCTION_36	WHILE_1	IF_7	IF_8	CALL_21
0x4001201	    0x488bb520ffff	             mov rsi, qword [rbp - 0xe0]	       429	clone.c	FUNCTION_36	WHILE_1	IF_7	IF_8	CALL_21
0x4001208	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       429	clone.c	FUNCTION_36	WHILE_1	IF_7	IF_8	CALL_21
0x400120f	          0x4889c7	                            mov rdi, rax	       429	clone.c	FUNCTION_36	WHILE_1	IF_7	IF_8	CALL_21
0x4001212	      0xe861fdffff	         call sym.copy_or_link_directory	       429	clone.c	FUNCTION_36	WHILE_1	IF_7	IF_8	CALL_21
0x4001217	      0xe950010000	                           jmp 0x400136c	       431	clone.c	FUNCTION_36	WHILE_1	IF_7
0x400121c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       435	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_22
0x4001223	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       435	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_22
0x4001227	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       435	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_22
0x400122d	            0x4898	                                    cdqe	       435	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_22
0x400122f	          0x4801d0	                            add rax, rdx	       435	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_22
0x4001232	      0xbe00000000	                              mov esi, 0	       435	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_22
0x4001237	          0x4889c7	                            mov rdi, rax	       435	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_22
0x400123a	      0xe800000000	                          call 0x400123f	       435	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_22
0x400123f	            0x85c0	                           test eax, eax	       435	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_22
0x4001241	            0x7525	                           jne 0x4001268	       435	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_22
0x4001243	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       436	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_23
0x400124a	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       436	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_23
0x4001251	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       436	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_23
0x4001258	          0x4889ce	                            mov rsi, rcx	       436	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_23
0x400125b	          0x4889c7	                            mov rdi, rax	       436	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_23
0x400125e	      0xe8cdfbffff	                call sym.copy_alternates	       436	clone.c	FUNCTION_36	WHILE_1	IF_9	CALL_23
0x4001263	      0xe904010000	                           jmp 0x400136c	       437	clone.c	FUNCTION_36	WHILE_1	IF_9
0x4001268	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       440	clone.c	FUNCTION_36	WHILE_1	IF_10	CALL_24
0x400126f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       440	clone.c	FUNCTION_36	WHILE_1	IF_10	CALL_24
0x4001273	          0x4889c7	                            mov rdi, rax	       440	clone.c	FUNCTION_36	WHILE_1	IF_10	CALL_24
0x4001276	      0xe800000000	                          call 0x400127b	       440	clone.c	FUNCTION_36	WHILE_1	IF_10	CALL_24
0x400127b	            0x85c0	                           test eax, eax	       440	clone.c	FUNCTION_36	WHILE_1	IF_10	CALL_24
0x400127d	            0x7431	                            je 0x40012b0	       440	clone.c	FUNCTION_36	WHILE_1	IF_10	CALL_24
0x400127f	      0xe800000000	                          call 0x4001284	       440	clone.c	FUNCTION_36	WHILE_1	IF_10	CALL_24
0x4001284	            0x8b00	                    mov eax, dword [rax]	       440	clone.c	FUNCTION_36	WHILE_1	IF_10	CALL_24
0x4001286	          0x83f802	                              cmp eax, 2	       440	clone.c	FUNCTION_36	WHILE_1	IF_10	CALL_24
0x4001289	            0x7425	                            je 0x40012b0	       440	clone.c	FUNCTION_36	WHILE_1	IF_10	CALL_24
0x400128b	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       441	clone.c	FUNCTION_36	WHILE_1	CALL_26
0x4001292	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       441	clone.c	FUNCTION_36	WHILE_1	CALL_26
0x4001296	      0xbf00000000	                              mov edi, 0	       441	clone.c	FUNCTION_36	WHILE_1	CALL_26
0x400129b	      0xe89bf0ffff	                               call sym.	       441	clone.c	FUNCTION_36	WHILE_1	CALL_26
0x40012a0	          0x4889de	                            mov rsi, rbx	       441	clone.c	FUNCTION_36	WHILE_1	CALL_26
0x40012a3	          0x4889c7	                            mov rdi, rax	       441	clone.c	FUNCTION_36	WHILE_1	CALL_26
0x40012a6	      0xb800000000	                              mov eax, 0	       441	clone.c	FUNCTION_36	WHILE_1	CALL_26
0x40012ab	      0xe800000000	                          call 0x40012b0	       441	clone.c	FUNCTION_36	WHILE_1	CALL_26
0x40012b0	    0x8b0500000000	            mov eax, dword [0x040012b6] 	       442	clone.c	FUNCTION_36	WHILE_1	IF_11
0x40012b6	            0x85c0	                           test eax, eax	       442	clone.c	FUNCTION_36	WHILE_1	IF_11
0x40012b8	            0x7563	                           jne 0x400131d	       442	clone.c	FUNCTION_36	WHILE_1	IF_11
0x40012ba	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       443	clone.c	FUNCTION_36	WHILE_1	IF_11	IF_12	CALL_27
0x40012c1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       443	clone.c	FUNCTION_36	WHILE_1	IF_11	IF_12	CALL_27
0x40012c5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       443	clone.c	FUNCTION_36	WHILE_1	IF_11	IF_12	CALL_27
0x40012cc	        0x488b4010	            mov rax, qword [rax + 0x10] 	       443	clone.c	FUNCTION_36	WHILE_1	IF_11	IF_12	CALL_27
0x40012d0	          0x4889d6	                            mov rsi, rdx	       443	clone.c	FUNCTION_36	WHILE_1	IF_11	IF_12	CALL_27
0x40012d3	          0x4889c7	                            mov rdi, rax	       443	clone.c	FUNCTION_36	WHILE_1	IF_11	IF_12	CALL_27
0x40012d6	      0xe800000000	                          call 0x40012db	       443	clone.c	FUNCTION_36	WHILE_1	IF_11	IF_12	CALL_27
0x40012db	            0x85c0	                           test eax, eax	       443	clone.c	FUNCTION_36	WHILE_1	IF_11	IF_12	CALL_27
0x40012dd	            0x7505	                           jne 0x40012e4	       443	clone.c	FUNCTION_36	WHILE_1	IF_11	IF_12	CALL_27
0x40012df	      0xe988000000	                           jmp 0x400136c	       444	clone.c	FUNCTION_36	WHILE_1	IF_11	IF_12
0x40012e4	    0x8b0500000000	            mov eax, dword [0x040012ea] 	       445	clone.c	FUNCTION_36	WHILE_1	IF_11	IF_13
0x40012ea	            0x85c0	                           test eax, eax	       445	clone.c	FUNCTION_36	WHILE_1	IF_11	IF_13
0x40012ec	            0x7e25	                           jle 0x4001313	       445	clone.c	FUNCTION_36	WHILE_1	IF_11	IF_13
0x40012ee	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       446	clone.c	FUNCTION_36	WHILE_1	IF_11	CALL_29
0x40012f5	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       446	clone.c	FUNCTION_36	WHILE_1	IF_11	CALL_29
0x40012f9	      0xbf00000000	                              mov edi, 0	       446	clone.c	FUNCTION_36	WHILE_1	IF_11	CALL_29
0x40012fe	      0xe838f0ffff	                               call sym.	       446	clone.c	FUNCTION_36	WHILE_1	IF_11	CALL_29
0x4001303	          0x4889de	                            mov rsi, rbx	       446	clone.c	FUNCTION_36	WHILE_1	IF_11	CALL_29
0x4001306	          0x4889c7	                            mov rdi, rax	       446	clone.c	FUNCTION_36	WHILE_1	IF_11	CALL_29
0x4001309	      0xb800000000	                              mov eax, 0	       446	clone.c	FUNCTION_36	WHILE_1	IF_11	CALL_29
0x400130e	      0xe800000000	                          call 0x4001313	       446	clone.c	FUNCTION_36	WHILE_1	IF_11	CALL_29
0x4001313	    0xc70500000000	               mov dword [0x0400131d], 1	       447	clone.c	FUNCTION_36	WHILE_1	IF_11
0x400131d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       449	clone.c	FUNCTION_36	WHILE_1	IF_14	CALL_30
0x4001324	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       449	clone.c	FUNCTION_36	WHILE_1	IF_14	CALL_30
0x4001328	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       449	clone.c	FUNCTION_36	WHILE_1	IF_14	CALL_30
0x400132f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       449	clone.c	FUNCTION_36	WHILE_1	IF_14	CALL_30
0x4001333	      0xbab6010000	                          mov edx, 0x1b6	       449	clone.c	FUNCTION_36	WHILE_1	IF_14	CALL_30
0x4001338	          0x4889ce	                            mov rsi, rcx	       449	clone.c	FUNCTION_36	WHILE_1	IF_14	CALL_30
0x400133b	          0x4889c7	                            mov rdi, rax	       449	clone.c	FUNCTION_36	WHILE_1	IF_14	CALL_30
0x400133e	      0xe800000000	                          call 0x4001343	       449	clone.c	FUNCTION_36	WHILE_1	IF_14	CALL_30
0x4001343	            0x85c0	                           test eax, eax	       449	clone.c	FUNCTION_36	WHILE_1	IF_14	CALL_30
0x4001345	            0x7425	                            je 0x400136c	       449	clone.c	FUNCTION_36	WHILE_1	IF_14	CALL_30
0x4001347	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       450	clone.c	FUNCTION_36	WHILE_1	CALL_32
0x400134e	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       450	clone.c	FUNCTION_36	WHILE_1	CALL_32
0x4001352	      0xbf00000000	                              mov edi, 0	       450	clone.c	FUNCTION_36	WHILE_1	CALL_32
0x4001357	      0xe8dfefffff	                               call sym.	       450	clone.c	FUNCTION_36	WHILE_1	CALL_32
0x400135c	          0x4889de	                            mov rsi, rbx	       450	clone.c	FUNCTION_36	WHILE_1	CALL_32
0x400135f	          0x4889c7	                            mov rdi, rax	       450	clone.c	FUNCTION_36	WHILE_1	CALL_32
0x4001362	      0xb800000000	                              mov eax, 0	       450	clone.c	FUNCTION_36	WHILE_1	CALL_32
0x4001367	      0xe800000000	                          call 0x400136c	       450	clone.c	FUNCTION_36	WHILE_1	CALL_32
0x400136c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       418	clone.c	FUNCTION_36	WHILE_1	CALL_13
0x4001373	          0x4889c7	                            mov rdi, rax	       418	clone.c	FUNCTION_36	WHILE_1	CALL_13
0x4001376	      0xe800000000	                          call 0x400137b	       418	clone.c	FUNCTION_36	WHILE_1	CALL_13
0x400137b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       418	clone.c	FUNCTION_36	WHILE_1	CALL_13
0x4001382	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       418	clone.c	FUNCTION_36	WHILE_1	CALL_13
0x400138a	     0xf8584fdffff	                           jne 0x4001114	       418	clone.c	FUNCTION_36	WHILE_1	CALL_13
0x4001390	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       452	clone.c	FUNCTION_36	CALL_33
0x4001397	          0x4889c7	                            mov rdi, rax	       452	clone.c	FUNCTION_36	CALL_33
0x400139a	      0xe800000000	                          call 0x400139f	       452	clone.c	FUNCTION_36	CALL_33
0x400139f	              0x90	                                     nop	       453	clone.c	FUNCTION_36
0x40013a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       453	clone.c	FUNCTION_36
0x40013a4	    0x644833042528	                xor rax, qword fs:[0x28]	       453	clone.c	FUNCTION_36
0x40013ad	            0x7405	                            je 0x40013b4	       453	clone.c	FUNCTION_36
0x40013af	      0xe800000000	                          call 0x40013b4	       453	clone.c	FUNCTION_36
0x40013b4	    0x4881c4e80000	                           add rsp, 0xe8	       453	clone.c	FUNCTION_36
0x40013bb	              0x5b	                                 pop rbx	       453	clone.c	FUNCTION_36
0x40013bc	              0x5d	                                 pop rbp	       453	clone.c	FUNCTION_36
0x40013bd	              0xc3	                                     ret	       453	clone.c	FUNCTION_36
is_null_oid	functions,0:FOR,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:DO,0	13
0x4000391	              0x55	                                push rbp	       989	cache.h	FUNCTION_11
0x4000392	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_11
0x4000395	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_11
0x4000399	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_11
0x400039d	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_11	CALL_1
0x40003a1	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_11	CALL_1
0x40003a6	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_11	CALL_1
0x40003a9	      0xe8b9ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_11	CALL_1
0x40003ae	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_11	CALL_1
0x40003b0	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_11	CALL_1
0x40003b3	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_11	CALL_1
0x40003b6	              0xc9	                                   leave	       991	cache.h	FUNCTION_11
0x40003b7	              0xc3	                                     ret	       991	cache.h	FUNCTION_11
parse_tree	functions,0:FOR,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:DO,0	10
0x4000448	              0x55	                                push rbp	        21	tree.h	FUNCTION_65
0x4000449	          0x4889e5	                            mov rbp, rsp	        21	tree.h	FUNCTION_65
0x400044c	        0x4883ec10	                           sub rsp, 0x10	        21	tree.h	FUNCTION_65
0x4000450	        0x48897df8	                mov qword [rbp - 8], rdi	        21	tree.h	FUNCTION_65
0x4000454	        0x488b45f8	                mov rax, qword [rbp - 8]	        22	tree.h	FUNCTION_65	CALL_1
0x4000458	      0xbe00000000	                              mov esi, 0	        22	tree.h	FUNCTION_65	CALL_1
0x400045d	          0x4889c7	                            mov rdi, rax	        22	tree.h	FUNCTION_65	CALL_1
0x4000460	      0xe800000000	                          call 0x4000465	        22	tree.h	FUNCTION_65	CALL_1
0x4000465	              0xc9	                                   leave	        23	tree.h	FUNCTION_65
0x4000466	              0xc3	                                     ret	        23	tree.h	FUNCTION_65
strbuf_addstr	functions,0:FOR,0:IF,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0:DO,0	17
0x4000306	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_58
0x4000307	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_58
0x400030a	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_58
0x400030e	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_58
0x4000312	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_58
0x4000316	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_58	CALL_2
0x400031a	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x400031d	      0xe800000000	                          call 0x4000322	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000322	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000325	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000329	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_58	CALL_2
0x400032d	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000330	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000333	      0xe800000000	                          call 0x4000338	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000338	              0x90	                                     nop	       280	strbuf.h	FUNCTION_58
0x4000339	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_58
0x400033a	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_58
get_repo_path	functions,0:FOR,0:IF,0:WHILE,0:CALL,4:ELSE,0:SWITCH,0:DO,0	40
0x4000795	              0x55	                                push rbp	       193	clone.c	IF_9	FUNCTION_30
0x4000796	          0x4889e5	                            mov rbp, rsp	       193	clone.c	IF_9	FUNCTION_30
0x4000799	        0x4883ec40	                           sub rsp, 0x40	       193	clone.c	IF_9	FUNCTION_30
0x400079d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       193	clone.c	IF_9	FUNCTION_30
0x40007a1	        0x488975c0	             mov qword [rbp - 0x40], rsi	       193	clone.c	IF_9	FUNCTION_30
0x40007a5	    0x64488b042528	                mov rax, qword fs:[0x28]	       193	clone.c	IF_9	FUNCTION_30
0x40007ae	        0x488945f8	                mov qword [rbp - 8], rax	       193	clone.c	IF_9	FUNCTION_30
0x40007b2	            0x31c0	                            xor eax, eax	       193	clone.c	IF_9	FUNCTION_30
0x40007b4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       194	clone.c	IF_9	FUNCTION_30
0x40007bc	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       194	clone.c	IF_9	FUNCTION_30
0x40007c4	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       194	clone.c	IF_9	FUNCTION_30
0x40007cc	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       198	clone.c	IF_9	FUNCTION_30	CALL_1
0x40007d0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       198	clone.c	IF_9	FUNCTION_30	CALL_1
0x40007d4	          0x4889d6	                            mov rsi, rdx	       198	clone.c	IF_9	FUNCTION_30	CALL_1
0x40007d7	          0x4889c7	                            mov rdi, rax	       198	clone.c	IF_9	FUNCTION_30	CALL_1
0x40007da	      0xe827fbffff	                  call sym.strbuf_addstr	       198	clone.c	IF_9	FUNCTION_30	CALL_1
0x40007df	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       199	clone.c	IF_9	FUNCTION_30	CALL_2
0x40007e3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       199	clone.c	IF_9	FUNCTION_30	CALL_2
0x40007e7	          0x4889d6	                            mov rsi, rdx	       199	clone.c	IF_9	FUNCTION_30	CALL_2
0x40007ea	          0x4889c7	                            mov rdi, rax	       199	clone.c	IF_9	FUNCTION_30	CALL_2
0x40007ed	      0xe8eafcffff	                call sym.get_repo_path_1	       199	clone.c	IF_9	FUNCTION_30	CALL_2
0x40007f2	        0x488945d0	             mov qword [rbp - 0x30], rax	       199	clone.c	IF_9	FUNCTION_30	CALL_2
0x40007f6	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       200	clone.c	IF_9	FUNCTION_30	CALL_3
0x40007fb	            0x740e	                            je 0x400080b	       200	clone.c	IF_9	FUNCTION_30	CALL_3
0x40007fd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       200	clone.c	IF_9	FUNCTION_30	CALL_3
0x4000801	          0x4889c7	                            mov rdi, rax	       200	clone.c	IF_9	FUNCTION_30	CALL_3
0x4000804	      0xe800000000	                          call 0x4000809	       200	clone.c	IF_9	FUNCTION_30	CALL_3
0x4000809	            0xeb05	                           jmp 0x4000810	       200	clone.c	IF_9	FUNCTION_30	CALL_3
0x400080b	      0xb800000000	                              mov eax, 0	       200	clone.c	IF_9	FUNCTION_30	CALL_3
0x4000810	        0x488945d8	             mov qword [rbp - 0x28], rax	       200	clone.c	IF_9	FUNCTION_30	CALL_3
0x4000814	        0x488d45e0	                   lea rax, [rbp - 0x20]	       201	clone.c	IF_9	FUNCTION_30	CALL_4
0x4000818	          0x4889c7	                            mov rdi, rax	       201	clone.c	IF_9	FUNCTION_30	CALL_4
0x400081b	      0xe800000000	                          call 0x4000820	       201	clone.c	IF_9	FUNCTION_30	CALL_4
0x4000820	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       202	clone.c	IF_9	FUNCTION_30
0x4000824	        0x488b4df8	                mov rcx, qword [rbp - 8]	       203	clone.c	IF_9	FUNCTION_30
0x4000828	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       203	clone.c	IF_9	FUNCTION_30
0x4000831	            0x7405	                            je 0x4000838	       203	clone.c	IF_9	FUNCTION_30
0x4000833	      0xe800000000	                          call 0x4000838	       203	clone.c	IF_9	FUNCTION_30
0x4000838	              0xc9	                                   leave	       203	clone.c	IF_9	FUNCTION_30
0x4000839	              0xc3	                                     ret	       203	clone.c	IF_9	FUNCTION_30
add_one_reference	functions,0:FOR,0:IF,2:WHILE,0:CALL,9:ELSE,2:SWITCH,0:DO,0	77
0x4000c8d	              0x55	                                push rbp	       320	clone.c	FUNCTION_33
0x4000c8e	          0x4889e5	                            mov rbp, rsp	       320	clone.c	FUNCTION_33
0x4000c91	            0x4154	                                push r12	       320	clone.c	FUNCTION_33
0x4000c93	              0x53	                                push rbx	       320	clone.c	FUNCTION_33
0x4000c94	        0x4883ec60	                           sub rsp, 0x60	       320	clone.c	FUNCTION_33
0x4000c98	        0x48897d98	             mov qword [rbp - 0x68], rdi	       320	clone.c	FUNCTION_33
0x4000c9c	        0x48897590	             mov qword [rbp - 0x70], rsi	       320	clone.c	FUNCTION_33
0x4000ca0	    0x64488b042528	                mov rax, qword fs:[0x28]	       320	clone.c	FUNCTION_33
0x4000ca9	        0x488945e8	             mov qword [rbp - 0x18], rax	       320	clone.c	FUNCTION_33
0x4000cad	            0x31c0	                            xor eax, eax	       320	clone.c	FUNCTION_33
0x4000caf	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       321	clone.c	FUNCTION_33
0x4000cb7	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       321	clone.c	FUNCTION_33
0x4000cbf	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       321	clone.c	FUNCTION_33
0x4000cc7	        0x488b4590	             mov rax, qword [rbp - 0x70]	       322	clone.c	FUNCTION_33
0x4000ccb	        0x488945a0	             mov qword [rbp - 0x60], rax	       322	clone.c	FUNCTION_33
0x4000ccf	        0x488b4598	             mov rax, qword [rbp - 0x68]	       323	clone.c	FUNCTION_33	CALL_1
0x4000cd3	          0x488b00	                    mov rax, qword [rax]	       323	clone.c	FUNCTION_33	CALL_1
0x4000cd6	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       323	clone.c	FUNCTION_33	CALL_1
0x4000cda	          0x4889d6	                            mov rsi, rdx	       323	clone.c	FUNCTION_33	CALL_1
0x4000cdd	          0x4889c7	                            mov rdi, rax	       323	clone.c	FUNCTION_33	CALL_1
0x4000ce0	      0xe800000000	                          call 0x4000ce5	       323	clone.c	FUNCTION_33	CALL_1
0x4000ce5	        0x488945a8	             mov qword [rbp - 0x58], rax	       323	clone.c	FUNCTION_33	CALL_1
0x4000ce9	      0x48837da800	               cmp qword [rbp - 0x58], 0	       325	clone.c	FUNCTION_33	IF_1
0x4000cee	            0x7554	                           jne 0x4000d44	       325	clone.c	FUNCTION_33	IF_1
0x4000cf0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       326	clone.c	FUNCTION_33	IF_1	IF_2
0x4000cf4	            0x8b00	                    mov eax, dword [rax]	       326	clone.c	FUNCTION_33	IF_1	IF_2
0x4000cf6	            0x85c0	                           test eax, eax	       326	clone.c	FUNCTION_33	IF_1	IF_2
0x4000cf8	            0x7416	                            je 0x4000d10	       326	clone.c	FUNCTION_33	IF_1	IF_2
0x4000cfa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       327	clone.c	FUNCTION_33	IF_1	CALL_2
0x4000cfe	          0x4889c6	                            mov rsi, rax	       327	clone.c	FUNCTION_33	IF_1	CALL_2
0x4000d01	      0xbf00000000	                              mov edi, 0	       327	clone.c	FUNCTION_33	IF_1	CALL_2
0x4000d06	      0xb800000000	                              mov eax, 0	       327	clone.c	FUNCTION_33	IF_1	CALL_2
0x4000d0b	      0xe800000000	                          call 0x4000d10	       327	clone.c	FUNCTION_33	IF_1	CALL_2
0x4000d10	        0x4c8b65c0	             mov r12, qword [rbp - 0x40]	       329	clone.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4000d14	        0x488b4598	             mov rax, qword [rbp - 0x68]	       329	clone.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4000d18	          0x488b18	                    mov rbx, qword [rax]	       329	clone.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4000d1b	      0xbf00000000	                              mov edi, 0	       329	clone.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4000d20	      0xe816f6ffff	                               call sym.	       329	clone.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4000d25	          0x4889c6	                            mov rsi, rax	       329	clone.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4000d28	    0x488b05000000	            mov rax, qword [0x04000d2f] 	       329	clone.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4000d2f	          0x4c89e1	                            mov rcx, r12	       329	clone.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4000d32	          0x4889da	                            mov rdx, rbx	       329	clone.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4000d35	          0x4889c7	                            mov rdi, rax	       329	clone.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4000d38	      0xb800000000	                              mov eax, 0	       329	clone.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4000d3d	      0xe800000000	                          call 0x4000d42	       329	clone.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4000d42	            0xeb4a	                           jmp 0x4000d8e	       329	clone.c	FUNCTION_33	IF_1	ELSE_1	CALL_3
0x4000d44	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       333	clone.c	FUNCTION_33	ELSE_2
0x4000d4c	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       333	clone.c	FUNCTION_33	ELSE_2
0x4000d54	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       333	clone.c	FUNCTION_33	ELSE_2
0x4000d5c	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       334	clone.c	FUNCTION_33	ELSE_2	CALL_5
0x4000d60	        0x488d45d0	                   lea rax, [rbp - 0x30]	       334	clone.c	FUNCTION_33	ELSE_2	CALL_5
0x4000d64	      0xbe00000000	                              mov esi, 0	       334	clone.c	FUNCTION_33	ELSE_2	CALL_5
0x4000d69	          0x4889c7	                            mov rdi, rax	       334	clone.c	FUNCTION_33	ELSE_2	CALL_5
0x4000d6c	      0xb800000000	                              mov eax, 0	       334	clone.c	FUNCTION_33	ELSE_2	CALL_5
0x4000d71	      0xe800000000	                          call 0x4000d76	       334	clone.c	FUNCTION_33	ELSE_2	CALL_5
0x4000d76	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       335	clone.c	FUNCTION_33	ELSE_2	CALL_6
0x4000d7a	          0x4889c7	                            mov rdi, rax	       335	clone.c	FUNCTION_33	ELSE_2	CALL_6
0x4000d7d	      0xe800000000	                          call 0x4000d82	       335	clone.c	FUNCTION_33	ELSE_2	CALL_6
0x4000d82	        0x488d45d0	                   lea rax, [rbp - 0x30]	       336	clone.c	FUNCTION_33	ELSE_2	CALL_7
0x4000d86	          0x4889c7	                            mov rdi, rax	       336	clone.c	FUNCTION_33	ELSE_2	CALL_7
0x4000d89	      0xe800000000	                          call 0x4000d8e	       336	clone.c	FUNCTION_33	ELSE_2	CALL_7
0x4000d8e	        0x488d45b0	                   lea rax, [rbp - 0x50]	       339	clone.c	FUNCTION_33	CALL_8
0x4000d92	          0x4889c7	                            mov rdi, rax	       339	clone.c	FUNCTION_33	CALL_8
0x4000d95	      0xe800000000	                          call 0x4000d9a	       339	clone.c	FUNCTION_33	CALL_8
0x4000d9a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       340	clone.c	FUNCTION_33	CALL_9
0x4000d9e	          0x4889c7	                            mov rdi, rax	       340	clone.c	FUNCTION_33	CALL_9
0x4000da1	      0xe800000000	                          call 0x4000da6	       340	clone.c	FUNCTION_33	CALL_9
0x4000da6	      0xb800000000	                              mov eax, 0	       341	clone.c	FUNCTION_33
0x4000dab	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       342	clone.c	FUNCTION_33
0x4000daf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       342	clone.c	FUNCTION_33
0x4000db8	            0x7405	                            je 0x4000dbf	       342	clone.c	FUNCTION_33
0x4000dba	      0xe800000000	                          call 0x4000dbf	       342	clone.c	FUNCTION_33
0x4000dbf	        0x4883c460	                           add rsp, 0x60	       342	clone.c	FUNCTION_33
0x4000dc3	              0x5b	                                 pop rbx	       342	clone.c	FUNCTION_33
0x4000dc4	            0x415c	                                 pop r12	       342	clone.c	FUNCTION_33
0x4000dc6	              0x5d	                                 pop rbp	       342	clone.c	FUNCTION_33
0x4000dc7	              0xc3	                                     ret	       342	clone.c	FUNCTION_33
write_remote_refs	functions,0:FOR,1:IF,4:WHILE,0:CALL,8:ELSE,0:SWITCH,0:DO,0	78
0x40018f6	              0x55	                                push rbp	       585	clone.c	FUNCTION_42
0x40018f7	          0x4889e5	                            mov rbp, rsp	       585	clone.c	FUNCTION_42
0x40018fa	        0x4883ec40	                           sub rsp, 0x40	       585	clone.c	FUNCTION_42
0x40018fe	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       585	clone.c	FUNCTION_42
0x4001902	    0x64488b042528	                mov rax, qword fs:[0x28]	       585	clone.c	FUNCTION_42
0x400190b	        0x488945f8	                mov qword [rbp - 8], rax	       585	clone.c	FUNCTION_42
0x400190f	            0x31c0	                            xor eax, eax	       585	clone.c	FUNCTION_42
0x4001911	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       589	clone.c	FUNCTION_42
0x4001919	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       589	clone.c	FUNCTION_42
0x4001921	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       589	clone.c	FUNCTION_42
0x4001929	        0x488d45e0	                   lea rax, [rbp - 0x20]	       591	clone.c	FUNCTION_42	CALL_1
0x400192d	          0x4889c7	                            mov rdi, rax	       591	clone.c	FUNCTION_42	CALL_1
0x4001930	      0xe800000000	                          call 0x4001935	       591	clone.c	FUNCTION_42	CALL_1
0x4001935	        0x488945d8	             mov qword [rbp - 0x28], rax	       591	clone.c	FUNCTION_42	CALL_1
0x4001939	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       592	clone.c	FUNCTION_42	IF_1
0x400193e	            0x7516	                           jne 0x4001956	       592	clone.c	FUNCTION_42	IF_1
0x4001940	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       593	clone.c	FUNCTION_42	CALL_2
0x4001944	          0x4889c6	                            mov rsi, rax	       593	clone.c	FUNCTION_42	CALL_2
0x4001947	      0xbf00000000	                              mov edi, 0	       593	clone.c	FUNCTION_42	CALL_2
0x400194c	      0xb800000000	                              mov eax, 0	       593	clone.c	FUNCTION_42	CALL_2
0x4001951	      0xe800000000	                          call 0x4001956	       593	clone.c	FUNCTION_42	CALL_2
0x4001956	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       595	clone.c	FUNCTION_42	FOR_1
0x400195a	        0x488945d0	             mov qword [rbp - 0x30], rax	       595	clone.c	FUNCTION_42	FOR_1
0x400195e	            0xeb65	                           jmp 0x40019c5	       595	clone.c	FUNCTION_42	FOR_1
0x4001960	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       596	clone.c	FUNCTION_42	FOR_1	IF_2
0x4001964	        0x488b4068	            mov rax, qword [rax + 0x68] 	       596	clone.c	FUNCTION_42	FOR_1	IF_2
0x4001968	          0x4885c0	                           test rax, rax	       596	clone.c	FUNCTION_42	FOR_1	IF_2
0x400196b	            0x744c	                            je 0x40019b9	       596	clone.c	FUNCTION_42	FOR_1	IF_2
0x400196d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       598	clone.c	FUNCTION_42	FOR_1	IF_3	CALL_3
0x4001971	        0x488d5008	                      lea rdx, [rax + 8]	       598	clone.c	FUNCTION_42	FOR_1	IF_3	CALL_3
0x4001975	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       598	clone.c	FUNCTION_42	FOR_1	IF_3	CALL_3
0x4001979	        0x488b4068	            mov rax, qword [rax + 0x68] 	       598	clone.c	FUNCTION_42	FOR_1	IF_3	CALL_3
0x400197d	        0x488d7070	                   lea rsi, [rax + 0x70]	       598	clone.c	FUNCTION_42	FOR_1	IF_3	CALL_3
0x4001981	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       598	clone.c	FUNCTION_42	FOR_1	IF_3	CALL_3
0x4001985	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       598	clone.c	FUNCTION_42	FOR_1	IF_3	CALL_3
0x4001989	          0x4989c9	                             mov r9, rcx	       598	clone.c	FUNCTION_42	FOR_1	IF_3	CALL_3
0x400198c	    0x41b800000000	                              mov r8d, 0	       598	clone.c	FUNCTION_42	FOR_1	IF_3	CALL_3
0x4001992	      0xb900000000	                              mov ecx, 0	       598	clone.c	FUNCTION_42	FOR_1	IF_3	CALL_3
0x4001997	          0x4889c7	                            mov rdi, rax	       598	clone.c	FUNCTION_42	FOR_1	IF_3	CALL_3
0x400199a	      0xe800000000	                          call 0x400199f	       598	clone.c	FUNCTION_42	FOR_1	IF_3	CALL_3
0x400199f	            0x85c0	                           test eax, eax	       598	clone.c	FUNCTION_42	FOR_1	IF_3	CALL_3
0x40019a1	            0x7417	                            je 0x40019ba	       598	clone.c	FUNCTION_42	FOR_1	IF_3	CALL_3
0x40019a3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       600	clone.c	FUNCTION_42	FOR_1	CALL_4
0x40019a7	          0x4889c6	                            mov rsi, rax	       600	clone.c	FUNCTION_42	FOR_1	CALL_4
0x40019aa	      0xbf00000000	                              mov edi, 0	       600	clone.c	FUNCTION_42	FOR_1	CALL_4
0x40019af	      0xb800000000	                              mov eax, 0	       600	clone.c	FUNCTION_42	FOR_1	CALL_4
0x40019b4	      0xe800000000	                          call 0x40019b9	       600	clone.c	FUNCTION_42	FOR_1	CALL_4
0x40019b9	              0x90	                                     nop	       597	clone.c	FUNCTION_42	FOR_1	IF_2
0x40019ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       595	clone.c	FUNCTION_42	FOR_1
0x40019be	          0x488b00	                    mov rax, qword [rax]	       595	clone.c	FUNCTION_42	FOR_1
0x40019c1	        0x488945d0	             mov qword [rbp - 0x30], rax	       595	clone.c	FUNCTION_42	FOR_1
0x40019c5	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       595	clone.c	FUNCTION_42	FOR_1
0x40019ca	            0x7594	                           jne 0x4001960	       595	clone.c	FUNCTION_42	FOR_1
0x40019cc	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       603	clone.c	FUNCTION_42	IF_4	CALL_5
0x40019d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       603	clone.c	FUNCTION_42	IF_4	CALL_5
0x40019d4	          0x4889d6	                            mov rsi, rdx	       603	clone.c	FUNCTION_42	IF_4	CALL_5
0x40019d7	          0x4889c7	                            mov rdi, rax	       603	clone.c	FUNCTION_42	IF_4	CALL_5
0x40019da	      0xe800000000	                          call 0x40019df	       603	clone.c	FUNCTION_42	IF_4	CALL_5
0x40019df	            0x85c0	                           test eax, eax	       603	clone.c	FUNCTION_42	IF_4	CALL_5
0x40019e1	            0x7416	                            je 0x40019f9	       603	clone.c	FUNCTION_42	IF_4	CALL_5
0x40019e3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       604	clone.c	FUNCTION_42	CALL_6
0x40019e7	          0x4889c6	                            mov rsi, rax	       604	clone.c	FUNCTION_42	CALL_6
0x40019ea	      0xbf00000000	                              mov edi, 0	       604	clone.c	FUNCTION_42	CALL_6
0x40019ef	      0xb800000000	                              mov eax, 0	       604	clone.c	FUNCTION_42	CALL_6
0x40019f4	      0xe800000000	                          call 0x40019f9	       604	clone.c	FUNCTION_42	CALL_6
0x40019f9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       606	clone.c	FUNCTION_42	CALL_7
0x40019fd	          0x4889c7	                            mov rdi, rax	       606	clone.c	FUNCTION_42	CALL_7
0x4001a00	      0xe800000000	                          call 0x4001a05	       606	clone.c	FUNCTION_42	CALL_7
0x4001a05	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       607	clone.c	FUNCTION_42	CALL_8
0x4001a09	          0x4889c7	                            mov rdi, rax	       607	clone.c	FUNCTION_42	CALL_8
0x4001a0c	      0xe800000000	                          call 0x4001a11	       607	clone.c	FUNCTION_42	CALL_8
0x4001a11	              0x90	                                     nop	       608	clone.c	FUNCTION_42
0x4001a12	        0x488b45f8	                mov rax, qword [rbp - 8]	       608	clone.c	FUNCTION_42
0x4001a16	    0x644833042528	                xor rax, qword fs:[0x28]	       608	clone.c	FUNCTION_42
0x4001a1f	            0x7405	                            je 0x4001a26	       608	clone.c	FUNCTION_42
0x4001a21	      0xe800000000	                          call 0x4001a26	       608	clone.c	FUNCTION_42
0x4001a26	              0xc9	                                   leave	       608	clone.c	FUNCTION_42
0x4001a27	              0xc3	                                     ret	       608	clone.c	FUNCTION_42
cmd_clone	functions,1:FOR,1:IF,62:WHILE,0:CALL,124:ELSE,14:SWITCH,0:DO,0	896
0x4002657	              0x55	                                push rbp	       879	clone.c	FUNCTION_53
0x4002658	          0x4889e5	                            mov rbp, rsp	       879	clone.c	FUNCTION_53
0x400265b	            0x4154	                                push r12	       879	clone.c	FUNCTION_53
0x400265d	              0x53	                                push rbx	       879	clone.c	FUNCTION_53
0x400265e	    0x4881ec600100	                          sub rsp, 0x160	       879	clone.c	FUNCTION_53
0x4002665	    0x89bdacfeffff	            mov dword [rbp - 0x154], edi	       879	clone.c	FUNCTION_53
0x400266b	    0x4889b5a0feff	            mov qword [rbp - 0x160], rsi	       879	clone.c	FUNCTION_53
0x4002672	    0x48899598feff	            mov qword [rbp - 0x168], rdx	       879	clone.c	FUNCTION_53
0x4002679	    0x64488b042528	                mov rax, qword fs:[0x28]	       879	clone.c	FUNCTION_53
0x4002682	        0x488945e8	             mov qword [rbp - 0x18], rax	       879	clone.c	FUNCTION_53
0x4002686	            0x31c0	                            xor eax, eax	       879	clone.c	FUNCTION_53
0x4002688	    0xc785b0feffff	              mov dword [rbp - 0x150], 0	       880	clone.c	FUNCTION_53
0x4002692	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       889	clone.c	FUNCTION_53
0x400269d	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	       889	clone.c	FUNCTION_53
0x40026a8	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	       889	clone.c	FUNCTION_53
0x40026b3	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       889	clone.c	FUNCTION_53
0x40026be	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       889	clone.c	FUNCTION_53
0x40026c9	    0x48c745800000	               mov qword [rbp - 0x80], 0	       889	clone.c	FUNCTION_53
0x40026d1	    0x48c745900000	               mov qword [rbp - 0x70], 0	       890	clone.c	FUNCTION_53
0x40026d9	    0x48c745980000	               mov qword [rbp - 0x68], 0	       890	clone.c	FUNCTION_53
0x40026e1	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       890	clone.c	FUNCTION_53
0x40026e9	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       890	clone.c	FUNCTION_53
0x40026f1	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       890	clone.c	FUNCTION_53
0x40026f9	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       890	clone.c	FUNCTION_53
0x4002701	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       891	clone.c	FUNCTION_53
0x400270c	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       892	clone.c	FUNCTION_53
0x4002717	    0xc785bcfeffff	              mov dword [rbp - 0x144], 0	       894	clone.c	FUNCTION_53
0x4002721	    0xc785b8feffff	              mov dword [rbp - 0x148], 1	       894	clone.c	FUNCTION_53
0x400272b	    0xc70500000000	               mov dword [0x04002735], 0	       900	clone.c	FUNCTION_53
0x4002735	      0xbf00000000	                              mov edi, 0	       902	clone.c	FUNCTION_53	CALL_1
0x400273a	      0xe800000000	                          call 0x400273f	       902	clone.c	FUNCTION_53	CALL_1
0x400273f	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	       903	clone.c	FUNCTION_53	CALL_2
0x4002746	    0x488bb5a0feff	            mov rsi, qword [rbp - 0x160]	       903	clone.c	FUNCTION_53	CALL_2
0x400274d	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	       903	clone.c	FUNCTION_53	CALL_2
0x4002753	    0x41b900000000	                              mov r9d, 0	       903	clone.c	FUNCTION_53	CALL_2
0x4002759	    0x41b800000000	                              mov r8d, 0	       903	clone.c	FUNCTION_53	CALL_2
0x400275f	      0xb900000000	                              mov ecx, 0	       903	clone.c	FUNCTION_53	CALL_2
0x4002764	            0x89c7	                            mov edi, eax	       903	clone.c	FUNCTION_53	CALL_2
0x4002766	      0xe800000000	                          call 0x400276b	       903	clone.c	FUNCTION_53	CALL_2
0x400276b	    0x8985acfeffff	            mov dword [rbp - 0x154], eax	       903	clone.c	FUNCTION_53	CALL_2
0x4002771	    0x83bdacfeffff	              cmp dword [rbp - 0x154], 2	       906	clone.c	FUNCTION_53	IF_1
0x4002778	            0x7e1c	                           jle 0x4002796	       906	clone.c	FUNCTION_53	IF_1
0x400277a	      0xbf00000000	                              mov edi, 0	       907	clone.c	FUNCTION_53	IF_1	CALL_4
0x400277f	      0xe8b7dbffff	                               call sym.	       907	clone.c	FUNCTION_53	IF_1	CALL_4
0x4002784	      0xba00000000	                              mov edx, 0	       907	clone.c	FUNCTION_53	IF_1	CALL_4
0x4002789	      0xbe00000000	                              mov esi, 0	       907	clone.c	FUNCTION_53	IF_1	CALL_4
0x400278e	          0x4889c7	                            mov rdi, rax	       907	clone.c	FUNCTION_53	IF_1	CALL_4
0x4002791	      0xe800000000	                          call 0x4002796	       907	clone.c	FUNCTION_53	IF_1	CALL_4
0x4002796	    0x83bdacfeffff	              cmp dword [rbp - 0x154], 0	       910	clone.c	FUNCTION_53	IF_2
0x400279d	            0x751c	                           jne 0x40027bb	       910	clone.c	FUNCTION_53	IF_2
0x400279f	      0xbf00000000	                              mov edi, 0	       911	clone.c	FUNCTION_53	IF_2	CALL_6
0x40027a4	      0xe892dbffff	                               call sym.	       911	clone.c	FUNCTION_53	IF_2	CALL_6
0x40027a9	      0xba00000000	                              mov edx, 0	       911	clone.c	FUNCTION_53	IF_2	CALL_6
0x40027ae	      0xbe00000000	                              mov esi, 0	       911	clone.c	FUNCTION_53	IF_2	CALL_6
0x40027b3	          0x4889c7	                            mov rdi, rax	       911	clone.c	FUNCTION_53	IF_2	CALL_6
0x40027b6	      0xe800000000	                          call 0x40027bb	       911	clone.c	FUNCTION_53	IF_2	CALL_6
0x40027bb	    0x488b05000000	            mov rax, qword [0x040027c2] 	       914	clone.c	FUNCTION_53	IF_3
0x40027c2	          0x4885c0	                           test rax, rax	       914	clone.c	FUNCTION_53	IF_3
0x40027c5	            0x7516	                           jne 0x40027dd	       914	clone.c	FUNCTION_53	IF_3
0x40027c7	    0x488b05000000	            mov rax, qword [0x040027ce] 	       914	clone.c	FUNCTION_53	IF_3
0x40027ce	          0x4885c0	                           test rax, rax	       914	clone.c	FUNCTION_53	IF_3
0x40027d1	            0x750a	                           jne 0x40027dd	       914	clone.c	FUNCTION_53	IF_3
0x40027d3	    0x8b0500000000	            mov eax, dword [0x040027d9] 	       914	clone.c	FUNCTION_53	IF_3
0x40027d9	            0x85c0	                           test eax, eax	       914	clone.c	FUNCTION_53	IF_3
0x40027db	            0x740a	                            je 0x40027e7	       914	clone.c	FUNCTION_53	IF_3
0x40027dd	    0xc70500000000	               mov dword [0x040027e7], 1	       915	clone.c	FUNCTION_53	IF_3
0x40027e7	    0x8b0500000000	            mov eax, dword [0x040027ed] 	       916	clone.c	FUNCTION_53	IF_4
0x40027ed	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       916	clone.c	FUNCTION_53	IF_4
0x40027f0	            0x7514	                           jne 0x4002806	       916	clone.c	FUNCTION_53	IF_4
0x40027f2	    0x8b0500000000	            mov eax, dword [0x040027f8] 	       917	clone.c	FUNCTION_53	IF_4
0x40027f8	            0x85c0	                           test eax, eax	       917	clone.c	FUNCTION_53	IF_4
0x40027fa	           0xf95c0	                                setne al	       917	clone.c	FUNCTION_53	IF_4
0x40027fd	           0xfb6c0	                           movzx eax, al	       917	clone.c	FUNCTION_53	IF_4
0x4002800	    0x890500000000	            mov dword [0x04002806], eax 	       917	clone.c	FUNCTION_53	IF_4
0x4002806	    0x8b0500000000	            mov eax, dword [0x0400280c] 	       919	clone.c	FUNCTION_53	IF_5
0x400280c	            0x85c0	                           test eax, eax	       919	clone.c	FUNCTION_53	IF_5
0x400280e	            0x740a	                            je 0x400281a	       919	clone.c	FUNCTION_53	IF_5
0x4002810	    0xc70500000000	               mov dword [0x0400281a], 1	       920	clone.c	FUNCTION_53	IF_5
0x400281a	    0x8b0500000000	            mov eax, dword [0x04002820] 	       922	clone.c	FUNCTION_53	IF_6
0x4002820	            0x85c0	                           test eax, eax	       922	clone.c	FUNCTION_53	IF_6
0x4002822	            0x745a	                            je 0x400287e	       922	clone.c	FUNCTION_53	IF_6
0x4002824	    0x488b05000000	            mov rax, qword [0x0400282b] 	       923	clone.c	FUNCTION_53	IF_6	IF_7
0x400282b	          0x4885c0	                           test rax, rax	       923	clone.c	FUNCTION_53	IF_6	IF_7
0x400282e	            0x7421	                            je 0x4002851	       923	clone.c	FUNCTION_53	IF_6	IF_7
0x4002830	    0x488b1d000000	            mov rbx, qword [0x04002837] 	       924	clone.c	FUNCTION_53	IF_6	IF_7	CALL_8
0x4002837	      0xbf00000000	                              mov edi, 0	       924	clone.c	FUNCTION_53	IF_6	IF_7	CALL_8
0x400283c	      0xe8fadaffff	                               call sym.	       924	clone.c	FUNCTION_53	IF_6	IF_7	CALL_8
0x4002841	          0x4889de	                            mov rsi, rbx	       924	clone.c	FUNCTION_53	IF_6	IF_7	CALL_8
0x4002844	          0x4889c7	                            mov rdi, rax	       924	clone.c	FUNCTION_53	IF_6	IF_7	CALL_8
0x4002847	      0xb800000000	                              mov eax, 0	       924	clone.c	FUNCTION_53	IF_6	IF_7	CALL_8
0x400284c	      0xe800000000	                          call 0x4002851	       924	clone.c	FUNCTION_53	IF_6	IF_7	CALL_8
0x4002851	    0x488b05000000	            mov rax, qword [0x04002858] 	       926	clone.c	FUNCTION_53	IF_6	IF_8
0x4002858	          0x4885c0	                           test rax, rax	       926	clone.c	FUNCTION_53	IF_6	IF_8
0x400285b	            0x7417	                            je 0x4002874	       926	clone.c	FUNCTION_53	IF_6	IF_8
0x400285d	      0xbf00000000	                              mov edi, 0	       927	clone.c	FUNCTION_53	IF_6	CALL_10
0x4002862	      0xe8d4daffff	                               call sym.	       927	clone.c	FUNCTION_53	IF_6	CALL_10
0x4002867	          0x4889c7	                            mov rdi, rax	       927	clone.c	FUNCTION_53	IF_6	CALL_10
0x400286a	      0xb800000000	                              mov eax, 0	       927	clone.c	FUNCTION_53	IF_6	CALL_10
0x400286f	      0xe800000000	                          call 0x4002874	       927	clone.c	FUNCTION_53	IF_6	CALL_10
0x4002874	    0xc70500000000	               mov dword [0x0400287e], 1	       928	clone.c	FUNCTION_53	IF_6
0x400287e	    0x488b05000000	            mov rax, qword [0x04002885] 	       931	clone.c	FUNCTION_53	IF_9
0x4002885	          0x4885c0	                           test rax, rax	       931	clone.c	FUNCTION_53	IF_9
0x4002888	            0x750b	                           jne 0x4002895	       931	clone.c	FUNCTION_53	IF_9
0x400288a	    0x48c705000000	               mov qword [0x04002895], 0	       932	clone.c	FUNCTION_53	IF_9
0x4002895	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       934	clone.c	FUNCTION_53
0x400289c	          0x488b00	                    mov rax, qword [rax]	       934	clone.c	FUNCTION_53
0x400289f	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       934	clone.c	FUNCTION_53
0x40028a6	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	       936	clone.c	FUNCTION_53	CALL_11
0x40028ad	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       936	clone.c	FUNCTION_53	CALL_11
0x40028b4	          0x4889d6	                            mov rsi, rdx	       936	clone.c	FUNCTION_53	CALL_11
0x40028b7	          0x4889c7	                            mov rdi, rax	       936	clone.c	FUNCTION_53	CALL_11
0x40028ba	      0xe8d6deffff	                  call sym.get_repo_path	       936	clone.c	FUNCTION_53	CALL_11
0x40028bf	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	       936	clone.c	FUNCTION_53	CALL_11
0x40028c6	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	       937	clone.c	FUNCTION_53	IF_10
0x40028ce	            0x7418	                            je 0x40028e8	       937	clone.c	FUNCTION_53	IF_10
0x40028d0	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       938	clone.c	FUNCTION_53	CALL_12
0x40028d7	          0x4889c7	                            mov rdi, rax	       938	clone.c	FUNCTION_53	CALL_12
0x40028da	      0xe800000000	                          call 0x40028df	       938	clone.c	FUNCTION_53	CALL_12
0x40028df	    0x488985c8feff	            mov qword [rbp - 0x138], rax	       938	clone.c	FUNCTION_53	CALL_12
0x40028e6	            0xeb4b	                           jmp 0x4002933	       938	clone.c	FUNCTION_53	CALL_12
0x40028e8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       939	clone.c	FUNCTION_53	ELSE_1	IF_11	CALL_13
0x40028ef	      0xbe3a000000	                           mov esi, 0x3a	       939	clone.c	FUNCTION_53	ELSE_1	IF_11	CALL_13
0x40028f4	          0x4889c7	                            mov rdi, rax	       939	clone.c	FUNCTION_53	ELSE_1	IF_11	CALL_13
0x40028f7	      0xe800000000	                          call 0x40028fc	       939	clone.c	FUNCTION_53	ELSE_1	IF_11	CALL_13
0x40028fc	          0x4885c0	                           test rax, rax	       939	clone.c	FUNCTION_53	ELSE_1	IF_11	CALL_13
0x40028ff	            0x7524	                           jne 0x4002925	       939	clone.c	FUNCTION_53	ELSE_1	IF_11	CALL_13
0x4002901	      0xbf00000000	                              mov edi, 0	       940	clone.c	FUNCTION_53	ELSE_1	IF_11
0x4002906	      0xe830daffff	                               call sym.	       940	clone.c	FUNCTION_53	ELSE_1	IF_11
0x400290b	          0x4889c2	                            mov rdx, rax	       940	clone.c	FUNCTION_53	ELSE_1	IF_11
0x400290e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       940	clone.c	FUNCTION_53	ELSE_1	IF_11
0x4002915	          0x4889c6	                            mov rsi, rax	       940	clone.c	FUNCTION_53	ELSE_1	IF_11
0x4002918	          0x4889d7	                            mov rdi, rdx	       940	clone.c	FUNCTION_53	ELSE_1	IF_11
0x400291b	      0xb800000000	                              mov eax, 0	       940	clone.c	FUNCTION_53	ELSE_1	IF_11
0x4002920	      0xe800000000	                          call 0x4002925	       940	clone.c	FUNCTION_53	ELSE_1	IF_11
0x4002925	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       942	clone.c	FUNCTION_53	ELSE_2
0x400292c	    0x488985c8feff	            mov qword [rbp - 0x138], rax	       942	clone.c	FUNCTION_53	ELSE_2
0x4002933	    0x488b05000000	            mov rax, qword [0x0400293a] 	       945	clone.c	FUNCTION_53	IF_12	CALL_16
0x400293a	          0x4885c0	                           test rax, rax	       945	clone.c	FUNCTION_53	IF_12	CALL_16
0x400293d	            0x7434	                            je 0x4002973	       945	clone.c	FUNCTION_53	IF_12	CALL_16
0x400293f	    0x488b05000000	            mov rax, qword [0x04002946] 	       945	clone.c	FUNCTION_53	IF_12	CALL_16
0x4002946	          0x4889c7	                            mov rdi, rax	       945	clone.c	FUNCTION_53	IF_12	CALL_16
0x4002949	      0xe800000000	                          call 0x400294e	       945	clone.c	FUNCTION_53	IF_12	CALL_16
0x400294e	            0x85c0	                           test eax, eax	       945	clone.c	FUNCTION_53	IF_12	CALL_16
0x4002950	            0x7f21	                            jg 0x4002973	       945	clone.c	FUNCTION_53	IF_12	CALL_16
0x4002952	    0x488b1d000000	            mov rbx, qword [0x04002959] 	       946	clone.c	FUNCTION_53	CALL_18
0x4002959	      0xbf00000000	                              mov edi, 0	       946	clone.c	FUNCTION_53	CALL_18
0x400295e	      0xe8d8d9ffff	                               call sym.	       946	clone.c	FUNCTION_53	CALL_18
0x4002963	          0x4889de	                            mov rsi, rbx	       946	clone.c	FUNCTION_53	CALL_18
0x4002966	          0x4889c7	                            mov rdi, rax	       946	clone.c	FUNCTION_53	CALL_18
0x4002969	      0xb800000000	                              mov eax, 0	       946	clone.c	FUNCTION_53	CALL_18
0x400296e	      0xe800000000	                          call 0x4002973	       946	clone.c	FUNCTION_53	CALL_18
0x4002973	    0x83bdacfeffff	              cmp dword [rbp - 0x154], 2	       948	clone.c	FUNCTION_53	IF_13
0x400297a	            0x751f	                           jne 0x400299b	       948	clone.c	FUNCTION_53	IF_13
0x400297c	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       949	clone.c	FUNCTION_53	CALL_19
0x4002983	        0x4883c008	                              add rax, 8	       949	clone.c	FUNCTION_53	CALL_19
0x4002987	          0x488b00	                    mov rax, qword [rax]	       949	clone.c	FUNCTION_53	CALL_19
0x400298a	          0x4889c7	                            mov rdi, rax	       949	clone.c	FUNCTION_53	CALL_19
0x400298d	      0xe800000000	                          call 0x4002992	       949	clone.c	FUNCTION_53	CALL_19
0x4002992	    0x488985e0feff	            mov qword [rbp - 0x120], rax	       949	clone.c	FUNCTION_53	CALL_19
0x4002999	            0xeb24	                           jmp 0x40029bf	       949	clone.c	FUNCTION_53	CALL_19
0x400299b	    0x8b1500000000	            mov edx, dword [0x040029a1] 	       951	clone.c	FUNCTION_53	CALL_20
0x40029a1	    0x8b8db0feffff	            mov ecx, dword [rbp - 0x150]	       951	clone.c	FUNCTION_53	CALL_20
0x40029a7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       951	clone.c	FUNCTION_53	CALL_20
0x40029ae	            0x89ce	                            mov esi, ecx	       951	clone.c	FUNCTION_53	CALL_20
0x40029b0	          0x4889c7	                            mov rdi, rax	       951	clone.c	FUNCTION_53	CALL_20
0x40029b3	      0xe882deffff	                 call sym.guess_dir_name	       951	clone.c	FUNCTION_53	CALL_20
0x40029b8	    0x488985e0feff	            mov qword [rbp - 0x120], rax	       951	clone.c	FUNCTION_53	CALL_20
0x40029bf	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       952	clone.c	FUNCTION_53	CALL_21
0x40029c6	          0x4889c7	                            mov rdi, rax	       952	clone.c	FUNCTION_53	CALL_21
0x40029c9	      0xe861e2ffff	         call sym.strip_trailing_slashes	       952	clone.c	FUNCTION_53	CALL_21
0x40029ce	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       954	clone.c	FUNCTION_53	CALL_22
0x40029d5	          0x4889c7	                            mov rdi, rax	       954	clone.c	FUNCTION_53	CALL_22
0x40029d8	      0xe822fcffff	                     call sym.dir_exists	       954	clone.c	FUNCTION_53	CALL_22
0x40029dd	    0x8985c0feffff	            mov dword [rbp - 0x140], eax	       954	clone.c	FUNCTION_53	CALL_22
0x40029e3	    0x83bdc0feffff	              cmp dword [rbp - 0x140], 0	       955	clone.c	FUNCTION_53	IF_14	CALL_23
0x40029ea	            0x7437	                            je 0x4002a23	       955	clone.c	FUNCTION_53	IF_14	CALL_23
0x40029ec	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       955	clone.c	FUNCTION_53	IF_14	CALL_23
0x40029f3	          0x4889c7	                            mov rdi, rax	       955	clone.c	FUNCTION_53	IF_14	CALL_23
0x40029f6	      0xe800000000	                          call 0x40029fb	       955	clone.c	FUNCTION_53	IF_14	CALL_23
0x40029fb	            0x85c0	                           test eax, eax	       955	clone.c	FUNCTION_53	IF_14	CALL_23
0x40029fd	            0x7524	                           jne 0x4002a23	       955	clone.c	FUNCTION_53	IF_14	CALL_23
0x40029ff	      0xbf00000000	                              mov edi, 0	       956	clone.c	FUNCTION_53	IF_14	CALL_25
0x4002a04	      0xe832d9ffff	                               call sym.	       956	clone.c	FUNCTION_53	IF_14	CALL_25
0x4002a09	          0x4889c2	                            mov rdx, rax	       956	clone.c	FUNCTION_53	IF_14	CALL_25
0x4002a0c	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       956	clone.c	FUNCTION_53	IF_14	CALL_25
0x4002a13	          0x4889c6	                            mov rsi, rax	       956	clone.c	FUNCTION_53	IF_14	CALL_25
0x4002a16	          0x4889d7	                            mov rdi, rdx	       956	clone.c	FUNCTION_53	IF_14	CALL_25
0x4002a19	      0xb800000000	                              mov eax, 0	       956	clone.c	FUNCTION_53	IF_14	CALL_25
0x4002a1e	      0xe800000000	                          call 0x4002a23	       956	clone.c	FUNCTION_53	IF_14	CALL_25
0x4002a23	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	       959	clone.c	FUNCTION_53	CALL_26
0x4002a2a	        0x488d45b0	                   lea rax, [rbp - 0x50]	       959	clone.c	FUNCTION_53	CALL_26
0x4002a2e	      0xbe00000000	                              mov esi, 0	       959	clone.c	FUNCTION_53	CALL_26
0x4002a33	          0x4889c7	                            mov rdi, rax	       959	clone.c	FUNCTION_53	CALL_26
0x4002a36	      0xb800000000	                              mov eax, 0	       959	clone.c	FUNCTION_53	CALL_26
0x4002a3b	      0xe800000000	                          call 0x4002a40	       959	clone.c	FUNCTION_53	CALL_26
0x4002a40	    0x8b0500000000	            mov eax, dword [0x04002a46] 	       961	clone.c	FUNCTION_53	IF_15
0x4002a46	            0x85c0	                           test eax, eax	       961	clone.c	FUNCTION_53	IF_15
0x4002a48	            0x740d	                            je 0x4002a57	       961	clone.c	FUNCTION_53	IF_15
0x4002a4a	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       962	clone.c	FUNCTION_53	IF_15
0x4002a55	            0xeb52	                           jmp 0x4002aa9	       962	clone.c	FUNCTION_53	IF_15
0x4002a57	      0xbf00000000	                              mov edi, 0	       964	clone.c	FUNCTION_53	ELSE_4	CALL_27
0x4002a5c	      0xe800000000	                          call 0x4002a61	       964	clone.c	FUNCTION_53	ELSE_4	CALL_27
0x4002a61	    0x488985d0feff	            mov qword [rbp - 0x130], rax	       964	clone.c	FUNCTION_53	ELSE_4	CALL_27
0x4002a68	    0x4883bdd0feff	              cmp qword [rbp - 0x130], 0	       965	clone.c	FUNCTION_53	ELSE_4	IF_16	CALL_28
0x4002a70	            0x7437	                            je 0x4002aa9	       965	clone.c	FUNCTION_53	ELSE_4	IF_16	CALL_28
0x4002a72	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       965	clone.c	FUNCTION_53	ELSE_4	IF_16	CALL_28
0x4002a79	          0x4889c7	                            mov rdi, rax	       965	clone.c	FUNCTION_53	ELSE_4	IF_16	CALL_28
0x4002a7c	      0xe87efbffff	                     call sym.dir_exists	       965	clone.c	FUNCTION_53	ELSE_4	IF_16	CALL_28
0x4002a81	            0x85c0	                           test eax, eax	       965	clone.c	FUNCTION_53	ELSE_4	IF_16	CALL_28
0x4002a83	            0x7424	                            je 0x4002aa9	       965	clone.c	FUNCTION_53	ELSE_4	IF_16	CALL_28
0x4002a85	      0xbf00000000	                              mov edi, 0	       966	clone.c	FUNCTION_53	ELSE_4	CALL_30
0x4002a8a	      0xe8acd8ffff	                               call sym.	       966	clone.c	FUNCTION_53	ELSE_4	CALL_30
0x4002a8f	          0x4889c2	                            mov rdx, rax	       966	clone.c	FUNCTION_53	ELSE_4	CALL_30
0x4002a92	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       966	clone.c	FUNCTION_53	ELSE_4	CALL_30
0x4002a99	          0x4889c6	                            mov rsi, rax	       966	clone.c	FUNCTION_53	ELSE_4	CALL_30
0x4002a9c	          0x4889d7	                            mov rdi, rdx	       966	clone.c	FUNCTION_53	ELSE_4	CALL_30
0x4002a9f	      0xb800000000	                              mov eax, 0	       966	clone.c	FUNCTION_53	ELSE_4	CALL_30
0x4002aa4	      0xe800000000	                          call 0x4002aa9	       966	clone.c	FUNCTION_53	ELSE_4	CALL_30
0x4002aa9	    0x8b0500000000	            mov eax, dword [0x04002aaf] 	       969	clone.c	FUNCTION_53	IF_17
0x4002aaf	            0x85c0	                           test eax, eax	       969	clone.c	FUNCTION_53	IF_17
0x4002ab1	            0x750a	                           jne 0x4002abd	       969	clone.c	FUNCTION_53	IF_17
0x4002ab3	    0x4883bdd0feff	              cmp qword [rbp - 0x130], 0	       969	clone.c	FUNCTION_53	IF_17
0x4002abb	            0x7418	                            je 0x4002ad5	       969	clone.c	FUNCTION_53	IF_17
0x4002abd	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       970	clone.c	FUNCTION_53	CALL_31
0x4002ac4	          0x4889c7	                            mov rdi, rax	       970	clone.c	FUNCTION_53	CALL_31
0x4002ac7	      0xe800000000	                          call 0x4002acc	       970	clone.c	FUNCTION_53	CALL_31
0x4002acc	    0x488985d8feff	            mov qword [rbp - 0x128], rax	       970	clone.c	FUNCTION_53	CALL_31
0x4002ad3	            0xeb2e	                           jmp 0x4002b03	       970	clone.c	FUNCTION_53	CALL_31
0x4002ad5	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       972	clone.c	FUNCTION_53	ELSE_5
0x4002adc	    0x488985d0feff	            mov qword [rbp - 0x130], rax	       972	clone.c	FUNCTION_53	ELSE_5
0x4002ae3	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       973	clone.c	FUNCTION_53	ELSE_5	CALL_32
0x4002aea	          0x4889c6	                            mov rsi, rax	       973	clone.c	FUNCTION_53	ELSE_5	CALL_32
0x4002aed	      0xbf00000000	                              mov edi, 0	       973	clone.c	FUNCTION_53	ELSE_5	CALL_32
0x4002af2	      0xb800000000	                              mov eax, 0	       973	clone.c	FUNCTION_53	ELSE_5	CALL_32
0x4002af7	      0xe800000000	                          call 0x4002afc	       973	clone.c	FUNCTION_53	ELSE_5	CALL_32
0x4002afc	    0x488985d8feff	            mov qword [rbp - 0x128], rax	       973	clone.c	FUNCTION_53	ELSE_5	CALL_32
0x4002b03	      0xbf00000000	                              mov edi, 0	       976	clone.c	FUNCTION_53
0x4002b08	      0xe800000000	                          call 0x4002b0d	       976	clone.c	FUNCTION_53
0x4002b0d	      0xbf00000000	                              mov edi, 0	       977	clone.c	FUNCTION_53	CALL_33
0x4002b12	      0xe800000000	                          call 0x4002b17	       977	clone.c	FUNCTION_53	CALL_33
0x4002b17	    0x8b0500000000	            mov eax, dword [0x04002b1d] 	       979	clone.c	FUNCTION_53	IF_18
0x4002b1d	            0x85c0	                           test eax, eax	       979	clone.c	FUNCTION_53	IF_18
0x4002b1f	     0xf85aa000000	                           jne 0x4002bcf	       979	clone.c	FUNCTION_53	IF_18
0x4002b25	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       980	clone.c	FUNCTION_53	IF_18	IF_19	CALL_34
0x4002b2c	          0x4889c7	                            mov rdi, rax	       980	clone.c	FUNCTION_53	IF_18	IF_19	CALL_34
0x4002b2f	      0xe800000000	                          call 0x4002b34	       980	clone.c	FUNCTION_53	IF_18	IF_19	CALL_34
0x4002b34	            0x85c0	                           test eax, eax	       980	clone.c	FUNCTION_53	IF_18	IF_19	CALL_34
0x4002b36	            0x7924	                           jns 0x4002b5c	       980	clone.c	FUNCTION_53	IF_18	IF_19	CALL_34
0x4002b38	      0xbf00000000	                              mov edi, 0	       981	clone.c	FUNCTION_53	IF_18	IF_19	CALL_36
0x4002b3d	      0xe8f9d7ffff	                               call sym.	       981	clone.c	FUNCTION_53	IF_18	IF_19	CALL_36
0x4002b42	          0x4889c2	                            mov rdx, rax	       981	clone.c	FUNCTION_53	IF_18	IF_19	CALL_36
0x4002b45	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       981	clone.c	FUNCTION_53	IF_18	IF_19	CALL_36
0x4002b4c	          0x4889c6	                            mov rsi, rax	       981	clone.c	FUNCTION_53	IF_18	IF_19	CALL_36
0x4002b4f	          0x4889d7	                            mov rdi, rdx	       981	clone.c	FUNCTION_53	IF_18	IF_19	CALL_36
0x4002b52	      0xb800000000	                              mov eax, 0	       981	clone.c	FUNCTION_53	IF_18	IF_19	CALL_36
0x4002b57	      0xe800000000	                          call 0x4002b5c	       981	clone.c	FUNCTION_53	IF_18	IF_19	CALL_36
0x4002b5c	    0x83bdc0feffff	              cmp dword [rbp - 0x140], 0	       983	clone.c	FUNCTION_53	IF_18	IF_20
0x4002b63	            0x7411	                            je 0x4002b76	       983	clone.c	FUNCTION_53	IF_18	IF_20
0x4002b65	    0x8b0500000000	            mov eax, dword [0x04002b6b] 	       984	clone.c	FUNCTION_53	IF_18	IF_20
0x4002b6b	          0x83c804	                               or eax, 4	       984	clone.c	FUNCTION_53	IF_18	IF_20
0x4002b6e	    0x890500000000	            mov dword [0x04002b74], eax 	       984	clone.c	FUNCTION_53	IF_18	IF_20
0x4002b74	            0xeb3c	                           jmp 0x4002bb2	       984	clone.c	FUNCTION_53	IF_18	IF_20
0x4002b76	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       985	clone.c	FUNCTION_53	IF_18	ELSE_6	IF_21
0x4002b7d	      0xbeff010000	                          mov esi, 0x1ff	       985	clone.c	FUNCTION_53	IF_18	ELSE_6	IF_21
0x4002b82	          0x4889c7	                            mov rdi, rax	       985	clone.c	FUNCTION_53	IF_18	ELSE_6	IF_21
0x4002b85	      0xe800000000	                          call 0x4002b8a	       985	clone.c	FUNCTION_53	IF_18	ELSE_6	IF_21
0x4002b8a	            0x85c0	                           test eax, eax	       985	clone.c	FUNCTION_53	IF_18	ELSE_6	IF_21
0x4002b8c	            0x7424	                            je 0x4002bb2	       985	clone.c	FUNCTION_53	IF_18	ELSE_6	IF_21
0x4002b8e	      0xbf00000000	                              mov edi, 0	       986	clone.c	FUNCTION_53	IF_18	ELSE_6	IF_21	CALL_38
0x4002b93	      0xe8a3d7ffff	                               call sym.	       986	clone.c	FUNCTION_53	IF_18	ELSE_6	IF_21	CALL_38
0x4002b98	          0x4889c2	                            mov rdx, rax	       986	clone.c	FUNCTION_53	IF_18	ELSE_6	IF_21	CALL_38
0x4002b9b	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       986	clone.c	FUNCTION_53	IF_18	ELSE_6	IF_21	CALL_38
0x4002ba2	          0x4889c6	                            mov rsi, rax	       986	clone.c	FUNCTION_53	IF_18	ELSE_6	IF_21	CALL_38
0x4002ba5	          0x4889d7	                            mov rdi, rdx	       986	clone.c	FUNCTION_53	IF_18	ELSE_6	IF_21	CALL_38
0x4002ba8	      0xb800000000	                              mov eax, 0	       986	clone.c	FUNCTION_53	IF_18	ELSE_6	IF_21	CALL_38
0x4002bad	      0xe800000000	                          call 0x4002bb2	       986	clone.c	FUNCTION_53	IF_18	ELSE_6	IF_21	CALL_38
0x4002bb2	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       988	clone.c	FUNCTION_53	IF_18
0x4002bb9	    0x488905000000	            mov qword [0x04002bc0], rax 	       988	clone.c	FUNCTION_53	IF_18
0x4002bc0	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       989	clone.c	FUNCTION_53	IF_18	CALL_39
0x4002bc7	          0x4889c7	                            mov rdi, rax	       989	clone.c	FUNCTION_53	IF_18	CALL_39
0x4002bca	      0xe800000000	                          call 0x4002bcf	       989	clone.c	FUNCTION_53	IF_18	CALL_39
0x4002bcf	    0x488b05000000	            mov rax, qword [0x04002bd6] 	       992	clone.c	FUNCTION_53	IF_22
0x4002bd6	          0x4885c0	                           test rax, rax	       992	clone.c	FUNCTION_53	IF_22
0x4002bd9	            0x7432	                            je 0x4002c0d	       992	clone.c	FUNCTION_53	IF_22
0x4002bdb	    0x488b05000000	            mov rax, qword [0x04002be2] 	       993	clone.c	FUNCTION_53	IF_22	IF_23	CALL_40
0x4002be2	          0x4889c7	                            mov rdi, rax	       993	clone.c	FUNCTION_53	IF_22	IF_23	CALL_40
0x4002be5	      0xe815faffff	                     call sym.dir_exists	       993	clone.c	FUNCTION_53	IF_22	IF_23	CALL_40
0x4002bea	            0x85c0	                           test eax, eax	       993	clone.c	FUNCTION_53	IF_22	IF_23	CALL_40
0x4002bec	            0x740f	                            je 0x4002bfd	       993	clone.c	FUNCTION_53	IF_22	IF_23	CALL_40
0x4002bee	    0x8b0500000000	            mov eax, dword [0x04002bf4] 	       994	clone.c	FUNCTION_53	IF_22	IF_23
0x4002bf4	          0x83c804	                               or eax, 4	       994	clone.c	FUNCTION_53	IF_22	IF_23
0x4002bf7	    0x890500000000	            mov dword [0x04002bfd], eax 	       994	clone.c	FUNCTION_53	IF_22	IF_23
0x4002bfd	    0x488b05000000	            mov rax, qword [0x04002c04] 	       995	clone.c	FUNCTION_53	IF_22
0x4002c04	    0x488905000000	            mov qword [0x04002c0b], rax 	       995	clone.c	FUNCTION_53	IF_22
0x4002c0b	            0xeb26	                           jmp 0x4002c33	       995	clone.c	FUNCTION_53	IF_22
0x4002c0d	    0x83bdc0feffff	              cmp dword [rbp - 0x140], 0	       997	clone.c	FUNCTION_53	ELSE_7	IF_24
0x4002c14	            0x740f	                            je 0x4002c25	       997	clone.c	FUNCTION_53	ELSE_7	IF_24
0x4002c16	    0x8b0500000000	            mov eax, dword [0x04002c1c] 	       998	clone.c	FUNCTION_53	ELSE_7	IF_24
0x4002c1c	          0x83c804	                               or eax, 4	       998	clone.c	FUNCTION_53	ELSE_7	IF_24
0x4002c1f	    0x890500000000	            mov dword [0x04002c25], eax 	       998	clone.c	FUNCTION_53	ELSE_7	IF_24
0x4002c25	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       999	clone.c	FUNCTION_53	ELSE_7
0x4002c2c	    0x488905000000	            mov qword [0x04002c33], rax 	       999	clone.c	FUNCTION_53	ELSE_7
0x4002c33	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1001	clone.c	FUNCTION_53	IF_25	CALL_41
0x4002c3a	          0x4889c7	                            mov rdi, rax	      1001	clone.c	FUNCTION_53	IF_25	CALL_41
0x4002c3d	      0xe800000000	                          call 0x4002c42	      1001	clone.c	FUNCTION_53	IF_25	CALL_41
0x4002c42	            0x85c0	                           test eax, eax	      1001	clone.c	FUNCTION_53	IF_25	CALL_41
0x4002c44	            0x7924	                           jns 0x4002c6a	      1001	clone.c	FUNCTION_53	IF_25	CALL_41
0x4002c46	      0xbf00000000	                              mov edi, 0	      1002	clone.c	FUNCTION_53	CALL_43
0x4002c4b	      0xe8ebd6ffff	                               call sym.	      1002	clone.c	FUNCTION_53	CALL_43
0x4002c50	          0x4889c2	                            mov rdx, rax	      1002	clone.c	FUNCTION_53	CALL_43
0x4002c53	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1002	clone.c	FUNCTION_53	CALL_43
0x4002c5a	          0x4889c6	                            mov rsi, rax	      1002	clone.c	FUNCTION_53	CALL_43
0x4002c5d	          0x4889d7	                            mov rdi, rdx	      1002	clone.c	FUNCTION_53	CALL_43
0x4002c60	      0xb800000000	                              mov eax, 0	      1002	clone.c	FUNCTION_53	CALL_43
0x4002c65	      0xe800000000	                          call 0x4002c6a	      1002	clone.c	FUNCTION_53	CALL_43
0x4002c6a	    0x8b0500000000	            mov eax, dword [0x04002c70] 	      1004	clone.c	FUNCTION_53	IF_26
0x4002c70	            0x85c0	                           test eax, eax	      1004	clone.c	FUNCTION_53	IF_26
0x4002c72	            0x7862	                            js 0x4002cd6	      1004	clone.c	FUNCTION_53	IF_26
0x4002c74	    0x8b0500000000	            mov eax, dword [0x04002c7a] 	      1005	clone.c	FUNCTION_53	IF_26	IF_27
0x4002c7a	            0x85c0	                           test eax, eax	      1005	clone.c	FUNCTION_53	IF_26	IF_27
0x4002c7c	            0x742d	                            je 0x4002cab	      1005	clone.c	FUNCTION_53	IF_26	IF_27
0x4002c7e	      0xbf00000000	                              mov edi, 0	      1006	clone.c	FUNCTION_53	IF_26	CALL_45
0x4002c83	      0xe8b3d6ffff	                               call sym.	      1006	clone.c	FUNCTION_53	IF_26	CALL_45
0x4002c88	          0x4889c1	                            mov rcx, rax	      1006	clone.c	FUNCTION_53	IF_26	CALL_45
0x4002c8b	    0x488b05000000	            mov rax, qword [0x04002c92] 	      1006	clone.c	FUNCTION_53	IF_26	CALL_45
0x4002c92	    0x488b95e0feff	            mov rdx, qword [rbp - 0x120]	      1006	clone.c	FUNCTION_53	IF_26	CALL_45
0x4002c99	          0x4889ce	                            mov rsi, rcx	      1006	clone.c	FUNCTION_53	IF_26	CALL_45
0x4002c9c	          0x4889c7	                            mov rdi, rax	      1006	clone.c	FUNCTION_53	IF_26	CALL_45
0x4002c9f	      0xb800000000	                              mov eax, 0	      1006	clone.c	FUNCTION_53	IF_26	CALL_45
0x4002ca4	      0xe800000000	                          call 0x4002ca9	      1006	clone.c	FUNCTION_53	IF_26	CALL_45
0x4002ca9	            0xeb2b	                           jmp 0x4002cd6	      1006	clone.c	FUNCTION_53	IF_26	CALL_45
0x4002cab	      0xbf00000000	                              mov edi, 0	      1008	clone.c	FUNCTION_53	IF_26	CALL_47
0x4002cb0	      0xe886d6ffff	                               call sym.	      1008	clone.c	FUNCTION_53	IF_26	CALL_47
0x4002cb5	          0x4889c1	                            mov rcx, rax	      1008	clone.c	FUNCTION_53	IF_26	CALL_47
0x4002cb8	    0x488b05000000	            mov rax, qword [0x04002cbf] 	      1008	clone.c	FUNCTION_53	IF_26	CALL_47
0x4002cbf	    0x488b95e0feff	            mov rdx, qword [rbp - 0x120]	      1008	clone.c	FUNCTION_53	IF_26	CALL_47
0x4002cc6	          0x4889ce	                            mov rsi, rcx	      1008	clone.c	FUNCTION_53	IF_26	CALL_47
0x4002cc9	          0x4889c7	                            mov rdi, rax	      1008	clone.c	FUNCTION_53	IF_26	CALL_47
0x4002ccc	      0xb800000000	                              mov eax, 0	      1008	clone.c	FUNCTION_53	IF_26	CALL_47
0x4002cd1	      0xe800000000	                          call 0x4002cd6	      1008	clone.c	FUNCTION_53	IF_26	CALL_47
0x4002cd6	    0x8b0500000000	            mov eax, dword [0x04002cdc] 	      1011	clone.c	FUNCTION_53	IF_28
0x4002cdc	            0x85c0	                           test eax, eax	      1011	clone.c	FUNCTION_53	IF_28
0x4002cde	     0xf842d010000	                            je 0x4002e11	      1011	clone.c	FUNCTION_53	IF_28
0x4002ce4	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1013	clone.c	FUNCTION_53	IF_28
0x4002cec	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1013	clone.c	FUNCTION_53	IF_28
0x4002cf4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1013	clone.c	FUNCTION_53	IF_28
0x4002cfc	      0xbf00000000	                              mov edi, 0	      1016	clone.c	FUNCTION_53	IF_28	CALL_48
0x4002d01	      0xe800000000	                          call 0x4002d06	      1016	clone.c	FUNCTION_53	IF_28	CALL_48
0x4002d06	      0xbe00000000	                              mov esi, 0	      1017	clone.c	FUNCTION_53	IF_28	CALL_49
0x4002d0b	      0xbf00000000	                              mov edi, 0	      1017	clone.c	FUNCTION_53	IF_28	CALL_49
0x4002d10	      0xe800000000	                          call 0x4002d15	      1017	clone.c	FUNCTION_53	IF_28	CALL_49
0x4002d15	    0x488b05000000	            mov rax, qword [0x04002d1c] 	      1023	clone.c	FUNCTION_53	IF_28	FUNCTION_1
0x4002d1c	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      1023	clone.c	FUNCTION_53	IF_28	FUNCTION_1
0x4002d23	            0xeb46	                           jmp 0x4002d6b	      1023	clone.c	FUNCTION_53	IF_28	FUNCTION_1
0x4002d25	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1024	clone.c	FUNCTION_53	IF_28	FUNCTION_1	CALL_1
0x4002d2c	          0x488b10	                    mov rdx, qword [rax]	      1024	clone.c	FUNCTION_53	IF_28	FUNCTION_1	CALL_1
0x4002d2f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1024	clone.c	FUNCTION_53	IF_28	FUNCTION_1	CALL_1
0x4002d33	      0xbe00000000	                              mov esi, 0	      1024	clone.c	FUNCTION_53	IF_28	FUNCTION_1	CALL_1
0x4002d38	          0x4889c7	                            mov rdi, rax	      1024	clone.c	FUNCTION_53	IF_28	FUNCTION_1	CALL_1
0x4002d3b	      0xb800000000	                              mov eax, 0	      1024	clone.c	FUNCTION_53	IF_28	FUNCTION_1	CALL_1
0x4002d40	      0xe800000000	                          call 0x4002d45	      1024	clone.c	FUNCTION_53	IF_28	FUNCTION_1	CALL_1
0x4002d45	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1027	clone.c	FUNCTION_53	IF_28	FUNCTION_1	CALL_3
0x4002d49	      0xbe00000000	                              mov esi, 0	      1027	clone.c	FUNCTION_53	IF_28	FUNCTION_1	CALL_3
0x4002d4e	          0x4889c7	                            mov rdi, rax	      1027	clone.c	FUNCTION_53	IF_28	FUNCTION_1	CALL_3
0x4002d51	      0xe800000000	                          call 0x4002d56	      1027	clone.c	FUNCTION_53	IF_28	FUNCTION_1	CALL_3
0x4002d56	          0x4889c6	                            mov rsi, rax	      1026	clone.c	FUNCTION_53	IF_28	FUNCTION_1	CALL_2
0x4002d59	      0xbf00000000	                              mov edi, 0	      1026	clone.c	FUNCTION_53	IF_28	FUNCTION_1	CALL_2
0x4002d5e	      0xe800000000	                          call 0x4002d63	      1026	clone.c	FUNCTION_53	IF_28	FUNCTION_1	CALL_2
0x4002d63	    0x48838518ffff	            add qword [rbp - 0xe8], 0x10	      1023	clone.c	FUNCTION_53	IF_28	FUNCTION_1
0x4002d6b	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      1023	clone.c	FUNCTION_53	IF_28	FUNCTION_1
0x4002d73	            0x741f	                            je 0x4002d94	      1023	clone.c	FUNCTION_53	IF_28	FUNCTION_1
0x4002d75	    0x488b05000000	            mov rax, qword [0x04002d7c] 	      1023	clone.c	FUNCTION_53	IF_28	FUNCTION_1
0x4002d7c	    0x8b1500000000	            mov edx, dword [0x04002d82] 	      1023	clone.c	FUNCTION_53	IF_28	FUNCTION_1
0x4002d82	            0x89d2	                            mov edx, edx	      1023	clone.c	FUNCTION_53	IF_28	FUNCTION_1
0x4002d84	        0x48c1e204	                              shl rdx, 4	      1023	clone.c	FUNCTION_53	IF_28	FUNCTION_1
0x4002d88	          0x4801d0	                            add rax, rdx	      1023	clone.c	FUNCTION_53	IF_28	FUNCTION_1
0x4002d8b	    0x483b8518ffff	             cmp rax, qword [rbp - 0xe8]	      1023	clone.c	FUNCTION_53	IF_28	FUNCTION_1
0x4002d92	            0x7791	                            ja 0x4002d25	      1023	clone.c	FUNCTION_53	IF_28	FUNCTION_1
0x4002d94	    0x8b0500000000	            mov eax, dword [0x04002d9a] 	      1030	clone.c	FUNCTION_53	IF_28	IF_29
0x4002d9a	            0x85c0	                           test eax, eax	      1030	clone.c	FUNCTION_53	IF_28	IF_29
0x4002d9c	            0x7421	                            je 0x4002dbf	      1030	clone.c	FUNCTION_53	IF_28	IF_29
0x4002d9e	    0x8b0500000000	            mov eax, dword [0x04002da4] 	      1031	clone.c	FUNCTION_53	IF_28	IF_29
0x4002da4	            0x85c0	                           test eax, eax	      1030	clone.c	FUNCTION_53	IF_28	IF_29
0x4002da6	            0x7417	                            je 0x4002dbf	      1030	clone.c	FUNCTION_53	IF_28	IF_29
0x4002da8	      0xbf00000000	                              mov edi, 0	      1032	clone.c	FUNCTION_53	IF_28	IF_29	CALL_51
0x4002dad	      0xe889d5ffff	                               call sym.	      1032	clone.c	FUNCTION_53	IF_28	IF_29	CALL_51
0x4002db2	          0x4889c7	                            mov rdi, rax	      1032	clone.c	FUNCTION_53	IF_28	IF_29	CALL_51
0x4002db5	      0xb800000000	                              mov eax, 0	      1032	clone.c	FUNCTION_53	IF_28	IF_29	CALL_51
0x4002dba	      0xe800000000	                          call 0x4002dbf	      1032	clone.c	FUNCTION_53	IF_28	IF_29	CALL_51
0x4002dbf	    0x8b0500000000	            mov eax, dword [0x04002dc5] 	      1034	clone.c	FUNCTION_53	IF_28	ELSE_9	IF_30
0x4002dc5	            0x85c0	                           test eax, eax	      1034	clone.c	FUNCTION_53	IF_28	ELSE_9	IF_30
0x4002dc7	            0x7420	                            je 0x4002de9	      1034	clone.c	FUNCTION_53	IF_28	ELSE_9	IF_30
0x4002dc9	      0xbe00000000	                              mov esi, 0	      1035	clone.c	FUNCTION_53	IF_28	ELSE_9	IF_30	CALL_52
0x4002dce	      0xbf00000000	                              mov edi, 0	      1035	clone.c	FUNCTION_53	IF_28	ELSE_9	IF_30	CALL_52
0x4002dd3	      0xe800000000	                          call 0x4002dd8	      1035	clone.c	FUNCTION_53	IF_28	ELSE_9	IF_30	CALL_52
0x4002dd8	      0xbe00000000	                              mov esi, 0	      1037	clone.c	FUNCTION_53	IF_28	ELSE_9	IF_30	CALL_53
0x4002ddd	      0xbf00000000	                              mov edi, 0	      1037	clone.c	FUNCTION_53	IF_28	ELSE_9	IF_30	CALL_53
0x4002de2	      0xe800000000	                          call 0x4002de7	      1037	clone.c	FUNCTION_53	IF_28	ELSE_9	IF_30	CALL_53
0x4002de7	            0xeb28	                           jmp 0x4002e11	      1037	clone.c	FUNCTION_53	IF_28	ELSE_9	IF_30	CALL_53
0x4002de9	    0x8b0500000000	            mov eax, dword [0x04002def] 	      1039	clone.c	FUNCTION_53	IF_28	ELSE_10	IF_31
0x4002def	            0x85c0	                           test eax, eax	      1039	clone.c	FUNCTION_53	IF_28	ELSE_10	IF_31
0x4002df1	            0x741e	                            je 0x4002e11	      1039	clone.c	FUNCTION_53	IF_28	ELSE_10	IF_31
0x4002df3	      0xbe00000000	                              mov esi, 0	      1040	clone.c	FUNCTION_53	IF_28	ELSE_10	IF_31	CALL_54
0x4002df8	      0xbf00000000	                              mov edi, 0	      1040	clone.c	FUNCTION_53	IF_28	ELSE_10	IF_31	CALL_54
0x4002dfd	      0xe800000000	                          call 0x4002e02	      1040	clone.c	FUNCTION_53	IF_28	ELSE_10	IF_31	CALL_54
0x4002e02	      0xbe00000000	                              mov esi, 0	      1042	clone.c	FUNCTION_53	IF_28	ELSE_10	IF_31	CALL_55
0x4002e07	      0xbf00000000	                              mov edi, 0	      1042	clone.c	FUNCTION_53	IF_28	ELSE_10	IF_31	CALL_55
0x4002e0c	      0xe800000000	                          call 0x4002e11	      1042	clone.c	FUNCTION_53	IF_28	ELSE_10	IF_31	CALL_55
0x4002e11	    0x488b15000000	            mov rdx, qword [0x04002e18] 	      1047	clone.c	FUNCTION_53	CALL_56
0x4002e18	    0x488b35000000	            mov rsi, qword [0x04002e1f] 	      1047	clone.c	FUNCTION_53	CALL_56
0x4002e1f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1047	clone.c	FUNCTION_53	CALL_56
0x4002e26	      0xb901000000	                              mov ecx, 1	      1047	clone.c	FUNCTION_53	CALL_56
0x4002e2b	          0x4889c7	                            mov rdi, rax	      1047	clone.c	FUNCTION_53	CALL_56
0x4002e2e	      0xe800000000	                          call 0x4002e33	      1047	clone.c	FUNCTION_53	CALL_56
0x4002e33	    0x488b05000000	            mov rax, qword [0x04002e3a] 	      1049	clone.c	FUNCTION_53	IF_32
0x4002e3a	          0x4885c0	                           test rax, rax	      1049	clone.c	FUNCTION_53	IF_32
0x4002e3d	            0x740e	                            je 0x4002e4d	      1049	clone.c	FUNCTION_53	IF_32
0x4002e3f	    0x488b05000000	            mov rax, qword [0x04002e46] 	      1050	clone.c	FUNCTION_53	IF_32
0x4002e46	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      1050	clone.c	FUNCTION_53	IF_32
0x4002e4d	      0xbf00000000	                              mov edi, 0	      1052	clone.c	FUNCTION_53	CALL_57
0x4002e52	      0xe822f4ffff	                   call sym.write_config	      1052	clone.c	FUNCTION_53	CALL_57
0x4002e57	      0xbe00000000	                              mov esi, 0	      1054	clone.c	FUNCTION_53	CALL_58
0x4002e5c	      0xbf00000000	                              mov edi, 0	      1054	clone.c	FUNCTION_53	CALL_58
0x4002e61	      0xe800000000	                          call 0x4002e66	      1054	clone.c	FUNCTION_53	CALL_58
0x4002e66	    0x8b0500000000	            mov eax, dword [0x04002e6c] 	      1056	clone.c	FUNCTION_53	IF_33
0x4002e6c	            0x85c0	                           test eax, eax	      1056	clone.c	FUNCTION_53	IF_33
0x4002e6e	            0x743c	                            je 0x4002eac	      1056	clone.c	FUNCTION_53	IF_33
0x4002e70	    0x8b0500000000	            mov eax, dword [0x04002e76] 	      1057	clone.c	FUNCTION_53	IF_33	IF_34
0x4002e76	            0x85c0	                           test eax, eax	      1057	clone.c	FUNCTION_53	IF_33	IF_34
0x4002e78	            0x740b	                            je 0x4002e85	      1057	clone.c	FUNCTION_53	IF_33	IF_34
0x4002e7a	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      1058	clone.c	FUNCTION_53	IF_33	IF_34
0x4002e85	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      1059	clone.c	FUNCTION_53	IF_33	CALL_59
0x4002e8c	        0x488d4590	                   lea rax, [rbp - 0x70]	      1059	clone.c	FUNCTION_53	IF_33	CALL_59
0x4002e90	          0x4889d6	                            mov rsi, rdx	      1059	clone.c	FUNCTION_53	IF_33	CALL_59
0x4002e93	          0x4889c7	                            mov rdi, rax	      1059	clone.c	FUNCTION_53	IF_33	CALL_59
0x4002e96	      0xe86bd4ffff	                  call sym.strbuf_addstr	      1059	clone.c	FUNCTION_53	IF_33	CALL_59
0x4002e9b	      0xbe00000000	                              mov esi, 0	      1061	clone.c	FUNCTION_53	IF_33	CALL_60
0x4002ea0	      0xbf00000000	                              mov edi, 0	      1061	clone.c	FUNCTION_53	IF_33	CALL_60
0x4002ea5	      0xe800000000	                          call 0x4002eaa	      1061	clone.c	FUNCTION_53	IF_33	CALL_60
0x4002eaa	            0xeb1d	                           jmp 0x4002ec9	      1061	clone.c	FUNCTION_53	IF_33	CALL_60
0x4002eac	    0x488b15000000	            mov rdx, qword [0x04002eb3] 	      1063	clone.c	FUNCTION_53	ELSE_11	CALL_61
0x4002eb3	        0x488d4590	                   lea rax, [rbp - 0x70]	      1063	clone.c	FUNCTION_53	ELSE_11	CALL_61
0x4002eb7	      0xbe00000000	                              mov esi, 0	      1063	clone.c	FUNCTION_53	ELSE_11	CALL_61
0x4002ebc	          0x4889c7	                            mov rdi, rax	      1063	clone.c	FUNCTION_53	ELSE_11	CALL_61
0x4002ebf	      0xb800000000	                              mov eax, 0	      1063	clone.c	FUNCTION_53	ELSE_11	CALL_61
0x4002ec4	      0xe800000000	                          call 0x4002ec9	      1063	clone.c	FUNCTION_53	ELSE_11	CALL_61
0x4002ec9	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1066	clone.c	FUNCTION_53	CALL_62
0x4002ecd	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      1066	clone.c	FUNCTION_53	CALL_62
0x4002ed4	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      1066	clone.c	FUNCTION_53	CALL_62
0x4002edb	      0xbe00000000	                              mov esi, 0	      1066	clone.c	FUNCTION_53	CALL_62
0x4002ee0	          0x4889c7	                            mov rdi, rax	      1066	clone.c	FUNCTION_53	CALL_62
0x4002ee3	      0xb800000000	                              mov eax, 0	      1066	clone.c	FUNCTION_53	CALL_62
0x4002ee8	      0xe800000000	                          call 0x4002eed	      1066	clone.c	FUNCTION_53	CALL_62
0x4002eed	    0x488b15000000	            mov rdx, qword [0x04002ef4] 	      1067	clone.c	FUNCTION_53	CALL_63
0x4002ef4	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1067	clone.c	FUNCTION_53	CALL_63
0x4002efb	      0xbe00000000	                              mov esi, 0	      1067	clone.c	FUNCTION_53	CALL_63
0x4002f00	          0x4889c7	                            mov rdi, rax	      1067	clone.c	FUNCTION_53	CALL_63
0x4002f03	      0xb800000000	                              mov eax, 0	      1067	clone.c	FUNCTION_53	CALL_63
0x4002f08	      0xe800000000	                          call 0x4002f0d	      1067	clone.c	FUNCTION_53	CALL_63
0x4002f0d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1068	clone.c	FUNCTION_53	CALL_64
0x4002f14	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      1068	clone.c	FUNCTION_53	CALL_64
0x4002f1b	          0x4889d6	                            mov rsi, rdx	      1068	clone.c	FUNCTION_53	CALL_64
0x4002f1e	          0x4889c7	                            mov rdi, rax	      1068	clone.c	FUNCTION_53	CALL_64
0x4002f21	      0xe800000000	                          call 0x4002f26	      1068	clone.c	FUNCTION_53	CALL_64
0x4002f26	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1069	clone.c	FUNCTION_53
0x4002f2d	      0xbe00000000	                              mov esi, 0	      1069	clone.c	FUNCTION_53
0x4002f32	          0x4889c7	                            mov rdi, rax	      1069	clone.c	FUNCTION_53
0x4002f35	      0xe8c4d2ffff	                  call sym.strbuf_setlen	      1069	clone.c	FUNCTION_53
0x4002f3a	    0x8b0500000000	            mov eax, dword [0x04002f40] 	      1071	clone.c	FUNCTION_53	IF_35
0x4002f40	            0x85c0	                           test eax, eax	      1071	clone.c	FUNCTION_53	IF_35
0x4002f42	            0x7448	                            je 0x4002f8c	      1071	clone.c	FUNCTION_53	IF_35
0x4002f44	    0x488b15000000	            mov rdx, qword [0x04002f4b] 	      1072	clone.c	FUNCTION_53	IF_35	CALL_65
0x4002f4b	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1072	clone.c	FUNCTION_53	IF_35	CALL_65
0x4002f52	      0xbe00000000	                              mov esi, 0	      1072	clone.c	FUNCTION_53	IF_35	CALL_65
0x4002f57	          0x4889c7	                            mov rdi, rax	      1072	clone.c	FUNCTION_53	IF_35	CALL_65
0x4002f5a	      0xb800000000	                              mov eax, 0	      1072	clone.c	FUNCTION_53	IF_35	CALL_65
0x4002f5f	      0xe800000000	                          call 0x4002f64	      1072	clone.c	FUNCTION_53	IF_35	CALL_65
0x4002f64	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1073	clone.c	FUNCTION_53	IF_35	CALL_66
0x4002f6b	      0xbe00000000	                              mov esi, 0	      1073	clone.c	FUNCTION_53	IF_35	CALL_66
0x4002f70	          0x4889c7	                            mov rdi, rax	      1073	clone.c	FUNCTION_53	IF_35	CALL_66
0x4002f73	      0xe800000000	                          call 0x4002f78	      1073	clone.c	FUNCTION_53	IF_35	CALL_66
0x4002f78	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1074	clone.c	FUNCTION_53	IF_35
0x4002f7f	      0xbe00000000	                              mov esi, 0	      1074	clone.c	FUNCTION_53	IF_35
0x4002f84	          0x4889c7	                            mov rdi, rax	      1074	clone.c	FUNCTION_53	IF_35
0x4002f87	      0xe872d2ffff	                  call sym.strbuf_setlen	      1074	clone.c	FUNCTION_53	IF_35
0x4002f8c	    0x8b0500000000	            mov eax, dword [0x04002f92] 	      1077	clone.c	FUNCTION_53	IF_36
0x4002f92	            0x85c0	                           test eax, eax	      1077	clone.c	FUNCTION_53	IF_36
0x4002f94	            0x750a	                           jne 0x4002fa0	      1077	clone.c	FUNCTION_53	IF_36
0x4002f96	    0x8b0500000000	            mov eax, dword [0x04002f9c] 	      1077	clone.c	FUNCTION_53	IF_36
0x4002f9c	            0x85c0	                           test eax, eax	      1077	clone.c	FUNCTION_53	IF_36
0x4002f9e	            0x7405	                            je 0x4002fa5	      1077	clone.c	FUNCTION_53	IF_36
0x4002fa0	      0xe823deffff	                call sym.setup_reference	      1078	clone.c	FUNCTION_53	CALL_67
0x4002fa5	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1080	clone.c	FUNCTION_53
0x4002fa9	        0x488945d0	             mov qword [rbp - 0x30], rax	      1080	clone.c	FUNCTION_53
0x4002fad	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1081	clone.c	FUNCTION_53	CALL_68
0x4002fb1	          0x4889c6	                            mov rsi, rax	      1081	clone.c	FUNCTION_53	CALL_68
0x4002fb4	      0xbf01000000	                              mov edi, 1	      1081	clone.c	FUNCTION_53	CALL_68
0x4002fb9	      0xe800000000	                          call 0x4002fbe	      1081	clone.c	FUNCTION_53	CALL_68
0x4002fbe	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1081	clone.c	FUNCTION_53	CALL_68
0x4002fc5	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      1083	clone.c	FUNCTION_53
0x4002fcc	      0xbe00000000	                              mov esi, 0	      1083	clone.c	FUNCTION_53
0x4002fd1	          0x4889c7	                            mov rdi, rax	      1083	clone.c	FUNCTION_53
0x4002fd4	      0xe825d2ffff	                  call sym.strbuf_setlen	      1083	clone.c	FUNCTION_53
0x4002fd9	    0x488b05000000	            mov rax, qword [0x04002fe0] 	      1085	clone.c	FUNCTION_53	CALL_69
0x4002fe0	          0x4889c7	                            mov rdi, rax	      1085	clone.c	FUNCTION_53	CALL_69
0x4002fe3	      0xe800000000	                          call 0x4002fe8	      1085	clone.c	FUNCTION_53	CALL_69
0x4002fe8	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      1085	clone.c	FUNCTION_53	CALL_69
0x4002fef	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1086	clone.c	FUNCTION_53	CALL_70
0x4002ff6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1086	clone.c	FUNCTION_53	CALL_70
0x4002ffa	          0x488b10	                    mov rdx, qword [rax]	      1086	clone.c	FUNCTION_53	CALL_70
0x4002ffd	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1086	clone.c	FUNCTION_53	CALL_70
0x4003004	          0x4889d6	                            mov rsi, rdx	      1086	clone.c	FUNCTION_53	CALL_70
0x4003007	          0x4889c7	                            mov rdi, rax	      1086	clone.c	FUNCTION_53	CALL_70
0x400300a	      0xe800000000	                          call 0x400300f	      1086	clone.c	FUNCTION_53	CALL_70
0x400300f	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      1086	clone.c	FUNCTION_53	CALL_70
0x4003016	    0x8b1500000000	            mov edx, dword [0x0400301c] 	      1087	clone.c	FUNCTION_53	CALL_71
0x400301c	    0x8b0d00000000	            mov ecx, dword [0x04003022] 	      1087	clone.c	FUNCTION_53	CALL_71
0x4003022	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1087	clone.c	FUNCTION_53	CALL_71
0x4003029	            0x89ce	                            mov esi, ecx	      1087	clone.c	FUNCTION_53	CALL_71
0x400302b	          0x4889c7	                            mov rdi, rax	      1087	clone.c	FUNCTION_53	CALL_71
0x400302e	      0xe800000000	                          call 0x4003033	      1087	clone.c	FUNCTION_53	CALL_71
0x4003033	    0x8b1500000000	            mov edx, dword [0x04003039] 	      1088	clone.c	FUNCTION_53
0x4003039	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1088	clone.c	FUNCTION_53
0x4003040	          0x895058	             mov dword [rax + 0x58], edx	      1088	clone.c	FUNCTION_53
0x4003043	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1090	clone.c	FUNCTION_53	CALL_72
0x400304a	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1090	clone.c	FUNCTION_53	CALL_72
0x400304e	          0x488b00	                    mov rax, qword [rax]	      1090	clone.c	FUNCTION_53	CALL_72
0x4003051	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	      1090	clone.c	FUNCTION_53	CALL_72
0x4003058	          0x4889d6	                            mov rsi, rdx	      1090	clone.c	FUNCTION_53	CALL_72
0x400305b	          0x4889c7	                            mov rdi, rax	      1090	clone.c	FUNCTION_53	CALL_72
0x400305e	      0xe832d7ffff	                  call sym.get_repo_path	      1090	clone.c	FUNCTION_53	CALL_72
0x4003063	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      1090	clone.c	FUNCTION_53	CALL_72
0x400306a	    0x8b0500000000	            mov eax, dword [0x04003070] 	      1091	clone.c	FUNCTION_53
0x4003070	            0x85c0	                           test eax, eax	      1091	clone.c	FUNCTION_53
0x4003072	            0x741b	                            je 0x400308f	      1091	clone.c	FUNCTION_53
0x4003074	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      1091	clone.c	FUNCTION_53
0x400307c	            0x7411	                            je 0x400308f	      1091	clone.c	FUNCTION_53
0x400307e	    0x8b85b0feffff	            mov eax, dword [rbp - 0x150]	      1091	clone.c	FUNCTION_53
0x4003084	            0x85c0	                           test eax, eax	      1091	clone.c	FUNCTION_53
0x4003086	            0x7507	                           jne 0x400308f	      1091	clone.c	FUNCTION_53
0x4003088	      0xb801000000	                              mov eax, 1	      1091	clone.c	FUNCTION_53
0x400308d	            0xeb05	                           jmp 0x4003094	      1091	clone.c	FUNCTION_53
0x400308f	      0xb800000000	                              mov eax, 0	      1091	clone.c	FUNCTION_53
0x4003094	    0x8985b4feffff	            mov dword [rbp - 0x14c], eax	      1091	clone.c	FUNCTION_53
0x400309a	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	      1092	clone.c	FUNCTION_53	IF_37
0x40030a1	     0xf84dd000000	                            je 0x4003184	      1092	clone.c	FUNCTION_53	IF_37
0x40030a7	    0x488b05000000	            mov rax, qword [0x040030ae] 	      1093	clone.c	FUNCTION_53	IF_37	IF_38
0x40030ae	          0x4885c0	                           test rax, rax	      1093	clone.c	FUNCTION_53	IF_37	IF_38
0x40030b1	            0x7417	                            je 0x40030ca	      1093	clone.c	FUNCTION_53	IF_37	IF_38
0x40030b3	      0xbf00000000	                              mov edi, 0	      1094	clone.c	FUNCTION_53	IF_37	CALL_74
0x40030b8	      0xe87ed2ffff	                               call sym.	      1094	clone.c	FUNCTION_53	IF_37	CALL_74
0x40030bd	          0x4889c7	                            mov rdi, rax	      1094	clone.c	FUNCTION_53	IF_37	CALL_74
0x40030c0	      0xb800000000	                              mov eax, 0	      1094	clone.c	FUNCTION_53	IF_37	CALL_74
0x40030c5	      0xe800000000	                          call 0x40030ca	      1094	clone.c	FUNCTION_53	IF_37	CALL_74
0x40030ca	    0x488b05000000	            mov rax, qword [0x040030d1] 	      1095	clone.c	FUNCTION_53	IF_37	IF_39
0x40030d1	          0x4885c0	                           test rax, rax	      1095	clone.c	FUNCTION_53	IF_37	IF_39
0x40030d4	            0x7417	                            je 0x40030ed	      1095	clone.c	FUNCTION_53	IF_37	IF_39
0x40030d6	      0xbf00000000	                              mov edi, 0	      1096	clone.c	FUNCTION_53	IF_37	CALL_76
0x40030db	      0xe85bd2ffff	                               call sym.	      1096	clone.c	FUNCTION_53	IF_37	CALL_76
0x40030e0	          0x4889c7	                            mov rdi, rax	      1096	clone.c	FUNCTION_53	IF_37	CALL_76
0x40030e3	      0xb800000000	                              mov eax, 0	      1096	clone.c	FUNCTION_53	IF_37	CALL_76
0x40030e8	      0xe800000000	                          call 0x40030ed	      1096	clone.c	FUNCTION_53	IF_37	CALL_76
0x40030ed	    0x8b0500000000	            mov eax, dword [0x040030f3] 	      1097	clone.c	FUNCTION_53	IF_37	IF_40
0x40030f3	            0x85c0	                           test eax, eax	      1097	clone.c	FUNCTION_53	IF_37	IF_40
0x40030f5	            0x7417	                            je 0x400310e	      1097	clone.c	FUNCTION_53	IF_37	IF_40
0x40030f7	      0xbf00000000	                              mov edi, 0	      1098	clone.c	FUNCTION_53	IF_37	CALL_78
0x40030fc	      0xe83ad2ffff	                               call sym.	      1098	clone.c	FUNCTION_53	IF_37	CALL_78
0x4003101	          0x4889c7	                            mov rdi, rax	      1098	clone.c	FUNCTION_53	IF_37	CALL_78
0x4003104	      0xb800000000	                              mov eax, 0	      1098	clone.c	FUNCTION_53	IF_37	CALL_78
0x4003109	      0xe800000000	                          call 0x400310e	      1098	clone.c	FUNCTION_53	IF_37	CALL_78
0x400310e	    0x8b0500000000	            mov eax, dword [0x04003114] 	      1099	clone.c	FUNCTION_53	IF_37	IF_41
0x4003114	            0x85c0	                           test eax, eax	      1099	clone.c	FUNCTION_53	IF_37	IF_41
0x4003116	            0x7417	                            je 0x400312f	      1099	clone.c	FUNCTION_53	IF_37	IF_41
0x4003118	      0xbf00000000	                              mov edi, 0	      1100	clone.c	FUNCTION_53	IF_37	CALL_80
0x400311d	      0xe819d2ffff	                               call sym.	      1100	clone.c	FUNCTION_53	IF_37	CALL_80
0x4003122	          0x4889c7	                            mov rdi, rax	      1100	clone.c	FUNCTION_53	IF_37	CALL_80
0x4003125	      0xb800000000	                              mov eax, 0	      1100	clone.c	FUNCTION_53	IF_37	CALL_80
0x400312a	      0xe800000000	                          call 0x400312f	      1100	clone.c	FUNCTION_53	IF_37	CALL_80
0x400312f	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1101	clone.c	FUNCTION_53	IF_37	IF_42	CALL_82
0x4003136	          0x4889c6	                            mov rsi, rax	      1101	clone.c	FUNCTION_53	IF_37	IF_42	CALL_82
0x4003139	      0xbf00000000	                              mov edi, 0	      1101	clone.c	FUNCTION_53	IF_37	IF_42	CALL_82
0x400313e	      0xb800000000	                              mov eax, 0	      1101	clone.c	FUNCTION_53	IF_37	IF_42	CALL_82
0x4003143	      0xe800000000	                          call 0x4003148	      1101	clone.c	FUNCTION_53	IF_37	IF_42	CALL_82
0x4003148	      0xbe00000000	                              mov esi, 0	      1101	clone.c	FUNCTION_53	IF_37	IF_42	CALL_82
0x400314d	          0x4889c7	                            mov rdi, rax	      1101	clone.c	FUNCTION_53	IF_37	IF_42	CALL_82
0x4003150	      0xe800000000	                          call 0x4003155	      1101	clone.c	FUNCTION_53	IF_37	IF_42	CALL_82
0x4003155	            0x85c0	                           test eax, eax	      1101	clone.c	FUNCTION_53	IF_37	IF_42	CALL_82
0x4003157	            0x752b	                           jne 0x4003184	      1101	clone.c	FUNCTION_53	IF_37	IF_42	CALL_82
0x4003159	    0x8b0500000000	            mov eax, dword [0x0400315f] 	      1102	clone.c	FUNCTION_53	IF_37	IF_42	IF_43
0x400315f	            0x85c0	                           test eax, eax	      1102	clone.c	FUNCTION_53	IF_37	IF_42	IF_43
0x4003161	            0x7e17	                           jle 0x400317a	      1102	clone.c	FUNCTION_53	IF_37	IF_42	IF_43
0x4003163	      0xbf00000000	                              mov edi, 0	      1103	clone.c	FUNCTION_53	IF_37	IF_42	CALL_84
0x4003168	      0xe8ced1ffff	                               call sym.	      1103	clone.c	FUNCTION_53	IF_37	IF_42	CALL_84
0x400316d	          0x4889c7	                            mov rdi, rax	      1103	clone.c	FUNCTION_53	IF_37	IF_42	CALL_84
0x4003170	      0xb800000000	                              mov eax, 0	      1103	clone.c	FUNCTION_53	IF_37	IF_42	CALL_84
0x4003175	      0xe800000000	                          call 0x400317a	      1103	clone.c	FUNCTION_53	IF_37	IF_42	CALL_84
0x400317a	    0xc785b4feffff	              mov dword [rbp - 0x14c], 0	      1104	clone.c	FUNCTION_53	IF_37	IF_42
0x4003184	    0x8b0500000000	            mov eax, dword [0x0400318a] 	      1107	clone.c	FUNCTION_53	IF_44
0x400318a	            0x85c0	                           test eax, eax	      1107	clone.c	FUNCTION_53	IF_44
0x400318c	            0x7e20	                           jle 0x40031ae	      1107	clone.c	FUNCTION_53	IF_44
0x400318e	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	      1107	clone.c	FUNCTION_53	IF_44
0x4003195	            0x7517	                           jne 0x40031ae	      1107	clone.c	FUNCTION_53	IF_44
0x4003197	      0xbf00000000	                              mov edi, 0	      1108	clone.c	FUNCTION_53	CALL_86
0x400319c	      0xe89ad1ffff	                               call sym.	      1108	clone.c	FUNCTION_53	CALL_86
0x40031a1	          0x4889c7	                            mov rdi, rax	      1108	clone.c	FUNCTION_53	CALL_86
0x40031a4	      0xb800000000	                              mov eax, 0	      1108	clone.c	FUNCTION_53	CALL_86
0x40031a9	      0xe800000000	                          call 0x40031ae	      1108	clone.c	FUNCTION_53	CALL_86
0x40031ae	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1109	clone.c	FUNCTION_53
0x40031b5	         0xfb65028	           movzx edx, byte [rax + 0x28] 	      1109	clone.c	FUNCTION_53
0x40031b9	          0x83ca04	                               or edx, 4	      1109	clone.c	FUNCTION_53
0x40031bc	          0x885028	               mov byte [rax + 0x28], dl	      1109	clone.c	FUNCTION_53
0x40031bf	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1111	clone.c	FUNCTION_53	CALL_87
0x40031c6	      0xba00000000	                              mov edx, 0	      1111	clone.c	FUNCTION_53	CALL_87
0x40031cb	      0xbe00000000	                              mov esi, 0	      1111	clone.c	FUNCTION_53	CALL_87
0x40031d0	          0x4889c7	                            mov rdi, rax	      1111	clone.c	FUNCTION_53	CALL_87
0x40031d3	      0xe800000000	                          call 0x40031d8	      1111	clone.c	FUNCTION_53	CALL_87
0x40031d8	    0x488b05000000	            mov rax, qword [0x040031df] 	      1113	clone.c	FUNCTION_53	IF_45
0x40031df	          0x4885c0	                           test rax, rax	      1113	clone.c	FUNCTION_53	IF_45
0x40031e2	            0x741b	                            je 0x40031ff	      1113	clone.c	FUNCTION_53	IF_45
0x40031e4	    0x488b15000000	            mov rdx, qword [0x040031eb] 	      1114	clone.c	FUNCTION_53	IF_45	CALL_88
0x40031eb	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1114	clone.c	FUNCTION_53	IF_45	CALL_88
0x40031f2	      0xbe00000000	                              mov esi, 0	      1114	clone.c	FUNCTION_53	IF_45	CALL_88
0x40031f7	          0x4889c7	                            mov rdi, rax	      1114	clone.c	FUNCTION_53	IF_45	CALL_88
0x40031fa	      0xe800000000	                          call 0x40031ff	      1114	clone.c	FUNCTION_53	IF_45	CALL_88
0x40031ff	    0x488b05000000	            mov rax, qword [0x04003206] 	      1116	clone.c	FUNCTION_53	IF_46
0x4003206	          0x4885c0	                           test rax, rax	      1116	clone.c	FUNCTION_53	IF_46
0x4003209	            0x741b	                            je 0x4003226	      1116	clone.c	FUNCTION_53	IF_46
0x400320b	    0x488b15000000	            mov rdx, qword [0x04003212] 	      1117	clone.c	FUNCTION_53	IF_46	CALL_89
0x4003212	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1117	clone.c	FUNCTION_53	IF_46	CALL_89
0x4003219	      0xbe00000000	                              mov esi, 0	      1117	clone.c	FUNCTION_53	IF_46	CALL_89
0x400321e	          0x4889c7	                            mov rdi, rax	      1117	clone.c	FUNCTION_53	IF_46	CALL_89
0x4003221	      0xe800000000	                          call 0x4003226	      1117	clone.c	FUNCTION_53	IF_46	CALL_89
0x4003226	    0x8b0500000000	            mov eax, dword [0x0400322c] 	      1119	clone.c	FUNCTION_53	IF_47
0x400322c	            0x85c0	                           test eax, eax	      1119	clone.c	FUNCTION_53	IF_47
0x400322e	            0x7419	                            je 0x4003249	      1119	clone.c	FUNCTION_53	IF_47
0x4003230	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1120	clone.c	FUNCTION_53	IF_47	CALL_90
0x4003237	      0xba00000000	                              mov edx, 0	      1120	clone.c	FUNCTION_53	IF_47	CALL_90
0x400323c	      0xbe00000000	                              mov esi, 0	      1120	clone.c	FUNCTION_53	IF_47	CALL_90
0x4003241	          0x4889c7	                            mov rdi, rax	      1120	clone.c	FUNCTION_53	IF_47	CALL_90
0x4003244	      0xe800000000	                          call 0x4003249	      1120	clone.c	FUNCTION_53	IF_47	CALL_90
0x4003249	    0x8b0500000000	            mov eax, dword [0x0400324f] 	      1122	clone.c	FUNCTION_53	IF_48
0x400324f	            0x85c0	                           test eax, eax	      1122	clone.c	FUNCTION_53	IF_48
0x4003251	            0x7419	                            je 0x400326c	      1122	clone.c	FUNCTION_53	IF_48
0x4003253	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1123	clone.c	FUNCTION_53	CALL_91
0x400325a	      0xba00000000	                              mov edx, 0	      1123	clone.c	FUNCTION_53	CALL_91
0x400325f	      0xbe00000000	                              mov esi, 0	      1123	clone.c	FUNCTION_53	CALL_91
0x4003264	          0x4889c7	                            mov rdi, rax	      1123	clone.c	FUNCTION_53	CALL_91
0x4003267	      0xe800000000	                          call 0x400326c	      1123	clone.c	FUNCTION_53	CALL_91
0x400326c	    0x488b05000000	            mov rax, qword [0x04003273] 	      1125	clone.c	FUNCTION_53	IF_49
0x4003273	          0x4885c0	                           test rax, rax	      1125	clone.c	FUNCTION_53	IF_49
0x4003276	            0x741b	                            je 0x4003293	      1125	clone.c	FUNCTION_53	IF_49
0x4003278	    0x488b15000000	            mov rdx, qword [0x0400327f] 	      1126	clone.c	FUNCTION_53	IF_49	CALL_92
0x400327f	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1126	clone.c	FUNCTION_53	IF_49	CALL_92
0x4003286	      0xbe00000000	                              mov esi, 0	      1126	clone.c	FUNCTION_53	IF_49	CALL_92
0x400328b	          0x4889c7	                            mov rdi, rax	      1126	clone.c	FUNCTION_53	IF_49	CALL_92
0x400328e	      0xe800000000	                          call 0x4003293	      1126	clone.c	FUNCTION_53	IF_49	CALL_92
0x4003293	    0x8b0500000000	            mov eax, dword [0x04003299] 	      1129	clone.c	FUNCTION_53	IF_50
0x4003299	            0x85c0	                           test eax, eax	      1129	clone.c	FUNCTION_53	IF_50
0x400329b	            0x7434	                            je 0x40032d1	      1129	clone.c	FUNCTION_53	IF_50
0x400329d	    0x488b15000000	            mov rdx, qword [0x040032a4] 	      1131	clone.c	FUNCTION_53	IF_50
0x40032a4	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1130	clone.c	FUNCTION_53	IF_50	CALL_93
0x40032ab	      0xbe00000000	                              mov esi, 0	      1130	clone.c	FUNCTION_53	IF_50	CALL_93
0x40032b0	          0x4889c7	                            mov rdi, rax	      1130	clone.c	FUNCTION_53	IF_50	CALL_93
0x40032b3	      0xe800000000	                          call 0x40032b8	      1130	clone.c	FUNCTION_53	IF_50	CALL_93
0x40032b8	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1132	clone.c	FUNCTION_53	IF_50	CALL_94
0x40032bf	      0xba00000000	                              mov edx, 0	      1132	clone.c	FUNCTION_53	IF_50	CALL_94
0x40032c4	      0xbe00000000	                              mov esi, 0	      1132	clone.c	FUNCTION_53	IF_50	CALL_94
0x40032c9	          0x4889c7	                            mov rdi, rax	      1132	clone.c	FUNCTION_53	IF_50	CALL_94
0x40032cc	      0xe800000000	                          call 0x40032d1	      1132	clone.c	FUNCTION_53	IF_50	CALL_94
0x40032d1	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1135	clone.c	FUNCTION_53	IF_51
0x40032d8	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1135	clone.c	FUNCTION_53	IF_51
0x40032dc	          0x4885c0	                           test rax, rax	      1135	clone.c	FUNCTION_53	IF_51
0x40032df	            0x7427	                            je 0x4003308	      1135	clone.c	FUNCTION_53	IF_51
0x40032e1	    0x8b0500000000	            mov eax, dword [0x040032e7] 	      1135	clone.c	FUNCTION_53	IF_51
0x40032e7	            0x85c0	                           test eax, eax	      1135	clone.c	FUNCTION_53	IF_51
0x40032e9	            0x751d	                           jne 0x4003308	      1135	clone.c	FUNCTION_53	IF_51
0x40032eb	    0x8b0500000000	            mov eax, dword [0x040032f1] 	      1135	clone.c	FUNCTION_53	IF_51
0x40032f1	            0x85c0	                           test eax, eax	      1135	clone.c	FUNCTION_53	IF_51
0x40032f3	            0x7513	                           jne 0x4003308	      1135	clone.c	FUNCTION_53	IF_51
0x40032f5	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1136	clone.c	FUNCTION_53	IF_51
0x40032fc	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1136	clone.c	FUNCTION_53	IF_51
0x4003300	           0xfb610	                   movzx edx, byte [rax]	      1136	clone.c	FUNCTION_53	IF_51
0x4003303	          0x83ca08	                               or edx, 8	      1136	clone.c	FUNCTION_53	IF_51
0x4003306	            0x8810	                      mov byte [rax], dl	      1136	clone.c	FUNCTION_53	IF_51
0x4003308	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1138	clone.c	FUNCTION_53	CALL_95
0x400330f	      0xbe00000000	                              mov esi, 0	      1138	clone.c	FUNCTION_53	CALL_95
0x4003314	          0x4889c7	                            mov rdi, rax	      1138	clone.c	FUNCTION_53	CALL_95
0x4003317	      0xe800000000	                          call 0x400331c	      1138	clone.c	FUNCTION_53	CALL_95
0x400331c	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1138	clone.c	FUNCTION_53	CALL_95
0x4003323	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      1140	clone.c	FUNCTION_53	IF_52
0x400332b	     0xf8451010000	                            je 0x4003482	      1140	clone.c	FUNCTION_53	IF_52
0x4003331	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1141	clone.c	FUNCTION_53	IF_52	CALL_96
0x4003338	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1141	clone.c	FUNCTION_53	IF_52	CALL_96
0x400333f	          0x4889d6	                            mov rsi, rdx	      1141	clone.c	FUNCTION_53	IF_52	CALL_96
0x4003342	          0x4889c7	                            mov rdi, rax	      1141	clone.c	FUNCTION_53	IF_52	CALL_96
0x4003345	      0xe801e4ffff	               call sym.wanted_peer_refs	      1141	clone.c	FUNCTION_53	IF_52	CALL_96
0x400334a	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      1141	clone.c	FUNCTION_53	IF_52	CALL_96
0x4003351	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1152	clone.c	FUNCTION_53	IF_52	FOR_1
0x4003358	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      1152	clone.c	FUNCTION_53	IF_52	FOR_1
0x400335f	            0xeb34	                           jmp 0x4003395	      1152	clone.c	FUNCTION_53	IF_52	FOR_1
0x4003361	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1153	clone.c	FUNCTION_53	IF_52	FOR_1	IF_53	CALL_97
0x4003368	        0x4883c008	                              add rax, 8	      1153	clone.c	FUNCTION_53	IF_52	FOR_1	IF_53	CALL_97
0x400336c	          0x4889c7	                            mov rdi, rax	      1153	clone.c	FUNCTION_53	IF_52	FOR_1	IF_53	CALL_97
0x400336f	      0xe81dd0ffff	                    call sym.is_null_oid	      1153	clone.c	FUNCTION_53	IF_52	FOR_1	IF_53	CALL_97
0x4003374	            0x85c0	                           test eax, eax	      1153	clone.c	FUNCTION_53	IF_52	FOR_1	IF_53	CALL_97
0x4003376	            0x740c	                            je 0x4003384	      1153	clone.c	FUNCTION_53	IF_52	FOR_1	IF_53	CALL_97
0x4003378	    0xc785b8feffff	              mov dword [rbp - 0x148], 0	      1154	clone.c	FUNCTION_53	IF_52	FOR_1	IF_53
0x4003382	            0xeb1b	                           jmp 0x400339f	      1155	clone.c	FUNCTION_53	IF_52	FOR_1	IF_53
0x4003384	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1152	clone.c	FUNCTION_53	IF_52	FOR_1
0x400338b	          0x488b00	                    mov rax, qword [rax]	      1152	clone.c	FUNCTION_53	IF_52	FOR_1
0x400338e	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      1152	clone.c	FUNCTION_53	IF_52	FOR_1
0x4003395	    0x4883bd08ffff	               cmp qword [rbp - 0xf8], 0	      1152	clone.c	FUNCTION_53	IF_52	FOR_1
0x400339d	            0x75c2	                           jne 0x4003361	      1152	clone.c	FUNCTION_53	IF_52	FOR_1
0x400339f	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	      1158	clone.c	FUNCTION_53	IF_52	IF_54
0x40033a6	            0x7522	                           jne 0x40033ca	      1158	clone.c	FUNCTION_53	IF_52	IF_54
0x40033a8	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 0	      1158	clone.c	FUNCTION_53	IF_52	IF_54
0x40033af	            0x7519	                           jne 0x40033ca	      1158	clone.c	FUNCTION_53	IF_52	IF_54
0x40033b1	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	      1159	clone.c	FUNCTION_53	IF_52	CALL_98
0x40033b8	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1159	clone.c	FUNCTION_53	IF_52	CALL_98
0x40033bf	          0x4889d6	                            mov rsi, rdx	      1159	clone.c	FUNCTION_53	IF_52	CALL_98
0x40033c2	          0x4889c7	                            mov rdi, rax	      1159	clone.c	FUNCTION_53	IF_52	CALL_98
0x40033c5	      0xe800000000	                          call 0x40033ca	      1159	clone.c	FUNCTION_53	IF_52	CALL_98
0x40033ca	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1161	clone.c	FUNCTION_53	IF_52	CALL_99
0x40033d1	      0xbe00000000	                              mov esi, 0	      1161	clone.c	FUNCTION_53	IF_52	CALL_99
0x40033d6	          0x4889c7	                            mov rdi, rax	      1161	clone.c	FUNCTION_53	IF_52	CALL_99
0x40033d9	      0xe800000000	                          call 0x40033de	      1161	clone.c	FUNCTION_53	IF_52	CALL_99
0x40033de	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      1161	clone.c	FUNCTION_53	IF_52	CALL_99
0x40033e5	    0x488b8d00ffff	            mov rcx, qword [rbp - 0x100]	      1162	clone.c	FUNCTION_53	IF_52
0x40033ec	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      1162	clone.c	FUNCTION_53	IF_52
0x40033f3	      0xba00000000	                              mov edx, 0	      1162	clone.c	FUNCTION_53	IF_52
0x40033f8	          0x4889ce	                            mov rsi, rcx	      1162	clone.c	FUNCTION_53	IF_52
0x40033fb	          0x4889c7	                            mov rdi, rax	      1162	clone.c	FUNCTION_53	IF_52
0x40033fe	      0xe800000000	                          call 0x4003403	      1162	clone.c	FUNCTION_53	IF_52
0x4003403	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      1162	clone.c	FUNCTION_53	IF_52
0x400340a	    0x488b05000000	            mov rax, qword [0x04003411] 	      1165	clone.c	FUNCTION_53	IF_52	IF_55
0x4003411	          0x4885c0	                           test rax, rax	      1165	clone.c	FUNCTION_53	IF_52	IF_55
0x4003414	            0x7459	                            je 0x400346f	      1165	clone.c	FUNCTION_53	IF_52	IF_55
0x4003416	    0x488b15000000	            mov rdx, qword [0x0400341d] 	      1167	clone.c	FUNCTION_53	IF_52	IF_55	CALL_101
0x400341d	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1166	clone.c	FUNCTION_53	IF_52	IF_55
0x4003424	          0x4889d6	                            mov rsi, rdx	      1166	clone.c	FUNCTION_53	IF_52	IF_55
0x4003427	          0x4889c7	                            mov rdi, rax	      1166	clone.c	FUNCTION_53	IF_52	IF_55
0x400342a	      0xe830e2ffff	             call sym.find_remote_branch	      1166	clone.c	FUNCTION_53	IF_52	IF_55
0x400342f	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      1166	clone.c	FUNCTION_53	IF_52	IF_55
0x4003436	    0x4883bdf8feff	              cmp qword [rbp - 0x108], 0	      1169	clone.c	FUNCTION_53	IF_52	IF_55	IF_56
0x400343e	     0xf85ea000000	                           jne 0x400352e	      1169	clone.c	FUNCTION_53	IF_52	IF_55	IF_56
0x4003444	    0x4c8b25000000	            mov r12, qword [0x0400344b] 	      1170	clone.c	FUNCTION_53	IF_52	IF_55	IF_56	CALL_103
0x400344b	    0x488b1d000000	            mov rbx, qword [0x04003452] 	      1170	clone.c	FUNCTION_53	IF_52	IF_55	IF_56	CALL_103
0x4003452	      0xbf00000000	                              mov edi, 0	      1170	clone.c	FUNCTION_53	IF_52	IF_55	IF_56	CALL_103
0x4003457	      0xe8dfceffff	                               call sym.	      1170	clone.c	FUNCTION_53	IF_52	IF_55	IF_56	CALL_103
0x400345c	          0x4c89e2	                            mov rdx, r12	      1170	clone.c	FUNCTION_53	IF_52	IF_55	IF_56	CALL_103
0x400345f	          0x4889de	                            mov rsi, rbx	      1170	clone.c	FUNCTION_53	IF_52	IF_55	IF_56	CALL_103
0x4003462	          0x4889c7	                            mov rdi, rax	      1170	clone.c	FUNCTION_53	IF_52	IF_55	IF_56	CALL_103
0x4003465	      0xb800000000	                              mov eax, 0	      1170	clone.c	FUNCTION_53	IF_52	IF_55	IF_56	CALL_103
0x400346a	      0xe800000000	                          call 0x400346f	      1170	clone.c	FUNCTION_53	IF_52	IF_55	IF_56	CALL_103
0x400346f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      1174	clone.c	FUNCTION_53	IF_52	ELSE_12
0x4003476	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      1174	clone.c	FUNCTION_53	IF_52	ELSE_12
0x400347d	      0xe9ac000000	                           jmp 0x400352e	      1174	clone.c	FUNCTION_53	IF_52	ELSE_12
0x4003482	    0x488b05000000	            mov rax, qword [0x04003489] 	      1177	clone.c	FUNCTION_53	ELSE_13	IF_57
0x4003489	          0x4885c0	                           test rax, rax	      1177	clone.c	FUNCTION_53	ELSE_13	IF_57
0x400348c	            0x742b	                            je 0x40034b9	      1177	clone.c	FUNCTION_53	ELSE_13	IF_57
0x400348e	    0x4c8b25000000	            mov r12, qword [0x04003495] 	      1178	clone.c	FUNCTION_53	ELSE_13	IF_57	CALL_105
0x4003495	    0x488b1d000000	            mov rbx, qword [0x0400349c] 	      1178	clone.c	FUNCTION_53	ELSE_13	IF_57	CALL_105
0x400349c	      0xbf00000000	                              mov edi, 0	      1178	clone.c	FUNCTION_53	ELSE_13	IF_57	CALL_105
0x40034a1	      0xe895ceffff	                               call sym.	      1178	clone.c	FUNCTION_53	ELSE_13	IF_57	CALL_105
0x40034a6	          0x4c89e2	                            mov rdx, r12	      1178	clone.c	FUNCTION_53	ELSE_13	IF_57	CALL_105
0x40034a9	          0x4889de	                            mov rsi, rbx	      1178	clone.c	FUNCTION_53	ELSE_13	IF_57	CALL_105
0x40034ac	          0x4889c7	                            mov rdi, rax	      1178	clone.c	FUNCTION_53	ELSE_13	IF_57	CALL_105
0x40034af	      0xb800000000	                              mov eax, 0	      1178	clone.c	FUNCTION_53	ELSE_13	IF_57	CALL_105
0x40034b4	      0xe800000000	                          call 0x40034b9	      1178	clone.c	FUNCTION_53	ELSE_13	IF_57	CALL_105
0x40034b9	      0xbf00000000	                              mov edi, 0	      1181	clone.c	FUNCTION_53	ELSE_13	CALL_107
0x40034be	      0xe878ceffff	                               call sym.	      1181	clone.c	FUNCTION_53	ELSE_13	CALL_107
0x40034c3	          0x4889c7	                            mov rdi, rax	      1181	clone.c	FUNCTION_53	ELSE_13	CALL_107
0x40034c6	      0xb800000000	                              mov eax, 0	      1181	clone.c	FUNCTION_53	ELSE_13	CALL_107
0x40034cb	      0xe800000000	                          call 0x40034d0	      1181	clone.c	FUNCTION_53	ELSE_13	CALL_107
0x40034d0	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	      1182	clone.c	FUNCTION_53	ELSE_13
0x40034db	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	      1183	clone.c	FUNCTION_53	ELSE_13
0x40034e6	    0x48c785f0feff	              mov qword [rbp - 0x110], 0	      1184	clone.c	FUNCTION_53	ELSE_13
0x40034f1	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	      1185	clone.c	FUNCTION_53	ELSE_13
0x40034fc	    0xc70500000000	               mov dword [0x04003506], 1	      1186	clone.c	FUNCTION_53	ELSE_13
0x4003506	    0x8b0500000000	            mov eax, dword [0x0400350c] 	      1187	clone.c	FUNCTION_53	ELSE_13	IF_58
0x400350c	            0x85c0	                           test eax, eax	      1187	clone.c	FUNCTION_53	ELSE_13	IF_58
0x400350e	            0x751e	                           jne 0x400352e	      1187	clone.c	FUNCTION_53	ELSE_13	IF_58
0x4003510	    0x488b05000000	            mov rax, qword [0x04003517] 	      1188	clone.c	FUNCTION_53	ELSE_13	IF_58	CALL_108
0x4003517	      0xb900000000	                              mov ecx, 0	      1188	clone.c	FUNCTION_53	ELSE_13	IF_58	CALL_108
0x400351c	          0x4889c2	                            mov rdx, rax	      1188	clone.c	FUNCTION_53	ELSE_13	IF_58	CALL_108
0x400351f	      0xbe00000000	                              mov esi, 0	      1188	clone.c	FUNCTION_53	ELSE_13	IF_58	CALL_108
0x4003524	      0xbf00000000	                              mov edi, 0	      1188	clone.c	FUNCTION_53	ELSE_13	IF_58	CALL_108
0x4003529	      0xe800000000	                          call 0x400352e	      1188	clone.c	FUNCTION_53	ELSE_13	IF_58	CALL_108
0x400352e	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      1192	clone.c	FUNCTION_53	CALL_109
0x4003532	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      1192	clone.c	FUNCTION_53	CALL_109
0x4003539	    0x488bb5f8feff	            mov rsi, qword [rbp - 0x108]	      1192	clone.c	FUNCTION_53	CALL_109
0x4003540	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1192	clone.c	FUNCTION_53	CALL_109
0x4003547	          0x4889c7	                            mov rdi, rax	      1192	clone.c	FUNCTION_53	CALL_109
0x400354a	      0xe898edffff	           call sym.write_refspec_config	      1192	clone.c	FUNCTION_53	CALL_109
0x400354f	    0x8b0500000000	            mov eax, dword [0x04003555] 	      1195	clone.c	FUNCTION_53	IF_59
0x4003555	            0x85c0	                           test eax, eax	      1195	clone.c	FUNCTION_53	IF_59
0x4003557	            0x740f	                            je 0x4003568	      1195	clone.c	FUNCTION_53	IF_59
0x4003559	      0xbe00000000	                              mov esi, 0	      1196	clone.c	FUNCTION_53	CALL_110
0x400355e	      0xbf00000000	                              mov edi, 0	      1196	clone.c	FUNCTION_53	CALL_110
0x4003563	      0xe800000000	                          call 0x4003568	      1196	clone.c	FUNCTION_53	CALL_110
0x4003568	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	      1198	clone.c	FUNCTION_53	IF_60
0x400356f	            0x741b	                            je 0x400358c	      1198	clone.c	FUNCTION_53	IF_60
0x4003571	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      1199	clone.c	FUNCTION_53	CALL_111
0x4003578	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1199	clone.c	FUNCTION_53	CALL_111
0x400357f	          0x4889d6	                            mov rsi, rdx	      1199	clone.c	FUNCTION_53	CALL_111
0x4003582	          0x4889c7	                            mov rdi, rax	      1199	clone.c	FUNCTION_53	CALL_111
0x4003585	      0xe834deffff	                    call sym.clone_local	      1199	clone.c	FUNCTION_53	CALL_111
0x400358a	            0xeb2c	                           jmp 0x40035b8	      1199	clone.c	FUNCTION_53	CALL_111
0x400358c	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      1200	clone.c	FUNCTION_53	ELSE_14	IF_61
0x4003594	            0x7422	                            je 0x40035b8	      1200	clone.c	FUNCTION_53	ELSE_14	IF_61
0x4003596	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 0	      1200	clone.c	FUNCTION_53	ELSE_14	IF_61
0x400359d	            0x7419	                            je 0x40035b8	      1200	clone.c	FUNCTION_53	ELSE_14	IF_61
0x400359f	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	      1201	clone.c	FUNCTION_53	ELSE_14	IF_61
0x40035a6	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1201	clone.c	FUNCTION_53	ELSE_14	IF_61
0x40035ad	          0x4889d6	                            mov rsi, rdx	      1201	clone.c	FUNCTION_53	ELSE_14	IF_61
0x40035b0	          0x4889c7	                            mov rdi, rax	      1201	clone.c	FUNCTION_53	ELSE_14	IF_61
0x40035b3	      0xe800000000	                          call 0x40035b8	      1201	clone.c	FUNCTION_53	ELSE_14	IF_61
0x40035b8	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	      1203	clone.c	FUNCTION_53	CALL_113
0x40035bf	            0x7512	                           jne 0x40035d3	      1203	clone.c	FUNCTION_53	CALL_113
0x40035c1	    0x8b0500000000	            mov eax, dword [0x040035c7] 	      1205	clone.c	FUNCTION_53
0x40035c7	            0x85c0	                           test eax, eax	      1203	clone.c	FUNCTION_53	CALL_113
0x40035c9	            0x7508	                           jne 0x40035d3	      1203	clone.c	FUNCTION_53	CALL_113
0x40035cb	    0x41b901000000	                              mov r9d, 1	      1203	clone.c	FUNCTION_53	CALL_113
0x40035d1	            0xeb06	                           jmp 0x40035d9	      1203	clone.c	FUNCTION_53	CALL_113
0x40035d3	    0x41b900000000	                              mov r9d, 0	      1203	clone.c	FUNCTION_53	CALL_113
0x40035d9	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      1204	clone.c	FUNCTION_53
0x40035dd	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1204	clone.c	FUNCTION_53
0x40035e1	    0x4c8b8520ffff	              mov r8, qword [rbp - 0xe0]	      1203	clone.c	FUNCTION_53	CALL_113
0x40035e8	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      1203	clone.c	FUNCTION_53	CALL_113
0x40035ef	    0x488bb500ffff	            mov rsi, qword [rbp - 0x100]	      1203	clone.c	FUNCTION_53	CALL_113
0x40035f6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1203	clone.c	FUNCTION_53	CALL_113
0x40035fd	        0x4883ec08	                              sub rsp, 8	      1203	clone.c	FUNCTION_53	CALL_113
0x4003601	            0x4151	                                 push r9	      1203	clone.c	FUNCTION_53	CALL_113
0x4003603	          0x4d89c1	                              mov r9, r8	      1203	clone.c	FUNCTION_53	CALL_113
0x4003606	          0x4989f8	                             mov r8, rdi	      1203	clone.c	FUNCTION_53	CALL_113
0x4003609	          0x4889c7	                            mov rdi, rax	      1203	clone.c	FUNCTION_53	CALL_113
0x400360c	      0xe847e5ffff	             call sym.update_remote_refs	      1203	clone.c	FUNCTION_53	CALL_113
0x4003611	        0x4883c410	                           add rsp, 0x10	      1203	clone.c	FUNCTION_53	CALL_113
0x4003615	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1207	clone.c	FUNCTION_53	CALL_114
0x4003619	    0x488b8de8feff	            mov rcx, qword [rbp - 0x118]	      1207	clone.c	FUNCTION_53	CALL_114
0x4003620	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1207	clone.c	FUNCTION_53	CALL_114
0x4003627	          0x4889ce	                            mov rsi, rcx	      1207	clone.c	FUNCTION_53	CALL_114
0x400362a	          0x4889c7	                            mov rdi, rax	      1207	clone.c	FUNCTION_53	CALL_114
0x400362d	      0xe8d0e6ffff	                    call sym.update_head	      1207	clone.c	FUNCTION_53	CALL_114
0x4003632	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1215	clone.c	FUNCTION_53
0x4003639	         0xfb64048	           movzx eax, byte [rax + 0x48] 	      1215	clone.c	FUNCTION_53
0x400363d	          0xc0e803	                               shr al, 3	      1215	clone.c	FUNCTION_53
0x4003640	          0x83e001	                              and eax, 1	      1215	clone.c	FUNCTION_53
0x4003643	           0xfb6c0	                           movzx eax, al	      1215	clone.c	FUNCTION_53
0x4003646	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	      1215	clone.c	FUNCTION_53
0x400364c	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1217	clone.c	FUNCTION_53	CALL_115
0x4003653	          0x4889c7	                            mov rdi, rax	      1217	clone.c	FUNCTION_53	CALL_115
0x4003656	      0xe800000000	                          call 0x400365b	      1217	clone.c	FUNCTION_53	CALL_115
0x400365b	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1218	clone.c	FUNCTION_53	CALL_116
0x4003662	          0x4889c7	                            mov rdi, rax	      1218	clone.c	FUNCTION_53	CALL_116
0x4003665	      0xe800000000	                          call 0x400366a	      1218	clone.c	FUNCTION_53	CALL_116
0x400366a	    0x8b0500000000	            mov eax, dword [0x04003670] 	      1220	clone.c	FUNCTION_53	IF_62
0x4003670	            0x85c0	                           test eax, eax	      1220	clone.c	FUNCTION_53	IF_62
0x4003672	            0x7418	                            je 0x400368c	      1220	clone.c	FUNCTION_53	IF_62
0x4003674	    0x488b05000000	            mov rax, qword [0x0400367b] 	      1221	clone.c	FUNCTION_53	IF_62	CALL_117
0x400367b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1221	clone.c	FUNCTION_53	IF_62	CALL_117
0x400367f	          0x4889c7	                            mov rdi, rax	      1221	clone.c	FUNCTION_53	IF_62	CALL_117
0x4003682	      0xe800000000	                          call 0x4003687	      1221	clone.c	FUNCTION_53	IF_62	CALL_117
0x4003687	      0xe8d7eeffff	     call sym.dissociate_from_references	      1222	clone.c	FUNCTION_53	IF_62	CALL_118
0x400368c	    0xc70500000000	               mov dword [0x04003696], 1	      1225	clone.c	FUNCTION_53
0x4003696	    0xc70500000000	               mov dword [0x040036a0], 1	      1226	clone.c	FUNCTION_53
0x40036a0	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      1227	clone.c	FUNCTION_53	CALL_119
0x40036a6	            0x89c7	                            mov edi, eax	      1227	clone.c	FUNCTION_53	CALL_119
0x40036a8	      0xe8c7e7ffff	                       call sym.checkout	      1227	clone.c	FUNCTION_53	CALL_119
0x40036ad	    0x8985bcfeffff	            mov dword [rbp - 0x144], eax	      1227	clone.c	FUNCTION_53	CALL_119
0x40036b3	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1229	clone.c	FUNCTION_53	CALL_120
0x40036b7	          0x4889c7	                            mov rdi, rax	      1229	clone.c	FUNCTION_53	CALL_120
0x40036ba	      0xe800000000	                          call 0x40036bf	      1229	clone.c	FUNCTION_53	CALL_120
0x40036bf	        0x488d4590	                   lea rax, [rbp - 0x70]	      1230	clone.c	FUNCTION_53	CALL_121
0x40036c3	          0x4889c7	                            mov rdi, rax	      1230	clone.c	FUNCTION_53	CALL_121
0x40036c6	      0xe800000000	                          call 0x40036cb	      1230	clone.c	FUNCTION_53	CALL_121
0x40036cb	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1231	clone.c	FUNCTION_53	CALL_122
0x40036d2	          0x4889c7	                            mov rdi, rax	      1231	clone.c	FUNCTION_53	CALL_122
0x40036d5	      0xe800000000	                          call 0x40036da	      1231	clone.c	FUNCTION_53	CALL_122
0x40036da	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      1232	clone.c	FUNCTION_53	CALL_123
0x40036e1	          0x4889c7	                            mov rdi, rax	      1232	clone.c	FUNCTION_53	CALL_123
0x40036e4	      0xe800000000	                          call 0x40036e9	      1232	clone.c	FUNCTION_53	CALL_123
0x40036e9	    0xc70500000000	               mov dword [0x040036f3], 2	      1233	clone.c	FUNCTION_53
0x40036f3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1235	clone.c	FUNCTION_53	CALL_124
0x40036fa	          0x4889c7	                            mov rdi, rax	      1235	clone.c	FUNCTION_53	CALL_124
0x40036fd	      0xe800000000	                          call 0x4003702	      1235	clone.c	FUNCTION_53	CALL_124
0x4003702	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      1236	clone.c	FUNCTION_53
0x4003708	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1237	clone.c	FUNCTION_53
0x400370c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1237	clone.c	FUNCTION_53
0x4003715	            0x7405	                            je 0x400371c	      1237	clone.c	FUNCTION_53
0x4003717	      0xe800000000	                          call 0x400371c	      1237	clone.c	FUNCTION_53
0x400371c	        0x488d65f0	                   lea rsp, [rbp - 0x10]	      1237	clone.c	FUNCTION_53
0x4003720	              0x5b	                                 pop rbx	      1237	clone.c	FUNCTION_53
0x4003721	            0x415c	                                 pop r12	      1237	clone.c	FUNCTION_53
0x4003723	              0x5d	                                 pop rbp	      1237	clone.c	FUNCTION_53
0x4003724	              0xc3	                                     ret	      1237	clone.c	FUNCTION_53
strbuf_setlen	functions,0:FOR,0:IF,2:WHILE,0:CALL,2:ELSE,1:SWITCH,0:DO,0	43
0x40001fe	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_56
0x40001ff	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_56
0x4000202	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_56
0x4000206	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_56
0x400020a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_56
0x400020e	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_56	IF_1
0x4000212	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_56	IF_1
0x4000215	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_56	IF_1
0x4000218	            0x740d	                            je 0x4000227	       162	strbuf.h	FUNCTION_56	IF_1
0x400021a	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_56	IF_1
0x400021e	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_56	IF_1
0x4000221	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_56	IF_1
0x4000225	            0xeb05	                           jmp 0x400022c	       162	strbuf.h	FUNCTION_56	IF_1
0x4000227	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_56	IF_1
0x400022c	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_56	IF_1
0x4000230	            0x730f	                           jae 0x4000241	       162	strbuf.h	FUNCTION_56	IF_1
0x4000232	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_56	CALL_1
0x4000237	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_56	CALL_1
0x400023c	      0xe800000000	                          call 0x4000241	       163	strbuf.h	FUNCTION_56	CALL_1
0x4000241	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_56
0x4000245	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_56
0x4000249	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_56
0x400024d	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_56	IF_2
0x4000251	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_56	IF_2
0x4000255	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_56	IF_2
0x400025b	            0x7414	                            je 0x4000271	       165	strbuf.h	FUNCTION_56	IF_2
0x400025d	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_56	IF_2
0x4000261	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_56	IF_2
0x4000265	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_56	IF_2
0x4000269	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_56	IF_2
0x400026c	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_56	IF_2
0x400026f	            0xeb24	                           jmp 0x4000295	       169	strbuf.h	FUNCTION_56
0x4000271	     0xfb605000000	           movzx eax, byte [0x04000278] 	       168	strbuf.h	FUNCTION_56	CALL_2
0x4000278	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_56	CALL_2
0x400027a	            0x7419	                            je 0x4000295	       168	strbuf.h	FUNCTION_56	CALL_2
0x400027c	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_56	CALL_2
0x4000281	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_56	CALL_2
0x4000286	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_56	CALL_2
0x400028b	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_56	CALL_2
0x4000290	      0xe800000000	                          call 0x4000295	       168	strbuf.h	FUNCTION_56	CALL_2
0x4000295	              0x90	                                     nop	       169	strbuf.h	FUNCTION_56
0x4000296	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_56
0x4000297	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_56
write_config	functions,0:FOR,1:IF,1:WHILE,0:CALL,3:ELSE,0:SWITCH,0:DO,0	33
0x4002279	              0x55	                                push rbp	       796	clone.c	FUNCTION_49
0x400227a	          0x4889e5	                            mov rbp, rsp	       796	clone.c	FUNCTION_49
0x400227d	        0x4883ec20	                           sub rsp, 0x20	       796	clone.c	FUNCTION_49
0x4002281	        0x48897de8	             mov qword [rbp - 0x18], rdi	       796	clone.c	FUNCTION_49
0x4002285	    0xc745fc000000	                  mov dword [rbp - 4], 0	       799	clone.c	FUNCTION_49	FOR_1
0x400228c	            0xeb48	                           jmp 0x40022d6	       799	clone.c	FUNCTION_49	FOR_1
0x400228e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       800	clone.c	FUNCTION_49	FOR_1	IF_1	CALL_1
0x4002292	          0x488b00	                    mov rax, qword [rax]	       800	clone.c	FUNCTION_49	FOR_1	IF_1	CALL_1
0x4002295	          0x8b55fc	                mov edx, dword [rbp - 4]	       800	clone.c	FUNCTION_49	FOR_1	IF_1	CALL_1
0x4002298	          0x4863d2	                         movsxd rdx, edx	       800	clone.c	FUNCTION_49	FOR_1	IF_1	CALL_1
0x400229b	        0x48c1e204	                              shl rdx, 4	       800	clone.c	FUNCTION_49	FOR_1	IF_1	CALL_1
0x400229f	          0x4801d0	                            add rax, rdx	       800	clone.c	FUNCTION_49	FOR_1	IF_1	CALL_1
0x40022a2	          0x488b00	                    mov rax, qword [rax]	       800	clone.c	FUNCTION_49	FOR_1	IF_1	CALL_1
0x40022a5	      0xba00000000	                              mov edx, 0	       800	clone.c	FUNCTION_49	FOR_1	IF_1	CALL_1
0x40022aa	      0xbe00000000	                              mov esi, 0	       800	clone.c	FUNCTION_49	FOR_1	IF_1	CALL_1
0x40022af	          0x4889c7	                            mov rdi, rax	       800	clone.c	FUNCTION_49	FOR_1	IF_1	CALL_1
0x40022b2	      0xe800000000	                          call 0x40022b7	       800	clone.c	FUNCTION_49	FOR_1	IF_1	CALL_1
0x40022b7	            0x85c0	                           test eax, eax	       800	clone.c	FUNCTION_49	FOR_1	IF_1	CALL_1
0x40022b9	            0x7917	                           jns 0x40022d2	       800	clone.c	FUNCTION_49	FOR_1	IF_1	CALL_1
0x40022bb	      0xbf00000000	                              mov edi, 0	       802	clone.c	FUNCTION_49	FOR_1	CALL_3
0x40022c0	      0xe876e0ffff	                               call sym.	       802	clone.c	FUNCTION_49	FOR_1	CALL_3
0x40022c5	          0x4889c7	                            mov rdi, rax	       802	clone.c	FUNCTION_49	FOR_1	CALL_3
0x40022c8	      0xb800000000	                              mov eax, 0	       802	clone.c	FUNCTION_49	FOR_1	CALL_3
0x40022cd	      0xe800000000	                          call 0x40022d2	       802	clone.c	FUNCTION_49	FOR_1	CALL_3
0x40022d2	        0x8345fc01	                  add dword [rbp - 4], 1	       799	clone.c	FUNCTION_49	FOR_1
0x40022d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       799	clone.c	FUNCTION_49	FOR_1
0x40022da	          0x8b5008	                mov edx, dword [rax + 8]	       799	clone.c	FUNCTION_49	FOR_1
0x40022dd	          0x8b45fc	                mov eax, dword [rbp - 4]	       799	clone.c	FUNCTION_49	FOR_1
0x40022e0	            0x39c2	                            cmp edx, eax	       799	clone.c	FUNCTION_49	FOR_1
0x40022e2	            0x77aa	                            ja 0x400228e	       799	clone.c	FUNCTION_49	FOR_1
0x40022e4	              0x90	                                     nop	       804	clone.c	FUNCTION_49
0x40022e5	              0xc9	                                   leave	       804	clone.c	FUNCTION_49
0x40022e6	              0xc3	                                     ret	       804	clone.c	FUNCTION_49
skip_prefix	functions,0:FOR,0:IF,1:WHILE,0:CALL,0:ELSE,0:SWITCH,0:DO,1	27
0x4000062	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_72
0x4000063	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_72
0x4000066	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_72
0x400006a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_72
0x400006e	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_72
0x4000072	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_72	DO_1	IF_1
0x4000076	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_72	DO_1	IF_1
0x4000079	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_72	DO_1	IF_1
0x400007b	            0x7512	                           jne 0x400008f	       484	git-compat-util.h	FUNCTION_72	DO_1	IF_1
0x400007d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_72	DO_1	IF_1
0x4000081	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_72	DO_1	IF_1
0x4000085	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_72	DO_1	IF_1
0x4000088	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_72	DO_1	IF_1
0x400008d	            0xeb27	                           jmp 0x40000b6	       486	git-compat-util.h	FUNCTION_72	DO_1	IF_1
0x400008f	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_72	DO_1
0x4000093	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_72	DO_1
0x4000097	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_72	DO_1
0x400009b	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_72	DO_1
0x400009e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_72	DO_1
0x40000a2	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_72	DO_1
0x40000a6	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_72	DO_1
0x40000aa	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_72	DO_1
0x40000ad	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_72	DO_1
0x40000af	            0x74c1	                            je 0x4000072	       488	git-compat-util.h	FUNCTION_72	DO_1
0x40000b1	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_72
0x40000b6	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_72
0x40000b7	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_72
clone_local	functions,0:FOR,0:IF,2:WHILE,0:CALL,13:ELSE,1:SWITCH,0:DO,0	85
0x40013be	              0x55	                                push rbp	       456	clone.c	FUNCTION_37
0x40013bf	          0x4889e5	                            mov rbp, rsp	       456	clone.c	FUNCTION_37
0x40013c2	        0x4883ec50	                           sub rsp, 0x50	       456	clone.c	FUNCTION_37
0x40013c6	        0x48897db8	             mov qword [rbp - 0x48], rdi	       456	clone.c	FUNCTION_37
0x40013ca	        0x488975b0	             mov qword [rbp - 0x50], rsi	       456	clone.c	FUNCTION_37
0x40013ce	    0x64488b042528	                mov rax, qword fs:[0x28]	       456	clone.c	FUNCTION_37
0x40013d7	        0x488945f8	                mov qword [rbp - 8], rax	       456	clone.c	FUNCTION_37
0x40013db	            0x31c0	                            xor eax, eax	       456	clone.c	FUNCTION_37
0x40013dd	    0x8b0500000000	            mov eax, dword [0x040013e3] 	       457	clone.c	FUNCTION_37	IF_1
0x40013e3	            0x85c0	                           test eax, eax	       457	clone.c	FUNCTION_37	IF_1
0x40013e5	            0x7459	                            je 0x4001440	       457	clone.c	FUNCTION_37	IF_1
0x40013e7	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       458	clone.c	FUNCTION_37	IF_1
0x40013ef	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       458	clone.c	FUNCTION_37	IF_1
0x40013f7	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       458	clone.c	FUNCTION_37	IF_1
0x40013ff	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       459	clone.c	FUNCTION_37	IF_1	CALL_1
0x4001403	        0x488d45e0	                   lea rax, [rbp - 0x20]	       459	clone.c	FUNCTION_37	IF_1	CALL_1
0x4001407	          0x4889d6	                            mov rsi, rdx	       459	clone.c	FUNCTION_37	IF_1	CALL_1
0x400140a	          0x4889c7	                            mov rdi, rax	       459	clone.c	FUNCTION_37	IF_1	CALL_1
0x400140d	      0xe800000000	                          call 0x4001412	       459	clone.c	FUNCTION_37	IF_1	CALL_1
0x4001412	        0x488d45e0	                   lea rax, [rbp - 0x20]	       460	clone.c	FUNCTION_37	IF_1	CALL_2
0x4001416	      0xbe00000000	                              mov esi, 0	       460	clone.c	FUNCTION_37	IF_1	CALL_2
0x400141b	          0x4889c7	                            mov rdi, rax	       460	clone.c	FUNCTION_37	IF_1	CALL_2
0x400141e	      0xe8e3eeffff	                  call sym.strbuf_addstr	       460	clone.c	FUNCTION_37	IF_1	CALL_2
0x4001423	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       461	clone.c	FUNCTION_37	IF_1	CALL_3
0x4001427	          0x4889c7	                            mov rdi, rax	       461	clone.c	FUNCTION_37	IF_1	CALL_3
0x400142a	      0xe800000000	                          call 0x400142f	       461	clone.c	FUNCTION_37	IF_1	CALL_3
0x400142f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       462	clone.c	FUNCTION_37	IF_1	CALL_4
0x4001433	          0x4889c7	                            mov rdi, rax	       462	clone.c	FUNCTION_37	IF_1	CALL_4
0x4001436	      0xe800000000	                          call 0x400143b	       462	clone.c	FUNCTION_37	IF_1	CALL_4
0x400143b	      0xe9aa000000	                           jmp 0x40014ea	       462	clone.c	FUNCTION_37	IF_1	CALL_4
0x4001440	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       464	clone.c	FUNCTION_37	ELSE_1
0x4001448	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       464	clone.c	FUNCTION_37	ELSE_1
0x4001450	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       464	clone.c	FUNCTION_37	ELSE_1
0x4001458	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       465	clone.c	FUNCTION_37	ELSE_1
0x4001460	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       465	clone.c	FUNCTION_37	ELSE_1
0x4001468	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       465	clone.c	FUNCTION_37	ELSE_1
0x4001470	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       466	clone.c	FUNCTION_37	ELSE_1	CALL_5
0x4001474	        0x488d45c0	                   lea rax, [rbp - 0x40]	       466	clone.c	FUNCTION_37	ELSE_1	CALL_5
0x4001478	          0x4889d6	                            mov rsi, rdx	       466	clone.c	FUNCTION_37	ELSE_1	CALL_5
0x400147b	          0x4889c7	                            mov rdi, rax	       466	clone.c	FUNCTION_37	ELSE_1	CALL_5
0x400147e	      0xe800000000	                          call 0x4001483	       466	clone.c	FUNCTION_37	ELSE_1	CALL_5
0x4001483	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       467	clone.c	FUNCTION_37	ELSE_1	CALL_6
0x4001487	        0x488d45e0	                   lea rax, [rbp - 0x20]	       467	clone.c	FUNCTION_37	ELSE_1	CALL_6
0x400148b	          0x4889d6	                            mov rsi, rdx	       467	clone.c	FUNCTION_37	ELSE_1	CALL_6
0x400148e	          0x4889c7	                            mov rdi, rax	       467	clone.c	FUNCTION_37	ELSE_1	CALL_6
0x4001491	      0xe800000000	                          call 0x4001496	       467	clone.c	FUNCTION_37	ELSE_1	CALL_6
0x4001496	        0x488d45c0	                   lea rax, [rbp - 0x40]	       468	clone.c	FUNCTION_37	ELSE_1	CALL_7
0x400149a	      0xbe00000000	                              mov esi, 0	       468	clone.c	FUNCTION_37	ELSE_1	CALL_7
0x400149f	          0x4889c7	                            mov rdi, rax	       468	clone.c	FUNCTION_37	ELSE_1	CALL_7
0x40014a2	      0xe85feeffff	                  call sym.strbuf_addstr	       468	clone.c	FUNCTION_37	ELSE_1	CALL_7
0x40014a7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       469	clone.c	FUNCTION_37	ELSE_1	CALL_8
0x40014ab	      0xbe00000000	                              mov esi, 0	       469	clone.c	FUNCTION_37	ELSE_1	CALL_8
0x40014b0	          0x4889c7	                            mov rdi, rax	       469	clone.c	FUNCTION_37	ELSE_1	CALL_8
0x40014b3	      0xe84eeeffff	                  call sym.strbuf_addstr	       469	clone.c	FUNCTION_37	ELSE_1	CALL_8
0x40014b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       470	clone.c	FUNCTION_37	ELSE_1	CALL_9
0x40014bc	            0x89c1	                            mov ecx, eax	       470	clone.c	FUNCTION_37	ELSE_1	CALL_9
0x40014be	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       470	clone.c	FUNCTION_37	ELSE_1	CALL_9
0x40014c2	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       470	clone.c	FUNCTION_37	ELSE_1	CALL_9
0x40014c6	        0x488d45c0	                   lea rax, [rbp - 0x40]	       470	clone.c	FUNCTION_37	ELSE_1	CALL_9
0x40014ca	          0x4889c7	                            mov rdi, rax	       470	clone.c	FUNCTION_37	ELSE_1	CALL_9
0x40014cd	      0xe8a6faffff	         call sym.copy_or_link_directory	       470	clone.c	FUNCTION_37	ELSE_1	CALL_9
0x40014d2	        0x488d45c0	                   lea rax, [rbp - 0x40]	       471	clone.c	FUNCTION_37	ELSE_1	CALL_10
0x40014d6	          0x4889c7	                            mov rdi, rax	       471	clone.c	FUNCTION_37	ELSE_1	CALL_10
0x40014d9	      0xe800000000	                          call 0x40014de	       471	clone.c	FUNCTION_37	ELSE_1	CALL_10
0x40014de	        0x488d45e0	                   lea rax, [rbp - 0x20]	       472	clone.c	FUNCTION_37	ELSE_1	CALL_11
0x40014e2	          0x4889c7	                            mov rdi, rax	       472	clone.c	FUNCTION_37	ELSE_1	CALL_11
0x40014e5	      0xe800000000	                          call 0x40014ea	       472	clone.c	FUNCTION_37	ELSE_1	CALL_11
0x40014ea	    0x8b0500000000	            mov eax, dword [0x040014f0] 	       475	clone.c	FUNCTION_37	IF_2
0x40014f0	            0x85c0	                           test eax, eax	       475	clone.c	FUNCTION_37	IF_2
0x40014f2	            0x7824	                            js 0x4001518	       475	clone.c	FUNCTION_37	IF_2
0x40014f4	      0xbf00000000	                              mov edi, 0	       476	clone.c	FUNCTION_37	CALL_13
0x40014f9	      0xe83deeffff	                               call sym.	       476	clone.c	FUNCTION_37	CALL_13
0x40014fe	          0x4889c2	                            mov rdx, rax	       476	clone.c	FUNCTION_37	CALL_13
0x4001501	    0x488b05000000	            mov rax, qword [0x04001508] 	       476	clone.c	FUNCTION_37	CALL_13
0x4001508	          0x4889d6	                            mov rsi, rdx	       476	clone.c	FUNCTION_37	CALL_13
0x400150b	          0x4889c7	                            mov rdi, rax	       476	clone.c	FUNCTION_37	CALL_13
0x400150e	      0xb800000000	                              mov eax, 0	       476	clone.c	FUNCTION_37	CALL_13
0x4001513	      0xe800000000	                          call 0x4001518	       476	clone.c	FUNCTION_37	CALL_13
0x4001518	              0x90	                                     nop	       477	clone.c	FUNCTION_37
0x4001519	        0x488b45f8	                mov rax, qword [rbp - 8]	       477	clone.c	FUNCTION_37
0x400151d	    0x644833042528	                xor rax, qword fs:[0x28]	       477	clone.c	FUNCTION_37
0x4001526	            0x7405	                            je 0x400152d	       477	clone.c	FUNCTION_37
0x4001528	      0xe800000000	                          call 0x400152d	       477	clone.c	FUNCTION_37
0x400152d	              0xc9	                                   leave	       477	clone.c	FUNCTION_37
0x400152e	              0xc3	                                     ret	       477	clone.c	FUNCTION_37
update_remote_refs	functions,0:FOR,0:IF,6:WHILE,0:CALL,11:ELSE,0:SWITCH,0:DO,0	104
0x4001b58	              0x55	                                push rbp	       652	clone.c	FUNCTION_45
0x4001b59	          0x4889e5	                            mov rbp, rsp	       652	clone.c	FUNCTION_45
0x4001b5c	              0x53	                                push rbx	       652	clone.c	FUNCTION_45
0x4001b5d	        0x4883ec78	                           sub rsp, 0x78	       652	clone.c	FUNCTION_45
0x4001b61	        0x48897da8	             mov qword [rbp - 0x58], rdi	       652	clone.c	FUNCTION_45
0x4001b65	        0x488975a0	             mov qword [rbp - 0x60], rsi	       652	clone.c	FUNCTION_45
0x4001b69	        0x48895598	             mov qword [rbp - 0x68], rdx	       652	clone.c	FUNCTION_45
0x4001b6d	        0x48894d90	             mov qword [rbp - 0x70], rcx	       652	clone.c	FUNCTION_45
0x4001b71	        0x4c894588	              mov qword [rbp - 0x78], r8	       652	clone.c	FUNCTION_45
0x4001b75	        0x4c894d80	              mov qword [rbp - 0x80], r9	       652	clone.c	FUNCTION_45
0x4001b79	    0x64488b042528	                mov rax, qword fs:[0x28]	       652	clone.c	FUNCTION_45
0x4001b82	        0x488945e8	             mov qword [rbp - 0x18], rax	       652	clone.c	FUNCTION_45
0x4001b86	            0x31c0	                            xor eax, eax	       652	clone.c	FUNCTION_45
0x4001b88	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       653	clone.c	FUNCTION_45
0x4001b8c	        0x488945b8	             mov qword [rbp - 0x48], rax	       653	clone.c	FUNCTION_45
0x4001b90	        0x837d1000	               cmp dword [rbp + 0x10], 0	       655	clone.c	FUNCTION_45	IF_1
0x4001b94	            0x7474	                            je 0x4001c0a	       655	clone.c	FUNCTION_45	IF_1
0x4001b96	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       656	clone.c	FUNCTION_45	IF_1
0x4001b9e	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       656	clone.c	FUNCTION_45	IF_1
0x4001ba6	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       656	clone.c	FUNCTION_45	IF_1
0x4001bae	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       656	clone.c	FUNCTION_45	IF_1
0x4001bb6	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       656	clone.c	FUNCTION_45	IF_1
0x4001bbe	        0x488b4580	             mov rax, qword [rbp - 0x80]	       658	clone.c	FUNCTION_45	IF_1
0x4001bc2	        0x488945d0	             mov qword [rbp - 0x30], rax	       658	clone.c	FUNCTION_45	IF_1
0x4001bc6	        0x488b4580	             mov rax, qword [rbp - 0x80]	       659	clone.c	FUNCTION_45	IF_1
0x4001bca	         0xfb64048	           movzx eax, byte [rax + 0x48] 	       659	clone.c	FUNCTION_45	IF_1
0x4001bce	          0xc0e803	                               shr al, 3	       659	clone.c	FUNCTION_45	IF_1
0x4001bd1	          0x83e001	                              and eax, 1	       659	clone.c	FUNCTION_45	IF_1
0x4001bd4	           0xfb6c0	                           movzx eax, al	       659	clone.c	FUNCTION_45	IF_1
0x4001bd7	          0x8945dc	             mov dword [rbp - 0x24], eax	       659	clone.c	FUNCTION_45	IF_1
0x4001bda	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       661	clone.c	FUNCTION_45	IF_1	IF_2	CALL_1
0x4001bde	        0x488d45b8	                   lea rax, [rbp - 0x48]	       661	clone.c	FUNCTION_45	IF_1	IF_2	CALL_1
0x4001be2	          0x4889c6	                            mov rsi, rax	       661	clone.c	FUNCTION_45	IF_1	IF_2	CALL_1
0x4001be5	      0xbf00000000	                              mov edi, 0	       661	clone.c	FUNCTION_45	IF_1	IF_2	CALL_1
0x4001bea	      0xe800000000	                          call 0x4001bef	       661	clone.c	FUNCTION_45	IF_1	IF_2	CALL_1
0x4001bef	            0x85c0	                           test eax, eax	       661	clone.c	FUNCTION_45	IF_1	IF_2	CALL_1
0x4001bf1	            0x7417	                            je 0x4001c0a	       661	clone.c	FUNCTION_45	IF_1	IF_2	CALL_1
0x4001bf3	      0xbf00000000	                              mov edi, 0	       662	clone.c	FUNCTION_45	IF_1	CALL_3
0x4001bf8	      0xe83ee7ffff	                               call sym.	       662	clone.c	FUNCTION_45	IF_1	CALL_3
0x4001bfd	          0x4889c7	                            mov rdi, rax	       662	clone.c	FUNCTION_45	IF_1	CALL_3
0x4001c00	      0xb800000000	                              mov eax, 0	       662	clone.c	FUNCTION_45	IF_1	CALL_3
0x4001c05	      0xe800000000	                          call 0x4001c0a	       662	clone.c	FUNCTION_45	IF_1	CALL_3
0x4001c0a	      0x48837da800	               cmp qword [rbp - 0x58], 0	       665	clone.c	FUNCTION_45	IF_3
0x4001c0f	            0x7433	                            je 0x4001c44	       665	clone.c	FUNCTION_45	IF_3
0x4001c11	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       666	clone.c	FUNCTION_45	IF_3	CALL_4
0x4001c15	          0x4889c7	                            mov rdi, rax	       666	clone.c	FUNCTION_45	IF_3	CALL_4
0x4001c18	      0xe8d9fcffff	              call sym.write_remote_refs	       666	clone.c	FUNCTION_45	IF_3	CALL_4
0x4001c1d	    0x8b0500000000	            mov eax, dword [0x04001c23] 	       667	clone.c	FUNCTION_45	IF_3	IF_4
0x4001c23	            0x85c0	                           test eax, eax	       667	clone.c	FUNCTION_45	IF_3	IF_4
0x4001c25	            0x741d	                            je 0x4001c44	       667	clone.c	FUNCTION_45	IF_3	IF_4
0x4001c27	    0x8b0500000000	            mov eax, dword [0x04001c2d] 	       667	clone.c	FUNCTION_45	IF_3	IF_4
0x4001c2d	            0x85c0	                           test eax, eax	       667	clone.c	FUNCTION_45	IF_3	IF_4
0x4001c2f	            0x7513	                           jne 0x4001c44	       667	clone.c	FUNCTION_45	IF_3	IF_4
0x4001c31	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       668	clone.c	FUNCTION_45	IF_3	CALL_5
0x4001c35	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       668	clone.c	FUNCTION_45	IF_3	CALL_5
0x4001c39	          0x4889d6	                            mov rsi, rdx	       668	clone.c	FUNCTION_45	IF_3	CALL_5
0x4001c3c	          0x4889c7	                            mov rdi, rax	       668	clone.c	FUNCTION_45	IF_3	CALL_5
0x4001c3f	      0xe8e4fdffff	               call sym.write_followtags	       668	clone.c	FUNCTION_45	IF_3	CALL_5
0x4001c44	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       671	clone.c	FUNCTION_45	IF_5
0x4001c49	     0xf8497000000	                            je 0x4001ce6	       671	clone.c	FUNCTION_45	IF_5
0x4001c4f	    0x8b0500000000	            mov eax, dword [0x04001c55] 	       671	clone.c	FUNCTION_45	IF_5
0x4001c55	            0x85c0	                           test eax, eax	       671	clone.c	FUNCTION_45	IF_5
0x4001c57	     0xf8589000000	                           jne 0x4001ce6	       671	clone.c	FUNCTION_45	IF_5
0x4001c5d	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       672	clone.c	FUNCTION_45	IF_5
0x4001c65	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       672	clone.c	FUNCTION_45	IF_5
0x4001c6d	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       672	clone.c	FUNCTION_45	IF_5
0x4001c75	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       673	clone.c	FUNCTION_45	IF_5	CALL_6
0x4001c79	        0x488d45c0	                   lea rax, [rbp - 0x40]	       673	clone.c	FUNCTION_45	IF_5	CALL_6
0x4001c7d	          0x4889d6	                            mov rsi, rdx	       673	clone.c	FUNCTION_45	IF_5	CALL_6
0x4001c80	          0x4889c7	                            mov rdi, rax	       673	clone.c	FUNCTION_45	IF_5	CALL_6
0x4001c83	      0xe87ee6ffff	                  call sym.strbuf_addstr	       673	clone.c	FUNCTION_45	IF_5	CALL_6
0x4001c88	        0x488d45c0	                   lea rax, [rbp - 0x40]	       674	clone.c	FUNCTION_45	IF_5	CALL_7
0x4001c8c	      0xbe00000000	                              mov esi, 0	       674	clone.c	FUNCTION_45	IF_5	CALL_7
0x4001c91	          0x4889c7	                            mov rdi, rax	       674	clone.c	FUNCTION_45	IF_5	CALL_7
0x4001c94	      0xe86de6ffff	                  call sym.strbuf_addstr	       674	clone.c	FUNCTION_45	IF_5	CALL_7
0x4001c99	        0x488b4598	             mov rax, qword [rbp - 0x68]	       676	clone.c	FUNCTION_45	IF_5	IF_6
0x4001c9d	        0x488b4068	            mov rax, qword [rax + 0x68] 	       676	clone.c	FUNCTION_45	IF_5	IF_6
0x4001ca1	        0x488d4870	                   lea rcx, [rax + 0x70]	       676	clone.c	FUNCTION_45	IF_5	IF_6
0x4001ca5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       675	clone.c	FUNCTION_45	IF_5	IF_6	CALL_8
0x4001ca9	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       675	clone.c	FUNCTION_45	IF_5	IF_6	CALL_8
0x4001cad	          0x4889ce	                            mov rsi, rcx	       675	clone.c	FUNCTION_45	IF_5	IF_6	CALL_8
0x4001cb0	          0x4889c7	                            mov rdi, rax	       675	clone.c	FUNCTION_45	IF_5	IF_6	CALL_8
0x4001cb3	      0xe800000000	                          call 0x4001cb8	       675	clone.c	FUNCTION_45	IF_5	IF_6	CALL_8
0x4001cb8	            0x85c0	                           test eax, eax	       675	clone.c	FUNCTION_45	IF_5	IF_6	CALL_8
0x4001cba	            0x791e	                           jns 0x4001cda	       675	clone.c	FUNCTION_45	IF_5	IF_6	CALL_8
0x4001cbc	        0x488b5dd0	             mov rbx, qword [rbp - 0x30]	       678	clone.c	FUNCTION_45	IF_5	CALL_10
0x4001cc0	      0xbf00000000	                              mov edi, 0	       678	clone.c	FUNCTION_45	IF_5	CALL_10
0x4001cc5	      0xe871e6ffff	                               call sym.	       678	clone.c	FUNCTION_45	IF_5	CALL_10
0x4001cca	          0x4889de	                            mov rsi, rbx	       678	clone.c	FUNCTION_45	IF_5	CALL_10
0x4001ccd	          0x4889c7	                            mov rdi, rax	       678	clone.c	FUNCTION_45	IF_5	CALL_10
0x4001cd0	      0xb800000000	                              mov eax, 0	       678	clone.c	FUNCTION_45	IF_5	CALL_10
0x4001cd5	      0xe800000000	                          call 0x4001cda	       678	clone.c	FUNCTION_45	IF_5	CALL_10
0x4001cda	        0x488d45c0	                   lea rax, [rbp - 0x40]	       679	clone.c	FUNCTION_45	IF_5	CALL_11
0x4001cde	          0x4889c7	                            mov rdi, rax	       679	clone.c	FUNCTION_45	IF_5	CALL_11
0x4001ce1	      0xe800000000	                          call 0x4001ce6	       679	clone.c	FUNCTION_45	IF_5	CALL_11
0x4001ce6	              0x90	                                     nop	       681	clone.c	FUNCTION_45
0x4001ce7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       681	clone.c	FUNCTION_45
0x4001ceb	    0x644833042528	                xor rax, qword fs:[0x28]	       681	clone.c	FUNCTION_45
0x4001cf4	            0x7405	                            je 0x4001cfb	       681	clone.c	FUNCTION_45
0x4001cf6	      0xe800000000	                          call 0x4001cfb	       681	clone.c	FUNCTION_45
0x4001cfb	        0x4883c478	                           add rsp, 0x78	       681	clone.c	FUNCTION_45
0x4001cff	              0x5b	                                 pop rbx	       681	clone.c	FUNCTION_45
0x4001d00	              0x5d	                                 pop rbp	       681	clone.c	FUNCTION_45
0x4001d01	              0xc3	                                     ret	       681	clone.c	FUNCTION_45
get_repo_path_1	functions,0:FOR,2:IF,7:WHILE,0:CALL,12:ELSE,1:SWITCH,0:DO,0	146
0x40004dc	              0x55	                                push rbp	       146	clone.c	IF_9	FUNCTION_29
0x40004dd	          0x4889e5	                            mov rbp, rsp	       146	clone.c	IF_9	FUNCTION_29
0x40004e0	    0x4881ecd00000	                           sub rsp, 0xd0	       146	clone.c	IF_9	FUNCTION_29
0x40004e7	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	       146	clone.c	IF_9	FUNCTION_29
0x40004ee	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	       146	clone.c	IF_9	FUNCTION_29
0x40004f5	    0x64488b042528	                mov rax, qword fs:[0x28]	       146	clone.c	IF_9	FUNCTION_29
0x40004fe	        0x488945f8	                mov qword [rbp - 8], rax	       146	clone.c	IF_9	FUNCTION_29
0x4000502	            0x31c0	                            xor eax, eax	       146	clone.c	IF_9	FUNCTION_29
0x4000504	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       149	clone.c	IF_9	FUNCTION_29
0x400050b	        0x488b4008	                mov rax, qword [rax + 8]	       149	clone.c	IF_9	FUNCTION_29
0x400050f	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       149	clone.c	IF_9	FUNCTION_29
0x4000516	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	       153	clone.c	IF_9	FUNCTION_29	FOR_1
0x4000520	      0xe999010000	                           jmp 0x40006be	       153	clone.c	IF_9	FUNCTION_29	FOR_1
0x4000525	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       154	clone.c	IF_9	FUNCTION_29	FOR_1	CALL_1
0x400052c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       154	clone.c	IF_9	FUNCTION_29	FOR_1	CALL_1
0x4000533	          0x4889d6	                            mov rsi, rdx	       154	clone.c	IF_9	FUNCTION_29	FOR_1	CALL_1
0x4000536	          0x4889c7	                            mov rdi, rax	       154	clone.c	IF_9	FUNCTION_29	FOR_1	CALL_1
0x4000539	      0xe8c0fcffff	                  call sym.strbuf_setlen	       154	clone.c	IF_9	FUNCTION_29	FOR_1	CALL_1
0x400053e	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       155	clone.c	IF_9	FUNCTION_29	FOR_1	CALL_2
0x4000544	            0x4898	                                    cdqe	       155	clone.c	IF_9	FUNCTION_29	FOR_1	CALL_2
0x4000546	    0x488b14c50000	                  mov rdx, qword [rax*8]	       155	clone.c	IF_9	FUNCTION_29	FOR_1	CALL_2
0x400054e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       155	clone.c	IF_9	FUNCTION_29	FOR_1	CALL_2
0x4000555	          0x4889d6	                            mov rsi, rdx	       155	clone.c	IF_9	FUNCTION_29	FOR_1	CALL_2
0x4000558	          0x4889c7	                            mov rdi, rax	       155	clone.c	IF_9	FUNCTION_29	FOR_1	CALL_2
0x400055b	      0xe8a6fdffff	                  call sym.strbuf_addstr	       155	clone.c	IF_9	FUNCTION_29	FOR_1	CALL_2
0x4000560	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       156	clone.c	IF_9	FUNCTION_29	FOR_1	IF_1
0x4000567	        0x488b4010	            mov rax, qword [rax + 0x10] 	       156	clone.c	IF_9	FUNCTION_29	FOR_1	IF_1
0x400056b	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       156	clone.c	IF_9	FUNCTION_29	FOR_1	IF_1
0x4000572	          0x4889d6	                            mov rsi, rdx	       156	clone.c	IF_9	FUNCTION_29	FOR_1	IF_1
0x4000575	          0x4889c7	                            mov rdi, rax	       156	clone.c	IF_9	FUNCTION_29	FOR_1	IF_1
0x4000578	      0xe800000000	                          call 0x400057d	       156	clone.c	IF_9	FUNCTION_29	FOR_1	IF_1
0x400057d	            0x85c0	                           test eax, eax	       156	clone.c	IF_9	FUNCTION_29	FOR_1	IF_1
0x400057f	     0xf852b010000	                           jne 0x40006b0	       156	clone.c	IF_9	FUNCTION_29	FOR_1	IF_1
0x4000585	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       158	clone.c	IF_9	FUNCTION_29	FOR_1	IF_2	CALL_4
0x400058b	      0x2500f00000	                         and eax, 0xf000	       158	clone.c	IF_9	FUNCTION_29	FOR_1	IF_2	CALL_4
0x4000590	      0x3d00400000	                         cmp eax, 0x4000	       158	clone.c	IF_9	FUNCTION_29	FOR_1	IF_2	CALL_4
0x4000595	            0x7534	                           jne 0x40005cb	       158	clone.c	IF_9	FUNCTION_29	FOR_1	IF_2	CALL_4
0x4000597	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       158	clone.c	IF_9	FUNCTION_29	FOR_1	IF_2	CALL_4
0x400059e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       158	clone.c	IF_9	FUNCTION_29	FOR_1	IF_2	CALL_4
0x40005a2	          0x4889c7	                            mov rdi, rax	       158	clone.c	IF_9	FUNCTION_29	FOR_1	IF_2	CALL_4
0x40005a5	      0xe800000000	                          call 0x40005aa	       158	clone.c	IF_9	FUNCTION_29	FOR_1	IF_2	CALL_4
0x40005aa	            0x85c0	                           test eax, eax	       158	clone.c	IF_9	FUNCTION_29	FOR_1	IF_2	CALL_4
0x40005ac	            0x741d	                            je 0x40005cb	       158	clone.c	IF_9	FUNCTION_29	FOR_1	IF_2	CALL_4
0x40005ae	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       159	clone.c	IF_9	FUNCTION_29	FOR_1	IF_2
0x40005b5	    0xc70000000000	                      mov dword [rax], 0	       159	clone.c	IF_9	FUNCTION_29	FOR_1	IF_2
0x40005bb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       160	clone.c	IF_9	FUNCTION_29	FOR_1	IF_2
0x40005c2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       160	clone.c	IF_9	FUNCTION_29	FOR_1	IF_2
0x40005c6	      0xe9b4010000	                           jmp 0x400077f	       160	clone.c	IF_9	FUNCTION_29	FOR_1	IF_2
0x40005cb	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       161	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_5
0x40005d1	      0x2500f00000	                         and eax, 0xf000	       161	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_5
0x40005d6	      0x3d00800000	                         cmp eax, 0x8000	       161	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_5
0x40005db	     0xf85d6000000	                           jne 0x40006b7	       161	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_5
0x40005e1	        0x488b4590	             mov rax, qword [rbp - 0x70]	       161	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_5
0x40005e5	        0x4883f808	                              cmp rax, 8	       161	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_5
0x40005e9	     0xf8ec8000000	                           jle 0x40006b7	       161	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_5
0x40005ef	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       165	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_6
0x40005f6	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_6
0x40005fa	      0xbe00000000	                              mov esi, 0	       165	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_6
0x40005ff	          0x4889c7	                            mov rdi, rax	       165	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_6
0x4000602	      0xb800000000	                              mov eax, 0	       165	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_6
0x4000607	      0xe800000000	                          call 0x400060c	       165	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_6
0x400060c	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       165	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_6
0x4000612	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	       166	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_4
0x4000619	     0xf8894000000	                            js 0x40006b3	       166	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_4
0x400061f	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       168	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_7
0x4000623	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       168	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_7
0x4000629	      0xba08000000	                              mov edx, 8	       168	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_7
0x400062e	          0x4889ce	                            mov rsi, rcx	       168	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_7
0x4000631	            0x89c7	                            mov edi, eax	       168	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_7
0x4000633	      0xe800000000	                          call 0x4000638	       168	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_7
0x4000638	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       168	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_7
0x400063e	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       169	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_8
0x4000644	            0x89c7	                            mov edi, eax	       169	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_8
0x4000646	      0xe800000000	                          call 0x400064b	       169	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	CALL_8
0x400064b	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 8	       170	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_5	CALL_9
0x4000652	            0x7562	                           jne 0x40006b6	       170	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_5	CALL_9
0x4000654	        0x488d45f0	                   lea rax, [rbp - 0x10]	       170	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_5	CALL_9
0x4000658	      0xba08000000	                              mov edx, 8	       170	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_5	CALL_9
0x400065d	      0xbe00000000	                              mov esi, 0	       170	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_5	CALL_9
0x4000662	          0x4889c7	                            mov rdi, rax	       170	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_5	CALL_9
0x4000665	      0xe800000000	                          call 0x400066a	       170	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_5	CALL_9
0x400066a	            0x85c0	                           test eax, eax	       170	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_5	CALL_9
0x400066c	            0x7548	                           jne 0x40006b6	       170	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_5	CALL_9
0x400066e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       172	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3
0x4000675	        0x488b4010	            mov rax, qword [rax + 0x10] 	       172	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3
0x4000679	      0xbe00000000	                              mov esi, 0	       172	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3
0x400067e	          0x4889c7	                            mov rdi, rax	       172	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3
0x4000681	      0xe800000000	                          call 0x4000686	       172	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3
0x4000686	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       172	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3
0x400068d	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       173	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_6
0x4000695	            0x7420	                            je 0x40006b7	       173	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_6
0x4000697	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       174	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_6
0x400069e	    0xc70000000000	                      mov dword [rax], 0	       174	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_6
0x40006a4	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       175	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_6
0x40006ab	      0xe9cf000000	                           jmp 0x400077f	       175	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_6
0x40006b0	              0x90	                                     nop	       157	clone.c	IF_9	FUNCTION_29	FOR_1	IF_1
0x40006b1	            0xeb04	                           jmp 0x40006b7	       157	clone.c	IF_9	FUNCTION_29	FOR_1	IF_1
0x40006b3	              0x90	                                     nop	       167	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_4
0x40006b4	            0xeb01	                           jmp 0x40006b7	       167	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_4
0x40006b6	              0x90	                                     nop	       171	clone.c	IF_9	FUNCTION_29	FOR_1	ELSE_1	IF_3	IF_5
0x40006b7	    0x838544ffffff	               add dword [rbp - 0xbc], 1	       153	clone.c	IF_9	FUNCTION_29	FOR_1
0x40006be	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       153	clone.c	IF_9	FUNCTION_29	FOR_1
0x40006c4	          0x83f803	                              cmp eax, 3	       153	clone.c	IF_9	FUNCTION_29	FOR_1
0x40006c7	     0xf8658feffff	                           jbe 0x4000525	       153	clone.c	IF_9	FUNCTION_29	FOR_1
0x40006cd	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	       180	clone.c	IF_9	FUNCTION_29	FOR_2
0x40006d7	      0xe98f000000	                           jmp 0x400076b	       180	clone.c	IF_9	FUNCTION_29	FOR_2
0x40006dc	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       181	clone.c	IF_9	FUNCTION_29	FOR_2	CALL_10
0x40006e3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       181	clone.c	IF_9	FUNCTION_29	FOR_2	CALL_10
0x40006ea	          0x4889d6	                            mov rsi, rdx	       181	clone.c	IF_9	FUNCTION_29	FOR_2	CALL_10
0x40006ed	          0x4889c7	                            mov rdi, rax	       181	clone.c	IF_9	FUNCTION_29	FOR_2	CALL_10
0x40006f0	      0xe809fbffff	                  call sym.strbuf_setlen	       181	clone.c	IF_9	FUNCTION_29	FOR_2	CALL_10
0x40006f5	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       182	clone.c	IF_9	FUNCTION_29	FOR_2	CALL_11
0x40006fb	            0x4898	                                    cdqe	       182	clone.c	IF_9	FUNCTION_29	FOR_2	CALL_11
0x40006fd	    0x488b14c50000	                  mov rdx, qword [rax*8]	       182	clone.c	IF_9	FUNCTION_29	FOR_2	CALL_11
0x4000705	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       182	clone.c	IF_9	FUNCTION_29	FOR_2	CALL_11
0x400070c	          0x4889d6	                            mov rsi, rdx	       182	clone.c	IF_9	FUNCTION_29	FOR_2	CALL_11
0x400070f	          0x4889c7	                            mov rdi, rax	       182	clone.c	IF_9	FUNCTION_29	FOR_2	CALL_11
0x4000712	      0xe8effbffff	                  call sym.strbuf_addstr	       182	clone.c	IF_9	FUNCTION_29	FOR_2	CALL_11
0x4000717	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       183	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7	CALL_12
0x400071e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       183	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7	CALL_12
0x4000722	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       183	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7	CALL_12
0x4000729	          0x4889d6	                            mov rsi, rdx	       183	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7	CALL_12
0x400072c	          0x4889c7	                            mov rdi, rax	       183	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7	CALL_12
0x400072f	      0xe800000000	                          call 0x4000734	       183	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7	CALL_12
0x4000734	            0x85c0	                           test eax, eax	       183	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7	CALL_12
0x4000736	            0x752c	                           jne 0x4000764	       183	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7	CALL_12
0x4000738	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       183	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7	CALL_12
0x400073e	      0x2500f00000	                         and eax, 0xf000	       183	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7	CALL_12
0x4000743	      0x3d00800000	                         cmp eax, 0x8000	       183	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7	CALL_12
0x4000748	            0x751a	                           jne 0x4000764	       183	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7	CALL_12
0x400074a	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       184	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7
0x4000751	    0xc70001000000	                      mov dword [rax], 1	       184	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7
0x4000757	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       185	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7
0x400075e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       185	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7
0x4000762	            0xeb1b	                           jmp 0x400077f	       185	clone.c	IF_9	FUNCTION_29	FOR_2	IF_7
0x4000764	    0x838544ffffff	               add dword [rbp - 0xbc], 1	       180	clone.c	IF_9	FUNCTION_29	FOR_2
0x400076b	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       180	clone.c	IF_9	FUNCTION_29	FOR_2
0x4000771	          0x83f801	                              cmp eax, 1	       180	clone.c	IF_9	FUNCTION_29	FOR_2
0x4000774	     0xf8662ffffff	                           jbe 0x40006dc	       180	clone.c	IF_9	FUNCTION_29	FOR_2
0x400077a	      0xb800000000	                              mov eax, 0	       189	clone.c	IF_9	FUNCTION_29
0x400077f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       190	clone.c	IF_9	FUNCTION_29
0x4000783	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       190	clone.c	IF_9	FUNCTION_29
0x400078c	            0x7405	                            je 0x4000793	       190	clone.c	IF_9	FUNCTION_29
0x400078e	      0xe800000000	                          call 0x4000793	       190	clone.c	IF_9	FUNCTION_29
0x4000793	              0xc9	                                   leave	       190	clone.c	IF_9	FUNCTION_29
0x4000794	              0xc3	                                     ret	       190	clone.c	IF_9	FUNCTION_29
checkout	functions,0:FOR,0:IF,12:WHILE,0:CALL,32:ELSE,1:SWITCH,0:DO,0	197
0x4001e74	              0x55	                                push rbp	       713	clone.c	FUNCTION_47
0x4001e75	          0x4889e5	                            mov rbp, rsp	       713	clone.c	FUNCTION_47
0x4001e78	              0x53	                                push rbx	       713	clone.c	FUNCTION_47
0x4001e79	    0x4881ecb80300	                          sub rsp, 0x3b8	       713	clone.c	FUNCTION_47
0x4001e80	    0x89bd4cfcffff	            mov dword [rbp - 0x3b4], edi	       713	clone.c	FUNCTION_47
0x4001e86	    0x64488b042528	                mov rax, qword fs:[0x28]	       713	clone.c	FUNCTION_47
0x4001e8f	        0x488945e8	             mov qword [rbp - 0x18], rax	       713	clone.c	FUNCTION_47
0x4001e93	            0x31c0	                            xor eax, eax	       713	clone.c	FUNCTION_47
0x4001e95	    0x48c78560fcff	              mov qword [rbp - 0x3a0], 0	       716	clone.c	FUNCTION_47
0x4001ea0	    0xc7855cfcffff	              mov dword [rbp - 0x3a4], 0	       720	clone.c	FUNCTION_47
0x4001eaa	    0x8b0500000000	            mov eax, dword [0x04001eb0] 	       722	clone.c	FUNCTION_47	IF_1
0x4001eb0	            0x85c0	                           test eax, eax	       722	clone.c	FUNCTION_47	IF_1
0x4001eb2	            0x740a	                            je 0x4001ebe	       722	clone.c	FUNCTION_47	IF_1
0x4001eb4	      0xb800000000	                              mov eax, 0	       723	clone.c	FUNCTION_47	IF_1
0x4001eb9	      0xe95f030000	                           jmp 0x400221d	       723	clone.c	FUNCTION_47	IF_1
0x4001ebe	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	       725	clone.c	FUNCTION_47	CALL_1
0x4001ec5	      0xb900000000	                              mov ecx, 0	       725	clone.c	FUNCTION_47	CALL_1
0x4001eca	          0x4889c2	                            mov rdx, rax	       725	clone.c	FUNCTION_47	CALL_1
0x4001ecd	      0xbe01000000	                              mov esi, 1	       725	clone.c	FUNCTION_47	CALL_1
0x4001ed2	      0xbf00000000	                              mov edi, 0	       725	clone.c	FUNCTION_47	CALL_1
0x4001ed7	      0xe800000000	                          call 0x4001edc	       725	clone.c	FUNCTION_47	CALL_1
0x4001edc	    0x48898570fcff	            mov qword [rbp - 0x390], rax	       725	clone.c	FUNCTION_47	CALL_1
0x4001ee3	    0x4883bd70fcff	              cmp qword [rbp - 0x390], 0	       726	clone.c	FUNCTION_47	IF_2
0x4001eeb	            0x7521	                           jne 0x4001f0e	       726	clone.c	FUNCTION_47	IF_2
0x4001eed	      0xbf00000000	                              mov edi, 0	       727	clone.c	FUNCTION_47	IF_2	CALL_3
0x4001ef2	      0xe844e4ffff	                               call sym.	       727	clone.c	FUNCTION_47	IF_2	CALL_3
0x4001ef7	          0x4889c7	                            mov rdi, rax	       727	clone.c	FUNCTION_47	IF_2	CALL_3
0x4001efa	      0xb800000000	                              mov eax, 0	       727	clone.c	FUNCTION_47	IF_2	CALL_3
0x4001eff	      0xe800000000	                          call 0x4001f04	       727	clone.c	FUNCTION_47	IF_2	CALL_3
0x4001f04	      0xb800000000	                              mov eax, 0	       729	clone.c	FUNCTION_47	IF_2
0x4001f09	      0xe90f030000	                           jmp 0x400221d	       729	clone.c	FUNCTION_47	IF_2
0x4001f0e	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       731	clone.c	FUNCTION_47	IF_3	CALL_4
0x4001f15	      0xbe00000000	                              mov esi, 0	       731	clone.c	FUNCTION_47	IF_3	CALL_4
0x4001f1a	          0x4889c7	                            mov rdi, rax	       731	clone.c	FUNCTION_47	IF_3	CALL_4
0x4001f1d	      0xe800000000	                          call 0x4001f22	       731	clone.c	FUNCTION_47	IF_3	CALL_4
0x4001f22	            0x85c0	                           test eax, eax	       731	clone.c	FUNCTION_47	IF_3	CALL_4
0x4001f24	            0x7523	                           jne 0x4001f49	       731	clone.c	FUNCTION_47	IF_3	CALL_4
0x4001f26	    0x8b0500000000	            mov eax, dword [0x04001f2c] 	       732	clone.c	FUNCTION_47	IF_3	IF_4
0x4001f2c	            0x85c0	                           test eax, eax	       732	clone.c	FUNCTION_47	IF_3	IF_4
0x4001f2e	            0x7448	                            je 0x4001f78	       732	clone.c	FUNCTION_47	IF_3	IF_4
0x4001f30	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	       733	clone.c	FUNCTION_47	IF_3	CALL_6
0x4001f37	          0x4889c7	                            mov rdi, rax	       733	clone.c	FUNCTION_47	IF_3	CALL_6
0x4001f3a	      0xe800000000	                          call 0x4001f3f	       733	clone.c	FUNCTION_47	IF_3	CALL_6
0x4001f3f	          0x4889c7	                            mov rdi, rax	       733	clone.c	FUNCTION_47	IF_3	CALL_6
0x4001f42	      0xe800000000	                          call 0x4001f47	       733	clone.c	FUNCTION_47	IF_3	CALL_6
0x4001f47	            0xeb2f	                           jmp 0x4001f78	       733	clone.c	FUNCTION_47	IF_3	CALL_6
0x4001f49	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       735	clone.c	FUNCTION_47	ELSE_1	IF_5	CALL_7
0x4001f50	      0xbe00000000	                              mov esi, 0	       735	clone.c	FUNCTION_47	ELSE_1	IF_5	CALL_7
0x4001f55	          0x4889c7	                            mov rdi, rax	       735	clone.c	FUNCTION_47	ELSE_1	IF_5	CALL_7
0x4001f58	      0xe800000000	                          call 0x4001f5d	       735	clone.c	FUNCTION_47	ELSE_1	IF_5	CALL_7
0x4001f5d	            0x85c0	                           test eax, eax	       735	clone.c	FUNCTION_47	ELSE_1	IF_5	CALL_7
0x4001f5f	            0x7517	                           jne 0x4001f78	       735	clone.c	FUNCTION_47	ELSE_1	IF_5	CALL_7
0x4001f61	      0xbf00000000	                              mov edi, 0	       736	clone.c	FUNCTION_47	ELSE_1	CALL_9
0x4001f66	      0xe8d0e3ffff	                               call sym.	       736	clone.c	FUNCTION_47	ELSE_1	CALL_9
0x4001f6b	          0x4889c7	                            mov rdi, rax	       736	clone.c	FUNCTION_47	ELSE_1	CALL_9
0x4001f6e	      0xb800000000	                              mov eax, 0	       736	clone.c	FUNCTION_47	ELSE_1	CALL_9
0x4001f73	      0xe800000000	                          call 0x4001f78	       736	clone.c	FUNCTION_47	ELSE_1	CALL_9
0x4001f78	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       738	clone.c	FUNCTION_47	CALL_10
0x4001f7f	          0x4889c7	                            mov rdi, rax	       738	clone.c	FUNCTION_47	CALL_10
0x4001f82	      0xe800000000	                          call 0x4001f87	       738	clone.c	FUNCTION_47	CALL_10
0x4001f87	      0xe800000000	                          call 0x4001f8c	       741	clone.c	FUNCTION_47	CALL_11
0x4001f8c	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	       743	clone.c	FUNCTION_47	CALL_12
0x4001f93	      0xbe01000000	                              mov esi, 1	       743	clone.c	FUNCTION_47	CALL_12
0x4001f98	          0x4889c7	                            mov rdi, rax	       743	clone.c	FUNCTION_47	CALL_12
0x4001f9b	      0xe800000000	                          call 0x4001fa0	       743	clone.c	FUNCTION_47	CALL_12
0x4001fa0	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	       745	clone.c	FUNCTION_47	CALL_13
0x4001fa7	      0xba00030000	                          mov edx, 0x300	       745	clone.c	FUNCTION_47	CALL_13
0x4001fac	      0xbe00000000	                              mov esi, 0	       745	clone.c	FUNCTION_47	CALL_13
0x4001fb1	          0x4889c7	                            mov rdi, rax	       745	clone.c	FUNCTION_47	CALL_13
0x4001fb4	      0xe800000000	                          call 0x4001fb9	       745	clone.c	FUNCTION_47	CALL_13
0x4001fb9	    0xc785e8fcffff	              mov dword [rbp - 0x318], 1	       746	clone.c	FUNCTION_47
0x4001fc3	    0xc785e4fcffff	              mov dword [rbp - 0x31c], 1	       747	clone.c	FUNCTION_47
0x4001fcd	    0x48c78548fdff	              mov qword [rbp - 0x2b8], 0	       748	clone.c	FUNCTION_47
0x4001fd8	    0x8b0500000000	            mov eax, dword [0x04001fde] 	       749	clone.c	FUNCTION_47
0x4001fde	            0xf7d0	                                 not eax	       749	clone.c	FUNCTION_47
0x4001fe0	          0xc1e81f	                           shr eax, 0x1f	       749	clone.c	FUNCTION_47
0x4001fe3	           0xfb6c0	                           movzx eax, al	       749	clone.c	FUNCTION_47
0x4001fe6	    0x8985f8fcffff	            mov dword [rbp - 0x308], eax	       749	clone.c	FUNCTION_47
0x4001fec	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	       750	clone.c	FUNCTION_47
0x4001ff7	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	       751	clone.c	FUNCTION_47
0x4002002	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	       753	clone.c	FUNCTION_47	CALL_14
0x4002009	          0x4889c7	                            mov rdi, rax	       753	clone.c	FUNCTION_47	CALL_14
0x400200c	      0xe800000000	                          call 0x4002011	       753	clone.c	FUNCTION_47	CALL_14
0x4002011	    0x48898578fcff	            mov qword [rbp - 0x388], rax	       753	clone.c	FUNCTION_47	CALL_14
0x4002018	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       754	clone.c	FUNCTION_47	CALL_15
0x400201f	          0x4889c7	                            mov rdi, rax	       754	clone.c	FUNCTION_47	CALL_15
0x4002022	      0xe821e4ffff	                     call sym.parse_tree	       754	clone.c	FUNCTION_47	CALL_15
0x4002027	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       755	clone.c	FUNCTION_47	CALL_16
0x400202e	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       755	clone.c	FUNCTION_47	CALL_16
0x4002032	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       755	clone.c	FUNCTION_47	CALL_16
0x4002039	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       755	clone.c	FUNCTION_47	CALL_16
0x400203d	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	       755	clone.c	FUNCTION_47	CALL_16
0x4002044	          0x4889ce	                            mov rsi, rcx	       755	clone.c	FUNCTION_47	CALL_16
0x4002047	          0x4889c7	                            mov rdi, rax	       755	clone.c	FUNCTION_47	CALL_16
0x400204a	      0xe800000000	                          call 0x400204f	       755	clone.c	FUNCTION_47	CALL_16
0x400204f	    0x488d95e0fcff	                  lea rdx, [rbp - 0x320]	       756	clone.c	FUNCTION_47	IF_6	CALL_17
0x4002056	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	       756	clone.c	FUNCTION_47	IF_6	CALL_17
0x400205d	          0x4889c6	                            mov rsi, rax	       756	clone.c	FUNCTION_47	IF_6	CALL_17
0x4002060	      0xbf01000000	                              mov edi, 1	       756	clone.c	FUNCTION_47	IF_6	CALL_17
0x4002065	      0xe800000000	                          call 0x400206a	       756	clone.c	FUNCTION_47	IF_6	CALL_17
0x400206a	            0x85c0	                           test eax, eax	       756	clone.c	FUNCTION_47	IF_6	CALL_17
0x400206c	            0x7917	                           jns 0x4002085	       756	clone.c	FUNCTION_47	IF_6	CALL_17
0x400206e	      0xbf00000000	                              mov edi, 0	       757	clone.c	FUNCTION_47	CALL_19
0x4002073	      0xe8c3e2ffff	                               call sym.	       757	clone.c	FUNCTION_47	CALL_19
0x4002078	          0x4889c7	                            mov rdi, rax	       757	clone.c	FUNCTION_47	CALL_19
0x400207b	      0xb800000000	                              mov eax, 0	       757	clone.c	FUNCTION_47	CALL_19
0x4002080	      0xe800000000	                          call 0x4002085	       757	clone.c	FUNCTION_47	CALL_19
0x4002085	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	       759	clone.c	FUNCTION_47	IF_7	CALL_20
0x400208c	      0xba01000000	                              mov edx, 1	       759	clone.c	FUNCTION_47	IF_7	CALL_20
0x4002091	          0x4889c6	                            mov rsi, rax	       759	clone.c	FUNCTION_47	IF_7	CALL_20
0x4002094	      0xbf00000000	                              mov edi, 0	       759	clone.c	FUNCTION_47	IF_7	CALL_20
0x4002099	      0xe800000000	                          call 0x400209e	       759	clone.c	FUNCTION_47	IF_7	CALL_20
0x400209e	            0x85c0	                           test eax, eax	       759	clone.c	FUNCTION_47	IF_7	CALL_20
0x40020a0	            0x7417	                            je 0x40020b9	       759	clone.c	FUNCTION_47	IF_7	CALL_20
0x40020a2	      0xbf00000000	                              mov edi, 0	       760	clone.c	FUNCTION_47	CALL_22
0x40020a7	      0xe88fe2ffff	                               call sym.	       760	clone.c	FUNCTION_47	CALL_22
0x40020ac	          0x4889c7	                            mov rdi, rax	       760	clone.c	FUNCTION_47	CALL_22
0x40020af	      0xb800000000	                              mov eax, 0	       760	clone.c	FUNCTION_47	CALL_22
0x40020b4	      0xe800000000	                          call 0x40020b9	       760	clone.c	FUNCTION_47	CALL_22
0x40020b9	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	       762	clone.c	FUNCTION_47	CALL_24
0x40020c0	          0x4889c7	                            mov rdi, rax	       762	clone.c	FUNCTION_47	CALL_24
0x40020c3	      0xe800000000	                          call 0x40020c8	       762	clone.c	FUNCTION_47	CALL_24
0x40020c8	          0x4889c3	                            mov rbx, rax	       762	clone.c	FUNCTION_47	CALL_24
0x40020cb	      0xbf00000000	                              mov edi, 0	       762	clone.c	FUNCTION_47	CALL_24
0x40020d0	      0xe800000000	                          call 0x40020d5	       762	clone.c	FUNCTION_47	CALL_24
0x40020d5	    0x41b900000000	                              mov r9d, 0	       762	clone.c	FUNCTION_47	CALL_24
0x40020db	    0x41b800000000	                              mov r8d, 0	       762	clone.c	FUNCTION_47	CALL_24
0x40020e1	          0x4889d9	                            mov rcx, rbx	       762	clone.c	FUNCTION_47	CALL_24
0x40020e4	          0x4889c2	                            mov rdx, rax	       762	clone.c	FUNCTION_47	CALL_24
0x40020e7	      0xbe00000000	                              mov esi, 0	       762	clone.c	FUNCTION_47	CALL_24
0x40020ec	      0xbf00000000	                              mov edi, 0	       762	clone.c	FUNCTION_47	CALL_24
0x40020f1	      0xb800000000	                              mov eax, 0	       762	clone.c	FUNCTION_47	CALL_24
0x40020f6	      0xe800000000	                          call 0x40020fb	       762	clone.c	FUNCTION_47	CALL_24
0x40020fb	     0x9855cfcffff	             or dword [rbp - 0x3a4], eax	       762	clone.c	FUNCTION_47	CALL_24
0x4002101	    0x83bd5cfcffff	              cmp dword [rbp - 0x3a4], 0	       765	clone.c	FUNCTION_47	IF_8
0x4002108	     0xf8509010000	                           jne 0x4002217	       765	clone.c	FUNCTION_47	IF_8
0x400210e	    0x8b0500000000	            mov eax, dword [0x04002114] 	       765	clone.c	FUNCTION_47	IF_8
0x4002114	            0x85c0	                           test eax, eax	       765	clone.c	FUNCTION_47	IF_8
0x4002116	     0xf84fb000000	                            je 0x4002217	       765	clone.c	FUNCTION_47	IF_8
0x400211c	    0x48c78580fcff	              mov qword [rbp - 0x380], 0	       766	clone.c	FUNCTION_47	IF_8
0x4002127	    0xc78588fcffff	              mov dword [rbp - 0x378], 0	       766	clone.c	FUNCTION_47	IF_8
0x4002131	    0xc7858cfcffff	              mov dword [rbp - 0x374], 0	       766	clone.c	FUNCTION_47	IF_8
0x400213b	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       767	clone.c	FUNCTION_47	IF_8	CALL_26
0x4002142	    0x41b900000000	                              mov r9d, 0	       767	clone.c	FUNCTION_47	IF_8	CALL_26
0x4002148	    0x41b800000000	                              mov r8d, 0	       767	clone.c	FUNCTION_47	IF_8	CALL_26
0x400214e	      0xb900000000	                              mov ecx, 0	       767	clone.c	FUNCTION_47	IF_8	CALL_26
0x4002153	      0xba00000000	                              mov edx, 0	       767	clone.c	FUNCTION_47	IF_8	CALL_26
0x4002158	      0xbe00000000	                              mov esi, 0	       767	clone.c	FUNCTION_47	IF_8	CALL_26
0x400215d	          0x4889c7	                            mov rdi, rax	       767	clone.c	FUNCTION_47	IF_8	CALL_26
0x4002160	      0xb800000000	                              mov eax, 0	       767	clone.c	FUNCTION_47	IF_8	CALL_26
0x4002165	      0xe800000000	                          call 0x400216a	       767	clone.c	FUNCTION_47	IF_8	CALL_26
0x400216a	    0x8b0500000000	            mov eax, dword [0x04002170] 	       769	clone.c	FUNCTION_47	IF_8	IF_9
0x4002170	          0x83f801	                              cmp eax, 1	       769	clone.c	FUNCTION_47	IF_8	IF_9
0x4002173	            0x7514	                           jne 0x4002189	       769	clone.c	FUNCTION_47	IF_8	IF_9
0x4002175	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       770	clone.c	FUNCTION_47	IF_8	CALL_27
0x400217c	      0xbe00000000	                              mov esi, 0	       770	clone.c	FUNCTION_47	IF_8	CALL_27
0x4002181	          0x4889c7	                            mov rdi, rax	       770	clone.c	FUNCTION_47	IF_8	CALL_27
0x4002184	      0xe800000000	                          call 0x4002189	       770	clone.c	FUNCTION_47	IF_8	CALL_27
0x4002189	    0x8b0500000000	            mov eax, dword [0x0400218f] 	       772	clone.c	FUNCTION_47	IF_8	IF_10
0x400218f	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       772	clone.c	FUNCTION_47	IF_8	IF_10
0x4002192	            0x741f	                            je 0x40021b3	       772	clone.c	FUNCTION_47	IF_8	IF_10
0x4002194	    0x8b1500000000	            mov edx, dword [0x0400219a] 	       773	clone.c	FUNCTION_47	IF_8	CALL_28
0x400219a	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       773	clone.c	FUNCTION_47	IF_8	CALL_28
0x40021a1	      0xbe00000000	                              mov esi, 0	       773	clone.c	FUNCTION_47	IF_8	CALL_28
0x40021a6	          0x4889c7	                            mov rdi, rax	       773	clone.c	FUNCTION_47	IF_8	CALL_28
0x40021a9	      0xb800000000	                              mov eax, 0	       773	clone.c	FUNCTION_47	IF_8	CALL_28
0x40021ae	      0xe800000000	                          call 0x40021b3	       773	clone.c	FUNCTION_47	IF_8	CALL_28
0x40021b3	    0x83bd4cfcffff	              cmp dword [rbp - 0x3b4], 0	       775	clone.c	FUNCTION_47	IF_8	IF_11
0x40021ba	            0x7414	                            je 0x40021d0	       775	clone.c	FUNCTION_47	IF_8	IF_11
0x40021bc	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       776	clone.c	FUNCTION_47	IF_8	CALL_29
0x40021c3	      0xbe00000000	                              mov esi, 0	       776	clone.c	FUNCTION_47	IF_8	CALL_29
0x40021c8	          0x4889c7	                            mov rdi, rax	       776	clone.c	FUNCTION_47	IF_8	CALL_29
0x40021cb	      0xe800000000	                          call 0x40021d0	       776	clone.c	FUNCTION_47	IF_8	CALL_29
0x40021d0	    0x8b0500000000	            mov eax, dword [0x040021d6] 	       778	clone.c	FUNCTION_47	IF_8	IF_12
0x40021d6	            0x85c0	                           test eax, eax	       778	clone.c	FUNCTION_47	IF_8	IF_12
0x40021d8	            0x7914	                           jns 0x40021ee	       778	clone.c	FUNCTION_47	IF_8	IF_12
0x40021da	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       779	clone.c	FUNCTION_47	IF_8	CALL_30
0x40021e1	      0xbe00000000	                              mov esi, 0	       779	clone.c	FUNCTION_47	IF_8	CALL_30
0x40021e6	          0x4889c7	                            mov rdi, rax	       779	clone.c	FUNCTION_47	IF_8	CALL_30
0x40021e9	      0xe800000000	                          call 0x40021ee	       779	clone.c	FUNCTION_47	IF_8	CALL_30
0x40021ee	    0x488b8580fcff	            mov rax, qword [rbp - 0x380]	       781	clone.c	FUNCTION_47	IF_8	CALL_31
0x40021f5	      0xbe02000000	                              mov esi, 2	       781	clone.c	FUNCTION_47	IF_8	CALL_31
0x40021fa	          0x4889c7	                            mov rdi, rax	       781	clone.c	FUNCTION_47	IF_8	CALL_31
0x40021fd	      0xe800000000	                          call 0x4002202	       781	clone.c	FUNCTION_47	IF_8	CALL_31
0x4002202	    0x89855cfcffff	            mov dword [rbp - 0x3a4], eax	       781	clone.c	FUNCTION_47	IF_8	CALL_31
0x4002208	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       782	clone.c	FUNCTION_47	IF_8	CALL_32
0x400220f	          0x4889c7	                            mov rdi, rax	       782	clone.c	FUNCTION_47	IF_8	CALL_32
0x4002212	      0xe800000000	                          call 0x4002217	       782	clone.c	FUNCTION_47	IF_8	CALL_32
0x4002217	    0x8b855cfcffff	            mov eax, dword [rbp - 0x3a4]	       785	clone.c	FUNCTION_47
0x400221d	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       786	clone.c	FUNCTION_47
0x4002221	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       786	clone.c	FUNCTION_47
0x400222a	            0x7405	                            je 0x4002231	       786	clone.c	FUNCTION_47
0x400222c	      0xe800000000	                          call 0x4002231	       786	clone.c	FUNCTION_47
0x4002231	    0x4881c4b80300	                          add rsp, 0x3b8	       786	clone.c	FUNCTION_47
0x4002238	              0x5b	                                 pop rbx	       786	clone.c	FUNCTION_47
0x4002239	              0x5d	                                 pop rbp	       786	clone.c	FUNCTION_47
0x400223a	              0xc3	                                     ret	       786	clone.c	FUNCTION_47
update_head	functions,0:FOR,0:IF,5:WHILE,0:CALL,9:ELSE,2:SWITCH,0:DO,0	89
0x4001d02	              0x55	                                push rbp	       685	clone.c	FUNCTION_46
0x4001d03	          0x4889e5	                            mov rbp, rsp	       685	clone.c	FUNCTION_46
0x4001d06	        0x4883ec40	                           sub rsp, 0x40	       685	clone.c	FUNCTION_46
0x4001d0a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       685	clone.c	FUNCTION_46
0x4001d0e	        0x488975d0	             mov qword [rbp - 0x30], rsi	       685	clone.c	FUNCTION_46
0x4001d12	        0x488955c8	             mov qword [rbp - 0x38], rdx	       685	clone.c	FUNCTION_46
0x4001d16	    0x64488b042528	                mov rax, qword fs:[0x28]	       685	clone.c	FUNCTION_46
0x4001d1f	        0x488945f8	                mov qword [rbp - 8], rax	       685	clone.c	FUNCTION_46
0x4001d23	            0x31c0	                            xor eax, eax	       685	clone.c	FUNCTION_46
0x4001d25	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       687	clone.c	FUNCTION_46	IF_1	CALL_1
0x4001d2a	     0xf84b3000000	                            je 0x4001de3	       687	clone.c	FUNCTION_46	IF_1	CALL_1
0x4001d30	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       687	clone.c	FUNCTION_46	IF_1	CALL_1
0x4001d34	        0x488d4870	                   lea rcx, [rax + 0x70]	       687	clone.c	FUNCTION_46	IF_1	CALL_1
0x4001d38	        0x488d45e8	                   lea rax, [rbp - 0x18]	       687	clone.c	FUNCTION_46	IF_1	CALL_1
0x4001d3c	          0x4889c2	                            mov rdx, rax	       687	clone.c	FUNCTION_46	IF_1	CALL_1
0x4001d3f	      0xbe00000000	                              mov esi, 0	       687	clone.c	FUNCTION_46	IF_1	CALL_1
0x4001d44	          0x4889cf	                            mov rdi, rcx	       687	clone.c	FUNCTION_46	IF_1	CALL_1
0x4001d47	      0xe816e3ffff	                    call sym.skip_prefix	       687	clone.c	FUNCTION_46	IF_1	CALL_1
0x4001d4c	            0x85c0	                           test eax, eax	       687	clone.c	FUNCTION_46	IF_1	CALL_1
0x4001d4e	     0xf848f000000	                            je 0x4001de3	       687	clone.c	FUNCTION_46	IF_1	CALL_1
0x4001d54	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       689	clone.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001d58	        0x4883c070	                           add rax, 0x70	       689	clone.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001d5c	      0xba00000000	                              mov edx, 0	       689	clone.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001d61	          0x4889c6	                            mov rsi, rax	       689	clone.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001d64	      0xbf00000000	                              mov edi, 0	       689	clone.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001d69	      0xe800000000	                          call 0x4001d6e	       689	clone.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001d6e	            0x85c0	                           test eax, eax	       689	clone.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001d70	            0x7917	                           jns 0x4001d89	       689	clone.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001d72	      0xbf00000000	                              mov edi, 0	       690	clone.c	FUNCTION_46	IF_1	CALL_4
0x4001d77	      0xe8bfe5ffff	                               call sym.	       690	clone.c	FUNCTION_46	IF_1	CALL_4
0x4001d7c	          0x4889c7	                            mov rdi, rax	       690	clone.c	FUNCTION_46	IF_1	CALL_4
0x4001d7f	      0xb800000000	                              mov eax, 0	       690	clone.c	FUNCTION_46	IF_1	CALL_4
0x4001d84	      0xe800000000	                          call 0x4001d89	       690	clone.c	FUNCTION_46	IF_1	CALL_4
0x4001d89	    0x8b0500000000	            mov eax, dword [0x04001d8f] 	       691	clone.c	FUNCTION_46	IF_1	IF_3
0x4001d8f	            0x85c0	                           test eax, eax	       691	clone.c	FUNCTION_46	IF_1	IF_3
0x4001d91	     0xf85c6000000	                           jne 0x4001e5d	       691	clone.c	FUNCTION_46	IF_1	IF_3
0x4001d97	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       692	clone.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x4001d9b	        0x488d5008	                      lea rdx, [rax + 8]	       692	clone.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x4001d9f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       692	clone.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x4001da3	    0x41b901000000	                              mov r9d, 1	       692	clone.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x4001da9	    0x41b800000000	                              mov r8d, 0	       692	clone.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x4001daf	      0xb900000000	                              mov ecx, 0	       692	clone.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x4001db4	      0xbe00000000	                              mov esi, 0	       692	clone.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x4001db9	          0x4889c7	                            mov rdi, rax	       692	clone.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x4001dbc	      0xe800000000	                          call 0x4001dc1	       692	clone.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x4001dc1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       694	clone.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x4001dc5	        0x488d4870	                   lea rcx, [rax + 0x70]	       694	clone.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x4001dc9	    0x488b15000000	            mov rdx, qword [0x04001dd0] 	       694	clone.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x4001dd0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       694	clone.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x4001dd4	          0x4889c6	                            mov rsi, rax	       694	clone.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x4001dd7	      0xbf00000000	                              mov edi, 0	       694	clone.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x4001ddc	      0xe800000000	                          call 0x4001de1	       694	clone.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x4001de1	            0xeb7a	                           jmp 0x4001e5d	       691	clone.c	FUNCTION_46	IF_1	IF_3
0x4001de3	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       696	clone.c	FUNCTION_46	ELSE_1	IF_4
0x4001de8	            0x7440	                            je 0x4001e2a	       696	clone.c	FUNCTION_46	ELSE_1	IF_4
0x4001dea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       697	clone.c	FUNCTION_46	ELSE_1	IF_4	CALL_7
0x4001dee	        0x4883c008	                              add rax, 8	       697	clone.c	FUNCTION_46	ELSE_1	IF_4	CALL_7
0x4001df2	          0x4889c7	                            mov rdi, rax	       697	clone.c	FUNCTION_46	ELSE_1	IF_4	CALL_7
0x4001df5	      0xe800000000	                          call 0x4001dfa	       697	clone.c	FUNCTION_46	ELSE_1	IF_4	CALL_7
0x4001dfa	        0x488945f0	             mov qword [rbp - 0x10], rax	       697	clone.c	FUNCTION_46	ELSE_1	IF_4	CALL_7
0x4001dfe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       699	clone.c	FUNCTION_46	ELSE_1	IF_4	CALL_8
0x4001e02	        0x488d5004	                      lea rdx, [rax + 4]	       699	clone.c	FUNCTION_46	ELSE_1	IF_4	CALL_8
0x4001e06	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       699	clone.c	FUNCTION_46	ELSE_1	IF_4	CALL_8
0x4001e0a	    0x41b901000000	                              mov r9d, 1	       699	clone.c	FUNCTION_46	ELSE_1	IF_4	CALL_8
0x4001e10	    0x41b801000000	                              mov r8d, 1	       699	clone.c	FUNCTION_46	ELSE_1	IF_4	CALL_8
0x4001e16	      0xb900000000	                              mov ecx, 0	       699	clone.c	FUNCTION_46	ELSE_1	IF_4	CALL_8
0x4001e1b	      0xbe00000000	                              mov esi, 0	       699	clone.c	FUNCTION_46	ELSE_1	IF_4	CALL_8
0x4001e20	          0x4889c7	                            mov rdi, rax	       699	clone.c	FUNCTION_46	ELSE_1	IF_4	CALL_8
0x4001e23	      0xe800000000	                          call 0x4001e28	       699	clone.c	FUNCTION_46	ELSE_1	IF_4	CALL_8
0x4001e28	            0xeb33	                           jmp 0x4001e5d	       710	clone.c	FUNCTION_46
0x4001e2a	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       701	clone.c	FUNCTION_46	ELSE_2	IF_5
0x4001e2f	            0x742c	                            je 0x4001e5d	       701	clone.c	FUNCTION_46	ELSE_2	IF_5
0x4001e31	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       707	clone.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4001e35	        0x488d5008	                      lea rdx, [rax + 8]	       707	clone.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4001e39	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       707	clone.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4001e3d	    0x41b901000000	                              mov r9d, 1	       707	clone.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4001e43	    0x41b801000000	                              mov r8d, 1	       707	clone.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4001e49	      0xb900000000	                              mov ecx, 0	       707	clone.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4001e4e	      0xbe00000000	                              mov esi, 0	       707	clone.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4001e53	          0x4889c7	                            mov rdi, rax	       707	clone.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4001e56	      0xe800000000	                          call 0x4001e5b	       707	clone.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4001e5b	            0xeb00	                           jmp 0x4001e5d	       710	clone.c	FUNCTION_46
0x4001e5d	              0x90	                                     nop	       710	clone.c	FUNCTION_46
0x4001e5e	        0x488b45f8	                mov rax, qword [rbp - 8]	       710	clone.c	FUNCTION_46
0x4001e62	    0x644833042528	                xor rax, qword fs:[0x28]	       710	clone.c	FUNCTION_46
0x4001e6b	            0x7405	                            je 0x4001e72	       710	clone.c	FUNCTION_46
0x4001e6d	      0xe800000000	                          call 0x4001e72	       710	clone.c	FUNCTION_46
0x4001e72	              0xc9	                                   leave	       710	clone.c	FUNCTION_46
0x4001e73	              0xc3	                                     ret	       710	clone.c	FUNCTION_46
find_remote_branch	functions,0:FOR,0:IF,1:WHILE,0:CALL,8:ELSE,0:SWITCH,0:DO,0	58
0x400165f	              0x55	                                push rbp	       529	clone.c	FUNCTION_40
0x4001660	          0x4889e5	                            mov rbp, rsp	       529	clone.c	FUNCTION_40
0x4001663	        0x4883ec40	                           sub rsp, 0x40	       529	clone.c	FUNCTION_40
0x4001667	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       529	clone.c	FUNCTION_40
0x400166b	        0x488975c0	             mov qword [rbp - 0x40], rsi	       529	clone.c	FUNCTION_40
0x400166f	    0x64488b042528	                mov rax, qword fs:[0x28]	       529	clone.c	FUNCTION_40
0x4001678	        0x488945f8	                mov qword [rbp - 8], rax	       529	clone.c	FUNCTION_40
0x400167c	            0x31c0	                            xor eax, eax	       529	clone.c	FUNCTION_40
0x400167e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       531	clone.c	FUNCTION_40
0x4001686	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       531	clone.c	FUNCTION_40
0x400168e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       531	clone.c	FUNCTION_40
0x4001696	        0x488d45e0	                   lea rax, [rbp - 0x20]	       532	clone.c	FUNCTION_40	CALL_1
0x400169a	      0xbe00000000	                              mov esi, 0	       532	clone.c	FUNCTION_40	CALL_1
0x400169f	          0x4889c7	                            mov rdi, rax	       532	clone.c	FUNCTION_40	CALL_1
0x40016a2	      0xe85fecffff	                  call sym.strbuf_addstr	       532	clone.c	FUNCTION_40	CALL_1
0x40016a7	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       533	clone.c	FUNCTION_40	CALL_2
0x40016ab	        0x488d45e0	                   lea rax, [rbp - 0x20]	       533	clone.c	FUNCTION_40	CALL_2
0x40016af	          0x4889d6	                            mov rsi, rdx	       533	clone.c	FUNCTION_40	CALL_2
0x40016b2	          0x4889c7	                            mov rdi, rax	       533	clone.c	FUNCTION_40	CALL_2
0x40016b5	      0xe84cecffff	                  call sym.strbuf_addstr	       533	clone.c	FUNCTION_40	CALL_2
0x40016ba	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       534	clone.c	FUNCTION_40	CALL_3
0x40016be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       534	clone.c	FUNCTION_40	CALL_3
0x40016c2	          0x4889d6	                            mov rsi, rdx	       534	clone.c	FUNCTION_40	CALL_3
0x40016c5	          0x4889c7	                            mov rdi, rax	       534	clone.c	FUNCTION_40	CALL_3
0x40016c8	      0xe800000000	                          call 0x40016cd	       534	clone.c	FUNCTION_40	CALL_3
0x40016cd	        0x488945d8	             mov qword [rbp - 0x28], rax	       534	clone.c	FUNCTION_40	CALL_3
0x40016d1	        0x488d45e0	                   lea rax, [rbp - 0x20]	       535	clone.c	FUNCTION_40	CALL_4
0x40016d5	          0x4889c7	                            mov rdi, rax	       535	clone.c	FUNCTION_40	CALL_4
0x40016d8	      0xe800000000	                          call 0x40016dd	       535	clone.c	FUNCTION_40	CALL_4
0x40016dd	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       537	clone.c	FUNCTION_40	IF_1
0x40016e2	            0x7406	                            je 0x40016ea	       537	clone.c	FUNCTION_40	IF_1
0x40016e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       538	clone.c	FUNCTION_40	IF_1
0x40016e8	            0xeb4b	                           jmp 0x4001735	       538	clone.c	FUNCTION_40	IF_1
0x40016ea	        0x488d45e0	                   lea rax, [rbp - 0x20]	       540	clone.c	FUNCTION_40	CALL_5
0x40016ee	      0xbe00000000	                              mov esi, 0	       540	clone.c	FUNCTION_40	CALL_5
0x40016f3	          0x4889c7	                            mov rdi, rax	       540	clone.c	FUNCTION_40	CALL_5
0x40016f6	      0xe80becffff	                  call sym.strbuf_addstr	       540	clone.c	FUNCTION_40	CALL_5
0x40016fb	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       541	clone.c	FUNCTION_40	CALL_6
0x40016ff	        0x488d45e0	                   lea rax, [rbp - 0x20]	       541	clone.c	FUNCTION_40	CALL_6
0x4001703	          0x4889d6	                            mov rsi, rdx	       541	clone.c	FUNCTION_40	CALL_6
0x4001706	          0x4889c7	                            mov rdi, rax	       541	clone.c	FUNCTION_40	CALL_6
0x4001709	      0xe8f8ebffff	                  call sym.strbuf_addstr	       541	clone.c	FUNCTION_40	CALL_6
0x400170e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       542	clone.c	FUNCTION_40	CALL_7
0x4001712	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       542	clone.c	FUNCTION_40	CALL_7
0x4001716	          0x4889d6	                            mov rsi, rdx	       542	clone.c	FUNCTION_40	CALL_7
0x4001719	          0x4889c7	                            mov rdi, rax	       542	clone.c	FUNCTION_40	CALL_7
0x400171c	      0xe800000000	                          call 0x4001721	       542	clone.c	FUNCTION_40	CALL_7
0x4001721	        0x488945d8	             mov qword [rbp - 0x28], rax	       542	clone.c	FUNCTION_40	CALL_7
0x4001725	        0x488d45e0	                   lea rax, [rbp - 0x20]	       543	clone.c	FUNCTION_40	CALL_8
0x4001729	          0x4889c7	                            mov rdi, rax	       543	clone.c	FUNCTION_40	CALL_8
0x400172c	      0xe800000000	                          call 0x4001731	       543	clone.c	FUNCTION_40	CALL_8
0x4001731	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       545	clone.c	FUNCTION_40
0x4001735	        0x488b4df8	                mov rcx, qword [rbp - 8]	       546	clone.c	FUNCTION_40
0x4001739	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       546	clone.c	FUNCTION_40
0x4001742	            0x7405	                            je 0x4001749	       546	clone.c	FUNCTION_40
0x4001744	      0xe800000000	                          call 0x4001749	       546	clone.c	FUNCTION_40
0x4001749	              0xc9	                                   leave	       546	clone.c	FUNCTION_40
0x400174a	              0xc3	                                     ret	       546	clone.c	FUNCTION_40
_	functions,0:FOR,0:IF,1:WHILE,0:CALL,0:ELSE,0:SWITCH,0:DO,0	15
0x400033b	              0x55	                                push rbp	        51	gettext.h	FUNCTION_95
0x400033c	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_95
0x400033f	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_95
0x4000343	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_95
0x4000347	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_95	IF_1
0x400034b	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_95	IF_1
0x400034e	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_95	IF_1
0x4000350	            0x7507	                           jne 0x4000359	        52	gettext.h	FUNCTION_95	IF_1
0x4000352	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_95	IF_1
0x4000357	            0xeb0c	                           jmp 0x4000365	        53	gettext.h	FUNCTION_95	IF_1
0x4000359	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_95
0x400035d	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_95
0x4000360	      0xe800000000	                          call 0x4000365	        54	gettext.h	FUNCTION_95
0x4000365	              0xc9	                                   leave	        55	gettext.h	FUNCTION_95
0x4000366	              0xc3	                                     ret	        55	gettext.h	FUNCTION_95
oidcpy	functions,0:FOR,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:DO,0	13
0x40003e3	              0x55	                                push rbp	       999	cache.h	FUNCTION_13
0x40003e4	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_13
0x40003e7	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_13
0x40003eb	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_13
0x40003ef	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_13
0x40003f3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_13	CALL_1
0x40003f7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_13	CALL_1
0x40003fb	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_13	CALL_1
0x40003fe	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_13	CALL_1
0x4000401	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_13	CALL_1
0x4000406	              0x90	                                     nop	      1001	cache.h	FUNCTION_13
0x4000407	              0xc9	                                   leave	      1001	cache.h	FUNCTION_13
0x4000408	              0xc3	                                     ret	      1001	cache.h	FUNCTION_13
is_absolute_path	functions,0:FOR,0:IF,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0:DO,0	21
0x4000409	              0x55	                                push rbp	      1153	cache.h	FUNCTION_21
0x400040a	          0x4889e5	                            mov rbp, rsp	      1153	cache.h	FUNCTION_21
0x400040d	        0x4883ec08	                              sub rsp, 8	      1153	cache.h	FUNCTION_21
0x4000411	        0x48897df8	                mov qword [rbp - 8], rdi	      1153	cache.h	FUNCTION_21
0x4000415	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	cache.h	FUNCTION_21
0x4000419	           0xfb600	                   movzx eax, byte [rax]	      1154	cache.h	FUNCTION_21
0x400041c	           0xfbec0	                           movsx eax, al	      1154	cache.h	FUNCTION_21
0x400041f	            0x89c7	                            mov edi, eax	      1154	cache.h	FUNCTION_21
0x4000421	      0xe829fcffff	                 call sym.git_is_dir_sep	      1154	cache.h	FUNCTION_21
0x4000426	            0x85c0	                           test eax, eax	      1154	cache.h	FUNCTION_21
0x4000428	            0x7510	                           jne 0x400043a	      1154	cache.h	FUNCTION_21
0x400042a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	cache.h	FUNCTION_21
0x400042e	          0x4889c7	                            mov rdi, rax	      1154	cache.h	FUNCTION_21
0x4000431	      0xe80afcffff	       call sym.git_has_dos_drive_prefix	      1154	cache.h	FUNCTION_21
0x4000436	            0x85c0	                           test eax, eax	      1154	cache.h	FUNCTION_21
0x4000438	            0x7407	                            je 0x4000441	      1154	cache.h	FUNCTION_21
0x400043a	      0xb801000000	                              mov eax, 1	      1154	cache.h	FUNCTION_21
0x400043f	            0xeb05	                           jmp 0x4000446	      1154	cache.h	FUNCTION_21
0x4000441	      0xb800000000	                              mov eax, 0	      1154	cache.h	FUNCTION_21
0x4000446	              0xc9	                                   leave	      1155	cache.h	FUNCTION_21
0x4000447	              0xc3	                                     ret	      1155	cache.h	FUNCTION_21
dissociate_from_references	functions,0:FOR,0:IF,3:WHILE,0:CALL,9:ELSE,0:SWITCH,0:DO,0	43
0x4002563	              0x55	                                push rbp	       859	clone.c	FUNCTION_51
0x4002564	          0x4889e5	                            mov rbp, rsp	       859	clone.c	FUNCTION_51
0x4002567	        0x4883ec10	                           sub rsp, 0x10	       859	clone.c	FUNCTION_51
0x400256b	      0xbf00000000	                              mov edi, 0	       861	clone.c	FUNCTION_51	CALL_1
0x4002570	      0xb800000000	                              mov eax, 0	       861	clone.c	FUNCTION_51	CALL_1
0x4002575	      0xe800000000	                          call 0x400257a	       861	clone.c	FUNCTION_51	CALL_1
0x400257a	        0x488945f8	                mov qword [rbp - 8], rax	       861	clone.c	FUNCTION_51	CALL_1
0x400257e	        0x488b45f8	                mov rax, qword [rbp - 8]	       863	clone.c	FUNCTION_51	IF_1	CALL_2
0x4002582	      0xbe00000000	                              mov esi, 0	       863	clone.c	FUNCTION_51	IF_1	CALL_2
0x4002587	          0x4889c7	                            mov rdi, rax	       863	clone.c	FUNCTION_51	IF_1	CALL_2
0x400258a	      0xe800000000	                          call 0x400258f	       863	clone.c	FUNCTION_51	IF_1	CALL_2
0x400258f	            0x85c0	                           test eax, eax	       863	clone.c	FUNCTION_51	IF_1	CALL_2
0x4002591	            0x755d	                           jne 0x40025f0	       863	clone.c	FUNCTION_51	IF_1	CALL_2
0x4002593	      0xbe03000000	                              mov esi, 3	       864	clone.c	FUNCTION_51	IF_1	IF_2	CALL_3
0x4002598	      0xbf00000000	                              mov edi, 0	       864	clone.c	FUNCTION_51	IF_1	IF_2	CALL_3
0x400259d	      0xe800000000	                          call 0x40025a2	       864	clone.c	FUNCTION_51	IF_1	IF_2	CALL_3
0x40025a2	            0x85c0	                           test eax, eax	       864	clone.c	FUNCTION_51	IF_1	IF_2	CALL_3
0x40025a4	            0x7417	                            je 0x40025bd	       864	clone.c	FUNCTION_51	IF_1	IF_2	CALL_3
0x40025a6	      0xbf00000000	                              mov edi, 0	       865	clone.c	FUNCTION_51	IF_1	CALL_5
0x40025ab	      0xe88bddffff	                               call sym.	       865	clone.c	FUNCTION_51	IF_1	CALL_5
0x40025b0	          0x4889c7	                            mov rdi, rax	       865	clone.c	FUNCTION_51	IF_1	CALL_5
0x40025b3	      0xb800000000	                              mov eax, 0	       865	clone.c	FUNCTION_51	IF_1	CALL_5
0x40025b8	      0xe800000000	                          call 0x40025bd	       865	clone.c	FUNCTION_51	IF_1	CALL_5
0x40025bd	        0x488b45f8	                mov rax, qword [rbp - 8]	       866	clone.c	FUNCTION_51	IF_1	IF_3	CALL_6
0x40025c1	          0x4889c7	                            mov rdi, rax	       866	clone.c	FUNCTION_51	IF_1	IF_3	CALL_6
0x40025c4	      0xe800000000	                          call 0x40025c9	       866	clone.c	FUNCTION_51	IF_1	IF_3	CALL_6
0x40025c9	            0x85c0	                           test eax, eax	       866	clone.c	FUNCTION_51	IF_1	IF_3	CALL_6
0x40025cb	            0x7423	                            je 0x40025f0	       866	clone.c	FUNCTION_51	IF_1	IF_3	CALL_6
0x40025cd	      0xe800000000	                          call 0x40025d2	       866	clone.c	FUNCTION_51	IF_1	IF_3	CALL_6
0x40025d2	            0x8b00	                    mov eax, dword [rax]	       866	clone.c	FUNCTION_51	IF_1	IF_3	CALL_6
0x40025d4	          0x83f802	                              cmp eax, 2	       866	clone.c	FUNCTION_51	IF_1	IF_3	CALL_6
0x40025d7	            0x7417	                            je 0x40025f0	       866	clone.c	FUNCTION_51	IF_1	IF_3	CALL_6
0x40025d9	      0xbf00000000	                              mov edi, 0	       867	clone.c	FUNCTION_51	IF_1	CALL_8
0x40025de	      0xe858ddffff	                               call sym.	       867	clone.c	FUNCTION_51	IF_1	CALL_8
0x40025e3	          0x4889c7	                            mov rdi, rax	       867	clone.c	FUNCTION_51	IF_1	CALL_8
0x40025e6	      0xb800000000	                              mov eax, 0	       867	clone.c	FUNCTION_51	IF_1	CALL_8
0x40025eb	      0xe800000000	                          call 0x40025f0	       867	clone.c	FUNCTION_51	IF_1	CALL_8
0x40025f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       869	clone.c	FUNCTION_51	CALL_9
0x40025f4	          0x4889c7	                            mov rdi, rax	       869	clone.c	FUNCTION_51	CALL_9
0x40025f7	      0xe800000000	                          call 0x40025fc	       869	clone.c	FUNCTION_51	CALL_9
0x40025fc	              0x90	                                     nop	       870	clone.c	FUNCTION_51
0x40025fd	              0xc9	                                   leave	       870	clone.c	FUNCTION_51
0x40025fe	              0xc3	                                     ret	       870	clone.c	FUNCTION_51
strbuf_avail	functions,0:FOR,0:IF,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0:DO,0	18
0x40001c8	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_55
0x40001c9	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_55
0x40001cc	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_55
0x40001d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_55
0x40001d4	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_55
0x40001d7	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x40001da	            0x741b	                            je 0x40001f7	       141	strbuf.h	FUNCTION_55
0x40001dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_55
0x40001e0	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_55
0x40001e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_55
0x40001e7	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_55
0x40001eb	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_55
0x40001ee	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_55
0x40001f1	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_55
0x40001f5	            0xeb05	                           jmp 0x40001fc	       141	strbuf.h	FUNCTION_55
0x40001f7	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_55
0x40001fc	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_55
0x40001fd	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_55
hashcmp	functions,0:FOR,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:DO,0	13
0x4000367	              0x55	                                push rbp	       974	cache.h	FUNCTION_8
0x4000368	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_8
0x400036b	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_8
0x400036f	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_8
0x4000373	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_8
0x4000377	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_8	CALL_1
0x400037b	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_8	CALL_1
0x400037f	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_8	CALL_1
0x4000384	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_8	CALL_1
0x4000387	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_8	CALL_1
0x400038a	      0xe800000000	                          call 0x400038f	       975	cache.h	FUNCTION_8	CALL_1
0x400038f	              0xc9	                                   leave	       976	cache.h	FUNCTION_8
0x4000390	              0xc3	                                     ret	       976	cache.h	FUNCTION_8
hashcpy	functions,0:FOR,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:DO,0	14
0x40003b8	              0x55	                                push rbp	       994	cache.h	FUNCTION_12
0x40003b9	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_12
0x40003bc	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_12
0x40003c0	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_12
0x40003c4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_12
0x40003c8	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_12	CALL_1
0x40003cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_12	CALL_1
0x40003d0	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_12	CALL_1
0x40003d5	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_12	CALL_1
0x40003d8	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_12	CALL_1
0x40003db	      0xe800000000	                          call 0x40003e0	       995	cache.h	FUNCTION_12	CALL_1
0x40003e0	              0x90	                                     nop	       996	cache.h	FUNCTION_12
0x40003e1	              0xc9	                                   leave	       996	cache.h	FUNCTION_12
0x40003e2	              0xc3	                                     ret	       996	cache.h	FUNCTION_12
recurse_submodules_cb	functions,0:FOR,0:IF,2:WHILE,0:CALL,3:ELSE,2:SWITCH,0:DO,0	34
0x4000467	              0x55	                                push rbp	        69	clone.c	IF_9	FUNCTION_28
0x4000468	          0x4889e5	                            mov rbp, rsp	        69	clone.c	IF_9	FUNCTION_28
0x400046b	        0x4883ec20	                           sub rsp, 0x20	        69	clone.c	IF_9	FUNCTION_28
0x400046f	        0x48897df8	                mov qword [rbp - 8], rdi	        69	clone.c	IF_9	FUNCTION_28
0x4000473	        0x488975f0	             mov qword [rbp - 0x10], rsi	        69	clone.c	IF_9	FUNCTION_28
0x4000477	          0x8955ec	             mov dword [rbp - 0x14], edx	        69	clone.c	IF_9	FUNCTION_28
0x400047a	        0x837dec00	               cmp dword [rbp - 0x14], 0	        70	clone.c	IF_9	FUNCTION_28	IF_1
0x400047e	            0x7417	                            je 0x4000497	        70	clone.c	IF_9	FUNCTION_28	IF_1
0x4000480	        0x488b45f8	                mov rax, qword [rbp - 8]	        71	clone.c	IF_9	FUNCTION_28	CALL_1
0x4000484	        0x488b4010	            mov rax, qword [rax + 0x10] 	        71	clone.c	IF_9	FUNCTION_28	CALL_1
0x4000488	      0xbe00000000	                              mov esi, 0	        71	clone.c	IF_9	FUNCTION_28	CALL_1
0x400048d	          0x4889c7	                            mov rdi, rax	        71	clone.c	IF_9	FUNCTION_28	CALL_1
0x4000490	      0xe800000000	                          call 0x4000495	        71	clone.c	IF_9	FUNCTION_28	CALL_1
0x4000495	            0xeb3e	                           jmp 0x40004d5	        71	clone.c	IF_9	FUNCTION_28	CALL_1
0x4000497	      0x48837df000	               cmp qword [rbp - 0x10], 0	        72	clone.c	IF_9	FUNCTION_28	ELSE_1	IF_2
0x400049c	            0x7419	                            je 0x40004b7	        72	clone.c	IF_9	FUNCTION_28	ELSE_1	IF_2
0x400049e	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	clone.c	IF_9	FUNCTION_28	ELSE_1	IF_2
0x40004a2	        0x488b4010	            mov rax, qword [rax + 0x10] 	        73	clone.c	IF_9	FUNCTION_28	ELSE_1	IF_2
0x40004a6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        73	clone.c	IF_9	FUNCTION_28	ELSE_1	IF_2
0x40004aa	          0x4889d6	                            mov rsi, rdx	        73	clone.c	IF_9	FUNCTION_28	ELSE_1	IF_2
0x40004ad	          0x4889c7	                            mov rdi, rax	        73	clone.c	IF_9	FUNCTION_28	ELSE_1	IF_2
0x40004b0	      0xe800000000	                          call 0x40004b5	        73	clone.c	IF_9	FUNCTION_28	ELSE_1	IF_2
0x40004b5	            0xeb1e	                           jmp 0x40004d5	        73	clone.c	IF_9	FUNCTION_28	ELSE_1	IF_2
0x40004b7	        0x488b45f8	                mov rax, qword [rbp - 8]	        76	clone.c	IF_9	FUNCTION_28	ELSE_2
0x40004bb	        0x488b4038	            mov rax, qword [rax + 0x38] 	        76	clone.c	IF_9	FUNCTION_28	ELSE_2
0x40004bf	          0x4889c2	                            mov rdx, rax	        75	clone.c	IF_9	FUNCTION_28	ELSE_2	CALL_3
0x40004c2	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	clone.c	IF_9	FUNCTION_28	ELSE_2	CALL_3
0x40004c6	        0x488b4010	            mov rax, qword [rax + 0x10] 	        75	clone.c	IF_9	FUNCTION_28	ELSE_2	CALL_3
0x40004ca	          0x4889d6	                            mov rsi, rdx	        75	clone.c	IF_9	FUNCTION_28	ELSE_2	CALL_3
0x40004cd	          0x4889c7	                            mov rdi, rax	        75	clone.c	IF_9	FUNCTION_28	ELSE_2	CALL_3
0x40004d0	      0xe800000000	                          call 0x40004d5	        75	clone.c	IF_9	FUNCTION_28	ELSE_2	CALL_3
0x40004d5	      0xb800000000	                              mov eax, 0	        78	clone.c	IF_9	FUNCTION_28
0x40004da	              0xc9	                                   leave	        79	clone.c	IF_9	FUNCTION_28
0x40004db	              0xc3	                                     ret	        79	clone.c	IF_9	FUNCTION_28
git_is_dir_sep	functions,0:FOR,0:IF,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0:DO,0	8
0x400004f	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_68
0x4000050	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_68
0x4000053	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_68
0x4000056	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_68
0x400005a	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_68
0x400005d	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_68
0x4000060	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_68
0x4000061	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_68
strbuf_addch	functions,0:FOR,0:IF,1:WHILE,0:CALL,2:ELSE,0:SWITCH,0:DO,0	33
0x4000298	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_57
0x4000299	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_57
0x400029c	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_57
0x40002a0	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_57
0x40002a4	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_57
0x40002a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40002ab	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40002ae	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40002b3	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40002b6	            0x7511	                           jne 0x40002c9	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x40002b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x40002bc	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x40002c1	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_57	CALL_2
0x40002c4	      0xe800000000	                          call 0x40002c9	       228	strbuf.h	FUNCTION_57	CALL_2
0x40002c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_57
0x40002cd	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_57
0x40002d1	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_57
0x40002d5	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_57
0x40002d9	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_57
0x40002dd	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_57
0x40002e1	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_57
0x40002e5	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_57
0x40002e8	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_57
0x40002eb	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_57
0x40002ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_57
0x40002f1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_57
0x40002f5	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_57
0x40002f9	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_57
0x40002fd	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_57
0x4000300	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_57
0x4000303	              0x90	                                     nop	       231	strbuf.h	FUNCTION_57
0x4000304	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_57
0x4000305	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_57
iterate_ref_map	functions,0:FOR,0:IF,1:WHILE,1:CALL,1:ELSE,0:SWITCH,0:DO,0	37
0x4001ada	              0x55	                                push rbp	       626	clone.c	FUNCTION_44
0x4001adb	          0x4889e5	                            mov rbp, rsp	       626	clone.c	FUNCTION_44
0x4001ade	        0x4883ec20	                           sub rsp, 0x20	       626	clone.c	FUNCTION_44
0x4001ae2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       626	clone.c	FUNCTION_44
0x4001ae6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       626	clone.c	FUNCTION_44
0x4001aea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       627	clone.c	FUNCTION_44
0x4001aee	        0x488945f8	                mov qword [rbp - 8], rax	       627	clone.c	FUNCTION_44
0x4001af2	        0x488b45f8	                mov rax, qword [rbp - 8]	       628	clone.c	FUNCTION_44
0x4001af6	          0x488b00	                    mov rax, qword [rax]	       628	clone.c	FUNCTION_44
0x4001af9	        0x488945f0	             mov qword [rbp - 0x10], rax	       628	clone.c	FUNCTION_44
0x4001afd	            0xeb0b	                           jmp 0x4001b0a	       634	clone.c	FUNCTION_44	WHILE_1
0x4001aff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       635	clone.c	FUNCTION_44	WHILE_1
0x4001b03	          0x488b00	                    mov rax, qword [rax]	       635	clone.c	FUNCTION_44	WHILE_1
0x4001b06	        0x488945f0	             mov qword [rbp - 0x10], rax	       635	clone.c	FUNCTION_44	WHILE_1
0x4001b0a	      0x48837df000	               cmp qword [rbp - 0x10], 0	       634	clone.c	FUNCTION_44	WHILE_1
0x4001b0f	            0x740d	                            je 0x4001b1e	       634	clone.c	FUNCTION_44	WHILE_1
0x4001b11	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       634	clone.c	FUNCTION_44	WHILE_1
0x4001b15	        0x488b4068	            mov rax, qword [rax + 0x68] 	       634	clone.c	FUNCTION_44	WHILE_1
0x4001b19	          0x4885c0	                           test rax, rax	       634	clone.c	FUNCTION_44	WHILE_1
0x4001b1c	            0x74e1	                            je 0x4001aff	       634	clone.c	FUNCTION_44	WHILE_1
0x4001b1e	      0x48837df000	               cmp qword [rbp - 0x10], 0	       637	clone.c	FUNCTION_44	IF_1
0x4001b23	            0x7507	                           jne 0x4001b2c	       637	clone.c	FUNCTION_44	IF_1
0x4001b25	      0xb8ffffffff	                     mov eax, 0xffffffff	       638	clone.c	FUNCTION_44	IF_1
0x4001b2a	            0xeb2a	                           jmp 0x4001b56	       638	clone.c	FUNCTION_44	IF_1
0x4001b2c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       640	clone.c	FUNCTION_44	CALL_1
0x4001b30	        0x488d5008	                      lea rdx, [rax + 8]	       640	clone.c	FUNCTION_44	CALL_1
0x4001b34	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       640	clone.c	FUNCTION_44	CALL_1
0x4001b38	          0x4889d6	                            mov rsi, rdx	       640	clone.c	FUNCTION_44	CALL_1
0x4001b3b	          0x4889c7	                            mov rdi, rax	       640	clone.c	FUNCTION_44	CALL_1
0x4001b3e	      0xe8a0e8ffff	                         call sym.oidcpy	       640	clone.c	FUNCTION_44	CALL_1
0x4001b43	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       641	clone.c	FUNCTION_44
0x4001b47	          0x488b10	                    mov rdx, qword [rax]	       641	clone.c	FUNCTION_44
0x4001b4a	        0x488b45f8	                mov rax, qword [rbp - 8]	       641	clone.c	FUNCTION_44
0x4001b4e	          0x488910	                    mov qword [rax], rdx	       641	clone.c	FUNCTION_44
0x4001b51	      0xb800000000	                              mov eax, 0	       642	clone.c	FUNCTION_44
0x4001b56	              0xc9	                                   leave	       643	clone.c	FUNCTION_44
0x4001b57	              0xc3	                                     ret	       643	clone.c	FUNCTION_44
copy_alternates	functions,0:FOR,0:IF,3:WHILE,1:CALL,11:ELSE,1:SWITCH,0:DO,0	83
0x4000e30	              0x55	                                push rbp	       356	clone.c	FUNCTION_35
0x4000e31	          0x4889e5	                            mov rbp, rsp	       356	clone.c	FUNCTION_35
0x4000e34	        0x4883ec50	                           sub rsp, 0x50	       356	clone.c	FUNCTION_35
0x4000e38	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       356	clone.c	FUNCTION_35
0x4000e3c	        0x488975c0	             mov qword [rbp - 0x40], rsi	       356	clone.c	FUNCTION_35
0x4000e40	        0x488955b8	             mov qword [rbp - 0x48], rdx	       356	clone.c	FUNCTION_35
0x4000e44	    0x64488b042528	                mov rax, qword fs:[0x28]	       356	clone.c	FUNCTION_35
0x4000e4d	        0x488945f8	                mov qword [rbp - 8], rax	       356	clone.c	FUNCTION_35
0x4000e51	            0x31c0	                            xor eax, eax	       356	clone.c	FUNCTION_35
0x4000e53	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       369	clone.c	FUNCTION_35	CALL_1
0x4000e57	        0x488b4010	            mov rax, qword [rax + 0x10] 	       369	clone.c	FUNCTION_35	CALL_1
0x4000e5b	      0xbe00000000	                              mov esi, 0	       369	clone.c	FUNCTION_35	CALL_1
0x4000e60	          0x4889c7	                            mov rdi, rax	       369	clone.c	FUNCTION_35	CALL_1
0x4000e63	      0xe800000000	                          call 0x4000e68	       369	clone.c	FUNCTION_35	CALL_1
0x4000e68	        0x488945d0	             mov qword [rbp - 0x30], rax	       369	clone.c	FUNCTION_35	CALL_1
0x4000e6c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       370	clone.c	FUNCTION_35
0x4000e74	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       370	clone.c	FUNCTION_35
0x4000e7c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       370	clone.c	FUNCTION_35
0x4000e84	      0xe9a4000000	                           jmp 0x4000f2d	       372	clone.c	FUNCTION_35	WHILE_1	CALL_2
0x4000e89	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       374	clone.c	FUNCTION_35	WHILE_1	IF_1
0x4000e8d	          0x4885c0	                           test rax, rax	       374	clone.c	FUNCTION_35	WHILE_1	IF_1
0x4000e90	     0xf8497000000	                            je 0x4000f2d	       374	clone.c	FUNCTION_35	WHILE_1	IF_1
0x4000e96	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       374	clone.c	FUNCTION_35	WHILE_1	IF_1
0x4000e9a	           0xfb600	                   movzx eax, byte [rax]	       374	clone.c	FUNCTION_35	WHILE_1	IF_1
0x4000e9d	            0x3c23	                            cmp al, 0x23	       374	clone.c	FUNCTION_35	WHILE_1	IF_1
0x4000e9f	            0x7505	                           jne 0x4000ea6	       374	clone.c	FUNCTION_35	WHILE_1	IF_1
0x4000ea1	      0xe987000000	                           jmp 0x4000f2d	       375	clone.c	FUNCTION_35	WHILE_1	IF_1
0x4000ea6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       376	clone.c	FUNCTION_35	WHILE_1	IF_2	CALL_3
0x4000eaa	          0x4889c7	                            mov rdi, rax	       376	clone.c	FUNCTION_35	WHILE_1	IF_2	CALL_3
0x4000ead	      0xe857f5ffff	               call sym.is_absolute_path	       376	clone.c	FUNCTION_35	WHILE_1	IF_2	CALL_3
0x4000eb2	            0x85c0	                           test eax, eax	       376	clone.c	FUNCTION_35	WHILE_1	IF_2	CALL_3
0x4000eb4	            0x740e	                            je 0x4000ec4	       376	clone.c	FUNCTION_35	WHILE_1	IF_2	CALL_3
0x4000eb6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       377	clone.c	FUNCTION_35	WHILE_1	IF_2	CALL_4
0x4000eba	          0x4889c7	                            mov rdi, rax	       377	clone.c	FUNCTION_35	WHILE_1	IF_2	CALL_4
0x4000ebd	      0xe800000000	                          call 0x4000ec2	       377	clone.c	FUNCTION_35	WHILE_1	IF_2	CALL_4
0x4000ec2	            0xeb69	                           jmp 0x4000f2d	       378	clone.c	FUNCTION_35	WHILE_1	IF_2
0x4000ec4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       380	clone.c	FUNCTION_35	WHILE_1	CALL_5
0x4000ec8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       380	clone.c	FUNCTION_35	WHILE_1	CALL_5
0x4000ecc	          0x4889c6	                            mov rsi, rax	       380	clone.c	FUNCTION_35	WHILE_1	CALL_5
0x4000ecf	      0xbf00000000	                              mov edi, 0	       380	clone.c	FUNCTION_35	WHILE_1	CALL_5
0x4000ed4	      0xb800000000	                              mov eax, 0	       380	clone.c	FUNCTION_35	WHILE_1	CALL_5
0x4000ed9	      0xe800000000	                          call 0x4000ede	       380	clone.c	FUNCTION_35	WHILE_1	CALL_5
0x4000ede	        0x488945d8	             mov qword [rbp - 0x28], rax	       380	clone.c	FUNCTION_35	WHILE_1	CALL_5
0x4000ee2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       381	clone.c	FUNCTION_35	WHILE_1	IF_3	CALL_6
0x4000ee6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       381	clone.c	FUNCTION_35	WHILE_1	IF_3	CALL_6
0x4000eea	          0x4889d6	                            mov rsi, rdx	       381	clone.c	FUNCTION_35	WHILE_1	IF_3	CALL_6
0x4000eed	          0x4889c7	                            mov rdi, rax	       381	clone.c	FUNCTION_35	WHILE_1	IF_3	CALL_6
0x4000ef0	      0xe800000000	                          call 0x4000ef5	       381	clone.c	FUNCTION_35	WHILE_1	IF_3	CALL_6
0x4000ef5	            0x85c0	                           test eax, eax	       381	clone.c	FUNCTION_35	WHILE_1	IF_3	CALL_6
0x4000ef7	            0x750e	                           jne 0x4000f07	       381	clone.c	FUNCTION_35	WHILE_1	IF_3	CALL_6
0x4000ef9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       382	clone.c	FUNCTION_35	WHILE_1	CALL_7
0x4000efd	          0x4889c7	                            mov rdi, rax	       382	clone.c	FUNCTION_35	WHILE_1	CALL_7
0x4000f00	      0xe800000000	                          call 0x4000f05	       382	clone.c	FUNCTION_35	WHILE_1	CALL_7
0x4000f05	            0xeb1a	                           jmp 0x4000f21	       382	clone.c	FUNCTION_35	WHILE_1	CALL_7
0x4000f07	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       384	clone.c	FUNCTION_35	WHILE_1	ELSE_1	CALL_8
0x4000f0b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       384	clone.c	FUNCTION_35	WHILE_1	ELSE_1	CALL_8
0x4000f0f	          0x4889c6	                            mov rsi, rax	       384	clone.c	FUNCTION_35	WHILE_1	ELSE_1	CALL_8
0x4000f12	      0xbf00000000	                              mov edi, 0	       384	clone.c	FUNCTION_35	WHILE_1	ELSE_1	CALL_8
0x4000f17	      0xb800000000	                              mov eax, 0	       384	clone.c	FUNCTION_35	WHILE_1	ELSE_1	CALL_8
0x4000f1c	      0xe800000000	                          call 0x4000f21	       384	clone.c	FUNCTION_35	WHILE_1	ELSE_1	CALL_8
0x4000f21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       386	clone.c	FUNCTION_35	WHILE_1	CALL_9
0x4000f25	          0x4889c7	                            mov rdi, rax	       386	clone.c	FUNCTION_35	WHILE_1	CALL_9
0x4000f28	      0xe800000000	                          call 0x4000f2d	       386	clone.c	FUNCTION_35	WHILE_1	CALL_9
0x4000f2d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       372	clone.c	FUNCTION_35	WHILE_1	CALL_2
0x4000f31	        0x488d45e0	                   lea rax, [rbp - 0x20]	       372	clone.c	FUNCTION_35	WHILE_1	CALL_2
0x4000f35	          0x4889d6	                            mov rsi, rdx	       372	clone.c	FUNCTION_35	WHILE_1	CALL_2
0x4000f38	          0x4889c7	                            mov rdi, rax	       372	clone.c	FUNCTION_35	WHILE_1	CALL_2
0x4000f3b	      0xe800000000	                          call 0x4000f40	       372	clone.c	FUNCTION_35	WHILE_1	CALL_2
0x4000f40	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       372	clone.c	FUNCTION_35	WHILE_1	CALL_2
0x4000f43	     0xf8540ffffff	                           jne 0x4000e89	       372	clone.c	FUNCTION_35	WHILE_1	CALL_2
0x4000f49	        0x488d45e0	                   lea rax, [rbp - 0x20]	       388	clone.c	FUNCTION_35	CALL_10
0x4000f4d	          0x4889c7	                            mov rdi, rax	       388	clone.c	FUNCTION_35	CALL_10
0x4000f50	      0xe800000000	                          call 0x4000f55	       388	clone.c	FUNCTION_35	CALL_10
0x4000f55	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       389	clone.c	FUNCTION_35	CALL_11
0x4000f59	          0x4889c7	                            mov rdi, rax	       389	clone.c	FUNCTION_35	CALL_11
0x4000f5c	      0xe800000000	                          call 0x4000f61	       389	clone.c	FUNCTION_35	CALL_11
0x4000f61	              0x90	                                     nop	       390	clone.c	FUNCTION_35
0x4000f62	        0x488b45f8	                mov rax, qword [rbp - 8]	       390	clone.c	FUNCTION_35
0x4000f66	    0x644833042528	                xor rax, qword fs:[0x28]	       390	clone.c	FUNCTION_35
0x4000f6f	            0x7405	                            je 0x4000f76	       390	clone.c	FUNCTION_35
0x4000f71	      0xe800000000	                          call 0x4000f76	       390	clone.c	FUNCTION_35
0x4000f76	              0xc9	                                   leave	       390	clone.c	FUNCTION_35
0x4000f77	              0xc3	                                     ret	       390	clone.c	FUNCTION_35
write_followtags	functions,0:FOR,1:IF,3:WHILE,0:CALL,4:ELSE,0:SWITCH,0:DO,0	52
0x4001a28	              0x55	                                push rbp	       611	clone.c	FUNCTION_43
0x4001a29	          0x4889e5	                            mov rbp, rsp	       611	clone.c	FUNCTION_43
0x4001a2c	        0x4883ec20	                           sub rsp, 0x20	       611	clone.c	FUNCTION_43
0x4001a30	        0x48897de8	             mov qword [rbp - 0x18], rdi	       611	clone.c	FUNCTION_43
0x4001a34	        0x488975e0	             mov qword [rbp - 0x20], rsi	       611	clone.c	FUNCTION_43
0x4001a38	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       613	clone.c	FUNCTION_43	FOR_1
0x4001a3c	        0x488945f8	                mov qword [rbp - 8], rax	       613	clone.c	FUNCTION_43	FOR_1
0x4001a40	      0xe987000000	                           jmp 0x4001acc	       613	clone.c	FUNCTION_43	FOR_1
0x4001a45	        0x488b45f8	                mov rax, qword [rbp - 8]	       614	clone.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001a49	        0x4883c070	                           add rax, 0x70	       614	clone.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001a4d	      0xbe00000000	                              mov esi, 0	       614	clone.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001a52	          0x4889c7	                            mov rdi, rax	       614	clone.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001a55	      0xe800000000	                          call 0x4001a5a	       614	clone.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001a5a	            0x85c0	                           test eax, eax	       614	clone.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001a5c	            0x745c	                            je 0x4001aba	       614	clone.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001a5e	        0x488b45f8	                mov rax, qword [rbp - 8]	       616	clone.c	FUNCTION_43	FOR_1	IF_2	CALL_2
0x4001a62	        0x4883c070	                           add rax, 0x70	       616	clone.c	FUNCTION_43	FOR_1	IF_2	CALL_2
0x4001a66	      0xbe00000000	                              mov esi, 0	       616	clone.c	FUNCTION_43	FOR_1	IF_2	CALL_2
0x4001a6b	          0x4889c7	                            mov rdi, rax	       616	clone.c	FUNCTION_43	FOR_1	IF_2	CALL_2
0x4001a6e	      0xe809e7ffff	                      call sym.ends_with	       616	clone.c	FUNCTION_43	FOR_1	IF_2	CALL_2
0x4001a73	            0x85c0	                           test eax, eax	       616	clone.c	FUNCTION_43	FOR_1	IF_2	CALL_2
0x4001a75	            0x7546	                           jne 0x4001abd	       616	clone.c	FUNCTION_43	FOR_1	IF_2	CALL_2
0x4001a77	        0x488b45f8	                mov rax, qword [rbp - 8]	       618	clone.c	FUNCTION_43	FOR_1	IF_3	CALL_3
0x4001a7b	        0x4883c008	                              add rax, 8	       618	clone.c	FUNCTION_43	FOR_1	IF_3	CALL_3
0x4001a7f	          0x4889c7	                            mov rdi, rax	       618	clone.c	FUNCTION_43	FOR_1	IF_3	CALL_3
0x4001a82	      0xe800000000	                          call 0x4001a87	       618	clone.c	FUNCTION_43	FOR_1	IF_3	CALL_3
0x4001a87	            0x85c0	                           test eax, eax	       618	clone.c	FUNCTION_43	FOR_1	IF_3	CALL_3
0x4001a89	            0x7435	                            je 0x4001ac0	       618	clone.c	FUNCTION_43	FOR_1	IF_3	CALL_3
0x4001a8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       620	clone.c	FUNCTION_43	FOR_1	CALL_4
0x4001a8f	        0x488d5008	                      lea rdx, [rax + 8]	       620	clone.c	FUNCTION_43	FOR_1	CALL_4
0x4001a93	        0x488b45f8	                mov rax, qword [rbp - 8]	       620	clone.c	FUNCTION_43	FOR_1	CALL_4
0x4001a97	        0x488d7070	                   lea rsi, [rax + 0x70]	       620	clone.c	FUNCTION_43	FOR_1	CALL_4
0x4001a9b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       620	clone.c	FUNCTION_43	FOR_1	CALL_4
0x4001a9f	    0x41b901000000	                              mov r9d, 1	       620	clone.c	FUNCTION_43	FOR_1	CALL_4
0x4001aa5	    0x41b800000000	                              mov r8d, 0	       620	clone.c	FUNCTION_43	FOR_1	CALL_4
0x4001aab	      0xb900000000	                              mov ecx, 0	       620	clone.c	FUNCTION_43	FOR_1	CALL_4
0x4001ab0	          0x4889c7	                            mov rdi, rax	       620	clone.c	FUNCTION_43	FOR_1	CALL_4
0x4001ab3	      0xe800000000	                          call 0x4001ab8	       620	clone.c	FUNCTION_43	FOR_1	CALL_4
0x4001ab8	            0xeb07	                           jmp 0x4001ac1	       620	clone.c	FUNCTION_43	FOR_1	CALL_4
0x4001aba	              0x90	                                     nop	       615	clone.c	FUNCTION_43	FOR_1	IF_1
0x4001abb	            0xeb04	                           jmp 0x4001ac1	       615	clone.c	FUNCTION_43	FOR_1	IF_1
0x4001abd	              0x90	                                     nop	       617	clone.c	FUNCTION_43	FOR_1	IF_2
0x4001abe	            0xeb01	                           jmp 0x4001ac1	       617	clone.c	FUNCTION_43	FOR_1	IF_2
0x4001ac0	              0x90	                                     nop	       619	clone.c	FUNCTION_43	FOR_1	IF_3
0x4001ac1	        0x488b45f8	                mov rax, qword [rbp - 8]	       613	clone.c	FUNCTION_43	FOR_1
0x4001ac5	          0x488b00	                    mov rax, qword [rax]	       613	clone.c	FUNCTION_43	FOR_1
0x4001ac8	        0x488945f8	                mov qword [rbp - 8], rax	       613	clone.c	FUNCTION_43	FOR_1
0x4001acc	      0x48837df800	                  cmp qword [rbp - 8], 0	       613	clone.c	FUNCTION_43	FOR_1
0x4001ad1	     0xf856effffff	                           jne 0x4001a45	       613	clone.c	FUNCTION_43	FOR_1
0x4001ad7	              0x90	                                     nop	       623	clone.c	FUNCTION_43
0x4001ad8	              0xc9	                                   leave	       623	clone.c	FUNCTION_43
0x4001ad9	              0xc3	                                     ret	       623	clone.c	FUNCTION_43
guess_dir_name	functions,0:FOR,2:IF,12:WHILE,4:CALL,10:ELSE,3:SWITCH,0:DO,0	291
0x400083a	              0x55	                                push rbp	       206	clone.c	IF_9	FUNCTION_31
0x400083b	          0x4889e5	                            mov rbp, rsp	       206	clone.c	IF_9	FUNCTION_31
0x400083e	        0x4883ec50	                           sub rsp, 0x50	       206	clone.c	IF_9	FUNCTION_31
0x4000842	        0x48897db8	             mov qword [rbp - 0x48], rdi	       206	clone.c	IF_9	FUNCTION_31
0x4000846	          0x8975b4	             mov dword [rbp - 0x4c], esi	       206	clone.c	IF_9	FUNCTION_31
0x4000849	          0x8955b0	             mov dword [rbp - 0x50], edx	       206	clone.c	IF_9	FUNCTION_31
0x400084c	    0x64488b042528	                mov rax, qword fs:[0x28]	       206	clone.c	IF_9	FUNCTION_31
0x4000855	        0x488945f8	                mov qword [rbp - 8], rax	       206	clone.c	IF_9	FUNCTION_31
0x4000859	            0x31c0	                            xor eax, eax	       206	clone.c	IF_9	FUNCTION_31
0x400085b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       207	clone.c	IF_9	FUNCTION_31	CALL_1
0x400085f	          0x4889c7	                            mov rdi, rax	       207	clone.c	IF_9	FUNCTION_31	CALL_1
0x4000862	      0xe800000000	                          call 0x4000867	       207	clone.c	IF_9	FUNCTION_31	CALL_1
0x4000867	          0x4889c2	                            mov rdx, rax	       207	clone.c	IF_9	FUNCTION_31	CALL_1
0x400086a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       207	clone.c	IF_9	FUNCTION_31	CALL_1
0x400086e	          0x4801d0	                            add rax, rdx	       207	clone.c	IF_9	FUNCTION_31	CALL_1
0x4000871	        0x488945d0	             mov qword [rbp - 0x30], rax	       207	clone.c	IF_9	FUNCTION_31	CALL_1
0x4000875	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       214	clone.c	IF_9	FUNCTION_31	CALL_2
0x4000879	      0xbe00000000	                              mov esi, 0	       214	clone.c	IF_9	FUNCTION_31	CALL_2
0x400087e	          0x4889c7	                            mov rdi, rax	       214	clone.c	IF_9	FUNCTION_31	CALL_2
0x4000881	      0xe800000000	                          call 0x4000886	       214	clone.c	IF_9	FUNCTION_31	CALL_2
0x4000886	        0x488945d8	             mov qword [rbp - 0x28], rax	       214	clone.c	IF_9	FUNCTION_31	CALL_2
0x400088a	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       215	clone.c	IF_9	FUNCTION_31	IF_1
0x400088f	            0x750a	                           jne 0x400089b	       215	clone.c	IF_9	FUNCTION_31	IF_1
0x4000891	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       216	clone.c	IF_9	FUNCTION_31	IF_1
0x4000895	        0x488945d8	             mov qword [rbp - 0x28], rax	       216	clone.c	IF_9	FUNCTION_31	IF_1
0x4000899	            0xeb05	                           jmp 0x40008a0	       216	clone.c	IF_9	FUNCTION_31	IF_1
0x400089b	      0x488345d803	               add qword [rbp - 0x28], 3	       218	clone.c	IF_9	FUNCTION_31	ELSE_1
0x40008a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       225	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1
0x40008a4	        0x488945e0	             mov qword [rbp - 0x20], rax	       225	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1
0x40008a8	            0xeb1c	                           jmp 0x40008c6	       225	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1
0x40008aa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       226	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1	IF_2
0x40008ae	           0xfb600	                   movzx eax, byte [rax]	       226	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1	IF_2
0x40008b1	            0x3c40	                            cmp al, 0x40	       226	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1	IF_2
0x40008b3	            0x750c	                           jne 0x40008c1	       226	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1	IF_2
0x40008b5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       227	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1	IF_2
0x40008b9	        0x4883c001	                              add rax, 1	       227	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1	IF_2
0x40008bd	        0x488945d8	             mov qword [rbp - 0x28], rax	       227	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1	IF_2
0x40008c1	      0x488345e001	               add qword [rbp - 0x20], 1	       225	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1
0x40008c6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       225	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1
0x40008ca	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       225	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1
0x40008ce	            0x731c	                           jae 0x40008ec	       225	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1
0x40008d0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       225	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1
0x40008d4	           0xfb600	                   movzx eax, byte [rax]	       225	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1
0x40008d7	           0xfbec0	                           movsx eax, al	       225	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1
0x40008da	            0x89c7	                            mov edi, eax	       225	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1
0x40008dc	      0xe86ef7ffff	                 call sym.git_is_dir_sep	       225	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1
0x40008e1	            0x85c0	                           test eax, eax	       225	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1
0x40008e3	            0x74c5	                            je 0x40008aa	       225	clone.c	IF_9	FUNCTION_31	ELSE_1	FOR_1
0x40008e5	            0xeb05	                           jmp 0x40008ec	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x40008e7	      0x48836dd001	               sub qword [rbp - 0x30], 1	       234	clone.c	IF_9	FUNCTION_31	WHILE_1
0x40008ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x40008f0	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x40008f4	            0x733a	                           jae 0x4000930	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x40008f6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x40008fa	        0x4883e801	                              sub rax, 1	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x40008fe	           0xfb600	                   movzx eax, byte [rax]	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x4000901	           0xfbec0	                           movsx eax, al	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x4000904	            0x89c7	                            mov edi, eax	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x4000906	      0xe844f7ffff	                 call sym.git_is_dir_sep	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x400090b	            0x85c0	                           test eax, eax	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x400090d	            0x75d8	                           jne 0x40008e7	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x400090f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x4000913	        0x4883e801	                              sub rax, 1	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x4000917	           0xfb600	                   movzx eax, byte [rax]	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x400091a	           0xfb6c0	                           movzx eax, al	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x400091d	            0x4898	                                    cdqe	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x400091f	     0xfb680000000	                   movzx eax, byte [rax]	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x4000926	           0xfb6c0	                           movzx eax, al	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x4000929	          0x83e001	                              and eax, 1	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x400092c	            0x85c0	                           test eax, eax	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x400092e	            0x75b7	                           jne 0x40008e7	       233	clone.c	IF_9	FUNCTION_31	WHILE_1
0x4000930	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x4000934	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x4000938	          0x4829c2	                            sub rdx, rax	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x400093b	          0x4889d0	                            mov rax, rdx	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x400093e	        0x4883f805	                              cmp rax, 5	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x4000942	            0x7e66	                           jle 0x40009aa	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x4000944	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x4000948	        0x4883e805	                              sub rax, 5	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x400094c	           0xfb600	                   movzx eax, byte [rax]	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x400094f	           0xfbec0	                           movsx eax, al	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x4000952	            0x89c7	                            mov edi, eax	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x4000954	      0xe8f6f6ffff	                 call sym.git_is_dir_sep	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x4000959	            0x85c0	                           test eax, eax	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x400095b	            0x744d	                            je 0x40009aa	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x400095d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       236	clone.c	IF_9	FUNCTION_31	IF_3	CALL_3
0x4000961	        0x4883e804	                              sub rax, 4	       236	clone.c	IF_9	FUNCTION_31	IF_3	CALL_3
0x4000965	      0xba04000000	                              mov edx, 4	       236	clone.c	IF_9	FUNCTION_31	IF_3	CALL_3
0x400096a	      0xbe00000000	                              mov esi, 0	       236	clone.c	IF_9	FUNCTION_31	IF_3	CALL_3
0x400096f	          0x4889c7	                            mov rdi, rax	       236	clone.c	IF_9	FUNCTION_31	IF_3	CALL_3
0x4000972	      0xe800000000	                          call 0x4000977	       236	clone.c	IF_9	FUNCTION_31	IF_3	CALL_3
0x4000977	            0x85c0	                           test eax, eax	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x4000979	            0x752f	                           jne 0x40009aa	       235	clone.c	IF_9	FUNCTION_31	IF_3
0x400097b	      0x48836dd005	               sub qword [rbp - 0x30], 5	       237	clone.c	IF_9	FUNCTION_31	IF_3
0x4000980	            0xeb05	                           jmp 0x4000987	       238	clone.c	IF_9	FUNCTION_31	IF_3	WHILE_2
0x4000982	      0x48836dd001	               sub qword [rbp - 0x30], 1	       239	clone.c	IF_9	FUNCTION_31	IF_3	WHILE_2
0x4000987	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       238	clone.c	IF_9	FUNCTION_31	IF_3	WHILE_2
0x400098b	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       238	clone.c	IF_9	FUNCTION_31	IF_3	WHILE_2
0x400098f	            0x7319	                           jae 0x40009aa	       238	clone.c	IF_9	FUNCTION_31	IF_3	WHILE_2
0x4000991	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       238	clone.c	IF_9	FUNCTION_31	IF_3	WHILE_2
0x4000995	        0x4883e801	                              sub rax, 1	       238	clone.c	IF_9	FUNCTION_31	IF_3	WHILE_2
0x4000999	           0xfb600	                   movzx eax, byte [rax]	       238	clone.c	IF_9	FUNCTION_31	IF_3	WHILE_2
0x400099c	           0xfbec0	                           movsx eax, al	       238	clone.c	IF_9	FUNCTION_31	IF_3	WHILE_2
0x400099f	            0x89c7	                            mov edi, eax	       238	clone.c	IF_9	FUNCTION_31	IF_3	WHILE_2
0x40009a1	      0xe8a9f6ffff	                 call sym.git_is_dir_sep	       238	clone.c	IF_9	FUNCTION_31	IF_3	WHILE_2
0x40009a6	            0x85c0	                           test eax, eax	       238	clone.c	IF_9	FUNCTION_31	IF_3	WHILE_2
0x40009a8	            0x75d8	                           jne 0x4000982	       238	clone.c	IF_9	FUNCTION_31	IF_3	WHILE_2
0x40009aa	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       250	clone.c	IF_9	FUNCTION_31	IF_4	CALL_4
0x40009ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       250	clone.c	IF_9	FUNCTION_31	IF_4	CALL_4
0x40009b2	          0x4829c2	                            sub rdx, rax	       250	clone.c	IF_9	FUNCTION_31	IF_4	CALL_4
0x40009b5	          0x4889d0	                            mov rax, rdx	       250	clone.c	IF_9	FUNCTION_31	IF_4	CALL_4
0x40009b8	          0x4889c2	                            mov rdx, rax	       250	clone.c	IF_9	FUNCTION_31	IF_4	CALL_4
0x40009bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       250	clone.c	IF_9	FUNCTION_31	IF_4	CALL_4
0x40009bf	      0xbe2f000000	                           mov esi, 0x2f	       250	clone.c	IF_9	FUNCTION_31	IF_4	CALL_4
0x40009c4	          0x4889c7	                            mov rdi, rax	       250	clone.c	IF_9	FUNCTION_31	IF_4	CALL_4
0x40009c7	      0xe800000000	                          call 0x40009cc	       250	clone.c	IF_9	FUNCTION_31	IF_4	CALL_4
0x40009cc	          0x4885c0	                           test rax, rax	       250	clone.c	IF_9	FUNCTION_31	IF_4	CALL_4
0x40009cf	     0xf8595000000	                           jne 0x4000a6a	       250	clone.c	IF_9	FUNCTION_31	IF_4	CALL_4
0x40009d5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       251	clone.c	IF_9	FUNCTION_31	IF_4	CALL_5
0x40009d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       251	clone.c	IF_9	FUNCTION_31	IF_4	CALL_5
0x40009dd	          0x4829c2	                            sub rdx, rax	       251	clone.c	IF_9	FUNCTION_31	IF_4	CALL_5
0x40009e0	          0x4889d0	                            mov rax, rdx	       251	clone.c	IF_9	FUNCTION_31	IF_4	CALL_5
0x40009e3	          0x4889c2	                            mov rdx, rax	       251	clone.c	IF_9	FUNCTION_31	IF_4	CALL_5
0x40009e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       251	clone.c	IF_9	FUNCTION_31	IF_4	CALL_5
0x40009ea	      0xbe3a000000	                           mov esi, 0x3a	       251	clone.c	IF_9	FUNCTION_31	IF_4	CALL_5
0x40009ef	          0x4889c7	                            mov rdi, rax	       251	clone.c	IF_9	FUNCTION_31	IF_4	CALL_5
0x40009f2	      0xe800000000	                          call 0x40009f7	       251	clone.c	IF_9	FUNCTION_31	IF_4	CALL_5
0x40009f7	          0x4885c0	                           test rax, rax	       251	clone.c	IF_9	FUNCTION_31	IF_4	CALL_5
0x40009fa	            0x746e	                            je 0x4000a6a	       251	clone.c	IF_9	FUNCTION_31	IF_4	CALL_5
0x40009fc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       252	clone.c	IF_9	FUNCTION_31	IF_4
0x4000a00	        0x488945e0	             mov qword [rbp - 0x20], rax	       252	clone.c	IF_9	FUNCTION_31	IF_4
0x4000a04	            0xeb05	                           jmp 0x4000a0b	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a06	      0x48836de001	               sub qword [rbp - 0x20], 1	       254	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a0b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a0f	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a13	            0x7330	                           jae 0x4000a45	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a15	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a19	        0x4883e801	                              sub rax, 1	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a1d	           0xfb600	                   movzx eax, byte [rax]	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a20	           0xfb6c0	                           movzx eax, al	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a23	            0x4898	                                    cdqe	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a25	     0xfb680000000	                   movzx eax, byte [rax]	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a2c	           0xfb6c0	                           movzx eax, al	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a2f	          0x83e002	                              and eax, 2	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a32	            0x85c0	                           test eax, eax	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a34	            0x740f	                            je 0x4000a45	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a36	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a3a	        0x4883e801	                              sub rax, 1	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a3e	           0xfb600	                   movzx eax, byte [rax]	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a41	            0x3c3a	                            cmp al, 0x3a	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a43	            0x75c1	                           jne 0x4000a06	       253	clone.c	IF_9	FUNCTION_31	IF_4	WHILE_3
0x4000a45	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       255	clone.c	IF_9	FUNCTION_31	IF_4	IF_5
0x4000a49	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       255	clone.c	IF_9	FUNCTION_31	IF_4	IF_5
0x4000a4d	            0x731b	                           jae 0x4000a6a	       255	clone.c	IF_9	FUNCTION_31	IF_4	IF_5
0x4000a4f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       255	clone.c	IF_9	FUNCTION_31	IF_4	IF_5
0x4000a53	        0x4883e801	                              sub rax, 1	       255	clone.c	IF_9	FUNCTION_31	IF_4	IF_5
0x4000a57	           0xfb600	                   movzx eax, byte [rax]	       255	clone.c	IF_9	FUNCTION_31	IF_4	IF_5
0x4000a5a	            0x3c3a	                            cmp al, 0x3a	       255	clone.c	IF_9	FUNCTION_31	IF_4	IF_5
0x4000a5c	            0x750c	                           jne 0x4000a6a	       255	clone.c	IF_9	FUNCTION_31	IF_4	IF_5
0x4000a5e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       256	clone.c	IF_9	FUNCTION_31	IF_4	IF_5
0x4000a62	        0x4883e801	                              sub rax, 1	       256	clone.c	IF_9	FUNCTION_31	IF_4	IF_5
0x4000a66	        0x488945d0	             mov qword [rbp - 0x30], rax	       256	clone.c	IF_9	FUNCTION_31	IF_4	IF_5
0x4000a6a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       265	clone.c	IF_9	FUNCTION_31
0x4000a6e	        0x488945e0	             mov qword [rbp - 0x20], rax	       265	clone.c	IF_9	FUNCTION_31
0x4000a72	            0xeb05	                           jmp 0x4000a79	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000a74	      0x48836de001	               sub qword [rbp - 0x20], 1	       267	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000a79	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000a7d	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000a81	            0x7328	                           jae 0x4000aab	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000a83	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000a87	        0x4883e801	                              sub rax, 1	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000a8b	           0xfb600	                   movzx eax, byte [rax]	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000a8e	           0xfbec0	                           movsx eax, al	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000a91	            0x89c7	                            mov edi, eax	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000a93	      0xe8b7f5ffff	                 call sym.git_is_dir_sep	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000a98	            0x85c0	                           test eax, eax	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000a9a	            0x750f	                           jne 0x4000aab	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000a9c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000aa0	        0x4883e801	                              sub rax, 1	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000aa4	           0xfb600	                   movzx eax, byte [rax]	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000aa7	            0x3c3a	                            cmp al, 0x3a	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000aa9	            0x75c9	                           jne 0x4000a74	       266	clone.c	IF_9	FUNCTION_31	WHILE_4
0x4000aab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       268	clone.c	IF_9	FUNCTION_31
0x4000aaf	        0x488945d8	             mov qword [rbp - 0x28], rax	       268	clone.c	IF_9	FUNCTION_31
0x4000ab3	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       273	clone.c	IF_9	FUNCTION_31
0x4000ab7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       273	clone.c	IF_9	FUNCTION_31
0x4000abb	          0x4829c2	                            sub rdx, rax	       273	clone.c	IF_9	FUNCTION_31
0x4000abe	          0x4889d0	                            mov rax, rdx	       273	clone.c	IF_9	FUNCTION_31
0x4000ac1	        0x488945c8	             mov qword [rbp - 0x38], rax	       273	clone.c	IF_9	FUNCTION_31
0x4000ac5	        0x837db400	               cmp dword [rbp - 0x4c], 0	       274	clone.c	IF_9	FUNCTION_31	CALL_6
0x4000ac9	            0x7407	                            je 0x4000ad2	       274	clone.c	IF_9	FUNCTION_31	CALL_6
0x4000acb	      0xba00000000	                              mov edx, 0	       274	clone.c	IF_9	FUNCTION_31	CALL_6
0x4000ad0	            0xeb05	                           jmp 0x4000ad7	       274	clone.c	IF_9	FUNCTION_31	CALL_6
0x4000ad2	      0xba00000000	                              mov edx, 0	       274	clone.c	IF_9	FUNCTION_31	CALL_6
0x4000ad7	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	       274	clone.c	IF_9	FUNCTION_31	CALL_6
0x4000adb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       274	clone.c	IF_9	FUNCTION_31	CALL_6
0x4000adf	          0x4889ce	                            mov rsi, rcx	       274	clone.c	IF_9	FUNCTION_31	CALL_6
0x4000ae2	          0x4889c7	                            mov rdi, rax	       274	clone.c	IF_9	FUNCTION_31	CALL_6
0x4000ae5	      0xe8cef5ffff	               call sym.strip_suffix_mem	       274	clone.c	IF_9	FUNCTION_31	CALL_6
0x4000aea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       276	clone.c	IF_9	FUNCTION_31	IF_6
0x4000aee	          0x4885c0	                           test rax, rax	       276	clone.c	IF_9	FUNCTION_31	IF_6
0x4000af1	            0x7415	                            je 0x4000b08	       276	clone.c	IF_9	FUNCTION_31	IF_6
0x4000af3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       276	clone.c	IF_9	FUNCTION_31	IF_6
0x4000af7	        0x4883f801	                              cmp rax, 1	       276	clone.c	IF_9	FUNCTION_31	IF_6
0x4000afb	            0x7522	                           jne 0x4000b1f	       276	clone.c	IF_9	FUNCTION_31	IF_6
0x4000afd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       276	clone.c	IF_9	FUNCTION_31	IF_6
0x4000b01	           0xfb600	                   movzx eax, byte [rax]	       276	clone.c	IF_9	FUNCTION_31	IF_6
0x4000b04	            0x3c2f	                            cmp al, 0x2f	       276	clone.c	IF_9	FUNCTION_31	IF_6
0x4000b06	            0x7517	                           jne 0x4000b1f	       276	clone.c	IF_9	FUNCTION_31	IF_6
0x4000b08	      0xbf00000000	                              mov edi, 0	       277	clone.c	IF_9	FUNCTION_31	IF_6	CALL_8
0x4000b0d	      0xe829f8ffff	                               call sym.	       277	clone.c	IF_9	FUNCTION_31	IF_6	CALL_8
0x4000b12	          0x4889c7	                            mov rdi, rax	       277	clone.c	IF_9	FUNCTION_31	IF_6	CALL_8
0x4000b15	      0xb800000000	                              mov eax, 0	       277	clone.c	IF_9	FUNCTION_31	IF_6	CALL_8
0x4000b1a	      0xe800000000	                          call 0x4000b1f	       277	clone.c	IF_9	FUNCTION_31	IF_6	CALL_8
0x4000b1f	        0x837db000	               cmp dword [rbp - 0x50], 0	       280	clone.c	IF_9	FUNCTION_31	IF_7
0x4000b23	            0x7424	                            je 0x4000b49	       280	clone.c	IF_9	FUNCTION_31	IF_7
0x4000b25	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       281	clone.c	IF_9	FUNCTION_31	CALL_9
0x4000b29	            0x89c1	                            mov ecx, eax	       281	clone.c	IF_9	FUNCTION_31	CALL_9
0x4000b2b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       281	clone.c	IF_9	FUNCTION_31	CALL_9
0x4000b2f	          0x4889c2	                            mov rdx, rax	       281	clone.c	IF_9	FUNCTION_31	CALL_9
0x4000b32	            0x89ce	                            mov esi, ecx	       281	clone.c	IF_9	FUNCTION_31	CALL_9
0x4000b34	      0xbf00000000	                              mov edi, 0	       281	clone.c	IF_9	FUNCTION_31	CALL_9
0x4000b39	      0xb800000000	                              mov eax, 0	       281	clone.c	IF_9	FUNCTION_31	CALL_9
0x4000b3e	      0xe800000000	                          call 0x4000b43	       281	clone.c	IF_9	FUNCTION_31	CALL_9
0x4000b43	        0x488945e8	             mov qword [rbp - 0x18], rax	       281	clone.c	IF_9	FUNCTION_31	CALL_9
0x4000b47	            0xeb17	                           jmp 0x4000b60	       281	clone.c	IF_9	FUNCTION_31	CALL_9
0x4000b49	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       283	clone.c	IF_9	FUNCTION_31	CALL_10
0x4000b4d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       283	clone.c	IF_9	FUNCTION_31	CALL_10
0x4000b51	          0x4889d6	                            mov rsi, rdx	       283	clone.c	IF_9	FUNCTION_31	CALL_10
0x4000b54	          0x4889c7	                            mov rdi, rax	       283	clone.c	IF_9	FUNCTION_31	CALL_10
0x4000b57	      0xe800000000	                          call 0x4000b5c	       283	clone.c	IF_9	FUNCTION_31	CALL_10
0x4000b5c	        0x488945e8	             mov qword [rbp - 0x18], rax	       283	clone.c	IF_9	FUNCTION_31	CALL_10
0x4000b60	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       288	clone.c	IF_9	FUNCTION_31	IF_8
0x4000b64	           0xfb600	                   movzx eax, byte [rax]	       288	clone.c	IF_9	FUNCTION_31	IF_8
0x4000b67	            0x84c0	                             test al, al	       288	clone.c	IF_9	FUNCTION_31	IF_8
0x4000b69	     0xf84a6000000	                            je 0x4000c15	       288	clone.c	IF_9	FUNCTION_31	IF_8
0x4000b6f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       289	clone.c	IF_9	FUNCTION_31	IF_8
0x4000b73	        0x488945f0	             mov qword [rbp - 0x10], rax	       289	clone.c	IF_9	FUNCTION_31	IF_8
0x4000b77	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	       290	clone.c	IF_9	FUNCTION_31	IF_8
0x4000b7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       291	clone.c	IF_9	FUNCTION_31	IF_8	FOR_2
0x4000b82	        0x488945d0	             mov qword [rbp - 0x30], rax	       291	clone.c	IF_9	FUNCTION_31	IF_8	FOR_2
0x4000b86	            0xeb60	                           jmp 0x4000be8	       291	clone.c	IF_9	FUNCTION_31	IF_8	FOR_2
0x4000b88	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       292	clone.c	IF_9	FUNCTION_31	IF_8	FOR_2
0x4000b8c	           0xfb600	                   movzx eax, byte [rax]	       292	clone.c	IF_9	FUNCTION_31	IF_8	FOR_2
0x4000b8f	          0x8845c3	               mov byte [rbp - 0x3d], al	       292	clone.c	IF_9	FUNCTION_31	IF_8	FOR_2
0x4000b92	         0xfb645c3	            movzx eax, byte [rbp - 0x3d]	       293	clone.c	IF_9	FUNCTION_31	IF_8	FOR_2
0x4000b96	            0x3c1f	                            cmp al, 0x1f	       293	clone.c	IF_9	FUNCTION_31	IF_8	FOR_2
0x4000b98	            0x7704	                            ja 0x4000b9e	       293	clone.c	IF_9	FUNCTION_31	IF_8	FOR_2
0x4000b9a	        0xc645c320	            mov byte [rbp - 0x3d], 0x20 	       294	clone.c	FUNCTION_31	IF_8	FOR_2
0x4000b9e	         0xfb645c3	            movzx eax, byte [rbp - 0x3d]	       295	clone.c	FUNCTION_31	IF_8	FOR_2	IF_10
0x4000ba2	           0xfb6c0	                           movzx eax, al	       295	clone.c	FUNCTION_31	IF_8	FOR_2	IF_10
0x4000ba5	            0x4898	                                    cdqe	       295	clone.c	FUNCTION_31	IF_8	FOR_2	IF_10
0x4000ba7	     0xfb680000000	                   movzx eax, byte [rax]	       295	clone.c	FUNCTION_31	IF_8	FOR_2	IF_10
0x4000bae	           0xfb6c0	                           movzx eax, al	       295	clone.c	FUNCTION_31	IF_8	FOR_2	IF_10
0x4000bb1	          0x83e001	                              and eax, 1	       295	clone.c	FUNCTION_31	IF_8	FOR_2	IF_10
0x4000bb4	            0x85c0	                           test eax, eax	       295	clone.c	FUNCTION_31	IF_8	FOR_2	IF_10
0x4000bb6	            0x740f	                            je 0x4000bc7	       295	clone.c	FUNCTION_31	IF_8	FOR_2	IF_10
0x4000bb8	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       296	clone.c	FUNCTION_31	IF_8	FOR_2	IF_10	IF_11
0x4000bbc	            0x7524	                           jne 0x4000be2	       296	clone.c	FUNCTION_31	IF_8	FOR_2	IF_10	IF_11
0x4000bbe	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	       298	clone.c	FUNCTION_31	IF_8	FOR_2	IF_10
0x4000bc5	            0xeb07	                           jmp 0x4000bce	       298	clone.c	FUNCTION_31	IF_8	FOR_2	IF_10
0x4000bc7	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       300	clone.c	FUNCTION_31	IF_8	FOR_2	ELSE_3
0x4000bce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       301	clone.c	FUNCTION_31	IF_8	FOR_2
0x4000bd2	        0x488d5001	                      lea rdx, [rax + 1]	       301	clone.c	FUNCTION_31	IF_8	FOR_2
0x4000bd6	        0x488955f0	             mov qword [rbp - 0x10], rdx	       301	clone.c	FUNCTION_31	IF_8	FOR_2
0x4000bda	         0xfb655c3	            movzx edx, byte [rbp - 0x3d]	       301	clone.c	FUNCTION_31	IF_8	FOR_2
0x4000bde	            0x8810	                      mov byte [rax], dl	       301	clone.c	FUNCTION_31	IF_8	FOR_2
0x4000be0	            0xeb01	                           jmp 0x4000be3	       301	clone.c	FUNCTION_31	IF_8	FOR_2
0x4000be2	              0x90	                                     nop	       297	clone.c	FUNCTION_31	IF_8	FOR_2	IF_10	IF_11
0x4000be3	      0x488345d001	               add qword [rbp - 0x30], 1	       291	clone.c	IF_9	FUNCTION_31	IF_8	FOR_2
0x4000be8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       291	clone.c	IF_9	FUNCTION_31	IF_8	FOR_2
0x4000bec	           0xfb600	                   movzx eax, byte [rax]	       291	clone.c	IF_9	FUNCTION_31	IF_8	FOR_2
0x4000bef	            0x84c0	                             test al, al	       291	clone.c	IF_9	FUNCTION_31	IF_8	FOR_2
0x4000bf1	            0x7595	                           jne 0x4000b88	       291	clone.c	IF_9	FUNCTION_31	IF_8	FOR_2
0x4000bf3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       303	clone.c	FUNCTION_31	IF_8
0x4000bf7	          0xc60000	                       mov byte [rax], 0	       303	clone.c	FUNCTION_31	IF_8
0x4000bfa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       304	clone.c	FUNCTION_31	IF_8	IF_12
0x4000bfe	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       304	clone.c	FUNCTION_31	IF_8	IF_12
0x4000c02	            0x7611	                           jbe 0x4000c15	       304	clone.c	FUNCTION_31	IF_8	IF_12
0x4000c04	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       304	clone.c	FUNCTION_31	IF_8	IF_12
0x4000c08	            0x740b	                            je 0x4000c15	       304	clone.c	FUNCTION_31	IF_8	IF_12
0x4000c0a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       305	clone.c	FUNCTION_31	IF_8	IF_12
0x4000c0e	        0x4883e801	                              sub rax, 1	       305	clone.c	FUNCTION_31	IF_8	IF_12
0x4000c12	          0xc60000	                       mov byte [rax], 0	       305	clone.c	FUNCTION_31	IF_8	IF_12
0x4000c15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       307	clone.c	FUNCTION_31
0x4000c19	        0x488b4df8	                mov rcx, qword [rbp - 8]	       308	clone.c	FUNCTION_31
0x4000c1d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       308	clone.c	FUNCTION_31
0x4000c26	            0x7405	                            je 0x4000c2d	       308	clone.c	FUNCTION_31
0x4000c28	      0xe800000000	                          call 0x4000c2d	       308	clone.c	FUNCTION_31
0x4000c2d	              0xc9	                                   leave	       308	clone.c	FUNCTION_31
0x4000c2e	              0xc3	                                     ret	       308	clone.c	FUNCTION_31
write_one_config	functions,0:FOR,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:DO,0	18
0x400223b	              0x55	                                push rbp	       789	clone.c	FUNCTION_48
0x400223c	          0x4889e5	                            mov rbp, rsp	       789	clone.c	FUNCTION_48
0x400223f	        0x4883ec20	                           sub rsp, 0x20	       789	clone.c	FUNCTION_48
0x4002243	        0x48897df8	                mov qword [rbp - 8], rdi	       789	clone.c	FUNCTION_48
0x4002247	        0x488975f0	             mov qword [rbp - 0x10], rsi	       789	clone.c	FUNCTION_48
0x400224b	        0x488955e8	             mov qword [rbp - 0x18], rdx	       789	clone.c	FUNCTION_48
0x400224f	      0x48837df000	               cmp qword [rbp - 0x10], 0	       790	clone.c	FUNCTION_48	CALL_1
0x4002254	            0x7406	                            je 0x400225c	       790	clone.c	FUNCTION_48	CALL_1
0x4002256	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       790	clone.c	FUNCTION_48	CALL_1
0x400225a	            0xeb05	                           jmp 0x4002261	       790	clone.c	FUNCTION_48	CALL_1
0x400225c	      0xb800000000	                              mov eax, 0	       790	clone.c	FUNCTION_48	CALL_1
0x4002261	        0x488b7df8	                mov rdi, qword [rbp - 8]	       790	clone.c	FUNCTION_48	CALL_1
0x4002265	      0xb900000000	                              mov ecx, 0	       790	clone.c	FUNCTION_48	CALL_1
0x400226a	      0xba01000000	                              mov edx, 1	       790	clone.c	FUNCTION_48	CALL_1
0x400226f	          0x4889c6	                            mov rsi, rax	       790	clone.c	FUNCTION_48	CALL_1
0x4002272	      0xe800000000	                          call 0x4002277	       790	clone.c	FUNCTION_48	CALL_1
0x4002277	              0xc9	                                   leave	       793	clone.c	FUNCTION_48
0x4002278	              0xc3	                                     ret	       793	clone.c	FUNCTION_48
dir_exists	functions,0:FOR,0:IF,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0:DO,0	21
0x40025ff	              0x55	                                push rbp	       873	clone.c	FUNCTION_52
0x4002600	          0x4889e5	                            mov rbp, rsp	       873	clone.c	FUNCTION_52
0x4002603	    0x4881ecb00000	                           sub rsp, 0xb0	       873	clone.c	FUNCTION_52
0x400260a	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	       873	clone.c	FUNCTION_52
0x4002611	    0x64488b042528	                mov rax, qword fs:[0x28]	       873	clone.c	FUNCTION_52
0x400261a	        0x488945f8	                mov qword [rbp - 8], rax	       873	clone.c	FUNCTION_52
0x400261e	            0x31c0	                            xor eax, eax	       873	clone.c	FUNCTION_52
0x4002620	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       875	clone.c	FUNCTION_52
0x4002627	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       875	clone.c	FUNCTION_52
0x400262e	          0x4889d6	                            mov rsi, rdx	       875	clone.c	FUNCTION_52
0x4002631	          0x4889c7	                            mov rdi, rax	       875	clone.c	FUNCTION_52
0x4002634	      0xe800000000	                          call 0x4002639	       875	clone.c	FUNCTION_52
0x4002639	            0x85c0	                           test eax, eax	       875	clone.c	FUNCTION_52
0x400263b	           0xf94c0	                                 sete al	       875	clone.c	FUNCTION_52
0x400263e	           0xfb6c0	                           movzx eax, al	       875	clone.c	FUNCTION_52
0x4002641	        0x488b4df8	                mov rcx, qword [rbp - 8]	       876	clone.c	FUNCTION_52
0x4002645	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       876	clone.c	FUNCTION_52
0x400264e	            0x7405	                            je 0x4002655	       876	clone.c	FUNCTION_52
0x4002650	      0xe800000000	                          call 0x4002655	       876	clone.c	FUNCTION_52
0x4002655	              0xc9	                                   leave	       876	clone.c	FUNCTION_52
0x4002656	              0xc3	                                     ret	       876	clone.c	FUNCTION_52
remove_junk	functions,0:FOR,0:IF,2:WHILE,0:CALL,7:ELSE,0:SWITCH,1:DO,0	64
0x400152f	              0x55	                                push rbp	       495	clone.c	FUNCTION_38
0x4001530	          0x4889e5	                            mov rbp, rsp	       495	clone.c	FUNCTION_38
0x4001533	        0x4883ec20	                           sub rsp, 0x20	       495	clone.c	FUNCTION_38
0x4001537	    0x64488b042528	                mov rax, qword fs:[0x28]	       495	clone.c	FUNCTION_38
0x4001540	        0x488945f8	                mov qword [rbp - 8], rax	       495	clone.c	FUNCTION_38
0x4001544	            0x31c0	                            xor eax, eax	       495	clone.c	FUNCTION_38
0x4001546	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       496	clone.c	FUNCTION_38
0x400154e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       496	clone.c	FUNCTION_38
0x4001556	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       496	clone.c	FUNCTION_38
0x400155e	    0x8b0500000000	            mov eax, dword [0x04001564] 	       498	clone.c	FUNCTION_38	SWITCH_1
0x4001564	          0x83f801	                              cmp eax, 1	       498	clone.c	FUNCTION_38	SWITCH_1
0x4001567	            0x7418	                            je 0x4001581	       498	clone.c	FUNCTION_38	SWITCH_1
0x4001569	          0x83f802	                              cmp eax, 2	       498	clone.c	FUNCTION_38	SWITCH_1
0x400156c	     0xf84af000000	                            je 0x4001621	       498	clone.c	FUNCTION_38	SWITCH_1
0x4001572	              0x90	                                     nop	       506	clone.c	FUNCTION_38	SWITCH_1
0x4001573	    0x488b05000000	            mov rax, qword [0x0400157a] 	       509	clone.c	FUNCTION_38	IF_1
0x400157a	          0x4885c0	                           test rax, rax	       509	clone.c	FUNCTION_38	IF_1
0x400157d	            0x745e	                            je 0x40015dd	       509	clone.c	FUNCTION_38	IF_1
0x400157f	            0xeb21	                           jmp 0x40015a2	       509	clone.c	FUNCTION_38	IF_1
0x4001581	      0xbf00000000	                              mov edi, 0	       500	clone.c	FUNCTION_38	SWITCH_1	CALL_2
0x4001586	      0xe8b0edffff	                               call sym.	       500	clone.c	FUNCTION_38	SWITCH_1	CALL_2
0x400158b	          0x4889c6	                            mov rsi, rax	       500	clone.c	FUNCTION_38	SWITCH_1	CALL_2
0x400158e	      0xbf00000000	                              mov edi, 0	       500	clone.c	FUNCTION_38	SWITCH_1	CALL_2
0x4001593	      0xb800000000	                              mov eax, 0	       500	clone.c	FUNCTION_38	SWITCH_1	CALL_2
0x4001598	      0xe800000000	                          call 0x400159d	       500	clone.c	FUNCTION_38	SWITCH_1	CALL_2
0x400159d	      0xe980000000	                           jmp 0x4001622	       500	clone.c	FUNCTION_38	SWITCH_1	CALL_2
0x40015a2	    0x488b15000000	            mov rdx, qword [0x040015a9] 	       510	clone.c	FUNCTION_38	IF_1	CALL_3
0x40015a9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       510	clone.c	FUNCTION_38	IF_1	CALL_3
0x40015ad	          0x4889d6	                            mov rsi, rdx	       510	clone.c	FUNCTION_38	IF_1	CALL_3
0x40015b0	          0x4889c7	                            mov rdi, rax	       510	clone.c	FUNCTION_38	IF_1	CALL_3
0x40015b3	      0xe84eedffff	                  call sym.strbuf_addstr	       510	clone.c	FUNCTION_38	IF_1	CALL_3
0x40015b8	    0x8b1500000000	            mov edx, dword [0x040015be] 	       511	clone.c	FUNCTION_38	IF_1	CALL_4
0x40015be	        0x488d45e0	                   lea rax, [rbp - 0x20]	       511	clone.c	FUNCTION_38	IF_1	CALL_4
0x40015c2	            0x89d6	                            mov esi, edx	       511	clone.c	FUNCTION_38	IF_1	CALL_4
0x40015c4	          0x4889c7	                            mov rdi, rax	       511	clone.c	FUNCTION_38	IF_1	CALL_4
0x40015c7	      0xe800000000	                          call 0x40015cc	       511	clone.c	FUNCTION_38	IF_1	CALL_4
0x40015cc	        0x488d45e0	                   lea rax, [rbp - 0x20]	       512	clone.c	FUNCTION_38	IF_1
0x40015d0	      0xbe00000000	                              mov esi, 0	       512	clone.c	FUNCTION_38	IF_1
0x40015d5	          0x4889c7	                            mov rdi, rax	       512	clone.c	FUNCTION_38	IF_1
0x40015d8	      0xe821ecffff	                  call sym.strbuf_setlen	       512	clone.c	FUNCTION_38	IF_1
0x40015dd	    0x488b05000000	            mov rax, qword [0x040015e4] 	       514	clone.c	FUNCTION_38	IF_2
0x40015e4	          0x4885c0	                           test rax, rax	       514	clone.c	FUNCTION_38	IF_2
0x40015e7	            0x742a	                            je 0x4001613	       514	clone.c	FUNCTION_38	IF_2
0x40015e9	    0x488b15000000	            mov rdx, qword [0x040015f0] 	       515	clone.c	FUNCTION_38	IF_2	CALL_5
0x40015f0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       515	clone.c	FUNCTION_38	IF_2	CALL_5
0x40015f4	          0x4889d6	                            mov rsi, rdx	       515	clone.c	FUNCTION_38	IF_2	CALL_5
0x40015f7	          0x4889c7	                            mov rdi, rax	       515	clone.c	FUNCTION_38	IF_2	CALL_5
0x40015fa	      0xe807edffff	                  call sym.strbuf_addstr	       515	clone.c	FUNCTION_38	IF_2	CALL_5
0x40015ff	    0x8b1500000000	            mov edx, dword [0x04001605] 	       516	clone.c	FUNCTION_38	IF_2	CALL_6
0x4001605	        0x488d45e0	                   lea rax, [rbp - 0x20]	       516	clone.c	FUNCTION_38	IF_2	CALL_6
0x4001609	            0x89d6	                            mov esi, edx	       516	clone.c	FUNCTION_38	IF_2	CALL_6
0x400160b	          0x4889c7	                            mov rdi, rax	       516	clone.c	FUNCTION_38	IF_2	CALL_6
0x400160e	      0xe800000000	                          call 0x4001613	       516	clone.c	FUNCTION_38	IF_2	CALL_6
0x4001613	        0x488d45e0	                   lea rax, [rbp - 0x20]	       518	clone.c	FUNCTION_38	CALL_7
0x4001617	          0x4889c7	                            mov rdi, rax	       518	clone.c	FUNCTION_38	CALL_7
0x400161a	      0xe800000000	                          call 0x400161f	       518	clone.c	FUNCTION_38	CALL_7
0x400161f	            0xeb01	                           jmp 0x4001622	       518	clone.c	FUNCTION_38	CALL_7
0x4001621	              0x90	                                     nop	       503	clone.c	FUNCTION_38	SWITCH_1
0x4001622	        0x488b45f8	                mov rax, qword [rbp - 8]	       519	clone.c	FUNCTION_38
0x4001626	    0x644833042528	                xor rax, qword fs:[0x28]	       519	clone.c	FUNCTION_38
0x400162f	            0x7405	                            je 0x4001636	       519	clone.c	FUNCTION_38
0x4001631	      0xe800000000	                          call 0x4001636	       519	clone.c	FUNCTION_38
0x4001636	              0xc9	                                   leave	       519	clone.c	FUNCTION_38
0x4001637	              0xc3	                                     ret	       519	clone.c	FUNCTION_38
setup_reference	functions,0:FOR,0:IF,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0:DO,0	25
0x4000dc8	              0x55	                                push rbp	       345	clone.c	FUNCTION_34
0x4000dc9	          0x4889e5	                            mov rbp, rsp	       345	clone.c	FUNCTION_34
0x4000dcc	        0x4883ec10	                           sub rsp, 0x10	       345	clone.c	FUNCTION_34
0x4000dd0	    0x64488b042528	                mov rax, qword fs:[0x28]	       345	clone.c	FUNCTION_34
0x4000dd9	        0x488945f8	                mov qword [rbp - 8], rax	       345	clone.c	FUNCTION_34
0x4000ddd	            0x31c0	                            xor eax, eax	       345	clone.c	FUNCTION_34
0x4000ddf	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       346	clone.c	FUNCTION_34
0x4000de6	        0x488d45f4	                    lea rax, [rbp - 0xc]	       347	clone.c	FUNCTION_34	CALL_1
0x4000dea	          0x4889c2	                            mov rdx, rax	       347	clone.c	FUNCTION_34	CALL_1
0x4000ded	      0xbe00000000	                              mov esi, 0	       347	clone.c	FUNCTION_34	CALL_1
0x4000df2	      0xbf00000000	                              mov edi, 0	       347	clone.c	FUNCTION_34	CALL_1
0x4000df7	      0xe800000000	                          call 0x4000dfc	       347	clone.c	FUNCTION_34	CALL_1
0x4000dfc	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       349	clone.c	FUNCTION_34
0x4000e03	        0x488d45f4	                    lea rax, [rbp - 0xc]	       350	clone.c	FUNCTION_34	CALL_2
0x4000e07	          0x4889c2	                            mov rdx, rax	       350	clone.c	FUNCTION_34	CALL_2
0x4000e0a	      0xbe00000000	                              mov esi, 0	       350	clone.c	FUNCTION_34	CALL_2
0x4000e0f	      0xbf00000000	                              mov edi, 0	       350	clone.c	FUNCTION_34	CALL_2
0x4000e14	      0xe800000000	                          call 0x4000e19	       350	clone.c	FUNCTION_34	CALL_2
0x4000e19	              0x90	                                     nop	       352	clone.c	FUNCTION_34
0x4000e1a	        0x488b45f8	                mov rax, qword [rbp - 8]	       352	clone.c	FUNCTION_34
0x4000e1e	    0x644833042528	                xor rax, qword fs:[0x28]	       352	clone.c	FUNCTION_34
0x4000e27	            0x7405	                            je 0x4000e2e	       352	clone.c	FUNCTION_34
0x4000e29	      0xe800000000	                          call 0x4000e2e	       352	clone.c	FUNCTION_34
0x4000e2e	              0xc9	                                   leave	       352	clone.c	FUNCTION_34
0x4000e2f	              0xc3	                                     ret	       352	clone.c	FUNCTION_34
wanted_peer_refs	functions,0:FOR,0:IF,4:WHILE,0:CALL,11:ELSE,3:SWITCH,0:DO,0	106
0x400174b	              0x55	                                push rbp	       550	clone.c	FUNCTION_41
0x400174c	          0x4889e5	                            mov rbp, rsp	       550	clone.c	FUNCTION_41
0x400174f	              0x53	                                push rbx	       550	clone.c	FUNCTION_41
0x4001750	        0x4883ec48	                           sub rsp, 0x48	       550	clone.c	FUNCTION_41
0x4001754	        0x48897db8	             mov qword [rbp - 0x48], rdi	       550	clone.c	FUNCTION_41
0x4001758	        0x488975b0	             mov qword [rbp - 0x50], rsi	       550	clone.c	FUNCTION_41
0x400175c	    0x64488b042528	                mov rax, qword fs:[0x28]	       550	clone.c	FUNCTION_41
0x4001765	        0x488945e8	             mov qword [rbp - 0x18], rax	       550	clone.c	FUNCTION_41
0x4001769	            0x31c0	                            xor eax, eax	       550	clone.c	FUNCTION_41
0x400176b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       551	clone.c	FUNCTION_41	CALL_2
0x400176f	      0xbe00000000	                              mov esi, 0	       551	clone.c	FUNCTION_41	CALL_2
0x4001774	          0x4889c7	                            mov rdi, rax	       551	clone.c	FUNCTION_41	CALL_2
0x4001777	      0xe800000000	                          call 0x400177c	       551	clone.c	FUNCTION_41	CALL_2
0x400177c	          0x4889c7	                            mov rdi, rax	       551	clone.c	FUNCTION_41	CALL_2
0x400177f	      0xe800000000	                          call 0x4001784	       551	clone.c	FUNCTION_41	CALL_2
0x4001784	        0x488945e0	             mov qword [rbp - 0x20], rax	       551	clone.c	FUNCTION_41	CALL_2
0x4001788	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       552	clone.c	FUNCTION_41
0x400178c	        0x488945c8	             mov qword [rbp - 0x38], rax	       552	clone.c	FUNCTION_41
0x4001790	      0x48837de000	               cmp qword [rbp - 0x20], 0	       553	clone.c	FUNCTION_41
0x4001795	            0x7406	                            je 0x400179d	       553	clone.c	FUNCTION_41
0x4001797	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       553	clone.c	FUNCTION_41
0x400179b	            0xeb04	                           jmp 0x40017a1	       553	clone.c	FUNCTION_41
0x400179d	        0x488d45c8	                   lea rax, [rbp - 0x38]	       553	clone.c	FUNCTION_41
0x40017a1	        0x488945d0	             mov qword [rbp - 0x30], rax	       553	clone.c	FUNCTION_41
0x40017a5	    0x8b0500000000	            mov eax, dword [0x040017ab] 	       555	clone.c	FUNCTION_41	IF_1
0x40017ab	            0x85c0	                           test eax, eax	       555	clone.c	FUNCTION_41	IF_1
0x40017ad	     0xf84d1000000	                            je 0x4001884	       555	clone.c	FUNCTION_41	IF_1
0x40017b3	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       556	clone.c	FUNCTION_41	IF_1
0x40017bb	    0x488b05000000	            mov rax, qword [0x040017c2] 	       558	clone.c	FUNCTION_41	IF_1	IF_2
0x40017c2	          0x4885c0	                           test rax, rax	       558	clone.c	FUNCTION_41	IF_1	IF_2
0x40017c5	            0x751e	                           jne 0x40017e5	       558	clone.c	FUNCTION_41	IF_1	IF_2
0x40017c7	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       559	clone.c	FUNCTION_41	IF_1	CALL_3
0x40017cb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       559	clone.c	FUNCTION_41	IF_1	CALL_3
0x40017cf	      0xba00000000	                              mov edx, 0	       559	clone.c	FUNCTION_41	IF_1	CALL_3
0x40017d4	          0x4889ce	                            mov rsi, rcx	       559	clone.c	FUNCTION_41	IF_1	CALL_3
0x40017d7	          0x4889c7	                            mov rdi, rax	       559	clone.c	FUNCTION_41	IF_1	CALL_3
0x40017da	      0xe800000000	                          call 0x40017df	       559	clone.c	FUNCTION_41	IF_1	CALL_3
0x40017df	        0x488945d8	             mov qword [rbp - 0x28], rax	       559	clone.c	FUNCTION_41	IF_1	CALL_3
0x40017e3	            0xeb32	                           jmp 0x4001817	       559	clone.c	FUNCTION_41	IF_1	CALL_3
0x40017e5	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       561	clone.c	FUNCTION_41	IF_1	ELSE_1
0x40017ed	        0x488d45c8	                   lea rax, [rbp - 0x38]	       562	clone.c	FUNCTION_41	IF_1	ELSE_1
0x40017f1	        0x488945d0	             mov qword [rbp - 0x30], rax	       562	clone.c	FUNCTION_41	IF_1	ELSE_1
0x40017f5	    0x488b15000000	            mov rdx, qword [0x040017fc] 	       563	clone.c	FUNCTION_41	IF_1	ELSE_1	CALL_5
0x40017fc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       563	clone.c	FUNCTION_41	IF_1	ELSE_1	CALL_5
0x4001800	          0x4889d6	                            mov rsi, rdx	       563	clone.c	FUNCTION_41	IF_1	ELSE_1	CALL_5
0x4001803	          0x4889c7	                            mov rdi, rax	       563	clone.c	FUNCTION_41	IF_1	ELSE_1	CALL_5
0x4001806	      0xe854feffff	             call sym.find_remote_branch	       563	clone.c	FUNCTION_41	IF_1	ELSE_1	CALL_5
0x400180b	          0x4889c7	                            mov rdi, rax	       563	clone.c	FUNCTION_41	IF_1	ELSE_1	CALL_5
0x400180e	      0xe800000000	                          call 0x4001813	       563	clone.c	FUNCTION_41	IF_1	ELSE_1	CALL_5
0x4001813	        0x488945d8	             mov qword [rbp - 0x28], rax	       563	clone.c	FUNCTION_41	IF_1	ELSE_1	CALL_5
0x4001817	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       566	clone.c	FUNCTION_41	IF_1	IF_3
0x400181c	            0x752f	                           jne 0x400184d	       566	clone.c	FUNCTION_41	IF_1	IF_3
0x400181e	    0x488b05000000	            mov rax, qword [0x04001825] 	       566	clone.c	FUNCTION_41	IF_1	IF_3
0x4001825	          0x4885c0	                           test rax, rax	       566	clone.c	FUNCTION_41	IF_1	IF_3
0x4001828	            0x7423	                            je 0x400184d	       566	clone.c	FUNCTION_41	IF_1	IF_3
0x400182a	    0x488b1d000000	            mov rbx, qword [0x04001831] 	       567	clone.c	FUNCTION_41	IF_1	IF_3	CALL_7
0x4001831	      0xbf00000000	                              mov edi, 0	       567	clone.c	FUNCTION_41	IF_1	IF_3	CALL_7
0x4001836	      0xe800ebffff	                               call sym.	       567	clone.c	FUNCTION_41	IF_1	IF_3	CALL_7
0x400183b	          0x4889de	                            mov rsi, rbx	       567	clone.c	FUNCTION_41	IF_1	IF_3	CALL_7
0x400183e	          0x4889c7	                            mov rdi, rax	       567	clone.c	FUNCTION_41	IF_1	IF_3	CALL_7
0x4001841	      0xb800000000	                              mov eax, 0	       567	clone.c	FUNCTION_41	IF_1	IF_3	CALL_7
0x4001846	      0xe800000000	                          call 0x400184b	       567	clone.c	FUNCTION_41	IF_1	IF_3	CALL_7
0x400184b	            0xeb50	                           jmp 0x400189d	       567	clone.c	FUNCTION_41	IF_1	IF_3	CALL_7
0x400184d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       570	clone.c	FUNCTION_41	IF_1	ELSE_2	CALL_8
0x4001851	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	       570	clone.c	FUNCTION_41	IF_1	ELSE_2	CALL_8
0x4001855	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       570	clone.c	FUNCTION_41	IF_1	ELSE_2	CALL_8
0x4001859	      0xb900000000	                              mov ecx, 0	       570	clone.c	FUNCTION_41	IF_1	ELSE_2	CALL_8
0x400185e	          0x4889c7	                            mov rdi, rax	       570	clone.c	FUNCTION_41	IF_1	ELSE_2	CALL_8
0x4001861	      0xe800000000	                          call 0x4001866	       570	clone.c	FUNCTION_41	IF_1	ELSE_2	CALL_8
0x4001866	    0x488b35000000	            mov rsi, qword [0x0400186d] 	       573	clone.c	FUNCTION_41	IF_1	ELSE_2	CALL_9
0x400186d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       573	clone.c	FUNCTION_41	IF_1	ELSE_2	CALL_9
0x4001871	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       573	clone.c	FUNCTION_41	IF_1	ELSE_2	CALL_9
0x4001875	      0xb900000000	                              mov ecx, 0	       573	clone.c	FUNCTION_41	IF_1	ELSE_2	CALL_9
0x400187a	          0x4889c7	                            mov rdi, rax	       573	clone.c	FUNCTION_41	IF_1	ELSE_2	CALL_9
0x400187d	      0xe800000000	                          call 0x4001882	       573	clone.c	FUNCTION_41	IF_1	ELSE_2	CALL_9
0x4001882	            0xeb19	                           jmp 0x400189d	       573	clone.c	FUNCTION_41	IF_1	ELSE_2	CALL_9
0x4001884	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       576	clone.c	FUNCTION_41	CALL_10
0x4001888	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	       576	clone.c	FUNCTION_41	CALL_10
0x400188c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       576	clone.c	FUNCTION_41	CALL_10
0x4001890	      0xb900000000	                              mov ecx, 0	       576	clone.c	FUNCTION_41	CALL_10
0x4001895	          0x4889c7	                            mov rdi, rax	       576	clone.c	FUNCTION_41	CALL_10
0x4001898	      0xe800000000	                          call 0x400189d	       576	clone.c	FUNCTION_41	CALL_10
0x400189d	    0x8b0500000000	            mov eax, dword [0x040018a3] 	       578	clone.c	FUNCTION_41	IF_4
0x40018a3	            0x85c0	                           test eax, eax	       578	clone.c	FUNCTION_41	IF_4
0x40018a5	            0x7530	                           jne 0x40018d7	       578	clone.c	FUNCTION_41	IF_4
0x40018a7	    0x8b0500000000	            mov eax, dword [0x040018ad] 	       578	clone.c	FUNCTION_41	IF_4
0x40018ad	            0x85c0	                           test eax, eax	       578	clone.c	FUNCTION_41	IF_4
0x40018af	            0x7526	                           jne 0x40018d7	       578	clone.c	FUNCTION_41	IF_4
0x40018b1	    0x8b0500000000	            mov eax, dword [0x040018b7] 	       578	clone.c	FUNCTION_41	IF_4
0x40018b7	            0x85c0	                           test eax, eax	       578	clone.c	FUNCTION_41	IF_4
0x40018b9	            0x751c	                           jne 0x40018d7	       578	clone.c	FUNCTION_41	IF_4
0x40018bb	    0x488b35000000	            mov rsi, qword [0x040018c2] 	       579	clone.c	FUNCTION_41	CALL_11
0x40018c2	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       579	clone.c	FUNCTION_41	CALL_11
0x40018c6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       579	clone.c	FUNCTION_41	CALL_11
0x40018ca	      0xb900000000	                              mov ecx, 0	       579	clone.c	FUNCTION_41	CALL_11
0x40018cf	          0x4889c7	                            mov rdi, rax	       579	clone.c	FUNCTION_41	CALL_11
0x40018d2	      0xe800000000	                          call 0x40018d7	       579	clone.c	FUNCTION_41	CALL_11
0x40018d7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       581	clone.c	FUNCTION_41
0x40018db	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       582	clone.c	FUNCTION_41
0x40018df	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       582	clone.c	FUNCTION_41
0x40018e8	            0x7405	                            je 0x40018ef	       582	clone.c	FUNCTION_41
0x40018ea	      0xe800000000	                          call 0x40018ef	       582	clone.c	FUNCTION_41
0x40018ef	        0x4883c448	                           add rsp, 0x48	       582	clone.c	FUNCTION_41
0x40018f3	              0x5b	                                 pop rbx	       582	clone.c	FUNCTION_41
0x40018f4	              0x5d	                                 pop rbp	       582	clone.c	FUNCTION_41
0x40018f5	              0xc3	                                     ret	       582	clone.c	FUNCTION_41
strip_suffix_mem	functions,0:FOR,0:IF,1:WHILE,0:CALL,2:ELSE,0:SWITCH,0:DO,0	38
0x40000b8	              0x55	                                push rbp	       538	git-compat-util.h	FUNCTION_75
0x40000b9	          0x4889e5	                            mov rbp, rsp	       538	git-compat-util.h	FUNCTION_75
0x40000bc	        0x4883ec30	                           sub rsp, 0x30	       538	git-compat-util.h	FUNCTION_75
0x40000c0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       538	git-compat-util.h	FUNCTION_75
0x40000c4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       538	git-compat-util.h	FUNCTION_75
0x40000c8	        0x488955d8	             mov qword [rbp - 0x28], rdx	       538	git-compat-util.h	FUNCTION_75
0x40000cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       539	git-compat-util.h	FUNCTION_75	CALL_1
0x40000d0	          0x4889c7	                            mov rdi, rax	       539	git-compat-util.h	FUNCTION_75	CALL_1
0x40000d3	      0xe800000000	                          call 0x40000d8	       539	git-compat-util.h	FUNCTION_75	CALL_1
0x40000d8	        0x488945f8	                mov qword [rbp - 8], rax	       539	git-compat-util.h	FUNCTION_75	CALL_1
0x40000dc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x40000e0	          0x488b00	                    mov rax, qword [rax]	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x40000e3	        0x483b45f8	                cmp rax, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x40000e7	            0x722d	                            jb 0x4000116	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x40000e9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x40000ed	          0x488b00	                    mov rax, qword [rax]	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x40000f0	        0x482b45f8	                sub rax, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x40000f4	          0x4889c2	                            mov rdx, rax	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x40000f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x40000fb	        0x488d0c02	                    lea rcx, [rdx + rax]	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x40000ff	        0x488b55f8	                mov rdx, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x4000103	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x4000107	          0x4889c6	                            mov rsi, rax	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x400010a	          0x4889cf	                            mov rdi, rcx	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x400010d	      0xe800000000	                          call 0x4000112	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x4000112	            0x85c0	                           test eax, eax	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x4000114	            0x7407	                            je 0x400011d	       540	git-compat-util.h	FUNCTION_75	IF_1	CALL_2
0x4000116	      0xb800000000	                              mov eax, 0	       541	git-compat-util.h	FUNCTION_75	IF_1
0x400011b	            0xeb1a	                           jmp 0x4000137	       541	git-compat-util.h	FUNCTION_75	IF_1
0x400011d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       542	git-compat-util.h	FUNCTION_75
0x4000121	          0x488b00	                    mov rax, qword [rax]	       542	git-compat-util.h	FUNCTION_75
0x4000124	        0x482b45f8	                sub rax, qword [rbp - 8]	       542	git-compat-util.h	FUNCTION_75
0x4000128	          0x4889c2	                            mov rdx, rax	       542	git-compat-util.h	FUNCTION_75
0x400012b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       542	git-compat-util.h	FUNCTION_75
0x400012f	          0x488910	                    mov qword [rax], rdx	       542	git-compat-util.h	FUNCTION_75
0x4000132	      0xb801000000	                              mov eax, 1	       543	git-compat-util.h	FUNCTION_75
0x4000137	              0xc9	                                   leave	       544	git-compat-util.h	FUNCTION_75
0x4000138	              0xc3	                                     ret	       544	git-compat-util.h	FUNCTION_75
strip_suffix	functions,0:FOR,0:IF,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0:DO,0	20
0x4000139	              0x55	                                push rbp	       554	git-compat-util.h	FUNCTION_76
0x400013a	          0x4889e5	                            mov rbp, rsp	       554	git-compat-util.h	FUNCTION_76
0x400013d	        0x4883ec20	                           sub rsp, 0x20	       554	git-compat-util.h	FUNCTION_76
0x4000141	        0x48897df8	                mov qword [rbp - 8], rdi	       554	git-compat-util.h	FUNCTION_76
0x4000145	        0x488975f0	             mov qword [rbp - 0x10], rsi	       554	git-compat-util.h	FUNCTION_76
0x4000149	        0x488955e8	             mov qword [rbp - 0x18], rdx	       554	git-compat-util.h	FUNCTION_76
0x400014d	        0x488b45f8	                mov rax, qword [rbp - 8]	       555	git-compat-util.h	FUNCTION_76	CALL_1
0x4000151	          0x4889c7	                            mov rdi, rax	       555	git-compat-util.h	FUNCTION_76	CALL_1
0x4000154	      0xe800000000	                          call 0x4000159	       555	git-compat-util.h	FUNCTION_76	CALL_1
0x4000159	          0x4889c2	                            mov rdx, rax	       555	git-compat-util.h	FUNCTION_76	CALL_1
0x400015c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       555	git-compat-util.h	FUNCTION_76	CALL_1
0x4000160	          0x488910	                    mov qword [rax], rdx	       555	git-compat-util.h	FUNCTION_76	CALL_1
0x4000163	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       556	git-compat-util.h	FUNCTION_76	CALL_2
0x4000167	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       556	git-compat-util.h	FUNCTION_76	CALL_2
0x400016b	        0x488b45f8	                mov rax, qword [rbp - 8]	       556	git-compat-util.h	FUNCTION_76	CALL_2
0x400016f	          0x4889ce	                            mov rsi, rcx	       556	git-compat-util.h	FUNCTION_76	CALL_2
0x4000172	          0x4889c7	                            mov rdi, rax	       556	git-compat-util.h	FUNCTION_76	CALL_2
0x4000175	      0xe83effffff	               call sym.strip_suffix_mem	       556	git-compat-util.h	FUNCTION_76	CALL_2
0x400017a	              0xc9	                                   leave	       557	git-compat-util.h	FUNCTION_76
0x400017b	              0xc3	                                     ret	       557	git-compat-util.h	FUNCTION_76
strip_trailing_slashes	functions,0:FOR,0:IF,0:WHILE,1:CALL,1:ELSE,0:SWITCH,0:DO,0	30
0x4000c2f	              0x55	                                push rbp	       311	clone.c	FUNCTION_32
0x4000c30	          0x4889e5	                            mov rbp, rsp	       311	clone.c	FUNCTION_32
0x4000c33	        0x4883ec20	                           sub rsp, 0x20	       311	clone.c	FUNCTION_32
0x4000c37	        0x48897de8	             mov qword [rbp - 0x18], rdi	       311	clone.c	FUNCTION_32
0x4000c3b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	clone.c	FUNCTION_32	CALL_1
0x4000c3f	          0x4889c7	                            mov rdi, rax	       312	clone.c	FUNCTION_32	CALL_1
0x4000c42	      0xe800000000	                          call 0x4000c47	       312	clone.c	FUNCTION_32	CALL_1
0x4000c47	          0x4889c2	                            mov rdx, rax	       312	clone.c	FUNCTION_32	CALL_1
0x4000c4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	clone.c	FUNCTION_32	CALL_1
0x4000c4e	          0x4801d0	                            add rax, rdx	       312	clone.c	FUNCTION_32	CALL_1
0x4000c51	        0x488945f8	                mov qword [rbp - 8], rax	       312	clone.c	FUNCTION_32	CALL_1
0x4000c55	            0xeb05	                           jmp 0x4000c5c	       314	clone.c	FUNCTION_32	WHILE_1
0x4000c57	      0x48836df801	                  sub qword [rbp - 8], 1	       315	clone.c	FUNCTION_32	WHILE_1
0x4000c5c	        0x488b45f8	                mov rax, qword [rbp - 8]	       314	clone.c	FUNCTION_32	WHILE_1
0x4000c60	        0x4883e801	                              sub rax, 1	       314	clone.c	FUNCTION_32	WHILE_1
0x4000c64	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       314	clone.c	FUNCTION_32	WHILE_1
0x4000c68	            0x7619	                           jbe 0x4000c83	       314	clone.c	FUNCTION_32	WHILE_1
0x4000c6a	        0x488b45f8	                mov rax, qword [rbp - 8]	       314	clone.c	FUNCTION_32	WHILE_1
0x4000c6e	        0x4883e801	                              sub rax, 1	       314	clone.c	FUNCTION_32	WHILE_1
0x4000c72	           0xfb600	                   movzx eax, byte [rax]	       314	clone.c	FUNCTION_32	WHILE_1
0x4000c75	           0xfbec0	                           movsx eax, al	       314	clone.c	FUNCTION_32	WHILE_1
0x4000c78	            0x89c7	                            mov edi, eax	       314	clone.c	FUNCTION_32	WHILE_1
0x4000c7a	      0xe8d0f3ffff	                 call sym.git_is_dir_sep	       314	clone.c	FUNCTION_32	WHILE_1
0x4000c7f	            0x85c0	                           test eax, eax	       314	clone.c	FUNCTION_32	WHILE_1
0x4000c81	            0x75d4	                           jne 0x4000c57	       314	clone.c	FUNCTION_32	WHILE_1
0x4000c83	        0x488b45f8	                mov rax, qword [rbp - 8]	       316	clone.c	FUNCTION_32
0x4000c87	          0xc60000	                       mov byte [rax], 0	       316	clone.c	FUNCTION_32
0x4000c8a	              0x90	                                     nop	       317	clone.c	FUNCTION_32
0x4000c8b	              0xc9	                                   leave	       317	clone.c	FUNCTION_32
0x4000c8c	              0xc3	                                     ret	       317	clone.c	FUNCTION_32
git_has_dos_drive_prefix	functions,0:FOR,0:IF,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0:DO,0	6
0x4000040	              0x55	                                push rbp	       347	git-compat-util.h	FUNCTION_66
0x4000041	          0x4889e5	                            mov rbp, rsp	       347	git-compat-util.h	FUNCTION_66
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       347	git-compat-util.h	FUNCTION_66
0x4000048	      0xb800000000	                              mov eax, 0	       348	git-compat-util.h	FUNCTION_66
0x400004d	              0x5d	                                 pop rbp	       349	git-compat-util.h	FUNCTION_66
0x400004e	              0xc3	                                     ret	       349	git-compat-util.h	FUNCTION_66
write_refspec_config	functions,0:FOR,0:IF,8:WHILE,0:CALL,13:ELSE,3:SWITCH,0:DO,0	150
0x40022e7	              0x55	                                push rbp	       810	clone.c	FUNCTION_50
0x40022e8	          0x4889e5	                            mov rbp, rsp	       810	clone.c	FUNCTION_50
0x40022eb	        0x4883ec70	                           sub rsp, 0x70	       810	clone.c	FUNCTION_50
0x40022ef	        0x48897da8	             mov qword [rbp - 0x58], rdi	       810	clone.c	FUNCTION_50
0x40022f3	        0x488975a0	             mov qword [rbp - 0x60], rsi	       810	clone.c	FUNCTION_50
0x40022f7	        0x48895598	             mov qword [rbp - 0x68], rdx	       810	clone.c	FUNCTION_50
0x40022fb	        0x48894d90	             mov qword [rbp - 0x70], rcx	       810	clone.c	FUNCTION_50
0x40022ff	    0x64488b042528	                mov rax, qword fs:[0x28]	       810	clone.c	FUNCTION_50
0x4002308	        0x488945f8	                mov qword [rbp - 8], rax	       810	clone.c	FUNCTION_50
0x400230c	            0x31c0	                            xor eax, eax	       810	clone.c	FUNCTION_50
0x400230e	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       811	clone.c	FUNCTION_50
0x4002316	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       811	clone.c	FUNCTION_50
0x400231e	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       811	clone.c	FUNCTION_50
0x4002326	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       812	clone.c	FUNCTION_50
0x400232e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       812	clone.c	FUNCTION_50
0x4002336	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       812	clone.c	FUNCTION_50
0x400233e	    0x8b0500000000	            mov eax, dword [0x04002344] 	       814	clone.c	FUNCTION_50	IF_1
0x4002344	            0x85c0	                           test eax, eax	       814	clone.c	FUNCTION_50	IF_1
0x4002346	            0x750e	                           jne 0x4002356	       814	clone.c	FUNCTION_50	IF_1
0x4002348	    0x8b0500000000	            mov eax, dword [0x0400234e] 	       814	clone.c	FUNCTION_50	IF_1
0x400234e	            0x85c0	                           test eax, eax	       814	clone.c	FUNCTION_50	IF_1
0x4002350	     0xf85de010000	                           jne 0x4002534	       814	clone.c	FUNCTION_50	IF_1
0x4002356	    0x8b0500000000	            mov eax, dword [0x0400235c] 	       815	clone.c	FUNCTION_50	IF_1	IF_2
0x400235c	            0x85c0	                           test eax, eax	       815	clone.c	FUNCTION_50	IF_1	IF_2
0x400235e	     0xf840d010000	                            je 0x4002471	       815	clone.c	FUNCTION_50	IF_1	IF_2
0x4002364	    0x8b0500000000	            mov eax, dword [0x0400236a] 	       815	clone.c	FUNCTION_50	IF_1	IF_2
0x400236a	            0x85c0	                           test eax, eax	       815	clone.c	FUNCTION_50	IF_1	IF_2
0x400236c	     0xf85ff000000	                           jne 0x4002471	       815	clone.c	FUNCTION_50	IF_1	IF_2
0x4002372	    0x488b05000000	            mov rax, qword [0x04002379] 	       816	clone.c	FUNCTION_50	IF_1	IF_2	IF_3
0x4002379	          0x4885c0	                           test rax, rax	       816	clone.c	FUNCTION_50	IF_1	IF_2	IF_3
0x400237c	            0x747f	                            je 0x40023fd	       816	clone.c	FUNCTION_50	IF_1	IF_2	IF_3
0x400237e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       817	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4	CALL_1
0x4002382	        0x4883c070	                           add rax, 0x70	       817	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4	CALL_1
0x4002386	      0xbe00000000	                              mov esi, 0	       817	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4	CALL_1
0x400238b	          0x4889c7	                            mov rdi, rax	       817	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4	CALL_1
0x400238e	      0xe800000000	                          call 0x4002393	       817	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4	CALL_1
0x4002393	            0x85c0	                           test eax, eax	       817	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4	CALL_1
0x4002395	            0x742b	                            je 0x40023c2	       817	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4	CALL_1
0x4002397	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       819	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4
0x400239b	        0x488d4870	                   lea rcx, [rax + 0x70]	       819	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4
0x400239f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       818	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4	CALL_2
0x40023a3	        0x488d5070	                   lea rdx, [rax + 0x70]	       818	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4	CALL_2
0x40023a7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       818	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4	CALL_2
0x40023ab	      0xbe00000000	                              mov esi, 0	       818	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4	CALL_2
0x40023b0	          0x4889c7	                            mov rdi, rax	       818	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4	CALL_2
0x40023b3	      0xb800000000	                              mov eax, 0	       818	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4	CALL_2
0x40023b8	      0xe800000000	                          call 0x40023bd	       818	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	IF_4	CALL_2
0x40023bd	      0xe9d3000000	                           jmp 0x4002495	       816	clone.c	FUNCTION_50	IF_1	IF_2	IF_3
0x40023c2	    0x488b0d000000	            mov rcx, qword [0x040023c9] 	       821	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x40023c9	        0x488b4590	             mov rax, qword [rbp - 0x70]	       821	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x40023cd	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       821	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x40023d1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       821	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x40023d5	        0x488d7070	                   lea rsi, [rax + 0x70]	       821	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x40023d9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       821	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x40023dd	          0x4989c8	                             mov r8, rcx	       821	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x40023e0	          0x4889d1	                            mov rcx, rdx	       821	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x40023e3	          0x4889f2	                            mov rdx, rsi	       821	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x40023e6	      0xbe00000000	                              mov esi, 0	       821	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x40023eb	          0x4889c7	                            mov rdi, rax	       821	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x40023ee	      0xb800000000	                              mov eax, 0	       821	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x40023f3	      0xe800000000	                          call 0x40023f8	       821	clone.c	FUNCTION_50	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x40023f8	      0xe998000000	                           jmp 0x4002495	       816	clone.c	FUNCTION_50	IF_1	IF_2	IF_3
0x40023fd	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       823	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5
0x4002402	     0xf848d000000	                            je 0x4002495	       823	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5
0x4002408	        0x488b4598	             mov rax, qword [rbp - 0x68]	       824	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5
0x400240c	        0x4883c070	                           add rax, 0x70	       824	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5
0x4002410	        0x488945b8	             mov qword [rbp - 0x48], rax	       824	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5
0x4002414	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       825	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	IF_6	CALL_4
0x4002418	        0x488d55b8	                   lea rdx, [rbp - 0x48]	       825	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	IF_6	CALL_4
0x400241c	      0xbe00000000	                              mov esi, 0	       825	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	IF_6	CALL_4
0x4002421	          0x4889c7	                            mov rdi, rax	       825	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	IF_6	CALL_4
0x4002424	      0xe839dcffff	                    call sym.skip_prefix	       825	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	IF_6	CALL_4
0x4002429	            0x85c0	                           test eax, eax	       825	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	IF_6	CALL_4
0x400242b	            0x750f	                           jne 0x400243c	       825	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	IF_6	CALL_4
0x400242d	      0xbf00000000	                              mov edi, 0	       826	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x4002432	      0xb800000000	                              mov eax, 0	       826	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x4002437	      0xe800000000	                          call 0x400243c	       826	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400243c	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       828	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x4002440	        0x488b4590	             mov rax, qword [rbp - 0x70]	       828	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x4002444	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       828	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x4002448	        0x488b4598	             mov rax, qword [rbp - 0x68]	       828	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x400244c	        0x488d7070	                   lea rsi, [rax + 0x70]	       828	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x4002450	        0x488d45e0	                   lea rax, [rbp - 0x20]	       828	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x4002454	          0x4989c8	                             mov r8, rcx	       828	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x4002457	          0x4889d1	                            mov rcx, rdx	       828	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x400245a	          0x4889f2	                            mov rdx, rsi	       828	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x400245d	      0xbe00000000	                              mov esi, 0	       828	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x4002462	          0x4889c7	                            mov rdi, rax	       828	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x4002465	      0xb800000000	                              mov eax, 0	       828	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x400246a	      0xe800000000	                          call 0x400246f	       828	clone.c	FUNCTION_50	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x400246f	            0xeb24	                           jmp 0x4002495	       816	clone.c	FUNCTION_50	IF_1	IF_2	IF_3
0x4002471	        0x488b4590	             mov rax, qword [rbp - 0x70]	       838	clone.c	FUNCTION_50	IF_1	ELSE_3	CALL_7
0x4002475	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       838	clone.c	FUNCTION_50	IF_1	ELSE_3	CALL_7
0x4002479	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       838	clone.c	FUNCTION_50	IF_1	ELSE_3	CALL_7
0x400247d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       838	clone.c	FUNCTION_50	IF_1	ELSE_3	CALL_7
0x4002481	      0xbe00000000	                              mov esi, 0	       838	clone.c	FUNCTION_50	IF_1	ELSE_3	CALL_7
0x4002486	          0x4889c7	                            mov rdi, rax	       838	clone.c	FUNCTION_50	IF_1	ELSE_3	CALL_7
0x4002489	      0xb800000000	                              mov eax, 0	       838	clone.c	FUNCTION_50	IF_1	ELSE_3	CALL_7
0x400248e	      0xe800000000	                          call 0x4002493	       838	clone.c	FUNCTION_50	IF_1	ELSE_3	CALL_7
0x4002493	            0xeb01	                           jmp 0x4002496	       838	clone.c	FUNCTION_50	IF_1	ELSE_3	CALL_7
0x4002495	              0x90	                                     nop	       816	clone.c	FUNCTION_50	IF_1	IF_2	IF_3
0x4002496	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       841	clone.c	FUNCTION_50	IF_1	IF_7
0x400249a	          0x4885c0	                           test rax, rax	       841	clone.c	FUNCTION_50	IF_1	IF_7
0x400249d	     0xf8491000000	                            je 0x4002534	       841	clone.c	FUNCTION_50	IF_1	IF_7
0x40024a3	    0x488b15000000	            mov rdx, qword [0x040024aa] 	       842	clone.c	FUNCTION_50	IF_1	IF_7	CALL_8
0x40024aa	        0x488d45c0	                   lea rax, [rbp - 0x40]	       842	clone.c	FUNCTION_50	IF_1	IF_7	CALL_8
0x40024ae	      0xbe00000000	                              mov esi, 0	       842	clone.c	FUNCTION_50	IF_1	IF_7	CALL_8
0x40024b3	          0x4889c7	                            mov rdi, rax	       842	clone.c	FUNCTION_50	IF_1	IF_7	CALL_8
0x40024b6	      0xb800000000	                              mov eax, 0	       842	clone.c	FUNCTION_50	IF_1	IF_7	CALL_8
0x40024bb	      0xe800000000	                          call 0x40024c0	       842	clone.c	FUNCTION_50	IF_1	IF_7	CALL_8
0x40024c0	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       843	clone.c	FUNCTION_50	IF_1	IF_7	CALL_9
0x40024c4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       843	clone.c	FUNCTION_50	IF_1	IF_7	CALL_9
0x40024c8	      0xb900000000	                              mov ecx, 0	       843	clone.c	FUNCTION_50	IF_1	IF_7	CALL_9
0x40024cd	      0xba00000000	                              mov edx, 0	       843	clone.c	FUNCTION_50	IF_1	IF_7	CALL_9
0x40024d2	          0x4889c7	                            mov rdi, rax	       843	clone.c	FUNCTION_50	IF_1	IF_7	CALL_9
0x40024d5	      0xe800000000	                          call 0x40024da	       843	clone.c	FUNCTION_50	IF_1	IF_7	CALL_9
0x40024da	        0x488d45c0	                   lea rax, [rbp - 0x40]	       844	clone.c	FUNCTION_50	IF_1	IF_7
0x40024de	      0xbe00000000	                              mov esi, 0	       844	clone.c	FUNCTION_50	IF_1	IF_7
0x40024e3	          0x4889c7	                            mov rdi, rax	       844	clone.c	FUNCTION_50	IF_1	IF_7
0x40024e6	      0xe813ddffff	                  call sym.strbuf_setlen	       844	clone.c	FUNCTION_50	IF_1	IF_7
0x40024eb	    0x8b0500000000	            mov eax, dword [0x040024f1] 	       846	clone.c	FUNCTION_50	IF_1	IF_7	IF_8
0x40024f1	            0x85c0	                           test eax, eax	       846	clone.c	FUNCTION_50	IF_1	IF_7	IF_8
0x40024f3	            0x743f	                            je 0x4002534	       846	clone.c	FUNCTION_50	IF_1	IF_7	IF_8
0x40024f5	    0x488b15000000	            mov rdx, qword [0x040024fc] 	       847	clone.c	FUNCTION_50	IF_1	IF_7	IF_8	CALL_10
0x40024fc	        0x488d45c0	                   lea rax, [rbp - 0x40]	       847	clone.c	FUNCTION_50	IF_1	IF_7	IF_8	CALL_10
0x4002500	      0xbe00000000	                              mov esi, 0	       847	clone.c	FUNCTION_50	IF_1	IF_7	IF_8	CALL_10
0x4002505	          0x4889c7	                            mov rdi, rax	       847	clone.c	FUNCTION_50	IF_1	IF_7	IF_8	CALL_10
0x4002508	      0xb800000000	                              mov eax, 0	       847	clone.c	FUNCTION_50	IF_1	IF_7	IF_8	CALL_10
0x400250d	      0xe800000000	                          call 0x4002512	       847	clone.c	FUNCTION_50	IF_1	IF_7	IF_8	CALL_10
0x4002512	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       848	clone.c	FUNCTION_50	IF_1	IF_7	IF_8	CALL_11
0x4002516	      0xbe00000000	                              mov esi, 0	       848	clone.c	FUNCTION_50	IF_1	IF_7	IF_8	CALL_11
0x400251b	          0x4889c7	                            mov rdi, rax	       848	clone.c	FUNCTION_50	IF_1	IF_7	IF_8	CALL_11
0x400251e	      0xe800000000	                          call 0x4002523	       848	clone.c	FUNCTION_50	IF_1	IF_7	IF_8	CALL_11
0x4002523	        0x488d45c0	                   lea rax, [rbp - 0x40]	       849	clone.c	FUNCTION_50	IF_1	IF_7	IF_8
0x4002527	      0xbe00000000	                              mov esi, 0	       849	clone.c	FUNCTION_50	IF_1	IF_7	IF_8
0x400252c	          0x4889c7	                            mov rdi, rax	       849	clone.c	FUNCTION_50	IF_1	IF_7	IF_8
0x400252f	      0xe8cadcffff	                  call sym.strbuf_setlen	       849	clone.c	FUNCTION_50	IF_1	IF_7	IF_8
0x4002534	        0x488d45c0	                   lea rax, [rbp - 0x40]	       854	clone.c	FUNCTION_50	CALL_12
0x4002538	          0x4889c7	                            mov rdi, rax	       854	clone.c	FUNCTION_50	CALL_12
0x400253b	      0xe800000000	                          call 0x4002540	       854	clone.c	FUNCTION_50	CALL_12
0x4002540	        0x488d45e0	                   lea rax, [rbp - 0x20]	       855	clone.c	FUNCTION_50	CALL_13
0x4002544	          0x4889c7	                            mov rdi, rax	       855	clone.c	FUNCTION_50	CALL_13
0x4002547	      0xe800000000	                          call 0x400254c	       855	clone.c	FUNCTION_50	CALL_13
0x400254c	              0x90	                                     nop	       856	clone.c	FUNCTION_50
0x400254d	        0x488b45f8	                mov rax, qword [rbp - 8]	       856	clone.c	FUNCTION_50
0x4002551	    0x644833042528	                xor rax, qword fs:[0x28]	       856	clone.c	FUNCTION_50
0x400255a	            0x7405	                            je 0x4002561	       856	clone.c	FUNCTION_50
0x400255c	      0xe800000000	                          call 0x4002561	       856	clone.c	FUNCTION_50
0x4002561	              0xc9	                                   leave	       856	clone.c	FUNCTION_50
0x4002562	              0xc3	                                     ret	       856	clone.c	FUNCTION_50
remove_junk_on_signal	functions,0:FOR,0:IF,0:WHILE,0:CALL,3:ELSE,0:SWITCH,0:DO,0	14
0x4001638	              0x55	                                push rbp	       522	clone.c	FUNCTION_39
0x4001639	          0x4889e5	                            mov rbp, rsp	       522	clone.c	FUNCTION_39
0x400163c	        0x4883ec10	                           sub rsp, 0x10	       522	clone.c	FUNCTION_39
0x4001640	          0x897dfc	                mov dword [rbp - 4], edi	       522	clone.c	FUNCTION_39
0x4001643	      0xe8e7feffff	                    call sym.remove_junk	       523	clone.c	FUNCTION_39	CALL_1
0x4001648	          0x8b45fc	                mov eax, dword [rbp - 4]	       524	clone.c	FUNCTION_39	CALL_2
0x400164b	            0x89c7	                            mov edi, eax	       524	clone.c	FUNCTION_39	CALL_2
0x400164d	      0xe800000000	                          call 0x4001652	       524	clone.c	FUNCTION_39	CALL_2
0x4001652	          0x8b45fc	                mov eax, dword [rbp - 4]	       525	clone.c	FUNCTION_39	CALL_3
0x4001655	            0x89c7	                            mov edi, eax	       525	clone.c	FUNCTION_39	CALL_3
0x4001657	      0xe800000000	                          call 0x400165c	       525	clone.c	FUNCTION_39	CALL_3
0x400165c	              0x90	                                     nop	       526	clone.c	FUNCTION_39
0x400165d	              0xc9	                                   leave	       526	clone.c	FUNCTION_39
0x400165e	              0xc3	                                     ret	       526	clone.c	FUNCTION_39
ends_with	functions,0:FOR,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:DO,0	20
0x400017c	              0x55	                                push rbp	       560	git-compat-util.h	FUNCTION_77
0x400017d	          0x4889e5	                            mov rbp, rsp	       560	git-compat-util.h	FUNCTION_77
0x4000180	        0x4883ec20	                           sub rsp, 0x20	       560	git-compat-util.h	FUNCTION_77
0x4000184	        0x48897de8	             mov qword [rbp - 0x18], rdi	       560	git-compat-util.h	FUNCTION_77
0x4000188	        0x488975e0	             mov qword [rbp - 0x20], rsi	       560	git-compat-util.h	FUNCTION_77
0x400018c	    0x64488b042528	                mov rax, qword fs:[0x28]	       560	git-compat-util.h	FUNCTION_77
0x4000195	        0x488945f8	                mov qword [rbp - 8], rax	       560	git-compat-util.h	FUNCTION_77
0x4000199	            0x31c0	                            xor eax, eax	       560	git-compat-util.h	FUNCTION_77
0x400019b	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       562	git-compat-util.h	FUNCTION_77	CALL_1
0x400019f	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       562	git-compat-util.h	FUNCTION_77	CALL_1
0x40001a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       562	git-compat-util.h	FUNCTION_77	CALL_1
0x40001a7	          0x4889ce	                            mov rsi, rcx	       562	git-compat-util.h	FUNCTION_77	CALL_1
0x40001aa	          0x4889c7	                            mov rdi, rax	       562	git-compat-util.h	FUNCTION_77	CALL_1
0x40001ad	      0xe887ffffff	                   call sym.strip_suffix	       562	git-compat-util.h	FUNCTION_77	CALL_1
0x40001b2	        0x488b4df8	                mov rcx, qword [rbp - 8]	       563	git-compat-util.h	FUNCTION_77
0x40001b6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       563	git-compat-util.h	FUNCTION_77
0x40001bf	            0x7405	                            je 0x40001c6	       563	git-compat-util.h	FUNCTION_77
0x40001c1	      0xe800000000	                          call 0x40001c6	       563	git-compat-util.h	FUNCTION_77
0x40001c6	              0xc9	                                   leave	       563	git-compat-util.h	FUNCTION_77
0x40001c7	              0xc3	                                     ret	       563	git-compat-util.h	FUNCTION_77
