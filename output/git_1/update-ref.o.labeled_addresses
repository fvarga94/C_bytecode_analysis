cmd_update_ref	IF,16:CALL,36:functions,0:DO,0:ELSE,3:FOR,0:SWITCH,0:WHILE,0	587
0x4000430	            0x4155	                                push r13	       355	update-ref.c	FUNCTION_10
0x4000432	            0x4154	                                push r12	       355	update-ref.c	FUNCTION_10
0x4000434	              0x55	                                push rbp	       355	update-ref.c	FUNCTION_10
0x4000435	              0x53	                                push rbx	       355	update-ref.c	FUNCTION_10
0x4000436	    0x4881ecb80200	                          sub rsp, 0x2b8	       355	update-ref.c	FUNCTION_10
0x400043d	            0x89fd	                            mov ebp, edi	       355	update-ref.c	FUNCTION_10
0x400043f	          0x4889f3	                            mov rbx, rsi	       355	update-ref.c	FUNCTION_10
0x4000442	          0x4989d4	                            mov r12, rdx	       355	update-ref.c	FUNCTION_10
0x4000445	    0x64488b042528	                mov rax, qword fs:[0x28]	       355	update-ref.c	FUNCTION_10
0x400044e	    0x48898424a802	            mov qword [rsp + 0x2a8], rax	       355	update-ref.c	FUNCTION_10
0x4000456	            0x31c0	                            xor eax, eax	       355	update-ref.c	FUNCTION_10
0x4000458	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       358	update-ref.c	FUNCTION_10
0x4000460	    0xc74424100000	               mov dword [rsp + 0x10], 0	       358	update-ref.c	FUNCTION_10
0x4000468	    0xc74424140000	               mov dword [rsp + 0x14], 0	       358	update-ref.c	FUNCTION_10
0x4000470	    0xc74424180000	               mov dword [rsp + 0x18], 0	       358	update-ref.c	FUNCTION_10
0x4000478	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       360	update-ref.c	FUNCTION_10
0x4000480	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	       361	update-ref.c	FUNCTION_10
0x4000488	      0xb938000000	                           mov ecx, 0x38	       361	update-ref.c	FUNCTION_10
0x400048d	          0xf348ab	              rep stosq qword [rdi], rax	       361	update-ref.c	FUNCTION_10
0x4000490	    0xc78424e00000	               mov dword [rsp + 0xe0], 9	       361	update-ref.c	FUNCTION_10
0x400049b	    0xc78424e40000	           mov dword [rsp + 0xe4], 0x6d 	       361	update-ref.c	FUNCTION_10
0x40004a6	    0x48c78424f000	               mov qword [rsp + 0xf0], 0	       361	update-ref.c	FUNCTION_10
0x40004b2	    0x48c78424f800	               mov qword [rsp + 0xf8], 0	       361	update-ref.c	FUNCTION_10
0x40004be	    0x48c784240001	              mov qword [rsp + 0x100], 0	       361	update-ref.c	FUNCTION_10
0x40004ca	    0xc78424200100	              mov dword [rsp + 0x120], 7	       361	update-ref.c	FUNCTION_10
0x40004d5	    0xc78424240100	          mov dword [rsp + 0x124], 0x64 	       361	update-ref.c	FUNCTION_10
0x40004e0	      0x488d44240c	                    lea rax, [rsp + 0xc]	       361	update-ref.c	FUNCTION_10
0x40004e5	    0x488984243001	            mov qword [rsp + 0x130], rax	       361	update-ref.c	FUNCTION_10
0x40004ed	    0x48c784244001	              mov qword [rsp + 0x140], 0	       361	update-ref.c	FUNCTION_10
0x40004f9	    0xc78424480100	              mov dword [rsp + 0x148], 2	       361	update-ref.c	FUNCTION_10
0x4000504	    0x48c784245801	              mov qword [rsp + 0x158], 1	       361	update-ref.c	FUNCTION_10
0x4000510	    0xc78424600100	              mov dword [rsp + 0x160], 7	       361	update-ref.c	FUNCTION_10
0x400051b	    0x48c784246801	              mov qword [rsp + 0x168], 0	       361	update-ref.c	FUNCTION_10
0x4000527	      0x488d442410	                   lea rax, [rsp + 0x10]	       361	update-ref.c	FUNCTION_10
0x400052c	    0x488984247001	            mov qword [rsp + 0x170], rax	       361	update-ref.c	FUNCTION_10
0x4000534	    0x48c784248001	              mov qword [rsp + 0x180], 0	       361	update-ref.c	FUNCTION_10
0x4000540	    0xc78424880100	              mov dword [rsp + 0x188], 2	       361	update-ref.c	FUNCTION_10
0x400054b	    0x48c784249801	              mov qword [rsp + 0x198], 1	       361	update-ref.c	FUNCTION_10
0x4000557	    0xc78424a00100	              mov dword [rsp + 0x1a0], 7	       361	update-ref.c	FUNCTION_10
0x4000562	    0xc78424a40100	          mov dword [rsp + 0x1a4], 0x7a 	       361	update-ref.c	FUNCTION_10
0x400056d	      0x488d442418	                   lea rax, [rsp + 0x18]	       361	update-ref.c	FUNCTION_10
0x4000572	    0x48898424b001	            mov qword [rsp + 0x1b0], rax	       361	update-ref.c	FUNCTION_10
0x400057a	    0x48c78424c001	              mov qword [rsp + 0x1c0], 0	       361	update-ref.c	FUNCTION_10
0x4000586	    0xc78424c80100	              mov dword [rsp + 0x1c8], 2	       361	update-ref.c	FUNCTION_10
0x4000591	    0x48c78424d801	              mov qword [rsp + 0x1d8], 1	       361	update-ref.c	FUNCTION_10
0x400059d	    0xc78424e00100	              mov dword [rsp + 0x1e0], 7	       361	update-ref.c	FUNCTION_10
0x40005a8	    0x48c78424e801	              mov qword [rsp + 0x1e8], 0	       361	update-ref.c	FUNCTION_10
0x40005b4	      0x488d442414	                   lea rax, [rsp + 0x14]	       361	update-ref.c	FUNCTION_10
0x40005b9	    0x48898424f001	            mov qword [rsp + 0x1f0], rax	       361	update-ref.c	FUNCTION_10
0x40005c1	    0x48c784240002	              mov qword [rsp + 0x200], 0	       361	update-ref.c	FUNCTION_10
0x40005cd	    0xc78424080200	              mov dword [rsp + 0x208], 2	       361	update-ref.c	FUNCTION_10
0x40005d8	    0x48c784241802	              mov qword [rsp + 0x218], 1	       361	update-ref.c	FUNCTION_10
0x40005e4	    0xc78424200200	              mov dword [rsp + 0x220], 7	       361	update-ref.c	FUNCTION_10
0x40005ef	    0x48c784242802	              mov qword [rsp + 0x228], 0	       361	update-ref.c	FUNCTION_10
0x40005fb	      0x488d44241c	                   lea rax, [rsp + 0x1c]	       361	update-ref.c	FUNCTION_10
0x4000600	    0x488984243002	            mov qword [rsp + 0x230], rax	       361	update-ref.c	FUNCTION_10
0x4000608	    0x48c784244002	              mov qword [rsp + 0x240], 0	       361	update-ref.c	FUNCTION_10
0x4000614	    0xc78424480200	              mov dword [rsp + 0x248], 2	       361	update-ref.c	FUNCTION_10
0x400061f	    0x48c784245802	              mov qword [rsp + 0x258], 1	       361	update-ref.c	FUNCTION_10
0x400062b	      0xbe00000000	                              mov esi, 0	       372	update-ref.c	FUNCTION_10	CALL_15
0x4000630	      0xbf00000000	                              mov edi, 0	       372	update-ref.c	FUNCTION_10	CALL_15
0x4000635	      0xe800000000	                          call 0x400063a	       372	update-ref.c	FUNCTION_10	CALL_15
0x400063a	    0x41b900000000	                              mov r9d, 0	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000640	    0x41b800000000	                              mov r8d, 0	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000646	    0x488d8c24e000	                   lea rcx, [rsp + 0xe0]	       373	update-ref.c	FUNCTION_10	CALL_16
0x400064e	          0x4c89e2	                            mov rdx, r12	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000651	          0x4889de	                            mov rsi, rbx	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000654	            0x89ef	                            mov edi, ebp	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000656	      0xe800000000	                          call 0x400065b	       373	update-ref.c	FUNCTION_10	CALL_16
0x400065b	            0x89c5	                            mov ebp, eax	       373	update-ref.c	FUNCTION_10	CALL_16
0x400065d	    0x488b05000000	            mov rax, qword [0x04000664] 	       375	update-ref.c	FUNCTION_10	IF_1
0x4000664	          0x4885c0	                           test rax, rax	       375	update-ref.c	FUNCTION_10	IF_1
0x4000667	            0x7414	                            je 0x400067d	       375	update-ref.c	FUNCTION_10	IF_1
0x4000669	          0x803800	                       cmp byte [rax], 0	       375	update-ref.c	FUNCTION_10	IF_1
0x400066c	            0x750f	                           jne 0x400067d	       375	update-ref.c	FUNCTION_10	IF_1
0x400066e	      0xbf00000000	                              mov edi, 0	       376	update-ref.c	FUNCTION_10	CALL_17
0x4000673	      0xb800000000	                              mov eax, 0	       376	update-ref.c	FUNCTION_10	CALL_17
0x4000678	      0xe800000000	                          call 0x400067d	       376	update-ref.c	FUNCTION_10	CALL_17
0x400067d	      0x837c241c01	               cmp dword [rsp + 0x1c], 1	       378	update-ref.c	FUNCTION_10
0x4000682	            0x19c0	                            sbb eax, eax	       378	update-ref.c	FUNCTION_10
0x4000684	            0xf7d0	                                 not eax	       378	update-ref.c	FUNCTION_10
0x4000686	          0x83e002	                              and eax, 2	       378	update-ref.c	FUNCTION_10
0x4000689	    0x890500000000	            mov dword [0x0400068f], eax 	       378	update-ref.c	FUNCTION_10
0x400068f	      0x837c241400	               cmp dword [rsp + 0x14], 0	       380	update-ref.c	FUNCTION_10	IF_2
0x4000694	     0xf84cd060000	                            je 0x4000d67	       380	update-ref.c	FUNCTION_10	IF_2
0x400069a	    0x48c744244000	               mov qword [rsp + 0x40], 0	       381	update-ref.c	FUNCTION_10	IF_2
0x40006a3	    0x48c744244800	               mov qword [rsp + 0x48], 0	       381	update-ref.c	FUNCTION_10	IF_2
0x40006ac	    0x48c744245000	               mov qword [rsp + 0x50], 0	       381	update-ref.c	FUNCTION_10	IF_2
0x40006b5	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       384	update-ref.c	FUNCTION_10	IF_2	CALL_18
0x40006ba	      0xe800000000	                          call 0x40006bf	       384	update-ref.c	FUNCTION_10	IF_2	CALL_18
0x40006bf	          0x4989c5	                            mov r13, rax	       384	update-ref.c	FUNCTION_10	IF_2	CALL_18
0x40006c2	          0x4885c0	                           test rax, rax	       385	update-ref.c	FUNCTION_10	IF_2	IF_3
0x40006c5	            0x7514	                           jne 0x40006db	       385	update-ref.c	FUNCTION_10	IF_2	IF_3
0x40006c7	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	       386	update-ref.c	FUNCTION_10	IF_2	CALL_19
0x40006cc	      0xbf00000000	                              mov edi, 0	       386	update-ref.c	FUNCTION_10	IF_2	CALL_19
0x40006d1	      0xb800000000	                              mov eax, 0	       386	update-ref.c	FUNCTION_10	IF_2	CALL_19
0x40006d6	      0xe800000000	                          call 0x40006db	       386	update-ref.c	FUNCTION_10	IF_2	CALL_19
0x40006db	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x40006e0	            0x750b	                           jne 0x40006ed	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x40006e2	      0x837c241000	               cmp dword [rsp + 0x10], 0	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x40006e7	            0x7504	                           jne 0x40006ed	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x40006e9	            0x85ed	                           test ebp, ebp	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x40006eb	            0x7e12	                           jle 0x40006ff	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x40006ed	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	       388	update-ref.c	FUNCTION_10	IF_2	CALL_20
0x40006f5	      0xbf00000000	                              mov edi, 0	       388	update-ref.c	FUNCTION_10	IF_2	CALL_20
0x40006fa	      0xe800000000	                          call 0x40006ff	       388	update-ref.c	FUNCTION_10	IF_2	CALL_20
0x40006ff	      0x837c241800	               cmp dword [rsp + 0x18], 0	       389	update-ref.c	FUNCTION_10	IF_2	IF_5
0x4000704	            0x7407	                            je 0x400070d	       389	update-ref.c	FUNCTION_10	IF_2	IF_5
0x4000706	    0xc60500000000	                mov byte [0x0400070d], 0	       390	update-ref.c	FUNCTION_10	IF_2	IF_5
0x400070d	    0x48c744246000	               mov qword [rsp + 0x60], 0	       323	update-ref.c	FUNCTION_9
0x4000716	    0x48c744246800	               mov qword [rsp + 0x68], 0	       323	update-ref.c	FUNCTION_9
0x400071f	    0x48c744247000	               mov qword [rsp + 0x70], 0	       323	update-ref.c	FUNCTION_9
0x4000728	      0xbae8030000	                          mov edx, 0x3e8	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x400072d	      0xbe00000000	                              mov esi, 0	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x4000732	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x4000737	      0xe800000000	                          call 0x400073c	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x400073c	          0x4885c0	                           test rax, rax	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x400073f	            0x790f	                           jns 0x4000750	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x4000741	      0xbf00000000	                              mov edi, 0	       327	update-ref.c	FUNCTION_9	CALL_2
0x4000746	      0xb800000000	                              mov eax, 0	       327	update-ref.c	FUNCTION_9	CALL_2
0x400074b	      0xe800000000	                          call 0x4000750	       327	update-ref.c	FUNCTION_9	CALL_2
0x4000750	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	       328	update-ref.c	FUNCTION_9
0x4000755	          0x4889d8	                            mov rax, rbx	       330	update-ref.c	FUNCTION_9	WHILE_1
0x4000758	      0x4803442468	             add rax, qword [rsp + 0x68]	       330	update-ref.c	FUNCTION_9	WHILE_1
0x400075d	          0x4839c3	                            cmp rbx, rax	       330	update-ref.c	FUNCTION_9	WHILE_1
0x4000760	     0xf83b9050000	                           jae 0x4000d1f	       330	update-ref.c	FUNCTION_9	WHILE_1
0x4000766	           0xfb603	                   movzx eax, byte [rbx]	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x4000769	    0x3a0500000000	               cmp al, byte [0x0400076f]	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x400076f	            0x742a	                            je 0x400079b	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x4000771	           0xfb6c0	                           movzx eax, al	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0x4000774	    0xf68000000000	                      test byte [rax], 1	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0x400077b	            0x7539	                           jne 0x40007b6	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0x400077d	    0x488dac24c000	                   lea rbp, [rsp + 0xc0]	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000785	    0x4c8da4248000	                   lea r12, [rsp + 0x80]	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x400078d	            0xeb39	                           jmp 0x40007c8	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x400078f	         0xfb64201	               movzx eax, byte [rdx + 1]	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x4000793	    0x3a0500000000	               cmp al, byte [0x04000799]	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x4000799	            0x750f	                           jne 0x40007aa	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x400079b	      0xbf00000000	                              mov edi, 0	       332	update-ref.c	FUNCTION_9	WHILE_1	CALL_3
0x40007a0	      0xb800000000	                              mov eax, 0	       332	update-ref.c	FUNCTION_9	WHILE_1	CALL_3
0x40007a5	      0xe800000000	                          call 0x40007aa	       332	update-ref.c	FUNCTION_9	WHILE_1	CALL_3
0x40007aa	           0xfb6c0	                           movzx eax, al	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0x40007ad	    0xf68000000000	                      test byte [rax], 1	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0x40007b4	            0x7412	                            je 0x40007c8	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0x40007b6	          0x4889de	                            mov rsi, rbx	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0x40007b9	      0xbf00000000	                              mov edi, 0	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0x40007be	      0xb800000000	                              mov eax, 0	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0x40007c3	      0xe800000000	                          call 0x40007c8	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0x40007c8	      0xbe00000000	                              mov esi, 0	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x40007cd	          0x4889df	                            mov rdi, rbx	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x40007d0	      0xe800000000	                          call 0x40007d5	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x40007d5	            0x85c0	                           test eax, eax	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x40007d7	     0xf844c010000	                            je 0x4000929	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x40007dd	        0x4883c307	                              add rbx, 7	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x40007e1	      0x48895c2420	             mov qword [rsp + 0x20], rbx	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x40007e6	    0x48c784248000	               mov qword [rsp + 0x80], 0	       183	update-ref.c	FUNCTION_4
0x40007f2	    0x48c784248800	               mov qword [rsp + 0x88], 0	       183	update-ref.c	FUNCTION_4
0x40007fe	    0x48c784249000	               mov qword [rsp + 0x90], 0	       183	update-ref.c	FUNCTION_4
0x400080a	      0x488d742420	                   lea rsi, [rsp + 0x20]	       188	update-ref.c	FUNCTION_4	CALL_1
0x400080f	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       188	update-ref.c	FUNCTION_4	CALL_1
0x4000814	      0xe81df9ffff	                  call sym.parse_refname	       188	update-ref.c	FUNCTION_4	CALL_1
0x4000819	          0x4889c3	                            mov rbx, rax	       188	update-ref.c	FUNCTION_4	CALL_1
0x400081c	          0x4885c0	                           test rax, rax	       189	update-ref.c	FUNCTION_4	IF_1
0x400081f	            0x750f	                           jne 0x4000830	       189	update-ref.c	FUNCTION_4	IF_1
0x4000821	      0xbf00000000	                              mov edi, 0	       190	update-ref.c	FUNCTION_4	CALL_2
0x4000826	      0xb800000000	                              mov eax, 0	       190	update-ref.c	FUNCTION_4	CALL_2
0x400082b	      0xe800000000	                          call 0x4000830	       190	update-ref.c	FUNCTION_4	CALL_2
0x4000830	    0x41b902000000	                              mov r9d, 2	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000836	          0x4989c0	                             mov r8, rax	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000839	      0xb900000000	                              mov ecx, 0	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x400083e	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000846	      0x488d742420	                   lea rsi, [rsp + 0x20]	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x400084b	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000850	      0xe8bdf9ffff	                 call sym.parse_next_oid	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000855	            0x85c0	                           test eax, eax	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000857	            0x7412	                            je 0x400086b	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000859	          0x4889de	                            mov rsi, rbx	       194	update-ref.c	FUNCTION_4	CALL_4
0x400085c	      0xbf00000000	                              mov edi, 0	       194	update-ref.c	FUNCTION_4	CALL_4
0x4000861	      0xb800000000	                              mov eax, 0	       194	update-ref.c	FUNCTION_4	CALL_4
0x4000866	      0xe800000000	                          call 0x400086b	       194	update-ref.c	FUNCTION_4	CALL_4
0x400086b	    0x41b901000000	                              mov r9d, 1	       196	update-ref.c	FUNCTION_4	CALL_5
0x4000871	          0x4989d8	                             mov r8, rbx	       196	update-ref.c	FUNCTION_4	CALL_5
0x4000874	      0xb900000000	                              mov ecx, 0	       196	update-ref.c	FUNCTION_4	CALL_5
0x4000879	          0x4889ea	                            mov rdx, rbp	       196	update-ref.c	FUNCTION_4	CALL_5
0x400087c	      0x488d742420	                   lea rsi, [rsp + 0x20]	       196	update-ref.c	FUNCTION_4	CALL_5
0x4000881	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       196	update-ref.c	FUNCTION_4	CALL_5
0x4000886	      0xe887f9ffff	                 call sym.parse_next_oid	       196	update-ref.c	FUNCTION_4	CALL_5
0x400088b	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       199	update-ref.c	FUNCTION_4	IF_3
0x4000890	     0xfb60d000000	           movzx ecx, byte [0x04000897] 	       199	update-ref.c	FUNCTION_4	IF_3
0x4000897	            0x380a	                      cmp byte [rdx], cl	       199	update-ref.c	FUNCTION_4	IF_3
0x4000899	            0x7412	                            je 0x40008ad	       199	update-ref.c	FUNCTION_4	IF_3
0x400089b	          0x4889de	                            mov rsi, rbx	       200	update-ref.c	FUNCTION_4	CALL_6
0x400089e	      0xbf00000000	                              mov edi, 0	       200	update-ref.c	FUNCTION_4	CALL_6
0x40008a3	      0xb800000000	                              mov eax, 0	       200	update-ref.c	FUNCTION_4	CALL_6
0x40008a8	      0xe800000000	                          call 0x40008ad	       200	update-ref.c	FUNCTION_4	CALL_6
0x40008ad	            0x85c0	                           test eax, eax	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008af	      0xb900000000	                              mov ecx, 0	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008b4	        0x480f44cd	                          cmove rcx, rbp	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008b8	        0x4883ec08	                              sub rsp, 8	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008bc	            0x4154	                                push r12	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008be	    0x4c8b0d000000	              mov r9, qword [0x040008c5]	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008c5	    0x448b05000000	            mov r8d, dword [0x040008cc] 	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008cc	    0x440b05000000	              or r8d, dword [0x040008d3]	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008d3	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008db	          0x4889de	                            mov rsi, rbx	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008de	          0x4c89ef	                            mov rdi, r13	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008e1	      0xe800000000	                          call 0x40008e6	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008e6	        0x4883c410	                           add rsp, 0x10	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008ea	            0x85c0	                           test eax, eax	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008ec	            0x7417	                            je 0x4000905	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008ee	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	       206	update-ref.c	FUNCTION_4	CALL_8
0x40008f6	      0xbf00000000	                              mov edi, 0	       206	update-ref.c	FUNCTION_4	CALL_8
0x40008fb	      0xb800000000	                              mov eax, 0	       206	update-ref.c	FUNCTION_4	CALL_8
0x4000900	      0xe800000000	                          call 0x4000905	       206	update-ref.c	FUNCTION_4	CALL_8
0x4000905	    0xc70500000000	               mov dword [0x0400090f], 0	       208	update-ref.c	FUNCTION_4
0x400090f	          0x4889df	                            mov rdi, rbx	       209	update-ref.c	FUNCTION_4	CALL_9
0x4000912	      0xe800000000	                          call 0x4000917	       209	update-ref.c	FUNCTION_4	CALL_9
0x4000917	          0x4c89e7	                            mov rdi, r12	       210	update-ref.c	FUNCTION_4	CALL_10
0x400091a	      0xe800000000	                          call 0x400091f	       210	update-ref.c	FUNCTION_4	CALL_10
0x400091f	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       212	update-ref.c	FUNCTION_4
0x4000924	      0xe9df030000	                           jmp 0x4000d08	       212	update-ref.c	FUNCTION_4
0x4000929	      0xbe00000000	                              mov esi, 0	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x400092e	          0x4889df	                            mov rdi, rbx	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000931	      0xe800000000	                          call 0x4000936	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000936	            0x85c0	                           test eax, eax	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000938	     0xf8431010000	                            je 0x4000a6f	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x400093e	        0x4883c307	                              add rbx, 7	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000942	      0x48895c2428	             mov qword [rsp + 0x28], rbx	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000947	    0x48c784248000	               mov qword [rsp + 0x80], 0	       218	update-ref.c	FUNCTION_5
0x4000953	    0x48c784248800	               mov qword [rsp + 0x88], 0	       218	update-ref.c	FUNCTION_5
0x400095f	    0x48c784249000	               mov qword [rsp + 0x90], 0	       218	update-ref.c	FUNCTION_5
0x400096b	      0x488d742428	                   lea rsi, [rsp + 0x28]	       222	update-ref.c	FUNCTION_5	CALL_1
0x4000970	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       222	update-ref.c	FUNCTION_5	CALL_1
0x4000975	      0xe8bcf7ffff	                  call sym.parse_refname	       222	update-ref.c	FUNCTION_5	CALL_1
0x400097a	          0x4889c3	                            mov rbx, rax	       222	update-ref.c	FUNCTION_5	CALL_1
0x400097d	          0x4885c0	                           test rax, rax	       223	update-ref.c	FUNCTION_5	IF_1
0x4000980	            0x750f	                           jne 0x4000991	       223	update-ref.c	FUNCTION_5	IF_1
0x4000982	      0xbf00000000	                              mov edi, 0	       224	update-ref.c	FUNCTION_5	CALL_2
0x4000987	      0xb800000000	                              mov eax, 0	       224	update-ref.c	FUNCTION_5	CALL_2
0x400098c	      0xe800000000	                          call 0x4000991	       224	update-ref.c	FUNCTION_5	CALL_2
0x4000991	    0x41b900000000	                              mov r9d, 0	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000997	          0x4989c0	                             mov r8, rax	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x400099a	      0xb900000000	                              mov ecx, 0	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x400099f	          0x4889ea	                            mov rdx, rbp	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x40009a2	      0x488d742428	                   lea rsi, [rsp + 0x28]	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x40009a7	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x40009ac	      0xe861f8ffff	                 call sym.parse_next_oid	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x40009b1	            0x85c0	                           test eax, eax	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x40009b3	            0x7412	                            je 0x40009c7	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x40009b5	          0x4889de	                            mov rsi, rbx	       227	update-ref.c	FUNCTION_5	CALL_4
0x40009b8	      0xbf00000000	                              mov edi, 0	       227	update-ref.c	FUNCTION_5	CALL_4
0x40009bd	      0xb800000000	                              mov eax, 0	       227	update-ref.c	FUNCTION_5	CALL_4
0x40009c2	      0xe800000000	                          call 0x40009c7	       227	update-ref.c	FUNCTION_5	CALL_4
0x40009c7	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_18	CALL_1
0x40009cc	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_18	CALL_1
0x40009d1	          0x4889ef	                            mov rdi, rbp	       975	cache.h	FUNCTION_18	CALL_1
0x40009d4	      0xe800000000	                          call 0x40009d9	       975	cache.h	FUNCTION_18	CALL_1
0x40009d9	            0x85c0	                           test eax, eax	       229	update-ref.c	FUNCTION_5	IF_3	CALL_5
0x40009db	            0x750d	                           jne 0x40009ea	       229	update-ref.c	FUNCTION_5	IF_3	CALL_5
0x40009dd	          0x4889de	                            mov rsi, rbx	       230	update-ref.c	FUNCTION_5	CALL_6
0x40009e0	      0xbf00000000	                              mov edi, 0	       230	update-ref.c	FUNCTION_5	CALL_6
0x40009e5	      0xe800000000	                          call 0x40009ea	       230	update-ref.c	FUNCTION_5	CALL_6
0x40009ea	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       232	update-ref.c	FUNCTION_5	IF_4
0x40009ef	     0xfb605000000	           movzx eax, byte [0x040009f6] 	       232	update-ref.c	FUNCTION_5	IF_4
0x40009f6	            0x3802	                      cmp byte [rdx], al	       232	update-ref.c	FUNCTION_5	IF_4
0x40009f8	            0x7412	                            je 0x4000a0c	       232	update-ref.c	FUNCTION_5	IF_4
0x40009fa	          0x4889de	                            mov rsi, rbx	       233	update-ref.c	FUNCTION_5	CALL_7
0x40009fd	      0xbf00000000	                              mov edi, 0	       233	update-ref.c	FUNCTION_5	CALL_7
0x4000a02	      0xb800000000	                              mov eax, 0	       233	update-ref.c	FUNCTION_5	CALL_7
0x4000a07	      0xe800000000	                          call 0x4000a0c	       233	update-ref.c	FUNCTION_5	CALL_7
0x4000a0c	    0x8b0d00000000	            mov ecx, dword [0x04000a12] 	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000a12	     0xb0d00000000	              or ecx, dword [0x04000a18]	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000a18	          0x4d89e1	                             mov r9, r12	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000a1b	    0x4c8b05000000	              mov r8, qword [0x04000a22]	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000a22	          0x4889ea	                            mov rdx, rbp	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000a25	          0x4889de	                            mov rsi, rbx	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000a28	          0x4c89ef	                            mov rdi, r13	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000a2b	      0xe800000000	                          call 0x4000a30	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000a30	            0x85c0	                           test eax, eax	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000a32	            0x7417	                            je 0x4000a4b	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000a34	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	       238	update-ref.c	FUNCTION_5	CALL_9
0x4000a3c	      0xbf00000000	                              mov edi, 0	       238	update-ref.c	FUNCTION_5	CALL_9
0x4000a41	      0xb800000000	                              mov eax, 0	       238	update-ref.c	FUNCTION_5	CALL_9
0x4000a46	      0xe800000000	                          call 0x4000a4b	       238	update-ref.c	FUNCTION_5	CALL_9
0x4000a4b	    0xc70500000000	               mov dword [0x04000a55], 0	       240	update-ref.c	FUNCTION_5
0x4000a55	          0x4889df	                            mov rdi, rbx	       241	update-ref.c	FUNCTION_5	CALL_10
0x4000a58	      0xe800000000	                          call 0x4000a5d	       241	update-ref.c	FUNCTION_5	CALL_10
0x4000a5d	          0x4c89e7	                            mov rdi, r12	       242	update-ref.c	FUNCTION_5	CALL_11
0x4000a60	      0xe800000000	                          call 0x4000a65	       242	update-ref.c	FUNCTION_5	CALL_11
0x4000a65	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       244	update-ref.c	FUNCTION_5
0x4000a6a	      0xe999020000	                           jmp 0x4000d08	       244	update-ref.c	FUNCTION_5
0x4000a6f	      0xbe00000000	                              mov esi, 0	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000a74	          0x4889df	                            mov rdi, rbx	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000a77	      0xe800000000	                          call 0x4000a7c	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000a7c	            0x85c0	                           test eax, eax	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000a7e	     0xf8401010000	                            je 0x4000b85	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000a84	        0x4883c307	                              add rbx, 7	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000a88	      0x48895c2430	             mov qword [rsp + 0x30], rbx	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000a8d	    0x48c784248000	               mov qword [rsp + 0x80], 0	       250	update-ref.c	FUNCTION_6
0x4000a99	    0x48c784248800	               mov qword [rsp + 0x88], 0	       250	update-ref.c	FUNCTION_6
0x4000aa5	    0x48c784249000	               mov qword [rsp + 0x90], 0	       250	update-ref.c	FUNCTION_6
0x4000ab1	      0x488d742430	                   lea rsi, [rsp + 0x30]	       255	update-ref.c	FUNCTION_6	CALL_1
0x4000ab6	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       255	update-ref.c	FUNCTION_6	CALL_1
0x4000abb	      0xe876f6ffff	                  call sym.parse_refname	       255	update-ref.c	FUNCTION_6	CALL_1
0x4000ac0	          0x4889c3	                            mov rbx, rax	       255	update-ref.c	FUNCTION_6	CALL_1
0x4000ac3	          0x4885c0	                           test rax, rax	       256	update-ref.c	FUNCTION_6	IF_1
0x4000ac6	            0x750f	                           jne 0x4000ad7	       256	update-ref.c	FUNCTION_6	IF_1
0x4000ac8	      0xbf00000000	                              mov edi, 0	       257	update-ref.c	FUNCTION_6	CALL_2
0x4000acd	      0xb800000000	                              mov eax, 0	       257	update-ref.c	FUNCTION_6	CALL_2
0x4000ad2	      0xe800000000	                          call 0x4000ad7	       257	update-ref.c	FUNCTION_6	CALL_2
0x4000ad7	    0x41b901000000	                              mov r9d, 1	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000add	          0x4989c0	                             mov r8, rax	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000ae0	      0xb900000000	                              mov ecx, 0	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000ae5	          0x4889ea	                            mov rdx, rbp	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000ae8	      0x488d742430	                   lea rsi, [rsp + 0x30]	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000aed	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000af2	      0xe81bf7ffff	                 call sym.parse_next_oid	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000af7	            0x85c0	                           test eax, eax	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000af9	     0xf85f8030000	                           jne 0x4000ef7	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000aff	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_18	CALL_1
0x4000b04	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_18	CALL_1
0x4000b09	          0x4889ef	                            mov rdi, rbp	       975	cache.h	FUNCTION_18	CALL_1
0x4000b0c	      0xe800000000	                          call 0x4000b11	       975	cache.h	FUNCTION_18	CALL_1
0x4000b11	            0x85c0	                           test eax, eax	       263	update-ref.c	FUNCTION_6	ELSE_1	IF_3	CALL_4
0x4000b13	     0xf8508040000	                           jne 0x4000f21	       263	update-ref.c	FUNCTION_6	ELSE_1	IF_3	CALL_4
0x4000b19	          0x4889de	                            mov rsi, rbx	       264	update-ref.c	FUNCTION_6	ELSE_1	CALL_5
0x4000b1c	      0xbf00000000	                              mov edi, 0	       264	update-ref.c	FUNCTION_6	ELSE_1	CALL_5
0x4000b21	      0xe800000000	                          call 0x4000b26	       264	update-ref.c	FUNCTION_6	ELSE_1	CALL_5
0x4000b26	          0x4889de	                            mov rsi, rbx	       269	update-ref.c	FUNCTION_6	CALL_6
0x4000b29	      0xbf00000000	                              mov edi, 0	       269	update-ref.c	FUNCTION_6	CALL_6
0x4000b2e	      0xb800000000	                              mov eax, 0	       269	update-ref.c	FUNCTION_6	CALL_6
0x4000b33	      0xe800000000	                          call 0x4000b38	       269	update-ref.c	FUNCTION_6	CALL_6
0x4000b38	          0x4d89e1	                             mov r9, r12	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000b3b	          0x4889de	                            mov rsi, rbx	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000b3e	          0x4c89ef	                            mov rdi, r13	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000b41	      0xe800000000	                          call 0x4000b46	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000b46	            0x85c0	                           test eax, eax	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000b48	            0x7417	                            je 0x4000b61	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000b4a	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	       274	update-ref.c	FUNCTION_6	CALL_8
0x4000b52	      0xbf00000000	                              mov edi, 0	       274	update-ref.c	FUNCTION_6	CALL_8
0x4000b57	      0xb800000000	                              mov eax, 0	       274	update-ref.c	FUNCTION_6	CALL_8
0x4000b5c	      0xe800000000	                          call 0x4000b61	       274	update-ref.c	FUNCTION_6	CALL_8
0x4000b61	    0xc70500000000	               mov dword [0x04000b6b], 0	       276	update-ref.c	FUNCTION_6
0x4000b6b	          0x4889df	                            mov rdi, rbx	       277	update-ref.c	FUNCTION_6	CALL_9
0x4000b6e	      0xe800000000	                          call 0x4000b73	       277	update-ref.c	FUNCTION_6	CALL_9
0x4000b73	          0x4c89e7	                            mov rdi, r12	       278	update-ref.c	FUNCTION_6	CALL_10
0x4000b76	      0xe800000000	                          call 0x4000b7b	       278	update-ref.c	FUNCTION_6	CALL_10
0x4000b7b	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       280	update-ref.c	FUNCTION_6
0x4000b80	      0xe983010000	                           jmp 0x4000d08	       280	update-ref.c	FUNCTION_6
0x4000b85	      0xbe00000000	                              mov esi, 0	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000b8a	          0x4889df	                            mov rdi, rbx	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000b8d	      0xe800000000	                          call 0x4000b92	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000b92	            0x85c0	                           test eax, eax	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000b94	     0xf8403010000	                            je 0x4000c9d	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000b9a	        0x4883c307	                              add rbx, 7	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000b9e	      0x48895c2438	             mov qword [rsp + 0x38], rbx	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000ba3	    0x48c784248000	               mov qword [rsp + 0x80], 0	       286	update-ref.c	FUNCTION_7
0x4000baf	    0x48c784248800	               mov qword [rsp + 0x88], 0	       286	update-ref.c	FUNCTION_7
0x4000bbb	    0x48c784249000	               mov qword [rsp + 0x90], 0	       286	update-ref.c	FUNCTION_7
0x4000bc7	      0x488d742438	                   lea rsi, [rsp + 0x38]	       290	update-ref.c	FUNCTION_7	CALL_1
0x4000bcc	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       290	update-ref.c	FUNCTION_7	CALL_1
0x4000bd1	      0xe860f5ffff	                  call sym.parse_refname	       290	update-ref.c	FUNCTION_7	CALL_1
0x4000bd6	          0x4889c3	                            mov rbx, rax	       290	update-ref.c	FUNCTION_7	CALL_1
0x4000bd9	          0x4885c0	                           test rax, rax	       291	update-ref.c	FUNCTION_7	IF_1
0x4000bdc	            0x750f	                           jne 0x4000bed	       291	update-ref.c	FUNCTION_7	IF_1
0x4000bde	      0xbf00000000	                              mov edi, 0	       292	update-ref.c	FUNCTION_7	CALL_2
0x4000be3	      0xb800000000	                              mov eax, 0	       292	update-ref.c	FUNCTION_7	CALL_2
0x4000be8	      0xe800000000	                          call 0x4000bed	       292	update-ref.c	FUNCTION_7	CALL_2
0x4000bed	    0x41b901000000	                              mov r9d, 1	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000bf3	          0x4989c0	                             mov r8, rax	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000bf6	      0xb900000000	                              mov ecx, 0	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000bfb	          0x4889ea	                            mov rdx, rbp	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000bfe	      0x488d742438	                   lea rsi, [rsp + 0x38]	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000c03	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000c08	      0xe805f6ffff	                 call sym.parse_next_oid	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000c0d	            0x85c0	                           test eax, eax	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000c0f	            0x7417	                            je 0x4000c28	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000c11	    0x48c745000000	                      mov qword [rbp], 0	        90	string3.h	FUNCTION_41	CALL_6
0x4000c19	    0x48c745080000	                  mov qword [rbp + 8], 0	        90	string3.h	FUNCTION_41	CALL_6
0x4000c21	    0xc74510000000	               mov dword [rbp + 0x10], 0	        90	string3.h	FUNCTION_41	CALL_6
0x4000c28	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       298	update-ref.c	FUNCTION_7	IF_3
0x4000c2d	     0xfb605000000	           movzx eax, byte [0x04000c34] 	       298	update-ref.c	FUNCTION_7	IF_3
0x4000c34	            0x3802	                      cmp byte [rdx], al	       298	update-ref.c	FUNCTION_7	IF_3
0x4000c36	            0x7412	                            je 0x4000c4a	       298	update-ref.c	FUNCTION_7	IF_3
0x4000c38	          0x4889de	                            mov rsi, rbx	       299	update-ref.c	FUNCTION_7	CALL_5
0x4000c3b	      0xbf00000000	                              mov edi, 0	       299	update-ref.c	FUNCTION_7	CALL_5
0x4000c40	      0xb800000000	                              mov eax, 0	       299	update-ref.c	FUNCTION_7	CALL_5
0x4000c45	      0xe800000000	                          call 0x4000c4a	       299	update-ref.c	FUNCTION_7	CALL_5
0x4000c4a	          0x4d89e0	                             mov r8, r12	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000c4d	    0x8b0d00000000	            mov ecx, dword [0x04000c53] 	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000c53	          0x4889ea	                            mov rdx, rbp	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000c56	          0x4889de	                            mov rsi, rbx	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000c59	          0x4c89ef	                            mov rdi, r13	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000c5c	      0xe800000000	                          call 0x4000c61	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000c61	            0x85c0	                           test eax, eax	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000c63	            0x7417	                            je 0x4000c7c	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000c65	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	       303	update-ref.c	FUNCTION_7	CALL_7
0x4000c6d	      0xbf00000000	                              mov edi, 0	       303	update-ref.c	FUNCTION_7	CALL_7
0x4000c72	      0xb800000000	                              mov eax, 0	       303	update-ref.c	FUNCTION_7	CALL_7
0x4000c77	      0xe800000000	                          call 0x4000c7c	       303	update-ref.c	FUNCTION_7	CALL_7
0x4000c7c	    0xc70500000000	               mov dword [0x04000c86], 0	       305	update-ref.c	FUNCTION_7
0x4000c86	          0x4889df	                            mov rdi, rbx	       306	update-ref.c	FUNCTION_7	CALL_8
0x4000c89	      0xe800000000	                          call 0x4000c8e	       306	update-ref.c	FUNCTION_7	CALL_8
0x4000c8e	          0x4c89e7	                            mov rdi, r12	       307	update-ref.c	FUNCTION_7	CALL_9
0x4000c91	      0xe800000000	                          call 0x4000c96	       307	update-ref.c	FUNCTION_7	CALL_9
0x4000c96	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       309	update-ref.c	FUNCTION_7
0x4000c9b	            0xeb6b	                           jmp 0x4000d08	       309	update-ref.c	FUNCTION_7
0x4000c9d	      0xbe00000000	                              mov esi, 0	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000ca2	          0x4889df	                            mov rdi, rbx	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000ca5	      0xe800000000	                          call 0x4000caa	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000caa	            0x85c0	                           test eax, eax	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000cac	            0x7448	                            je 0x4000cf6	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000cae	        0x488d4307	                      lea rax, [rbx + 7]	       344	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8
0x4000cb2	      0xbf00000000	                              mov edi, 0	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000cb7	      0xb908000000	                              mov ecx, 8	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000cbc	          0x4889c6	                            mov rsi, rax	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000cbf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000cc1	           0xf97c1	                                 seta cl	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000cc4	           0xf92c2	                                 setb dl	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000cc7	            0x38d1	                              cmp cl, dl	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000cc9	            0x7519	                           jne 0x4000ce4	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000ccb	     0xfb60d000000	           movzx ecx, byte [0x04000cd2] 	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000cd2	          0x384b0f	                cmp byte [rbx + 0xf], cl	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000cd5	            0x750d	                           jne 0x4000ce4	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000cd7	    0x830d00000000	                or dword [0x04000cde], 1	       315	update-ref.c	FUNCTION_8	IF_1
0x4000cde	        0x488d530f	                    lea rdx, [rbx + 0xf]	       318	update-ref.c	FUNCTION_8
0x4000ce2	            0xeb24	                           jmp 0x4000d08	       318	update-ref.c	FUNCTION_8
0x4000ce4	          0x4889c6	                            mov rsi, rax	       317	update-ref.c	FUNCTION_8	CALL_2
0x4000ce7	      0xbf00000000	                              mov edi, 0	       317	update-ref.c	FUNCTION_8	CALL_2
0x4000cec	      0xb800000000	                              mov eax, 0	       317	update-ref.c	FUNCTION_8	CALL_2
0x4000cf1	      0xe800000000	                          call 0x4000cf6	       317	update-ref.c	FUNCTION_8	CALL_2
0x4000cf6	          0x4889de	                            mov rsi, rbx	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0x4000cf9	      0xbf00000000	                              mov edi, 0	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0x4000cfe	      0xb800000000	                              mov eax, 0	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0x4000d03	      0xe800000000	                          call 0x4000d08	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0x4000d08	        0x488d5a01	                      lea rbx, [rdx + 1]	       348	update-ref.c	FUNCTION_9	WHILE_1
0x4000d0c	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       330	update-ref.c	FUNCTION_9	WHILE_1
0x4000d11	      0x4803442470	             add rax, qword [rsp + 0x70]	       330	update-ref.c	FUNCTION_9	WHILE_1
0x4000d16	          0x4839c3	                            cmp rbx, rax	       330	update-ref.c	FUNCTION_9	WHILE_1
0x4000d19	     0xf8270faffff	                            jb 0x400078f	       330	update-ref.c	FUNCTION_9	WHILE_1
0x4000d1f	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       351	update-ref.c	FUNCTION_9	CALL_17
0x4000d24	      0xe800000000	                          call 0x4000d29	       351	update-ref.c	FUNCTION_9	CALL_17
0x4000d29	      0x488d742440	                   lea rsi, [rsp + 0x40]	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000d2e	          0x4c89ef	                            mov rdi, r13	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000d31	      0xe800000000	                          call 0x4000d36	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000d36	            0x89c3	                            mov ebx, eax	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000d38	            0x85c0	                           test eax, eax	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000d3a	            0x7414	                            je 0x4000d50	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000d3c	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x4000d41	      0xbf00000000	                              mov edi, 0	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x4000d46	      0xb800000000	                              mov eax, 0	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x4000d4b	      0xe800000000	                          call 0x4000d50	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x4000d50	          0x4c89ef	                            mov rdi, r13	       394	update-ref.c	FUNCTION_10	IF_2	CALL_24
0x4000d53	      0xe800000000	                          call 0x4000d58	       394	update-ref.c	FUNCTION_10	IF_2	CALL_24
0x4000d58	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x4000d5d	      0xe800000000	                          call 0x4000d62	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x4000d62	      0xe95b010000	                           jmp 0x4000ec2	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x4000d67	      0x837c241800	               cmp dword [rsp + 0x18], 0	       399	update-ref.c	FUNCTION_10	IF_7
0x4000d6c	            0x7412	                            je 0x4000d80	       399	update-ref.c	FUNCTION_10	IF_7
0x4000d6e	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	       400	update-ref.c	FUNCTION_10	CALL_26
0x4000d76	      0xbf00000000	                              mov edi, 0	       400	update-ref.c	FUNCTION_10	CALL_26
0x4000d7b	      0xe800000000	                          call 0x4000d80	       400	update-ref.c	FUNCTION_10	CALL_26
0x4000d80	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       402	update-ref.c	FUNCTION_10	IF_8
0x4000d85	            0x742b	                            je 0x4000db2	       402	update-ref.c	FUNCTION_10	IF_8
0x4000d87	          0x83ed01	                              sub ebp, 1	       403	update-ref.c	FUNCTION_10	IF_8	IF_9
0x4000d8a	          0x83fd01	                              cmp ebp, 1	       403	update-ref.c	FUNCTION_10	IF_8	IF_9
0x4000d8d	            0x7612	                           jbe 0x4000da1	       403	update-ref.c	FUNCTION_10	IF_8	IF_9
0x4000d8f	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	       404	update-ref.c	FUNCTION_10	IF_8	CALL_27
0x4000d97	      0xbf00000000	                              mov edi, 0	       404	update-ref.c	FUNCTION_10	IF_8	CALL_27
0x4000d9c	      0xe800000000	                          call 0x4000da1	       404	update-ref.c	FUNCTION_10	IF_8	CALL_27
0x4000da1	          0x488b2b	                    mov rbp, qword [rbx]	       405	update-ref.c	FUNCTION_10	IF_8
0x4000da4	        0x488b5b08	                mov rbx, qword [rbx + 8]	       406	update-ref.c	FUNCTION_10	IF_8
0x4000da8	          0x4885db	                           test rbx, rbx	       418	update-ref.c	FUNCTION_10	IF_12
0x4000dab	            0x7559	                           jne 0x4000e06	       418	update-ref.c	FUNCTION_10	IF_12
0x4000dad	      0xe9b3010000	                           jmp 0x4000f65	       418	update-ref.c	FUNCTION_10	IF_12
0x4000db2	          0x83ed02	                              sub ebp, 2	       409	update-ref.c	FUNCTION_10	ELSE_1	IF_10
0x4000db5	          0x83fd01	                              cmp ebp, 1	       409	update-ref.c	FUNCTION_10	ELSE_1	IF_10
0x4000db8	            0x7612	                           jbe 0x4000dcc	       409	update-ref.c	FUNCTION_10	ELSE_1	IF_10
0x4000dba	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	       410	update-ref.c	FUNCTION_10	ELSE_1	CALL_28
0x4000dc2	      0xbf00000000	                              mov edi, 0	       410	update-ref.c	FUNCTION_10	ELSE_1	CALL_28
0x4000dc7	      0xe800000000	                          call 0x4000dcc	       410	update-ref.c	FUNCTION_10	ELSE_1	CALL_28
0x4000dcc	          0x488b2b	                    mov rbp, qword [rbx]	       411	update-ref.c	FUNCTION_10	ELSE_1
0x4000dcf	        0x4c8b6308	                mov r12, qword [rbx + 8]	       412	update-ref.c	FUNCTION_10	ELSE_1
0x4000dd3	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       413	update-ref.c	FUNCTION_10	ELSE_1
0x4000dd7	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x4000ddf	          0x4c89e7	                            mov rdi, r12	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x4000de2	      0xe800000000	                          call 0x4000de7	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x4000de7	            0x85c0	                           test eax, eax	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x4000de9	            0x7412	                            je 0x4000dfd	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x4000deb	          0x4c89e6	                            mov rsi, r12	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x4000dee	      0xbf00000000	                              mov edi, 0	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x4000df3	      0xb800000000	                              mov eax, 0	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x4000df8	      0xe800000000	                          call 0x4000dfd	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x4000dfd	          0x4885db	                           test rbx, rbx	       418	update-ref.c	FUNCTION_10	IF_12
0x4000e00	     0xf8448010000	                            je 0x4000f4e	       418	update-ref.c	FUNCTION_10	IF_12
0x4000e06	          0x803b00	                       cmp byte [rbx], 0	       419	update-ref.c	FUNCTION_10	IF_12	IF_13
0x4000e09	            0x7528	                           jne 0x4000e33	       419	update-ref.c	FUNCTION_10	IF_12	IF_13
0x4000e0b	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	        90	string3.h	FUNCTION_41	CALL_6
0x4000e17	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	        90	string3.h	FUNCTION_41	CALL_6
0x4000e23	    0xc78424d00000	               mov dword [rsp + 0xd0], 0	        90	string3.h	FUNCTION_41	CALL_6
0x4000e2e	      0xe903010000	                           jmp 0x4000f36	        90	string3.h	FUNCTION_41	CALL_6
0x4000e33	    0x488db424c000	                   lea rsi, [rsp + 0xc0]	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x4000e3b	          0x4889df	                            mov rdi, rbx	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x4000e3e	      0xe800000000	                          call 0x4000e43	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x4000e43	            0x85c0	                           test eax, eax	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x4000e45	     0xf84eb000000	                            je 0x4000f36	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x4000e4b	          0x4889de	                            mov rsi, rbx	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x4000e4e	      0xbf00000000	                              mov edi, 0	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x4000e53	      0xb800000000	                              mov eax, 0	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x4000e58	      0xe800000000	                          call 0x4000e5d	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x4000e5d	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_18	CALL_1
0x4000e62	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_18	CALL_1
0x4000e67	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	       975	cache.h	FUNCTION_18	CALL_1
0x4000e6f	      0xe800000000	                          call 0x4000e74	       975	cache.h	FUNCTION_18	CALL_1
0x4000e74	    0x488d9424c000	                   lea rdx, [rsp + 0xc0]	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000e7c	            0x85c0	                           test eax, eax	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000e7e	      0xb800000000	                              mov eax, 0	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000e83	        0x480f44d0	                          cmove rdx, rax	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000e87	            0xeb05	                           jmp 0x4000e8e	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000e89	      0xba00000000	                              mov edx, 0	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000e8e	            0x89d9	                            mov ecx, ebx	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000e90	          0x4889ee	                            mov rsi, rbp	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000e93	    0x488b3d000000	            mov rdi, qword [0x04000e9a] 	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000e9a	      0xe800000000	                          call 0x4000e9f	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000e9f	            0x89c3	                            mov ebx, eax	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000ea1	            0xeb1f	                           jmp 0x4000ec2	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000ea3	    0x41b901000000	                              mov r9d, 1	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000ea9	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000eb1	          0x4889ee	                            mov rsi, rbp	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000eb4	    0x488b3d000000	            mov rdi, qword [0x04000ebb] 	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000ebb	      0xe800000000	                          call 0x4000ec0	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000ec0	            0x89c3	                            mov ebx, eax	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000ec2	            0x89d8	                            mov eax, ebx	       443	update-ref.c	FUNCTION_10
0x4000ec4	    0x488b8c24a802	           mov rcx, qword [rsp + 0x2a8] 	       443	update-ref.c	FUNCTION_10
0x4000ecc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       443	update-ref.c	FUNCTION_10
0x4000ed5	     0xf84cd000000	                            je 0x4000fa8	       443	update-ref.c	FUNCTION_10
0x4000edb	      0xe9c3000000	                           jmp 0x4000fa3	       443	update-ref.c	FUNCTION_10
0x4000ee0	    0x4c8b05000000	              mov r8, qword [0x04000ee7]	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000ee7	    0x8b0d00000000	            mov ecx, dword [0x04000eed] 	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000eed	      0xba00000000	                              mov edx, 0	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000ef2	      0xe941fcffff	                           jmp 0x4000b38	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000ef7	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       268	update-ref.c	FUNCTION_6	IF_4
0x4000efc	     0xfb605000000	           movzx eax, byte [0x04000f03] 	       268	update-ref.c	FUNCTION_6	IF_4
0x4000f03	            0x3802	                      cmp byte [rdx], al	       268	update-ref.c	FUNCTION_6	IF_4
0x4000f05	            0x74d9	                            je 0x4000ee0	       268	update-ref.c	FUNCTION_6	IF_4
0x4000f07	      0xe91afcffff	                           jmp 0x4000b26	       268	update-ref.c	FUNCTION_6	IF_4
0x4000f0c	    0x4c8b05000000	              mov r8, qword [0x04000f13]	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000f13	    0x8b0d00000000	            mov ecx, dword [0x04000f19] 	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000f19	          0x4889ea	                            mov rdx, rbp	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000f1c	      0xe917fcffff	                           jmp 0x4000b38	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000f21	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       268	update-ref.c	FUNCTION_6	IF_4
0x4000f26	     0xfb605000000	           movzx eax, byte [0x04000f2d] 	       268	update-ref.c	FUNCTION_6	IF_4
0x4000f2d	            0x3802	                      cmp byte [rdx], al	       268	update-ref.c	FUNCTION_6	IF_4
0x4000f2f	            0x74db	                            je 0x4000f0c	       268	update-ref.c	FUNCTION_6	IF_4
0x4000f31	      0xe9f0fbffff	                           jmp 0x4000b26	       268	update-ref.c	FUNCTION_6	IF_4
0x4000f36	      0x837c241000	               cmp dword [rsp + 0x10], 0	       359	update-ref.c	FUNCTION_10
0x4000f3b	           0xf95c3	                                setne bl	       359	update-ref.c	FUNCTION_10
0x4000f3e	           0xfb6db	                           movzx ebx, bl	       359	update-ref.c	FUNCTION_10
0x4000f41	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       431	update-ref.c	FUNCTION_10	IF_16
0x4000f46	     0xf8511ffffff	                           jne 0x4000e5d	       431	update-ref.c	FUNCTION_10	IF_16
0x4000f4c	            0xeb2c	                           jmp 0x4000f7a	       431	update-ref.c	FUNCTION_10	IF_16
0x4000f4e	      0x837c241000	               cmp dword [rsp + 0x10], 0	       359	update-ref.c	FUNCTION_10
0x4000f53	           0xf95c3	                                setne bl	       359	update-ref.c	FUNCTION_10
0x4000f56	           0xfb6db	                           movzx ebx, bl	       359	update-ref.c	FUNCTION_10
0x4000f59	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       431	update-ref.c	FUNCTION_10	IF_16
0x4000f5e	            0x7430	                            je 0x4000f90	       431	update-ref.c	FUNCTION_10	IF_16
0x4000f60	      0xe924ffffff	                           jmp 0x4000e89	       431	update-ref.c	FUNCTION_10	IF_16
0x4000f65	      0x837c241000	               cmp dword [rsp + 0x10], 0	       359	update-ref.c	FUNCTION_10
0x4000f6a	           0xf95c3	                                setne bl	       359	update-ref.c	FUNCTION_10
0x4000f6d	           0xfb6db	                           movzx ebx, bl	       359	update-ref.c	FUNCTION_10
0x4000f70	      0xba00000000	                              mov edx, 0	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000f75	      0xe914ffffff	                           jmp 0x4000e8e	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000f7a	     0xb1d00000000	              or ebx, dword [0x04000f80]	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000f80	          0x4189d8	                            mov r8d, ebx	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000f83	    0x488d8c24c000	                   lea rcx, [rsp + 0xc0]	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000f8b	      0xe913ffffff	                           jmp 0x4000ea3	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000f90	     0xb1d00000000	              or ebx, dword [0x04000f96]	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000f96	          0x4189d8	                            mov r8d, ebx	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000f99	      0xb900000000	                              mov ecx, 0	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000f9e	      0xe900ffffff	                           jmp 0x4000ea3	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000fa3	      0xe800000000	                          call 0x4000fa8	       443	update-ref.c	FUNCTION_10
0x4000fa8	    0x4881c4b80200	                          add rsp, 0x2b8	       443	update-ref.c	FUNCTION_10
0x4000faf	              0x5b	                                 pop rbx	       443	update-ref.c	FUNCTION_10
0x4000fb0	              0x5d	                                 pop rbp	       443	update-ref.c	FUNCTION_10
0x4000fb1	            0x415c	                                 pop r12	       443	update-ref.c	FUNCTION_10
0x4000fb3	            0x415d	                                 pop r13	       443	update-ref.c	FUNCTION_10
0x4000fb5	              0xc3	                                     ret	       443	update-ref.c	FUNCTION_10
parse_next_oid	IF,11:CALL,12:functions,0:DO,0:ELSE,4:FOR,0:SWITCH,0:WHILE,0	133
0x4000212	            0x4156	                                push r14	       101	update-ref.c	FUNCTION_3
0x4000214	            0x4155	                                push r13	       101	update-ref.c	FUNCTION_3
0x4000216	            0x4154	                                push r12	       101	update-ref.c	FUNCTION_3
0x4000218	              0x55	                                push rbp	       101	update-ref.c	FUNCTION_3
0x4000219	              0x53	                                push rbx	       101	update-ref.c	FUNCTION_3
0x400021a	        0x4883ec20	                           sub rsp, 0x20	       101	update-ref.c	FUNCTION_3
0x400021e	          0x4989cd	                            mov r13, rcx	       101	update-ref.c	FUNCTION_3
0x4000221	          0x4d89c6	                             mov r14, r8	       101	update-ref.c	FUNCTION_3
0x4000224	          0x4589cc	                           mov r12d, r9d	       101	update-ref.c	FUNCTION_3
0x4000227	    0x64488b042528	                mov rax, qword fs:[0x28]	       101	update-ref.c	FUNCTION_3
0x4000230	      0x4889442418	             mov qword [rsp + 0x18], rax	       101	update-ref.c	FUNCTION_3
0x4000235	            0x31c0	                            xor eax, eax	       101	update-ref.c	FUNCTION_3
0x4000237	    0x48c704240000	                      mov qword [rsp], 0	       102	update-ref.c	FUNCTION_3
0x400023f	    0x48c744240800	                  mov qword [rsp + 8], 0	       102	update-ref.c	FUNCTION_3
0x4000248	    0x48c744241000	               mov qword [rsp + 0x10], 0	       102	update-ref.c	FUNCTION_3
0x4000251	          0x488b0e	                    mov rcx, qword [rsi]	       105	update-ref.c	FUNCTION_3	IF_1
0x4000254	        0x488b4708	                mov rax, qword [rdi + 8]	       105	update-ref.c	FUNCTION_3	IF_1
0x4000258	        0x48034710	             add rax, qword [rdi + 0x10]	       105	update-ref.c	FUNCTION_3	IF_1
0x400025c	          0x4839c1	                            cmp rcx, rax	       105	update-ref.c	FUNCTION_3	IF_1
0x400025f	     0xf8482010000	                            je 0x40003e7	       105	update-ref.c	FUNCTION_3	IF_1
0x4000265	          0x4889f3	                            mov rbx, rsi	       105	update-ref.c	FUNCTION_3	IF_1
0x4000268	          0x4889d5	                            mov rbp, rdx	       105	update-ref.c	FUNCTION_3	IF_1
0x400026b	     0xfb605000000	           movzx eax, byte [0x04000272] 	       108	update-ref.c	FUNCTION_3	IF_2
0x4000272	            0x84c0	                             test al, al	       108	update-ref.c	FUNCTION_3	IF_2
0x4000274	     0xf8487000000	                            je 0x4000301	       108	update-ref.c	FUNCTION_3	IF_2
0x400027a	           0xfb611	                   movzx edx, byte [rcx]	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x400027d	            0x84d2	                             test dl, dl	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x400027f	     0xf8484010000	                            je 0x4000409	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x4000285	            0x38d0	                              cmp al, dl	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x4000287	     0xf847c010000	                            je 0x4000409	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x400028d	          0x80fa20	                            cmp dl, 0x20	       112	update-ref.c	FUNCTION_3	IF_2	IF_4
0x4000290	            0x7415	                            je 0x40002a7	       112	update-ref.c	FUNCTION_3	IF_2	IF_4
0x4000292	          0x4c89c2	                             mov rdx, r8	       113	update-ref.c	FUNCTION_3	IF_2	IF_4	CALL_1
0x4000295	          0x4c89ee	                            mov rsi, r13	       113	update-ref.c	FUNCTION_3	IF_2	IF_4	CALL_1
0x4000298	      0xbf00000000	                              mov edi, 0	       113	update-ref.c	FUNCTION_3	IF_2	IF_4	CALL_1
0x400029d	      0xb800000000	                              mov eax, 0	       113	update-ref.c	FUNCTION_3	IF_2	IF_4	CALL_1
0x40002a2	      0xe800000000	                          call 0x40002a7	       113	update-ref.c	FUNCTION_3	IF_2	IF_4	CALL_1
0x40002a7	        0x488d7901	                      lea rdi, [rcx + 1]	       115	update-ref.c	FUNCTION_3	IF_2
0x40002ab	          0x48893e	                    mov qword [rsi], rdi	       115	update-ref.c	FUNCTION_3	IF_2
0x40002ae	          0x4889e6	                            mov rsi, rsp	       116	update-ref.c	FUNCTION_3	IF_2	CALL_2
0x40002b1	      0xe88afdffff	                      call sym.parse_arg	       116	update-ref.c	FUNCTION_3	IF_2	CALL_2
0x40002b6	          0x488903	                    mov qword [rbx], rax	       116	update-ref.c	FUNCTION_3	IF_2	CALL_2
0x40002b9	    0x48837c240800	                  cmp qword [rsp + 8], 0	       117	update-ref.c	FUNCTION_3	IF_2	IF_5
0x40002bf	            0x741f	                            je 0x40002e0	       117	update-ref.c	FUNCTION_3	IF_2	IF_5
0x40002c1	          0x4889ee	                            mov rsi, rbp	       118	update-ref.c	FUNCTION_3	IF_2	IF_5	IF_6	CALL_3
0x40002c4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       118	update-ref.c	FUNCTION_3	IF_2	IF_5	IF_6	CALL_3
0x40002c9	      0xe800000000	                          call 0x40002ce	       118	update-ref.c	FUNCTION_3	IF_2	IF_5	IF_6	CALL_3
0x40002ce	            0x85c0	                           test eax, eax	       118	update-ref.c	FUNCTION_3	IF_2	IF_5	IF_6	CALL_3
0x40002d0	     0xf85ea000000	                           jne 0x40003c0	       118	update-ref.c	FUNCTION_3	IF_2	IF_5	IF_6	CALL_3
0x40002d6	      0xbb00000000	                              mov ebx, 0	       103	update-ref.c	FUNCTION_3
0x40002db	      0xe9d4000000	                           jmp 0x40003b4	       103	update-ref.c	FUNCTION_3
0x40002e0	    0x48c745000000	                      mov qword [rbp], 0	        90	string3.h	FUNCTION_41	CALL_6
0x40002e8	    0x48c745080000	                  mov qword [rbp + 8], 0	        90	string3.h	FUNCTION_41	CALL_6
0x40002f0	    0xc74510000000	               mov dword [rbp + 0x10], 0	        90	string3.h	FUNCTION_41	CALL_6
0x40002f7	      0xbb00000000	                              mov ebx, 0	       103	update-ref.c	FUNCTION_3
0x40002fc	      0xe9b3000000	                           jmp 0x40003b4	       103	update-ref.c	FUNCTION_3
0x4000301	          0x803900	                       cmp byte [rcx], 0	       126	update-ref.c	FUNCTION_3	ELSE_2	IF_7
0x4000304	            0x7415	                            je 0x400031b	       126	update-ref.c	FUNCTION_3	ELSE_2	IF_7
0x4000306	          0x4c89c2	                             mov rdx, r8	       127	update-ref.c	FUNCTION_3	ELSE_2	IF_7	CALL_5
0x4000309	          0x4c89ee	                            mov rsi, r13	       127	update-ref.c	FUNCTION_3	ELSE_2	IF_7	CALL_5
0x400030c	      0xbf00000000	                              mov edi, 0	       127	update-ref.c	FUNCTION_3	ELSE_2	IF_7	CALL_5
0x4000311	      0xb800000000	                              mov eax, 0	       127	update-ref.c	FUNCTION_3	ELSE_2	IF_7	CALL_5
0x4000316	      0xe800000000	                          call 0x400031b	       127	update-ref.c	FUNCTION_3	ELSE_2	IF_7	CALL_5
0x400031b	        0x488d7101	                      lea rsi, [rcx + 1]	       129	update-ref.c	FUNCTION_3	ELSE_2
0x400031f	          0x488933	                    mov qword [rbx], rsi	       129	update-ref.c	FUNCTION_3	ELSE_2
0x4000322	        0x488b4708	                mov rax, qword [rdi + 8]	       130	update-ref.c	FUNCTION_3	ELSE_2	IF_8
0x4000326	        0x48034710	             add rax, qword [rdi + 0x10]	       130	update-ref.c	FUNCTION_3	ELSE_2	IF_8
0x400032a	          0x4839c6	                            cmp rsi, rax	       130	update-ref.c	FUNCTION_3	ELSE_2	IF_8
0x400032d	     0xf84b4000000	                            je 0x40003e7	       130	update-ref.c	FUNCTION_3	ELSE_2	IF_8
0x4000333	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_54	CALL_2
0x4000338	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_54	CALL_2
0x400033f	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_54	CALL_2
0x4000342	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_54	CALL_2
0x4000344	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_54	CALL_2
0x4000347	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_54	CALL_2
0x400034b	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_54	CALL_2
0x400034e	      0xe800000000	                          call 0x4000353	       279	strbuf.h	FUNCTION_54	CALL_2
0x4000353	      0x488b442408	                mov rax, qword [rsp + 8]	       133	update-ref.c	FUNCTION_3	ELSE_2
0x4000358	          0x480103	                    add qword [rbx], rax	       133	update-ref.c	FUNCTION_3	ELSE_2
0x400035b	          0x4885c0	                           test rax, rax	       135	update-ref.c	FUNCTION_3	ELSE_2	IF_9
0x400035e	            0x7418	                            je 0x4000378	       135	update-ref.c	FUNCTION_3	ELSE_2	IF_9
0x4000360	          0x4889ee	                            mov rsi, rbp	       136	update-ref.c	FUNCTION_3	ELSE_2	IF_9	IF_10	CALL_7
0x4000363	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       136	update-ref.c	FUNCTION_3	ELSE_2	IF_9	IF_10	CALL_7
0x4000368	      0xe800000000	                          call 0x400036d	       136	update-ref.c	FUNCTION_3	ELSE_2	IF_9	IF_10	CALL_7
0x400036d	            0x85c0	                           test eax, eax	       136	update-ref.c	FUNCTION_3	ELSE_2	IF_9	IF_10	CALL_7
0x400036f	            0x754f	                           jne 0x40003c0	       136	update-ref.c	FUNCTION_3	ELSE_2	IF_9	IF_10	CALL_7
0x4000371	      0xbb00000000	                              mov ebx, 0	       103	update-ref.c	FUNCTION_3
0x4000376	            0xeb3c	                           jmp 0x40003b4	       103	update-ref.c	FUNCTION_3
0x4000378	      0xbb01000000	                              mov ebx, 1	       148	update-ref.c	FUNCTION_3	ELSE_2	ELSE_4
0x400037d	        0x41f6c402	                            test r12b, 2	       138	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11
0x4000381	            0x7431	                            je 0x40003b4	       138	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11
0x4000383	          0x4c89f2	                            mov rdx, r14	       140	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11	CALL_8
0x4000386	          0x4c89ee	                            mov rsi, r13	       140	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11	CALL_8
0x4000389	      0xbf00000000	                              mov edi, 0	       140	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11	CALL_8
0x400038e	      0xb800000000	                              mov eax, 0	       140	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11	CALL_8
0x4000393	      0xe800000000	                          call 0x4000398	       140	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11	CALL_8
0x4000398	    0x48c745000000	                      mov qword [rbp], 0	        90	string3.h	FUNCTION_41	CALL_6
0x40003a0	    0x48c745080000	                  mov qword [rbp + 8], 0	        90	string3.h	FUNCTION_41	CALL_6
0x40003a8	    0xc74510000000	               mov dword [rbp + 0x10], 0	        90	string3.h	FUNCTION_41	CALL_6
0x40003af	      0xbb00000000	                              mov ebx, 0	       103	update-ref.c	FUNCTION_3
0x40003b4	          0x4889e7	                            mov rdi, rsp	       152	update-ref.c	FUNCTION_3	CALL_10
0x40003b7	      0xe800000000	                          call 0x40003bc	       152	update-ref.c	FUNCTION_3	CALL_10
0x40003bc	            0x89d8	                            mov eax, ebx	       154	update-ref.c	FUNCTION_3
0x40003be	            0xeb4e	                           jmp 0x400040e	       154	update-ref.c	FUNCTION_3
0x40003c0	        0x4183e401	                             and r12d, 1	       157	update-ref.c	FUNCTION_3	CALL_11
0x40003c4	      0xbf00000000	                              mov edi, 0	       157	update-ref.c	FUNCTION_3	CALL_11
0x40003c9	      0xb800000000	                              mov eax, 0	       157	update-ref.c	FUNCTION_3	CALL_11
0x40003ce	        0x480f45f8	                         cmovne rdi, rax	       157	update-ref.c	FUNCTION_3	CALL_11
0x40003d2	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       157	update-ref.c	FUNCTION_3	CALL_11
0x40003d7	          0x4c89f2	                            mov rdx, r14	       157	update-ref.c	FUNCTION_3	CALL_11
0x40003da	          0x4c89ee	                            mov rsi, r13	       157	update-ref.c	FUNCTION_3	CALL_11
0x40003dd	      0xb800000000	                              mov eax, 0	       157	update-ref.c	FUNCTION_3	CALL_11
0x40003e2	      0xe800000000	                          call 0x40003e7	       157	update-ref.c	FUNCTION_3	CALL_11
0x40003e7	        0x4183e401	                             and r12d, 1	       163	update-ref.c	FUNCTION_3	CALL_12
0x40003eb	      0xbf00000000	                              mov edi, 0	       163	update-ref.c	FUNCTION_3	CALL_12
0x40003f0	      0xb800000000	                              mov eax, 0	       163	update-ref.c	FUNCTION_3	CALL_12
0x40003f5	        0x480f45f8	                         cmovne rdi, rax	       163	update-ref.c	FUNCTION_3	CALL_12
0x40003f9	          0x4c89f2	                            mov rdx, r14	       163	update-ref.c	FUNCTION_3	CALL_12
0x40003fc	          0x4c89ee	                            mov rsi, r13	       163	update-ref.c	FUNCTION_3	CALL_12
0x40003ff	      0xb800000000	                              mov eax, 0	       163	update-ref.c	FUNCTION_3	CALL_12
0x4000404	      0xe800000000	                          call 0x4000409	       163	update-ref.c	FUNCTION_3	CALL_12
0x4000409	      0xb801000000	                              mov eax, 1	       111	update-ref.c	FUNCTION_3	IF_2	IF_3
0x400040e	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       167	update-ref.c	FUNCTION_3
0x4000413	    0x644833142528	                xor rdx, qword fs:[0x28]	       167	update-ref.c	FUNCTION_3
0x400041c	            0x7405	                            je 0x4000423	       167	update-ref.c	FUNCTION_3
0x400041e	      0xe800000000	                          call 0x4000423	       167	update-ref.c	FUNCTION_3
0x4000423	        0x4883c420	                           add rsp, 0x20	       167	update-ref.c	FUNCTION_3
0x4000427	              0x5b	                                 pop rbx	       167	update-ref.c	FUNCTION_3
0x4000428	              0x5d	                                 pop rbp	       167	update-ref.c	FUNCTION_3
0x4000429	            0x415c	                                 pop r12	       167	update-ref.c	FUNCTION_3
0x400042b	            0x415d	                                 pop r13	       167	update-ref.c	FUNCTION_3
0x400042d	            0x415e	                                 pop r14	       167	update-ref.c	FUNCTION_3
0x400042f	              0xc3	                                     ret	       167	update-ref.c	FUNCTION_3
parse_arg	IF,3:CALL,6:functions,0:DO,0:ELSE,1:FOR,0:SWITCH,0:WHILE,1	68
0x4000040	              0x55	                                push rbp	        28	update-ref.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        28	update-ref.c	FUNCTION_1
0x4000042	        0x4883ec18	                           sub rsp, 0x18	        28	update-ref.c	FUNCTION_1
0x4000046	          0x4889fd	                            mov rbp, rdi	        28	update-ref.c	FUNCTION_1
0x4000049	      0x48897c2408	                mov qword [rsp + 8], rdi	        28	update-ref.c	FUNCTION_1
0x400004e	          0x4889f3	                            mov rbx, rsi	        28	update-ref.c	FUNCTION_1
0x4000051	           0xfb607	                   movzx eax, byte [rdi]	        29	update-ref.c	FUNCTION_1	IF_1
0x4000054	            0x3c22	                            cmp al, 0x22	        29	update-ref.c	FUNCTION_1	IF_1
0x4000056	            0x7419	                            je 0x4000071	        29	update-ref.c	FUNCTION_1	IF_1
0x4000058	            0x84c0	                             test al, al	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x400005a	     0xf84ca000000	                            je 0x400012a	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x4000060	           0xfb6c0	                           movzx eax, al	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x4000063	    0xf68000000000	                      test byte [rax], 1	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x400006a	            0x7459	                            je 0x40000c5	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x400006c	      0xe9b9000000	                           jmp 0x400012a	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x4000071	      0x488d542408	                      lea rdx, [rsp + 8]	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000076	          0x4889fe	                            mov rsi, rdi	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000079	          0x4889df	                            mov rdi, rbx	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x400007c	      0xe800000000	                          call 0x4000081	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000081	            0x85c0	                           test eax, eax	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000083	            0x7412	                            je 0x4000097	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000085	          0x4889ee	                            mov rsi, rbp	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000088	      0xbf00000000	                              mov edi, 0	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x400008d	      0xb800000000	                              mov eax, 0	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000092	      0xe800000000	                          call 0x4000097	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000097	      0x488b442408	                mov rax, qword [rsp + 8]	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x400009c	           0xfb600	                   movzx eax, byte [rax]	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x400009f	            0x84c0	                             test al, al	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000a1	     0xf8483000000	                            je 0x400012a	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000a7	           0xfb6c0	                           movzx eax, al	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000aa	    0xf68000000000	                      test byte [rax], 1	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000b1	            0x7577	                           jne 0x400012a	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000b3	          0x4889ee	                            mov rsi, rbp	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
0x40000b6	      0xbf00000000	                              mov edi, 0	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
0x40000bb	      0xb800000000	                              mov eax, 0	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
0x40000c0	      0xe800000000	                          call 0x40000c5	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
0x40000c5	        0x488d4501	                      lea rax, [rbp + 1]	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x40000c9	      0x4889442408	                mov qword [rsp + 8], rax	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x40000ce	         0xfb66d00	                   movzx ebp, byte [rbp]	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x40000d2	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_51
0x40000d5	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_51
0x40000d8	            0x740a	                            je 0x40000e4	       141	strbuf.h	FUNCTION_51
0x40000da	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_53	IF_1	CALL_1
0x40000de	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_53	IF_1	CALL_1
0x40000e2	            0x750d	                           jne 0x40000f1	       227	strbuf.h	FUNCTION_53	IF_1	CALL_1
0x40000e4	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_53	CALL_2
0x40000e9	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_53	CALL_2
0x40000ec	      0xe800000000	                          call 0x40000f1	       228	strbuf.h	FUNCTION_53	CALL_2
0x40000f1	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_53
0x40000f5	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_53
0x40000f9	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_53
0x40000fd	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_53
0x4000101	        0x40882c02	               mov byte [rdx + rax], bpl	       229	strbuf.h	FUNCTION_53
0x4000105	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_53
0x4000109	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_53
0x400010d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_53
0x4000111	      0x488b6c2408	                mov rbp, qword [rsp + 8]	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x4000116	         0xfb64500	                   movzx eax, byte [rbp]	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x400011a	            0x84c0	                             test al, al	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x400011c	            0x740c	                            je 0x400012a	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x400011e	           0xfb6c0	                           movzx eax, al	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x4000121	    0xf68000000000	                      test byte [rax], 1	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x4000128	            0x749b	                            je 0x40000c5	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x400012a	      0x488b442408	                mov rax, qword [rsp + 8]	        42	update-ref.c	FUNCTION_1
0x400012f	        0x4883c418	                           add rsp, 0x18	        42	update-ref.c	FUNCTION_1
0x4000133	              0x5b	                                 pop rbx	        42	update-ref.c	FUNCTION_1
0x4000134	              0x5d	                                 pop rbp	        42	update-ref.c	FUNCTION_1
0x4000135	              0xc3	                                     ret	        42	update-ref.c	FUNCTION_1
parse_refname	IF,3:CALL,6:functions,0:DO,0:ELSE,1:FOR,0:SWITCH,0:WHILE,0	52
0x4000136	              0x53	                                push rbx	        53	update-ref.c	FUNCTION_2
0x4000137	        0x4883ec20	                           sub rsp, 0x20	        53	update-ref.c	FUNCTION_2
0x400013b	          0x4889f3	                            mov rbx, rsi	        53	update-ref.c	FUNCTION_2
0x400013e	    0x64488b042528	                mov rax, qword fs:[0x28]	        53	update-ref.c	FUNCTION_2
0x4000147	      0x4889442418	             mov qword [rsp + 0x18], rax	        53	update-ref.c	FUNCTION_2
0x400014c	            0x31c0	                            xor eax, eax	        53	update-ref.c	FUNCTION_2
0x400014e	    0x48c704240000	                      mov qword [rsp], 0	        54	update-ref.c	FUNCTION_2
0x4000156	    0x48c744240800	                  mov qword [rsp + 8], 0	        54	update-ref.c	FUNCTION_2
0x400015f	    0x48c744241000	               mov qword [rsp + 0x10], 0	        54	update-ref.c	FUNCTION_2
0x4000168	    0x803d00000000	                cmp byte [0x0400016f], 0	        56	update-ref.c	FUNCTION_2	IF_1
0x400016f	            0x7410	                            je 0x4000181	        56	update-ref.c	FUNCTION_2	IF_1
0x4000171	          0x4889e6	                            mov rsi, rsp	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000174	          0x488b3b	                    mov rdi, qword [rbx]	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000177	      0xe8c4feffff	                      call sym.parse_arg	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x400017c	          0x488903	                    mov qword [rbx], rax	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x400017f	            0xeb2b	                           jmp 0x40001ac	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000181	          0x488b36	                    mov rsi, qword [rsi]	        61	update-ref.c	FUNCTION_2	ELSE_1	CALL_2
0x4000184	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_54	CALL_2
0x4000189	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_54	CALL_2
0x4000190	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_54	CALL_2
0x4000193	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_54	CALL_2
0x4000195	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_54	CALL_2
0x4000198	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_54	CALL_2
0x400019c	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_54	CALL_2
0x400019f	      0xe800000000	                          call 0x40001a4	       279	strbuf.h	FUNCTION_54	CALL_2
0x40001a4	      0x488b442408	                mov rax, qword [rsp + 8]	        62	update-ref.c	FUNCTION_2	ELSE_1
0x40001a9	          0x480103	                    add qword [rbx], rax	        62	update-ref.c	FUNCTION_2	ELSE_1
0x40001ac	    0x48837c240800	                  cmp qword [rsp + 8], 0	        65	update-ref.c	FUNCTION_2	IF_2
0x40001b2	            0x750f	                           jne 0x40001c3	        65	update-ref.c	FUNCTION_2	IF_2
0x40001b4	          0x4889e7	                            mov rdi, rsp	        66	update-ref.c	FUNCTION_2	IF_2	CALL_3
0x40001b7	      0xe800000000	                          call 0x40001bc	        66	update-ref.c	FUNCTION_2	IF_2	CALL_3
0x40001bc	      0xb800000000	                              mov eax, 0	        67	update-ref.c	FUNCTION_2	IF_2
0x40001c1	            0xeb34	                           jmp 0x40001f7	        67	update-ref.c	FUNCTION_2	IF_2
0x40001c3	      0xbe01000000	                              mov esi, 1	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x40001c8	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x40001cd	      0xe800000000	                          call 0x40001d2	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x40001d2	            0x85c0	                           test eax, eax	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x40001d4	            0x7414	                            je 0x40001ea	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x40001d6	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        71	update-ref.c	FUNCTION_2	CALL_5
0x40001db	      0xbf00000000	                              mov edi, 0	        71	update-ref.c	FUNCTION_2	CALL_5
0x40001e0	      0xb800000000	                              mov eax, 0	        71	update-ref.c	FUNCTION_2	CALL_5
0x40001e5	      0xe800000000	                          call 0x40001ea	        71	update-ref.c	FUNCTION_2	CALL_5
0x40001ea	      0xbe00000000	                              mov esi, 0	        73	update-ref.c	FUNCTION_2	CALL_6
0x40001ef	          0x4889e7	                            mov rdi, rsp	        73	update-ref.c	FUNCTION_2	CALL_6
0x40001f2	      0xe800000000	                          call 0x40001f7	        73	update-ref.c	FUNCTION_2	CALL_6
0x40001f7	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        74	update-ref.c	FUNCTION_2
0x40001fc	    0x644833142528	                xor rdx, qword fs:[0x28]	        74	update-ref.c	FUNCTION_2
0x4000205	            0x7405	                            je 0x400020c	        74	update-ref.c	FUNCTION_2
0x4000207	      0xe800000000	                          call 0x400020c	        74	update-ref.c	FUNCTION_2
0x400020c	        0x4883c420	                           add rsp, 0x20	        74	update-ref.c	FUNCTION_2
0x4000210	              0x5b	                                 pop rbx	        74	update-ref.c	FUNCTION_2
0x4000211	              0xc3	                                     ret	        74	update-ref.c	FUNCTION_2
