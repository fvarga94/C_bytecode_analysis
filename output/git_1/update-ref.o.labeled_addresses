strbuf_avail	FOR,0:ELSE,0:CALL,0:DO,0:IF,0:WHILE,0:SWITCH,0:functions,0	18
0x4000040	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_2
0x4000041	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_2
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_2
0x4000048	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x400004c	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_2
0x400004f	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_2
0x4000052	            0x741b	                            je 0x400006f	       141	strbuf.h	FUNCTION_2
0x4000054	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x4000058	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_2
0x400005b	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x400005f	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_2
0x4000063	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_2
0x4000066	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_2
0x4000069	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_2
0x400006d	            0xeb05	                           jmp 0x4000074	       141	strbuf.h	FUNCTION_2
0x400006f	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_2
0x4000074	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_2
0x4000075	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_2
oidclr	FOR,0:ELSE,0:CALL,1:DO,0:IF,0:WHILE,0:SWITCH,0:functions,0	12
0x400016a	              0x55	                                push rbp	      1016	cache.h	FUNCTION_37
0x400016b	          0x4889e5	                            mov rbp, rsp	      1016	cache.h	FUNCTION_37
0x400016e	        0x4883ec10	                           sub rsp, 0x10	      1016	cache.h	FUNCTION_37
0x4000172	        0x48897df8	                mov qword [rbp - 8], rdi	      1016	cache.h	FUNCTION_37
0x4000176	        0x488b45f8	                mov rax, qword [rbp - 8]	      1017	cache.h	FUNCTION_37	CALL_1
0x400017a	      0xba14000000	                           mov edx, 0x14	      1017	cache.h	FUNCTION_37	CALL_1
0x400017f	      0xbe00000000	                              mov esi, 0	      1017	cache.h	FUNCTION_37	CALL_1
0x4000184	          0x4889c7	                            mov rdi, rax	      1017	cache.h	FUNCTION_37	CALL_1
0x4000187	      0xe800000000	                          call 0x400018c	      1017	cache.h	FUNCTION_37	CALL_1
0x400018c	              0x90	                                     nop	      1018	cache.h	FUNCTION_37
0x400018d	              0xc9	                                   leave	      1018	cache.h	FUNCTION_37
0x400018e	              0xc3	                                     ret	      1018	cache.h	FUNCTION_37
parse_next_oid	FOR,0:ELSE,4:CALL,12:DO,0:IF,11:WHILE,0:SWITCH,0:functions,0	188
0x4000370	              0x55	                                push rbp	       101	update-ref.c	FUNCTION_14
0x4000371	          0x4889e5	                            mov rbp, rsp	       101	update-ref.c	FUNCTION_14
0x4000374	        0x4883ec60	                           sub rsp, 0x60	       101	update-ref.c	FUNCTION_14
0x4000378	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       101	update-ref.c	FUNCTION_14
0x400037c	        0x488975c0	             mov qword [rbp - 0x40], rsi	       101	update-ref.c	FUNCTION_14
0x4000380	        0x488955b8	             mov qword [rbp - 0x48], rdx	       101	update-ref.c	FUNCTION_14
0x4000384	        0x48894db0	             mov qword [rbp - 0x50], rcx	       101	update-ref.c	FUNCTION_14
0x4000388	        0x4c8945a8	              mov qword [rbp - 0x58], r8	       101	update-ref.c	FUNCTION_14
0x400038c	        0x44894da4	             mov dword [rbp - 0x5c], r9d	       101	update-ref.c	FUNCTION_14
0x4000390	    0x64488b042528	                mov rax, qword fs:[0x28]	       101	update-ref.c	FUNCTION_14
0x4000399	        0x488945f8	                mov qword [rbp - 8], rax	       101	update-ref.c	FUNCTION_14
0x400039d	            0x31c0	                            xor eax, eax	       101	update-ref.c	FUNCTION_14
0x400039f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       102	update-ref.c	FUNCTION_14
0x40003a7	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       102	update-ref.c	FUNCTION_14
0x40003af	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       102	update-ref.c	FUNCTION_14
0x40003b7	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       103	update-ref.c	FUNCTION_14
0x40003be	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       105	update-ref.c	FUNCTION_14	IF_1
0x40003c2	          0x488b10	                    mov rdx, qword [rax]	       105	update-ref.c	FUNCTION_14	IF_1
0x40003c5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       105	update-ref.c	FUNCTION_14	IF_1
0x40003c9	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       105	update-ref.c	FUNCTION_14	IF_1
0x40003cd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       105	update-ref.c	FUNCTION_14	IF_1
0x40003d1	        0x488b4008	                mov rax, qword [rax + 8]	       105	update-ref.c	FUNCTION_14	IF_1
0x40003d5	          0x4801c8	                            add rax, rcx	       105	update-ref.c	FUNCTION_14	IF_1
0x40003d8	          0x4839c2	                            cmp rdx, rax	       105	update-ref.c	FUNCTION_14	IF_1
0x40003db	     0xf8401020000	                            je 0x40005e2	       105	update-ref.c	FUNCTION_14	IF_1
0x40003e1	     0xfb605000000	           movzx eax, byte [0x040003e8] 	       108	update-ref.c	FUNCTION_14	IF_2
0x40003e8	            0x84c0	                             test al, al	       108	update-ref.c	FUNCTION_14	IF_2
0x40003ea	     0xf84c8000000	                            je 0x40004b8	       108	update-ref.c	FUNCTION_14	IF_2
0x40003f0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       110	update-ref.c	FUNCTION_14	IF_2	IF_3
0x40003f4	          0x488b00	                    mov rax, qword [rax]	       110	update-ref.c	FUNCTION_14	IF_2	IF_3
0x40003f7	           0xfb600	                   movzx eax, byte [rax]	       110	update-ref.c	FUNCTION_14	IF_2	IF_3
0x40003fa	            0x84c0	                             test al, al	       110	update-ref.c	FUNCTION_14	IF_2	IF_3
0x40003fc	            0x7415	                            je 0x4000413	       110	update-ref.c	FUNCTION_14	IF_2	IF_3
0x40003fe	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       110	update-ref.c	FUNCTION_14	IF_2	IF_3
0x4000402	          0x488b00	                    mov rax, qword [rax]	       110	update-ref.c	FUNCTION_14	IF_2	IF_3
0x4000405	           0xfb610	                   movzx edx, byte [rax]	       110	update-ref.c	FUNCTION_14	IF_2	IF_3
0x4000408	     0xfb605000000	           movzx eax, byte [0x0400040f] 	       110	update-ref.c	FUNCTION_14	IF_2	IF_3
0x400040f	            0x38c2	                              cmp dl, al	       110	update-ref.c	FUNCTION_14	IF_2	IF_3
0x4000411	            0x750a	                           jne 0x400041d	       110	update-ref.c	FUNCTION_14	IF_2	IF_3
0x4000413	      0xb801000000	                              mov eax, 1	       111	update-ref.c	FUNCTION_14	IF_2	IF_3
0x4000418	      0xe9f7010000	                           jmp 0x4000614	       111	update-ref.c	FUNCTION_14	IF_2	IF_3
0x400041d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       112	update-ref.c	FUNCTION_14	IF_2	IF_4
0x4000421	          0x488b00	                    mov rax, qword [rax]	       112	update-ref.c	FUNCTION_14	IF_2	IF_4
0x4000424	           0xfb600	                   movzx eax, byte [rax]	       112	update-ref.c	FUNCTION_14	IF_2	IF_4
0x4000427	            0x3c20	                            cmp al, 0x20	       112	update-ref.c	FUNCTION_14	IF_2	IF_4
0x4000429	            0x7421	                            je 0x400044c	       112	update-ref.c	FUNCTION_14	IF_2	IF_4
0x400042b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       113	update-ref.c	FUNCTION_14	IF_2	IF_4	CALL_1
0x400042f	          0x488b08	                    mov rcx, qword [rax]	       113	update-ref.c	FUNCTION_14	IF_2	IF_4	CALL_1
0x4000432	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       113	update-ref.c	FUNCTION_14	IF_2	IF_4	CALL_1
0x4000436	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       113	update-ref.c	FUNCTION_14	IF_2	IF_4	CALL_1
0x400043a	          0x4889c6	                            mov rsi, rax	       113	update-ref.c	FUNCTION_14	IF_2	IF_4	CALL_1
0x400043d	      0xbf00000000	                              mov edi, 0	       113	update-ref.c	FUNCTION_14	IF_2	IF_4	CALL_1
0x4000442	      0xb800000000	                              mov eax, 0	       113	update-ref.c	FUNCTION_14	IF_2	IF_4	CALL_1
0x4000447	      0xe800000000	                          call 0x400044c	       113	update-ref.c	FUNCTION_14	IF_2	IF_4	CALL_1
0x400044c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       115	update-ref.c	FUNCTION_14	IF_2
0x4000450	          0x488b00	                    mov rax, qword [rax]	       115	update-ref.c	FUNCTION_14	IF_2
0x4000453	        0x488d5001	                      lea rdx, [rax + 1]	       115	update-ref.c	FUNCTION_14	IF_2
0x4000457	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       115	update-ref.c	FUNCTION_14	IF_2
0x400045b	          0x488910	                    mov qword [rax], rdx	       115	update-ref.c	FUNCTION_14	IF_2
0x400045e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       116	update-ref.c	FUNCTION_14	IF_2	CALL_2
0x4000462	          0x488b00	                    mov rax, qword [rax]	       116	update-ref.c	FUNCTION_14	IF_2	CALL_2
0x4000465	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       116	update-ref.c	FUNCTION_14	IF_2	CALL_2
0x4000469	          0x4889d6	                            mov rsi, rdx	       116	update-ref.c	FUNCTION_14	IF_2	CALL_2
0x400046c	          0x4889c7	                            mov rdi, rax	       116	update-ref.c	FUNCTION_14	IF_2	CALL_2
0x400046f	      0xe81bfdffff	                      call sym.parse_arg	       116	update-ref.c	FUNCTION_14	IF_2	CALL_2
0x4000474	          0x4889c2	                            mov rdx, rax	       116	update-ref.c	FUNCTION_14	IF_2	CALL_2
0x4000477	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       116	update-ref.c	FUNCTION_14	IF_2	CALL_2
0x400047b	          0x488910	                    mov qword [rax], rdx	       116	update-ref.c	FUNCTION_14	IF_2	CALL_2
0x400047e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       117	update-ref.c	FUNCTION_14	IF_2	IF_5
0x4000482	          0x4885c0	                           test rax, rax	       117	update-ref.c	FUNCTION_14	IF_2	IF_5
0x4000485	            0x7420	                            je 0x40004a7	       117	update-ref.c	FUNCTION_14	IF_2	IF_5
0x4000487	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       118	update-ref.c	FUNCTION_14	IF_2	IF_5	IF_6	CALL_3
0x400048b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       118	update-ref.c	FUNCTION_14	IF_2	IF_5	IF_6	CALL_3
0x400048f	          0x4889d6	                            mov rsi, rdx	       118	update-ref.c	FUNCTION_14	IF_2	IF_5	IF_6	CALL_3
0x4000492	          0x4889c7	                            mov rdi, rax	       118	update-ref.c	FUNCTION_14	IF_2	IF_5	IF_6	CALL_3
0x4000495	      0xe800000000	                          call 0x400049a	       118	update-ref.c	FUNCTION_14	IF_2	IF_5	IF_6	CALL_3
0x400049a	            0x85c0	                           test eax, eax	       118	update-ref.c	FUNCTION_14	IF_2	IF_5	IF_6	CALL_3
0x400049c	     0xf8400010000	                            je 0x40005a2	       118	update-ref.c	FUNCTION_14	IF_2	IF_5	IF_6	CALL_3
0x40004a2	      0xe90c010000	                           jmp 0x40005b3	       119	update-ref.c	FUNCTION_14	IF_2	IF_5	IF_6
0x40004a7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       122	update-ref.c	FUNCTION_14	IF_2	ELSE_1	CALL_4
0x40004ab	          0x4889c7	                            mov rdi, rax	       122	update-ref.c	FUNCTION_14	IF_2	ELSE_1	CALL_4
0x40004ae	      0xe8b7fcffff	                         call sym.oidclr	       122	update-ref.c	FUNCTION_14	IF_2	ELSE_1	CALL_4
0x40004b3	      0xe9ea000000	                           jmp 0x40005a2	       122	update-ref.c	FUNCTION_14	IF_2	ELSE_1	CALL_4
0x40004b8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       126	update-ref.c	FUNCTION_14	ELSE_2	IF_7
0x40004bc	          0x488b00	                    mov rax, qword [rax]	       126	update-ref.c	FUNCTION_14	ELSE_2	IF_7
0x40004bf	           0xfb600	                   movzx eax, byte [rax]	       126	update-ref.c	FUNCTION_14	ELSE_2	IF_7
0x40004c2	            0x84c0	                             test al, al	       126	update-ref.c	FUNCTION_14	ELSE_2	IF_7
0x40004c4	            0x7421	                            je 0x40004e7	       126	update-ref.c	FUNCTION_14	ELSE_2	IF_7
0x40004c6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	update-ref.c	FUNCTION_14	ELSE_2	IF_7	CALL_5
0x40004ca	          0x488b08	                    mov rcx, qword [rax]	       127	update-ref.c	FUNCTION_14	ELSE_2	IF_7	CALL_5
0x40004cd	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       127	update-ref.c	FUNCTION_14	ELSE_2	IF_7	CALL_5
0x40004d1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       127	update-ref.c	FUNCTION_14	ELSE_2	IF_7	CALL_5
0x40004d5	          0x4889c6	                            mov rsi, rax	       127	update-ref.c	FUNCTION_14	ELSE_2	IF_7	CALL_5
0x40004d8	      0xbf00000000	                              mov edi, 0	       127	update-ref.c	FUNCTION_14	ELSE_2	IF_7	CALL_5
0x40004dd	      0xb800000000	                              mov eax, 0	       127	update-ref.c	FUNCTION_14	ELSE_2	IF_7	CALL_5
0x40004e2	      0xe800000000	                          call 0x40004e7	       127	update-ref.c	FUNCTION_14	ELSE_2	IF_7	CALL_5
0x40004e7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       129	update-ref.c	FUNCTION_14	ELSE_2
0x40004eb	          0x488b00	                    mov rax, qword [rax]	       129	update-ref.c	FUNCTION_14	ELSE_2
0x40004ee	        0x488d5001	                      lea rdx, [rax + 1]	       129	update-ref.c	FUNCTION_14	ELSE_2
0x40004f2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       129	update-ref.c	FUNCTION_14	ELSE_2
0x40004f6	          0x488910	                    mov qword [rax], rdx	       129	update-ref.c	FUNCTION_14	ELSE_2
0x40004f9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       130	update-ref.c	FUNCTION_14	ELSE_2	IF_8
0x40004fd	          0x488b10	                    mov rdx, qword [rax]	       130	update-ref.c	FUNCTION_14	ELSE_2	IF_8
0x4000500	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       130	update-ref.c	FUNCTION_14	ELSE_2	IF_8
0x4000504	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       130	update-ref.c	FUNCTION_14	ELSE_2	IF_8
0x4000508	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       130	update-ref.c	FUNCTION_14	ELSE_2	IF_8
0x400050c	        0x488b4008	                mov rax, qword [rax + 8]	       130	update-ref.c	FUNCTION_14	ELSE_2	IF_8
0x4000510	          0x4801c8	                            add rax, rcx	       130	update-ref.c	FUNCTION_14	ELSE_2	IF_8
0x4000513	          0x4839c2	                            cmp rdx, rax	       130	update-ref.c	FUNCTION_14	ELSE_2	IF_8
0x4000516	     0xf84c9000000	                            je 0x40005e5	       130	update-ref.c	FUNCTION_14	ELSE_2	IF_8
0x400051c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       132	update-ref.c	FUNCTION_14	ELSE_2	CALL_6
0x4000520	          0x488b10	                    mov rdx, qword [rax]	       132	update-ref.c	FUNCTION_14	ELSE_2	CALL_6
0x4000523	        0x488d45e0	                   lea rax, [rbp - 0x20]	       132	update-ref.c	FUNCTION_14	ELSE_2	CALL_6
0x4000527	          0x4889d6	                            mov rsi, rdx	       132	update-ref.c	FUNCTION_14	ELSE_2	CALL_6
0x400052a	          0x4889c7	                            mov rdi, rax	       132	update-ref.c	FUNCTION_14	ELSE_2	CALL_6
0x400052d	      0xe8b2fbffff	                  call sym.strbuf_addstr	       132	update-ref.c	FUNCTION_14	ELSE_2	CALL_6
0x4000532	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       133	update-ref.c	FUNCTION_14	ELSE_2
0x4000536	          0x488b10	                    mov rdx, qword [rax]	       133	update-ref.c	FUNCTION_14	ELSE_2
0x4000539	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       133	update-ref.c	FUNCTION_14	ELSE_2
0x400053d	          0x4801c2	                            add rdx, rax	       133	update-ref.c	FUNCTION_14	ELSE_2
0x4000540	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       133	update-ref.c	FUNCTION_14	ELSE_2
0x4000544	          0x488910	                    mov qword [rax], rdx	       133	update-ref.c	FUNCTION_14	ELSE_2
0x4000547	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       135	update-ref.c	FUNCTION_14	ELSE_2	IF_9
0x400054b	          0x4885c0	                           test rax, rax	       135	update-ref.c	FUNCTION_14	ELSE_2	IF_9
0x400054e	            0x7419	                            je 0x4000569	       135	update-ref.c	FUNCTION_14	ELSE_2	IF_9
0x4000550	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       136	update-ref.c	FUNCTION_14	ELSE_2	IF_9	IF_10	CALL_7
0x4000554	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       136	update-ref.c	FUNCTION_14	ELSE_2	IF_9	IF_10	CALL_7
0x4000558	          0x4889d6	                            mov rsi, rdx	       136	update-ref.c	FUNCTION_14	ELSE_2	IF_9	IF_10	CALL_7
0x400055b	          0x4889c7	                            mov rdi, rax	       136	update-ref.c	FUNCTION_14	ELSE_2	IF_9	IF_10	CALL_7
0x400055e	      0xe800000000	                          call 0x4000563	       136	update-ref.c	FUNCTION_14	ELSE_2	IF_9	IF_10	CALL_7
0x4000563	            0x85c0	                           test eax, eax	       136	update-ref.c	FUNCTION_14	ELSE_2	IF_9	IF_10	CALL_7
0x4000565	            0x743b	                            je 0x40005a2	       136	update-ref.c	FUNCTION_14	ELSE_2	IF_9	IF_10	CALL_7
0x4000567	            0xeb4a	                           jmp 0x40005b3	       137	update-ref.c	FUNCTION_14	ELSE_2	IF_9	IF_10
0x4000569	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       138	update-ref.c	FUNCTION_14	ELSE_2	ELSE_3	IF_11
0x400056c	          0x83e002	                              and eax, 2	       138	update-ref.c	FUNCTION_14	ELSE_2	ELSE_3	IF_11
0x400056f	            0x85c0	                           test eax, eax	       138	update-ref.c	FUNCTION_14	ELSE_2	ELSE_3	IF_11
0x4000571	            0x7428	                            je 0x400059b	       138	update-ref.c	FUNCTION_14	ELSE_2	ELSE_3	IF_11
0x4000573	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       140	update-ref.c	FUNCTION_14	ELSE_2	ELSE_3	IF_11	CALL_8
0x4000577	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       140	update-ref.c	FUNCTION_14	ELSE_2	ELSE_3	IF_11	CALL_8
0x400057b	          0x4889c6	                            mov rsi, rax	       140	update-ref.c	FUNCTION_14	ELSE_2	ELSE_3	IF_11	CALL_8
0x400057e	      0xbf00000000	                              mov edi, 0	       140	update-ref.c	FUNCTION_14	ELSE_2	ELSE_3	IF_11	CALL_8
0x4000583	      0xb800000000	                              mov eax, 0	       140	update-ref.c	FUNCTION_14	ELSE_2	ELSE_3	IF_11	CALL_8
0x4000588	      0xe800000000	                          call 0x400058d	       140	update-ref.c	FUNCTION_14	ELSE_2	ELSE_3	IF_11	CALL_8
0x400058d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       142	update-ref.c	FUNCTION_14	ELSE_2	ELSE_3	IF_11	CALL_9
0x4000591	          0x4889c7	                            mov rdi, rax	       142	update-ref.c	FUNCTION_14	ELSE_2	ELSE_3	IF_11	CALL_9
0x4000594	      0xe8d1fbffff	                         call sym.oidclr	       142	update-ref.c	FUNCTION_14	ELSE_2	ELSE_3	IF_11	CALL_9
0x4000599	            0xeb07	                           jmp 0x40005a2	       142	update-ref.c	FUNCTION_14	ELSE_2	ELSE_3	IF_11	CALL_9
0x400059b	    0xc745dc010000	               mov dword [rbp - 0x24], 1	       148	update-ref.c	FUNCTION_14	ELSE_2	ELSE_4
0x40005a2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       152	update-ref.c	FUNCTION_14	CALL_10
0x40005a6	          0x4889c7	                            mov rdi, rax	       152	update-ref.c	FUNCTION_14	CALL_10
0x40005a9	      0xe800000000	                          call 0x40005ae	       152	update-ref.c	FUNCTION_14	CALL_10
0x40005ae	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       154	update-ref.c	FUNCTION_14
0x40005b1	            0xeb61	                           jmp 0x4000614	       154	update-ref.c	FUNCTION_14
0x40005b3	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       157	update-ref.c	FUNCTION_14	CALL_11
0x40005b7	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       157	update-ref.c	FUNCTION_14	CALL_11
0x40005ba	          0x83e001	                              and eax, 1	       157	update-ref.c	FUNCTION_14	CALL_11
0x40005bd	            0x85c0	                           test eax, eax	       157	update-ref.c	FUNCTION_14	CALL_11
0x40005bf	            0x7407	                            je 0x40005c8	       157	update-ref.c	FUNCTION_14	CALL_11
0x40005c1	      0xbf00000000	                              mov edi, 0	       157	update-ref.c	FUNCTION_14	CALL_11
0x40005c6	            0xeb05	                           jmp 0x40005cd	       157	update-ref.c	FUNCTION_14	CALL_11
0x40005c8	      0xbf00000000	                              mov edi, 0	       157	update-ref.c	FUNCTION_14	CALL_11
0x40005cd	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       157	update-ref.c	FUNCTION_14	CALL_11
0x40005d1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       157	update-ref.c	FUNCTION_14	CALL_11
0x40005d5	          0x4889c6	                            mov rsi, rax	       157	update-ref.c	FUNCTION_14	CALL_11
0x40005d8	      0xb800000000	                              mov eax, 0	       157	update-ref.c	FUNCTION_14	CALL_11
0x40005dd	      0xe800000000	                          call 0x40005e2	       157	update-ref.c	FUNCTION_14	CALL_11
0x40005e2	              0x90	                                     nop	       106	update-ref.c	FUNCTION_14	IF_1
0x40005e3	            0xeb01	                           jmp 0x40005e6	       106	update-ref.c	FUNCTION_14	IF_1
0x40005e5	              0x90	                                     nop	       131	update-ref.c	FUNCTION_14	ELSE_2	IF_8
0x40005e6	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       163	update-ref.c	FUNCTION_14	CALL_12
0x40005e9	          0x83e001	                              and eax, 1	       163	update-ref.c	FUNCTION_14	CALL_12
0x40005ec	            0x85c0	                           test eax, eax	       163	update-ref.c	FUNCTION_14	CALL_12
0x40005ee	            0x7407	                            je 0x40005f7	       163	update-ref.c	FUNCTION_14	CALL_12
0x40005f0	      0xb900000000	                              mov ecx, 0	       163	update-ref.c	FUNCTION_14	CALL_12
0x40005f5	            0xeb05	                           jmp 0x40005fc	       163	update-ref.c	FUNCTION_14	CALL_12
0x40005f7	      0xb900000000	                              mov ecx, 0	       163	update-ref.c	FUNCTION_14	CALL_12
0x40005fc	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       163	update-ref.c	FUNCTION_14	CALL_12
0x4000600	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       163	update-ref.c	FUNCTION_14	CALL_12
0x4000604	          0x4889c6	                            mov rsi, rax	       163	update-ref.c	FUNCTION_14	CALL_12
0x4000607	          0x4889cf	                            mov rdi, rcx	       163	update-ref.c	FUNCTION_14	CALL_12
0x400060a	      0xb800000000	                              mov eax, 0	       163	update-ref.c	FUNCTION_14	CALL_12
0x400060f	      0xe800000000	                          call 0x4000614	       163	update-ref.c	FUNCTION_14	CALL_12
0x4000614	        0x488b75f8	                mov rsi, qword [rbp - 8]	       167	update-ref.c	FUNCTION_14
0x4000618	    0x644833342528	                xor rsi, qword fs:[0x28]	       167	update-ref.c	FUNCTION_14
0x4000621	            0x7405	                            je 0x4000628	       167	update-ref.c	FUNCTION_14
0x4000623	      0xe800000000	                          call 0x4000628	       167	update-ref.c	FUNCTION_14
0x4000628	              0xc9	                                   leave	       167	update-ref.c	FUNCTION_14
0x4000629	              0xc3	                                     ret	       167	update-ref.c	FUNCTION_14
parse_cmd_verify	FOR,0:ELSE,0:CALL,9:DO,0:IF,4:WHILE,0:SWITCH,0:functions,0	79
0x4000afe	              0x55	                                push rbp	       285	update-ref.c	FUNCTION_18
0x4000aff	          0x4889e5	                            mov rbp, rsp	       285	update-ref.c	FUNCTION_18
0x4000b02	        0x4883ec70	                           sub rsp, 0x70	       285	update-ref.c	FUNCTION_18
0x4000b06	        0x48897da8	             mov qword [rbp - 0x58], rdi	       285	update-ref.c	FUNCTION_18
0x4000b0a	        0x488975a0	             mov qword [rbp - 0x60], rsi	       285	update-ref.c	FUNCTION_18
0x4000b0e	        0x48895598	             mov qword [rbp - 0x68], rdx	       285	update-ref.c	FUNCTION_18
0x4000b12	    0x64488b042528	                mov rax, qword fs:[0x28]	       285	update-ref.c	FUNCTION_18
0x4000b1b	        0x488945f8	                mov qword [rbp - 8], rax	       285	update-ref.c	FUNCTION_18
0x4000b1f	            0x31c0	                            xor eax, eax	       285	update-ref.c	FUNCTION_18
0x4000b21	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       286	update-ref.c	FUNCTION_18
0x4000b29	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       286	update-ref.c	FUNCTION_18
0x4000b31	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       286	update-ref.c	FUNCTION_18
0x4000b39	        0x488d5598	                   lea rdx, [rbp - 0x68]	       290	update-ref.c	FUNCTION_18	CALL_1
0x4000b3d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       290	update-ref.c	FUNCTION_18	CALL_1
0x4000b41	          0x4889d6	                            mov rsi, rdx	       290	update-ref.c	FUNCTION_18	CALL_1
0x4000b44	          0x4889c7	                            mov rdi, rax	       290	update-ref.c	FUNCTION_18	CALL_1
0x4000b47	      0xe827f7ffff	                  call sym.parse_refname	       290	update-ref.c	FUNCTION_18	CALL_1
0x4000b4c	        0x488945b8	             mov qword [rbp - 0x48], rax	       290	update-ref.c	FUNCTION_18	CALL_1
0x4000b50	      0x48837db800	               cmp qword [rbp - 0x48], 0	       291	update-ref.c	FUNCTION_18	IF_1
0x4000b55	            0x750f	                           jne 0x4000b66	       291	update-ref.c	FUNCTION_18	IF_1
0x4000b57	      0xbf00000000	                              mov edi, 0	       292	update-ref.c	FUNCTION_18	CALL_2
0x4000b5c	      0xb800000000	                              mov eax, 0	       292	update-ref.c	FUNCTION_18	CALL_2
0x4000b61	      0xe800000000	                          call 0x4000b66	       292	update-ref.c	FUNCTION_18	CALL_2
0x4000b66	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       294	update-ref.c	FUNCTION_18	IF_2	CALL_3
0x4000b6a	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       294	update-ref.c	FUNCTION_18	IF_2	CALL_3
0x4000b6e	        0x488d7598	                   lea rsi, [rbp - 0x68]	       294	update-ref.c	FUNCTION_18	IF_2	CALL_3
0x4000b72	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       294	update-ref.c	FUNCTION_18	IF_2	CALL_3
0x4000b76	    0x41b901000000	                              mov r9d, 1	       294	update-ref.c	FUNCTION_18	IF_2	CALL_3
0x4000b7c	          0x4989c8	                             mov r8, rcx	       294	update-ref.c	FUNCTION_18	IF_2	CALL_3
0x4000b7f	      0xb900000000	                              mov ecx, 0	       294	update-ref.c	FUNCTION_18	IF_2	CALL_3
0x4000b84	          0x4889c7	                            mov rdi, rax	       294	update-ref.c	FUNCTION_18	IF_2	CALL_3
0x4000b87	      0xe8e4f7ffff	                 call sym.parse_next_oid	       294	update-ref.c	FUNCTION_18	IF_2	CALL_3
0x4000b8c	            0x85c0	                           test eax, eax	       294	update-ref.c	FUNCTION_18	IF_2	CALL_3
0x4000b8e	            0x740c	                            je 0x4000b9c	       294	update-ref.c	FUNCTION_18	IF_2	CALL_3
0x4000b90	        0x488d45e0	                   lea rax, [rbp - 0x20]	       296	update-ref.c	FUNCTION_18	CALL_4
0x4000b94	          0x4889c7	                            mov rdi, rax	       296	update-ref.c	FUNCTION_18	CALL_4
0x4000b97	      0xe8cef5ffff	                         call sym.oidclr	       296	update-ref.c	FUNCTION_18	CALL_4
0x4000b9c	        0x488b4598	             mov rax, qword [rbp - 0x68]	       298	update-ref.c	FUNCTION_18	IF_3
0x4000ba0	           0xfb610	                   movzx edx, byte [rax]	       298	update-ref.c	FUNCTION_18	IF_3
0x4000ba3	     0xfb605000000	           movzx eax, byte [0x04000baa] 	       298	update-ref.c	FUNCTION_18	IF_3
0x4000baa	            0x38c2	                              cmp dl, al	       298	update-ref.c	FUNCTION_18	IF_3
0x4000bac	            0x741a	                            je 0x4000bc8	       298	update-ref.c	FUNCTION_18	IF_3
0x4000bae	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       299	update-ref.c	FUNCTION_18	CALL_5
0x4000bb2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       299	update-ref.c	FUNCTION_18	CALL_5
0x4000bb6	          0x4889c6	                            mov rsi, rax	       299	update-ref.c	FUNCTION_18	CALL_5
0x4000bb9	      0xbf00000000	                              mov edi, 0	       299	update-ref.c	FUNCTION_18	CALL_5
0x4000bbe	      0xb800000000	                              mov eax, 0	       299	update-ref.c	FUNCTION_18	CALL_5
0x4000bc3	      0xe800000000	                          call 0x4000bc8	       299	update-ref.c	FUNCTION_18	CALL_5
0x4000bc8	    0x8b0500000000	            mov eax, dword [0x04000bce] 	       301	update-ref.c	FUNCTION_18	IF_4	CALL_6
0x4000bce	            0x89c7	                            mov edi, eax	       301	update-ref.c	FUNCTION_18	IF_4	CALL_6
0x4000bd0	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       301	update-ref.c	FUNCTION_18	IF_4	CALL_6
0x4000bd4	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       301	update-ref.c	FUNCTION_18	IF_4	CALL_6
0x4000bd8	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       301	update-ref.c	FUNCTION_18	IF_4	CALL_6
0x4000bdc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       301	update-ref.c	FUNCTION_18	IF_4	CALL_6
0x4000be0	          0x4989c8	                             mov r8, rcx	       301	update-ref.c	FUNCTION_18	IF_4	CALL_6
0x4000be3	            0x89f9	                            mov ecx, edi	       301	update-ref.c	FUNCTION_18	IF_4	CALL_6
0x4000be5	          0x4889c7	                            mov rdi, rax	       301	update-ref.c	FUNCTION_18	IF_4	CALL_6
0x4000be8	      0xe800000000	                          call 0x4000bed	       301	update-ref.c	FUNCTION_18	IF_4	CALL_6
0x4000bed	            0x85c0	                           test eax, eax	       301	update-ref.c	FUNCTION_18	IF_4	CALL_6
0x4000bef	            0x7416	                            je 0x4000c07	       301	update-ref.c	FUNCTION_18	IF_4	CALL_6
0x4000bf1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       303	update-ref.c	FUNCTION_18	CALL_7
0x4000bf5	          0x4889c6	                            mov rsi, rax	       303	update-ref.c	FUNCTION_18	CALL_7
0x4000bf8	      0xbf00000000	                              mov edi, 0	       303	update-ref.c	FUNCTION_18	CALL_7
0x4000bfd	      0xb800000000	                              mov eax, 0	       303	update-ref.c	FUNCTION_18	CALL_7
0x4000c02	      0xe800000000	                          call 0x4000c07	       303	update-ref.c	FUNCTION_18	CALL_7
0x4000c07	    0xc70500000000	               mov dword [0x04000c11], 0	       305	update-ref.c	FUNCTION_18
0x4000c11	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       306	update-ref.c	FUNCTION_18	CALL_8
0x4000c15	          0x4889c7	                            mov rdi, rax	       306	update-ref.c	FUNCTION_18	CALL_8
0x4000c18	      0xe800000000	                          call 0x4000c1d	       306	update-ref.c	FUNCTION_18	CALL_8
0x4000c1d	        0x488d45c0	                   lea rax, [rbp - 0x40]	       307	update-ref.c	FUNCTION_18	CALL_9
0x4000c21	          0x4889c7	                            mov rdi, rax	       307	update-ref.c	FUNCTION_18	CALL_9
0x4000c24	      0xe800000000	                          call 0x4000c29	       307	update-ref.c	FUNCTION_18	CALL_9
0x4000c29	        0x488b4598	             mov rax, qword [rbp - 0x68]	       309	update-ref.c	FUNCTION_18
0x4000c2d	        0x488b4df8	                mov rcx, qword [rbp - 8]	       310	update-ref.c	FUNCTION_18
0x4000c31	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       310	update-ref.c	FUNCTION_18
0x4000c3a	            0x7405	                            je 0x4000c41	       310	update-ref.c	FUNCTION_18
0x4000c3c	      0xe800000000	                          call 0x4000c41	       310	update-ref.c	FUNCTION_18
0x4000c41	              0xc9	                                   leave	       310	update-ref.c	FUNCTION_18
0x4000c42	              0xc3	                                     ret	       310	update-ref.c	FUNCTION_18
parse_cmd_create	FOR,0:ELSE,0:CALL,11:DO,0:IF,5:WHILE,0:SWITCH,0:functions,0	95
0x40007ef	              0x55	                                push rbp	       217	update-ref.c	FUNCTION_16
0x40007f0	          0x4889e5	                            mov rbp, rsp	       217	update-ref.c	FUNCTION_16
0x40007f3	        0x4883ec70	                           sub rsp, 0x70	       217	update-ref.c	FUNCTION_16
0x40007f7	        0x48897da8	             mov qword [rbp - 0x58], rdi	       217	update-ref.c	FUNCTION_16
0x40007fb	        0x488975a0	             mov qword [rbp - 0x60], rsi	       217	update-ref.c	FUNCTION_16
0x40007ff	        0x48895598	             mov qword [rbp - 0x68], rdx	       217	update-ref.c	FUNCTION_16
0x4000803	    0x64488b042528	                mov rax, qword fs:[0x28]	       217	update-ref.c	FUNCTION_16
0x400080c	        0x488945f8	                mov qword [rbp - 8], rax	       217	update-ref.c	FUNCTION_16
0x4000810	            0x31c0	                            xor eax, eax	       217	update-ref.c	FUNCTION_16
0x4000812	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       218	update-ref.c	FUNCTION_16
0x400081a	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       218	update-ref.c	FUNCTION_16
0x4000822	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       218	update-ref.c	FUNCTION_16
0x400082a	        0x488d5598	                   lea rdx, [rbp - 0x68]	       222	update-ref.c	FUNCTION_16	CALL_1
0x400082e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       222	update-ref.c	FUNCTION_16	CALL_1
0x4000832	          0x4889d6	                            mov rsi, rdx	       222	update-ref.c	FUNCTION_16	CALL_1
0x4000835	          0x4889c7	                            mov rdi, rax	       222	update-ref.c	FUNCTION_16	CALL_1
0x4000838	      0xe836faffff	                  call sym.parse_refname	       222	update-ref.c	FUNCTION_16	CALL_1
0x400083d	        0x488945b8	             mov qword [rbp - 0x48], rax	       222	update-ref.c	FUNCTION_16	CALL_1
0x4000841	      0x48837db800	               cmp qword [rbp - 0x48], 0	       223	update-ref.c	FUNCTION_16	IF_1
0x4000846	            0x750f	                           jne 0x4000857	       223	update-ref.c	FUNCTION_16	IF_1
0x4000848	      0xbf00000000	                              mov edi, 0	       224	update-ref.c	FUNCTION_16	CALL_2
0x400084d	      0xb800000000	                              mov eax, 0	       224	update-ref.c	FUNCTION_16	CALL_2
0x4000852	      0xe800000000	                          call 0x4000857	       224	update-ref.c	FUNCTION_16	CALL_2
0x4000857	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       226	update-ref.c	FUNCTION_16	IF_2	CALL_3
0x400085b	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       226	update-ref.c	FUNCTION_16	IF_2	CALL_3
0x400085f	        0x488d7598	                   lea rsi, [rbp - 0x68]	       226	update-ref.c	FUNCTION_16	IF_2	CALL_3
0x4000863	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       226	update-ref.c	FUNCTION_16	IF_2	CALL_3
0x4000867	    0x41b900000000	                              mov r9d, 0	       226	update-ref.c	FUNCTION_16	IF_2	CALL_3
0x400086d	          0x4989c8	                             mov r8, rcx	       226	update-ref.c	FUNCTION_16	IF_2	CALL_3
0x4000870	      0xb900000000	                              mov ecx, 0	       226	update-ref.c	FUNCTION_16	IF_2	CALL_3
0x4000875	          0x4889c7	                            mov rdi, rax	       226	update-ref.c	FUNCTION_16	IF_2	CALL_3
0x4000878	      0xe8f3faffff	                 call sym.parse_next_oid	       226	update-ref.c	FUNCTION_16	IF_2	CALL_3
0x400087d	            0x85c0	                           test eax, eax	       226	update-ref.c	FUNCTION_16	IF_2	CALL_3
0x400087f	            0x7416	                            je 0x4000897	       226	update-ref.c	FUNCTION_16	IF_2	CALL_3
0x4000881	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       227	update-ref.c	FUNCTION_16	CALL_4
0x4000885	          0x4889c6	                            mov rsi, rax	       227	update-ref.c	FUNCTION_16	CALL_4
0x4000888	      0xbf00000000	                              mov edi, 0	       227	update-ref.c	FUNCTION_16	CALL_4
0x400088d	      0xb800000000	                              mov eax, 0	       227	update-ref.c	FUNCTION_16	CALL_4
0x4000892	      0xe800000000	                          call 0x4000897	       227	update-ref.c	FUNCTION_16	CALL_4
0x4000897	        0x488d45e0	                   lea rax, [rbp - 0x20]	       229	update-ref.c	FUNCTION_16	IF_3	CALL_5
0x400089b	          0x4889c7	                            mov rdi, rax	       229	update-ref.c	FUNCTION_16	IF_3	CALL_5
0x400089e	      0xe8a0f8ffff	                    call sym.is_null_oid	       229	update-ref.c	FUNCTION_16	IF_3	CALL_5
0x40008a3	            0x85c0	                           test eax, eax	       229	update-ref.c	FUNCTION_16	IF_3	CALL_5
0x40008a5	            0x7416	                            je 0x40008bd	       229	update-ref.c	FUNCTION_16	IF_3	CALL_5
0x40008a7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       230	update-ref.c	FUNCTION_16	CALL_6
0x40008ab	          0x4889c6	                            mov rsi, rax	       230	update-ref.c	FUNCTION_16	CALL_6
0x40008ae	      0xbf00000000	                              mov edi, 0	       230	update-ref.c	FUNCTION_16	CALL_6
0x40008b3	      0xb800000000	                              mov eax, 0	       230	update-ref.c	FUNCTION_16	CALL_6
0x40008b8	      0xe800000000	                          call 0x40008bd	       230	update-ref.c	FUNCTION_16	CALL_6
0x40008bd	        0x488b4598	             mov rax, qword [rbp - 0x68]	       232	update-ref.c	FUNCTION_16	IF_4
0x40008c1	           0xfb610	                   movzx edx, byte [rax]	       232	update-ref.c	FUNCTION_16	IF_4
0x40008c4	     0xfb605000000	           movzx eax, byte [0x040008cb] 	       232	update-ref.c	FUNCTION_16	IF_4
0x40008cb	            0x38c2	                              cmp dl, al	       232	update-ref.c	FUNCTION_16	IF_4
0x40008cd	            0x741a	                            je 0x40008e9	       232	update-ref.c	FUNCTION_16	IF_4
0x40008cf	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       233	update-ref.c	FUNCTION_16	CALL_7
0x40008d3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       233	update-ref.c	FUNCTION_16	CALL_7
0x40008d7	          0x4889c6	                            mov rsi, rax	       233	update-ref.c	FUNCTION_16	CALL_7
0x40008da	      0xbf00000000	                              mov edi, 0	       233	update-ref.c	FUNCTION_16	CALL_7
0x40008df	      0xb800000000	                              mov eax, 0	       233	update-ref.c	FUNCTION_16	CALL_7
0x40008e4	      0xe800000000	                          call 0x40008e9	       233	update-ref.c	FUNCTION_16	CALL_7
0x40008e9	    0x488b3d000000	            mov rdi, qword [0x040008f0] 	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x40008f0	    0x8b0500000000	            mov eax, dword [0x040008f6] 	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x40008f6	            0x89c2	                            mov edx, eax	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x40008f8	    0x8b0500000000	            mov eax, dword [0x040008fe] 	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x40008fe	            0x89d1	                            mov ecx, edx	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x4000900	             0x9c1	                             or ecx, eax	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x4000902	        0x4c8d45c0	                    lea r8, [rbp - 0x40]	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x4000906	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x400090a	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x400090e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x4000912	          0x4d89c1	                              mov r9, r8	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x4000915	          0x4989f8	                             mov r8, rdi	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x4000918	          0x4889c7	                            mov rdi, rax	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x400091b	      0xe800000000	                          call 0x4000920	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x4000920	            0x85c0	                           test eax, eax	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x4000922	            0x7416	                            je 0x400093a	       235	update-ref.c	FUNCTION_16	IF_5	CALL_8
0x4000924	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       238	update-ref.c	FUNCTION_16	CALL_9
0x4000928	          0x4889c6	                            mov rsi, rax	       238	update-ref.c	FUNCTION_16	CALL_9
0x400092b	      0xbf00000000	                              mov edi, 0	       238	update-ref.c	FUNCTION_16	CALL_9
0x4000930	      0xb800000000	                              mov eax, 0	       238	update-ref.c	FUNCTION_16	CALL_9
0x4000935	      0xe800000000	                          call 0x400093a	       238	update-ref.c	FUNCTION_16	CALL_9
0x400093a	    0xc70500000000	               mov dword [0x04000944], 0	       240	update-ref.c	FUNCTION_16
0x4000944	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       241	update-ref.c	FUNCTION_16	CALL_10
0x4000948	          0x4889c7	                            mov rdi, rax	       241	update-ref.c	FUNCTION_16	CALL_10
0x400094b	      0xe800000000	                          call 0x4000950	       241	update-ref.c	FUNCTION_16	CALL_10
0x4000950	        0x488d45c0	                   lea rax, [rbp - 0x40]	       242	update-ref.c	FUNCTION_16	CALL_11
0x4000954	          0x4889c7	                            mov rdi, rax	       242	update-ref.c	FUNCTION_16	CALL_11
0x4000957	      0xe800000000	                          call 0x400095c	       242	update-ref.c	FUNCTION_16	CALL_11
0x400095c	        0x488b4598	             mov rax, qword [rbp - 0x68]	       244	update-ref.c	FUNCTION_16
0x4000960	        0x488b4df8	                mov rcx, qword [rbp - 8]	       245	update-ref.c	FUNCTION_16
0x4000964	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       245	update-ref.c	FUNCTION_16
0x400096d	            0x7405	                            je 0x4000974	       245	update-ref.c	FUNCTION_16
0x400096f	      0xe800000000	                          call 0x4000974	       245	update-ref.c	FUNCTION_16
0x4000974	              0xc9	                                   leave	       245	update-ref.c	FUNCTION_16
0x4000975	              0xc3	                                     ret	       245	update-ref.c	FUNCTION_16
cmd_update_ref	FOR,0:ELSE,3:CALL,36:DO,0:IF,16:WHILE,0:SWITCH,0:functions,0	266
0x4000ed5	              0x55	                                push rbp	       355	update-ref.c	FUNCTION_21
0x4000ed6	          0x4889e5	                            mov rbp, rsp	       355	update-ref.c	FUNCTION_21
0x4000ed9	    0x4881ec900200	                          sub rsp, 0x290	       355	update-ref.c	FUNCTION_21
0x4000ee0	    0x89bd8cfdffff	            mov dword [rbp - 0x274], edi	       355	update-ref.c	FUNCTION_21
0x4000ee6	    0x4889b580fdff	            mov qword [rbp - 0x280], rsi	       355	update-ref.c	FUNCTION_21
0x4000eed	    0x48899578fdff	            mov qword [rbp - 0x288], rdx	       355	update-ref.c	FUNCTION_21
0x4000ef4	    0x64488b042528	                mov rax, qword fs:[0x28]	       355	update-ref.c	FUNCTION_21
0x4000efd	        0x488945f8	                mov qword [rbp - 8], rax	       355	update-ref.c	FUNCTION_21
0x4000f01	            0x31c0	                            xor eax, eax	       355	update-ref.c	FUNCTION_21
0x4000f03	    0xc78598fdffff	              mov dword [rbp - 0x268], 0	       358	update-ref.c	FUNCTION_21
0x4000f0d	    0xc7859cfdffff	              mov dword [rbp - 0x264], 0	       358	update-ref.c	FUNCTION_21
0x4000f17	    0xc785a0fdffff	              mov dword [rbp - 0x260], 0	       358	update-ref.c	FUNCTION_21
0x4000f21	    0xc785a4fdffff	              mov dword [rbp - 0x25c], 0	       358	update-ref.c	FUNCTION_21
0x4000f2b	    0xc785acfdffff	              mov dword [rbp - 0x254], 0	       359	update-ref.c	FUNCTION_21
0x4000f35	    0xc785a8fdffff	              mov dword [rbp - 0x258], 0	       360	update-ref.c	FUNCTION_21
0x4000f3f	    0x488d9530feff	                  lea rdx, [rbp - 0x1d0]	       361	update-ref.c	FUNCTION_21
0x4000f46	      0xb800000000	                              mov eax, 0	       361	update-ref.c	FUNCTION_21
0x4000f4b	      0xb938000000	                           mov ecx, 0x38	       361	update-ref.c	FUNCTION_21
0x4000f50	          0x4889d7	                            mov rdi, rdx	       361	update-ref.c	FUNCTION_21
0x4000f53	          0xf348ab	              rep stosq qword [rdi], rax	       361	update-ref.c	FUNCTION_21
0x4000f56	    0xc78530feffff	              mov dword [rbp - 0x1d0], 9	       361	update-ref.c	FUNCTION_21
0x4000f60	    0xc78534feffff	          mov dword [rbp - 0x1cc], 0x6d 	       361	update-ref.c	FUNCTION_21
0x4000f6a	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	       361	update-ref.c	FUNCTION_21
0x4000f75	    0x48c78548feff	              mov qword [rbp - 0x1b8], 0	       361	update-ref.c	FUNCTION_21
0x4000f80	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	       361	update-ref.c	FUNCTION_21
0x4000f8b	    0xc78570feffff	              mov dword [rbp - 0x190], 7	       361	update-ref.c	FUNCTION_21
0x4000f95	    0xc78574feffff	          mov dword [rbp - 0x18c], 0x64 	       361	update-ref.c	FUNCTION_21
0x4000f9f	    0x488d8598fdff	                  lea rax, [rbp - 0x268]	       361	update-ref.c	FUNCTION_21
0x4000fa6	    0x48898580feff	            mov qword [rbp - 0x180], rax	       361	update-ref.c	FUNCTION_21
0x4000fad	    0x48c78590feff	              mov qword [rbp - 0x170], 0	       361	update-ref.c	FUNCTION_21
0x4000fb8	    0xc78598feffff	              mov dword [rbp - 0x168], 2	       361	update-ref.c	FUNCTION_21
0x4000fc2	    0x48c785a8feff	              mov qword [rbp - 0x158], 1	       361	update-ref.c	FUNCTION_21
0x4000fcd	    0xc785b0feffff	              mov dword [rbp - 0x150], 7	       361	update-ref.c	FUNCTION_21
0x4000fd7	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	       361	update-ref.c	FUNCTION_21
0x4000fe2	    0x488d859cfdff	                  lea rax, [rbp - 0x264]	       361	update-ref.c	FUNCTION_21
0x4000fe9	    0x488985c0feff	            mov qword [rbp - 0x140], rax	       361	update-ref.c	FUNCTION_21
0x4000ff0	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       361	update-ref.c	FUNCTION_21
0x4000ffb	    0xc785d8feffff	              mov dword [rbp - 0x128], 2	       361	update-ref.c	FUNCTION_21
0x4001005	    0x48c785e8feff	              mov qword [rbp - 0x118], 1	       361	update-ref.c	FUNCTION_21
0x4001010	    0xc785f0feffff	              mov dword [rbp - 0x110], 7	       361	update-ref.c	FUNCTION_21
0x400101a	    0xc785f4feffff	          mov dword [rbp - 0x10c], 0x7a 	       361	update-ref.c	FUNCTION_21
0x4001024	    0x488d85a4fdff	                  lea rax, [rbp - 0x25c]	       361	update-ref.c	FUNCTION_21
0x400102b	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       361	update-ref.c	FUNCTION_21
0x4001032	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       361	update-ref.c	FUNCTION_21
0x400103d	    0xc78518ffffff	               mov dword [rbp - 0xe8], 2	       361	update-ref.c	FUNCTION_21
0x4001047	    0x48c78528ffff	               mov qword [rbp - 0xd8], 1	       361	update-ref.c	FUNCTION_21
0x4001052	    0xc78530ffffff	               mov dword [rbp - 0xd0], 7	       361	update-ref.c	FUNCTION_21
0x400105c	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       361	update-ref.c	FUNCTION_21
0x4001067	    0x488d85a0fdff	                  lea rax, [rbp - 0x260]	       361	update-ref.c	FUNCTION_21
0x400106e	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       361	update-ref.c	FUNCTION_21
0x4001075	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       361	update-ref.c	FUNCTION_21
0x4001080	    0xc78558ffffff	               mov dword [rbp - 0xa8], 2	       361	update-ref.c	FUNCTION_21
0x400108a	    0x48c78568ffff	               mov qword [rbp - 0x98], 1	       361	update-ref.c	FUNCTION_21
0x4001095	    0xc78570ffffff	               mov dword [rbp - 0x90], 7	       361	update-ref.c	FUNCTION_21
0x400109f	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       361	update-ref.c	FUNCTION_21
0x40010aa	    0x488d85a8fdff	                  lea rax, [rbp - 0x258]	       361	update-ref.c	FUNCTION_21
0x40010b1	        0x48894580	             mov qword [rbp - 0x80], rax	       361	update-ref.c	FUNCTION_21
0x40010b5	    0x48c745900000	               mov qword [rbp - 0x70], 0	       361	update-ref.c	FUNCTION_21
0x40010bd	    0xc74598020000	               mov dword [rbp - 0x68], 2	       361	update-ref.c	FUNCTION_21
0x40010c4	    0x48c745a80100	               mov qword [rbp - 0x58], 1	       361	update-ref.c	FUNCTION_21
0x40010cc	      0xbe00000000	                              mov esi, 0	       372	update-ref.c	FUNCTION_21	CALL_15
0x40010d1	      0xbf00000000	                              mov edi, 0	       372	update-ref.c	FUNCTION_21	CALL_15
0x40010d6	      0xe800000000	                          call 0x40010db	       372	update-ref.c	FUNCTION_21	CALL_15
0x40010db	    0x488d8d30feff	                  lea rcx, [rbp - 0x1d0]	       373	update-ref.c	FUNCTION_21	CALL_16
0x40010e2	    0x488b9578fdff	            mov rdx, qword [rbp - 0x288]	       373	update-ref.c	FUNCTION_21	CALL_16
0x40010e9	    0x488bb580fdff	            mov rsi, qword [rbp - 0x280]	       373	update-ref.c	FUNCTION_21	CALL_16
0x40010f0	    0x8b858cfdffff	            mov eax, dword [rbp - 0x274]	       373	update-ref.c	FUNCTION_21	CALL_16
0x40010f6	    0x41b900000000	                              mov r9d, 0	       373	update-ref.c	FUNCTION_21	CALL_16
0x40010fc	    0x41b800000000	                              mov r8d, 0	       373	update-ref.c	FUNCTION_21	CALL_16
0x4001102	            0x89c7	                            mov edi, eax	       373	update-ref.c	FUNCTION_21	CALL_16
0x4001104	      0xe800000000	                          call 0x4001109	       373	update-ref.c	FUNCTION_21	CALL_16
0x4001109	    0x89858cfdffff	            mov dword [rbp - 0x274], eax	       373	update-ref.c	FUNCTION_21	CALL_16
0x400110f	    0x488b05000000	            mov rax, qword [0x04001116] 	       375	update-ref.c	FUNCTION_21	IF_1
0x4001116	          0x4885c0	                           test rax, rax	       375	update-ref.c	FUNCTION_21	IF_1
0x4001119	            0x741d	                            je 0x4001138	       375	update-ref.c	FUNCTION_21	IF_1
0x400111b	    0x488b05000000	            mov rax, qword [0x04001122] 	       375	update-ref.c	FUNCTION_21	IF_1
0x4001122	           0xfb600	                   movzx eax, byte [rax]	       375	update-ref.c	FUNCTION_21	IF_1
0x4001125	            0x84c0	                             test al, al	       375	update-ref.c	FUNCTION_21	IF_1
0x4001127	            0x750f	                           jne 0x4001138	       375	update-ref.c	FUNCTION_21	IF_1
0x4001129	      0xbf00000000	                              mov edi, 0	       376	update-ref.c	FUNCTION_21	CALL_17
0x400112e	      0xb800000000	                              mov eax, 0	       376	update-ref.c	FUNCTION_21	CALL_17
0x4001133	      0xe800000000	                          call 0x4001138	       376	update-ref.c	FUNCTION_21	CALL_17
0x4001138	    0x8b85a8fdffff	            mov eax, dword [rbp - 0x258]	       378	update-ref.c	FUNCTION_21
0x400113e	            0x85c0	                           test eax, eax	       378	update-ref.c	FUNCTION_21
0x4001140	            0x7407	                            je 0x4001149	       378	update-ref.c	FUNCTION_21
0x4001142	      0xb802000000	                              mov eax, 2	       378	update-ref.c	FUNCTION_21
0x4001147	            0xeb05	                           jmp 0x400114e	       378	update-ref.c	FUNCTION_21
0x4001149	      0xb800000000	                              mov eax, 0	       378	update-ref.c	FUNCTION_21
0x400114e	    0x890500000000	            mov dword [0x04001154], eax 	       378	update-ref.c	FUNCTION_21
0x4001154	    0x8b85a0fdffff	            mov eax, dword [rbp - 0x260]	       380	update-ref.c	FUNCTION_21	IF_2
0x400115a	            0x85c0	                           test eax, eax	       380	update-ref.c	FUNCTION_21	IF_2
0x400115c	     0xf8409010000	                            je 0x400126b	       380	update-ref.c	FUNCTION_21	IF_2
0x4001162	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	       381	update-ref.c	FUNCTION_21	IF_2
0x400116d	    0x48c785d8fdff	              mov qword [rbp - 0x228], 0	       381	update-ref.c	FUNCTION_21	IF_2
0x4001178	    0x48c785e0fdff	              mov qword [rbp - 0x220], 0	       381	update-ref.c	FUNCTION_21	IF_2
0x4001183	    0x488d85d0fdff	                  lea rax, [rbp - 0x230]	       384	update-ref.c	FUNCTION_21	IF_2	CALL_18
0x400118a	          0x4889c7	                            mov rdi, rax	       384	update-ref.c	FUNCTION_21	IF_2	CALL_18
0x400118d	      0xe800000000	                          call 0x4001192	       384	update-ref.c	FUNCTION_21	IF_2	CALL_18
0x4001192	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	       384	update-ref.c	FUNCTION_21	IF_2	CALL_18
0x4001199	    0x4883bdc0fdff	              cmp qword [rbp - 0x240], 0	       385	update-ref.c	FUNCTION_21	IF_2	IF_3
0x40011a1	            0x7519	                           jne 0x40011bc	       385	update-ref.c	FUNCTION_21	IF_2	IF_3
0x40011a3	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	       386	update-ref.c	FUNCTION_21	IF_2	CALL_19
0x40011aa	          0x4889c6	                            mov rsi, rax	       386	update-ref.c	FUNCTION_21	IF_2	CALL_19
0x40011ad	      0xbf00000000	                              mov edi, 0	       386	update-ref.c	FUNCTION_21	IF_2	CALL_19
0x40011b2	      0xb800000000	                              mov eax, 0	       386	update-ref.c	FUNCTION_21	IF_2	CALL_19
0x40011b7	      0xe800000000	                          call 0x40011bc	       386	update-ref.c	FUNCTION_21	IF_2	CALL_19
0x40011bc	    0x8b8598fdffff	            mov eax, dword [rbp - 0x268]	       387	update-ref.c	FUNCTION_21	IF_2	IF_4
0x40011c2	            0x85c0	                           test eax, eax	       387	update-ref.c	FUNCTION_21	IF_2	IF_4
0x40011c4	            0x7513	                           jne 0x40011d9	       387	update-ref.c	FUNCTION_21	IF_2	IF_4
0x40011c6	    0x8b859cfdffff	            mov eax, dword [rbp - 0x264]	       387	update-ref.c	FUNCTION_21	IF_2	IF_4
0x40011cc	            0x85c0	                           test eax, eax	       387	update-ref.c	FUNCTION_21	IF_2	IF_4
0x40011ce	            0x7509	                           jne 0x40011d9	       387	update-ref.c	FUNCTION_21	IF_2	IF_4
0x40011d0	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	       387	update-ref.c	FUNCTION_21	IF_2	IF_4
0x40011d7	            0x7e14	                           jle 0x40011ed	       387	update-ref.c	FUNCTION_21	IF_2	IF_4
0x40011d9	    0x488d8530feff	                  lea rax, [rbp - 0x1d0]	       388	update-ref.c	FUNCTION_21	IF_2	CALL_20
0x40011e0	          0x4889c6	                            mov rsi, rax	       388	update-ref.c	FUNCTION_21	IF_2	CALL_20
0x40011e3	      0xbf00000000	                              mov edi, 0	       388	update-ref.c	FUNCTION_21	IF_2	CALL_20
0x40011e8	      0xe800000000	                          call 0x40011ed	       388	update-ref.c	FUNCTION_21	IF_2	CALL_20
0x40011ed	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       389	update-ref.c	FUNCTION_21	IF_2	IF_5
0x40011f3	            0x85c0	                           test eax, eax	       389	update-ref.c	FUNCTION_21	IF_2	IF_5
0x40011f5	            0x7407	                            je 0x40011fe	       389	update-ref.c	FUNCTION_21	IF_2	IF_5
0x40011f7	    0xc60500000000	                mov byte [0x040011fe], 0	       390	update-ref.c	FUNCTION_21	IF_2	IF_5
0x40011fe	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	       391	update-ref.c	FUNCTION_21	IF_2	CALL_21
0x4001205	          0x4889c7	                            mov rdi, rax	       391	update-ref.c	FUNCTION_21	IF_2	CALL_21
0x4001208	      0xe8a7faffff	              call sym.update_refs_stdin	       391	update-ref.c	FUNCTION_21	IF_2	CALL_21
0x400120d	    0x488d95d0fdff	                  lea rdx, [rbp - 0x230]	       392	update-ref.c	FUNCTION_21	IF_2	IF_6	CALL_22
0x4001214	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	       392	update-ref.c	FUNCTION_21	IF_2	IF_6	CALL_22
0x400121b	          0x4889d6	                            mov rsi, rdx	       392	update-ref.c	FUNCTION_21	IF_2	IF_6	CALL_22
0x400121e	          0x4889c7	                            mov rdi, rax	       392	update-ref.c	FUNCTION_21	IF_2	IF_6	CALL_22
0x4001221	      0xe800000000	                          call 0x4001226	       392	update-ref.c	FUNCTION_21	IF_2	IF_6	CALL_22
0x4001226	            0x85c0	                           test eax, eax	       392	update-ref.c	FUNCTION_21	IF_2	IF_6	CALL_22
0x4001228	            0x7419	                            je 0x4001243	       392	update-ref.c	FUNCTION_21	IF_2	IF_6	CALL_22
0x400122a	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	       393	update-ref.c	FUNCTION_21	IF_2	CALL_23
0x4001231	          0x4889c6	                            mov rsi, rax	       393	update-ref.c	FUNCTION_21	IF_2	CALL_23
0x4001234	      0xbf00000000	                              mov edi, 0	       393	update-ref.c	FUNCTION_21	IF_2	CALL_23
0x4001239	      0xb800000000	                              mov eax, 0	       393	update-ref.c	FUNCTION_21	IF_2	CALL_23
0x400123e	      0xe800000000	                          call 0x4001243	       393	update-ref.c	FUNCTION_21	IF_2	CALL_23
0x4001243	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	       394	update-ref.c	FUNCTION_21	IF_2	CALL_24
0x400124a	          0x4889c7	                            mov rdi, rax	       394	update-ref.c	FUNCTION_21	IF_2	CALL_24
0x400124d	      0xe800000000	                          call 0x4001252	       394	update-ref.c	FUNCTION_21	IF_2	CALL_24
0x4001252	    0x488d85d0fdff	                  lea rax, [rbp - 0x230]	       395	update-ref.c	FUNCTION_21	IF_2	CALL_25
0x4001259	          0x4889c7	                            mov rdi, rax	       395	update-ref.c	FUNCTION_21	IF_2	CALL_25
0x400125c	      0xe800000000	                          call 0x4001261	       395	update-ref.c	FUNCTION_21	IF_2	CALL_25
0x4001261	      0xb800000000	                              mov eax, 0	       396	update-ref.c	FUNCTION_21	IF_2
0x4001266	      0xe91b020000	                           jmp 0x4001486	       396	update-ref.c	FUNCTION_21	IF_2
0x400126b	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       399	update-ref.c	FUNCTION_21	IF_7
0x4001271	            0x85c0	                           test eax, eax	       399	update-ref.c	FUNCTION_21	IF_7
0x4001273	            0x7414	                            je 0x4001289	       399	update-ref.c	FUNCTION_21	IF_7
0x4001275	    0x488d8530feff	                  lea rax, [rbp - 0x1d0]	       400	update-ref.c	FUNCTION_21	CALL_26
0x400127c	          0x4889c6	                            mov rsi, rax	       400	update-ref.c	FUNCTION_21	CALL_26
0x400127f	      0xbf00000000	                              mov edi, 0	       400	update-ref.c	FUNCTION_21	CALL_26
0x4001284	      0xe800000000	                          call 0x4001289	       400	update-ref.c	FUNCTION_21	CALL_26
0x4001289	    0x8b8598fdffff	            mov eax, dword [rbp - 0x268]	       402	update-ref.c	FUNCTION_21	IF_8
0x400128f	            0x85c0	                           test eax, eax	       402	update-ref.c	FUNCTION_21	IF_8
0x4001291	            0x744e	                            je 0x40012e1	       402	update-ref.c	FUNCTION_21	IF_8
0x4001293	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	       403	update-ref.c	FUNCTION_21	IF_8	IF_9
0x400129a	            0x7e09	                           jle 0x40012a5	       403	update-ref.c	FUNCTION_21	IF_8	IF_9
0x400129c	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 2	       403	update-ref.c	FUNCTION_21	IF_8	IF_9
0x40012a3	            0x7e14	                           jle 0x40012b9	       403	update-ref.c	FUNCTION_21	IF_8	IF_9
0x40012a5	    0x488d8530feff	                  lea rax, [rbp - 0x1d0]	       404	update-ref.c	FUNCTION_21	IF_8	CALL_27
0x40012ac	          0x4889c6	                            mov rsi, rax	       404	update-ref.c	FUNCTION_21	IF_8	CALL_27
0x40012af	      0xbf00000000	                              mov edi, 0	       404	update-ref.c	FUNCTION_21	IF_8	CALL_27
0x40012b4	      0xe800000000	                          call 0x40012b9	       404	update-ref.c	FUNCTION_21	IF_8	CALL_27
0x40012b9	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       405	update-ref.c	FUNCTION_21	IF_8
0x40012c0	          0x488b00	                    mov rax, qword [rax]	       405	update-ref.c	FUNCTION_21	IF_8
0x40012c3	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	       405	update-ref.c	FUNCTION_21	IF_8
0x40012ca	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       406	update-ref.c	FUNCTION_21	IF_8
0x40012d1	        0x488b4008	                mov rax, qword [rax + 8]	       406	update-ref.c	FUNCTION_21	IF_8
0x40012d5	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	       406	update-ref.c	FUNCTION_21	IF_8
0x40012dc	      0xe991000000	                           jmp 0x4001372	       406	update-ref.c	FUNCTION_21	IF_8
0x40012e1	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 1	       409	update-ref.c	FUNCTION_21	ELSE_1	IF_10
0x40012e8	            0x7e09	                           jle 0x40012f3	       409	update-ref.c	FUNCTION_21	ELSE_1	IF_10
0x40012ea	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 3	       409	update-ref.c	FUNCTION_21	ELSE_1	IF_10
0x40012f1	            0x7e14	                           jle 0x4001307	       409	update-ref.c	FUNCTION_21	ELSE_1	IF_10
0x40012f3	    0x488d8530feff	                  lea rax, [rbp - 0x1d0]	       410	update-ref.c	FUNCTION_21	ELSE_1	CALL_28
0x40012fa	          0x4889c6	                            mov rsi, rax	       410	update-ref.c	FUNCTION_21	ELSE_1	CALL_28
0x40012fd	      0xbf00000000	                              mov edi, 0	       410	update-ref.c	FUNCTION_21	ELSE_1	CALL_28
0x4001302	      0xe800000000	                          call 0x4001307	       410	update-ref.c	FUNCTION_21	ELSE_1	CALL_28
0x4001307	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       411	update-ref.c	FUNCTION_21	ELSE_1
0x400130e	          0x488b00	                    mov rax, qword [rax]	       411	update-ref.c	FUNCTION_21	ELSE_1
0x4001311	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	       411	update-ref.c	FUNCTION_21	ELSE_1
0x4001318	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       412	update-ref.c	FUNCTION_21	ELSE_1
0x400131f	        0x488b4008	                mov rax, qword [rax + 8]	       412	update-ref.c	FUNCTION_21	ELSE_1
0x4001323	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	       412	update-ref.c	FUNCTION_21	ELSE_1
0x400132a	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       413	update-ref.c	FUNCTION_21	ELSE_1
0x4001331	        0x488b4010	            mov rax, qword [rax + 0x10] 	       413	update-ref.c	FUNCTION_21	ELSE_1
0x4001335	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	       413	update-ref.c	FUNCTION_21	ELSE_1
0x400133c	    0x488d95f0fdff	                  lea rdx, [rbp - 0x210]	       414	update-ref.c	FUNCTION_21	ELSE_1	IF_11	CALL_29
0x4001343	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	       414	update-ref.c	FUNCTION_21	ELSE_1	IF_11	CALL_29
0x400134a	          0x4889d6	                            mov rsi, rdx	       414	update-ref.c	FUNCTION_21	ELSE_1	IF_11	CALL_29
0x400134d	          0x4889c7	                            mov rdi, rax	       414	update-ref.c	FUNCTION_21	ELSE_1	IF_11	CALL_29
0x4001350	      0xe800000000	                          call 0x4001355	       414	update-ref.c	FUNCTION_21	ELSE_1	IF_11	CALL_29
0x4001355	            0x85c0	                           test eax, eax	       414	update-ref.c	FUNCTION_21	ELSE_1	IF_11	CALL_29
0x4001357	            0x7419	                            je 0x4001372	       414	update-ref.c	FUNCTION_21	ELSE_1	IF_11	CALL_29
0x4001359	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	       415	update-ref.c	FUNCTION_21	ELSE_1	CALL_30
0x4001360	          0x4889c6	                            mov rsi, rax	       415	update-ref.c	FUNCTION_21	ELSE_1	CALL_30
0x4001363	      0xbf00000000	                              mov edi, 0	       415	update-ref.c	FUNCTION_21	ELSE_1	CALL_30
0x4001368	      0xb800000000	                              mov eax, 0	       415	update-ref.c	FUNCTION_21	ELSE_1	CALL_30
0x400136d	      0xe800000000	                          call 0x4001372	       415	update-ref.c	FUNCTION_21	ELSE_1	CALL_30
0x4001372	    0x4883bdb8fdff	              cmp qword [rbp - 0x248], 0	       418	update-ref.c	FUNCTION_21	IF_12
0x400137a	            0x7455	                            je 0x40013d1	       418	update-ref.c	FUNCTION_21	IF_12
0x400137c	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       419	update-ref.c	FUNCTION_21	IF_12	IF_13
0x4001383	           0xfb600	                   movzx eax, byte [rax]	       419	update-ref.c	FUNCTION_21	IF_12	IF_13
0x4001386	            0x84c0	                             test al, al	       419	update-ref.c	FUNCTION_21	IF_12	IF_13
0x4001388	            0x7511	                           jne 0x400139b	       419	update-ref.c	FUNCTION_21	IF_12	IF_13
0x400138a	    0x488d8510feff	                  lea rax, [rbp - 0x1f0]	       424	update-ref.c	FUNCTION_21	IF_12	CALL_31
0x4001391	          0x4889c7	                            mov rdi, rax	       424	update-ref.c	FUNCTION_21	IF_12	CALL_31
0x4001394	      0xe8d1edffff	                         call sym.oidclr	       424	update-ref.c	FUNCTION_21	IF_12	CALL_31
0x4001399	            0xeb36	                           jmp 0x40013d1	       424	update-ref.c	FUNCTION_21	IF_12	CALL_31
0x400139b	    0x488d9510feff	                  lea rdx, [rbp - 0x1f0]	       425	update-ref.c	FUNCTION_21	IF_12	ELSE_2	IF_14	CALL_32
0x40013a2	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       425	update-ref.c	FUNCTION_21	IF_12	ELSE_2	IF_14	CALL_32
0x40013a9	          0x4889d6	                            mov rsi, rdx	       425	update-ref.c	FUNCTION_21	IF_12	ELSE_2	IF_14	CALL_32
0x40013ac	          0x4889c7	                            mov rdi, rax	       425	update-ref.c	FUNCTION_21	IF_12	ELSE_2	IF_14	CALL_32
0x40013af	      0xe800000000	                          call 0x40013b4	       425	update-ref.c	FUNCTION_21	IF_12	ELSE_2	IF_14	CALL_32
0x40013b4	            0x85c0	                           test eax, eax	       425	update-ref.c	FUNCTION_21	IF_12	ELSE_2	IF_14	CALL_32
0x40013b6	            0x7419	                            je 0x40013d1	       425	update-ref.c	FUNCTION_21	IF_12	ELSE_2	IF_14	CALL_32
0x40013b8	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       426	update-ref.c	FUNCTION_21	IF_12	ELSE_2	IF_14
0x40013bf	          0x4889c6	                            mov rsi, rax	       426	update-ref.c	FUNCTION_21	IF_12	ELSE_2	IF_14
0x40013c2	      0xbf00000000	                              mov edi, 0	       426	update-ref.c	FUNCTION_21	IF_12	ELSE_2	IF_14
0x40013c7	      0xb800000000	                              mov eax, 0	       426	update-ref.c	FUNCTION_21	IF_12	ELSE_2	IF_14
0x40013cc	      0xe800000000	                          call 0x40013d1	       426	update-ref.c	FUNCTION_21	IF_12	ELSE_2	IF_14
0x40013d1	    0x8b859cfdffff	            mov eax, dword [rbp - 0x264]	       429	update-ref.c	FUNCTION_21	IF_15
0x40013d7	            0x85c0	                           test eax, eax	       429	update-ref.c	FUNCTION_21	IF_15
0x40013d9	            0x740a	                            je 0x40013e5	       429	update-ref.c	FUNCTION_21	IF_15
0x40013db	    0xc785acfdffff	              mov dword [rbp - 0x254], 1	       430	update-ref.c	FUNCTION_21	IF_15
0x40013e5	    0x8b8598fdffff	            mov eax, dword [rbp - 0x268]	       431	update-ref.c	FUNCTION_21	IF_16
0x40013eb	            0x85c0	                           test eax, eax	       431	update-ref.c	FUNCTION_21	IF_16
0x40013ed	            0x744b	                            je 0x400143a	       431	update-ref.c	FUNCTION_21	IF_16
0x40013ef	    0x4883bdb8fdff	              cmp qword [rbp - 0x248], 0	       436	update-ref.c	FUNCTION_21	IF_16	CALL_34
0x40013f7	            0x741c	                            je 0x4001415	       436	update-ref.c	FUNCTION_21	IF_16	CALL_34
0x40013f9	    0x488d8510feff	                  lea rax, [rbp - 0x1f0]	       437	update-ref.c	FUNCTION_21	IF_16	CALL_35
0x4001400	          0x4889c7	                            mov rdi, rax	       437	update-ref.c	FUNCTION_21	IF_16	CALL_35
0x4001403	      0xe83bedffff	                    call sym.is_null_oid	       437	update-ref.c	FUNCTION_21	IF_16	CALL_35
0x4001408	            0x85c0	                           test eax, eax	       437	update-ref.c	FUNCTION_21	IF_16	CALL_35
0x400140a	            0x7509	                           jne 0x4001415	       437	update-ref.c	FUNCTION_21	IF_16	CALL_35
0x400140c	    0x488d8510feff	                  lea rax, [rbp - 0x1f0]	       436	update-ref.c	FUNCTION_21	IF_16	CALL_34
0x4001413	            0xeb05	                           jmp 0x400141a	       436	update-ref.c	FUNCTION_21	IF_16	CALL_34
0x4001415	      0xb800000000	                              mov eax, 0	       436	update-ref.c	FUNCTION_21	IF_16	CALL_34
0x400141a	    0x488b3d000000	            mov rdi, qword [0x04001421] 	       436	update-ref.c	FUNCTION_21	IF_16	CALL_34
0x4001421	    0x8b95acfdffff	            mov edx, dword [rbp - 0x254]	       436	update-ref.c	FUNCTION_21	IF_16	CALL_34
0x4001427	    0x488bb5b0fdff	            mov rsi, qword [rbp - 0x250]	       436	update-ref.c	FUNCTION_21	IF_16	CALL_34
0x400142e	            0x89d1	                            mov ecx, edx	       436	update-ref.c	FUNCTION_21	IF_16	CALL_34
0x4001430	          0x4889c2	                            mov rdx, rax	       436	update-ref.c	FUNCTION_21	IF_16	CALL_34
0x4001433	      0xe800000000	                          call 0x4001438	       436	update-ref.c	FUNCTION_21	IF_16	CALL_34
0x4001438	            0xeb4c	                           jmp 0x4001486	       436	update-ref.c	FUNCTION_21	IF_16	CALL_34
0x400143a	    0x8b0500000000	            mov eax, dword [0x04001440] 	       440	update-ref.c	FUNCTION_21	ELSE_3	CALL_36
0x4001440	     0xb85acfdffff	             or eax, dword [rbp - 0x254]	       440	update-ref.c	FUNCTION_21	ELSE_3	CALL_36
0x4001446	            0x89c1	                            mov ecx, eax	       440	update-ref.c	FUNCTION_21	ELSE_3	CALL_36
0x4001448	    0x4883bdb8fdff	              cmp qword [rbp - 0x248], 0	       440	update-ref.c	FUNCTION_21	ELSE_3	CALL_36
0x4001450	            0x7409	                            je 0x400145b	       440	update-ref.c	FUNCTION_21	ELSE_3	CALL_36
0x4001452	    0x488d8510feff	                  lea rax, [rbp - 0x1f0]	       440	update-ref.c	FUNCTION_21	ELSE_3	CALL_36
0x4001459	            0xeb05	                           jmp 0x4001460	       440	update-ref.c	FUNCTION_21	ELSE_3	CALL_36
0x400145b	      0xb800000000	                              mov eax, 0	       440	update-ref.c	FUNCTION_21	ELSE_3	CALL_36
0x4001460	    0x488b3d000000	            mov rdi, qword [0x04001467] 	       440	update-ref.c	FUNCTION_21	ELSE_3	CALL_36
0x4001467	    0x488d95f0fdff	                  lea rdx, [rbp - 0x210]	       440	update-ref.c	FUNCTION_21	ELSE_3	CALL_36
0x400146e	    0x488bb5b0fdff	            mov rsi, qword [rbp - 0x250]	       440	update-ref.c	FUNCTION_21	ELSE_3	CALL_36
0x4001475	    0x41b901000000	                              mov r9d, 1	       440	update-ref.c	FUNCTION_21	ELSE_3	CALL_36
0x400147b	          0x4189c8	                            mov r8d, ecx	       440	update-ref.c	FUNCTION_21	ELSE_3	CALL_36
0x400147e	          0x4889c1	                            mov rcx, rax	       440	update-ref.c	FUNCTION_21	ELSE_3	CALL_36
0x4001481	      0xe800000000	                          call 0x4001486	       440	update-ref.c	FUNCTION_21	ELSE_3	CALL_36
0x4001486	        0x488b4df8	                mov rcx, qword [rbp - 8]	       443	update-ref.c	FUNCTION_21
0x400148a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       443	update-ref.c	FUNCTION_21
0x4001493	            0x7405	                            je 0x400149a	       443	update-ref.c	FUNCTION_21
0x4001495	      0xe800000000	                          call 0x400149a	       443	update-ref.c	FUNCTION_21
0x400149a	              0xc9	                                   leave	       443	update-ref.c	FUNCTION_21
0x400149b	              0xc3	                                     ret	       443	update-ref.c	FUNCTION_21
is_null_oid	FOR,0:ELSE,0:CALL,1:DO,0:IF,0:WHILE,0:SWITCH,0:functions,0	13
0x4000143	              0x55	                                push rbp	       989	cache.h	FUNCTION_32
0x4000144	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_32
0x4000147	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_32
0x400014b	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_32
0x400014f	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_32	CALL_1
0x4000153	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_32	CALL_1
0x4000158	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_32	CALL_1
0x400015b	      0xe8b9ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_32	CALL_1
0x4000160	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_32	CALL_1
0x4000162	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_32	CALL_1
0x4000165	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_32	CALL_1
0x4000168	              0xc9	                                   leave	       991	cache.h	FUNCTION_32
0x4000169	              0xc3	                                     ret	       991	cache.h	FUNCTION_32
hashcmp	FOR,0:ELSE,0:CALL,1:DO,0:IF,0:WHILE,0:SWITCH,0:functions,0	13
0x4000119	              0x55	                                push rbp	       974	cache.h	FUNCTION_29
0x400011a	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_29
0x400011d	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_29
0x4000121	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_29
0x4000125	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_29
0x4000129	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_29	CALL_1
0x400012d	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_29	CALL_1
0x4000131	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_29	CALL_1
0x4000136	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_29	CALL_1
0x4000139	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_29	CALL_1
0x400013c	      0xe800000000	                          call 0x4000141	       975	cache.h	FUNCTION_29	CALL_1
0x4000141	              0xc9	                                   leave	       976	cache.h	FUNCTION_29
0x4000142	              0xc3	                                     ret	       976	cache.h	FUNCTION_29
strbuf_addstr	FOR,0:ELSE,0:CALL,2:DO,0:IF,0:WHILE,0:SWITCH,0:functions,0	17
0x40000e4	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_5
0x40000e5	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_5
0x40000e8	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_5
0x40000ec	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_5
0x40000f0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_5
0x40000f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x40000f8	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x40000fb	      0xe800000000	                          call 0x4000100	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000100	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000103	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000107	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_5	CALL_2
0x400010b	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_5	CALL_2
0x400010e	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000111	      0xe800000000	                          call 0x4000116	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000116	              0x90	                                     nop	       280	strbuf.h	FUNCTION_5
0x4000117	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_5
0x4000118	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_5
parse_cmd_delete	FOR,0:ELSE,1:CALL,10:DO,0:IF,5:WHILE,0:SWITCH,0:functions,0	95
0x4000976	              0x55	                                push rbp	       249	update-ref.c	FUNCTION_17
0x4000977	          0x4889e5	                            mov rbp, rsp	       249	update-ref.c	FUNCTION_17
0x400097a	        0x4883ec70	                           sub rsp, 0x70	       249	update-ref.c	FUNCTION_17
0x400097e	        0x48897da8	             mov qword [rbp - 0x58], rdi	       249	update-ref.c	FUNCTION_17
0x4000982	        0x488975a0	             mov qword [rbp - 0x60], rsi	       249	update-ref.c	FUNCTION_17
0x4000986	        0x48895598	             mov qword [rbp - 0x68], rdx	       249	update-ref.c	FUNCTION_17
0x400098a	    0x64488b042528	                mov rax, qword fs:[0x28]	       249	update-ref.c	FUNCTION_17
0x4000993	        0x488945f8	                mov qword [rbp - 8], rax	       249	update-ref.c	FUNCTION_17
0x4000997	            0x31c0	                            xor eax, eax	       249	update-ref.c	FUNCTION_17
0x4000999	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       250	update-ref.c	FUNCTION_17
0x40009a1	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       250	update-ref.c	FUNCTION_17
0x40009a9	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       250	update-ref.c	FUNCTION_17
0x40009b1	        0x488d5598	                   lea rdx, [rbp - 0x68]	       255	update-ref.c	FUNCTION_17	CALL_1
0x40009b5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       255	update-ref.c	FUNCTION_17	CALL_1
0x40009b9	          0x4889d6	                            mov rsi, rdx	       255	update-ref.c	FUNCTION_17	CALL_1
0x40009bc	          0x4889c7	                            mov rdi, rax	       255	update-ref.c	FUNCTION_17	CALL_1
0x40009bf	      0xe8aff8ffff	                  call sym.parse_refname	       255	update-ref.c	FUNCTION_17	CALL_1
0x40009c4	        0x488945b8	             mov qword [rbp - 0x48], rax	       255	update-ref.c	FUNCTION_17	CALL_1
0x40009c8	      0x48837db800	               cmp qword [rbp - 0x48], 0	       256	update-ref.c	FUNCTION_17	IF_1
0x40009cd	            0x750f	                           jne 0x40009de	       256	update-ref.c	FUNCTION_17	IF_1
0x40009cf	      0xbf00000000	                              mov edi, 0	       257	update-ref.c	FUNCTION_17	CALL_2
0x40009d4	      0xb800000000	                              mov eax, 0	       257	update-ref.c	FUNCTION_17	CALL_2
0x40009d9	      0xe800000000	                          call 0x40009de	       257	update-ref.c	FUNCTION_17	CALL_2
0x40009de	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       259	update-ref.c	FUNCTION_17	IF_2	CALL_3
0x40009e2	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       259	update-ref.c	FUNCTION_17	IF_2	CALL_3
0x40009e6	        0x488d7598	                   lea rsi, [rbp - 0x68]	       259	update-ref.c	FUNCTION_17	IF_2	CALL_3
0x40009ea	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       259	update-ref.c	FUNCTION_17	IF_2	CALL_3
0x40009ee	    0x41b901000000	                              mov r9d, 1	       259	update-ref.c	FUNCTION_17	IF_2	CALL_3
0x40009f4	          0x4989c8	                             mov r8, rcx	       259	update-ref.c	FUNCTION_17	IF_2	CALL_3
0x40009f7	      0xb900000000	                              mov ecx, 0	       259	update-ref.c	FUNCTION_17	IF_2	CALL_3
0x40009fc	          0x4889c7	                            mov rdi, rax	       259	update-ref.c	FUNCTION_17	IF_2	CALL_3
0x40009ff	      0xe86cf9ffff	                 call sym.parse_next_oid	       259	update-ref.c	FUNCTION_17	IF_2	CALL_3
0x4000a04	            0x85c0	                           test eax, eax	       259	update-ref.c	FUNCTION_17	IF_2	CALL_3
0x4000a06	            0x7409	                            je 0x4000a11	       259	update-ref.c	FUNCTION_17	IF_2	CALL_3
0x4000a08	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       261	update-ref.c	FUNCTION_17	IF_2
0x4000a0f	            0xeb2d	                           jmp 0x4000a3e	       261	update-ref.c	FUNCTION_17	IF_2
0x4000a11	        0x488d45e0	                   lea rax, [rbp - 0x20]	       263	update-ref.c	FUNCTION_17	ELSE_1	IF_3	CALL_4
0x4000a15	          0x4889c7	                            mov rdi, rax	       263	update-ref.c	FUNCTION_17	ELSE_1	IF_3	CALL_4
0x4000a18	      0xe826f7ffff	                    call sym.is_null_oid	       263	update-ref.c	FUNCTION_17	ELSE_1	IF_3	CALL_4
0x4000a1d	            0x85c0	                           test eax, eax	       263	update-ref.c	FUNCTION_17	ELSE_1	IF_3	CALL_4
0x4000a1f	            0x7416	                            je 0x4000a37	       263	update-ref.c	FUNCTION_17	ELSE_1	IF_3	CALL_4
0x4000a21	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       264	update-ref.c	FUNCTION_17	ELSE_1	CALL_5
0x4000a25	          0x4889c6	                            mov rsi, rax	       264	update-ref.c	FUNCTION_17	ELSE_1	CALL_5
0x4000a28	      0xbf00000000	                              mov edi, 0	       264	update-ref.c	FUNCTION_17	ELSE_1	CALL_5
0x4000a2d	      0xb800000000	                              mov eax, 0	       264	update-ref.c	FUNCTION_17	ELSE_1	CALL_5
0x4000a32	      0xe800000000	                          call 0x4000a37	       264	update-ref.c	FUNCTION_17	ELSE_1	CALL_5
0x4000a37	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	       265	update-ref.c	FUNCTION_17	ELSE_1
0x4000a3e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       268	update-ref.c	FUNCTION_17	IF_4
0x4000a42	           0xfb610	                   movzx edx, byte [rax]	       268	update-ref.c	FUNCTION_17	IF_4
0x4000a45	     0xfb605000000	           movzx eax, byte [0x04000a4c] 	       268	update-ref.c	FUNCTION_17	IF_4
0x4000a4c	            0x38c2	                              cmp dl, al	       268	update-ref.c	FUNCTION_17	IF_4
0x4000a4e	            0x741a	                            je 0x4000a6a	       268	update-ref.c	FUNCTION_17	IF_4
0x4000a50	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       269	update-ref.c	FUNCTION_17	CALL_6
0x4000a54	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       269	update-ref.c	FUNCTION_17	CALL_6
0x4000a58	          0x4889c6	                            mov rsi, rax	       269	update-ref.c	FUNCTION_17	CALL_6
0x4000a5b	      0xbf00000000	                              mov edi, 0	       269	update-ref.c	FUNCTION_17	CALL_6
0x4000a60	      0xb800000000	                              mov eax, 0	       269	update-ref.c	FUNCTION_17	CALL_6
0x4000a65	      0xe800000000	                          call 0x4000a6a	       269	update-ref.c	FUNCTION_17	CALL_6
0x4000a6a	    0x488b15000000	            mov rdx, qword [0x04000a71] 	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000a71	    0x8b0500000000	            mov eax, dword [0x04000a77] 	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000a77	          0x4189c2	                           mov r10d, eax	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000a7a	        0x837db400	               cmp dword [rbp - 0x4c], 0	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000a7e	            0x7406	                            je 0x4000a86	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000a80	        0x488d45e0	                   lea rax, [rbp - 0x20]	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000a84	            0xeb05	                           jmp 0x4000a8b	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000a86	      0xb800000000	                              mov eax, 0	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000a8b	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000a8f	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000a93	        0x488b7da8	             mov rdi, qword [rbp - 0x58]	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000a97	          0x4989c9	                             mov r9, rcx	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000a9a	          0x4989d0	                             mov r8, rdx	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000a9d	          0x4489d1	                           mov ecx, r10d	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000aa0	          0x4889c2	                            mov rdx, rax	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000aa3	      0xe800000000	                          call 0x4000aa8	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000aa8	            0x85c0	                           test eax, eax	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000aaa	            0x7416	                            je 0x4000ac2	       271	update-ref.c	FUNCTION_17	IF_5	CALL_7
0x4000aac	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       274	update-ref.c	FUNCTION_17	CALL_8
0x4000ab0	          0x4889c6	                            mov rsi, rax	       274	update-ref.c	FUNCTION_17	CALL_8
0x4000ab3	      0xbf00000000	                              mov edi, 0	       274	update-ref.c	FUNCTION_17	CALL_8
0x4000ab8	      0xb800000000	                              mov eax, 0	       274	update-ref.c	FUNCTION_17	CALL_8
0x4000abd	      0xe800000000	                          call 0x4000ac2	       274	update-ref.c	FUNCTION_17	CALL_8
0x4000ac2	    0xc70500000000	               mov dword [0x04000acc], 0	       276	update-ref.c	FUNCTION_17
0x4000acc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       277	update-ref.c	FUNCTION_17	CALL_9
0x4000ad0	          0x4889c7	                            mov rdi, rax	       277	update-ref.c	FUNCTION_17	CALL_9
0x4000ad3	      0xe800000000	                          call 0x4000ad8	       277	update-ref.c	FUNCTION_17	CALL_9
0x4000ad8	        0x488d45c0	                   lea rax, [rbp - 0x40]	       278	update-ref.c	FUNCTION_17	CALL_10
0x4000adc	          0x4889c7	                            mov rdi, rax	       278	update-ref.c	FUNCTION_17	CALL_10
0x4000adf	      0xe800000000	                          call 0x4000ae4	       278	update-ref.c	FUNCTION_17	CALL_10
0x4000ae4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       280	update-ref.c	FUNCTION_17
0x4000ae8	        0x488b4df8	                mov rcx, qword [rbp - 8]	       281	update-ref.c	FUNCTION_17
0x4000aec	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       281	update-ref.c	FUNCTION_17
0x4000af5	            0x7405	                            je 0x4000afc	       281	update-ref.c	FUNCTION_17
0x4000af7	      0xe800000000	                          call 0x4000afc	       281	update-ref.c	FUNCTION_17
0x4000afc	              0xc9	                                   leave	       281	update-ref.c	FUNCTION_17
0x4000afd	              0xc3	                                     ret	       281	update-ref.c	FUNCTION_17
parse_cmd_update	FOR,0:ELSE,0:CALL,10:DO,0:IF,4:WHILE,0:SWITCH,0:functions,0	106
0x400062a	              0x55	                                push rbp	       182	update-ref.c	FUNCTION_15
0x400062b	          0x4889e5	                            mov rbp, rsp	       182	update-ref.c	FUNCTION_15
0x400062e	    0x4881ec900000	                           sub rsp, 0x90	       182	update-ref.c	FUNCTION_15
0x4000635	        0x48897d88	             mov qword [rbp - 0x78], rdi	       182	update-ref.c	FUNCTION_15
0x4000639	        0x48897580	             mov qword [rbp - 0x80], rsi	       182	update-ref.c	FUNCTION_15
0x400063d	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       182	update-ref.c	FUNCTION_15
0x4000644	    0x64488b042528	                mov rax, qword fs:[0x28]	       182	update-ref.c	FUNCTION_15
0x400064d	        0x488945f8	                mov qword [rbp - 8], rax	       182	update-ref.c	FUNCTION_15
0x4000651	            0x31c0	                            xor eax, eax	       182	update-ref.c	FUNCTION_15
0x4000653	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       183	update-ref.c	FUNCTION_15
0x400065b	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       183	update-ref.c	FUNCTION_15
0x4000663	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       183	update-ref.c	FUNCTION_15
0x400066b	    0x488d9578ffff	                   lea rdx, [rbp - 0x88]	       188	update-ref.c	FUNCTION_15	CALL_1
0x4000672	        0x488b4580	             mov rax, qword [rbp - 0x80]	       188	update-ref.c	FUNCTION_15	CALL_1
0x4000676	          0x4889d6	                            mov rsi, rdx	       188	update-ref.c	FUNCTION_15	CALL_1
0x4000679	          0x4889c7	                            mov rdi, rax	       188	update-ref.c	FUNCTION_15	CALL_1
0x400067c	      0xe8f2fbffff	                  call sym.parse_refname	       188	update-ref.c	FUNCTION_15	CALL_1
0x4000681	        0x48894598	             mov qword [rbp - 0x68], rax	       188	update-ref.c	FUNCTION_15	CALL_1
0x4000685	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       189	update-ref.c	FUNCTION_15	IF_1
0x400068a	            0x750f	                           jne 0x400069b	       189	update-ref.c	FUNCTION_15	IF_1
0x400068c	      0xbf00000000	                              mov edi, 0	       190	update-ref.c	FUNCTION_15	CALL_2
0x4000691	      0xb800000000	                              mov eax, 0	       190	update-ref.c	FUNCTION_15	CALL_2
0x4000696	      0xe800000000	                          call 0x400069b	       190	update-ref.c	FUNCTION_15	CALL_2
0x400069b	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       192	update-ref.c	FUNCTION_15	IF_2	CALL_3
0x400069f	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       192	update-ref.c	FUNCTION_15	IF_2	CALL_3
0x40006a3	    0x488db578ffff	                   lea rsi, [rbp - 0x88]	       192	update-ref.c	FUNCTION_15	IF_2	CALL_3
0x40006aa	        0x488b4580	             mov rax, qword [rbp - 0x80]	       192	update-ref.c	FUNCTION_15	IF_2	CALL_3
0x40006ae	    0x41b902000000	                              mov r9d, 2	       192	update-ref.c	FUNCTION_15	IF_2	CALL_3
0x40006b4	          0x4989c8	                             mov r8, rcx	       192	update-ref.c	FUNCTION_15	IF_2	CALL_3
0x40006b7	      0xb900000000	                              mov ecx, 0	       192	update-ref.c	FUNCTION_15	IF_2	CALL_3
0x40006bc	          0x4889c7	                            mov rdi, rax	       192	update-ref.c	FUNCTION_15	IF_2	CALL_3
0x40006bf	      0xe8acfcffff	                 call sym.parse_next_oid	       192	update-ref.c	FUNCTION_15	IF_2	CALL_3
0x40006c4	            0x85c0	                           test eax, eax	       192	update-ref.c	FUNCTION_15	IF_2	CALL_3
0x40006c6	            0x7416	                            je 0x40006de	       192	update-ref.c	FUNCTION_15	IF_2	CALL_3
0x40006c8	        0x488b4598	             mov rax, qword [rbp - 0x68]	       194	update-ref.c	FUNCTION_15	CALL_4
0x40006cc	          0x4889c6	                            mov rsi, rax	       194	update-ref.c	FUNCTION_15	CALL_4
0x40006cf	      0xbf00000000	                              mov edi, 0	       194	update-ref.c	FUNCTION_15	CALL_4
0x40006d4	      0xb800000000	                              mov eax, 0	       194	update-ref.c	FUNCTION_15	CALL_4
0x40006d9	      0xe800000000	                          call 0x40006de	       194	update-ref.c	FUNCTION_15	CALL_4
0x40006de	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       196	update-ref.c	FUNCTION_15	CALL_5
0x40006e2	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       196	update-ref.c	FUNCTION_15	CALL_5
0x40006e6	    0x488db578ffff	                   lea rsi, [rbp - 0x88]	       196	update-ref.c	FUNCTION_15	CALL_5
0x40006ed	        0x488b4580	             mov rax, qword [rbp - 0x80]	       196	update-ref.c	FUNCTION_15	CALL_5
0x40006f1	    0x41b901000000	                              mov r9d, 1	       196	update-ref.c	FUNCTION_15	CALL_5
0x40006f7	          0x4989c8	                             mov r8, rcx	       196	update-ref.c	FUNCTION_15	CALL_5
0x40006fa	      0xb900000000	                              mov ecx, 0	       196	update-ref.c	FUNCTION_15	CALL_5
0x40006ff	          0x4889c7	                            mov rdi, rax	       196	update-ref.c	FUNCTION_15	CALL_5
0x4000702	      0xe869fcffff	                 call sym.parse_next_oid	       196	update-ref.c	FUNCTION_15	CALL_5
0x4000707	            0x85c0	                           test eax, eax	       196	update-ref.c	FUNCTION_15	CALL_5
0x4000709	           0xf94c0	                                 sete al	       196	update-ref.c	FUNCTION_15	CALL_5
0x400070c	           0xfb6c0	                           movzx eax, al	       196	update-ref.c	FUNCTION_15	CALL_5
0x400070f	          0x894594	             mov dword [rbp - 0x6c], eax	       196	update-ref.c	FUNCTION_15	CALL_5
0x4000712	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       199	update-ref.c	FUNCTION_15	IF_3
0x4000719	           0xfb610	                   movzx edx, byte [rax]	       199	update-ref.c	FUNCTION_15	IF_3
0x400071c	     0xfb605000000	           movzx eax, byte [0x04000723] 	       199	update-ref.c	FUNCTION_15	IF_3
0x4000723	            0x38c2	                              cmp dl, al	       199	update-ref.c	FUNCTION_15	IF_3
0x4000725	            0x741d	                            je 0x4000744	       199	update-ref.c	FUNCTION_15	IF_3
0x4000727	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       200	update-ref.c	FUNCTION_15	CALL_6
0x400072e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       200	update-ref.c	FUNCTION_15	CALL_6
0x4000732	          0x4889c6	                            mov rsi, rax	       200	update-ref.c	FUNCTION_15	CALL_6
0x4000735	      0xbf00000000	                              mov edi, 0	       200	update-ref.c	FUNCTION_15	CALL_6
0x400073a	      0xb800000000	                              mov eax, 0	       200	update-ref.c	FUNCTION_15	CALL_6
0x400073f	      0xe800000000	                          call 0x4000744	       200	update-ref.c	FUNCTION_15	CALL_6
0x4000744	    0x4c8b05000000	              mov r8, qword [0x0400074b]	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x400074b	    0x8b0500000000	            mov eax, dword [0x04000751] 	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x4000751	            0x89c2	                            mov edx, eax	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x4000753	    0x8b0500000000	            mov eax, dword [0x04000759] 	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x4000759	             0x9c2	                             or edx, eax	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x400075b	          0x4189d2	                           mov r10d, edx	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x400075e	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x4000762	            0x7406	                            je 0x400076a	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x4000764	        0x488d45e0	                   lea rax, [rbp - 0x20]	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x4000768	            0xeb05	                           jmp 0x400076f	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x400076a	      0xb800000000	                              mov eax, 0	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x400076f	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x4000773	        0x488b7598	             mov rsi, qword [rbp - 0x68]	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x4000777	        0x488b7d88	             mov rdi, qword [rbp - 0x78]	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x400077b	        0x4883ec08	                              sub rsp, 8	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x400077f	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x4000783	              0x51	                                push rcx	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x4000784	          0x4d89c1	                              mov r9, r8	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x4000787	          0x4589d0	                           mov r8d, r10d	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x400078a	          0x4889c1	                            mov rcx, rax	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x400078d	      0xe800000000	                          call 0x4000792	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x4000792	        0x4883c410	                           add rsp, 0x10	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x4000796	            0x85c0	                           test eax, eax	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x4000798	            0x7416	                            je 0x40007b0	       202	update-ref.c	FUNCTION_15	IF_4	CALL_7
0x400079a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       206	update-ref.c	FUNCTION_15	CALL_8
0x400079e	          0x4889c6	                            mov rsi, rax	       206	update-ref.c	FUNCTION_15	CALL_8
0x40007a1	      0xbf00000000	                              mov edi, 0	       206	update-ref.c	FUNCTION_15	CALL_8
0x40007a6	      0xb800000000	                              mov eax, 0	       206	update-ref.c	FUNCTION_15	CALL_8
0x40007ab	      0xe800000000	                          call 0x40007b0	       206	update-ref.c	FUNCTION_15	CALL_8
0x40007b0	    0xc70500000000	               mov dword [0x040007ba], 0	       208	update-ref.c	FUNCTION_15
0x40007ba	        0x488b4598	             mov rax, qword [rbp - 0x68]	       209	update-ref.c	FUNCTION_15	CALL_9
0x40007be	          0x4889c7	                            mov rdi, rax	       209	update-ref.c	FUNCTION_15	CALL_9
0x40007c1	      0xe800000000	                          call 0x40007c6	       209	update-ref.c	FUNCTION_15	CALL_9
0x40007c6	        0x488d45a0	                   lea rax, [rbp - 0x60]	       210	update-ref.c	FUNCTION_15	CALL_10
0x40007ca	          0x4889c7	                            mov rdi, rax	       210	update-ref.c	FUNCTION_15	CALL_10
0x40007cd	      0xe800000000	                          call 0x40007d2	       210	update-ref.c	FUNCTION_15	CALL_10
0x40007d2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       212	update-ref.c	FUNCTION_15
0x40007d9	        0x488b4df8	                mov rcx, qword [rbp - 8]	       213	update-ref.c	FUNCTION_15
0x40007dd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       213	update-ref.c	FUNCTION_15
0x40007e6	            0x7405	                            je 0x40007ed	       213	update-ref.c	FUNCTION_15
0x40007e8	      0xe800000000	                          call 0x40007ed	       213	update-ref.c	FUNCTION_15
0x40007ed	              0xc9	                                   leave	       213	update-ref.c	FUNCTION_15
0x40007ee	              0xc3	                                     ret	       213	update-ref.c	FUNCTION_15
parse_cmd_option	FOR,0:ELSE,1:CALL,2:DO,0:IF,1:WHILE,0:SWITCH,0:functions,0	31
0x4000c43	              0x55	                                push rbp	       313	update-ref.c	FUNCTION_19
0x4000c44	          0x4889e5	                            mov rbp, rsp	       313	update-ref.c	FUNCTION_19
0x4000c47	        0x4883ec10	                           sub rsp, 0x10	       313	update-ref.c	FUNCTION_19
0x4000c4b	        0x48897df8	                mov qword [rbp - 8], rdi	       313	update-ref.c	FUNCTION_19
0x4000c4f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       313	update-ref.c	FUNCTION_19
0x4000c53	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       314	update-ref.c	FUNCTION_19	IF_1	CALL_1
0x4000c57	      0xba08000000	                              mov edx, 8	       314	update-ref.c	FUNCTION_19	IF_1	CALL_1
0x4000c5c	      0xbe00000000	                              mov esi, 0	       314	update-ref.c	FUNCTION_19	IF_1	CALL_1
0x4000c61	          0x4889c7	                            mov rdi, rax	       314	update-ref.c	FUNCTION_19	IF_1	CALL_1
0x4000c64	      0xe800000000	                          call 0x4000c69	       314	update-ref.c	FUNCTION_19	IF_1	CALL_1
0x4000c69	            0x85c0	                           test eax, eax	       314	update-ref.c	FUNCTION_19	IF_1	CALL_1
0x4000c6b	            0x752f	                           jne 0x4000c9c	       314	update-ref.c	FUNCTION_19	IF_1	CALL_1
0x4000c6d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       314	update-ref.c	FUNCTION_19	IF_1	CALL_1
0x4000c71	        0x4883c008	                              add rax, 8	       314	update-ref.c	FUNCTION_19	IF_1	CALL_1
0x4000c75	           0xfb610	                   movzx edx, byte [rax]	       314	update-ref.c	FUNCTION_19	IF_1	CALL_1
0x4000c78	     0xfb605000000	           movzx eax, byte [0x04000c7f] 	       314	update-ref.c	FUNCTION_19	IF_1	CALL_1
0x4000c7f	            0x38c2	                              cmp dl, al	       314	update-ref.c	FUNCTION_19	IF_1	CALL_1
0x4000c81	            0x7519	                           jne 0x4000c9c	       314	update-ref.c	FUNCTION_19	IF_1	CALL_1
0x4000c83	    0x8b0500000000	            mov eax, dword [0x04000c89] 	       315	update-ref.c	FUNCTION_19	IF_1
0x4000c89	          0x83c801	                               or eax, 1	       315	update-ref.c	FUNCTION_19	IF_1
0x4000c8c	    0x890500000000	            mov dword [0x04000c92], eax 	       315	update-ref.c	FUNCTION_19	IF_1
0x4000c92	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       318	update-ref.c	FUNCTION_19
0x4000c96	        0x4883c008	                              add rax, 8	       318	update-ref.c	FUNCTION_19
0x4000c9a	            0xeb16	                           jmp 0x4000cb2	       318	update-ref.c	FUNCTION_19
0x4000c9c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       317	update-ref.c	FUNCTION_19	CALL_2
0x4000ca0	          0x4889c6	                            mov rsi, rax	       317	update-ref.c	FUNCTION_19	CALL_2
0x4000ca3	      0xbf00000000	                              mov edi, 0	       317	update-ref.c	FUNCTION_19	CALL_2
0x4000ca8	      0xb800000000	                              mov eax, 0	       317	update-ref.c	FUNCTION_19	CALL_2
0x4000cad	      0xe800000000	                          call 0x4000cb2	       317	update-ref.c	FUNCTION_19	CALL_2
0x4000cb2	              0xc9	                                   leave	       319	update-ref.c	FUNCTION_19
0x4000cb3	              0xc3	                                     ret	       319	update-ref.c	FUNCTION_19
parse_arg	FOR,0:ELSE,1:CALL,6:DO,0:IF,3:WHILE,1:SWITCH,0:functions,0	67
0x400018f	              0x55	                                push rbp	        28	update-ref.c	FUNCTION_12
0x4000190	          0x4889e5	                            mov rbp, rsp	        28	update-ref.c	FUNCTION_12
0x4000193	        0x4883ec20	                           sub rsp, 0x20	        28	update-ref.c	FUNCTION_12
0x4000197	        0x48897de8	             mov qword [rbp - 0x18], rdi	        28	update-ref.c	FUNCTION_12
0x400019b	        0x488975e0	             mov qword [rbp - 0x20], rsi	        28	update-ref.c	FUNCTION_12
0x400019f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        29	update-ref.c	FUNCTION_12	IF_1
0x40001a3	           0xfb600	                   movzx eax, byte [rax]	        29	update-ref.c	FUNCTION_12	IF_1
0x40001a6	            0x3c22	                            cmp al, 0x22	        29	update-ref.c	FUNCTION_12	IF_1
0x40001a8	     0xf8597000000	                           jne 0x4000245	        29	update-ref.c	FUNCTION_12	IF_1
0x40001ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        30	update-ref.c	FUNCTION_12	IF_1
0x40001b2	        0x488945f8	                mov qword [rbp - 8], rax	        30	update-ref.c	FUNCTION_12	IF_1
0x40001b6	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        32	update-ref.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x40001ba	        0x488d55e8	                   lea rdx, [rbp - 0x18]	        32	update-ref.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x40001be	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        32	update-ref.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x40001c2	          0x4889ce	                            mov rsi, rcx	        32	update-ref.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x40001c5	          0x4889c7	                            mov rdi, rax	        32	update-ref.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x40001c8	      0xe800000000	                          call 0x40001cd	        32	update-ref.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x40001cd	            0x85c0	                           test eax, eax	        32	update-ref.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x40001cf	            0x7416	                            je 0x40001e7	        32	update-ref.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x40001d1	        0x488b45f8	                mov rax, qword [rbp - 8]	        33	update-ref.c	FUNCTION_12	IF_1	CALL_2
0x40001d5	          0x4889c6	                            mov rsi, rax	        33	update-ref.c	FUNCTION_12	IF_1	CALL_2
0x40001d8	      0xbf00000000	                              mov edi, 0	        33	update-ref.c	FUNCTION_12	IF_1	CALL_2
0x40001dd	      0xb800000000	                              mov eax, 0	        33	update-ref.c	FUNCTION_12	IF_1	CALL_2
0x40001e2	      0xe800000000	                          call 0x40001e7	        33	update-ref.c	FUNCTION_12	IF_1	CALL_2
0x40001e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        34	update-ref.c	FUNCTION_12	IF_1	IF_3	CALL_3
0x40001eb	           0xfb600	                   movzx eax, byte [rax]	        34	update-ref.c	FUNCTION_12	IF_1	IF_3	CALL_3
0x40001ee	            0x84c0	                             test al, al	        34	update-ref.c	FUNCTION_12	IF_1	IF_3	CALL_3
0x40001f0	            0x747b	                            je 0x400026d	        34	update-ref.c	FUNCTION_12	IF_1	IF_3	CALL_3
0x40001f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        34	update-ref.c	FUNCTION_12	IF_1	IF_3	CALL_3
0x40001f6	           0xfb600	                   movzx eax, byte [rax]	        34	update-ref.c	FUNCTION_12	IF_1	IF_3	CALL_3
0x40001f9	           0xfb6c0	                           movzx eax, al	        34	update-ref.c	FUNCTION_12	IF_1	IF_3	CALL_3
0x40001fc	            0x4898	                                    cdqe	        34	update-ref.c	FUNCTION_12	IF_1	IF_3	CALL_3
0x40001fe	     0xfb680000000	                   movzx eax, byte [rax]	        34	update-ref.c	FUNCTION_12	IF_1	IF_3	CALL_3
0x4000205	           0xfb6c0	                           movzx eax, al	        34	update-ref.c	FUNCTION_12	IF_1	IF_3	CALL_3
0x4000208	          0x83e001	                              and eax, 1	        34	update-ref.c	FUNCTION_12	IF_1	IF_3	CALL_3
0x400020b	            0x85c0	                           test eax, eax	        34	update-ref.c	FUNCTION_12	IF_1	IF_3	CALL_3
0x400020d	            0x755e	                           jne 0x400026d	        34	update-ref.c	FUNCTION_12	IF_1	IF_3	CALL_3
0x400020f	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	update-ref.c	FUNCTION_12	IF_1	CALL_4
0x4000213	          0x4889c6	                            mov rsi, rax	        35	update-ref.c	FUNCTION_12	IF_1	CALL_4
0x4000216	      0xbf00000000	                              mov edi, 0	        35	update-ref.c	FUNCTION_12	IF_1	CALL_4
0x400021b	      0xb800000000	                              mov eax, 0	        35	update-ref.c	FUNCTION_12	IF_1	CALL_4
0x4000220	      0xe800000000	                          call 0x4000225	        35	update-ref.c	FUNCTION_12	IF_1	CALL_4
0x4000225	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        38	update-ref.c	FUNCTION_12	ELSE_1	CALL_6
0x4000229	        0x488d5001	                      lea rdx, [rax + 1]	        38	update-ref.c	FUNCTION_12	ELSE_1	CALL_6
0x400022d	        0x488955e8	             mov qword [rbp - 0x18], rdx	        38	update-ref.c	FUNCTION_12	ELSE_1	CALL_6
0x4000231	           0xfb600	                   movzx eax, byte [rax]	        38	update-ref.c	FUNCTION_12	ELSE_1	CALL_6
0x4000234	           0xfbed0	                           movsx edx, al	        38	update-ref.c	FUNCTION_12	ELSE_1	CALL_6
0x4000237	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        38	update-ref.c	FUNCTION_12	ELSE_1	CALL_6
0x400023b	            0x89d6	                            mov esi, edx	        38	update-ref.c	FUNCTION_12	ELSE_1	CALL_6
0x400023d	          0x4889c7	                            mov rdi, rax	        38	update-ref.c	FUNCTION_12	ELSE_1	CALL_6
0x4000240	      0xe831feffff	                   call sym.strbuf_addch	        38	update-ref.c	FUNCTION_12	ELSE_1	CALL_6
0x4000245	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        37	update-ref.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_5
0x4000249	           0xfb600	                   movzx eax, byte [rax]	        37	update-ref.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_5
0x400024c	            0x84c0	                             test al, al	        37	update-ref.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_5
0x400024e	            0x741d	                            je 0x400026d	        37	update-ref.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_5
0x4000250	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        37	update-ref.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_5
0x4000254	           0xfb600	                   movzx eax, byte [rax]	        37	update-ref.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_5
0x4000257	           0xfb6c0	                           movzx eax, al	        37	update-ref.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_5
0x400025a	            0x4898	                                    cdqe	        37	update-ref.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_5
0x400025c	     0xfb680000000	                   movzx eax, byte [rax]	        37	update-ref.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_5
0x4000263	           0xfb6c0	                           movzx eax, al	        37	update-ref.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_5
0x4000266	          0x83e001	                              and eax, 1	        37	update-ref.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_5
0x4000269	            0x85c0	                           test eax, eax	        37	update-ref.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_5
0x400026b	            0x74b8	                            je 0x4000225	        37	update-ref.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_5
0x400026d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	update-ref.c	FUNCTION_12
0x4000271	              0xc9	                                   leave	        42	update-ref.c	FUNCTION_12
0x4000272	              0xc3	                                     ret	        42	update-ref.c	FUNCTION_12
update_refs_stdin	FOR,0:ELSE,7:CALL,17:DO,0:IF,8:WHILE,1:SWITCH,0:functions,0	140
0x4000cb4	              0x55	                                push rbp	       322	update-ref.c	FUNCTION_20
0x4000cb5	          0x4889e5	                            mov rbp, rsp	       322	update-ref.c	FUNCTION_20
0x4000cb8	        0x4883ec40	                           sub rsp, 0x40	       322	update-ref.c	FUNCTION_20
0x4000cbc	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       322	update-ref.c	FUNCTION_20
0x4000cc0	    0x64488b042528	                mov rax, qword fs:[0x28]	       322	update-ref.c	FUNCTION_20
0x4000cc9	        0x488945f8	                mov qword [rbp - 8], rax	       322	update-ref.c	FUNCTION_20
0x4000ccd	            0x31c0	                            xor eax, eax	       322	update-ref.c	FUNCTION_20
0x4000ccf	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       323	update-ref.c	FUNCTION_20
0x4000cd7	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       323	update-ref.c	FUNCTION_20
0x4000cdf	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       323	update-ref.c	FUNCTION_20
0x4000ce7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       326	update-ref.c	FUNCTION_20	IF_1	CALL_1
0x4000ceb	      0xbae8030000	                          mov edx, 0x3e8	       326	update-ref.c	FUNCTION_20	IF_1	CALL_1
0x4000cf0	      0xbe00000000	                              mov esi, 0	       326	update-ref.c	FUNCTION_20	IF_1	CALL_1
0x4000cf5	          0x4889c7	                            mov rdi, rax	       326	update-ref.c	FUNCTION_20	IF_1	CALL_1
0x4000cf8	      0xe800000000	                          call 0x4000cfd	       326	update-ref.c	FUNCTION_20	IF_1	CALL_1
0x4000cfd	          0x4885c0	                           test rax, rax	       326	update-ref.c	FUNCTION_20	IF_1	CALL_1
0x4000d00	            0x790f	                           jns 0x4000d11	       326	update-ref.c	FUNCTION_20	IF_1	CALL_1
0x4000d02	      0xbf00000000	                              mov edi, 0	       327	update-ref.c	FUNCTION_20	CALL_2
0x4000d07	      0xb800000000	                              mov eax, 0	       327	update-ref.c	FUNCTION_20	CALL_2
0x4000d0c	      0xe800000000	                          call 0x4000d11	       327	update-ref.c	FUNCTION_20	CALL_2
0x4000d11	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       328	update-ref.c	FUNCTION_20
0x4000d15	        0x488945d8	             mov qword [rbp - 0x28], rax	       328	update-ref.c	FUNCTION_20
0x4000d19	      0xe97f010000	                           jmp 0x4000e9d	       330	update-ref.c	FUNCTION_20	WHILE_1
0x4000d1e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       331	update-ref.c	FUNCTION_20	WHILE_1	IF_2
0x4000d22	           0xfb610	                   movzx edx, byte [rax]	       331	update-ref.c	FUNCTION_20	WHILE_1	IF_2
0x4000d25	     0xfb605000000	           movzx eax, byte [0x04000d2c] 	       331	update-ref.c	FUNCTION_20	WHILE_1	IF_2
0x4000d2c	            0x38c2	                              cmp dl, al	       331	update-ref.c	FUNCTION_20	WHILE_1	IF_2
0x4000d2e	            0x750f	                           jne 0x4000d3f	       331	update-ref.c	FUNCTION_20	WHILE_1	IF_2
0x4000d30	      0xbf00000000	                              mov edi, 0	       332	update-ref.c	FUNCTION_20	WHILE_1	CALL_3
0x4000d35	      0xb800000000	                              mov eax, 0	       332	update-ref.c	FUNCTION_20	WHILE_1	CALL_3
0x4000d3a	      0xe800000000	                          call 0x4000d3f	       332	update-ref.c	FUNCTION_20	WHILE_1	CALL_3
0x4000d3f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       333	update-ref.c	FUNCTION_20	WHILE_1	ELSE_1	IF_3	CALL_4
0x4000d43	           0xfb600	                   movzx eax, byte [rax]	       333	update-ref.c	FUNCTION_20	WHILE_1	ELSE_1	IF_3	CALL_4
0x4000d46	           0xfb6c0	                           movzx eax, al	       333	update-ref.c	FUNCTION_20	WHILE_1	ELSE_1	IF_3	CALL_4
0x4000d49	            0x4898	                                    cdqe	       333	update-ref.c	FUNCTION_20	WHILE_1	ELSE_1	IF_3	CALL_4
0x4000d4b	     0xfb680000000	                   movzx eax, byte [rax]	       333	update-ref.c	FUNCTION_20	WHILE_1	ELSE_1	IF_3	CALL_4
0x4000d52	           0xfb6c0	                           movzx eax, al	       333	update-ref.c	FUNCTION_20	WHILE_1	ELSE_1	IF_3	CALL_4
0x4000d55	          0x83e001	                              and eax, 1	       333	update-ref.c	FUNCTION_20	WHILE_1	ELSE_1	IF_3	CALL_4
0x4000d58	            0x85c0	                           test eax, eax	       333	update-ref.c	FUNCTION_20	WHILE_1	ELSE_1	IF_3	CALL_4
0x4000d5a	            0x7416	                            je 0x4000d72	       333	update-ref.c	FUNCTION_20	WHILE_1	ELSE_1	IF_3	CALL_4
0x4000d5c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       334	update-ref.c	FUNCTION_20	WHILE_1	ELSE_1	IF_3
0x4000d60	          0x4889c6	                            mov rsi, rax	       334	update-ref.c	FUNCTION_20	WHILE_1	ELSE_1	IF_3
0x4000d63	      0xbf00000000	                              mov edi, 0	       334	update-ref.c	FUNCTION_20	WHILE_1	ELSE_1	IF_3
0x4000d68	      0xb800000000	                              mov eax, 0	       334	update-ref.c	FUNCTION_20	WHILE_1	ELSE_1	IF_3
0x4000d6d	      0xe800000000	                          call 0x4000d72	       334	update-ref.c	FUNCTION_20	WHILE_1	ELSE_1	IF_3
0x4000d72	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       335	update-ref.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_6
0x4000d76	      0xbe00000000	                              mov esi, 0	       335	update-ref.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_6
0x4000d7b	          0x4889c7	                            mov rdi, rax	       335	update-ref.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_6
0x4000d7e	      0xe800000000	                          call 0x4000d83	       335	update-ref.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_6
0x4000d83	            0x85c0	                           test eax, eax	       335	update-ref.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_6
0x4000d85	            0x7424	                            je 0x4000dab	       335	update-ref.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_6
0x4000d87	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       336	update-ref.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4
0x4000d8b	        0x488d5007	                      lea rdx, [rax + 7]	       336	update-ref.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4
0x4000d8f	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       336	update-ref.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4
0x4000d93	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       336	update-ref.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4
0x4000d97	          0x4889ce	                            mov rsi, rcx	       336	update-ref.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4
0x4000d9a	          0x4889c7	                            mov rdi, rax	       336	update-ref.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4
0x4000d9d	      0xe888f8ffff	               call sym.parse_cmd_update	       336	update-ref.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4
0x4000da2	        0x488945d8	             mov qword [rbp - 0x28], rax	       336	update-ref.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4
0x4000da6	      0xe9ed000000	                           jmp 0x4000e98	       336	update-ref.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4
0x4000dab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       337	update-ref.c	FUNCTION_20	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000daf	      0xbe00000000	                              mov esi, 0	       337	update-ref.c	FUNCTION_20	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000db4	          0x4889c7	                            mov rdi, rax	       337	update-ref.c	FUNCTION_20	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000db7	      0xe800000000	                          call 0x4000dbc	       337	update-ref.c	FUNCTION_20	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000dbc	            0x85c0	                           test eax, eax	       337	update-ref.c	FUNCTION_20	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000dbe	            0x7424	                            je 0x4000de4	       337	update-ref.c	FUNCTION_20	WHILE_1	ELSE_3	IF_5	CALL_8
0x4000dc0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       338	update-ref.c	FUNCTION_20	WHILE_1	ELSE_3	IF_5
0x4000dc4	        0x488d5007	                      lea rdx, [rax + 7]	       338	update-ref.c	FUNCTION_20	WHILE_1	ELSE_3	IF_5
0x4000dc8	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       338	update-ref.c	FUNCTION_20	WHILE_1	ELSE_3	IF_5
0x4000dcc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       338	update-ref.c	FUNCTION_20	WHILE_1	ELSE_3	IF_5
0x4000dd0	          0x4889ce	                            mov rsi, rcx	       338	update-ref.c	FUNCTION_20	WHILE_1	ELSE_3	IF_5
0x4000dd3	          0x4889c7	                            mov rdi, rax	       338	update-ref.c	FUNCTION_20	WHILE_1	ELSE_3	IF_5
0x4000dd6	      0xe814faffff	               call sym.parse_cmd_create	       338	update-ref.c	FUNCTION_20	WHILE_1	ELSE_3	IF_5
0x4000ddb	        0x488945d8	             mov qword [rbp - 0x28], rax	       338	update-ref.c	FUNCTION_20	WHILE_1	ELSE_3	IF_5
0x4000ddf	      0xe9b4000000	                           jmp 0x4000e98	       338	update-ref.c	FUNCTION_20	WHILE_1	ELSE_3	IF_5
0x4000de4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       339	update-ref.c	FUNCTION_20	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000de8	      0xbe00000000	                              mov esi, 0	       339	update-ref.c	FUNCTION_20	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000ded	          0x4889c7	                            mov rdi, rax	       339	update-ref.c	FUNCTION_20	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000df0	      0xe800000000	                          call 0x4000df5	       339	update-ref.c	FUNCTION_20	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000df5	            0x85c0	                           test eax, eax	       339	update-ref.c	FUNCTION_20	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000df7	            0x7421	                            je 0x4000e1a	       339	update-ref.c	FUNCTION_20	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000df9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       340	update-ref.c	FUNCTION_20	WHILE_1	ELSE_4	IF_6
0x4000dfd	        0x488d5007	                      lea rdx, [rax + 7]	       340	update-ref.c	FUNCTION_20	WHILE_1	ELSE_4	IF_6
0x4000e01	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       340	update-ref.c	FUNCTION_20	WHILE_1	ELSE_4	IF_6
0x4000e05	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       340	update-ref.c	FUNCTION_20	WHILE_1	ELSE_4	IF_6
0x4000e09	          0x4889ce	                            mov rsi, rcx	       340	update-ref.c	FUNCTION_20	WHILE_1	ELSE_4	IF_6
0x4000e0c	          0x4889c7	                            mov rdi, rax	       340	update-ref.c	FUNCTION_20	WHILE_1	ELSE_4	IF_6
0x4000e0f	      0xe862fbffff	               call sym.parse_cmd_delete	       340	update-ref.c	FUNCTION_20	WHILE_1	ELSE_4	IF_6
0x4000e14	        0x488945d8	             mov qword [rbp - 0x28], rax	       340	update-ref.c	FUNCTION_20	WHILE_1	ELSE_4	IF_6
0x4000e18	            0xeb7e	                           jmp 0x4000e98	       340	update-ref.c	FUNCTION_20	WHILE_1	ELSE_4	IF_6
0x4000e1a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       341	update-ref.c	FUNCTION_20	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000e1e	      0xbe00000000	                              mov esi, 0	       341	update-ref.c	FUNCTION_20	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000e23	          0x4889c7	                            mov rdi, rax	       341	update-ref.c	FUNCTION_20	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000e26	      0xe800000000	                          call 0x4000e2b	       341	update-ref.c	FUNCTION_20	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000e2b	            0x85c0	                           test eax, eax	       341	update-ref.c	FUNCTION_20	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000e2d	            0x7421	                            je 0x4000e50	       341	update-ref.c	FUNCTION_20	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000e2f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       342	update-ref.c	FUNCTION_20	WHILE_1	ELSE_5	IF_7
0x4000e33	        0x488d5007	                      lea rdx, [rax + 7]	       342	update-ref.c	FUNCTION_20	WHILE_1	ELSE_5	IF_7
0x4000e37	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       342	update-ref.c	FUNCTION_20	WHILE_1	ELSE_5	IF_7
0x4000e3b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       342	update-ref.c	FUNCTION_20	WHILE_1	ELSE_5	IF_7
0x4000e3f	          0x4889ce	                            mov rsi, rcx	       342	update-ref.c	FUNCTION_20	WHILE_1	ELSE_5	IF_7
0x4000e42	          0x4889c7	                            mov rdi, rax	       342	update-ref.c	FUNCTION_20	WHILE_1	ELSE_5	IF_7
0x4000e45	      0xe8b4fcffff	               call sym.parse_cmd_verify	       342	update-ref.c	FUNCTION_20	WHILE_1	ELSE_5	IF_7
0x4000e4a	        0x488945d8	             mov qword [rbp - 0x28], rax	       342	update-ref.c	FUNCTION_20	WHILE_1	ELSE_5	IF_7
0x4000e4e	            0xeb48	                           jmp 0x4000e98	       342	update-ref.c	FUNCTION_20	WHILE_1	ELSE_5	IF_7
0x4000e50	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       343	update-ref.c	FUNCTION_20	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000e54	      0xbe00000000	                              mov esi, 0	       343	update-ref.c	FUNCTION_20	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000e59	          0x4889c7	                            mov rdi, rax	       343	update-ref.c	FUNCTION_20	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000e5c	      0xe800000000	                          call 0x4000e61	       343	update-ref.c	FUNCTION_20	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000e61	            0x85c0	                           test eax, eax	       343	update-ref.c	FUNCTION_20	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000e63	            0x741d	                            je 0x4000e82	       343	update-ref.c	FUNCTION_20	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000e65	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       344	update-ref.c	FUNCTION_20	WHILE_1	ELSE_6	IF_8
0x4000e69	        0x488d5007	                      lea rdx, [rax + 7]	       344	update-ref.c	FUNCTION_20	WHILE_1	ELSE_6	IF_8
0x4000e6d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       344	update-ref.c	FUNCTION_20	WHILE_1	ELSE_6	IF_8
0x4000e71	          0x4889d6	                            mov rsi, rdx	       344	update-ref.c	FUNCTION_20	WHILE_1	ELSE_6	IF_8
0x4000e74	          0x4889c7	                            mov rdi, rax	       344	update-ref.c	FUNCTION_20	WHILE_1	ELSE_6	IF_8
0x4000e77	      0xe8c7fdffff	               call sym.parse_cmd_option	       344	update-ref.c	FUNCTION_20	WHILE_1	ELSE_6	IF_8
0x4000e7c	        0x488945d8	             mov qword [rbp - 0x28], rax	       344	update-ref.c	FUNCTION_20	WHILE_1	ELSE_6	IF_8
0x4000e80	            0xeb16	                           jmp 0x4000e98	       344	update-ref.c	FUNCTION_20	WHILE_1	ELSE_6	IF_8
0x4000e82	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       346	update-ref.c	FUNCTION_20	WHILE_1	CALL_16
0x4000e86	          0x4889c6	                            mov rsi, rax	       346	update-ref.c	FUNCTION_20	WHILE_1	CALL_16
0x4000e89	      0xbf00000000	                              mov edi, 0	       346	update-ref.c	FUNCTION_20	WHILE_1	CALL_16
0x4000e8e	      0xb800000000	                              mov eax, 0	       346	update-ref.c	FUNCTION_20	WHILE_1	CALL_16
0x4000e93	      0xe800000000	                          call 0x4000e98	       346	update-ref.c	FUNCTION_20	WHILE_1	CALL_16
0x4000e98	      0x488345d801	               add qword [rbp - 0x28], 1	       348	update-ref.c	FUNCTION_20	WHILE_1
0x4000e9d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       330	update-ref.c	FUNCTION_20	WHILE_1
0x4000ea1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       330	update-ref.c	FUNCTION_20	WHILE_1
0x4000ea5	          0x4801d0	                            add rax, rdx	       330	update-ref.c	FUNCTION_20	WHILE_1
0x4000ea8	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       330	update-ref.c	FUNCTION_20	WHILE_1
0x4000eac	     0xf876cfeffff	                            ja 0x4000d1e	       330	update-ref.c	FUNCTION_20	WHILE_1
0x4000eb2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       351	update-ref.c	FUNCTION_20	CALL_17
0x4000eb6	          0x4889c7	                            mov rdi, rax	       351	update-ref.c	FUNCTION_20	CALL_17
0x4000eb9	      0xe800000000	                          call 0x4000ebe	       351	update-ref.c	FUNCTION_20	CALL_17
0x4000ebe	              0x90	                                     nop	       352	update-ref.c	FUNCTION_20
0x4000ebf	        0x488b45f8	                mov rax, qword [rbp - 8]	       352	update-ref.c	FUNCTION_20
0x4000ec3	    0x644833042528	                xor rax, qword fs:[0x28]	       352	update-ref.c	FUNCTION_20
0x4000ecc	            0x7405	                            je 0x4000ed3	       352	update-ref.c	FUNCTION_20
0x4000ece	      0xe800000000	                          call 0x4000ed3	       352	update-ref.c	FUNCTION_20
0x4000ed3	              0xc9	                                   leave	       352	update-ref.c	FUNCTION_20
0x4000ed4	              0xc3	                                     ret	       352	update-ref.c	FUNCTION_20
parse_refname	FOR,0:ELSE,1:CALL,6:DO,0:IF,3:WHILE,0:SWITCH,0:functions,0	65
0x4000273	              0x55	                                push rbp	        53	update-ref.c	FUNCTION_13
0x4000274	          0x4889e5	                            mov rbp, rsp	        53	update-ref.c	FUNCTION_13
0x4000277	        0x4883ec30	                           sub rsp, 0x30	        53	update-ref.c	FUNCTION_13
0x400027b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        53	update-ref.c	FUNCTION_13
0x400027f	        0x488975d0	             mov qword [rbp - 0x30], rsi	        53	update-ref.c	FUNCTION_13
0x4000283	    0x64488b042528	                mov rax, qword fs:[0x28]	        53	update-ref.c	FUNCTION_13
0x400028c	        0x488945f8	                mov qword [rbp - 8], rax	        53	update-ref.c	FUNCTION_13
0x4000290	            0x31c0	                            xor eax, eax	        53	update-ref.c	FUNCTION_13
0x4000292	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        54	update-ref.c	FUNCTION_13
0x400029a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        54	update-ref.c	FUNCTION_13
0x40002a2	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        54	update-ref.c	FUNCTION_13
0x40002aa	     0xfb605000000	           movzx eax, byte [0x040002b1] 	        56	update-ref.c	FUNCTION_13	IF_1
0x40002b1	            0x84c0	                             test al, al	        56	update-ref.c	FUNCTION_13	IF_1
0x40002b3	            0x7422	                            je 0x40002d7	        56	update-ref.c	FUNCTION_13	IF_1
0x40002b5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        58	update-ref.c	FUNCTION_13	IF_1	CALL_1
0x40002b9	          0x488b00	                    mov rax, qword [rax]	        58	update-ref.c	FUNCTION_13	IF_1	CALL_1
0x40002bc	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        58	update-ref.c	FUNCTION_13	IF_1	CALL_1
0x40002c0	          0x4889d6	                            mov rsi, rdx	        58	update-ref.c	FUNCTION_13	IF_1	CALL_1
0x40002c3	          0x4889c7	                            mov rdi, rax	        58	update-ref.c	FUNCTION_13	IF_1	CALL_1
0x40002c6	      0xe8c4feffff	                      call sym.parse_arg	        58	update-ref.c	FUNCTION_13	IF_1	CALL_1
0x40002cb	          0x4889c2	                            mov rdx, rax	        58	update-ref.c	FUNCTION_13	IF_1	CALL_1
0x40002ce	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        58	update-ref.c	FUNCTION_13	IF_1	CALL_1
0x40002d2	          0x488910	                    mov qword [rax], rdx	        58	update-ref.c	FUNCTION_13	IF_1	CALL_1
0x40002d5	            0xeb2b	                           jmp 0x4000302	        58	update-ref.c	FUNCTION_13	IF_1	CALL_1
0x40002d7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        61	update-ref.c	FUNCTION_13	ELSE_1	CALL_2
0x40002db	          0x488b10	                    mov rdx, qword [rax]	        61	update-ref.c	FUNCTION_13	ELSE_1	CALL_2
0x40002de	        0x488d45e0	                   lea rax, [rbp - 0x20]	        61	update-ref.c	FUNCTION_13	ELSE_1	CALL_2
0x40002e2	          0x4889d6	                            mov rsi, rdx	        61	update-ref.c	FUNCTION_13	ELSE_1	CALL_2
0x40002e5	          0x4889c7	                            mov rdi, rax	        61	update-ref.c	FUNCTION_13	ELSE_1	CALL_2
0x40002e8	      0xe8f7fdffff	                  call sym.strbuf_addstr	        61	update-ref.c	FUNCTION_13	ELSE_1	CALL_2
0x40002ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        62	update-ref.c	FUNCTION_13	ELSE_1
0x40002f1	          0x488b10	                    mov rdx, qword [rax]	        62	update-ref.c	FUNCTION_13	ELSE_1
0x40002f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        62	update-ref.c	FUNCTION_13	ELSE_1
0x40002f8	          0x4801c2	                            add rdx, rax	        62	update-ref.c	FUNCTION_13	ELSE_1
0x40002fb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        62	update-ref.c	FUNCTION_13	ELSE_1
0x40002ff	          0x488910	                    mov qword [rax], rdx	        62	update-ref.c	FUNCTION_13	ELSE_1
0x4000302	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        65	update-ref.c	FUNCTION_13	IF_2
0x4000306	          0x4885c0	                           test rax, rax	        65	update-ref.c	FUNCTION_13	IF_2
0x4000309	            0x7513	                           jne 0x400031e	        65	update-ref.c	FUNCTION_13	IF_2
0x400030b	        0x488d45e0	                   lea rax, [rbp - 0x20]	        66	update-ref.c	FUNCTION_13	IF_2	CALL_3
0x400030f	          0x4889c7	                            mov rdi, rax	        66	update-ref.c	FUNCTION_13	IF_2	CALL_3
0x4000312	      0xe800000000	                          call 0x4000317	        66	update-ref.c	FUNCTION_13	IF_2	CALL_3
0x4000317	      0xb800000000	                              mov eax, 0	        67	update-ref.c	FUNCTION_13	IF_2
0x400031c	            0xeb3c	                           jmp 0x400035a	        67	update-ref.c	FUNCTION_13	IF_2
0x400031e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        70	update-ref.c	FUNCTION_13	IF_3	CALL_4
0x4000322	      0xbe01000000	                              mov esi, 1	        70	update-ref.c	FUNCTION_13	IF_3	CALL_4
0x4000327	          0x4889c7	                            mov rdi, rax	        70	update-ref.c	FUNCTION_13	IF_3	CALL_4
0x400032a	      0xe800000000	                          call 0x400032f	        70	update-ref.c	FUNCTION_13	IF_3	CALL_4
0x400032f	            0x85c0	                           test eax, eax	        70	update-ref.c	FUNCTION_13	IF_3	CALL_4
0x4000331	            0x7416	                            je 0x4000349	        70	update-ref.c	FUNCTION_13	IF_3	CALL_4
0x4000333	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        71	update-ref.c	FUNCTION_13	CALL_5
0x4000337	          0x4889c6	                            mov rsi, rax	        71	update-ref.c	FUNCTION_13	CALL_5
0x400033a	      0xbf00000000	                              mov edi, 0	        71	update-ref.c	FUNCTION_13	CALL_5
0x400033f	      0xb800000000	                              mov eax, 0	        71	update-ref.c	FUNCTION_13	CALL_5
0x4000344	      0xe800000000	                          call 0x4000349	        71	update-ref.c	FUNCTION_13	CALL_5
0x4000349	        0x488d45e0	                   lea rax, [rbp - 0x20]	        73	update-ref.c	FUNCTION_13	CALL_6
0x400034d	      0xbe00000000	                              mov esi, 0	        73	update-ref.c	FUNCTION_13	CALL_6
0x4000352	          0x4889c7	                            mov rdi, rax	        73	update-ref.c	FUNCTION_13	CALL_6
0x4000355	      0xe800000000	                          call 0x400035a	        73	update-ref.c	FUNCTION_13	CALL_6
0x400035a	        0x488b4df8	                mov rcx, qword [rbp - 8]	        74	update-ref.c	FUNCTION_13
0x400035e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        74	update-ref.c	FUNCTION_13
0x4000367	            0x7405	                            je 0x400036e	        74	update-ref.c	FUNCTION_13
0x4000369	      0xe800000000	                          call 0x400036e	        74	update-ref.c	FUNCTION_13
0x400036e	              0xc9	                                   leave	        74	update-ref.c	FUNCTION_13
0x400036f	              0xc3	                                     ret	        74	update-ref.c	FUNCTION_13
strbuf_addch	FOR,0:ELSE,0:CALL,2:DO,0:IF,1:WHILE,0:SWITCH,0:functions,0	33
0x4000076	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_4
0x4000077	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_4
0x400007a	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_4
0x400007e	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_4
0x4000082	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_4
0x4000085	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000089	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x400008c	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000091	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000094	            0x7511	                           jne 0x40000a7	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000096	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_4	CALL_2
0x400009a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_4	CALL_2
0x400009f	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_4	CALL_2
0x40000a2	      0xe800000000	                          call 0x40000a7	       228	strbuf.h	FUNCTION_4	CALL_2
0x40000a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x40000ab	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_4
0x40000af	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x40000b3	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_4
0x40000b7	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_4
0x40000bb	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x40000bf	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_4
0x40000c3	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_4
0x40000c6	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_4
0x40000c9	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_4
0x40000cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x40000cf	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_4
0x40000d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x40000d7	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_4
0x40000db	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_4
0x40000de	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_4
0x40000e1	              0x90	                                     nop	       231	strbuf.h	FUNCTION_4
0x40000e2	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_4
0x40000e3	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_4
