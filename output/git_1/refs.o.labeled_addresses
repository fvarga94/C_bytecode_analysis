refs_update_ref	IF,4:ELSE,1:FOR,0:WHILE,0:SWITCH,1:DO,0:CALL,12:functions,0	119
0x4002c92	              0x55	                                push rbp	      1073	refs.c	FUNCTION_59
0x4002c93	          0x4889e5	                            mov rbp, rsp	      1073	refs.c	FUNCTION_59
0x4002c96	        0x4883ec70	                           sub rsp, 0x70	      1073	refs.c	FUNCTION_59
0x4002c9a	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1073	refs.c	FUNCTION_59
0x4002c9e	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1073	refs.c	FUNCTION_59
0x4002ca2	        0x488955a8	             mov qword [rbp - 0x58], rdx	      1073	refs.c	FUNCTION_59
0x4002ca6	        0x48894da0	             mov qword [rbp - 0x60], rcx	      1073	refs.c	FUNCTION_59
0x4002caa	        0x4c894598	              mov qword [rbp - 0x68], r8	      1073	refs.c	FUNCTION_59
0x4002cae	        0x44894d94	             mov dword [rbp - 0x6c], r9d	      1073	refs.c	FUNCTION_59
0x4002cb2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1073	refs.c	FUNCTION_59
0x4002cbb	        0x488945f8	                mov qword [rbp - 8], rax	      1073	refs.c	FUNCTION_59
0x4002cbf	            0x31c0	                            xor eax, eax	      1073	refs.c	FUNCTION_59
0x4002cc1	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1074	refs.c	FUNCTION_59
0x4002cc9	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1075	refs.c	FUNCTION_59
0x4002cd1	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1075	refs.c	FUNCTION_59
0x4002cd9	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1075	refs.c	FUNCTION_59
0x4002ce1	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1076	refs.c	FUNCTION_59
0x4002ce8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1078	refs.c	FUNCTION_59	IF_1	CALL_1
0x4002cec	          0x4889c7	                            mov rdi, rax	      1078	refs.c	FUNCTION_59	IF_1	CALL_1
0x4002cef	      0xe800000000	                          call 0x4002cf4	      1078	refs.c	FUNCTION_59	IF_1	CALL_1
0x4002cf4	          0x83f801	                              cmp eax, 1	      1078	refs.c	FUNCTION_59	IF_1	CALL_1
0x4002cf7	            0x754b	                           jne 0x4002d44	      1078	refs.c	FUNCTION_59	IF_1	CALL_1
0x4002cf9	    0x488b05000000	            mov rax, qword [0x04002d00] 	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4002d00	          0x4889c7	                            mov rdi, rax	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4002d03	      0xe800000000	                          call 0x4002d08	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4002d08	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4002d0c	            0x7419	                            je 0x4002d27	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4002d0e	      0xb900000000	                              mov ecx, 0	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4002d13	      0xba37040000	                          mov edx, 0x437	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4002d18	      0xbe00000000	                              mov esi, 0	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4002d1d	      0xbf00000000	                              mov edi, 0	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4002d22	      0xe800000000	                          call 0x4002d27	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4002d27	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      1080	refs.c	FUNCTION_59	IF_1	CALL_4
0x4002d2b	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1080	refs.c	FUNCTION_59	IF_1	CALL_4
0x4002d2f	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      1080	refs.c	FUNCTION_59	IF_1	CALL_4
0x4002d33	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1080	refs.c	FUNCTION_59	IF_1	CALL_4
0x4002d37	          0x4889c7	                            mov rdi, rax	      1080	refs.c	FUNCTION_59	IF_1	CALL_4
0x4002d3a	      0xe832eeffff	                call sym.write_pseudoref	      1080	refs.c	FUNCTION_59	IF_1	CALL_4
0x4002d3f	          0x8945cc	             mov dword [rbp - 0x34], eax	      1080	refs.c	FUNCTION_59	IF_1	CALL_4
0x4002d42	            0xeb79	                           jmp 0x4002dbd	      1080	refs.c	FUNCTION_59	IF_1	CALL_4
0x4002d44	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1082	refs.c	FUNCTION_59	ELSE_1	CALL_5
0x4002d48	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1082	refs.c	FUNCTION_59	ELSE_1	CALL_5
0x4002d4c	          0x4889d6	                            mov rsi, rdx	      1082	refs.c	FUNCTION_59	ELSE_1	CALL_5
0x4002d4f	          0x4889c7	                            mov rdi, rax	      1082	refs.c	FUNCTION_59	ELSE_1	CALL_5
0x4002d52	      0xe800000000	                          call 0x4002d57	      1082	refs.c	FUNCTION_59	ELSE_1	CALL_5
0x4002d57	        0x488945d0	             mov qword [rbp - 0x30], rax	      1082	refs.c	FUNCTION_59	ELSE_1	CALL_5
0x4002d5b	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x4002d60	            0x7448	                            je 0x4002daa	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x4002d62	        0x4c8b4db0	              mov r9, qword [rbp - 0x50]	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4002d66	        0x448b4594	             mov r8d, dword [rbp - 0x6c]	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4002d6a	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4002d6e	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4002d72	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4002d76	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4002d7a	        0x4883ec08	                              sub rsp, 8	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4002d7e	        0x488d7de0	                   lea rdi, [rbp - 0x20]	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4002d82	              0x57	                                push rdi	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4002d83	          0x4889c7	                            mov rdi, rax	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4002d86	      0xe800000000	                          call 0x4002d8b	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4002d8b	        0x4883c410	                           add rsp, 0x10	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4002d8f	            0x85c0	                           test eax, eax	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x4002d91	            0x7517	                           jne 0x4002daa	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x4002d93	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x4002d97	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x4002d9b	          0x4889d6	                            mov rsi, rdx	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x4002d9e	          0x4889c7	                            mov rdi, rax	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x4002da1	      0xe800000000	                          call 0x4002da6	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x4002da6	            0x85c0	                           test eax, eax	      1085	refs.c	FUNCTION_59	ELSE_1	IF_2
0x4002da8	            0x7413	                            je 0x4002dbd	      1085	refs.c	FUNCTION_59	ELSE_1	IF_2
0x4002daa	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      1087	refs.c	FUNCTION_59	ELSE_1	IF_2
0x4002db1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1088	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_8
0x4002db5	          0x4889c7	                            mov rdi, rax	      1088	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_8
0x4002db8	      0xe800000000	                          call 0x4002dbd	      1088	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_8
0x4002dbd	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1091	refs.c	FUNCTION_59	IF_3
0x4002dc1	            0x746c	                            je 0x4002e2f	      1091	refs.c	FUNCTION_59	IF_3
0x4002dc3	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1092	refs.c	FUNCTION_59	IF_3
0x4002dcb	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002dce	          0x83f801	                              cmp eax, 1	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002dd1	            0x742d	                            je 0x4002e00	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002dd3	          0x83f801	                              cmp eax, 1	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002dd6	            0x7205	                            jb 0x4002ddd	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002dd8	          0x83f802	                              cmp eax, 2	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002ddb	            0xeb3f	                           jmp 0x4002e1c	      1102	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002ddd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002de1	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002de5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002de9	          0x4889ce	                            mov rsi, rcx	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002dec	          0x4889c7	                            mov rdi, rax	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002def	      0xb800000000	                              mov eax, 0	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002df4	      0xe800000000	                          call 0x4002df9	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002df9	      0xe855d2ffff	                    call sym.const_error	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002dfe	            0xeb1c	                           jmp 0x4002e1c	      1097	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4002e00	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4002e04	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4002e08	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4002e0c	          0x4889ce	                            mov rsi, rcx	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4002e0f	          0x4889c7	                            mov rdi, rax	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4002e12	      0xb800000000	                              mov eax, 0	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4002e17	      0xe800000000	                          call 0x4002e1c	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4002e1c	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1104	refs.c	FUNCTION_59	IF_3	CALL_10
0x4002e20	          0x4889c7	                            mov rdi, rax	      1104	refs.c	FUNCTION_59	IF_3	CALL_10
0x4002e23	      0xe800000000	                          call 0x4002e28	      1104	refs.c	FUNCTION_59	IF_3	CALL_10
0x4002e28	      0xb801000000	                              mov eax, 1	      1105	refs.c	FUNCTION_59	IF_3
0x4002e2d	            0xeb24	                           jmp 0x4002e53	      1105	refs.c	FUNCTION_59	IF_3
0x4002e2f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1107	refs.c	FUNCTION_59	CALL_11
0x4002e33	          0x4889c7	                            mov rdi, rax	      1107	refs.c	FUNCTION_59	CALL_11
0x4002e36	      0xe800000000	                          call 0x4002e3b	      1107	refs.c	FUNCTION_59	CALL_11
0x4002e3b	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1108	refs.c	FUNCTION_59	IF_4
0x4002e40	            0x740c	                            je 0x4002e4e	      1108	refs.c	FUNCTION_59	IF_4
0x4002e42	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1109	refs.c	FUNCTION_59	CALL_12
0x4002e46	          0x4889c7	                            mov rdi, rax	      1109	refs.c	FUNCTION_59	CALL_12
0x4002e49	      0xe800000000	                          call 0x4002e4e	      1109	refs.c	FUNCTION_59	CALL_12
0x4002e4e	      0xb800000000	                              mov eax, 0	      1110	refs.c	FUNCTION_59
0x4002e53	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1111	refs.c	FUNCTION_59
0x4002e57	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1111	refs.c	FUNCTION_59
0x4002e60	            0x7405	                            je 0x4002e67	      1111	refs.c	FUNCTION_59
0x4002e62	      0xe800000000	                          call 0x4002e67	      1111	refs.c	FUNCTION_59
0x4002e67	              0xc9	                                   leave	      1111	refs.c	FUNCTION_59
0x4002e68	              0xc3	                                     ret	      1111	refs.c	FUNCTION_59
ref_is_hidden	IF,4:ELSE,1:FOR,1:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	75
0x400333e	              0x55	                                push rbp	      1246	refs.c	FUNCTION_63
0x400333f	          0x4889e5	                            mov rbp, rsp	      1246	refs.c	FUNCTION_63
0x4003342	        0x4883ec40	                           sub rsp, 0x40	      1246	refs.c	FUNCTION_63
0x4003346	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1246	refs.c	FUNCTION_63
0x400334a	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1246	refs.c	FUNCTION_63
0x400334e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1246	refs.c	FUNCTION_63
0x4003357	        0x488945f8	                mov qword [rbp - 8], rax	      1246	refs.c	FUNCTION_63
0x400335b	            0x31c0	                            xor eax, eax	      1246	refs.c	FUNCTION_63
0x400335d	    0x488b05000000	            mov rax, qword [0x04003364] 	      1249	refs.c	FUNCTION_63	IF_1
0x4003364	          0x4885c0	                           test rax, rax	      1249	refs.c	FUNCTION_63	IF_1
0x4003367	            0x750a	                           jne 0x4003373	      1249	refs.c	FUNCTION_63	IF_1
0x4003369	      0xb800000000	                              mov eax, 0	      1250	refs.c	FUNCTION_63	IF_1
0x400336e	      0xe9ca000000	                           jmp 0x400343d	      1250	refs.c	FUNCTION_63	IF_1
0x4003373	    0x488b05000000	            mov rax, qword [0x0400337a] 	      1251	refs.c	FUNCTION_63	FOR_1
0x400337a	          0x8b4008	                mov eax, dword [rax + 8]	      1251	refs.c	FUNCTION_63	FOR_1
0x400337d	          0x83e801	                              sub eax, 1	      1251	refs.c	FUNCTION_63	FOR_1
0x4003380	          0x8945d8	             mov dword [rbp - 0x28], eax	      1251	refs.c	FUNCTION_63	FOR_1
0x4003383	      0xe9a6000000	                           jmp 0x400342e	      1251	refs.c	FUNCTION_63	FOR_1
0x4003388	    0x488b05000000	            mov rax, qword [0x0400338f] 	      1252	refs.c	FUNCTION_63	FOR_1
0x400338f	          0x488b00	                    mov rax, qword [rax]	      1252	refs.c	FUNCTION_63	FOR_1
0x4003392	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1252	refs.c	FUNCTION_63	FOR_1
0x4003395	          0x4863d2	                         movsxd rdx, edx	      1252	refs.c	FUNCTION_63	FOR_1
0x4003398	        0x48c1e204	                              shl rdx, 4	      1252	refs.c	FUNCTION_63	FOR_1
0x400339c	          0x4801d0	                            add rax, rdx	      1252	refs.c	FUNCTION_63	FOR_1
0x400339f	          0x488b00	                    mov rax, qword [rax]	      1252	refs.c	FUNCTION_63	FOR_1
0x40033a2	        0x488945e8	             mov qword [rbp - 0x18], rax	      1252	refs.c	FUNCTION_63	FOR_1
0x40033a6	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1254	refs.c	FUNCTION_63	FOR_1
0x40033ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1257	refs.c	FUNCTION_63	FOR_1	IF_2
0x40033b1	           0xfb600	                   movzx eax, byte [rax]	      1257	refs.c	FUNCTION_63	FOR_1	IF_2
0x40033b4	            0x3c21	                            cmp al, 0x21	      1257	refs.c	FUNCTION_63	FOR_1	IF_2
0x40033b6	            0x750c	                           jne 0x40033c4	      1257	refs.c	FUNCTION_63	FOR_1	IF_2
0x40033b8	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      1258	refs.c	FUNCTION_63	FOR_1	IF_2
0x40033bf	      0x488345e801	               add qword [rbp - 0x18], 1	      1259	refs.c	FUNCTION_63	FOR_1	IF_2
0x40033c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1262	refs.c	FUNCTION_63	FOR_1	IF_3
0x40033c8	           0xfb600	                   movzx eax, byte [rax]	      1262	refs.c	FUNCTION_63	FOR_1	IF_3
0x40033cb	            0x3c5e	                            cmp al, 0x5e	      1262	refs.c	FUNCTION_63	FOR_1	IF_3
0x40033cd	            0x750f	                           jne 0x40033de	      1262	refs.c	FUNCTION_63	FOR_1	IF_3
0x40033cf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1263	refs.c	FUNCTION_63	FOR_1	IF_3
0x40033d3	        0x488945f0	             mov qword [rbp - 0x10], rax	      1263	refs.c	FUNCTION_63	FOR_1	IF_3
0x40033d7	      0x488345e801	               add qword [rbp - 0x18], 1	      1264	refs.c	FUNCTION_63	FOR_1	IF_3
0x40033dc	            0xeb08	                           jmp 0x40033e6	      1264	refs.c	FUNCTION_63	FOR_1	IF_3
0x40033de	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1266	refs.c	FUNCTION_63	FOR_1	ELSE_1
0x40033e2	        0x488945f0	             mov qword [rbp - 0x10], rax	      1266	refs.c	FUNCTION_63	FOR_1	ELSE_1
0x40033e6	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1270	refs.c	FUNCTION_63	FOR_1	IF_4
0x40033eb	            0x743d	                            je 0x400342a	      1270	refs.c	FUNCTION_63	FOR_1	IF_4
0x40033ed	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x40033f1	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x40033f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x40033f9	          0x4889ce	                            mov rsi, rcx	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x40033fc	          0x4889c7	                            mov rdi, rax	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x40033ff	      0xe85accffff	                    call sym.skip_prefix	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x4003404	            0x85c0	                           test eax, eax	      1270	refs.c	FUNCTION_63	FOR_1	IF_4
0x4003406	            0x7422	                            je 0x400342a	      1270	refs.c	FUNCTION_63	FOR_1	IF_4
0x4003408	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1272	refs.c	FUNCTION_63	FOR_1	IF_4
0x400340c	           0xfb600	                   movzx eax, byte [rax]	      1272	refs.c	FUNCTION_63	FOR_1	IF_4
0x400340f	            0x84c0	                             test al, al	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x4003411	            0x740b	                            je 0x400341e	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x4003413	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1272	refs.c	FUNCTION_63	FOR_1	IF_4
0x4003417	           0xfb600	                   movzx eax, byte [rax]	      1272	refs.c	FUNCTION_63	FOR_1	IF_4
0x400341a	            0x3c2f	                            cmp al, 0x2f	      1272	refs.c	FUNCTION_63	FOR_1	IF_4
0x400341c	            0x750c	                           jne 0x400342a	      1272	refs.c	FUNCTION_63	FOR_1	IF_4
0x400341e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1273	refs.c	FUNCTION_63	FOR_1	IF_4
0x4003422	           0xf94c0	                                 sete al	      1273	refs.c	FUNCTION_63	FOR_1	IF_4
0x4003425	           0xfb6c0	                           movzx eax, al	      1273	refs.c	FUNCTION_63	FOR_1	IF_4
0x4003428	            0xeb13	                           jmp 0x400343d	      1273	refs.c	FUNCTION_63	FOR_1	IF_4
0x400342a	        0x836dd801	               sub dword [rbp - 0x28], 1	      1251	refs.c	FUNCTION_63	FOR_1
0x400342e	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1251	refs.c	FUNCTION_63	FOR_1
0x4003432	     0xf8950ffffff	                           jns 0x4003388	      1251	refs.c	FUNCTION_63	FOR_1
0x4003438	      0xb800000000	                              mov eax, 0	      1275	refs.c	FUNCTION_63
0x400343d	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1276	refs.c	FUNCTION_63
0x4003441	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1276	refs.c	FUNCTION_63
0x400344a	            0x7405	                            je 0x4003451	      1276	refs.c	FUNCTION_63
0x400344c	      0xe800000000	                          call 0x4003451	      1276	refs.c	FUNCTION_63
0x4003451	              0xc9	                                   leave	      1276	refs.c	FUNCTION_63
0x4003452	              0xc3	                                     ret	      1276	refs.c	FUNCTION_63
refs_delete_ref	IF,2:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,11:functions,0	89
0x4001e95	              0x55	                                push rbp	       744	refs.c	FUNCTION_43
0x4001e96	          0x4889e5	                            mov rbp, rsp	       744	refs.c	FUNCTION_43
0x4001e99	        0x4883ec60	                           sub rsp, 0x60	       744	refs.c	FUNCTION_43
0x4001e9d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       744	refs.c	FUNCTION_43
0x4001ea1	        0x488975c0	             mov qword [rbp - 0x40], rsi	       744	refs.c	FUNCTION_43
0x4001ea5	        0x488955b8	             mov qword [rbp - 0x48], rdx	       744	refs.c	FUNCTION_43
0x4001ea9	        0x48894db0	             mov qword [rbp - 0x50], rcx	       744	refs.c	FUNCTION_43
0x4001ead	        0x448945ac	             mov dword [rbp - 0x54], r8d	       744	refs.c	FUNCTION_43
0x4001eb1	    0x64488b042528	                mov rax, qword fs:[0x28]	       744	refs.c	FUNCTION_43
0x4001eba	        0x488945f8	                mov qword [rbp - 8], rax	       744	refs.c	FUNCTION_43
0x4001ebe	            0x31c0	                            xor eax, eax	       744	refs.c	FUNCTION_43
0x4001ec0	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       746	refs.c	FUNCTION_43
0x4001ec8	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       746	refs.c	FUNCTION_43
0x4001ed0	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       746	refs.c	FUNCTION_43
0x4001ed8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       748	refs.c	FUNCTION_43	IF_1	CALL_1
0x4001edc	          0x4889c7	                            mov rdi, rax	       748	refs.c	FUNCTION_43	IF_1	CALL_1
0x4001edf	      0xe800000000	                          call 0x4001ee4	       748	refs.c	FUNCTION_43	IF_1	CALL_1
0x4001ee4	          0x83f801	                              cmp eax, 1	       748	refs.c	FUNCTION_43	IF_1	CALL_1
0x4001ee7	            0x7546	                           jne 0x4001f2f	       748	refs.c	FUNCTION_43	IF_1	CALL_1
0x4001ee9	    0x488b05000000	            mov rax, qword [0x04001ef0] 	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4001ef0	          0x4889c7	                            mov rdi, rax	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4001ef3	      0xe800000000	                          call 0x4001ef8	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4001ef8	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4001efc	            0x7419	                            je 0x4001f17	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4001efe	      0xb900000000	                              mov ecx, 0	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4001f03	      0xbaed020000	                          mov edx, 0x2ed	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4001f08	      0xbe00000000	                              mov esi, 0	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4001f0d	      0xbf00000000	                              mov edi, 0	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4001f12	      0xe800000000	                          call 0x4001f17	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4001f17	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       750	refs.c	FUNCTION_43	IF_1	CALL_4
0x4001f1b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       750	refs.c	FUNCTION_43	IF_1	CALL_4
0x4001f1f	          0x4889d6	                            mov rsi, rdx	       750	refs.c	FUNCTION_43	IF_1	CALL_4
0x4001f22	          0x4889c7	                            mov rdi, rax	       750	refs.c	FUNCTION_43	IF_1	CALL_4
0x4001f25	      0xe81efeffff	               call sym.delete_pseudoref	       750	refs.c	FUNCTION_43	IF_1	CALL_4
0x4001f2a	      0xe9b5000000	                           jmp 0x4001fe4	       750	refs.c	FUNCTION_43	IF_1	CALL_4
0x4001f2f	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       753	refs.c	FUNCTION_43	CALL_5
0x4001f33	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       753	refs.c	FUNCTION_43	CALL_5
0x4001f37	          0x4889d6	                            mov rsi, rdx	       753	refs.c	FUNCTION_43	CALL_5
0x4001f3a	          0x4889c7	                            mov rdi, rax	       753	refs.c	FUNCTION_43	CALL_5
0x4001f3d	      0xe800000000	                          call 0x4001f42	       753	refs.c	FUNCTION_43	CALL_5
0x4001f42	        0x488945d8	             mov qword [rbp - 0x28], rax	       753	refs.c	FUNCTION_43	CALL_5
0x4001f46	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       754	refs.c	FUNCTION_43	IF_2
0x4001f4b	            0x7440	                            je 0x4001f8d	       754	refs.c	FUNCTION_43	IF_2
0x4001f4d	        0x4c8d45e0	                    lea r8, [rbp - 0x20]	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4001f51	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4001f55	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4001f58	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4001f5c	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4001f60	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4001f64	          0x4d89c1	                              mov r9, r8	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4001f67	          0x4989f8	                             mov r8, rdi	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4001f6a	          0x4889c7	                            mov rdi, rax	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4001f6d	      0xe800000000	                          call 0x4001f72	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4001f72	            0x85c0	                           test eax, eax	       754	refs.c	FUNCTION_43	IF_2
0x4001f74	            0x7517	                           jne 0x4001f8d	       754	refs.c	FUNCTION_43	IF_2
0x4001f76	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x4001f7a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x4001f7e	          0x4889d6	                            mov rsi, rdx	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x4001f81	          0x4889c7	                            mov rdi, rax	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x4001f84	      0xe800000000	                          call 0x4001f89	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x4001f89	            0x85c0	                           test eax, eax	       756	refs.c	FUNCTION_43	IF_2
0x4001f8b	            0x743a	                            je 0x4001fc7	       756	refs.c	FUNCTION_43	IF_2
0x4001f8d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       758	refs.c	FUNCTION_43	IF_2
0x4001f91	          0x4889c6	                            mov rsi, rax	       758	refs.c	FUNCTION_43	IF_2
0x4001f94	      0xbf00000000	                              mov edi, 0	       758	refs.c	FUNCTION_43	IF_2
0x4001f99	      0xb800000000	                              mov eax, 0	       758	refs.c	FUNCTION_43	IF_2
0x4001f9e	      0xe800000000	                          call 0x4001fa3	       758	refs.c	FUNCTION_43	IF_2
0x4001fa3	      0xe8abe0ffff	                    call sym.const_error	       758	refs.c	FUNCTION_43	IF_2
0x4001fa8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       759	refs.c	FUNCTION_43	IF_2	CALL_8
0x4001fac	          0x4889c7	                            mov rdi, rax	       759	refs.c	FUNCTION_43	IF_2	CALL_8
0x4001faf	      0xe800000000	                          call 0x4001fb4	       759	refs.c	FUNCTION_43	IF_2	CALL_8
0x4001fb4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       760	refs.c	FUNCTION_43	IF_2	CALL_9
0x4001fb8	          0x4889c7	                            mov rdi, rax	       760	refs.c	FUNCTION_43	IF_2	CALL_9
0x4001fbb	      0xe800000000	                          call 0x4001fc0	       760	refs.c	FUNCTION_43	IF_2	CALL_9
0x4001fc0	      0xb801000000	                              mov eax, 1	       761	refs.c	FUNCTION_43	IF_2
0x4001fc5	            0xeb1d	                           jmp 0x4001fe4	       761	refs.c	FUNCTION_43	IF_2
0x4001fc7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       763	refs.c	FUNCTION_43	CALL_10
0x4001fcb	          0x4889c7	                            mov rdi, rax	       763	refs.c	FUNCTION_43	CALL_10
0x4001fce	      0xe800000000	                          call 0x4001fd3	       763	refs.c	FUNCTION_43	CALL_10
0x4001fd3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       764	refs.c	FUNCTION_43	CALL_11
0x4001fd7	          0x4889c7	                            mov rdi, rax	       764	refs.c	FUNCTION_43	CALL_11
0x4001fda	      0xe800000000	                          call 0x4001fdf	       764	refs.c	FUNCTION_43	CALL_11
0x4001fdf	      0xb800000000	                              mov eax, 0	       765	refs.c	FUNCTION_43
0x4001fe4	        0x488b4df8	                mov rcx, qword [rbp - 8]	       766	refs.c	FUNCTION_43
0x4001fe8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       766	refs.c	FUNCTION_43
0x4001ff1	            0x7405	                            je 0x4001ff8	       766	refs.c	FUNCTION_43
0x4001ff3	      0xe800000000	                          call 0x4001ff8	       766	refs.c	FUNCTION_43
0x4001ff8	              0xc9	                                   leave	       766	refs.c	FUNCTION_43
0x4001ff9	              0xc3	                                     ret	       766	refs.c	FUNCTION_43
ref_exists	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	15
0x4000b8e	              0x55	                                push rbp	       243	refs.c	FUNCTION_12
0x4000b8f	          0x4889e5	                            mov rbp, rsp	       243	refs.c	FUNCTION_12
0x4000b92	        0x4883ec10	                           sub rsp, 0x10	       243	refs.c	FUNCTION_12
0x4000b96	        0x48897df8	                mov qword [rbp - 8], rdi	       243	refs.c	FUNCTION_12
0x4000b9a	        0x488b45f8	                mov rax, qword [rbp - 8]	       244	refs.c	FUNCTION_12	CALL_1
0x4000b9e	      0xb900000000	                              mov ecx, 0	       244	refs.c	FUNCTION_12	CALL_1
0x4000ba3	      0xba00000000	                              mov edx, 0	       244	refs.c	FUNCTION_12	CALL_1
0x4000ba8	      0xbe01000000	                              mov esi, 1	       244	refs.c	FUNCTION_12	CALL_1
0x4000bad	          0x4889c7	                            mov rdi, rax	       244	refs.c	FUNCTION_12	CALL_1
0x4000bb0	      0xe800000000	                          call 0x4000bb5	       244	refs.c	FUNCTION_12	CALL_1
0x4000bb5	          0x4885c0	                           test rax, rax	       244	refs.c	FUNCTION_12	CALL_1
0x4000bb8	           0xf95c0	                                setne al	       244	refs.c	FUNCTION_12	CALL_1
0x4000bbb	           0xfb6c0	                           movzx eax, al	       244	refs.c	FUNCTION_12	CALL_1
0x4000bbe	              0xc9	                                   leave	       245	refs.c	FUNCTION_12
0x4000bbf	              0xc3	                                     ret	       245	refs.c	FUNCTION_12
head_ref_namespaced	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,5:functions,0	44
0x4001183	              0x55	                                push rbp	       404	refs.c	FUNCTION_26
0x4001184	          0x4889e5	                            mov rbp, rsp	       404	refs.c	FUNCTION_26
0x4001187	        0x4883ec60	                           sub rsp, 0x60	       404	refs.c	FUNCTION_26
0x400118b	        0x48897da8	             mov qword [rbp - 0x58], rdi	       404	refs.c	FUNCTION_26
0x400118f	        0x488975a0	             mov qword [rbp - 0x60], rsi	       404	refs.c	FUNCTION_26
0x4001193	    0x64488b042528	                mov rax, qword fs:[0x28]	       404	refs.c	FUNCTION_26
0x400119c	        0x488945f8	                mov qword [rbp - 8], rax	       404	refs.c	FUNCTION_26
0x40011a0	            0x31c0	                            xor eax, eax	       404	refs.c	FUNCTION_26
0x40011a2	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       405	refs.c	FUNCTION_26
0x40011aa	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       405	refs.c	FUNCTION_26
0x40011b2	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       405	refs.c	FUNCTION_26
0x40011ba	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       406	refs.c	FUNCTION_26
0x40011c1	      0xe800000000	                          call 0x40011c6	       410	refs.c	FUNCTION_26	CALL_2
0x40011c6	          0x4889c2	                            mov rdx, rax	       410	refs.c	FUNCTION_26	CALL_2
0x40011c9	        0x488d45c0	                   lea rax, [rbp - 0x40]	       410	refs.c	FUNCTION_26	CALL_2
0x40011cd	      0xbe00000000	                              mov esi, 0	       410	refs.c	FUNCTION_26	CALL_2
0x40011d2	          0x4889c7	                            mov rdi, rax	       410	refs.c	FUNCTION_26	CALL_2
0x40011d5	      0xb800000000	                              mov eax, 0	       410	refs.c	FUNCTION_26	CALL_2
0x40011da	      0xe800000000	                          call 0x40011df	       410	refs.c	FUNCTION_26	CALL_2
0x40011df	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x40011e3	        0x488d4db8	                   lea rcx, [rbp - 0x48]	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x40011e7	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x40011eb	      0xbe01000000	                              mov esi, 1	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x40011f0	          0x4889c7	                            mov rdi, rax	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x40011f3	      0xe800000000	                          call 0x40011f8	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x40011f8	            0x85c0	                           test eax, eax	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x40011fa	            0x7518	                           jne 0x4001214	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x40011fc	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       412	refs.c	FUNCTION_26	CALL_4
0x40011ff	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	       412	refs.c	FUNCTION_26	CALL_4
0x4001203	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       412	refs.c	FUNCTION_26	CALL_4
0x4001207	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       412	refs.c	FUNCTION_26	CALL_4
0x400120b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       412	refs.c	FUNCTION_26	CALL_4
0x400120f	            0xffd0	                                call rax	       412	refs.c	FUNCTION_26	CALL_4
0x4001211	          0x8945bc	             mov dword [rbp - 0x44], eax	       412	refs.c	FUNCTION_26	CALL_4
0x4001214	        0x488d45c0	                   lea rax, [rbp - 0x40]	       413	refs.c	FUNCTION_26	CALL_5
0x4001218	          0x4889c7	                            mov rdi, rax	       413	refs.c	FUNCTION_26	CALL_5
0x400121b	      0xe800000000	                          call 0x4001220	       413	refs.c	FUNCTION_26	CALL_5
0x4001220	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       415	refs.c	FUNCTION_26
0x4001223	        0x488b4df8	                mov rcx, qword [rbp - 8]	       416	refs.c	FUNCTION_26
0x4001227	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       416	refs.c	FUNCTION_26
0x4001230	            0x7405	                            je 0x4001237	       416	refs.c	FUNCTION_26
0x4001232	      0xe800000000	                          call 0x4001237	       416	refs.c	FUNCTION_26
0x4001237	              0xc9	                                   leave	       416	refs.c	FUNCTION_26
0x4001238	              0xc3	                                     ret	       416	refs.c	FUNCTION_26
refs_for_each_reflog_ent_reverse	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	17
0x4004c4f	              0x55	                                push rbp	      2032	refs.c	FUNCTION_106
0x4004c50	          0x4889e5	                            mov rbp, rsp	      2032	refs.c	FUNCTION_106
0x4004c53	        0x4883ec20	                           sub rsp, 0x20	      2032	refs.c	FUNCTION_106
0x4004c57	        0x48897df8	                mov qword [rbp - 8], rdi	      2032	refs.c	FUNCTION_106
0x4004c5b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2032	refs.c	FUNCTION_106
0x4004c5f	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2032	refs.c	FUNCTION_106
0x4004c63	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2032	refs.c	FUNCTION_106
0x4004c67	        0x488b45f8	                mov rax, qword [rbp - 8]	      2033	refs.c	FUNCTION_106	CALL_1
0x4004c6b	          0x488b00	                    mov rax, qword [rax]	      2033	refs.c	FUNCTION_106	CALL_1
0x4004c6e	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2033	refs.c	FUNCTION_106	CALL_1
0x4004c75	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2033	refs.c	FUNCTION_106	CALL_1
0x4004c79	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2033	refs.c	FUNCTION_106	CALL_1
0x4004c7d	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2033	refs.c	FUNCTION_106	CALL_1
0x4004c81	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2033	refs.c	FUNCTION_106	CALL_1
0x4004c85	            0xffd0	                                call rax	      2033	refs.c	FUNCTION_106	CALL_1
0x4004c87	              0xc9	                                   leave	      2035	refs.c	FUNCTION_106
0x4004c88	              0xc3	                                     ret	      2035	refs.c	FUNCTION_106
refs_create_reflog	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	17
0x4004d9a	              0x55	                                push rbp	      2069	refs.c	FUNCTION_112
0x4004d9b	          0x4889e5	                            mov rbp, rsp	      2069	refs.c	FUNCTION_112
0x4004d9e	        0x4883ec20	                           sub rsp, 0x20	      2069	refs.c	FUNCTION_112
0x4004da2	        0x48897df8	                mov qword [rbp - 8], rdi	      2069	refs.c	FUNCTION_112
0x4004da6	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2069	refs.c	FUNCTION_112
0x4004daa	          0x8955ec	             mov dword [rbp - 0x14], edx	      2069	refs.c	FUNCTION_112
0x4004dad	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2069	refs.c	FUNCTION_112
0x4004db1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2070	refs.c	FUNCTION_112	CALL_1
0x4004db5	          0x488b00	                    mov rax, qword [rax]	      2070	refs.c	FUNCTION_112	CALL_1
0x4004db8	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2070	refs.c	FUNCTION_112	CALL_1
0x4004dbf	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2070	refs.c	FUNCTION_112	CALL_1
0x4004dc3	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2070	refs.c	FUNCTION_112	CALL_1
0x4004dc6	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2070	refs.c	FUNCTION_112	CALL_1
0x4004dca	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2070	refs.c	FUNCTION_112	CALL_1
0x4004dce	            0xffd0	                                call rax	      2070	refs.c	FUNCTION_112	CALL_1
0x4004dd0	              0xc9	                                   leave	      2071	refs.c	FUNCTION_112
0x4004dd1	              0xc3	                                     ret	      2071	refs.c	FUNCTION_112
refs_for_each_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	17
0x40037c5	              0x55	                                push rbp	      1392	refs.c	FUNCTION_70
0x40037c6	          0x4889e5	                            mov rbp, rsp	      1392	refs.c	FUNCTION_70
0x40037c9	        0x4883ec20	                           sub rsp, 0x20	      1392	refs.c	FUNCTION_70
0x40037cd	        0x48897df8	                mov qword [rbp - 8], rdi	      1392	refs.c	FUNCTION_70
0x40037d1	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1392	refs.c	FUNCTION_70
0x40037d5	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1392	refs.c	FUNCTION_70
0x40037d9	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1393	refs.c	FUNCTION_70	CALL_1
0x40037dd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1393	refs.c	FUNCTION_70	CALL_1
0x40037e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1393	refs.c	FUNCTION_70	CALL_1
0x40037e5	          0x4989c9	                             mov r9, rcx	      1393	refs.c	FUNCTION_70	CALL_1
0x40037e8	    0x41b800000000	                              mov r8d, 0	      1393	refs.c	FUNCTION_70	CALL_1
0x40037ee	      0xb900000000	                              mov ecx, 0	      1393	refs.c	FUNCTION_70	CALL_1
0x40037f3	      0xbe00000000	                              mov esi, 0	      1393	refs.c	FUNCTION_70	CALL_1
0x40037f8	          0x4889c7	                            mov rdi, rax	      1393	refs.c	FUNCTION_70	CALL_1
0x40037fb	      0xe865ffffff	                call sym.do_for_each_ref	      1393	refs.c	FUNCTION_70	CALL_1
0x4003800	              0xc9	                                   leave	      1394	refs.c	FUNCTION_70
0x4003801	              0xc3	                                     ret	      1394	refs.c	FUNCTION_70
warn_dangling_symrefs	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	27
0x4000fe6	              0x55	                                push rbp	       363	refs.c	FUNCTION_19
0x4000fe7	          0x4889e5	                            mov rbp, rsp	       363	refs.c	FUNCTION_19
0x4000fea	        0x4883ec50	                           sub rsp, 0x50	       363	refs.c	FUNCTION_19
0x4000fee	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       363	refs.c	FUNCTION_19
0x4000ff2	        0x488975c0	             mov qword [rbp - 0x40], rsi	       363	refs.c	FUNCTION_19
0x4000ff6	        0x488955b8	             mov qword [rbp - 0x48], rdx	       363	refs.c	FUNCTION_19
0x4000ffa	    0x64488b042528	                mov rax, qword fs:[0x28]	       363	refs.c	FUNCTION_19
0x4001003	        0x488945f8	                mov qword [rbp - 8], rax	       363	refs.c	FUNCTION_19
0x4001007	            0x31c0	                            xor eax, eax	       363	refs.c	FUNCTION_19
0x4001009	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       366	refs.c	FUNCTION_19
0x400100d	        0x488945d0	             mov qword [rbp - 0x30], rax	       366	refs.c	FUNCTION_19
0x4001011	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       367	refs.c	FUNCTION_19
0x4001019	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       368	refs.c	FUNCTION_19
0x400101d	        0x488945e0	             mov qword [rbp - 0x20], rax	       368	refs.c	FUNCTION_19
0x4001021	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       369	refs.c	FUNCTION_19
0x4001025	        0x488945e8	             mov qword [rbp - 0x18], rax	       369	refs.c	FUNCTION_19
0x4001029	        0x488d45d0	                   lea rax, [rbp - 0x30]	       370	refs.c	FUNCTION_19	CALL_1
0x400102d	          0x4889c6	                            mov rsi, rax	       370	refs.c	FUNCTION_19	CALL_1
0x4001030	      0xbf00000000	                              mov edi, 0	       370	refs.c	FUNCTION_19	CALL_1
0x4001035	      0xe800000000	                          call 0x400103a	       370	refs.c	FUNCTION_19	CALL_1
0x400103a	              0x90	                                     nop	       371	refs.c	FUNCTION_19
0x400103b	        0x488b45f8	                mov rax, qword [rbp - 8]	       371	refs.c	FUNCTION_19
0x400103f	    0x644833042528	                xor rax, qword fs:[0x28]	       371	refs.c	FUNCTION_19
0x4001048	            0x7405	                            je 0x400104f	       371	refs.c	FUNCTION_19
0x400104a	      0xe800000000	                          call 0x400104f	       371	refs.c	FUNCTION_19
0x400104f	              0xc9	                                   leave	       371	refs.c	FUNCTION_19
0x4001050	              0xc3	                                     ret	       371	refs.c	FUNCTION_19
for_each_ref_in	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	17
0x4003884	              0x55	                                push rbp	      1408	refs.c	FUNCTION_73
0x4003885	          0x4889e5	                            mov rbp, rsp	      1408	refs.c	FUNCTION_73
0x4003888	        0x4883ec20	                           sub rsp, 0x20	      1408	refs.c	FUNCTION_73
0x400388c	        0x48897df8	                mov qword [rbp - 8], rdi	      1408	refs.c	FUNCTION_73
0x4003890	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1408	refs.c	FUNCTION_73
0x4003894	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1408	refs.c	FUNCTION_73
0x4003898	    0x488b05000000	            mov rax, qword [0x0400389f] 	      1409	refs.c	FUNCTION_73	CALL_2
0x400389f	          0x4889c7	                            mov rdi, rax	      1409	refs.c	FUNCTION_73	CALL_2
0x40038a2	      0xe800000000	                          call 0x40038a7	      1409	refs.c	FUNCTION_73	CALL_2
0x40038a7	          0x4889c7	                            mov rdi, rax	      1409	refs.c	FUNCTION_73	CALL_2
0x40038aa	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1409	refs.c	FUNCTION_73	CALL_2
0x40038ae	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1409	refs.c	FUNCTION_73	CALL_2
0x40038b2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1409	refs.c	FUNCTION_73	CALL_2
0x40038b6	          0x4889c6	                            mov rsi, rax	      1409	refs.c	FUNCTION_73	CALL_2
0x40038b9	      0xe800000000	                          call 0x40038be	      1409	refs.c	FUNCTION_73	CALL_2
0x40038be	              0xc9	                                   leave	      1410	refs.c	FUNCTION_73
0x40038bf	              0xc3	                                     ret	      1410	refs.c	FUNCTION_73
ref_store_transaction_begin	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	22
0x40026eb	              0x55	                                push rbp	       936	refs.c	FUNCTION_51
0x40026ec	          0x4889e5	                            mov rbp, rsp	       936	refs.c	FUNCTION_51
0x40026ef	        0x4883ec20	                           sub rsp, 0x20	       936	refs.c	FUNCTION_51
0x40026f3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       936	refs.c	FUNCTION_51
0x40026f7	        0x488975e0	             mov qword [rbp - 0x20], rsi	       936	refs.c	FUNCTION_51
0x40026fb	      0x48837de000	               cmp qword [rbp - 0x20], 0	       938	refs.c	FUNCTION_51	CALL_1
0x4002700	            0x7519	                           jne 0x400271b	       938	refs.c	FUNCTION_51	CALL_1
0x4002702	      0xb900000000	                              mov ecx, 0	       938	refs.c	FUNCTION_51	CALL_1
0x4002707	      0xbaaa030000	                          mov edx, 0x3aa	       938	refs.c	FUNCTION_51	CALL_1
0x400270c	      0xbe00000000	                              mov esi, 0	       938	refs.c	FUNCTION_51	CALL_1
0x4002711	      0xbf00000000	                              mov edi, 0	       938	refs.c	FUNCTION_51	CALL_1
0x4002716	      0xe800000000	                          call 0x400271b	       938	refs.c	FUNCTION_51	CALL_1
0x400271b	      0xbe30000000	                           mov esi, 0x30	       940	refs.c	FUNCTION_51	CALL_2
0x4002720	      0xbf01000000	                              mov edi, 1	       940	refs.c	FUNCTION_51	CALL_2
0x4002725	      0xe800000000	                          call 0x400272a	       940	refs.c	FUNCTION_51	CALL_2
0x400272a	        0x488945f8	                mov qword [rbp - 8], rax	       940	refs.c	FUNCTION_51	CALL_2
0x400272e	        0x488b45f8	                mov rax, qword [rbp - 8]	       941	refs.c	FUNCTION_51
0x4002732	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       941	refs.c	FUNCTION_51
0x4002736	          0x488910	                    mov qword [rax], rdx	       941	refs.c	FUNCTION_51
0x4002739	        0x488b45f8	                mov rax, qword [rbp - 8]	       942	refs.c	FUNCTION_51
0x400273d	              0xc9	                                   leave	       943	refs.c	FUNCTION_51
0x400273e	              0xc3	                                     ret	       943	refs.c	FUNCTION_51
parse_hide_refs_config	IF,3:ELSE,0:FOR,0:WHILE,1:SWITCH,0:DO,0:CALL,8:functions,0	86
0x40031f1	              0x55	                                push rbp	      1222	refs.c	FUNCTION_62
0x40031f2	          0x4889e5	                            mov rbp, rsp	      1222	refs.c	FUNCTION_62
0x40031f5	        0x4883ec40	                           sub rsp, 0x40	      1222	refs.c	FUNCTION_62
0x40031f9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1222	refs.c	FUNCTION_62
0x40031fd	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1222	refs.c	FUNCTION_62
0x4003201	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1222	refs.c	FUNCTION_62
0x4003205	    0x64488b042528	                mov rax, qword fs:[0x28]	      1222	refs.c	FUNCTION_62
0x400320e	        0x488945f8	                mov qword [rbp - 8], rax	      1222	refs.c	FUNCTION_62
0x4003212	            0x31c0	                            xor eax, eax	      1222	refs.c	FUNCTION_62
0x4003214	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003218	          0x4889c6	                            mov rsi, rax	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x400321b	      0xbf00000000	                              mov edi, 0	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003220	      0xe800000000	                          call 0x4003225	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003225	            0x85c0	                           test eax, eax	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003227	            0x7442	                            je 0x400326b	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003229	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x400322d	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x4003231	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x4003235	          0x4989d0	                             mov r8, rdx	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x4003238	      0xb900000000	                              mov ecx, 0	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x400323d	      0xba00000000	                              mov edx, 0	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x4003242	          0x4889c7	                            mov rdi, rax	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x4003245	      0xe800000000	                          call 0x400324a	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x400324a	            0x85c0	                           test eax, eax	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x400324c	     0xf85d1000000	                           jne 0x4003323	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003252	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1226	refs.c	FUNCTION_62	IF_1	CALL_3
0x4003256	      0xbe00000000	                              mov esi, 0	      1226	refs.c	FUNCTION_62	IF_1	CALL_3
0x400325b	          0x4889c7	                            mov rdi, rax	      1226	refs.c	FUNCTION_62	IF_1	CALL_3
0x400325e	      0xe800000000	                          call 0x4003263	      1226	refs.c	FUNCTION_62	IF_1	CALL_3
0x4003263	            0x85c0	                           test eax, eax	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x4003265	     0xf85b8000000	                           jne 0x4003323	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x400326b	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1230	refs.c	FUNCTION_62	IF_1	IF_2
0x4003270	            0x7516	                           jne 0x4003288	      1230	refs.c	FUNCTION_62	IF_1	IF_2
0x4003272	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1231	refs.c	FUNCTION_62	IF_1	CALL_4
0x4003276	          0x4889c7	                            mov rdi, rax	      1231	refs.c	FUNCTION_62	IF_1	CALL_4
0x4003279	      0xe800000000	                          call 0x400327e	      1231	refs.c	FUNCTION_62	IF_1	CALL_4
0x400327e	      0xe8d0cdffff	                    call sym.const_error	      1231	refs.c	FUNCTION_62	IF_1	CALL_4
0x4003283	      0xe9a0000000	                           jmp 0x4003328	      1231	refs.c	FUNCTION_62	IF_1	CALL_4
0x4003288	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1232	refs.c	FUNCTION_62	IF_1	CALL_5
0x400328c	          0x4889c7	                            mov rdi, rax	      1232	refs.c	FUNCTION_62	IF_1	CALL_5
0x400328f	      0xe800000000	                          call 0x4003294	      1232	refs.c	FUNCTION_62	IF_1	CALL_5
0x4003294	        0x488945f0	             mov qword [rbp - 0x10], rax	      1232	refs.c	FUNCTION_62	IF_1	CALL_5
0x4003298	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1233	refs.c	FUNCTION_62	IF_1	CALL_6
0x400329c	          0x4889c7	                            mov rdi, rax	      1233	refs.c	FUNCTION_62	IF_1	CALL_6
0x400329f	      0xe800000000	                          call 0x40032a4	      1233	refs.c	FUNCTION_62	IF_1	CALL_6
0x40032a4	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1233	refs.c	FUNCTION_62	IF_1	CALL_6
0x40032a7	            0xeb14	                           jmp 0x40032bd	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032a9	        0x836de401	               sub dword [rbp - 0x1c], 1	      1235	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032ad	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1235	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032b0	          0x4863d0	                         movsxd rdx, eax	      1235	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1235	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032b7	          0x4801d0	                            add rax, rdx	      1235	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032ba	          0xc60000	                       mov byte [rax], 0	      1235	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032bd	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032c1	            0x7417	                            je 0x40032da	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032c3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032c6	            0x4898	                                    cdqe	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032c8	        0x488d50ff	                      lea rdx, [rax - 1]	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032cc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032d0	          0x4801d0	                            add rax, rdx	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032d3	           0xfb600	                   movzx eax, byte [rax]	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032d6	            0x3c2f	                            cmp al, 0x2f	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032d8	            0x74cf	                            je 0x40032a9	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x40032da	    0x488b05000000	            mov rax, qword [0x040032e1] 	      1236	refs.c	FUNCTION_62	IF_1	IF_3
0x40032e1	          0x4885c0	                           test rax, rax	      1236	refs.c	FUNCTION_62	IF_1	IF_3
0x40032e4	            0x7527	                           jne 0x400330d	      1236	refs.c	FUNCTION_62	IF_1	IF_3
0x40032e6	      0xbe20000000	                           mov esi, 0x20	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_7
0x40032eb	      0xbf01000000	                              mov edi, 1	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_7
0x40032f0	      0xe800000000	                          call 0x40032f5	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_7
0x40032f5	    0x488905000000	            mov qword [0x040032fc], rax 	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_7
0x40032fc	    0x488b05000000	            mov rax, qword [0x04003303] 	      1238	refs.c	FUNCTION_62	IF_1	IF_3
0x4003303	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      1238	refs.c	FUNCTION_62	IF_1	IF_3
0x4003307	          0x83ca01	                               or edx, 1	      1238	refs.c	FUNCTION_62	IF_1	IF_3
0x400330a	          0x885010	               mov byte [rax + 0x10], dl	      1238	refs.c	FUNCTION_62	IF_1	IF_3
0x400330d	    0x488b05000000	            mov rax, qword [0x04003314] 	      1240	refs.c	FUNCTION_62	IF_1	CALL_8
0x4003314	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1240	refs.c	FUNCTION_62	IF_1	CALL_8
0x4003318	          0x4889d6	                            mov rsi, rdx	      1240	refs.c	FUNCTION_62	IF_1	CALL_8
0x400331b	          0x4889c7	                            mov rdi, rax	      1240	refs.c	FUNCTION_62	IF_1	CALL_8
0x400331e	      0xe800000000	                          call 0x4003323	      1240	refs.c	FUNCTION_62	IF_1	CALL_8
0x4003323	      0xb800000000	                              mov eax, 0	      1242	refs.c	FUNCTION_62
0x4003328	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1243	refs.c	FUNCTION_62
0x400332c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1243	refs.c	FUNCTION_62
0x4003335	            0x7405	                            je 0x400333c	      1243	refs.c	FUNCTION_62
0x4003337	      0xe800000000	                          call 0x400333c	      1243	refs.c	FUNCTION_62
0x400333c	              0xc9	                                   leave	      1243	refs.c	FUNCTION_62
0x400333d	              0xc3	                                     ret	      1243	refs.c	FUNCTION_62
refs_pack_refs	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	15
0x4004415	              0x55	                                push rbp	      1773	refs.c	FUNCTION_94
0x4004416	          0x4889e5	                            mov rbp, rsp	      1773	refs.c	FUNCTION_94
0x4004419	        0x4883ec10	                           sub rsp, 0x10	      1773	refs.c	FUNCTION_94
0x400441d	        0x48897df8	                mov qword [rbp - 8], rdi	      1773	refs.c	FUNCTION_94
0x4004421	          0x8975f4	              mov dword [rbp - 0xc], esi	      1773	refs.c	FUNCTION_94
0x4004424	        0x488b45f8	                mov rax, qword [rbp - 8]	      1774	refs.c	FUNCTION_94	CALL_1
0x4004428	          0x488b00	                    mov rax, qword [rax]	      1774	refs.c	FUNCTION_94	CALL_1
0x400442b	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1774	refs.c	FUNCTION_94	CALL_1
0x400442f	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1774	refs.c	FUNCTION_94	CALL_1
0x4004432	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1774	refs.c	FUNCTION_94	CALL_1
0x4004436	            0x89ce	                            mov esi, ecx	      1774	refs.c	FUNCTION_94	CALL_1
0x4004438	          0x4889d7	                            mov rdi, rdx	      1774	refs.c	FUNCTION_94	CALL_1
0x400443b	            0xffd0	                                call rax	      1774	refs.c	FUNCTION_94	CALL_1
0x400443d	              0xc9	                                   leave	      1775	refs.c	FUNCTION_94
0x400443e	              0xc3	                                     ret	      1775	refs.c	FUNCTION_94
warn_dangling_symref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	27
0x4000f7b	              0x55	                                push rbp	       352	refs.c	FUNCTION_18
0x4000f7c	          0x4889e5	                            mov rbp, rsp	       352	refs.c	FUNCTION_18
0x4000f7f	        0x4883ec50	                           sub rsp, 0x50	       352	refs.c	FUNCTION_18
0x4000f83	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       352	refs.c	FUNCTION_18
0x4000f87	        0x488975c0	             mov qword [rbp - 0x40], rsi	       352	refs.c	FUNCTION_18
0x4000f8b	        0x488955b8	             mov qword [rbp - 0x48], rdx	       352	refs.c	FUNCTION_18
0x4000f8f	    0x64488b042528	                mov rax, qword fs:[0x28]	       352	refs.c	FUNCTION_18
0x4000f98	        0x488945f8	                mov qword [rbp - 8], rax	       352	refs.c	FUNCTION_18
0x4000f9c	            0x31c0	                            xor eax, eax	       352	refs.c	FUNCTION_18
0x4000f9e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       355	refs.c	FUNCTION_18
0x4000fa2	        0x488945d0	             mov qword [rbp - 0x30], rax	       355	refs.c	FUNCTION_18
0x4000fa6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       356	refs.c	FUNCTION_18
0x4000faa	        0x488945d8	             mov qword [rbp - 0x28], rax	       356	refs.c	FUNCTION_18
0x4000fae	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       357	refs.c	FUNCTION_18
0x4000fb6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       358	refs.c	FUNCTION_18
0x4000fba	        0x488945e8	             mov qword [rbp - 0x18], rax	       358	refs.c	FUNCTION_18
0x4000fbe	        0x488d45d0	                   lea rax, [rbp - 0x30]	       359	refs.c	FUNCTION_18	CALL_1
0x4000fc2	          0x4889c6	                            mov rsi, rax	       359	refs.c	FUNCTION_18	CALL_1
0x4000fc5	      0xbf00000000	                              mov edi, 0	       359	refs.c	FUNCTION_18	CALL_1
0x4000fca	      0xe800000000	                          call 0x4000fcf	       359	refs.c	FUNCTION_18	CALL_1
0x4000fcf	              0x90	                                     nop	       360	refs.c	FUNCTION_18
0x4000fd0	        0x488b45f8	                mov rax, qword [rbp - 8]	       360	refs.c	FUNCTION_18
0x4000fd4	    0x644833042528	                xor rax, qword fs:[0x28]	       360	refs.c	FUNCTION_18
0x4000fdd	            0x7405	                            je 0x4000fe4	       360	refs.c	FUNCTION_18
0x4000fdf	      0xe800000000	                          call 0x4000fe4	       360	refs.c	FUNCTION_18
0x4000fe4	              0xc9	                                   leave	       360	refs.c	FUNCTION_18
0x4000fe5	              0xc3	                                     ret	       360	refs.c	FUNCTION_18
normalize_glob_ref	IF,3:ELSE,1:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,8:functions,0	76
0x4001239	              0x55	                                push rbp	       420	refs.c	FUNCTION_27
0x400123a	          0x4889e5	                            mov rbp, rsp	       420	refs.c	FUNCTION_27
0x400123d	        0x4883ec40	                           sub rsp, 0x40	       420	refs.c	FUNCTION_27
0x4001241	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       420	refs.c	FUNCTION_27
0x4001245	        0x488975d0	             mov qword [rbp - 0x30], rsi	       420	refs.c	FUNCTION_27
0x4001249	        0x488955c8	             mov qword [rbp - 0x38], rdx	       420	refs.c	FUNCTION_27
0x400124d	    0x64488b042528	                mov rax, qword fs:[0x28]	       420	refs.c	FUNCTION_27
0x4001256	        0x488945f8	                mov qword [rbp - 8], rax	       420	refs.c	FUNCTION_27
0x400125a	            0x31c0	                            xor eax, eax	       420	refs.c	FUNCTION_27
0x400125c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       421	refs.c	FUNCTION_27
0x4001264	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       421	refs.c	FUNCTION_27
0x400126c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       421	refs.c	FUNCTION_27
0x4001274	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       423	refs.c	FUNCTION_27	IF_1
0x4001278	           0xfb600	                   movzx eax, byte [rax]	       423	refs.c	FUNCTION_27	IF_1
0x400127b	            0x3c2f	                            cmp al, 0x2f	       423	refs.c	FUNCTION_27	IF_1
0x400127d	            0x7519	                           jne 0x4001298	       423	refs.c	FUNCTION_27	IF_1
0x400127f	      0xba00000000	                              mov edx, 0	       424	refs.c	FUNCTION_27	IF_1
0x4001284	      0xbea8010000	                          mov esi, 0x1a8	       424	refs.c	FUNCTION_27	IF_1
0x4001289	      0xbf00000000	                              mov edi, 0	       424	refs.c	FUNCTION_27	IF_1
0x400128e	      0xb800000000	                              mov eax, 0	       424	refs.c	FUNCTION_27	IF_1
0x4001293	      0xe800000000	                          call 0x4001298	       424	refs.c	FUNCTION_27	IF_1
0x4001298	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       426	refs.c	FUNCTION_27	IF_2
0x400129d	            0x7415	                            je 0x40012b4	       426	refs.c	FUNCTION_27	IF_2
0x400129f	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       427	refs.c	FUNCTION_27	IF_2	CALL_1
0x40012a3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       427	refs.c	FUNCTION_27	IF_2	CALL_1
0x40012a7	          0x4889d6	                            mov rsi, rdx	       427	refs.c	FUNCTION_27	IF_2	CALL_1
0x40012aa	          0x4889c7	                            mov rdi, rax	       427	refs.c	FUNCTION_27	IF_2	CALL_1
0x40012ad	      0xe8cff0ffff	                  call sym.strbuf_addstr	       427	refs.c	FUNCTION_27	IF_2	CALL_1
0x40012b2	            0xeb26	                           jmp 0x40012da	       427	refs.c	FUNCTION_27	IF_2	CALL_1
0x40012b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x40012b8	      0xbe00000000	                              mov esi, 0	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x40012bd	          0x4889c7	                            mov rdi, rax	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x40012c0	      0xe800000000	                          call 0x40012c5	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x40012c5	            0x85c0	                           test eax, eax	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x40012c7	            0x7511	                           jne 0x40012da	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x40012c9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       430	refs.c	FUNCTION_27	ELSE_1	IF_3
0x40012cd	      0xbe00000000	                              mov esi, 0	       430	refs.c	FUNCTION_27	ELSE_1	IF_3
0x40012d2	          0x4889c7	                            mov rdi, rax	       430	refs.c	FUNCTION_27	ELSE_1	IF_3
0x40012d5	      0xe8a7f0ffff	                  call sym.strbuf_addstr	       430	refs.c	FUNCTION_27	ELSE_1	IF_3
0x40012da	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       431	refs.c	FUNCTION_27	CALL_4
0x40012de	        0x488d45e0	                   lea rax, [rbp - 0x20]	       431	refs.c	FUNCTION_27	CALL_4
0x40012e2	          0x4889d6	                            mov rsi, rdx	       431	refs.c	FUNCTION_27	CALL_4
0x40012e5	          0x4889c7	                            mov rdi, rax	       431	refs.c	FUNCTION_27	CALL_4
0x40012e8	      0xe894f0ffff	                  call sym.strbuf_addstr	       431	refs.c	FUNCTION_27	CALL_4
0x40012ed	        0x488d45e0	                   lea rax, [rbp - 0x20]	       432	refs.c	FUNCTION_27	CALL_5
0x40012f1	      0xbe00000000	                              mov esi, 0	       432	refs.c	FUNCTION_27	CALL_5
0x40012f6	          0x4889c7	                            mov rdi, rax	       432	refs.c	FUNCTION_27	CALL_5
0x40012f9	      0xe8b8f0ffff	            call sym.strbuf_strip_suffix	       432	refs.c	FUNCTION_27	CALL_5
0x40012fe	        0x488d45e0	                   lea rax, [rbp - 0x20]	       434	refs.c	FUNCTION_27	CALL_6
0x4001302	      0xbe00000000	                              mov esi, 0	       434	refs.c	FUNCTION_27	CALL_6
0x4001307	          0x4889c7	                            mov rdi, rax	       434	refs.c	FUNCTION_27	CALL_6
0x400130a	      0xe800000000	                          call 0x400130f	       434	refs.c	FUNCTION_27	CALL_6
0x400130f	          0x4889c2	                            mov rdx, rax	       434	refs.c	FUNCTION_27	CALL_6
0x4001312	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       434	refs.c	FUNCTION_27	CALL_6
0x4001316	          0x488910	                    mov qword [rax], rdx	       434	refs.c	FUNCTION_27	CALL_6
0x4001319	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       435	refs.c	FUNCTION_27	CALL_7
0x400131d	          0x4889c7	                            mov rdi, rax	       435	refs.c	FUNCTION_27	CALL_7
0x4001320	      0xe818f3ffff	              call sym.has_glob_specials	       435	refs.c	FUNCTION_27	CALL_7
0x4001325	          0x4885c0	                           test rax, rax	       435	refs.c	FUNCTION_27	CALL_7
0x4001328	            0x7509	                           jne 0x4001333	       435	refs.c	FUNCTION_27	CALL_7
0x400132a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       435	refs.c	FUNCTION_27	CALL_7
0x400132e	          0x488b00	                    mov rax, qword [rax]	       435	refs.c	FUNCTION_27	CALL_7
0x4001331	            0xeb05	                           jmp 0x4001338	       435	refs.c	FUNCTION_27	CALL_7
0x4001333	      0xb800000000	                              mov eax, 0	       435	refs.c	FUNCTION_27	CALL_7
0x4001338	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       435	refs.c	FUNCTION_27	CALL_7
0x400133c	        0x48894208	                mov qword [rdx + 8], rax	       435	refs.c	FUNCTION_27	CALL_7
0x4001340	        0x488d45e0	                   lea rax, [rbp - 0x20]	       436	refs.c	FUNCTION_27	CALL_8
0x4001344	          0x4889c7	                            mov rdi, rax	       436	refs.c	FUNCTION_27	CALL_8
0x4001347	      0xe800000000	                          call 0x400134c	       436	refs.c	FUNCTION_27	CALL_8
0x400134c	              0x90	                                     nop	       437	refs.c	FUNCTION_27
0x400134d	        0x488b45f8	                mov rax, qword [rbp - 8]	       437	refs.c	FUNCTION_27
0x4001351	    0x644833042528	                xor rax, qword fs:[0x28]	       437	refs.c	FUNCTION_27
0x400135a	            0x7405	                            je 0x4001361	       437	refs.c	FUNCTION_27
0x400135c	      0xe800000000	                          call 0x4001361	       437	refs.c	FUNCTION_27
0x4001361	              0xc9	                                   leave	       437	refs.c	FUNCTION_27
0x4001362	              0xc3	                                     ret	       437	refs.c	FUNCTION_27
dwim_log	IF,5:ELSE,2:FOR,1:WHILE,0:SWITCH,0:DO,0:CALL,10:functions,0	110
0x400188b	              0x55	                                push rbp	       580	refs.c	FUNCTION_36
0x400188c	          0x4889e5	                            mov rbp, rsp	       580	refs.c	FUNCTION_36
0x400188f	    0x4881ec900000	                           sub rsp, 0x90	       580	refs.c	FUNCTION_36
0x4001896	        0x48897d88	             mov qword [rbp - 0x78], rdi	       580	refs.c	FUNCTION_36
0x400189a	          0x897584	             mov dword [rbp - 0x7c], esi	       580	refs.c	FUNCTION_36
0x400189d	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       580	refs.c	FUNCTION_36
0x40018a4	    0x48898d70ffff	             mov qword [rbp - 0x90], rcx	       580	refs.c	FUNCTION_36
0x40018ab	    0x64488b042528	                mov rax, qword fs:[0x28]	       580	refs.c	FUNCTION_36
0x40018b4	        0x488945f8	                mov qword [rbp - 8], rax	       580	refs.c	FUNCTION_36
0x40018b8	            0x31c0	                            xor eax, eax	       580	refs.c	FUNCTION_36
0x40018ba	        0x488d5584	                   lea rdx, [rbp - 0x7c]	       581	refs.c	FUNCTION_36	CALL_1
0x40018be	        0x488d4588	                   lea rax, [rbp - 0x78]	       581	refs.c	FUNCTION_36	CALL_1
0x40018c2	          0x4889d6	                            mov rsi, rdx	       581	refs.c	FUNCTION_36	CALL_1
0x40018c5	          0x4889c7	                            mov rdi, rax	       581	refs.c	FUNCTION_36	CALL_1
0x40018c8	      0xe817fdffff	         call sym.substitute_branch_name	       581	refs.c	FUNCTION_36	CALL_1
0x40018cd	        0x488945b0	             mov qword [rbp - 0x50], rax	       581	refs.c	FUNCTION_36	CALL_1
0x40018d1	    0xc7459c000000	               mov dword [rbp - 0x64], 0	       583	refs.c	FUNCTION_36
0x40018d8	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       584	refs.c	FUNCTION_36
0x40018e0	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       584	refs.c	FUNCTION_36
0x40018e8	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       584	refs.c	FUNCTION_36
0x40018f0	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       586	refs.c	FUNCTION_36
0x40018f7	    0x48c700000000	                      mov qword [rax], 0	       586	refs.c	FUNCTION_36
0x40018fe	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       587	refs.c	FUNCTION_36	FOR_1
0x4001906	      0xe9f3000000	                           jmp 0x40019fe	       587	refs.c	FUNCTION_36	FOR_1
0x400190b	        0x488d45c0	                   lea rax, [rbp - 0x40]	       591	refs.c	FUNCTION_36	FOR_1
0x400190f	      0xbe00000000	                              mov esi, 0	       591	refs.c	FUNCTION_36	FOR_1
0x4001914	          0x4889c7	                            mov rdi, rax	       591	refs.c	FUNCTION_36	FOR_1
0x4001917	      0xe85de9ffff	                  call sym.strbuf_setlen	       591	refs.c	FUNCTION_36	FOR_1
0x400191c	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x4001920	          0x8b5584	             mov edx, dword [rbp - 0x7c]	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x4001923	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x4001927	          0x488b30	                    mov rsi, qword [rax]	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x400192a	        0x488d45c0	                   lea rax, [rbp - 0x40]	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x400192e	          0x4889c7	                            mov rdi, rax	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x4001931	      0xb800000000	                              mov eax, 0	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x4001936	      0xe800000000	                          call 0x400193b	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x400193b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       593	refs.c	FUNCTION_36	FOR_1	CALL_3
0x400193f	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       593	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4001943	      0xb900000000	                              mov ecx, 0	       593	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4001948	      0xbe01000000	                              mov esi, 1	       593	refs.c	FUNCTION_36	FOR_1	CALL_3
0x400194d	          0x4889c7	                            mov rdi, rax	       593	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4001950	      0xe800000000	                          call 0x4001955	       593	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4001955	        0x488945b8	             mov qword [rbp - 0x48], rax	       593	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4001959	      0x48837db800	               cmp qword [rbp - 0x48], 0	       595	refs.c	FUNCTION_36	FOR_1	IF_1
0x400195e	     0xf8491000000	                            je 0x40019f5	       595	refs.c	FUNCTION_36	FOR_1	IF_1
0x4001964	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_4
0x4001968	          0x4889c7	                            mov rdi, rax	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_4
0x400196b	      0xe800000000	                          call 0x4001970	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_4
0x4001970	            0x85c0	                           test eax, eax	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_4
0x4001972	            0x740a	                            je 0x400197e	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_4
0x4001974	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       598	refs.c	FUNCTION_36	FOR_1	IF_2
0x4001978	        0x488945a8	             mov qword [rbp - 0x58], rax	       598	refs.c	FUNCTION_36	FOR_1	IF_2
0x400197c	            0xeb2f	                           jmp 0x40019ad	       598	refs.c	FUNCTION_36	FOR_1	IF_2
0x400197e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_6
0x4001982	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_6
0x4001986	          0x4889d6	                            mov rsi, rdx	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_6
0x4001989	          0x4889c7	                            mov rdi, rax	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_6
0x400198c	      0xe800000000	                          call 0x4001991	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_6
0x4001991	            0x85c0	                           test eax, eax	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_6
0x4001993	            0x7463	                            je 0x40019f8	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_6
0x4001995	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_6
0x4001999	          0x4889c7	                            mov rdi, rax	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_6
0x400199c	      0xe800000000	                          call 0x40019a1	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_6
0x40019a1	            0x85c0	                           test eax, eax	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_6
0x40019a3	            0x7453	                            je 0x40019f8	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_6
0x40019a5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       600	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x40019a9	        0x488945a8	             mov qword [rbp - 0x58], rax	       600	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x40019ad	          0x8b459c	             mov eax, dword [rbp - 0x64]	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40019b0	          0x8d5001	                      lea edx, [rax + 1]	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40019b3	          0x89559c	             mov dword [rbp - 0x64], edx	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40019b6	            0x85c0	                           test eax, eax	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40019b8	            0x752f	                           jne 0x40019e9	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40019ba	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_7
0x40019be	          0x4889c7	                            mov rdi, rax	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_7
0x40019c1	      0xe800000000	                          call 0x40019c6	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_7
0x40019c6	          0x4889c2	                            mov rdx, rax	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_7
0x40019c9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_7
0x40019d0	          0x488910	                    mov qword [rax], rdx	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_7
0x40019d3	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       605	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_8
0x40019d7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       605	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_8
0x40019de	          0x4889d6	                            mov rsi, rdx	       605	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_8
0x40019e1	          0x4889c7	                            mov rdi, rax	       605	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_8
0x40019e4	      0xe8cfebffff	                         call sym.oidcpy	       605	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_8
0x40019e9	    0x8b0500000000	            mov eax, dword [0x040019ef] 	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x40019ef	            0x85c0	                           test eax, eax	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x40019f1	            0x741d	                            je 0x4001a10	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x40019f3	            0xeb04	                           jmp 0x40019f9	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x40019f5	              0x90	                                     nop	       596	refs.c	FUNCTION_36	FOR_1	IF_1
0x40019f6	            0xeb01	                           jmp 0x40019f9	       596	refs.c	FUNCTION_36	FOR_1	IF_1
0x40019f8	              0x90	                                     nop	       602	refs.c	FUNCTION_36	FOR_1	ELSE_2
0x40019f9	      0x488345a008	               add qword [rbp - 0x60], 8	       587	refs.c	FUNCTION_36	FOR_1
0x40019fe	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       587	refs.c	FUNCTION_36	FOR_1
0x4001a02	          0x488b00	                    mov rax, qword [rax]	       587	refs.c	FUNCTION_36	FOR_1
0x4001a05	          0x4885c0	                           test rax, rax	       587	refs.c	FUNCTION_36	FOR_1
0x4001a08	     0xf85fdfeffff	                           jne 0x400190b	       587	refs.c	FUNCTION_36	FOR_1
0x4001a0e	            0xeb01	                           jmp 0x4001a11	       587	refs.c	FUNCTION_36	FOR_1
0x4001a10	              0x90	                                     nop	       608	refs.c	FUNCTION_36	FOR_1	IF_5
0x4001a11	        0x488d45c0	                   lea rax, [rbp - 0x40]	       610	refs.c	FUNCTION_36	CALL_9
0x4001a15	          0x4889c7	                            mov rdi, rax	       610	refs.c	FUNCTION_36	CALL_9
0x4001a18	      0xe800000000	                          call 0x4001a1d	       610	refs.c	FUNCTION_36	CALL_9
0x4001a1d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       611	refs.c	FUNCTION_36	CALL_10
0x4001a21	          0x4889c7	                            mov rdi, rax	       611	refs.c	FUNCTION_36	CALL_10
0x4001a24	      0xe800000000	                          call 0x4001a29	       611	refs.c	FUNCTION_36	CALL_10
0x4001a29	          0x8b459c	             mov eax, dword [rbp - 0x64]	       612	refs.c	FUNCTION_36
0x4001a2c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       613	refs.c	FUNCTION_36
0x4001a30	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       613	refs.c	FUNCTION_36
0x4001a39	            0x7405	                            je 0x4001a40	       613	refs.c	FUNCTION_36
0x4001a3b	      0xe800000000	                          call 0x4001a40	       613	refs.c	FUNCTION_36
0x4001a40	              0xc9	                                   leave	       613	refs.c	FUNCTION_36
0x4001a41	              0xc3	                                     ret	       613	refs.c	FUNCTION_36
expand_ref_prefix	IF,0:ELSE,0:FOR,1:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	27
0x4001588	              0x55	                                push rbp	       511	refs.c	FUNCTION_32
0x4001589	          0x4889e5	                            mov rbp, rsp	       511	refs.c	FUNCTION_32
0x400158c	        0x4883ec20	                           sub rsp, 0x20	       511	refs.c	FUNCTION_32
0x4001590	        0x48897de8	             mov qword [rbp - 0x18], rdi	       511	refs.c	FUNCTION_32
0x4001594	        0x488975e0	             mov qword [rbp - 0x20], rsi	       511	refs.c	FUNCTION_32
0x4001598	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       513	refs.c	FUNCTION_32	CALL_1
0x400159c	          0x4889c7	                            mov rdi, rax	       513	refs.c	FUNCTION_32	CALL_1
0x400159f	      0xe800000000	                          call 0x40015a4	       513	refs.c	FUNCTION_32	CALL_1
0x40015a4	          0x8945f4	              mov dword [rbp - 0xc], eax	       513	refs.c	FUNCTION_32	CALL_1
0x40015a7	    0x48c745f80000	                  mov qword [rbp - 8], 0	       515	refs.c	FUNCTION_32	FOR_1
0x40015af	            0xeb24	                           jmp 0x40015d5	       515	refs.c	FUNCTION_32	FOR_1
0x40015b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       516	refs.c	FUNCTION_32	CALL_2
0x40015b5	          0x488b30	                    mov rsi, qword [rax]	       516	refs.c	FUNCTION_32	CALL_2
0x40015b8	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       516	refs.c	FUNCTION_32	CALL_2
0x40015bc	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       516	refs.c	FUNCTION_32	CALL_2
0x40015bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       516	refs.c	FUNCTION_32	CALL_2
0x40015c3	          0x4889c7	                            mov rdi, rax	       516	refs.c	FUNCTION_32	CALL_2
0x40015c6	      0xb800000000	                              mov eax, 0	       516	refs.c	FUNCTION_32	CALL_2
0x40015cb	      0xe800000000	                          call 0x40015d0	       516	refs.c	FUNCTION_32	CALL_2
0x40015d0	      0x488345f808	                  add qword [rbp - 8], 8	       515	refs.c	FUNCTION_32	FOR_1
0x40015d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       515	refs.c	FUNCTION_32	FOR_1
0x40015d9	          0x488b00	                    mov rax, qword [rax]	       515	refs.c	FUNCTION_32	FOR_1
0x40015dc	          0x4885c0	                           test rax, rax	       515	refs.c	FUNCTION_32	FOR_1
0x40015df	            0x75d0	                           jne 0x40015b1	       515	refs.c	FUNCTION_32	FOR_1
0x40015e1	              0x90	                                     nop	       517	refs.c	FUNCTION_32
0x40015e2	              0xc9	                                   leave	       517	refs.c	FUNCTION_32
0x40015e3	              0xc3	                                     ret	       517	refs.c	FUNCTION_32
refs_ref_iterator_begin	IF,4:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,3:functions,0	48
0x40036b7	              0x55	                                push rbp	      1345	refs.c	FUNCTION_68
0x40036b8	          0x4889e5	                            mov rbp, rsp	      1345	refs.c	FUNCTION_68
0x40036bb	        0x4883ec30	                           sub rsp, 0x30	      1345	refs.c	FUNCTION_68
0x40036bf	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1345	refs.c	FUNCTION_68
0x40036c3	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1345	refs.c	FUNCTION_68
0x40036c7	          0x8955dc	             mov dword [rbp - 0x24], edx	      1345	refs.c	FUNCTION_68
0x40036ca	          0x894dd8	             mov dword [rbp - 0x28], ecx	      1345	refs.c	FUNCTION_68
0x40036cd	    0x8b0500000000	            mov eax, dword [0x040036d3] 	      1348	refs.c	FUNCTION_68	IF_1
0x40036d3	            0x85c0	                           test eax, eax	      1348	refs.c	FUNCTION_68	IF_1
0x40036d5	            0x7915	                           jns 0x40036ec	      1348	refs.c	FUNCTION_68	IF_1
0x40036d7	      0xbe00000000	                              mov esi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x40036dc	      0xbf00000000	                              mov edi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x40036e1	      0xe800000000	                          call 0x40036e6	      1349	refs.c	FUNCTION_68	CALL_1
0x40036e6	    0x890500000000	            mov dword [0x040036ec], eax 	      1349	refs.c	FUNCTION_68	CALL_1
0x40036ec	    0x8b0500000000	            mov eax, dword [0x040036f2] 	      1350	refs.c	FUNCTION_68	IF_2
0x40036f2	            0x85c0	                           test eax, eax	      1350	refs.c	FUNCTION_68	IF_2
0x40036f4	            0x7404	                            je 0x40036fa	      1350	refs.c	FUNCTION_68	IF_2
0x40036f6	        0x834dd801	                or dword [rbp - 0x28], 1	      1351	refs.c	FUNCTION_68	IF_2
0x40036fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1353	refs.c	FUNCTION_68	CALL_2
0x40036fe	          0x488b00	                    mov rax, qword [rax]	      1353	refs.c	FUNCTION_68	CALL_2
0x4003701	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1353	refs.c	FUNCTION_68	CALL_2
0x4003705	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1353	refs.c	FUNCTION_68	CALL_2
0x4003708	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1353	refs.c	FUNCTION_68	CALL_2
0x400370c	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1353	refs.c	FUNCTION_68	CALL_2
0x4003710	          0x4889cf	                            mov rdi, rcx	      1353	refs.c	FUNCTION_68	CALL_2
0x4003713	            0xffd0	                                call rax	      1353	refs.c	FUNCTION_68	CALL_2
0x4003715	        0x488945f8	                mov qword [rbp - 8], rax	      1353	refs.c	FUNCTION_68	CALL_2
0x4003719	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1359	refs.c	FUNCTION_68	IF_3
0x400371d	            0x7418	                            je 0x4003737	      1359	refs.c	FUNCTION_68	IF_3
0x400371f	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1360	refs.c	FUNCTION_68	CALL_3
0x4003722	        0x488b45f8	                mov rax, qword [rbp - 8]	      1360	refs.c	FUNCTION_68	CALL_3
0x4003726	      0xbe00000000	                              mov esi, 0	      1360	refs.c	FUNCTION_68	CALL_3
0x400372b	          0x4889c7	                            mov rdi, rax	      1360	refs.c	FUNCTION_68	CALL_3
0x400372e	      0xe800000000	                          call 0x4003733	      1360	refs.c	FUNCTION_68	CALL_3
0x4003733	        0x488945f8	                mov qword [rbp - 8], rax	      1360	refs.c	FUNCTION_68	CALL_3
0x4003737	        0x488b45f8	                mov rax, qword [rbp - 8]	      1363	refs.c	FUNCTION_68	IF_4
0x400373b	         0xfb64008	               movzx eax, byte [rax + 8]	      1363	refs.c	FUNCTION_68	IF_4
0x400373f	          0x83e001	                              and eax, 1	      1363	refs.c	FUNCTION_68	IF_4
0x4003742	            0x84c0	                             test al, al	      1363	refs.c	FUNCTION_68	IF_4
0x4003744	            0x7519	                           jne 0x400375f	      1363	refs.c	FUNCTION_68	IF_4
0x4003746	      0xba00000000	                              mov edx, 0	      1364	refs.c	FUNCTION_68	IF_4
0x400374b	      0xbe54050000	                          mov esi, 0x554	      1364	refs.c	FUNCTION_68	IF_4
0x4003750	      0xbf00000000	                              mov edi, 0	      1364	refs.c	FUNCTION_68	IF_4
0x4003755	      0xb800000000	                              mov eax, 0	      1364	refs.c	FUNCTION_68	IF_4
0x400375a	      0xe800000000	                          call 0x400375f	      1364	refs.c	FUNCTION_68	IF_4
0x400375f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1366	refs.c	FUNCTION_68
0x4003763	              0xc9	                                   leave	      1367	refs.c	FUNCTION_68
0x4003764	              0xc3	                                     ret	      1367	refs.c	FUNCTION_68
ref_transaction_begin	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	14
0x400273f	              0x55	                                push rbp	       946	refs.c	FUNCTION_52
0x4002740	          0x4889e5	                            mov rbp, rsp	       946	refs.c	FUNCTION_52
0x4002743	        0x4883ec10	                           sub rsp, 0x10	       946	refs.c	FUNCTION_52
0x4002747	        0x48897df8	                mov qword [rbp - 8], rdi	       946	refs.c	FUNCTION_52
0x400274b	    0x488b05000000	            mov rax, qword [0x04002752] 	       947	refs.c	FUNCTION_52	CALL_2
0x4002752	          0x4889c7	                            mov rdi, rax	       947	refs.c	FUNCTION_52	CALL_2
0x4002755	      0xe800000000	                          call 0x400275a	       947	refs.c	FUNCTION_52	CALL_2
0x400275a	          0x4889c2	                            mov rdx, rax	       947	refs.c	FUNCTION_52	CALL_2
0x400275d	        0x488b45f8	                mov rax, qword [rbp - 8]	       947	refs.c	FUNCTION_52	CALL_2
0x4002761	          0x4889c6	                            mov rsi, rax	       947	refs.c	FUNCTION_52	CALL_2
0x4002764	          0x4889d7	                            mov rdi, rdx	       947	refs.c	FUNCTION_52	CALL_2
0x4002767	      0xe800000000	                          call 0x400276c	       947	refs.c	FUNCTION_52	CALL_2
0x400276c	              0xc9	                                   leave	       948	refs.c	FUNCTION_52
0x400276d	              0xc3	                                     ret	       948	refs.c	FUNCTION_52
resolve_gitlink_ref	IF,2:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,3:functions,0	42
0x4003e3f	              0x55	                                push rbp	      1580	refs.c	FUNCTION_84
0x4003e40	          0x4889e5	                            mov rbp, rsp	      1580	refs.c	FUNCTION_84
0x4003e43	        0x4883ec40	                           sub rsp, 0x40	      1580	refs.c	FUNCTION_84
0x4003e47	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1580	refs.c	FUNCTION_84
0x4003e4b	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1580	refs.c	FUNCTION_84
0x4003e4f	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1580	refs.c	FUNCTION_84
0x4003e53	    0x64488b042528	                mov rax, qword fs:[0x28]	      1580	refs.c	FUNCTION_84
0x4003e5c	        0x488945f8	                mov qword [rbp - 8], rax	      1580	refs.c	FUNCTION_84
0x4003e60	            0x31c0	                            xor eax, eax	      1580	refs.c	FUNCTION_84
0x4003e62	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1584	refs.c	FUNCTION_84	CALL_1
0x4003e66	          0x4889c7	                            mov rdi, rax	      1584	refs.c	FUNCTION_84	CALL_1
0x4003e69	      0xe800000000	                          call 0x4003e6e	      1584	refs.c	FUNCTION_84	CALL_1
0x4003e6e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1584	refs.c	FUNCTION_84	CALL_1
0x4003e72	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1586	refs.c	FUNCTION_84	IF_1
0x4003e77	            0x7507	                           jne 0x4003e80	      1586	refs.c	FUNCTION_84	IF_1
0x4003e79	      0xb8ffffffff	                     mov eax, 0xffffffff	      1587	refs.c	FUNCTION_84	IF_1
0x4003e7e	            0xeb44	                           jmp 0x4003ec4	      1587	refs.c	FUNCTION_84	IF_1
0x4003e80	        0x488d4dec	                   lea rcx, [rbp - 0x14]	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4003e84	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4003e88	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4003e8c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4003e90	          0x4989c8	                             mov r8, rcx	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4003e93	          0x4889d1	                            mov rcx, rdx	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4003e96	      0xba00000000	                              mov edx, 0	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4003e9b	          0x4889c7	                            mov rdi, rax	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4003e9e	      0xe800000000	                          call 0x4003ea3	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4003ea3	          0x4885c0	                           test rax, rax	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4003ea6	            0x7410	                            je 0x4003eb8	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4003ea8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1590	refs.c	FUNCTION_84	IF_2	CALL_3
0x4003eac	          0x4889c7	                            mov rdi, rax	      1590	refs.c	FUNCTION_84	IF_2	CALL_3
0x4003eaf	      0xe8b2c6ffff	                    call sym.is_null_oid	      1590	refs.c	FUNCTION_84	IF_2	CALL_3
0x4003eb4	            0x85c0	                           test eax, eax	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4003eb6	            0x7407	                            je 0x4003ebf	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4003eb8	      0xb8ffffffff	                     mov eax, 0xffffffff	      1591	refs.c	FUNCTION_84	IF_2
0x4003ebd	            0xeb05	                           jmp 0x4003ec4	      1591	refs.c	FUNCTION_84	IF_2
0x4003ebf	      0xb800000000	                              mov eax, 0	      1592	refs.c	FUNCTION_84
0x4003ec4	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1593	refs.c	FUNCTION_84
0x4003ec8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1593	refs.c	FUNCTION_84
0x4003ed1	            0x7405	                            je 0x4003ed8	      1593	refs.c	FUNCTION_84
0x4003ed3	      0xe800000000	                          call 0x4003ed8	      1593	refs.c	FUNCTION_84
0x4003ed8	              0xc9	                                   leave	      1593	refs.c	FUNCTION_84
0x4003ed9	              0xc3	                                     ret	      1593	refs.c	FUNCTION_84
lookup_ref_store_map	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	30
0x4003fcc	              0x55	                                push rbp	      1638	refs.c	FUNCTION_87
0x4003fcd	          0x4889e5	                            mov rbp, rsp	      1638	refs.c	FUNCTION_87
0x4003fd0	        0x4883ec20	                           sub rsp, 0x20	      1638	refs.c	FUNCTION_87
0x4003fd4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1638	refs.c	FUNCTION_87
0x4003fd8	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1638	refs.c	FUNCTION_87
0x4003fdc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1641	refs.c	FUNCTION_87	IF_1
0x4003fe0	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1641	refs.c	FUNCTION_87	IF_1
0x4003fe3	            0x85c0	                           test eax, eax	      1641	refs.c	FUNCTION_87	IF_1
0x4003fe5	            0x7507	                           jne 0x4003fee	      1641	refs.c	FUNCTION_87	IF_1
0x4003fe7	      0xb800000000	                              mov eax, 0	      1643	refs.c	FUNCTION_87	IF_1
0x4003fec	            0xeb3b	                           jmp 0x4004029	      1643	refs.c	FUNCTION_87	IF_1
0x4003fee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1645	refs.c	FUNCTION_87	CALL_2
0x4003ff2	          0x4889c7	                            mov rdi, rax	      1645	refs.c	FUNCTION_87	CALL_2
0x4003ff5	      0xe800000000	                          call 0x4003ffa	      1645	refs.c	FUNCTION_87	CALL_2
0x4003ffa	            0x89c1	                            mov ecx, eax	      1645	refs.c	FUNCTION_87	CALL_2
0x4003ffc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1645	refs.c	FUNCTION_87	CALL_2
0x4004000	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1645	refs.c	FUNCTION_87	CALL_2
0x4004004	            0x89ce	                            mov esi, ecx	      1645	refs.c	FUNCTION_87	CALL_2
0x4004006	          0x4889c7	                            mov rdi, rax	      1645	refs.c	FUNCTION_87	CALL_2
0x4004009	      0xe87dc4ffff	          call sym.hashmap_get_from_hash	      1645	refs.c	FUNCTION_87	CALL_2
0x400400e	        0x488945f8	                mov qword [rbp - 8], rax	      1645	refs.c	FUNCTION_87	CALL_2
0x4004012	      0x48837df800	                  cmp qword [rbp - 8], 0	      1646	refs.c	FUNCTION_87
0x4004017	            0x740a	                            je 0x4004023	      1646	refs.c	FUNCTION_87
0x4004019	        0x488b45f8	                mov rax, qword [rbp - 8]	      1646	refs.c	FUNCTION_87
0x400401d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1646	refs.c	FUNCTION_87
0x4004021	            0xeb05	                           jmp 0x4004028	      1646	refs.c	FUNCTION_87
0x4004023	      0xb800000000	                              mov eax, 0	      1646	refs.c	FUNCTION_87
0x4004028	              0x90	                                     nop	      1646	refs.c	FUNCTION_87
0x4004029	              0xc9	                                   leave	      1647	refs.c	FUNCTION_87
0x400402a	              0xc3	                                     ret	      1647	refs.c	FUNCTION_87
git_is_dir_sep	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,0:functions,0	8
0x4000040	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_127
0x4000041	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_127
0x4000044	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_127
0x4000047	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_127
0x400004b	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_127
0x400004e	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_127
0x4000051	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_127
0x4000052	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_127
st_mult	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	22
0x4000179	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_139
0x400017a	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_139
0x400017d	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_139
0x4000181	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_139
0x4000185	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_139
0x4000189	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_139	IF_1
0x400018e	            0x7430	                            je 0x40001c0	       795	git-compat-util.h	FUNCTION_139	IF_1
0x4000190	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_139	IF_1
0x4000197	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_139	IF_1
0x400019c	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_139	IF_1
0x40001a0	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_139	IF_1
0x40001a4	            0x731a	                           jae 0x40001c0	       795	git-compat-util.h	FUNCTION_139	IF_1
0x40001a6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_139	IF_1	CALL_1
0x40001aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_139	IF_1	CALL_1
0x40001ae	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_139	IF_1	CALL_1
0x40001b1	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_139	IF_1	CALL_1
0x40001b6	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_139	IF_1	CALL_1
0x40001bb	      0xe800000000	                          call 0x40001c0	       796	git-compat-util.h	FUNCTION_139	IF_1	CALL_1
0x40001c0	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_139
0x40001c4	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_139
0x40001c9	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_139
0x40001ca	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_139
hashmap_get_from_hash	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	26
0x400048b	              0x55	                                push rbp	       305	hashmap.h	FUNCTION_155
0x400048c	          0x4889e5	                            mov rbp, rsp	       305	hashmap.h	FUNCTION_155
0x400048f	        0x4883ec40	                           sub rsp, 0x40	       305	hashmap.h	FUNCTION_155
0x4000493	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       305	hashmap.h	FUNCTION_155
0x4000497	          0x8975d4	             mov dword [rbp - 0x2c], esi	       305	hashmap.h	FUNCTION_155
0x400049a	        0x488955c8	             mov qword [rbp - 0x38], rdx	       305	hashmap.h	FUNCTION_155
0x400049e	    0x64488b042528	                mov rax, qword fs:[0x28]	       305	hashmap.h	FUNCTION_155
0x40004a7	        0x488945f8	                mov qword [rbp - 8], rax	       305	hashmap.h	FUNCTION_155
0x40004ab	            0x31c0	                            xor eax, eax	       305	hashmap.h	FUNCTION_155
0x40004ad	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       307	hashmap.h	FUNCTION_155	CALL_1
0x40004b0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       307	hashmap.h	FUNCTION_155	CALL_1
0x40004b4	            0x89d6	                            mov esi, edx	       307	hashmap.h	FUNCTION_155	CALL_1
0x40004b6	          0x4889c7	                            mov rdi, rax	       307	hashmap.h	FUNCTION_155	CALL_1
0x40004b9	      0xe8a2ffffff	             call sym.hashmap_entry_init	       307	hashmap.h	FUNCTION_155	CALL_1
0x40004be	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       308	hashmap.h	FUNCTION_155	CALL_2
0x40004c2	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       308	hashmap.h	FUNCTION_155	CALL_2
0x40004c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       308	hashmap.h	FUNCTION_155	CALL_2
0x40004ca	          0x4889ce	                            mov rsi, rcx	       308	hashmap.h	FUNCTION_155	CALL_2
0x40004cd	          0x4889c7	                            mov rdi, rax	       308	hashmap.h	FUNCTION_155	CALL_2
0x40004d0	      0xe800000000	                          call 0x40004d5	       308	hashmap.h	FUNCTION_155	CALL_2
0x40004d5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       309	hashmap.h	FUNCTION_155
0x40004d9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       309	hashmap.h	FUNCTION_155
0x40004e2	            0x7405	                            je 0x40004e9	       309	hashmap.h	FUNCTION_155
0x40004e4	      0xe800000000	                          call 0x40004e9	       309	hashmap.h	FUNCTION_155
0x40004e9	              0xc9	                                   leave	       309	hashmap.h	FUNCTION_155
0x40004ea	              0xc3	                                     ret	       309	hashmap.h	FUNCTION_155
refs_copy_existing_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	17
0x4005039	              0x55	                                push rbp	      2149	refs.c	FUNCTION_123
0x400503a	          0x4889e5	                            mov rbp, rsp	      2149	refs.c	FUNCTION_123
0x400503d	        0x4883ec20	                           sub rsp, 0x20	      2149	refs.c	FUNCTION_123
0x4005041	        0x48897df8	                mov qword [rbp - 8], rdi	      2149	refs.c	FUNCTION_123
0x4005045	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2149	refs.c	FUNCTION_123
0x4005049	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2149	refs.c	FUNCTION_123
0x400504d	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2149	refs.c	FUNCTION_123
0x4005051	        0x488b45f8	                mov rax, qword [rbp - 8]	      2150	refs.c	FUNCTION_123	CALL_1
0x4005055	          0x488b00	                    mov rax, qword [rax]	      2150	refs.c	FUNCTION_123	CALL_1
0x4005058	        0x488b4060	            mov rax, qword [rax + 0x60] 	      2150	refs.c	FUNCTION_123	CALL_1
0x400505c	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2150	refs.c	FUNCTION_123	CALL_1
0x4005060	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2150	refs.c	FUNCTION_123	CALL_1
0x4005064	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2150	refs.c	FUNCTION_123	CALL_1
0x4005068	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2150	refs.c	FUNCTION_123	CALL_1
0x400506c	            0xffd0	                                call rax	      2150	refs.c	FUNCTION_123	CALL_1
0x400506e	              0xc9	                                   leave	      2151	refs.c	FUNCTION_123
0x400506f	              0xc3	                                     ret	      2151	refs.c	FUNCTION_123
reflog_exists	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	14
0x4004d6b	              0x55	                                push rbp	      2063	refs.c	FUNCTION_111
0x4004d6c	          0x4889e5	                            mov rbp, rsp	      2063	refs.c	FUNCTION_111
0x4004d6f	        0x4883ec10	                           sub rsp, 0x10	      2063	refs.c	FUNCTION_111
0x4004d73	        0x48897df8	                mov qword [rbp - 8], rdi	      2063	refs.c	FUNCTION_111
0x4004d77	    0x488b05000000	            mov rax, qword [0x04004d7e] 	      2064	refs.c	FUNCTION_111	CALL_2
0x4004d7e	          0x4889c7	                            mov rdi, rax	      2064	refs.c	FUNCTION_111	CALL_2
0x4004d81	      0xe800000000	                          call 0x4004d86	      2064	refs.c	FUNCTION_111	CALL_2
0x4004d86	          0x4889c2	                            mov rdx, rax	      2064	refs.c	FUNCTION_111	CALL_2
0x4004d89	        0x488b45f8	                mov rax, qword [rbp - 8]	      2064	refs.c	FUNCTION_111	CALL_2
0x4004d8d	          0x4889c6	                            mov rsi, rax	      2064	refs.c	FUNCTION_111	CALL_2
0x4004d90	          0x4889d7	                            mov rdi, rdx	      2064	refs.c	FUNCTION_111	CALL_2
0x4004d93	      0xe800000000	                          call 0x4004d98	      2064	refs.c	FUNCTION_111	CALL_2
0x4004d98	              0xc9	                                   leave	      2065	refs.c	FUNCTION_111
0x4004d99	              0xc3	                                     ret	      2065	refs.c	FUNCTION_111
read_ref_full	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	20
0x4000b1d	              0x55	                                push rbp	       232	refs.c	FUNCTION_10
0x4000b1e	          0x4889e5	                            mov rbp, rsp	       232	refs.c	FUNCTION_10
0x4000b21	        0x4883ec20	                           sub rsp, 0x20	       232	refs.c	FUNCTION_10
0x4000b25	        0x48897df8	                mov qword [rbp - 8], rdi	       232	refs.c	FUNCTION_10
0x4000b29	          0x8975f4	              mov dword [rbp - 0xc], esi	       232	refs.c	FUNCTION_10
0x4000b2c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       232	refs.c	FUNCTION_10
0x4000b30	        0x48894de0	             mov qword [rbp - 0x20], rcx	       232	refs.c	FUNCTION_10
0x4000b34	    0x488b05000000	            mov rax, qword [0x04000b3b] 	       233	refs.c	FUNCTION_10	CALL_2
0x4000b3b	          0x4889c7	                            mov rdi, rax	       233	refs.c	FUNCTION_10	CALL_2
0x4000b3e	      0xe800000000	                          call 0x4000b43	       233	refs.c	FUNCTION_10	CALL_2
0x4000b43	          0x4889c7	                            mov rdi, rax	       233	refs.c	FUNCTION_10	CALL_2
0x4000b46	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       233	refs.c	FUNCTION_10	CALL_2
0x4000b4a	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       233	refs.c	FUNCTION_10	CALL_2
0x4000b4e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       233	refs.c	FUNCTION_10	CALL_2
0x4000b51	        0x488b45f8	                mov rax, qword [rbp - 8]	       233	refs.c	FUNCTION_10	CALL_2
0x4000b55	          0x4989f0	                             mov r8, rsi	       233	refs.c	FUNCTION_10	CALL_2
0x4000b58	          0x4889c6	                            mov rsi, rax	       233	refs.c	FUNCTION_10	CALL_2
0x4000b5b	      0xe800000000	                          call 0x4000b60	       233	refs.c	FUNCTION_10	CALL_2
0x4000b60	              0xc9	                                   leave	       235	refs.c	FUNCTION_10
0x4000b61	              0xc3	                                     ret	       235	refs.c	FUNCTION_10
ref_store_hash_cmp	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	26
0x4003eda	              0x55	                                push rbp	      1608	refs.c	FUNCTION_85
0x4003edb	          0x4889e5	                            mov rbp, rsp	      1608	refs.c	FUNCTION_85
0x4003ede	        0x4883ec40	                           sub rsp, 0x40	      1608	refs.c	FUNCTION_85
0x4003ee2	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1608	refs.c	FUNCTION_85
0x4003ee6	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1608	refs.c	FUNCTION_85
0x4003eea	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1608	refs.c	FUNCTION_85
0x4003eee	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      1608	refs.c	FUNCTION_85
0x4003ef2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1609	refs.c	FUNCTION_85
0x4003ef6	        0x488945e8	             mov qword [rbp - 0x18], rax	      1609	refs.c	FUNCTION_85
0x4003efa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1609	refs.c	FUNCTION_85
0x4003efe	        0x488945f0	             mov qword [rbp - 0x10], rax	      1609	refs.c	FUNCTION_85
0x4003f02	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1610	refs.c	FUNCTION_85
0x4003f07	            0x750a	                           jne 0x4003f13	      1610	refs.c	FUNCTION_85
0x4003f09	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1610	refs.c	FUNCTION_85
0x4003f0d	        0x4883c018	                           add rax, 0x18	      1610	refs.c	FUNCTION_85
0x4003f11	            0xeb04	                           jmp 0x4003f17	      1610	refs.c	FUNCTION_85
0x4003f13	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1610	refs.c	FUNCTION_85
0x4003f17	        0x488945f8	                mov qword [rbp - 8], rax	      1610	refs.c	FUNCTION_85
0x4003f1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1612	refs.c	FUNCTION_85	CALL_1
0x4003f1f	        0x488d5018	                   lea rdx, [rax + 0x18]	      1612	refs.c	FUNCTION_85	CALL_1
0x4003f23	        0x488b45f8	                mov rax, qword [rbp - 8]	      1612	refs.c	FUNCTION_85	CALL_1
0x4003f27	          0x4889c6	                            mov rsi, rax	      1612	refs.c	FUNCTION_85	CALL_1
0x4003f2a	          0x4889d7	                            mov rdi, rdx	      1612	refs.c	FUNCTION_85	CALL_1
0x4003f2d	      0xe800000000	                          call 0x4003f32	      1612	refs.c	FUNCTION_85	CALL_1
0x4003f32	              0xc9	                                   leave	      1613	refs.c	FUNCTION_85
0x4003f33	              0xc3	                                     ret	      1613	refs.c	FUNCTION_85
for_each_replace_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,3:functions,0	30
0x400397f	              0x55	                                push rbp	      1434	refs.c	FUNCTION_76
0x4003980	          0x4889e5	                            mov rbp, rsp	      1434	refs.c	FUNCTION_76
0x4003983	            0x4154	                                push r12	      1434	refs.c	FUNCTION_76
0x4003985	              0x53	                                push rbx	      1434	refs.c	FUNCTION_76
0x4003986	        0x4883ec20	                           sub rsp, 0x20	      1434	refs.c	FUNCTION_76
0x400398a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1434	refs.c	FUNCTION_76
0x400398e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1434	refs.c	FUNCTION_76
0x4003992	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1434	refs.c	FUNCTION_76
0x4003996	    0x488b05000000	            mov rax, qword [0x0400399d] 	      1437	refs.c	FUNCTION_76	CALL_3
0x400399d	          0x4889c7	                            mov rdi, rax	      1437	refs.c	FUNCTION_76	CALL_3
0x40039a0	      0xe800000000	                          call 0x40039a5	      1437	refs.c	FUNCTION_76	CALL_3
0x40039a5	          0x4189c4	                           mov r12d, eax	      1435	refs.c	FUNCTION_76	CALL_2
0x40039a8	    0x488b1d000000	            mov rbx, qword [0x040039af] 	      1435	refs.c	FUNCTION_76	CALL_2
0x40039af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1435	refs.c	FUNCTION_76	CALL_2
0x40039b3	          0x4889c7	                            mov rdi, rax	      1435	refs.c	FUNCTION_76	CALL_2
0x40039b6	      0xe800000000	                          call 0x40039bb	      1435	refs.c	FUNCTION_76	CALL_2
0x40039bb	          0x4889c7	                            mov rdi, rax	      1435	refs.c	FUNCTION_76	CALL_2
0x40039be	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1435	refs.c	FUNCTION_76	CALL_2
0x40039c2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1435	refs.c	FUNCTION_76	CALL_2
0x40039c6	          0x4989d1	                             mov r9, rdx	      1435	refs.c	FUNCTION_76	CALL_2
0x40039c9	    0x41b801000000	                              mov r8d, 1	      1435	refs.c	FUNCTION_76	CALL_2
0x40039cf	          0x4489e1	                           mov ecx, r12d	      1435	refs.c	FUNCTION_76	CALL_2
0x40039d2	          0x4889c2	                            mov rdx, rax	      1435	refs.c	FUNCTION_76	CALL_2
0x40039d5	          0x4889de	                            mov rsi, rbx	      1435	refs.c	FUNCTION_76	CALL_2
0x40039d8	      0xe888fdffff	                call sym.do_for_each_ref	      1435	refs.c	FUNCTION_76	CALL_2
0x40039dd	        0x4883c420	                           add rsp, 0x20	      1439	refs.c	FUNCTION_76
0x40039e1	              0x5b	                                 pop rbx	      1439	refs.c	FUNCTION_76
0x40039e2	            0x415c	                                 pop r12	      1439	refs.c	FUNCTION_76
0x40039e4	              0x5d	                                 pop rbp	      1439	refs.c	FUNCTION_76
0x40039e5	              0xc3	                                     ret	      1439	refs.c	FUNCTION_76
find_ref_storage_backend	IF,1:ELSE,0:FOR,1:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	25
0x400065c	              0x55	                                push rbp	        25	refs.c	FUNCTION_1
0x400065d	          0x4889e5	                            mov rbp, rsp	        25	refs.c	FUNCTION_1
0x4000660	        0x4883ec20	                           sub rsp, 0x20	        25	refs.c	FUNCTION_1
0x4000664	        0x48897de8	             mov qword [rbp - 0x18], rdi	        25	refs.c	FUNCTION_1
0x4000668	    0x488b05000000	            mov rax, qword [0x0400066f] 	        27	refs.c	FUNCTION_1	FOR_1
0x400066f	        0x488945f8	                mov qword [rbp - 8], rax	        27	refs.c	FUNCTION_1	FOR_1
0x4000673	            0xeb2c	                           jmp 0x40006a1	        27	refs.c	FUNCTION_1	FOR_1
0x4000675	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000679	        0x488b4008	                mov rax, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400067d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        28	refs.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000681	          0x4889d6	                            mov rsi, rdx	        28	refs.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000684	          0x4889c7	                            mov rdi, rax	        28	refs.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000687	      0xe800000000	                          call 0x400068c	        28	refs.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400068c	            0x85c0	                           test eax, eax	        28	refs.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400068e	            0x7506	                           jne 0x4000696	        28	refs.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000690	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	refs.c	FUNCTION_1	FOR_1	IF_1
0x4000694	            0xeb17	                           jmp 0x40006ad	        29	refs.c	FUNCTION_1	FOR_1	IF_1
0x4000696	        0x488b45f8	                mov rax, qword [rbp - 8]	        27	refs.c	FUNCTION_1	FOR_1
0x400069a	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x400069d	        0x488945f8	                mov qword [rbp - 8], rax	        27	refs.c	FUNCTION_1	FOR_1
0x40006a1	      0x48837df800	                  cmp qword [rbp - 8], 0	        27	refs.c	FUNCTION_1	FOR_1
0x40006a6	            0x75cd	                           jne 0x4000675	        27	refs.c	FUNCTION_1	FOR_1
0x40006a8	      0xb800000000	                              mov eax, 0	        30	refs.c	FUNCTION_1
0x40006ad	              0xc9	                                   leave	        31	refs.c	FUNCTION_1
0x40006ae	              0xc3	                                     ret	        31	refs.c	FUNCTION_1
ref_transaction_update	IF,2:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,6:functions,0	81
0x4002a15	              0x55	                                push rbp	      1010	refs.c	FUNCTION_55
0x4002a16	          0x4889e5	                            mov rbp, rsp	      1010	refs.c	FUNCTION_55
0x4002a19	        0x4883ec30	                           sub rsp, 0x30	      1010	refs.c	FUNCTION_55
0x4002a1d	        0x48897df8	                mov qword [rbp - 8], rdi	      1010	refs.c	FUNCTION_55
0x4002a21	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1010	refs.c	FUNCTION_55
0x4002a25	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1010	refs.c	FUNCTION_55
0x4002a29	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1010	refs.c	FUNCTION_55
0x4002a2d	        0x448945dc	             mov dword [rbp - 0x24], r8d	      1010	refs.c	FUNCTION_55
0x4002a31	        0x4c894dd0	              mov qword [rbp - 0x30], r9	      1010	refs.c	FUNCTION_55
0x4002a35	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      1011	refs.c	FUNCTION_55	CALL_1
0x4002a3a	            0x7519	                           jne 0x4002a55	      1011	refs.c	FUNCTION_55	CALL_1
0x4002a3c	      0xb900000000	                              mov ecx, 0	      1011	refs.c	FUNCTION_55	CALL_1
0x4002a41	      0xbaf3030000	                          mov edx, 0x3f3	      1011	refs.c	FUNCTION_55	CALL_1
0x4002a46	      0xbe00000000	                              mov esi, 0	      1011	refs.c	FUNCTION_55	CALL_1
0x4002a4b	      0xbf00000000	                              mov edi, 0	      1011	refs.c	FUNCTION_55	CALL_1
0x4002a50	      0xe800000000	                          call 0x4002a55	      1011	refs.c	FUNCTION_55	CALL_1
0x4002a55	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4002a5a	            0x7428	                            je 0x4002a84	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4002a5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4002a60	          0x4889c7	                            mov rdi, rax	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4002a63	      0xe8fedaffff	                    call sym.is_null_oid	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4002a68	            0x85c0	                           test eax, eax	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4002a6a	            0x7518	                           jne 0x4002a84	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4002a6c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x4002a70	      0xbe01000000	                              mov esi, 1	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x4002a75	          0x4889c7	                            mov rdi, rax	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x4002a78	      0xe800000000	                          call 0x4002a7d	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x4002a7d	            0x85c0	                           test eax, eax	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4002a7f	           0xf95c0	                                setne al	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4002a82	            0xeb11	                           jmp 0x4002a95	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4002a84	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1015	refs.c	FUNCTION_55	IF_1	CALL_4
0x4002a88	          0x4889c7	                            mov rdi, rax	      1015	refs.c	FUNCTION_55	IF_1	CALL_4
0x4002a8b	      0xe800000000	                          call 0x4002a90	      1015	refs.c	FUNCTION_55	IF_1	CALL_4
0x4002a90	            0x85c0	                           test eax, eax	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4002a92	           0xf94c0	                                 sete al	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4002a95	            0x84c0	                             test al, al	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4002a97	            0x7421	                            je 0x4002aba	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4002a99	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4002a9d	          0x4889c2	                            mov rdx, rax	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4002aa0	      0xbe00000000	                              mov esi, 0	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4002aa5	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4002aa9	      0xb800000000	                              mov eax, 0	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4002aae	      0xe800000000	                          call 0x4002ab3	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4002ab3	      0xb8ffffffff	                     mov eax, 0xffffffff	      1018	refs.c	FUNCTION_55	IF_1
0x4002ab8	            0xeb7d	                           jmp 0x4002b37	      1018	refs.c	FUNCTION_55	IF_1
0x4002aba	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1021	refs.c	FUNCTION_55	IF_2
0x4002abd	          0x83e0fc	                     and eax, 0xfffffffc	      1021	refs.c	FUNCTION_55	IF_2
0x4002ac0	            0x85c0	                           test eax, eax	      1021	refs.c	FUNCTION_55	IF_2
0x4002ac2	            0x741e	                            je 0x4002ae2	      1021	refs.c	FUNCTION_55	IF_2
0x4002ac4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1022	refs.c	FUNCTION_55	IF_2
0x4002ac7	            0x89c1	                            mov ecx, eax	      1022	refs.c	FUNCTION_55	IF_2
0x4002ac9	      0xba00000000	                              mov edx, 0	      1022	refs.c	FUNCTION_55	IF_2
0x4002ace	      0xbefe030000	                          mov esi, 0x3fe	      1022	refs.c	FUNCTION_55	IF_2
0x4002ad3	      0xbf00000000	                              mov edi, 0	      1022	refs.c	FUNCTION_55	IF_2
0x4002ad8	      0xb800000000	                              mov eax, 0	      1022	refs.c	FUNCTION_55	IF_2
0x4002add	      0xe800000000	                          call 0x4002ae2	      1022	refs.c	FUNCTION_55	IF_2
0x4002ae2	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1024	refs.c	FUNCTION_55
0x4002ae7	            0x7407	                            je 0x4002af0	      1024	refs.c	FUNCTION_55
0x4002ae9	      0xba04000000	                              mov edx, 4	      1024	refs.c	FUNCTION_55
0x4002aee	            0xeb05	                           jmp 0x4002af5	      1024	refs.c	FUNCTION_55
0x4002af0	      0xba00000000	                              mov edx, 0	      1024	refs.c	FUNCTION_55
0x4002af5	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1024	refs.c	FUNCTION_55
0x4002afa	            0x7407	                            je 0x4002b03	      1024	refs.c	FUNCTION_55
0x4002afc	      0xb808000000	                              mov eax, 8	      1024	refs.c	FUNCTION_55
0x4002b01	            0xeb05	                           jmp 0x4002b08	      1024	refs.c	FUNCTION_55
0x4002b03	      0xb800000000	                              mov eax, 0	      1024	refs.c	FUNCTION_55
0x4002b08	             0x9d0	                             or eax, edx	      1024	refs.c	FUNCTION_55
0x4002b0a	           0x945dc	              or dword [rbp - 0x24], eax	      1024	refs.c	FUNCTION_55
0x4002b0d	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	      1026	refs.c	FUNCTION_55	CALL_6
0x4002b11	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	      1026	refs.c	FUNCTION_55	CALL_6
0x4002b15	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1026	refs.c	FUNCTION_55	CALL_6
0x4002b19	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1026	refs.c	FUNCTION_55	CALL_6
0x4002b1c	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1026	refs.c	FUNCTION_55	CALL_6
0x4002b20	        0x488b45f8	                mov rax, qword [rbp - 8]	      1026	refs.c	FUNCTION_55	CALL_6
0x4002b24	          0x4d89c1	                              mov r9, r8	      1026	refs.c	FUNCTION_55	CALL_6
0x4002b27	          0x4989f8	                             mov r8, rdi	      1026	refs.c	FUNCTION_55	CALL_6
0x4002b2a	          0x4889c7	                            mov rdi, rax	      1026	refs.c	FUNCTION_55	CALL_6
0x4002b2d	      0xe800000000	                          call 0x4002b32	      1026	refs.c	FUNCTION_55	CALL_6
0x4002b32	      0xb800000000	                              mov eax, 0	      1028	refs.c	FUNCTION_55
0x4002b37	              0xc9	                                   leave	      1029	refs.c	FUNCTION_55
0x4002b38	              0xc3	                                     ret	      1029	refs.c	FUNCTION_55
ref_store_init	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,3:functions,0	28
0x400402b	              0x55	                                push rbp	      1655	refs.c	FUNCTION_88
0x400402c	          0x4889e5	                            mov rbp, rsp	      1655	refs.c	FUNCTION_88
0x400402f	        0x4883ec30	                           sub rsp, 0x30	      1655	refs.c	FUNCTION_88
0x4004033	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1655	refs.c	FUNCTION_88
0x4004037	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1655	refs.c	FUNCTION_88
0x400403a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1656	refs.c	FUNCTION_88
0x4004042	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1657	refs.c	FUNCTION_88	CALL_1
0x4004046	          0x4889c7	                            mov rdi, rax	      1657	refs.c	FUNCTION_88	CALL_1
0x4004049	      0xe80ec6ffff	       call sym.find_ref_storage_backend	      1657	refs.c	FUNCTION_88	CALL_1
0x400404e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1657	refs.c	FUNCTION_88	CALL_1
0x4004052	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1660	refs.c	FUNCTION_88	IF_1
0x4004057	            0x7516	                           jne 0x400406f	      1660	refs.c	FUNCTION_88	IF_1
0x4004059	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1661	refs.c	FUNCTION_88	CALL_2
0x400405d	          0x4889c6	                            mov rsi, rax	      1661	refs.c	FUNCTION_88	CALL_2
0x4004060	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4004065	      0xb800000000	                              mov eax, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400406a	      0xe800000000	                          call 0x400406f	      1661	refs.c	FUNCTION_88	CALL_2
0x400406f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4004073	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1663	refs.c	FUNCTION_88	CALL_3
0x4004077	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      1663	refs.c	FUNCTION_88	CALL_3
0x400407a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1663	refs.c	FUNCTION_88	CALL_3
0x400407e	            0x89ce	                            mov esi, ecx	      1663	refs.c	FUNCTION_88	CALL_3
0x4004080	          0x4889d7	                            mov rdi, rdx	      1663	refs.c	FUNCTION_88	CALL_3
0x4004083	            0xffd0	                                call rax	      1663	refs.c	FUNCTION_88	CALL_3
0x4004085	        0x488945f8	                mov qword [rbp - 8], rax	      1663	refs.c	FUNCTION_88	CALL_3
0x4004089	        0x488b45f8	                mov rax, qword [rbp - 8]	      1664	refs.c	FUNCTION_88
0x400408d	              0xc9	                                   leave	      1665	refs.c	FUNCTION_88
0x400408e	              0xc3	                                     ret	      1665	refs.c	FUNCTION_88
hashcpy	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	14
0x400058d	              0x55	                                push rbp	       994	cache.h	FUNCTION_171
0x400058e	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_171
0x4000591	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_171
0x4000595	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_171
0x4000599	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_171
0x400059d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_171	CALL_1
0x40005a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_171	CALL_1
0x40005a5	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_171	CALL_1
0x40005aa	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_171	CALL_1
0x40005ad	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_171	CALL_1
0x40005b0	      0xe800000000	                          call 0x40005b5	       995	cache.h	FUNCTION_171	CALL_1
0x40005b5	              0x90	                                     nop	       996	cache.h	FUNCTION_171
0x40005b6	              0xc9	                                   leave	       996	cache.h	FUNCTION_171
0x40005b7	              0xc3	                                     ret	       996	cache.h	FUNCTION_171
warn_if_dangling_symref	IF,2:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,5:functions,0	64
0x4000e98	              0x55	                                push rbp	       331	refs.c	FUNCTION_17
0x4000e99	          0x4889e5	                            mov rbp, rsp	       331	refs.c	FUNCTION_17
0x4000e9c	        0x4883ec30	                           sub rsp, 0x30	       331	refs.c	FUNCTION_17
0x4000ea0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       331	refs.c	FUNCTION_17
0x4000ea4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       331	refs.c	FUNCTION_17
0x4000ea8	          0x8955dc	             mov dword [rbp - 0x24], edx	       331	refs.c	FUNCTION_17
0x4000eab	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       331	refs.c	FUNCTION_17
0x4000eaf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       332	refs.c	FUNCTION_17
0x4000eb3	        0x488945f0	             mov qword [rbp - 0x10], rax	       332	refs.c	FUNCTION_17
0x4000eb7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       335	refs.c	FUNCTION_17	IF_1
0x4000eba	          0x83e001	                              and eax, 1	       335	refs.c	FUNCTION_17	IF_1
0x4000ebd	            0x85c0	                           test eax, eax	       335	refs.c	FUNCTION_17	IF_1
0x4000ebf	            0x750a	                           jne 0x4000ecb	       335	refs.c	FUNCTION_17	IF_1
0x4000ec1	      0xb800000000	                              mov eax, 0	       336	refs.c	FUNCTION_17	IF_1
0x4000ec6	      0xe9ae000000	                           jmp 0x4000f79	       336	refs.c	FUNCTION_17	IF_1
0x4000ecb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       338	refs.c	FUNCTION_17	CALL_1
0x4000ecf	      0xb900000000	                              mov ecx, 0	       338	refs.c	FUNCTION_17	CALL_1
0x4000ed4	      0xba00000000	                              mov edx, 0	       338	refs.c	FUNCTION_17	CALL_1
0x4000ed9	      0xbe00000000	                              mov esi, 0	       338	refs.c	FUNCTION_17	CALL_1
0x4000ede	          0x4889c7	                            mov rdi, rax	       338	refs.c	FUNCTION_17	CALL_1
0x4000ee1	      0xe800000000	                          call 0x4000ee6	       338	refs.c	FUNCTION_17	CALL_1
0x4000ee6	        0x488945f8	                mov qword [rbp - 8], rax	       338	refs.c	FUNCTION_17	CALL_1
0x4000eea	      0x48837df800	                  cmp qword [rbp - 8], 0	       339	refs.c	FUNCTION_17	IF_2
0x4000eef	            0x7445	                            je 0x4000f36	       339	refs.c	FUNCTION_17	IF_2
0x4000ef1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       340	refs.c	FUNCTION_17	IF_2
0x4000ef5	        0x488b4008	                mov rax, qword [rax + 8]	       340	refs.c	FUNCTION_17	IF_2
0x4000ef9	          0x4885c0	                           test rax, rax	       339	refs.c	FUNCTION_17	IF_2
0x4000efc	            0x741d	                            je 0x4000f1b	       339	refs.c	FUNCTION_17	IF_2
0x4000efe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       341	refs.c	FUNCTION_17	IF_2	CALL_2
0x4000f02	        0x488b5008	                mov rdx, qword [rax + 8]	       341	refs.c	FUNCTION_17	IF_2	CALL_2
0x4000f06	        0x488b45f8	                mov rax, qword [rbp - 8]	       341	refs.c	FUNCTION_17	IF_2	CALL_2
0x4000f0a	          0x4889d6	                            mov rsi, rdx	       341	refs.c	FUNCTION_17	IF_2	CALL_2
0x4000f0d	          0x4889c7	                            mov rdi, rax	       341	refs.c	FUNCTION_17	IF_2	CALL_2
0x4000f10	      0xe800000000	                          call 0x4000f15	       341	refs.c	FUNCTION_17	IF_2	CALL_2
0x4000f15	            0x85c0	                           test eax, eax	       340	refs.c	FUNCTION_17	IF_2
0x4000f17	            0x751d	                           jne 0x4000f36	       340	refs.c	FUNCTION_17	IF_2
0x4000f19	            0xeb22	                           jmp 0x4000f3d	       340	refs.c	FUNCTION_17	IF_2
0x4000f1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       342	refs.c	FUNCTION_17	IF_2	CALL_3
0x4000f1f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       342	refs.c	FUNCTION_17	IF_2	CALL_3
0x4000f23	        0x488b55f8	                mov rdx, qword [rbp - 8]	       342	refs.c	FUNCTION_17	IF_2	CALL_3
0x4000f27	          0x4889d6	                            mov rsi, rdx	       342	refs.c	FUNCTION_17	IF_2	CALL_3
0x4000f2a	          0x4889c7	                            mov rdi, rax	       342	refs.c	FUNCTION_17	IF_2	CALL_3
0x4000f2d	      0xe800000000	                          call 0x4000f32	       342	refs.c	FUNCTION_17	IF_2	CALL_3
0x4000f32	            0x85c0	                           test eax, eax	       340	refs.c	FUNCTION_17	IF_2
0x4000f34	            0x7507	                           jne 0x4000f3d	       340	refs.c	FUNCTION_17	IF_2
0x4000f36	      0xb800000000	                              mov eax, 0	       343	refs.c	FUNCTION_17	IF_2
0x4000f3b	            0xeb3c	                           jmp 0x4000f79	       343	refs.c	FUNCTION_17	IF_2
0x4000f3d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       346	refs.c	FUNCTION_17	CALL_4
0x4000f41	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       346	refs.c	FUNCTION_17	CALL_4
0x4000f45	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       346	refs.c	FUNCTION_17	CALL_4
0x4000f49	          0x488b00	                    mov rax, qword [rax]	       346	refs.c	FUNCTION_17	CALL_4
0x4000f4c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       346	refs.c	FUNCTION_17	CALL_4
0x4000f50	          0x4889ce	                            mov rsi, rcx	       346	refs.c	FUNCTION_17	CALL_4
0x4000f53	          0x4889c7	                            mov rdi, rax	       346	refs.c	FUNCTION_17	CALL_4
0x4000f56	      0xb800000000	                              mov eax, 0	       346	refs.c	FUNCTION_17	CALL_4
0x4000f5b	      0xe800000000	                          call 0x4000f60	       346	refs.c	FUNCTION_17	CALL_4
0x4000f60	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       347	refs.c	FUNCTION_17	CALL_5
0x4000f64	          0x488b00	                    mov rax, qword [rax]	       347	refs.c	FUNCTION_17	CALL_5
0x4000f67	          0x4889c6	                            mov rsi, rax	       347	refs.c	FUNCTION_17	CALL_5
0x4000f6a	      0xbf0a000000	                            mov edi, 0xa	       347	refs.c	FUNCTION_17	CALL_5
0x4000f6f	      0xe800000000	                          call 0x4000f74	       347	refs.c	FUNCTION_17	CALL_5
0x4000f74	      0xb800000000	                              mov eax, 0	       348	refs.c	FUNCTION_17
0x4000f79	              0xc9	                                   leave	       349	refs.c	FUNCTION_17
0x4000f7a	              0xc3	                                     ret	       349	refs.c	FUNCTION_17
find_descendant_ref	IF,3:ELSE,0:FOR,1:WHILE,0:SWITCH,0:DO,0:CALL,3:functions,0	55
0x4003453	              0x55	                                push rbp	      1281	refs.c	FUNCTION_64
0x4003454	          0x4889e5	                            mov rbp, rsp	      1281	refs.c	FUNCTION_64
0x4003457	        0x4883ec30	                           sub rsp, 0x30	      1281	refs.c	FUNCTION_64
0x400345b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1281	refs.c	FUNCTION_64
0x400345f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1281	refs.c	FUNCTION_64
0x4003463	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1281	refs.c	FUNCTION_64
0x4003467	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1284	refs.c	FUNCTION_64	IF_1
0x400346c	            0x750a	                           jne 0x4003478	      1284	refs.c	FUNCTION_64	IF_1
0x400346e	      0xb800000000	                              mov eax, 0	      1285	refs.c	FUNCTION_64	IF_1
0x4003473	      0xe98d000000	                           jmp 0x4003505	      1285	refs.c	FUNCTION_64	IF_1
0x4003478	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x400347c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4003480	      0xba00000000	                              mov edx, 0	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4003485	          0x4889ce	                            mov rsi, rcx	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4003488	          0x4889c7	                            mov rdi, rax	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x400348b	      0xe800000000	                          call 0x4003490	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4003490	          0x8945f4	              mov dword [rbp - 0xc], eax	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4003493	            0xeb5a	                           jmp 0x40034ef	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4003495	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1295	refs.c	FUNCTION_64	FOR_1
0x4003499	          0x488b00	                    mov rax, qword [rax]	      1295	refs.c	FUNCTION_64	FOR_1
0x400349c	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1295	refs.c	FUNCTION_64	FOR_1
0x400349f	          0x4863d2	                         movsxd rdx, edx	      1295	refs.c	FUNCTION_64	FOR_1
0x40034a2	        0x48c1e204	                              shl rdx, 4	      1295	refs.c	FUNCTION_64	FOR_1
0x40034a6	          0x4801d0	                            add rax, rdx	      1295	refs.c	FUNCTION_64	FOR_1
0x40034a9	          0x488b00	                    mov rax, qword [rax]	      1295	refs.c	FUNCTION_64	FOR_1
0x40034ac	        0x488945f8	                mov qword [rbp - 8], rax	      1295	refs.c	FUNCTION_64	FOR_1
0x40034b0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40034b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40034b8	          0x4889d6	                            mov rsi, rdx	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40034bb	          0x4889c7	                            mov rdi, rax	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40034be	      0xe800000000	                          call 0x40034c3	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40034c3	            0x85c0	                           test eax, eax	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40034c5	            0x7438	                            je 0x40034ff	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40034c7	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40034cc	            0x7417	                            je 0x40034e5	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40034ce	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40034d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40034d6	          0x4889d6	                            mov rsi, rdx	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40034d9	          0x4889c7	                            mov rdi, rax	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40034dc	      0xe800000000	                          call 0x40034e1	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40034e1	            0x85c0	                           test eax, eax	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40034e3	            0x7506	                           jne 0x40034eb	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40034e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1301	refs.c	FUNCTION_64	FOR_1	IF_3
0x40034e9	            0xeb1a	                           jmp 0x4003505	      1301	refs.c	FUNCTION_64	FOR_1	IF_3
0x40034eb	        0x8345f401	                add dword [rbp - 0xc], 1	      1294	refs.c	FUNCTION_64	FOR_1
0x40034ef	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1294	refs.c	FUNCTION_64	FOR_1
0x40034f3	          0x8b5008	                mov edx, dword [rax + 8]	      1294	refs.c	FUNCTION_64	FOR_1
0x40034f6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1294	refs.c	FUNCTION_64	FOR_1
0x40034f9	            0x39c2	                            cmp edx, eax	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x40034fb	            0x7798	                            ja 0x4003495	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x40034fd	            0xeb01	                           jmp 0x4003500	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x40034ff	              0x90	                                     nop	      1298	refs.c	FUNCTION_64	FOR_1	IF_2
0x4003500	      0xb800000000	                              mov eax, 0	      1303	refs.c	FUNCTION_64
0x4003505	              0xc9	                                   leave	      1304	refs.c	FUNCTION_64
0x4003506	              0xc3	                                     ret	      1304	refs.c	FUNCTION_64
match_ref_pattern	IF,3:ELSE,1:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	49
0x4000bc0	              0x55	                                push rbp	       249	refs.c	FUNCTION_13
0x4000bc1	          0x4889e5	                            mov rbp, rsp	       249	refs.c	FUNCTION_13
0x4000bc4	        0x4883ec30	                           sub rsp, 0x30	       249	refs.c	FUNCTION_13
0x4000bc8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       249	refs.c	FUNCTION_13
0x4000bcc	        0x488975d0	             mov qword [rbp - 0x30], rsi	       249	refs.c	FUNCTION_13
0x4000bd0	    0x64488b042528	                mov rax, qword fs:[0x28]	       249	refs.c	FUNCTION_13
0x4000bd9	        0x488945f8	                mov qword [rbp - 8], rax	       249	refs.c	FUNCTION_13
0x4000bdd	            0x31c0	                            xor eax, eax	       249	refs.c	FUNCTION_13
0x4000bdf	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       250	refs.c	FUNCTION_13
0x4000be6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       251	refs.c	FUNCTION_13	IF_1
0x4000bea	        0x488b4008	                mov rax, qword [rax + 8]	       251	refs.c	FUNCTION_13	IF_1
0x4000bee	          0x4885c0	                           test rax, rax	       251	refs.c	FUNCTION_13	IF_1
0x4000bf1	            0x7528	                           jne 0x4000c1b	       251	refs.c	FUNCTION_13	IF_1
0x4000bf3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000bf7	          0x488b00	                    mov rax, qword [rax]	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000bfa	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000bfe	      0xba00000000	                              mov edx, 0	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000c03	          0x4889ce	                            mov rsi, rcx	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000c06	          0x4889c7	                            mov rdi, rax	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000c09	      0xe800000000	                          call 0x4000c0e	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000c0e	            0x85c0	                           test eax, eax	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000c10	            0x7544	                           jne 0x4000c56	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000c12	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       253	refs.c	FUNCTION_13	IF_1	IF_2
0x4000c19	            0xeb3b	                           jmp 0x4000c56	       253	refs.c	FUNCTION_13	IF_1	IF_2
0x4000c1b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000c1f	          0x488b08	                    mov rcx, qword [rax]	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000c22	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000c26	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000c2a	          0x4889ce	                            mov rsi, rcx	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000c2d	          0x4889c7	                            mov rdi, rax	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000c30	      0xe829f4ffff	                    call sym.skip_prefix	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000c35	            0x85c0	                           test eax, eax	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000c37	            0x741d	                            je 0x4000c56	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000c39	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       257	refs.c	FUNCTION_13	ELSE_1	IF_3
0x4000c3d	           0xfb600	                   movzx eax, byte [rax]	       257	refs.c	FUNCTION_13	ELSE_1	IF_3
0x4000c40	            0x84c0	                             test al, al	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000c42	            0x740b	                            je 0x4000c4f	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000c44	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       257	refs.c	FUNCTION_13	ELSE_1	IF_3
0x4000c48	           0xfb600	                   movzx eax, byte [rax]	       257	refs.c	FUNCTION_13	ELSE_1	IF_3
0x4000c4b	            0x3c2f	                            cmp al, 0x2f	       257	refs.c	FUNCTION_13	ELSE_1	IF_3
0x4000c4d	            0x7507	                           jne 0x4000c56	       257	refs.c	FUNCTION_13	ELSE_1	IF_3
0x4000c4f	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       258	refs.c	FUNCTION_13	ELSE_1	IF_3
0x4000c56	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       260	refs.c	FUNCTION_13
0x4000c59	        0x488b75f8	                mov rsi, qword [rbp - 8]	       261	refs.c	FUNCTION_13
0x4000c5d	    0x644833342528	                xor rsi, qword fs:[0x28]	       261	refs.c	FUNCTION_13
0x4000c66	            0x7405	                            je 0x4000c6d	       261	refs.c	FUNCTION_13
0x4000c68	      0xe800000000	                          call 0x4000c6d	       261	refs.c	FUNCTION_13
0x4000c6d	              0xc9	                                   leave	       261	refs.c	FUNCTION_13
0x4000c6e	              0xc3	                                     ret	       261	refs.c	FUNCTION_13
hashmap_entry_init	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,0:functions,0	14
0x4000460	              0x55	                                push rbp	       246	hashmap.h	FUNCTION_153
0x4000461	          0x4889e5	                            mov rbp, rsp	       246	hashmap.h	FUNCTION_153
0x4000464	        0x48897de8	             mov qword [rbp - 0x18], rdi	       246	hashmap.h	FUNCTION_153
0x4000468	          0x8975e4	             mov dword [rbp - 0x1c], esi	       246	hashmap.h	FUNCTION_153
0x400046b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	hashmap.h	FUNCTION_153
0x400046f	        0x488945f8	                mov qword [rbp - 8], rax	       247	hashmap.h	FUNCTION_153
0x4000473	        0x488b45f8	                mov rax, qword [rbp - 8]	       248	hashmap.h	FUNCTION_153
0x4000477	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       248	hashmap.h	FUNCTION_153
0x400047a	          0x895008	                mov dword [rax + 8], edx	       248	hashmap.h	FUNCTION_153
0x400047d	        0x488b45f8	                mov rax, qword [rbp - 8]	       249	hashmap.h	FUNCTION_153
0x4000481	    0x48c700000000	                      mov qword [rax], 0	       249	hashmap.h	FUNCTION_153
0x4000488	              0x90	                                     nop	       250	hashmap.h	FUNCTION_153
0x4000489	              0x5d	                                 pop rbp	       250	hashmap.h	FUNCTION_153
0x400048a	              0xc3	                                     ret	       250	hashmap.h	FUNCTION_153
delete_reflog	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	14
0x4004e3c	              0x55	                                push rbp	      2086	refs.c	FUNCTION_115
0x4004e3d	          0x4889e5	                            mov rbp, rsp	      2086	refs.c	FUNCTION_115
0x4004e40	        0x4883ec10	                           sub rsp, 0x10	      2086	refs.c	FUNCTION_115
0x4004e44	        0x48897df8	                mov qword [rbp - 8], rdi	      2086	refs.c	FUNCTION_115
0x4004e48	    0x488b05000000	            mov rax, qword [0x04004e4f] 	      2087	refs.c	FUNCTION_115	CALL_2
0x4004e4f	          0x4889c7	                            mov rdi, rax	      2087	refs.c	FUNCTION_115	CALL_2
0x4004e52	      0xe800000000	                          call 0x4004e57	      2087	refs.c	FUNCTION_115	CALL_2
0x4004e57	          0x4889c2	                            mov rdx, rax	      2087	refs.c	FUNCTION_115	CALL_2
0x4004e5a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2087	refs.c	FUNCTION_115	CALL_2
0x4004e5e	          0x4889c6	                            mov rsi, rax	      2087	refs.c	FUNCTION_115	CALL_2
0x4004e61	          0x4889d7	                            mov rdi, rdx	      2087	refs.c	FUNCTION_115	CALL_2
0x4004e64	      0xe800000000	                          call 0x4004e69	      2087	refs.c	FUNCTION_115	CALL_2
0x4004e69	              0xc9	                                   leave	      2088	refs.c	FUNCTION_115
0x4004e6a	              0xc3	                                     ret	      2088	refs.c	FUNCTION_115
read_ref_at	IF,3:ELSE,1:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,5:functions,0	75
0x400258c	              0x55	                                push rbp	       905	refs.c	FUNCTION_50
0x400258d	          0x4889e5	                            mov rbp, rsp	       905	refs.c	FUNCTION_50
0x4002590	    0x4881ecc00000	                           sub rsp, 0xc0	       905	refs.c	FUNCTION_50
0x4002597	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       905	refs.c	FUNCTION_50
0x400259e	    0x89b574ffffff	             mov dword [rbp - 0x8c], esi	       905	refs.c	FUNCTION_50
0x40025a4	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       905	refs.c	FUNCTION_50
0x40025ab	    0x898d70ffffff	             mov dword [rbp - 0x90], ecx	       905	refs.c	FUNCTION_50
0x40025b1	    0x4c898560ffff	              mov qword [rbp - 0xa0], r8	       905	refs.c	FUNCTION_50
0x40025b8	    0x4c898d58ffff	              mov qword [rbp - 0xa8], r9	       905	refs.c	FUNCTION_50
0x40025bf	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       905	refs.c	FUNCTION_50
0x40025c3	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       905	refs.c	FUNCTION_50
0x40025ca	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       905	refs.c	FUNCTION_50
0x40025ce	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       905	refs.c	FUNCTION_50
0x40025d5	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       905	refs.c	FUNCTION_50
0x40025d9	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       905	refs.c	FUNCTION_50
0x40025e0	    0x64488b042528	                mov rax, qword fs:[0x28]	       905	refs.c	FUNCTION_50
0x40025e9	        0x488945f8	                mov qword [rbp - 8], rax	       905	refs.c	FUNCTION_50
0x40025ed	            0x31c0	                            xor eax, eax	       905	refs.c	FUNCTION_50
0x40025ef	        0x488d4580	                   lea rax, [rbp - 0x80]	       908	refs.c	FUNCTION_50	CALL_1
0x40025f3	      0xba78000000	                           mov edx, 0x78	       908	refs.c	FUNCTION_50	CALL_1
0x40025f8	      0xbe00000000	                              mov esi, 0	       908	refs.c	FUNCTION_50	CALL_1
0x40025fd	          0x4889c7	                            mov rdi, rax	       908	refs.c	FUNCTION_50	CALL_1
0x4002600	      0xe800000000	                          call 0x4002605	       908	refs.c	FUNCTION_50	CALL_1
0x4002605	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       909	refs.c	FUNCTION_50
0x400260c	        0x48894580	             mov qword [rbp - 0x80], rax	       909	refs.c	FUNCTION_50
0x4002610	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       910	refs.c	FUNCTION_50
0x4002617	        0x48894588	             mov qword [rbp - 0x78], rax	       910	refs.c	FUNCTION_50
0x400261b	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	       911	refs.c	FUNCTION_50
0x4002621	          0x894590	             mov dword [rbp - 0x70], eax	       911	refs.c	FUNCTION_50
0x4002624	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       912	refs.c	FUNCTION_50
0x400262b	        0x488945d8	             mov qword [rbp - 0x28], rax	       912	refs.c	FUNCTION_50
0x400262f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       913	refs.c	FUNCTION_50
0x4002636	        0x488945e0	             mov qword [rbp - 0x20], rax	       913	refs.c	FUNCTION_50
0x400263a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       914	refs.c	FUNCTION_50
0x4002641	        0x488945e8	             mov qword [rbp - 0x18], rax	       914	refs.c	FUNCTION_50
0x4002645	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       915	refs.c	FUNCTION_50
0x400264c	        0x488945f0	             mov qword [rbp - 0x10], rax	       915	refs.c	FUNCTION_50
0x4002650	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       916	refs.c	FUNCTION_50
0x4002657	        0x48894598	             mov qword [rbp - 0x68], rax	       916	refs.c	FUNCTION_50
0x400265b	        0x488d5580	                   lea rdx, [rbp - 0x80]	       918	refs.c	FUNCTION_50	CALL_2
0x400265f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       918	refs.c	FUNCTION_50	CALL_2
0x4002666	      0xbe00000000	                              mov esi, 0	       918	refs.c	FUNCTION_50	CALL_2
0x400266b	          0x4889c7	                            mov rdi, rax	       918	refs.c	FUNCTION_50	CALL_2
0x400266e	      0xe800000000	                          call 0x4002673	       918	refs.c	FUNCTION_50	CALL_2
0x4002673	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       920	refs.c	FUNCTION_50	IF_1
0x4002676	            0x85c0	                           test eax, eax	       920	refs.c	FUNCTION_50	IF_1
0x4002678	            0x7530	                           jne 0x40026aa	       920	refs.c	FUNCTION_50	IF_1
0x400267a	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	       921	refs.c	FUNCTION_50	IF_1	IF_2
0x4002680	          0x83e001	                              and eax, 1	       921	refs.c	FUNCTION_50	IF_1	IF_2
0x4002683	            0x85c0	                           test eax, eax	       921	refs.c	FUNCTION_50	IF_1	IF_2
0x4002685	            0x740a	                            je 0x4002691	       921	refs.c	FUNCTION_50	IF_1	IF_2
0x4002687	      0xbf80000000	                           mov edi, 0x80	       922	refs.c	FUNCTION_50	IF_1	CALL_3
0x400268c	      0xe800000000	                          call 0x4002691	       922	refs.c	FUNCTION_50	IF_1	CALL_3
0x4002691	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       924	refs.c	FUNCTION_50	IF_1	CALL_4
0x4002698	          0x4889c6	                            mov rsi, rax	       924	refs.c	FUNCTION_50	IF_1	CALL_4
0x400269b	      0xbf00000000	                              mov edi, 0	       924	refs.c	FUNCTION_50	IF_1	CALL_4
0x40026a0	      0xb800000000	                              mov eax, 0	       924	refs.c	FUNCTION_50	IF_1	CALL_4
0x40026a5	      0xe800000000	                          call 0x40026aa	       924	refs.c	FUNCTION_50	IF_1	CALL_4
0x40026aa	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       926	refs.c	FUNCTION_50	IF_3
0x40026ad	            0x85c0	                           test eax, eax	       926	refs.c	FUNCTION_50	IF_3
0x40026af	            0x7407	                            je 0x40026b8	       926	refs.c	FUNCTION_50	IF_3
0x40026b1	      0xb800000000	                              mov eax, 0	       927	refs.c	FUNCTION_50	IF_3
0x40026b6	            0xeb1d	                           jmp 0x40026d5	       927	refs.c	FUNCTION_50	IF_3
0x40026b8	        0x488d5580	                   lea rdx, [rbp - 0x80]	       929	refs.c	FUNCTION_50	CALL_5
0x40026bc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       929	refs.c	FUNCTION_50	CALL_5
0x40026c3	      0xbe00000000	                              mov esi, 0	       929	refs.c	FUNCTION_50	CALL_5
0x40026c8	          0x4889c7	                            mov rdi, rax	       929	refs.c	FUNCTION_50	CALL_5
0x40026cb	      0xe800000000	                          call 0x40026d0	       929	refs.c	FUNCTION_50	CALL_5
0x40026d0	      0xb801000000	                              mov eax, 1	       931	refs.c	FUNCTION_50
0x40026d5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       932	refs.c	FUNCTION_50
0x40026d9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       932	refs.c	FUNCTION_50
0x40026e2	            0x7405	                            je 0x40026e9	       932	refs.c	FUNCTION_50
0x40026e4	      0xe800000000	                          call 0x40026e9	       932	refs.c	FUNCTION_50
0x40026e9	              0xc9	                                   leave	       932	refs.c	FUNCTION_50
0x40026ea	              0xc3	                                     ret	       932	refs.c	FUNCTION_50
initial_ref_transaction_commit	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	18
0x4004f1e	              0x55	                                push rbp	      2118	refs.c	FUNCTION_118
0x4004f1f	          0x4889e5	                            mov rbp, rsp	      2118	refs.c	FUNCTION_118
0x4004f22	        0x4883ec20	                           sub rsp, 0x20	      2118	refs.c	FUNCTION_118
0x4004f26	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2118	refs.c	FUNCTION_118
0x4004f2a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2118	refs.c	FUNCTION_118
0x4004f2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2119	refs.c	FUNCTION_118
0x4004f32	          0x488b00	                    mov rax, qword [rax]	      2119	refs.c	FUNCTION_118
0x4004f35	        0x488945f8	                mov qword [rbp - 8], rax	      2119	refs.c	FUNCTION_118
0x4004f39	        0x488b45f8	                mov rax, qword [rbp - 8]	      2121	refs.c	FUNCTION_118	CALL_1
0x4004f3d	          0x488b00	                    mov rax, qword [rax]	      2121	refs.c	FUNCTION_118	CALL_1
0x4004f40	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2121	refs.c	FUNCTION_118	CALL_1
0x4004f44	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2121	refs.c	FUNCTION_118	CALL_1
0x4004f48	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      2121	refs.c	FUNCTION_118	CALL_1
0x4004f4c	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2121	refs.c	FUNCTION_118	CALL_1
0x4004f50	          0x4889cf	                            mov rdi, rcx	      2121	refs.c	FUNCTION_118	CALL_1
0x4004f53	            0xffd0	                                call rax	      2121	refs.c	FUNCTION_118	CALL_1
0x4004f55	              0xc9	                                   leave	      2122	refs.c	FUNCTION_118
0x4004f56	              0xc3	                                     ret	      2122	refs.c	FUNCTION_118
ref_transaction_delete	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,3:functions,0	35
0x4002bb1	              0x55	                                push rbp	      1048	refs.c	FUNCTION_57
0x4002bb2	          0x4889e5	                            mov rbp, rsp	      1048	refs.c	FUNCTION_57
0x4002bb5	        0x4883ec30	                           sub rsp, 0x30	      1048	refs.c	FUNCTION_57
0x4002bb9	        0x48897df8	                mov qword [rbp - 8], rdi	      1048	refs.c	FUNCTION_57
0x4002bbd	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1048	refs.c	FUNCTION_57
0x4002bc1	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1048	refs.c	FUNCTION_57
0x4002bc5	          0x894de4	             mov dword [rbp - 0x1c], ecx	      1048	refs.c	FUNCTION_57
0x4002bc8	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      1048	refs.c	FUNCTION_57
0x4002bcc	        0x4c894dd0	              mov qword [rbp - 0x30], r9	      1048	refs.c	FUNCTION_57
0x4002bd0	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x4002bd5	            0x741f	                            je 0x4002bf6	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x4002bd7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x4002bdb	          0x4889c7	                            mov rdi, rax	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x4002bde	      0xe883d9ffff	                    call sym.is_null_oid	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x4002be3	            0x85c0	                           test eax, eax	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x4002be5	            0x740f	                            je 0x4002bf6	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x4002be7	      0xbf00000000	                              mov edi, 0	      1050	refs.c	FUNCTION_57	CALL_2
0x4002bec	      0xb800000000	                              mov eax, 0	      1050	refs.c	FUNCTION_57	CALL_2
0x4002bf1	      0xe800000000	                          call 0x4002bf6	      1050	refs.c	FUNCTION_57	CALL_2
0x4002bf6	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1051	refs.c	FUNCTION_57	CALL_3
0x4002bfa	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1051	refs.c	FUNCTION_57	CALL_3
0x4002bfd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1051	refs.c	FUNCTION_57	CALL_3
0x4002c01	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1051	refs.c	FUNCTION_57	CALL_3
0x4002c05	        0x488b45f8	                mov rax, qword [rbp - 8]	      1051	refs.c	FUNCTION_57	CALL_3
0x4002c09	        0x4883ec08	                              sub rsp, 8	      1051	refs.c	FUNCTION_57	CALL_3
0x4002c0d	          0xff75d0	                 push qword [rbp - 0x30]	      1051	refs.c	FUNCTION_57	CALL_3
0x4002c10	          0x4989f9	                             mov r9, rdi	      1051	refs.c	FUNCTION_57	CALL_3
0x4002c13	          0x4189c8	                            mov r8d, ecx	      1051	refs.c	FUNCTION_57	CALL_3
0x4002c16	          0x4889d1	                            mov rcx, rdx	      1051	refs.c	FUNCTION_57	CALL_3
0x4002c19	      0xba00000000	                              mov edx, 0	      1051	refs.c	FUNCTION_57	CALL_3
0x4002c1e	          0x4889c7	                            mov rdi, rax	      1051	refs.c	FUNCTION_57	CALL_3
0x4002c21	      0xe800000000	                          call 0x4002c26	      1051	refs.c	FUNCTION_57	CALL_3
0x4002c26	        0x4883c410	                           add rsp, 0x10	      1051	refs.c	FUNCTION_57	CALL_3
0x4002c2a	              0xc9	                                   leave	      1054	refs.c	FUNCTION_57
0x4002c2b	              0xc3	                                     ret	      1054	refs.c	FUNCTION_57
shorten_unambiguous_ref	IF,7:ELSE,0:FOR,4:WHILE,0:SWITCH,0:DO,0:CALL,15:functions,0	196
0x4002ece	              0x55	                                push rbp	      1123	refs.c	FUNCTION_61
0x4002ecf	          0x4889e5	                            mov rbp, rsp	      1123	refs.c	FUNCTION_61
0x4002ed2	        0x4883ec60	                           sub rsp, 0x60	      1123	refs.c	FUNCTION_61
0x4002ed6	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1123	refs.c	FUNCTION_61
0x4002eda	          0x8975a4	             mov dword [rbp - 0x5c], esi	      1123	refs.c	FUNCTION_61
0x4002edd	    0x64488b042528	                mov rax, qword fs:[0x28]	      1123	refs.c	FUNCTION_61
0x4002ee6	        0x488945f8	                mov qword [rbp - 8], rax	      1123	refs.c	FUNCTION_61
0x4002eea	            0x31c0	                            xor eax, eax	      1123	refs.c	FUNCTION_61
0x4002eec	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1128	refs.c	FUNCTION_61
0x4002ef4	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1128	refs.c	FUNCTION_61
0x4002efc	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1128	refs.c	FUNCTION_61
0x4002f04	    0x8b0500000000	            mov eax, dword [0x04002f0a] 	      1130	refs.c	FUNCTION_61	IF_1
0x4002f0a	            0x85c0	                           test eax, eax	      1130	refs.c	FUNCTION_61	IF_1
0x4002f0c	     0xf8573010000	                           jne 0x4003085	      1130	refs.c	FUNCTION_61	IF_1
0x4002f12	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1137	refs.c	FUNCTION_61	IF_1
0x4002f1a	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1138	refs.c	FUNCTION_61	IF_1
0x4002f22	    0xc70500000000	               mov dword [0x04002f2c], 0	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002f2c	            0xeb39	                           jmp 0x4002f67	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002f2e	    0x8b0500000000	            mov eax, dword [0x04002f34] 	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4002f34	            0x4898	                                    cdqe	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4002f36	    0x488b04c50000	                  mov rax, qword [rax*8]	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4002f3e	          0x4889c7	                            mov rdi, rax	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4002f41	      0xe800000000	                          call 0x4002f46	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4002f46	          0x4889c2	                            mov rdx, rax	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4002f49	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4002f4d	          0x4801d0	                            add rax, rdx	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4002f50	        0x4883e801	                              sub rax, 1	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4002f54	        0x488945c0	             mov qword [rbp - 0x40], rax	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4002f58	    0x8b0500000000	            mov eax, dword [0x04002f5e] 	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002f5e	          0x83c001	                              add eax, 1	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002f61	    0x890500000000	            mov dword [0x04002f67], eax 	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002f67	    0x8b0500000000	            mov eax, dword [0x04002f6d] 	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002f6d	            0x4898	                                    cdqe	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002f6f	    0x488b04c50000	                  mov rax, qword [rax*8]	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002f77	          0x4885c0	                           test rax, rax	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002f7a	            0x75b2	                           jne 0x4002f2e	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002f7c	    0x8b0500000000	            mov eax, dword [0x04002f82] 	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002f82	            0x4898	                                    cdqe	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002f84	          0x4889c6	                            mov rsi, rax	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002f87	      0xbf08000000	                              mov edi, 8	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002f8c	      0xe8e8d1ffff	                        call sym.st_mult	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002f91	          0x4889c2	                            mov rdx, rax	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002f94	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002f98	          0x4889c6	                            mov rsi, rax	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002f9b	          0x4889d7	                            mov rdi, rdx	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002f9e	      0xe892d1ffff	                         call sym.st_add	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002fa3	          0x4889c7	                            mov rdi, rax	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002fa6	      0xe800000000	                          call 0x4002fab	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002fab	    0x488905000000	            mov qword [0x04002fb2], rax 	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4002fb2	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1147	refs.c	FUNCTION_61	IF_1
0x4002fba	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002fc1	      0xe9b0000000	                           jmp 0x4003076	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002fc6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002fca	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002fce	            0x7219	                            jb 0x4002fe9	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002fd0	      0xb900000000	                              mov ecx, 0	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002fd5	      0xba7d040000	                          mov edx, 0x47d	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002fda	      0xbe00000000	                              mov esi, 0	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002fdf	      0xbf00000000	                              mov edi, 0	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002fe4	      0xe800000000	                          call 0x4002fe9	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002fe9	    0x488b05000000	            mov rax, qword [0x04002ff0] 	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002ff0	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002ff3	          0x4863d2	                         movsxd rdx, edx	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002ff6	        0x48c1e203	                              shl rdx, 3	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002ffa	          0x4801d0	                            add rax, rdx	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002ffd	    0x488b15000000	            mov rdx, qword [0x04003004] 	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003004	    0x8b0d00000000	            mov ecx, dword [0x0400300a] 	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x400300a	          0x4863c9	                         movsxd rcx, ecx	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x400300d	    0x488d34cd0000	                        lea rsi, [rcx*8]	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003015	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003019	          0x4801f1	                            add rcx, rsi	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x400301c	          0x4801ca	                            add rdx, rcx	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x400301f	          0x488910	                    mov qword [rax], rdx	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003022	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003025	            0x4898	                                    cdqe	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003027	    0x488b14c50000	                  mov rdx, qword [rax*8]	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x400302f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003033	        0x482b45c8	             sub rax, qword [rbp - 0x38]	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003037	          0x4889c6	                            mov rsi, rax	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x400303a	    0x488b05000000	            mov rax, qword [0x04003041] 	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003041	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003044	          0x4863c9	                         movsxd rcx, ecx	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003047	        0x48c1e103	                              shl rcx, 3	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x400304b	          0x4801c8	                            add rax, rcx	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x400304e	          0x488b00	                    mov rax, qword [rax]	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003051	    0x41b800000000	                              mov r8d, 0	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003057	      0xb902000000	                              mov ecx, 2	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x400305c	          0x4889c7	                            mov rdi, rax	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x400305f	      0xb800000000	                              mov eax, 0	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003064	      0xe800000000	                          call 0x4003069	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003069	          0x83c001	                              add eax, 1	      1152	refs.c	FUNCTION_61	IF_1	FOR_2
0x400306c	            0x4898	                                    cdqe	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x400306e	        0x480145c8	            add qword [rbp - 0x38], rax 	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003072	        0x8345b001	               add dword [rbp - 0x50], 1	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003076	    0x8b0500000000	            mov eax, dword [0x0400307c] 	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x400307c	          0x3945b0	            cmp dword [rbp - 0x50], eax 	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x400307f	     0xf8c41ffffff	                            jl 0x4002fc6	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003085	    0x8b0500000000	            mov eax, dword [0x0400308b] 	      1157	refs.c	FUNCTION_61	IF_2
0x400308b	            0x85c0	                           test eax, eax	      1157	refs.c	FUNCTION_61	IF_2
0x400308d	            0x7511	                           jne 0x40030a0	      1157	refs.c	FUNCTION_61	IF_2
0x400308f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1158	refs.c	FUNCTION_61	CALL_6
0x4003093	          0x4889c7	                            mov rdi, rax	      1158	refs.c	FUNCTION_61	CALL_6
0x4003096	      0xe800000000	                          call 0x400309b	      1158	refs.c	FUNCTION_61	CALL_6
0x400309b	      0xe93b010000	                           jmp 0x40031db	      1158	refs.c	FUNCTION_61	CALL_6
0x40030a0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1161	refs.c	FUNCTION_61	CALL_7
0x40030a4	          0x4889c7	                            mov rdi, rax	      1161	refs.c	FUNCTION_61	CALL_7
0x40030a7	      0xe800000000	                          call 0x40030ac	      1161	refs.c	FUNCTION_61	CALL_7
0x40030ac	        0x488945d0	             mov qword [rbp - 0x30], rax	      1161	refs.c	FUNCTION_61	CALL_7
0x40030b0	    0x8b0500000000	            mov eax, dword [0x040030b6] 	      1164	refs.c	FUNCTION_61	FOR_3
0x40030b6	          0x83e801	                              sub eax, 1	      1164	refs.c	FUNCTION_61	FOR_3
0x40030b9	          0x8945b0	             mov dword [rbp - 0x50], eax	      1164	refs.c	FUNCTION_61	FOR_3
0x40030bc	      0xe9ec000000	                           jmp 0x40031ad	      1164	refs.c	FUNCTION_61	FOR_3
0x40030c1	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1166	refs.c	FUNCTION_61	FOR_3
0x40030c4	          0x8945b8	             mov dword [rbp - 0x48], eax	      1166	refs.c	FUNCTION_61	FOR_3
0x40030c7	    0x488b05000000	            mov rax, qword [0x040030ce] 	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40030ce	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40030d1	          0x4863d2	                         movsxd rdx, edx	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40030d4	        0x48c1e203	                              shl rdx, 3	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40030d8	          0x4801d0	                            add rax, rdx	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40030db	          0x488b08	                    mov rcx, qword [rax]	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40030de	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40030e2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40030e6	          0x4889ce	                            mov rsi, rcx	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40030e9	          0x4889c7	                            mov rdi, rax	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40030ec	      0xb800000000	                              mov eax, 0	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40030f1	      0xe800000000	                          call 0x40030f6	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40030f6	          0x83f801	                              cmp eax, 1	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40030f9	     0xf85a9000000	                           jne 0x40031a8	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40030ff	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1172	refs.c	FUNCTION_61	FOR_3	CALL_9
0x4003103	          0x4889c7	                            mov rdi, rax	      1172	refs.c	FUNCTION_61	FOR_3	CALL_9
0x4003106	      0xe800000000	                          call 0x400310b	      1172	refs.c	FUNCTION_61	FOR_3	CALL_9
0x400310b	          0x8945bc	             mov dword [rbp - 0x44], eax	      1172	refs.c	FUNCTION_61	FOR_3	CALL_9
0x400310e	        0x837da400	               cmp dword [rbp - 0x5c], 0	      1178	refs.c	FUNCTION_61	FOR_3	IF_4
0x4003112	            0x7409	                            je 0x400311d	      1178	refs.c	FUNCTION_61	FOR_3	IF_4
0x4003114	    0x8b0500000000	            mov eax, dword [0x0400311a] 	      1179	refs.c	FUNCTION_61	FOR_3	IF_4
0x400311a	          0x8945b8	             mov dword [rbp - 0x48], eax	      1179	refs.c	FUNCTION_61	FOR_3	IF_4
0x400311d	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003124	            0xeb5d	                           jmp 0x4003183	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003126	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1186	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003129	            0x4898	                                    cdqe	      1186	refs.c	FUNCTION_61	FOR_3	FOR_4
0x400312b	    0x488b04c50000	                  mov rax, qword [rax*8]	      1186	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003133	        0x488945d8	             mov qword [rbp - 0x28], rax	      1186	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003137	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1189	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_5
0x400313a	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      1189	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_5
0x400313d	            0x743f	                            je 0x400317e	      1189	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_5
0x400313f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1197	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003143	      0xbe00000000	                              mov esi, 0	      1197	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003148	          0x4889c7	                            mov rdi, rax	      1197	refs.c	FUNCTION_61	FOR_3	FOR_4
0x400314b	      0xe829d1ffff	                  call sym.strbuf_setlen	      1197	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003150	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x4003154	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x4003157	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x400315b	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x400315f	          0x4889c7	                            mov rdi, rax	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x4003162	      0xb800000000	                              mov eax, 0	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x4003167	      0xe800000000	                          call 0x400316c	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x400316c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_11
0x4003170	          0x4889c7	                            mov rdi, rax	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_11
0x4003173	      0xe800000000	                          call 0x4003178	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_11
0x4003178	            0x85c0	                           test eax, eax	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_11
0x400317a	            0x7511	                           jne 0x400318d	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_11
0x400317c	            0xeb01	                           jmp 0x400317f	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_11
0x400317e	              0x90	                                     nop	      1190	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_5
0x400317f	        0x8345b401	               add dword [rbp - 0x4c], 1	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003183	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003186	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003189	            0x7c9b	                            jl 0x4003126	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x400318b	            0xeb01	                           jmp 0x400318e	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x400318d	              0x90	                                     nop	      1201	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6
0x400318e	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1208	refs.c	FUNCTION_61	FOR_3	IF_7
0x4003191	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1208	refs.c	FUNCTION_61	FOR_3	IF_7
0x4003194	            0x7513	                           jne 0x40031a9	      1208	refs.c	FUNCTION_61	FOR_3	IF_7
0x4003196	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1209	refs.c	FUNCTION_61	FOR_3	IF_7	CALL_12
0x400319a	          0x4889c7	                            mov rdi, rax	      1209	refs.c	FUNCTION_61	FOR_3	IF_7	CALL_12
0x400319d	      0xe800000000	                          call 0x40031a2	      1209	refs.c	FUNCTION_61	FOR_3	IF_7	CALL_12
0x40031a2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1210	refs.c	FUNCTION_61	FOR_3	IF_7
0x40031a6	            0xeb33	                           jmp 0x40031db	      1210	refs.c	FUNCTION_61	FOR_3	IF_7
0x40031a8	              0x90	                                     nop	      1170	refs.c	FUNCTION_61	FOR_3	IF_3
0x40031a9	        0x836db001	               sub dword [rbp - 0x50], 1	      1164	refs.c	FUNCTION_61	FOR_3
0x40031ad	        0x837db000	               cmp dword [rbp - 0x50], 0	      1164	refs.c	FUNCTION_61	FOR_3
0x40031b1	     0xf8f0affffff	                            jg 0x40030c1	      1164	refs.c	FUNCTION_61	FOR_3
0x40031b7	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1214	refs.c	FUNCTION_61	CALL_13
0x40031bb	          0x4889c7	                            mov rdi, rax	      1214	refs.c	FUNCTION_61	CALL_13
0x40031be	      0xe800000000	                          call 0x40031c3	      1214	refs.c	FUNCTION_61	CALL_13
0x40031c3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1215	refs.c	FUNCTION_61	CALL_14
0x40031c7	          0x4889c7	                            mov rdi, rax	      1215	refs.c	FUNCTION_61	CALL_14
0x40031ca	      0xe800000000	                          call 0x40031cf	      1215	refs.c	FUNCTION_61	CALL_14
0x40031cf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1216	refs.c	FUNCTION_61	CALL_15
0x40031d3	          0x4889c7	                            mov rdi, rax	      1216	refs.c	FUNCTION_61	CALL_15
0x40031d6	      0xe800000000	                          call 0x40031db	      1216	refs.c	FUNCTION_61	CALL_15
0x40031db	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1217	refs.c	FUNCTION_61
0x40031df	    0x644833342528	                xor rsi, qword fs:[0x28]	      1217	refs.c	FUNCTION_61
0x40031e8	            0x7405	                            je 0x40031ef	      1217	refs.c	FUNCTION_61
0x40031ea	      0xe800000000	                          call 0x40031ef	      1217	refs.c	FUNCTION_61
0x40031ef	              0xc9	                                   leave	      1217	refs.c	FUNCTION_61
0x40031f0	              0xc3	                                     ret	      1217	refs.c	FUNCTION_61
prettify_refname	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,3:functions,0	26
0x40014b4	              0x55	                                push rbp	       474	refs.c	FUNCTION_30
0x40014b5	          0x4889e5	                            mov rbp, rsp	       474	refs.c	FUNCTION_30
0x40014b8	        0x4883ec08	                              sub rsp, 8	       474	refs.c	FUNCTION_30
0x40014bc	        0x48897df8	                mov qword [rbp - 8], rdi	       474	refs.c	FUNCTION_30
0x40014c0	        0x488b45f8	                mov rax, qword [rbp - 8]	       475	refs.c	FUNCTION_30	IF_1	CALL_1
0x40014c4	        0x488d55f8	                      lea rdx, [rbp - 8]	       475	refs.c	FUNCTION_30	IF_1	CALL_1
0x40014c8	      0xbe00000000	                              mov esi, 0	       475	refs.c	FUNCTION_30	IF_1	CALL_1
0x40014cd	          0x4889c7	                            mov rdi, rax	       475	refs.c	FUNCTION_30	IF_1	CALL_1
0x40014d0	      0xe889ebffff	                    call sym.skip_prefix	       475	refs.c	FUNCTION_30	IF_1	CALL_1
0x40014d5	            0x85c0	                           test eax, eax	       475	refs.c	FUNCTION_30	IF_1	CALL_1
0x40014d7	            0x752e	                           jne 0x4001507	       475	refs.c	FUNCTION_30	IF_1	CALL_1
0x40014d9	        0x488b45f8	                mov rax, qword [rbp - 8]	       476	refs.c	FUNCTION_30	IF_1	CALL_2
0x40014dd	        0x488d55f8	                      lea rdx, [rbp - 8]	       476	refs.c	FUNCTION_30	IF_1	CALL_2
0x40014e1	      0xbe00000000	                              mov esi, 0	       476	refs.c	FUNCTION_30	IF_1	CALL_2
0x40014e6	          0x4889c7	                            mov rdi, rax	       476	refs.c	FUNCTION_30	IF_1	CALL_2
0x40014e9	      0xe870ebffff	                    call sym.skip_prefix	       476	refs.c	FUNCTION_30	IF_1	CALL_2
0x40014ee	            0x85c0	                           test eax, eax	       475	refs.c	FUNCTION_30	IF_1	CALL_1
0x40014f0	            0x7515	                           jne 0x4001507	       475	refs.c	FUNCTION_30	IF_1	CALL_1
0x40014f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       477	refs.c	FUNCTION_30	IF_1	CALL_3
0x40014f6	        0x488d55f8	                      lea rdx, [rbp - 8]	       477	refs.c	FUNCTION_30	IF_1	CALL_3
0x40014fa	      0xbe00000000	                              mov esi, 0	       477	refs.c	FUNCTION_30	IF_1	CALL_3
0x40014ff	          0x4889c7	                            mov rdi, rax	       477	refs.c	FUNCTION_30	IF_1	CALL_3
0x4001502	      0xe857ebffff	                    call sym.skip_prefix	       477	refs.c	FUNCTION_30	IF_1	CALL_3
0x4001507	        0x488b45f8	                mov rax, qword [rbp - 8]	       479	refs.c	FUNCTION_30
0x400150b	              0xc9	                                   leave	       480	refs.c	FUNCTION_30
0x400150c	              0xc3	                                     ret	       480	refs.c	FUNCTION_30
do_for_each_ref	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	28
0x4003765	              0x55	                                push rbp	      1380	refs.c	FUNCTION_69
0x4003766	          0x4889e5	                            mov rbp, rsp	      1380	refs.c	FUNCTION_69
0x4003769	        0x4883ec40	                           sub rsp, 0x40	      1380	refs.c	FUNCTION_69
0x400376d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1380	refs.c	FUNCTION_69
0x4003771	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1380	refs.c	FUNCTION_69
0x4003775	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1380	refs.c	FUNCTION_69
0x4003779	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      1380	refs.c	FUNCTION_69
0x400377c	        0x448945d0	             mov dword [rbp - 0x30], r8d	      1380	refs.c	FUNCTION_69
0x4003780	        0x4c894dc8	              mov qword [rbp - 0x38], r9	      1380	refs.c	FUNCTION_69
0x4003784	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1383	refs.c	FUNCTION_69	IF_1
0x4003789	            0x7507	                           jne 0x4003792	      1383	refs.c	FUNCTION_69	IF_1
0x400378b	      0xb800000000	                              mov eax, 0	      1384	refs.c	FUNCTION_69	IF_1
0x4003790	            0xeb31	                           jmp 0x40037c3	      1384	refs.c	FUNCTION_69	IF_1
0x4003792	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      1386	refs.c	FUNCTION_69	CALL_1
0x4003795	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1386	refs.c	FUNCTION_69	CALL_1
0x4003798	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1386	refs.c	FUNCTION_69	CALL_1
0x400379c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1386	refs.c	FUNCTION_69	CALL_1
0x40037a0	          0x4889c7	                            mov rdi, rax	      1386	refs.c	FUNCTION_69	CALL_1
0x40037a3	      0xe800000000	                          call 0x40037a8	      1386	refs.c	FUNCTION_69	CALL_1
0x40037a8	        0x488945f8	                mov qword [rbp - 8], rax	      1386	refs.c	FUNCTION_69	CALL_1
0x40037ac	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1388	refs.c	FUNCTION_69	CALL_2
0x40037b0	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1388	refs.c	FUNCTION_69	CALL_2
0x40037b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1388	refs.c	FUNCTION_69	CALL_2
0x40037b8	          0x4889ce	                            mov rsi, rcx	      1388	refs.c	FUNCTION_69	CALL_2
0x40037bb	          0x4889c7	                            mov rdi, rax	      1388	refs.c	FUNCTION_69	CALL_2
0x40037be	      0xe800000000	                          call 0x40037c3	      1388	refs.c	FUNCTION_69	CALL_2
0x40037c3	              0xc9	                                   leave	      1389	refs.c	FUNCTION_69
0x40037c4	              0xc3	                                     ret	      1389	refs.c	FUNCTION_69
has_glob_specials	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	10
0x400063d	              0x55	                                push rbp	       347	refs.h	FUNCTION_212
0x400063e	          0x4889e5	                            mov rbp, rsp	       347	refs.h	FUNCTION_212
0x4000641	        0x4883ec10	                           sub rsp, 0x10	       347	refs.h	FUNCTION_212
0x4000645	        0x48897df8	                mov qword [rbp - 8], rdi	       347	refs.h	FUNCTION_212
0x4000649	        0x488b45f8	                mov rax, qword [rbp - 8]	       348	refs.h	FUNCTION_212	CALL_1
0x400064d	      0xbe00000000	                              mov esi, 0	       348	refs.h	FUNCTION_212	CALL_1
0x4000652	          0x4889c7	                            mov rdi, rax	       348	refs.h	FUNCTION_212	CALL_1
0x4000655	      0xe800000000	                          call 0x400065a	       348	refs.h	FUNCTION_212	CALL_1
0x400065a	              0xc9	                                   leave	       349	refs.h	FUNCTION_212
0x400065b	              0xc3	                                     ret	       349	refs.h	FUNCTION_212
expand_ref	IF,5:ELSE,2:FOR,1:WHILE,0:SWITCH,0:DO,0:CALL,8:functions,0	106
0x40016ed	              0x55	                                push rbp	       548	refs.c	FUNCTION_35
0x40016ee	          0x4889e5	                            mov rbp, rsp	       548	refs.c	FUNCTION_35
0x40016f1	        0x4883c480	             add rsp, 0xffffffffffffff80	       548	refs.c	FUNCTION_35
0x40016f5	        0x48897d98	             mov qword [rbp - 0x68], rdi	       548	refs.c	FUNCTION_35
0x40016f9	          0x897594	             mov dword [rbp - 0x6c], esi	       548	refs.c	FUNCTION_35
0x40016fc	        0x48895588	             mov qword [rbp - 0x78], rdx	       548	refs.c	FUNCTION_35
0x4001700	        0x48894d80	             mov qword [rbp - 0x80], rcx	       548	refs.c	FUNCTION_35
0x4001704	    0x64488b042528	                mov rax, qword fs:[0x28]	       548	refs.c	FUNCTION_35
0x400170d	        0x488945f8	                mov qword [rbp - 8], rax	       548	refs.c	FUNCTION_35
0x4001711	            0x31c0	                            xor eax, eax	       548	refs.c	FUNCTION_35
0x4001713	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       550	refs.c	FUNCTION_35
0x400171a	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       551	refs.c	FUNCTION_35
0x4001722	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       551	refs.c	FUNCTION_35
0x400172a	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       551	refs.c	FUNCTION_35
0x4001732	        0x488b4580	             mov rax, qword [rbp - 0x80]	       553	refs.c	FUNCTION_35
0x4001736	    0x48c700000000	                      mov qword [rax], 0	       553	refs.c	FUNCTION_35
0x400173d	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       554	refs.c	FUNCTION_35	FOR_1
0x4001745	      0xe90c010000	                           jmp 0x4001856	       554	refs.c	FUNCTION_35	FOR_1
0x400174a	        0x837da400	               cmp dword [rbp - 0x5c], 0	       559	refs.c	FUNCTION_35	FOR_1
0x400174e	            0x7406	                            je 0x4001756	       559	refs.c	FUNCTION_35	FOR_1
0x4001750	        0x488d45e0	                   lea rax, [rbp - 0x20]	       559	refs.c	FUNCTION_35	FOR_1
0x4001754	            0xeb04	                           jmp 0x400175a	       559	refs.c	FUNCTION_35	FOR_1
0x4001756	        0x488b4588	             mov rax, qword [rbp - 0x78]	       559	refs.c	FUNCTION_35	FOR_1
0x400175a	        0x488945b0	             mov qword [rbp - 0x50], rax	       559	refs.c	FUNCTION_35	FOR_1
0x400175e	        0x488d45c0	                   lea rax, [rbp - 0x40]	       560	refs.c	FUNCTION_35	FOR_1
0x4001762	      0xbe00000000	                              mov esi, 0	       560	refs.c	FUNCTION_35	FOR_1
0x4001767	          0x4889c7	                            mov rdi, rax	       560	refs.c	FUNCTION_35	FOR_1
0x400176a	      0xe80aebffff	                  call sym.strbuf_setlen	       560	refs.c	FUNCTION_35	FOR_1
0x400176f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x4001773	          0x488b30	                    mov rsi, qword [rax]	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x4001776	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x400177a	          0x8b5594	             mov edx, dword [rbp - 0x6c]	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x400177d	        0x488d45c0	                   lea rax, [rbp - 0x40]	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x4001781	          0x4889c7	                            mov rdi, rax	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x4001784	      0xb800000000	                              mov eax, 0	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x4001789	      0xe800000000	                          call 0x400178e	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x400178e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       562	refs.c	FUNCTION_35	FOR_1	CALL_2
0x4001792	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       562	refs.c	FUNCTION_35	FOR_1	CALL_2
0x4001796	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       562	refs.c	FUNCTION_35	FOR_1	CALL_2
0x400179a	      0xbe01000000	                              mov esi, 1	       562	refs.c	FUNCTION_35	FOR_1	CALL_2
0x400179f	          0x4889c7	                            mov rdi, rax	       562	refs.c	FUNCTION_35	FOR_1	CALL_2
0x40017a2	      0xe800000000	                          call 0x40017a7	       562	refs.c	FUNCTION_35	FOR_1	CALL_2
0x40017a7	        0x488945b8	             mov qword [rbp - 0x48], rax	       562	refs.c	FUNCTION_35	FOR_1	CALL_2
0x40017ab	      0x48837db800	               cmp qword [rbp - 0x48], 0	       564	refs.c	FUNCTION_35	FOR_1	IF_1
0x40017b0	            0x7432	                            je 0x40017e4	       564	refs.c	FUNCTION_35	FOR_1	IF_1
0x40017b2	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x40017b5	          0x8d5001	                      lea edx, [rax + 1]	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x40017b8	          0x8955a4	             mov dword [rbp - 0x5c], edx	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x40017bb	            0x85c0	                           test eax, eax	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x40017bd	            0x7516	                           jne 0x40017d5	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x40017bf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x40017c3	          0x4889c7	                            mov rdi, rax	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x40017c6	      0xe800000000	                          call 0x40017cb	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x40017cb	          0x4889c2	                            mov rdx, rax	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x40017ce	        0x488b4580	             mov rax, qword [rbp - 0x80]	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x40017d2	          0x488910	                    mov qword [rax], rdx	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x40017d5	    0x8b0500000000	            mov eax, dword [0x040017db] 	       567	refs.c	FUNCTION_35	FOR_1	IF_1	IF_3
0x40017db	            0x85c0	                           test eax, eax	       567	refs.c	FUNCTION_35	FOR_1	IF_1	IF_3
0x40017dd	            0x7572	                           jne 0x4001851	       567	refs.c	FUNCTION_35	FOR_1	IF_1	IF_3
0x40017df	      0xe982000000	                           jmp 0x4001866	       568	refs.c	FUNCTION_35	FOR_1	IF_1	IF_3
0x40017e4	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x40017e7	          0x83e001	                              and eax, 1	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x40017ea	            0x85c0	                           test eax, eax	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x40017ec	            0x742d	                            je 0x400181b	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x40017ee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x40017f2	      0xbe00000000	                              mov esi, 0	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x40017f7	          0x4889c7	                            mov rdi, rax	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x40017fa	      0xe800000000	                          call 0x40017ff	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x40017ff	            0x85c0	                           test eax, eax	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x4001801	            0x7418	                            je 0x400181b	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x4001803	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x4001807	          0x4889c6	                            mov rsi, rax	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x400180a	      0xbf00000000	                              mov edi, 0	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x400180f	      0xb800000000	                              mov eax, 0	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x4001814	      0xe800000000	                          call 0x4001819	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x4001819	            0xeb36	                           jmp 0x4001851	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x400181b	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_6
0x400181e	          0x83e004	                              and eax, 4	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_6
0x4001821	            0x85c0	                           test eax, eax	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_6
0x4001823	            0x742c	                            je 0x4001851	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_6
0x4001825	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_6
0x4001829	      0xbe2f000000	                           mov esi, 0x2f	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_6
0x400182e	          0x4889c7	                            mov rdi, rax	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_6
0x4001831	      0xe800000000	                          call 0x4001836	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_6
0x4001836	          0x4885c0	                           test rax, rax	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_6
0x4001839	            0x7416	                            je 0x4001851	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_6
0x400183b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_7
0x400183f	          0x4889c6	                            mov rsi, rax	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_7
0x4001842	      0xbf00000000	                              mov edi, 0	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_7
0x4001847	      0xb800000000	                              mov eax, 0	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_7
0x400184c	      0xe800000000	                          call 0x4001851	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_7
0x4001851	      0x488345a808	               add qword [rbp - 0x58], 8	       554	refs.c	FUNCTION_35	FOR_1
0x4001856	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       554	refs.c	FUNCTION_35	FOR_1
0x400185a	          0x488b00	                    mov rax, qword [rax]	       554	refs.c	FUNCTION_35	FOR_1
0x400185d	          0x4885c0	                           test rax, rax	       554	refs.c	FUNCTION_35	FOR_1
0x4001860	     0xf85e4feffff	                           jne 0x400174a	       554	refs.c	FUNCTION_35	FOR_1
0x4001866	        0x488d45c0	                   lea rax, [rbp - 0x40]	       575	refs.c	FUNCTION_35	CALL_8
0x400186a	          0x4889c7	                            mov rdi, rax	       575	refs.c	FUNCTION_35	CALL_8
0x400186d	      0xe800000000	                          call 0x4001872	       575	refs.c	FUNCTION_35	CALL_8
0x4001872	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       576	refs.c	FUNCTION_35
0x4001875	        0x488b4df8	                mov rcx, qword [rbp - 8]	       577	refs.c	FUNCTION_35
0x4001879	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       577	refs.c	FUNCTION_35
0x4001882	            0x7405	                            je 0x4001889	       577	refs.c	FUNCTION_35
0x4001884	      0xe800000000	                          call 0x4001889	       577	refs.c	FUNCTION_35
0x4001889	              0xc9	                                   leave	       577	refs.c	FUNCTION_35
0x400188a	              0xc3	                                     ret	       577	refs.c	FUNCTION_35
skip_prefix	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,1:CALL,0:functions,0	27
0x400005e	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_131
0x400005f	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_131
0x4000062	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_131
0x4000066	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_131
0x400006a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_131
0x400006e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000072	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000075	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000077	            0x7512	                           jne 0x400008b	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000079	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x400007d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000081	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000084	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000089	            0xeb27	                           jmp 0x40000b2	       486	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x400008b	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_131	DO_1
0x400008f	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000093	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000097	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_131	DO_1
0x400009a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_131	DO_1
0x400009e	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_131	DO_1
0x40000a2	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_131	DO_1
0x40000a6	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_131	DO_1
0x40000a9	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_131	DO_1
0x40000ab	            0x74c1	                            je 0x400006e	       488	git-compat-util.h	FUNCTION_131	DO_1
0x40000ad	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_131
0x40000b2	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_131
0x40000b3	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_131
refs_for_each_rawref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	17
0x4003aa0	              0x55	                                push rbp	      1453	refs.c	FUNCTION_78
0x4003aa1	          0x4889e5	                            mov rbp, rsp	      1453	refs.c	FUNCTION_78
0x4003aa4	        0x4883ec20	                           sub rsp, 0x20	      1453	refs.c	FUNCTION_78
0x4003aa8	        0x48897df8	                mov qword [rbp - 8], rdi	      1453	refs.c	FUNCTION_78
0x4003aac	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1453	refs.c	FUNCTION_78
0x4003ab0	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1453	refs.c	FUNCTION_78
0x4003ab4	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1454	refs.c	FUNCTION_78	CALL_1
0x4003ab8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1454	refs.c	FUNCTION_78	CALL_1
0x4003abc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1454	refs.c	FUNCTION_78	CALL_1
0x4003ac0	          0x4989c9	                             mov r9, rcx	      1454	refs.c	FUNCTION_78	CALL_1
0x4003ac3	    0x41b801000000	                              mov r8d, 1	      1454	refs.c	FUNCTION_78	CALL_1
0x4003ac9	      0xb900000000	                              mov ecx, 0	      1454	refs.c	FUNCTION_78	CALL_1
0x4003ace	      0xbe00000000	                              mov esi, 0	      1454	refs.c	FUNCTION_78	CALL_1
0x4003ad3	          0x4889c7	                            mov rdi, rax	      1454	refs.c	FUNCTION_78	CALL_1
0x4003ad6	      0xe88afcffff	                call sym.do_for_each_ref	      1454	refs.c	FUNCTION_78	CALL_1
0x4003adb	              0xc9	                                   leave	      1456	refs.c	FUNCTION_78
0x4003adc	              0xc3	                                     ret	      1456	refs.c	FUNCTION_78
refs_for_each_branch_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	14
0x40010b7	              0x55	                                push rbp	       384	refs.c	FUNCTION_22
0x40010b8	          0x4889e5	                            mov rbp, rsp	       384	refs.c	FUNCTION_22
0x40010bb	        0x4883ec20	                           sub rsp, 0x20	       384	refs.c	FUNCTION_22
0x40010bf	        0x48897df8	                mov qword [rbp - 8], rdi	       384	refs.c	FUNCTION_22
0x40010c3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       384	refs.c	FUNCTION_22
0x40010c7	        0x488955e8	             mov qword [rbp - 0x18], rdx	       384	refs.c	FUNCTION_22
0x40010cb	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       385	refs.c	FUNCTION_22	CALL_1
0x40010cf	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       385	refs.c	FUNCTION_22	CALL_1
0x40010d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       385	refs.c	FUNCTION_22	CALL_1
0x40010d7	      0xbe00000000	                              mov esi, 0	       385	refs.c	FUNCTION_22	CALL_1
0x40010dc	          0x4889c7	                            mov rdi, rax	       385	refs.c	FUNCTION_22	CALL_1
0x40010df	      0xe800000000	                          call 0x40010e4	       385	refs.c	FUNCTION_22	CALL_1
0x40010e4	              0xc9	                                   leave	       386	refs.c	FUNCTION_22
0x40010e5	              0xc3	                                     ret	       386	refs.c	FUNCTION_22
read_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	13
0x4000b62	              0x55	                                push rbp	       238	refs.c	FUNCTION_11
0x4000b63	          0x4889e5	                            mov rbp, rsp	       238	refs.c	FUNCTION_11
0x4000b66	        0x4883ec10	                           sub rsp, 0x10	       238	refs.c	FUNCTION_11
0x4000b6a	        0x48897df8	                mov qword [rbp - 8], rdi	       238	refs.c	FUNCTION_11
0x4000b6e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       238	refs.c	FUNCTION_11
0x4000b72	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       239	refs.c	FUNCTION_11	CALL_1
0x4000b76	        0x488b45f8	                mov rax, qword [rbp - 8]	       239	refs.c	FUNCTION_11	CALL_1
0x4000b7a	      0xb900000000	                              mov ecx, 0	       239	refs.c	FUNCTION_11	CALL_1
0x4000b7f	      0xbe01000000	                              mov esi, 1	       239	refs.c	FUNCTION_11	CALL_1
0x4000b84	          0x4889c7	                            mov rdi, rax	       239	refs.c	FUNCTION_11	CALL_1
0x4000b87	      0xe800000000	                          call 0x4000b8c	       239	refs.c	FUNCTION_11	CALL_1
0x4000b8c	              0xc9	                                   leave	       240	refs.c	FUNCTION_11
0x4000b8d	              0xc3	                                     ret	       240	refs.c	FUNCTION_11
refs_rename_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	17
0x4004fc6	              0x55	                                push rbp	      2138	refs.c	FUNCTION_121
0x4004fc7	          0x4889e5	                            mov rbp, rsp	      2138	refs.c	FUNCTION_121
0x4004fca	        0x4883ec20	                           sub rsp, 0x20	      2138	refs.c	FUNCTION_121
0x4004fce	        0x48897df8	                mov qword [rbp - 8], rdi	      2138	refs.c	FUNCTION_121
0x4004fd2	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2138	refs.c	FUNCTION_121
0x4004fd6	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2138	refs.c	FUNCTION_121
0x4004fda	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2138	refs.c	FUNCTION_121
0x4004fde	        0x488b45f8	                mov rax, qword [rbp - 8]	      2139	refs.c	FUNCTION_121	CALL_1
0x4004fe2	          0x488b00	                    mov rax, qword [rax]	      2139	refs.c	FUNCTION_121	CALL_1
0x4004fe5	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2139	refs.c	FUNCTION_121	CALL_1
0x4004fe9	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2139	refs.c	FUNCTION_121	CALL_1
0x4004fed	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2139	refs.c	FUNCTION_121	CALL_1
0x4004ff1	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2139	refs.c	FUNCTION_121	CALL_1
0x4004ff5	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2139	refs.c	FUNCTION_121	CALL_1
0x4004ff9	            0xffd0	                                call rax	      2139	refs.c	FUNCTION_121	CALL_1
0x4004ffb	              0xc9	                                   leave	      2140	refs.c	FUNCTION_121
0x4004ffc	              0xc3	                                     ret	      2140	refs.c	FUNCTION_121
for_each_remote_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	16
0x400114c	              0x55	                                push rbp	       399	refs.c	FUNCTION_25
0x400114d	          0x4889e5	                            mov rbp, rsp	       399	refs.c	FUNCTION_25
0x4001150	        0x4883ec10	                           sub rsp, 0x10	       399	refs.c	FUNCTION_25
0x4001154	        0x48897df8	                mov qword [rbp - 8], rdi	       399	refs.c	FUNCTION_25
0x4001158	        0x488975f0	             mov qword [rbp - 0x10], rsi	       399	refs.c	FUNCTION_25
0x400115c	    0x488b05000000	            mov rax, qword [0x04001163] 	       400	refs.c	FUNCTION_25	CALL_2
0x4001163	          0x4889c7	                            mov rdi, rax	       400	refs.c	FUNCTION_25	CALL_2
0x4001166	      0xe800000000	                          call 0x400116b	       400	refs.c	FUNCTION_25	CALL_2
0x400116b	          0x4889c1	                            mov rcx, rax	       400	refs.c	FUNCTION_25	CALL_2
0x400116e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       400	refs.c	FUNCTION_25	CALL_2
0x4001172	        0x488b45f8	                mov rax, qword [rbp - 8]	       400	refs.c	FUNCTION_25	CALL_2
0x4001176	          0x4889c6	                            mov rsi, rax	       400	refs.c	FUNCTION_25	CALL_2
0x4001179	          0x4889cf	                            mov rdi, rcx	       400	refs.c	FUNCTION_25	CALL_2
0x400117c	      0xe800000000	                          call 0x4001181	       400	refs.c	FUNCTION_25	CALL_2
0x4001181	              0xc9	                                   leave	       401	refs.c	FUNCTION_25
0x4001182	              0xc3	                                     ret	       401	refs.c	FUNCTION_25
for_each_glob_ref_in	IF,3:ELSE,1:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,9:functions,0	72
0x4001363	              0x55	                                push rbp	       441	refs.c	FUNCTION_28
0x4001364	          0x4889e5	                            mov rbp, rsp	       441	refs.c	FUNCTION_28
0x4001367	        0x4883ec70	                           sub rsp, 0x70	       441	refs.c	FUNCTION_28
0x400136b	        0x48897da8	             mov qword [rbp - 0x58], rdi	       441	refs.c	FUNCTION_28
0x400136f	        0x488975a0	             mov qword [rbp - 0x60], rsi	       441	refs.c	FUNCTION_28
0x4001373	        0x48895598	             mov qword [rbp - 0x68], rdx	       441	refs.c	FUNCTION_28
0x4001377	        0x48894d90	             mov qword [rbp - 0x70], rcx	       441	refs.c	FUNCTION_28
0x400137b	    0x64488b042528	                mov rax, qword fs:[0x28]	       441	refs.c	FUNCTION_28
0x4001384	        0x488945f8	                mov qword [rbp - 8], rax	       441	refs.c	FUNCTION_28
0x4001388	            0x31c0	                            xor eax, eax	       441	refs.c	FUNCTION_28
0x400138a	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       442	refs.c	FUNCTION_28
0x4001392	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       442	refs.c	FUNCTION_28
0x400139a	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       442	refs.c	FUNCTION_28
0x40013a2	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x40013a7	            0x7528	                           jne 0x40013d1	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x40013a9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x40013ad	      0xbe00000000	                              mov esi, 0	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x40013b2	          0x4889c7	                            mov rdi, rax	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x40013b5	      0xe800000000	                          call 0x40013ba	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x40013ba	            0x85c0	                           test eax, eax	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x40013bc	            0x7513	                           jne 0x40013d1	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x40013be	        0x488d45c0	                   lea rax, [rbp - 0x40]	       447	refs.c	FUNCTION_28	CALL_2
0x40013c2	      0xbe00000000	                              mov esi, 0	       447	refs.c	FUNCTION_28	CALL_2
0x40013c7	          0x4889c7	                            mov rdi, rax	       447	refs.c	FUNCTION_28	CALL_2
0x40013ca	      0xe8b2efffff	                  call sym.strbuf_addstr	       447	refs.c	FUNCTION_28	CALL_2
0x40013cf	            0xeb1a	                           jmp 0x40013eb	       447	refs.c	FUNCTION_28	CALL_2
0x40013d1	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       448	refs.c	FUNCTION_28	ELSE_1	IF_2
0x40013d6	            0x7413	                            je 0x40013eb	       448	refs.c	FUNCTION_28	ELSE_1	IF_2
0x40013d8	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       449	refs.c	FUNCTION_28	ELSE_1	IF_2
0x40013dc	        0x488d45c0	                   lea rax, [rbp - 0x40]	       449	refs.c	FUNCTION_28	ELSE_1	IF_2
0x40013e0	          0x4889d6	                            mov rsi, rdx	       449	refs.c	FUNCTION_28	ELSE_1	IF_2
0x40013e3	          0x4889c7	                            mov rdi, rax	       449	refs.c	FUNCTION_28	ELSE_1	IF_2
0x40013e6	      0xe896efffff	                  call sym.strbuf_addstr	       449	refs.c	FUNCTION_28	ELSE_1	IF_2
0x40013eb	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       450	refs.c	FUNCTION_28	CALL_4
0x40013ef	        0x488d45c0	                   lea rax, [rbp - 0x40]	       450	refs.c	FUNCTION_28	CALL_4
0x40013f3	          0x4889d6	                            mov rsi, rdx	       450	refs.c	FUNCTION_28	CALL_4
0x40013f6	          0x4889c7	                            mov rdi, rax	       450	refs.c	FUNCTION_28	CALL_4
0x40013f9	      0xe883efffff	                  call sym.strbuf_addstr	       450	refs.c	FUNCTION_28	CALL_4
0x40013fe	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       452	refs.c	FUNCTION_28	IF_3	CALL_5
0x4001402	          0x4889c7	                            mov rdi, rax	       452	refs.c	FUNCTION_28	IF_3	CALL_5
0x4001405	      0xe833f2ffff	              call sym.has_glob_specials	       452	refs.c	FUNCTION_28	IF_3	CALL_5
0x400140a	          0x4885c0	                           test rax, rax	       452	refs.c	FUNCTION_28	IF_3	CALL_5
0x400140d	            0x7522	                           jne 0x4001431	       452	refs.c	FUNCTION_28	IF_3	CALL_5
0x400140f	        0x488d45c0	                   lea rax, [rbp - 0x40]	       454	refs.c	FUNCTION_28	IF_3	CALL_6
0x4001413	      0xbe2f000000	                           mov esi, 0x2f	       454	refs.c	FUNCTION_28	IF_3	CALL_6
0x4001418	          0x4889c7	                            mov rdi, rax	       454	refs.c	FUNCTION_28	IF_3	CALL_6
0x400141b	      0xe8eeefffff	                call sym.strbuf_complete	       454	refs.c	FUNCTION_28	IF_3	CALL_6
0x4001420	        0x488d45c0	                   lea rax, [rbp - 0x40]	       456	refs.c	FUNCTION_28	IF_3	CALL_7
0x4001424	      0xbe2a000000	                           mov esi, 0x2a	       456	refs.c	FUNCTION_28	IF_3	CALL_7
0x4001429	          0x4889c7	                            mov rdi, rax	       456	refs.c	FUNCTION_28	IF_3	CALL_7
0x400142c	      0xe8e2eeffff	                   call sym.strbuf_addch	       456	refs.c	FUNCTION_28	IF_3	CALL_7
0x4001431	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       459	refs.c	FUNCTION_28
0x4001435	        0x488945e0	             mov qword [rbp - 0x20], rax	       459	refs.c	FUNCTION_28
0x4001439	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       460	refs.c	FUNCTION_28
0x400143d	        0x488945e8	             mov qword [rbp - 0x18], rax	       460	refs.c	FUNCTION_28
0x4001441	        0x488b4590	             mov rax, qword [rbp - 0x70]	       461	refs.c	FUNCTION_28
0x4001445	        0x488945f0	             mov qword [rbp - 0x10], rax	       461	refs.c	FUNCTION_28
0x4001449	        0x488d45e0	                   lea rax, [rbp - 0x20]	       462	refs.c	FUNCTION_28	CALL_8
0x400144d	          0x4889c6	                            mov rsi, rax	       462	refs.c	FUNCTION_28	CALL_8
0x4001450	      0xbf00000000	                              mov edi, 0	       462	refs.c	FUNCTION_28	CALL_8
0x4001455	      0xe800000000	                          call 0x400145a	       462	refs.c	FUNCTION_28	CALL_8
0x400145a	          0x8945bc	             mov dword [rbp - 0x44], eax	       462	refs.c	FUNCTION_28	CALL_8
0x400145d	        0x488d45c0	                   lea rax, [rbp - 0x40]	       464	refs.c	FUNCTION_28	CALL_9
0x4001461	          0x4889c7	                            mov rdi, rax	       464	refs.c	FUNCTION_28	CALL_9
0x4001464	      0xe800000000	                          call 0x4001469	       464	refs.c	FUNCTION_28	CALL_9
0x4001469	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       465	refs.c	FUNCTION_28
0x400146c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       466	refs.c	FUNCTION_28
0x4001470	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       466	refs.c	FUNCTION_28
0x4001479	            0x7405	                            je 0x4001480	       466	refs.c	FUNCTION_28
0x400147b	      0xe800000000	                          call 0x4001480	       466	refs.c	FUNCTION_28
0x4001480	              0xc9	                                   leave	       466	refs.c	FUNCTION_28
0x4001481	              0xc3	                                     ret	       466	refs.c	FUNCTION_28
ref_transaction_create	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,3:functions,0	34
0x4002b39	              0x55	                                push rbp	      1036	refs.c	FUNCTION_56
0x4002b3a	          0x4889e5	                            mov rbp, rsp	      1036	refs.c	FUNCTION_56
0x4002b3d	        0x4883ec30	                           sub rsp, 0x30	      1036	refs.c	FUNCTION_56
0x4002b41	        0x48897df8	                mov qword [rbp - 8], rdi	      1036	refs.c	FUNCTION_56
0x4002b45	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1036	refs.c	FUNCTION_56
0x4002b49	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1036	refs.c	FUNCTION_56
0x4002b4d	          0x894de4	             mov dword [rbp - 0x1c], ecx	      1036	refs.c	FUNCTION_56
0x4002b50	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      1036	refs.c	FUNCTION_56
0x4002b54	        0x4c894dd0	              mov qword [rbp - 0x30], r9	      1036	refs.c	FUNCTION_56
0x4002b58	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x4002b5d	            0x7410	                            je 0x4002b6f	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x4002b5f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x4002b63	          0x4889c7	                            mov rdi, rax	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x4002b66	      0xe8fbd9ffff	                    call sym.is_null_oid	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x4002b6b	            0x85c0	                           test eax, eax	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x4002b6d	            0x740f	                            je 0x4002b7e	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x4002b6f	      0xbf00000000	                              mov edi, 0	      1038	refs.c	FUNCTION_56	CALL_2
0x4002b74	      0xb800000000	                              mov eax, 0	      1038	refs.c	FUNCTION_56	CALL_2
0x4002b79	      0xe800000000	                          call 0x4002b7e	      1038	refs.c	FUNCTION_56	CALL_2
0x4002b7e	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1039	refs.c	FUNCTION_56	CALL_3
0x4002b82	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1039	refs.c	FUNCTION_56	CALL_3
0x4002b85	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1039	refs.c	FUNCTION_56	CALL_3
0x4002b89	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1039	refs.c	FUNCTION_56	CALL_3
0x4002b8d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1039	refs.c	FUNCTION_56	CALL_3
0x4002b91	        0x4883ec08	                              sub rsp, 8	      1039	refs.c	FUNCTION_56	CALL_3
0x4002b95	          0xff75d0	                 push qword [rbp - 0x30]	      1039	refs.c	FUNCTION_56	CALL_3
0x4002b98	          0x4989f9	                             mov r9, rdi	      1039	refs.c	FUNCTION_56	CALL_3
0x4002b9b	          0x4189c8	                            mov r8d, ecx	      1039	refs.c	FUNCTION_56	CALL_3
0x4002b9e	      0xb900000000	                              mov ecx, 0	      1039	refs.c	FUNCTION_56	CALL_3
0x4002ba3	          0x4889c7	                            mov rdi, rax	      1039	refs.c	FUNCTION_56	CALL_3
0x4002ba6	      0xe800000000	                          call 0x4002bab	      1039	refs.c	FUNCTION_56	CALL_3
0x4002bab	        0x4883c410	                           add rsp, 0x10	      1039	refs.c	FUNCTION_56	CALL_3
0x4002baf	              0xc9	                                   leave	      1041	refs.c	FUNCTION_56
0x4002bb0	              0xc3	                                     ret	      1041	refs.c	FUNCTION_56
refs_for_each_fullref_in	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	24
0x4003927	              0x55	                                push rbp	      1425	refs.c	FUNCTION_75
0x4003928	          0x4889e5	                            mov rbp, rsp	      1425	refs.c	FUNCTION_75
0x400392b	        0x4883ec40	                           sub rsp, 0x40	      1425	refs.c	FUNCTION_75
0x400392f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1425	refs.c	FUNCTION_75
0x4003933	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1425	refs.c	FUNCTION_75
0x4003937	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1425	refs.c	FUNCTION_75
0x400393b	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1425	refs.c	FUNCTION_75
0x400393f	        0x448945cc	             mov dword [rbp - 0x34], r8d	      1425	refs.c	FUNCTION_75
0x4003943	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1426	refs.c	FUNCTION_75
0x400394a	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1428	refs.c	FUNCTION_75	IF_1
0x400394e	            0x7407	                            je 0x4003957	      1428	refs.c	FUNCTION_75	IF_1
0x4003950	    0xc745fc010000	                  mov dword [rbp - 4], 1	      1429	refs.c	FUNCTION_75	IF_1
0x4003957	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      1430	refs.c	FUNCTION_75	CALL_1
0x400395a	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	      1430	refs.c	FUNCTION_75	CALL_1
0x400395e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1430	refs.c	FUNCTION_75	CALL_1
0x4003962	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1430	refs.c	FUNCTION_75	CALL_1
0x4003966	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1430	refs.c	FUNCTION_75	CALL_1
0x400396a	          0x4989f9	                             mov r9, rdi	      1430	refs.c	FUNCTION_75	CALL_1
0x400396d	          0x4189c8	                            mov r8d, ecx	      1430	refs.c	FUNCTION_75	CALL_1
0x4003970	      0xb900000000	                              mov ecx, 0	      1430	refs.c	FUNCTION_75	CALL_1
0x4003975	          0x4889c7	                            mov rdi, rax	      1430	refs.c	FUNCTION_75	CALL_1
0x4003978	      0xe8e8fdffff	                call sym.do_for_each_ref	      1430	refs.c	FUNCTION_75	CALL_1
0x400397d	              0xc9	                                   leave	      1431	refs.c	FUNCTION_75
0x400397e	              0xc3	                                     ret	      1431	refs.c	FUNCTION_75
refname_match	IF,1:ELSE,0:FOR,1:WHILE,0:SWITCH,0:DO,0:CALL,3:functions,0	36
0x400150d	              0x55	                                push rbp	       493	refs.c	FUNCTION_31
0x400150e	          0x4889e5	                            mov rbp, rsp	       493	refs.c	FUNCTION_31
0x4001511	        0x4883ec20	                           sub rsp, 0x20	       493	refs.c	FUNCTION_31
0x4001515	        0x48897de8	             mov qword [rbp - 0x18], rdi	       493	refs.c	FUNCTION_31
0x4001519	        0x488975e0	             mov qword [rbp - 0x20], rsi	       493	refs.c	FUNCTION_31
0x400151d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       495	refs.c	FUNCTION_31	CALL_1
0x4001521	          0x4889c7	                            mov rdi, rax	       495	refs.c	FUNCTION_31	CALL_1
0x4001524	      0xe800000000	                          call 0x4001529	       495	refs.c	FUNCTION_31	CALL_1
0x4001529	          0x8945f4	              mov dword [rbp - 0xc], eax	       495	refs.c	FUNCTION_31	CALL_1
0x400152c	    0x48c745f80000	                  mov qword [rbp - 8], 0	       497	refs.c	FUNCTION_31	FOR_1
0x4001534	            0xeb3f	                           jmp 0x4001575	       497	refs.c	FUNCTION_31	FOR_1
0x4001536	        0x488b45f8	                mov rax, qword [rbp - 8]	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x400153a	          0x488b00	                    mov rax, qword [rax]	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x400153d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4001541	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4001544	            0x89ce	                            mov esi, ecx	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4001546	          0x4889c7	                            mov rdi, rax	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4001549	      0xb800000000	                              mov eax, 0	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x400154e	      0xe800000000	                          call 0x4001553	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4001553	          0x4889c2	                            mov rdx, rax	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4001556	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x400155a	          0x4889d6	                            mov rsi, rdx	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x400155d	          0x4889c7	                            mov rdi, rax	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4001560	      0xe800000000	                          call 0x4001565	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4001565	            0x85c0	                           test eax, eax	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4001567	            0x7507	                           jne 0x4001570	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4001569	      0xb801000000	                              mov eax, 1	       499	refs.c	FUNCTION_31	FOR_1	IF_1
0x400156e	            0xeb16	                           jmp 0x4001586	       499	refs.c	FUNCTION_31	FOR_1	IF_1
0x4001570	      0x488345f808	                  add qword [rbp - 8], 8	       497	refs.c	FUNCTION_31	FOR_1
0x4001575	        0x488b45f8	                mov rax, qword [rbp - 8]	       497	refs.c	FUNCTION_31	FOR_1
0x4001579	          0x488b00	                    mov rax, qword [rax]	       497	refs.c	FUNCTION_31	FOR_1
0x400157c	          0x4885c0	                           test rax, rax	       497	refs.c	FUNCTION_31	FOR_1
0x400157f	            0x75b5	                           jne 0x4001536	       497	refs.c	FUNCTION_31	FOR_1
0x4001581	      0xb800000000	                              mov eax, 0	       503	refs.c	FUNCTION_31
0x4001586	              0xc9	                                   leave	       504	refs.c	FUNCTION_31
0x4001587	              0xc3	                                     ret	       504	refs.c	FUNCTION_31
strbuf_avail	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,0:functions,0	18
0x4000243	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_188
0x4000244	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_188
0x4000247	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_188
0x400024b	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_188
0x400024f	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_188
0x4000252	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_188
0x4000255	            0x741b	                            je 0x4000272	       141	strbuf.h	FUNCTION_188
0x4000257	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_188
0x400025b	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_188
0x400025e	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_188
0x4000262	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_188
0x4000266	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_188
0x4000269	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_188
0x400026c	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_188
0x4000270	            0xeb05	                           jmp 0x4000277	       141	strbuf.h	FUNCTION_188
0x4000272	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_188
0x4000277	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_188
0x4000278	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_188
copy_existing_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	17
0x4005070	              0x55	                                push rbp	      2154	refs.c	FUNCTION_124
0x4005071	          0x4889e5	                            mov rbp, rsp	      2154	refs.c	FUNCTION_124
0x4005074	        0x4883ec20	                           sub rsp, 0x20	      2154	refs.c	FUNCTION_124
0x4005078	        0x48897df8	                mov qword [rbp - 8], rdi	      2154	refs.c	FUNCTION_124
0x400507c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2154	refs.c	FUNCTION_124
0x4005080	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2154	refs.c	FUNCTION_124
0x4005084	    0x488b05000000	            mov rax, qword [0x0400508b] 	      2155	refs.c	FUNCTION_124	CALL_2
0x400508b	          0x4889c7	                            mov rdi, rax	      2155	refs.c	FUNCTION_124	CALL_2
0x400508e	      0xe800000000	                          call 0x4005093	      2155	refs.c	FUNCTION_124	CALL_2
0x4005093	          0x4889c7	                            mov rdi, rax	      2155	refs.c	FUNCTION_124	CALL_2
0x4005096	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2155	refs.c	FUNCTION_124	CALL_2
0x400509a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2155	refs.c	FUNCTION_124	CALL_2
0x400509e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2155	refs.c	FUNCTION_124	CALL_2
0x40050a2	          0x4889c6	                            mov rsi, rax	      2155	refs.c	FUNCTION_124	CALL_2
0x40050a5	      0xe800000000	                          call 0x40050aa	      2155	refs.c	FUNCTION_124	CALL_2
0x40050aa	              0xc9	                                   leave	      2156	refs.c	FUNCTION_124
0x40050ab	              0xc3	                                     ret	      2156	refs.c	FUNCTION_124
filter_refs	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	30
0x4000d6f	              0x55	                                push rbp	       293	refs.c	FUNCTION_15
0x4000d70	          0x4889e5	                            mov rbp, rsp	       293	refs.c	FUNCTION_15
0x4000d73	        0x4883ec30	                           sub rsp, 0x30	       293	refs.c	FUNCTION_15
0x4000d77	        0x48897de8	             mov qword [rbp - 0x18], rdi	       293	refs.c	FUNCTION_15
0x4000d7b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       293	refs.c	FUNCTION_15
0x4000d7f	          0x8955dc	             mov dword [rbp - 0x24], edx	       293	refs.c	FUNCTION_15
0x4000d82	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       293	refs.c	FUNCTION_15
0x4000d86	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       294	refs.c	FUNCTION_15
0x4000d8a	        0x488945f8	                mov qword [rbp - 8], rax	       294	refs.c	FUNCTION_15
0x4000d8e	        0x488b45f8	                mov rax, qword [rbp - 8]	       296	refs.c	FUNCTION_15	IF_1	CALL_1
0x4000d92	          0x488b00	                    mov rax, qword [rax]	       296	refs.c	FUNCTION_15	IF_1	CALL_1
0x4000d95	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       296	refs.c	FUNCTION_15	IF_1	CALL_1
0x4000d99	      0xba00000000	                              mov edx, 0	       296	refs.c	FUNCTION_15	IF_1	CALL_1
0x4000d9e	          0x4889ce	                            mov rsi, rcx	       296	refs.c	FUNCTION_15	IF_1	CALL_1
0x4000da1	          0x4889c7	                            mov rdi, rax	       296	refs.c	FUNCTION_15	IF_1	CALL_1
0x4000da4	      0xe800000000	                          call 0x4000da9	       296	refs.c	FUNCTION_15	IF_1	CALL_1
0x4000da9	            0x85c0	                           test eax, eax	       296	refs.c	FUNCTION_15	IF_1	CALL_1
0x4000dab	            0x7407	                            je 0x4000db4	       296	refs.c	FUNCTION_15	IF_1	CALL_1
0x4000dad	      0xb800000000	                              mov eax, 0	       297	refs.c	FUNCTION_15	IF_1
0x4000db2	            0xeb1d	                           jmp 0x4000dd1	       297	refs.c	FUNCTION_15	IF_1
0x4000db4	        0x488b45f8	                mov rax, qword [rbp - 8]	       298	refs.c	FUNCTION_15	CALL_2
0x4000db8	        0x488b4008	                mov rax, qword [rax + 8]	       298	refs.c	FUNCTION_15	CALL_2
0x4000dbc	        0x488b55f8	                mov rdx, qword [rbp - 8]	       298	refs.c	FUNCTION_15	CALL_2
0x4000dc0	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       298	refs.c	FUNCTION_15	CALL_2
0x4000dc4	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       298	refs.c	FUNCTION_15	CALL_2
0x4000dc7	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       298	refs.c	FUNCTION_15	CALL_2
0x4000dcb	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       298	refs.c	FUNCTION_15	CALL_2
0x4000dcf	            0xffd0	                                call rax	       298	refs.c	FUNCTION_15	CALL_2
0x4000dd1	              0xc9	                                   leave	       299	refs.c	FUNCTION_15
0x4000dd2	              0xc3	                                     ret	       299	refs.c	FUNCTION_15
is_branch	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	21
0x40021bf	              0x55	                                push rbp	       812	refs.c	FUNCTION_47
0x40021c0	          0x4889e5	                            mov rbp, rsp	       812	refs.c	FUNCTION_47
0x40021c3	        0x4883ec10	                           sub rsp, 0x10	       812	refs.c	FUNCTION_47
0x40021c7	        0x48897df8	                mov qword [rbp - 8], rdi	       812	refs.c	FUNCTION_47
0x40021cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       813	refs.c	FUNCTION_47	CALL_2
0x40021cf	      0xbe00000000	                              mov esi, 0	       813	refs.c	FUNCTION_47	CALL_2
0x40021d4	          0x4889c7	                            mov rdi, rax	       813	refs.c	FUNCTION_47	CALL_2
0x40021d7	      0xe800000000	                          call 0x40021dc	       813	refs.c	FUNCTION_47	CALL_2
0x40021dc	            0x85c0	                           test eax, eax	       813	refs.c	FUNCTION_47	CALL_2
0x40021de	            0x7415	                            je 0x40021f5	       813	refs.c	FUNCTION_47	CALL_2
0x40021e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       813	refs.c	FUNCTION_47	CALL_2
0x40021e4	      0xbe00000000	                              mov esi, 0	       813	refs.c	FUNCTION_47	CALL_2
0x40021e9	          0x4889c7	                            mov rdi, rax	       813	refs.c	FUNCTION_47	CALL_2
0x40021ec	      0xe800000000	                          call 0x40021f1	       813	refs.c	FUNCTION_47	CALL_2
0x40021f1	            0x85c0	                           test eax, eax	       813	refs.c	FUNCTION_47	CALL_2
0x40021f3	            0x7407	                            je 0x40021fc	       813	refs.c	FUNCTION_47	CALL_2
0x40021f5	      0xb801000000	                              mov eax, 1	       813	refs.c	FUNCTION_47	CALL_2
0x40021fa	            0xeb05	                           jmp 0x4002201	       813	refs.c	FUNCTION_47	CALL_2
0x40021fc	      0xb800000000	                              mov eax, 0	       813	refs.c	FUNCTION_47	CALL_2
0x4002201	              0xc9	                                   leave	       814	refs.c	FUNCTION_47
0x4002202	              0xc3	                                     ret	       814	refs.c	FUNCTION_47
ref_resolves_to_object	IF,2:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	28
0x40009e4	              0x55	                                push rbp	       187	refs.c	FUNCTION_6
0x40009e5	          0x4889e5	                            mov rbp, rsp	       187	refs.c	FUNCTION_6
0x40009e8	        0x4883ec20	                           sub rsp, 0x20	       187	refs.c	FUNCTION_6
0x40009ec	        0x48897df8	                mov qword [rbp - 8], rdi	       187	refs.c	FUNCTION_6
0x40009f0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       187	refs.c	FUNCTION_6
0x40009f4	          0x8955ec	             mov dword [rbp - 0x14], edx	       187	refs.c	FUNCTION_6
0x40009f7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       188	refs.c	FUNCTION_6	IF_1
0x40009fa	          0x83e004	                              and eax, 4	       188	refs.c	FUNCTION_6	IF_1
0x40009fd	            0x85c0	                           test eax, eax	       188	refs.c	FUNCTION_6	IF_1
0x40009ff	            0x7407	                            je 0x4000a08	       188	refs.c	FUNCTION_6	IF_1
0x4000a01	      0xb800000000	                              mov eax, 0	       189	refs.c	FUNCTION_6	IF_1
0x4000a06	            0xeb37	                           jmp 0x4000a3f	       189	refs.c	FUNCTION_6	IF_1
0x4000a08	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       190	refs.c	FUNCTION_6	IF_2	CALL_1
0x4000a0c	          0x4889c7	                            mov rdi, rax	       190	refs.c	FUNCTION_6	IF_2	CALL_1
0x4000a0f	      0xe8effbffff	                  call sym.has_sha1_file	       190	refs.c	FUNCTION_6	IF_2	CALL_1
0x4000a14	            0x85c0	                           test eax, eax	       190	refs.c	FUNCTION_6	IF_2	CALL_1
0x4000a16	            0x7522	                           jne 0x4000a3a	       190	refs.c	FUNCTION_6	IF_2	CALL_1
0x4000a18	        0x488b45f8	                mov rax, qword [rbp - 8]	       191	refs.c	FUNCTION_6	IF_2
0x4000a1c	          0x4889c6	                            mov rsi, rax	       191	refs.c	FUNCTION_6	IF_2
0x4000a1f	      0xbf00000000	                              mov edi, 0	       191	refs.c	FUNCTION_6	IF_2
0x4000a24	      0xb800000000	                              mov eax, 0	       191	refs.c	FUNCTION_6	IF_2
0x4000a29	      0xe800000000	                          call 0x4000a2e	       191	refs.c	FUNCTION_6	IF_2
0x4000a2e	      0xe820f6ffff	                    call sym.const_error	       191	refs.c	FUNCTION_6	IF_2
0x4000a33	      0xb800000000	                              mov eax, 0	       192	refs.c	FUNCTION_6	IF_2
0x4000a38	            0xeb05	                           jmp 0x4000a3f	       192	refs.c	FUNCTION_6	IF_2
0x4000a3a	      0xb801000000	                              mov eax, 1	       194	refs.c	FUNCTION_6
0x4000a3f	              0xc9	                                   leave	       195	refs.c	FUNCTION_6
0x4000a40	              0xc3	                                     ret	       195	refs.c	FUNCTION_6
for_each_reflog_ent_reverse	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	17
0x4004c89	              0x55	                                push rbp	      2039	refs.c	FUNCTION_107
0x4004c8a	          0x4889e5	                            mov rbp, rsp	      2039	refs.c	FUNCTION_107
0x4004c8d	        0x4883ec20	                           sub rsp, 0x20	      2039	refs.c	FUNCTION_107
0x4004c91	        0x48897df8	                mov qword [rbp - 8], rdi	      2039	refs.c	FUNCTION_107
0x4004c95	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2039	refs.c	FUNCTION_107
0x4004c99	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2039	refs.c	FUNCTION_107
0x4004c9d	    0x488b05000000	            mov rax, qword [0x04004ca4] 	      2040	refs.c	FUNCTION_107	CALL_2
0x4004ca4	          0x4889c7	                            mov rdi, rax	      2040	refs.c	FUNCTION_107	CALL_2
0x4004ca7	      0xe800000000	                          call 0x4004cac	      2040	refs.c	FUNCTION_107	CALL_2
0x4004cac	          0x4889c7	                            mov rdi, rax	      2040	refs.c	FUNCTION_107	CALL_2
0x4004caf	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2040	refs.c	FUNCTION_107	CALL_2
0x4004cb3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2040	refs.c	FUNCTION_107	CALL_2
0x4004cb7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2040	refs.c	FUNCTION_107	CALL_2
0x4004cbb	          0x4889c6	                            mov rsi, rax	      2040	refs.c	FUNCTION_107	CALL_2
0x4004cbe	      0xe800000000	                          call 0x4004cc3	      2040	refs.c	FUNCTION_107	CALL_2
0x4004cc3	              0xc9	                                   leave	      2042	refs.c	FUNCTION_107
0x4004cc4	              0xc3	                                     ret	      2042	refs.c	FUNCTION_107
for_each_tag_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	16
0x4001080	              0x55	                                push rbp	       379	refs.c	FUNCTION_21
0x4001081	          0x4889e5	                            mov rbp, rsp	       379	refs.c	FUNCTION_21
0x4001084	        0x4883ec10	                           sub rsp, 0x10	       379	refs.c	FUNCTION_21
0x4001088	        0x48897df8	                mov qword [rbp - 8], rdi	       379	refs.c	FUNCTION_21
0x400108c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       379	refs.c	FUNCTION_21
0x4001090	    0x488b05000000	            mov rax, qword [0x04001097] 	       380	refs.c	FUNCTION_21	CALL_2
0x4001097	          0x4889c7	                            mov rdi, rax	       380	refs.c	FUNCTION_21	CALL_2
0x400109a	      0xe800000000	                          call 0x400109f	       380	refs.c	FUNCTION_21	CALL_2
0x400109f	          0x4889c1	                            mov rcx, rax	       380	refs.c	FUNCTION_21	CALL_2
0x40010a2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       380	refs.c	FUNCTION_21	CALL_2
0x40010a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       380	refs.c	FUNCTION_21	CALL_2
0x40010aa	          0x4889c6	                            mov rsi, rax	       380	refs.c	FUNCTION_21	CALL_2
0x40010ad	          0x4889cf	                            mov rdi, rcx	       380	refs.c	FUNCTION_21	CALL_2
0x40010b0	      0xe800000000	                          call 0x40010b5	       380	refs.c	FUNCTION_21	CALL_2
0x40010b5	              0xc9	                                   leave	       381	refs.c	FUNCTION_21
0x40010b6	              0xc3	                                     ret	       381	refs.c	FUNCTION_21
refs_delete_refs	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	17
0x4004f57	              0x55	                                push rbp	      2126	refs.c	FUNCTION_119
0x4004f58	          0x4889e5	                            mov rbp, rsp	      2126	refs.c	FUNCTION_119
0x4004f5b	        0x4883ec20	                           sub rsp, 0x20	      2126	refs.c	FUNCTION_119
0x4004f5f	        0x48897df8	                mov qword [rbp - 8], rdi	      2126	refs.c	FUNCTION_119
0x4004f63	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2126	refs.c	FUNCTION_119
0x4004f67	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2126	refs.c	FUNCTION_119
0x4004f6b	          0x894de4	             mov dword [rbp - 0x1c], ecx	      2126	refs.c	FUNCTION_119
0x4004f6e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2127	refs.c	FUNCTION_119	CALL_1
0x4004f72	          0x488b00	                    mov rax, qword [rax]	      2127	refs.c	FUNCTION_119	CALL_1
0x4004f75	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2127	refs.c	FUNCTION_119	CALL_1
0x4004f79	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      2127	refs.c	FUNCTION_119	CALL_1
0x4004f7c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2127	refs.c	FUNCTION_119	CALL_1
0x4004f80	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2127	refs.c	FUNCTION_119	CALL_1
0x4004f84	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2127	refs.c	FUNCTION_119	CALL_1
0x4004f88	            0xffd0	                                call rax	      2127	refs.c	FUNCTION_119	CALL_1
0x4004f8a	              0xc9	                                   leave	      2128	refs.c	FUNCTION_119
0x4004f8b	              0xc3	                                     ret	      2128	refs.c	FUNCTION_119
refs_resolve_refdup	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	22
0x4000a41	              0x55	                                push rbp	       200	refs.c	FUNCTION_7
0x4000a42	          0x4889e5	                            mov rbp, rsp	       200	refs.c	FUNCTION_7
0x4000a45	        0x4883ec40	                           sub rsp, 0x40	       200	refs.c	FUNCTION_7
0x4000a49	        0x48897de8	             mov qword [rbp - 0x18], rdi	       200	refs.c	FUNCTION_7
0x4000a4d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       200	refs.c	FUNCTION_7
0x4000a51	          0x8955dc	             mov dword [rbp - 0x24], edx	       200	refs.c	FUNCTION_7
0x4000a54	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       200	refs.c	FUNCTION_7
0x4000a58	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       200	refs.c	FUNCTION_7
0x4000a5c	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	       203	refs.c	FUNCTION_7	CALL_1
0x4000a60	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       203	refs.c	FUNCTION_7	CALL_1
0x4000a64	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       203	refs.c	FUNCTION_7	CALL_1
0x4000a67	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       203	refs.c	FUNCTION_7	CALL_1
0x4000a6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       203	refs.c	FUNCTION_7	CALL_1
0x4000a6f	          0x4989f8	                             mov r8, rdi	       203	refs.c	FUNCTION_7	CALL_1
0x4000a72	          0x4889c7	                            mov rdi, rax	       203	refs.c	FUNCTION_7	CALL_1
0x4000a75	      0xe800000000	                          call 0x4000a7a	       203	refs.c	FUNCTION_7	CALL_1
0x4000a7a	        0x488945f8	                mov qword [rbp - 8], rax	       203	refs.c	FUNCTION_7	CALL_1
0x4000a7e	        0x488b45f8	                mov rax, qword [rbp - 8]	       205	refs.c	FUNCTION_7	CALL_2
0x4000a82	          0x4889c7	                            mov rdi, rax	       205	refs.c	FUNCTION_7	CALL_2
0x4000a85	      0xe841f7ffff	                call sym.xstrdup_or_null	       205	refs.c	FUNCTION_7	CALL_2
0x4000a8a	              0xc9	                                   leave	       206	refs.c	FUNCTION_7
0x4000a8b	              0xc3	                                     ret	       206	refs.c	FUNCTION_7
strbuf_complete	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	27
0x400040e	              0x55	                                push rbp	       594	strbuf.h	FUNCTION_196
0x400040f	          0x4889e5	                            mov rbp, rsp	       594	strbuf.h	FUNCTION_196
0x4000412	        0x4883ec10	                           sub rsp, 0x10	       594	strbuf.h	FUNCTION_196
0x4000416	        0x48897df8	                mov qword [rbp - 8], rdi	       594	strbuf.h	FUNCTION_196
0x400041a	            0x89f0	                            mov eax, esi	       594	strbuf.h	FUNCTION_196
0x400041c	          0x8845f4	                mov byte [rbp - 0xc], al	       594	strbuf.h	FUNCTION_196
0x400041f	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_196	IF_1
0x4000423	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_196	IF_1
0x4000427	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_196	IF_1
0x400042a	            0x7431	                            je 0x400045d	       595	strbuf.h	FUNCTION_196	IF_1
0x400042c	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_196	IF_1
0x4000430	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       595	strbuf.h	FUNCTION_196	IF_1
0x4000434	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_196	IF_1
0x4000438	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_196	IF_1
0x400043c	        0x4883e801	                              sub rax, 1	       595	strbuf.h	FUNCTION_196	IF_1
0x4000440	          0x4801d0	                            add rax, rdx	       595	strbuf.h	FUNCTION_196	IF_1
0x4000443	           0xfb600	                   movzx eax, byte [rax]	       595	strbuf.h	FUNCTION_196	IF_1
0x4000446	          0x3a45f4	                cmp al, byte [rbp - 0xc]	       595	strbuf.h	FUNCTION_196	IF_1
0x4000449	            0x7412	                            je 0x400045d	       595	strbuf.h	FUNCTION_196	IF_1
0x400044b	         0xfbe55f4	             movsx edx, byte [rbp - 0xc]	       596	strbuf.h	FUNCTION_196	CALL_1
0x400044f	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	strbuf.h	FUNCTION_196	CALL_1
0x4000453	            0x89d6	                            mov esi, edx	       596	strbuf.h	FUNCTION_196	CALL_1
0x4000455	          0x4889c7	                            mov rdi, rax	       596	strbuf.h	FUNCTION_196	CALL_1
0x4000458	      0xe8b6feffff	                   call sym.strbuf_addch	       596	strbuf.h	FUNCTION_196	CALL_1
0x400045d	              0x90	                                     nop	       597	strbuf.h	FUNCTION_196
0x400045e	              0xc9	                                   leave	       597	strbuf.h	FUNCTION_196
0x400045f	              0xc3	                                     ret	       597	strbuf.h	FUNCTION_196
refs_resolve_ref_unsafe	IF,13:ELSE,0:FOR,1:WHILE,0:SWITCH,0:DO,0:CALL,8:functions,0	179
0x4003b53	              0x55	                                push rbp	      1475	refs.c	FUNCTION_81
0x4003b54	          0x4889e5	                            mov rbp, rsp	      1475	refs.c	FUNCTION_81
0x4003b57	        0x4883ec60	                           sub rsp, 0x60	      1475	refs.c	FUNCTION_81
0x4003b5b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1475	refs.c	FUNCTION_81
0x4003b5f	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1475	refs.c	FUNCTION_81
0x4003b63	          0x8955bc	             mov dword [rbp - 0x44], edx	      1475	refs.c	FUNCTION_81
0x4003b66	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1475	refs.c	FUNCTION_81
0x4003b6a	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      1475	refs.c	FUNCTION_81
0x4003b6e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1475	refs.c	FUNCTION_81
0x4003b77	        0x488945f8	                mov qword [rbp - 8], rax	      1475	refs.c	FUNCTION_81
0x4003b7b	            0x31c0	                            xor eax, eax	      1475	refs.c	FUNCTION_81
0x4003b7d	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1481	refs.c	FUNCTION_81	IF_1
0x4003b82	            0x7508	                           jne 0x4003b8c	      1481	refs.c	FUNCTION_81	IF_1
0x4003b84	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1482	refs.c	FUNCTION_81	IF_1
0x4003b88	        0x488945b0	             mov qword [rbp - 0x50], rax	      1482	refs.c	FUNCTION_81	IF_1
0x4003b8c	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1483	refs.c	FUNCTION_81	IF_2
0x4003b91	            0x7508	                           jne 0x4003b9b	      1483	refs.c	FUNCTION_81	IF_2
0x4003b93	        0x488d45d4	                   lea rax, [rbp - 0x2c]	      1484	refs.c	FUNCTION_81	IF_2
0x4003b97	        0x488945a8	             mov qword [rbp - 0x58], rax	      1484	refs.c	FUNCTION_81	IF_2
0x4003b9b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1486	refs.c	FUNCTION_81
0x4003b9f	    0xc70000000000	                      mov dword [rax], 0	      1486	refs.c	FUNCTION_81
0x4003ba5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4003ba9	      0xbe01000000	                              mov esi, 1	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4003bae	          0x4889c7	                            mov rdi, rax	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4003bb1	      0xe800000000	                          call 0x4003bb6	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4003bb6	            0x85c0	                           test eax, eax	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4003bb8	            0x7440	                            je 0x4003bfa	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4003bba	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x4003bbd	          0x83e004	                              and eax, 4	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x4003bc0	            0x85c0	                           test eax, eax	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x4003bc2	            0x7410	                            je 0x4003bd4	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x4003bc4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1490	refs.c	FUNCTION_81	IF_3	IF_4	CALL_2
0x4003bc8	          0x4889c7	                            mov rdi, rax	      1490	refs.c	FUNCTION_81	IF_3	IF_4	CALL_2
0x4003bcb	      0xe800000000	                          call 0x4003bd0	      1490	refs.c	FUNCTION_81	IF_3	IF_4	CALL_2
0x4003bd0	            0x85c0	                           test eax, eax	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x4003bd2	            0x7515	                           jne 0x4003be9	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x4003bd4	      0xe800000000	                          call 0x4003bd9	      1491	refs.c	FUNCTION_81	IF_3	IF_4
0x4003bd9	    0xc70016000000	                   mov dword [rax], 0x16	      1491	refs.c	FUNCTION_81	IF_3	IF_4
0x4003bdf	      0xb800000000	                              mov eax, 0	      1492	refs.c	FUNCTION_81	IF_3	IF_4
0x4003be4	      0xe9bf010000	                           jmp 0x4003da8	      1492	refs.c	FUNCTION_81	IF_3	IF_4
0x4003be9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1503	refs.c	FUNCTION_81	IF_3
0x4003bed	            0x8b00	                    mov eax, dword [rax]	      1503	refs.c	FUNCTION_81	IF_3
0x4003bef	          0x83c808	                               or eax, 8	      1503	refs.c	FUNCTION_81	IF_3
0x4003bf2	            0x89c2	                            mov edx, eax	      1503	refs.c	FUNCTION_81	IF_3
0x4003bf4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1503	refs.c	FUNCTION_81	IF_3
0x4003bf8	            0x8910	                    mov dword [rax], edx	      1503	refs.c	FUNCTION_81	IF_3
0x4003bfa	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1506	refs.c	FUNCTION_81	FOR_1
0x4003c01	      0xe988010000	                           jmp 0x4003d8e	      1506	refs.c	FUNCTION_81	FOR_1
0x4003c06	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1507	refs.c	FUNCTION_81	FOR_1
0x4003c0d	        0x488d4dd8	                   lea rcx, [rbp - 0x28]	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4003c11	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4003c15	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4003c19	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4003c1d	          0x4989c8	                             mov r8, rcx	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4003c20	      0xb900000000	                              mov ecx, 0	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4003c25	          0x4889c7	                            mov rdi, rax	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4003c28	      0xe800000000	                          call 0x4003c2d	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4003c2d	            0x85c0	                           test eax, eax	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4003c2f	     0xf848a000000	                            je 0x4003cbf	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4003c35	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x4003c39	            0x8b00	                    mov eax, dword [rax]	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x4003c3b	            0x89c2	                            mov edx, eax	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x4003c3d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x4003c40	             0x9d0	                             or eax, edx	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x4003c42	            0x89c2	                            mov edx, eax	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x4003c44	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x4003c48	            0x8910	                    mov dword [rax], edx	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x4003c4a	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1514	refs.c	FUNCTION_81	FOR_1	IF_5	IF_6
0x4003c4d	          0x83e001	                              and eax, 1	      1514	refs.c	FUNCTION_81	FOR_1	IF_5	IF_6
0x4003c50	            0x85c0	                           test eax, eax	      1514	refs.c	FUNCTION_81	FOR_1	IF_5	IF_6
0x4003c52	            0x740a	                            je 0x4003c5e	      1514	refs.c	FUNCTION_81	FOR_1	IF_5	IF_6
0x4003c54	      0xb800000000	                              mov eax, 0	      1515	refs.c	FUNCTION_81	FOR_1	IF_5	IF_6
0x4003c59	      0xe94a010000	                           jmp 0x4003da8	      1515	refs.c	FUNCTION_81	FOR_1	IF_5	IF_6
0x4003c5e	      0xe800000000	                          call 0x4003c63	      1522	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4003c63	            0x8b00	                    mov eax, dword [rax]	      1522	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4003c65	          0x83f802	                              cmp eax, 2	      1522	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4003c68	            0x7422	                            je 0x4003c8c	      1522	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4003c6a	      0xe800000000	                          call 0x4003c6f	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4003c6f	            0x8b00	                    mov eax, dword [rax]	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4003c71	          0x83f815	                           cmp eax, 0x15	      1522	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4003c74	            0x7416	                            je 0x4003c8c	      1522	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4003c76	      0xe800000000	                          call 0x4003c7b	      1524	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4003c7b	            0x8b00	                    mov eax, dword [rax]	      1524	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4003c7d	          0x83f814	                           cmp eax, 0x14	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4003c80	            0x740a	                            je 0x4003c8c	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4003c82	      0xb800000000	                              mov eax, 0	      1525	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4003c87	      0xe91c010000	                           jmp 0x4003da8	      1525	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4003c8c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1527	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_4
0x4003c90	          0x4889c7	                            mov rdi, rax	      1527	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_4
0x4003c93	      0xe846c9ffff	                         call sym.oidclr	      1527	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_4
0x4003c98	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1528	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4003c9c	            0x8b00	                    mov eax, dword [rax]	      1528	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4003c9e	          0x83e008	                              and eax, 8	      1528	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4003ca1	            0x85c0	                           test eax, eax	      1528	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4003ca3	            0x7411	                            je 0x4003cb6	      1528	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4003ca5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1529	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4003ca9	            0x8b00	                    mov eax, dword [rax]	      1529	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4003cab	          0x83c804	                               or eax, 4	      1529	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4003cae	            0x89c2	                            mov edx, eax	      1529	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4003cb0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1529	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4003cb4	            0x8910	                    mov dword [rax], edx	      1529	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x4003cb6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1530	refs.c	FUNCTION_81	FOR_1	IF_5
0x4003cba	      0xe9e9000000	                           jmp 0x4003da8	      1530	refs.c	FUNCTION_81	FOR_1	IF_5
0x4003cbf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1533	refs.c	FUNCTION_81	FOR_1
0x4003cc3	            0x8b00	                    mov eax, dword [rax]	      1533	refs.c	FUNCTION_81	FOR_1
0x4003cc5	            0x89c2	                            mov edx, eax	      1533	refs.c	FUNCTION_81	FOR_1
0x4003cc7	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1533	refs.c	FUNCTION_81	FOR_1
0x4003cca	             0x9d0	                             or eax, edx	      1533	refs.c	FUNCTION_81	FOR_1
0x4003ccc	            0x89c2	                            mov edx, eax	      1533	refs.c	FUNCTION_81	FOR_1
0x4003cce	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1533	refs.c	FUNCTION_81	FOR_1
0x4003cd2	            0x8910	                    mov dword [rax], edx	      1533	refs.c	FUNCTION_81	FOR_1
0x4003cd4	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x4003cd7	          0x83e001	                              and eax, 1	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x4003cda	            0x85c0	                           test eax, eax	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x4003cdc	            0x7533	                           jne 0x4003d11	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x4003cde	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4003ce2	            0x8b00	                    mov eax, dword [rax]	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4003ce4	          0x83e008	                              and eax, 8	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4003ce7	            0x85c0	                           test eax, eax	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4003ce9	            0x741d	                            je 0x4003d08	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4003ceb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1537	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10	CALL_5
0x4003cef	          0x4889c7	                            mov rdi, rax	      1537	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10	CALL_5
0x4003cf2	      0xe8e7c8ffff	                         call sym.oidclr	      1537	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10	CALL_5
0x4003cf7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1538	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4003cfb	            0x8b00	                    mov eax, dword [rax]	      1538	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4003cfd	          0x83c804	                               or eax, 4	      1538	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4003d00	            0x89c2	                            mov edx, eax	      1538	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4003d02	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1538	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4003d06	            0x8910	                    mov dword [rax], edx	      1538	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4003d08	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1540	refs.c	FUNCTION_81	FOR_1	IF_9
0x4003d0c	      0xe997000000	                           jmp 0x4003da8	      1540	refs.c	FUNCTION_81	FOR_1	IF_9
0x4003d11	    0x488b05000000	            mov rax, qword [0x04003d18] 	      1543	refs.c	FUNCTION_81	FOR_1
0x4003d18	        0x488945c0	             mov qword [rbp - 0x40], rax	      1543	refs.c	FUNCTION_81	FOR_1
0x4003d1c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1544	refs.c	FUNCTION_81	FOR_1	IF_11
0x4003d1f	          0x83e002	                              and eax, 2	      1544	refs.c	FUNCTION_81	FOR_1	IF_11
0x4003d22	            0x85c0	                           test eax, eax	      1544	refs.c	FUNCTION_81	FOR_1	IF_11
0x4003d24	            0x7412	                            je 0x4003d38	      1544	refs.c	FUNCTION_81	FOR_1	IF_11
0x4003d26	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1545	refs.c	FUNCTION_81	FOR_1	IF_11	CALL_6
0x4003d2a	          0x4889c7	                            mov rdi, rax	      1545	refs.c	FUNCTION_81	FOR_1	IF_11	CALL_6
0x4003d2d	      0xe8acc8ffff	                         call sym.oidclr	      1545	refs.c	FUNCTION_81	FOR_1	IF_11	CALL_6
0x4003d32	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1546	refs.c	FUNCTION_81	FOR_1	IF_11
0x4003d36	            0xeb70	                           jmp 0x4003da8	      1546	refs.c	FUNCTION_81	FOR_1	IF_11
0x4003d38	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4003d3c	      0xbe01000000	                              mov esi, 1	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4003d41	          0x4889c7	                            mov rdi, rax	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4003d44	      0xe800000000	                          call 0x4003d49	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4003d49	            0x85c0	                           test eax, eax	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4003d4b	            0x743d	                            je 0x4003d8a	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4003d4d	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4003d50	          0x83e004	                              and eax, 4	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4003d53	            0x85c0	                           test eax, eax	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4003d55	            0x7410	                            je 0x4003d67	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4003d57	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1550	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13	CALL_8
0x4003d5b	          0x4889c7	                            mov rdi, rax	      1550	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13	CALL_8
0x4003d5e	      0xe800000000	                          call 0x4003d63	      1550	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13	CALL_8
0x4003d63	            0x85c0	                           test eax, eax	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4003d65	            0x7512	                           jne 0x4003d79	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4003d67	      0xe800000000	                          call 0x4003d6c	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4003d6c	    0xc70016000000	                   mov dword [rax], 0x16	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4003d72	      0xb800000000	                              mov eax, 0	      1552	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4003d77	            0xeb2f	                           jmp 0x4003da8	      1552	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4003d79	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1555	refs.c	FUNCTION_81	FOR_1	IF_12
0x4003d7d	            0x8b00	                    mov eax, dword [rax]	      1555	refs.c	FUNCTION_81	FOR_1	IF_12
0x4003d7f	          0x83c80c	                             or eax, 0xc	      1555	refs.c	FUNCTION_81	FOR_1	IF_12
0x4003d82	            0x89c2	                            mov edx, eax	      1555	refs.c	FUNCTION_81	FOR_1	IF_12
0x4003d84	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1555	refs.c	FUNCTION_81	FOR_1	IF_12
0x4003d88	            0x8910	                    mov dword [rax], edx	      1555	refs.c	FUNCTION_81	FOR_1	IF_12
0x4003d8a	        0x8345dc01	               add dword [rbp - 0x24], 1	      1506	refs.c	FUNCTION_81	FOR_1
0x4003d8e	        0x837ddc04	               cmp dword [rbp - 0x24], 4	      1506	refs.c	FUNCTION_81	FOR_1
0x4003d92	     0xf8e6efeffff	                           jle 0x4003c06	      1506	refs.c	FUNCTION_81	FOR_1
0x4003d98	      0xe800000000	                          call 0x4003d9d	      1559	refs.c	FUNCTION_81
0x4003d9d	    0xc70028000000	                   mov dword [rax], 0x28	      1559	refs.c	FUNCTION_81
0x4003da3	      0xb800000000	                              mov eax, 0	      1560	refs.c	FUNCTION_81
0x4003da8	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1561	refs.c	FUNCTION_81
0x4003dac	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1561	refs.c	FUNCTION_81
0x4003db5	            0x7405	                            je 0x4003dbc	      1561	refs.c	FUNCTION_81
0x4003db7	      0xe800000000	                          call 0x4003dbc	      1561	refs.c	FUNCTION_81
0x4003dbc	              0xc9	                                   leave	      1561	refs.c	FUNCTION_81
0x4003dbd	              0xc3	                                     ret	      1561	refs.c	FUNCTION_81
check_refname_format	IF,5:ELSE,0:FOR,0:WHILE,1:SWITCH,0:DO,0:CALL,2:functions,0	59
0x40007f9	              0x55	                                push rbp	       120	refs.c	FUNCTION_4
0x40007fa	          0x4889e5	                            mov rbp, rsp	       120	refs.c	FUNCTION_4
0x40007fd	        0x4883ec20	                           sub rsp, 0x20	       120	refs.c	FUNCTION_4
0x4000801	        0x48897de8	             mov qword [rbp - 0x18], rdi	       120	refs.c	FUNCTION_4
0x4000805	          0x8975e4	             mov dword [rbp - 0x1c], esi	       120	refs.c	FUNCTION_4
0x4000808	    0xc745f8000000	                  mov dword [rbp - 8], 0	       121	refs.c	FUNCTION_4
0x400080f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       123	refs.c	FUNCTION_4	IF_1	CALL_1
0x4000813	      0xbe00000000	                              mov esi, 0	       123	refs.c	FUNCTION_4	IF_1	CALL_1
0x4000818	          0x4889c7	                            mov rdi, rax	       123	refs.c	FUNCTION_4	IF_1	CALL_1
0x400081b	      0xe800000000	                          call 0x4000820	       123	refs.c	FUNCTION_4	IF_1	CALL_1
0x4000820	            0x85c0	                           test eax, eax	       123	refs.c	FUNCTION_4	IF_1	CALL_1
0x4000822	            0x750a	                           jne 0x400082e	       123	refs.c	FUNCTION_4	IF_1	CALL_1
0x4000824	      0xb8ffffffff	                     mov eax, 0xffffffff	       125	refs.c	FUNCTION_4	IF_1
0x4000829	      0xe985000000	                           jmp 0x40008b3	       125	refs.c	FUNCTION_4	IF_1
0x400082e	        0x488d55e4	                   lea rdx, [rbp - 0x1c]	       129	refs.c	FUNCTION_4	WHILE_1	CALL_2
0x4000832	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       129	refs.c	FUNCTION_4	WHILE_1	CALL_2
0x4000836	          0x4889d6	                            mov rsi, rdx	       129	refs.c	FUNCTION_4	WHILE_1	CALL_2
0x4000839	          0x4889c7	                            mov rdi, rax	       129	refs.c	FUNCTION_4	WHILE_1	CALL_2
0x400083c	      0xe891feffff	        call sym.check_refname_component	       129	refs.c	FUNCTION_4	WHILE_1	CALL_2
0x4000841	          0x8945fc	                mov dword [rbp - 4], eax	       129	refs.c	FUNCTION_4	WHILE_1	CALL_2
0x4000844	        0x837dfc00	                  cmp dword [rbp - 4], 0	       130	refs.c	FUNCTION_4	WHILE_1	IF_2
0x4000848	            0x7f07	                            jg 0x4000851	       130	refs.c	FUNCTION_4	WHILE_1	IF_2
0x400084a	      0xb8ffffffff	                     mov eax, 0xffffffff	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x400084f	            0xeb62	                           jmp 0x40008b3	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x4000851	        0x8345f801	                  add dword [rbp - 8], 1	       133	refs.c	FUNCTION_4	WHILE_1
0x4000855	          0x8b45fc	                mov eax, dword [rbp - 4]	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x4000858	          0x4863d0	                         movsxd rdx, eax	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x400085b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x400085f	          0x4801d0	                            add rax, rdx	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x4000862	           0xfb600	                   movzx eax, byte [rax]	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x4000865	            0x84c0	                             test al, al	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x4000867	            0x740f	                            je 0x4000878	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x4000869	          0x8b45fc	                mov eax, dword [rbp - 4]	       137	refs.c	FUNCTION_4	WHILE_1
0x400086c	            0x4898	                                    cdqe	       137	refs.c	FUNCTION_4	WHILE_1
0x400086e	        0x4883c001	                              add rax, 1	       137	refs.c	FUNCTION_4	WHILE_1
0x4000872	        0x480145e8	            add qword [rbp - 0x18], rax 	       137	refs.c	FUNCTION_4	WHILE_1
0x4000876	            0xebb6	                           jmp 0x400082e	       138	refs.c	FUNCTION_4	WHILE_1
0x4000878	              0x90	                                     nop	       135	refs.c	FUNCTION_4	WHILE_1	IF_3
0x4000879	          0x8b45fc	                mov eax, dword [rbp - 4]	       140	refs.c	FUNCTION_4	IF_4
0x400087c	            0x4898	                                    cdqe	       140	refs.c	FUNCTION_4	IF_4
0x400087e	        0x488d50ff	                      lea rdx, [rax - 1]	       140	refs.c	FUNCTION_4	IF_4
0x4000882	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	refs.c	FUNCTION_4	IF_4
0x4000886	          0x4801d0	                            add rax, rdx	       140	refs.c	FUNCTION_4	IF_4
0x4000889	           0xfb600	                   movzx eax, byte [rax]	       140	refs.c	FUNCTION_4	IF_4
0x400088c	            0x3c2e	                            cmp al, 0x2e	       140	refs.c	FUNCTION_4	IF_4
0x400088e	            0x7507	                           jne 0x4000897	       140	refs.c	FUNCTION_4	IF_4
0x4000890	      0xb8ffffffff	                     mov eax, 0xffffffff	       141	refs.c	FUNCTION_4	IF_4
0x4000895	            0xeb1c	                           jmp 0x40008b3	       141	refs.c	FUNCTION_4	IF_4
0x4000897	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       142	refs.c	FUNCTION_4	IF_5
0x400089a	          0x83e001	                              and eax, 1	       142	refs.c	FUNCTION_4	IF_5
0x400089d	            0x85c0	                           test eax, eax	       142	refs.c	FUNCTION_4	IF_5
0x400089f	            0x750d	                           jne 0x40008ae	       142	refs.c	FUNCTION_4	IF_5
0x40008a1	        0x837df801	                  cmp dword [rbp - 8], 1	       142	refs.c	FUNCTION_4	IF_5
0x40008a5	            0x7f07	                            jg 0x40008ae	       142	refs.c	FUNCTION_4	IF_5
0x40008a7	      0xb8ffffffff	                     mov eax, 0xffffffff	       143	refs.c	FUNCTION_4	IF_5
0x40008ac	            0xeb05	                           jmp 0x40008b3	       143	refs.c	FUNCTION_4	IF_5
0x40008ae	      0xb800000000	                              mov eax, 0	       144	refs.c	FUNCTION_4
0x40008b3	              0xc9	                                   leave	       145	refs.c	FUNCTION_4
0x40008b4	              0xc3	                                     ret	       145	refs.c	FUNCTION_4
ref_transaction_prepare	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,1:DO,0:CALL,7:functions,0	50
0x40046a8	              0x55	                                push rbp	      1846	refs.c	FUNCTION_100
0x40046a9	          0x4889e5	                            mov rbp, rsp	      1846	refs.c	FUNCTION_100
0x40046ac	        0x4883ec20	                           sub rsp, 0x20	      1846	refs.c	FUNCTION_100
0x40046b0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1846	refs.c	FUNCTION_100
0x40046b4	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1846	refs.c	FUNCTION_100
0x40046b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1847	refs.c	FUNCTION_100
0x40046bc	          0x488b00	                    mov rax, qword [rax]	      1847	refs.c	FUNCTION_100
0x40046bf	        0x488945f8	                mov qword [rbp - 8], rax	      1847	refs.c	FUNCTION_100
0x40046c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1849	refs.c	FUNCTION_100	SWITCH_1
0x40046c7	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1849	refs.c	FUNCTION_100	SWITCH_1
0x40046ca	          0x83f801	                              cmp eax, 1	      1849	refs.c	FUNCTION_100	SWITCH_1
0x40046cd	            0x740c	                            je 0x40046db	      1849	refs.c	FUNCTION_100	SWITCH_1
0x40046cf	          0x83f801	                              cmp eax, 1	      1849	refs.c	FUNCTION_100	SWITCH_1
0x40046d2	            0x7234	                            jb 0x4004708	      1849	refs.c	FUNCTION_100	SWITCH_1
0x40046d4	          0x83f802	                              cmp eax, 2	      1849	refs.c	FUNCTION_100	SWITCH_1
0x40046d7	            0x7411	                            je 0x40046ea	      1849	refs.c	FUNCTION_100	SWITCH_1
0x40046d9	            0xeb1e	                           jmp 0x40046f9	      1849	refs.c	FUNCTION_100	SWITCH_1
0x40046db	      0xbf00000000	                              mov edi, 0	      1854	refs.c	FUNCTION_100	SWITCH_1	CALL_1
0x40046e0	      0xb800000000	                              mov eax, 0	      1854	refs.c	FUNCTION_100	SWITCH_1	CALL_1
0x40046e5	      0xe800000000	                          call 0x40046ea	      1854	refs.c	FUNCTION_100	SWITCH_1	CALL_1
0x40046ea	      0xbf00000000	                              mov edi, 0	      1857	refs.c	FUNCTION_100	SWITCH_1	CALL_2
0x40046ef	      0xb800000000	                              mov eax, 0	      1857	refs.c	FUNCTION_100	SWITCH_1	CALL_2
0x40046f4	      0xe800000000	                          call 0x40046f9	      1857	refs.c	FUNCTION_100	SWITCH_1	CALL_2
0x40046f9	      0xbf00000000	                              mov edi, 0	      1860	refs.c	FUNCTION_100	SWITCH_1	CALL_3
0x40046fe	      0xb800000000	                              mov eax, 0	      1860	refs.c	FUNCTION_100	SWITCH_1	CALL_3
0x4004703	      0xe800000000	                          call 0x4004708	      1860	refs.c	FUNCTION_100	SWITCH_1	CALL_3
0x4004708	              0x90	                                     nop	      1852	refs.c	FUNCTION_100	SWITCH_1
0x4004709	      0xbf00000000	                              mov edi, 0	      1864	refs.c	FUNCTION_100	IF_1	CALL_4
0x400470e	      0xe800000000	                          call 0x4004713	      1864	refs.c	FUNCTION_100	IF_1	CALL_4
0x4004713	          0x4885c0	                           test rax, rax	      1864	refs.c	FUNCTION_100	IF_1	CALL_4
0x4004716	            0x7423	                            je 0x400473b	      1864	refs.c	FUNCTION_100	IF_1	CALL_4
0x4004718	      0xbf00000000	                              mov edi, 0	      1865	refs.c	FUNCTION_100	IF_1	CALL_5
0x400471d	      0xe8c9bdffff	                               call sym.	      1865	refs.c	FUNCTION_100	IF_1	CALL_5
0x4004722	          0x4889c2	                            mov rdx, rax	      1865	refs.c	FUNCTION_100	IF_1	CALL_5
0x4004725	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1865	refs.c	FUNCTION_100	IF_1	CALL_5
0x4004729	          0x4889d6	                            mov rsi, rdx	      1865	refs.c	FUNCTION_100	IF_1	CALL_5
0x400472c	          0x4889c7	                            mov rdi, rax	      1865	refs.c	FUNCTION_100	IF_1	CALL_5
0x400472f	      0xe84dbcffff	                  call sym.strbuf_addstr	      1865	refs.c	FUNCTION_100	IF_1	CALL_5
0x4004734	      0xb8ffffffff	                     mov eax, 0xffffffff	      1867	refs.c	FUNCTION_100	IF_1
0x4004739	            0xeb1c	                           jmp 0x4004757	      1867	refs.c	FUNCTION_100	IF_1
0x400473b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1870	refs.c	FUNCTION_100	CALL_7
0x400473f	          0x488b00	                    mov rax, qword [rax]	      1870	refs.c	FUNCTION_100	CALL_7
0x4004742	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1870	refs.c	FUNCTION_100	CALL_7
0x4004746	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1870	refs.c	FUNCTION_100	CALL_7
0x400474a	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1870	refs.c	FUNCTION_100	CALL_7
0x400474e	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1870	refs.c	FUNCTION_100	CALL_7
0x4004752	          0x4889cf	                            mov rdi, rcx	      1870	refs.c	FUNCTION_100	CALL_7
0x4004755	            0xffd0	                                call rax	      1870	refs.c	FUNCTION_100	CALL_7
0x4004757	              0xc9	                                   leave	      1871	refs.c	FUNCTION_100
0x4004758	              0xc3	                                     ret	      1871	refs.c	FUNCTION_100
write_pseudoref	IF,6:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,17:functions,0	116
0x4001b71	              0x55	                                push rbp	       660	refs.c	FUNCTION_41
0x4001b72	          0x4889e5	                            mov rbp, rsp	       660	refs.c	FUNCTION_41
0x4001b75	        0x4883ec70	                           sub rsp, 0x70	       660	refs.c	FUNCTION_41
0x4001b79	        0x48897da8	             mov qword [rbp - 0x58], rdi	       660	refs.c	FUNCTION_41
0x4001b7d	        0x488975a0	             mov qword [rbp - 0x60], rsi	       660	refs.c	FUNCTION_41
0x4001b81	        0x48895598	             mov qword [rbp - 0x68], rdx	       660	refs.c	FUNCTION_41
0x4001b85	        0x48894d90	             mov qword [rbp - 0x70], rcx	       660	refs.c	FUNCTION_41
0x4001b89	    0x64488b042528	                mov rax, qword fs:[0x28]	       660	refs.c	FUNCTION_41
0x4001b92	        0x488945f8	                mov qword [rbp - 8], rax	       660	refs.c	FUNCTION_41
0x4001b96	            0x31c0	                            xor eax, eax	       660	refs.c	FUNCTION_41
0x4001b98	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       664	refs.c	FUNCTION_41
0x4001ba0	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       664	refs.c	FUNCTION_41
0x4001ba8	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       664	refs.c	FUNCTION_41
0x4001bb0	    0xc745b0ffffff	     mov dword [rbp - 0x50], 0xffffffff 	       665	refs.c	FUNCTION_41
0x4001bb7	      0x48837da000	               cmp qword [rbp - 0x60], 0	       667	refs.c	FUNCTION_41	IF_1
0x4001bbc	            0x750a	                           jne 0x4001bc8	       667	refs.c	FUNCTION_41	IF_1
0x4001bbe	      0xb800000000	                              mov eax, 0	       668	refs.c	FUNCTION_41	IF_1
0x4001bc3	      0xe96a010000	                           jmp 0x4001d32	       668	refs.c	FUNCTION_41	IF_1
0x4001bc8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       670	refs.c	FUNCTION_41	CALL_2
0x4001bcc	          0x4889c7	                            mov rdi, rax	       670	refs.c	FUNCTION_41	CALL_2
0x4001bcf	      0xe800000000	                          call 0x4001bd4	       670	refs.c	FUNCTION_41	CALL_2
0x4001bd4	          0x4889c2	                            mov rdx, rax	       670	refs.c	FUNCTION_41	CALL_2
0x4001bd7	        0x488d45c0	                   lea rax, [rbp - 0x40]	       670	refs.c	FUNCTION_41	CALL_2
0x4001bdb	      0xbe00000000	                              mov esi, 0	       670	refs.c	FUNCTION_41	CALL_2
0x4001be0	          0x4889c7	                            mov rdi, rax	       670	refs.c	FUNCTION_41	CALL_2
0x4001be3	      0xb800000000	                              mov eax, 0	       670	refs.c	FUNCTION_41	CALL_2
0x4001be8	      0xe800000000	                          call 0x4001bed	       670	refs.c	FUNCTION_41	CALL_2
0x4001bed	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       672	refs.c	FUNCTION_41	CALL_3
0x4001bf1	          0x4889c6	                            mov rsi, rax	       672	refs.c	FUNCTION_41	CALL_3
0x4001bf4	      0xbf00000000	                              mov edi, 0	       672	refs.c	FUNCTION_41	CALL_3
0x4001bf9	      0xb800000000	                              mov eax, 0	       672	refs.c	FUNCTION_41	CALL_3
0x4001bfe	      0xe800000000	                          call 0x4001c03	       672	refs.c	FUNCTION_41	CALL_3
0x4001c03	        0x488945b8	             mov qword [rbp - 0x48], rax	       672	refs.c	FUNCTION_41	CALL_3
0x4001c07	      0xe800000000	                          call 0x4001c0c	       673	refs.c	FUNCTION_41	CALL_4
0x4001c0c	          0x4889c2	                            mov rdx, rax	       673	refs.c	FUNCTION_41	CALL_4
0x4001c0f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       673	refs.c	FUNCTION_41	CALL_4
0x4001c13	          0x4889d1	                            mov rcx, rdx	       673	refs.c	FUNCTION_41	CALL_4
0x4001c16	      0xba01000000	                              mov edx, 1	       673	refs.c	FUNCTION_41	CALL_4
0x4001c1b	          0x4889c6	                            mov rsi, rax	       673	refs.c	FUNCTION_41	CALL_4
0x4001c1e	      0xbf00000000	                              mov edi, 0	       673	refs.c	FUNCTION_41	CALL_4
0x4001c23	      0xe800000000	                          call 0x4001c28	       673	refs.c	FUNCTION_41	CALL_4
0x4001c28	          0x8945b4	             mov dword [rbp - 0x4c], eax	       673	refs.c	FUNCTION_41	CALL_4
0x4001c2b	        0x837db400	               cmp dword [rbp - 0x4c], 0	       676	refs.c	FUNCTION_41	IF_2
0x4001c2f	            0x7930	                           jns 0x4001c61	       676	refs.c	FUNCTION_41	IF_2
0x4001c31	      0xe800000000	                          call 0x4001c36	       678	refs.c	FUNCTION_41	IF_2	CALL_7
0x4001c36	            0x8b00	                    mov eax, dword [rax]	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4001c38	            0x89c7	                            mov edi, eax	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4001c3a	      0xe800000000	                          call 0x4001c3f	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4001c3f	          0x4889c1	                            mov rcx, rax	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4001c42	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4001c46	        0x488b4590	             mov rax, qword [rbp - 0x70]	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4001c4a	      0xbe00000000	                              mov esi, 0	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4001c4f	          0x4889c7	                            mov rdi, rax	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4001c52	      0xb800000000	                              mov eax, 0	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4001c57	      0xe800000000	                          call 0x4001c5c	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x4001c5c	      0xe9c2000000	                           jmp 0x4001d23	       679	refs.c	FUNCTION_41	IF_2
0x4001c61	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       682	refs.c	FUNCTION_41	IF_3
0x4001c66	            0x746a	                            je 0x4001cd2	       682	refs.c	FUNCTION_41	IF_3
0x4001c68	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       685	refs.c	FUNCTION_41	IF_3	IF_4	CALL_8
0x4001c6c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       685	refs.c	FUNCTION_41	IF_3	IF_4	CALL_8
0x4001c70	          0x4889d6	                            mov rsi, rdx	       685	refs.c	FUNCTION_41	IF_3	IF_4	CALL_8
0x4001c73	          0x4889c7	                            mov rdi, rax	       685	refs.c	FUNCTION_41	IF_3	IF_4	CALL_8
0x4001c76	      0xe800000000	                          call 0x4001c7b	       685	refs.c	FUNCTION_41	IF_3	IF_4	CALL_8
0x4001c7b	            0x85c0	                           test eax, eax	       685	refs.c	FUNCTION_41	IF_3	IF_4	CALL_8
0x4001c7d	            0x7416	                            je 0x4001c95	       685	refs.c	FUNCTION_41	IF_3	IF_4	CALL_8
0x4001c7f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x4001c83	          0x4889c6	                            mov rsi, rax	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x4001c86	      0xbf00000000	                              mov edi, 0	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x4001c8b	      0xb800000000	                              mov eax, 0	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x4001c90	      0xe800000000	                          call 0x4001c95	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x4001c95	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       687	refs.c	FUNCTION_41	IF_3	IF_5	CALL_10
0x4001c99	        0x488d45e0	                   lea rax, [rbp - 0x20]	       687	refs.c	FUNCTION_41	IF_3	IF_5	CALL_10
0x4001c9d	          0x4889d6	                            mov rsi, rdx	       687	refs.c	FUNCTION_41	IF_3	IF_5	CALL_10
0x4001ca0	          0x4889c7	                            mov rdi, rax	       687	refs.c	FUNCTION_41	IF_3	IF_5	CALL_10
0x4001ca3	      0xe899e8ffff	                         call sym.oidcmp	       687	refs.c	FUNCTION_41	IF_3	IF_5	CALL_10
0x4001ca8	            0x85c0	                           test eax, eax	       687	refs.c	FUNCTION_41	IF_3	IF_5	CALL_10
0x4001caa	            0x7426	                            je 0x4001cd2	       687	refs.c	FUNCTION_41	IF_3	IF_5	CALL_10
0x4001cac	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x4001cb0	        0x488b4590	             mov rax, qword [rbp - 0x70]	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x4001cb4	      0xbe00000000	                              mov esi, 0	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x4001cb9	          0x4889c7	                            mov rdi, rax	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x4001cbc	      0xb800000000	                              mov eax, 0	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x4001cc1	      0xe800000000	                          call 0x4001cc6	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x4001cc6	      0xbf00000000	                              mov edi, 0	       689	refs.c	FUNCTION_41	IF_3	IF_5	CALL_12
0x4001ccb	      0xe852e9ffff	             call sym.rollback_lock_file	       689	refs.c	FUNCTION_41	IF_3	IF_5	CALL_12
0x4001cd0	            0xeb51	                           jmp 0x4001d23	       689	refs.c	FUNCTION_41	IF_3	IF_5	CALL_12
0x4001cd2	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4001cd6	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4001cda	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4001cdd	          0x4889ce	                            mov rsi, rcx	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4001ce0	            0x89c7	                            mov edi, eax	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4001ce2	      0xe800000000	                          call 0x4001ce7	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4001ce7	          0x4885c0	                           test rax, rax	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4001cea	            0x7926	                           jns 0x4001d12	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4001cec	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x4001cf0	        0x488b4590	             mov rax, qword [rbp - 0x70]	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x4001cf4	      0xbe00000000	                              mov esi, 0	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x4001cf9	          0x4889c7	                            mov rdi, rax	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x4001cfc	      0xb800000000	                              mov eax, 0	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x4001d01	      0xe800000000	                          call 0x4001d06	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x4001d06	      0xbf00000000	                              mov edi, 0	       696	refs.c	FUNCTION_41	IF_6	CALL_15
0x4001d0b	      0xe812e9ffff	             call sym.rollback_lock_file	       696	refs.c	FUNCTION_41	IF_6	CALL_15
0x4001d10	            0xeb11	                           jmp 0x4001d23	       697	refs.c	FUNCTION_41	IF_6
0x4001d12	      0xbf00000000	                              mov edi, 0	       700	refs.c	FUNCTION_41	CALL_16
0x4001d17	      0xe800000000	                          call 0x4001d1c	       700	refs.c	FUNCTION_41	CALL_16
0x4001d1c	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       701	refs.c	FUNCTION_41
0x4001d23	        0x488d45c0	                   lea rax, [rbp - 0x40]	       703	refs.c	FUNCTION_41	CALL_17
0x4001d27	          0x4889c7	                            mov rdi, rax	       703	refs.c	FUNCTION_41	CALL_17
0x4001d2a	      0xe800000000	                          call 0x4001d2f	       703	refs.c	FUNCTION_41	CALL_17
0x4001d2f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       704	refs.c	FUNCTION_41
0x4001d32	        0x488b4df8	                mov rcx, qword [rbp - 8]	       705	refs.c	FUNCTION_41
0x4001d36	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       705	refs.c	FUNCTION_41
0x4001d3f	            0x7405	                            je 0x4001d46	       705	refs.c	FUNCTION_41
0x4001d41	      0xe800000000	                          call 0x4001d46	       705	refs.c	FUNCTION_41
0x4001d46	              0xc9	                                   leave	       705	refs.c	FUNCTION_41
0x4001d47	              0xc3	                                     ret	       705	refs.c	FUNCTION_41
xstrdup_or_null	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	13
0x40001cb	              0x55	                                push rbp	       923	git-compat-util.h	FUNCTION_143
0x40001cc	          0x4889e5	                            mov rbp, rsp	       923	git-compat-util.h	FUNCTION_143
0x40001cf	        0x4883ec10	                           sub rsp, 0x10	       923	git-compat-util.h	FUNCTION_143
0x40001d3	        0x48897df8	                mov qword [rbp - 8], rdi	       923	git-compat-util.h	FUNCTION_143
0x40001d7	      0x48837df800	                  cmp qword [rbp - 8], 0	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x40001dc	            0x740e	                            je 0x40001ec	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x40001de	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x40001e2	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x40001e5	      0xe800000000	                          call 0x40001ea	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x40001ea	            0xeb05	                           jmp 0x40001f1	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x40001ec	      0xb800000000	                              mov eax, 0	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x40001f1	              0xc9	                                   leave	       925	git-compat-util.h	FUNCTION_143
0x40001f2	              0xc3	                                     ret	       925	git-compat-util.h	FUNCTION_143
for_each_glob_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	15
0x4001482	              0x55	                                push rbp	       469	refs.c	FUNCTION_29
0x4001483	          0x4889e5	                            mov rbp, rsp	       469	refs.c	FUNCTION_29
0x4001486	        0x4883ec20	                           sub rsp, 0x20	       469	refs.c	FUNCTION_29
0x400148a	        0x48897df8	                mov qword [rbp - 8], rdi	       469	refs.c	FUNCTION_29
0x400148e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       469	refs.c	FUNCTION_29
0x4001492	        0x488955e8	             mov qword [rbp - 0x18], rdx	       469	refs.c	FUNCTION_29
0x4001496	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       470	refs.c	FUNCTION_29	CALL_1
0x400149a	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       470	refs.c	FUNCTION_29	CALL_1
0x400149e	        0x488b45f8	                mov rax, qword [rbp - 8]	       470	refs.c	FUNCTION_29	CALL_1
0x40014a2	          0x4889d1	                            mov rcx, rdx	       470	refs.c	FUNCTION_29	CALL_1
0x40014a5	      0xba00000000	                              mov edx, 0	       470	refs.c	FUNCTION_29	CALL_1
0x40014aa	          0x4889c7	                            mov rdi, rax	       470	refs.c	FUNCTION_29	CALL_1
0x40014ad	      0xe800000000	                          call 0x40014b2	       470	refs.c	FUNCTION_29	CALL_1
0x40014b2	              0xc9	                                   leave	       471	refs.c	FUNCTION_29
0x40014b3	              0xc3	                                     ret	       471	refs.c	FUNCTION_29
refs_create_symref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	17
0x4004548	              0x55	                                push rbp	      1808	refs.c	FUNCTION_97
0x4004549	          0x4889e5	                            mov rbp, rsp	      1808	refs.c	FUNCTION_97
0x400454c	        0x4883ec20	                           sub rsp, 0x20	      1808	refs.c	FUNCTION_97
0x4004550	        0x48897df8	                mov qword [rbp - 8], rdi	      1808	refs.c	FUNCTION_97
0x4004554	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1808	refs.c	FUNCTION_97
0x4004558	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1808	refs.c	FUNCTION_97
0x400455c	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1808	refs.c	FUNCTION_97
0x4004560	        0x488b45f8	                mov rax, qword [rbp - 8]	      1809	refs.c	FUNCTION_97	CALL_1
0x4004564	          0x488b00	                    mov rax, qword [rax]	      1809	refs.c	FUNCTION_97	CALL_1
0x4004567	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1809	refs.c	FUNCTION_97	CALL_1
0x400456b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1809	refs.c	FUNCTION_97	CALL_1
0x400456f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1809	refs.c	FUNCTION_97	CALL_1
0x4004573	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1809	refs.c	FUNCTION_97	CALL_1
0x4004577	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1809	refs.c	FUNCTION_97	CALL_1
0x400457b	            0xffd0	                                call rax	      1809	refs.c	FUNCTION_97	CALL_1
0x400457d	              0xc9	                                   leave	      1812	refs.c	FUNCTION_97
0x400457e	              0xc3	                                     ret	      1812	refs.c	FUNCTION_97
dwim_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,3:functions,0	26
0x4001694	              0x55	                                push rbp	       540	refs.c	FUNCTION_34
0x4001695	          0x4889e5	                            mov rbp, rsp	       540	refs.c	FUNCTION_34
0x4001698	        0x4883ec30	                           sub rsp, 0x30	       540	refs.c	FUNCTION_34
0x400169c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       540	refs.c	FUNCTION_34
0x40016a0	          0x8975e4	             mov dword [rbp - 0x1c], esi	       540	refs.c	FUNCTION_34
0x40016a3	        0x488955d8	             mov qword [rbp - 0x28], rdx	       540	refs.c	FUNCTION_34
0x40016a7	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       540	refs.c	FUNCTION_34
0x40016ab	        0x488d55e4	                   lea rdx, [rbp - 0x1c]	       541	refs.c	FUNCTION_34	CALL_1
0x40016af	        0x488d45e8	                   lea rax, [rbp - 0x18]	       541	refs.c	FUNCTION_34	CALL_1
0x40016b3	          0x4889d6	                            mov rsi, rdx	       541	refs.c	FUNCTION_34	CALL_1
0x40016b6	          0x4889c7	                            mov rdi, rax	       541	refs.c	FUNCTION_34	CALL_1
0x40016b9	      0xe826ffffff	         call sym.substitute_branch_name	       541	refs.c	FUNCTION_34	CALL_1
0x40016be	        0x488945f8	                mov qword [rbp - 8], rax	       541	refs.c	FUNCTION_34	CALL_1
0x40016c2	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       542	refs.c	FUNCTION_34	CALL_2
0x40016c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       542	refs.c	FUNCTION_34	CALL_2
0x40016c9	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       542	refs.c	FUNCTION_34	CALL_2
0x40016cd	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       542	refs.c	FUNCTION_34	CALL_2
0x40016d1	          0x4889c7	                            mov rdi, rax	       542	refs.c	FUNCTION_34	CALL_2
0x40016d4	      0xe800000000	                          call 0x40016d9	       542	refs.c	FUNCTION_34	CALL_2
0x40016d9	          0x8945f4	              mov dword [rbp - 0xc], eax	       542	refs.c	FUNCTION_34	CALL_2
0x40016dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       543	refs.c	FUNCTION_34	CALL_3
0x40016e0	          0x4889c7	                            mov rdi, rax	       543	refs.c	FUNCTION_34	CALL_3
0x40016e3	      0xe800000000	                          call 0x40016e8	       543	refs.c	FUNCTION_34	CALL_3
0x40016e8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       544	refs.c	FUNCTION_34
0x40016eb	              0xc9	                                   leave	       545	refs.c	FUNCTION_34
0x40016ec	              0xc3	                                     ret	       545	refs.c	FUNCTION_34
get_files_ref_lock_timeout_ms	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	13
0x4001b40	              0x55	                                push rbp	       644	refs.c	FUNCTION_40
0x4001b41	          0x4889e5	                            mov rbp, rsp	       644	refs.c	FUNCTION_40
0x4001b44	    0x8b0500000000	            mov eax, dword [0x04001b4a] 	       650	refs.c	FUNCTION_40	IF_1
0x4001b4a	            0x85c0	                           test eax, eax	       650	refs.c	FUNCTION_40	IF_1
0x4001b4c	            0x7519	                           jne 0x4001b67	       650	refs.c	FUNCTION_40	IF_1
0x4001b4e	      0xbe00000000	                              mov esi, 0	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x4001b53	      0xbf00000000	                              mov edi, 0	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x4001b58	      0xe800000000	                          call 0x4001b5d	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x4001b5d	    0xc70500000000	               mov dword [0x04001b67], 1	       652	refs.c	FUNCTION_40	IF_1
0x4001b67	    0x8b0500000000	            mov eax, dword [0x04001b6d] 	       655	refs.c	FUNCTION_40
0x4001b6d	            0x4898	                                    cdqe	       655	refs.c	FUNCTION_40
0x4001b6f	              0x5d	                                 pop rbp	       656	refs.c	FUNCTION_40
0x4001b70	              0xc3	                                     ret	       656	refs.c	FUNCTION_40
for_each_reflog	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	16
0x4004c18	              0x55	                                push rbp	      2024	refs.c	FUNCTION_105
0x4004c19	          0x4889e5	                            mov rbp, rsp	      2024	refs.c	FUNCTION_105
0x4004c1c	        0x4883ec10	                           sub rsp, 0x10	      2024	refs.c	FUNCTION_105
0x4004c20	        0x48897df8	                mov qword [rbp - 8], rdi	      2024	refs.c	FUNCTION_105
0x4004c24	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2024	refs.c	FUNCTION_105
0x4004c28	    0x488b05000000	            mov rax, qword [0x04004c2f] 	      2025	refs.c	FUNCTION_105	CALL_2
0x4004c2f	          0x4889c7	                            mov rdi, rax	      2025	refs.c	FUNCTION_105	CALL_2
0x4004c32	      0xe800000000	                          call 0x4004c37	      2025	refs.c	FUNCTION_105	CALL_2
0x4004c37	          0x4889c1	                            mov rcx, rax	      2025	refs.c	FUNCTION_105	CALL_2
0x4004c3a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2025	refs.c	FUNCTION_105	CALL_2
0x4004c3e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2025	refs.c	FUNCTION_105	CALL_2
0x4004c42	          0x4889c6	                            mov rsi, rax	      2025	refs.c	FUNCTION_105	CALL_2
0x4004c45	          0x4889cf	                            mov rdi, rcx	      2025	refs.c	FUNCTION_105	CALL_2
0x4004c48	      0xe800000000	                          call 0x4004c4d	      2025	refs.c	FUNCTION_105	CALL_2
0x4004c4d	              0xc9	                                   leave	      2026	refs.c	FUNCTION_105
0x4004c4e	              0xc3	                                     ret	      2026	refs.c	FUNCTION_105
refs_for_each_reflog_ent	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	17
0x4004cc5	              0x55	                                push rbp	      2046	refs.c	FUNCTION_108
0x4004cc6	          0x4889e5	                            mov rbp, rsp	      2046	refs.c	FUNCTION_108
0x4004cc9	        0x4883ec20	                           sub rsp, 0x20	      2046	refs.c	FUNCTION_108
0x4004ccd	        0x48897df8	                mov qword [rbp - 8], rdi	      2046	refs.c	FUNCTION_108
0x4004cd1	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2046	refs.c	FUNCTION_108
0x4004cd5	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2046	refs.c	FUNCTION_108
0x4004cd9	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2046	refs.c	FUNCTION_108
0x4004cdd	        0x488b45f8	                mov rax, qword [rbp - 8]	      2047	refs.c	FUNCTION_108	CALL_1
0x4004ce1	          0x488b00	                    mov rax, qword [rax]	      2047	refs.c	FUNCTION_108	CALL_1
0x4004ce4	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      2047	refs.c	FUNCTION_108	CALL_1
0x4004ceb	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2047	refs.c	FUNCTION_108	CALL_1
0x4004cef	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2047	refs.c	FUNCTION_108	CALL_1
0x4004cf3	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2047	refs.c	FUNCTION_108	CALL_1
0x4004cf7	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2047	refs.c	FUNCTION_108	CALL_1
0x4004cfb	            0xffd0	                                call rax	      2047	refs.c	FUNCTION_108	CALL_1
0x4004cfd	              0xc9	                                   leave	      2048	refs.c	FUNCTION_108
0x4004cfe	              0xc3	                                     ret	      2048	refs.c	FUNCTION_108
strbuf_setlen	IF,2:ELSE,1:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	43
0x4000279	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_189
0x400027a	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_189
0x400027d	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_189
0x4000281	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_189
0x4000285	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_189
0x4000289	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_189	IF_1
0x400028d	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_189	IF_1
0x4000290	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_189	IF_1
0x4000293	            0x740d	                            je 0x40002a2	       162	strbuf.h	FUNCTION_189	IF_1
0x4000295	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_189	IF_1
0x4000299	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_189	IF_1
0x400029c	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_189	IF_1
0x40002a0	            0xeb05	                           jmp 0x40002a7	       162	strbuf.h	FUNCTION_189	IF_1
0x40002a2	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_189	IF_1
0x40002a7	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_189	IF_1
0x40002ab	            0x730f	                           jae 0x40002bc	       162	strbuf.h	FUNCTION_189	IF_1
0x40002ad	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_189	CALL_1
0x40002b2	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_189	CALL_1
0x40002b7	      0xe800000000	                          call 0x40002bc	       163	strbuf.h	FUNCTION_189	CALL_1
0x40002bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_189
0x40002c0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_189
0x40002c4	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_189
0x40002c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_189	IF_2
0x40002cc	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_189	IF_2
0x40002d0	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_189	IF_2
0x40002d6	            0x7414	                            je 0x40002ec	       165	strbuf.h	FUNCTION_189	IF_2
0x40002d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_189	IF_2
0x40002dc	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_189	IF_2
0x40002e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_189	IF_2
0x40002e4	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_189	IF_2
0x40002e7	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_189	IF_2
0x40002ea	            0xeb24	                           jmp 0x4000310	       169	strbuf.h	FUNCTION_189
0x40002ec	     0xfb605000000	           movzx eax, byte [0x040002f3] 	       168	strbuf.h	FUNCTION_189	CALL_2
0x40002f3	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_189	CALL_2
0x40002f5	            0x7419	                            je 0x4000310	       168	strbuf.h	FUNCTION_189	CALL_2
0x40002f7	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_189	CALL_2
0x40002fc	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_189	CALL_2
0x4000301	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_189	CALL_2
0x4000306	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_189	CALL_2
0x400030b	      0xe800000000	                          call 0x4000310	       168	strbuf.h	FUNCTION_189	CALL_2
0x4000310	              0x90	                                     nop	       169	strbuf.h	FUNCTION_189
0x4000311	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_189
0x4000312	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_189
const_error	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,0:functions,0	5
0x4000053	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_130
0x4000054	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_130
0x4000057	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_130
0x400005c	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_130
0x400005d	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_130
is_null_oid	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	13
0x4000566	              0x55	                                push rbp	       989	cache.h	FUNCTION_170
0x4000567	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_170
0x400056a	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_170
0x400056e	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_170
0x4000572	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_170	CALL_1
0x4000576	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_170	CALL_1
0x400057b	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_170	CALL_1
0x400057e	      0xe894ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_170	CALL_1
0x4000583	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_170	CALL_1
0x4000585	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_170	CALL_1
0x4000588	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_170	CALL_1
0x400058b	              0xc9	                                   leave	       991	cache.h	FUNCTION_170
0x400058c	              0xc3	                                     ret	       991	cache.h	FUNCTION_170
create_symref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	17
0x400457f	              0x55	                                push rbp	      1816	refs.c	FUNCTION_98
0x4004580	          0x4889e5	                            mov rbp, rsp	      1816	refs.c	FUNCTION_98
0x4004583	        0x4883ec20	                           sub rsp, 0x20	      1816	refs.c	FUNCTION_98
0x4004587	        0x48897df8	                mov qword [rbp - 8], rdi	      1816	refs.c	FUNCTION_98
0x400458b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1816	refs.c	FUNCTION_98
0x400458f	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1816	refs.c	FUNCTION_98
0x4004593	    0x488b05000000	            mov rax, qword [0x0400459a] 	      1817	refs.c	FUNCTION_98	CALL_2
0x400459a	          0x4889c7	                            mov rdi, rax	      1817	refs.c	FUNCTION_98	CALL_2
0x400459d	      0xe800000000	                          call 0x40045a2	      1817	refs.c	FUNCTION_98	CALL_2
0x40045a2	          0x4889c7	                            mov rdi, rax	      1817	refs.c	FUNCTION_98	CALL_2
0x40045a5	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1817	refs.c	FUNCTION_98	CALL_2
0x40045a9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1817	refs.c	FUNCTION_98	CALL_2
0x40045ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      1817	refs.c	FUNCTION_98	CALL_2
0x40045b1	          0x4889c6	                            mov rsi, rax	      1817	refs.c	FUNCTION_98	CALL_2
0x40045b4	      0xe800000000	                          call 0x40045b9	      1817	refs.c	FUNCTION_98	CALL_2
0x40045b9	              0xc9	                                   leave	      1819	refs.c	FUNCTION_98
0x40045ba	              0xc3	                                     ret	      1819	refs.c	FUNCTION_98
for_each_reflog_ent	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	17
0x4004cff	              0x55	                                push rbp	      2052	refs.c	FUNCTION_109
0x4004d00	          0x4889e5	                            mov rbp, rsp	      2052	refs.c	FUNCTION_109
0x4004d03	        0x4883ec20	                           sub rsp, 0x20	      2052	refs.c	FUNCTION_109
0x4004d07	        0x48897df8	                mov qword [rbp - 8], rdi	      2052	refs.c	FUNCTION_109
0x4004d0b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2052	refs.c	FUNCTION_109
0x4004d0f	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2052	refs.c	FUNCTION_109
0x4004d13	    0x488b05000000	            mov rax, qword [0x04004d1a] 	      2053	refs.c	FUNCTION_109	CALL_2
0x4004d1a	          0x4889c7	                            mov rdi, rax	      2053	refs.c	FUNCTION_109	CALL_2
0x4004d1d	      0xe800000000	                          call 0x4004d22	      2053	refs.c	FUNCTION_109	CALL_2
0x4004d22	          0x4889c7	                            mov rdi, rax	      2053	refs.c	FUNCTION_109	CALL_2
0x4004d25	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2053	refs.c	FUNCTION_109	CALL_2
0x4004d29	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2053	refs.c	FUNCTION_109	CALL_2
0x4004d2d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2053	refs.c	FUNCTION_109	CALL_2
0x4004d31	          0x4889c6	                            mov rsi, rax	      2053	refs.c	FUNCTION_109	CALL_2
0x4004d34	      0xe800000000	                          call 0x4004d39	      2053	refs.c	FUNCTION_109	CALL_2
0x4004d39	              0xc9	                                   leave	      2055	refs.c	FUNCTION_109
0x4004d3a	              0xc3	                                     ret	      2055	refs.c	FUNCTION_109
ref_transaction_verify	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	28
0x4002c2c	              0x55	                                push rbp	      1061	refs.c	FUNCTION_58
0x4002c2d	          0x4889e5	                            mov rbp, rsp	      1061	refs.c	FUNCTION_58
0x4002c30	        0x4883ec30	                           sub rsp, 0x30	      1061	refs.c	FUNCTION_58
0x4002c34	        0x48897df8	                mov qword [rbp - 8], rdi	      1061	refs.c	FUNCTION_58
0x4002c38	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1061	refs.c	FUNCTION_58
0x4002c3c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1061	refs.c	FUNCTION_58
0x4002c40	          0x894de4	             mov dword [rbp - 0x1c], ecx	      1061	refs.c	FUNCTION_58
0x4002c43	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      1061	refs.c	FUNCTION_58
0x4002c47	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1062	refs.c	FUNCTION_58	IF_1
0x4002c4c	            0x750f	                           jne 0x4002c5d	      1062	refs.c	FUNCTION_58	IF_1
0x4002c4e	      0xbf00000000	                              mov edi, 0	      1063	refs.c	FUNCTION_58	CALL_1
0x4002c53	      0xb800000000	                              mov eax, 0	      1063	refs.c	FUNCTION_58	CALL_1
0x4002c58	      0xe800000000	                          call 0x4002c5d	      1063	refs.c	FUNCTION_58	CALL_1
0x4002c5d	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1064	refs.c	FUNCTION_58	CALL_2
0x4002c60	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1064	refs.c	FUNCTION_58	CALL_2
0x4002c64	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1064	refs.c	FUNCTION_58	CALL_2
0x4002c68	        0x488b45f8	                mov rax, qword [rbp - 8]	      1064	refs.c	FUNCTION_58	CALL_2
0x4002c6c	        0x4883ec08	                              sub rsp, 8	      1064	refs.c	FUNCTION_58	CALL_2
0x4002c70	          0xff75d8	                 push qword [rbp - 0x28]	      1064	refs.c	FUNCTION_58	CALL_2
0x4002c73	    0x41b900000000	                              mov r9d, 0	      1064	refs.c	FUNCTION_58	CALL_2
0x4002c79	          0x4189c8	                            mov r8d, ecx	      1064	refs.c	FUNCTION_58	CALL_2
0x4002c7c	          0x4889d1	                            mov rcx, rdx	      1064	refs.c	FUNCTION_58	CALL_2
0x4002c7f	      0xba00000000	                              mov edx, 0	      1064	refs.c	FUNCTION_58	CALL_2
0x4002c84	          0x4889c7	                            mov rdi, rax	      1064	refs.c	FUNCTION_58	CALL_2
0x4002c87	      0xe800000000	                          call 0x4002c8c	      1064	refs.c	FUNCTION_58	CALL_2
0x4002c8c	        0x4883c410	                           add rsp, 0x10	      1064	refs.c	FUNCTION_58	CALL_2
0x4002c90	              0xc9	                                   leave	      1067	refs.c	FUNCTION_58
0x4002c91	              0xc3	                                     ret	      1067	refs.c	FUNCTION_58
copy_reflog_msg	IF,2:ELSE,0:FOR,0:WHILE,2:SWITCH,0:DO,0:CALL,0:functions,0	73
0x400203f	              0x55	                                push rbp	       776	refs.c	FUNCTION_45
0x4002040	          0x4889e5	                            mov rbp, rsp	       776	refs.c	FUNCTION_45
0x4002043	        0x48897de8	             mov qword [rbp - 0x18], rdi	       776	refs.c	FUNCTION_45
0x4002047	        0x488975e0	             mov qword [rbp - 0x20], rsi	       776	refs.c	FUNCTION_45
0x400204b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       777	refs.c	FUNCTION_45
0x400204f	        0x488945f8	                mov qword [rbp - 8], rax	       777	refs.c	FUNCTION_45
0x4002053	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       779	refs.c	FUNCTION_45
0x400205a	        0x488b45f8	                mov rax, qword [rbp - 8]	       781	refs.c	FUNCTION_45
0x400205e	        0x488d5001	                      lea rdx, [rax + 1]	       781	refs.c	FUNCTION_45
0x4002062	        0x488955f8	                mov qword [rbp - 8], rdx	       781	refs.c	FUNCTION_45
0x4002066	          0xc60009	                       mov byte [rax], 9	       781	refs.c	FUNCTION_45
0x4002069	            0xeb5f	                           jmp 0x40020ca	       782	refs.c	FUNCTION_45	WHILE_1
0x400206b	        0x837df400	                cmp dword [rbp - 0xc], 0	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x400206f	            0x741c	                            je 0x400208d	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x4002071	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x4002075	           0xfb6c0	                           movzx eax, al	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x4002078	            0x4898	                                    cdqe	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x400207a	     0xfb680000000	                   movzx eax, byte [rax]	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x4002081	           0xfb6c0	                           movzx eax, al	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x4002084	          0x83e001	                              and eax, 1	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x4002087	            0x85c0	                           test eax, eax	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x4002089	            0x7402	                            je 0x400208d	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x400208b	            0xeb3d	                           jmp 0x40020ca	       784	refs.c	FUNCTION_45	WHILE_1	IF_1
0x400208d	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	       785	refs.c	FUNCTION_45	WHILE_1
0x4002091	           0xfb6c0	                           movzx eax, al	       785	refs.c	FUNCTION_45	WHILE_1
0x4002094	            0x4898	                                    cdqe	       785	refs.c	FUNCTION_45	WHILE_1
0x4002096	     0xfb680000000	                   movzx eax, byte [rax]	       785	refs.c	FUNCTION_45	WHILE_1
0x400209d	           0xfb6c0	                           movzx eax, al	       785	refs.c	FUNCTION_45	WHILE_1
0x40020a0	          0x83e001	                              and eax, 1	       785	refs.c	FUNCTION_45	WHILE_1
0x40020a3	            0x85c0	                           test eax, eax	       785	refs.c	FUNCTION_45	WHILE_1
0x40020a5	           0xf95c0	                                setne al	       785	refs.c	FUNCTION_45	WHILE_1
0x40020a8	           0xfb6c0	                           movzx eax, al	       785	refs.c	FUNCTION_45	WHILE_1
0x40020ab	          0x8945f4	              mov dword [rbp - 0xc], eax	       785	refs.c	FUNCTION_45	WHILE_1
0x40020ae	        0x837df400	                cmp dword [rbp - 0xc], 0	       786	refs.c	FUNCTION_45	WHILE_1	IF_2
0x40020b2	            0x7404	                            je 0x40020b8	       786	refs.c	FUNCTION_45	WHILE_1	IF_2
0x40020b4	        0xc645f320	              mov byte [rbp - 0xd], 0x20	       787	refs.c	FUNCTION_45	WHILE_1	IF_2
0x40020b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       788	refs.c	FUNCTION_45	WHILE_1
0x40020bc	        0x488d5001	                      lea rdx, [rax + 1]	       788	refs.c	FUNCTION_45	WHILE_1
0x40020c0	        0x488955f8	                mov qword [rbp - 8], rdx	       788	refs.c	FUNCTION_45	WHILE_1
0x40020c4	         0xfb655f3	             movzx edx, byte [rbp - 0xd]	       788	refs.c	FUNCTION_45	WHILE_1
0x40020c8	            0x8810	                      mov byte [rax], dl	       788	refs.c	FUNCTION_45	WHILE_1
0x40020ca	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       782	refs.c	FUNCTION_45	WHILE_1
0x40020ce	        0x488d5001	                      lea rdx, [rax + 1]	       782	refs.c	FUNCTION_45	WHILE_1
0x40020d2	        0x488955e0	             mov qword [rbp - 0x20], rdx	       782	refs.c	FUNCTION_45	WHILE_1
0x40020d6	           0xfb600	                   movzx eax, byte [rax]	       782	refs.c	FUNCTION_45	WHILE_1
0x40020d9	          0x8845f3	                mov byte [rbp - 0xd], al	       782	refs.c	FUNCTION_45	WHILE_1
0x40020dc	        0x807df300	                 cmp byte [rbp - 0xd], 0	       782	refs.c	FUNCTION_45	WHILE_1
0x40020e0	            0x7589	                           jne 0x400206b	       782	refs.c	FUNCTION_45	WHILE_1
0x40020e2	            0xeb05	                           jmp 0x40020e9	       790	refs.c	FUNCTION_45	WHILE_2
0x40020e4	      0x48836df801	                  sub qword [rbp - 8], 1	       791	refs.c	FUNCTION_45	WHILE_2
0x40020e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       790	refs.c	FUNCTION_45	WHILE_2
0x40020ed	        0x483b45f8	                cmp rax, qword [rbp - 8]	       790	refs.c	FUNCTION_45	WHILE_2
0x40020f1	            0x7321	                           jae 0x4002114	       790	refs.c	FUNCTION_45	WHILE_2
0x40020f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       790	refs.c	FUNCTION_45	WHILE_2
0x40020f7	        0x4883e801	                              sub rax, 1	       790	refs.c	FUNCTION_45	WHILE_2
0x40020fb	           0xfb600	                   movzx eax, byte [rax]	       790	refs.c	FUNCTION_45	WHILE_2
0x40020fe	           0xfb6c0	                           movzx eax, al	       790	refs.c	FUNCTION_45	WHILE_2
0x4002101	            0x4898	                                    cdqe	       790	refs.c	FUNCTION_45	WHILE_2
0x4002103	     0xfb680000000	                   movzx eax, byte [rax]	       790	refs.c	FUNCTION_45	WHILE_2
0x400210a	           0xfb6c0	                           movzx eax, al	       790	refs.c	FUNCTION_45	WHILE_2
0x400210d	          0x83e001	                              and eax, 1	       790	refs.c	FUNCTION_45	WHILE_2
0x4002110	            0x85c0	                           test eax, eax	       790	refs.c	FUNCTION_45	WHILE_2
0x4002112	            0x75d0	                           jne 0x40020e4	       790	refs.c	FUNCTION_45	WHILE_2
0x4002114	        0x488b45f8	                mov rax, qword [rbp - 8]	       792	refs.c	FUNCTION_45
0x4002118	        0x488d5001	                      lea rdx, [rax + 1]	       792	refs.c	FUNCTION_45
0x400211c	        0x488955f8	                mov qword [rbp - 8], rdx	       792	refs.c	FUNCTION_45
0x4002120	          0xc6000a	                     mov byte [rax], 0xa	       792	refs.c	FUNCTION_45
0x4002123	        0x488b55f8	                mov rdx, qword [rbp - 8]	       793	refs.c	FUNCTION_45
0x4002127	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       793	refs.c	FUNCTION_45
0x400212b	          0x4829c2	                            sub rdx, rax	       793	refs.c	FUNCTION_45
0x400212e	          0x4889d0	                            mov rax, rdx	       793	refs.c	FUNCTION_45
0x4002131	              0x5d	                                 pop rbp	       794	refs.c	FUNCTION_45
0x4002132	              0xc3	                                     ret	       794	refs.c	FUNCTION_45
substitute_branch_name	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	46
0x40015e4	              0x55	                                push rbp	       525	refs.c	FUNCTION_33
0x40015e5	          0x4889e5	                            mov rbp, rsp	       525	refs.c	FUNCTION_33
0x40015e8	        0x4883ec40	                           sub rsp, 0x40	       525	refs.c	FUNCTION_33
0x40015ec	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       525	refs.c	FUNCTION_33
0x40015f0	        0x488975c0	             mov qword [rbp - 0x40], rsi	       525	refs.c	FUNCTION_33
0x40015f4	    0x64488b042528	                mov rax, qword fs:[0x28]	       525	refs.c	FUNCTION_33
0x40015fd	        0x488945f8	                mov qword [rbp - 8], rax	       525	refs.c	FUNCTION_33
0x4001601	            0x31c0	                            xor eax, eax	       525	refs.c	FUNCTION_33
0x4001603	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       526	refs.c	FUNCTION_33
0x400160b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       526	refs.c	FUNCTION_33
0x4001613	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       526	refs.c	FUNCTION_33
0x400161b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       527	refs.c	FUNCTION_33	CALL_1
0x400161f	            0x8b30	                    mov esi, dword [rax]	       527	refs.c	FUNCTION_33	CALL_1
0x4001621	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       527	refs.c	FUNCTION_33	CALL_1
0x4001625	          0x488b00	                    mov rax, qword [rax]	       527	refs.c	FUNCTION_33	CALL_1
0x4001628	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       527	refs.c	FUNCTION_33	CALL_1
0x400162c	      0xb900000000	                              mov ecx, 0	       527	refs.c	FUNCTION_33	CALL_1
0x4001631	          0x4889c7	                            mov rdi, rax	       527	refs.c	FUNCTION_33	CALL_1
0x4001634	      0xe800000000	                          call 0x4001639	       527	refs.c	FUNCTION_33	CALL_1
0x4001639	          0x8945d4	             mov dword [rbp - 0x2c], eax	       527	refs.c	FUNCTION_33	CALL_1
0x400163c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       529	refs.c	FUNCTION_33	IF_1
0x4001640	            0x8b00	                    mov eax, dword [rax]	       529	refs.c	FUNCTION_33	IF_1
0x4001642	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       529	refs.c	FUNCTION_33	IF_1
0x4001645	            0x7532	                           jne 0x4001679	       529	refs.c	FUNCTION_33	IF_1
0x4001647	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x400164b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x400164f	          0x4889d6	                            mov rsi, rdx	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x4001652	          0x4889c7	                            mov rdi, rax	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x4001655	      0xe800000000	                          call 0x400165a	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x400165a	          0x4889c2	                            mov rdx, rax	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x400165d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x4001661	          0x488910	                    mov qword [rax], rdx	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x4001664	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       532	refs.c	FUNCTION_33	IF_1
0x4001668	            0x89c2	                            mov edx, eax	       532	refs.c	FUNCTION_33	IF_1
0x400166a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       532	refs.c	FUNCTION_33	IF_1
0x400166e	            0x8910	                    mov dword [rax], edx	       532	refs.c	FUNCTION_33	IF_1
0x4001670	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       533	refs.c	FUNCTION_33	IF_1
0x4001674	          0x488b00	                    mov rax, qword [rax]	       533	refs.c	FUNCTION_33	IF_1
0x4001677	            0xeb05	                           jmp 0x400167e	       533	refs.c	FUNCTION_33	IF_1
0x4001679	      0xb800000000	                              mov eax, 0	       536	refs.c	FUNCTION_33
0x400167e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       537	refs.c	FUNCTION_33
0x4001682	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       537	refs.c	FUNCTION_33
0x400168b	            0x7405	                            je 0x4001692	       537	refs.c	FUNCTION_33
0x400168d	      0xe800000000	                          call 0x4001692	       537	refs.c	FUNCTION_33
0x4001692	              0xc9	                                   leave	       537	refs.c	FUNCTION_33
0x4001693	              0xc3	                                     ret	       537	refs.c	FUNCTION_33
oidclr	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	12
0x40005de	              0x55	                                push rbp	      1016	cache.h	FUNCTION_175
0x40005df	          0x4889e5	                            mov rbp, rsp	      1016	cache.h	FUNCTION_175
0x40005e2	        0x4883ec10	                           sub rsp, 0x10	      1016	cache.h	FUNCTION_175
0x40005e6	        0x48897df8	                mov qword [rbp - 8], rdi	      1016	cache.h	FUNCTION_175
0x40005ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      1017	cache.h	FUNCTION_175	CALL_1
0x40005ee	      0xba14000000	                           mov edx, 0x14	      1017	cache.h	FUNCTION_175	CALL_1
0x40005f3	      0xbe00000000	                              mov esi, 0	      1017	cache.h	FUNCTION_175	CALL_1
0x40005f8	          0x4889c7	                            mov rdi, rax	      1017	cache.h	FUNCTION_175	CALL_1
0x40005fb	      0xe800000000	                          call 0x4000600	      1017	cache.h	FUNCTION_175	CALL_1
0x4000600	              0x90	                                     nop	      1018	cache.h	FUNCTION_175
0x4000601	              0xc9	                                   leave	      1018	cache.h	FUNCTION_175
0x4000602	              0xc3	                                     ret	      1018	cache.h	FUNCTION_175
refname_is_safe	IF,3:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,1:CALL,6:functions,0	86
0x40008b5	              0x55	                                push rbp	       148	refs.c	FUNCTION_5
0x40008b6	          0x4889e5	                            mov rbp, rsp	       148	refs.c	FUNCTION_5
0x40008b9	        0x4883ec40	                           sub rsp, 0x40	       148	refs.c	FUNCTION_5
0x40008bd	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       148	refs.c	FUNCTION_5
0x40008c1	    0x64488b042528	                mov rax, qword fs:[0x28]	       148	refs.c	FUNCTION_5
0x40008ca	        0x488945f8	                mov qword [rbp - 8], rax	       148	refs.c	FUNCTION_5
0x40008ce	            0x31c0	                            xor eax, eax	       148	refs.c	FUNCTION_5
0x40008d0	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       151	refs.c	FUNCTION_5	IF_1	CALL_1
0x40008d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       151	refs.c	FUNCTION_5	IF_1	CALL_1
0x40008d8	      0xbe00000000	                              mov esi, 0	       151	refs.c	FUNCTION_5	IF_1	CALL_1
0x40008dd	          0x4889c7	                            mov rdi, rax	       151	refs.c	FUNCTION_5	IF_1	CALL_1
0x40008e0	      0xe879f7ffff	                    call sym.skip_prefix	       151	refs.c	FUNCTION_5	IF_1	CALL_1
0x40008e5	            0x85c0	                           test eax, eax	       151	refs.c	FUNCTION_5	IF_1	CALL_1
0x40008e7	     0xf84a0000000	                            je 0x400098d	       151	refs.c	FUNCTION_5	IF_1	CALL_1
0x40008ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       154	refs.c	FUNCTION_5	IF_1	CALL_2
0x40008f1	          0x4889c7	                            mov rdi, rax	       154	refs.c	FUNCTION_5	IF_1	CALL_2
0x40008f4	      0xe800000000	                          call 0x40008f9	       154	refs.c	FUNCTION_5	IF_1	CALL_2
0x40008f9	        0x488945e8	             mov qword [rbp - 0x18], rax	       154	refs.c	FUNCTION_5	IF_1	CALL_2
0x40008fd	      0x48837de800	               cmp qword [rbp - 0x18], 0	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000902	            0x7421	                            je 0x4000925	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000904	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000908	           0xfb600	                   movzx eax, byte [rax]	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x400090b	            0x3c2f	                            cmp al, 0x2f	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x400090d	            0x7416	                            je 0x4000925	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x400090f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000913	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000917	        0x4883ea01	                              sub rdx, 1	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x400091b	          0x4801d0	                            add rax, rdx	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x400091e	           0xfb600	                   movzx eax, byte [rax]	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000921	            0x3c2f	                            cmp al, 0x2f	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000923	            0x750a	                           jne 0x400092f	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000925	      0xb800000000	                              mov eax, 0	       158	refs.c	FUNCTION_5	IF_1	IF_2
0x400092a	      0xe99f000000	                           jmp 0x40009ce	       158	refs.c	FUNCTION_5	IF_1	IF_2
0x400092f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       165	refs.c	FUNCTION_5	IF_1	CALL_3
0x4000933	          0x4889c7	                            mov rdi, rax	       165	refs.c	FUNCTION_5	IF_1	CALL_3
0x4000936	      0xe800000000	                          call 0x400093b	       165	refs.c	FUNCTION_5	IF_1	CALL_3
0x400093b	        0x488945f0	             mov qword [rbp - 0x10], rax	       165	refs.c	FUNCTION_5	IF_1	CALL_3
0x400093f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x4000943	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x4000947	          0x4889d6	                            mov rsi, rdx	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x400094a	          0x4889c7	                            mov rdi, rax	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x400094d	      0xe800000000	                          call 0x4000952	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x4000952	            0x85c0	                           test eax, eax	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x4000954	            0x751e	                           jne 0x4000974	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x4000956	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x400095a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x400095e	          0x4889d6	                            mov rsi, rdx	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x4000961	          0x4889c7	                            mov rdi, rax	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x4000964	      0xe800000000	                          call 0x4000969	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x4000969	            0x85c0	                           test eax, eax	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x400096b	            0x7507	                           jne 0x4000974	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x400096d	      0xb801000000	                              mov eax, 1	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x4000972	            0xeb05	                           jmp 0x4000979	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x4000974	      0xb800000000	                              mov eax, 0	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x4000979	          0x8945dc	             mov dword [rbp - 0x24], eax	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x400097c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       167	refs.c	FUNCTION_5	IF_1	CALL_6
0x4000980	          0x4889c7	                            mov rdi, rax	       167	refs.c	FUNCTION_5	IF_1	CALL_6
0x4000983	      0xe800000000	                          call 0x4000988	       167	refs.c	FUNCTION_5	IF_1	CALL_6
0x4000988	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       168	refs.c	FUNCTION_5	IF_1
0x400098b	            0xeb41	                           jmp 0x40009ce	       168	refs.c	FUNCTION_5	IF_1
0x400098d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x4000991	           0xfb600	                   movzx eax, byte [rax]	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x4000994	           0xfbec0	                           movsx eax, al	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x4000997	      0xbe00000000	                              mov esi, 0	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x400099c	            0x89c7	                            mov edi, eax	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x400099e	      0xe850f8ffff	                    call sym.sane_iscase	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x40009a3	            0x85c0	                           test eax, eax	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x40009a5	            0x7512	                           jne 0x40009b9	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x40009a7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x40009ab	           0xfb600	                   movzx eax, byte [rax]	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x40009ae	            0x3c5f	                            cmp al, 0x5f	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x40009b0	            0x7407	                            je 0x40009b9	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x40009b2	      0xb800000000	                              mov eax, 0	       173	refs.c	FUNCTION_5	DO_1	IF_3
0x40009b7	            0xeb15	                           jmp 0x40009ce	       173	refs.c	FUNCTION_5	DO_1	IF_3
0x40009b9	      0x488345c801	               add qword [rbp - 0x38], 1	       174	refs.c	FUNCTION_5	DO_1
0x40009be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       175	refs.c	FUNCTION_5	DO_1
0x40009c2	           0xfb600	                   movzx eax, byte [rax]	       175	refs.c	FUNCTION_5	DO_1
0x40009c5	            0x84c0	                             test al, al	       175	refs.c	FUNCTION_5	DO_1
0x40009c7	            0x75c4	                           jne 0x400098d	       175	refs.c	FUNCTION_5	DO_1
0x40009c9	      0xb801000000	                              mov eax, 1	       176	refs.c	FUNCTION_5
0x40009ce	        0x488b4df8	                mov rcx, qword [rbp - 8]	       177	refs.c	FUNCTION_5
0x40009d2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       177	refs.c	FUNCTION_5
0x40009db	            0x7405	                            je 0x40009e2	       177	refs.c	FUNCTION_5
0x40009dd	      0xe800000000	                          call 0x40009e2	       177	refs.c	FUNCTION_5
0x40009e2	              0xc9	                                   leave	       177	refs.c	FUNCTION_5
0x40009e3	              0xc3	                                     ret	       177	refs.c	FUNCTION_5
st_add	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	20
0x4000135	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_138
0x4000136	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_138
0x4000139	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_138
0x400013d	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_138
0x4000141	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_138
0x4000145	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_138	IF_1
0x4000149	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_138	IF_1
0x400014c	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_138	IF_1
0x4000150	            0x731a	                           jae 0x400016c	       785	git-compat-util.h	FUNCTION_138	IF_1
0x4000152	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x4000156	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x400015a	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x400015d	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x4000162	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x4000167	      0xe800000000	                          call 0x400016c	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x400016c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_138
0x4000170	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_138
0x4000174	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_138
0x4000177	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_138
0x4000178	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_138
update_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	29
0x4002e69	              0x55	                                push rbp	      1117	refs.c	FUNCTION_60
0x4002e6a	          0x4889e5	                            mov rbp, rsp	      1117	refs.c	FUNCTION_60
0x4002e6d	        0x4883ec30	                           sub rsp, 0x30	      1117	refs.c	FUNCTION_60
0x4002e71	        0x48897df8	                mov qword [rbp - 8], rdi	      1117	refs.c	FUNCTION_60
0x4002e75	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1117	refs.c	FUNCTION_60
0x4002e79	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1117	refs.c	FUNCTION_60
0x4002e7d	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1117	refs.c	FUNCTION_60
0x4002e81	        0x448945dc	             mov dword [rbp - 0x24], r8d	      1117	refs.c	FUNCTION_60
0x4002e85	        0x44894dd8	             mov dword [rbp - 0x28], r9d	      1117	refs.c	FUNCTION_60
0x4002e89	    0x488b05000000	            mov rax, qword [0x04002e90] 	      1118	refs.c	FUNCTION_60	CALL_2
0x4002e90	          0x4889c7	                            mov rdi, rax	      1118	refs.c	FUNCTION_60	CALL_2
0x4002e93	      0xe800000000	                          call 0x4002e98	      1118	refs.c	FUNCTION_60	CALL_2
0x4002e98	          0x4989c2	                            mov r10, rax	      1118	refs.c	FUNCTION_60	CALL_2
0x4002e9b	        0x448b45dc	             mov r8d, dword [rbp - 0x24]	      1118	refs.c	FUNCTION_60	CALL_2
0x4002e9f	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	      1118	refs.c	FUNCTION_60	CALL_2
0x4002ea3	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1118	refs.c	FUNCTION_60	CALL_2
0x4002ea7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1118	refs.c	FUNCTION_60	CALL_2
0x4002eab	        0x488b45f8	                mov rax, qword [rbp - 8]	      1118	refs.c	FUNCTION_60	CALL_2
0x4002eaf	        0x4883ec08	                              sub rsp, 8	      1118	refs.c	FUNCTION_60	CALL_2
0x4002eb3	          0x8b75d8	             mov esi, dword [rbp - 0x28]	      1118	refs.c	FUNCTION_60	CALL_2
0x4002eb6	              0x56	                                push rsi	      1118	refs.c	FUNCTION_60	CALL_2
0x4002eb7	          0x4589c1	                            mov r9d, r8d	      1118	refs.c	FUNCTION_60	CALL_2
0x4002eba	          0x4989f8	                             mov r8, rdi	      1118	refs.c	FUNCTION_60	CALL_2
0x4002ebd	          0x4889c6	                            mov rsi, rax	      1118	refs.c	FUNCTION_60	CALL_2
0x4002ec0	          0x4c89d7	                            mov rdi, r10	      1118	refs.c	FUNCTION_60	CALL_2
0x4002ec3	      0xe800000000	                          call 0x4002ec8	      1118	refs.c	FUNCTION_60	CALL_2
0x4002ec8	        0x4883c410	                           add rsp, 0x10	      1118	refs.c	FUNCTION_60	CALL_2
0x4002ecc	              0xc9	                                   leave	      1120	refs.c	FUNCTION_60
0x4002ecd	              0xc3	                                     ret	      1120	refs.c	FUNCTION_60
check_refname_component	IF,6:ELSE,0:FOR,1:WHILE,0:SWITCH,1:DO,0:CALL,1:functions,0	88
0x40006d2	              0x55	                                push rbp	        75	refs.c	FUNCTION_3
0x40006d3	          0x4889e5	                            mov rbp, rsp	        75	refs.c	FUNCTION_3
0x40006d6	        0x4883ec20	                           sub rsp, 0x20	        75	refs.c	FUNCTION_3
0x40006da	        0x48897de8	             mov qword [rbp - 0x18], rdi	        75	refs.c	FUNCTION_3
0x40006de	        0x488975e0	             mov qword [rbp - 0x20], rsi	        75	refs.c	FUNCTION_3
0x40006e2	        0xc645f200	                 mov byte [rbp - 0xe], 0	        77	refs.c	FUNCTION_3
0x40006e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        79	refs.c	FUNCTION_3	FOR_1
0x40006ea	        0x488945f8	                mov qword [rbp - 8], rax	        79	refs.c	FUNCTION_3	FOR_1
0x40006ee	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	refs.c	FUNCTION_3	FOR_1
0x40006f2	           0xfb600	                   movzx eax, byte [rax]	        80	refs.c	FUNCTION_3	FOR_1
0x40006f5	           0xfbec0	                           movsx eax, al	        80	refs.c	FUNCTION_3	FOR_1
0x40006f8	      0x25ff000000	                           and eax, 0xff	        80	refs.c	FUNCTION_3	FOR_1
0x40006fd	          0x8945f4	              mov dword [rbp - 0xc], eax	        80	refs.c	FUNCTION_3	FOR_1
0x4000700	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        81	refs.c	FUNCTION_3	FOR_1
0x4000703	            0x4898	                                    cdqe	        81	refs.c	FUNCTION_3	FOR_1
0x4000705	     0xfb680000000	                   movzx eax, byte [rax]	        81	refs.c	FUNCTION_3	FOR_1
0x400070c	          0x8845f3	                mov byte [rbp - 0xd], al	        81	refs.c	FUNCTION_3	FOR_1
0x400070f	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000713	          0x83f805	                              cmp eax, 5	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000716	            0x7764	                            ja 0x400077c	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000718	            0x89c0	                            mov eax, eax	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x400071a	    0x488b04c50000	                  mov rax, qword [rax*8]	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000722	            0xffe0	                                 jmp rax	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000724	        0x807df22e	              cmp byte [rbp - 0xe], 0x2e	        86	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x4000728	            0x754e	                           jne 0x4000778	        86	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x400072a	      0xb8ffffffff	                     mov eax, 0xffffffff	        87	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x400072f	      0xe9c3000000	                           jmp 0x40007f7	        87	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x4000734	        0x807df240	              cmp byte [rbp - 0xe], 0x40	        90	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x4000738	            0x7541	                           jne 0x400077b	        90	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x400073a	      0xb8ffffffff	                     mov eax, 0xffffffff	        91	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x400073f	      0xe9b3000000	                           jmp 0x40007f7	        91	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x4000744	      0xb8ffffffff	                     mov eax, 0xffffffff	        94	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000749	      0xe9a9000000	                           jmp 0x40007f7	        94	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x400074e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        96	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x4000752	            0x8b00	                    mov eax, dword [rax]	        96	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x4000754	          0x83e002	                              and eax, 2	        96	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x4000757	            0x85c0	                           test eax, eax	        96	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x4000759	            0x750a	                           jne 0x4000765	        96	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x400075b	      0xb8ffffffff	                     mov eax, 0xffffffff	        97	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x4000760	      0xe992000000	                           jmp 0x40007f7	        97	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x4000765	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       103	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000769	            0x8b00	                    mov eax, dword [rax]	       103	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x400076b	          0x83e0fd	                     and eax, 0xfffffffd	       103	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x400076e	            0x89c2	                            mov edx, eax	       103	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000770	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       103	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000774	            0x8910	                    mov dword [rax], edx	       103	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000776	            0xeb04	                           jmp 0x400077c	       104	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000778	              0x90	                                     nop	        88	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000779	            0xeb01	                           jmp 0x400077c	        88	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x400077b	              0x90	                                     nop	        92	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x400077c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       106	refs.c	FUNCTION_3	FOR_1
0x400077f	          0x8845f2	                mov byte [rbp - 0xe], al	       106	refs.c	FUNCTION_3	FOR_1
0x4000782	      0x488345f801	                  add qword [rbp - 8], 1	        79	refs.c	FUNCTION_3	FOR_1
0x4000787	      0xe962ffffff	                           jmp 0x40006ee	       107	refs.c	FUNCTION_3	FOR_1
0x400078c	              0x90	                                     nop	        84	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x400078d	        0x488b45f8	                mov rax, qword [rbp - 8]	       109	refs.c	FUNCTION_3	IF_4
0x4000791	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       109	refs.c	FUNCTION_3	IF_4
0x4000795	            0x7507	                           jne 0x400079e	       109	refs.c	FUNCTION_3	IF_4
0x4000797	      0xb800000000	                              mov eax, 0	       110	refs.c	FUNCTION_3	IF_4
0x400079c	            0xeb59	                           jmp 0x40007f7	       110	refs.c	FUNCTION_3	IF_4
0x400079e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       111	refs.c	FUNCTION_3	IF_5
0x40007a2	           0xfb600	                   movzx eax, byte [rax]	       111	refs.c	FUNCTION_3	IF_5
0x40007a5	            0x3c2e	                            cmp al, 0x2e	       111	refs.c	FUNCTION_3	IF_5
0x40007a7	            0x7507	                           jne 0x40007b0	       111	refs.c	FUNCTION_3	IF_5
0x40007a9	      0xb8ffffffff	                     mov eax, 0xffffffff	       112	refs.c	FUNCTION_3	IF_5
0x40007ae	            0xeb47	                           jmp 0x40007f7	       112	refs.c	FUNCTION_3	IF_5
0x40007b0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       113	refs.c	FUNCTION_3	IF_6
0x40007b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       113	refs.c	FUNCTION_3	IF_6
0x40007b8	          0x4829c2	                            sub rdx, rax	       113	refs.c	FUNCTION_3	IF_6
0x40007bb	          0x4889d0	                            mov rax, rdx	       113	refs.c	FUNCTION_3	IF_6
0x40007be	        0x4883f804	                              cmp rax, 4	       113	refs.c	FUNCTION_3	IF_6
0x40007c2	            0x7e25	                           jle 0x40007e9	       113	refs.c	FUNCTION_3	IF_6
0x40007c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x40007c8	        0x4883e805	                              sub rax, 5	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x40007cc	      0xba05000000	                              mov edx, 5	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x40007d1	      0xbe00000000	                              mov esi, 0	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x40007d6	          0x4889c7	                            mov rdi, rax	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x40007d9	      0xe800000000	                          call 0x40007de	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x40007de	            0x85c0	                           test eax, eax	       113	refs.c	FUNCTION_3	IF_6
0x40007e0	            0x7507	                           jne 0x40007e9	       113	refs.c	FUNCTION_3	IF_6
0x40007e2	      0xb8ffffffff	                     mov eax, 0xffffffff	       115	refs.c	FUNCTION_3	IF_6
0x40007e7	            0xeb0e	                           jmp 0x40007f7	       115	refs.c	FUNCTION_3	IF_6
0x40007e9	        0x488b55f8	                mov rdx, qword [rbp - 8]	       116	refs.c	FUNCTION_3
0x40007ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       116	refs.c	FUNCTION_3
0x40007f1	          0x4829c2	                            sub rdx, rax	       116	refs.c	FUNCTION_3
0x40007f4	          0x4889d0	                            mov rax, rdx	       116	refs.c	FUNCTION_3
0x40007f7	              0xc9	                                   leave	       117	refs.c	FUNCTION_3
0x40007f8	              0xc3	                                     ret	       117	refs.c	FUNCTION_3
refs_verify_refname_available	IF,6:ELSE,1:FOR,1:WHILE,1:SWITCH,0:DO,0:CALL,23:functions,0	190
0x4004878	              0x55	                                push rbp	      1930	refs.c	FUNCTION_103
0x4004879	          0x4889e5	                            mov rbp, rsp	      1930	refs.c	FUNCTION_103
0x400487c	    0x4881ecc00000	                           sub rsp, 0xc0	      1930	refs.c	FUNCTION_103
0x4004883	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      1930	refs.c	FUNCTION_103
0x400488a	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      1930	refs.c	FUNCTION_103
0x4004891	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      1930	refs.c	FUNCTION_103
0x4004898	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	      1930	refs.c	FUNCTION_103
0x400489f	    0x4c898548ffff	              mov qword [rbp - 0xb8], r8	      1930	refs.c	FUNCTION_103
0x40048a6	    0x64488b042528	                mov rax, qword fs:[0x28]	      1930	refs.c	FUNCTION_103
0x40048af	        0x488945f8	                mov qword [rbp - 8], rax	      1930	refs.c	FUNCTION_103
0x40048b3	            0x31c0	                            xor eax, eax	      1930	refs.c	FUNCTION_103
0x40048b5	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1933	refs.c	FUNCTION_103
0x40048bd	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1933	refs.c	FUNCTION_103
0x40048c5	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1933	refs.c	FUNCTION_103
0x40048cd	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1934	refs.c	FUNCTION_103
0x40048d5	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1934	refs.c	FUNCTION_103
0x40048dd	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1934	refs.c	FUNCTION_103
0x40048e5	    0xc74580ffffff	     mov dword [rbp - 0x80], 0xffffffff 	      1939	refs.c	FUNCTION_103
0x40048ec	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      1946	refs.c	FUNCTION_103	CALL_1
0x40048f4	            0x7519	                           jne 0x400490f	      1946	refs.c	FUNCTION_103	CALL_1
0x40048f6	      0xb900000000	                              mov ecx, 0	      1946	refs.c	FUNCTION_103	CALL_1
0x40048fb	      0xba9a070000	                          mov edx, 0x79a	      1946	refs.c	FUNCTION_103	CALL_1
0x4004900	      0xbe00000000	                              mov esi, 0	      1946	refs.c	FUNCTION_103	CALL_1
0x4004905	      0xbf00000000	                              mov edi, 0	      1946	refs.c	FUNCTION_103	CALL_1
0x400490a	      0xe800000000	                          call 0x400490f	      1946	refs.c	FUNCTION_103	CALL_1
0x400490f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1948	refs.c	FUNCTION_103	CALL_3
0x4004916	          0x4889c7	                            mov rdi, rax	      1948	refs.c	FUNCTION_103	CALL_3
0x4004919	      0xe800000000	                          call 0x400491e	      1948	refs.c	FUNCTION_103	CALL_3
0x400491e	        0x488d5001	                      lea rdx, [rax + 1]	      1948	refs.c	FUNCTION_103	CALL_3
0x4004922	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1948	refs.c	FUNCTION_103	CALL_3
0x4004926	          0x4889d6	                            mov rsi, rdx	      1948	refs.c	FUNCTION_103	CALL_3
0x4004929	          0x4889c7	                            mov rdi, rax	      1948	refs.c	FUNCTION_103	CALL_3
0x400492c	      0xe800000000	                          call 0x4004931	      1948	refs.c	FUNCTION_103	CALL_3
0x4004931	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4004938	      0xbe2f000000	                           mov esi, 0x2f	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x400493d	          0x4889c7	                            mov rdi, rax	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4004940	      0xe800000000	                          call 0x4004945	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4004945	        0x48894588	             mov qword [rbp - 0x78], rax	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4004949	      0xe919010000	                           jmp 0x4004a67	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x400494e	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x4004952	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x4004959	          0x4829c2	                            sub rdx, rax	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x400495c	          0x4889d0	                            mov rax, rdx	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x400495f	          0x4889c2	                            mov rdx, rax	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x4004962	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x4004966	          0x4829c2	                            sub rdx, rax	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x4004969	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x400496d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x4004974	          0x4801c1	                            add rcx, rax	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x4004977	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x400497b	          0x4889ce	                            mov rsi, rcx	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x400497e	          0x4889c7	                            mov rdi, rax	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x4004981	      0xe800000000	                          call 0x4004986	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x4004986	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x400498e	            0x741e	                            je 0x40049ae	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x4004990	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x4004994	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x400499b	          0x4889d6	                            mov rsi, rdx	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x400499e	          0x4889c7	                            mov rdi, rax	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x40049a1	      0xe800000000	                          call 0x40049a6	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x40049a6	            0x85c0	                           test eax, eax	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x40049a8	     0xf859f000000	                           jne 0x4004a4d	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x40049ae	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x40049b2	    0x488dbd7cffff	                   lea rdi, [rbp - 0x84]	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x40049b9	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x40049bd	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x40049c1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x40049c8	          0x4989f8	                             mov r8, rdi	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x40049cb	          0x4889c7	                            mov rdi, rax	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x40049ce	      0xe800000000	                          call 0x40049d3	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x40049d3	            0x85c0	                           test eax, eax	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x40049d5	            0x7529	                           jne 0x4004a00	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x40049d7	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_9
0x40049db	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_9
0x40049e2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_9
0x40049e9	      0xbe00000000	                              mov esi, 0	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_9
0x40049ee	          0x4889c7	                            mov rdi, rax	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_9
0x40049f1	      0xb800000000	                              mov eax, 0	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_9
0x40049f6	      0xe800000000	                          call 0x40049fb	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_9
0x40049fb	      0xe9a2010000	                           jmp 0x4004ba2	      1964	refs.c	FUNCTION_103	FOR_1	IF_2
0x4004a00	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x4004a08	            0x7444	                            je 0x4004a4e	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x4004a0a	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x4004a0e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x4004a15	          0x4889d6	                            mov rsi, rdx	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x4004a18	          0x4889c7	                            mov rdi, rax	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x4004a1b	      0xe800000000	                          call 0x4004a20	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x4004a20	            0x85c0	                           test eax, eax	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x4004a22	            0x742a	                            je 0x4004a4e	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x4004a24	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_11
0x4004a28	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_11
0x4004a2f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_11
0x4004a36	      0xbe00000000	                              mov esi, 0	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_11
0x4004a3b	          0x4889c7	                            mov rdi, rax	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_11
0x4004a3e	      0xb800000000	                              mov eax, 0	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_11
0x4004a43	      0xe800000000	                          call 0x4004a48	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_11
0x4004a48	      0xe955010000	                           jmp 0x4004ba2	      1970	refs.c	FUNCTION_103	FOR_1	IF_3
0x4004a4d	              0x90	                                     nop	      1959	refs.c	FUNCTION_103	FOR_1	IF_1
0x4004a4e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4004a52	        0x4883c001	                              add rax, 1	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4004a56	      0xbe2f000000	                           mov esi, 0x2f	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4004a5b	          0x4889c7	                            mov rdi, rax	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4004a5e	      0xe800000000	                          call 0x4004a63	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4004a63	        0x48894588	             mov qword [rbp - 0x78], rax	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4004a67	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4004a6c	     0xf85dcfeffff	                           jne 0x400494e	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4004a72	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1982	refs.c	FUNCTION_103	CALL_12
0x4004a76	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1982	refs.c	FUNCTION_103	CALL_12
0x4004a7d	          0x4801c2	                            add rdx, rax	      1982	refs.c	FUNCTION_103	CALL_12
0x4004a80	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1982	refs.c	FUNCTION_103	CALL_12
0x4004a84	          0x4889d6	                            mov rsi, rdx	      1982	refs.c	FUNCTION_103	CALL_12
0x4004a87	          0x4889c7	                            mov rdi, rax	      1982	refs.c	FUNCTION_103	CALL_12
0x4004a8a	      0xe8f2b8ffff	                  call sym.strbuf_addstr	      1982	refs.c	FUNCTION_103	CALL_12
0x4004a8f	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1983	refs.c	FUNCTION_103	CALL_13
0x4004a93	      0xbe2f000000	                           mov esi, 0x2f	      1983	refs.c	FUNCTION_103	CALL_13
0x4004a98	          0x4889c7	                            mov rdi, rax	      1983	refs.c	FUNCTION_103	CALL_13
0x4004a9b	      0xe873b8ffff	                   call sym.strbuf_addch	      1983	refs.c	FUNCTION_103	CALL_13
0x4004aa0	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      1985	refs.c	FUNCTION_103	CALL_14
0x4004aa4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1985	refs.c	FUNCTION_103	CALL_14
0x4004aab	      0xb901000000	                              mov ecx, 1	      1985	refs.c	FUNCTION_103	CALL_14
0x4004ab0	      0xba00000000	                              mov edx, 0	      1985	refs.c	FUNCTION_103	CALL_14
0x4004ab5	          0x4889c7	                            mov rdi, rax	      1985	refs.c	FUNCTION_103	CALL_14
0x4004ab8	      0xe800000000	                          call 0x4004abd	      1985	refs.c	FUNCTION_103	CALL_14
0x4004abd	        0x48894590	             mov qword [rbp - 0x70], rax	      1985	refs.c	FUNCTION_103	CALL_14
0x4004ac1	            0xeb60	                           jmp 0x4004b23	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x4004ac3	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      1988	refs.c	FUNCTION_103	WHILE_1	IF_4
0x4004acb	            0x7420	                            je 0x4004aed	      1988	refs.c	FUNCTION_103	WHILE_1	IF_4
0x4004acd	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1989	refs.c	FUNCTION_103	WHILE_1	IF_4	CALL_16
0x4004ad1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1989	refs.c	FUNCTION_103	WHILE_1	IF_4	CALL_16
0x4004ad5	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1989	refs.c	FUNCTION_103	WHILE_1	IF_4	CALL_16
0x4004adc	          0x4889d6	                            mov rsi, rdx	      1989	refs.c	FUNCTION_103	WHILE_1	IF_4	CALL_16
0x4004adf	          0x4889c7	                            mov rdi, rax	      1989	refs.c	FUNCTION_103	WHILE_1	IF_4	CALL_16
0x4004ae2	      0xe800000000	                          call 0x4004ae7	      1989	refs.c	FUNCTION_103	WHILE_1	IF_4	CALL_16
0x4004ae7	            0x85c0	                           test eax, eax	      1988	refs.c	FUNCTION_103	WHILE_1	IF_4
0x4004ae9	            0x7402	                            je 0x4004aed	      1988	refs.c	FUNCTION_103	WHILE_1	IF_4
0x4004aeb	            0xeb36	                           jmp 0x4004b23	      1990	refs.c	FUNCTION_103	WHILE_1	IF_4
0x4004aed	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_17
0x4004af1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_17
0x4004af5	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_17
0x4004afc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_17
0x4004b03	      0xbe00000000	                              mov esi, 0	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_17
0x4004b08	          0x4889c7	                            mov rdi, rax	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_17
0x4004b0b	      0xb800000000	                              mov eax, 0	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_17
0x4004b10	      0xe800000000	                          call 0x4004b15	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_17
0x4004b15	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1994	refs.c	FUNCTION_103	WHILE_1	CALL_18
0x4004b19	          0x4889c7	                            mov rdi, rax	      1994	refs.c	FUNCTION_103	WHILE_1	CALL_18
0x4004b1c	      0xe800000000	                          call 0x4004b21	      1994	refs.c	FUNCTION_103	WHILE_1	CALL_18
0x4004b21	            0xeb7f	                           jmp 0x4004ba2	      1995	refs.c	FUNCTION_103	WHILE_1
0x4004b23	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x4004b27	          0x4889c7	                            mov rdi, rax	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x4004b2a	      0xe800000000	                          call 0x4004b2f	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x4004b2f	          0x894584	             mov dword [rbp - 0x7c], eax	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x4004b32	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x4004b36	            0x748b	                            je 0x4004ac3	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x4004b38	        0x837d84ff	cmp dword [rbp - 0x7c], 0xffffffffffffffff	      1998	refs.c	FUNCTION_103	IF_5
0x4004b3c	            0x740f	                            je 0x4004b4d	      1998	refs.c	FUNCTION_103	IF_5
0x4004b3e	      0xbf00000000	                              mov edi, 0	      1999	refs.c	FUNCTION_103	CALL_19
0x4004b43	      0xb800000000	                              mov eax, 0	      1999	refs.c	FUNCTION_103	CALL_19
0x4004b48	      0xe800000000	                          call 0x4004b4d	      1999	refs.c	FUNCTION_103	CALL_19
0x4004b4d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2001	refs.c	FUNCTION_103	CALL_20
0x4004b51	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      2001	refs.c	FUNCTION_103	CALL_20
0x4004b58	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	      2001	refs.c	FUNCTION_103	CALL_20
0x4004b5f	          0x4889ce	                            mov rsi, rcx	      2001	refs.c	FUNCTION_103	CALL_20
0x4004b62	          0x4889c7	                            mov rdi, rax	      2001	refs.c	FUNCTION_103	CALL_20
0x4004b65	      0xe800000000	                          call 0x4004b6a	      2001	refs.c	FUNCTION_103	CALL_20
0x4004b6a	        0x48894598	             mov qword [rbp - 0x68], rax	      2001	refs.c	FUNCTION_103	CALL_20
0x4004b6e	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2002	refs.c	FUNCTION_103	IF_6
0x4004b73	            0x7426	                            je 0x4004b9b	      2002	refs.c	FUNCTION_103	IF_6
0x4004b75	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2003	refs.c	FUNCTION_103	IF_6	CALL_21
0x4004b79	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2003	refs.c	FUNCTION_103	IF_6	CALL_21
0x4004b80	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2003	refs.c	FUNCTION_103	IF_6	CALL_21
0x4004b87	      0xbe00000000	                              mov esi, 0	      2003	refs.c	FUNCTION_103	IF_6	CALL_21
0x4004b8c	          0x4889c7	                            mov rdi, rax	      2003	refs.c	FUNCTION_103	IF_6	CALL_21
0x4004b8f	      0xb800000000	                              mov eax, 0	      2003	refs.c	FUNCTION_103	IF_6	CALL_21
0x4004b94	      0xe800000000	                          call 0x4004b99	      2003	refs.c	FUNCTION_103	IF_6	CALL_21
0x4004b99	            0xeb07	                           jmp 0x4004ba2	      2003	refs.c	FUNCTION_103	IF_6	CALL_21
0x4004b9b	    0xc74580000000	               mov dword [rbp - 0x80], 0	      2006	refs.c	FUNCTION_103	ELSE_1
0x4004ba2	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2009	refs.c	FUNCTION_103	CALL_22
0x4004ba6	          0x4889c7	                            mov rdi, rax	      2009	refs.c	FUNCTION_103	CALL_22
0x4004ba9	      0xe800000000	                          call 0x4004bae	      2009	refs.c	FUNCTION_103	CALL_22
0x4004bae	        0x488d45a0	                   lea rax, [rbp - 0x60]	      2010	refs.c	FUNCTION_103	CALL_23
0x4004bb2	          0x4889c7	                            mov rdi, rax	      2010	refs.c	FUNCTION_103	CALL_23
0x4004bb5	      0xe800000000	                          call 0x4004bba	      2010	refs.c	FUNCTION_103	CALL_23
0x4004bba	          0x8b4580	             mov eax, dword [rbp - 0x80]	      2011	refs.c	FUNCTION_103
0x4004bbd	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2012	refs.c	FUNCTION_103
0x4004bc1	    0x644833342528	                xor rsi, qword fs:[0x28]	      2012	refs.c	FUNCTION_103
0x4004bca	            0x7405	                            je 0x4004bd1	      2012	refs.c	FUNCTION_103
0x4004bcc	      0xe800000000	                          call 0x4004bd1	      2012	refs.c	FUNCTION_103
0x4004bd1	              0xc9	                                   leave	      2012	refs.c	FUNCTION_103
0x4004bd2	              0xc3	                                     ret	      2012	refs.c	FUNCTION_103
for_each_fullref_in	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	29
0x40038c0	              0x55	                                push rbp	      1413	refs.c	FUNCTION_74
0x40038c1	          0x4889e5	                            mov rbp, rsp	      1413	refs.c	FUNCTION_74
0x40038c4	              0x53	                                push rbx	      1413	refs.c	FUNCTION_74
0x40038c5	        0x4883ec38	                           sub rsp, 0x38	      1413	refs.c	FUNCTION_74
0x40038c9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1413	refs.c	FUNCTION_74
0x40038cd	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1413	refs.c	FUNCTION_74
0x40038d1	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1413	refs.c	FUNCTION_74
0x40038d5	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      1413	refs.c	FUNCTION_74
0x40038d8	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1414	refs.c	FUNCTION_74
0x40038df	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1416	refs.c	FUNCTION_74	IF_1
0x40038e3	            0x7407	                            je 0x40038ec	      1416	refs.c	FUNCTION_74	IF_1
0x40038e5	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      1417	refs.c	FUNCTION_74	IF_1
0x40038ec	          0x8b5dec	             mov ebx, dword [rbp - 0x14]	      1418	refs.c	FUNCTION_74	CALL_2
0x40038ef	    0x488b05000000	            mov rax, qword [0x040038f6] 	      1418	refs.c	FUNCTION_74	CALL_2
0x40038f6	          0x4889c7	                            mov rdi, rax	      1418	refs.c	FUNCTION_74	CALL_2
0x40038f9	      0xe800000000	                          call 0x40038fe	      1418	refs.c	FUNCTION_74	CALL_2
0x40038fe	          0x4889c7	                            mov rdi, rax	      1418	refs.c	FUNCTION_74	CALL_2
0x4003901	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1418	refs.c	FUNCTION_74	CALL_2
0x4003905	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1418	refs.c	FUNCTION_74	CALL_2
0x4003909	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1418	refs.c	FUNCTION_74	CALL_2
0x400390d	          0x4989c9	                             mov r9, rcx	      1418	refs.c	FUNCTION_74	CALL_2
0x4003910	          0x4189d8	                            mov r8d, ebx	      1418	refs.c	FUNCTION_74	CALL_2
0x4003913	      0xb900000000	                              mov ecx, 0	      1418	refs.c	FUNCTION_74	CALL_2
0x4003918	          0x4889c6	                            mov rsi, rax	      1418	refs.c	FUNCTION_74	CALL_2
0x400391b	      0xe845feffff	                call sym.do_for_each_ref	      1418	refs.c	FUNCTION_74	CALL_2
0x4003920	        0x4883c438	                           add rsp, 0x38	      1420	refs.c	FUNCTION_74
0x4003924	              0x5b	                                 pop rbx	      1420	refs.c	FUNCTION_74
0x4003925	              0x5d	                                 pop rbp	      1420	refs.c	FUNCTION_74
0x4003926	              0xc3	                                     ret	      1420	refs.c	FUNCTION_74
resolve_ref_unsafe	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	20
0x4003dfa	              0x55	                                push rbp	      1573	refs.c	FUNCTION_83
0x4003dfb	          0x4889e5	                            mov rbp, rsp	      1573	refs.c	FUNCTION_83
0x4003dfe	        0x4883ec20	                           sub rsp, 0x20	      1573	refs.c	FUNCTION_83
0x4003e02	        0x48897df8	                mov qword [rbp - 8], rdi	      1573	refs.c	FUNCTION_83
0x4003e06	          0x8975f4	              mov dword [rbp - 0xc], esi	      1573	refs.c	FUNCTION_83
0x4003e09	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1573	refs.c	FUNCTION_83
0x4003e0d	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1573	refs.c	FUNCTION_83
0x4003e11	    0x488b05000000	            mov rax, qword [0x04003e18] 	      1574	refs.c	FUNCTION_83	CALL_2
0x4003e18	          0x4889c7	                            mov rdi, rax	      1574	refs.c	FUNCTION_83	CALL_2
0x4003e1b	      0xe800000000	                          call 0x4003e20	      1574	refs.c	FUNCTION_83	CALL_2
0x4003e20	          0x4889c7	                            mov rdi, rax	      1574	refs.c	FUNCTION_83	CALL_2
0x4003e23	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1574	refs.c	FUNCTION_83	CALL_2
0x4003e27	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1574	refs.c	FUNCTION_83	CALL_2
0x4003e2b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1574	refs.c	FUNCTION_83	CALL_2
0x4003e2e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1574	refs.c	FUNCTION_83	CALL_2
0x4003e32	          0x4989f0	                             mov r8, rsi	      1574	refs.c	FUNCTION_83	CALL_2
0x4003e35	          0x4889c6	                            mov rsi, rax	      1574	refs.c	FUNCTION_83	CALL_2
0x4003e38	      0xe800000000	                          call 0x4003e3d	      1574	refs.c	FUNCTION_83	CALL_2
0x4003e3d	              0xc9	                                   leave	      1576	refs.c	FUNCTION_83
0x4003e3e	              0xc3	                                     ret	      1576	refs.c	FUNCTION_83
get_submodule_ref_store	IF,6:ELSE,0:FOR,0:WHILE,1:SWITCH,0:DO,0:CALL,10:functions,0	106
0x4004185	              0x55	                                push rbp	      1696	refs.c	FUNCTION_91
0x4004186	          0x4889e5	                            mov rbp, rsp	      1696	refs.c	FUNCTION_91
0x4004189	        0x4883ec50	                           sub rsp, 0x50	      1696	refs.c	FUNCTION_91
0x400418d	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1696	refs.c	FUNCTION_91
0x4004191	    0x64488b042528	                mov rax, qword fs:[0x28]	      1696	refs.c	FUNCTION_91
0x400419a	        0x488945f8	                mov qword [rbp - 8], rax	      1696	refs.c	FUNCTION_91
0x400419e	            0x31c0	                            xor eax, eax	      1696	refs.c	FUNCTION_91
0x40041a0	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1697	refs.c	FUNCTION_91
0x40041a8	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1697	refs.c	FUNCTION_91
0x40041b0	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1697	refs.c	FUNCTION_91
0x40041b8	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1699	refs.c	FUNCTION_91
0x40041c0	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1702	refs.c	FUNCTION_91	IF_1
0x40041c5	            0x750a	                           jne 0x40041d1	      1702	refs.c	FUNCTION_91	IF_1
0x40041c7	      0xb800000000	                              mov eax, 0	      1703	refs.c	FUNCTION_91	IF_1
0x40041cc	      0xe92d010000	                           jmp 0x40042fe	      1703	refs.c	FUNCTION_91	IF_1
0x40041d1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1705	refs.c	FUNCTION_91	CALL_1
0x40041d5	          0x4889c7	                            mov rdi, rax	      1705	refs.c	FUNCTION_91	CALL_1
0x40041d8	      0xe800000000	                          call 0x40041dd	      1705	refs.c	FUNCTION_91	CALL_1
0x40041dd	        0x488945d8	             mov qword [rbp - 0x28], rax	      1705	refs.c	FUNCTION_91	CALL_1
0x40041e1	            0xeb05	                           jmp 0x40041e8	      1706	refs.c	FUNCTION_91	WHILE_1
0x40041e3	      0x48836dd801	               sub qword [rbp - 0x28], 1	      1707	refs.c	FUNCTION_91	WHILE_1
0x40041e8	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1706	refs.c	FUNCTION_91	WHILE_1
0x40041ed	            0x7420	                            je 0x400420f	      1706	refs.c	FUNCTION_91	WHILE_1
0x40041ef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1706	refs.c	FUNCTION_91	WHILE_1
0x40041f3	        0x488d50ff	                      lea rdx, [rax - 1]	      1706	refs.c	FUNCTION_91	WHILE_1
0x40041f7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1706	refs.c	FUNCTION_91	WHILE_1
0x40041fb	          0x4801d0	                            add rax, rdx	      1706	refs.c	FUNCTION_91	WHILE_1
0x40041fe	           0xfb600	                   movzx eax, byte [rax]	      1706	refs.c	FUNCTION_91	WHILE_1
0x4004201	           0xfbec0	                           movsx eax, al	      1706	refs.c	FUNCTION_91	WHILE_1
0x4004204	            0x89c7	                            mov edi, eax	      1706	refs.c	FUNCTION_91	WHILE_1
0x4004206	      0xe835beffff	                 call sym.git_is_dir_sep	      1706	refs.c	FUNCTION_91	WHILE_1
0x400420b	            0x85c0	                           test eax, eax	      1706	refs.c	FUNCTION_91	WHILE_1
0x400420d	            0x75d4	                           jne 0x40041e3	      1706	refs.c	FUNCTION_91	WHILE_1
0x400420f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1708	refs.c	FUNCTION_91	IF_2
0x4004214	            0x750a	                           jne 0x4004220	      1708	refs.c	FUNCTION_91	IF_2
0x4004216	      0xb800000000	                              mov eax, 0	      1709	refs.c	FUNCTION_91	IF_2
0x400421b	      0xe9de000000	                           jmp 0x40042fe	      1709	refs.c	FUNCTION_91	IF_2
0x4004220	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1711	refs.c	FUNCTION_91	IF_3
0x4004224	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1711	refs.c	FUNCTION_91	IF_3
0x4004228	          0x4801d0	                            add rax, rdx	      1711	refs.c	FUNCTION_91	IF_3
0x400422b	           0xfb600	                   movzx eax, byte [rax]	      1711	refs.c	FUNCTION_91	IF_3
0x400422e	            0x84c0	                             test al, al	      1711	refs.c	FUNCTION_91	IF_3
0x4004230	            0x741f	                            je 0x4004251	      1711	refs.c	FUNCTION_91	IF_3
0x4004232	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1713	refs.c	FUNCTION_91	CALL_2
0x4004236	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1713	refs.c	FUNCTION_91	CALL_2
0x400423a	          0x4889d6	                            mov rsi, rdx	      1713	refs.c	FUNCTION_91	CALL_2
0x400423d	          0x4889c7	                            mov rdi, rax	      1713	refs.c	FUNCTION_91	CALL_2
0x4004240	      0xe800000000	                          call 0x4004245	      1713	refs.c	FUNCTION_91	CALL_2
0x4004245	        0x488945d0	             mov qword [rbp - 0x30], rax	      1713	refs.c	FUNCTION_91	CALL_2
0x4004249	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1713	refs.c	FUNCTION_91	CALL_2
0x400424d	        0x488945b8	             mov qword [rbp - 0x48], rax	      1713	refs.c	FUNCTION_91	CALL_2
0x4004251	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1715	refs.c	FUNCTION_91	CALL_3
0x4004255	          0x4889c6	                            mov rsi, rax	      1715	refs.c	FUNCTION_91	CALL_3
0x4004258	      0xbf00000000	                              mov edi, 0	      1715	refs.c	FUNCTION_91	CALL_3
0x400425d	      0xe86afdffff	           call sym.lookup_ref_store_map	      1715	refs.c	FUNCTION_91	CALL_3
0x4004262	        0x488945c8	             mov qword [rbp - 0x38], rax	      1715	refs.c	FUNCTION_91	CALL_3
0x4004266	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1716	refs.c	FUNCTION_91	IF_4
0x400426b	            0x756e	                           jne 0x40042db	      1716	refs.c	FUNCTION_91	IF_4
0x400426d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1719	refs.c	FUNCTION_91	CALL_4
0x4004271	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1719	refs.c	FUNCTION_91	CALL_4
0x4004275	          0x4889d6	                            mov rsi, rdx	      1719	refs.c	FUNCTION_91	CALL_4
0x4004278	          0x4889c7	                            mov rdi, rax	      1719	refs.c	FUNCTION_91	CALL_4
0x400427b	      0xe801c1ffff	                  call sym.strbuf_addstr	      1719	refs.c	FUNCTION_91	CALL_4
0x4004280	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1720	refs.c	FUNCTION_91	IF_5	CALL_5
0x4004284	          0x4889c7	                            mov rdi, rax	      1720	refs.c	FUNCTION_91	IF_5	CALL_5
0x4004287	      0xe800000000	                          call 0x400428c	      1720	refs.c	FUNCTION_91	IF_5	CALL_5
0x400428c	            0x85c0	                           test eax, eax	      1720	refs.c	FUNCTION_91	IF_5	CALL_5
0x400428e	            0x744e	                            je 0x40042de	      1720	refs.c	FUNCTION_91	IF_5	CALL_5
0x4004290	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x4004294	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x4004298	          0x4889d6	                            mov rsi, rdx	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x400429b	          0x4889c7	                            mov rdi, rax	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x400429e	      0xe800000000	                          call 0x40042a3	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x40042a3	            0x85c0	                           test eax, eax	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x40042a5	            0x753a	                           jne 0x40042e1	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x40042a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1727	refs.c	FUNCTION_91	CALL_7
0x40042ab	      0xbe05000000	                              mov esi, 5	      1727	refs.c	FUNCTION_91	CALL_7
0x40042b0	          0x4889c7	                            mov rdi, rax	      1727	refs.c	FUNCTION_91	CALL_7
0x40042b3	      0xe873fdffff	                 call sym.ref_store_init	      1727	refs.c	FUNCTION_91	CALL_7
0x40042b8	        0x488945c8	             mov qword [rbp - 0x38], rax	      1727	refs.c	FUNCTION_91	CALL_7
0x40042bc	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1729	refs.c	FUNCTION_91	CALL_8
0x40042c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1729	refs.c	FUNCTION_91	CALL_8
0x40042c4	          0x4889d1	                            mov rcx, rdx	      1729	refs.c	FUNCTION_91	CALL_8
0x40042c7	          0x4889c2	                            mov rdx, rax	      1729	refs.c	FUNCTION_91	CALL_8
0x40042ca	      0xbe00000000	                              mov esi, 0	      1729	refs.c	FUNCTION_91	CALL_8
0x40042cf	      0xbf00000000	                              mov edi, 0	      1729	refs.c	FUNCTION_91	CALL_8
0x40042d4	      0xe827feffff	         call sym.register_ref_store_map	      1729	refs.c	FUNCTION_91	CALL_8
0x40042d9	            0xeb07	                           jmp 0x40042e2	      1729	refs.c	FUNCTION_91	CALL_8
0x40042db	              0x90	                                     nop	      1717	refs.c	FUNCTION_91	IF_4
0x40042dc	            0xeb04	                           jmp 0x40042e2	      1717	refs.c	FUNCTION_91	IF_4
0x40042de	              0x90	                                     nop	      1721	refs.c	FUNCTION_91	IF_5
0x40042df	            0xeb01	                           jmp 0x40042e2	      1721	refs.c	FUNCTION_91	IF_5
0x40042e1	              0x90	                                     nop	      1724	refs.c	FUNCTION_91	IF_6
0x40042e2	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1733	refs.c	FUNCTION_91	CALL_9
0x40042e6	          0x4889c7	                            mov rdi, rax	      1733	refs.c	FUNCTION_91	CALL_9
0x40042e9	      0xe800000000	                          call 0x40042ee	      1733	refs.c	FUNCTION_91	CALL_9
0x40042ee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1734	refs.c	FUNCTION_91	CALL_10
0x40042f2	          0x4889c7	                            mov rdi, rax	      1734	refs.c	FUNCTION_91	CALL_10
0x40042f5	      0xe800000000	                          call 0x40042fa	      1734	refs.c	FUNCTION_91	CALL_10
0x40042fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1736	refs.c	FUNCTION_91
0x40042fe	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1737	refs.c	FUNCTION_91
0x4004302	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1737	refs.c	FUNCTION_91
0x400430b	            0x7405	                            je 0x4004312	      1737	refs.c	FUNCTION_91
0x400430d	      0xe800000000	                          call 0x4004312	      1737	refs.c	FUNCTION_91
0x4004312	              0xc9	                                   leave	      1737	refs.c	FUNCTION_91
0x4004313	              0xc3	                                     ret	      1737	refs.c	FUNCTION_91
refs_head_ref	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	34
0x4003602	              0x55	                                push rbp	      1326	refs.c	FUNCTION_66
0x4003603	          0x4889e5	                            mov rbp, rsp	      1326	refs.c	FUNCTION_66
0x4003606	        0x4883ec50	                           sub rsp, 0x50	      1326	refs.c	FUNCTION_66
0x400360a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1326	refs.c	FUNCTION_66
0x400360e	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1326	refs.c	FUNCTION_66
0x4003612	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1326	refs.c	FUNCTION_66
0x4003616	    0x64488b042528	                mov rax, qword fs:[0x28]	      1326	refs.c	FUNCTION_66
0x400361f	        0x488945f8	                mov qword [rbp - 8], rax	      1326	refs.c	FUNCTION_66
0x4003623	            0x31c0	                            xor eax, eax	      1326	refs.c	FUNCTION_66
0x4003625	        0x488d4ddc	                   lea rcx, [rbp - 0x24]	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x4003629	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x400362d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x4003631	          0x4989c8	                             mov r8, rcx	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x4003634	          0x4889d1	                            mov rcx, rdx	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x4003637	      0xba01000000	                              mov edx, 1	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x400363c	      0xbe00000000	                              mov esi, 0	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x4003641	          0x4889c7	                            mov rdi, rax	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x4003644	      0xe800000000	                          call 0x4003649	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x4003649	            0x85c0	                           test eax, eax	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x400364b	            0x7518	                           jne 0x4003665	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x400364d	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1332	refs.c	FUNCTION_66	CALL_2
0x4003650	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      1332	refs.c	FUNCTION_66	CALL_2
0x4003654	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      1332	refs.c	FUNCTION_66	CALL_2
0x4003658	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1332	refs.c	FUNCTION_66	CALL_2
0x400365c	      0xbf00000000	                              mov edi, 0	      1332	refs.c	FUNCTION_66	CALL_2
0x4003661	            0xffd0	                                call rax	      1332	refs.c	FUNCTION_66	CALL_2
0x4003663	            0xeb05	                           jmp 0x400366a	      1332	refs.c	FUNCTION_66	CALL_2
0x4003665	      0xb800000000	                              mov eax, 0	      1334	refs.c	FUNCTION_66
0x400366a	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1335	refs.c	FUNCTION_66
0x400366e	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1335	refs.c	FUNCTION_66
0x4003677	            0x7405	                            je 0x400367e	      1335	refs.c	FUNCTION_66
0x4003679	      0xe800000000	                          call 0x400367e	      1335	refs.c	FUNCTION_66
0x400367e	              0xc9	                                   leave	      1335	refs.c	FUNCTION_66
0x400367f	              0xc3	                                     ret	      1335	refs.c	FUNCTION_66
resolve_refdup	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	20
0x4000a8c	              0x55	                                push rbp	       210	refs.c	FUNCTION_8
0x4000a8d	          0x4889e5	                            mov rbp, rsp	       210	refs.c	FUNCTION_8
0x4000a90	        0x4883ec20	                           sub rsp, 0x20	       210	refs.c	FUNCTION_8
0x4000a94	        0x48897df8	                mov qword [rbp - 8], rdi	       210	refs.c	FUNCTION_8
0x4000a98	          0x8975f4	              mov dword [rbp - 0xc], esi	       210	refs.c	FUNCTION_8
0x4000a9b	        0x488955e8	             mov qword [rbp - 0x18], rdx	       210	refs.c	FUNCTION_8
0x4000a9f	        0x48894de0	             mov qword [rbp - 0x20], rcx	       210	refs.c	FUNCTION_8
0x4000aa3	    0x488b05000000	            mov rax, qword [0x04000aaa] 	       211	refs.c	FUNCTION_8	CALL_2
0x4000aaa	          0x4889c7	                            mov rdi, rax	       211	refs.c	FUNCTION_8	CALL_2
0x4000aad	      0xe800000000	                          call 0x4000ab2	       211	refs.c	FUNCTION_8	CALL_2
0x4000ab2	          0x4889c7	                            mov rdi, rax	       211	refs.c	FUNCTION_8	CALL_2
0x4000ab5	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       211	refs.c	FUNCTION_8	CALL_2
0x4000ab9	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       211	refs.c	FUNCTION_8	CALL_2
0x4000abd	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       211	refs.c	FUNCTION_8	CALL_2
0x4000ac0	        0x488b45f8	                mov rax, qword [rbp - 8]	       211	refs.c	FUNCTION_8	CALL_2
0x4000ac4	          0x4989f0	                             mov r8, rsi	       211	refs.c	FUNCTION_8	CALL_2
0x4000ac7	          0x4889c6	                            mov rsi, rax	       211	refs.c	FUNCTION_8	CALL_2
0x4000aca	      0xe800000000	                          call 0x4000acf	       211	refs.c	FUNCTION_8	CALL_2
0x4000acf	              0xc9	                                   leave	       214	refs.c	FUNCTION_8
0x4000ad0	              0xc3	                                     ret	       214	refs.c	FUNCTION_8
for_each_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	16
0x4003802	              0x55	                                push rbp	      1397	refs.c	FUNCTION_71
0x4003803	          0x4889e5	                            mov rbp, rsp	      1397	refs.c	FUNCTION_71
0x4003806	        0x4883ec10	                           sub rsp, 0x10	      1397	refs.c	FUNCTION_71
0x400380a	        0x48897df8	                mov qword [rbp - 8], rdi	      1397	refs.c	FUNCTION_71
0x400380e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1397	refs.c	FUNCTION_71
0x4003812	    0x488b05000000	            mov rax, qword [0x04003819] 	      1398	refs.c	FUNCTION_71	CALL_2
0x4003819	          0x4889c7	                            mov rdi, rax	      1398	refs.c	FUNCTION_71	CALL_2
0x400381c	      0xe800000000	                          call 0x4003821	      1398	refs.c	FUNCTION_71	CALL_2
0x4003821	          0x4889c1	                            mov rcx, rax	      1398	refs.c	FUNCTION_71	CALL_2
0x4003824	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1398	refs.c	FUNCTION_71	CALL_2
0x4003828	        0x488b45f8	                mov rax, qword [rbp - 8]	      1398	refs.c	FUNCTION_71	CALL_2
0x400382c	          0x4889c6	                            mov rsi, rax	      1398	refs.c	FUNCTION_71	CALL_2
0x400382f	          0x4889cf	                            mov rdi, rcx	      1398	refs.c	FUNCTION_71	CALL_2
0x4003832	      0xe800000000	                          call 0x4003837	      1398	refs.c	FUNCTION_71	CALL_2
0x4003837	              0xc9	                                   leave	      1399	refs.c	FUNCTION_71
0x4003838	              0xc3	                                     ret	      1399	refs.c	FUNCTION_71
strbuf_strip_suffix	IF,1:ELSE,1:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	26
0x40003b6	              0x55	                                push rbp	       495	strbuf.h	FUNCTION_192
0x40003b7	          0x4889e5	                            mov rbp, rsp	       495	strbuf.h	FUNCTION_192
0x40003ba	        0x4883ec10	                           sub rsp, 0x10	       495	strbuf.h	FUNCTION_192
0x40003be	        0x48897df8	                mov qword [rbp - 8], rdi	       495	strbuf.h	FUNCTION_192
0x40003c2	        0x488975f0	             mov qword [rbp - 0x10], rsi	       495	strbuf.h	FUNCTION_192
0x40003c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       496	strbuf.h	FUNCTION_192	IF_1	CALL_1
0x40003ca	        0x488d4808	                      lea rcx, [rax + 8]	       496	strbuf.h	FUNCTION_192	IF_1	CALL_1
0x40003ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       496	strbuf.h	FUNCTION_192	IF_1	CALL_1
0x40003d2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       496	strbuf.h	FUNCTION_192	IF_1	CALL_1
0x40003d6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       496	strbuf.h	FUNCTION_192	IF_1	CALL_1
0x40003da	          0x4889ce	                            mov rsi, rcx	       496	strbuf.h	FUNCTION_192	IF_1	CALL_1
0x40003dd	          0x4889c7	                            mov rdi, rax	       496	strbuf.h	FUNCTION_192	IF_1	CALL_1
0x40003e0	      0xe8cffcffff	               call sym.strip_suffix_mem	       496	strbuf.h	FUNCTION_192	IF_1	CALL_1
0x40003e5	            0x85c0	                           test eax, eax	       496	strbuf.h	FUNCTION_192	IF_1	CALL_1
0x40003e7	            0x741e	                            je 0x4000407	       496	strbuf.h	FUNCTION_192	IF_1	CALL_1
0x40003e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       497	strbuf.h	FUNCTION_192	IF_1	CALL_2
0x40003ed	        0x488b5008	                mov rdx, qword [rax + 8]	       497	strbuf.h	FUNCTION_192	IF_1	CALL_2
0x40003f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       497	strbuf.h	FUNCTION_192	IF_1	CALL_2
0x40003f5	          0x4889d6	                            mov rsi, rdx	       497	strbuf.h	FUNCTION_192	IF_1	CALL_2
0x40003f8	          0x4889c7	                            mov rdi, rax	       497	strbuf.h	FUNCTION_192	IF_1	CALL_2
0x40003fb	      0xe879feffff	                  call sym.strbuf_setlen	       497	strbuf.h	FUNCTION_192	IF_1	CALL_2
0x4000400	      0xb801000000	                              mov eax, 1	       498	strbuf.h	FUNCTION_192	IF_1
0x4000405	            0xeb05	                           jmp 0x400040c	       498	strbuf.h	FUNCTION_192	IF_1
0x4000407	      0xb800000000	                              mov eax, 0	       500	strbuf.h	FUNCTION_192	ELSE_1
0x400040c	              0xc9	                                   leave	       501	strbuf.h	FUNCTION_192
0x400040d	              0xc3	                                     ret	       501	strbuf.h	FUNCTION_192
strbuf_addstr	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	17
0x4000381	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_191
0x4000382	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_191
0x4000385	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_191
0x4000389	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_191
0x400038d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_191
0x4000391	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_191	CALL_2
0x4000395	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_191	CALL_2
0x4000398	      0xe800000000	                          call 0x400039d	       279	strbuf.h	FUNCTION_191	CALL_2
0x400039d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_191	CALL_2
0x40003a0	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_191	CALL_2
0x40003a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_191	CALL_2
0x40003a8	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_191	CALL_2
0x40003ab	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_191	CALL_2
0x40003ae	      0xe800000000	                          call 0x40003b3	       279	strbuf.h	FUNCTION_191	CALL_2
0x40003b3	              0x90	                                     nop	       280	strbuf.h	FUNCTION_191
0x40003b4	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_191
0x40003b5	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_191
for_each_namespaced_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,5:functions,0	45
0x40039e6	              0x55	                                push rbp	      1442	refs.c	FUNCTION_77
0x40039e7	          0x4889e5	                            mov rbp, rsp	      1442	refs.c	FUNCTION_77
0x40039ea	              0x53	                                push rbx	      1442	refs.c	FUNCTION_77
0x40039eb	        0x4883ec48	                           sub rsp, 0x48	      1442	refs.c	FUNCTION_77
0x40039ef	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1442	refs.c	FUNCTION_77
0x40039f3	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1442	refs.c	FUNCTION_77
0x40039f7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1442	refs.c	FUNCTION_77
0x4003a00	        0x488945e8	             mov qword [rbp - 0x18], rax	      1442	refs.c	FUNCTION_77
0x4003a04	            0x31c0	                            xor eax, eax	      1442	refs.c	FUNCTION_77
0x4003a06	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1443	refs.c	FUNCTION_77
0x4003a0e	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1443	refs.c	FUNCTION_77
0x4003a16	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1443	refs.c	FUNCTION_77
0x4003a1e	      0xe800000000	                          call 0x4003a23	      1445	refs.c	FUNCTION_77	CALL_2
0x4003a23	          0x4889c2	                            mov rdx, rax	      1445	refs.c	FUNCTION_77	CALL_2
0x4003a26	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1445	refs.c	FUNCTION_77	CALL_2
0x4003a2a	      0xbe00000000	                              mov esi, 0	      1445	refs.c	FUNCTION_77	CALL_2
0x4003a2f	          0x4889c7	                            mov rdi, rax	      1445	refs.c	FUNCTION_77	CALL_2
0x4003a32	      0xb800000000	                              mov eax, 0	      1445	refs.c	FUNCTION_77	CALL_2
0x4003a37	      0xe800000000	                          call 0x4003a3c	      1445	refs.c	FUNCTION_77	CALL_2
0x4003a3c	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	      1447	refs.c	FUNCTION_77
0x4003a40	    0x488b05000000	            mov rax, qword [0x04003a47] 	      1446	refs.c	FUNCTION_77	CALL_4
0x4003a47	          0x4889c7	                            mov rdi, rax	      1446	refs.c	FUNCTION_77	CALL_4
0x4003a4a	      0xe800000000	                          call 0x4003a4f	      1446	refs.c	FUNCTION_77	CALL_4
0x4003a4f	          0x4889c7	                            mov rdi, rax	      1446	refs.c	FUNCTION_77	CALL_4
0x4003a52	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1446	refs.c	FUNCTION_77	CALL_4
0x4003a56	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1446	refs.c	FUNCTION_77	CALL_4
0x4003a5a	          0x4989d1	                             mov r9, rdx	      1446	refs.c	FUNCTION_77	CALL_4
0x4003a5d	    0x41b800000000	                              mov r8d, 0	      1446	refs.c	FUNCTION_77	CALL_4
0x4003a63	      0xb900000000	                              mov ecx, 0	      1446	refs.c	FUNCTION_77	CALL_4
0x4003a68	          0x4889c2	                            mov rdx, rax	      1446	refs.c	FUNCTION_77	CALL_4
0x4003a6b	          0x4889de	                            mov rsi, rbx	      1446	refs.c	FUNCTION_77	CALL_4
0x4003a6e	      0xe8f2fcffff	                call sym.do_for_each_ref	      1446	refs.c	FUNCTION_77	CALL_4
0x4003a73	          0x8945cc	             mov dword [rbp - 0x34], eax	      1446	refs.c	FUNCTION_77	CALL_4
0x4003a76	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1448	refs.c	FUNCTION_77	CALL_5
0x4003a7a	          0x4889c7	                            mov rdi, rax	      1448	refs.c	FUNCTION_77	CALL_5
0x4003a7d	      0xe800000000	                          call 0x4003a82	      1448	refs.c	FUNCTION_77	CALL_5
0x4003a82	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1449	refs.c	FUNCTION_77
0x4003a85	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1450	refs.c	FUNCTION_77
0x4003a89	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1450	refs.c	FUNCTION_77
0x4003a92	            0x7405	                            je 0x4003a99	      1450	refs.c	FUNCTION_77
0x4003a94	      0xe800000000	                          call 0x4003a99	      1450	refs.c	FUNCTION_77
0x4003a99	        0x4883c448	                           add rsp, 0x48	      1450	refs.c	FUNCTION_77
0x4003a9d	              0x5b	                                 pop rbx	      1450	refs.c	FUNCTION_77
0x4003a9e	              0x5d	                                 pop rbp	      1450	refs.c	FUNCTION_77
0x4003a9f	              0xc3	                                     ret	      1450	refs.c	FUNCTION_77
delete_pseudoref	IF,4:ELSE,1:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,14:functions,0	84
0x4001d48	              0x55	                                push rbp	       708	refs.c	FUNCTION_42
0x4001d49	          0x4889e5	                            mov rbp, rsp	       708	refs.c	FUNCTION_42
0x4001d4c	        0x4883ec40	                           sub rsp, 0x40	       708	refs.c	FUNCTION_42
0x4001d50	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       708	refs.c	FUNCTION_42
0x4001d54	        0x488975c0	             mov qword [rbp - 0x40], rsi	       708	refs.c	FUNCTION_42
0x4001d58	    0x64488b042528	                mov rax, qword fs:[0x28]	       708	refs.c	FUNCTION_42
0x4001d61	        0x488945f8	                mov qword [rbp - 8], rax	       708	refs.c	FUNCTION_42
0x4001d65	            0x31c0	                            xor eax, eax	       708	refs.c	FUNCTION_42
0x4001d67	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       712	refs.c	FUNCTION_42	CALL_1
0x4001d6b	          0x4889c6	                            mov rsi, rax	       712	refs.c	FUNCTION_42	CALL_1
0x4001d6e	      0xbf00000000	                              mov edi, 0	       712	refs.c	FUNCTION_42	CALL_1
0x4001d73	      0xb800000000	                              mov eax, 0	       712	refs.c	FUNCTION_42	CALL_1
0x4001d78	      0xe800000000	                          call 0x4001d7d	       712	refs.c	FUNCTION_42	CALL_1
0x4001d7d	        0x488945d8	             mov qword [rbp - 0x28], rax	       712	refs.c	FUNCTION_42	CALL_1
0x4001d81	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4001d86	     0xf84e2000000	                            je 0x4001e6e	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4001d8c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4001d90	          0x4889c7	                            mov rdi, rax	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4001d93	      0xe8cee7ffff	                    call sym.is_null_oid	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4001d98	            0x85c0	                           test eax, eax	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4001d9a	     0xf85ce000000	                           jne 0x4001e6e	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4001da0	      0xe800000000	                          call 0x4001da5	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4001da5	          0x4889c2	                            mov rdx, rax	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4001da8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4001dac	          0x4889d1	                            mov rcx, rdx	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4001daf	      0xba01000000	                              mov edx, 1	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4001db4	          0x4889c6	                            mov rsi, rax	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4001db7	      0xbf00000000	                              mov edi, 0	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4001dbc	      0xe800000000	                          call 0x4001dc1	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4001dc1	          0x8945d4	             mov dword [rbp - 0x2c], eax	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4001dc4	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       721	refs.c	FUNCTION_42	IF_1	IF_2
0x4001dc8	            0x7921	                           jns 0x4001deb	       721	refs.c	FUNCTION_42	IF_1	IF_2
0x4001dca	      0xbf00000000	                              mov edi, 0	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4001dcf	      0xe817e7ffff	                               call sym.	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4001dd4	          0x4889c2	                            mov rdx, rax	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4001dd7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4001ddb	          0x4889c6	                            mov rsi, rax	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4001dde	          0x4889d7	                            mov rdi, rdx	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4001de1	      0xb800000000	                              mov eax, 0	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4001de6	      0xe800000000	                          call 0x4001deb	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4001deb	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       723	refs.c	FUNCTION_42	IF_1	IF_3	CALL_7
0x4001def	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       723	refs.c	FUNCTION_42	IF_1	IF_3	CALL_7
0x4001df3	          0x4889d6	                            mov rsi, rdx	       723	refs.c	FUNCTION_42	IF_1	IF_3	CALL_7
0x4001df6	          0x4889c7	                            mov rdi, rax	       723	refs.c	FUNCTION_42	IF_1	IF_3	CALL_7
0x4001df9	      0xe800000000	                          call 0x4001dfe	       723	refs.c	FUNCTION_42	IF_1	IF_3	CALL_7
0x4001dfe	            0x85c0	                           test eax, eax	       723	refs.c	FUNCTION_42	IF_1	IF_3	CALL_7
0x4001e00	            0x7416	                            je 0x4001e18	       723	refs.c	FUNCTION_42	IF_1	IF_3	CALL_7
0x4001e02	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x4001e06	          0x4889c6	                            mov rsi, rax	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x4001e09	      0xbf00000000	                              mov edi, 0	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x4001e0e	      0xb800000000	                              mov eax, 0	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x4001e13	      0xe800000000	                          call 0x4001e18	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x4001e18	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       725	refs.c	FUNCTION_42	IF_1	IF_4	CALL_9
0x4001e1c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       725	refs.c	FUNCTION_42	IF_1	IF_4	CALL_9
0x4001e20	          0x4889d6	                            mov rsi, rdx	       725	refs.c	FUNCTION_42	IF_1	IF_4	CALL_9
0x4001e23	          0x4889c7	                            mov rdi, rax	       725	refs.c	FUNCTION_42	IF_1	IF_4	CALL_9
0x4001e26	      0xe816e7ffff	                         call sym.oidcmp	       725	refs.c	FUNCTION_42	IF_1	IF_4	CALL_9
0x4001e2b	            0x85c0	                           test eax, eax	       725	refs.c	FUNCTION_42	IF_1	IF_4	CALL_9
0x4001e2d	            0x7427	                            je 0x4001e56	       725	refs.c	FUNCTION_42	IF_1	IF_4	CALL_9
0x4001e2f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x4001e33	          0x4889c6	                            mov rsi, rax	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x4001e36	      0xbf00000000	                              mov edi, 0	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x4001e3b	      0xb800000000	                              mov eax, 0	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x4001e40	      0xe800000000	                          call 0x4001e45	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x4001e45	      0xbf00000000	                              mov edi, 0	       727	refs.c	FUNCTION_42	IF_1	IF_4	CALL_11
0x4001e4a	      0xe8d3e7ffff	             call sym.rollback_lock_file	       727	refs.c	FUNCTION_42	IF_1	IF_4	CALL_11
0x4001e4f	      0xb8ffffffff	                     mov eax, 0xffffffff	       728	refs.c	FUNCTION_42	IF_1	IF_4
0x4001e54	            0xeb29	                           jmp 0x4001e7f	       728	refs.c	FUNCTION_42	IF_1	IF_4
0x4001e56	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       731	refs.c	FUNCTION_42	IF_1	CALL_12
0x4001e5a	          0x4889c7	                            mov rdi, rax	       731	refs.c	FUNCTION_42	IF_1	CALL_12
0x4001e5d	      0xe800000000	                          call 0x4001e62	       731	refs.c	FUNCTION_42	IF_1	CALL_12
0x4001e62	      0xbf00000000	                              mov edi, 0	       732	refs.c	FUNCTION_42	IF_1	CALL_13
0x4001e67	      0xe8b6e7ffff	             call sym.rollback_lock_file	       732	refs.c	FUNCTION_42	IF_1	CALL_13
0x4001e6c	            0xeb0c	                           jmp 0x4001e7a	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4001e6e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       734	refs.c	FUNCTION_42	ELSE_1	CALL_14
0x4001e72	          0x4889c7	                            mov rdi, rax	       734	refs.c	FUNCTION_42	ELSE_1	CALL_14
0x4001e75	      0xe800000000	                          call 0x4001e7a	       734	refs.c	FUNCTION_42	ELSE_1	CALL_14
0x4001e7a	      0xb800000000	                              mov eax, 0	       737	refs.c	FUNCTION_42
0x4001e7f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       738	refs.c	FUNCTION_42
0x4001e83	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       738	refs.c	FUNCTION_42
0x4001e8c	            0x7405	                            je 0x4001e93	       738	refs.c	FUNCTION_42
0x4001e8e	      0xe800000000	                          call 0x4001e93	       738	refs.c	FUNCTION_42
0x4001e93	              0xc9	                                   leave	       738	refs.c	FUNCTION_42
0x4001e94	              0xc3	                                     ret	       738	refs.c	FUNCTION_42
ref_update_reject_duplicates	IF,2:ELSE,1:FOR,1:WHILE,0:SWITCH,0:DO,0:CALL,4:functions,0	62
0x40045bb	              0x55	                                push rbp	      1823	refs.c	FUNCTION_99
0x40045bc	          0x4889e5	                            mov rbp, rsp	      1823	refs.c	FUNCTION_99
0x40045bf	        0x4883ec30	                           sub rsp, 0x30	      1823	refs.c	FUNCTION_99
0x40045c3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1823	refs.c	FUNCTION_99
0x40045c7	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1823	refs.c	FUNCTION_99
0x40045cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1824	refs.c	FUNCTION_99
0x40045cf	          0x8b4008	                mov eax, dword [rax + 8]	      1824	refs.c	FUNCTION_99
0x40045d2	            0x89c0	                            mov eax, eax	      1824	refs.c	FUNCTION_99
0x40045d4	        0x488945f8	                mov qword [rbp - 8], rax	      1824	refs.c	FUNCTION_99
0x40045d8	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1826	refs.c	FUNCTION_99	CALL_1
0x40045dd	            0x7519	                           jne 0x40045f8	      1826	refs.c	FUNCTION_99	CALL_1
0x40045df	      0xb900000000	                              mov ecx, 0	      1826	refs.c	FUNCTION_99	CALL_1
0x40045e4	      0xba22070000	                          mov edx, 0x722	      1826	refs.c	FUNCTION_99	CALL_1
0x40045e9	      0xbe00000000	                              mov esi, 0	      1826	refs.c	FUNCTION_99	CALL_1
0x40045ee	      0xbf00000000	                              mov edi, 0	      1826	refs.c	FUNCTION_99	CALL_1
0x40045f3	      0xe800000000	                          call 0x40045f8	      1826	refs.c	FUNCTION_99	CALL_1
0x40045f8	    0x48c745f00100	               mov qword [rbp - 0x10], 1	      1828	refs.c	FUNCTION_99	FOR_1
0x4004600	      0xe98e000000	                           jmp 0x4004693	      1828	refs.c	FUNCTION_99	FOR_1
0x4004605	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1830	refs.c	FUNCTION_99	FOR_1
0x4004609	          0x488b00	                    mov rax, qword [rax]	      1830	refs.c	FUNCTION_99	FOR_1
0x400460c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1830	refs.c	FUNCTION_99	FOR_1
0x4004610	        0x48c1e204	                              shl rdx, 4	      1830	refs.c	FUNCTION_99	FOR_1
0x4004614	          0x4801d0	                            add rax, rdx	      1830	refs.c	FUNCTION_99	FOR_1
0x4004617	          0x488b10	                    mov rdx, qword [rax]	      1830	refs.c	FUNCTION_99	FOR_1
0x400461a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x400461e	          0x488b00	                    mov rax, qword [rax]	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x4004621	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x4004625	        0x48c1e104	                              shl rcx, 4	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x4004629	        0x4883e910	                           sub rcx, 0x10	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x400462d	          0x4801c8	                            add rax, rcx	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x4004630	          0x488b00	                    mov rax, qword [rax]	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x4004633	          0x4889d6	                            mov rsi, rdx	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x4004636	          0x4889c7	                            mov rdi, rax	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x4004639	      0xe800000000	                          call 0x400463e	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x400463e	          0x8945ec	             mov dword [rbp - 0x14], eax	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x4004641	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1832	refs.c	FUNCTION_99	FOR_1	IF_1
0x4004645	            0x7532	                           jne 0x4004679	      1832	refs.c	FUNCTION_99	FOR_1	IF_1
0x4004647	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1835	refs.c	FUNCTION_99	FOR_1	IF_1
0x400464b	          0x488b00	                    mov rax, qword [rax]	      1835	refs.c	FUNCTION_99	FOR_1	IF_1
0x400464e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1835	refs.c	FUNCTION_99	FOR_1	IF_1
0x4004652	        0x48c1e204	                              shl rdx, 4	      1835	refs.c	FUNCTION_99	FOR_1	IF_1
0x4004656	          0x4801d0	                            add rax, rdx	      1835	refs.c	FUNCTION_99	FOR_1	IF_1
0x4004659	          0x488b10	                    mov rdx, qword [rax]	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_3
0x400465c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_3
0x4004660	      0xbe00000000	                              mov esi, 0	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_3
0x4004665	          0x4889c7	                            mov rdi, rax	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_3
0x4004668	      0xb800000000	                              mov eax, 0	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_3
0x400466d	      0xe800000000	                          call 0x4004672	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_3
0x4004672	      0xb801000000	                              mov eax, 1	      1836	refs.c	FUNCTION_99	FOR_1	IF_1
0x4004677	            0xeb2d	                           jmp 0x40046a6	      1836	refs.c	FUNCTION_99	FOR_1	IF_1
0x4004679	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1837	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2
0x400467d	            0x7e0f	                           jle 0x400468e	      1837	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2
0x400467f	      0xbf00000000	                              mov edi, 0	      1838	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2	CALL_4
0x4004684	      0xb800000000	                              mov eax, 0	      1838	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2	CALL_4
0x4004689	      0xe800000000	                          call 0x400468e	      1838	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2	CALL_4
0x400468e	      0x488345f001	               add qword [rbp - 0x10], 1	      1828	refs.c	FUNCTION_99	FOR_1
0x4004693	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1828	refs.c	FUNCTION_99	FOR_1
0x4004697	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1828	refs.c	FUNCTION_99	FOR_1
0x400469b	     0xf8264ffffff	                            jb 0x4004605	      1828	refs.c	FUNCTION_99	FOR_1
0x40046a1	      0xb800000000	                              mov eax, 0	      1841	refs.c	FUNCTION_99
0x40046a6	              0xc9	                                   leave	      1842	refs.c	FUNCTION_99
0x40046a7	              0xc3	                                     ret	      1842	refs.c	FUNCTION_99
refs_for_each_tag_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	14
0x4001051	              0x55	                                push rbp	       374	refs.c	FUNCTION_20
0x4001052	          0x4889e5	                            mov rbp, rsp	       374	refs.c	FUNCTION_20
0x4001055	        0x4883ec20	                           sub rsp, 0x20	       374	refs.c	FUNCTION_20
0x4001059	        0x48897df8	                mov qword [rbp - 8], rdi	       374	refs.c	FUNCTION_20
0x400105d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       374	refs.c	FUNCTION_20
0x4001061	        0x488955e8	             mov qword [rbp - 0x18], rdx	       374	refs.c	FUNCTION_20
0x4001065	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       375	refs.c	FUNCTION_20	CALL_1
0x4001069	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       375	refs.c	FUNCTION_20	CALL_1
0x400106d	        0x488b45f8	                mov rax, qword [rbp - 8]	       375	refs.c	FUNCTION_20	CALL_1
0x4001071	      0xbe00000000	                              mov esi, 0	       375	refs.c	FUNCTION_20	CALL_1
0x4001076	          0x4889c7	                            mov rdi, rax	       375	refs.c	FUNCTION_20	CALL_1
0x4001079	      0xe800000000	                          call 0x400107e	       375	refs.c	FUNCTION_20	CALL_1
0x400107e	              0xc9	                                   leave	       376	refs.c	FUNCTION_20
0x400107f	              0xc3	                                     ret	       376	refs.c	FUNCTION_20
peel_object	IF,4:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,5:functions,0	57
0x4000dd3	              0x55	                                push rbp	       302	refs.c	FUNCTION_16
0x4000dd4	          0x4889e5	                            mov rbp, rsp	       302	refs.c	FUNCTION_16
0x4000dd7	        0x4883ec20	                           sub rsp, 0x20	       302	refs.c	FUNCTION_16
0x4000ddb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       302	refs.c	FUNCTION_16
0x4000ddf	        0x488975e0	             mov qword [rbp - 0x20], rsi	       302	refs.c	FUNCTION_16
0x4000de3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       303	refs.c	FUNCTION_16	CALL_1
0x4000de7	          0x4889c7	                            mov rdi, rax	       303	refs.c	FUNCTION_16	CALL_1
0x4000dea	      0xe800000000	                          call 0x4000def	       303	refs.c	FUNCTION_16	CALL_1
0x4000def	        0x488945f8	                mov qword [rbp - 8], rax	       303	refs.c	FUNCTION_16	CALL_1
0x4000df3	        0x488b45f8	                mov rax, qword [rbp - 8]	       305	refs.c	FUNCTION_16	IF_1
0x4000df7	           0xfb600	                   movzx eax, byte [rax]	       305	refs.c	FUNCTION_16	IF_1
0x4000dfa	          0x83e00e	                            and eax, 0xe	       305	refs.c	FUNCTION_16	IF_1
0x4000dfd	            0x84c0	                             test al, al	       305	refs.c	FUNCTION_16	IF_1
0x4000dff	            0x7546	                           jne 0x4000e47	       305	refs.c	FUNCTION_16	IF_1
0x4000e01	    0x488b05000000	            mov rax, qword [0x04000e08] 	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x4000e08	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x4000e0c	      0xba00000000	                              mov edx, 0	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x4000e11	          0x4889ce	                            mov rsi, rcx	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x4000e14	          0x4889c7	                            mov rdi, rax	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x4000e17	      0xe800000000	                          call 0x4000e1c	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x4000e1c	          0x8945f4	              mov dword [rbp - 0xc], eax	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x4000e1f	        0x837df400	                cmp dword [rbp - 0xc], 0	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000e23	            0x781b	                            js 0x4000e40	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000e25	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000e28	        0x488b45f8	                mov rax, qword [rbp - 8]	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000e2c	      0xba00000000	                              mov edx, 0	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000e31	            0x89ce	                            mov esi, ecx	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000e33	          0x4889c7	                            mov rdi, rax	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000e36	      0xe800000000	                          call 0x4000e3b	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000e3b	          0x4885c0	                           test rax, rax	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000e3e	            0x7507	                           jne 0x4000e47	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000e40	      0xb8ffffffff	                     mov eax, 0xffffffff	       308	refs.c	FUNCTION_16	IF_1	IF_2
0x4000e45	            0xeb4f	                           jmp 0x4000e96	       308	refs.c	FUNCTION_16	IF_1	IF_2
0x4000e47	        0x488b45f8	                mov rax, qword [rbp - 8]	       311	refs.c	FUNCTION_16	IF_3
0x4000e4b	           0xfb600	                   movzx eax, byte [rax]	       311	refs.c	FUNCTION_16	IF_3
0x4000e4e	          0x83e00e	                            and eax, 0xe	       311	refs.c	FUNCTION_16	IF_3
0x4000e51	            0x3c08	                               cmp al, 8	       311	refs.c	FUNCTION_16	IF_3
0x4000e53	            0x7407	                            je 0x4000e5c	       311	refs.c	FUNCTION_16	IF_3
0x4000e55	      0xb8feffffff	                     mov eax, 0xfffffffe	       312	refs.c	FUNCTION_16	IF_3
0x4000e5a	            0xeb3a	                           jmp 0x4000e96	       312	refs.c	FUNCTION_16	IF_3
0x4000e5c	        0x488b45f8	                mov rax, qword [rbp - 8]	       314	refs.c	FUNCTION_16	CALL_4
0x4000e60	          0x4889c7	                            mov rdi, rax	       314	refs.c	FUNCTION_16	CALL_4
0x4000e63	      0xe800000000	                          call 0x4000e68	       314	refs.c	FUNCTION_16	CALL_4
0x4000e68	        0x488945f8	                mov qword [rbp - 8], rax	       314	refs.c	FUNCTION_16	CALL_4
0x4000e6c	      0x48837df800	                  cmp qword [rbp - 8], 0	       315	refs.c	FUNCTION_16	IF_4
0x4000e71	            0x7507	                           jne 0x4000e7a	       315	refs.c	FUNCTION_16	IF_4
0x4000e73	      0xb8ffffffff	                     mov eax, 0xffffffff	       316	refs.c	FUNCTION_16	IF_4
0x4000e78	            0xeb1c	                           jmp 0x4000e96	       316	refs.c	FUNCTION_16	IF_4
0x4000e7a	        0x488b45f8	                mov rax, qword [rbp - 8]	       318	refs.c	FUNCTION_16	CALL_5
0x4000e7e	        0x488d5004	                      lea rdx, [rax + 4]	       318	refs.c	FUNCTION_16	CALL_5
0x4000e82	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       318	refs.c	FUNCTION_16	CALL_5
0x4000e86	          0x4889d6	                            mov rsi, rdx	       318	refs.c	FUNCTION_16	CALL_5
0x4000e89	          0x4889c7	                            mov rdi, rax	       318	refs.c	FUNCTION_16	CALL_5
0x4000e8c	      0xe827f7ffff	                         call sym.oidcpy	       318	refs.c	FUNCTION_16	CALL_5
0x4000e91	      0xb800000000	                              mov eax, 0	       319	refs.c	FUNCTION_16
0x4000e96	              0xc9	                                   leave	       320	refs.c	FUNCTION_16
0x4000e97	              0xc3	                                     ret	       320	refs.c	FUNCTION_16
ref_transaction_add_update	IF,3:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,4:functions,0	130
0x400283a	              0x55	                                push rbp	       984	refs.c	FUNCTION_54
0x400283b	          0x4889e5	                            mov rbp, rsp	       984	refs.c	FUNCTION_54
0x400283e	        0x4883ec40	                           sub rsp, 0x40	       984	refs.c	FUNCTION_54
0x4002842	        0x48897de8	             mov qword [rbp - 0x18], rdi	       984	refs.c	FUNCTION_54
0x4002846	        0x488975e0	             mov qword [rbp - 0x20], rsi	       984	refs.c	FUNCTION_54
0x400284a	          0x8955dc	             mov dword [rbp - 0x24], edx	       984	refs.c	FUNCTION_54
0x400284d	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       984	refs.c	FUNCTION_54
0x4002851	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       984	refs.c	FUNCTION_54
0x4002855	        0x4c894dc0	              mov qword [rbp - 0x40], r9	       984	refs.c	FUNCTION_54
0x4002859	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       987	refs.c	FUNCTION_54	IF_1
0x400285d	          0x8b4020	            mov eax, dword [rax + 0x20] 	       987	refs.c	FUNCTION_54	IF_1
0x4002860	            0x85c0	                           test eax, eax	       987	refs.c	FUNCTION_54	IF_1
0x4002862	            0x740f	                            je 0x4002873	       987	refs.c	FUNCTION_54	IF_1
0x4002864	      0xbf00000000	                              mov edi, 0	       988	refs.c	FUNCTION_54	CALL_1
0x4002869	      0xb800000000	                              mov eax, 0	       988	refs.c	FUNCTION_54	CALL_1
0x400286e	      0xe800000000	                          call 0x4002873	       988	refs.c	FUNCTION_54	CALL_1
0x4002873	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       990	refs.c	FUNCTION_54
0x4002877	          0x4889c7	                            mov rdi, rax	       990	refs.c	FUNCTION_54
0x400287a	      0xe800000000	                          call 0x400287f	       990	refs.c	FUNCTION_54
0x400287f	        0x488945f0	             mov qword [rbp - 0x10], rax	       990	refs.c	FUNCTION_54
0x4002883	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       990	refs.c	FUNCTION_54
0x4002887	          0x4889c6	                            mov rsi, rax	       990	refs.c	FUNCTION_54
0x400288a	      0xbf50000000	                           mov edi, 0x50	       990	refs.c	FUNCTION_54
0x400288f	      0xe8a1d8ffff	                         call sym.st_add	       990	refs.c	FUNCTION_54
0x4002894	      0xbe01000000	                              mov esi, 1	       990	refs.c	FUNCTION_54
0x4002899	          0x4889c7	                            mov rdi, rax	       990	refs.c	FUNCTION_54
0x400289c	      0xe894d8ffff	                         call sym.st_add	       990	refs.c	FUNCTION_54
0x40028a1	          0x4889c6	                            mov rsi, rax	       990	refs.c	FUNCTION_54
0x40028a4	      0xbf01000000	                              mov edi, 1	       990	refs.c	FUNCTION_54
0x40028a9	      0xe800000000	                          call 0x40028ae	       990	refs.c	FUNCTION_54
0x40028ae	        0x488945f8	                mov qword [rbp - 8], rax	       990	refs.c	FUNCTION_54
0x40028b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	refs.c	FUNCTION_54
0x40028b6	        0x488d4850	                   lea rcx, [rax + 0x50]	       990	refs.c	FUNCTION_54
0x40028ba	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       990	refs.c	FUNCTION_54
0x40028be	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       990	refs.c	FUNCTION_54
0x40028c2	          0x4889c6	                            mov rsi, rax	       990	refs.c	FUNCTION_54
0x40028c5	          0x4889cf	                            mov rdi, rcx	       990	refs.c	FUNCTION_54
0x40028c8	      0xe800000000	                          call 0x40028cd	       990	refs.c	FUNCTION_54
0x40028cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       991	refs.c	FUNCTION_54
0x40028d1	        0x488b4018	            mov rax, qword [rax + 0x18] 	       991	refs.c	FUNCTION_54
0x40028d5	        0x488d5001	                      lea rdx, [rax + 1]	       991	refs.c	FUNCTION_54
0x40028d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       991	refs.c	FUNCTION_54
0x40028dd	        0x488b4010	            mov rax, qword [rax + 0x10] 	       991	refs.c	FUNCTION_54
0x40028e1	          0x4839c2	                            cmp rdx, rax	       991	refs.c	FUNCTION_54
0x40028e4	     0xf869b000000	                           jbe 0x4002985	       991	refs.c	FUNCTION_54
0x40028ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       991	refs.c	FUNCTION_54
0x40028ee	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       991	refs.c	FUNCTION_54
0x40028f2	          0x4889d0	                            mov rax, rdx	       991	refs.c	FUNCTION_54
0x40028f5	          0x4801c0	                            add rax, rax	       991	refs.c	FUNCTION_54
0x40028f8	          0x4801d0	                            add rax, rdx	       991	refs.c	FUNCTION_54
0x40028fb	        0x4883c030	                           add rax, 0x30	       991	refs.c	FUNCTION_54
0x40028ff	          0x48d1e8	                              shr rax, 1	       991	refs.c	FUNCTION_54
0x4002902	          0x4889c2	                            mov rdx, rax	       991	refs.c	FUNCTION_54
0x4002905	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       991	refs.c	FUNCTION_54
0x4002909	        0x488b4018	            mov rax, qword [rax + 0x18] 	       991	refs.c	FUNCTION_54
0x400290d	        0x4883c001	                              add rax, 1	       991	refs.c	FUNCTION_54
0x4002911	          0x4839c2	                            cmp rdx, rax	       991	refs.c	FUNCTION_54
0x4002914	            0x7316	                           jae 0x400292c	       991	refs.c	FUNCTION_54
0x4002916	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       991	refs.c	FUNCTION_54
0x400291a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       991	refs.c	FUNCTION_54
0x400291e	        0x488d5001	                      lea rdx, [rax + 1]	       991	refs.c	FUNCTION_54
0x4002922	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       991	refs.c	FUNCTION_54
0x4002926	        0x48895010	             mov qword [rax + 0x10], rdx	       991	refs.c	FUNCTION_54
0x400292a	            0xeb23	                           jmp 0x400294f	       991	refs.c	FUNCTION_54
0x400292c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       991	refs.c	FUNCTION_54
0x4002930	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       991	refs.c	FUNCTION_54
0x4002934	          0x4889d0	                            mov rax, rdx	       991	refs.c	FUNCTION_54
0x4002937	          0x4801c0	                            add rax, rax	       991	refs.c	FUNCTION_54
0x400293a	          0x4801d0	                            add rax, rdx	       991	refs.c	FUNCTION_54
0x400293d	        0x4883c030	                           add rax, 0x30	       991	refs.c	FUNCTION_54
0x4002941	          0x48d1e8	                              shr rax, 1	       991	refs.c	FUNCTION_54
0x4002944	          0x4889c2	                            mov rdx, rax	       991	refs.c	FUNCTION_54
0x4002947	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       991	refs.c	FUNCTION_54
0x400294b	        0x48895010	             mov qword [rax + 0x10], rdx	       991	refs.c	FUNCTION_54
0x400294f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       991	refs.c	FUNCTION_54
0x4002953	        0x488b4010	            mov rax, qword [rax + 0x10] 	       991	refs.c	FUNCTION_54
0x4002957	          0x4889c6	                            mov rsi, rax	       991	refs.c	FUNCTION_54
0x400295a	      0xbf08000000	                              mov edi, 8	       991	refs.c	FUNCTION_54
0x400295f	      0xe815d8ffff	                        call sym.st_mult	       991	refs.c	FUNCTION_54
0x4002964	          0x4889c2	                            mov rdx, rax	       991	refs.c	FUNCTION_54
0x4002967	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       991	refs.c	FUNCTION_54
0x400296b	        0x488b4008	                mov rax, qword [rax + 8]	       991	refs.c	FUNCTION_54
0x400296f	          0x4889d6	                            mov rsi, rdx	       991	refs.c	FUNCTION_54
0x4002972	          0x4889c7	                            mov rdi, rax	       991	refs.c	FUNCTION_54
0x4002975	      0xe800000000	                          call 0x400297a	       991	refs.c	FUNCTION_54
0x400297a	          0x4889c2	                            mov rdx, rax	       991	refs.c	FUNCTION_54
0x400297d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       991	refs.c	FUNCTION_54
0x4002981	        0x48895008	                mov qword [rax + 8], rdx	       991	refs.c	FUNCTION_54
0x4002985	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       992	refs.c	FUNCTION_54
0x4002989	        0x488b7008	                mov rsi, qword [rax + 8]	       992	refs.c	FUNCTION_54
0x400298d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       992	refs.c	FUNCTION_54
0x4002991	        0x488b4018	            mov rax, qword [rax + 0x18] 	       992	refs.c	FUNCTION_54
0x4002995	        0x488d4801	                      lea rcx, [rax + 1]	       992	refs.c	FUNCTION_54
0x4002999	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       992	refs.c	FUNCTION_54
0x400299d	        0x48894a18	             mov qword [rdx + 0x18], rcx	       992	refs.c	FUNCTION_54
0x40029a1	        0x48c1e003	                              shl rax, 3	       992	refs.c	FUNCTION_54
0x40029a5	        0x488d1406	                    lea rdx, [rsi + rax]	       992	refs.c	FUNCTION_54
0x40029a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       992	refs.c	FUNCTION_54
0x40029ad	          0x488902	                    mov qword [rdx], rax	       992	refs.c	FUNCTION_54
0x40029b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       994	refs.c	FUNCTION_54
0x40029b4	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       994	refs.c	FUNCTION_54
0x40029b7	          0x895028	             mov dword [rax + 0x28], edx	       994	refs.c	FUNCTION_54
0x40029ba	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       996	refs.c	FUNCTION_54	IF_2
0x40029bd	          0x83e004	                              and eax, 4	       996	refs.c	FUNCTION_54	IF_2
0x40029c0	            0x85c0	                           test eax, eax	       996	refs.c	FUNCTION_54	IF_2
0x40029c2	            0x7413	                            je 0x40029d7	       996	refs.c	FUNCTION_54	IF_2
0x40029c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       997	refs.c	FUNCTION_54	CALL_2
0x40029c8	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       997	refs.c	FUNCTION_54	CALL_2
0x40029cc	          0x4889d6	                            mov rsi, rdx	       997	refs.c	FUNCTION_54	CALL_2
0x40029cf	          0x4889c7	                            mov rdi, rax	       997	refs.c	FUNCTION_54	CALL_2
0x40029d2	      0xe8e1dbffff	                         call sym.oidcpy	       997	refs.c	FUNCTION_54	CALL_2
0x40029d7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       998	refs.c	FUNCTION_54	IF_3
0x40029da	          0x83e008	                              and eax, 8	       998	refs.c	FUNCTION_54	IF_3
0x40029dd	            0x85c0	                           test eax, eax	       998	refs.c	FUNCTION_54	IF_3
0x40029df	            0x7417	                            je 0x40029f8	       998	refs.c	FUNCTION_54	IF_3
0x40029e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       999	refs.c	FUNCTION_54	CALL_3
0x40029e5	        0x488d5014	                   lea rdx, [rax + 0x14]	       999	refs.c	FUNCTION_54	CALL_3
0x40029e9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       999	refs.c	FUNCTION_54	CALL_3
0x40029ed	          0x4889c6	                            mov rsi, rax	       999	refs.c	FUNCTION_54	CALL_3
0x40029f0	          0x4889d7	                            mov rdi, rdx	       999	refs.c	FUNCTION_54	CALL_3
0x40029f3	      0xe8c0dbffff	                         call sym.oidcpy	       999	refs.c	FUNCTION_54	CALL_3
0x40029f8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1000	refs.c	FUNCTION_54	CALL_4
0x40029fc	          0x4889c7	                            mov rdi, rax	      1000	refs.c	FUNCTION_54	CALL_4
0x40029ff	      0xe8c7d7ffff	                call sym.xstrdup_or_null	      1000	refs.c	FUNCTION_54	CALL_4
0x4002a04	          0x4889c2	                            mov rdx, rax	      1000	refs.c	FUNCTION_54	CALL_4
0x4002a07	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	refs.c	FUNCTION_54	CALL_4
0x4002a0b	        0x48895040	             mov qword [rax + 0x40], rdx	      1000	refs.c	FUNCTION_54	CALL_4
0x4002a0f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1001	refs.c	FUNCTION_54
0x4002a13	              0xc9	                                   leave	      1002	refs.c	FUNCTION_54
0x4002a14	              0xc3	                                     ret	      1002	refs.c	FUNCTION_54
alloc_ref_store_hash_entry	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	41
0x4003f34	              0x55	                                push rbp	      1617	refs.c	FUNCTION_86
0x4003f35	          0x4889e5	                            mov rbp, rsp	      1617	refs.c	FUNCTION_86
0x4003f38	        0x4883ec20	                           sub rsp, 0x20	      1617	refs.c	FUNCTION_86
0x4003f3c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1617	refs.c	FUNCTION_86
0x4003f40	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1617	refs.c	FUNCTION_86
0x4003f44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1620	refs.c	FUNCTION_86
0x4003f48	          0x4889c7	                            mov rdi, rax	      1620	refs.c	FUNCTION_86
0x4003f4b	      0xe800000000	                          call 0x4003f50	      1620	refs.c	FUNCTION_86
0x4003f50	        0x488945f0	             mov qword [rbp - 0x10], rax	      1620	refs.c	FUNCTION_86
0x4003f54	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1620	refs.c	FUNCTION_86
0x4003f58	          0x4889c6	                            mov rsi, rax	      1620	refs.c	FUNCTION_86
0x4003f5b	      0xbf18000000	                           mov edi, 0x18	      1620	refs.c	FUNCTION_86
0x4003f60	      0xe8d0c1ffff	                         call sym.st_add	      1620	refs.c	FUNCTION_86
0x4003f65	      0xbe01000000	                              mov esi, 1	      1620	refs.c	FUNCTION_86
0x4003f6a	          0x4889c7	                            mov rdi, rax	      1620	refs.c	FUNCTION_86
0x4003f6d	      0xe8c3c1ffff	                         call sym.st_add	      1620	refs.c	FUNCTION_86
0x4003f72	          0x4889c6	                            mov rsi, rax	      1620	refs.c	FUNCTION_86
0x4003f75	      0xbf01000000	                              mov edi, 1	      1620	refs.c	FUNCTION_86
0x4003f7a	      0xe800000000	                          call 0x4003f7f	      1620	refs.c	FUNCTION_86
0x4003f7f	        0x488945f8	                mov qword [rbp - 8], rax	      1620	refs.c	FUNCTION_86
0x4003f83	        0x488b45f8	                mov rax, qword [rbp - 8]	      1620	refs.c	FUNCTION_86
0x4003f87	        0x488d4818	                   lea rcx, [rax + 0x18]	      1620	refs.c	FUNCTION_86
0x4003f8b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1620	refs.c	FUNCTION_86
0x4003f8f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1620	refs.c	FUNCTION_86
0x4003f93	          0x4889c6	                            mov rsi, rax	      1620	refs.c	FUNCTION_86
0x4003f96	          0x4889cf	                            mov rdi, rcx	      1620	refs.c	FUNCTION_86
0x4003f99	      0xe800000000	                          call 0x4003f9e	      1620	refs.c	FUNCTION_86
0x4003f9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1621	refs.c	FUNCTION_86	CALL_2
0x4003fa2	          0x4889c7	                            mov rdi, rax	      1621	refs.c	FUNCTION_86	CALL_2
0x4003fa5	      0xe800000000	                          call 0x4003faa	      1621	refs.c	FUNCTION_86	CALL_2
0x4003faa	            0x89c2	                            mov edx, eax	      1621	refs.c	FUNCTION_86	CALL_2
0x4003fac	        0x488b45f8	                mov rax, qword [rbp - 8]	      1621	refs.c	FUNCTION_86	CALL_2
0x4003fb0	            0x89d6	                            mov esi, edx	      1621	refs.c	FUNCTION_86	CALL_2
0x4003fb2	          0x4889c7	                            mov rdi, rax	      1621	refs.c	FUNCTION_86	CALL_2
0x4003fb5	      0xe8a6c4ffff	             call sym.hashmap_entry_init	      1621	refs.c	FUNCTION_86	CALL_2
0x4003fba	        0x488b45f8	                mov rax, qword [rbp - 8]	      1622	refs.c	FUNCTION_86
0x4003fbe	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1622	refs.c	FUNCTION_86
0x4003fc2	        0x48895010	             mov qword [rax + 0x10], rdx	      1622	refs.c	FUNCTION_86
0x4003fc6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1623	refs.c	FUNCTION_86
0x4003fca	              0xc9	                                   leave	      1624	refs.c	FUNCTION_86
0x4003fcb	              0xc3	                                     ret	      1624	refs.c	FUNCTION_86
rename_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	17
0x4004ffd	              0x55	                                push rbp	      2143	refs.c	FUNCTION_122
0x4004ffe	          0x4889e5	                            mov rbp, rsp	      2143	refs.c	FUNCTION_122
0x4005001	        0x4883ec20	                           sub rsp, 0x20	      2143	refs.c	FUNCTION_122
0x4005005	        0x48897df8	                mov qword [rbp - 8], rdi	      2143	refs.c	FUNCTION_122
0x4005009	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2143	refs.c	FUNCTION_122
0x400500d	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2143	refs.c	FUNCTION_122
0x4005011	    0x488b05000000	            mov rax, qword [0x04005018] 	      2144	refs.c	FUNCTION_122	CALL_2
0x4005018	          0x4889c7	                            mov rdi, rax	      2144	refs.c	FUNCTION_122	CALL_2
0x400501b	      0xe800000000	                          call 0x4005020	      2144	refs.c	FUNCTION_122	CALL_2
0x4005020	          0x4889c7	                            mov rdi, rax	      2144	refs.c	FUNCTION_122	CALL_2
0x4005023	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2144	refs.c	FUNCTION_122	CALL_2
0x4005027	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2144	refs.c	FUNCTION_122	CALL_2
0x400502b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2144	refs.c	FUNCTION_122	CALL_2
0x400502f	          0x4889c6	                            mov rsi, rax	      2144	refs.c	FUNCTION_122	CALL_2
0x4005032	      0xe800000000	                          call 0x4005037	      2144	refs.c	FUNCTION_122	CALL_2
0x4005037	              0xc9	                                   leave	      2145	refs.c	FUNCTION_122
0x4005038	              0xc3	                                     ret	      2145	refs.c	FUNCTION_122
delete_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	20
0x4001ffa	              0x55	                                push rbp	       770	refs.c	FUNCTION_44
0x4001ffb	          0x4889e5	                            mov rbp, rsp	       770	refs.c	FUNCTION_44
0x4001ffe	        0x4883ec20	                           sub rsp, 0x20	       770	refs.c	FUNCTION_44
0x4002002	        0x48897df8	                mov qword [rbp - 8], rdi	       770	refs.c	FUNCTION_44
0x4002006	        0x488975f0	             mov qword [rbp - 0x10], rsi	       770	refs.c	FUNCTION_44
0x400200a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       770	refs.c	FUNCTION_44
0x400200e	          0x894de4	             mov dword [rbp - 0x1c], ecx	       770	refs.c	FUNCTION_44
0x4002011	    0x488b05000000	            mov rax, qword [0x04002018] 	       771	refs.c	FUNCTION_44	CALL_2
0x4002018	          0x4889c7	                            mov rdi, rax	       771	refs.c	FUNCTION_44	CALL_2
0x400201b	      0xe800000000	                          call 0x4002020	       771	refs.c	FUNCTION_44	CALL_2
0x4002020	          0x4889c7	                            mov rdi, rax	       771	refs.c	FUNCTION_44	CALL_2
0x4002023	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       771	refs.c	FUNCTION_44	CALL_2
0x4002026	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       771	refs.c	FUNCTION_44	CALL_2
0x400202a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       771	refs.c	FUNCTION_44	CALL_2
0x400202e	        0x488b45f8	                mov rax, qword [rbp - 8]	       771	refs.c	FUNCTION_44	CALL_2
0x4002032	          0x4189f0	                            mov r8d, esi	       771	refs.c	FUNCTION_44	CALL_2
0x4002035	          0x4889c6	                            mov rsi, rax	       771	refs.c	FUNCTION_44	CALL_2
0x4002038	      0xe800000000	                          call 0x400203d	       771	refs.c	FUNCTION_44	CALL_2
0x400203d	              0xc9	                                   leave	       773	refs.c	FUNCTION_44
0x400203e	              0xc3	                                     ret	       773	refs.c	FUNCTION_44
refs_reflog_exists	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	15
0x4004d3b	              0x55	                                push rbp	      2058	refs.c	FUNCTION_110
0x4004d3c	          0x4889e5	                            mov rbp, rsp	      2058	refs.c	FUNCTION_110
0x4004d3f	        0x4883ec10	                           sub rsp, 0x10	      2058	refs.c	FUNCTION_110
0x4004d43	        0x48897df8	                mov qword [rbp - 8], rdi	      2058	refs.c	FUNCTION_110
0x4004d47	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2058	refs.c	FUNCTION_110
0x4004d4b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2059	refs.c	FUNCTION_110	CALL_1
0x4004d4f	          0x488b00	                    mov rax, qword [rax]	      2059	refs.c	FUNCTION_110	CALL_1
0x4004d52	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      2059	refs.c	FUNCTION_110	CALL_1
0x4004d59	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2059	refs.c	FUNCTION_110	CALL_1
0x4004d5d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2059	refs.c	FUNCTION_110	CALL_1
0x4004d61	          0x4889ce	                            mov rsi, rcx	      2059	refs.c	FUNCTION_110	CALL_1
0x4004d64	          0x4889d7	                            mov rdi, rdx	      2059	refs.c	FUNCTION_110	CALL_1
0x4004d67	            0xffd0	                                call rax	      2059	refs.c	FUNCTION_110	CALL_1
0x4004d69	              0xc9	                                   leave	      2060	refs.c	FUNCTION_110
0x4004d6a	              0xc3	                                     ret	      2060	refs.c	FUNCTION_110
ref_transaction_commit	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,1:DO,0:CALL,4:functions,0	46
0x40047e4	              0x55	                                push rbp	      1900	refs.c	FUNCTION_102
0x40047e5	          0x4889e5	                            mov rbp, rsp	      1900	refs.c	FUNCTION_102
0x40047e8	        0x4883ec20	                           sub rsp, 0x20	      1900	refs.c	FUNCTION_102
0x40047ec	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1900	refs.c	FUNCTION_102
0x40047f0	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1900	refs.c	FUNCTION_102
0x40047f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1901	refs.c	FUNCTION_102
0x40047f8	          0x488b00	                    mov rax, qword [rax]	      1901	refs.c	FUNCTION_102
0x40047fb	        0x488945f8	                mov qword [rbp - 8], rax	      1901	refs.c	FUNCTION_102
0x40047ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4004803	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4004806	          0x83f801	                              cmp eax, 1	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4004809	            0x744b	                            je 0x4004856	      1904	refs.c	FUNCTION_102	SWITCH_1
0x400480b	          0x83f801	                              cmp eax, 1	      1904	refs.c	FUNCTION_102	SWITCH_1
0x400480e	            0x7207	                            jb 0x4004817	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4004810	          0x83f802	                              cmp eax, 2	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4004813	            0x7423	                            je 0x4004838	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4004815	            0xeb30	                           jmp 0x4004847	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4004817	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1907	refs.c	FUNCTION_102	SWITCH_1	CALL_1
0x400481b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1907	refs.c	FUNCTION_102	SWITCH_1	CALL_1
0x400481f	          0x4889d6	                            mov rsi, rdx	      1907	refs.c	FUNCTION_102	SWITCH_1	CALL_1
0x4004822	          0x4889c7	                            mov rdi, rax	      1907	refs.c	FUNCTION_102	SWITCH_1	CALL_1
0x4004825	      0xe800000000	                          call 0x400482a	      1907	refs.c	FUNCTION_102	SWITCH_1	CALL_1
0x400482a	          0x8945f4	              mov dword [rbp - 0xc], eax	      1907	refs.c	FUNCTION_102	SWITCH_1	CALL_1
0x400482d	        0x837df400	                cmp dword [rbp - 0xc], 0	      1908	refs.c	FUNCTION_102	SWITCH_1	IF_1
0x4004831	            0x7426	                            je 0x4004859	      1908	refs.c	FUNCTION_102	SWITCH_1	IF_1
0x4004833	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1909	refs.c	FUNCTION_102	SWITCH_1	IF_1
0x4004836	            0xeb3e	                           jmp 0x4004876	      1909	refs.c	FUNCTION_102	SWITCH_1	IF_1
0x4004838	      0xbf00000000	                              mov edi, 0	      1915	refs.c	FUNCTION_102	SWITCH_1	CALL_2
0x400483d	      0xb800000000	                              mov eax, 0	      1915	refs.c	FUNCTION_102	SWITCH_1	CALL_2
0x4004842	      0xe800000000	                          call 0x4004847	      1915	refs.c	FUNCTION_102	SWITCH_1	CALL_2
0x4004847	      0xbf00000000	                              mov edi, 0	      1918	refs.c	FUNCTION_102	SWITCH_1	CALL_3
0x400484c	      0xb800000000	                              mov eax, 0	      1918	refs.c	FUNCTION_102	SWITCH_1	CALL_3
0x4004851	      0xe800000000	                          call 0x4004856	      1918	refs.c	FUNCTION_102	SWITCH_1	CALL_3
0x4004856	              0x90	                                     nop	      1913	refs.c	FUNCTION_102	SWITCH_1
0x4004857	            0xeb01	                           jmp 0x400485a	      1913	refs.c	FUNCTION_102	SWITCH_1
0x4004859	              0x90	                                     nop	      1910	refs.c	FUNCTION_102	SWITCH_1
0x400485a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1922	refs.c	FUNCTION_102	CALL_4
0x400485e	          0x488b00	                    mov rax, qword [rax]	      1922	refs.c	FUNCTION_102	CALL_4
0x4004861	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1922	refs.c	FUNCTION_102	CALL_4
0x4004865	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1922	refs.c	FUNCTION_102	CALL_4
0x4004869	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1922	refs.c	FUNCTION_102	CALL_4
0x400486d	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1922	refs.c	FUNCTION_102	CALL_4
0x4004871	          0x4889cf	                            mov rdi, rcx	      1922	refs.c	FUNCTION_102	CALL_4
0x4004874	            0xffd0	                                call rax	      1922	refs.c	FUNCTION_102	CALL_4
0x4004876	              0xc9	                                   leave	      1923	refs.c	FUNCTION_102
0x4004877	              0xc3	                                     ret	      1923	refs.c	FUNCTION_102
ref_storage_backend_exists	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	12
0x40006af	              0x55	                                push rbp	        34	refs.c	FUNCTION_2
0x40006b0	          0x4889e5	                            mov rbp, rsp	        34	refs.c	FUNCTION_2
0x40006b3	        0x4883ec10	                           sub rsp, 0x10	        34	refs.c	FUNCTION_2
0x40006b7	        0x48897df8	                mov qword [rbp - 8], rdi	        34	refs.c	FUNCTION_2
0x40006bb	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	refs.c	FUNCTION_2	CALL_1
0x40006bf	          0x4889c7	                            mov rdi, rax	        35	refs.c	FUNCTION_2	CALL_1
0x40006c2	      0xe895ffffff	       call sym.find_ref_storage_backend	        35	refs.c	FUNCTION_2	CALL_1
0x40006c7	          0x4885c0	                           test rax, rax	        35	refs.c	FUNCTION_2	CALL_1
0x40006ca	           0xf95c0	                                setne al	        35	refs.c	FUNCTION_2	CALL_1
0x40006cd	           0xfb6c0	                           movzx eax, al	        35	refs.c	FUNCTION_2	CALL_1
0x40006d0	              0xc9	                                   leave	        36	refs.c	FUNCTION_2
0x40006d1	              0xc3	                                     ret	        36	refs.c	FUNCTION_2
should_autocreate_reflog	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,1:DO,0:CALL,4:functions,0	42
0x4002133	              0x55	                                push rbp	       797	refs.c	FUNCTION_46
0x4002134	          0x4889e5	                            mov rbp, rsp	       797	refs.c	FUNCTION_46
0x4002137	        0x4883ec10	                           sub rsp, 0x10	       797	refs.c	FUNCTION_46
0x400213b	        0x48897df8	                mov qword [rbp - 8], rdi	       797	refs.c	FUNCTION_46
0x400213f	    0x8b0500000000	            mov eax, dword [0x04002145] 	       798	refs.c	FUNCTION_46	SWITCH_1
0x4002145	          0x83f801	                              cmp eax, 1	       798	refs.c	FUNCTION_46	SWITCH_1
0x4002148	            0x740c	                            je 0x4002156	       798	refs.c	FUNCTION_46	SWITCH_1
0x400214a	          0x83f802	                              cmp eax, 2	       798	refs.c	FUNCTION_46	SWITCH_1
0x400214d	            0x7569	                           jne 0x40021b8	       798	refs.c	FUNCTION_46	SWITCH_1
0x400214f	      0xb801000000	                              mov eax, 1	       800	refs.c	FUNCTION_46	SWITCH_1
0x4002154	            0xeb67	                           jmp 0x40021bd	       800	refs.c	FUNCTION_46	SWITCH_1
0x4002156	        0x488b45f8	                mov rax, qword [rbp - 8]	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x400215a	      0xbe00000000	                              mov esi, 0	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x400215f	          0x4889c7	                            mov rdi, rax	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4002162	      0xe800000000	                          call 0x4002167	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4002167	            0x85c0	                           test eax, eax	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4002169	            0x753f	                           jne 0x40021aa	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x400216b	        0x488b45f8	                mov rax, qword [rbp - 8]	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x400216f	      0xbe00000000	                              mov esi, 0	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4002174	          0x4889c7	                            mov rdi, rax	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4002177	      0xe800000000	                          call 0x400217c	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x400217c	            0x85c0	                           test eax, eax	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x400217e	            0x752a	                           jne 0x40021aa	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4002180	        0x488b45f8	                mov rax, qword [rbp - 8]	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4002184	      0xbe00000000	                              mov esi, 0	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4002189	          0x4889c7	                            mov rdi, rax	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x400218c	      0xe800000000	                          call 0x4002191	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4002191	            0x85c0	                           test eax, eax	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4002193	            0x7515	                           jne 0x40021aa	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4002195	        0x488b45f8	                mov rax, qword [rbp - 8]	       805	refs.c	FUNCTION_46	SWITCH_1	CALL_4
0x4002199	      0xbe00000000	                              mov esi, 0	       805	refs.c	FUNCTION_46	SWITCH_1	CALL_4
0x400219e	          0x4889c7	                            mov rdi, rax	       805	refs.c	FUNCTION_46	SWITCH_1	CALL_4
0x40021a1	      0xe800000000	                          call 0x40021a6	       805	refs.c	FUNCTION_46	SWITCH_1	CALL_4
0x40021a6	            0x85c0	                           test eax, eax	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x40021a8	            0x7507	                           jne 0x40021b1	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x40021aa	      0xb801000000	                              mov eax, 1	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x40021af	            0xeb0c	                           jmp 0x40021bd	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x40021b1	      0xb800000000	                              mov eax, 0	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x40021b6	            0xeb05	                           jmp 0x40021bd	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x40021b8	      0xb800000000	                              mov eax, 0	       807	refs.c	FUNCTION_46	SWITCH_1
0x40021bd	              0xc9	                                   leave	       809	refs.c	FUNCTION_46
0x40021be	              0xc3	                                     ret	       809	refs.c	FUNCTION_46
peel_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	16
0x4004511	              0x55	                                push rbp	      1800	refs.c	FUNCTION_96
0x4004512	          0x4889e5	                            mov rbp, rsp	      1800	refs.c	FUNCTION_96
0x4004515	        0x4883ec10	                           sub rsp, 0x10	      1800	refs.c	FUNCTION_96
0x4004519	        0x48897df8	                mov qword [rbp - 8], rdi	      1800	refs.c	FUNCTION_96
0x400451d	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1800	refs.c	FUNCTION_96
0x4004521	    0x488b05000000	            mov rax, qword [0x04004528] 	      1801	refs.c	FUNCTION_96	CALL_2
0x4004528	          0x4889c7	                            mov rdi, rax	      1801	refs.c	FUNCTION_96	CALL_2
0x400452b	      0xe800000000	                          call 0x4004530	      1801	refs.c	FUNCTION_96	CALL_2
0x4004530	          0x4889c1	                            mov rcx, rax	      1801	refs.c	FUNCTION_96	CALL_2
0x4004533	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1801	refs.c	FUNCTION_96	CALL_2
0x4004537	        0x488b45f8	                mov rax, qword [rbp - 8]	      1801	refs.c	FUNCTION_96	CALL_2
0x400453b	          0x4889c6	                            mov rsi, rax	      1801	refs.c	FUNCTION_96	CALL_2
0x400453e	          0x4889cf	                            mov rdi, rcx	      1801	refs.c	FUNCTION_96	CALL_2
0x4004541	      0xe800000000	                          call 0x4004546	      1801	refs.c	FUNCTION_96	CALL_2
0x4004546	              0xc9	                                   leave	      1802	refs.c	FUNCTION_96
0x4004547	              0xc3	                                     ret	      1802	refs.c	FUNCTION_96
head_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	16
0x4003680	              0x55	                                push rbp	      1338	refs.c	FUNCTION_67
0x4003681	          0x4889e5	                            mov rbp, rsp	      1338	refs.c	FUNCTION_67
0x4003684	        0x4883ec10	                           sub rsp, 0x10	      1338	refs.c	FUNCTION_67
0x4003688	        0x48897df8	                mov qword [rbp - 8], rdi	      1338	refs.c	FUNCTION_67
0x400368c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1338	refs.c	FUNCTION_67
0x4003690	    0x488b05000000	            mov rax, qword [0x04003697] 	      1339	refs.c	FUNCTION_67	CALL_2
0x4003697	          0x4889c7	                            mov rdi, rax	      1339	refs.c	FUNCTION_67	CALL_2
0x400369a	      0xe800000000	                          call 0x400369f	      1339	refs.c	FUNCTION_67	CALL_2
0x400369f	          0x4889c1	                            mov rcx, rax	      1339	refs.c	FUNCTION_67	CALL_2
0x40036a2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1339	refs.c	FUNCTION_67	CALL_2
0x40036a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1339	refs.c	FUNCTION_67	CALL_2
0x40036aa	          0x4889c6	                            mov rsi, rax	      1339	refs.c	FUNCTION_67	CALL_2
0x40036ad	          0x4889cf	                            mov rdi, rcx	      1339	refs.c	FUNCTION_67	CALL_2
0x40036b0	      0xe800000000	                          call 0x40036b5	      1339	refs.c	FUNCTION_67	CALL_2
0x40036b5	              0xc9	                                   leave	      1340	refs.c	FUNCTION_67
0x40036b6	              0xc3	                                     ret	      1340	refs.c	FUNCTION_67
refs_read_ref_full	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	23
0x4000ad1	              0x55	                                push rbp	       225	refs.c	FUNCTION_9
0x4000ad2	          0x4889e5	                            mov rbp, rsp	       225	refs.c	FUNCTION_9
0x4000ad5	        0x4883ec30	                           sub rsp, 0x30	       225	refs.c	FUNCTION_9
0x4000ad9	        0x48897df8	                mov qword [rbp - 8], rdi	       225	refs.c	FUNCTION_9
0x4000add	        0x488975f0	             mov qword [rbp - 0x10], rsi	       225	refs.c	FUNCTION_9
0x4000ae1	          0x8955ec	             mov dword [rbp - 0x14], edx	       225	refs.c	FUNCTION_9
0x4000ae4	        0x48894de0	             mov qword [rbp - 0x20], rcx	       225	refs.c	FUNCTION_9
0x4000ae8	        0x4c8945d8	              mov qword [rbp - 0x28], r8	       225	refs.c	FUNCTION_9
0x4000aec	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4000af0	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4000af4	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4000af7	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4000afb	        0x488b45f8	                mov rax, qword [rbp - 8]	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4000aff	          0x4989f8	                             mov r8, rdi	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4000b02	          0x4889c7	                            mov rdi, rax	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4000b05	      0xe800000000	                          call 0x4000b0a	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4000b0a	          0x4885c0	                           test rax, rax	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4000b0d	            0x7407	                            je 0x4000b16	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4000b0f	      0xb800000000	                              mov eax, 0	       227	refs.c	FUNCTION_9	IF_1
0x4000b14	            0xeb05	                           jmp 0x4000b1b	       227	refs.c	FUNCTION_9	IF_1
0x4000b16	      0xb8ffffffff	                     mov eax, 0xffffffff	       228	refs.c	FUNCTION_9
0x4000b1b	              0xc9	                                   leave	       229	refs.c	FUNCTION_9
0x4000b1c	              0xc3	                                     ret	       229	refs.c	FUNCTION_9
refs_for_each_reflog	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	21
0x4004bd3	              0x55	                                push rbp	      2015	refs.c	FUNCTION_104
0x4004bd4	          0x4889e5	                            mov rbp, rsp	      2015	refs.c	FUNCTION_104
0x4004bd7	        0x4883ec30	                           sub rsp, 0x30	      2015	refs.c	FUNCTION_104
0x4004bdb	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2015	refs.c	FUNCTION_104
0x4004bdf	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2015	refs.c	FUNCTION_104
0x4004be3	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2015	refs.c	FUNCTION_104
0x4004be7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2018	refs.c	FUNCTION_104	CALL_1
0x4004beb	          0x488b00	                    mov rax, qword [rax]	      2018	refs.c	FUNCTION_104	CALL_1
0x4004bee	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2018	refs.c	FUNCTION_104	CALL_1
0x4004bf2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2018	refs.c	FUNCTION_104	CALL_1
0x4004bf6	          0x4889d7	                            mov rdi, rdx	      2018	refs.c	FUNCTION_104	CALL_1
0x4004bf9	            0xffd0	                                call rax	      2018	refs.c	FUNCTION_104	CALL_1
0x4004bfb	        0x488945f8	                mov qword [rbp - 8], rax	      2018	refs.c	FUNCTION_104	CALL_1
0x4004bff	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2020	refs.c	FUNCTION_104	CALL_2
0x4004c03	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2020	refs.c	FUNCTION_104	CALL_2
0x4004c07	        0x488b45f8	                mov rax, qword [rbp - 8]	      2020	refs.c	FUNCTION_104	CALL_2
0x4004c0b	          0x4889ce	                            mov rsi, rcx	      2020	refs.c	FUNCTION_104	CALL_2
0x4004c0e	          0x4889c7	                            mov rdi, rax	      2020	refs.c	FUNCTION_104	CALL_2
0x4004c11	      0xe800000000	                          call 0x4004c16	      2020	refs.c	FUNCTION_104	CALL_2
0x4004c16	              0xc9	                                   leave	      2021	refs.c	FUNCTION_104
0x4004c17	              0xc3	                                     ret	      2021	refs.c	FUNCTION_104
sane_iscase	IF,2:ELSE,1:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,0:functions,0	29
0x40001f3	              0x55	                                push rbp	       999	git-compat-util.h	FUNCTION_146
0x40001f4	          0x4889e5	                            mov rbp, rsp	       999	git-compat-util.h	FUNCTION_146
0x40001f7	          0x897dfc	                mov dword [rbp - 4], edi	       999	git-compat-util.h	FUNCTION_146
0x40001fa	          0x8975f8	                mov dword [rbp - 8], esi	       999	git-compat-util.h	FUNCTION_146
0x40001fd	          0x8b45fc	                mov eax, dword [rbp - 4]	      1000	git-compat-util.h	FUNCTION_146	IF_1
0x4000200	           0xfb6c0	                           movzx eax, al	      1000	git-compat-util.h	FUNCTION_146	IF_1
0x4000203	            0x4898	                                    cdqe	      1000	git-compat-util.h	FUNCTION_146	IF_1
0x4000205	     0xfb680000000	                   movzx eax, byte [rax]	      1000	git-compat-util.h	FUNCTION_146	IF_1
0x400020c	           0xfb6c0	                           movzx eax, al	      1000	git-compat-util.h	FUNCTION_146	IF_1
0x400020f	          0x83e004	                              and eax, 4	      1000	git-compat-util.h	FUNCTION_146	IF_1
0x4000212	            0x85c0	                           test eax, eax	      1000	git-compat-util.h	FUNCTION_146	IF_1
0x4000214	            0x7507	                           jne 0x400021d	      1000	git-compat-util.h	FUNCTION_146	IF_1
0x4000216	      0xb800000000	                              mov eax, 0	      1001	git-compat-util.h	FUNCTION_146	IF_1
0x400021b	            0xeb24	                           jmp 0x4000241	      1001	git-compat-util.h	FUNCTION_146	IF_1
0x400021d	        0x837df800	                  cmp dword [rbp - 8], 0	      1003	git-compat-util.h	FUNCTION_146	IF_2
0x4000221	            0x7410	                            je 0x4000233	      1003	git-compat-util.h	FUNCTION_146	IF_2
0x4000223	          0x8b45fc	                mov eax, dword [rbp - 4]	      1004	git-compat-util.h	FUNCTION_146	IF_2
0x4000226	          0x83e020	                           and eax, 0x20	      1004	git-compat-util.h	FUNCTION_146	IF_2
0x4000229	            0x85c0	                           test eax, eax	      1004	git-compat-util.h	FUNCTION_146	IF_2
0x400022b	           0xf95c0	                                setne al	      1004	git-compat-util.h	FUNCTION_146	IF_2
0x400022e	           0xfb6c0	                           movzx eax, al	      1004	git-compat-util.h	FUNCTION_146	IF_2
0x4000231	            0xeb0e	                           jmp 0x4000241	      1004	git-compat-util.h	FUNCTION_146	IF_2
0x4000233	          0x8b45fc	                mov eax, dword [rbp - 4]	      1006	git-compat-util.h	FUNCTION_146	ELSE_1
0x4000236	          0x83e020	                           and eax, 0x20	      1006	git-compat-util.h	FUNCTION_146	ELSE_1
0x4000239	            0x85c0	                           test eax, eax	      1006	git-compat-util.h	FUNCTION_146	ELSE_1
0x400023b	           0xf94c0	                                 sete al	      1006	git-compat-util.h	FUNCTION_146	ELSE_1
0x400023e	           0xfb6c0	                           movzx eax, al	      1006	git-compat-util.h	FUNCTION_146	ELSE_1
0x4000241	              0x5d	                                 pop rbp	      1007	git-compat-util.h	FUNCTION_146
0x4000242	              0xc3	                                     ret	      1007	git-compat-util.h	FUNCTION_146
for_each_branch_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	16
0x40010e6	              0x55	                                push rbp	       389	refs.c	FUNCTION_23
0x40010e7	          0x4889e5	                            mov rbp, rsp	       389	refs.c	FUNCTION_23
0x40010ea	        0x4883ec10	                           sub rsp, 0x10	       389	refs.c	FUNCTION_23
0x40010ee	        0x48897df8	                mov qword [rbp - 8], rdi	       389	refs.c	FUNCTION_23
0x40010f2	        0x488975f0	             mov qword [rbp - 0x10], rsi	       389	refs.c	FUNCTION_23
0x40010f6	    0x488b05000000	            mov rax, qword [0x040010fd] 	       390	refs.c	FUNCTION_23	CALL_2
0x40010fd	          0x4889c7	                            mov rdi, rax	       390	refs.c	FUNCTION_23	CALL_2
0x4001100	      0xe800000000	                          call 0x4001105	       390	refs.c	FUNCTION_23	CALL_2
0x4001105	          0x4889c1	                            mov rcx, rax	       390	refs.c	FUNCTION_23	CALL_2
0x4001108	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       390	refs.c	FUNCTION_23	CALL_2
0x400110c	        0x488b45f8	                mov rax, qword [rbp - 8]	       390	refs.c	FUNCTION_23	CALL_2
0x4001110	          0x4889c6	                            mov rsi, rax	       390	refs.c	FUNCTION_23	CALL_2
0x4001113	          0x4889cf	                            mov rdi, rcx	       390	refs.c	FUNCTION_23	CALL_2
0x4001116	      0xe800000000	                          call 0x400111b	       390	refs.c	FUNCTION_23	CALL_2
0x400111b	              0xc9	                                   leave	       391	refs.c	FUNCTION_23
0x400111c	              0xc3	                                     ret	       391	refs.c	FUNCTION_23
refs_read_raw_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	19
0x4003b14	              0x55	                                push rbp	      1466	refs.c	FUNCTION_80
0x4003b15	          0x4889e5	                            mov rbp, rsp	      1466	refs.c	FUNCTION_80
0x4003b18	        0x4883ec30	                           sub rsp, 0x30	      1466	refs.c	FUNCTION_80
0x4003b1c	        0x48897df8	                mov qword [rbp - 8], rdi	      1466	refs.c	FUNCTION_80
0x4003b20	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1466	refs.c	FUNCTION_80
0x4003b24	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1466	refs.c	FUNCTION_80
0x4003b28	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1466	refs.c	FUNCTION_80
0x4003b2c	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      1466	refs.c	FUNCTION_80
0x4003b30	        0x488b45f8	                mov rax, qword [rbp - 8]	      1467	refs.c	FUNCTION_80	CALL_1
0x4003b34	          0x488b00	                    mov rax, qword [rax]	      1467	refs.c	FUNCTION_80	CALL_1
0x4003b37	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1467	refs.c	FUNCTION_80	CALL_1
0x4003b3b	        0x4c8b45d8	              mov r8, qword [rbp - 0x28]	      1467	refs.c	FUNCTION_80	CALL_1
0x4003b3f	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1467	refs.c	FUNCTION_80	CALL_1
0x4003b43	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1467	refs.c	FUNCTION_80	CALL_1
0x4003b47	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1467	refs.c	FUNCTION_80	CALL_1
0x4003b4b	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1467	refs.c	FUNCTION_80	CALL_1
0x4003b4f	            0xffd0	                                call rax	      1467	refs.c	FUNCTION_80	CALL_1
0x4003b51	              0xc9	                                   leave	      1468	refs.c	FUNCTION_80
0x4003b52	              0xc3	                                     ret	      1468	refs.c	FUNCTION_80
delete_refs	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	17
0x4004f8c	              0x55	                                push rbp	      2132	refs.c	FUNCTION_120
0x4004f8d	          0x4889e5	                            mov rbp, rsp	      2132	refs.c	FUNCTION_120
0x4004f90	        0x4883ec20	                           sub rsp, 0x20	      2132	refs.c	FUNCTION_120
0x4004f94	        0x48897df8	                mov qword [rbp - 8], rdi	      2132	refs.c	FUNCTION_120
0x4004f98	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2132	refs.c	FUNCTION_120
0x4004f9c	          0x8955ec	             mov dword [rbp - 0x14], edx	      2132	refs.c	FUNCTION_120
0x4004f9f	    0x488b05000000	            mov rax, qword [0x04004fa6] 	      2133	refs.c	FUNCTION_120	CALL_2
0x4004fa6	          0x4889c7	                            mov rdi, rax	      2133	refs.c	FUNCTION_120	CALL_2
0x4004fa9	      0xe800000000	                          call 0x4004fae	      2133	refs.c	FUNCTION_120	CALL_2
0x4004fae	          0x4889c7	                            mov rdi, rax	      2133	refs.c	FUNCTION_120	CALL_2
0x4004fb1	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2133	refs.c	FUNCTION_120	CALL_2
0x4004fb4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2133	refs.c	FUNCTION_120	CALL_2
0x4004fb8	        0x488b45f8	                mov rax, qword [rbp - 8]	      2133	refs.c	FUNCTION_120	CALL_2
0x4004fbc	          0x4889c6	                            mov rsi, rax	      2133	refs.c	FUNCTION_120	CALL_2
0x4004fbf	      0xe800000000	                          call 0x4004fc4	      2133	refs.c	FUNCTION_120	CALL_2
0x4004fc4	              0xc9	                                   leave	      2134	refs.c	FUNCTION_120
0x4004fc5	              0xc3	                                     ret	      2134	refs.c	FUNCTION_120
safe_create_reflog	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	17
0x4004dd2	              0x55	                                push rbp	      2075	refs.c	FUNCTION_113
0x4004dd3	          0x4889e5	                            mov rbp, rsp	      2075	refs.c	FUNCTION_113
0x4004dd6	        0x4883ec20	                           sub rsp, 0x20	      2075	refs.c	FUNCTION_113
0x4004dda	        0x48897df8	                mov qword [rbp - 8], rdi	      2075	refs.c	FUNCTION_113
0x4004dde	          0x8975f4	              mov dword [rbp - 0xc], esi	      2075	refs.c	FUNCTION_113
0x4004de1	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2075	refs.c	FUNCTION_113
0x4004de5	    0x488b05000000	            mov rax, qword [0x04004dec] 	      2076	refs.c	FUNCTION_113	CALL_2
0x4004dec	          0x4889c7	                            mov rdi, rax	      2076	refs.c	FUNCTION_113	CALL_2
0x4004def	      0xe800000000	                          call 0x4004df4	      2076	refs.c	FUNCTION_113	CALL_2
0x4004df4	          0x4889c7	                            mov rdi, rax	      2076	refs.c	FUNCTION_113	CALL_2
0x4004df7	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2076	refs.c	FUNCTION_113	CALL_2
0x4004dfb	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2076	refs.c	FUNCTION_113	CALL_2
0x4004dfe	        0x488b45f8	                mov rax, qword [rbp - 8]	      2076	refs.c	FUNCTION_113	CALL_2
0x4004e02	          0x4889c6	                            mov rsi, rax	      2076	refs.c	FUNCTION_113	CALL_2
0x4004e05	      0xe800000000	                          call 0x4004e0a	      2076	refs.c	FUNCTION_113	CALL_2
0x4004e0a	              0xc9	                                   leave	      2078	refs.c	FUNCTION_113
0x4004e0b	              0xc3	                                     ret	      2078	refs.c	FUNCTION_113
ref_filter_match	IF,3:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,0:functions,2	76
0x4000c6f	              0x55	                                push rbp	       266	refs.c	FUNCTION_14
0x4000c70	          0x4889e5	                            mov rbp, rsp	       266	refs.c	FUNCTION_14
0x4000c73	        0x4883ec30	                           sub rsp, 0x30	       266	refs.c	FUNCTION_14
0x4000c77	        0x48897de8	             mov qword [rbp - 0x18], rdi	       266	refs.c	FUNCTION_14
0x4000c7b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       266	refs.c	FUNCTION_14
0x4000c7f	        0x488955d8	             mov qword [rbp - 0x28], rdx	       266	refs.c	FUNCTION_14
0x4000c83	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       269	refs.c	FUNCTION_14	IF_1
0x4000c88	            0x7462	                            je 0x4000cec	       269	refs.c	FUNCTION_14	IF_1
0x4000c8a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       269	refs.c	FUNCTION_14	IF_1
0x4000c8e	          0x8b4008	                mov eax, dword [rax + 8]	       269	refs.c	FUNCTION_14	IF_1
0x4000c91	            0x85c0	                           test eax, eax	       269	refs.c	FUNCTION_14	IF_1
0x4000c93	            0x7457	                            je 0x4000cec	       269	refs.c	FUNCTION_14	IF_1
0x4000c95	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000c99	          0x488b00	                    mov rax, qword [rax]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000c9c	        0x488945f8	                mov qword [rbp - 8], rax	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000ca0	            0xeb26	                           jmp 0x4000cc8	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000ca2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4000ca6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4000caa	          0x4889d6	                            mov rsi, rdx	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4000cad	          0x4889c7	                            mov rdi, rax	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4000cb0	      0xe80bffffff	              call sym.match_ref_pattern	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4000cb5	            0x85c0	                           test eax, eax	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4000cb7	            0x740a	                            je 0x4000cc3	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4000cb9	      0xb800000000	                              mov eax, 0	       272	refs.c	FUNCTION_14	FUNCTION_1	IF_1
0x4000cbe	      0xe9aa000000	                           jmp 0x4000d6d	       272	refs.c	FUNCTION_14	FUNCTION_1	IF_1
0x4000cc3	      0x488345f810	               add qword [rbp - 8], 0x10	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000cc8	      0x48837df800	                  cmp qword [rbp - 8], 0	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000ccd	            0x741d	                            je 0x4000cec	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000ccf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000cd3	          0x488b10	                    mov rdx, qword [rax]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000cd6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000cda	          0x8b4008	                mov eax, dword [rax + 8]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000cdd	            0x89c0	                            mov eax, eax	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000cdf	        0x48c1e004	                              shl rax, 4	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000ce3	          0x4801d0	                            add rax, rdx	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000ce6	        0x483b45f8	                cmp rax, qword [rbp - 8]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000cea	            0x77b6	                            ja 0x4000ca2	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000cec	      0x48837de000	               cmp qword [rbp - 0x20], 0	       276	refs.c	FUNCTION_14	IF_2
0x4000cf1	            0x7475	                            je 0x4000d68	       276	refs.c	FUNCTION_14	IF_2
0x4000cf3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       276	refs.c	FUNCTION_14	IF_2
0x4000cf7	          0x8b4008	                mov eax, dword [rax + 8]	       276	refs.c	FUNCTION_14	IF_2
0x4000cfa	            0x85c0	                           test eax, eax	       276	refs.c	FUNCTION_14	IF_2
0x4000cfc	            0x746a	                            je 0x4000d68	       276	refs.c	FUNCTION_14	IF_2
0x4000cfe	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       277	refs.c	FUNCTION_14	IF_2
0x4000d05	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d09	          0x488b00	                    mov rax, qword [rax]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d0c	        0x488945f8	                mov qword [rbp - 8], rax	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d10	            0xeb25	                           jmp 0x4000d37	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d12	        0x488b55f8	                mov rdx, qword [rbp - 8]	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x4000d16	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x4000d1a	          0x4889d6	                            mov rsi, rdx	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x4000d1d	          0x4889c7	                            mov rdi, rax	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x4000d20	      0xe89bfeffff	              call sym.match_ref_pattern	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x4000d25	            0x85c0	                           test eax, eax	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x4000d27	            0x7409	                            je 0x4000d32	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x4000d29	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       280	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1
0x4000d30	            0xeb29	                           jmp 0x4000d5b	       281	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1
0x4000d32	      0x488345f810	               add qword [rbp - 8], 0x10	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d37	      0x48837df800	                  cmp qword [rbp - 8], 0	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d3c	            0x741d	                            je 0x4000d5b	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d3e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d42	          0x488b10	                    mov rdx, qword [rax]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d45	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d49	          0x8b4008	                mov eax, dword [rax + 8]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d4c	            0x89c0	                            mov eax, eax	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d4e	        0x48c1e004	                              shl rax, 4	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d52	          0x4801d0	                            add rax, rdx	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d55	        0x483b45f8	                cmp rax, qword [rbp - 8]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d59	            0x77b7	                            ja 0x4000d12	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d5b	        0x837df400	                cmp dword [rbp - 0xc], 0	       285	refs.c	FUNCTION_14	IF_2	IF_3
0x4000d5f	            0x7507	                           jne 0x4000d68	       285	refs.c	FUNCTION_14	IF_2	IF_3
0x4000d61	      0xb800000000	                              mov eax, 0	       286	refs.c	FUNCTION_14	IF_2	IF_3
0x4000d66	            0xeb05	                           jmp 0x4000d6d	       286	refs.c	FUNCTION_14	IF_2	IF_3
0x4000d68	      0xb801000000	                              mov eax, 1	       288	refs.c	FUNCTION_14
0x4000d6d	              0xc9	                                   leave	       289	refs.c	FUNCTION_14
0x4000d6e	              0xc3	                                     ret	       289	refs.c	FUNCTION_14
rollback_lock_file	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	10
0x4000622	              0x55	                                push rbp	       303	lockfile.h	FUNCTION_207
0x4000623	          0x4889e5	                            mov rbp, rsp	       303	lockfile.h	FUNCTION_207
0x4000626	        0x4883ec10	                           sub rsp, 0x10	       303	lockfile.h	FUNCTION_207
0x400062a	        0x48897df8	                mov qword [rbp - 8], rdi	       303	lockfile.h	FUNCTION_207
0x400062e	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	lockfile.h	FUNCTION_207	CALL_1
0x4000632	          0x4889c7	                            mov rdi, rax	       304	lockfile.h	FUNCTION_207	CALL_1
0x4000635	      0xe800000000	                          call 0x400063a	       304	lockfile.h	FUNCTION_207	CALL_1
0x400063a	              0x90	                                     nop	       305	lockfile.h	FUNCTION_207
0x400063b	              0xc9	                                   leave	       305	lockfile.h	FUNCTION_207
0x400063c	              0xc3	                                     ret	       305	lockfile.h	FUNCTION_207
strip_suffix_mem	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	38
0x40000b4	              0x55	                                push rbp	       538	git-compat-util.h	FUNCTION_134
0x40000b5	          0x4889e5	                            mov rbp, rsp	       538	git-compat-util.h	FUNCTION_134
0x40000b8	        0x4883ec30	                           sub rsp, 0x30	       538	git-compat-util.h	FUNCTION_134
0x40000bc	        0x48897de8	             mov qword [rbp - 0x18], rdi	       538	git-compat-util.h	FUNCTION_134
0x40000c0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       538	git-compat-util.h	FUNCTION_134
0x40000c4	        0x488955d8	             mov qword [rbp - 0x28], rdx	       538	git-compat-util.h	FUNCTION_134
0x40000c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       539	git-compat-util.h	FUNCTION_134	CALL_1
0x40000cc	          0x4889c7	                            mov rdi, rax	       539	git-compat-util.h	FUNCTION_134	CALL_1
0x40000cf	      0xe800000000	                          call 0x40000d4	       539	git-compat-util.h	FUNCTION_134	CALL_1
0x40000d4	        0x488945f8	                mov qword [rbp - 8], rax	       539	git-compat-util.h	FUNCTION_134	CALL_1
0x40000d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x40000dc	          0x488b00	                    mov rax, qword [rax]	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x40000df	        0x483b45f8	                cmp rax, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x40000e3	            0x722d	                            jb 0x4000112	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x40000e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x40000e9	          0x488b00	                    mov rax, qword [rax]	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x40000ec	        0x482b45f8	                sub rax, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x40000f0	          0x4889c2	                            mov rdx, rax	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x40000f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x40000f7	        0x488d0c02	                    lea rcx, [rdx + rax]	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x40000fb	        0x488b55f8	                mov rdx, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x40000ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x4000103	          0x4889c6	                            mov rsi, rax	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x4000106	          0x4889cf	                            mov rdi, rcx	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x4000109	      0xe800000000	                          call 0x400010e	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x400010e	            0x85c0	                           test eax, eax	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x4000110	            0x7407	                            je 0x4000119	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x4000112	      0xb800000000	                              mov eax, 0	       541	git-compat-util.h	FUNCTION_134	IF_1
0x4000117	            0xeb1a	                           jmp 0x4000133	       541	git-compat-util.h	FUNCTION_134	IF_1
0x4000119	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       542	git-compat-util.h	FUNCTION_134
0x400011d	          0x488b00	                    mov rax, qword [rax]	       542	git-compat-util.h	FUNCTION_134
0x4000120	        0x482b45f8	                sub rax, qword [rbp - 8]	       542	git-compat-util.h	FUNCTION_134
0x4000124	          0x4889c2	                            mov rdx, rax	       542	git-compat-util.h	FUNCTION_134
0x4000127	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       542	git-compat-util.h	FUNCTION_134
0x400012b	          0x488910	                    mov qword [rax], rdx	       542	git-compat-util.h	FUNCTION_134
0x400012e	      0xb801000000	                              mov eax, 1	       543	git-compat-util.h	FUNCTION_134
0x4000133	              0xc9	                                   leave	       544	git-compat-util.h	FUNCTION_134
0x4000134	              0xc3	                                     ret	       544	git-compat-util.h	FUNCTION_134
strbuf_addch	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	33
0x4000313	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_190
0x4000314	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_190
0x4000317	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_190
0x400031b	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_190
0x400031f	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_190
0x4000322	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_190	IF_1	CALL_1
0x4000326	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_190	IF_1	CALL_1
0x4000329	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_190	IF_1	CALL_1
0x400032e	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_190	IF_1	CALL_1
0x4000331	            0x7511	                           jne 0x4000344	       227	strbuf.h	FUNCTION_190	IF_1	CALL_1
0x4000333	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_190	CALL_2
0x4000337	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_190	CALL_2
0x400033c	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_190	CALL_2
0x400033f	      0xe800000000	                          call 0x4000344	       228	strbuf.h	FUNCTION_190	CALL_2
0x4000344	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_190
0x4000348	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_190
0x400034c	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_190
0x4000350	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_190
0x4000354	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_190
0x4000358	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_190
0x400035c	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_190
0x4000360	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_190
0x4000363	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_190
0x4000366	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_190
0x4000368	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_190
0x400036c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_190
0x4000370	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_190
0x4000374	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_190
0x4000378	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_190
0x400037b	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_190
0x400037e	              0x90	                                     nop	       231	strbuf.h	FUNCTION_190
0x400037f	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_190
0x4000380	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_190
refs_for_each_remote_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	14
0x400111d	              0x55	                                push rbp	       394	refs.c	FUNCTION_24
0x400111e	          0x4889e5	                            mov rbp, rsp	       394	refs.c	FUNCTION_24
0x4001121	        0x4883ec20	                           sub rsp, 0x20	       394	refs.c	FUNCTION_24
0x4001125	        0x48897df8	                mov qword [rbp - 8], rdi	       394	refs.c	FUNCTION_24
0x4001129	        0x488975f0	             mov qword [rbp - 0x10], rsi	       394	refs.c	FUNCTION_24
0x400112d	        0x488955e8	             mov qword [rbp - 0x18], rdx	       394	refs.c	FUNCTION_24
0x4001131	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       395	refs.c	FUNCTION_24	CALL_1
0x4001135	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       395	refs.c	FUNCTION_24	CALL_1
0x4001139	        0x488b45f8	                mov rax, qword [rbp - 8]	       395	refs.c	FUNCTION_24	CALL_1
0x400113d	      0xbe00000000	                              mov esi, 0	       395	refs.c	FUNCTION_24	CALL_1
0x4001142	          0x4889c7	                            mov rdi, rax	       395	refs.c	FUNCTION_24	CALL_1
0x4001145	      0xe800000000	                          call 0x400114a	       395	refs.c	FUNCTION_24	CALL_1
0x400114a	              0xc9	                                   leave	       396	refs.c	FUNCTION_24
0x400114b	              0xc3	                                     ret	       396	refs.c	FUNCTION_24
read_ref_at_ent_oldest	IF,5:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,4:functions,0	70
0x400249d	              0x55	                                push rbp	       884	refs.c	FUNCTION_49
0x400249e	          0x4889e5	                            mov rbp, rsp	       884	refs.c	FUNCTION_49
0x40024a1	              0x53	                                push rbx	       884	refs.c	FUNCTION_49
0x40024a2	        0x4883ec48	                           sub rsp, 0x48	       884	refs.c	FUNCTION_49
0x40024a6	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       884	refs.c	FUNCTION_49
0x40024aa	        0x488975d0	             mov qword [rbp - 0x30], rsi	       884	refs.c	FUNCTION_49
0x40024ae	        0x488955c8	             mov qword [rbp - 0x38], rdx	       884	refs.c	FUNCTION_49
0x40024b2	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       884	refs.c	FUNCTION_49
0x40024b6	        0x448945bc	             mov dword [rbp - 0x44], r8d	       884	refs.c	FUNCTION_49
0x40024ba	        0x4c894db0	              mov qword [rbp - 0x50], r9	       884	refs.c	FUNCTION_49
0x40024be	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       885	refs.c	FUNCTION_49
0x40024c2	        0x488945e8	             mov qword [rbp - 0x18], rax	       885	refs.c	FUNCTION_49
0x40024c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       887	refs.c	FUNCTION_49	IF_1
0x40024ca	        0x488b4058	            mov rax, qword [rax + 0x58] 	       887	refs.c	FUNCTION_49	IF_1
0x40024ce	          0x4885c0	                           test rax, rax	       887	refs.c	FUNCTION_49	IF_1
0x40024d1	            0x7417	                            je 0x40024ea	       887	refs.c	FUNCTION_49	IF_1
0x40024d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       888	refs.c	FUNCTION_49	CALL_1
0x40024d7	        0x488b5858	            mov rbx, qword [rax + 0x58] 	       888	refs.c	FUNCTION_49	CALL_1
0x40024db	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       888	refs.c	FUNCTION_49	CALL_1
0x40024df	          0x4889c7	                            mov rdi, rax	       888	refs.c	FUNCTION_49	CALL_1
0x40024e2	      0xe800000000	                          call 0x40024e7	       888	refs.c	FUNCTION_49	CALL_1
0x40024e7	          0x488903	                    mov qword [rbx], rax	       888	refs.c	FUNCTION_49	CALL_1
0x40024ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       889	refs.c	FUNCTION_49	IF_2
0x40024ee	        0x488b4060	            mov rax, qword [rax + 0x60] 	       889	refs.c	FUNCTION_49	IF_2
0x40024f2	          0x4885c0	                           test rax, rax	       889	refs.c	FUNCTION_49	IF_2
0x40024f5	            0x740f	                            je 0x4002506	       889	refs.c	FUNCTION_49	IF_2
0x40024f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       890	refs.c	FUNCTION_49	IF_2
0x40024fb	        0x488b4060	            mov rax, qword [rax + 0x60] 	       890	refs.c	FUNCTION_49	IF_2
0x40024ff	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       890	refs.c	FUNCTION_49	IF_2
0x4002503	          0x488910	                    mov qword [rax], rdx	       890	refs.c	FUNCTION_49	IF_2
0x4002506	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       891	refs.c	FUNCTION_49	IF_3
0x400250a	        0x488b4068	            mov rax, qword [rax + 0x68] 	       891	refs.c	FUNCTION_49	IF_3
0x400250e	          0x4885c0	                           test rax, rax	       891	refs.c	FUNCTION_49	IF_3
0x4002511	            0x740d	                            je 0x4002520	       891	refs.c	FUNCTION_49	IF_3
0x4002513	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       892	refs.c	FUNCTION_49	IF_3
0x4002517	        0x488b4068	            mov rax, qword [rax + 0x68] 	       892	refs.c	FUNCTION_49	IF_3
0x400251b	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       892	refs.c	FUNCTION_49	IF_3
0x400251e	            0x8910	                    mov dword [rax], edx	       892	refs.c	FUNCTION_49	IF_3
0x4002520	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       893	refs.c	FUNCTION_49	IF_4
0x4002524	        0x488b4070	            mov rax, qword [rax + 0x70] 	       893	refs.c	FUNCTION_49	IF_4
0x4002528	          0x4885c0	                           test rax, rax	       893	refs.c	FUNCTION_49	IF_4
0x400252b	            0x7411	                            je 0x400253e	       893	refs.c	FUNCTION_49	IF_4
0x400252d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       894	refs.c	FUNCTION_49	IF_4
0x4002531	        0x488b4070	            mov rax, qword [rax + 0x70] 	       894	refs.c	FUNCTION_49	IF_4
0x4002535	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       894	refs.c	FUNCTION_49	IF_4
0x4002539	          0x8b5214	            mov edx, dword [rdx + 0x14] 	       894	refs.c	FUNCTION_49	IF_4
0x400253c	            0x8910	                    mov dword [rax], edx	       894	refs.c	FUNCTION_49	IF_4
0x400253e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       895	refs.c	FUNCTION_49	CALL_2
0x4002542	        0x488b4018	            mov rax, qword [rax + 0x18] 	       895	refs.c	FUNCTION_49	CALL_2
0x4002546	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       895	refs.c	FUNCTION_49	CALL_2
0x400254a	          0x4889d6	                            mov rsi, rdx	       895	refs.c	FUNCTION_49	CALL_2
0x400254d	          0x4889c7	                            mov rdi, rax	       895	refs.c	FUNCTION_49	CALL_2
0x4002550	      0xe863e0ffff	                         call sym.oidcpy	       895	refs.c	FUNCTION_49	CALL_2
0x4002555	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       896	refs.c	FUNCTION_49	IF_5	CALL_3
0x4002559	        0x488b4018	            mov rax, qword [rax + 0x18] 	       896	refs.c	FUNCTION_49	IF_5	CALL_3
0x400255d	          0x4889c7	                            mov rdi, rax	       896	refs.c	FUNCTION_49	IF_5	CALL_3
0x4002560	      0xe801e0ffff	                    call sym.is_null_oid	       896	refs.c	FUNCTION_49	IF_5	CALL_3
0x4002565	            0x85c0	                           test eax, eax	       896	refs.c	FUNCTION_49	IF_5	CALL_3
0x4002567	            0x7417	                            je 0x4002580	       896	refs.c	FUNCTION_49	IF_5	CALL_3
0x4002569	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       897	refs.c	FUNCTION_49	CALL_4
0x400256d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       897	refs.c	FUNCTION_49	CALL_4
0x4002571	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       897	refs.c	FUNCTION_49	CALL_4
0x4002575	          0x4889d6	                            mov rsi, rdx	       897	refs.c	FUNCTION_49	CALL_4
0x4002578	          0x4889c7	                            mov rdi, rax	       897	refs.c	FUNCTION_49	CALL_4
0x400257b	      0xe838e0ffff	                         call sym.oidcpy	       897	refs.c	FUNCTION_49	CALL_4
0x4002580	      0xb801000000	                              mov eax, 1	       899	refs.c	FUNCTION_49
0x4002585	        0x4883c448	                           add rsp, 0x48	       900	refs.c	FUNCTION_49
0x4002589	              0x5b	                                 pop rbx	       900	refs.c	FUNCTION_49
0x400258a	              0x5d	                                 pop rbp	       900	refs.c	FUNCTION_49
0x400258b	              0xc3	                                     ret	       900	refs.c	FUNCTION_49
register_ref_store_map	IF,2:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,4:functions,0	38
0x4004100	              0x55	                                push rbp	      1687	refs.c	FUNCTION_90
0x4004101	          0x4889e5	                            mov rbp, rsp	      1687	refs.c	FUNCTION_90
0x4004104	        0x4883ec20	                           sub rsp, 0x20	      1687	refs.c	FUNCTION_90
0x4004108	        0x48897df8	                mov qword [rbp - 8], rdi	      1687	refs.c	FUNCTION_90
0x400410c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1687	refs.c	FUNCTION_90
0x4004110	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1687	refs.c	FUNCTION_90
0x4004114	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1687	refs.c	FUNCTION_90
0x4004118	        0x488b45f8	                mov rax, qword [rbp - 8]	      1688	refs.c	FUNCTION_90	IF_1
0x400411c	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1688	refs.c	FUNCTION_90	IF_1
0x400411f	            0x85c0	                           test eax, eax	      1688	refs.c	FUNCTION_90	IF_1
0x4004121	            0x751b	                           jne 0x400413e	      1688	refs.c	FUNCTION_90	IF_1
0x4004123	        0x488b45f8	                mov rax, qword [rbp - 8]	      1689	refs.c	FUNCTION_90	CALL_1
0x4004127	      0xb900000000	                              mov ecx, 0	      1689	refs.c	FUNCTION_90	CALL_1
0x400412c	      0xba00000000	                              mov edx, 0	      1689	refs.c	FUNCTION_90	CALL_1
0x4004131	      0xbe00000000	                              mov esi, 0	      1689	refs.c	FUNCTION_90	CALL_1
0x4004136	          0x4889c7	                            mov rdi, rax	      1689	refs.c	FUNCTION_90	CALL_1
0x4004139	      0xe800000000	                          call 0x400413e	      1689	refs.c	FUNCTION_90	CALL_1
0x400413e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x4004142	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x4004146	          0x4889d6	                            mov rsi, rdx	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x4004149	          0x4889c7	                            mov rdi, rax	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x400414c	      0xe8e3fdffff	     call sym.alloc_ref_store_hash_entry	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x4004151	          0x4889c2	                            mov rdx, rax	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x4004154	        0x488b45f8	                mov rax, qword [rbp - 8]	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x4004158	          0x4889d6	                            mov rsi, rdx	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x400415b	          0x4889c7	                            mov rdi, rax	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x400415e	      0xe800000000	                          call 0x4004163	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x4004163	          0x4885c0	                           test rax, rax	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x4004166	            0x741a	                            je 0x4004182	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x4004168	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1692	refs.c	FUNCTION_90	CALL_4
0x400416c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1692	refs.c	FUNCTION_90	CALL_4
0x4004170	          0x4889c6	                            mov rsi, rax	      1692	refs.c	FUNCTION_90	CALL_4
0x4004173	      0xbf00000000	                              mov edi, 0	      1692	refs.c	FUNCTION_90	CALL_4
0x4004178	      0xb800000000	                              mov eax, 0	      1692	refs.c	FUNCTION_90	CALL_4
0x400417d	      0xe800000000	                          call 0x4004182	      1692	refs.c	FUNCTION_90	CALL_4
0x4004182	              0x90	                                     nop	      1693	refs.c	FUNCTION_90
0x4004183	              0xc9	                                   leave	      1693	refs.c	FUNCTION_90
0x4004184	              0xc3	                                     ret	      1693	refs.c	FUNCTION_90
_	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,0:functions,0	15
0x40004eb	              0x55	                                push rbp	        51	gettext.h	FUNCTION_210
0x40004ec	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_210
0x40004ef	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_210
0x40004f3	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_210
0x40004f7	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_210	IF_1
0x40004fb	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_210	IF_1
0x40004fe	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_210	IF_1
0x4000500	            0x7507	                           jne 0x4000509	        52	gettext.h	FUNCTION_210	IF_1
0x4000502	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_210	IF_1
0x4000507	            0xeb0c	                           jmp 0x4000515	        53	gettext.h	FUNCTION_210	IF_1
0x4000509	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_210
0x400050d	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_210
0x4000510	      0xe800000000	                          call 0x4000515	        54	gettext.h	FUNCTION_210
0x4000515	              0xc9	                                   leave	        55	gettext.h	FUNCTION_210
0x4000516	              0xc3	                                     ret	        55	gettext.h	FUNCTION_210
oidcmp	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	12
0x4000541	              0x55	                                push rbp	       979	cache.h	FUNCTION_168
0x4000542	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_168
0x4000545	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_168
0x4000549	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_168
0x400054d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_168
0x4000551	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_168	CALL_1
0x4000555	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_168	CALL_1
0x4000559	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_168	CALL_1
0x400055c	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_168	CALL_1
0x400055f	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_168	CALL_1
0x4000564	              0xc9	                                   leave	       981	cache.h	FUNCTION_168
0x4000565	              0xc3	                                     ret	       981	cache.h	FUNCTION_168
base_ref_store_init	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,0:functions,0	10
0x40043fb	              0x55	                                push rbp	      1767	refs.c	FUNCTION_93
0x40043fc	          0x4889e5	                            mov rbp, rsp	      1767	refs.c	FUNCTION_93
0x40043ff	        0x48897df8	                mov qword [rbp - 8], rdi	      1767	refs.c	FUNCTION_93
0x4004403	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1767	refs.c	FUNCTION_93
0x4004407	        0x488b45f8	                mov rax, qword [rbp - 8]	      1768	refs.c	FUNCTION_93
0x400440b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1768	refs.c	FUNCTION_93
0x400440f	          0x488910	                    mov qword [rax], rdx	      1768	refs.c	FUNCTION_93
0x4004412	              0x90	                                     nop	      1769	refs.c	FUNCTION_93
0x4004413	              0x5d	                                 pop rbp	      1769	refs.c	FUNCTION_93
0x4004414	              0xc3	                                     ret	      1769	refs.c	FUNCTION_93
for_each_rawref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	16
0x4003add	              0x55	                                push rbp	      1459	refs.c	FUNCTION_79
0x4003ade	          0x4889e5	                            mov rbp, rsp	      1459	refs.c	FUNCTION_79
0x4003ae1	        0x4883ec10	                           sub rsp, 0x10	      1459	refs.c	FUNCTION_79
0x4003ae5	        0x48897df8	                mov qword [rbp - 8], rdi	      1459	refs.c	FUNCTION_79
0x4003ae9	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1459	refs.c	FUNCTION_79
0x4003aed	    0x488b05000000	            mov rax, qword [0x04003af4] 	      1460	refs.c	FUNCTION_79	CALL_2
0x4003af4	          0x4889c7	                            mov rdi, rax	      1460	refs.c	FUNCTION_79	CALL_2
0x4003af7	      0xe800000000	                          call 0x4003afc	      1460	refs.c	FUNCTION_79	CALL_2
0x4003afc	          0x4889c1	                            mov rcx, rax	      1460	refs.c	FUNCTION_79	CALL_2
0x4003aff	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1460	refs.c	FUNCTION_79	CALL_2
0x4003b03	        0x488b45f8	                mov rax, qword [rbp - 8]	      1460	refs.c	FUNCTION_79	CALL_2
0x4003b07	          0x4889c6	                            mov rsi, rax	      1460	refs.c	FUNCTION_79	CALL_2
0x4003b0a	          0x4889cf	                            mov rdi, rcx	      1460	refs.c	FUNCTION_79	CALL_2
0x4003b0d	      0xe800000000	                          call 0x4003b12	      1460	refs.c	FUNCTION_79	CALL_2
0x4003b12	              0xc9	                                   leave	      1461	refs.c	FUNCTION_79
0x4003b13	              0xc3	                                     ret	      1461	refs.c	FUNCTION_79
is_per_worktree_ref	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,3:functions,0	27
0x4001a42	              0x55	                                push rbp	       616	refs.c	FUNCTION_37
0x4001a43	          0x4889e5	                            mov rbp, rsp	       616	refs.c	FUNCTION_37
0x4001a46	        0x4883ec10	                           sub rsp, 0x10	       616	refs.c	FUNCTION_37
0x4001a4a	        0x48897df8	                mov qword [rbp - 8], rdi	       616	refs.c	FUNCTION_37
0x4001a4e	        0x488b45f8	                mov rax, qword [rbp - 8]	       617	refs.c	FUNCTION_37	CALL_1
0x4001a52	      0xbe00000000	                              mov esi, 0	       617	refs.c	FUNCTION_37	CALL_1
0x4001a57	          0x4889c7	                            mov rdi, rax	       617	refs.c	FUNCTION_37	CALL_1
0x4001a5a	      0xe800000000	                          call 0x4001a5f	       617	refs.c	FUNCTION_37	CALL_1
0x4001a5f	            0x85c0	                           test eax, eax	       618	refs.c	FUNCTION_37	CALL_2
0x4001a61	            0x742a	                            je 0x4001a8d	       618	refs.c	FUNCTION_37	CALL_2
0x4001a63	        0x488b45f8	                mov rax, qword [rbp - 8]	       618	refs.c	FUNCTION_37	CALL_2
0x4001a67	      0xbe00000000	                              mov esi, 0	       618	refs.c	FUNCTION_37	CALL_2
0x4001a6c	          0x4889c7	                            mov rdi, rax	       618	refs.c	FUNCTION_37	CALL_2
0x4001a6f	      0xe800000000	                          call 0x4001a74	       618	refs.c	FUNCTION_37	CALL_2
0x4001a74	            0x85c0	                           test eax, eax	       617	refs.c	FUNCTION_37	CALL_1
0x4001a76	            0x7515	                           jne 0x4001a8d	       617	refs.c	FUNCTION_37	CALL_1
0x4001a78	        0x488b45f8	                mov rax, qword [rbp - 8]	       619	refs.c	FUNCTION_37	CALL_3
0x4001a7c	      0xbe00000000	                              mov esi, 0	       619	refs.c	FUNCTION_37	CALL_3
0x4001a81	          0x4889c7	                            mov rdi, rax	       619	refs.c	FUNCTION_37	CALL_3
0x4001a84	      0xe800000000	                          call 0x4001a89	       619	refs.c	FUNCTION_37	CALL_3
0x4001a89	            0x85c0	                           test eax, eax	       618	refs.c	FUNCTION_37	CALL_2
0x4001a8b	            0x7407	                            je 0x4001a94	       618	refs.c	FUNCTION_37	CALL_2
0x4001a8d	      0xb801000000	                              mov eax, 1	       618	refs.c	FUNCTION_37	CALL_2
0x4001a92	            0xeb05	                           jmp 0x4001a99	       618	refs.c	FUNCTION_37	CALL_2
0x4001a94	      0xb800000000	                              mov eax, 0	       618	refs.c	FUNCTION_37	CALL_2
0x4001a99	              0xc9	                                   leave	       620	refs.c	FUNCTION_37
0x4001a9a	              0xc3	                                     ret	       620	refs.c	FUNCTION_37
get_worktree_ref_store	IF,4:ELSE,1:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,7:functions,0	62
0x4004314	              0x55	                                push rbp	      1740	refs.c	FUNCTION_92
0x4004315	          0x4889e5	                            mov rbp, rsp	      1740	refs.c	FUNCTION_92
0x4004318	        0x4883ec20	                           sub rsp, 0x20	      1740	refs.c	FUNCTION_92
0x400431c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1740	refs.c	FUNCTION_92
0x4004320	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1744	refs.c	FUNCTION_92	IF_1
0x4004324	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1744	refs.c	FUNCTION_92	IF_1
0x4004327	            0x85c0	                           test eax, eax	      1744	refs.c	FUNCTION_92	IF_1
0x4004329	            0x7414	                            je 0x400433f	      1744	refs.c	FUNCTION_92	IF_1
0x400432b	    0x488b05000000	            mov rax, qword [0x04004332] 	      1745	refs.c	FUNCTION_92	CALL_1
0x4004332	          0x4889c7	                            mov rdi, rax	      1745	refs.c	FUNCTION_92	CALL_1
0x4004335	      0xe800000000	                          call 0x400433a	      1745	refs.c	FUNCTION_92	CALL_1
0x400433a	      0xe9ba000000	                           jmp 0x40043f9	      1745	refs.c	FUNCTION_92	CALL_1
0x400433f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1747	refs.c	FUNCTION_92
0x4004343	        0x488b4008	                mov rax, qword [rax + 8]	      1747	refs.c	FUNCTION_92
0x4004347	          0x4885c0	                           test rax, rax	      1747	refs.c	FUNCTION_92
0x400434a	            0x740a	                            je 0x4004356	      1747	refs.c	FUNCTION_92
0x400434c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1747	refs.c	FUNCTION_92
0x4004350	        0x488b4008	                mov rax, qword [rax + 8]	      1747	refs.c	FUNCTION_92
0x4004354	            0xeb05	                           jmp 0x400435b	      1747	refs.c	FUNCTION_92
0x4004356	      0xb800000000	                              mov eax, 0	      1747	refs.c	FUNCTION_92
0x400435b	        0x488945f8	                mov qword [rbp - 8], rax	      1747	refs.c	FUNCTION_92
0x400435f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1748	refs.c	FUNCTION_92	CALL_2
0x4004363	          0x4889c6	                            mov rsi, rax	      1748	refs.c	FUNCTION_92	CALL_2
0x4004366	      0xbf00000000	                              mov edi, 0	      1748	refs.c	FUNCTION_92	CALL_2
0x400436b	      0xe85cfcffff	           call sym.lookup_ref_store_map	      1748	refs.c	FUNCTION_92	CALL_2
0x4004370	        0x488945f0	             mov qword [rbp - 0x10], rax	      1748	refs.c	FUNCTION_92	CALL_2
0x4004374	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1749	refs.c	FUNCTION_92	IF_2
0x4004379	            0x7406	                            je 0x4004381	      1749	refs.c	FUNCTION_92	IF_2
0x400437b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1750	refs.c	FUNCTION_92	IF_2
0x400437f	            0xeb78	                           jmp 0x40043f9	      1750	refs.c	FUNCTION_92	IF_2
0x4004381	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1752	refs.c	FUNCTION_92	IF_3
0x4004385	        0x488b4008	                mov rax, qword [rax + 8]	      1752	refs.c	FUNCTION_92	IF_3
0x4004389	          0x4885c0	                           test rax, rax	      1752	refs.c	FUNCTION_92	IF_3
0x400438c	            0x742d	                            je 0x40043bb	      1752	refs.c	FUNCTION_92	IF_3
0x400438e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x4004392	        0x488b4008	                mov rax, qword [rax + 8]	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x4004396	          0x4889c6	                            mov rsi, rax	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x4004399	      0xbf00000000	                              mov edi, 0	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x400439e	      0xb800000000	                              mov eax, 0	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x40043a3	      0xe800000000	                          call 0x40043a8	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x40043a8	      0xbe0f000000	                            mov esi, 0xf	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x40043ad	          0x4889c7	                            mov rdi, rax	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x40043b0	      0xe876fcffff	                 call sym.ref_store_init	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x40043b5	        0x488945f0	             mov qword [rbp - 0x10], rax	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x40043b9	            0xeb16	                           jmp 0x40043d1	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x40043bb	      0xe800000000	                          call 0x40043c0	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x40043c0	      0xbe0f000000	                            mov esi, 0xf	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x40043c5	          0x4889c7	                            mov rdi, rax	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x40043c8	      0xe85efcffff	                 call sym.ref_store_init	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x40043cd	        0x488945f0	             mov qword [rbp - 0x10], rax	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x40043d1	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1759	refs.c	FUNCTION_92	IF_4
0x40043d6	            0x741d	                            je 0x40043f5	      1759	refs.c	FUNCTION_92	IF_4
0x40043d8	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x40043dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x40043e0	          0x4889d1	                            mov rcx, rdx	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x40043e3	          0x4889c2	                            mov rdx, rax	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x40043e6	      0xbe00000000	                              mov esi, 0	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x40043eb	      0xbf00000000	                              mov edi, 0	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x40043f0	      0xe80bfdffff	         call sym.register_ref_store_map	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x40043f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1762	refs.c	FUNCTION_92
0x40043f9	              0xc9	                                   leave	      1763	refs.c	FUNCTION_92
0x40043fa	              0xc3	                                     ret	      1763	refs.c	FUNCTION_92
refs_for_each_ref_in	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	22
0x4003839	              0x55	                                push rbp	      1403	refs.c	FUNCTION_72
0x400383a	          0x4889e5	                            mov rbp, rsp	      1403	refs.c	FUNCTION_72
0x400383d	        0x4883ec20	                           sub rsp, 0x20	      1403	refs.c	FUNCTION_72
0x4003841	        0x48897df8	                mov qword [rbp - 8], rdi	      1403	refs.c	FUNCTION_72
0x4003845	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1403	refs.c	FUNCTION_72
0x4003849	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1403	refs.c	FUNCTION_72
0x400384d	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1403	refs.c	FUNCTION_72
0x4003851	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1404	refs.c	FUNCTION_72	CALL_2
0x4003855	          0x4889c7	                            mov rdi, rax	      1404	refs.c	FUNCTION_72	CALL_2
0x4003858	      0xe800000000	                          call 0x400385d	      1404	refs.c	FUNCTION_72	CALL_2
0x400385d	            0x89c7	                            mov edi, eax	      1404	refs.c	FUNCTION_72	CALL_2
0x400385f	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1404	refs.c	FUNCTION_72	CALL_2
0x4003863	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1404	refs.c	FUNCTION_72	CALL_2
0x4003867	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1404	refs.c	FUNCTION_72	CALL_2
0x400386b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1404	refs.c	FUNCTION_72	CALL_2
0x400386f	          0x4989c9	                             mov r9, rcx	      1404	refs.c	FUNCTION_72	CALL_2
0x4003872	    0x41b800000000	                              mov r8d, 0	      1404	refs.c	FUNCTION_72	CALL_2
0x4003878	            0x89f9	                            mov ecx, edi	      1404	refs.c	FUNCTION_72	CALL_2
0x400387a	          0x4889c7	                            mov rdi, rax	      1404	refs.c	FUNCTION_72	CALL_2
0x400387d	      0xe8e3feffff	                call sym.do_for_each_ref	      1404	refs.c	FUNCTION_72	CALL_2
0x4003882	              0xc9	                                   leave	      1405	refs.c	FUNCTION_72
0x4003883	              0xc3	                                     ret	      1405	refs.c	FUNCTION_72
is_pseudoref_syntax	IF,1:ELSE,0:FOR,1:WHILE,0:SWITCH,0:DO,0:CALL,0:functions,0	33
0x4001a9b	              0x55	                                push rbp	       623	refs.c	FUNCTION_38
0x4001a9c	          0x4889e5	                            mov rbp, rsp	       623	refs.c	FUNCTION_38
0x4001a9f	        0x4883ec18	                           sub rsp, 0x18	       623	refs.c	FUNCTION_38
0x4001aa3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       623	refs.c	FUNCTION_38
0x4001aa7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       626	refs.c	FUNCTION_38	FOR_1
0x4001aab	        0x488945f8	                mov qword [rbp - 8], rax	       626	refs.c	FUNCTION_38	FOR_1
0x4001aaf	            0xeb3c	                           jmp 0x4001aed	       626	refs.c	FUNCTION_38	FOR_1
0x4001ab1	        0x488b45f8	                mov rax, qword [rbp - 8]	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001ab5	           0xfb600	                   movzx eax, byte [rax]	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001ab8	           0xfbec0	                           movsx eax, al	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001abb	      0xbe00000000	                              mov esi, 0	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001ac0	            0x89c7	                            mov edi, eax	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001ac2	      0xe82ce7ffff	                    call sym.sane_iscase	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001ac7	            0x85c0	                           test eax, eax	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001ac9	            0x751d	                           jne 0x4001ae8	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001acb	        0x488b45f8	                mov rax, qword [rbp - 8]	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001acf	           0xfb600	                   movzx eax, byte [rax]	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001ad2	            0x3c2d	                            cmp al, 0x2d	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001ad4	            0x7412	                            je 0x4001ae8	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001ad6	        0x488b45f8	                mov rax, qword [rbp - 8]	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001ada	           0xfb600	                   movzx eax, byte [rax]	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001add	            0x3c5f	                            cmp al, 0x5f	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001adf	            0x7407	                            je 0x4001ae8	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001ae1	      0xb800000000	                              mov eax, 0	       628	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001ae6	            0xeb15	                           jmp 0x4001afd	       628	refs.c	FUNCTION_38	FOR_1	IF_1
0x4001ae8	      0x488345f801	                  add qword [rbp - 8], 1	       626	refs.c	FUNCTION_38	FOR_1
0x4001aed	        0x488b45f8	                mov rax, qword [rbp - 8]	       626	refs.c	FUNCTION_38	FOR_1
0x4001af1	           0xfb600	                   movzx eax, byte [rax]	       626	refs.c	FUNCTION_38	FOR_1
0x4001af4	            0x84c0	                             test al, al	       626	refs.c	FUNCTION_38	FOR_1
0x4001af6	            0x75b9	                           jne 0x4001ab1	       626	refs.c	FUNCTION_38	FOR_1
0x4001af8	      0xb801000000	                              mov eax, 1	       631	refs.c	FUNCTION_38
0x4001afd	              0xc9	                                   leave	       632	refs.c	FUNCTION_38
0x4001afe	              0xc3	                                     ret	       632	refs.c	FUNCTION_38
has_sha1_file	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	10
0x4000603	              0x55	                                push rbp	      1250	cache.h	FUNCTION_182
0x4000604	          0x4889e5	                            mov rbp, rsp	      1250	cache.h	FUNCTION_182
0x4000607	        0x4883ec10	                           sub rsp, 0x10	      1250	cache.h	FUNCTION_182
0x400060b	        0x48897df8	                mov qword [rbp - 8], rdi	      1250	cache.h	FUNCTION_182
0x400060f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1251	cache.h	FUNCTION_182	CALL_1
0x4000613	      0xbe00000000	                              mov esi, 0	      1251	cache.h	FUNCTION_182	CALL_1
0x4000618	          0x4889c7	                            mov rdi, rax	      1251	cache.h	FUNCTION_182	CALL_1
0x400061b	      0xe800000000	                          call 0x4000620	      1251	cache.h	FUNCTION_182	CALL_1
0x4000620	              0xc9	                                   leave	      1252	cache.h	FUNCTION_182
0x4000621	              0xc3	                                     ret	      1252	cache.h	FUNCTION_182
refs_rename_ref_available	IF,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,4:functions,0	59
0x4003507	              0x55	                                push rbp	      1309	refs.c	FUNCTION_65
0x4003508	          0x4889e5	                            mov rbp, rsp	      1309	refs.c	FUNCTION_65
0x400350b	        0x4883c480	             add rsp, 0xffffffffffffff80	      1309	refs.c	FUNCTION_65
0x400350f	        0x48897d98	             mov qword [rbp - 0x68], rdi	      1309	refs.c	FUNCTION_65
0x4003513	        0x48897590	             mov qword [rbp - 0x70], rsi	      1309	refs.c	FUNCTION_65
0x4003517	        0x48895588	             mov qword [rbp - 0x78], rdx	      1309	refs.c	FUNCTION_65
0x400351b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1309	refs.c	FUNCTION_65
0x4003524	        0x488945f8	                mov qword [rbp - 8], rax	      1309	refs.c	FUNCTION_65
0x4003528	            0x31c0	                            xor eax, eax	      1309	refs.c	FUNCTION_65
0x400352a	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1310	refs.c	FUNCTION_65
0x4003532	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1310	refs.c	FUNCTION_65
0x4003539	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1310	refs.c	FUNCTION_65
0x4003540	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	      1310	refs.c	FUNCTION_65
0x4003544	          0x83e0fe	                     and eax, 0xfffffffe	      1310	refs.c	FUNCTION_65
0x4003547	          0x8845e0	               mov byte [rbp - 0x20], al	      1310	refs.c	FUNCTION_65
0x400354a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1310	refs.c	FUNCTION_65
0x4003552	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1311	refs.c	FUNCTION_65
0x400355a	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1311	refs.c	FUNCTION_65
0x4003562	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1311	refs.c	FUNCTION_65
0x400356a	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1314	refs.c	FUNCTION_65	CALL_1
0x400356e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1314	refs.c	FUNCTION_65	CALL_1
0x4003572	          0x4889d6	                            mov rsi, rdx	      1314	refs.c	FUNCTION_65	CALL_1
0x4003575	          0x4889c7	                            mov rdi, rax	      1314	refs.c	FUNCTION_65	CALL_1
0x4003578	      0xe800000000	                          call 0x400357d	      1314	refs.c	FUNCTION_65	CALL_1
0x400357d	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      1315	refs.c	FUNCTION_65	CALL_2
0x4003581	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1315	refs.c	FUNCTION_65	CALL_2
0x4003585	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      1315	refs.c	FUNCTION_65	CALL_2
0x4003589	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1315	refs.c	FUNCTION_65	CALL_2
0x400358d	          0x4989c8	                             mov r8, rcx	      1315	refs.c	FUNCTION_65	CALL_2
0x4003590	          0x4889d1	                            mov rcx, rdx	      1315	refs.c	FUNCTION_65	CALL_2
0x4003593	      0xba00000000	                              mov edx, 0	      1315	refs.c	FUNCTION_65	CALL_2
0x4003598	          0x4889c7	                            mov rdi, rax	      1315	refs.c	FUNCTION_65	CALL_2
0x400359b	      0xe800000000	                          call 0x40035a0	      1315	refs.c	FUNCTION_65	CALL_2
0x40035a0	            0x85c0	                           test eax, eax	      1315	refs.c	FUNCTION_65	CALL_2
0x40035a2	           0xf94c0	                                 sete al	      1315	refs.c	FUNCTION_65	CALL_2
0x40035a5	           0xfb6c0	                           movzx eax, al	      1315	refs.c	FUNCTION_65	CALL_2
0x40035a8	          0x8945ac	             mov dword [rbp - 0x54], eax	      1315	refs.c	FUNCTION_65	CALL_2
0x40035ab	        0x837dac00	               cmp dword [rbp - 0x54], 0	      1317	refs.c	FUNCTION_65	IF_1
0x40035af	            0x751b	                           jne 0x40035cc	      1317	refs.c	FUNCTION_65	IF_1
0x40035b1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1318	refs.c	FUNCTION_65	IF_1
0x40035b5	          0x4889c6	                            mov rsi, rax	      1318	refs.c	FUNCTION_65	IF_1
0x40035b8	      0xbf00000000	                              mov edi, 0	      1318	refs.c	FUNCTION_65	IF_1
0x40035bd	      0xb800000000	                              mov eax, 0	      1318	refs.c	FUNCTION_65	IF_1
0x40035c2	      0xe800000000	                          call 0x40035c7	      1318	refs.c	FUNCTION_65	IF_1
0x40035c7	      0xe887caffff	                    call sym.const_error	      1318	refs.c	FUNCTION_65	IF_1
0x40035cc	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1320	refs.c	FUNCTION_65	CALL_3
0x40035d0	      0xbe00000000	                              mov esi, 0	      1320	refs.c	FUNCTION_65	CALL_3
0x40035d5	          0x4889c7	                            mov rdi, rax	      1320	refs.c	FUNCTION_65	CALL_3
0x40035d8	      0xe800000000	                          call 0x40035dd	      1320	refs.c	FUNCTION_65	CALL_3
0x40035dd	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1321	refs.c	FUNCTION_65	CALL_4
0x40035e1	          0x4889c7	                            mov rdi, rax	      1321	refs.c	FUNCTION_65	CALL_4
0x40035e4	      0xe800000000	                          call 0x40035e9	      1321	refs.c	FUNCTION_65	CALL_4
0x40035e9	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1322	refs.c	FUNCTION_65
0x40035ec	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1323	refs.c	FUNCTION_65
0x40035f0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1323	refs.c	FUNCTION_65
0x40035f9	            0x7405	                            je 0x4003600	      1323	refs.c	FUNCTION_65
0x40035fb	      0xe800000000	                          call 0x4003600	      1323	refs.c	FUNCTION_65
0x4003600	              0xc9	                                   leave	      1323	refs.c	FUNCTION_65
0x4003601	              0xc3	                                     ret	      1323	refs.c	FUNCTION_65
reflog_expire	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	28
0x4004ebd	              0x55	                                push rbp	      2109	refs.c	FUNCTION_117
0x4004ebe	          0x4889e5	                            mov rbp, rsp	      2109	refs.c	FUNCTION_117
0x4004ec1	        0x4883ec30	                           sub rsp, 0x30	      2109	refs.c	FUNCTION_117
0x4004ec5	        0x48897df8	                mov qword [rbp - 8], rdi	      2109	refs.c	FUNCTION_117
0x4004ec9	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2109	refs.c	FUNCTION_117
0x4004ecd	          0x8955ec	             mov dword [rbp - 0x14], edx	      2109	refs.c	FUNCTION_117
0x4004ed0	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2109	refs.c	FUNCTION_117
0x4004ed4	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      2109	refs.c	FUNCTION_117
0x4004ed8	        0x4c894dd0	              mov qword [rbp - 0x30], r9	      2109	refs.c	FUNCTION_117
0x4004edc	    0x488b05000000	            mov rax, qword [0x04004ee3] 	      2110	refs.c	FUNCTION_117	CALL_2
0x4004ee3	          0x4889c7	                            mov rdi, rax	      2110	refs.c	FUNCTION_117	CALL_2
0x4004ee6	      0xe800000000	                          call 0x4004eeb	      2110	refs.c	FUNCTION_117	CALL_2
0x4004eeb	          0x4989c2	                            mov r10, rax	      2110	refs.c	FUNCTION_117	CALL_2
0x4004eee	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      2110	refs.c	FUNCTION_117	CALL_2
0x4004ef2	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      2110	refs.c	FUNCTION_117	CALL_2
0x4004ef6	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2110	refs.c	FUNCTION_117	CALL_2
0x4004ef9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2110	refs.c	FUNCTION_117	CALL_2
0x4004efd	        0x488b45f8	                mov rax, qword [rbp - 8]	      2110	refs.c	FUNCTION_117	CALL_2
0x4004f01	          0xff7510	                 push qword [rbp + 0x10]	      2110	refs.c	FUNCTION_117	CALL_2
0x4004f04	          0xff75d0	                 push qword [rbp - 0x30]	      2110	refs.c	FUNCTION_117	CALL_2
0x4004f07	          0x4989f9	                             mov r9, rdi	      2110	refs.c	FUNCTION_117	CALL_2
0x4004f0a	          0x4989f0	                             mov r8, rsi	      2110	refs.c	FUNCTION_117	CALL_2
0x4004f0d	          0x4889c6	                            mov rsi, rax	      2110	refs.c	FUNCTION_117	CALL_2
0x4004f10	          0x4c89d7	                            mov rdi, r10	      2110	refs.c	FUNCTION_117	CALL_2
0x4004f13	      0xe800000000	                          call 0x4004f18	      2110	refs.c	FUNCTION_117	CALL_2
0x4004f18	        0x4883c410	                           add rsp, 0x10	      2110	refs.c	FUNCTION_117	CALL_2
0x4004f1c	              0xc9	                                   leave	      2114	refs.c	FUNCTION_117
0x4004f1d	              0xc3	                                     ret	      2114	refs.c	FUNCTION_117
refs_reflog_expire	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	24
0x4004e6b	              0x55	                                push rbp	      2097	refs.c	FUNCTION_116
0x4004e6c	          0x4889e5	                            mov rbp, rsp	      2097	refs.c	FUNCTION_116
0x4004e6f	        0x4883ec30	                           sub rsp, 0x30	      2097	refs.c	FUNCTION_116
0x4004e73	        0x48897df8	                mov qword [rbp - 8], rdi	      2097	refs.c	FUNCTION_116
0x4004e77	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2097	refs.c	FUNCTION_116
0x4004e7b	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2097	refs.c	FUNCTION_116
0x4004e7f	          0x894de4	             mov dword [rbp - 0x1c], ecx	      2097	refs.c	FUNCTION_116
0x4004e82	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      2097	refs.c	FUNCTION_116
0x4004e86	        0x4c894dd0	              mov qword [rbp - 0x30], r9	      2097	refs.c	FUNCTION_116
0x4004e8a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2098	refs.c	FUNCTION_116	CALL_1
0x4004e8e	          0x488b00	                    mov rax, qword [rax]	      2098	refs.c	FUNCTION_116	CALL_1
0x4004e91	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      2098	refs.c	FUNCTION_116	CALL_1
0x4004e98	        0x4c8b4dd0	              mov r9, qword [rbp - 0x30]	      2098	refs.c	FUNCTION_116	CALL_1
0x4004e9c	        0x4c8b45d8	              mov r8, qword [rbp - 0x28]	      2098	refs.c	FUNCTION_116	CALL_1
0x4004ea0	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      2098	refs.c	FUNCTION_116	CALL_1
0x4004ea3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2098	refs.c	FUNCTION_116	CALL_1
0x4004ea7	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2098	refs.c	FUNCTION_116	CALL_1
0x4004eab	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2098	refs.c	FUNCTION_116	CALL_1
0x4004eaf	          0xff7518	                 push qword [rbp + 0x18]	      2098	refs.c	FUNCTION_116	CALL_1
0x4004eb2	          0xff7510	                 push qword [rbp + 0x10]	      2098	refs.c	FUNCTION_116	CALL_1
0x4004eb5	            0xffd0	                                call rax	      2098	refs.c	FUNCTION_116	CALL_1
0x4004eb7	        0x4883c410	                           add rsp, 0x10	      2098	refs.c	FUNCTION_116	CALL_1
0x4004ebb	              0xc9	                                   leave	      2101	refs.c	FUNCTION_116
0x4004ebc	              0xc3	                                     ret	      2101	refs.c	FUNCTION_116
refs_delete_reflog	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	15
0x4004e0c	              0x55	                                push rbp	      2081	refs.c	FUNCTION_114
0x4004e0d	          0x4889e5	                            mov rbp, rsp	      2081	refs.c	FUNCTION_114
0x4004e10	        0x4883ec10	                           sub rsp, 0x10	      2081	refs.c	FUNCTION_114
0x4004e14	        0x48897df8	                mov qword [rbp - 8], rdi	      2081	refs.c	FUNCTION_114
0x4004e18	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2081	refs.c	FUNCTION_114
0x4004e1c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2082	refs.c	FUNCTION_114	CALL_1
0x4004e20	          0x488b00	                    mov rax, qword [rax]	      2082	refs.c	FUNCTION_114	CALL_1
0x4004e23	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2082	refs.c	FUNCTION_114	CALL_1
0x4004e2a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2082	refs.c	FUNCTION_114	CALL_1
0x4004e2e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2082	refs.c	FUNCTION_114	CALL_1
0x4004e32	          0x4889ce	                            mov rsi, rcx	      2082	refs.c	FUNCTION_114	CALL_1
0x4004e35	          0x4889d7	                            mov rdi, rdx	      2082	refs.c	FUNCTION_114	CALL_1
0x4004e38	            0xffd0	                                call rax	      2082	refs.c	FUNCTION_114	CALL_1
0x4004e3a	              0xc9	                                   leave	      2083	refs.c	FUNCTION_114
0x4004e3b	              0xc3	                                     ret	      2083	refs.c	FUNCTION_114
refs_init_db	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	18
0x4003dbe	              0x55	                                push rbp	      1565	refs.c	FUNCTION_82
0x4003dbf	          0x4889e5	                            mov rbp, rsp	      1565	refs.c	FUNCTION_82
0x4003dc2	        0x4883ec20	                           sub rsp, 0x20	      1565	refs.c	FUNCTION_82
0x4003dc6	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1565	refs.c	FUNCTION_82
0x4003dca	    0x488b05000000	            mov rax, qword [0x04003dd1] 	      1566	refs.c	FUNCTION_82	CALL_1
0x4003dd1	          0x4889c7	                            mov rdi, rax	      1566	refs.c	FUNCTION_82	CALL_1
0x4003dd4	      0xe800000000	                          call 0x4003dd9	      1566	refs.c	FUNCTION_82	CALL_1
0x4003dd9	        0x488945f8	                mov qword [rbp - 8], rax	      1566	refs.c	FUNCTION_82	CALL_1
0x4003ddd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1568	refs.c	FUNCTION_82	CALL_2
0x4003de1	          0x488b00	                    mov rax, qword [rax]	      1568	refs.c	FUNCTION_82	CALL_2
0x4003de4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1568	refs.c	FUNCTION_82	CALL_2
0x4003de8	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1568	refs.c	FUNCTION_82	CALL_2
0x4003dec	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1568	refs.c	FUNCTION_82	CALL_2
0x4003df0	          0x4889ce	                            mov rsi, rcx	      1568	refs.c	FUNCTION_82	CALL_2
0x4003df3	          0x4889d7	                            mov rdi, rdx	      1568	refs.c	FUNCTION_82	CALL_2
0x4003df6	            0xffd0	                                call rax	      1568	refs.c	FUNCTION_82	CALL_2
0x4003df8	              0xc9	                                   leave	      1569	refs.c	FUNCTION_82
0x4003df9	              0xc3	                                     ret	      1569	refs.c	FUNCTION_82
ref_type	IF,2:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,2:functions,0	21
0x4001aff	              0x55	                                push rbp	       635	refs.c	FUNCTION_39
0x4001b00	          0x4889e5	                            mov rbp, rsp	       635	refs.c	FUNCTION_39
0x4001b03	        0x4883ec10	                           sub rsp, 0x10	       635	refs.c	FUNCTION_39
0x4001b07	        0x48897df8	                mov qword [rbp - 8], rdi	       635	refs.c	FUNCTION_39
0x4001b0b	        0x488b45f8	                mov rax, qword [rbp - 8]	       636	refs.c	FUNCTION_39	IF_1	CALL_1
0x4001b0f	          0x4889c7	                            mov rdi, rax	       636	refs.c	FUNCTION_39	IF_1	CALL_1
0x4001b12	      0xe82bffffff	            call sym.is_per_worktree_ref	       636	refs.c	FUNCTION_39	IF_1	CALL_1
0x4001b17	            0x85c0	                           test eax, eax	       636	refs.c	FUNCTION_39	IF_1	CALL_1
0x4001b19	            0x7407	                            je 0x4001b22	       636	refs.c	FUNCTION_39	IF_1	CALL_1
0x4001b1b	      0xb800000000	                              mov eax, 0	       637	refs.c	FUNCTION_39	IF_1
0x4001b20	            0xeb1c	                           jmp 0x4001b3e	       637	refs.c	FUNCTION_39	IF_1
0x4001b22	        0x488b45f8	                mov rax, qword [rbp - 8]	       638	refs.c	FUNCTION_39	IF_2	CALL_2
0x4001b26	          0x4889c7	                            mov rdi, rax	       638	refs.c	FUNCTION_39	IF_2	CALL_2
0x4001b29	      0xe86dffffff	            call sym.is_pseudoref_syntax	       638	refs.c	FUNCTION_39	IF_2	CALL_2
0x4001b2e	            0x85c0	                           test eax, eax	       638	refs.c	FUNCTION_39	IF_2	CALL_2
0x4001b30	            0x7407	                            je 0x4001b39	       638	refs.c	FUNCTION_39	IF_2	CALL_2
0x4001b32	      0xb801000000	                              mov eax, 1	       639	refs.c	FUNCTION_39	IF_2
0x4001b37	            0xeb05	                           jmp 0x4001b3e	       639	refs.c	FUNCTION_39	IF_2
0x4001b39	      0xb802000000	                              mov eax, 2	       640	refs.c	FUNCTION_39
0x4001b3e	              0xc9	                                   leave	       641	refs.c	FUNCTION_39
0x4001b3f	              0xc3	                                     ret	       641	refs.c	FUNCTION_39
ref_transaction_abort	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,1:DO,0:CALL,4:functions,0	41
0x4004759	              0x55	                                push rbp	      1875	refs.c	FUNCTION_101
0x400475a	          0x4889e5	                            mov rbp, rsp	      1875	refs.c	FUNCTION_101
0x400475d	        0x4883ec20	                           sub rsp, 0x20	      1875	refs.c	FUNCTION_101
0x4004761	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1875	refs.c	FUNCTION_101
0x4004765	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1875	refs.c	FUNCTION_101
0x4004769	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1876	refs.c	FUNCTION_101
0x400476d	          0x488b00	                    mov rax, qword [rax]	      1876	refs.c	FUNCTION_101
0x4004770	        0x488945f8	                mov qword [rbp - 8], rax	      1876	refs.c	FUNCTION_101
0x4004774	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1877	refs.c	FUNCTION_101
0x400477b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1879	refs.c	FUNCTION_101	SWITCH_1
0x400477f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4004782	          0x83f801	                              cmp eax, 1	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4004785	            0x740c	                            je 0x4004793	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4004787	          0x83f801	                              cmp eax, 1	      1879	refs.c	FUNCTION_101	SWITCH_1
0x400478a	            0x7246	                            jb 0x40047d2	      1879	refs.c	FUNCTION_101	SWITCH_1
0x400478c	          0x83f802	                              cmp eax, 2	      1879	refs.c	FUNCTION_101	SWITCH_1
0x400478f	            0x7423	                            je 0x40047b4	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4004791	            0xeb30	                           jmp 0x40047c3	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4004793	        0x488b45f8	                mov rax, qword [rbp - 8]	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x4004797	          0x488b00	                    mov rax, qword [rax]	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x400479a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x400479e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x40047a2	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x40047a6	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x40047aa	          0x4889cf	                            mov rdi, rcx	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x40047ad	            0xffd0	                                call rax	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x40047af	          0x8945f4	              mov dword [rbp - 0xc], eax	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x40047b2	            0xeb1f	                           jmp 0x40047d3	      1885	refs.c	FUNCTION_101	SWITCH_1
0x40047b4	      0xbf00000000	                              mov edi, 0	      1887	refs.c	FUNCTION_101	SWITCH_1	CALL_2
0x40047b9	      0xb800000000	                              mov eax, 0	      1887	refs.c	FUNCTION_101	SWITCH_1	CALL_2
0x40047be	      0xe800000000	                          call 0x40047c3	      1887	refs.c	FUNCTION_101	SWITCH_1	CALL_2
0x40047c3	      0xbf00000000	                              mov edi, 0	      1890	refs.c	FUNCTION_101	SWITCH_1	CALL_3
0x40047c8	      0xb800000000	                              mov eax, 0	      1890	refs.c	FUNCTION_101	SWITCH_1	CALL_3
0x40047cd	      0xe800000000	                          call 0x40047d2	      1890	refs.c	FUNCTION_101	SWITCH_1	CALL_3
0x40047d2	              0x90	                                     nop	      1882	refs.c	FUNCTION_101	SWITCH_1
0x40047d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1894	refs.c	FUNCTION_101	CALL_4
0x40047d7	          0x4889c7	                            mov rdi, rax	      1894	refs.c	FUNCTION_101	CALL_4
0x40047da	      0xe800000000	                          call 0x40047df	      1894	refs.c	FUNCTION_101	CALL_4
0x40047df	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1895	refs.c	FUNCTION_101
0x40047e2	              0xc9	                                   leave	      1896	refs.c	FUNCTION_101
0x40047e3	              0xc3	                                     ret	      1896	refs.c	FUNCTION_101
refs_peel_ref	IF,3:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,4:functions,0	56
0x400443f	              0x55	                                push rbp	      1779	refs.c	FUNCTION_95
0x4004440	          0x4889e5	                            mov rbp, rsp	      1779	refs.c	FUNCTION_95
0x4004443	        0x4883ec50	                           sub rsp, 0x50	      1779	refs.c	FUNCTION_95
0x4004447	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1779	refs.c	FUNCTION_95
0x400444b	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1779	refs.c	FUNCTION_95
0x400444f	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1779	refs.c	FUNCTION_95
0x4004453	    0x64488b042528	                mov rax, qword fs:[0x28]	      1779	refs.c	FUNCTION_95
0x400445c	        0x488945f8	                mov qword [rbp - 8], rax	      1779	refs.c	FUNCTION_95
0x4004460	            0x31c0	                            xor eax, eax	      1779	refs.c	FUNCTION_95
0x4004462	    0x488b05000000	            mov rax, qword [0x04004469] 	      1783	refs.c	FUNCTION_95	IF_1
0x4004469	          0x4885c0	                           test rax, rax	      1783	refs.c	FUNCTION_95	IF_1
0x400446c	            0x744c	                            je 0x40044ba	      1783	refs.c	FUNCTION_95	IF_1
0x400446e	    0x488b05000000	            mov rax, qword [0x04004475] 	      1783	refs.c	FUNCTION_95	IF_1
0x4004475	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1783	refs.c	FUNCTION_95	IF_1
0x4004479	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1783	refs.c	FUNCTION_95	IF_1
0x400447d	            0x753b	                           jne 0x40044ba	      1783	refs.c	FUNCTION_95	IF_1
0x400447f	    0x488b05000000	            mov rax, qword [0x04004486] 	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x4004486	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x400448a	          0x4889d6	                            mov rsi, rdx	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x400448d	          0x4889c7	                            mov rdi, rax	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x4004490	      0xe800000000	                          call 0x4004495	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x4004495	            0x85c0	                           test eax, eax	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x4004497	            0x7407	                            je 0x40044a0	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x4004499	      0xb8ffffffff	                     mov eax, 0xffffffff	      1787	refs.c	FUNCTION_95	IF_1	IF_2
0x400449e	            0xeb5b	                           jmp 0x40044fb	      1787	refs.c	FUNCTION_95	IF_1	IF_2
0x40044a0	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1788	refs.c	FUNCTION_95	IF_1	CALL_2
0x40044a4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1788	refs.c	FUNCTION_95	IF_1	CALL_2
0x40044a8	          0x4889d6	                            mov rsi, rdx	      1788	refs.c	FUNCTION_95	IF_1	CALL_2
0x40044ab	          0x4889c7	                            mov rdi, rax	      1788	refs.c	FUNCTION_95	IF_1	CALL_2
0x40044ae	      0xe805c1ffff	                         call sym.oidcpy	      1788	refs.c	FUNCTION_95	IF_1	CALL_2
0x40044b3	      0xb800000000	                              mov eax, 0	      1789	refs.c	FUNCTION_95	IF_1
0x40044b8	            0xeb41	                           jmp 0x40044fb	      1789	refs.c	FUNCTION_95	IF_1
0x40044ba	        0x488d4ddc	                   lea rcx, [rbp - 0x24]	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x40044be	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x40044c2	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x40044c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x40044ca	          0x4989c8	                             mov r8, rcx	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x40044cd	          0x4889d1	                            mov rcx, rdx	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x40044d0	      0xba01000000	                              mov edx, 1	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x40044d5	          0x4889c7	                            mov rdi, rax	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x40044d8	      0xe800000000	                          call 0x40044dd	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x40044dd	            0x85c0	                           test eax, eax	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x40044df	            0x7407	                            je 0x40044e8	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x40044e1	      0xb8ffffffff	                     mov eax, 0xffffffff	      1794	refs.c	FUNCTION_95	IF_3
0x40044e6	            0xeb13	                           jmp 0x40044fb	      1794	refs.c	FUNCTION_95	IF_3
0x40044e8	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1796	refs.c	FUNCTION_95	CALL_4
0x40044ec	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1796	refs.c	FUNCTION_95	CALL_4
0x40044f0	          0x4889d6	                            mov rsi, rdx	      1796	refs.c	FUNCTION_95	CALL_4
0x40044f3	          0x4889c7	                            mov rdi, rax	      1796	refs.c	FUNCTION_95	CALL_4
0x40044f6	      0xe800000000	                          call 0x40044fb	      1796	refs.c	FUNCTION_95	CALL_4
0x40044fb	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1797	refs.c	FUNCTION_95
0x40044ff	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1797	refs.c	FUNCTION_95
0x4004508	            0x7405	                            je 0x400450f	      1797	refs.c	FUNCTION_95
0x400450a	      0xe800000000	                          call 0x400450f	      1797	refs.c	FUNCTION_95
0x400450f	              0xc9	                                   leave	      1797	refs.c	FUNCTION_95
0x4004510	              0xc3	                                     ret	      1797	refs.c	FUNCTION_95
ref_transaction_free	IF,1:ELSE,0:FOR,1:WHILE,0:SWITCH,1:DO,0:CALL,6:functions,0	57
0x400276e	              0x55	                                push rbp	       951	refs.c	FUNCTION_53
0x400276f	          0x4889e5	                            mov rbp, rsp	       951	refs.c	FUNCTION_53
0x4002772	        0x4883ec20	                           sub rsp, 0x20	       951	refs.c	FUNCTION_53
0x4002776	        0x48897de8	             mov qword [rbp - 0x18], rdi	       951	refs.c	FUNCTION_53
0x400277a	      0x48837de800	               cmp qword [rbp - 0x18], 0	       954	refs.c	FUNCTION_53	IF_1
0x400277f	     0xf84b2000000	                            je 0x4002837	       954	refs.c	FUNCTION_53	IF_1
0x4002785	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       957	refs.c	FUNCTION_53	SWITCH_1
0x4002789	          0x8b4020	            mov eax, dword [rax + 0x20] 	       957	refs.c	FUNCTION_53	SWITCH_1
0x400278c	          0x83f801	                              cmp eax, 1	       957	refs.c	FUNCTION_53	SWITCH_1
0x400278f	            0x740c	                            je 0x400279d	       957	refs.c	FUNCTION_53	SWITCH_1
0x4002791	          0x83f801	                              cmp eax, 1	       957	refs.c	FUNCTION_53	SWITCH_1
0x4002794	            0x7225	                            jb 0x40027bb	       957	refs.c	FUNCTION_53	SWITCH_1
0x4002796	          0x83f802	                              cmp eax, 2	       957	refs.c	FUNCTION_53	SWITCH_1
0x4002799	            0x7420	                            je 0x40027bb	       957	refs.c	FUNCTION_53	SWITCH_1
0x400279b	            0xeb0f	                           jmp 0x40027ac	       957	refs.c	FUNCTION_53	SWITCH_1
0x400279d	      0xbf00000000	                              mov edi, 0	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x40027a2	      0xb800000000	                              mov eax, 0	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x40027a7	      0xe800000000	                          call 0x40027ac	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x40027ac	      0xbf00000000	                              mov edi, 0	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x40027b1	      0xb800000000	                              mov eax, 0	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x40027b6	      0xe800000000	                          call 0x40027bb	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x40027bb	              0x90	                                     nop	       961	refs.c	FUNCTION_53	SWITCH_1
0x40027bc	    0x48c745f80000	                  mov qword [rbp - 8], 0	       970	refs.c	FUNCTION_53	FOR_1
0x40027c4	            0xeb45	                           jmp 0x400280b	       970	refs.c	FUNCTION_53	FOR_1
0x40027c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x40027ca	        0x488b4008	                mov rax, qword [rax + 8]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x40027ce	        0x488b55f8	                mov rdx, qword [rbp - 8]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x40027d2	        0x48c1e203	                              shl rdx, 3	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x40027d6	          0x4801d0	                            add rax, rdx	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x40027d9	          0x488b00	                    mov rax, qword [rax]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x40027dc	        0x488b4040	            mov rax, qword [rax + 0x40] 	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x40027e0	          0x4889c7	                            mov rdi, rax	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x40027e3	      0xe800000000	                          call 0x40027e8	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x40027e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x40027ec	        0x488b4008	                mov rax, qword [rax + 8]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x40027f0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x40027f4	        0x48c1e203	                              shl rdx, 3	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x40027f8	          0x4801d0	                            add rax, rdx	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x40027fb	          0x488b00	                    mov rax, qword [rax]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x40027fe	          0x4889c7	                            mov rdi, rax	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x4002801	      0xe800000000	                          call 0x4002806	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x4002806	      0x488345f801	                  add qword [rbp - 8], 1	       970	refs.c	FUNCTION_53	FOR_1
0x400280b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       970	refs.c	FUNCTION_53	FOR_1
0x400280f	        0x488b4018	            mov rax, qword [rax + 0x18] 	       970	refs.c	FUNCTION_53	FOR_1
0x4002813	        0x483b45f8	                cmp rax, qword [rbp - 8]	       970	refs.c	FUNCTION_53	FOR_1
0x4002817	            0x77ad	                            ja 0x40027c6	       970	refs.c	FUNCTION_53	FOR_1
0x4002819	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       974	refs.c	FUNCTION_53	CALL_5
0x400281d	        0x488b4008	                mov rax, qword [rax + 8]	       974	refs.c	FUNCTION_53	CALL_5
0x4002821	          0x4889c7	                            mov rdi, rax	       974	refs.c	FUNCTION_53	CALL_5
0x4002824	      0xe800000000	                          call 0x4002829	       974	refs.c	FUNCTION_53	CALL_5
0x4002829	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       975	refs.c	FUNCTION_53	CALL_6
0x400282d	          0x4889c7	                            mov rdi, rax	       975	refs.c	FUNCTION_53	CALL_6
0x4002830	      0xe800000000	                          call 0x4002835	       975	refs.c	FUNCTION_53	CALL_6
0x4002835	            0xeb01	                           jmp 0x4002838	       975	refs.c	FUNCTION_53	CALL_6
0x4002837	              0x90	                                     nop	       955	refs.c	FUNCTION_53	IF_1
0x4002838	              0xc9	                                   leave	       976	refs.c	FUNCTION_53
0x4002839	              0xc3	                                     ret	       976	refs.c	FUNCTION_53
read_ref_at_ent	IF,10:ELSE,2:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,14:functions,0	185
0x4002203	              0x55	                                push rbp	       837	refs.c	FUNCTION_48
0x4002204	          0x4889e5	                            mov rbp, rsp	       837	refs.c	FUNCTION_48
0x4002207	              0x53	                                push rbx	       837	refs.c	FUNCTION_48
0x4002208	        0x4883ec48	                           sub rsp, 0x48	       837	refs.c	FUNCTION_48
0x400220c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       837	refs.c	FUNCTION_48
0x4002210	        0x488975d0	             mov qword [rbp - 0x30], rsi	       837	refs.c	FUNCTION_48
0x4002214	        0x488955c8	             mov qword [rbp - 0x38], rdx	       837	refs.c	FUNCTION_48
0x4002218	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       837	refs.c	FUNCTION_48
0x400221c	        0x448945bc	             mov dword [rbp - 0x44], r8d	       837	refs.c	FUNCTION_48
0x4002220	        0x4c894db0	              mov qword [rbp - 0x50], r9	       837	refs.c	FUNCTION_48
0x4002224	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       838	refs.c	FUNCTION_48
0x4002228	        0x488945e8	             mov qword [rbp - 0x18], rax	       838	refs.c	FUNCTION_48
0x400222c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       840	refs.c	FUNCTION_48
0x4002230	          0x8b4014	            mov eax, dword [rax + 0x14] 	       840	refs.c	FUNCTION_48
0x4002233	          0x8d5001	                      lea edx, [rax + 1]	       840	refs.c	FUNCTION_48
0x4002236	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       840	refs.c	FUNCTION_48
0x400223a	          0x895014	             mov dword [rax + 0x14], edx	       840	refs.c	FUNCTION_48
0x400223d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       841	refs.c	FUNCTION_48
0x4002241	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       841	refs.c	FUNCTION_48
0x4002244	          0x89504c	             mov dword [rax + 0x4c], edx	       841	refs.c	FUNCTION_48
0x4002247	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       842	refs.c	FUNCTION_48
0x400224b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       842	refs.c	FUNCTION_48
0x400224f	        0x48895050	             mov qword [rax + 0x50], rdx	       842	refs.c	FUNCTION_48
0x4002253	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       844	refs.c	FUNCTION_48	IF_1
0x4002257	        0x488b4008	                mov rax, qword [rax + 8]	       844	refs.c	FUNCTION_48	IF_1
0x400225b	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       844	refs.c	FUNCTION_48	IF_1
0x400225f	            0x730f	                           jae 0x4002270	       844	refs.c	FUNCTION_48	IF_1
0x4002261	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       844	refs.c	FUNCTION_48	IF_1
0x4002265	          0x8b4010	            mov eax, dword [rax + 0x10] 	       844	refs.c	FUNCTION_48	IF_1
0x4002268	            0x85c0	                           test eax, eax	       844	refs.c	FUNCTION_48	IF_1
0x400226a	     0xf85d7010000	                           jne 0x4002447	       844	refs.c	FUNCTION_48	IF_1
0x4002270	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x4002274	        0x488b4058	            mov rax, qword [rax + 0x58] 	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x4002278	          0x4885c0	                           test rax, rax	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x400227b	            0x7417	                            je 0x4002294	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x400227d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       846	refs.c	FUNCTION_48	IF_1	CALL_1
0x4002281	        0x488b5858	            mov rbx, qword [rax + 0x58] 	       846	refs.c	FUNCTION_48	IF_1	CALL_1
0x4002285	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       846	refs.c	FUNCTION_48	IF_1	CALL_1
0x4002289	          0x4889c7	                            mov rdi, rax	       846	refs.c	FUNCTION_48	IF_1	CALL_1
0x400228c	      0xe800000000	                          call 0x4002291	       846	refs.c	FUNCTION_48	IF_1	CALL_1
0x4002291	          0x488903	                    mov qword [rbx], rax	       846	refs.c	FUNCTION_48	IF_1	CALL_1
0x4002294	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       847	refs.c	FUNCTION_48	IF_1	IF_3
0x4002298	        0x488b4060	            mov rax, qword [rax + 0x60] 	       847	refs.c	FUNCTION_48	IF_1	IF_3
0x400229c	          0x4885c0	                           test rax, rax	       847	refs.c	FUNCTION_48	IF_1	IF_3
0x400229f	            0x740f	                            je 0x40022b0	       847	refs.c	FUNCTION_48	IF_1	IF_3
0x40022a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       848	refs.c	FUNCTION_48	IF_1	IF_3
0x40022a5	        0x488b4060	            mov rax, qword [rax + 0x60] 	       848	refs.c	FUNCTION_48	IF_1	IF_3
0x40022a9	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       848	refs.c	FUNCTION_48	IF_1	IF_3
0x40022ad	          0x488910	                    mov qword [rax], rdx	       848	refs.c	FUNCTION_48	IF_1	IF_3
0x40022b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       849	refs.c	FUNCTION_48	IF_1	IF_4
0x40022b4	        0x488b4068	            mov rax, qword [rax + 0x68] 	       849	refs.c	FUNCTION_48	IF_1	IF_4
0x40022b8	          0x4885c0	                           test rax, rax	       849	refs.c	FUNCTION_48	IF_1	IF_4
0x40022bb	            0x740d	                            je 0x40022ca	       849	refs.c	FUNCTION_48	IF_1	IF_4
0x40022bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       850	refs.c	FUNCTION_48	IF_1	IF_4
0x40022c1	        0x488b4068	            mov rax, qword [rax + 0x68] 	       850	refs.c	FUNCTION_48	IF_1	IF_4
0x40022c5	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       850	refs.c	FUNCTION_48	IF_1	IF_4
0x40022c8	            0x8910	                    mov dword [rax], edx	       850	refs.c	FUNCTION_48	IF_1	IF_4
0x40022ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       851	refs.c	FUNCTION_48	IF_1	IF_5
0x40022ce	        0x488b4070	            mov rax, qword [rax + 0x70] 	       851	refs.c	FUNCTION_48	IF_1	IF_5
0x40022d2	          0x4885c0	                           test rax, rax	       851	refs.c	FUNCTION_48	IF_1	IF_5
0x40022d5	            0x7414	                            je 0x40022eb	       851	refs.c	FUNCTION_48	IF_1	IF_5
0x40022d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       852	refs.c	FUNCTION_48	IF_1	IF_5
0x40022db	        0x488b4070	            mov rax, qword [rax + 0x70] 	       852	refs.c	FUNCTION_48	IF_1	IF_5
0x40022df	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       852	refs.c	FUNCTION_48	IF_1	IF_5
0x40022e3	          0x8b5214	            mov edx, dword [rdx + 0x14] 	       852	refs.c	FUNCTION_48	IF_1	IF_5
0x40022e6	          0x83ea01	                              sub edx, 1	       852	refs.c	FUNCTION_48	IF_1	IF_5
0x40022e9	            0x8910	                    mov dword [rax], edx	       852	refs.c	FUNCTION_48	IF_1	IF_5
0x40022eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       857	refs.c	FUNCTION_48	IF_1	IF_6	CALL_2
0x40022ef	        0x4883c024	                           add rax, 0x24	       857	refs.c	FUNCTION_48	IF_1	IF_6	CALL_2
0x40022f3	          0x4889c7	                            mov rdi, rax	       857	refs.c	FUNCTION_48	IF_1	IF_6	CALL_2
0x40022f6	      0xe86be2ffff	                    call sym.is_null_oid	       857	refs.c	FUNCTION_48	IF_1	IF_6	CALL_2
0x40022fb	            0x85c0	                           test eax, eax	       857	refs.c	FUNCTION_48	IF_1	IF_6	CALL_2
0x40022fd	            0x757d	                           jne 0x400237c	       857	refs.c	FUNCTION_48	IF_1	IF_6	CALL_2
0x40022ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       858	refs.c	FUNCTION_48	IF_1	IF_6	CALL_3
0x4002303	        0x488b4018	            mov rax, qword [rax + 0x18] 	       858	refs.c	FUNCTION_48	IF_1	IF_6	CALL_3
0x4002307	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       858	refs.c	FUNCTION_48	IF_1	IF_6	CALL_3
0x400230b	          0x4889d6	                            mov rsi, rdx	       858	refs.c	FUNCTION_48	IF_1	IF_6	CALL_3
0x400230e	          0x4889c7	                            mov rdi, rax	       858	refs.c	FUNCTION_48	IF_1	IF_6	CALL_3
0x4002311	      0xe8a2e2ffff	                         call sym.oidcpy	       858	refs.c	FUNCTION_48	IF_1	IF_6	CALL_3
0x4002316	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       859	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_4
0x400231a	        0x488d5024	                   lea rdx, [rax + 0x24]	       859	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_4
0x400231e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       859	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_4
0x4002322	          0x4889c6	                            mov rsi, rax	       859	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_4
0x4002325	          0x4889d7	                            mov rdi, rdx	       859	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_4
0x4002328	      0xe814e2ffff	                         call sym.oidcmp	       859	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_4
0x400232d	            0x85c0	                           test eax, eax	       859	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_4
0x400232f	     0xf84d2000000	                            je 0x4002407	       859	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_4
0x4002335	      0xbf05000000	                              mov edi, 5	       861	refs.c	FUNCTION_48	IF_1	IF_6	CALL_6
0x400233a	      0xe800000000	                          call 0x400233f	       861	refs.c	FUNCTION_48	IF_1	IF_6	CALL_6
0x400233f	          0x4889c2	                            mov rdx, rax	       861	refs.c	FUNCTION_48	IF_1	IF_6	CALL_6
0x4002342	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4002346	          0x8b484c	            mov ecx, dword [rax + 0x4c] 	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4002349	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x400234d	        0x488b4050	            mov rax, qword [rax + 0x50] 	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4002351	            0x89ce	                            mov esi, ecx	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4002353	          0x4889c7	                            mov rdi, rax	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4002356	      0xe800000000	                          call 0x400235b	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x400235b	          0x4889c2	                            mov rdx, rax	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x400235e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4002362	          0x488b00	                    mov rax, qword [rax]	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4002365	          0x4889c6	                            mov rsi, rax	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4002368	      0xbf00000000	                              mov edi, 0	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x400236d	      0xb800000000	                              mov eax, 0	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4002372	      0xe800000000	                          call 0x4002377	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4002377	      0xe98b000000	                           jmp 0x4002407	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x400237c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       863	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x4002380	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       863	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x4002384	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       863	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x4002388	        0x488b4008	                mov rax, qword [rax + 8]	       863	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x400238c	          0x4839c2	                            cmp rdx, rax	       863	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x400238f	            0x7519	                           jne 0x40023aa	       863	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x4002391	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       864	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x4002395	        0x488b4018	            mov rax, qword [rax + 0x18] 	       864	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x4002399	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       864	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x400239d	          0x4889d6	                            mov rsi, rdx	       864	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x40023a0	          0x4889c7	                            mov rdi, rax	       864	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x40023a3	      0xe810e2ffff	                         call sym.oidcpy	       864	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x40023a8	            0xeb5d	                           jmp 0x4002407	       864	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x40023aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       865	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_8
0x40023ae	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       865	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_8
0x40023b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       865	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_8
0x40023b6	          0x4889d6	                            mov rsi, rdx	       865	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_8
0x40023b9	          0x4889c7	                            mov rdi, rax	       865	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_8
0x40023bc	      0xe880e1ffff	                         call sym.oidcmp	       865	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_8
0x40023c1	            0x85c0	                           test eax, eax	       865	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_8
0x40023c3	            0x7442	                            je 0x4002407	       865	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_8
0x40023c5	      0xbf05000000	                              mov edi, 5	       868	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9
0x40023ca	      0xe800000000	                          call 0x40023cf	       868	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9
0x40023cf	          0x4889c2	                            mov rdx, rax	       868	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9
0x40023d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x40023d6	          0x8b484c	            mov ecx, dword [rax + 0x4c] 	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x40023d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x40023dd	        0x488b4050	            mov rax, qword [rax + 0x50] 	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x40023e1	            0x89ce	                            mov esi, ecx	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x40023e3	          0x4889c7	                            mov rdi, rax	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x40023e6	      0xe800000000	                          call 0x40023eb	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x40023eb	          0x4889c2	                            mov rdx, rax	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x40023ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x40023f2	          0x488b00	                    mov rax, qword [rax]	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x40023f5	          0x4889c6	                            mov rsi, rax	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x40023f8	      0xbf00000000	                              mov edi, 0	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x40023fd	      0xb800000000	                              mov eax, 0	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4002402	      0xe800000000	                          call 0x4002407	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4002407	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       869	refs.c	FUNCTION_48	IF_1	CALL_11
0x400240b	        0x488d5024	                   lea rdx, [rax + 0x24]	       869	refs.c	FUNCTION_48	IF_1	CALL_11
0x400240f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       869	refs.c	FUNCTION_48	IF_1	CALL_11
0x4002413	          0x4889c6	                            mov rsi, rax	       869	refs.c	FUNCTION_48	IF_1	CALL_11
0x4002416	          0x4889d7	                            mov rdi, rdx	       869	refs.c	FUNCTION_48	IF_1	CALL_11
0x4002419	      0xe89ae1ffff	                         call sym.oidcpy	       869	refs.c	FUNCTION_48	IF_1	CALL_11
0x400241e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       870	refs.c	FUNCTION_48	IF_1	CALL_12
0x4002422	        0x488d5038	                   lea rdx, [rax + 0x38]	       870	refs.c	FUNCTION_48	IF_1	CALL_12
0x4002426	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       870	refs.c	FUNCTION_48	IF_1	CALL_12
0x400242a	          0x4889c6	                            mov rsi, rax	       870	refs.c	FUNCTION_48	IF_1	CALL_12
0x400242d	          0x4889d7	                            mov rdi, rdx	       870	refs.c	FUNCTION_48	IF_1	CALL_12
0x4002430	      0xe883e1ffff	                         call sym.oidcpy	       870	refs.c	FUNCTION_48	IF_1	CALL_12
0x4002435	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       871	refs.c	FUNCTION_48	IF_1
0x4002439	    0xc74020010000	               mov dword [rax + 0x20], 1	       871	refs.c	FUNCTION_48	IF_1
0x4002440	      0xb801000000	                              mov eax, 1	       872	refs.c	FUNCTION_48	IF_1
0x4002445	            0xeb4f	                           jmp 0x4002496	       872	refs.c	FUNCTION_48	IF_1
0x4002447	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       874	refs.c	FUNCTION_48	CALL_13
0x400244b	        0x488d5024	                   lea rdx, [rax + 0x24]	       874	refs.c	FUNCTION_48	CALL_13
0x400244f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       874	refs.c	FUNCTION_48	CALL_13
0x4002453	          0x4889c6	                            mov rsi, rax	       874	refs.c	FUNCTION_48	CALL_13
0x4002456	          0x4889d7	                            mov rdi, rdx	       874	refs.c	FUNCTION_48	CALL_13
0x4002459	      0xe85ae1ffff	                         call sym.oidcpy	       874	refs.c	FUNCTION_48	CALL_13
0x400245e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       875	refs.c	FUNCTION_48	CALL_14
0x4002462	        0x488d5038	                   lea rdx, [rax + 0x38]	       875	refs.c	FUNCTION_48	CALL_14
0x4002466	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       875	refs.c	FUNCTION_48	CALL_14
0x400246a	          0x4889c6	                            mov rsi, rax	       875	refs.c	FUNCTION_48	CALL_14
0x400246d	          0x4889d7	                            mov rdi, rdx	       875	refs.c	FUNCTION_48	CALL_14
0x4002470	      0xe843e1ffff	                         call sym.oidcpy	       875	refs.c	FUNCTION_48	CALL_14
0x4002475	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       876	refs.c	FUNCTION_48	IF_10
0x4002479	          0x8b4010	            mov eax, dword [rax + 0x10] 	       876	refs.c	FUNCTION_48	IF_10
0x400247c	            0x85c0	                           test eax, eax	       876	refs.c	FUNCTION_48	IF_10
0x400247e	            0x7e11	                           jle 0x4002491	       876	refs.c	FUNCTION_48	IF_10
0x4002480	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       877	refs.c	FUNCTION_48	IF_10
0x4002484	          0x8b4010	            mov eax, dword [rax + 0x10] 	       877	refs.c	FUNCTION_48	IF_10
0x4002487	          0x8d50ff	                      lea edx, [rax - 1]	       877	refs.c	FUNCTION_48	IF_10
0x400248a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       877	refs.c	FUNCTION_48	IF_10
0x400248e	          0x895010	             mov dword [rax + 0x10], edx	       877	refs.c	FUNCTION_48	IF_10
0x4002491	      0xb800000000	                              mov eax, 0	       878	refs.c	FUNCTION_48
0x4002496	        0x4883c448	                           add rsp, 0x48	       879	refs.c	FUNCTION_48
0x400249a	              0x5b	                                 pop rbx	       879	refs.c	FUNCTION_48
0x400249b	              0x5d	                                 pop rbp	       879	refs.c	FUNCTION_48
0x400249c	              0xc3	                                     ret	       879	refs.c	FUNCTION_48
get_main_ref_store	IF,2:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	32
0x400408f	              0x55	                                push rbp	      1668	refs.c	FUNCTION_89
0x4004090	          0x4889e5	                            mov rbp, rsp	      1668	refs.c	FUNCTION_89
0x4004093	        0x4883ec10	                           sub rsp, 0x10	      1668	refs.c	FUNCTION_89
0x4004097	        0x48897df8	                mov qword [rbp - 8], rdi	      1668	refs.c	FUNCTION_89
0x400409b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1669	refs.c	FUNCTION_89	IF_1
0x400409f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x40040a3	          0x4885c0	                           test rax, rax	      1669	refs.c	FUNCTION_89	IF_1
0x40040a6	            0x740a	                            je 0x40040b2	      1669	refs.c	FUNCTION_89	IF_1
0x40040a8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1670	refs.c	FUNCTION_89	IF_1
0x40040ac	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1670	refs.c	FUNCTION_89	IF_1
0x40040b0	            0xeb4c	                           jmp 0x40040fe	      1670	refs.c	FUNCTION_89	IF_1
0x40040b2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1672	refs.c	FUNCTION_89	IF_2
0x40040b6	          0x488b00	                    mov rax, qword [rax]	      1672	refs.c	FUNCTION_89	IF_2
0x40040b9	          0x4885c0	                           test rax, rax	      1672	refs.c	FUNCTION_89	IF_2
0x40040bc	            0x7519	                           jne 0x40040d7	      1672	refs.c	FUNCTION_89	IF_2
0x40040be	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40040c3	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40040c8	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40040cd	      0xb800000000	                              mov eax, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40040d2	      0xe800000000	                          call 0x40040d7	      1673	refs.c	FUNCTION_89	IF_2
0x40040d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1675	refs.c	FUNCTION_89	CALL_1
0x40040db	          0x488b00	                    mov rax, qword [rax]	      1675	refs.c	FUNCTION_89	CALL_1
0x40040de	      0xbe0f000000	                            mov esi, 0xf	      1675	refs.c	FUNCTION_89	CALL_1
0x40040e3	          0x4889c7	                            mov rdi, rax	      1675	refs.c	FUNCTION_89	CALL_1
0x40040e6	      0xe840ffffff	                 call sym.ref_store_init	      1675	refs.c	FUNCTION_89	CALL_1
0x40040eb	          0x4889c2	                            mov rdx, rax	      1675	refs.c	FUNCTION_89	CALL_1
0x40040ee	        0x488b45f8	                mov rax, qword [rbp - 8]	      1675	refs.c	FUNCTION_89	CALL_1
0x40040f2	        0x48895018	             mov qword [rax + 0x18], rdx	      1675	refs.c	FUNCTION_89	CALL_1
0x40040f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1676	refs.c	FUNCTION_89
0x40040fa	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1676	refs.c	FUNCTION_89
0x40040fe	              0xc9	                                   leave	      1677	refs.c	FUNCTION_89
0x40040ff	              0xc3	                                     ret	      1677	refs.c	FUNCTION_89
hashcmp	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	13
0x4000517	              0x55	                                push rbp	       974	cache.h	FUNCTION_167
0x4000518	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_167
0x400051b	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_167
0x400051f	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_167
0x4000523	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_167
0x4000527	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_167	CALL_1
0x400052b	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_167	CALL_1
0x400052f	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_167	CALL_1
0x4000534	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_167	CALL_1
0x4000537	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_167	CALL_1
0x400053a	      0xe800000000	                          call 0x400053f	       975	cache.h	FUNCTION_167	CALL_1
0x400053f	              0xc9	                                   leave	       976	cache.h	FUNCTION_167
0x4000540	              0xc3	                                     ret	       976	cache.h	FUNCTION_167
oidcpy	IF,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:DO,0:CALL,1:functions,0	13
0x40005b8	              0x55	                                push rbp	       999	cache.h	FUNCTION_172
0x40005b9	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_172
0x40005bc	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_172
0x40005c0	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_172
0x40005c4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_172
0x40005c8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_172	CALL_1
0x40005cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_172	CALL_1
0x40005d0	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_172	CALL_1
0x40005d3	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_172	CALL_1
0x40005d6	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_172	CALL_1
0x40005db	              0x90	                                     nop	      1001	cache.h	FUNCTION_172
0x40005dc	              0xc9	                                   leave	      1001	cache.h	FUNCTION_172
0x40005dd	              0xc3	                                     ret	      1001	cache.h	FUNCTION_172
