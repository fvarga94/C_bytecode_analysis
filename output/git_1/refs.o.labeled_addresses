ref_is_hidden	functions,0:ELSE,1:DO,0:IF,4:WHILE,0:CALL,1:FOR,1:SWITCH,0	46
0x40014d8	    0x488b05000000	            mov rax, qword [0x040014df] 	      1249	refs.c	FUNCTION_63	IF_1
0x40014df	          0x4885c0	                           test rax, rax	      1249	refs.c	FUNCTION_63	IF_1
0x40014e2	            0x7468	                            je 0x400154c	      1249	refs.c	FUNCTION_63	IF_1
0x40014e4	        0x448b4808	                mov r9d, dword [rax + 8]	      1251	refs.c	FUNCTION_63	FOR_1
0x40014e8	        0x4183e901	                              sub r9d, 1	      1251	refs.c	FUNCTION_63	FOR_1
0x40014ec	            0x7864	                            js 0x4001552	      1251	refs.c	FUNCTION_63	FOR_1
0x40014ee	          0x4c8b10	                    mov r10, qword [rax]	      1252	refs.c	FUNCTION_63	FOR_1
0x40014f1	          0x4963c1	                         movsxd rax, r9d	      1252	refs.c	FUNCTION_63	FOR_1
0x40014f4	        0x48c1e004	                              shl rax, 4	      1252	refs.c	FUNCTION_63	FOR_1
0x40014f8	        0x498b1402	              mov rdx, qword [r10 + rax]	      1252	refs.c	FUNCTION_63	FOR_1
0x40014fc	      0xb800000000	                              mov eax, 0	      1254	refs.c	FUNCTION_63	FOR_1
0x4001501	          0x803a21	                    cmp byte [rdx], 0x21	      1257	refs.c	FUNCTION_63	FOR_1	IF_2
0x4001504	            0x7509	                           jne 0x400150f	      1257	refs.c	FUNCTION_63	FOR_1	IF_2
0x4001506	        0x4883c201	                              add rdx, 1	      1259	refs.c	FUNCTION_63	FOR_1	IF_2
0x400150a	      0xb801000000	                              mov eax, 1	      1258	refs.c	FUNCTION_63	FOR_1	IF_2
0x400150f	          0x4889f9	                            mov rcx, rdi	      1266	refs.c	FUNCTION_63	FOR_1	ELSE_1
0x4001512	          0x803a5e	                    cmp byte [rdx], 0x5e	      1262	refs.c	FUNCTION_63	FOR_1	IF_3
0x4001515	            0x7507	                           jne 0x400151e	      1262	refs.c	FUNCTION_63	FOR_1	IF_3
0x4001517	        0x4883c201	                              add rdx, 1	      1264	refs.c	FUNCTION_63	FOR_1	IF_3
0x400151b	          0x4889f1	                            mov rcx, rsi	      1263	refs.c	FUNCTION_63	FOR_1	IF_3
0x400151e	          0x4885c9	                           test rcx, rcx	      1270	refs.c	FUNCTION_63	FOR_1	IF_4
0x4001521	            0x741d	                            je 0x4001540	      1270	refs.c	FUNCTION_63	FOR_1	IF_4
0x4001523	        0x440fb602	                   movzx r8d, byte [rdx]	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4001527	          0x4584c0	                           test r8b, r8b	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x400152a	            0x742c	                            je 0x4001558	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x400152c	        0x4883c101	                              add rcx, 1	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4001530	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4001534	        0x443a41ff	                 cmp r8b, byte [rcx - 1]	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4001538	            0x74e9	                            je 0x4001523	       488	git-compat-util.h	FUNCTION_131	DO_1
0x400153a	            0xeb04	                           jmp 0x4001540	       488	git-compat-util.h	FUNCTION_131	DO_1
0x400153c	          0x83f001	                              xor eax, 1	      1273	refs.c	FUNCTION_63	FOR_1	IF_4
0x400153f	              0xc3	                                     ret	      1273	refs.c	FUNCTION_63	FOR_1	IF_4
0x4001540	        0x4183e901	                              sub r9d, 1	      1251	refs.c	FUNCTION_63	FOR_1
0x4001544	            0x79ab	                           jns 0x40014f1	      1251	refs.c	FUNCTION_63	FOR_1
0x4001546	      0xb800000000	                              mov eax, 0	      1275	refs.c	FUNCTION_63
0x400154b	              0xc3	                                     ret	      1275	refs.c	FUNCTION_63
0x400154c	      0xb800000000	                              mov eax, 0	      1250	refs.c	FUNCTION_63	IF_1
0x4001551	              0xc3	                                     ret	      1250	refs.c	FUNCTION_63	IF_1
0x4001552	      0xb800000000	                              mov eax, 0	      1275	refs.c	FUNCTION_63
0x4001557	              0xc3	                                     ret	      1275	refs.c	FUNCTION_63
0x4001558	           0xfb611	                   movzx edx, byte [rcx]	      1272	refs.c	FUNCTION_63	FOR_1	IF_4
0x400155b	            0x84d2	                             test dl, dl	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x400155d	            0x74dd	                            je 0x400153c	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x400155f	          0x80fa2f	                            cmp dl, 0x2f	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x4001562	            0x75dc	                           jne 0x4001540	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x4001564	            0xebd6	                           jmp 0x400153c	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
head_ref_namespaced	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,5:FOR,0:SWITCH,0	44
0x4001b3a	            0x4154	                                push r12	       404	refs.c	FUNCTION_26
0x4001b3c	              0x55	                                push rbp	       404	refs.c	FUNCTION_26
0x4001b3d	              0x53	                                push rbx	       404	refs.c	FUNCTION_26
0x4001b3e	        0x4883ec50	                           sub rsp, 0x50	       404	refs.c	FUNCTION_26
0x4001b42	          0x4889fd	                            mov rbp, rdi	       404	refs.c	FUNCTION_26
0x4001b45	          0x4989f4	                            mov r12, rsi	       404	refs.c	FUNCTION_26
0x4001b48	    0x64488b042528	                mov rax, qword fs:[0x28]	       404	refs.c	FUNCTION_26
0x4001b51	      0x4889442448	             mov qword [rsp + 0x48], rax	       404	refs.c	FUNCTION_26
0x4001b56	            0x31c0	                            xor eax, eax	       404	refs.c	FUNCTION_26
0x4001b58	    0x48c744241000	               mov qword [rsp + 0x10], 0	       405	refs.c	FUNCTION_26
0x4001b61	    0x48c744241800	               mov qword [rsp + 0x18], 0	       405	refs.c	FUNCTION_26
0x4001b6a	    0x48c744242000	               mov qword [rsp + 0x20], 0	       405	refs.c	FUNCTION_26
0x4001b73	      0xe800000000	                          call 0x4001b78	       410	refs.c	FUNCTION_26	CALL_2
0x4001b78	          0x4889c2	                            mov rdx, rax	       410	refs.c	FUNCTION_26	CALL_2
0x4001b7b	      0xbe00000000	                              mov esi, 0	       410	refs.c	FUNCTION_26	CALL_2
0x4001b80	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       410	refs.c	FUNCTION_26	CALL_2
0x4001b85	      0xb800000000	                              mov eax, 0	       410	refs.c	FUNCTION_26	CALL_2
0x4001b8a	      0xe800000000	                          call 0x4001b8f	       410	refs.c	FUNCTION_26	CALL_2
0x4001b8f	      0x488d4c240c	                    lea rcx, [rsp + 0xc]	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x4001b94	      0x488d542430	                   lea rdx, [rsp + 0x30]	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x4001b99	      0xbe01000000	                              mov esi, 1	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x4001b9e	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x4001ba3	      0xe800000000	                          call 0x4001ba8	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x4001ba8	      0xbb00000000	                              mov ebx, 0	       406	refs.c	FUNCTION_26
0x4001bad	            0x85c0	                           test eax, eax	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x4001baf	            0x7515	                           jne 0x4001bc6	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x4001bb1	          0x4c89e1	                            mov rcx, r12	       412	refs.c	FUNCTION_26	CALL_4
0x4001bb4	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       412	refs.c	FUNCTION_26	CALL_4
0x4001bb8	      0x488d742430	                   lea rsi, [rsp + 0x30]	       412	refs.c	FUNCTION_26	CALL_4
0x4001bbd	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       412	refs.c	FUNCTION_26	CALL_4
0x4001bc2	            0xffd5	                                call rbp	       412	refs.c	FUNCTION_26	CALL_4
0x4001bc4	            0x89c3	                            mov ebx, eax	       412	refs.c	FUNCTION_26	CALL_4
0x4001bc6	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       413	refs.c	FUNCTION_26	CALL_5
0x4001bcb	      0xe800000000	                          call 0x4001bd0	       413	refs.c	FUNCTION_26	CALL_5
0x4001bd0	            0x89d8	                            mov eax, ebx	       416	refs.c	FUNCTION_26
0x4001bd2	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	       416	refs.c	FUNCTION_26
0x4001bd7	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       416	refs.c	FUNCTION_26
0x4001be0	            0x7405	                            je 0x4001be7	       416	refs.c	FUNCTION_26
0x4001be2	      0xe800000000	                          call 0x4001be7	       416	refs.c	FUNCTION_26
0x4001be7	        0x4883c450	                           add rsp, 0x50	       416	refs.c	FUNCTION_26
0x4001beb	              0x5b	                                 pop rbx	       416	refs.c	FUNCTION_26
0x4001bec	              0x5d	                                 pop rbp	       416	refs.c	FUNCTION_26
0x4001bed	            0x415c	                                 pop r12	       416	refs.c	FUNCTION_26
0x4001bef	              0xc3	                                     ret	       416	refs.c	FUNCTION_26
ref_transaction_abort	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,4:FOR,0:SWITCH,1	33
0x4002c9a	              0x55	                                push rbp	      1875	refs.c	FUNCTION_101
0x4002c9b	              0x53	                                push rbx	      1875	refs.c	FUNCTION_101
0x4002c9c	        0x4883ec08	                              sub rsp, 8	      1875	refs.c	FUNCTION_101
0x4002ca0	          0x4889fb	                            mov rbx, rdi	      1875	refs.c	FUNCTION_101
0x4002ca3	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4002ca6	          0x83f801	                              cmp eax, 1	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4002ca9	            0x740c	                            je 0x4002cb7	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4002cab	          0x83f801	                              cmp eax, 1	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4002cae	            0x7238	                            jb 0x4002ce8	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4002cb0	          0x83f802	                              cmp eax, 2	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4002cb3	            0x7415	                            je 0x4002cca	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4002cb5	            0xeb22	                           jmp 0x4002cd9	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4002cb7	          0x488b3f	                    mov rdi, qword [rdi]	      1876	refs.c	FUNCTION_101
0x4002cba	          0x488b07	                    mov rax, qword [rdi]	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x4002cbd	          0x4889f2	                            mov rdx, rsi	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x4002cc0	          0x4889de	                            mov rsi, rbx	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x4002cc3	          0xff5030	                 call qword [rax + 0x30]	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x4002cc6	            0x89c5	                            mov ebp, eax	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x4002cc8	            0xeb23	                           jmp 0x4002ced	      1885	refs.c	FUNCTION_101	SWITCH_1
0x4002cca	      0xbf00000000	                              mov edi, 0	      1887	refs.c	FUNCTION_101	SWITCH_1	CALL_2
0x4002ccf	      0xb800000000	                              mov eax, 0	      1887	refs.c	FUNCTION_101	SWITCH_1	CALL_2
0x4002cd4	      0xe800000000	                          call 0x4002cd9	      1887	refs.c	FUNCTION_101	SWITCH_1	CALL_2
0x4002cd9	      0xbf00000000	                              mov edi, 0	      1890	refs.c	FUNCTION_101	SWITCH_1	CALL_3
0x4002cde	      0xb800000000	                              mov eax, 0	      1890	refs.c	FUNCTION_101	SWITCH_1	CALL_3
0x4002ce3	      0xe800000000	                          call 0x4002ce8	      1890	refs.c	FUNCTION_101	SWITCH_1	CALL_3
0x4002ce8	      0xbd00000000	                              mov ebp, 0	      1877	refs.c	FUNCTION_101
0x4002ced	          0x4889df	                            mov rdi, rbx	      1894	refs.c	FUNCTION_101	CALL_4
0x4002cf0	      0xe800000000	                          call 0x4002cf5	      1894	refs.c	FUNCTION_101	CALL_4
0x4002cf5	            0x89e8	                            mov eax, ebp	      1896	refs.c	FUNCTION_101
0x4002cf7	        0x4883c408	                              add rsp, 8	      1896	refs.c	FUNCTION_101
0x4002cfb	              0x5b	                                 pop rbx	      1896	refs.c	FUNCTION_101
0x4002cfc	              0x5d	                                 pop rbp	      1896	refs.c	FUNCTION_101
0x4002cfd	              0xc3	                                     ret	      1896	refs.c	FUNCTION_101
read_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	7
0x4001b1f	        0x4883ec08	                              sub rsp, 8	       238	refs.c	FUNCTION_11
0x4001b23	          0x4889f2	                            mov rdx, rsi	       238	refs.c	FUNCTION_11
0x4001b26	      0xb900000000	                              mov ecx, 0	       239	refs.c	FUNCTION_11	CALL_1
0x4001b2b	      0xbe01000000	                              mov esi, 1	       239	refs.c	FUNCTION_11	CALL_1
0x4001b30	      0xe800000000	                          call 0x4001b35	       239	refs.c	FUNCTION_11	CALL_1
0x4001b35	        0x4883c408	                              add rsp, 8	       240	refs.c	FUNCTION_11
0x4001b39	              0xc3	                                     ret	       240	refs.c	FUNCTION_11
refname_match	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,3:FOR,1:SWITCH,0	40
0x4000c1b	            0x4155	                                push r13	       493	refs.c	FUNCTION_31
0x4000c1d	            0x4154	                                push r12	       493	refs.c	FUNCTION_31
0x4000c1f	              0x55	                                push rbp	       493	refs.c	FUNCTION_31
0x4000c20	              0x53	                                push rbx	       493	refs.c	FUNCTION_31
0x4000c21	        0x4883ec08	                              sub rsp, 8	       493	refs.c	FUNCTION_31
0x4000c25	          0x4889fd	                            mov rbp, rdi	       493	refs.c	FUNCTION_31
0x4000c28	      0xb800000000	                              mov eax, 0	       495	refs.c	FUNCTION_31	CALL_1
0x4000c2d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       495	refs.c	FUNCTION_31	CALL_1
0x4000c34	            0xf2ae	              repne scasb al, byte [rdi]	       495	refs.c	FUNCTION_31	CALL_1
0x4000c36	    0x488b3d000000	            mov rdi, qword [0x04000c3d] 	       497	refs.c	FUNCTION_31	FOR_1
0x4000c3d	          0x4885ff	                           test rdi, rdi	       497	refs.c	FUNCTION_31	FOR_1
0x4000c40	            0x7441	                            je 0x4000c83	       497	refs.c	FUNCTION_31	FOR_1
0x4000c42	          0x48f7d1	                                 not rcx	       497	refs.c	FUNCTION_31	FOR_1
0x4000c45	        0x448d69ff	                     lea r13d, [rcx - 1]	       497	refs.c	FUNCTION_31	FOR_1
0x4000c49	          0x4989f4	                            mov r12, rsi	       497	refs.c	FUNCTION_31	FOR_1
0x4000c4c	      0xbb00000000	                              mov ebx, 0	       497	refs.c	FUNCTION_31	FOR_1
0x4000c51	          0x4889ea	                            mov rdx, rbp	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4000c54	          0x4489ee	                           mov esi, r13d	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4000c57	      0xb800000000	                              mov eax, 0	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4000c5c	      0xe800000000	                          call 0x4000c61	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4000c61	          0x4889c6	                            mov rsi, rax	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4000c64	          0x4c89e7	                            mov rdi, r12	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4000c67	      0xe800000000	                          call 0x4000c6c	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4000c6c	            0x85c0	                           test eax, eax	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4000c6e	            0x741a	                            je 0x4000c8a	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x4000c70	        0x4883c308	                              add rbx, 8	       497	refs.c	FUNCTION_31	FOR_1
0x4000c74	          0x488b3b	                    mov rdi, qword [rbx]	       497	refs.c	FUNCTION_31	FOR_1
0x4000c77	          0x4885ff	                           test rdi, rdi	       497	refs.c	FUNCTION_31	FOR_1
0x4000c7a	            0x75d5	                           jne 0x4000c51	       497	refs.c	FUNCTION_31	FOR_1
0x4000c7c	      0xb800000000	                              mov eax, 0	       503	refs.c	FUNCTION_31
0x4000c81	            0xeb0c	                           jmp 0x4000c8f	       503	refs.c	FUNCTION_31
0x4000c83	      0xb800000000	                              mov eax, 0	       503	refs.c	FUNCTION_31
0x4000c88	            0xeb05	                           jmp 0x4000c8f	       503	refs.c	FUNCTION_31
0x4000c8a	      0xb801000000	                              mov eax, 1	       499	refs.c	FUNCTION_31	FOR_1	IF_1
0x4000c8f	        0x4883c408	                              add rsp, 8	       504	refs.c	FUNCTION_31
0x4000c93	              0x5b	                                 pop rbx	       504	refs.c	FUNCTION_31
0x4000c94	              0x5d	                                 pop rbp	       504	refs.c	FUNCTION_31
0x4000c95	            0x415c	                                 pop r12	       504	refs.c	FUNCTION_31
0x4000c97	            0x415d	                                 pop r13	       504	refs.c	FUNCTION_31
0x4000c99	              0xc3	                                     ret	       504	refs.c	FUNCTION_31
for_each_rawref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	15
0x400207c	              0x55	                                push rbp	      1459	refs.c	FUNCTION_79
0x400207d	              0x53	                                push rbx	      1459	refs.c	FUNCTION_79
0x400207e	        0x4883ec08	                              sub rsp, 8	      1459	refs.c	FUNCTION_79
0x4002082	          0x4889fb	                            mov rbx, rdi	      1459	refs.c	FUNCTION_79
0x4002085	          0x4889f5	                            mov rbp, rsi	      1459	refs.c	FUNCTION_79
0x4002088	    0x488b3d000000	            mov rdi, qword [0x0400208f] 	      1460	refs.c	FUNCTION_79	CALL_2
0x400208f	      0xe800000000	                          call 0x4002094	      1460	refs.c	FUNCTION_79	CALL_2
0x4002094	          0x4889ea	                            mov rdx, rbp	      1460	refs.c	FUNCTION_79	CALL_2
0x4002097	          0x4889de	                            mov rsi, rbx	      1460	refs.c	FUNCTION_79	CALL_2
0x400209a	          0x4889c7	                            mov rdi, rax	      1460	refs.c	FUNCTION_79	CALL_2
0x400209d	      0xe800000000	                          call 0x40020a2	      1460	refs.c	FUNCTION_79	CALL_2
0x40020a2	        0x4883c408	                              add rsp, 8	      1461	refs.c	FUNCTION_79
0x40020a6	              0x5b	                                 pop rbx	      1461	refs.c	FUNCTION_79
0x40020a7	              0x5d	                                 pop rbp	      1461	refs.c	FUNCTION_79
0x40020a8	              0xc3	                                     ret	      1461	refs.c	FUNCTION_79
for_each_glob_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	6
0x4001ee2	        0x4883ec08	                              sub rsp, 8	       469	refs.c	FUNCTION_29
0x4001ee6	          0x4889d1	                            mov rcx, rdx	       470	refs.c	FUNCTION_29	CALL_1
0x4001ee9	      0xba00000000	                              mov edx, 0	       470	refs.c	FUNCTION_29	CALL_1
0x4001eee	      0xe800000000	                          call 0x4001ef3	       470	refs.c	FUNCTION_29	CALL_1
0x4001ef3	        0x4883c408	                              add rsp, 8	       471	refs.c	FUNCTION_29
0x4001ef7	              0xc3	                                     ret	       471	refs.c	FUNCTION_29
for_each_fullref_in	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,2:FOR,0:SWITCH,0	26
0x4001f27	            0x4155	                                push r13	      1413	refs.c	FUNCTION_74
0x4001f29	            0x4154	                                push r12	      1413	refs.c	FUNCTION_74
0x4001f2b	              0x55	                                push rbp	      1413	refs.c	FUNCTION_74
0x4001f2c	              0x53	                                push rbx	      1413	refs.c	FUNCTION_74
0x4001f2d	        0x4883ec08	                              sub rsp, 8	      1413	refs.c	FUNCTION_74
0x4001f31	          0x4889fb	                            mov rbx, rdi	      1413	refs.c	FUNCTION_74
0x4001f34	          0x4889f5	                            mov rbp, rsi	      1413	refs.c	FUNCTION_74
0x4001f37	          0x4989d4	                            mov r12, rdx	      1413	refs.c	FUNCTION_74
0x4001f3a	          0x4189cd	                           mov r13d, ecx	      1413	refs.c	FUNCTION_74
0x4001f3d	    0x488b3d000000	            mov rdi, qword [0x04001f44] 	      1418	refs.c	FUNCTION_74	CALL_2
0x4001f44	      0xe800000000	                          call 0x4001f49	      1418	refs.c	FUNCTION_74	CALL_2
0x4001f49	          0x4585ed	                         test r13d, r13d	      1418	refs.c	FUNCTION_74	CALL_2
0x4001f4c	          0x4d89e1	                             mov r9, r12	      1418	refs.c	FUNCTION_74	CALL_2
0x4001f4f	        0x410f95c0	                               setne r8b	      1418	refs.c	FUNCTION_74	CALL_2
0x4001f53	        0x450fb6c0	                          movzx r8d, r8b	      1418	refs.c	FUNCTION_74	CALL_2
0x4001f57	      0xb900000000	                              mov ecx, 0	      1418	refs.c	FUNCTION_74	CALL_2
0x4001f5c	          0x4889ea	                            mov rdx, rbp	      1418	refs.c	FUNCTION_74	CALL_2
0x4001f5f	          0x4889de	                            mov rsi, rbx	      1418	refs.c	FUNCTION_74	CALL_2
0x4001f62	          0x4889c7	                            mov rdi, rax	      1418	refs.c	FUNCTION_74	CALL_2
0x4001f65	      0xe81ef7ffff	                call sym.do_for_each_ref	      1418	refs.c	FUNCTION_74	CALL_2
0x4001f6a	        0x4883c408	                              add rsp, 8	      1420	refs.c	FUNCTION_74
0x4001f6e	              0x5b	                                 pop rbx	      1420	refs.c	FUNCTION_74
0x4001f6f	              0x5d	                                 pop rbp	      1420	refs.c	FUNCTION_74
0x4001f70	            0x415c	                                 pop r12	      1420	refs.c	FUNCTION_74
0x4001f72	            0x415d	                                 pop r13	      1420	refs.c	FUNCTION_74
0x4001f74	              0xc3	                                     ret	      1420	refs.c	FUNCTION_74
refs_resolve_refdup	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	10
0x40019bb	        0x4883ec08	                              sub rsp, 8	       200	refs.c	FUNCTION_7
0x40019bf	      0xe800000000	                          call 0x40019c4	       203	refs.c	FUNCTION_7	CALL_1
0x40019c4	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x40019c7	            0x740a	                            je 0x40019d3	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x40019c9	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x40019cc	      0xe800000000	                          call 0x40019d1	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x40019d1	            0xeb05	                           jmp 0x40019d8	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x40019d3	      0xb800000000	                              mov eax, 0	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x40019d8	        0x4883c408	                              add rsp, 8	       206	refs.c	FUNCTION_7
0x40019dc	              0xc3	                                     ret	       206	refs.c	FUNCTION_7
ref_exists	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	10
0x40021aa	        0x4883ec08	                              sub rsp, 8	       243	refs.c	FUNCTION_12
0x40021ae	      0xb900000000	                              mov ecx, 0	       244	refs.c	FUNCTION_12	CALL_1
0x40021b3	      0xba00000000	                              mov edx, 0	       244	refs.c	FUNCTION_12	CALL_1
0x40021b8	      0xbe01000000	                              mov esi, 1	       244	refs.c	FUNCTION_12	CALL_1
0x40021bd	      0xe800000000	                          call 0x40021c2	       244	refs.c	FUNCTION_12	CALL_1
0x40021c2	          0x4885c0	                           test rax, rax	       244	refs.c	FUNCTION_12	CALL_1
0x40021c5	           0xf95c0	                                setne al	       244	refs.c	FUNCTION_12	CALL_1
0x40021c8	           0xfb6c0	                           movzx eax, al	       244	refs.c	FUNCTION_12	CALL_1
0x40021cb	        0x4883c408	                              add rsp, 8	       245	refs.c	FUNCTION_12
0x40021cf	              0xc3	                                     ret	       245	refs.c	FUNCTION_12
warn_dangling_symrefs	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	17
0x40020fb	        0x4883ec38	                           sub rsp, 0x38	       363	refs.c	FUNCTION_19
0x40020ff	    0x64488b042528	                mov rax, qword fs:[0x28]	       363	refs.c	FUNCTION_19
0x4002108	      0x4889442428	             mov qword [rsp + 0x28], rax	       363	refs.c	FUNCTION_19
0x400210d	            0x31c0	                            xor eax, eax	       363	refs.c	FUNCTION_19
0x400210f	        0x48893c24	                    mov qword [rsp], rdi	       366	refs.c	FUNCTION_19
0x4002113	    0x48c744240800	                  mov qword [rsp + 8], 0	       367	refs.c	FUNCTION_19
0x400211c	      0x4889542410	             mov qword [rsp + 0x10], rdx	       368	refs.c	FUNCTION_19
0x4002121	      0x4889742418	             mov qword [rsp + 0x18], rsi	       369	refs.c	FUNCTION_19
0x4002126	          0x4889e6	                            mov rsi, rsp	       370	refs.c	FUNCTION_19	CALL_1
0x4002129	      0xbf00000000	                              mov edi, 0	       370	refs.c	FUNCTION_19	CALL_1
0x400212e	      0xe800000000	                          call 0x4002133	       370	refs.c	FUNCTION_19	CALL_1
0x4002133	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       371	refs.c	FUNCTION_19
0x4002138	    0x644833042528	                xor rax, qword fs:[0x28]	       371	refs.c	FUNCTION_19
0x4002141	            0x7405	                            je 0x4002148	       371	refs.c	FUNCTION_19
0x4002143	      0xe800000000	                          call 0x4002148	       371	refs.c	FUNCTION_19
0x4002148	        0x4883c438	                           add rsp, 0x38	       371	refs.c	FUNCTION_19
0x400214c	              0xc3	                                     ret	       371	refs.c	FUNCTION_19
resolve_gitlink_ref	functions,0:ELSE,0:DO,0:IF,2:WHILE,0:CALL,3:FOR,0:SWITCH,0	39
0x40028f7	              0x55	                                push rbp	      1580	refs.c	FUNCTION_84
0x40028f8	              0x53	                                push rbx	      1580	refs.c	FUNCTION_84
0x40028f9	        0x4883ec18	                           sub rsp, 0x18	      1580	refs.c	FUNCTION_84
0x40028fd	          0x4889f5	                            mov rbp, rsi	      1580	refs.c	FUNCTION_84
0x4002900	          0x4889d3	                            mov rbx, rdx	      1580	refs.c	FUNCTION_84
0x4002903	    0x64488b042528	                mov rax, qword fs:[0x28]	      1580	refs.c	FUNCTION_84
0x400290c	      0x4889442408	                mov qword [rsp + 8], rax	      1580	refs.c	FUNCTION_84
0x4002911	            0x31c0	                            xor eax, eax	      1580	refs.c	FUNCTION_84
0x4002913	      0xe800000000	                          call 0x4002918	      1584	refs.c	FUNCTION_84	CALL_1
0x4002918	          0x4885c0	                           test rax, rax	      1586	refs.c	FUNCTION_84	IF_1
0x400291b	            0x743b	                            je 0x4002958	      1586	refs.c	FUNCTION_84	IF_1
0x400291d	      0x4c8d442404	                       lea r8, [rsp + 4]	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002922	          0x4889d9	                            mov rcx, rbx	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002925	      0xba00000000	                              mov edx, 0	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x400292a	          0x4889ee	                            mov rsi, rbp	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x400292d	          0x4889c7	                            mov rdi, rax	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002930	      0xe800000000	                          call 0x4002935	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002935	          0x4885c0	                           test rax, rax	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002938	            0x7425	                            je 0x400295f	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x400293a	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_171	CALL_1
0x400293f	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_171	CALL_1
0x4002944	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_171	CALL_1
0x4002947	      0xe800000000	                          call 0x400294c	       975	cache.h	FUNCTION_171	CALL_1
0x400294c	            0x85c0	                           test eax, eax	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x400294e	           0xf94c0	                                 sete al	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002951	           0xfb6c0	                           movzx eax, al	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002954	            0xf7d8	                                 neg eax	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002956	            0xeb0c	                           jmp 0x4002964	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4002958	      0xb8ffffffff	                     mov eax, 0xffffffff	      1587	refs.c	FUNCTION_84	IF_1
0x400295d	            0xeb05	                           jmp 0x4002964	      1587	refs.c	FUNCTION_84	IF_1
0x400295f	      0xb8ffffffff	                     mov eax, 0xffffffff	      1591	refs.c	FUNCTION_84	IF_2
0x4002964	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1593	refs.c	FUNCTION_84
0x4002969	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1593	refs.c	FUNCTION_84
0x4002972	            0x7405	                            je 0x4002979	      1593	refs.c	FUNCTION_84
0x4002974	      0xe800000000	                          call 0x4002979	      1593	refs.c	FUNCTION_84
0x4002979	        0x4883c418	                           add rsp, 0x18	      1593	refs.c	FUNCTION_84
0x400297d	              0x5b	                                 pop rbx	      1593	refs.c	FUNCTION_84
0x400297e	              0x5d	                                 pop rbp	      1593	refs.c	FUNCTION_84
0x400297f	              0xc3	                                     ret	      1593	refs.c	FUNCTION_84
for_each_namespaced_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,5:FOR,0:SWITCH,0	41
0x4001fd3	            0x4154	                                push r12	      1442	refs.c	FUNCTION_77
0x4001fd5	              0x55	                                push rbp	      1442	refs.c	FUNCTION_77
0x4001fd6	              0x53	                                push rbx	      1442	refs.c	FUNCTION_77
0x4001fd7	        0x4883ec20	                           sub rsp, 0x20	      1442	refs.c	FUNCTION_77
0x4001fdb	          0x4889fd	                            mov rbp, rdi	      1442	refs.c	FUNCTION_77
0x4001fde	          0x4989f4	                            mov r12, rsi	      1442	refs.c	FUNCTION_77
0x4001fe1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1442	refs.c	FUNCTION_77
0x4001fea	      0x4889442418	             mov qword [rsp + 0x18], rax	      1442	refs.c	FUNCTION_77
0x4001fef	            0x31c0	                            xor eax, eax	      1442	refs.c	FUNCTION_77
0x4001ff1	    0x48c704240000	                      mov qword [rsp], 0	      1443	refs.c	FUNCTION_77
0x4001ff9	    0x48c744240800	                  mov qword [rsp + 8], 0	      1443	refs.c	FUNCTION_77
0x4002002	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1443	refs.c	FUNCTION_77
0x400200b	      0xe800000000	                          call 0x4002010	      1445	refs.c	FUNCTION_77	CALL_2
0x4002010	          0x4889c2	                            mov rdx, rax	      1445	refs.c	FUNCTION_77	CALL_2
0x4002013	      0xbe00000000	                              mov esi, 0	      1445	refs.c	FUNCTION_77	CALL_2
0x4002018	          0x4889e7	                            mov rdi, rsp	      1445	refs.c	FUNCTION_77	CALL_2
0x400201b	      0xb800000000	                              mov eax, 0	      1445	refs.c	FUNCTION_77	CALL_2
0x4002020	      0xe800000000	                          call 0x4002025	      1445	refs.c	FUNCTION_77	CALL_2
0x4002025	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1447	refs.c	FUNCTION_77
0x400202a	    0x488b3d000000	            mov rdi, qword [0x04002031] 	      1446	refs.c	FUNCTION_77	CALL_4
0x4002031	      0xe800000000	                          call 0x4002036	      1446	refs.c	FUNCTION_77	CALL_4
0x4002036	          0x4d89e1	                             mov r9, r12	      1446	refs.c	FUNCTION_77	CALL_4
0x4002039	    0x41b800000000	                              mov r8d, 0	      1446	refs.c	FUNCTION_77	CALL_4
0x400203f	      0xb900000000	                              mov ecx, 0	      1446	refs.c	FUNCTION_77	CALL_4
0x4002044	          0x4889ea	                            mov rdx, rbp	      1446	refs.c	FUNCTION_77	CALL_4
0x4002047	          0x4889de	                            mov rsi, rbx	      1446	refs.c	FUNCTION_77	CALL_4
0x400204a	          0x4889c7	                            mov rdi, rax	      1446	refs.c	FUNCTION_77	CALL_4
0x400204d	      0xe836f6ffff	                call sym.do_for_each_ref	      1446	refs.c	FUNCTION_77	CALL_4
0x4002052	            0x89c3	                            mov ebx, eax	      1446	refs.c	FUNCTION_77	CALL_4
0x4002054	          0x4889e7	                            mov rdi, rsp	      1448	refs.c	FUNCTION_77	CALL_5
0x4002057	      0xe800000000	                          call 0x400205c	      1448	refs.c	FUNCTION_77	CALL_5
0x400205c	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1450	refs.c	FUNCTION_77
0x4002061	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1450	refs.c	FUNCTION_77
0x400206a	            0x7405	                            je 0x4002071	      1450	refs.c	FUNCTION_77
0x400206c	      0xe800000000	                          call 0x4002071	      1450	refs.c	FUNCTION_77
0x4002071	            0x89d8	                            mov eax, ebx	      1450	refs.c	FUNCTION_77
0x4002073	        0x4883c420	                           add rsp, 0x20	      1450	refs.c	FUNCTION_77
0x4002077	              0x5b	                                 pop rbx	      1450	refs.c	FUNCTION_77
0x4002078	              0x5d	                                 pop rbp	      1450	refs.c	FUNCTION_77
0x4002079	            0x415c	                                 pop r12	      1450	refs.c	FUNCTION_77
0x400207b	              0xc3	                                     ret	      1450	refs.c	FUNCTION_77
ref_transaction_create	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,3:FOR,0:SWITCH,0	41
0x4001287	            0x4157	                                push r15	      1036	refs.c	FUNCTION_56
0x4001289	            0x4156	                                push r14	      1036	refs.c	FUNCTION_56
0x400128b	            0x4155	                                push r13	      1036	refs.c	FUNCTION_56
0x400128d	            0x4154	                                push r12	      1036	refs.c	FUNCTION_56
0x400128f	              0x55	                                push rbp	      1036	refs.c	FUNCTION_56
0x4001290	              0x53	                                push rbx	      1036	refs.c	FUNCTION_56
0x4001291	        0x4883ec08	                              sub rsp, 8	      1036	refs.c	FUNCTION_56
0x4001295	          0x4885d2	                           test rdx, rdx	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x4001298	            0x7428	                            je 0x40012c2	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x400129a	          0x4889fd	                            mov rbp, rdi	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x400129d	          0x4989f4	                            mov r12, rsi	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40012a0	          0x4889d3	                            mov rbx, rdx	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40012a3	          0x4189cd	                           mov r13d, ecx	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40012a6	          0x4d89c6	                             mov r14, r8	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40012a9	          0x4d89cf	                             mov r15, r9	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40012ac	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_171	CALL_1
0x40012b1	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_171	CALL_1
0x40012b6	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_171	CALL_1
0x40012b9	      0xe800000000	                          call 0x40012be	       975	cache.h	FUNCTION_171	CALL_1
0x40012be	            0x85c0	                           test eax, eax	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40012c0	            0x750f	                           jne 0x40012d1	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40012c2	      0xbf00000000	                              mov edi, 0	      1038	refs.c	FUNCTION_56	CALL_2
0x40012c7	      0xb800000000	                              mov eax, 0	      1038	refs.c	FUNCTION_56	CALL_2
0x40012cc	      0xe800000000	                          call 0x40012d1	      1038	refs.c	FUNCTION_56	CALL_2
0x40012d1	        0x4883ec08	                              sub rsp, 8	      1039	refs.c	FUNCTION_56	CALL_3
0x40012d5	            0x4157	                                push r15	      1039	refs.c	FUNCTION_56	CALL_3
0x40012d7	          0x4d89f1	                             mov r9, r14	      1039	refs.c	FUNCTION_56	CALL_3
0x40012da	          0x4589e8	                           mov r8d, r13d	      1039	refs.c	FUNCTION_56	CALL_3
0x40012dd	      0xb900000000	                              mov ecx, 0	      1039	refs.c	FUNCTION_56	CALL_3
0x40012e2	          0x4889da	                            mov rdx, rbx	      1039	refs.c	FUNCTION_56	CALL_3
0x40012e5	          0x4c89e6	                            mov rsi, r12	      1039	refs.c	FUNCTION_56	CALL_3
0x40012e8	          0x4889ef	                            mov rdi, rbp	      1039	refs.c	FUNCTION_56	CALL_3
0x40012eb	      0xe800000000	                          call 0x40012f0	      1039	refs.c	FUNCTION_56	CALL_3
0x40012f0	        0x4883c418	                           add rsp, 0x18	      1041	refs.c	FUNCTION_56
0x40012f4	              0x5b	                                 pop rbx	      1041	refs.c	FUNCTION_56
0x40012f5	              0x5d	                                 pop rbp	      1041	refs.c	FUNCTION_56
0x40012f6	            0x415c	                                 pop r12	      1041	refs.c	FUNCTION_56
0x40012f8	            0x415d	                                 pop r13	      1041	refs.c	FUNCTION_56
0x40012fa	            0x415e	                                 pop r14	      1041	refs.c	FUNCTION_56
0x40012fc	            0x415f	                                 pop r15	      1041	refs.c	FUNCTION_56
0x40012fe	              0xc3	                                     ret	      1041	refs.c	FUNCTION_56
refs_for_each_branch_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	7
0x4001734	        0x4883ec08	                              sub rsp, 8	       384	refs.c	FUNCTION_22
0x4001738	          0x4889d1	                            mov rcx, rdx	       385	refs.c	FUNCTION_22	CALL_1
0x400173b	          0x4889f2	                            mov rdx, rsi	       385	refs.c	FUNCTION_22	CALL_1
0x400173e	      0xbe00000000	                              mov esi, 0	       385	refs.c	FUNCTION_22	CALL_1
0x4001743	      0xe800000000	                          call 0x4001748	       385	refs.c	FUNCTION_22	CALL_1
0x4001748	        0x4883c408	                              add rsp, 8	       386	refs.c	FUNCTION_22
0x400174c	              0xc3	                                     ret	       386	refs.c	FUNCTION_22
safe_create_reflog	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	17
0x4003a5f	            0x4154	                                push r12	      2075	refs.c	FUNCTION_113
0x4003a61	              0x55	                                push rbp	      2075	refs.c	FUNCTION_113
0x4003a62	              0x53	                                push rbx	      2075	refs.c	FUNCTION_113
0x4003a63	          0x4889fb	                            mov rbx, rdi	      2075	refs.c	FUNCTION_113
0x4003a66	            0x89f5	                            mov ebp, esi	      2075	refs.c	FUNCTION_113
0x4003a68	          0x4989d4	                            mov r12, rdx	      2075	refs.c	FUNCTION_113
0x4003a6b	    0x488b3d000000	            mov rdi, qword [0x04003a72] 	      2076	refs.c	FUNCTION_113	CALL_2
0x4003a72	      0xe800000000	                          call 0x4003a77	      2076	refs.c	FUNCTION_113	CALL_2
0x4003a77	          0x4c89e1	                            mov rcx, r12	      2076	refs.c	FUNCTION_113	CALL_2
0x4003a7a	            0x89ea	                            mov edx, ebp	      2076	refs.c	FUNCTION_113	CALL_2
0x4003a7c	          0x4889de	                            mov rsi, rbx	      2076	refs.c	FUNCTION_113	CALL_2
0x4003a7f	          0x4889c7	                            mov rdi, rax	      2076	refs.c	FUNCTION_113	CALL_2
0x4003a82	      0xe800000000	                          call 0x4003a87	      2076	refs.c	FUNCTION_113	CALL_2
0x4003a87	              0x5b	                                 pop rbx	      2078	refs.c	FUNCTION_113
0x4003a88	              0x5d	                                 pop rbp	      2078	refs.c	FUNCTION_113
0x4003a89	            0x415c	                                 pop r12	      2078	refs.c	FUNCTION_113
0x4003a8b	              0xc3	                                     ret	      2078	refs.c	FUNCTION_113
substitute_branch_name	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,2:FOR,0:SWITCH,0	35
0x4000233	              0x55	                                push rbp	       525	refs.c	FUNCTION_33
0x4000234	              0x53	                                push rbx	       525	refs.c	FUNCTION_33
0x4000235	        0x4883ec38	                           sub rsp, 0x38	       525	refs.c	FUNCTION_33
0x4000239	          0x4889fd	                            mov rbp, rdi	       525	refs.c	FUNCTION_33
0x400023c	          0x4889f3	                            mov rbx, rsi	       525	refs.c	FUNCTION_33
0x400023f	    0x64488b042528	                mov rax, qword fs:[0x28]	       525	refs.c	FUNCTION_33
0x4000248	      0x4889442428	             mov qword [rsp + 0x28], rax	       525	refs.c	FUNCTION_33
0x400024d	            0x31c0	                            xor eax, eax	       525	refs.c	FUNCTION_33
0x400024f	    0x48c744241000	               mov qword [rsp + 0x10], 0	       526	refs.c	FUNCTION_33
0x4000258	    0x48c744241800	               mov qword [rsp + 0x18], 0	       526	refs.c	FUNCTION_33
0x4000261	    0x48c744242000	               mov qword [rsp + 0x20], 0	       526	refs.c	FUNCTION_33
0x400026a	      0xb900000000	                              mov ecx, 0	       527	refs.c	FUNCTION_33	CALL_1
0x400026f	      0x488d542410	                   lea rdx, [rsp + 0x10]	       527	refs.c	FUNCTION_33	CALL_1
0x4000274	            0x8b36	                    mov esi, dword [rsi]	       527	refs.c	FUNCTION_33	CALL_1
0x4000276	          0x488b3f	                    mov rdi, qword [rdi]	       527	refs.c	FUNCTION_33	CALL_1
0x4000279	      0xe800000000	                          call 0x400027e	       527	refs.c	FUNCTION_33	CALL_1
0x400027e	      0xba00000000	                              mov edx, 0	       536	refs.c	FUNCTION_33
0x4000283	            0x3b03	                    cmp eax, dword [rbx]	       529	refs.c	FUNCTION_33	IF_1
0x4000285	            0x751e	                           jne 0x40002a5	       529	refs.c	FUNCTION_33	IF_1
0x4000287	      0x488d742408	                      lea rsi, [rsp + 8]	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x400028c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x4000291	      0xe800000000	                          call 0x4000296	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x4000296	        0x48894500	                    mov qword [rbp], rax	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x400029a	      0x488b442408	                mov rax, qword [rsp + 8]	       532	refs.c	FUNCTION_33	IF_1
0x400029f	            0x8903	                    mov dword [rbx], eax	       532	refs.c	FUNCTION_33	IF_1
0x40002a1	        0x488b5500	                    mov rdx, qword [rbp]	       533	refs.c	FUNCTION_33	IF_1
0x40002a5	          0x4889d0	                            mov rax, rdx	       537	refs.c	FUNCTION_33
0x40002a8	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       537	refs.c	FUNCTION_33
0x40002ad	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       537	refs.c	FUNCTION_33
0x40002b6	            0x7405	                            je 0x40002bd	       537	refs.c	FUNCTION_33
0x40002b8	      0xe800000000	                          call 0x40002bd	       537	refs.c	FUNCTION_33
0x40002bd	        0x4883c438	                           add rsp, 0x38	       537	refs.c	FUNCTION_33
0x40002c1	              0x5b	                                 pop rbx	       537	refs.c	FUNCTION_33
0x40002c2	              0x5d	                                 pop rbp	       537	refs.c	FUNCTION_33
0x40002c3	              0xc3	                                     ret	       537	refs.c	FUNCTION_33
dwim_log	functions,0:ELSE,2:DO,0:IF,5:WHILE,0:CALL,11:FOR,1:SWITCH,0	108
0x4003894	            0x4157	                                push r15	       580	refs.c	FUNCTION_36
0x4003896	            0x4156	                                push r14	       580	refs.c	FUNCTION_36
0x4003898	            0x4155	                                push r13	       580	refs.c	FUNCTION_36
0x400389a	            0x4154	                                push r12	       580	refs.c	FUNCTION_36
0x400389c	              0x55	                                push rbp	       580	refs.c	FUNCTION_36
0x400389d	              0x53	                                push rbx	       580	refs.c	FUNCTION_36
0x400389e	        0x4883ec68	                           sub rsp, 0x68	       580	refs.c	FUNCTION_36
0x40038a2	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       580	refs.c	FUNCTION_36
0x40038a7	        0x89742414	             mov dword [rsp + 0x14], esi	       580	refs.c	FUNCTION_36
0x40038ab	          0x4989d6	                            mov r14, rdx	       580	refs.c	FUNCTION_36
0x40038ae	          0x4989cf	                            mov r15, rcx	       580	refs.c	FUNCTION_36
0x40038b1	    0x64488b042528	                mov rax, qword fs:[0x28]	       580	refs.c	FUNCTION_36
0x40038ba	      0x4889442458	             mov qword [rsp + 0x58], rax	       580	refs.c	FUNCTION_36
0x40038bf	            0x31c0	                            xor eax, eax	       580	refs.c	FUNCTION_36
0x40038c1	      0x488d742414	                   lea rsi, [rsp + 0x14]	       581	refs.c	FUNCTION_36	CALL_1
0x40038c6	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	       581	refs.c	FUNCTION_36	CALL_1
0x40038cb	      0xe863c9ffff	         call sym.substitute_branch_name	       581	refs.c	FUNCTION_36	CALL_1
0x40038d0	      0x4889442408	                mov qword [rsp + 8], rax	       581	refs.c	FUNCTION_36	CALL_1
0x40038d5	    0x48c744242000	               mov qword [rsp + 0x20], 0	       584	refs.c	FUNCTION_36
0x40038de	    0x48c744242800	               mov qword [rsp + 0x28], 0	       584	refs.c	FUNCTION_36
0x40038e7	    0x48c744243000	               mov qword [rsp + 0x30], 0	       584	refs.c	FUNCTION_36
0x40038f0	    0x49c707000000	                      mov qword [r15], 0	       586	refs.c	FUNCTION_36
0x40038f7	    0x48833d000000	               cmp qword [0x040038ff], 0	       587	refs.c	FUNCTION_36	FOR_1
0x40038ff	     0xf8407010000	                            je 0x4003a0c	       587	refs.c	FUNCTION_36	FOR_1
0x4003905	    0x41bc00000000	                             mov r12d, 0	       587	refs.c	FUNCTION_36	FOR_1
0x400390b	      0xbb00000000	                              mov ebx, 0	       587	refs.c	FUNCTION_36	FOR_1
0x4003910	    0x48c744242800	               mov qword [rsp + 0x28], 0	       164	strbuf.h	FUNCTION_193
0x4003919	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       165	strbuf.h	FUNCTION_193	IF_2
0x400391e	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_193	IF_2
0x4003924	            0x7405	                            je 0x400392b	       165	strbuf.h	FUNCTION_193	IF_2
0x4003926	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_193	IF_2
0x4003929	            0xeb22	                           jmp 0x400394d	       166	strbuf.h	FUNCTION_193	IF_2
0x400392b	    0x803d00000000	                cmp byte [0x04003932], 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x4003932	            0x7419	                            je 0x400394d	       168	strbuf.h	FUNCTION_193	CALL_2
0x4003934	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x4003939	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_193	CALL_2
0x400393e	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x4003943	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x4003948	      0xe800000000	                          call 0x400394d	       168	strbuf.h	FUNCTION_193	CALL_2
0x400394d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       592	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4003952	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       592	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4003956	          0x488b33	                    mov rsi, qword [rbx]	       592	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4003959	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       592	refs.c	FUNCTION_36	FOR_1	CALL_3
0x400395e	      0xb800000000	                              mov eax, 0	       592	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4003963	      0xe800000000	                          call 0x4003968	       592	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4003968	      0xb900000000	                              mov ecx, 0	       593	refs.c	FUNCTION_36	FOR_1	CALL_4
0x400396d	      0x488d542440	                   lea rdx, [rsp + 0x40]	       593	refs.c	FUNCTION_36	FOR_1	CALL_4
0x4003972	      0xbe01000000	                              mov esi, 1	       593	refs.c	FUNCTION_36	FOR_1	CALL_4
0x4003977	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       593	refs.c	FUNCTION_36	FOR_1	CALL_4
0x400397c	      0xe800000000	                          call 0x4003981	       593	refs.c	FUNCTION_36	FOR_1	CALL_4
0x4003981	          0x4889c5	                            mov rbp, rax	       593	refs.c	FUNCTION_36	FOR_1	CALL_4
0x4003984	          0x4885c0	                           test rax, rax	       595	refs.c	FUNCTION_36	FOR_1	IF_1
0x4003987	            0x7473	                            je 0x40039fc	       595	refs.c	FUNCTION_36	FOR_1	IF_1
0x4003989	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_5
0x400398e	      0xe800000000	                          call 0x4003993	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_5
0x4003993	            0x85c0	                           test eax, eax	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_5
0x4003995	            0x7407	                            je 0x400399e	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_5
0x4003997	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	       598	refs.c	FUNCTION_36	FOR_1	IF_2
0x400399c	            0xeb1d	                           jmp 0x40039bb	       598	refs.c	FUNCTION_36	FOR_1	IF_2
0x400399e	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_7
0x40039a3	          0x4889ef	                            mov rdi, rbp	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_7
0x40039a6	      0xe800000000	                          call 0x40039ab	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_7
0x40039ab	            0x85c0	                           test eax, eax	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_7
0x40039ad	            0x744d	                            je 0x40039fc	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_7
0x40039af	          0x4889ef	                            mov rdi, rbp	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_7
0x40039b2	      0xe800000000	                          call 0x40039b7	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_7
0x40039b7	            0x85c0	                           test eax, eax	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_7
0x40039b9	            0x7441	                            je 0x40039fc	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_7
0x40039bb	      0x458d6c2401	                     lea r13d, [r12 + 1]	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40039c0	          0x4585e4	                         test r12d, r12d	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40039c3	            0x7524	                           jne 0x40039e9	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40039c5	          0x4889ef	                            mov rdi, rbp	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_8
0x40039c8	      0xe800000000	                          call 0x40039cd	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_8
0x40039cd	          0x498907	                    mov qword [r15], rax	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_8
0x40039d0	      0x488b442440	            mov rax, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_152	CALL_3
0x40039d5	          0x498906	                    mov qword [r14], rax	        53	string3.h	FUNCTION_152	CALL_3
0x40039d8	      0x488b442448	            mov rax, qword [rsp + 0x48] 	        53	string3.h	FUNCTION_152	CALL_3
0x40039dd	        0x49894608	                mov qword [r14 + 8], rax	        53	string3.h	FUNCTION_152	CALL_3
0x40039e1	        0x8b442450	            mov eax, dword [rsp + 0x50] 	        53	string3.h	FUNCTION_152	CALL_3
0x40039e5	        0x41894610	             mov dword [r14 + 0x10], eax	        53	string3.h	FUNCTION_152	CALL_3
0x40039e9	    0x833d00000000	               cmp dword [0x040039f0], 0	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x40039f0	            0x7405	                            je 0x40039f7	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x40039f2	          0x4589ec	                          mov r12d, r13d	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40039f5	            0xeb05	                           jmp 0x40039fc	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40039f7	          0x4589ec	                          mov r12d, r13d	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40039fa	            0xeb16	                           jmp 0x4003a12	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40039fc	        0x4883c308	                              add rbx, 8	       587	refs.c	FUNCTION_36	FOR_1
0x4003a00	        0x48833b00	                      cmp qword [rbx], 0	       587	refs.c	FUNCTION_36	FOR_1
0x4003a04	     0xf8506ffffff	                           jne 0x4003910	       587	refs.c	FUNCTION_36	FOR_1
0x4003a0a	            0xeb06	                           jmp 0x4003a12	       587	refs.c	FUNCTION_36	FOR_1
0x4003a0c	    0x41bc00000000	                             mov r12d, 0	       583	refs.c	FUNCTION_36
0x4003a12	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       610	refs.c	FUNCTION_36	CALL_10
0x4003a17	      0xe800000000	                          call 0x4003a1c	       610	refs.c	FUNCTION_36	CALL_10
0x4003a1c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       611	refs.c	FUNCTION_36	CALL_11
0x4003a21	      0xe800000000	                          call 0x4003a26	       611	refs.c	FUNCTION_36	CALL_11
0x4003a26	          0x4489e0	                           mov eax, r12d	       613	refs.c	FUNCTION_36
0x4003a29	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       613	refs.c	FUNCTION_36
0x4003a2e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       613	refs.c	FUNCTION_36
0x4003a37	            0x7405	                            je 0x4003a3e	       613	refs.c	FUNCTION_36
0x4003a39	      0xe800000000	                          call 0x4003a3e	       613	refs.c	FUNCTION_36
0x4003a3e	        0x4883c468	                           add rsp, 0x68	       613	refs.c	FUNCTION_36
0x4003a42	              0x5b	                                 pop rbx	       613	refs.c	FUNCTION_36
0x4003a43	              0x5d	                                 pop rbp	       613	refs.c	FUNCTION_36
0x4003a44	            0x415c	                                 pop r12	       613	refs.c	FUNCTION_36
0x4003a46	            0x415d	                                 pop r13	       613	refs.c	FUNCTION_36
0x4003a48	            0x415e	                                 pop r14	       613	refs.c	FUNCTION_36
0x4003a4a	            0x415f	                                 pop r15	       613	refs.c	FUNCTION_36
0x4003a4c	              0xc3	                                     ret	       613	refs.c	FUNCTION_36
read_ref_at	functions,0:ELSE,1:DO,0:IF,3:WHILE,0:CALL,5:FOR,0:SWITCH,0	53
0x4003781	              0x55	                                push rbp	       905	refs.c	FUNCTION_50
0x4003782	              0x53	                                push rbx	       905	refs.c	FUNCTION_50
0x4003783	    0x4881ec880000	                           sub rsp, 0x88	       905	refs.c	FUNCTION_50
0x400378a	          0x4889fb	                            mov rbx, rdi	       905	refs.c	FUNCTION_50
0x400378d	            0x89f5	                            mov ebp, esi	       905	refs.c	FUNCTION_50
0x400378f	          0x4189ca	                           mov r10d, ecx	       905	refs.c	FUNCTION_50
0x4003792	    0x64488b042528	                mov rax, qword fs:[0x28]	       905	refs.c	FUNCTION_50
0x400379b	      0x4889442478	             mov qword [rsp + 0x78], rax	       905	refs.c	FUNCTION_50
0x40037a0	            0x31c0	                            xor eax, eax	       905	refs.c	FUNCTION_50
0x40037a2	      0xb90f000000	                            mov ecx, 0xf	        90	string3.h	FUNCTION_155	CALL_6
0x40037a7	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_155	CALL_6
0x40037aa	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_155	CALL_6
0x40037ad	        0x48891c24	                    mov qword [rsp], rbx	       909	refs.c	FUNCTION_50
0x40037b1	      0x4889542408	                mov qword [rsp + 8], rdx	       910	refs.c	FUNCTION_50
0x40037b6	      0x4489542410	            mov dword [rsp + 0x10], r10d	       911	refs.c	FUNCTION_50
0x40037bb	      0x4c894c2458	              mov qword [rsp + 0x58], r9	       912	refs.c	FUNCTION_50
0x40037c0	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       913	refs.c	FUNCTION_50
0x40037c8	      0x4889442460	             mov qword [rsp + 0x60], rax	       913	refs.c	FUNCTION_50
0x40037cd	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       914	refs.c	FUNCTION_50
0x40037d5	      0x4889442468	             mov qword [rsp + 0x68], rax	       914	refs.c	FUNCTION_50
0x40037da	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	       915	refs.c	FUNCTION_50
0x40037e2	      0x4889442470	             mov qword [rsp + 0x70], rax	       915	refs.c	FUNCTION_50
0x40037e7	      0x4c89442418	              mov qword [rsp + 0x18], r8	       916	refs.c	FUNCTION_50
0x40037ec	          0x4889e2	                            mov rdx, rsp	       918	refs.c	FUNCTION_50	CALL_2
0x40037ef	      0xbe00000000	                              mov esi, 0	       918	refs.c	FUNCTION_50	CALL_2
0x40037f4	          0x4889df	                            mov rdi, rbx	       918	refs.c	FUNCTION_50	CALL_2
0x40037f7	      0xe800000000	                          call 0x40037fc	       918	refs.c	FUNCTION_50	CALL_2
0x40037fc	      0x837c241400	               cmp dword [rsp + 0x14], 0	       920	refs.c	FUNCTION_50	IF_1
0x4003801	            0x7522	                           jne 0x4003825	       920	refs.c	FUNCTION_50	IF_1
0x4003803	        0x40f6c501	                             test bpl, 1	       921	refs.c	FUNCTION_50	IF_1	IF_2
0x4003807	            0x740a	                            je 0x4003813	       921	refs.c	FUNCTION_50	IF_1	IF_2
0x4003809	      0xbf80000000	                           mov edi, 0x80	       922	refs.c	FUNCTION_50	IF_1	CALL_3
0x400380e	      0xe800000000	                          call 0x4003813	       922	refs.c	FUNCTION_50	IF_1	CALL_3
0x4003813	          0x4889de	                            mov rsi, rbx	       924	refs.c	FUNCTION_50	IF_1	CALL_4
0x4003816	      0xbf00000000	                              mov edi, 0	       924	refs.c	FUNCTION_50	IF_1	CALL_4
0x400381b	      0xb800000000	                              mov eax, 0	       924	refs.c	FUNCTION_50	IF_1	CALL_4
0x4003820	      0xe800000000	                          call 0x4003825	       924	refs.c	FUNCTION_50	IF_1	CALL_4
0x4003825	      0xb800000000	                              mov eax, 0	       927	refs.c	FUNCTION_50	IF_3
0x400382a	      0x837c242000	               cmp dword [rsp + 0x20], 0	       926	refs.c	FUNCTION_50	IF_3
0x400382f	            0x7515	                           jne 0x4003846	       926	refs.c	FUNCTION_50	IF_3
0x4003831	          0x4889e2	                            mov rdx, rsp	       929	refs.c	FUNCTION_50	CALL_5
0x4003834	      0xbe00000000	                              mov esi, 0	       929	refs.c	FUNCTION_50	CALL_5
0x4003839	          0x4889df	                            mov rdi, rbx	       929	refs.c	FUNCTION_50	CALL_5
0x400383c	      0xe800000000	                          call 0x4003841	       929	refs.c	FUNCTION_50	CALL_5
0x4003841	      0xb801000000	                              mov eax, 1	       931	refs.c	FUNCTION_50
0x4003846	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	       932	refs.c	FUNCTION_50
0x400384b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       932	refs.c	FUNCTION_50
0x4003854	            0x7405	                            je 0x400385b	       932	refs.c	FUNCTION_50
0x4003856	      0xe800000000	                          call 0x400385b	       932	refs.c	FUNCTION_50
0x400385b	    0x4881c4880000	                           add rsp, 0x88	       932	refs.c	FUNCTION_50
0x4003862	              0x5b	                                 pop rbx	       932	refs.c	FUNCTION_50
0x4003863	              0x5d	                                 pop rbp	       932	refs.c	FUNCTION_50
0x4003864	              0xc3	                                     ret	       932	refs.c	FUNCTION_50
refs_for_each_tag_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	7
0x400171b	        0x4883ec08	                              sub rsp, 8	       374	refs.c	FUNCTION_20
0x400171f	          0x4889d1	                            mov rcx, rdx	       375	refs.c	FUNCTION_20	CALL_1
0x4001722	          0x4889f2	                            mov rdx, rsi	       375	refs.c	FUNCTION_20	CALL_1
0x4001725	      0xbe00000000	                              mov esi, 0	       375	refs.c	FUNCTION_20	CALL_1
0x400172a	      0xe800000000	                          call 0x400172f	       375	refs.c	FUNCTION_20	CALL_1
0x400172f	        0x4883c408	                              add rsp, 8	       376	refs.c	FUNCTION_20
0x4001733	              0xc3	                                     ret	       376	refs.c	FUNCTION_20
copy_reflog_msg	functions,0:ELSE,0:DO,0:IF,2:WHILE,2:CALL,3:FOR,0:SWITCH,0	41
0x4000dda	        0x488d4701	                      lea rax, [rdi + 1]	       781	refs.c	FUNCTION_45
0x4000dde	          0xc60709	                       mov byte [rdi], 9	       781	refs.c	FUNCTION_45
0x4000de1	    0x41b801000000	                              mov r8d, 1	       779	refs.c	FUNCTION_45
0x4000de7	    0x41b920000000	                           mov r9d, 0x20	       787	refs.c	FUNCTION_45	WHILE_1	IF_2
0x4000ded	            0xeb38	                           jmp 0x4000e27	       782	refs.c	FUNCTION_45	WHILE_1
0x4000def	          0x4585c0	                           test r8d, r8d	       783	refs.c	FUNCTION_45	WHILE_1	IF_1	CALL_1
0x4000df2	            0x7414	                            je 0x4000e08	       783	refs.c	FUNCTION_45	WHILE_1	IF_1	CALL_1
0x4000df4	           0xfb6ca	                           movzx ecx, dl	       783	refs.c	FUNCTION_45	WHILE_1	IF_1	CALL_1
0x4000df7	    0xf68100000000	                      test byte [rcx], 1	       783	refs.c	FUNCTION_45	WHILE_1	IF_1	CALL_1
0x4000dfe	            0x7527	                           jne 0x4000e27	       783	refs.c	FUNCTION_45	WHILE_1	IF_1	CALL_1
0x4000e00	    0x41b800000000	                              mov r8d, 0	       785	refs.c	FUNCTION_45	WHILE_1	CALL_2
0x4000e06	            0xeb19	                           jmp 0x4000e21	       785	refs.c	FUNCTION_45	WHILE_1	CALL_2
0x4000e08	           0xfb6ca	                           movzx ecx, dl	       785	refs.c	FUNCTION_45	WHILE_1	CALL_2
0x4000e0b	     0xfb689000000	                   movzx ecx, byte [rcx]	       785	refs.c	FUNCTION_45	WHILE_1	CALL_2
0x4000e12	          0x83e101	                              and ecx, 1	       785	refs.c	FUNCTION_45	WHILE_1	CALL_2
0x4000e15	        0x410f95c0	                               setne r8b	       785	refs.c	FUNCTION_45	WHILE_1	CALL_2
0x4000e19	        0x450fb6c0	                          movzx r8d, r8b	       785	refs.c	FUNCTION_45	WHILE_1	CALL_2
0x4000e1d	        0x410f45d1	                         cmovne edx, r9d	       787	refs.c	FUNCTION_45	WHILE_1	IF_2
0x4000e21	            0x8810	                      mov byte [rax], dl	       788	refs.c	FUNCTION_45	WHILE_1
0x4000e23	        0x488d4001	                      lea rax, [rax + 1]	       788	refs.c	FUNCTION_45	WHILE_1
0x4000e27	        0x4883c601	                              add rsi, 1	       782	refs.c	FUNCTION_45	WHILE_1
0x4000e2b	         0xfb656ff	               movzx edx, byte [rsi - 1]	       782	refs.c	FUNCTION_45	WHILE_1
0x4000e2f	            0x84d2	                             test dl, dl	       782	refs.c	FUNCTION_45	WHILE_1
0x4000e31	            0x75bc	                           jne 0x4000def	       782	refs.c	FUNCTION_45	WHILE_1
0x4000e33	          0x4839f8	                            cmp rax, rdi	       790	refs.c	FUNCTION_45	WHILE_2	CALL_3
0x4000e36	            0x7628	                           jbe 0x4000e60	       790	refs.c	FUNCTION_45	WHILE_2	CALL_3
0x4000e38	         0xfb650ff	               movzx edx, byte [rax - 1]	       790	refs.c	FUNCTION_45	WHILE_2	CALL_3
0x4000e3c	    0xf68200000000	                      test byte [rdx], 1	       790	refs.c	FUNCTION_45	WHILE_2	CALL_3
0x4000e43	            0x741b	                            je 0x4000e60	       790	refs.c	FUNCTION_45	WHILE_2	CALL_3
0x4000e45	        0x4883e801	                              sub rax, 1	       791	refs.c	FUNCTION_45	WHILE_2
0x4000e49	          0x4839c7	                            cmp rdi, rax	       790	refs.c	FUNCTION_45	WHILE_2	CALL_3
0x4000e4c	            0x740f	                            je 0x4000e5d	       790	refs.c	FUNCTION_45	WHILE_2	CALL_3
0x4000e4e	         0xfb650ff	               movzx edx, byte [rax - 1]	       790	refs.c	FUNCTION_45	WHILE_2	CALL_3
0x4000e52	    0xf68200000000	                      test byte [rdx], 1	       790	refs.c	FUNCTION_45	WHILE_2	CALL_3
0x4000e59	            0x75ea	                           jne 0x4000e45	       790	refs.c	FUNCTION_45	WHILE_2	CALL_3
0x4000e5b	            0xeb03	                           jmp 0x4000e60	       790	refs.c	FUNCTION_45	WHILE_2	CALL_3
0x4000e5d	          0x4889f8	                            mov rax, rdi	       791	refs.c	FUNCTION_45	WHILE_2
0x4000e60	          0xc6000a	                     mov byte [rax], 0xa	       792	refs.c	FUNCTION_45
0x4000e63	        0x4883c001	                              add rax, 1	       793	refs.c	FUNCTION_45
0x4000e67	          0x4829f8	                            sub rax, rdi	       793	refs.c	FUNCTION_45
0x4000e6a	              0xc3	                                     ret	       794	refs.c	FUNCTION_45
delete_refs	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	17
0x4003b57	            0x4154	                                push r12	      2132	refs.c	FUNCTION_120
0x4003b59	              0x55	                                push rbp	      2132	refs.c	FUNCTION_120
0x4003b5a	              0x53	                                push rbx	      2132	refs.c	FUNCTION_120
0x4003b5b	          0x4889fb	                            mov rbx, rdi	      2132	refs.c	FUNCTION_120
0x4003b5e	          0x4889f5	                            mov rbp, rsi	      2132	refs.c	FUNCTION_120
0x4003b61	          0x4189d4	                           mov r12d, edx	      2132	refs.c	FUNCTION_120
0x4003b64	    0x488b3d000000	            mov rdi, qword [0x04003b6b] 	      2133	refs.c	FUNCTION_120	CALL_2
0x4003b6b	      0xe800000000	                          call 0x4003b70	      2133	refs.c	FUNCTION_120	CALL_2
0x4003b70	          0x4489e1	                           mov ecx, r12d	      2133	refs.c	FUNCTION_120	CALL_2
0x4003b73	          0x4889ea	                            mov rdx, rbp	      2133	refs.c	FUNCTION_120	CALL_2
0x4003b76	          0x4889de	                            mov rsi, rbx	      2133	refs.c	FUNCTION_120	CALL_2
0x4003b79	          0x4889c7	                            mov rdi, rax	      2133	refs.c	FUNCTION_120	CALL_2
0x4003b7c	      0xe800000000	                          call 0x4003b81	      2133	refs.c	FUNCTION_120	CALL_2
0x4003b81	              0x5b	                                 pop rbx	      2134	refs.c	FUNCTION_120
0x4003b82	              0x5d	                                 pop rbp	      2134	refs.c	FUNCTION_120
0x4003b83	            0x415c	                                 pop r12	      2134	refs.c	FUNCTION_120
0x4003b85	              0xc3	                                     ret	      2134	refs.c	FUNCTION_120
refs_rename_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	5
0x4003b86	        0x4883ec08	                              sub rsp, 8	      2138	refs.c	FUNCTION_121
0x4003b8a	          0x488b07	                    mov rax, qword [rdi]	      2139	refs.c	FUNCTION_121	CALL_1
0x4003b8d	          0xff5058	                 call qword [rax + 0x58]	      2139	refs.c	FUNCTION_121	CALL_1
0x4003b90	        0x4883c408	                              add rsp, 8	      2140	refs.c	FUNCTION_121
0x4003b94	              0xc3	                                     ret	      2140	refs.c	FUNCTION_121
refs_for_each_fullref_in	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,1:FOR,0:SWITCH,0	9
0x4001766	        0x4883ec08	                              sub rsp, 8	      1425	refs.c	FUNCTION_75
0x400176a	          0x4989c9	                             mov r9, rcx	      1425	refs.c	FUNCTION_75
0x400176d	          0x4585c0	                           test r8d, r8d	      1430	refs.c	FUNCTION_75	CALL_1
0x4001770	        0x410f95c0	                               setne r8b	      1430	refs.c	FUNCTION_75	CALL_1
0x4001774	        0x450fb6c0	                          movzx r8d, r8b	      1430	refs.c	FUNCTION_75	CALL_1
0x4001778	      0xb900000000	                              mov ecx, 0	      1430	refs.c	FUNCTION_75	CALL_1
0x400177d	      0xe806ffffff	                call sym.do_for_each_ref	      1430	refs.c	FUNCTION_75	CALL_1
0x4001782	        0x4883c408	                              add rsp, 8	      1431	refs.c	FUNCTION_75
0x4001786	              0xc3	                                     ret	      1431	refs.c	FUNCTION_75
for_each_reflog	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	15
0x40036d2	              0x55	                                push rbp	      2024	refs.c	FUNCTION_105
0x40036d3	              0x53	                                push rbx	      2024	refs.c	FUNCTION_105
0x40036d4	        0x4883ec08	                              sub rsp, 8	      2024	refs.c	FUNCTION_105
0x40036d8	          0x4889fb	                            mov rbx, rdi	      2024	refs.c	FUNCTION_105
0x40036db	          0x4889f5	                            mov rbp, rsi	      2024	refs.c	FUNCTION_105
0x40036de	    0x488b3d000000	            mov rdi, qword [0x040036e5] 	      2025	refs.c	FUNCTION_105	CALL_2
0x40036e5	      0xe800000000	                          call 0x40036ea	      2025	refs.c	FUNCTION_105	CALL_2
0x40036ea	          0x4889ea	                            mov rdx, rbp	      2025	refs.c	FUNCTION_105	CALL_2
0x40036ed	          0x4889de	                            mov rsi, rbx	      2025	refs.c	FUNCTION_105	CALL_2
0x40036f0	          0x4889c7	                            mov rdi, rax	      2025	refs.c	FUNCTION_105	CALL_2
0x40036f3	      0xe800000000	                          call 0x40036f8	      2025	refs.c	FUNCTION_105	CALL_2
0x40036f8	        0x4883c408	                              add rsp, 8	      2026	refs.c	FUNCTION_105
0x40036fc	              0x5b	                                 pop rbx	      2026	refs.c	FUNCTION_105
0x40036fd	              0x5d	                                 pop rbp	      2026	refs.c	FUNCTION_105
0x40036fe	              0xc3	                                     ret	      2026	refs.c	FUNCTION_105
peel_object	functions,0:ELSE,0:DO,0:IF,4:WHILE,0:CALL,5:FOR,0:SWITCH,0	48
0x400096f	            0x4154	                                push r12	       302	refs.c	FUNCTION_16
0x4000971	              0x55	                                push rbp	       302	refs.c	FUNCTION_16
0x4000972	              0x53	                                push rbx	       302	refs.c	FUNCTION_16
0x4000973	          0x4989fc	                            mov r12, rdi	       302	refs.c	FUNCTION_16
0x4000976	          0x4889f5	                            mov rbp, rsi	       302	refs.c	FUNCTION_16
0x4000979	      0xe800000000	                          call 0x400097e	       303	refs.c	FUNCTION_16	CALL_1
0x400097e	          0x4889c3	                            mov rbx, rax	       303	refs.c	FUNCTION_16	CALL_1
0x4000981	          0xf6000e	                    test byte [rax], 0xe	       305	refs.c	FUNCTION_16	IF_1
0x4000984	            0x752c	                           jne 0x40009b2	       305	refs.c	FUNCTION_16	IF_1
0x4000986	      0xba00000000	                              mov edx, 0	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x400098b	          0x4c89e6	                            mov rsi, r12	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x400098e	    0x488b3d000000	            mov rdi, qword [0x04000995] 	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x4000995	      0xe800000000	                          call 0x400099a	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x400099a	            0x85c0	                           test eax, eax	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x400099c	            0x7852	                            js 0x40009f0	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x400099e	      0xba00000000	                              mov edx, 0	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x40009a3	            0x89c6	                            mov esi, eax	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x40009a5	          0x4889df	                            mov rdi, rbx	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x40009a8	      0xe800000000	                          call 0x40009ad	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x40009ad	          0x4885c0	                           test rax, rax	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x40009b0	            0x7445	                            je 0x40009f7	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x40009b2	           0xfb613	                   movzx edx, byte [rbx]	       311	refs.c	FUNCTION_16	IF_3
0x40009b5	          0x83e20e	                            and edx, 0xe	       311	refs.c	FUNCTION_16	IF_3
0x40009b8	      0xb8feffffff	                     mov eax, 0xfffffffe	       312	refs.c	FUNCTION_16	IF_3
0x40009bd	          0x80fa08	                               cmp dl, 8	       311	refs.c	FUNCTION_16	IF_3
0x40009c0	            0x7541	                           jne 0x4000a03	       311	refs.c	FUNCTION_16	IF_3
0x40009c2	          0x4889df	                            mov rdi, rbx	       314	refs.c	FUNCTION_16	CALL_4
0x40009c5	      0xe800000000	                          call 0x40009ca	       314	refs.c	FUNCTION_16	CALL_4
0x40009ca	          0x4885c0	                           test rax, rax	       315	refs.c	FUNCTION_16	IF_4
0x40009cd	            0x742f	                            je 0x40009fe	       315	refs.c	FUNCTION_16	IF_4
0x40009cf	        0x488d5004	                      lea rdx, [rax + 4]	        53	string3.h	FUNCTION_152	CALL_3
0x40009d3	        0x488b4004	                mov rax, qword [rax + 4]	        53	string3.h	FUNCTION_152	CALL_3
0x40009d7	        0x48894500	                    mov qword [rbp], rax	        53	string3.h	FUNCTION_152	CALL_3
0x40009db	        0x488b4208	                mov rax, qword [rdx + 8]	        53	string3.h	FUNCTION_152	CALL_3
0x40009df	        0x48894508	                mov qword [rbp + 8], rax	        53	string3.h	FUNCTION_152	CALL_3
0x40009e3	          0x8b4210	            mov eax, dword [rdx + 0x10] 	        53	string3.h	FUNCTION_152	CALL_3
0x40009e6	          0x894510	            mov dword [rbp + 0x10], eax 	        53	string3.h	FUNCTION_152	CALL_3
0x40009e9	      0xb800000000	                              mov eax, 0	       319	refs.c	FUNCTION_16
0x40009ee	            0xeb13	                           jmp 0x4000a03	       319	refs.c	FUNCTION_16
0x40009f0	      0xb8ffffffff	                     mov eax, 0xffffffff	       308	refs.c	FUNCTION_16	IF_1	IF_2
0x40009f5	            0xeb0c	                           jmp 0x4000a03	       308	refs.c	FUNCTION_16	IF_1	IF_2
0x40009f7	      0xb8ffffffff	                     mov eax, 0xffffffff	       308	refs.c	FUNCTION_16	IF_1	IF_2
0x40009fc	            0xeb05	                           jmp 0x4000a03	       308	refs.c	FUNCTION_16	IF_1	IF_2
0x40009fe	      0xb8ffffffff	                     mov eax, 0xffffffff	       316	refs.c	FUNCTION_16	IF_4
0x4000a03	              0x5b	                                 pop rbx	       320	refs.c	FUNCTION_16
0x4000a04	              0x5d	                                 pop rbp	       320	refs.c	FUNCTION_16
0x4000a05	            0x415c	                                 pop r12	       320	refs.c	FUNCTION_16
0x4000a07	              0xc3	                                     ret	       320	refs.c	FUNCTION_16
refs_create_reflog	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	5
0x4003a4d	        0x4883ec08	                              sub rsp, 8	      2069	refs.c	FUNCTION_112
0x4003a51	          0x488b07	                    mov rax, qword [rdi]	      2070	refs.c	FUNCTION_112	CALL_1
0x4003a54	    0xff9098000000	                 call qword [rax + 0x98]	      2070	refs.c	FUNCTION_112	CALL_1
0x4003a5a	        0x4883c408	                              add rsp, 8	      2071	refs.c	FUNCTION_112
0x4003a5e	              0xc3	                                     ret	      2071	refs.c	FUNCTION_112
refs_delete_refs	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	5
0x4003b48	        0x4883ec08	                              sub rsp, 8	      2126	refs.c	FUNCTION_119
0x4003b4c	          0x488b07	                    mov rax, qword [rdi]	      2127	refs.c	FUNCTION_119	CALL_1
0x4003b4f	          0xff5050	                 call qword [rax + 0x50]	      2127	refs.c	FUNCTION_119	CALL_1
0x4003b52	        0x4883c408	                              add rsp, 8	      2128	refs.c	FUNCTION_119
0x4003b56	              0xc3	                                     ret	      2128	refs.c	FUNCTION_119
refs_for_each_remote_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	7
0x400174d	        0x4883ec08	                              sub rsp, 8	       394	refs.c	FUNCTION_24
0x4001751	          0x4889d1	                            mov rcx, rdx	       395	refs.c	FUNCTION_24	CALL_1
0x4001754	          0x4889f2	                            mov rdx, rsi	       395	refs.c	FUNCTION_24	CALL_1
0x4001757	      0xbe00000000	                              mov esi, 0	       395	refs.c	FUNCTION_24	CALL_1
0x400175c	      0xe800000000	                          call 0x4001761	       395	refs.c	FUNCTION_24	CALL_1
0x4001761	        0x4883c408	                              add rsp, 8	       396	refs.c	FUNCTION_24
0x4001765	              0xc3	                                     ret	       396	refs.c	FUNCTION_24
refs_pack_refs	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	5
0x4002a2c	        0x4883ec08	                              sub rsp, 8	      1773	refs.c	FUNCTION_94
0x4002a30	          0x488b07	                    mov rax, qword [rdi]	      1774	refs.c	FUNCTION_94	CALL_1
0x4002a33	          0xff5040	                 call qword [rax + 0x40]	      1774	refs.c	FUNCTION_94	CALL_1
0x4002a36	        0x4883c408	                              add rsp, 8	      1775	refs.c	FUNCTION_94
0x4002a3a	              0xc3	                                     ret	      1775	refs.c	FUNCTION_94
ref_store_init	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,3:FOR,0:SWITCH,0	19
0x40001fb	              0x55	                                push rbp	      1655	refs.c	FUNCTION_88
0x40001fc	              0x53	                                push rbx	      1655	refs.c	FUNCTION_88
0x40001fd	        0x4883ec08	                              sub rsp, 8	      1655	refs.c	FUNCTION_88
0x4000201	          0x4889fb	                            mov rbx, rdi	      1655	refs.c	FUNCTION_88
0x4000204	            0x89f5	                            mov ebp, esi	      1655	refs.c	FUNCTION_88
0x4000206	      0xbf00000000	                              mov edi, 0	      1657	refs.c	FUNCTION_88	CALL_1
0x400020b	      0xe830feffff	       call sym.find_ref_storage_backend	      1657	refs.c	FUNCTION_88	CALL_1
0x4000210	          0x4885c0	                           test rax, rax	      1660	refs.c	FUNCTION_88	IF_1
0x4000213	            0x750f	                           jne 0x4000224	      1660	refs.c	FUNCTION_88	IF_1
0x4000215	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400021a	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400021f	      0xe800000000	                          call 0x4000224	      1661	refs.c	FUNCTION_88	CALL_2
0x4000224	            0x89ee	                            mov esi, ebp	      1663	refs.c	FUNCTION_88	CALL_3
0x4000226	          0x4889df	                            mov rdi, rbx	      1663	refs.c	FUNCTION_88	CALL_3
0x4000229	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x400022c	        0x4883c408	                              add rsp, 8	      1665	refs.c	FUNCTION_88
0x4000230	              0x5b	                                 pop rbx	      1665	refs.c	FUNCTION_88
0x4000231	              0x5d	                                 pop rbp	      1665	refs.c	FUNCTION_88
0x4000232	              0xc3	                                     ret	      1665	refs.c	FUNCTION_88
refname_is_safe	functions,0:ELSE,0:DO,1:IF,3:WHILE,0:CALL,7:FOR,0:SWITCH,0	71
0x4000751	            0x4154	                                push r12	       148	refs.c	FUNCTION_5
0x4000753	              0x55	                                push rbp	       148	refs.c	FUNCTION_5
0x4000754	              0x53	                                push rbx	       148	refs.c	FUNCTION_5
0x4000755	          0x4889fb	                            mov rbx, rdi	       148	refs.c	FUNCTION_5
0x4000758	      0xb800000000	                              mov eax, 0	       148	refs.c	FUNCTION_5
0x400075d	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000760	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000762	     0xf84ab000000	                            je 0x4000813	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000768	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_131	DO_1
0x400076c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000770	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000773	            0x74e8	                            je 0x400075d	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000775	            0xeb56	                           jmp 0x40007cd	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000777	          0x803b2f	                    cmp byte [rbx], 0x2f	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x400077a	     0xf8485000000	                            je 0x4000805	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000780	      0xb800000000	                              mov eax, 0	       158	refs.c	FUNCTION_5	IF_1	IF_2
0x4000785	      0x807c3bff2f	         cmp byte [rbx + rdi - 1], 0x2f 	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x400078a	     0xf84a9000000	                            je 0x4000839	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000790	      0xe800000000	                          call 0x4000795	       165	refs.c	FUNCTION_5	IF_1	CALL_3
0x4000795	          0x4989c4	                            mov r12, rax	       165	refs.c	FUNCTION_5	IF_1	CALL_3
0x4000798	          0x4889de	                            mov rsi, rbx	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x400079b	          0x4889c7	                            mov rdi, rax	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x400079e	      0xe800000000	                          call 0x40007a3	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x40007a3	      0xbd00000000	                              mov ebp, 0	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x40007a8	            0x85c0	                           test eax, eax	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x40007aa	            0x7515	                           jne 0x40007c1	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x40007ac	          0x4889de	                            mov rsi, rbx	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x40007af	          0x4c89e7	                            mov rdi, r12	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x40007b2	      0xe800000000	                          call 0x40007b7	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x40007b7	            0x85c0	                           test eax, eax	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x40007b9	        0x400f94c5	                                sete bpl	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x40007bd	        0x400fb6ed	                          movzx ebp, bpl	       166	refs.c	FUNCTION_5	IF_1	CALL_5
0x40007c1	          0x4c89e7	                            mov rdi, r12	       167	refs.c	FUNCTION_5	IF_1	CALL_6
0x40007c4	      0xe800000000	                          call 0x40007c9	       167	refs.c	FUNCTION_5	IF_1	CALL_6
0x40007c9	            0x89e8	                            mov eax, ebp	       168	refs.c	FUNCTION_5	IF_1
0x40007cb	            0xeb6c	                           jmp 0x4000839	       168	refs.c	FUNCTION_5	IF_1
0x40007cd	           0xfb617	                   movzx edx, byte [rdi]	       172	refs.c	FUNCTION_5	DO_1	IF_3	CALL_7
0x40007d0	           0xfb6ca	                           movzx ecx, dl	      1000	git-compat-util.h	FUNCTION_146	IF_1	CALL_1
0x40007d3	      0xb800000000	                              mov eax, 0	      1001	git-compat-util.h	FUNCTION_146	IF_1
0x40007d8	    0xf68100000000	                      test byte [rcx], 4	      1000	git-compat-util.h	FUNCTION_146	IF_1	CALL_1
0x40007df	            0x740b	                            je 0x40007ec	      1000	git-compat-util.h	FUNCTION_146	IF_1	CALL_1
0x40007e1	            0x89d0	                            mov eax, edx	      1006	git-compat-util.h	FUNCTION_146	ELSE_1
0x40007e3	          0xc0e805	                               shr al, 5	      1006	git-compat-util.h	FUNCTION_146	ELSE_1
0x40007e6	          0x83f001	                              xor eax, 1	      1006	git-compat-util.h	FUNCTION_146	ELSE_1
0x40007e9	          0x83e001	                              and eax, 1	      1006	git-compat-util.h	FUNCTION_146	ELSE_1
0x40007ec	          0x80fa5f	                            cmp dl, 0x5f	       172	refs.c	FUNCTION_5	DO_1	IF_3	CALL_7
0x40007ef	            0x7404	                            je 0x40007f5	       172	refs.c	FUNCTION_5	DO_1	IF_3	CALL_7
0x40007f1	            0x85c0	                           test eax, eax	       172	refs.c	FUNCTION_5	DO_1	IF_3	CALL_7
0x40007f3	            0x7417	                            je 0x400080c	       172	refs.c	FUNCTION_5	DO_1	IF_3	CALL_7
0x40007f5	        0x4883c701	                              add rdi, 1	       174	refs.c	FUNCTION_5	DO_1
0x40007f9	          0x803f00	                       cmp byte [rdi], 0	       175	refs.c	FUNCTION_5	DO_1
0x40007fc	            0x75cf	                           jne 0x40007cd	       175	refs.c	FUNCTION_5	DO_1
0x40007fe	      0xb801000000	                              mov eax, 1	       176	refs.c	FUNCTION_5
0x4000803	            0xeb34	                           jmp 0x4000839	       176	refs.c	FUNCTION_5
0x4000805	      0xb800000000	                              mov eax, 0	       158	refs.c	FUNCTION_5	IF_1	IF_2
0x400080a	            0xeb2d	                           jmp 0x4000839	       158	refs.c	FUNCTION_5	IF_1	IF_2
0x400080c	      0xb800000000	                              mov eax, 0	       173	refs.c	FUNCTION_5	DO_1	IF_3
0x4000811	            0xeb26	                           jmp 0x4000839	       173	refs.c	FUNCTION_5	DO_1	IF_3
0x4000813	      0xb800000000	                              mov eax, 0	       154	refs.c	FUNCTION_5	IF_1	CALL_2
0x4000818	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       154	refs.c	FUNCTION_5	IF_1	CALL_2
0x400081f	          0x4889df	                            mov rdi, rbx	       154	refs.c	FUNCTION_5	IF_1	CALL_2
0x4000822	            0xf2ae	              repne scasb al, byte [rdi]	       154	refs.c	FUNCTION_5	IF_1	CALL_2
0x4000824	          0x48f7d1	                                 not rcx	       154	refs.c	FUNCTION_5	IF_1	CALL_2
0x4000827	      0xb800000000	                              mov eax, 0	       158	refs.c	FUNCTION_5	IF_1	IF_2
0x400082c	        0x4883e901	                              sub rcx, 1	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000830	          0x4889cf	                            mov rdi, rcx	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000833	     0xf853effffff	                           jne 0x4000777	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000839	              0x5b	                                 pop rbx	       177	refs.c	FUNCTION_5
0x400083a	              0x5d	                                 pop rbp	       177	refs.c	FUNCTION_5
0x400083b	            0x415c	                                 pop r12	       177	refs.c	FUNCTION_5
0x400083d	              0xc3	                                     ret	       177	refs.c	FUNCTION_5
for_each_reflog_ent_reverse	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	17
0x4003711	            0x4154	                                push r12	      2039	refs.c	FUNCTION_107
0x4003713	              0x55	                                push rbp	      2039	refs.c	FUNCTION_107
0x4003714	              0x53	                                push rbx	      2039	refs.c	FUNCTION_107
0x4003715	          0x4889fb	                            mov rbx, rdi	      2039	refs.c	FUNCTION_107
0x4003718	          0x4889f5	                            mov rbp, rsi	      2039	refs.c	FUNCTION_107
0x400371b	          0x4989d4	                            mov r12, rdx	      2039	refs.c	FUNCTION_107
0x400371e	    0x488b3d000000	            mov rdi, qword [0x04003725] 	      2040	refs.c	FUNCTION_107	CALL_2
0x4003725	      0xe800000000	                          call 0x400372a	      2040	refs.c	FUNCTION_107	CALL_2
0x400372a	          0x4c89e1	                            mov rcx, r12	      2040	refs.c	FUNCTION_107	CALL_2
0x400372d	          0x4889ea	                            mov rdx, rbp	      2040	refs.c	FUNCTION_107	CALL_2
0x4003730	          0x4889de	                            mov rsi, rbx	      2040	refs.c	FUNCTION_107	CALL_2
0x4003733	          0x4889c7	                            mov rdi, rax	      2040	refs.c	FUNCTION_107	CALL_2
0x4003736	      0xe800000000	                          call 0x400373b	      2040	refs.c	FUNCTION_107	CALL_2
0x400373b	              0x5b	                                 pop rbx	      2042	refs.c	FUNCTION_107
0x400373c	              0x5d	                                 pop rbp	      2042	refs.c	FUNCTION_107
0x400373d	            0x415c	                                 pop r12	      2042	refs.c	FUNCTION_107
0x400373f	              0xc3	                                     ret	      2042	refs.c	FUNCTION_107
for_each_remote_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	15
0x4001c4a	              0x55	                                push rbp	       399	refs.c	FUNCTION_25
0x4001c4b	              0x53	                                push rbx	       399	refs.c	FUNCTION_25
0x4001c4c	        0x4883ec08	                              sub rsp, 8	       399	refs.c	FUNCTION_25
0x4001c50	          0x4889fb	                            mov rbx, rdi	       399	refs.c	FUNCTION_25
0x4001c53	          0x4889f5	                            mov rbp, rsi	       399	refs.c	FUNCTION_25
0x4001c56	    0x488b3d000000	            mov rdi, qword [0x04001c5d] 	       400	refs.c	FUNCTION_25	CALL_2
0x4001c5d	      0xe800000000	                          call 0x4001c62	       400	refs.c	FUNCTION_25	CALL_2
0x4001c62	          0x4889ea	                            mov rdx, rbp	       400	refs.c	FUNCTION_25	CALL_2
0x4001c65	          0x4889de	                            mov rsi, rbx	       400	refs.c	FUNCTION_25	CALL_2
0x4001c68	          0x4889c7	                            mov rdi, rax	       400	refs.c	FUNCTION_25	CALL_2
0x4001c6b	      0xe800000000	                          call 0x4001c70	       400	refs.c	FUNCTION_25	CALL_2
0x4001c70	        0x4883c408	                              add rsp, 8	       401	refs.c	FUNCTION_25
0x4001c74	              0x5b	                                 pop rbx	       401	refs.c	FUNCTION_25
0x4001c75	              0x5d	                                 pop rbp	       401	refs.c	FUNCTION_25
0x4001c76	              0xc3	                                     ret	       401	refs.c	FUNCTION_25
check_refname_format	functions,0:ELSE,0:DO,0:IF,5:WHILE,1:CALL,2:FOR,0:SWITCH,0	90
0x4000624	            0x4155	                                push r13	       120	refs.c	FUNCTION_4
0x4000626	            0x4154	                                push r12	       120	refs.c	FUNCTION_4
0x4000628	              0x55	                                push rbp	       120	refs.c	FUNCTION_4
0x4000629	              0x53	                                push rbx	       120	refs.c	FUNCTION_4
0x400062a	        0x4883ec08	                              sub rsp, 8	       120	refs.c	FUNCTION_4
0x400062e	          0x4889fb	                            mov rbx, rdi	       120	refs.c	FUNCTION_4
0x4000631	          0x4189f4	                           mov r12d, esi	       120	refs.c	FUNCTION_4
0x4000634	          0x803f40	                    cmp byte [rdi], 0x40	       123	refs.c	FUNCTION_4	IF_1	CALL_1
0x4000637	            0x7516	                           jne 0x400064f	       123	refs.c	FUNCTION_4	IF_1	CALL_1
0x4000639	      0xb8ffffffff	                     mov eax, 0xffffffff	       125	refs.c	FUNCTION_4	IF_1
0x400063e	        0x807f0100	                   cmp byte [rdi + 1], 0	       123	refs.c	FUNCTION_4	IF_1	CALL_1
0x4000642	     0xf84fe000000	                            je 0x4000746	       123	refs.c	FUNCTION_4	IF_1	CALL_1
0x4000648	      0xbd00000000	                              mov ebp, 0	       123	refs.c	FUNCTION_4	IF_1	CALL_1
0x400064d	            0xeb05	                           jmp 0x4000654	       123	refs.c	FUNCTION_4	IF_1	CALL_1
0x400064f	      0xbd00000000	                              mov ebp, 0	       123	refs.c	FUNCTION_4	IF_1	CALL_1
0x4000654	          0x4889df	                            mov rdi, rbx	       123	refs.c	FUNCTION_4	IF_1	CALL_1
0x4000657	      0xb900000000	                              mov ecx, 0	        77	refs.c	FUNCTION_3
0x400065c	           0xfb617	                   movzx edx, byte [rdi]	        80	refs.c	FUNCTION_3	FOR_1
0x400065f	           0xfb6c2	                           movzx eax, dl	        81	refs.c	FUNCTION_3	FOR_1
0x4000662	    0x80b800000000	                       cmp byte [rax], 5	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000669	            0x7730	                            ja 0x400069b	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x400066b	     0xfb680000000	                   movzx eax, byte [rax]	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000672	    0xff24c5000000	                       jmp qword [rax*8]	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000679	          0x80f92e	                            cmp cl, 0x2e	        86	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x400067c	            0x751d	                           jne 0x400069b	        86	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x400067e	      0xe98d000000	                           jmp 0x4000710	        86	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x4000683	          0x80f940	                            cmp cl, 0x40	        90	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x4000686	            0x7513	                           jne 0x400069b	        90	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x4000688	      0xe98a000000	                           jmp 0x4000717	        90	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x400068d	        0x41f6c402	                            test r12b, 2	        96	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x4000691	     0xf8487000000	                            je 0x400071e	        96	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x4000697	        0x4183e4fd	                    and r12d, 0xfffffffd	       103	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x400069b	        0x4883c701	                              add rdi, 1	        79	refs.c	FUNCTION_3	FOR_1
0x400069f	            0x89d1	                            mov ecx, edx	       106	refs.c	FUNCTION_3	FOR_1
0x40006a1	            0xebb9	                           jmp 0x400065c	       106	refs.c	FUNCTION_3	FOR_1
0x40006a3	          0x4839fb	                            cmp rbx, rdi	       109	refs.c	FUNCTION_3	IF_4
0x40006a6	            0x747d	                            je 0x4000725	       109	refs.c	FUNCTION_3	IF_4
0x40006a8	          0x803b2e	                    cmp byte [rbx], 0x2e	       111	refs.c	FUNCTION_3	IF_5
0x40006ab	            0x747f	                            je 0x400072c	       111	refs.c	FUNCTION_3	IF_5
0x40006ad	          0x4989fd	                            mov r13, rdi	       113	refs.c	FUNCTION_3	IF_6
0x40006b0	          0x4929dd	                            sub r13, rbx	       113	refs.c	FUNCTION_3	IF_6
0x40006b3	        0x4983fd04	                              cmp r13, 4	       113	refs.c	FUNCTION_3	IF_6
0x40006b7	            0x7e17	                           jle 0x40006d0	       113	refs.c	FUNCTION_3	IF_6
0x40006b9	        0x4883ef05	                              sub rdi, 5	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x40006bd	      0xba05000000	                              mov edx, 5	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x40006c2	      0xbe00000000	                              mov esi, 0	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x40006c7	      0xe800000000	                          call 0x40006cc	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x40006cc	            0x85c0	                           test eax, eax	       113	refs.c	FUNCTION_3	IF_6
0x40006ce	            0x7463	                            je 0x4000733	       113	refs.c	FUNCTION_3	IF_6
0x40006d0	          0x4585ed	                         test r13d, r13d	       130	refs.c	FUNCTION_4	WHILE_1	IF_2
0x40006d3	            0x7e65	                           jle 0x400073a	       130	refs.c	FUNCTION_4	WHILE_1	IF_2
0x40006d5	          0x83c501	                              add ebp, 1	       133	refs.c	FUNCTION_4	WHILE_1
0x40006d8	          0x4963c5	                        movsxd rax, r13d	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x40006db	        0x803c0300	                 cmp byte [rbx + rax], 0	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x40006df	            0x740a	                            je 0x40006eb	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x40006e1	      0x488d5c0301	                lea rbx, [rbx + rax + 1]	       137	refs.c	FUNCTION_4	WHILE_1
0x40006e6	      0xe969ffffff	                           jmp 0x4000654	       138	refs.c	FUNCTION_4	WHILE_1
0x40006eb	      0x807c03ff2e	         cmp byte [rbx + rax - 1], 0x2e 	       140	refs.c	FUNCTION_4	IF_4
0x40006f0	            0x744f	                            je 0x4000741	       140	refs.c	FUNCTION_4	IF_4
0x40006f2	        0x4183f401	                             xor r12d, 1	       142	refs.c	FUNCTION_4	IF_5
0x40006f6	          0x83fd01	                              cmp ebp, 1	       142	refs.c	FUNCTION_4	IF_5
0x40006f9	           0xf9ec0	                                setle al	       142	refs.c	FUNCTION_4	IF_5
0x40006fc	           0xfb6c0	                           movzx eax, al	       142	refs.c	FUNCTION_4	IF_5
0x40006ff	          0x4121c4	                           and r12d, eax	       142	refs.c	FUNCTION_4	IF_5
0x4000702	          0x4489e0	                           mov eax, r12d	       142	refs.c	FUNCTION_4	IF_5
0x4000705	            0xf7d8	                                 neg eax	       142	refs.c	FUNCTION_4	IF_5
0x4000707	            0xeb3d	                           jmp 0x4000746	       142	refs.c	FUNCTION_4	IF_5
0x4000709	      0xb8ffffffff	                     mov eax, 0xffffffff	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x400070e	            0xeb36	                           jmp 0x4000746	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x4000710	      0xb8ffffffff	                     mov eax, 0xffffffff	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x4000715	            0xeb2f	                           jmp 0x4000746	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x4000717	      0xb8ffffffff	                     mov eax, 0xffffffff	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x400071c	            0xeb28	                           jmp 0x4000746	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x400071e	      0xb8ffffffff	                     mov eax, 0xffffffff	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x4000723	            0xeb21	                           jmp 0x4000746	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x4000725	      0xb8ffffffff	                     mov eax, 0xffffffff	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x400072a	            0xeb1a	                           jmp 0x4000746	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x400072c	      0xb8ffffffff	                     mov eax, 0xffffffff	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x4000731	            0xeb13	                           jmp 0x4000746	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x4000733	      0xb8ffffffff	                     mov eax, 0xffffffff	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x4000738	            0xeb0c	                           jmp 0x4000746	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x400073a	      0xb8ffffffff	                     mov eax, 0xffffffff	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x400073f	            0xeb05	                           jmp 0x4000746	       131	refs.c	FUNCTION_4	WHILE_1	IF_2
0x4000741	      0xb8ffffffff	                     mov eax, 0xffffffff	       141	refs.c	FUNCTION_4	IF_4
0x4000746	        0x4883c408	                              add rsp, 8	       145	refs.c	FUNCTION_4
0x400074a	              0x5b	                                 pop rbx	       145	refs.c	FUNCTION_4
0x400074b	              0x5d	                                 pop rbp	       145	refs.c	FUNCTION_4
0x400074c	            0x415c	                                 pop r12	       145	refs.c	FUNCTION_4
0x400074e	            0x415d	                                 pop r13	       145	refs.c	FUNCTION_4
0x4000750	              0xc3	                                     ret	       145	refs.c	FUNCTION_4
create_symref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	17
0x4002b1a	            0x4154	                                push r12	      1816	refs.c	FUNCTION_98
0x4002b1c	              0x55	                                push rbp	      1816	refs.c	FUNCTION_98
0x4002b1d	              0x53	                                push rbx	      1816	refs.c	FUNCTION_98
0x4002b1e	          0x4889fb	                            mov rbx, rdi	      1816	refs.c	FUNCTION_98
0x4002b21	          0x4889f5	                            mov rbp, rsi	      1816	refs.c	FUNCTION_98
0x4002b24	          0x4989d4	                            mov r12, rdx	      1816	refs.c	FUNCTION_98
0x4002b27	    0x488b3d000000	            mov rdi, qword [0x04002b2e] 	      1817	refs.c	FUNCTION_98	CALL_2
0x4002b2e	      0xe800000000	                          call 0x4002b33	      1817	refs.c	FUNCTION_98	CALL_2
0x4002b33	          0x4c89e1	                            mov rcx, r12	      1817	refs.c	FUNCTION_98	CALL_2
0x4002b36	          0x4889ea	                            mov rdx, rbp	      1817	refs.c	FUNCTION_98	CALL_2
0x4002b39	          0x4889de	                            mov rsi, rbx	      1817	refs.c	FUNCTION_98	CALL_2
0x4002b3c	          0x4889c7	                            mov rdi, rax	      1817	refs.c	FUNCTION_98	CALL_2
0x4002b3f	      0xe800000000	                          call 0x4002b44	      1817	refs.c	FUNCTION_98	CALL_2
0x4002b44	              0x5b	                                 pop rbx	      1819	refs.c	FUNCTION_98
0x4002b45	              0x5d	                                 pop rbp	      1819	refs.c	FUNCTION_98
0x4002b46	            0x415c	                                 pop r12	      1819	refs.c	FUNCTION_98
0x4002b48	              0xc3	                                     ret	      1819	refs.c	FUNCTION_98
ref_transaction_verify	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,2:FOR,0:SWITCH,0	15
0x4001372	        0x4883ec08	                              sub rsp, 8	      1061	refs.c	FUNCTION_58
0x4001376	          0x4885d2	                           test rdx, rdx	      1062	refs.c	FUNCTION_58	IF_1
0x4001379	            0x750f	                           jne 0x400138a	      1062	refs.c	FUNCTION_58	IF_1
0x400137b	      0xbf00000000	                              mov edi, 0	      1063	refs.c	FUNCTION_58	CALL_1
0x4001380	      0xb800000000	                              mov eax, 0	      1063	refs.c	FUNCTION_58	CALL_1
0x4001385	      0xe800000000	                          call 0x400138a	      1063	refs.c	FUNCTION_58	CALL_1
0x400138a	        0x4883ec08	                              sub rsp, 8	      1064	refs.c	FUNCTION_58	CALL_2
0x400138e	            0x4150	                                 push r8	      1064	refs.c	FUNCTION_58	CALL_2
0x4001390	    0x41b900000000	                              mov r9d, 0	      1064	refs.c	FUNCTION_58	CALL_2
0x4001396	          0x4189c8	                            mov r8d, ecx	      1064	refs.c	FUNCTION_58	CALL_2
0x4001399	          0x4889d1	                            mov rcx, rdx	      1064	refs.c	FUNCTION_58	CALL_2
0x400139c	      0xba00000000	                              mov edx, 0	      1064	refs.c	FUNCTION_58	CALL_2
0x40013a1	      0xe800000000	                          call 0x40013a6	      1064	refs.c	FUNCTION_58	CALL_2
0x40013a6	        0x4883c418	                           add rsp, 0x18	      1067	refs.c	FUNCTION_58
0x40013aa	              0xc3	                                     ret	      1067	refs.c	FUNCTION_58
refs_read_raw_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	5
0x40017ab	        0x4883ec08	                              sub rsp, 8	      1466	refs.c	FUNCTION_80
0x40017af	          0x488b07	                    mov rax, qword [rdi]	      1467	refs.c	FUNCTION_80	CALL_1
0x40017b2	          0xff5070	                 call qword [rax + 0x70]	      1467	refs.c	FUNCTION_80	CALL_1
0x40017b5	        0x4883c408	                              add rsp, 8	      1468	refs.c	FUNCTION_80
0x40017b9	              0xc3	                                     ret	      1468	refs.c	FUNCTION_80
refs_rename_ref_available	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,5:FOR,0:SWITCH,0	46
0x40035d9	              0x55	                                push rbp	      1309	refs.c	FUNCTION_65
0x40035da	              0x53	                                push rbx	      1309	refs.c	FUNCTION_65
0x40035db	        0x4883ec58	                           sub rsp, 0x58	      1309	refs.c	FUNCTION_65
0x40035df	          0x4889fb	                            mov rbx, rdi	      1309	refs.c	FUNCTION_65
0x40035e2	          0x4889d5	                            mov rbp, rdx	      1309	refs.c	FUNCTION_65
0x40035e5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1309	refs.c	FUNCTION_65
0x40035ee	      0x4889442448	             mov qword [rsp + 0x48], rax	      1309	refs.c	FUNCTION_65
0x40035f3	            0x31c0	                            xor eax, eax	      1309	refs.c	FUNCTION_65
0x40035f5	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1310	refs.c	FUNCTION_65
0x40035fe	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1310	refs.c	FUNCTION_65
0x4003606	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      1310	refs.c	FUNCTION_65
0x400360e	      0x80642430fe	             and byte [rsp + 0x30], 0xfe	      1310	refs.c	FUNCTION_65
0x4003613	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1310	refs.c	FUNCTION_65
0x400361c	    0x48c704240000	                      mov qword [rsp], 0	      1311	refs.c	FUNCTION_65
0x4003624	    0x48c744240800	                  mov qword [rsp + 8], 0	      1311	refs.c	FUNCTION_65
0x400362d	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1311	refs.c	FUNCTION_65
0x4003636	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1314	refs.c	FUNCTION_65	CALL_1
0x400363b	      0xe800000000	                          call 0x4003640	      1314	refs.c	FUNCTION_65	CALL_1
0x4003640	          0x4989e0	                             mov r8, rsp	      1315	refs.c	FUNCTION_65	CALL_2
0x4003643	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      1315	refs.c	FUNCTION_65	CALL_2
0x4003648	      0xba00000000	                              mov edx, 0	      1315	refs.c	FUNCTION_65	CALL_2
0x400364d	          0x4889ee	                            mov rsi, rbp	      1315	refs.c	FUNCTION_65	CALL_2
0x4003650	          0x4889df	                            mov rdi, rbx	      1315	refs.c	FUNCTION_65	CALL_2
0x4003653	      0xe800000000	                          call 0x4003658	      1315	refs.c	FUNCTION_65	CALL_2
0x4003658	            0x85c0	                           test eax, eax	      1315	refs.c	FUNCTION_65	CALL_2
0x400365a	           0xf94c3	                                 sete bl	      1315	refs.c	FUNCTION_65	CALL_2
0x400365d	           0xfb6db	                           movzx ebx, bl	      1315	refs.c	FUNCTION_65	CALL_2
0x4003660	            0x7414	                            je 0x4003676	      1317	refs.c	FUNCTION_65	IF_1
0x4003662	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1318	refs.c	FUNCTION_65	CALL_3
0x4003667	      0xbf00000000	                              mov edi, 0	      1318	refs.c	FUNCTION_65	CALL_3
0x400366c	      0xb800000000	                              mov eax, 0	      1318	refs.c	FUNCTION_65	CALL_3
0x4003671	      0xe800000000	                          call 0x4003676	      1318	refs.c	FUNCTION_65	CALL_3
0x4003676	      0xbe00000000	                              mov esi, 0	      1320	refs.c	FUNCTION_65	CALL_4
0x400367b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1320	refs.c	FUNCTION_65	CALL_4
0x4003680	      0xe800000000	                          call 0x4003685	      1320	refs.c	FUNCTION_65	CALL_4
0x4003685	          0x4889e7	                            mov rdi, rsp	      1321	refs.c	FUNCTION_65	CALL_5
0x4003688	      0xe800000000	                          call 0x400368d	      1321	refs.c	FUNCTION_65	CALL_5
0x400368d	            0x89d8	                            mov eax, ebx	      1323	refs.c	FUNCTION_65
0x400368f	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      1323	refs.c	FUNCTION_65
0x4003694	    0x644833142528	                xor rdx, qword fs:[0x28]	      1323	refs.c	FUNCTION_65
0x400369d	            0x7405	                            je 0x40036a4	      1323	refs.c	FUNCTION_65
0x400369f	      0xe800000000	                          call 0x40036a4	      1323	refs.c	FUNCTION_65
0x40036a4	        0x4883c458	                           add rsp, 0x58	      1323	refs.c	FUNCTION_65
0x40036a8	              0x5b	                                 pop rbx	      1323	refs.c	FUNCTION_65
0x40036a9	              0x5d	                                 pop rbp	      1323	refs.c	FUNCTION_65
0x40036aa	              0xc3	                                     ret	      1323	refs.c	FUNCTION_65
refs_head_ref	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,2:FOR,0:SWITCH,0	31
0x40019f6	              0x55	                                push rbp	      1326	refs.c	FUNCTION_66
0x40019f7	              0x53	                                push rbx	      1326	refs.c	FUNCTION_66
0x40019f8	        0x4883ec38	                           sub rsp, 0x38	      1326	refs.c	FUNCTION_66
0x40019fc	          0x4889f3	                            mov rbx, rsi	      1326	refs.c	FUNCTION_66
0x40019ff	          0x4889d5	                            mov rbp, rdx	      1326	refs.c	FUNCTION_66
0x4001a02	    0x64488b042528	                mov rax, qword fs:[0x28]	      1326	refs.c	FUNCTION_66
0x4001a0b	      0x4889442428	             mov qword [rsp + 0x28], rax	      1326	refs.c	FUNCTION_66
0x4001a10	            0x31c0	                            xor eax, eax	      1326	refs.c	FUNCTION_66
0x4001a12	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x4001a17	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x4001a1c	      0xba01000000	                              mov edx, 1	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x4001a21	      0xbe00000000	                              mov esi, 0	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x4001a26	      0xe800000000	                          call 0x4001a2b	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x4001a2b	      0xba00000000	                              mov edx, 0	      1334	refs.c	FUNCTION_66
0x4001a30	            0x85c0	                           test eax, eax	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x4001a32	            0x7515	                           jne 0x4001a49	      1330	refs.c	FUNCTION_66	IF_1	CALL_1
0x4001a34	          0x4889e9	                            mov rcx, rbp	      1332	refs.c	FUNCTION_66	CALL_2
0x4001a37	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1332	refs.c	FUNCTION_66	CALL_2
0x4001a3b	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1332	refs.c	FUNCTION_66	CALL_2
0x4001a40	      0xbf00000000	                              mov edi, 0	      1332	refs.c	FUNCTION_66	CALL_2
0x4001a45	            0xffd3	                                call rbx	      1332	refs.c	FUNCTION_66	CALL_2
0x4001a47	            0x89c2	                            mov edx, eax	      1332	refs.c	FUNCTION_66	CALL_2
0x4001a49	            0x89d0	                            mov eax, edx	      1335	refs.c	FUNCTION_66
0x4001a4b	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      1335	refs.c	FUNCTION_66
0x4001a50	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1335	refs.c	FUNCTION_66
0x4001a59	            0x7405	                            je 0x4001a60	      1335	refs.c	FUNCTION_66
0x4001a5b	      0xe800000000	                          call 0x4001a60	      1335	refs.c	FUNCTION_66
0x4001a60	        0x4883c438	                           add rsp, 0x38	      1335	refs.c	FUNCTION_66
0x4001a64	              0x5b	                                 pop rbx	      1335	refs.c	FUNCTION_66
0x4001a65	              0x5d	                                 pop rbp	      1335	refs.c	FUNCTION_66
0x4001a66	              0xc3	                                     ret	      1335	refs.c	FUNCTION_66
expand_ref_prefix	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,1:SWITCH,0	32
0x4000c9a	            0x4155	                                push r13	       511	refs.c	FUNCTION_32
0x4000c9c	            0x4154	                                push r12	       511	refs.c	FUNCTION_32
0x4000c9e	              0x55	                                push rbp	       511	refs.c	FUNCTION_32
0x4000c9f	              0x53	                                push rbx	       511	refs.c	FUNCTION_32
0x4000ca0	        0x4883ec08	                              sub rsp, 8	       511	refs.c	FUNCTION_32
0x4000ca4	          0x4989fc	                            mov r12, rdi	       511	refs.c	FUNCTION_32
0x4000ca7	          0x4889f5	                            mov rbp, rsi	       511	refs.c	FUNCTION_32
0x4000caa	      0xb800000000	                              mov eax, 0	       513	refs.c	FUNCTION_32	CALL_1
0x4000caf	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       513	refs.c	FUNCTION_32	CALL_1
0x4000cb6	          0x4889f7	                            mov rdi, rsi	       513	refs.c	FUNCTION_32	CALL_1
0x4000cb9	            0xf2ae	              repne scasb al, byte [rdi]	       513	refs.c	FUNCTION_32	CALL_1
0x4000cbb	    0x488b35000000	            mov rsi, qword [0x04000cc2] 	       515	refs.c	FUNCTION_32	FOR_1
0x4000cc2	          0x4885f6	                           test rsi, rsi	       515	refs.c	FUNCTION_32	FOR_1
0x4000cc5	            0x742b	                            je 0x4000cf2	       515	refs.c	FUNCTION_32	FOR_1
0x4000cc7	          0x48f7d1	                                 not rcx	       515	refs.c	FUNCTION_32	FOR_1
0x4000cca	        0x448d69ff	                     lea r13d, [rcx - 1]	       515	refs.c	FUNCTION_32	FOR_1
0x4000cce	      0xbb00000000	                              mov ebx, 0	       515	refs.c	FUNCTION_32	FOR_1
0x4000cd3	          0x4889e9	                            mov rcx, rbp	       516	refs.c	FUNCTION_32	CALL_2
0x4000cd6	          0x4489ea	                           mov edx, r13d	       516	refs.c	FUNCTION_32	CALL_2
0x4000cd9	          0x4c89e7	                            mov rdi, r12	       516	refs.c	FUNCTION_32	CALL_2
0x4000cdc	      0xb800000000	                              mov eax, 0	       516	refs.c	FUNCTION_32	CALL_2
0x4000ce1	      0xe800000000	                          call 0x4000ce6	       516	refs.c	FUNCTION_32	CALL_2
0x4000ce6	        0x4883c308	                              add rbx, 8	       515	refs.c	FUNCTION_32	FOR_1
0x4000cea	          0x488b33	                    mov rsi, qword [rbx]	       515	refs.c	FUNCTION_32	FOR_1
0x4000ced	          0x4885f6	                           test rsi, rsi	       515	refs.c	FUNCTION_32	FOR_1
0x4000cf0	            0x75e1	                           jne 0x4000cd3	       515	refs.c	FUNCTION_32	FOR_1
0x4000cf2	        0x4883c408	                              add rsp, 8	       517	refs.c	FUNCTION_32
0x4000cf6	              0x5b	                                 pop rbx	       517	refs.c	FUNCTION_32
0x4000cf7	              0x5d	                                 pop rbp	       517	refs.c	FUNCTION_32
0x4000cf8	            0x415c	                                 pop r12	       517	refs.c	FUNCTION_32
0x4000cfa	            0x415d	                                 pop r13	       517	refs.c	FUNCTION_32
0x4000cfc	              0xc3	                                     ret	       517	refs.c	FUNCTION_32
refs_resolve_ref_unsafe	functions,0:ELSE,0:DO,0:IF,13:WHILE,0:CALL,8:FOR,1:SWITCH,0	133
0x40017ba	            0x4157	                                push r15	      1475	refs.c	FUNCTION_81
0x40017bc	            0x4156	                                push r14	      1475	refs.c	FUNCTION_81
0x40017be	            0x4155	                                push r13	      1475	refs.c	FUNCTION_81
0x40017c0	            0x4154	                                push r12	      1475	refs.c	FUNCTION_81
0x40017c2	              0x55	                                push rbp	      1475	refs.c	FUNCTION_81
0x40017c3	              0x53	                                push rbx	      1475	refs.c	FUNCTION_81
0x40017c4	        0x4883ec48	                           sub rsp, 0x48	      1475	refs.c	FUNCTION_81
0x40017c8	          0x4989fe	                            mov r14, rdi	      1475	refs.c	FUNCTION_81
0x40017cb	          0x4889f5	                            mov rbp, rsi	      1475	refs.c	FUNCTION_81
0x40017ce	          0x4189d7	                           mov r15d, edx	      1475	refs.c	FUNCTION_81
0x40017d1	        0x8954240c	              mov dword [rsp + 0xc], edx	      1475	refs.c	FUNCTION_81
0x40017d5	          0x4989cd	                            mov r13, rcx	      1475	refs.c	FUNCTION_81
0x40017d8	          0x4c89c3	                             mov rbx, r8	      1475	refs.c	FUNCTION_81
0x40017db	    0x64488b042528	                mov rax, qword fs:[0x28]	      1475	refs.c	FUNCTION_81
0x40017e4	      0x4889442438	             mov qword [rsp + 0x38], rax	      1475	refs.c	FUNCTION_81
0x40017e9	            0x31c0	                            xor eax, eax	      1475	refs.c	FUNCTION_81
0x40017eb	      0x488d442420	                   lea rax, [rsp + 0x20]	      1482	refs.c	FUNCTION_81	IF_1
0x40017f0	          0x4885c9	                           test rcx, rcx	      1482	refs.c	FUNCTION_81	IF_1
0x40017f3	        0x4c0f44e8	                          cmove r13, rax	      1482	refs.c	FUNCTION_81	IF_1
0x40017f7	      0x488d442418	                   lea rax, [rsp + 0x18]	      1484	refs.c	FUNCTION_81	IF_2
0x40017fc	          0x4d85c0	                             test r8, r8	      1484	refs.c	FUNCTION_81	IF_2
0x40017ff	        0x480f44d8	                          cmove rbx, rax	      1484	refs.c	FUNCTION_81	IF_2
0x4001803	    0xc70300000000	                      mov dword [rbx], 0	      1486	refs.c	FUNCTION_81
0x4001809	      0xbe01000000	                              mov esi, 1	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x400180e	          0x4889ef	                            mov rdi, rbp	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4001811	      0xe800000000	                          call 0x4001816	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4001816	            0x85c0	                           test eax, eax	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4001818	            0x742b	                            je 0x4001845	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x400181a	          0x4489f8	                           mov eax, r15d	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x400181d	            0xa804	                              test al, 4	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x400181f	            0x740c	                            je 0x400182d	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x4001821	          0x4889ef	                            mov rdi, rbp	      1490	refs.c	FUNCTION_81	IF_3	IF_4	CALL_2
0x4001824	      0xe800000000	                          call 0x4001829	      1490	refs.c	FUNCTION_81	IF_3	IF_4	CALL_2
0x4001829	            0x85c0	                           test eax, eax	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x400182b	            0x7515	                           jne 0x4001842	      1489	refs.c	FUNCTION_81	IF_3	IF_4
0x400182d	      0xe800000000	                          call 0x4001832	      1491	refs.c	FUNCTION_81	IF_3	IF_4
0x4001832	    0xc70016000000	                   mov dword [rax], 0x16	      1491	refs.c	FUNCTION_81	IF_3	IF_4
0x4001838	      0xb800000000	                              mov eax, 0	      1492	refs.c	FUNCTION_81	IF_3	IF_4
0x400183d	      0xe955010000	                           jmp 0x4001997	      1492	refs.c	FUNCTION_81	IF_3	IF_4
0x4001842	          0x830b08	                       or dword [rbx], 8	      1503	refs.c	FUNCTION_81	IF_3
0x4001845	    0x41bc05000000	                             mov r12d, 5	      1484	refs.c	FUNCTION_81	IF_2
0x400184b	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1544	refs.c	FUNCTION_81	FOR_1	IF_11
0x400184f	          0x4189c7	                           mov r15d, eax	      1544	refs.c	FUNCTION_81	FOR_1	IF_11
0x4001852	        0x4183e702	                             and r15d, 2	      1544	refs.c	FUNCTION_81	FOR_1	IF_11
0x4001856	          0x83e004	                              and eax, 4	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4001859	        0x89442408	                mov dword [rsp + 8], eax	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x400185d	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1507	refs.c	FUNCTION_81	FOR_1
0x4001865	      0x4c8d44241c	                    lea r8, [rsp + 0x1c]	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x400186a	      0xb900000000	                              mov ecx, 0	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x400186f	          0x4c89ea	                            mov rdx, r13	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4001872	          0x4889ee	                            mov rsi, rbp	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4001875	          0x4c89f7	                            mov rdi, r14	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4001878	      0xe800000000	                          call 0x400187d	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x400187d	            0x85c0	                           test eax, eax	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x400187f	            0x7463	                            je 0x40018e4	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4001881	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x4001885	             0x903	                     or dword [rbx], eax	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x4001887	      0xb800000000	                              mov eax, 0	      1515	refs.c	FUNCTION_81	FOR_1	IF_5	IF_6
0x400188c	      0xf644240c01	                test byte [rsp + 0xc], 1	      1514	refs.c	FUNCTION_81	FOR_1	IF_5	IF_6
0x4001891	     0xf8500010000	                           jne 0x4001997	      1514	refs.c	FUNCTION_81	FOR_1	IF_5	IF_6
0x4001897	      0xe800000000	                          call 0x400189c	      1522	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x400189c	            0x8b10	                    mov edx, dword [rax]	      1522	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x400189e	          0x8d42ec	                   lea eax, [rdx - 0x14]	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x40018a1	          0x83f801	                              cmp eax, 1	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x40018a4	            0x760e	                           jbe 0x40018b4	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x40018a6	      0xb800000000	                              mov eax, 0	      1525	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x40018ab	          0x83fa02	                              cmp edx, 2	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x40018ae	     0xf85e3000000	                           jne 0x4001997	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x40018b4	    0x49c745000000	                      mov qword [r13], 0	        90	string3.h	FUNCTION_155	CALL_6
0x40018bc	    0x49c745080000	                  mov qword [r13 + 8], 0	        90	string3.h	FUNCTION_155	CALL_6
0x40018c4	    0x41c745100000	               mov dword [r13 + 0x10], 0	        90	string3.h	FUNCTION_155	CALL_6
0x40018cc	            0x8b13	                    mov edx, dword [rbx]	      1528	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x40018ce	          0x4889e8	                            mov rax, rbp	      1528	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x40018d1	          0xf6c208	                              test dl, 8	      1528	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x40018d4	     0xf84bd000000	                            je 0x4001997	      1528	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x40018da	          0x83ca04	                               or edx, 4	      1529	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x40018dd	            0x8913	                    mov dword [rbx], edx	      1529	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x40018df	      0xe9b3000000	                           jmp 0x4001997	      1529	refs.c	FUNCTION_81	FOR_1	IF_5	IF_8
0x40018e4	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      1533	refs.c	FUNCTION_81	FOR_1
0x40018e8	            0x89c2	                            mov edx, eax	      1533	refs.c	FUNCTION_81	FOR_1
0x40018ea	             0xb13	                     or edx, dword [rbx]	      1533	refs.c	FUNCTION_81	FOR_1
0x40018ec	            0x8913	                    mov dword [rbx], edx	      1533	refs.c	FUNCTION_81	FOR_1
0x40018ee	            0xa801	                              test al, 1	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x40018f0	            0x7529	                           jne 0x400191b	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x40018f2	          0x4889e8	                            mov rax, rbp	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x40018f5	          0xf6c208	                              test dl, 8	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x40018f8	     0xf8499000000	                            je 0x4001997	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x40018fe	    0x49c745000000	                      mov qword [r13], 0	        90	string3.h	FUNCTION_155	CALL_6
0x4001906	    0x49c745080000	                  mov qword [r13 + 8], 0	        90	string3.h	FUNCTION_155	CALL_6
0x400190e	    0x41c745100000	               mov dword [r13 + 0x10], 0	        90	string3.h	FUNCTION_155	CALL_6
0x4001916	          0x830b04	                       or dword [rbx], 4	      1538	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4001919	            0xeb7c	                           jmp 0x4001997	      1538	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x400191b	    0x488b2d000000	            mov rbp, qword [0x04001922] 	      1543	refs.c	FUNCTION_81	FOR_1
0x4001922	          0x4585ff	                         test r15d, r15d	      1544	refs.c	FUNCTION_81	FOR_1	IF_11
0x4001925	            0x741d	                            je 0x4001944	      1544	refs.c	FUNCTION_81	FOR_1	IF_11
0x4001927	    0x49c745000000	                      mov qword [r13], 0	        90	string3.h	FUNCTION_155	CALL_6
0x400192f	    0x49c745080000	                  mov qword [r13 + 8], 0	        90	string3.h	FUNCTION_155	CALL_6
0x4001937	    0x41c745100000	               mov dword [r13 + 0x10], 0	        90	string3.h	FUNCTION_155	CALL_6
0x400193f	          0x4889e8	                            mov rax, rbp	      1543	refs.c	FUNCTION_81	FOR_1
0x4001942	            0xeb53	                           jmp 0x4001997	      1546	refs.c	FUNCTION_81	FOR_1	IF_11
0x4001944	      0xbe01000000	                              mov esi, 1	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4001949	          0x4889ef	                            mov rdi, rbp	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x400194c	      0xe800000000	                          call 0x4001951	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4001951	            0x85c0	                           test eax, eax	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4001953	            0x7428	                            je 0x400197d	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4001955	      0x837c240800	                  cmp dword [rsp + 8], 0	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x400195a	            0x740c	                            je 0x4001968	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x400195c	          0x4889ef	                            mov rdi, rbp	      1550	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13	CALL_8
0x400195f	      0xe800000000	                          call 0x4001964	      1550	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13	CALL_8
0x4001964	            0x85c0	                           test eax, eax	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4001966	            0x7512	                           jne 0x400197a	      1549	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4001968	      0xe800000000	                          call 0x400196d	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x400196d	    0xc70016000000	                   mov dword [rax], 0x16	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4001973	      0xb800000000	                              mov eax, 0	      1552	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4001978	            0xeb1d	                           jmp 0x4001997	      1552	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x400197a	          0x830b0c	                     or dword [rbx], 0xc	      1555	refs.c	FUNCTION_81	FOR_1	IF_12
0x400197d	        0x4183ec01	                             sub r12d, 1	      1506	refs.c	FUNCTION_81	FOR_1
0x4001981	     0xf85d6feffff	                           jne 0x400185d	      1506	refs.c	FUNCTION_81	FOR_1
0x4001987	      0xe800000000	                          call 0x400198c	      1559	refs.c	FUNCTION_81
0x400198c	    0xc70028000000	                   mov dword [rax], 0x28	      1559	refs.c	FUNCTION_81
0x4001992	      0xb800000000	                              mov eax, 0	      1560	refs.c	FUNCTION_81
0x4001997	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      1561	refs.c	FUNCTION_81
0x400199c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1561	refs.c	FUNCTION_81
0x40019a5	            0x7405	                            je 0x40019ac	      1561	refs.c	FUNCTION_81
0x40019a7	      0xe800000000	                          call 0x40019ac	      1561	refs.c	FUNCTION_81
0x40019ac	        0x4883c448	                           add rsp, 0x48	      1561	refs.c	FUNCTION_81
0x40019b0	              0x5b	                                 pop rbx	      1561	refs.c	FUNCTION_81
0x40019b1	              0x5d	                                 pop rbp	      1561	refs.c	FUNCTION_81
0x40019b2	            0x415c	                                 pop r12	      1561	refs.c	FUNCTION_81
0x40019b4	            0x415d	                                 pop r13	      1561	refs.c	FUNCTION_81
0x40019b6	            0x415e	                                 pop r14	      1561	refs.c	FUNCTION_81
0x40019b8	            0x415f	                                 pop r15	      1561	refs.c	FUNCTION_81
0x40019ba	              0xc3	                                     ret	      1561	refs.c	FUNCTION_81
for_each_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	15
0x4001cc1	              0x55	                                push rbp	      1397	refs.c	FUNCTION_71
0x4001cc2	              0x53	                                push rbx	      1397	refs.c	FUNCTION_71
0x4001cc3	        0x4883ec08	                              sub rsp, 8	      1397	refs.c	FUNCTION_71
0x4001cc7	          0x4889fb	                            mov rbx, rdi	      1397	refs.c	FUNCTION_71
0x4001cca	          0x4889f5	                            mov rbp, rsi	      1397	refs.c	FUNCTION_71
0x4001ccd	    0x488b3d000000	            mov rdi, qword [0x04001cd4] 	      1398	refs.c	FUNCTION_71	CALL_2
0x4001cd4	      0xe800000000	                          call 0x4001cd9	      1398	refs.c	FUNCTION_71	CALL_2
0x4001cd9	          0x4889ea	                            mov rdx, rbp	      1398	refs.c	FUNCTION_71	CALL_2
0x4001cdc	          0x4889de	                            mov rsi, rbx	      1398	refs.c	FUNCTION_71	CALL_2
0x4001cdf	          0x4889c7	                            mov rdi, rax	      1398	refs.c	FUNCTION_71	CALL_2
0x4001ce2	      0xe800000000	                          call 0x4001ce7	      1398	refs.c	FUNCTION_71	CALL_2
0x4001ce7	        0x4883c408	                              add rsp, 8	      1399	refs.c	FUNCTION_71
0x4001ceb	              0x5b	                                 pop rbx	      1399	refs.c	FUNCTION_71
0x4001cec	              0x5d	                                 pop rbp	      1399	refs.c	FUNCTION_71
0x4001ced	              0xc3	                                     ret	      1399	refs.c	FUNCTION_71
is_branch	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	19
0x4000ee8	          0x4889fa	                            mov rdx, rdi	       812	refs.c	FUNCTION_47
0x4000eeb	      0xbf00000000	                              mov edi, 0	       813	refs.c	FUNCTION_47	CALL_2
0x4000ef0	      0xb905000000	                              mov ecx, 5	       813	refs.c	FUNCTION_47	CALL_2
0x4000ef5	          0x4889d6	                            mov rsi, rdx	       813	refs.c	FUNCTION_47	CALL_2
0x4000ef8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       813	refs.c	FUNCTION_47	CALL_2
0x4000efa	        0x400f97c6	                                seta sil	       813	refs.c	FUNCTION_47	CALL_2
0x4000efe	           0xf92c1	                                 setb cl	       813	refs.c	FUNCTION_47	CALL_2
0x4000f01	      0xb801000000	                              mov eax, 1	       813	refs.c	FUNCTION_47	CALL_2
0x4000f06	          0x4038ce	                             cmp sil, cl	       813	refs.c	FUNCTION_47	CALL_2
0x4000f09	            0x741d	                            je 0x4000f28	       813	refs.c	FUNCTION_47	CALL_2
0x4000f0b	        0x4883ec08	                              sub rsp, 8	       812	refs.c	FUNCTION_47
0x4000f0f	          0x4889d7	                            mov rdi, rdx	       812	refs.c	FUNCTION_47
0x4000f12	      0xbe00000000	                              mov esi, 0	       813	refs.c	FUNCTION_47	CALL_2
0x4000f17	      0xe800000000	                          call 0x4000f1c	       813	refs.c	FUNCTION_47	CALL_2
0x4000f1c	            0x85c0	                           test eax, eax	       813	refs.c	FUNCTION_47	CALL_2
0x4000f1e	           0xf95c0	                                setne al	       813	refs.c	FUNCTION_47	CALL_2
0x4000f21	           0xfb6c0	                           movzx eax, al	       813	refs.c	FUNCTION_47	CALL_2
0x4000f24	        0x4883c408	                              add rsp, 8	       814	refs.c	FUNCTION_47
0x4000f28	            0xf3c3	                                     ret	       814	refs.c	FUNCTION_47
refs_verify_refname_available	functions,0:ELSE,1:DO,0:IF,6:WHILE,1:CALL,23:FOR,1:SWITCH,0	183
0x40032fd	            0x4157	                                push r15	      1930	refs.c	FUNCTION_103
0x40032ff	            0x4156	                                push r14	      1930	refs.c	FUNCTION_103
0x4003301	            0x4155	                                push r13	      1930	refs.c	FUNCTION_103
0x4003303	            0x4154	                                push r12	      1930	refs.c	FUNCTION_103
0x4003305	              0x55	                                push rbp	      1930	refs.c	FUNCTION_103
0x4003306	              0x53	                                push rbx	      1930	refs.c	FUNCTION_103
0x4003307	        0x4883ec78	                           sub rsp, 0x78	      1930	refs.c	FUNCTION_103
0x400330b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1930	refs.c	FUNCTION_103
0x4003314	      0x4889442468	             mov qword [rsp + 0x68], rax	      1930	refs.c	FUNCTION_103
0x4003319	            0x31c0	                            xor eax, eax	      1930	refs.c	FUNCTION_103
0x400331b	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1933	refs.c	FUNCTION_103
0x4003324	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1933	refs.c	FUNCTION_103
0x400332d	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1933	refs.c	FUNCTION_103
0x4003336	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1934	refs.c	FUNCTION_103
0x400333f	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1934	refs.c	FUNCTION_103
0x4003348	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1934	refs.c	FUNCTION_103
0x4003351	          0x4d85c0	                             test r8, r8	      1946	refs.c	FUNCTION_103	CALL_1
0x4003354	            0x7519	                           jne 0x400336f	      1946	refs.c	FUNCTION_103	CALL_1
0x4003356	      0xb900000000	                              mov ecx, 0	      1946	refs.c	FUNCTION_103	CALL_1
0x400335b	      0xba9a070000	                          mov edx, 0x79a	      1946	refs.c	FUNCTION_103	CALL_1
0x4003360	      0xbe00000000	                              mov esi, 0	      1946	refs.c	FUNCTION_103	CALL_1
0x4003365	      0xbf00000000	                              mov edi, 0	      1946	refs.c	FUNCTION_103	CALL_1
0x400336a	      0xe800000000	                          call 0x400336f	      1946	refs.c	FUNCTION_103	CALL_1
0x400336f	          0x4989fe	                            mov r14, rdi	      1946	refs.c	FUNCTION_103	CALL_1
0x4003372	          0x4989f4	                            mov r12, rsi	      1946	refs.c	FUNCTION_103	CALL_1
0x4003375	          0x4989d5	                            mov r13, rdx	      1946	refs.c	FUNCTION_103	CALL_1
0x4003378	          0x4889cd	                            mov rbp, rcx	      1946	refs.c	FUNCTION_103	CALL_1
0x400337b	          0x4d89c7	                             mov r15, r8	      1946	refs.c	FUNCTION_103	CALL_1
0x400337e	      0xb800000000	                              mov eax, 0	      1948	refs.c	FUNCTION_103	CALL_3
0x4003383	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1948	refs.c	FUNCTION_103	CALL_3
0x400338a	          0x4889f7	                            mov rdi, rsi	      1948	refs.c	FUNCTION_103	CALL_3
0x400338d	            0xf2ae	              repne scasb al, byte [rdi]	      1948	refs.c	FUNCTION_103	CALL_3
0x400338f	          0x48f7d1	                                 not rcx	      1948	refs.c	FUNCTION_103	CALL_3
0x4003392	          0x4889ce	                            mov rsi, rcx	      1948	refs.c	FUNCTION_103	CALL_3
0x4003395	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1948	refs.c	FUNCTION_103	CALL_3
0x400339a	      0xe800000000	                          call 0x400339f	      1948	refs.c	FUNCTION_103	CALL_3
0x400339f	      0xbe2f000000	                           mov esi, 0x2f	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x40033a4	          0x4c89e7	                            mov rdi, r12	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x40033a7	      0xe800000000	                          call 0x40033ac	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x40033ac	          0x4889c3	                            mov rbx, rax	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x40033af	          0x4885c0	                           test rax, rax	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x40033b2	     0xf84c4000000	                            je 0x400347c	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x40033b8	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x40033bd	          0x4889da	                            mov rdx, rbx	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x40033c0	          0x4c29e2	                            sub rdx, r12	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x40033c3	          0x4829f2	                            sub rdx, rsi	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x40033c6	          0x4c01e6	                            add rsi, r12	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x40033c9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x40033ce	      0xe800000000	                          call 0x40033d3	      1951	refs.c	FUNCTION_103	FOR_1	CALL_6
0x40033d3	          0x4885ed	                           test rbp, rbp	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x40033d6	            0x7411	                            je 0x40033e9	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x40033d8	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x40033dd	          0x4889ef	                            mov rdi, rbp	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x40033e0	      0xe800000000	                          call 0x40033e5	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x40033e5	            0x85c0	                           test eax, eax	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x40033e7	            0x7579	                           jne 0x4003462	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_7
0x40033e9	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x40033ee	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x40033f3	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x40033f8	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x40033fd	          0x4c89f7	                            mov rdi, r14	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x4003400	      0xe800000000	                          call 0x4003405	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x4003405	            0x85c0	                           test eax, eax	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x4003407	            0x751f	                           jne 0x4003428	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_8
0x4003409	          0x4c89e1	                            mov rcx, r12	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_9
0x400340c	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_9
0x4003411	      0xbe00000000	                              mov esi, 0	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_9
0x4003416	          0x4c89ff	                            mov rdi, r15	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_9
0x4003419	      0xe800000000	                          call 0x400341e	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_9
0x400341e	      0xbbffffffff	                     mov ebx, 0xffffffff	      1939	refs.c	FUNCTION_103
0x4003423	      0xe977010000	                           jmp 0x400359f	      1964	refs.c	FUNCTION_103	FOR_1	IF_2
0x4003428	          0x4d85ed	                           test r13, r13	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x400342b	            0x7435	                            je 0x4003462	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x400342d	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x4003432	          0x4c89ef	                            mov rdi, r13	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x4003435	      0xe800000000	                          call 0x400343a	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x400343a	            0x85c0	                           test eax, eax	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x400343c	            0x7424	                            je 0x4003462	      1967	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_10
0x400343e	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_11
0x4003443	          0x4c89e2	                            mov rdx, r12	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_11
0x4003446	      0xbe00000000	                              mov esi, 0	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_11
0x400344b	          0x4c89ff	                            mov rdi, r15	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_11
0x400344e	      0xb800000000	                              mov eax, 0	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_11
0x4003453	      0xe800000000	                          call 0x4003458	      1968	refs.c	FUNCTION_103	FOR_1	IF_3	CALL_11
0x4003458	      0xbbffffffff	                     mov ebx, 0xffffffff	      1939	refs.c	FUNCTION_103
0x400345d	      0xe93d010000	                           jmp 0x400359f	      1970	refs.c	FUNCTION_103	FOR_1	IF_3
0x4003462	        0x488d7b01	                      lea rdi, [rbx + 1]	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4003466	      0xbe2f000000	                           mov esi, 0x2f	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x400346b	      0xe800000000	                          call 0x4003470	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4003470	          0x4889c3	                            mov rbx, rax	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4003473	          0x4885c0	                           test rax, rax	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x4003476	     0xf853cffffff	                           jne 0x40033b8	      1949	refs.c	FUNCTION_103	FOR_1	CALL_5
0x400347c	          0x4c89e6	                            mov rsi, r12	      1982	refs.c	FUNCTION_103	CALL_12
0x400347f	      0x4803742418	             add rsi, qword [rsp + 0x18]	      1982	refs.c	FUNCTION_103	CALL_12
0x4003484	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_195	CALL_2
0x4003489	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_195	CALL_2
0x4003490	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_195	CALL_2
0x4003493	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_195	CALL_2
0x4003495	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_195	CALL_2
0x4003498	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_195	CALL_2
0x400349c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       279	strbuf.h	FUNCTION_195	CALL_2
0x40034a1	      0xe800000000	                          call 0x40034a6	       279	strbuf.h	FUNCTION_195	CALL_2
0x40034a6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       141	strbuf.h	FUNCTION_192
0x40034ab	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_192
0x40034ae	            0x740b	                            je 0x40034bb	       141	strbuf.h	FUNCTION_192
0x40034b0	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_194	IF_1	CALL_1
0x40034b4	      0x483b442418	            cmp rax, qword [rsp + 0x18] 	       227	strbuf.h	FUNCTION_194	IF_1	CALL_1
0x40034b9	            0x750f	                           jne 0x40034ca	       227	strbuf.h	FUNCTION_194	IF_1	CALL_1
0x40034bb	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_194	CALL_2
0x40034c0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       228	strbuf.h	FUNCTION_194	CALL_2
0x40034c5	      0xe800000000	                          call 0x40034ca	       228	strbuf.h	FUNCTION_194	CALL_2
0x40034ca	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       229	strbuf.h	FUNCTION_194
0x40034cf	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_194
0x40034d3	      0x4889542418	             mov qword [rsp + 0x18], rdx	       229	strbuf.h	FUNCTION_194
0x40034d8	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       229	strbuf.h	FUNCTION_194
0x40034dd	        0xc604022f	              mov byte [rdx + rax], 0x2f	       229	strbuf.h	FUNCTION_194
0x40034e1	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       230	strbuf.h	FUNCTION_194
0x40034e6	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       230	strbuf.h	FUNCTION_194
0x40034eb	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_194
0x40034ef	      0xb901000000	                              mov ecx, 1	      1985	refs.c	FUNCTION_103	CALL_14
0x40034f4	      0xba00000000	                              mov edx, 0	      1985	refs.c	FUNCTION_103	CALL_14
0x40034f9	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1985	refs.c	FUNCTION_103	CALL_14
0x40034fe	          0x4c89f7	                            mov rdi, r14	      1985	refs.c	FUNCTION_103	CALL_14
0x4003501	      0xe800000000	                          call 0x4003506	      1985	refs.c	FUNCTION_103	CALL_14
0x4003506	          0x4889c3	                            mov rbx, rax	      1985	refs.c	FUNCTION_103	CALL_14
0x4003509	            0xeb3d	                           jmp 0x4003548	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x400350b	          0x4885ed	                           test rbp, rbp	      1988	refs.c	FUNCTION_103	WHILE_1	IF_4
0x400350e	            0x7410	                            je 0x4003520	      1988	refs.c	FUNCTION_103	WHILE_1	IF_4
0x4003510	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1989	refs.c	FUNCTION_103	WHILE_1	IF_4	CALL_16
0x4003514	          0x4889ef	                            mov rdi, rbp	      1989	refs.c	FUNCTION_103	WHILE_1	IF_4	CALL_16
0x4003517	      0xe800000000	                          call 0x400351c	      1989	refs.c	FUNCTION_103	WHILE_1	IF_4	CALL_16
0x400351c	            0x85c0	                           test eax, eax	      1988	refs.c	FUNCTION_103	WHILE_1	IF_4
0x400351e	            0x7528	                           jne 0x4003548	      1988	refs.c	FUNCTION_103	WHILE_1	IF_4
0x4003520	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_17
0x4003524	          0x4c89e1	                            mov rcx, r12	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_17
0x4003527	      0xbe00000000	                              mov esi, 0	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_17
0x400352c	          0x4c89ff	                            mov rdi, r15	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_17
0x400352f	      0xb800000000	                              mov eax, 0	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_17
0x4003534	      0xe800000000	                          call 0x4003539	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_17
0x4003539	          0x4889df	                            mov rdi, rbx	      1994	refs.c	FUNCTION_103	WHILE_1	CALL_18
0x400353c	      0xe800000000	                          call 0x4003541	      1994	refs.c	FUNCTION_103	WHILE_1	CALL_18
0x4003541	      0xbbffffffff	                     mov ebx, 0xffffffff	      1939	refs.c	FUNCTION_103
0x4003546	            0xeb57	                           jmp 0x400359f	      1995	refs.c	FUNCTION_103	WHILE_1
0x4003548	          0x4889df	                            mov rdi, rbx	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x400354b	      0xe800000000	                          call 0x4003550	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x4003550	            0x85c0	                           test eax, eax	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x4003552	            0x74b7	                            je 0x400350b	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x4003554	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1998	refs.c	FUNCTION_103	IF_5
0x4003557	            0x740f	                            je 0x4003568	      1998	refs.c	FUNCTION_103	IF_5
0x4003559	      0xbf00000000	                              mov edi, 0	      1999	refs.c	FUNCTION_103	CALL_19
0x400355e	      0xb800000000	                              mov eax, 0	      1999	refs.c	FUNCTION_103	CALL_19
0x4003563	      0xe800000000	                          call 0x4003568	      1999	refs.c	FUNCTION_103	CALL_19
0x4003568	          0x4889ea	                            mov rdx, rbp	      2001	refs.c	FUNCTION_103	CALL_20
0x400356b	          0x4c89ee	                            mov rsi, r13	      2001	refs.c	FUNCTION_103	CALL_20
0x400356e	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2001	refs.c	FUNCTION_103	CALL_20
0x4003573	      0xe800000000	                          call 0x4003578	      2001	refs.c	FUNCTION_103	CALL_20
0x4003578	      0xbb00000000	                              mov ebx, 0	      2006	refs.c	FUNCTION_103	ELSE_1
0x400357d	          0x4885c0	                           test rax, rax	      2002	refs.c	FUNCTION_103	IF_6
0x4003580	            0x741d	                            je 0x400359f	      2002	refs.c	FUNCTION_103	IF_6
0x4003582	          0x4889c1	                            mov rcx, rax	      2003	refs.c	FUNCTION_103	IF_6	CALL_21
0x4003585	          0x4c89e2	                            mov rdx, r12	      2003	refs.c	FUNCTION_103	IF_6	CALL_21
0x4003588	      0xbe00000000	                              mov esi, 0	      2003	refs.c	FUNCTION_103	IF_6	CALL_21
0x400358d	          0x4c89ff	                            mov rdi, r15	      2003	refs.c	FUNCTION_103	IF_6	CALL_21
0x4003590	      0xb800000000	                              mov eax, 0	      2003	refs.c	FUNCTION_103	IF_6	CALL_21
0x4003595	      0xe800000000	                          call 0x400359a	      2003	refs.c	FUNCTION_103	IF_6	CALL_21
0x400359a	      0xbbffffffff	                     mov ebx, 0xffffffff	      1939	refs.c	FUNCTION_103
0x400359f	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2009	refs.c	FUNCTION_103	CALL_22
0x40035a4	      0xe800000000	                          call 0x40035a9	      2009	refs.c	FUNCTION_103	CALL_22
0x40035a9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2010	refs.c	FUNCTION_103	CALL_23
0x40035ae	      0xe800000000	                          call 0x40035b3	      2010	refs.c	FUNCTION_103	CALL_23
0x40035b3	            0x89d8	                            mov eax, ebx	      2012	refs.c	FUNCTION_103
0x40035b5	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      2012	refs.c	FUNCTION_103
0x40035ba	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2012	refs.c	FUNCTION_103
0x40035c3	            0x7405	                            je 0x40035ca	      2012	refs.c	FUNCTION_103
0x40035c5	      0xe800000000	                          call 0x40035ca	      2012	refs.c	FUNCTION_103
0x40035ca	        0x4883c478	                           add rsp, 0x78	      2012	refs.c	FUNCTION_103
0x40035ce	              0x5b	                                 pop rbx	      2012	refs.c	FUNCTION_103
0x40035cf	              0x5d	                                 pop rbp	      2012	refs.c	FUNCTION_103
0x40035d0	            0x415c	                                 pop r12	      2012	refs.c	FUNCTION_103
0x40035d2	            0x415d	                                 pop r13	      2012	refs.c	FUNCTION_103
0x40035d4	            0x415e	                                 pop r14	      2012	refs.c	FUNCTION_103
0x40035d6	            0x415f	                                 pop r15	      2012	refs.c	FUNCTION_103
0x40035d8	              0xc3	                                     ret	      2012	refs.c	FUNCTION_103
ref_store_transaction_begin	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	15
0x4000f2a	              0x53	                                push rbx	       936	refs.c	FUNCTION_51
0x4000f2b	          0x4885f6	                           test rsi, rsi	       938	refs.c	FUNCTION_51	CALL_1
0x4000f2e	            0x7519	                           jne 0x4000f49	       938	refs.c	FUNCTION_51	CALL_1
0x4000f30	      0xb900000000	                              mov ecx, 0	       938	refs.c	FUNCTION_51	CALL_1
0x4000f35	      0xbaaa030000	                          mov edx, 0x3aa	       938	refs.c	FUNCTION_51	CALL_1
0x4000f3a	      0xbe00000000	                              mov esi, 0	       938	refs.c	FUNCTION_51	CALL_1
0x4000f3f	      0xbf00000000	                              mov edi, 0	       938	refs.c	FUNCTION_51	CALL_1
0x4000f44	      0xe800000000	                          call 0x4000f49	       938	refs.c	FUNCTION_51	CALL_1
0x4000f49	          0x4889fb	                            mov rbx, rdi	       938	refs.c	FUNCTION_51	CALL_1
0x4000f4c	      0xbe30000000	                           mov esi, 0x30	       940	refs.c	FUNCTION_51	CALL_2
0x4000f51	      0xbf01000000	                              mov edi, 1	       940	refs.c	FUNCTION_51	CALL_2
0x4000f56	      0xe800000000	                          call 0x4000f5b	       940	refs.c	FUNCTION_51	CALL_2
0x4000f5b	          0x488918	                    mov qword [rax], rbx	       941	refs.c	FUNCTION_51
0x4000f5e	              0x5b	                                 pop rbx	       943	refs.c	FUNCTION_51
0x4000f5f	              0xc3	                                     ret	       943	refs.c	FUNCTION_51
get_main_ref_store	functions,0:ELSE,0:DO,0:IF,2:WHILE,0:CALL,2:FOR,0:SWITCH,0	17
0x4001a67	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4001a6b	          0x4885c0	                           test rax, rax	      1669	refs.c	FUNCTION_89	IF_1
0x4001a6e	            0x752f	                           jne 0x4001a9f	      1669	refs.c	FUNCTION_89	IF_1
0x4001a70	              0x53	                                push rbx	      1668	refs.c	FUNCTION_89
0x4001a71	          0x4889fb	                            mov rbx, rdi	      1668	refs.c	FUNCTION_89
0x4001a74	          0x488b3f	                    mov rdi, qword [rdi]	      1672	refs.c	FUNCTION_89	IF_2
0x4001a77	          0x4885ff	                           test rdi, rdi	      1672	refs.c	FUNCTION_89	IF_2
0x4001a7a	            0x7514	                           jne 0x4001a90	      1672	refs.c	FUNCTION_89	IF_2
0x4001a7c	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	CALL_1
0x4001a81	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	CALL_1
0x4001a86	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	CALL_1
0x4001a8b	      0xe800000000	                          call 0x4001a90	      1673	refs.c	FUNCTION_89	CALL_1
0x4001a90	      0xbe0f000000	                            mov esi, 0xf	      1675	refs.c	FUNCTION_89	CALL_2
0x4001a95	      0xe861e7ffff	                 call sym.ref_store_init	      1675	refs.c	FUNCTION_89	CALL_2
0x4001a9a	        0x48894318	             mov qword [rbx + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_2
0x4001a9e	              0x5b	                                 pop rbx	      1677	refs.c	FUNCTION_89
0x4001a9f	            0xf3c3	                                     ret	      1677	refs.c	FUNCTION_89
match_ref_pattern	functions,0:ELSE,1:DO,0:IF,3:WHILE,0:CALL,2:FOR,0:SWITCH,0	32
0x4000097	      0x48837e0800	                  cmp qword [rsi + 8], 0	       251	refs.c	FUNCTION_13	IF_1
0x400009c	            0x7521	                           jne 0x40000bf	       251	refs.c	FUNCTION_13	IF_1
0x400009e	        0x4883ec08	                              sub rsp, 8	       249	refs.c	FUNCTION_13
0x40000a2	          0x4889f0	                            mov rax, rsi	       249	refs.c	FUNCTION_13
0x40000a5	          0x4889fe	                            mov rsi, rdi	       249	refs.c	FUNCTION_13
0x40000a8	      0xba00000000	                              mov edx, 0	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x40000ad	          0x488b38	                    mov rdi, qword [rax]	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x40000b0	      0xe800000000	                          call 0x40000b5	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x40000b5	            0x85c0	                           test eax, eax	       253	refs.c	FUNCTION_13	IF_1	IF_2
0x40000b7	           0xf94c0	                                 sete al	       253	refs.c	FUNCTION_13	IF_1	IF_2
0x40000ba	           0xfb6c0	                           movzx eax, al	       253	refs.c	FUNCTION_13	IF_1	IF_2
0x40000bd	            0xeb31	                           jmp 0x40000f0	       253	refs.c	FUNCTION_13	IF_1	IF_2
0x40000bf	          0x488b06	                    mov rax, qword [rsi]	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x40000c2	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x40000c5	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x40000c7	            0x7413	                            je 0x40000dc	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x40000c9	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_131	DO_1
0x40000cd	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_131	DO_1
0x40000d1	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_131	DO_1
0x40000d4	            0x74ec	                            je 0x40000c2	       488	git-compat-util.h	FUNCTION_131	DO_1
0x40000d6	      0xb800000000	                              mov eax, 0	       250	refs.c	FUNCTION_13
0x40000db	              0xc3	                                     ret	       250	refs.c	FUNCTION_13
0x40000dc	           0xfb617	                   movzx edx, byte [rdi]	       257	refs.c	FUNCTION_13	ELSE_1	IF_3
0x40000df	            0x84d2	                             test dl, dl	       253	refs.c	FUNCTION_13	IF_1	IF_2
0x40000e1	           0xf94c1	                                 sete cl	       253	refs.c	FUNCTION_13	IF_1	IF_2
0x40000e4	          0x80fa2f	                            cmp dl, 0x2f	       253	refs.c	FUNCTION_13	IF_1	IF_2
0x40000e7	           0xf94c0	                                 sete al	       253	refs.c	FUNCTION_13	IF_1	IF_2
0x40000ea	             0x9c8	                             or eax, ecx	       253	refs.c	FUNCTION_13	IF_1	IF_2
0x40000ec	           0xfb6c0	                           movzx eax, al	       253	refs.c	FUNCTION_13	IF_1	IF_2
0x40000ef	              0xc3	                                     ret	       260	refs.c	FUNCTION_13
0x40000f0	        0x4883c408	                              add rsp, 8	       261	refs.c	FUNCTION_13
0x40000f4	              0xc3	                                     ret	       261	refs.c	FUNCTION_13
refs_peel_ref	functions,0:ELSE,0:DO,0:IF,3:WHILE,0:CALL,4:FOR,0:SWITCH,0	43
0x4002a3b	              0x53	                                push rbx	      1779	refs.c	FUNCTION_95
0x4002a3c	        0x4883ec30	                           sub rsp, 0x30	      1779	refs.c	FUNCTION_95
0x4002a40	          0x4889d3	                            mov rbx, rdx	      1779	refs.c	FUNCTION_95
0x4002a43	    0x64488b042528	                mov rax, qword fs:[0x28]	      1779	refs.c	FUNCTION_95
0x4002a4c	      0x4889442428	             mov qword [rsp + 0x28], rax	      1779	refs.c	FUNCTION_95
0x4002a51	            0x31c0	                            xor eax, eax	      1779	refs.c	FUNCTION_95
0x4002a53	    0x488b05000000	            mov rax, qword [0x04002a5a] 	      1783	refs.c	FUNCTION_95	IF_1
0x4002a5a	          0x4885c0	                           test rax, rax	      1783	refs.c	FUNCTION_95	IF_1
0x4002a5d	            0x7438	                            je 0x4002a97	      1783	refs.c	FUNCTION_95	IF_1
0x4002a5f	        0x48397010	            cmp qword [rax + 0x10], rsi 	      1783	refs.c	FUNCTION_95	IF_1
0x4002a63	            0x7532	                           jne 0x4002a97	      1783	refs.c	FUNCTION_95	IF_1
0x4002a65	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x4002a6a	          0x4889c7	                            mov rdi, rax	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x4002a6d	      0xe800000000	                          call 0x4002a72	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x4002a72	            0x85c0	                           test eax, eax	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x4002a74	            0x751a	                           jne 0x4002a90	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x4002a76	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_152	CALL_3
0x4002a7b	          0x488913	                    mov qword [rbx], rdx	        53	string3.h	FUNCTION_152	CALL_3
0x4002a7e	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_152	CALL_3
0x4002a83	        0x48895308	                mov qword [rbx + 8], rdx	        53	string3.h	FUNCTION_152	CALL_3
0x4002a87	        0x8b542420	            mov edx, dword [rsp + 0x20] 	        53	string3.h	FUNCTION_152	CALL_3
0x4002a8b	          0x895310	             mov dword [rbx + 0x10], edx	        53	string3.h	FUNCTION_152	CALL_3
0x4002a8e	            0xeb33	                           jmp 0x4002ac3	      1789	refs.c	FUNCTION_95	IF_1
0x4002a90	      0xb8ffffffff	                     mov eax, 0xffffffff	      1787	refs.c	FUNCTION_95	IF_1	IF_2
0x4002a95	            0xeb2c	                           jmp 0x4002ac3	      1787	refs.c	FUNCTION_95	IF_1	IF_2
0x4002a97	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x4002a9c	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x4002aa1	      0xba01000000	                              mov edx, 1	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x4002aa6	      0xe800000000	                          call 0x4002aab	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x4002aab	            0x89c2	                            mov edx, eax	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x4002aad	      0xb8ffffffff	                     mov eax, 0xffffffff	      1794	refs.c	FUNCTION_95	IF_3
0x4002ab2	            0x85d2	                           test edx, edx	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x4002ab4	            0x750d	                           jne 0x4002ac3	      1792	refs.c	FUNCTION_95	IF_3	CALL_3
0x4002ab6	          0x4889de	                            mov rsi, rbx	      1796	refs.c	FUNCTION_95	CALL_4
0x4002ab9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1796	refs.c	FUNCTION_95	CALL_4
0x4002abe	      0xe800000000	                          call 0x4002ac3	      1796	refs.c	FUNCTION_95	CALL_4
0x4002ac3	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      1797	refs.c	FUNCTION_95
0x4002ac8	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1797	refs.c	FUNCTION_95
0x4002ad1	            0x7405	                            je 0x4002ad8	      1797	refs.c	FUNCTION_95
0x4002ad3	      0xe800000000	                          call 0x4002ad8	      1797	refs.c	FUNCTION_95
0x4002ad8	        0x4883c430	                           add rsp, 0x30	      1797	refs.c	FUNCTION_95
0x4002adc	              0x5b	                                 pop rbx	      1797	refs.c	FUNCTION_95
0x4002add	              0xc3	                                     ret	      1797	refs.c	FUNCTION_95
ref_transaction_add_update	functions,0:ELSE,0:DO,0:IF,3:WHILE,0:CALL,6:FOR,0:SWITCH,0	105
0x4000ff1	            0x4157	                                push r15	       984	refs.c	FUNCTION_54
0x4000ff3	            0x4156	                                push r14	       984	refs.c	FUNCTION_54
0x4000ff5	            0x4155	                                push r13	       984	refs.c	FUNCTION_54
0x4000ff7	            0x4154	                                push r12	       984	refs.c	FUNCTION_54
0x4000ff9	              0x55	                                push rbp	       984	refs.c	FUNCTION_54
0x4000ffa	              0x53	                                push rbx	       984	refs.c	FUNCTION_54
0x4000ffb	        0x4883ec18	                           sub rsp, 0x18	       984	refs.c	FUNCTION_54
0x4000fff	        0x48893424	                    mov qword [rsp], rsi	       984	refs.c	FUNCTION_54
0x4001003	      0x4c894c2408	                 mov qword [rsp + 8], r9	       984	refs.c	FUNCTION_54
0x4001008	        0x837f2000	               cmp dword [rdi + 0x20], 0	       987	refs.c	FUNCTION_54	IF_1
0x400100c	            0x740f	                            je 0x400101d	       987	refs.c	FUNCTION_54	IF_1
0x400100e	      0xbf00000000	                              mov edi, 0	       988	refs.c	FUNCTION_54	CALL_1
0x4001013	      0xb800000000	                              mov eax, 0	       988	refs.c	FUNCTION_54	CALL_1
0x4001018	      0xe800000000	                          call 0x400101d	       988	refs.c	FUNCTION_54	CALL_1
0x400101d	          0x4889fd	                            mov rbp, rdi	       988	refs.c	FUNCTION_54	CALL_1
0x4001020	          0x4189d5	                           mov r13d, edx	       988	refs.c	FUNCTION_54	CALL_1
0x4001023	          0x4989cf	                            mov r15, rcx	       988	refs.c	FUNCTION_54	CALL_1
0x4001026	          0x4d89c6	                             mov r14, r8	       988	refs.c	FUNCTION_54	CALL_1
0x4001029	      0xb800000000	                              mov eax, 0	       990	refs.c	FUNCTION_54	CALL_2
0x400102e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       990	refs.c	FUNCTION_54	CALL_2
0x4001035	        0x488b3c24	                    mov rdi, qword [rsp]	       990	refs.c	FUNCTION_54	CALL_2
0x4001039	            0xf2ae	              repne scasb al, byte [rdi]	       990	refs.c	FUNCTION_54	CALL_2
0x400103b	          0x48f7d1	                                 not rcx	       990	refs.c	FUNCTION_54	CALL_2
0x400103e	        0x488d59ff	                      lea rbx, [rcx - 1]	       990	refs.c	FUNCTION_54	CALL_2
0x4001042	        0x4883fbaf	             cmp rbx, 0xffffffffffffffaf	       785	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x4001046	            0x7612	                           jbe 0x400105a	       785	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x4001048	          0x4889da	                            mov rdx, rbx	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x400104b	      0xbe50000000	                           mov esi, 0x50	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x4001050	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x4001055	      0xe800000000	                          call 0x400105a	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x400105a	        0x4883fbaf	             cmp rbx, 0xffffffffffffffaf	       785	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x400105e	            0x751b	                           jne 0x400107b	       785	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x4001060	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x4001065	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x400106c	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x4001071	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x4001076	      0xe800000000	                          call 0x400107b	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x400107b	        0x488d7351	                   lea rsi, [rbx + 0x51]	       990	refs.c	FUNCTION_54	CALL_2
0x400107f	      0xbf01000000	                              mov edi, 1	       990	refs.c	FUNCTION_54	CALL_2
0x4001084	      0xe800000000	                          call 0x4001089	       990	refs.c	FUNCTION_54	CALL_2
0x4001089	          0x4989c4	                            mov r12, rax	       990	refs.c	FUNCTION_54	CALL_2
0x400108c	        0x488d7850	                   lea rdi, [rax + 0x50]	        53	string3.h	FUNCTION_152	CALL_3
0x4001090	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_152	CALL_3
0x4001093	        0x488b3424	                    mov rsi, qword [rsp]	        53	string3.h	FUNCTION_152	CALL_3
0x4001097	      0xe800000000	                          call 0x400109c	        53	string3.h	FUNCTION_152	CALL_3
0x400109c	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       991	refs.c	FUNCTION_54	CALL_3
0x40010a0	        0x488d5001	                      lea rdx, [rax + 1]	       991	refs.c	FUNCTION_54	CALL_3
0x40010a4	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       991	refs.c	FUNCTION_54	CALL_3
0x40010a8	          0x4839c2	                            cmp rdx, rax	       991	refs.c	FUNCTION_54	CALL_3
0x40010ab	            0x764e	                           jbe 0x40010fb	       991	refs.c	FUNCTION_54	CALL_3
0x40010ad	      0x488d744030	          lea rsi, [rax + rax*2 + 0x30] 	       991	refs.c	FUNCTION_54	CALL_3
0x40010b2	          0x48d1ee	                              shr rsi, 1	       991	refs.c	FUNCTION_54	CALL_3
0x40010b5	          0x4839f2	                            cmp rdx, rsi	       991	refs.c	FUNCTION_54	CALL_3
0x40010b8	        0x480f47f2	                          cmova rsi, rdx	       991	refs.c	FUNCTION_54	CALL_3
0x40010bc	        0x48897510	            mov qword [rbp + 0x10], rsi 	       991	refs.c	FUNCTION_54	CALL_3
0x40010c0	          0x4889f2	                            mov rdx, rsi	       991	refs.c	FUNCTION_54	CALL_3
0x40010c3	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_139	IF_1	CALL_1
0x40010cd	          0x4839c6	                            cmp rsi, rax	       795	git-compat-util.h	FUNCTION_139	IF_1	CALL_1
0x40010d0	            0x7614	                           jbe 0x40010e6	       795	git-compat-util.h	FUNCTION_139	IF_1	CALL_1
0x40010d2	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_139	IF_1	CALL_2
0x40010d7	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_139	IF_1	CALL_2
0x40010dc	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_139	IF_1	CALL_2
0x40010e1	      0xe800000000	                          call 0x40010e6	       796	git-compat-util.h	FUNCTION_139	IF_1	CALL_2
0x40010e6	    0x488d34f50000	                        lea rsi, [rsi*8]	       991	refs.c	FUNCTION_54	CALL_3
0x40010ee	        0x488b7d08	                mov rdi, qword [rbp + 8]	       991	refs.c	FUNCTION_54	CALL_3
0x40010f2	      0xe800000000	                          call 0x40010f7	       991	refs.c	FUNCTION_54	CALL_3
0x40010f7	        0x48894508	                mov qword [rbp + 8], rax	       991	refs.c	FUNCTION_54	CALL_3
0x40010fb	        0x488b5508	                mov rdx, qword [rbp + 8]	       992	refs.c	FUNCTION_54
0x40010ff	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       992	refs.c	FUNCTION_54
0x4001103	        0x488d4801	                      lea rcx, [rax + 1]	       992	refs.c	FUNCTION_54
0x4001107	        0x48894d18	            mov qword [rbp + 0x18], rcx 	       992	refs.c	FUNCTION_54
0x400110b	        0x4c8924c2	            mov qword [rdx + rax*8], r12	       992	refs.c	FUNCTION_54
0x400110f	      0x45896c2428	            mov dword [r12 + 0x28], r13d	       994	refs.c	FUNCTION_54
0x4001114	        0x41f6c504	                            test r13b, 4	       996	refs.c	FUNCTION_54	IF_2
0x4001118	            0x7419	                            je 0x4001133	       996	refs.c	FUNCTION_54	IF_2
0x400111a	          0x498b07	                    mov rax, qword [r15]	        53	string3.h	FUNCTION_152	CALL_3
0x400111d	        0x49890424	                    mov qword [r12], rax	        53	string3.h	FUNCTION_152	CALL_3
0x4001121	        0x498b4708	                mov rax, qword [r15 + 8]	        53	string3.h	FUNCTION_152	CALL_3
0x4001125	      0x4989442408	                mov qword [r12 + 8], rax	        53	string3.h	FUNCTION_152	CALL_3
0x400112a	        0x418b4710	            mov eax, dword [r15 + 0x10] 	        53	string3.h	FUNCTION_152	CALL_3
0x400112e	      0x4189442410	             mov dword [r12 + 0x10], eax	        53	string3.h	FUNCTION_152	CALL_3
0x4001133	        0x41f6c508	                            test r13b, 8	       998	refs.c	FUNCTION_54	IF_3
0x4001137	            0x741a	                            je 0x4001153	       998	refs.c	FUNCTION_54	IF_3
0x4001139	          0x498b16	                    mov rdx, qword [r14]	        53	string3.h	FUNCTION_152	CALL_3
0x400113c	      0x4989542414	             mov qword [r12 + 0x14], rdx	        53	string3.h	FUNCTION_152	CALL_3
0x4001141	        0x498b5608	                mov rdx, qword [r14 + 8]	        53	string3.h	FUNCTION_152	CALL_3
0x4001145	      0x498954241c	             mov qword [r12 + 0x1c], rdx	        53	string3.h	FUNCTION_152	CALL_3
0x400114a	        0x418b5610	            mov edx, dword [r14 + 0x10] 	        53	string3.h	FUNCTION_152	CALL_3
0x400114e	      0x4189542424	             mov dword [r12 + 0x24], edx	        53	string3.h	FUNCTION_152	CALL_3
0x4001153	      0xb800000000	                              mov eax, 0	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x4001158	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x400115d	          0x4885db	                           test rbx, rbx	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x4001160	            0x7408	                            je 0x400116a	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x4001162	          0x4889df	                            mov rdi, rbx	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x4001165	      0xe800000000	                          call 0x400116a	       924	git-compat-util.h	FUNCTION_143	CALL_1
0x400116a	      0x4989442440	             mov qword [r12 + 0x40], rax	      1000	refs.c	FUNCTION_54	CALL_6
0x400116f	          0x4c89e0	                            mov rax, r12	      1002	refs.c	FUNCTION_54
0x4001172	        0x4883c418	                           add rsp, 0x18	      1002	refs.c	FUNCTION_54
0x4001176	              0x5b	                                 pop rbx	      1002	refs.c	FUNCTION_54
0x4001177	              0x5d	                                 pop rbp	      1002	refs.c	FUNCTION_54
0x4001178	            0x415c	                                 pop r12	      1002	refs.c	FUNCTION_54
0x400117a	            0x415d	                                 pop r13	      1002	refs.c	FUNCTION_54
0x400117c	            0x415e	                                 pop r14	      1002	refs.c	FUNCTION_54
0x400117e	            0x415f	                                 pop r15	      1002	refs.c	FUNCTION_54
0x4001180	              0xc3	                                     ret	      1002	refs.c	FUNCTION_54
refs_for_each_reflog	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	15
0x40036ab	              0x55	                                push rbp	      2015	refs.c	FUNCTION_104
0x40036ac	              0x53	                                push rbx	      2015	refs.c	FUNCTION_104
0x40036ad	        0x4883ec08	                              sub rsp, 8	      2015	refs.c	FUNCTION_104
0x40036b1	          0x4889f3	                            mov rbx, rsi	      2015	refs.c	FUNCTION_104
0x40036b4	          0x4889d5	                            mov rbp, rdx	      2015	refs.c	FUNCTION_104
0x40036b7	          0x488b07	                    mov rax, qword [rdi]	      2018	refs.c	FUNCTION_104	CALL_1
0x40036ba	          0xff5078	                 call qword [rax + 0x78]	      2018	refs.c	FUNCTION_104	CALL_1
0x40036bd	          0x4889ea	                            mov rdx, rbp	      2020	refs.c	FUNCTION_104	CALL_2
0x40036c0	          0x4889de	                            mov rsi, rbx	      2020	refs.c	FUNCTION_104	CALL_2
0x40036c3	          0x4889c7	                            mov rdi, rax	      2020	refs.c	FUNCTION_104	CALL_2
0x40036c6	      0xe800000000	                          call 0x40036cb	      2020	refs.c	FUNCTION_104	CALL_2
0x40036cb	        0x4883c408	                              add rsp, 8	      2021	refs.c	FUNCTION_104
0x40036cf	              0x5b	                                 pop rbx	      2021	refs.c	FUNCTION_104
0x40036d0	              0x5d	                                 pop rbp	      2021	refs.c	FUNCTION_104
0x40036d1	              0xc3	                                     ret	      2021	refs.c	FUNCTION_104
warn_dangling_symref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	17
0x40020a9	        0x4883ec38	                           sub rsp, 0x38	       352	refs.c	FUNCTION_18
0x40020ad	    0x64488b042528	                mov rax, qword fs:[0x28]	       352	refs.c	FUNCTION_18
0x40020b6	      0x4889442428	             mov qword [rsp + 0x28], rax	       352	refs.c	FUNCTION_18
0x40020bb	            0x31c0	                            xor eax, eax	       352	refs.c	FUNCTION_18
0x40020bd	        0x48893c24	                    mov qword [rsp], rdi	       355	refs.c	FUNCTION_18
0x40020c1	      0x4889542408	                mov qword [rsp + 8], rdx	       356	refs.c	FUNCTION_18
0x40020c6	    0x48c744241000	               mov qword [rsp + 0x10], 0	       357	refs.c	FUNCTION_18
0x40020cf	      0x4889742418	             mov qword [rsp + 0x18], rsi	       358	refs.c	FUNCTION_18
0x40020d4	          0x4889e6	                            mov rsi, rsp	       359	refs.c	FUNCTION_18	CALL_1
0x40020d7	      0xbf00000000	                              mov edi, 0	       359	refs.c	FUNCTION_18	CALL_1
0x40020dc	      0xe800000000	                          call 0x40020e1	       359	refs.c	FUNCTION_18	CALL_1
0x40020e1	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       360	refs.c	FUNCTION_18
0x40020e6	    0x644833042528	                xor rax, qword fs:[0x28]	       360	refs.c	FUNCTION_18
0x40020ef	            0x7405	                            je 0x40020f6	       360	refs.c	FUNCTION_18
0x40020f1	      0xe800000000	                          call 0x40020f6	       360	refs.c	FUNCTION_18
0x40020f6	        0x4883c438	                           add rsp, 0x38	       360	refs.c	FUNCTION_18
0x40020fa	              0xc3	                                     ret	       360	refs.c	FUNCTION_18
reflog_exists	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	9
0x4003877	              0x53	                                push rbx	      2063	refs.c	FUNCTION_111
0x4003878	          0x4889fb	                            mov rbx, rdi	      2063	refs.c	FUNCTION_111
0x400387b	    0x488b3d000000	            mov rdi, qword [0x04003882] 	      2064	refs.c	FUNCTION_111	CALL_2
0x4003882	      0xe800000000	                          call 0x4003887	      2064	refs.c	FUNCTION_111	CALL_2
0x4003887	          0x4889de	                            mov rsi, rbx	      2064	refs.c	FUNCTION_111	CALL_2
0x400388a	          0x4889c7	                            mov rdi, rax	      2064	refs.c	FUNCTION_111	CALL_2
0x400388d	      0xe800000000	                          call 0x4003892	      2064	refs.c	FUNCTION_111	CALL_2
0x4003892	              0x5b	                                 pop rbx	      2065	refs.c	FUNCTION_111
0x4003893	              0xc3	                                     ret	      2065	refs.c	FUNCTION_111
ref_store_hash_cmp	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	9
0x4000077	        0x4883ec08	                              sub rsp, 8	      1608	refs.c	FUNCTION_85
0x400007b	        0x4883c218	                           add rdx, 0x18	      1610	refs.c	FUNCTION_85
0x400007f	          0x4885c9	                           test rcx, rcx	      1610	refs.c	FUNCTION_85
0x4000082	        0x480f44ca	                          cmove rcx, rdx	      1610	refs.c	FUNCTION_85
0x4000086	        0x488d7e18	                   lea rdi, [rsi + 0x18]	      1612	refs.c	FUNCTION_85	CALL_1
0x400008a	          0x4889ce	                            mov rsi, rcx	      1612	refs.c	FUNCTION_85	CALL_1
0x400008d	      0xe800000000	                          call 0x4000092	      1612	refs.c	FUNCTION_85	CALL_1
0x4000092	        0x4883c408	                              add rsp, 8	      1613	refs.c	FUNCTION_85
0x4000096	              0xc3	                                     ret	      1613	refs.c	FUNCTION_85
peel_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	15
0x4002ade	              0x55	                                push rbp	      1800	refs.c	FUNCTION_96
0x4002adf	              0x53	                                push rbx	      1800	refs.c	FUNCTION_96
0x4002ae0	        0x4883ec08	                              sub rsp, 8	      1800	refs.c	FUNCTION_96
0x4002ae4	          0x4889fb	                            mov rbx, rdi	      1800	refs.c	FUNCTION_96
0x4002ae7	          0x4889f5	                            mov rbp, rsi	      1800	refs.c	FUNCTION_96
0x4002aea	    0x488b3d000000	            mov rdi, qword [0x04002af1] 	      1801	refs.c	FUNCTION_96	CALL_2
0x4002af1	      0xe800000000	                          call 0x4002af6	      1801	refs.c	FUNCTION_96	CALL_2
0x4002af6	          0x4889ea	                            mov rdx, rbp	      1801	refs.c	FUNCTION_96	CALL_2
0x4002af9	          0x4889de	                            mov rsi, rbx	      1801	refs.c	FUNCTION_96	CALL_2
0x4002afc	          0x4889c7	                            mov rdi, rax	      1801	refs.c	FUNCTION_96	CALL_2
0x4002aff	      0xe800000000	                          call 0x4002b04	      1801	refs.c	FUNCTION_96	CALL_2
0x4002b04	        0x4883c408	                              add rsp, 8	      1802	refs.c	FUNCTION_96
0x4002b08	              0x5b	                                 pop rbx	      1802	refs.c	FUNCTION_96
0x4002b09	              0x5d	                                 pop rbp	      1802	refs.c	FUNCTION_96
0x4002b0a	              0xc3	                                     ret	      1802	refs.c	FUNCTION_96
ref_transaction_begin	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	9
0x4001c77	              0x53	                                push rbx	       946	refs.c	FUNCTION_52
0x4001c78	          0x4889fb	                            mov rbx, rdi	       946	refs.c	FUNCTION_52
0x4001c7b	    0x488b3d000000	            mov rdi, qword [0x04001c82] 	       947	refs.c	FUNCTION_52	CALL_2
0x4001c82	      0xe800000000	                          call 0x4001c87	       947	refs.c	FUNCTION_52	CALL_2
0x4001c87	          0x4889de	                            mov rsi, rbx	       947	refs.c	FUNCTION_52	CALL_2
0x4001c8a	          0x4889c7	                            mov rdi, rax	       947	refs.c	FUNCTION_52	CALL_2
0x4001c8d	      0xe800000000	                          call 0x4001c92	       947	refs.c	FUNCTION_52	CALL_2
0x4001c92	              0x5b	                                 pop rbx	       948	refs.c	FUNCTION_52
0x4001c93	              0xc3	                                     ret	       948	refs.c	FUNCTION_52
refs_delete_reflog	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	5
0x4003a8c	        0x4883ec08	                              sub rsp, 8	      2081	refs.c	FUNCTION_114
0x4003a90	          0x488b07	                    mov rax, qword [rdi]	      2082	refs.c	FUNCTION_114	CALL_1
0x4003a93	    0xff90a0000000	                 call qword [rax + 0xa0]	      2082	refs.c	FUNCTION_114	CALL_1
0x4003a99	        0x4883c408	                              add rsp, 8	      2083	refs.c	FUNCTION_114
0x4003a9d	              0xc3	                                     ret	      2083	refs.c	FUNCTION_114
get_files_ref_lock_timeout_ms	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,1:FOR,0:SWITCH,0	12
0x4000da0	    0x833d00000000	               cmp dword [0x04000da7], 0	       650	refs.c	FUNCTION_40	IF_1
0x4000da7	            0x7529	                           jne 0x4000dd2	       650	refs.c	FUNCTION_40	IF_1
0x4000da9	        0x4883ec08	                              sub rsp, 8	       644	refs.c	FUNCTION_40
0x4000dad	      0xbe00000000	                              mov esi, 0	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x4000db2	      0xbf00000000	                              mov edi, 0	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x4000db7	      0xe800000000	                          call 0x4000dbc	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x4000dbc	    0xc70500000000	               mov dword [0x04000dc6], 1	       652	refs.c	FUNCTION_40	IF_1
0x4000dc6	    0x486305000000	         movsxd rax, dword [0x04000dcd] 	       655	refs.c	FUNCTION_40
0x4000dcd	        0x4883c408	                              add rsp, 8	       656	refs.c	FUNCTION_40
0x4000dd1	              0xc3	                                     ret	       656	refs.c	FUNCTION_40
0x4000dd2	    0x486305000000	         movsxd rax, dword [0x04000dd9] 	       655	refs.c	FUNCTION_40
0x4000dd9	              0xc3	                                     ret	       656	refs.c	FUNCTION_40
for_each_ref_in	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	17
0x4001ef8	            0x4154	                                push r12	      1408	refs.c	FUNCTION_73
0x4001efa	              0x55	                                push rbp	      1408	refs.c	FUNCTION_73
0x4001efb	              0x53	                                push rbx	      1408	refs.c	FUNCTION_73
0x4001efc	          0x4889fb	                            mov rbx, rdi	      1408	refs.c	FUNCTION_73
0x4001eff	          0x4889f5	                            mov rbp, rsi	      1408	refs.c	FUNCTION_73
0x4001f02	          0x4989d4	                            mov r12, rdx	      1408	refs.c	FUNCTION_73
0x4001f05	    0x488b3d000000	            mov rdi, qword [0x04001f0c] 	      1409	refs.c	FUNCTION_73	CALL_2
0x4001f0c	      0xe800000000	                          call 0x4001f11	      1409	refs.c	FUNCTION_73	CALL_2
0x4001f11	          0x4c89e1	                            mov rcx, r12	      1409	refs.c	FUNCTION_73	CALL_2
0x4001f14	          0x4889ea	                            mov rdx, rbp	      1409	refs.c	FUNCTION_73	CALL_2
0x4001f17	          0x4889de	                            mov rsi, rbx	      1409	refs.c	FUNCTION_73	CALL_2
0x4001f1a	          0x4889c7	                            mov rdi, rax	      1409	refs.c	FUNCTION_73	CALL_2
0x4001f1d	      0xe800000000	                          call 0x4001f22	      1409	refs.c	FUNCTION_73	CALL_2
0x4001f22	              0x5b	                                 pop rbx	      1410	refs.c	FUNCTION_73
0x4001f23	              0x5d	                                 pop rbp	      1410	refs.c	FUNCTION_73
0x4001f24	            0x415c	                                 pop r12	      1410	refs.c	FUNCTION_73
0x4001f26	              0xc3	                                     ret	      1410	refs.c	FUNCTION_73
head_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	15
0x4001c94	              0x55	                                push rbp	      1338	refs.c	FUNCTION_67
0x4001c95	              0x53	                                push rbx	      1338	refs.c	FUNCTION_67
0x4001c96	        0x4883ec08	                              sub rsp, 8	      1338	refs.c	FUNCTION_67
0x4001c9a	          0x4889fb	                            mov rbx, rdi	      1338	refs.c	FUNCTION_67
0x4001c9d	          0x4889f5	                            mov rbp, rsi	      1338	refs.c	FUNCTION_67
0x4001ca0	    0x488b3d000000	            mov rdi, qword [0x04001ca7] 	      1339	refs.c	FUNCTION_67	CALL_2
0x4001ca7	      0xe800000000	                          call 0x4001cac	      1339	refs.c	FUNCTION_67	CALL_2
0x4001cac	          0x4889ea	                            mov rdx, rbp	      1339	refs.c	FUNCTION_67	CALL_2
0x4001caf	          0x4889de	                            mov rsi, rbx	      1339	refs.c	FUNCTION_67	CALL_2
0x4001cb2	          0x4889c7	                            mov rdi, rax	      1339	refs.c	FUNCTION_67	CALL_2
0x4001cb5	      0xe800000000	                          call 0x4001cba	      1339	refs.c	FUNCTION_67	CALL_2
0x4001cba	        0x4883c408	                              add rsp, 8	      1340	refs.c	FUNCTION_67
0x4001cbe	              0x5b	                                 pop rbx	      1340	refs.c	FUNCTION_67
0x4001cbf	              0x5d	                                 pop rbp	      1340	refs.c	FUNCTION_67
0x4001cc0	              0xc3	                                     ret	      1340	refs.c	FUNCTION_67
refs_for_each_rawref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	9
0x4001787	        0x4883ec08	                              sub rsp, 8	      1453	refs.c	FUNCTION_78
0x400178b	          0x4989d1	                             mov r9, rdx	      1453	refs.c	FUNCTION_78
0x400178e	    0x41b801000000	                              mov r8d, 1	      1454	refs.c	FUNCTION_78	CALL_1
0x4001794	      0xb900000000	                              mov ecx, 0	      1454	refs.c	FUNCTION_78	CALL_1
0x4001799	          0x4889f2	                            mov rdx, rsi	      1454	refs.c	FUNCTION_78	CALL_1
0x400179c	      0xbe00000000	                              mov esi, 0	      1454	refs.c	FUNCTION_78	CALL_1
0x40017a1	      0xe8e2feffff	                call sym.do_for_each_ref	      1454	refs.c	FUNCTION_78	CALL_1
0x40017a6	        0x4883c408	                              add rsp, 8	      1456	refs.c	FUNCTION_78
0x40017aa	              0xc3	                                     ret	      1456	refs.c	FUNCTION_78
read_ref_full	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	23
0x4001ae0	            0x4155	                                push r13	       232	refs.c	FUNCTION_10
0x4001ae2	            0x4154	                                push r12	       232	refs.c	FUNCTION_10
0x4001ae4	              0x55	                                push rbp	       232	refs.c	FUNCTION_10
0x4001ae5	              0x53	                                push rbx	       232	refs.c	FUNCTION_10
0x4001ae6	        0x4883ec08	                              sub rsp, 8	       232	refs.c	FUNCTION_10
0x4001aea	          0x4889fb	                            mov rbx, rdi	       232	refs.c	FUNCTION_10
0x4001aed	            0x89f5	                            mov ebp, esi	       232	refs.c	FUNCTION_10
0x4001aef	          0x4989d4	                            mov r12, rdx	       232	refs.c	FUNCTION_10
0x4001af2	          0x4989cd	                            mov r13, rcx	       232	refs.c	FUNCTION_10
0x4001af5	    0x488b3d000000	            mov rdi, qword [0x04001afc] 	       233	refs.c	FUNCTION_10	CALL_2
0x4001afc	      0xe800000000	                          call 0x4001b01	       233	refs.c	FUNCTION_10	CALL_2
0x4001b01	          0x4d89e8	                             mov r8, r13	       233	refs.c	FUNCTION_10	CALL_2
0x4001b04	          0x4c89e1	                            mov rcx, r12	       233	refs.c	FUNCTION_10	CALL_2
0x4001b07	            0x89ea	                            mov edx, ebp	       233	refs.c	FUNCTION_10	CALL_2
0x4001b09	          0x4889de	                            mov rsi, rbx	       233	refs.c	FUNCTION_10	CALL_2
0x4001b0c	          0x4889c7	                            mov rdi, rax	       233	refs.c	FUNCTION_10	CALL_2
0x4001b0f	      0xe800000000	                          call 0x4001b14	       233	refs.c	FUNCTION_10	CALL_2
0x4001b14	        0x4883c408	                              add rsp, 8	       235	refs.c	FUNCTION_10
0x4001b18	              0x5b	                                 pop rbx	       235	refs.c	FUNCTION_10
0x4001b19	              0x5d	                                 pop rbp	       235	refs.c	FUNCTION_10
0x4001b1a	            0x415c	                                 pop r12	       235	refs.c	FUNCTION_10
0x4001b1c	            0x415d	                                 pop r13	       235	refs.c	FUNCTION_10
0x4001b1e	              0xc3	                                     ret	       235	refs.c	FUNCTION_10
ref_transaction_prepare	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,7:FOR,0:SWITCH,1	53
0x4002be7	            0x4154	                                push r12	      1846	refs.c	FUNCTION_100
0x4002be9	              0x55	                                push rbp	      1846	refs.c	FUNCTION_100
0x4002bea	              0x53	                                push rbx	      1846	refs.c	FUNCTION_100
0x4002beb	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      1849	refs.c	FUNCTION_100	SWITCH_1
0x4002bee	          0x83f801	                              cmp eax, 1	      1849	refs.c	FUNCTION_100	SWITCH_1
0x4002bf1	            0x7412	                            je 0x4002c05	      1849	refs.c	FUNCTION_100	SWITCH_1
0x4002bf3	          0x4889fb	                            mov rbx, rdi	      1849	refs.c	FUNCTION_100	SWITCH_1
0x4002bf6	          0x4889f5	                            mov rbp, rsi	      1849	refs.c	FUNCTION_100	SWITCH_1
0x4002bf9	          0x83f801	                              cmp eax, 1	      1849	refs.c	FUNCTION_100	SWITCH_1
0x4002bfc	            0x7234	                            jb 0x4002c32	      1849	refs.c	FUNCTION_100	SWITCH_1
0x4002bfe	          0x83f802	                              cmp eax, 2	      1849	refs.c	FUNCTION_100	SWITCH_1
0x4002c01	            0x7411	                            je 0x4002c14	      1849	refs.c	FUNCTION_100	SWITCH_1
0x4002c03	            0xeb1e	                           jmp 0x4002c23	      1849	refs.c	FUNCTION_100	SWITCH_1
0x4002c05	      0xbf00000000	                              mov edi, 0	      1854	refs.c	FUNCTION_100	SWITCH_1	CALL_1
0x4002c0a	      0xb800000000	                              mov eax, 0	      1854	refs.c	FUNCTION_100	SWITCH_1	CALL_1
0x4002c0f	      0xe800000000	                          call 0x4002c14	      1854	refs.c	FUNCTION_100	SWITCH_1	CALL_1
0x4002c14	      0xbf00000000	                              mov edi, 0	      1857	refs.c	FUNCTION_100	SWITCH_1	CALL_2
0x4002c19	      0xb800000000	                              mov eax, 0	      1857	refs.c	FUNCTION_100	SWITCH_1	CALL_2
0x4002c1e	      0xe800000000	                          call 0x4002c23	      1857	refs.c	FUNCTION_100	SWITCH_1	CALL_2
0x4002c23	      0xbf00000000	                              mov edi, 0	      1860	refs.c	FUNCTION_100	SWITCH_1	CALL_3
0x4002c28	      0xb800000000	                              mov eax, 0	      1860	refs.c	FUNCTION_100	SWITCH_1	CALL_3
0x4002c2d	      0xe800000000	                          call 0x4002c32	      1860	refs.c	FUNCTION_100	SWITCH_1	CALL_3
0x4002c32	          0x4c8b27	                    mov r12, qword [rdi]	      1847	refs.c	FUNCTION_100
0x4002c35	      0xbf00000000	                              mov edi, 0	      1864	refs.c	FUNCTION_100	IF_1	CALL_4
0x4002c3a	      0xe800000000	                          call 0x4002c3f	      1864	refs.c	FUNCTION_100	IF_1	CALL_4
0x4002c3f	          0x4885c0	                           test rax, rax	      1864	refs.c	FUNCTION_100	IF_1	CALL_4
0x4002c42	            0x7441	                            je 0x4002c85	      1864	refs.c	FUNCTION_100	IF_1	CALL_4
0x4002c44	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_204	CALL_2
0x4002c49	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_204	CALL_2
0x4002c4e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_204	CALL_2
0x4002c53	      0xe800000000	                          call 0x4002c58	        54	gettext.h	FUNCTION_204	CALL_2
0x4002c58	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_204	CALL_2
0x4002c5b	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_195	CALL_2
0x4002c62	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_195	CALL_2
0x4002c67	          0x4889d9	                            mov rcx, rbx	       279	strbuf.h	FUNCTION_195	CALL_2
0x4002c6a	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_195	CALL_2
0x4002c6d	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_195	CALL_2
0x4002c6f	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_195	CALL_2
0x4002c72	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_195	CALL_2
0x4002c75	        0x488d1418	                    lea rdx, [rax + rbx]	       279	strbuf.h	FUNCTION_195	CALL_2
0x4002c79	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_195	CALL_2
0x4002c7c	      0xe800000000	                          call 0x4002c81	       279	strbuf.h	FUNCTION_195	CALL_2
0x4002c81	            0x89d8	                            mov eax, ebx	      1867	refs.c	FUNCTION_100	IF_1
0x4002c83	            0xeb10	                           jmp 0x4002c95	      1867	refs.c	FUNCTION_100	IF_1
0x4002c85	        0x498b0424	                    mov rax, qword [r12]	      1870	refs.c	FUNCTION_100	CALL_7
0x4002c89	          0x4889ea	                            mov rdx, rbp	      1870	refs.c	FUNCTION_100	CALL_7
0x4002c8c	          0x4889de	                            mov rsi, rbx	      1870	refs.c	FUNCTION_100	CALL_7
0x4002c8f	          0x4c89e7	                            mov rdi, r12	      1870	refs.c	FUNCTION_100	CALL_7
0x4002c92	          0xff5020	                 call qword [rax + 0x20]	      1870	refs.c	FUNCTION_100	CALL_7
0x4002c95	              0x5b	                                 pop rbx	      1871	refs.c	FUNCTION_100
0x4002c96	              0x5d	                                 pop rbp	      1871	refs.c	FUNCTION_100
0x4002c97	            0x415c	                                 pop r12	      1871	refs.c	FUNCTION_100
0x4002c99	              0xc3	                                     ret	      1871	refs.c	FUNCTION_100
refs_update_ref	functions,0:ELSE,1:DO,0:IF,4:WHILE,0:CALL,13:FOR,0:SWITCH,1	187
0x4002fc3	            0x4157	                                push r15	      1073	refs.c	FUNCTION_59
0x4002fc5	            0x4156	                                push r14	      1073	refs.c	FUNCTION_59
0x4002fc7	            0x4155	                                push r13	      1073	refs.c	FUNCTION_59
0x4002fc9	            0x4154	                                push r12	      1073	refs.c	FUNCTION_59
0x4002fcb	              0x55	                                push rbp	      1073	refs.c	FUNCTION_59
0x4002fcc	              0x53	                                push rbx	      1073	refs.c	FUNCTION_59
0x4002fcd	        0x4883ec68	                           sub rsp, 0x68	      1073	refs.c	FUNCTION_59
0x4002fd1	          0x4889fd	                            mov rbp, rdi	      1073	refs.c	FUNCTION_59
0x4002fd4	          0x4989f7	                            mov r15, rsi	      1073	refs.c	FUNCTION_59
0x4002fd7	          0x4889d3	                            mov rbx, rdx	      1073	refs.c	FUNCTION_59
0x4002fda	          0x4989cc	                            mov r12, rcx	      1073	refs.c	FUNCTION_59
0x4002fdd	          0x4d89c5	                             mov r13, r8	      1073	refs.c	FUNCTION_59
0x4002fe0	          0x4589ce	                           mov r14d, r9d	      1073	refs.c	FUNCTION_59
0x4002fe3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1073	refs.c	FUNCTION_59
0x4002fec	      0x4889442458	             mov qword [rsp + 0x58], rax	      1073	refs.c	FUNCTION_59
0x4002ff1	            0x31c0	                            xor eax, eax	      1073	refs.c	FUNCTION_59
0x4002ff3	    0x48c704240000	                      mov qword [rsp], 0	      1075	refs.c	FUNCTION_59
0x4002ffb	    0x48c744240800	                  mov qword [rsp + 8], 0	      1075	refs.c	FUNCTION_59
0x4003004	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1075	refs.c	FUNCTION_59
0x400300d	          0x4889d7	                            mov rdi, rdx	      1078	refs.c	FUNCTION_59	IF_1	CALL_1
0x4003010	      0xe800000000	                          call 0x4003015	      1078	refs.c	FUNCTION_59	IF_1	CALL_1
0x4003015	          0x83f801	                              cmp eax, 1	      1078	refs.c	FUNCTION_59	IF_1	CALL_1
0x4003018	     0xf8592010000	                           jne 0x40031b0	      1078	refs.c	FUNCTION_59	IF_1	CALL_1
0x400301e	    0x488b3d000000	            mov rdi, qword [0x04003025] 	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4003025	      0xe800000000	                          call 0x400302a	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x400302a	          0x4839e8	                            cmp rax, rbp	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x400302d	            0x7419	                            je 0x4003048	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x400302f	      0xb900000000	                              mov ecx, 0	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4003034	      0xba37040000	                          mov edx, 0x437	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4003039	      0xbe00000000	                              mov esi, 0	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x400303e	      0xbf00000000	                              mov edi, 0	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4003043	      0xe800000000	                          call 0x4003048	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4003048	    0x48c744242000	               mov qword [rsp + 0x20], 0	       664	refs.c	FUNCTION_41
0x4003051	    0x48c744242800	               mov qword [rsp + 0x28], 0	       664	refs.c	FUNCTION_41
0x400305a	    0x48c744243000	               mov qword [rsp + 0x30], 0	       664	refs.c	FUNCTION_41
0x4003063	          0x4d85e4	                           test r12, r12	       667	refs.c	FUNCTION_41	IF_1
0x4003066	     0xf8415020000	                            je 0x4003281	       667	refs.c	FUNCTION_41	IF_1
0x400306c	          0x4c89e7	                            mov rdi, r12	       670	refs.c	FUNCTION_41	CALL_2
0x400306f	      0xe800000000	                          call 0x4003074	       670	refs.c	FUNCTION_41	CALL_2
0x4003074	          0x4889c2	                            mov rdx, rax	       670	refs.c	FUNCTION_41	CALL_2
0x4003077	      0xbe00000000	                              mov esi, 0	       670	refs.c	FUNCTION_41	CALL_2
0x400307c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       670	refs.c	FUNCTION_41	CALL_2
0x4003081	      0xb800000000	                              mov eax, 0	       670	refs.c	FUNCTION_41	CALL_2
0x4003086	      0xe800000000	                          call 0x400308b	       670	refs.c	FUNCTION_41	CALL_2
0x400308b	          0x4889de	                            mov rsi, rbx	       672	refs.c	FUNCTION_41	CALL_3
0x400308e	      0xbf00000000	                              mov edi, 0	       672	refs.c	FUNCTION_41	CALL_3
0x4003093	      0xb800000000	                              mov eax, 0	       672	refs.c	FUNCTION_41	CALL_3
0x4003098	      0xe800000000	                          call 0x400309d	       672	refs.c	FUNCTION_41	CALL_3
0x400309d	          0x4989c4	                            mov r12, rax	       672	refs.c	FUNCTION_41	CALL_3
0x40030a0	      0xe800000000	                          call 0x40030a5	       673	refs.c	FUNCTION_41	CALL_4
0x40030a5	          0x4889c1	                            mov rcx, rax	       673	refs.c	FUNCTION_41	CALL_4
0x40030a8	      0xba01000000	                              mov edx, 1	       673	refs.c	FUNCTION_41	CALL_4
0x40030ad	          0x4c89e6	                            mov rsi, r12	       673	refs.c	FUNCTION_41	CALL_4
0x40030b0	      0xbf00000000	                              mov edi, 0	       673	refs.c	FUNCTION_41	CALL_4
0x40030b5	      0xe800000000	                          call 0x40030ba	       673	refs.c	FUNCTION_41	CALL_4
0x40030ba	            0x89c5	                            mov ebp, eax	       673	refs.c	FUNCTION_41	CALL_4
0x40030bc	            0x85c0	                           test eax, eax	       676	refs.c	FUNCTION_41	IF_2
0x40030be	            0x792e	                           jns 0x40030ee	       676	refs.c	FUNCTION_41	IF_2
0x40030c0	      0xe800000000	                          call 0x40030c5	       678	refs.c	FUNCTION_41	IF_2	CALL_7
0x40030c5	            0x8b38	                    mov edi, dword [rax]	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40030c7	      0xe800000000	                          call 0x40030cc	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40030cc	          0x4889c1	                            mov rcx, rax	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40030cf	          0x4c89e2	                            mov rdx, r12	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40030d2	      0xbe00000000	                              mov esi, 0	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40030d7	          0x4889e7	                            mov rdi, rsp	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40030da	      0xb800000000	                              mov eax, 0	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40030df	      0xe800000000	                          call 0x40030e4	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40030e4	      0xbdffffffff	                     mov ebp, 0xffffffff	       665	refs.c	FUNCTION_41
0x40030e9	      0xe9af000000	                           jmp 0x400319d	       665	refs.c	FUNCTION_41
0x40030ee	          0x4d85ed	                           test r13, r13	       682	refs.c	FUNCTION_41	IF_3
0x40030f1	            0x745f	                            je 0x4003152	       682	refs.c	FUNCTION_41	IF_3
0x40030f3	      0x488d742440	                   lea rsi, [rsp + 0x40]	       685	refs.c	FUNCTION_41	IF_3	IF_4	CALL_8
0x40030f8	          0x4889df	                            mov rdi, rbx	       685	refs.c	FUNCTION_41	IF_3	IF_4	CALL_8
0x40030fb	      0xe800000000	                          call 0x4003100	       685	refs.c	FUNCTION_41	IF_3	IF_4	CALL_8
0x4003100	            0x85c0	                           test eax, eax	       685	refs.c	FUNCTION_41	IF_3	IF_4	CALL_8
0x4003102	            0x7412	                            je 0x4003116	       685	refs.c	FUNCTION_41	IF_3	IF_4	CALL_8
0x4003104	          0x4889de	                            mov rsi, rbx	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x4003107	      0xbf00000000	                              mov edi, 0	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x400310c	      0xb800000000	                              mov eax, 0	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x4003111	      0xe800000000	                          call 0x4003116	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x4003116	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_171	CALL_1
0x400311b	          0x4c89ee	                            mov rsi, r13	       975	cache.h	FUNCTION_171	CALL_1
0x400311e	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       975	cache.h	FUNCTION_171	CALL_1
0x4003123	      0xe800000000	                          call 0x4003128	       975	cache.h	FUNCTION_171	CALL_1
0x4003128	            0x85c0	                           test eax, eax	       687	refs.c	FUNCTION_41	IF_3	IF_5	CALL_10
0x400312a	            0x7426	                            je 0x4003152	       687	refs.c	FUNCTION_41	IF_3	IF_5	CALL_10
0x400312c	          0x4889da	                            mov rdx, rbx	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x400312f	      0xbe00000000	                              mov esi, 0	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x4003134	          0x4889e7	                            mov rdi, rsp	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x4003137	      0xb800000000	                              mov eax, 0	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x400313c	      0xe800000000	                          call 0x4003141	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x4003141	      0xbf00000000	                              mov edi, 0	       304	lockfile.h	FUNCTION_215	CALL_1
0x4003146	      0xe800000000	                          call 0x400314b	       304	lockfile.h	FUNCTION_215	CALL_1
0x400314b	      0xbdffffffff	                     mov ebp, 0xffffffff	       665	refs.c	FUNCTION_41
0x4003150	            0xeb4b	                           jmp 0x400319d	       665	refs.c	FUNCTION_41
0x4003152	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4003157	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x400315c	            0x89ef	                            mov edi, ebp	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x400315e	      0xe800000000	                          call 0x4003163	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4003163	          0x4885c0	                           test rax, rax	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4003166	            0x7926	                           jns 0x400318e	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4003168	          0x4c89e2	                            mov rdx, r12	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x400316b	      0xbe00000000	                              mov esi, 0	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x4003170	          0x4889e7	                            mov rdi, rsp	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x4003173	      0xb800000000	                              mov eax, 0	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x4003178	      0xe800000000	                          call 0x400317d	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x400317d	      0xbf00000000	                              mov edi, 0	       304	lockfile.h	FUNCTION_215	CALL_1
0x4003182	      0xe800000000	                          call 0x4003187	       304	lockfile.h	FUNCTION_215	CALL_1
0x4003187	      0xbdffffffff	                     mov ebp, 0xffffffff	       665	refs.c	FUNCTION_41
0x400318c	            0xeb0f	                           jmp 0x400319d	       665	refs.c	FUNCTION_41
0x400318e	      0xbf00000000	                              mov edi, 0	       700	refs.c	FUNCTION_41	CALL_16
0x4003193	      0xe800000000	                          call 0x4003198	       700	refs.c	FUNCTION_41	CALL_16
0x4003198	      0xbd00000000	                              mov ebp, 0	       701	refs.c	FUNCTION_41
0x400319d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       703	refs.c	FUNCTION_41	CALL_17
0x40031a2	      0xe800000000	                          call 0x40031a7	       703	refs.c	FUNCTION_41	CALL_17
0x40031a7	            0x85ed	                           test ebp, ebp	      1091	refs.c	FUNCTION_59	IF_3
0x40031a9	            0x755b	                           jne 0x4003206	      1091	refs.c	FUNCTION_59	IF_3
0x40031ab	      0xe9d1000000	                           jmp 0x4003281	      1091	refs.c	FUNCTION_59	IF_3
0x40031b0	          0x4889e6	                            mov rsi, rsp	      1082	refs.c	FUNCTION_59	ELSE_1	CALL_5
0x40031b3	          0x4889ef	                            mov rdi, rbp	      1082	refs.c	FUNCTION_59	ELSE_1	CALL_5
0x40031b6	      0xe800000000	                          call 0x40031bb	      1082	refs.c	FUNCTION_59	ELSE_1	CALL_5
0x40031bb	          0x4889c5	                            mov rbp, rax	      1082	refs.c	FUNCTION_59	ELSE_1	CALL_5
0x40031be	          0x4885c0	                           test rax, rax	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x40031c1	            0x743b	                            je 0x40031fe	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x40031c3	        0x4883ec08	                              sub rsp, 8	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x40031c7	      0x488d442408	                      lea rax, [rsp + 8]	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x40031cc	              0x50	                                push rax	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x40031cd	          0x4d89f9	                             mov r9, r15	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x40031d0	          0x4589f0	                           mov r8d, r14d	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x40031d3	          0x4c89e9	                            mov rcx, r13	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x40031d6	          0x4c89e2	                            mov rdx, r12	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x40031d9	          0x4889de	                            mov rsi, rbx	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x40031dc	          0x4889ef	                            mov rdi, rbp	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x40031df	      0xe800000000	                          call 0x40031e4	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x40031e4	        0x4883c410	                           add rsp, 0x10	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x40031e8	            0x85c0	                           test eax, eax	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x40031ea	            0x7512	                           jne 0x40031fe	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x40031ec	          0x4889e6	                            mov rsi, rsp	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x40031ef	          0x4889ef	                            mov rdi, rbp	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x40031f2	      0xe800000000	                          call 0x40031f7	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x40031f7	          0x4189c4	                           mov r12d, eax	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x40031fa	            0x85c0	                           test eax, eax	      1085	refs.c	FUNCTION_59	ELSE_1	IF_2
0x40031fc	            0x7471	                            je 0x400326f	      1085	refs.c	FUNCTION_59	ELSE_1	IF_2
0x40031fe	          0x4889ef	                            mov rdi, rbp	      1088	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_8
0x4003201	      0xe800000000	                          call 0x4003206	      1088	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_8
0x4003206	    0x83bc24a00000	               cmp dword [rsp + 0xa0], 0	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x400320e	            0x740c	                            je 0x400321c	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4003210	    0x83bc24a00000	               cmp dword [rsp + 0xa0], 1	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4003218	            0x741b	                            je 0x4003235	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x400321a	            0xeb30	                           jmp 0x400324c	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x400321c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4003221	          0x4889de	                            mov rsi, rbx	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4003224	      0xbf00000000	                              mov edi, 0	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4003229	      0xb800000000	                              mov eax, 0	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x400322e	      0xe800000000	                          call 0x4003233	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4003233	            0xeb17	                           jmp 0x400324c	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x4003235	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_10
0x400323a	          0x4889de	                            mov rsi, rbx	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_10
0x400323d	      0xbf00000000	                              mov edi, 0	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_10
0x4003242	      0xb800000000	                              mov eax, 0	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_10
0x4003247	      0xe800000000	                          call 0x400324c	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_10
0x400324c	          0x4889e7	                            mov rdi, rsp	      1104	refs.c	FUNCTION_59	IF_3	CALL_11
0x400324f	      0xe800000000	                          call 0x4003254	      1104	refs.c	FUNCTION_59	IF_3	CALL_11
0x4003254	    0x41bc01000000	                             mov r12d, 1	      1105	refs.c	FUNCTION_59	IF_3
0x400325a	          0x4489e0	                           mov eax, r12d	      1111	refs.c	FUNCTION_59
0x400325d	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      1111	refs.c	FUNCTION_59
0x4003262	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1111	refs.c	FUNCTION_59
0x400326b	            0x7429	                            je 0x4003296	      1111	refs.c	FUNCTION_59
0x400326d	            0xeb22	                           jmp 0x4003291	      1111	refs.c	FUNCTION_59
0x400326f	          0x4889e7	                            mov rdi, rsp	      1107	refs.c	FUNCTION_59	CALL_12
0x4003272	      0xe800000000	                          call 0x4003277	      1107	refs.c	FUNCTION_59	CALL_12
0x4003277	          0x4889ef	                            mov rdi, rbp	      1109	refs.c	FUNCTION_59	CALL_13
0x400327a	      0xe800000000	                          call 0x400327f	      1109	refs.c	FUNCTION_59	CALL_13
0x400327f	            0xebd9	                           jmp 0x400325a	      1109	refs.c	FUNCTION_59	CALL_13
0x4003281	          0x4889e7	                            mov rdi, rsp	      1107	refs.c	FUNCTION_59	CALL_12
0x4003284	      0xe800000000	                          call 0x4003289	      1107	refs.c	FUNCTION_59	CALL_12
0x4003289	    0x41bc00000000	                             mov r12d, 0	      1110	refs.c	FUNCTION_59
0x400328f	            0xebc9	                           jmp 0x400325a	      1110	refs.c	FUNCTION_59
0x4003291	      0xe800000000	                          call 0x4003296	      1111	refs.c	FUNCTION_59
0x4003296	        0x4883c468	                           add rsp, 0x68	      1111	refs.c	FUNCTION_59
0x400329a	              0x5b	                                 pop rbx	      1111	refs.c	FUNCTION_59
0x400329b	              0x5d	                                 pop rbp	      1111	refs.c	FUNCTION_59
0x400329c	            0x415c	                                 pop r12	      1111	refs.c	FUNCTION_59
0x400329e	            0x415d	                                 pop r13	      1111	refs.c	FUNCTION_59
0x40032a0	            0x415e	                                 pop r14	      1111	refs.c	FUNCTION_59
0x40032a2	            0x415f	                                 pop r15	      1111	refs.c	FUNCTION_59
0x40032a4	              0xc3	                                     ret	      1111	refs.c	FUNCTION_59
update_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	32
0x40032a5	            0x4157	                                push r15	      1117	refs.c	FUNCTION_60
0x40032a7	            0x4156	                                push r14	      1117	refs.c	FUNCTION_60
0x40032a9	            0x4155	                                push r13	      1117	refs.c	FUNCTION_60
0x40032ab	            0x4154	                                push r12	      1117	refs.c	FUNCTION_60
0x40032ad	              0x55	                                push rbp	      1117	refs.c	FUNCTION_60
0x40032ae	              0x53	                                push rbx	      1117	refs.c	FUNCTION_60
0x40032af	        0x4883ec08	                              sub rsp, 8	      1117	refs.c	FUNCTION_60
0x40032b3	          0x4889fb	                            mov rbx, rdi	      1117	refs.c	FUNCTION_60
0x40032b6	          0x4889f5	                            mov rbp, rsi	      1117	refs.c	FUNCTION_60
0x40032b9	          0x4989d4	                            mov r12, rdx	      1117	refs.c	FUNCTION_60
0x40032bc	          0x4989cd	                            mov r13, rcx	      1117	refs.c	FUNCTION_60
0x40032bf	          0x4589c6	                           mov r14d, r8d	      1117	refs.c	FUNCTION_60
0x40032c2	          0x4589cf	                           mov r15d, r9d	      1117	refs.c	FUNCTION_60
0x40032c5	    0x488b3d000000	            mov rdi, qword [0x040032cc] 	      1118	refs.c	FUNCTION_60	CALL_2
0x40032cc	      0xe800000000	                          call 0x40032d1	      1118	refs.c	FUNCTION_60	CALL_2
0x40032d1	        0x4883ec08	                              sub rsp, 8	      1118	refs.c	FUNCTION_60	CALL_2
0x40032d5	            0x4157	                                push r15	      1118	refs.c	FUNCTION_60	CALL_2
0x40032d7	          0x4589f1	                           mov r9d, r14d	      1118	refs.c	FUNCTION_60	CALL_2
0x40032da	          0x4d89e8	                             mov r8, r13	      1118	refs.c	FUNCTION_60	CALL_2
0x40032dd	          0x4c89e1	                            mov rcx, r12	      1118	refs.c	FUNCTION_60	CALL_2
0x40032e0	          0x4889ea	                            mov rdx, rbp	      1118	refs.c	FUNCTION_60	CALL_2
0x40032e3	          0x4889de	                            mov rsi, rbx	      1118	refs.c	FUNCTION_60	CALL_2
0x40032e6	          0x4889c7	                            mov rdi, rax	      1118	refs.c	FUNCTION_60	CALL_2
0x40032e9	      0xe800000000	                          call 0x40032ee	      1118	refs.c	FUNCTION_60	CALL_2
0x40032ee	        0x4883c418	                           add rsp, 0x18	      1120	refs.c	FUNCTION_60
0x40032f2	              0x5b	                                 pop rbx	      1120	refs.c	FUNCTION_60
0x40032f3	              0x5d	                                 pop rbp	      1120	refs.c	FUNCTION_60
0x40032f4	            0x415c	                                 pop r12	      1120	refs.c	FUNCTION_60
0x40032f6	            0x415d	                                 pop r13	      1120	refs.c	FUNCTION_60
0x40032f8	            0x415e	                                 pop r14	      1120	refs.c	FUNCTION_60
0x40032fa	            0x415f	                                 pop r15	      1120	refs.c	FUNCTION_60
0x40032fc	              0xc3	                                     ret	      1120	refs.c	FUNCTION_60
rename_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	17
0x4003b95	            0x4154	                                push r12	      2143	refs.c	FUNCTION_122
0x4003b97	              0x55	                                push rbp	      2143	refs.c	FUNCTION_122
0x4003b98	              0x53	                                push rbx	      2143	refs.c	FUNCTION_122
0x4003b99	          0x4889fb	                            mov rbx, rdi	      2143	refs.c	FUNCTION_122
0x4003b9c	          0x4889f5	                            mov rbp, rsi	      2143	refs.c	FUNCTION_122
0x4003b9f	          0x4989d4	                            mov r12, rdx	      2143	refs.c	FUNCTION_122
0x4003ba2	    0x488b3d000000	            mov rdi, qword [0x04003ba9] 	      2144	refs.c	FUNCTION_122	CALL_2
0x4003ba9	      0xe800000000	                          call 0x4003bae	      2144	refs.c	FUNCTION_122	CALL_2
0x4003bae	          0x4c89e1	                            mov rcx, r12	      2144	refs.c	FUNCTION_122	CALL_2
0x4003bb1	          0x4889ea	                            mov rdx, rbp	      2144	refs.c	FUNCTION_122	CALL_2
0x4003bb4	          0x4889de	                            mov rsi, rbx	      2144	refs.c	FUNCTION_122	CALL_2
0x4003bb7	          0x4889c7	                            mov rdi, rax	      2144	refs.c	FUNCTION_122	CALL_2
0x4003bba	      0xe800000000	                          call 0x4003bbf	      2144	refs.c	FUNCTION_122	CALL_2
0x4003bbf	              0x5b	                                 pop rbx	      2145	refs.c	FUNCTION_122
0x4003bc0	              0x5d	                                 pop rbp	      2145	refs.c	FUNCTION_122
0x4003bc1	            0x415c	                                 pop r12	      2145	refs.c	FUNCTION_122
0x4003bc3	              0xc3	                                     ret	      2145	refs.c	FUNCTION_122
ref_transaction_free	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,6:FOR,1:SWITCH,1	41
0x4000f60	          0x4885ff	                           test rdi, rdi	       954	refs.c	FUNCTION_53	IF_1
0x4000f63	     0xf8486000000	                            je 0x4000fef	       954	refs.c	FUNCTION_53	IF_1
0x4000f69	              0x55	                                push rbp	       951	refs.c	FUNCTION_53
0x4000f6a	              0x53	                                push rbx	       951	refs.c	FUNCTION_53
0x4000f6b	        0x4883ec08	                              sub rsp, 8	       951	refs.c	FUNCTION_53
0x4000f6f	          0x4889fd	                            mov rbp, rdi	       951	refs.c	FUNCTION_53
0x4000f72	          0x8b4720	            mov eax, dword [rdi + 0x20] 	       957	refs.c	FUNCTION_53	SWITCH_1
0x4000f75	          0x83f801	                              cmp eax, 1	       957	refs.c	FUNCTION_53	SWITCH_1
0x4000f78	            0x7418	                            je 0x4000f92	       957	refs.c	FUNCTION_53	SWITCH_1
0x4000f7a	          0x83f801	                              cmp eax, 1	       957	refs.c	FUNCTION_53	SWITCH_1
0x4000f7d	            0x7205	                            jb 0x4000f84	       957	refs.c	FUNCTION_53	SWITCH_1
0x4000f7f	          0x83f802	                              cmp eax, 2	       957	refs.c	FUNCTION_53	SWITCH_1
0x4000f82	            0x751d	                           jne 0x4000fa1	       957	refs.c	FUNCTION_53	SWITCH_1
0x4000f84	      0xbb00000000	                              mov ebx, 0	       970	refs.c	FUNCTION_53	FOR_1
0x4000f89	      0x48837d1800	               cmp qword [rbp + 0x18], 0	       970	refs.c	FUNCTION_53	FOR_1
0x4000f8e	            0x7520	                           jne 0x4000fb0	       970	refs.c	FUNCTION_53	FOR_1
0x4000f90	            0xeb46	                           jmp 0x4000fd8	       970	refs.c	FUNCTION_53	FOR_1
0x4000f92	      0xbf00000000	                              mov edi, 0	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x4000f97	      0xb800000000	                              mov eax, 0	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x4000f9c	      0xe800000000	                          call 0x4000fa1	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x4000fa1	      0xbf00000000	                              mov edi, 0	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x4000fa6	      0xb800000000	                              mov eax, 0	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x4000fab	      0xe800000000	                          call 0x4000fb0	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x4000fb0	        0x488b4508	                mov rax, qword [rbp + 8]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4000fb4	        0x488b04d8	            mov rax, qword [rax + rbx*8]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4000fb8	        0x488b7840	            mov rdi, qword [rax + 0x40] 	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4000fbc	      0xe800000000	                          call 0x4000fc1	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4000fc1	        0x488b4508	                mov rax, qword [rbp + 8]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x4000fc5	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x4000fc9	      0xe800000000	                          call 0x4000fce	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x4000fce	        0x4883c301	                              add rbx, 1	       970	refs.c	FUNCTION_53	FOR_1
0x4000fd2	        0x48395d18	            cmp qword [rbp + 0x18], rbx 	       970	refs.c	FUNCTION_53	FOR_1
0x4000fd6	            0x77d8	                            ja 0x4000fb0	       970	refs.c	FUNCTION_53	FOR_1
0x4000fd8	        0x488b7d08	                mov rdi, qword [rbp + 8]	       974	refs.c	FUNCTION_53	CALL_5
0x4000fdc	      0xe800000000	                          call 0x4000fe1	       974	refs.c	FUNCTION_53	CALL_5
0x4000fe1	          0x4889ef	                            mov rdi, rbp	       975	refs.c	FUNCTION_53	CALL_6
0x4000fe4	      0xe800000000	                          call 0x4000fe9	       975	refs.c	FUNCTION_53	CALL_6
0x4000fe9	        0x4883c408	                              add rsp, 8	       976	refs.c	FUNCTION_53
0x4000fed	              0x5b	                                 pop rbx	       976	refs.c	FUNCTION_53
0x4000fee	              0x5d	                                 pop rbp	       976	refs.c	FUNCTION_53
0x4000fef	            0xf3c3	                                     ret	       976	refs.c	FUNCTION_53
dwim_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,3:FOR,0:SWITCH,0	26
0x400273c	            0x4154	                                push r12	       540	refs.c	FUNCTION_34
0x400273e	              0x55	                                push rbp	       540	refs.c	FUNCTION_34
0x400273f	              0x53	                                push rbx	       540	refs.c	FUNCTION_34
0x4002740	        0x4883ec10	                           sub rsp, 0x10	       540	refs.c	FUNCTION_34
0x4002744	      0x48897c2408	                mov qword [rsp + 8], rdi	       540	refs.c	FUNCTION_34
0x4002749	        0x89742404	                mov dword [rsp + 4], esi	       540	refs.c	FUNCTION_34
0x400274d	          0x4889d3	                            mov rbx, rdx	       540	refs.c	FUNCTION_34
0x4002750	          0x4989cc	                            mov r12, rcx	       540	refs.c	FUNCTION_34
0x4002753	      0x488d742404	                      lea rsi, [rsp + 4]	       541	refs.c	FUNCTION_34	CALL_1
0x4002758	      0x488d7c2408	                      lea rdi, [rsp + 8]	       541	refs.c	FUNCTION_34	CALL_1
0x400275d	      0xe8d1daffff	         call sym.substitute_branch_name	       541	refs.c	FUNCTION_34	CALL_1
0x4002762	          0x4889c5	                            mov rbp, rax	       541	refs.c	FUNCTION_34	CALL_1
0x4002765	          0x4c89e1	                            mov rcx, r12	       542	refs.c	FUNCTION_34	CALL_2
0x4002768	          0x4889da	                            mov rdx, rbx	       542	refs.c	FUNCTION_34	CALL_2
0x400276b	        0x8b742404	                mov esi, dword [rsp + 4]	       542	refs.c	FUNCTION_34	CALL_2
0x400276f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       542	refs.c	FUNCTION_34	CALL_2
0x4002774	      0xe800000000	                          call 0x4002779	       542	refs.c	FUNCTION_34	CALL_2
0x4002779	            0x89c3	                            mov ebx, eax	       542	refs.c	FUNCTION_34	CALL_2
0x400277b	          0x4889ef	                            mov rdi, rbp	       543	refs.c	FUNCTION_34	CALL_3
0x400277e	      0xe800000000	                          call 0x4002783	       543	refs.c	FUNCTION_34	CALL_3
0x4002783	            0x89d8	                            mov eax, ebx	       545	refs.c	FUNCTION_34
0x4002785	        0x4883c410	                           add rsp, 0x10	       545	refs.c	FUNCTION_34
0x4002789	              0x5b	                                 pop rbx	       545	refs.c	FUNCTION_34
0x400278a	              0x5d	                                 pop rbp	       545	refs.c	FUNCTION_34
0x400278b	            0x415c	                                 pop r12	       545	refs.c	FUNCTION_34
0x400278d	              0xc3	                                     ret	       545	refs.c	FUNCTION_34
should_autocreate_reflog	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,4:FOR,0:SWITCH,1	40
0x4000e6b	    0x8b0500000000	            mov eax, dword [0x04000e71] 	       798	refs.c	FUNCTION_46	SWITCH_1
0x4000e71	          0x83f801	                              cmp eax, 1	       798	refs.c	FUNCTION_46	SWITCH_1
0x4000e74	            0x740a	                            je 0x4000e80	       798	refs.c	FUNCTION_46	SWITCH_1
0x4000e76	          0x83f802	                              cmp eax, 2	       807	refs.c	FUNCTION_46	SWITCH_1
0x4000e79	           0xf94c0	                                 sete al	       807	refs.c	FUNCTION_46	SWITCH_1
0x4000e7c	           0xfb6c0	                           movzx eax, al	       807	refs.c	FUNCTION_46	SWITCH_1
0x4000e7f	              0xc3	                                     ret	       809	refs.c	FUNCTION_46
0x4000e80	              0x53	                                push rbx	       797	refs.c	FUNCTION_46
0x4000e81	          0x4889fb	                            mov rbx, rdi	       797	refs.c	FUNCTION_46
0x4000e84	      0xbe00000000	                              mov esi, 0	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4000e89	      0xe800000000	                          call 0x4000e8e	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4000e8e	            0x89c2	                            mov edx, eax	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4000e90	      0xb801000000	                              mov eax, 1	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4000e95	            0x85d2	                           test edx, edx	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4000e97	            0x754d	                           jne 0x4000ee6	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4000e99	      0xbe00000000	                              mov esi, 0	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4000e9e	          0x4889df	                            mov rdi, rbx	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4000ea1	      0xe800000000	                          call 0x4000ea6	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4000ea6	            0x89c2	                            mov edx, eax	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4000ea8	      0xb801000000	                              mov eax, 1	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4000ead	            0x85d2	                           test edx, edx	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4000eaf	            0x7535	                           jne 0x4000ee6	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4000eb1	      0xbe00000000	                              mov esi, 0	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4000eb6	          0x4889df	                            mov rdi, rbx	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4000eb9	      0xe800000000	                          call 0x4000ebe	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4000ebe	            0x89c2	                            mov edx, eax	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4000ec0	      0xb801000000	                              mov eax, 1	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4000ec5	            0x85d2	                           test edx, edx	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4000ec7	            0x751d	                           jne 0x4000ee6	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4000ec9	      0xbf00000000	                              mov edi, 0	       805	refs.c	FUNCTION_46	SWITCH_1	CALL_4
0x4000ece	      0xb905000000	                              mov ecx, 5	       805	refs.c	FUNCTION_46	SWITCH_1	CALL_4
0x4000ed3	          0x4889de	                            mov rsi, rbx	       805	refs.c	FUNCTION_46	SWITCH_1	CALL_4
0x4000ed6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       805	refs.c	FUNCTION_46	SWITCH_1	CALL_4
0x4000ed8	           0xf97c2	                                 seta dl	       805	refs.c	FUNCTION_46	SWITCH_1	CALL_4
0x4000edb	           0xf92c0	                                 setb al	       805	refs.c	FUNCTION_46	SWITCH_1	CALL_4
0x4000ede	            0x38c2	                              cmp dl, al	       800	refs.c	FUNCTION_46	SWITCH_1
0x4000ee0	           0xf94c0	                                 sete al	       800	refs.c	FUNCTION_46	SWITCH_1
0x4000ee3	           0xfb6c0	                           movzx eax, al	       800	refs.c	FUNCTION_46	SWITCH_1
0x4000ee6	              0x5b	                                 pop rbx	       809	refs.c	FUNCTION_46
0x4000ee7	              0xc3	                                     ret	       809	refs.c	FUNCTION_46
warn_if_dangling_symref	functions,0:ELSE,0:DO,0:IF,2:WHILE,0:CALL,5:FOR,0:SWITCH,0	42
0x40024ef	          0xf6c201	                              test dl, 1	       335	refs.c	FUNCTION_17	IF_1
0x40024f2	            0x747e	                            je 0x4002572	       335	refs.c	FUNCTION_17	IF_1
0x40024f4	              0x55	                                push rbp	       331	refs.c	FUNCTION_17
0x40024f5	              0x53	                                push rbx	       331	refs.c	FUNCTION_17
0x40024f6	        0x4883ec08	                              sub rsp, 8	       331	refs.c	FUNCTION_17
0x40024fa	          0x4889cb	                            mov rbx, rcx	       331	refs.c	FUNCTION_17
0x40024fd	          0x4889fd	                            mov rbp, rdi	       331	refs.c	FUNCTION_17
0x4002500	      0xb900000000	                              mov ecx, 0	       338	refs.c	FUNCTION_17	CALL_1
0x4002505	      0xba00000000	                              mov edx, 0	       338	refs.c	FUNCTION_17	CALL_1
0x400250a	      0xbe00000000	                              mov esi, 0	       338	refs.c	FUNCTION_17	CALL_1
0x400250f	      0xe800000000	                          call 0x4002514	       338	refs.c	FUNCTION_17	CALL_1
0x4002514	          0x4885c0	                           test rax, rax	       339	refs.c	FUNCTION_17	IF_2
0x4002517	            0x744d	                            je 0x4002566	       339	refs.c	FUNCTION_17	IF_2
0x4002519	        0x488b7308	                mov rsi, qword [rbx + 8]	       340	refs.c	FUNCTION_17	IF_2
0x400251d	          0x4885f6	                           test rsi, rsi	       339	refs.c	FUNCTION_17	IF_2
0x4002520	            0x740e	                            je 0x4002530	       339	refs.c	FUNCTION_17	IF_2
0x4002522	          0x4889c7	                            mov rdi, rax	       341	refs.c	FUNCTION_17	IF_2	CALL_2
0x4002525	      0xe800000000	                          call 0x400252a	       341	refs.c	FUNCTION_17	IF_2	CALL_2
0x400252a	            0x85c0	                           test eax, eax	       340	refs.c	FUNCTION_17	IF_2
0x400252c	            0x7412	                            je 0x4002540	       340	refs.c	FUNCTION_17	IF_2
0x400252e	            0xeb36	                           jmp 0x4002566	       340	refs.c	FUNCTION_17	IF_2
0x4002530	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       342	refs.c	FUNCTION_17	IF_2	CALL_3
0x4002534	          0x4889c6	                            mov rsi, rax	       342	refs.c	FUNCTION_17	IF_2	CALL_3
0x4002537	      0xe800000000	                          call 0x400253c	       342	refs.c	FUNCTION_17	IF_2	CALL_3
0x400253c	            0x85c0	                           test eax, eax	       340	refs.c	FUNCTION_17	IF_2
0x400253e	            0x7426	                            je 0x4002566	       340	refs.c	FUNCTION_17	IF_2
0x4002540	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	        97	stdio2.h	FUNCTION_220	CALL_1
0x4002544	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	FUNCTION_220	CALL_1
0x4002547	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_220	CALL_1
0x400254c	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	FUNCTION_220	CALL_1
0x400254f	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_220	CALL_1
0x4002554	      0xe800000000	                          call 0x4002559	        97	stdio2.h	FUNCTION_220	CALL_1
0x4002559	          0x488b33	                    mov rsi, qword [rbx]	       347	refs.c	FUNCTION_17	CALL_5
0x400255c	      0xbf0a000000	                            mov edi, 0xa	       347	refs.c	FUNCTION_17	CALL_5
0x4002561	      0xe800000000	                          call 0x4002566	       347	refs.c	FUNCTION_17	CALL_5
0x4002566	      0xb800000000	                              mov eax, 0	       349	refs.c	FUNCTION_17
0x400256b	        0x4883c408	                              add rsp, 8	       349	refs.c	FUNCTION_17
0x400256f	              0x5b	                                 pop rbx	       349	refs.c	FUNCTION_17
0x4002570	              0x5d	                                 pop rbp	       349	refs.c	FUNCTION_17
0x4002571	              0xc3	                                     ret	       349	refs.c	FUNCTION_17
0x4002572	      0xb800000000	                              mov eax, 0	       349	refs.c	FUNCTION_17
0x4002577	              0xc3	                                     ret	       349	refs.c	FUNCTION_17
ref_storage_backend_exists	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	7
0x400060d	        0x4883ec08	                              sub rsp, 8	        34	refs.c	FUNCTION_2
0x4000611	      0xe82afaffff	       call sym.find_ref_storage_backend	        35	refs.c	FUNCTION_2	CALL_1
0x4000616	          0x4885c0	                           test rax, rax	        35	refs.c	FUNCTION_2	CALL_1
0x4000619	           0xf95c0	                                setne al	        35	refs.c	FUNCTION_2	CALL_1
0x400061c	           0xfb6c0	                           movzx eax, al	        35	refs.c	FUNCTION_2	CALL_1
0x400061f	        0x4883c408	                              add rsp, 8	        36	refs.c	FUNCTION_2
0x4000623	              0xc3	                                     ret	        36	refs.c	FUNCTION_2
refs_init_db	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	10
0x400214d	              0x53	                                push rbx	      1565	refs.c	FUNCTION_82
0x400214e	          0x4889fb	                            mov rbx, rdi	      1565	refs.c	FUNCTION_82
0x4002151	    0x488b3d000000	            mov rdi, qword [0x04002158] 	      1566	refs.c	FUNCTION_82	CALL_1
0x4002158	      0xe800000000	                          call 0x400215d	      1566	refs.c	FUNCTION_82	CALL_1
0x400215d	          0x488b10	                    mov rdx, qword [rax]	      1568	refs.c	FUNCTION_82	CALL_2
0x4002160	          0x4889de	                            mov rsi, rbx	      1568	refs.c	FUNCTION_82	CALL_2
0x4002163	          0x4889c7	                            mov rdi, rax	      1568	refs.c	FUNCTION_82	CALL_2
0x4002166	          0xff5218	                 call qword [rdx + 0x18]	      1568	refs.c	FUNCTION_82	CALL_2
0x4002169	              0x5b	                                 pop rbx	      1569	refs.c	FUNCTION_82
0x400216a	              0xc3	                                     ret	      1569	refs.c	FUNCTION_82
read_ref_at_ent	functions,0:ELSE,2:DO,0:IF,10:WHILE,0:CALL,16:FOR,0:SWITCH,0	142
0x40002c4	            0x4157	                                push r15	       837	refs.c	FUNCTION_48
0x40002c6	            0x4156	                                push r14	       837	refs.c	FUNCTION_48
0x40002c8	            0x4155	                                push r13	       837	refs.c	FUNCTION_48
0x40002ca	            0x4154	                                push r12	       837	refs.c	FUNCTION_48
0x40002cc	              0x55	                                push rbp	       837	refs.c	FUNCTION_48
0x40002cd	              0x53	                                push rbx	       837	refs.c	FUNCTION_48
0x40002ce	        0x4883ec08	                              sub rsp, 8	       837	refs.c	FUNCTION_48
0x40002d2	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       837	refs.c	FUNCTION_48
0x40002d7	        0x83431401	               add dword [rbx + 0x14], 1	       840	refs.c	FUNCTION_48
0x40002db	        0x4489434c	             mov dword [rbx + 0x4c], r8d	       841	refs.c	FUNCTION_48
0x40002df	        0x48894b50	             mov qword [rbx + 0x50], rcx	       842	refs.c	FUNCTION_48
0x40002e3	        0x483b4b08	                cmp rcx, qword [rbx + 8]	       844	refs.c	FUNCTION_48	IF_1
0x40002e7	            0x760b	                           jbe 0x40002f4	       844	refs.c	FUNCTION_48	IF_1
0x40002e9	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       844	refs.c	FUNCTION_48	IF_1
0x40002ec	            0x85c0	                           test eax, eax	       844	refs.c	FUNCTION_48	IF_1
0x40002ee	     0xf856a010000	                           jne 0x400045e	       844	refs.c	FUNCTION_48	IF_1
0x40002f4	          0x4589c6	                           mov r14d, r8d	       844	refs.c	FUNCTION_48	IF_1
0x40002f7	          0x4989cd	                            mov r13, rcx	       844	refs.c	FUNCTION_48	IF_1
0x40002fa	          0x4889f5	                            mov rbp, rsi	       844	refs.c	FUNCTION_48	IF_1
0x40002fd	          0x4989fc	                            mov r12, rdi	       844	refs.c	FUNCTION_48	IF_1
0x4000300	        0x4c8b7b58	            mov r15, qword [rbx + 0x58] 	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x4000304	          0x4d85ff	                           test r15, r15	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x4000307	            0x740b	                            je 0x4000314	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x4000309	          0x4c89cf	                             mov rdi, r9	       846	refs.c	FUNCTION_48	IF_1	CALL_1
0x400030c	      0xe800000000	                          call 0x4000311	       846	refs.c	FUNCTION_48	IF_1	CALL_1
0x4000311	          0x498907	                    mov qword [r15], rax	       846	refs.c	FUNCTION_48	IF_1	CALL_1
0x4000314	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       847	refs.c	FUNCTION_48	IF_1	IF_3
0x4000318	          0x4885c0	                           test rax, rax	       847	refs.c	FUNCTION_48	IF_1	IF_3
0x400031b	            0x7403	                            je 0x4000320	       847	refs.c	FUNCTION_48	IF_1	IF_3
0x400031d	          0x4c8928	                    mov qword [rax], r13	       848	refs.c	FUNCTION_48	IF_1	IF_3
0x4000320	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       849	refs.c	FUNCTION_48	IF_1	IF_4
0x4000324	          0x4885c0	                           test rax, rax	       849	refs.c	FUNCTION_48	IF_1	IF_4
0x4000327	            0x7403	                            je 0x400032c	       849	refs.c	FUNCTION_48	IF_1	IF_4
0x4000329	          0x448930	                   mov dword [rax], r14d	       850	refs.c	FUNCTION_48	IF_1	IF_4
0x400032c	        0x488b5370	            mov rdx, qword [rbx + 0x70] 	       851	refs.c	FUNCTION_48	IF_1	IF_5
0x4000330	          0x4885d2	                           test rdx, rdx	       851	refs.c	FUNCTION_48	IF_1	IF_5
0x4000333	            0x7408	                            je 0x400033d	       851	refs.c	FUNCTION_48	IF_1	IF_5
0x4000335	          0x8b4314	            mov eax, dword [rbx + 0x14] 	       852	refs.c	FUNCTION_48	IF_1	IF_5
0x4000338	          0x83e801	                              sub eax, 1	       852	refs.c	FUNCTION_48	IF_1	IF_5
0x400033b	            0x8902	                    mov dword [rdx], eax	       852	refs.c	FUNCTION_48	IF_1	IF_5
0x400033d	        0x4c8d6b24	                   lea r13, [rbx + 0x24]	       990	cache.h	FUNCTION_174	CALL_1
0x4000341	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_171	CALL_1
0x4000346	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_171	CALL_1
0x400034b	          0x4c89ef	                            mov rdi, r13	       975	cache.h	FUNCTION_171	CALL_1
0x400034e	      0xe800000000	                          call 0x4000353	       975	cache.h	FUNCTION_171	CALL_1
0x4000353	            0x85c0	                           test eax, eax	       857	refs.c	FUNCTION_48	IF_1	IF_6	CALL_2
0x4000355	            0x7461	                            je 0x40003b8	       857	refs.c	FUNCTION_48	IF_1	IF_6	CALL_2
0x4000357	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_152	CALL_3
0x400035b	        0x488b5500	                    mov rdx, qword [rbp]	        53	string3.h	FUNCTION_152	CALL_3
0x400035f	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_152	CALL_3
0x4000362	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_152	CALL_3
0x4000366	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_152	CALL_3
0x400036a	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_152	CALL_3
0x400036d	          0x895010	             mov dword [rax + 0x10], edx	        53	string3.h	FUNCTION_152	CALL_3
0x4000370	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_171	CALL_1
0x4000375	          0x4889ee	                            mov rsi, rbp	       975	cache.h	FUNCTION_171	CALL_1
0x4000378	          0x4c89ef	                            mov rdi, r13	       975	cache.h	FUNCTION_171	CALL_1
0x400037b	      0xe800000000	                          call 0x4000380	       975	cache.h	FUNCTION_171	CALL_1
0x4000380	            0x85c0	                           test eax, eax	       859	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_4
0x4000382	     0xf8498000000	                            je 0x4000420	       859	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_4
0x4000388	      0xbf05000000	                              mov edi, 5	       861	refs.c	FUNCTION_48	IF_1	IF_6	CALL_7
0x400038d	      0xe800000000	                          call 0x4000392	       861	refs.c	FUNCTION_48	IF_1	IF_6	CALL_7
0x4000392	          0x8b734c	            mov esi, dword [rbx + 0x4c] 	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4000395	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4000399	          0x4889c2	                            mov rdx, rax	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x400039c	      0xe800000000	                          call 0x40003a1	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40003a1	          0x4889c2	                            mov rdx, rax	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40003a4	          0x488b33	                    mov rsi, qword [rbx]	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40003a7	      0xbf00000000	                              mov edi, 0	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40003ac	      0xb800000000	                              mov eax, 0	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40003b1	      0xe800000000	                          call 0x40003b6	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40003b6	            0xeb68	                           jmp 0x4000420	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40003b8	        0x488b4308	                mov rax, qword [rbx + 8]	       863	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x40003bc	        0x48394350	            cmp qword [rbx + 0x50], rax 	       863	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x40003c0	            0x751b	                           jne 0x40003dd	       863	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x40003c2	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_152	CALL_3
0x40003c6	        0x488b5500	                    mov rdx, qword [rbp]	        53	string3.h	FUNCTION_152	CALL_3
0x40003ca	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_152	CALL_3
0x40003cd	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_152	CALL_3
0x40003d1	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_152	CALL_3
0x40003d5	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_152	CALL_3
0x40003d8	          0x895010	             mov dword [rax + 0x10], edx	        53	string3.h	FUNCTION_152	CALL_3
0x40003db	            0xeb43	                           jmp 0x4000420	        53	string3.h	FUNCTION_152	CALL_3
0x40003dd	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       975	cache.h	FUNCTION_171	CALL_1
0x40003e1	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_171	CALL_1
0x40003e6	          0x4889ef	                            mov rdi, rbp	       975	cache.h	FUNCTION_171	CALL_1
0x40003e9	      0xe800000000	                          call 0x40003ee	       975	cache.h	FUNCTION_171	CALL_1
0x40003ee	            0x85c0	                           test eax, eax	       865	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x40003f0	            0x742e	                            je 0x4000420	       865	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x40003f2	      0xbf05000000	                              mov edi, 5	       868	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9
0x40003f7	      0xe800000000	                          call 0x40003fc	       868	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9
0x40003fc	          0x8b734c	            mov esi, dword [rbx + 0x4c] 	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_10
0x40003ff	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_10
0x4000403	          0x4889c2	                            mov rdx, rax	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_10
0x4000406	      0xe800000000	                          call 0x400040b	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_10
0x400040b	          0x4889c2	                            mov rdx, rax	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_10
0x400040e	          0x488b33	                    mov rsi, qword [rbx]	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_10
0x4000411	      0xbf00000000	                              mov edi, 0	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_10
0x4000416	      0xb800000000	                              mov eax, 0	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_10
0x400041b	      0xe800000000	                          call 0x4000420	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_10
0x4000420	        0x498b0424	                    mov rax, qword [r12]	        53	string3.h	FUNCTION_152	CALL_3
0x4000424	        0x48894324	             mov qword [rbx + 0x24], rax	        53	string3.h	FUNCTION_152	CALL_3
0x4000428	      0x498b442408	                mov rax, qword [r12 + 8]	        53	string3.h	FUNCTION_152	CALL_3
0x400042d	        0x49894508	                mov qword [r13 + 8], rax	        53	string3.h	FUNCTION_152	CALL_3
0x4000431	      0x418b442410	            mov eax, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_152	CALL_3
0x4000436	        0x41894510	             mov dword [r13 + 0x10], eax	        53	string3.h	FUNCTION_152	CALL_3
0x400043a	        0x488b5500	                    mov rdx, qword [rbp]	        53	string3.h	FUNCTION_152	CALL_3
0x400043e	        0x48895338	             mov qword [rbx + 0x38], rdx	        53	string3.h	FUNCTION_152	CALL_3
0x4000442	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_152	CALL_3
0x4000446	        0x48895340	             mov qword [rbx + 0x40], rdx	        53	string3.h	FUNCTION_152	CALL_3
0x400044a	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_152	CALL_3
0x400044d	          0x895348	             mov dword [rbx + 0x48], edx	        53	string3.h	FUNCTION_152	CALL_3
0x4000450	    0xc74320010000	               mov dword [rbx + 0x20], 1	       871	refs.c	FUNCTION_48	IF_1
0x4000457	      0xb801000000	                              mov eax, 1	       872	refs.c	FUNCTION_48	IF_1
0x400045c	            0xeb40	                           jmp 0x400049e	       872	refs.c	FUNCTION_48	IF_1
0x400045e	          0x488b0f	                    mov rcx, qword [rdi]	        53	string3.h	FUNCTION_152	CALL_3
0x4000461	        0x48894b24	             mov qword [rbx + 0x24], rcx	        53	string3.h	FUNCTION_152	CALL_3
0x4000465	        0x488b4f08	                mov rcx, qword [rdi + 8]	        53	string3.h	FUNCTION_152	CALL_3
0x4000469	        0x48894b2c	             mov qword [rbx + 0x2c], rcx	        53	string3.h	FUNCTION_152	CALL_3
0x400046d	          0x8b4f10	            mov ecx, dword [rdi + 0x10] 	        53	string3.h	FUNCTION_152	CALL_3
0x4000470	          0x894b34	             mov dword [rbx + 0x34], ecx	        53	string3.h	FUNCTION_152	CALL_3
0x4000473	          0x488b0e	                    mov rcx, qword [rsi]	        53	string3.h	FUNCTION_152	CALL_3
0x4000476	        0x48894b38	             mov qword [rbx + 0x38], rcx	        53	string3.h	FUNCTION_152	CALL_3
0x400047a	        0x488b4e08	                mov rcx, qword [rsi + 8]	        53	string3.h	FUNCTION_152	CALL_3
0x400047e	        0x48894b40	             mov qword [rbx + 0x40], rcx	        53	string3.h	FUNCTION_152	CALL_3
0x4000482	          0x8b4e10	            mov ecx, dword [rsi + 0x10] 	        53	string3.h	FUNCTION_152	CALL_3
0x4000485	          0x894b48	             mov dword [rbx + 0x48], ecx	        53	string3.h	FUNCTION_152	CALL_3
0x4000488	            0x85c0	                           test eax, eax	       876	refs.c	FUNCTION_48	IF_10
0x400048a	            0x7e0d	                           jle 0x4000499	       876	refs.c	FUNCTION_48	IF_10
0x400048c	          0x83e801	                              sub eax, 1	       877	refs.c	FUNCTION_48	IF_10
0x400048f	          0x894310	             mov dword [rbx + 0x10], eax	       877	refs.c	FUNCTION_48	IF_10
0x4000492	      0xb800000000	                              mov eax, 0	       878	refs.c	FUNCTION_48
0x4000497	            0xeb05	                           jmp 0x400049e	       878	refs.c	FUNCTION_48
0x4000499	      0xb800000000	                              mov eax, 0	       878	refs.c	FUNCTION_48
0x400049e	        0x4883c408	                              add rsp, 8	       879	refs.c	FUNCTION_48
0x40004a2	              0x5b	                                 pop rbx	       879	refs.c	FUNCTION_48
0x40004a3	              0x5d	                                 pop rbp	       879	refs.c	FUNCTION_48
0x40004a4	            0x415c	                                 pop r12	       879	refs.c	FUNCTION_48
0x40004a6	            0x415d	                                 pop r13	       879	refs.c	FUNCTION_48
0x40004a8	            0x415e	                                 pop r14	       879	refs.c	FUNCTION_48
0x40004aa	            0x415f	                                 pop r15	       879	refs.c	FUNCTION_48
0x40004ac	              0xc3	                                     ret	       879	refs.c	FUNCTION_48
normalize_glob_ref	functions,0:ELSE,1:DO,0:IF,3:WHILE,0:CALL,9:FOR,0:SWITCH,0	113
0x4000a08	              0x55	                                push rbp	       420	refs.c	FUNCTION_27
0x4000a09	              0x53	                                push rbx	       420	refs.c	FUNCTION_27
0x4000a0a	        0x4883ec28	                           sub rsp, 0x28	       420	refs.c	FUNCTION_27
0x4000a0e	    0x64488b042528	                mov rax, qword fs:[0x28]	       420	refs.c	FUNCTION_27
0x4000a17	      0x4889442418	             mov qword [rsp + 0x18], rax	       420	refs.c	FUNCTION_27
0x4000a1c	            0x31c0	                            xor eax, eax	       420	refs.c	FUNCTION_27
0x4000a1e	    0x48c704240000	                      mov qword [rsp], 0	       421	refs.c	FUNCTION_27
0x4000a26	    0x48c744240800	                  mov qword [rsp + 8], 0	       421	refs.c	FUNCTION_27
0x4000a2f	    0x48c744241000	               mov qword [rsp + 0x10], 0	       421	refs.c	FUNCTION_27
0x4000a38	          0x803a2f	                    cmp byte [rdx], 0x2f	       423	refs.c	FUNCTION_27	IF_1
0x4000a3b	            0x7514	                           jne 0x4000a51	       423	refs.c	FUNCTION_27	IF_1
0x4000a3d	      0xba00000000	                              mov edx, 0	       424	refs.c	FUNCTION_27	CALL_1
0x4000a42	      0xbea8010000	                          mov esi, 0x1a8	       424	refs.c	FUNCTION_27	CALL_1
0x4000a47	      0xbf00000000	                              mov edi, 0	       424	refs.c	FUNCTION_27	CALL_1
0x4000a4c	      0xe800000000	                          call 0x4000a51	       424	refs.c	FUNCTION_27	CALL_1
0x4000a51	          0x4889fd	                            mov rbp, rdi	       424	refs.c	FUNCTION_27	CALL_1
0x4000a54	          0x4889d3	                            mov rbx, rdx	       424	refs.c	FUNCTION_27	CALL_1
0x4000a57	          0x4885f6	                           test rsi, rsi	       426	refs.c	FUNCTION_27	IF_2
0x4000a5a	            0x7422	                            je 0x4000a7e	       426	refs.c	FUNCTION_27	IF_2
0x4000a5c	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000a61	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000a68	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000a6b	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000a6d	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000a70	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000a74	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000a77	      0xe800000000	                          call 0x4000a7c	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000a7c	            0xeb23	                           jmp 0x4000aa1	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000a7e	      0xbe00000000	                              mov esi, 0	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_3
0x4000a83	          0x4889d7	                            mov rdi, rdx	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_3
0x4000a86	      0xe800000000	                          call 0x4000a8b	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_3
0x4000a8b	            0x85c0	                           test eax, eax	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_3
0x4000a8d	            0x7512	                           jne 0x4000aa1	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_3
0x4000a8f	      0xba05000000	                              mov edx, 5	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000a94	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000a99	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000a9c	      0xe800000000	                          call 0x4000aa1	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000aa1	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000aa6	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000aad	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000ab0	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000ab2	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000ab5	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000ab9	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000abc	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000abf	      0xe800000000	                          call 0x4000ac4	       279	strbuf.h	FUNCTION_195	CALL_2
0x4000ac4	      0x488b442408	                mov rax, qword [rsp + 8]	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x4000ac9	          0x4885c0	                           test rax, rax	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x4000acc	            0x7467	                            je 0x4000b35	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x4000ace	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       496	strbuf.h	FUNCTION_196	IF_1	CALL_1
0x4000ad3	        0x488d70ff	                      lea rsi, [rax - 1]	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x4000ad7	      0x807c02ff2f	         cmp byte [rdx + rax - 1], 0x2f 	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x4000adc	            0x7557	                           jne 0x4000b35	       540	git-compat-util.h	FUNCTION_134	IF_1	CALL_2
0x4000ade	      0x4889742408	                mov qword [rsp + 8], rsi	       542	git-compat-util.h	FUNCTION_134
0x4000ae3	        0x488b0c24	                    mov rcx, qword [rsp]	       162	strbuf.h	FUNCTION_193	IF_1
0x4000ae7	        0x4883f901	                              cmp rcx, 1	       162	strbuf.h	FUNCTION_193	IF_1
0x4000aeb	        0x4883d1ff	             adc rcx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_193	IF_1
0x4000aef	          0x4839ce	                            cmp rsi, rcx	       162	strbuf.h	FUNCTION_193	IF_1
0x4000af2	            0x760f	                           jbe 0x4000b03	       162	strbuf.h	FUNCTION_193	IF_1
0x4000af4	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_193	CALL_1
0x4000af9	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_193	CALL_1
0x4000afe	      0xe800000000	                          call 0x4000b03	       163	strbuf.h	FUNCTION_193	CALL_1
0x4000b03	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_193	IF_2
0x4000b0a	            0x7407	                            je 0x4000b13	       165	strbuf.h	FUNCTION_193	IF_2
0x4000b0c	      0xc64402ff00	             mov byte [rdx + rax - 1], 0	       166	strbuf.h	FUNCTION_193	IF_2
0x4000b11	            0xeb22	                           jmp 0x4000b35	       166	strbuf.h	FUNCTION_193	IF_2
0x4000b13	    0x803d00000000	                cmp byte [0x04000b1a], 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x4000b1a	            0x7419	                            je 0x4000b35	       168	strbuf.h	FUNCTION_193	CALL_2
0x4000b1c	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x4000b21	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_193	CALL_2
0x4000b26	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x4000b2b	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x4000b30	      0xe800000000	                          call 0x4000b35	       168	strbuf.h	FUNCTION_193	CALL_2
0x4000b35	      0xbe00000000	                              mov esi, 0	       434	refs.c	FUNCTION_27	CALL_7
0x4000b3a	          0x4889e7	                            mov rdi, rsp	       434	refs.c	FUNCTION_27	CALL_7
0x4000b3d	      0xe800000000	                          call 0x4000b42	       434	refs.c	FUNCTION_27	CALL_7
0x4000b42	        0x48894500	                    mov qword [rbp], rax	       434	refs.c	FUNCTION_27	CALL_7
0x4000b46	           0xfb613	                   movzx edx, byte [rbx]	      1114	string2.h	FUNCTION_249	WHILE_1
0x4000b49	            0x84d2	                             test dl, dl	      1114	string2.h	FUNCTION_249	WHILE_1
0x4000b4b	            0x743d	                            je 0x4000b8a	      1114	string2.h	FUNCTION_249	WHILE_1
0x4000b4d	          0x83ea2a	                           sub edx, 0x2a	      1114	string2.h	FUNCTION_249	WHILE_1
0x4000b50	          0x80fa31	                            cmp dl, 0x31	      1114	string2.h	FUNCTION_249	WHILE_1
0x4000b53	            0x7710	                            ja 0x4000b65	      1114	string2.h	FUNCTION_249	WHILE_1
0x4000b55	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_249	WHILE_1
0x4000b5f	        0x480fa3d1	                             bt rcx, rdx	      1115	string2.h	FUNCTION_249	WHILE_1
0x4000b63	            0x7243	                            jb 0x4000ba8	      1115	string2.h	FUNCTION_249	WHILE_1
0x4000b65	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_249	WHILE_1
0x4000b6f	        0x4883c301	                              add rbx, 1	      1116	string2.h	FUNCTION_249	WHILE_1
0x4000b73	           0xfb613	                   movzx edx, byte [rbx]	      1114	string2.h	FUNCTION_249	WHILE_1
0x4000b76	            0x84d2	                             test dl, dl	      1114	string2.h	FUNCTION_249	WHILE_1
0x4000b78	            0x7410	                            je 0x4000b8a	      1114	string2.h	FUNCTION_249	WHILE_1
0x4000b7a	          0x83ea2a	                           sub edx, 0x2a	      1114	string2.h	FUNCTION_249	WHILE_1
0x4000b7d	          0x80fa31	                            cmp dl, 0x31	      1114	string2.h	FUNCTION_249	WHILE_1
0x4000b80	            0x77ed	                            ja 0x4000b6f	      1114	string2.h	FUNCTION_249	WHILE_1
0x4000b82	        0x480fa3d1	                             bt rcx, rdx	      1115	string2.h	FUNCTION_249	WHILE_1
0x4000b86	            0x73e7	                           jae 0x4000b6f	      1115	string2.h	FUNCTION_249	WHILE_1
0x4000b88	            0xeb1e	                           jmp 0x4000ba8	      1115	string2.h	FUNCTION_249	WHILE_1
0x4000b8a	        0x48894508	                mov qword [rbp + 8], rax	       435	refs.c	FUNCTION_27	CALL_8
0x4000b8e	          0x4889e7	                            mov rdi, rsp	       436	refs.c	FUNCTION_27	CALL_9
0x4000b91	      0xe800000000	                          call 0x4000b96	       436	refs.c	FUNCTION_27	CALL_9
0x4000b96	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       437	refs.c	FUNCTION_27
0x4000b9b	    0x644833042528	                xor rax, qword fs:[0x28]	       437	refs.c	FUNCTION_27
0x4000ba4	            0x7415	                            je 0x4000bbb	       437	refs.c	FUNCTION_27
0x4000ba6	            0xeb0e	                           jmp 0x4000bb6	       437	refs.c	FUNCTION_27
0x4000ba8	          0x4885db	                           test rbx, rbx	       435	refs.c	FUNCTION_27	CALL_8
0x4000bab	      0xba00000000	                              mov edx, 0	       435	refs.c	FUNCTION_27	CALL_8
0x4000bb0	        0x480f45c2	                         cmovne rax, rdx	       435	refs.c	FUNCTION_27	CALL_8
0x4000bb4	            0xebd4	                           jmp 0x4000b8a	       435	refs.c	FUNCTION_27	CALL_8
0x4000bb6	      0xe800000000	                          call 0x4000bbb	       437	refs.c	FUNCTION_27
0x4000bbb	        0x4883c428	                           add rsp, 0x28	       437	refs.c	FUNCTION_27
0x4000bbf	              0x5b	                                 pop rbx	       437	refs.c	FUNCTION_27
0x4000bc0	              0x5d	                                 pop rbp	       437	refs.c	FUNCTION_27
0x4000bc1	              0xc3	                                     ret	       437	refs.c	FUNCTION_27
delete_reflog	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	9
0x4003a9e	              0x53	                                push rbx	      2086	refs.c	FUNCTION_115
0x4003a9f	          0x4889fb	                            mov rbx, rdi	      2086	refs.c	FUNCTION_115
0x4003aa2	    0x488b3d000000	            mov rdi, qword [0x04003aa9] 	      2087	refs.c	FUNCTION_115	CALL_2
0x4003aa9	      0xe800000000	                          call 0x4003aae	      2087	refs.c	FUNCTION_115	CALL_2
0x4003aae	          0x4889de	                            mov rsi, rbx	      2087	refs.c	FUNCTION_115	CALL_2
0x4003ab1	          0x4889c7	                            mov rdi, rax	      2087	refs.c	FUNCTION_115	CALL_2
0x4003ab4	      0xe800000000	                          call 0x4003ab9	      2087	refs.c	FUNCTION_115	CALL_2
0x4003ab9	              0x5b	                                 pop rbx	      2088	refs.c	FUNCTION_115
0x4003aba	              0xc3	                                     ret	      2088	refs.c	FUNCTION_115
ref_type	functions,0:ELSE,0:DO,0:IF,2:WHILE,0:CALL,2:FOR,0:SWITCH,0	54
0x4000cfd	              0x53	                                push rbx	       635	refs.c	FUNCTION_39
0x4000cfe	          0x4889fb	                            mov rbx, rdi	       635	refs.c	FUNCTION_39
0x4000d01	      0xbf00000000	                              mov edi, 0	       617	refs.c	FUNCTION_37	CALL_1
0x4000d06	      0xb905000000	                              mov ecx, 5	       617	refs.c	FUNCTION_37	CALL_1
0x4000d0b	          0x4889de	                            mov rsi, rbx	       617	refs.c	FUNCTION_37	CALL_1
0x4000d0e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       617	refs.c	FUNCTION_37	CALL_1
0x4000d10	           0xf97c2	                                 seta dl	       617	refs.c	FUNCTION_37	CALL_1
0x4000d13	           0xf92c0	                                 setb al	       617	refs.c	FUNCTION_37	CALL_1
0x4000d16	            0x38c2	                              cmp dl, al	       618	refs.c	FUNCTION_37	CALL_2
0x4000d18	            0x747f	                            je 0x4000d99	       618	refs.c	FUNCTION_37	CALL_2
0x4000d1a	      0xbe00000000	                              mov esi, 0	       618	refs.c	FUNCTION_37	CALL_2
0x4000d1f	          0x4889df	                            mov rdi, rbx	       618	refs.c	FUNCTION_37	CALL_2
0x4000d22	      0xe800000000	                          call 0x4000d27	       618	refs.c	FUNCTION_37	CALL_2
0x4000d27	            0x85c0	                           test eax, eax	       617	refs.c	FUNCTION_37	CALL_1
0x4000d29	            0x756e	                           jne 0x4000d99	       617	refs.c	FUNCTION_37	CALL_1
0x4000d2b	      0xbe00000000	                              mov esi, 0	       619	refs.c	FUNCTION_37	CALL_3
0x4000d30	          0x4889df	                            mov rdi, rbx	       619	refs.c	FUNCTION_37	CALL_3
0x4000d33	      0xe800000000	                          call 0x4000d38	       619	refs.c	FUNCTION_37	CALL_3
0x4000d38	            0x85c0	                           test eax, eax	       636	refs.c	FUNCTION_39	IF_1	CALL_1
0x4000d3a	            0x7548	                           jne 0x4000d84	       636	refs.c	FUNCTION_39	IF_1	CALL_1
0x4000d3c	           0xfb613	                   movzx edx, byte [rbx]	       626	refs.c	FUNCTION_38	FOR_1
0x4000d3f	            0x84d2	                             test dl, dl	       626	refs.c	FUNCTION_38	FOR_1
0x4000d41	            0x7448	                            je 0x4000d8b	       626	refs.c	FUNCTION_38	FOR_1
0x4000d43	           0xfb6f2	                           movzx esi, dl	      1000	git-compat-util.h	FUNCTION_146	IF_1	CALL_1
0x4000d46	            0x89c1	                            mov ecx, eax	      1001	git-compat-util.h	FUNCTION_146	IF_1
0x4000d48	    0xf68600000000	                      test byte [rsi], 4	      1000	git-compat-util.h	FUNCTION_146	IF_1	CALL_1
0x4000d4f	            0x740b	                            je 0x4000d5c	      1000	git-compat-util.h	FUNCTION_146	IF_1	CALL_1
0x4000d51	            0x89d1	                            mov ecx, edx	      1006	git-compat-util.h	FUNCTION_146	ELSE_1
0x4000d53	          0xc0e905	                               shr cl, 5	      1006	git-compat-util.h	FUNCTION_146	ELSE_1
0x4000d56	          0x83f101	                              xor ecx, 1	      1006	git-compat-util.h	FUNCTION_146	ELSE_1
0x4000d59	          0x83e101	                              and ecx, 1	      1006	git-compat-util.h	FUNCTION_146	ELSE_1
0x4000d5c	          0x80fa5f	                            cmp dl, 0x5f	       627	refs.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4000d5f	        0x400f95c6	                               setne sil	       627	refs.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4000d63	          0x80fa2d	                            cmp dl, 0x2d	       627	refs.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4000d66	           0xf95c2	                                setne dl	       627	refs.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4000d69	          0x4084d6	                            test sil, dl	       627	refs.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4000d6c	            0x7404	                            je 0x4000d72	       627	refs.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4000d6e	            0x85c9	                           test ecx, ecx	       627	refs.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4000d70	            0x7420	                            je 0x4000d92	       627	refs.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4000d72	        0x4883c301	                              add rbx, 1	       626	refs.c	FUNCTION_38	FOR_1
0x4000d76	           0xfb613	                   movzx edx, byte [rbx]	       626	refs.c	FUNCTION_38	FOR_1
0x4000d79	            0x84d2	                             test dl, dl	       626	refs.c	FUNCTION_38	FOR_1
0x4000d7b	            0x75c6	                           jne 0x4000d43	       626	refs.c	FUNCTION_38	FOR_1
0x4000d7d	      0xb801000000	                              mov eax, 1	       639	refs.c	FUNCTION_39	IF_2
0x4000d82	            0xeb1a	                           jmp 0x4000d9e	       639	refs.c	FUNCTION_39	IF_2
0x4000d84	      0xb800000000	                              mov eax, 0	       637	refs.c	FUNCTION_39	IF_1
0x4000d89	            0xeb13	                           jmp 0x4000d9e	       637	refs.c	FUNCTION_39	IF_1
0x4000d8b	      0xb801000000	                              mov eax, 1	       639	refs.c	FUNCTION_39	IF_2
0x4000d90	            0xeb0c	                           jmp 0x4000d9e	       639	refs.c	FUNCTION_39	IF_2
0x4000d92	      0xb802000000	                              mov eax, 2	       640	refs.c	FUNCTION_39
0x4000d97	            0xeb05	                           jmp 0x4000d9e	       640	refs.c	FUNCTION_39
0x4000d99	      0xb800000000	                              mov eax, 0	       637	refs.c	FUNCTION_39	IF_1
0x4000d9e	              0x5b	                                 pop rbx	       641	refs.c	FUNCTION_39
0x4000d9f	              0xc3	                                     ret	       641	refs.c	FUNCTION_39
ref_transaction_update	functions,0:ELSE,0:DO,0:IF,2:WHILE,0:CALL,7:FOR,0:SWITCH,0	81
0x4001181	            0x4157	                                push r15	      1010	refs.c	FUNCTION_55
0x4001183	            0x4156	                                push r14	      1010	refs.c	FUNCTION_55
0x4001185	            0x4155	                                push r13	      1010	refs.c	FUNCTION_55
0x4001187	            0x4154	                                push r12	      1010	refs.c	FUNCTION_55
0x4001189	              0x55	                                push rbp	      1010	refs.c	FUNCTION_55
0x400118a	              0x53	                                push rbx	      1010	refs.c	FUNCTION_55
0x400118b	        0x4883ec08	                              sub rsp, 8	      1010	refs.c	FUNCTION_55
0x400118f	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      1011	refs.c	FUNCTION_55	CALL_1
0x4001195	            0x7519	                           jne 0x40011b0	      1011	refs.c	FUNCTION_55	CALL_1
0x4001197	      0xb900000000	                              mov ecx, 0	      1011	refs.c	FUNCTION_55	CALL_1
0x400119c	      0xbaf3030000	                          mov edx, 0x3f3	      1011	refs.c	FUNCTION_55	CALL_1
0x40011a1	      0xbe00000000	                              mov esi, 0	      1011	refs.c	FUNCTION_55	CALL_1
0x40011a6	      0xbf00000000	                              mov edi, 0	      1011	refs.c	FUNCTION_55	CALL_1
0x40011ab	      0xe800000000	                          call 0x40011b0	      1011	refs.c	FUNCTION_55	CALL_1
0x40011b0	          0x4989fe	                            mov r14, rdi	      1011	refs.c	FUNCTION_55	CALL_1
0x40011b3	          0x4989f4	                            mov r12, rsi	      1011	refs.c	FUNCTION_55	CALL_1
0x40011b6	          0x4889d5	                            mov rbp, rdx	      1011	refs.c	FUNCTION_55	CALL_1
0x40011b9	          0x4989cd	                            mov r13, rcx	      1011	refs.c	FUNCTION_55	CALL_1
0x40011bc	          0x4489c3	                            mov ebx, r8d	      1011	refs.c	FUNCTION_55	CALL_1
0x40011bf	          0x4d89cf	                             mov r15, r9	      1011	refs.c	FUNCTION_55	CALL_1
0x40011c2	          0x4885d2	                           test rdx, rdx	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40011c5	            0x742a	                            je 0x40011f1	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40011c7	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_171	CALL_1
0x40011cc	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_171	CALL_1
0x40011d1	          0x4889ef	                            mov rdi, rbp	       975	cache.h	FUNCTION_171	CALL_1
0x40011d4	      0xe800000000	                          call 0x40011d9	       975	cache.h	FUNCTION_171	CALL_1
0x40011d9	            0x85c0	                           test eax, eax	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40011db	            0x7414	                            je 0x40011f1	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40011dd	      0xbe01000000	                              mov esi, 1	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x40011e2	          0x4c89e7	                            mov rdi, r12	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x40011e5	      0xe800000000	                          call 0x40011ea	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x40011ea	            0x85c0	                           test eax, eax	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40011ec	           0xf95c0	                                setne al	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40011ef	            0xeb0d	                           jmp 0x40011fe	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40011f1	          0x4c89e7	                            mov rdi, r12	      1015	refs.c	FUNCTION_55	IF_1	CALL_4
0x40011f4	      0xe800000000	                          call 0x40011f9	      1015	refs.c	FUNCTION_55	IF_1	CALL_4
0x40011f9	            0x85c0	                           test eax, eax	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40011fb	           0xf94c0	                                 sete al	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40011fe	            0x84c0	                             test al, al	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4001200	            0x741e	                            je 0x4001220	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4001202	          0x4c89e2	                            mov rdx, r12	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4001205	      0xbe00000000	                              mov esi, 0	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x400120a	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x400120f	      0xb800000000	                              mov eax, 0	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4001214	      0xe800000000	                          call 0x4001219	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4001219	      0xb8ffffffff	                     mov eax, 0xffffffff	      1018	refs.c	FUNCTION_55	IF_1
0x400121e	            0xeb58	                           jmp 0x4001278	      1018	refs.c	FUNCTION_55	IF_1
0x4001220	    0xf7c3fcffffff	                    test ebx, 0xfffffffc	      1021	refs.c	FUNCTION_55	IF_2
0x4001226	            0x741b	                            je 0x4001243	      1021	refs.c	FUNCTION_55	IF_2
0x4001228	            0x89d9	                            mov ecx, ebx	      1022	refs.c	FUNCTION_55	CALL_6
0x400122a	      0xba00000000	                              mov edx, 0	      1022	refs.c	FUNCTION_55	CALL_6
0x400122f	      0xbefe030000	                          mov esi, 0x3fe	      1022	refs.c	FUNCTION_55	CALL_6
0x4001234	      0xbf00000000	                              mov edi, 0	      1022	refs.c	FUNCTION_55	CALL_6
0x4001239	      0xb800000000	                              mov eax, 0	      1022	refs.c	FUNCTION_55	CALL_6
0x400123e	      0xe800000000	                          call 0x4001243	      1022	refs.c	FUNCTION_55	CALL_6
0x4001243	        0x4883fd01	                              cmp rbp, 1	      1024	refs.c	FUNCTION_55
0x4001247	            0x19d2	                            sbb edx, edx	      1024	refs.c	FUNCTION_55
0x4001249	            0xf7d2	                                 not edx	      1024	refs.c	FUNCTION_55
0x400124b	          0x83e204	                              and edx, 4	      1024	refs.c	FUNCTION_55
0x400124e	        0x4983fd01	                              cmp r13, 1	      1024	refs.c	FUNCTION_55
0x4001252	            0x19c0	                            sbb eax, eax	      1024	refs.c	FUNCTION_55
0x4001254	            0xf7d0	                                 not eax	      1024	refs.c	FUNCTION_55
0x4001256	          0x83e008	                              and eax, 8	      1024	refs.c	FUNCTION_55
0x4001259	             0x9d0	                             or eax, edx	      1026	refs.c	FUNCTION_55	CALL_7
0x400125b	             0x9d8	                             or eax, ebx	      1026	refs.c	FUNCTION_55	CALL_7
0x400125d	            0x89c2	                            mov edx, eax	      1026	refs.c	FUNCTION_55	CALL_7
0x400125f	          0x4d89f9	                             mov r9, r15	      1026	refs.c	FUNCTION_55	CALL_7
0x4001262	          0x4d89e8	                             mov r8, r13	      1026	refs.c	FUNCTION_55	CALL_7
0x4001265	          0x4889e9	                            mov rcx, rbp	      1026	refs.c	FUNCTION_55	CALL_7
0x4001268	          0x4c89e6	                            mov rsi, r12	      1026	refs.c	FUNCTION_55	CALL_7
0x400126b	          0x4c89f7	                            mov rdi, r14	      1026	refs.c	FUNCTION_55	CALL_7
0x400126e	      0xe800000000	                          call 0x4001273	      1026	refs.c	FUNCTION_55	CALL_7
0x4001273	      0xb800000000	                              mov eax, 0	      1028	refs.c	FUNCTION_55
0x4001278	        0x4883c408	                              add rsp, 8	      1029	refs.c	FUNCTION_55
0x400127c	              0x5b	                                 pop rbx	      1029	refs.c	FUNCTION_55
0x400127d	              0x5d	                                 pop rbp	      1029	refs.c	FUNCTION_55
0x400127e	            0x415c	                                 pop r12	      1029	refs.c	FUNCTION_55
0x4001280	            0x415d	                                 pop r13	      1029	refs.c	FUNCTION_55
0x4001282	            0x415e	                                 pop r14	      1029	refs.c	FUNCTION_55
0x4001284	            0x415f	                                 pop r15	      1029	refs.c	FUNCTION_55
0x4001286	              0xc3	                                     ret	      1029	refs.c	FUNCTION_55
get_worktree_ref_store	functions,0:ELSE,1:DO,0:IF,4:WHILE,0:CALL,7:FOR,0:SWITCH,0	47
0x4002980	              0x55	                                push rbp	      1740	refs.c	FUNCTION_92
0x4002981	              0x53	                                push rbx	      1740	refs.c	FUNCTION_92
0x4002982	        0x4883ec08	                              sub rsp, 8	      1740	refs.c	FUNCTION_92
0x4002986	        0x837f3c00	               cmp dword [rdi + 0x3c], 0	      1744	refs.c	FUNCTION_92	IF_1
0x400298a	            0x7411	                            je 0x400299d	      1744	refs.c	FUNCTION_92	IF_1
0x400298c	    0x488b3d000000	            mov rdi, qword [0x04002993] 	      1745	refs.c	FUNCTION_92	CALL_1
0x4002993	      0xe800000000	                          call 0x4002998	      1745	refs.c	FUNCTION_92	CALL_1
0x4002998	      0xe984000000	                           jmp 0x4002a21	      1745	refs.c	FUNCTION_92	CALL_1
0x400299d	          0x4889fd	                            mov rbp, rdi	      1745	refs.c	FUNCTION_92	CALL_1
0x40029a0	        0x488b5f08	                mov rbx, qword [rdi + 8]	      1747	refs.c	FUNCTION_92
0x40029a4	          0x4885db	                           test rbx, rbx	      1747	refs.c	FUNCTION_92
0x40029a7	      0xb800000000	                              mov eax, 0	      1747	refs.c	FUNCTION_92
0x40029ac	        0x480f44d8	                          cmove rbx, rax	      1747	refs.c	FUNCTION_92
0x40029b0	          0x4889de	                            mov rsi, rbx	      1748	refs.c	FUNCTION_92	CALL_2
0x40029b3	      0xbf00000000	                              mov edi, 0	      1748	refs.c	FUNCTION_92	CALL_2
0x40029b8	      0xe8f0daffff	           call sym.lookup_ref_store_map	      1748	refs.c	FUNCTION_92	CALL_2
0x40029bd	          0x4885c0	                           test rax, rax	      1749	refs.c	FUNCTION_92	IF_2
0x40029c0	            0x755f	                           jne 0x4002a21	      1749	refs.c	FUNCTION_92	IF_2
0x40029c2	        0x488b7508	                mov rsi, qword [rbp + 8]	      1752	refs.c	FUNCTION_92	IF_3
0x40029c6	          0x4885f6	                           test rsi, rsi	      1752	refs.c	FUNCTION_92	IF_3
0x40029c9	            0x7421	                            je 0x40029ec	      1752	refs.c	FUNCTION_92	IF_3
0x40029cb	      0xbf00000000	                              mov edi, 0	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x40029d0	      0xb800000000	                              mov eax, 0	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x40029d5	      0xe800000000	                          call 0x40029da	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x40029da	      0xbe0f000000	                            mov esi, 0xf	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x40029df	          0x4889c7	                            mov rdi, rax	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x40029e2	      0xe814d8ffff	                 call sym.ref_store_init	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x40029e7	          0x4889c5	                            mov rbp, rax	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x40029ea	            0xeb15	                           jmp 0x4002a01	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x40029ec	      0xe800000000	                          call 0x40029f1	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x40029f1	      0xbe0f000000	                            mov esi, 0xf	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x40029f6	          0x4889c7	                            mov rdi, rax	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x40029f9	      0xe8fdd7ffff	                 call sym.ref_store_init	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x40029fe	          0x4889c5	                            mov rbp, rax	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x4002a01	          0x4889e8	                            mov rax, rbp	      1762	refs.c	FUNCTION_92
0x4002a04	          0x4885ed	                           test rbp, rbp	      1759	refs.c	FUNCTION_92	IF_4
0x4002a07	            0x7418	                            je 0x4002a21	      1759	refs.c	FUNCTION_92	IF_4
0x4002a09	          0x4889d9	                            mov rcx, rbx	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4002a0c	          0x4889ea	                            mov rdx, rbp	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4002a0f	      0xbe00000000	                              mov esi, 0	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4002a14	      0xbf00000000	                              mov edi, 0	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4002a19	      0xe8ffdaffff	         call sym.register_ref_store_map	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4002a1e	          0x4889e8	                            mov rax, rbp	      1762	refs.c	FUNCTION_92
0x4002a21	        0x4883c408	                              add rsp, 8	      1763	refs.c	FUNCTION_92
0x4002a25	              0x5b	                                 pop rbx	      1763	refs.c	FUNCTION_92
0x4002a26	              0x5d	                                 pop rbp	      1763	refs.c	FUNCTION_92
0x4002a27	              0xc3	                                     ret	      1763	refs.c	FUNCTION_92
for_each_tag_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	15
0x4001bf0	              0x55	                                push rbp	       379	refs.c	FUNCTION_21
0x4001bf1	              0x53	                                push rbx	       379	refs.c	FUNCTION_21
0x4001bf2	        0x4883ec08	                              sub rsp, 8	       379	refs.c	FUNCTION_21
0x4001bf6	          0x4889fb	                            mov rbx, rdi	       379	refs.c	FUNCTION_21
0x4001bf9	          0x4889f5	                            mov rbp, rsi	       379	refs.c	FUNCTION_21
0x4001bfc	    0x488b3d000000	            mov rdi, qword [0x04001c03] 	       380	refs.c	FUNCTION_21	CALL_2
0x4001c03	      0xe800000000	                          call 0x4001c08	       380	refs.c	FUNCTION_21	CALL_2
0x4001c08	          0x4889ea	                            mov rdx, rbp	       380	refs.c	FUNCTION_21	CALL_2
0x4001c0b	          0x4889de	                            mov rsi, rbx	       380	refs.c	FUNCTION_21	CALL_2
0x4001c0e	          0x4889c7	                            mov rdi, rax	       380	refs.c	FUNCTION_21	CALL_2
0x4001c11	      0xe800000000	                          call 0x4001c16	       380	refs.c	FUNCTION_21	CALL_2
0x4001c16	        0x4883c408	                              add rsp, 8	       381	refs.c	FUNCTION_21
0x4001c1a	              0x5b	                                 pop rbx	       381	refs.c	FUNCTION_21
0x4001c1b	              0x5d	                                 pop rbp	       381	refs.c	FUNCTION_21
0x4001c1c	              0xc3	                                     ret	       381	refs.c	FUNCTION_21
find_ref_storage_backend	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,1:FOR,1:SWITCH,0	20
0x4000040	              0x55	                                push rbp	        25	refs.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        25	refs.c	FUNCTION_1
0x4000042	        0x4883ec08	                              sub rsp, 8	        25	refs.c	FUNCTION_1
0x4000046	          0x4889fd	                            mov rbp, rdi	        25	refs.c	FUNCTION_1
0x4000049	      0xbb00000000	                              mov ebx, 0	        27	refs.c	FUNCTION_1	FOR_1
0x400004e	        0x488b7b08	                mov rdi, qword [rbx + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000052	          0x4889ee	                            mov rsi, rbp	        28	refs.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000055	      0xe800000000	                          call 0x400005a	        28	refs.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400005a	            0x85c0	                           test eax, eax	        28	refs.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400005c	            0x740f	                            je 0x400006d	        28	refs.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400005e	          0x488b1b	                    mov rbx, qword [rbx]	        27	refs.c	FUNCTION_1	FOR_1
0x4000061	          0x4885db	                           test rbx, rbx	        27	refs.c	FUNCTION_1	FOR_1
0x4000064	            0x75e8	                           jne 0x400004e	        27	refs.c	FUNCTION_1	FOR_1
0x4000066	      0xb800000000	                              mov eax, 0	        30	refs.c	FUNCTION_1
0x400006b	            0xeb03	                           jmp 0x4000070	        30	refs.c	FUNCTION_1
0x400006d	          0x4889d8	                            mov rax, rbx	        30	refs.c	FUNCTION_1
0x4000070	        0x4883c408	                              add rsp, 8	        31	refs.c	FUNCTION_1
0x4000074	              0x5b	                                 pop rbx	        31	refs.c	FUNCTION_1
0x4000075	              0x5d	                                 pop rbp	        31	refs.c	FUNCTION_1
0x4000076	              0xc3	                                     ret	        31	refs.c	FUNCTION_1
refs_delete_ref	functions,0:ELSE,0:DO,0:IF,2:WHILE,0:CALL,12:FOR,0:SWITCH,0	139
0x4002d5d	            0x4156	                                push r14	       744	refs.c	FUNCTION_43
0x4002d5f	            0x4155	                                push r13	       744	refs.c	FUNCTION_43
0x4002d61	            0x4154	                                push r12	       744	refs.c	FUNCTION_43
0x4002d63	              0x55	                                push rbp	       744	refs.c	FUNCTION_43
0x4002d64	              0x53	                                push rbx	       744	refs.c	FUNCTION_43
0x4002d65	        0x4883ec40	                           sub rsp, 0x40	       744	refs.c	FUNCTION_43
0x4002d69	          0x4889fb	                            mov rbx, rdi	       744	refs.c	FUNCTION_43
0x4002d6c	          0x4989f6	                            mov r14, rsi	       744	refs.c	FUNCTION_43
0x4002d6f	          0x4889d5	                            mov rbp, rdx	       744	refs.c	FUNCTION_43
0x4002d72	          0x4989cc	                            mov r12, rcx	       744	refs.c	FUNCTION_43
0x4002d75	          0x4589c5	                           mov r13d, r8d	       744	refs.c	FUNCTION_43
0x4002d78	    0x64488b042528	                mov rax, qword fs:[0x28]	       744	refs.c	FUNCTION_43
0x4002d81	      0x4889442438	             mov qword [rsp + 0x38], rax	       744	refs.c	FUNCTION_43
0x4002d86	            0x31c0	                            xor eax, eax	       744	refs.c	FUNCTION_43
0x4002d88	    0x48c704240000	                      mov qword [rsp], 0	       746	refs.c	FUNCTION_43
0x4002d90	    0x48c744240800	                  mov qword [rsp + 8], 0	       746	refs.c	FUNCTION_43
0x4002d99	    0x48c744241000	               mov qword [rsp + 0x10], 0	       746	refs.c	FUNCTION_43
0x4002da2	          0x4889d7	                            mov rdi, rdx	       748	refs.c	FUNCTION_43	IF_1	CALL_1
0x4002da5	      0xe800000000	                          call 0x4002daa	       748	refs.c	FUNCTION_43	IF_1	CALL_1
0x4002daa	          0x83f801	                              cmp eax, 1	       748	refs.c	FUNCTION_43	IF_1	CALL_1
0x4002dad	     0xf852e010000	                           jne 0x4002ee1	       748	refs.c	FUNCTION_43	IF_1	CALL_1
0x4002db3	    0x488b3d000000	            mov rdi, qword [0x04002dba] 	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4002dba	      0xe800000000	                          call 0x4002dbf	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4002dbf	          0x4839d8	                            cmp rax, rbx	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4002dc2	            0x7419	                            je 0x4002ddd	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4002dc4	      0xb900000000	                              mov ecx, 0	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4002dc9	      0xbaed020000	                          mov edx, 0x2ed	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4002dce	      0xbe00000000	                              mov esi, 0	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4002dd3	      0xbf00000000	                              mov edi, 0	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4002dd8	      0xe800000000	                          call 0x4002ddd	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4002ddd	          0x4889ee	                            mov rsi, rbp	       712	refs.c	FUNCTION_42	CALL_1
0x4002de0	      0xbf00000000	                              mov edi, 0	       712	refs.c	FUNCTION_42	CALL_1
0x4002de5	      0xb800000000	                              mov eax, 0	       712	refs.c	FUNCTION_42	CALL_1
0x4002dea	      0xe800000000	                          call 0x4002def	       712	refs.c	FUNCTION_42	CALL_1
0x4002def	          0x4889c3	                            mov rbx, rax	       712	refs.c	FUNCTION_42	CALL_1
0x4002df2	          0x4d85e4	                           test r12, r12	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4002df5	     0xf84d6000000	                            je 0x4002ed1	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4002dfb	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_171	CALL_1
0x4002e00	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_171	CALL_1
0x4002e05	          0x4c89e7	                            mov rdi, r12	       975	cache.h	FUNCTION_171	CALL_1
0x4002e08	      0xe800000000	                          call 0x4002e0d	       975	cache.h	FUNCTION_171	CALL_1
0x4002e0d	            0x85c0	                           test eax, eax	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4002e0f	     0xf84bc000000	                            je 0x4002ed1	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4002e15	      0xe800000000	                          call 0x4002e1a	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4002e1a	          0x4889c1	                            mov rcx, rax	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4002e1d	      0xba01000000	                              mov edx, 1	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4002e22	          0x4889de	                            mov rsi, rbx	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4002e25	      0xbf00000000	                              mov edi, 0	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4002e2a	      0xe800000000	                          call 0x4002e2f	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4002e2f	            0x85c0	                           test eax, eax	       721	refs.c	FUNCTION_42	IF_1	IF_2
0x4002e31	            0x7924	                           jns 0x4002e57	       721	refs.c	FUNCTION_42	IF_1	IF_2
0x4002e33	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_204	CALL_2
0x4002e38	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_204	CALL_2
0x4002e3d	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_204	CALL_2
0x4002e42	      0xe800000000	                          call 0x4002e47	        54	gettext.h	FUNCTION_204	CALL_2
0x4002e47	          0x4889de	                            mov rsi, rbx	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4002e4a	          0x4889c7	                            mov rdi, rax	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4002e4d	      0xb800000000	                              mov eax, 0	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4002e52	      0xe800000000	                          call 0x4002e57	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4002e57	      0x488d742420	                   lea rsi, [rsp + 0x20]	       723	refs.c	FUNCTION_42	IF_1	IF_3	CALL_7
0x4002e5c	          0x4889ef	                            mov rdi, rbp	       723	refs.c	FUNCTION_42	IF_1	IF_3	CALL_7
0x4002e5f	      0xe800000000	                          call 0x4002e64	       723	refs.c	FUNCTION_42	IF_1	IF_3	CALL_7
0x4002e64	            0x85c0	                           test eax, eax	       723	refs.c	FUNCTION_42	IF_1	IF_3	CALL_7
0x4002e66	            0x7412	                            je 0x4002e7a	       723	refs.c	FUNCTION_42	IF_1	IF_3	CALL_7
0x4002e68	          0x4889ee	                            mov rsi, rbp	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x4002e6b	      0xbf00000000	                              mov edi, 0	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x4002e70	      0xb800000000	                              mov eax, 0	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x4002e75	      0xe800000000	                          call 0x4002e7a	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x4002e7a	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_171	CALL_1
0x4002e7f	          0x4c89e6	                            mov rsi, r12	       975	cache.h	FUNCTION_171	CALL_1
0x4002e82	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       975	cache.h	FUNCTION_171	CALL_1
0x4002e87	      0xe800000000	                          call 0x4002e8c	       975	cache.h	FUNCTION_171	CALL_1
0x4002e8c	          0x4189c4	                           mov r12d, eax	       975	cache.h	FUNCTION_171	CALL_1
0x4002e8f	            0x85c0	                           test eax, eax	       725	refs.c	FUNCTION_42	IF_1	IF_4	CALL_9
0x4002e91	            0x7427	                            je 0x4002eba	       725	refs.c	FUNCTION_42	IF_1	IF_4	CALL_9
0x4002e93	          0x4889ee	                            mov rsi, rbp	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x4002e96	      0xbf00000000	                              mov edi, 0	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x4002e9b	      0xb800000000	                              mov eax, 0	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x4002ea0	      0xe800000000	                          call 0x4002ea5	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x4002ea5	      0xbf00000000	                              mov edi, 0	       304	lockfile.h	FUNCTION_215	CALL_1
0x4002eaa	      0xe800000000	                          call 0x4002eaf	       304	lockfile.h	FUNCTION_215	CALL_1
0x4002eaf	    0x41bcffffffff	                    mov r12d, 0xffffffff	       728	refs.c	FUNCTION_42	IF_1	IF_4
0x4002eb5	      0xe9a3000000	                           jmp 0x4002f5d	       728	refs.c	FUNCTION_42	IF_1	IF_4
0x4002eba	          0x4889df	                            mov rdi, rbx	       731	refs.c	FUNCTION_42	IF_1	CALL_12
0x4002ebd	      0xe800000000	                          call 0x4002ec2	       731	refs.c	FUNCTION_42	IF_1	CALL_12
0x4002ec2	      0xbf00000000	                              mov edi, 0	       304	lockfile.h	FUNCTION_215	CALL_1
0x4002ec7	      0xe800000000	                          call 0x4002ecc	       304	lockfile.h	FUNCTION_215	CALL_1
0x4002ecc	      0xe98c000000	                           jmp 0x4002f5d	       304	lockfile.h	FUNCTION_215	CALL_1
0x4002ed1	          0x4889df	                            mov rdi, rbx	       734	refs.c	FUNCTION_42	ELSE_1	CALL_14
0x4002ed4	      0xe800000000	                          call 0x4002ed9	       734	refs.c	FUNCTION_42	ELSE_1	CALL_14
0x4002ed9	    0x41bc00000000	                             mov r12d, 0	       737	refs.c	FUNCTION_42
0x4002edf	            0xeb7c	                           jmp 0x4002f5d	       737	refs.c	FUNCTION_42
0x4002ee1	          0x4889e6	                            mov rsi, rsp	       753	refs.c	FUNCTION_43	CALL_5
0x4002ee4	          0x4889df	                            mov rdi, rbx	       753	refs.c	FUNCTION_43	CALL_5
0x4002ee7	      0xe800000000	                          call 0x4002eec	       753	refs.c	FUNCTION_43	CALL_5
0x4002eec	          0x4889c3	                            mov rbx, rax	       753	refs.c	FUNCTION_43	CALL_5
0x4002eef	          0x4885c0	                           test rax, rax	       754	refs.c	FUNCTION_43	IF_2
0x4002ef2	            0x742d	                            je 0x4002f21	       754	refs.c	FUNCTION_43	IF_2
0x4002ef4	          0x4989e1	                             mov r9, rsp	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4002ef7	          0x4d89f0	                             mov r8, r14	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4002efa	          0x4489e9	                           mov ecx, r13d	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4002efd	          0x4c89e2	                            mov rdx, r12	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4002f00	          0x4889ee	                            mov rsi, rbp	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4002f03	          0x4889c7	                            mov rdi, rax	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4002f06	      0xe800000000	                          call 0x4002f0b	       755	refs.c	FUNCTION_43	IF_2	CALL_6
0x4002f0b	            0x85c0	                           test eax, eax	       754	refs.c	FUNCTION_43	IF_2
0x4002f0d	            0x7512	                           jne 0x4002f21	       754	refs.c	FUNCTION_43	IF_2
0x4002f0f	          0x4889e6	                            mov rsi, rsp	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x4002f12	          0x4889df	                            mov rdi, rbx	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x4002f15	      0xe800000000	                          call 0x4002f1a	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x4002f1a	          0x4189c4	                           mov r12d, eax	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x4002f1d	            0x85c0	                           test eax, eax	       756	refs.c	FUNCTION_43	IF_2
0x4002f1f	            0x742c	                            je 0x4002f4d	       756	refs.c	FUNCTION_43	IF_2
0x4002f21	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       758	refs.c	FUNCTION_43	IF_2	CALL_8
0x4002f26	      0xbf00000000	                              mov edi, 0	       758	refs.c	FUNCTION_43	IF_2	CALL_8
0x4002f2b	      0xb800000000	                              mov eax, 0	       758	refs.c	FUNCTION_43	IF_2	CALL_8
0x4002f30	      0xe800000000	                          call 0x4002f35	       758	refs.c	FUNCTION_43	IF_2	CALL_8
0x4002f35	          0x4889df	                            mov rdi, rbx	       759	refs.c	FUNCTION_43	IF_2	CALL_9
0x4002f38	      0xe800000000	                          call 0x4002f3d	       759	refs.c	FUNCTION_43	IF_2	CALL_9
0x4002f3d	          0x4889e7	                            mov rdi, rsp	       760	refs.c	FUNCTION_43	IF_2	CALL_10
0x4002f40	      0xe800000000	                          call 0x4002f45	       760	refs.c	FUNCTION_43	IF_2	CALL_10
0x4002f45	    0x41bc01000000	                             mov r12d, 1	       761	refs.c	FUNCTION_43	IF_2
0x4002f4b	            0xeb10	                           jmp 0x4002f5d	       761	refs.c	FUNCTION_43	IF_2
0x4002f4d	          0x4889df	                            mov rdi, rbx	       763	refs.c	FUNCTION_43	CALL_11
0x4002f50	      0xe800000000	                          call 0x4002f55	       763	refs.c	FUNCTION_43	CALL_11
0x4002f55	          0x4889e7	                            mov rdi, rsp	       764	refs.c	FUNCTION_43	CALL_12
0x4002f58	      0xe800000000	                          call 0x4002f5d	       764	refs.c	FUNCTION_43	CALL_12
0x4002f5d	          0x4489e0	                           mov eax, r12d	       766	refs.c	FUNCTION_43
0x4002f60	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       766	refs.c	FUNCTION_43
0x4002f65	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       766	refs.c	FUNCTION_43
0x4002f6e	            0x7405	                            je 0x4002f75	       766	refs.c	FUNCTION_43
0x4002f70	      0xe800000000	                          call 0x4002f75	       766	refs.c	FUNCTION_43
0x4002f75	        0x4883c440	                           add rsp, 0x40	       766	refs.c	FUNCTION_43
0x4002f79	              0x5b	                                 pop rbx	       766	refs.c	FUNCTION_43
0x4002f7a	              0x5d	                                 pop rbp	       766	refs.c	FUNCTION_43
0x4002f7b	            0x415c	                                 pop r12	       766	refs.c	FUNCTION_43
0x4002f7d	            0x415d	                                 pop r13	       766	refs.c	FUNCTION_43
0x4002f7f	            0x415e	                                 pop r14	       766	refs.c	FUNCTION_43
0x4002f81	              0xc3	                                     ret	       766	refs.c	FUNCTION_43
get_submodule_ref_store	functions,0:ELSE,0:DO,0:IF,6:WHILE,1:CALL,11:FOR,0:SWITCH,0	92
0x400278e	            0x4154	                                push r12	      1696	refs.c	FUNCTION_91
0x4002790	              0x55	                                push rbp	      1696	refs.c	FUNCTION_91
0x4002791	              0x53	                                push rbx	      1696	refs.c	FUNCTION_91
0x4002792	        0x4883ec20	                           sub rsp, 0x20	      1696	refs.c	FUNCTION_91
0x4002796	    0x64488b042528	                mov rax, qword fs:[0x28]	      1696	refs.c	FUNCTION_91
0x400279f	      0x4889442418	             mov qword [rsp + 0x18], rax	      1696	refs.c	FUNCTION_91
0x40027a4	            0x31c0	                            xor eax, eax	      1696	refs.c	FUNCTION_91
0x40027a6	    0x48c704240000	                      mov qword [rsp], 0	      1697	refs.c	FUNCTION_91
0x40027ae	    0x48c744240800	                  mov qword [rsp + 8], 0	      1697	refs.c	FUNCTION_91
0x40027b7	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1697	refs.c	FUNCTION_91
0x40027c0	          0x4885ff	                           test rdi, rdi	      1702	refs.c	FUNCTION_91	IF_1
0x40027c3	     0xf84ed000000	                            je 0x40028b6	      1702	refs.c	FUNCTION_91	IF_1
0x40027c9	          0x4889fb	                            mov rbx, rdi	      1702	refs.c	FUNCTION_91	IF_1
0x40027cc	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1705	refs.c	FUNCTION_91	CALL_1
0x40027d3	            0xf2ae	              repne scasb al, byte [rdi]	      1705	refs.c	FUNCTION_91	CALL_1
0x40027d5	          0x48f7d1	                                 not rcx	      1705	refs.c	FUNCTION_91	CALL_1
0x40027d8	        0x4883e901	                              sub rcx, 1	      1706	refs.c	FUNCTION_91	WHILE_1	CALL_2
0x40027dc	     0xf84db000000	                            je 0x40028bd	      1706	refs.c	FUNCTION_91	WHILE_1	CALL_2
0x40027e2	        0x488d71ff	                      lea rsi, [rcx - 1]	      1706	refs.c	FUNCTION_91	WHILE_1	CALL_2
0x40027e6	      0x807c0bff2f	         cmp byte [rbx + rcx - 1], 0x2f 	      1706	refs.c	FUNCTION_91	WHILE_1	CALL_2
0x40027eb	            0x741a	                            je 0x4002807	      1706	refs.c	FUNCTION_91	WHILE_1	CALL_2
0x40027ed	          0x4889ce	                            mov rsi, rcx	      1705	refs.c	FUNCTION_91	CALL_1
0x40027f0	      0xe9df000000	                           jmp 0x40028d4	      1705	refs.c	FUNCTION_91	CALL_1
0x40027f5	        0x488d46ff	                      lea rax, [rsi - 1]	      1706	refs.c	FUNCTION_91	WHILE_1	CALL_2
0x40027f9	      0x807c33ff2f	         cmp byte [rbx + rsi - 1], 0x2f 	      1706	refs.c	FUNCTION_91	WHILE_1	CALL_2
0x40027fe	     0xf85d0000000	                           jne 0x40028d4	      1706	refs.c	FUNCTION_91	WHILE_1	CALL_2
0x4002804	          0x4889c6	                            mov rsi, rax	      1706	refs.c	FUNCTION_91	WHILE_1	CALL_2
0x4002807	          0x4885f6	                           test rsi, rsi	      1706	refs.c	FUNCTION_91	WHILE_1	CALL_2
0x400280a	            0x75e9	                           jne 0x40027f5	      1706	refs.c	FUNCTION_91	WHILE_1	CALL_2
0x400280c	      0xb800000000	                              mov eax, 0	      1709	refs.c	FUNCTION_91	IF_2
0x4002811	      0xe9ac000000	                           jmp 0x40028c2	      1709	refs.c	FUNCTION_91	IF_2
0x4002816	          0x4889df	                            mov rdi, rbx	      1713	refs.c	FUNCTION_91	CALL_3
0x4002819	      0xe800000000	                          call 0x400281e	      1713	refs.c	FUNCTION_91	CALL_3
0x400281e	          0x4889c3	                            mov rbx, rax	      1713	refs.c	FUNCTION_91	CALL_3
0x4002821	          0x4989c4	                            mov r12, rax	      1713	refs.c	FUNCTION_91	CALL_3
0x4002824	          0x4889de	                            mov rsi, rbx	      1715	refs.c	FUNCTION_91	CALL_4
0x4002827	      0xbf00000000	                              mov edi, 0	      1715	refs.c	FUNCTION_91	CALL_4
0x400282c	      0xe87cdcffff	           call sym.lookup_ref_store_map	      1715	refs.c	FUNCTION_91	CALL_4
0x4002831	          0x4889c5	                            mov rbp, rax	      1715	refs.c	FUNCTION_91	CALL_4
0x4002834	          0x4885c0	                           test rax, rax	      1716	refs.c	FUNCTION_91	IF_4
0x4002837	            0x7568	                           jne 0x40028a1	      1716	refs.c	FUNCTION_91	IF_4
0x4002839	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_195	CALL_2
0x400283e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_195	CALL_2
0x4002845	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_195	CALL_2
0x4002848	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_195	CALL_2
0x400284a	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_195	CALL_2
0x400284d	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_195	CALL_2
0x4002850	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_195	CALL_2
0x4002854	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_195	CALL_2
0x4002857	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_195	CALL_2
0x400285a	      0xe800000000	                          call 0x400285f	       279	strbuf.h	FUNCTION_195	CALL_2
0x400285f	          0x4889e7	                            mov rdi, rsp	      1720	refs.c	FUNCTION_91	IF_5	CALL_6
0x4002862	      0xe800000000	                          call 0x4002867	      1720	refs.c	FUNCTION_91	IF_5	CALL_6
0x4002867	            0x85c0	                           test eax, eax	      1720	refs.c	FUNCTION_91	IF_5	CALL_6
0x4002869	            0x7436	                            je 0x40028a1	      1720	refs.c	FUNCTION_91	IF_5	CALL_6
0x400286b	          0x4889de	                            mov rsi, rbx	      1723	refs.c	FUNCTION_91	IF_6	CALL_7
0x400286e	          0x4889e7	                            mov rdi, rsp	      1723	refs.c	FUNCTION_91	IF_6	CALL_7
0x4002871	      0xe800000000	                          call 0x4002876	      1723	refs.c	FUNCTION_91	IF_6	CALL_7
0x4002876	            0x85c0	                           test eax, eax	      1723	refs.c	FUNCTION_91	IF_6	CALL_7
0x4002878	            0x7527	                           jne 0x40028a1	      1723	refs.c	FUNCTION_91	IF_6	CALL_7
0x400287a	      0xbe05000000	                              mov esi, 5	      1727	refs.c	FUNCTION_91	CALL_8
0x400287f	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1727	refs.c	FUNCTION_91	CALL_8
0x4002884	      0xe872d9ffff	                 call sym.ref_store_init	      1727	refs.c	FUNCTION_91	CALL_8
0x4002889	          0x4889c5	                            mov rbp, rax	      1727	refs.c	FUNCTION_91	CALL_8
0x400288c	          0x4889d9	                            mov rcx, rbx	      1729	refs.c	FUNCTION_91	CALL_9
0x400288f	          0x4889c2	                            mov rdx, rax	      1729	refs.c	FUNCTION_91	CALL_9
0x4002892	      0xbe00000000	                              mov esi, 0	      1729	refs.c	FUNCTION_91	CALL_9
0x4002897	      0xbf00000000	                              mov edi, 0	      1729	refs.c	FUNCTION_91	CALL_9
0x400289c	      0xe87cdcffff	         call sym.register_ref_store_map	      1729	refs.c	FUNCTION_91	CALL_9
0x40028a1	          0x4889e7	                            mov rdi, rsp	      1733	refs.c	FUNCTION_91	CALL_10
0x40028a4	      0xe800000000	                          call 0x40028a9	      1733	refs.c	FUNCTION_91	CALL_10
0x40028a9	          0x4c89e7	                            mov rdi, r12	      1734	refs.c	FUNCTION_91	CALL_11
0x40028ac	      0xe800000000	                          call 0x40028b1	      1734	refs.c	FUNCTION_91	CALL_11
0x40028b1	          0x4889e8	                            mov rax, rbp	      1736	refs.c	FUNCTION_91
0x40028b4	            0xeb0c	                           jmp 0x40028c2	      1736	refs.c	FUNCTION_91
0x40028b6	      0xb800000000	                              mov eax, 0	      1703	refs.c	FUNCTION_91	IF_1
0x40028bb	            0xeb05	                           jmp 0x40028c2	      1703	refs.c	FUNCTION_91	IF_1
0x40028bd	      0xb800000000	                              mov eax, 0	      1709	refs.c	FUNCTION_91	IF_2
0x40028c2	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1737	refs.c	FUNCTION_91
0x40028c7	    0x644833142528	                xor rdx, qword fs:[0x28]	      1737	refs.c	FUNCTION_91
0x40028d0	            0x741c	                            je 0x40028ee	      1737	refs.c	FUNCTION_91
0x40028d2	            0xeb15	                           jmp 0x40028e9	      1737	refs.c	FUNCTION_91
0x40028d4	    0x41bc00000000	                             mov r12d, 0	      1699	refs.c	FUNCTION_91
0x40028da	        0x803c3300	                 cmp byte [rbx + rsi], 0	      1711	refs.c	FUNCTION_91	IF_3
0x40028de	     0xf8440ffffff	                            je 0x4002824	      1711	refs.c	FUNCTION_91	IF_3
0x40028e4	      0xe92dffffff	                           jmp 0x4002816	      1711	refs.c	FUNCTION_91	IF_3
0x40028e9	      0xe800000000	                          call 0x40028ee	      1737	refs.c	FUNCTION_91
0x40028ee	        0x4883c420	                           add rsp, 0x20	      1737	refs.c	FUNCTION_91
0x40028f2	              0x5b	                                 pop rbx	      1737	refs.c	FUNCTION_91
0x40028f3	              0x5d	                                 pop rbp	      1737	refs.c	FUNCTION_91
0x40028f4	            0x415c	                                 pop r12	      1737	refs.c	FUNCTION_91
0x40028f6	              0xc3	                                     ret	      1737	refs.c	FUNCTION_91
initial_ref_transaction_commit	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	9
0x4003b2d	        0x4883ec08	                              sub rsp, 8	      2118	refs.c	FUNCTION_118
0x4003b31	          0x4889f8	                            mov rax, rdi	      2118	refs.c	FUNCTION_118
0x4003b34	          0x4889f2	                            mov rdx, rsi	      2118	refs.c	FUNCTION_118
0x4003b37	          0x488b3f	                    mov rdi, qword [rdi]	      2119	refs.c	FUNCTION_118
0x4003b3a	          0x488b0f	                    mov rcx, qword [rdi]	      2121	refs.c	FUNCTION_118	CALL_1
0x4003b3d	          0x4889c6	                            mov rsi, rax	      2121	refs.c	FUNCTION_118	CALL_1
0x4003b40	          0xff5138	                 call qword [rcx + 0x38]	      2121	refs.c	FUNCTION_118	CALL_1
0x4003b43	        0x4883c408	                              add rsp, 8	      2122	refs.c	FUNCTION_118
0x4003b47	              0xc3	                                     ret	      2122	refs.c	FUNCTION_118
refs_reflog_expire	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	7
0x4003abb	        0x4883ec08	                              sub rsp, 8	      2097	refs.c	FUNCTION_116
0x4003abf	          0x488b07	                    mov rax, qword [rdi]	      2098	refs.c	FUNCTION_116	CALL_1
0x4003ac2	        0xff742418	                 push qword [rsp + 0x18]	      2098	refs.c	FUNCTION_116	CALL_1
0x4003ac6	        0xff742418	                 push qword [rsp + 0x18]	      2098	refs.c	FUNCTION_116	CALL_1
0x4003aca	    0xff90a8000000	                 call qword [rax + 0xa8]	      2098	refs.c	FUNCTION_116	CALL_1
0x4003ad0	        0x4883c418	                           add rsp, 0x18	      2101	refs.c	FUNCTION_116
0x4003ad4	              0xc3	                                     ret	      2101	refs.c	FUNCTION_116
lookup_ref_store_map	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,2:FOR,0:SWITCH,0	31
0x40004ad	              0x55	                                push rbp	      1638	refs.c	FUNCTION_87
0x40004ae	              0x53	                                push rbx	      1638	refs.c	FUNCTION_87
0x40004af	        0x4883ec28	                           sub rsp, 0x28	      1638	refs.c	FUNCTION_87
0x40004b3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1638	refs.c	FUNCTION_87
0x40004bc	      0x4889442418	             mov qword [rsp + 0x18], rax	      1638	refs.c	FUNCTION_87
0x40004c1	            0x31c0	                            xor eax, eax	      1638	refs.c	FUNCTION_87
0x40004c3	        0x837f1c00	               cmp dword [rdi + 0x1c], 0	      1641	refs.c	FUNCTION_87	IF_1
0x40004c7	            0x7438	                            je 0x4000501	      1641	refs.c	FUNCTION_87	IF_1
0x40004c9	          0x4889fb	                            mov rbx, rdi	      1641	refs.c	FUNCTION_87	IF_1
0x40004cc	          0x4889f5	                            mov rbp, rsi	      1641	refs.c	FUNCTION_87	IF_1
0x40004cf	          0x4889f7	                            mov rdi, rsi	      1645	refs.c	FUNCTION_87	CALL_2
0x40004d2	      0xe800000000	                          call 0x40004d7	      1645	refs.c	FUNCTION_87	CALL_2
0x40004d7	        0x89442408	                mov dword [rsp + 8], eax	       248	hashmap.h	FUNCTION_255
0x40004db	    0x48c704240000	                      mov qword [rsp], 0	       249	hashmap.h	FUNCTION_255
0x40004e3	          0x4889ea	                            mov rdx, rbp	       308	hashmap.h	FUNCTION_257	CALL_2
0x40004e6	          0x4889e6	                            mov rsi, rsp	       308	hashmap.h	FUNCTION_257	CALL_2
0x40004e9	          0x4889df	                            mov rdi, rbx	       308	hashmap.h	FUNCTION_257	CALL_2
0x40004ec	      0xe800000000	                          call 0x40004f1	       308	hashmap.h	FUNCTION_257	CALL_2
0x40004f1	          0x4885c0	                           test rax, rax	      1646	refs.c	FUNCTION_87
0x40004f4	            0x7406	                            je 0x40004fc	      1646	refs.c	FUNCTION_87
0x40004f6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1646	refs.c	FUNCTION_87
0x40004fa	            0xeb05	                           jmp 0x4000501	      1646	refs.c	FUNCTION_87
0x40004fc	      0xb800000000	                              mov eax, 0	      1646	refs.c	FUNCTION_87
0x4000501	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1647	refs.c	FUNCTION_87
0x4000506	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1647	refs.c	FUNCTION_87
0x400050f	            0x7405	                            je 0x4000516	      1647	refs.c	FUNCTION_87
0x4000511	      0xe800000000	                          call 0x4000516	      1647	refs.c	FUNCTION_87
0x4000516	        0x4883c428	                           add rsp, 0x28	      1647	refs.c	FUNCTION_87
0x400051a	              0x5b	                                 pop rbx	      1647	refs.c	FUNCTION_87
0x400051b	              0x5d	                                 pop rbp	      1647	refs.c	FUNCTION_87
0x400051c	              0xc3	                                     ret	      1647	refs.c	FUNCTION_87
refs_create_symref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	5
0x4002b0b	        0x4883ec08	                              sub rsp, 8	      1808	refs.c	FUNCTION_97
0x4002b0f	          0x488b07	                    mov rax, qword [rdi]	      1809	refs.c	FUNCTION_97	CALL_1
0x4002b12	          0xff5048	                 call qword [rax + 0x48]	      1809	refs.c	FUNCTION_97	CALL_1
0x4002b15	        0x4883c408	                              add rsp, 8	      1812	refs.c	FUNCTION_97
0x4002b19	              0xc3	                                     ret	      1812	refs.c	FUNCTION_97
filter_refs	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,2:FOR,0:SWITCH,0	29
0x40000f5	            0x4155	                                push r13	       293	refs.c	FUNCTION_15
0x40000f7	            0x4154	                                push r12	       293	refs.c	FUNCTION_15
0x40000f9	              0x55	                                push rbp	       293	refs.c	FUNCTION_15
0x40000fa	              0x53	                                push rbx	       293	refs.c	FUNCTION_15
0x40000fb	        0x4883ec08	                              sub rsp, 8	       293	refs.c	FUNCTION_15
0x40000ff	          0x4889fd	                            mov rbp, rdi	       293	refs.c	FUNCTION_15
0x4000102	          0x4989f4	                            mov r12, rsi	       293	refs.c	FUNCTION_15
0x4000105	          0x4189d5	                           mov r13d, edx	       293	refs.c	FUNCTION_15
0x4000108	          0x4889cb	                            mov rbx, rcx	       293	refs.c	FUNCTION_15
0x400010b	      0xba00000000	                              mov edx, 0	       296	refs.c	FUNCTION_15	IF_1	CALL_1
0x4000110	          0x4889fe	                            mov rsi, rdi	       296	refs.c	FUNCTION_15	IF_1	CALL_1
0x4000113	          0x488b39	                    mov rdi, qword [rcx]	       296	refs.c	FUNCTION_15	IF_1	CALL_1
0x4000116	      0xe800000000	                          call 0x400011b	       296	refs.c	FUNCTION_15	IF_1	CALL_1
0x400011b	      0xba00000000	                              mov edx, 0	       297	refs.c	FUNCTION_15	IF_1
0x4000120	            0x85c0	                           test eax, eax	       296	refs.c	FUNCTION_15	IF_1	CALL_1
0x4000122	            0x7512	                           jne 0x4000136	       296	refs.c	FUNCTION_15	IF_1	CALL_1
0x4000124	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       298	refs.c	FUNCTION_15	CALL_2
0x4000128	          0x4489ea	                           mov edx, r13d	       298	refs.c	FUNCTION_15	CALL_2
0x400012b	          0x4c89e6	                            mov rsi, r12	       298	refs.c	FUNCTION_15	CALL_2
0x400012e	          0x4889ef	                            mov rdi, rbp	       298	refs.c	FUNCTION_15	CALL_2
0x4000131	          0xff5308	                    call qword [rbx + 8]	       298	refs.c	FUNCTION_15	CALL_2
0x4000134	            0x89c2	                            mov edx, eax	       298	refs.c	FUNCTION_15	CALL_2
0x4000136	            0x89d0	                            mov eax, edx	       299	refs.c	FUNCTION_15
0x4000138	        0x4883c408	                              add rsp, 8	       299	refs.c	FUNCTION_15
0x400013c	              0x5b	                                 pop rbx	       299	refs.c	FUNCTION_15
0x400013d	              0x5d	                                 pop rbp	       299	refs.c	FUNCTION_15
0x400013e	            0x415c	                                 pop r12	       299	refs.c	FUNCTION_15
0x4000140	            0x415d	                                 pop r13	       299	refs.c	FUNCTION_15
0x4000142	              0xc3	                                     ret	       299	refs.c	FUNCTION_15
do_for_each_ref	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,2:FOR,0:SWITCH,0	20
0x4001688	      0xb800000000	                              mov eax, 0	      1384	refs.c	FUNCTION_69	IF_1
0x400168d	          0x4885ff	                           test rdi, rdi	      1383	refs.c	FUNCTION_69	IF_1
0x4001690	            0x742e	                            je 0x40016c0	      1383	refs.c	FUNCTION_69	IF_1
0x4001692	              0x55	                                push rbp	      1380	refs.c	FUNCTION_69
0x4001693	              0x53	                                push rbx	      1380	refs.c	FUNCTION_69
0x4001694	        0x4883ec08	                              sub rsp, 8	      1380	refs.c	FUNCTION_69
0x4001698	          0x4189ca	                           mov r10d, ecx	      1380	refs.c	FUNCTION_69
0x400169b	          0x4c89cd	                             mov rbp, r9	      1380	refs.c	FUNCTION_69
0x400169e	          0x4489c1	                            mov ecx, r8d	      1380	refs.c	FUNCTION_69
0x40016a1	          0x4889d3	                            mov rbx, rdx	      1380	refs.c	FUNCTION_69
0x40016a4	          0x4489d2	                           mov edx, r10d	      1386	refs.c	FUNCTION_69	CALL_1
0x40016a7	      0xe800000000	                          call 0x40016ac	      1386	refs.c	FUNCTION_69	CALL_1
0x40016ac	          0x4889ea	                            mov rdx, rbp	      1388	refs.c	FUNCTION_69	CALL_2
0x40016af	          0x4889de	                            mov rsi, rbx	      1388	refs.c	FUNCTION_69	CALL_2
0x40016b2	          0x4889c7	                            mov rdi, rax	      1388	refs.c	FUNCTION_69	CALL_2
0x40016b5	      0xe800000000	                          call 0x40016ba	      1388	refs.c	FUNCTION_69	CALL_2
0x40016ba	        0x4883c408	                              add rsp, 8	      1389	refs.c	FUNCTION_69
0x40016be	              0x5b	                                 pop rbx	      1389	refs.c	FUNCTION_69
0x40016bf	              0x5d	                                 pop rbp	      1389	refs.c	FUNCTION_69
0x40016c0	            0xf3c3	                                     ret	      1389	refs.c	FUNCTION_69
for_each_reflog_ent	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	17
0x4003752	            0x4154	                                push r12	      2052	refs.c	FUNCTION_109
0x4003754	              0x55	                                push rbp	      2052	refs.c	FUNCTION_109
0x4003755	              0x53	                                push rbx	      2052	refs.c	FUNCTION_109
0x4003756	          0x4889fb	                            mov rbx, rdi	      2052	refs.c	FUNCTION_109
0x4003759	          0x4889f5	                            mov rbp, rsi	      2052	refs.c	FUNCTION_109
0x400375c	          0x4989d4	                            mov r12, rdx	      2052	refs.c	FUNCTION_109
0x400375f	    0x488b3d000000	            mov rdi, qword [0x04003766] 	      2053	refs.c	FUNCTION_109	CALL_2
0x4003766	      0xe800000000	                          call 0x400376b	      2053	refs.c	FUNCTION_109	CALL_2
0x400376b	          0x4c89e1	                            mov rcx, r12	      2053	refs.c	FUNCTION_109	CALL_2
0x400376e	          0x4889ea	                            mov rdx, rbp	      2053	refs.c	FUNCTION_109	CALL_2
0x4003771	          0x4889de	                            mov rsi, rbx	      2053	refs.c	FUNCTION_109	CALL_2
0x4003774	          0x4889c7	                            mov rdi, rax	      2053	refs.c	FUNCTION_109	CALL_2
0x4003777	      0xe800000000	                          call 0x400377c	      2053	refs.c	FUNCTION_109	CALL_2
0x400377c	              0x5b	                                 pop rbx	      2055	refs.c	FUNCTION_109
0x400377d	              0x5d	                                 pop rbp	      2055	refs.c	FUNCTION_109
0x400377e	            0x415c	                                 pop r12	      2055	refs.c	FUNCTION_109
0x4003780	              0xc3	                                     ret	      2055	refs.c	FUNCTION_109
refs_ref_iterator_begin	functions,0:ELSE,0:DO,0:IF,4:WHILE,0:CALL,4:FOR,0:SWITCH,0	43
0x40015f8	            0x4155	                                push r13	      1345	refs.c	FUNCTION_68
0x40015fa	            0x4154	                                push r12	      1345	refs.c	FUNCTION_68
0x40015fc	              0x55	                                push rbp	      1345	refs.c	FUNCTION_68
0x40015fd	              0x53	                                push rbx	      1345	refs.c	FUNCTION_68
0x40015fe	        0x4883ec08	                              sub rsp, 8	      1345	refs.c	FUNCTION_68
0x4001602	          0x4889fd	                            mov rbp, rdi	      1345	refs.c	FUNCTION_68
0x4001605	          0x4989f5	                            mov r13, rsi	      1345	refs.c	FUNCTION_68
0x4001608	          0x4189d4	                           mov r12d, edx	      1345	refs.c	FUNCTION_68
0x400160b	            0x89cb	                            mov ebx, ecx	      1345	refs.c	FUNCTION_68
0x400160d	    0x833d00000000	               cmp dword [0x04001614], 0	      1348	refs.c	FUNCTION_68	IF_1
0x4001614	            0x7915	                           jns 0x400162b	      1348	refs.c	FUNCTION_68	IF_1
0x4001616	      0xbe00000000	                              mov esi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x400161b	      0xbf00000000	                              mov edi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x4001620	      0xe800000000	                          call 0x4001625	      1349	refs.c	FUNCTION_68	CALL_1
0x4001625	    0x890500000000	            mov dword [0x0400162b], eax 	      1349	refs.c	FUNCTION_68	CALL_1
0x400162b	            0x89d8	                            mov eax, ebx	      1351	refs.c	FUNCTION_68	IF_2
0x400162d	          0x83c801	                               or eax, 1	      1351	refs.c	FUNCTION_68	IF_2
0x4001630	    0x833d00000000	               cmp dword [0x04001637], 0	      1351	refs.c	FUNCTION_68	IF_2
0x4001637	           0xf45d8	                         cmovne ebx, eax	      1351	refs.c	FUNCTION_68	IF_2
0x400163a	        0x488b4500	                    mov rax, qword [rbp]	      1353	refs.c	FUNCTION_68	CALL_2
0x400163e	            0x89da	                            mov edx, ebx	      1353	refs.c	FUNCTION_68	CALL_2
0x4001640	          0x4c89ee	                            mov rsi, r13	      1353	refs.c	FUNCTION_68	CALL_2
0x4001643	          0x4889ef	                            mov rdi, rbp	      1353	refs.c	FUNCTION_68	CALL_2
0x4001646	          0xff5068	                 call qword [rax + 0x68]	      1353	refs.c	FUNCTION_68	CALL_2
0x4001649	          0x4585e4	                         test r12d, r12d	      1359	refs.c	FUNCTION_68	IF_3
0x400164c	            0x7410	                            je 0x400165e	      1359	refs.c	FUNCTION_68	IF_3
0x400164e	          0x4489e2	                           mov edx, r12d	      1360	refs.c	FUNCTION_68	CALL_3
0x4001651	      0xbe00000000	                              mov esi, 0	      1360	refs.c	FUNCTION_68	CALL_3
0x4001656	          0x4889c7	                            mov rdi, rax	      1360	refs.c	FUNCTION_68	CALL_3
0x4001659	      0xe800000000	                          call 0x400165e	      1360	refs.c	FUNCTION_68	CALL_3
0x400165e	        0xf6400801	                  test byte [rax + 8], 1	      1363	refs.c	FUNCTION_68	IF_4
0x4001662	            0x7519	                           jne 0x400167d	      1363	refs.c	FUNCTION_68	IF_4
0x4001664	      0xba00000000	                              mov edx, 0	      1364	refs.c	FUNCTION_68	CALL_4
0x4001669	      0xbe54050000	                          mov esi, 0x554	      1364	refs.c	FUNCTION_68	CALL_4
0x400166e	      0xbf00000000	                              mov edi, 0	      1364	refs.c	FUNCTION_68	CALL_4
0x4001673	      0xb800000000	                              mov eax, 0	      1364	refs.c	FUNCTION_68	CALL_4
0x4001678	      0xe800000000	                          call 0x400167d	      1364	refs.c	FUNCTION_68	CALL_4
0x400167d	        0x4883c408	                              add rsp, 8	      1367	refs.c	FUNCTION_68
0x4001681	              0x5b	                                 pop rbx	      1367	refs.c	FUNCTION_68
0x4001682	              0x5d	                                 pop rbp	      1367	refs.c	FUNCTION_68
0x4001683	            0x415c	                                 pop r12	      1367	refs.c	FUNCTION_68
0x4001685	            0x415d	                                 pop r13	      1367	refs.c	FUNCTION_68
0x4001687	              0xc3	                                     ret	      1367	refs.c	FUNCTION_68
ref_transaction_commit	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,4:FOR,0:SWITCH,1	33
0x4002cfe	            0x4154	                                push r12	      1900	refs.c	FUNCTION_102
0x4002d00	              0x55	                                push rbp	      1900	refs.c	FUNCTION_102
0x4002d01	              0x53	                                push rbx	      1900	refs.c	FUNCTION_102
0x4002d02	          0x4889fb	                            mov rbx, rdi	      1900	refs.c	FUNCTION_102
0x4002d05	          0x4989f4	                            mov r12, rsi	      1900	refs.c	FUNCTION_102
0x4002d08	          0x488b2f	                    mov rbp, qword [rdi]	      1901	refs.c	FUNCTION_102
0x4002d0b	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4002d0e	          0x83f801	                              cmp eax, 1	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4002d11	            0x7435	                            je 0x4002d48	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4002d13	          0x83f801	                              cmp eax, 1	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4002d16	            0x7207	                            jb 0x4002d1f	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4002d18	          0x83f802	                              cmp eax, 2	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4002d1b	            0x740d	                            je 0x4002d2a	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4002d1d	            0xeb1a	                           jmp 0x4002d39	      1904	refs.c	FUNCTION_102	SWITCH_1
0x4002d1f	      0xe800000000	                          call 0x4002d24	      1907	refs.c	FUNCTION_102	SWITCH_1	CALL_1
0x4002d24	            0x85c0	                           test eax, eax	      1908	refs.c	FUNCTION_102	SWITCH_1	IF_1
0x4002d26	            0x7420	                            je 0x4002d48	      1908	refs.c	FUNCTION_102	SWITCH_1	IF_1
0x4002d28	            0xeb2e	                           jmp 0x4002d58	      1908	refs.c	FUNCTION_102	SWITCH_1	IF_1
0x4002d2a	      0xbf00000000	                              mov edi, 0	      1915	refs.c	FUNCTION_102	SWITCH_1	CALL_2
0x4002d2f	      0xb800000000	                              mov eax, 0	      1915	refs.c	FUNCTION_102	SWITCH_1	CALL_2
0x4002d34	      0xe800000000	                          call 0x4002d39	      1915	refs.c	FUNCTION_102	SWITCH_1	CALL_2
0x4002d39	      0xbf00000000	                              mov edi, 0	      1918	refs.c	FUNCTION_102	SWITCH_1	CALL_3
0x4002d3e	      0xb800000000	                              mov eax, 0	      1918	refs.c	FUNCTION_102	SWITCH_1	CALL_3
0x4002d43	      0xe800000000	                          call 0x4002d48	      1918	refs.c	FUNCTION_102	SWITCH_1	CALL_3
0x4002d48	        0x488b4500	                    mov rax, qword [rbp]	      1922	refs.c	FUNCTION_102	CALL_4
0x4002d4c	          0x4c89e2	                            mov rdx, r12	      1922	refs.c	FUNCTION_102	CALL_4
0x4002d4f	          0x4889de	                            mov rsi, rbx	      1922	refs.c	FUNCTION_102	CALL_4
0x4002d52	          0x4889ef	                            mov rdi, rbp	      1922	refs.c	FUNCTION_102	CALL_4
0x4002d55	          0xff5028	                 call qword [rax + 0x28]	      1922	refs.c	FUNCTION_102	CALL_4
0x4002d58	              0x5b	                                 pop rbx	      1923	refs.c	FUNCTION_102
0x4002d59	              0x5d	                                 pop rbp	      1923	refs.c	FUNCTION_102
0x4002d5a	            0x415c	                                 pop r12	      1923	refs.c	FUNCTION_102
0x4002d5c	              0xc3	                                     ret	      1923	refs.c	FUNCTION_102
refs_for_each_reflog_ent	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	5
0x4003740	        0x4883ec08	                              sub rsp, 8	      2046	refs.c	FUNCTION_108
0x4003744	          0x488b07	                    mov rax, qword [rdi]	      2047	refs.c	FUNCTION_108	CALL_1
0x4003747	    0xff9080000000	                 call qword [rax + 0x80]	      2047	refs.c	FUNCTION_108	CALL_1
0x400374d	        0x4883c408	                              add rsp, 8	      2048	refs.c	FUNCTION_108
0x4003751	              0xc3	                                     ret	      2048	refs.c	FUNCTION_108
base_ref_store_init	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,0:FOR,0:SWITCH,0	2
0x4002a28	          0x488937	                    mov qword [rdi], rsi	      1768	refs.c	FUNCTION_93
0x4002a2b	              0xc3	                                     ret	      1768	refs.c	FUNCTION_93
delete_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	23
0x4002f82	            0x4155	                                push r13	       770	refs.c	FUNCTION_44
0x4002f84	            0x4154	                                push r12	       770	refs.c	FUNCTION_44
0x4002f86	              0x55	                                push rbp	       770	refs.c	FUNCTION_44
0x4002f87	              0x53	                                push rbx	       770	refs.c	FUNCTION_44
0x4002f88	        0x4883ec08	                              sub rsp, 8	       770	refs.c	FUNCTION_44
0x4002f8c	          0x4889fb	                            mov rbx, rdi	       770	refs.c	FUNCTION_44
0x4002f8f	          0x4889f5	                            mov rbp, rsi	       770	refs.c	FUNCTION_44
0x4002f92	          0x4989d4	                            mov r12, rdx	       770	refs.c	FUNCTION_44
0x4002f95	          0x4189cd	                           mov r13d, ecx	       770	refs.c	FUNCTION_44
0x4002f98	    0x488b3d000000	            mov rdi, qword [0x04002f9f] 	       771	refs.c	FUNCTION_44	CALL_2
0x4002f9f	      0xe800000000	                          call 0x4002fa4	       771	refs.c	FUNCTION_44	CALL_2
0x4002fa4	          0x4589e8	                           mov r8d, r13d	       771	refs.c	FUNCTION_44	CALL_2
0x4002fa7	          0x4c89e1	                            mov rcx, r12	       771	refs.c	FUNCTION_44	CALL_2
0x4002faa	          0x4889ea	                            mov rdx, rbp	       771	refs.c	FUNCTION_44	CALL_2
0x4002fad	          0x4889de	                            mov rsi, rbx	       771	refs.c	FUNCTION_44	CALL_2
0x4002fb0	          0x4889c7	                            mov rdi, rax	       771	refs.c	FUNCTION_44	CALL_2
0x4002fb3	      0xe800000000	                          call 0x4002fb8	       771	refs.c	FUNCTION_44	CALL_2
0x4002fb8	        0x4883c408	                              add rsp, 8	       773	refs.c	FUNCTION_44
0x4002fbc	              0x5b	                                 pop rbx	       773	refs.c	FUNCTION_44
0x4002fbd	              0x5d	                                 pop rbp	       773	refs.c	FUNCTION_44
0x4002fbe	            0x415c	                                 pop r12	       773	refs.c	FUNCTION_44
0x4002fc0	            0x415d	                                 pop r13	       773	refs.c	FUNCTION_44
0x4002fc2	              0xc3	                                     ret	       773	refs.c	FUNCTION_44
copy_existing_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	17
0x4003bd3	            0x4154	                                push r12	      2154	refs.c	FUNCTION_124
0x4003bd5	              0x55	                                push rbp	      2154	refs.c	FUNCTION_124
0x4003bd6	              0x53	                                push rbx	      2154	refs.c	FUNCTION_124
0x4003bd7	          0x4889fb	                            mov rbx, rdi	      2154	refs.c	FUNCTION_124
0x4003bda	          0x4889f5	                            mov rbp, rsi	      2154	refs.c	FUNCTION_124
0x4003bdd	          0x4989d4	                            mov r12, rdx	      2154	refs.c	FUNCTION_124
0x4003be0	    0x488b3d000000	            mov rdi, qword [0x04003be7] 	      2155	refs.c	FUNCTION_124	CALL_2
0x4003be7	      0xe800000000	                          call 0x4003bec	      2155	refs.c	FUNCTION_124	CALL_2
0x4003bec	          0x4c89e1	                            mov rcx, r12	      2155	refs.c	FUNCTION_124	CALL_2
0x4003bef	          0x4889ea	                            mov rdx, rbp	      2155	refs.c	FUNCTION_124	CALL_2
0x4003bf2	          0x4889de	                            mov rsi, rbx	      2155	refs.c	FUNCTION_124	CALL_2
0x4003bf5	          0x4889c7	                            mov rdi, rax	      2155	refs.c	FUNCTION_124	CALL_2
0x4003bf8	      0xe800000000	                          call 0x4003bfd	      2155	refs.c	FUNCTION_124	CALL_2
0x4003bfd	              0x5b	                                 pop rbx	      2156	refs.c	FUNCTION_124
0x4003bfe	              0x5d	                                 pop rbp	      2156	refs.c	FUNCTION_124
0x4003bff	            0x415c	                                 pop r12	      2156	refs.c	FUNCTION_124
0x4003c01	              0xc3	                                     ret	      2156	refs.c	FUNCTION_124
refs_copy_existing_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	5
0x4003bc4	        0x4883ec08	                              sub rsp, 8	      2149	refs.c	FUNCTION_123
0x4003bc8	          0x488b07	                    mov rax, qword [rdi]	      2150	refs.c	FUNCTION_123	CALL_1
0x4003bcb	          0xff5060	                 call qword [rax + 0x60]	      2150	refs.c	FUNCTION_123	CALL_1
0x4003bce	        0x4883c408	                              add rsp, 8	      2151	refs.c	FUNCTION_123
0x4003bd2	              0xc3	                                     ret	      2151	refs.c	FUNCTION_123
resolve_refdup	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	23
0x4001aa1	            0x4155	                                push r13	       210	refs.c	FUNCTION_8
0x4001aa3	            0x4154	                                push r12	       210	refs.c	FUNCTION_8
0x4001aa5	              0x55	                                push rbp	       210	refs.c	FUNCTION_8
0x4001aa6	              0x53	                                push rbx	       210	refs.c	FUNCTION_8
0x4001aa7	        0x4883ec08	                              sub rsp, 8	       210	refs.c	FUNCTION_8
0x4001aab	          0x4889fb	                            mov rbx, rdi	       210	refs.c	FUNCTION_8
0x4001aae	            0x89f5	                            mov ebp, esi	       210	refs.c	FUNCTION_8
0x4001ab0	          0x4989d4	                            mov r12, rdx	       210	refs.c	FUNCTION_8
0x4001ab3	          0x4989cd	                            mov r13, rcx	       210	refs.c	FUNCTION_8
0x4001ab6	    0x488b3d000000	            mov rdi, qword [0x04001abd] 	       211	refs.c	FUNCTION_8	CALL_2
0x4001abd	      0xe800000000	                          call 0x4001ac2	       211	refs.c	FUNCTION_8	CALL_2
0x4001ac2	          0x4d89e8	                             mov r8, r13	       211	refs.c	FUNCTION_8	CALL_2
0x4001ac5	          0x4c89e1	                            mov rcx, r12	       211	refs.c	FUNCTION_8	CALL_2
0x4001ac8	            0x89ea	                            mov edx, ebp	       211	refs.c	FUNCTION_8	CALL_2
0x4001aca	          0x4889de	                            mov rsi, rbx	       211	refs.c	FUNCTION_8	CALL_2
0x4001acd	          0x4889c7	                            mov rdi, rax	       211	refs.c	FUNCTION_8	CALL_2
0x4001ad0	      0xe800000000	                          call 0x4001ad5	       211	refs.c	FUNCTION_8	CALL_2
0x4001ad5	        0x4883c408	                              add rsp, 8	       214	refs.c	FUNCTION_8
0x4001ad9	              0x5b	                                 pop rbx	       214	refs.c	FUNCTION_8
0x4001ada	              0x5d	                                 pop rbp	       214	refs.c	FUNCTION_8
0x4001adb	            0x415c	                                 pop r12	       214	refs.c	FUNCTION_8
0x4001add	            0x415d	                                 pop r13	       214	refs.c	FUNCTION_8
0x4001adf	              0xc3	                                     ret	       214	refs.c	FUNCTION_8
ref_resolves_to_object	functions,0:ELSE,0:DO,0:IF,2:WHILE,0:CALL,2:FOR,0:SWITCH,0	25
0x400083e	              0x55	                                push rbp	       187	refs.c	FUNCTION_6
0x400083f	              0x53	                                push rbx	       187	refs.c	FUNCTION_6
0x4000840	        0x4883ec08	                              sub rsp, 8	       187	refs.c	FUNCTION_6
0x4000844	      0xbb00000000	                              mov ebx, 0	       189	refs.c	FUNCTION_6	IF_1
0x4000849	          0xf6c204	                              test dl, 4	       188	refs.c	FUNCTION_6	IF_1
0x400084c	            0x7532	                           jne 0x4000880	       188	refs.c	FUNCTION_6	IF_1
0x400084e	          0x4889f0	                            mov rax, rsi	       188	refs.c	FUNCTION_6	IF_1
0x4000851	          0x4889fd	                            mov rbp, rdi	       188	refs.c	FUNCTION_6	IF_1
0x4000854	      0xbe00000000	                              mov esi, 0	      1251	cache.h	FUNCTION_186	CALL_1
0x4000859	          0x4889c7	                            mov rdi, rax	      1251	cache.h	FUNCTION_186	CALL_1
0x400085c	      0xe800000000	                          call 0x4000861	      1251	cache.h	FUNCTION_186	CALL_1
0x4000861	            0x89c3	                            mov ebx, eax	      1251	cache.h	FUNCTION_186	CALL_1
0x4000863	            0x85c0	                           test eax, eax	       190	refs.c	FUNCTION_6	IF_2	CALL_1
0x4000865	            0x7514	                           jne 0x400087b	       190	refs.c	FUNCTION_6	IF_2	CALL_1
0x4000867	          0x4889ee	                            mov rsi, rbp	       191	refs.c	FUNCTION_6	IF_2	CALL_2
0x400086a	      0xbf00000000	                              mov edi, 0	       191	refs.c	FUNCTION_6	IF_2	CALL_2
0x400086f	      0xb800000000	                              mov eax, 0	       191	refs.c	FUNCTION_6	IF_2	CALL_2
0x4000874	      0xe800000000	                          call 0x4000879	       191	refs.c	FUNCTION_6	IF_2	CALL_2
0x4000879	            0xeb05	                           jmp 0x4000880	       192	refs.c	FUNCTION_6	IF_2
0x400087b	      0xbb01000000	                              mov ebx, 1	       194	refs.c	FUNCTION_6
0x4000880	            0x89d8	                            mov eax, ebx	       195	refs.c	FUNCTION_6
0x4000882	        0x4883c408	                              add rsp, 8	       195	refs.c	FUNCTION_6
0x4000886	              0x5b	                                 pop rbx	       195	refs.c	FUNCTION_6
0x4000887	              0x5d	                                 pop rbp	       195	refs.c	FUNCTION_6
0x4000888	              0xc3	                                     ret	       195	refs.c	FUNCTION_6
for_each_branch_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	15
0x4001c1d	              0x55	                                push rbp	       389	refs.c	FUNCTION_23
0x4001c1e	              0x53	                                push rbx	       389	refs.c	FUNCTION_23
0x4001c1f	        0x4883ec08	                              sub rsp, 8	       389	refs.c	FUNCTION_23
0x4001c23	          0x4889fb	                            mov rbx, rdi	       389	refs.c	FUNCTION_23
0x4001c26	          0x4889f5	                            mov rbp, rsi	       389	refs.c	FUNCTION_23
0x4001c29	    0x488b3d000000	            mov rdi, qword [0x04001c30] 	       390	refs.c	FUNCTION_23	CALL_2
0x4001c30	      0xe800000000	                          call 0x4001c35	       390	refs.c	FUNCTION_23	CALL_2
0x4001c35	          0x4889ea	                            mov rdx, rbp	       390	refs.c	FUNCTION_23	CALL_2
0x4001c38	          0x4889de	                            mov rsi, rbx	       390	refs.c	FUNCTION_23	CALL_2
0x4001c3b	          0x4889c7	                            mov rdi, rax	       390	refs.c	FUNCTION_23	CALL_2
0x4001c3e	      0xe800000000	                          call 0x4001c43	       390	refs.c	FUNCTION_23	CALL_2
0x4001c43	        0x4883c408	                              add rsp, 8	       391	refs.c	FUNCTION_23
0x4001c47	              0x5b	                                 pop rbx	       391	refs.c	FUNCTION_23
0x4001c48	              0x5d	                                 pop rbp	       391	refs.c	FUNCTION_23
0x4001c49	              0xc3	                                     ret	       391	refs.c	FUNCTION_23
expand_ref	functions,0:ELSE,2:DO,0:IF,5:WHILE,0:CALL,9:FOR,1:SWITCH,0	114
0x4002578	            0x4157	                                push r15	       548	refs.c	FUNCTION_35
0x400257a	            0x4156	                                push r14	       548	refs.c	FUNCTION_35
0x400257c	            0x4155	                                push r13	       548	refs.c	FUNCTION_35
0x400257e	            0x4154	                                push r12	       548	refs.c	FUNCTION_35
0x4002580	              0x55	                                push rbp	       548	refs.c	FUNCTION_35
0x4002581	              0x53	                                push rbx	       548	refs.c	FUNCTION_35
0x4002582	        0x4883ec68	                           sub rsp, 0x68	       548	refs.c	FUNCTION_35
0x4002586	        0x48893c24	                    mov qword [rsp], rdi	       548	refs.c	FUNCTION_35
0x400258a	          0x4189f7	                           mov r15d, esi	       548	refs.c	FUNCTION_35
0x400258d	          0x4989d6	                            mov r14, rdx	       548	refs.c	FUNCTION_35
0x4002590	      0x48894c2408	                mov qword [rsp + 8], rcx	       548	refs.c	FUNCTION_35
0x4002595	    0x64488b342528	                mov rsi, qword fs:[0x28]	       548	refs.c	FUNCTION_35
0x400259e	      0x4889742458	             mov qword [rsp + 0x58], rsi	       548	refs.c	FUNCTION_35
0x40025a3	            0x31f6	                            xor esi, esi	       548	refs.c	FUNCTION_35
0x40025a5	    0x48c744242000	               mov qword [rsp + 0x20], 0	       551	refs.c	FUNCTION_35
0x40025ae	    0x48c744242800	               mov qword [rsp + 0x28], 0	       551	refs.c	FUNCTION_35
0x40025b7	    0x48c744243000	               mov qword [rsp + 0x30], 0	       551	refs.c	FUNCTION_35
0x40025c0	    0x48c701000000	                      mov qword [rcx], 0	       553	refs.c	FUNCTION_35
0x40025c7	          0x4989d5	                            mov r13, rdx	       559	refs.c	FUNCTION_35	FOR_1
0x40025ca	    0x41bc00000000	                             mov r12d, 0	       554	refs.c	FUNCTION_35	FOR_1
0x40025d0	      0xbb00000000	                              mov ebx, 0	       554	refs.c	FUNCTION_35	FOR_1
0x40025d5	      0xbd00000000	                              mov ebp, 0	       550	refs.c	FUNCTION_35
0x40025da	    0x48833d000000	               cmp qword [0x040025e2], 0	       554	refs.c	FUNCTION_35	FOR_1
0x40025e2	     0xf8424010000	                            je 0x400270c	       554	refs.c	FUNCTION_35	FOR_1
0x40025e8	            0xeb0e	                           jmp 0x40025f8	       554	refs.c	FUNCTION_35	FOR_1
0x40025ea	            0x85ed	                           test ebp, ebp	       559	refs.c	FUNCTION_35	FOR_1
0x40025ec	      0x4c8d6c2440	                   lea r13, [rsp + 0x40]	       559	refs.c	FUNCTION_35	FOR_1
0x40025f1	        0x4d0f44ee	                          cmove r13, r14	       559	refs.c	FUNCTION_35	FOR_1
0x40025f5	          0x4189ec	                           mov r12d, ebp	       559	refs.c	FUNCTION_35	FOR_1
0x40025f8	    0x48c744242800	               mov qword [rsp + 0x28], 0	       164	strbuf.h	FUNCTION_193
0x4002601	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       165	strbuf.h	FUNCTION_193	IF_2
0x4002606	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_193	IF_2
0x400260c	            0x7405	                            je 0x4002613	       165	strbuf.h	FUNCTION_193	IF_2
0x400260e	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_193	IF_2
0x4002611	            0xeb22	                           jmp 0x4002635	       166	strbuf.h	FUNCTION_193	IF_2
0x4002613	    0x803d00000000	                cmp byte [0x0400261a], 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x400261a	            0x7419	                            je 0x4002635	       168	strbuf.h	FUNCTION_193	CALL_2
0x400261c	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x4002621	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_193	CALL_2
0x4002626	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x400262b	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x4002630	      0xe800000000	                          call 0x4002635	       168	strbuf.h	FUNCTION_193	CALL_2
0x4002635	        0x488b0c24	                    mov rcx, qword [rsp]	       561	refs.c	FUNCTION_35	FOR_1	CALL_2
0x4002639	          0x4489fa	                           mov edx, r15d	       561	refs.c	FUNCTION_35	FOR_1	CALL_2
0x400263c	          0x488b33	                    mov rsi, qword [rbx]	       561	refs.c	FUNCTION_35	FOR_1	CALL_2
0x400263f	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       561	refs.c	FUNCTION_35	FOR_1	CALL_2
0x4002644	      0xb800000000	                              mov eax, 0	       561	refs.c	FUNCTION_35	FOR_1	CALL_2
0x4002649	      0xe800000000	                          call 0x400264e	       561	refs.c	FUNCTION_35	FOR_1	CALL_2
0x400264e	      0x488d4c241c	                   lea rcx, [rsp + 0x1c]	       562	refs.c	FUNCTION_35	FOR_1	CALL_3
0x4002653	          0x4c89ea	                            mov rdx, r13	       562	refs.c	FUNCTION_35	FOR_1	CALL_3
0x4002656	      0xbe01000000	                              mov esi, 1	       562	refs.c	FUNCTION_35	FOR_1	CALL_3
0x400265b	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       562	refs.c	FUNCTION_35	FOR_1	CALL_3
0x4002660	      0xe800000000	                          call 0x4002665	       562	refs.c	FUNCTION_35	FOR_1	CALL_3
0x4002665	          0x4885c0	                           test rax, rax	       564	refs.c	FUNCTION_35	FOR_1	IF_1
0x4002668	            0x7425	                            je 0x400268f	       564	refs.c	FUNCTION_35	FOR_1	IF_1
0x400266a	      0x418d6c2401	                      lea ebp, [r12 + 1]	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x400266f	          0x4585e4	                         test r12d, r12d	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4002672	            0x7510	                           jne 0x4002684	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4002674	          0x4889c7	                            mov rdi, rax	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_4
0x4002677	      0xe800000000	                          call 0x400267c	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_4
0x400267c	      0x488b542408	                mov rdx, qword [rsp + 8]	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_4
0x4002681	          0x488902	                    mov qword [rdx], rax	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_4
0x4002684	    0x833d00000000	               cmp dword [0x0400268b], 0	       567	refs.c	FUNCTION_35	FOR_1	IF_1	IF_3
0x400268b	            0x7571	                           jne 0x40026fe	       567	refs.c	FUNCTION_35	FOR_1	IF_1	IF_3
0x400268d	            0xeb7d	                           jmp 0x400270c	       567	refs.c	FUNCTION_35	FOR_1	IF_1	IF_3
0x400268f	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x4002693	            0xa801	                              test al, 1	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x4002695	            0x7437	                            je 0x40026ce	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x4002697	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x400269c	      0xbf00000000	                              mov edi, 0	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40026a1	      0xb905000000	                              mov ecx, 5	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40026a6	          0x4889d6	                            mov rsi, rdx	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40026a9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40026ab	        0x400f97c6	                                seta sil	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40026af	           0xf92c1	                                 setb cl	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40026b2	          0x4038ce	                             cmp sil, cl	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40026b5	            0x7417	                            je 0x40026ce	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40026b7	          0x4889d6	                            mov rsi, rdx	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x40026ba	      0xbf00000000	                              mov edi, 0	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x40026bf	      0xb800000000	                              mov eax, 0	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x40026c4	      0xe800000000	                          call 0x40026c9	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x40026c9	          0x4489e5	                           mov ebp, r12d	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x40026cc	            0xeb30	                           jmp 0x40026fe	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x40026ce	          0x4489e5	                           mov ebp, r12d	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x40026d1	            0xa804	                              test al, 4	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_7
0x40026d3	            0x7429	                            je 0x40026fe	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_7
0x40026d5	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_7
0x40026da	      0xbe2f000000	                           mov esi, 0x2f	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_7
0x40026df	          0x4c89ef	                            mov rdi, r13	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_7
0x40026e2	      0xe800000000	                          call 0x40026e7	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_7
0x40026e7	          0x4885c0	                           test rax, rax	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_7
0x40026ea	            0x7412	                            je 0x40026fe	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_7
0x40026ec	          0x4c89ee	                            mov rsi, r13	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x40026ef	      0xbf00000000	                              mov edi, 0	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x40026f4	      0xb800000000	                              mov eax, 0	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x40026f9	      0xe800000000	                          call 0x40026fe	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x40026fe	        0x4883c308	                              add rbx, 8	       554	refs.c	FUNCTION_35	FOR_1
0x4002702	        0x48833b00	                      cmp qword [rbx], 0	       554	refs.c	FUNCTION_35	FOR_1
0x4002706	     0xf85defeffff	                           jne 0x40025ea	       554	refs.c	FUNCTION_35	FOR_1
0x400270c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       575	refs.c	FUNCTION_35	CALL_9
0x4002711	      0xe800000000	                          call 0x4002716	       575	refs.c	FUNCTION_35	CALL_9
0x4002716	            0x89e8	                            mov eax, ebp	       577	refs.c	FUNCTION_35
0x4002718	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	       577	refs.c	FUNCTION_35
0x400271d	    0x644833342528	                xor rsi, qword fs:[0x28]	       577	refs.c	FUNCTION_35
0x4002726	            0x7405	                            je 0x400272d	       577	refs.c	FUNCTION_35
0x4002728	      0xe800000000	                          call 0x400272d	       577	refs.c	FUNCTION_35
0x400272d	        0x4883c468	                           add rsp, 0x68	       577	refs.c	FUNCTION_35
0x4002731	              0x5b	                                 pop rbx	       577	refs.c	FUNCTION_35
0x4002732	              0x5d	                                 pop rbp	       577	refs.c	FUNCTION_35
0x4002733	            0x415c	                                 pop r12	       577	refs.c	FUNCTION_35
0x4002735	            0x415d	                                 pop r13	       577	refs.c	FUNCTION_35
0x4002737	            0x415e	                                 pop r14	       577	refs.c	FUNCTION_35
0x4002739	            0x415f	                                 pop r15	       577	refs.c	FUNCTION_35
0x400273b	              0xc3	                                     ret	       577	refs.c	FUNCTION_35
register_ref_store_map	functions,0:ELSE,0:DO,0:IF,2:WHILE,0:CALL,4:FOR,0:SWITCH,0	67
0x400051d	            0x4157	                                push r15	      1687	refs.c	FUNCTION_90
0x400051f	            0x4156	                                push r14	      1687	refs.c	FUNCTION_90
0x4000521	            0x4155	                                push r13	      1687	refs.c	FUNCTION_90
0x4000523	            0x4154	                                push r12	      1687	refs.c	FUNCTION_90
0x4000525	              0x55	                                push rbp	      1687	refs.c	FUNCTION_90
0x4000526	              0x53	                                push rbx	      1687	refs.c	FUNCTION_90
0x4000527	        0x4883ec08	                              sub rsp, 8	      1687	refs.c	FUNCTION_90
0x400052b	          0x4989fc	                            mov r12, rdi	      1687	refs.c	FUNCTION_90
0x400052e	          0x4989f6	                            mov r14, rsi	      1687	refs.c	FUNCTION_90
0x4000531	          0x4989d5	                            mov r13, rdx	      1687	refs.c	FUNCTION_90
0x4000534	          0x4889cd	                            mov rbp, rcx	      1687	refs.c	FUNCTION_90
0x4000537	        0x837f1c00	               cmp dword [rdi + 0x1c], 0	      1688	refs.c	FUNCTION_90	IF_1
0x400053b	            0x7514	                           jne 0x4000551	      1688	refs.c	FUNCTION_90	IF_1
0x400053d	      0xb900000000	                              mov ecx, 0	      1689	refs.c	FUNCTION_90	CALL_1
0x4000542	      0xba00000000	                              mov edx, 0	      1689	refs.c	FUNCTION_90	CALL_1
0x4000547	      0xbe00000000	                              mov esi, 0	      1689	refs.c	FUNCTION_90	CALL_1
0x400054c	      0xe800000000	                          call 0x4000551	      1689	refs.c	FUNCTION_90	CALL_1
0x4000551	      0xb800000000	                              mov eax, 0	      1620	refs.c	FUNCTION_86	CALL_1
0x4000556	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1620	refs.c	FUNCTION_86	CALL_1
0x400055d	          0x4889ef	                            mov rdi, rbp	      1620	refs.c	FUNCTION_86	CALL_1
0x4000560	            0xf2ae	              repne scasb al, byte [rdi]	      1620	refs.c	FUNCTION_86	CALL_1
0x4000562	          0x48f7d1	                                 not rcx	      1620	refs.c	FUNCTION_86	CALL_1
0x4000565	        0x488d59ff	                      lea rbx, [rcx - 1]	      1620	refs.c	FUNCTION_86	CALL_1
0x4000569	        0x4883fbe7	             cmp rbx, 0xffffffffffffffe7	       785	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x400056d	            0x7612	                           jbe 0x4000581	       785	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x400056f	          0x4889da	                            mov rdx, rbx	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x4000572	      0xbe18000000	                           mov esi, 0x18	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x4000577	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x400057c	      0xe800000000	                          call 0x4000581	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x4000581	        0x4883fbe7	             cmp rbx, 0xffffffffffffffe7	       785	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x4000585	            0x751b	                           jne 0x40005a2	       785	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x4000587	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x400058c	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x4000593	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x4000598	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x400059d	      0xe800000000	                          call 0x40005a2	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x40005a2	        0x488d7319	                   lea rsi, [rbx + 0x19]	      1620	refs.c	FUNCTION_86	CALL_1
0x40005a6	      0xbf01000000	                              mov edi, 1	      1620	refs.c	FUNCTION_86	CALL_1
0x40005ab	      0xe800000000	                          call 0x40005b0	      1620	refs.c	FUNCTION_86	CALL_1
0x40005b0	          0x4989c7	                            mov r15, rax	      1620	refs.c	FUNCTION_86	CALL_1
0x40005b3	        0x488d7818	                   lea rdi, [rax + 0x18]	        53	string3.h	FUNCTION_152	CALL_3
0x40005b7	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_152	CALL_3
0x40005ba	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_152	CALL_3
0x40005bd	      0xe800000000	                          call 0x40005c2	        53	string3.h	FUNCTION_152	CALL_3
0x40005c2	          0x4889ef	                            mov rdi, rbp	      1621	refs.c	FUNCTION_86	CALL_3
0x40005c5	      0xe800000000	                          call 0x40005ca	      1621	refs.c	FUNCTION_86	CALL_3
0x40005ca	        0x41894708	                mov dword [r15 + 8], eax	       248	hashmap.h	FUNCTION_255
0x40005ce	    0x49c707000000	                      mov qword [r15], 0	       249	hashmap.h	FUNCTION_255
0x40005d5	        0x4d896f10	             mov qword [r15 + 0x10], r13	      1622	refs.c	FUNCTION_86
0x40005d9	          0x4c89fe	                            mov rsi, r15	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x40005dc	          0x4c89e7	                            mov rdi, r12	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x40005df	      0xe800000000	                          call 0x40005e4	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x40005e4	          0x4885c0	                           test rax, rax	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x40005e7	            0x7415	                            je 0x40005fe	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x40005e9	          0x4889ea	                            mov rdx, rbp	      1692	refs.c	FUNCTION_90	CALL_4
0x40005ec	          0x4c89f6	                            mov rsi, r14	      1692	refs.c	FUNCTION_90	CALL_4
0x40005ef	      0xbf00000000	                              mov edi, 0	      1692	refs.c	FUNCTION_90	CALL_4
0x40005f4	      0xb800000000	                              mov eax, 0	      1692	refs.c	FUNCTION_90	CALL_4
0x40005f9	      0xe800000000	                          call 0x40005fe	      1692	refs.c	FUNCTION_90	CALL_4
0x40005fe	        0x4883c408	                              add rsp, 8	      1693	refs.c	FUNCTION_90
0x4000602	              0x5b	                                 pop rbx	      1693	refs.c	FUNCTION_90
0x4000603	              0x5d	                                 pop rbp	      1693	refs.c	FUNCTION_90
0x4000604	            0x415c	                                 pop r12	      1693	refs.c	FUNCTION_90
0x4000606	            0x415d	                                 pop r13	      1693	refs.c	FUNCTION_90
0x4000608	            0x415e	                                 pop r14	      1693	refs.c	FUNCTION_90
0x400060a	            0x415f	                                 pop r15	      1693	refs.c	FUNCTION_90
0x400060c	              0xc3	                                     ret	      1693	refs.c	FUNCTION_90
read_ref_at_ent_oldest	functions,0:ELSE,0:DO,0:IF,5:WHILE,0:CALL,4:FOR,0:SWITCH,0	60
0x4000143	            0x4157	                                push r15	       884	refs.c	FUNCTION_49
0x4000145	            0x4156	                                push r14	       884	refs.c	FUNCTION_49
0x4000147	            0x4155	                                push r13	       884	refs.c	FUNCTION_49
0x4000149	            0x4154	                                push r12	       884	refs.c	FUNCTION_49
0x400014b	              0x55	                                push rbp	       884	refs.c	FUNCTION_49
0x400014c	              0x53	                                push rbx	       884	refs.c	FUNCTION_49
0x400014d	        0x4883ec08	                              sub rsp, 8	       884	refs.c	FUNCTION_49
0x4000151	          0x4889fd	                            mov rbp, rdi	       884	refs.c	FUNCTION_49
0x4000154	          0x4989f4	                            mov r12, rsi	       884	refs.c	FUNCTION_49
0x4000157	          0x4989ce	                            mov r14, rcx	       884	refs.c	FUNCTION_49
0x400015a	          0x4589c5	                           mov r13d, r8d	       884	refs.c	FUNCTION_49
0x400015d	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       884	refs.c	FUNCTION_49
0x4000162	        0x4c8b7b58	            mov r15, qword [rbx + 0x58] 	       887	refs.c	FUNCTION_49	IF_1
0x4000166	          0x4d85ff	                           test r15, r15	       887	refs.c	FUNCTION_49	IF_1
0x4000169	            0x740b	                            je 0x4000176	       887	refs.c	FUNCTION_49	IF_1
0x400016b	          0x4c89cf	                             mov rdi, r9	       888	refs.c	FUNCTION_49	CALL_1
0x400016e	      0xe800000000	                          call 0x4000173	       888	refs.c	FUNCTION_49	CALL_1
0x4000173	          0x498907	                    mov qword [r15], rax	       888	refs.c	FUNCTION_49	CALL_1
0x4000176	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       889	refs.c	FUNCTION_49	IF_2
0x400017a	          0x4885c0	                           test rax, rax	       889	refs.c	FUNCTION_49	IF_2
0x400017d	            0x7403	                            je 0x4000182	       889	refs.c	FUNCTION_49	IF_2
0x400017f	          0x4c8930	                    mov qword [rax], r14	       890	refs.c	FUNCTION_49	IF_2
0x4000182	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       891	refs.c	FUNCTION_49	IF_3
0x4000186	          0x4885c0	                           test rax, rax	       891	refs.c	FUNCTION_49	IF_3
0x4000189	            0x7403	                            je 0x400018e	       891	refs.c	FUNCTION_49	IF_3
0x400018b	          0x448928	                   mov dword [rax], r13d	       892	refs.c	FUNCTION_49	IF_3
0x400018e	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       893	refs.c	FUNCTION_49	IF_4
0x4000192	          0x4885c0	                           test rax, rax	       893	refs.c	FUNCTION_49	IF_4
0x4000195	            0x7405	                            je 0x400019c	       893	refs.c	FUNCTION_49	IF_4
0x4000197	          0x8b5314	            mov edx, dword [rbx + 0x14] 	       894	refs.c	FUNCTION_49	IF_4
0x400019a	            0x8910	                    mov dword [rax], edx	       894	refs.c	FUNCTION_49	IF_4
0x400019c	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_152	CALL_3
0x40001a0	        0x488b5500	                    mov rdx, qword [rbp]	        53	string3.h	FUNCTION_152	CALL_3
0x40001a4	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_152	CALL_3
0x40001a7	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_152	CALL_3
0x40001ab	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_152	CALL_3
0x40001af	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_152	CALL_3
0x40001b2	          0x895010	             mov dword [rax + 0x10], edx	        53	string3.h	FUNCTION_152	CALL_3
0x40001b5	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	       990	cache.h	FUNCTION_174	CALL_1
0x40001b9	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_171	CALL_1
0x40001be	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_171	CALL_1
0x40001c3	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_171	CALL_1
0x40001c6	      0xe800000000	                          call 0x40001cb	       975	cache.h	FUNCTION_171	CALL_1
0x40001cb	            0x85c0	                           test eax, eax	       896	refs.c	FUNCTION_49	IF_5	CALL_3
0x40001cd	            0x7518	                           jne 0x40001e7	       896	refs.c	FUNCTION_49	IF_5	CALL_3
0x40001cf	        0x498b0424	                    mov rax, qword [r12]	        53	string3.h	FUNCTION_152	CALL_3
0x40001d3	          0x488903	                    mov qword [rbx], rax	        53	string3.h	FUNCTION_152	CALL_3
0x40001d6	      0x498b442408	                mov rax, qword [r12 + 8]	        53	string3.h	FUNCTION_152	CALL_3
0x40001db	        0x48894308	                mov qword [rbx + 8], rax	        53	string3.h	FUNCTION_152	CALL_3
0x40001df	      0x418b442410	            mov eax, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_152	CALL_3
0x40001e4	          0x894310	             mov dword [rbx + 0x10], eax	        53	string3.h	FUNCTION_152	CALL_3
0x40001e7	      0xb801000000	                              mov eax, 1	       900	refs.c	FUNCTION_49
0x40001ec	        0x4883c408	                              add rsp, 8	       900	refs.c	FUNCTION_49
0x40001f0	              0x5b	                                 pop rbx	       900	refs.c	FUNCTION_49
0x40001f1	              0x5d	                                 pop rbp	       900	refs.c	FUNCTION_49
0x40001f2	            0x415c	                                 pop r12	       900	refs.c	FUNCTION_49
0x40001f4	            0x415d	                                 pop r13	       900	refs.c	FUNCTION_49
0x40001f6	            0x415e	                                 pop r14	       900	refs.c	FUNCTION_49
0x40001f8	            0x415f	                                 pop r15	       900	refs.c	FUNCTION_49
0x40001fa	              0xc3	                                     ret	       900	refs.c	FUNCTION_49
reflog_expire	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	32
0x4003ad5	            0x4157	                                push r15	      2109	refs.c	FUNCTION_117
0x4003ad7	            0x4156	                                push r14	      2109	refs.c	FUNCTION_117
0x4003ad9	            0x4155	                                push r13	      2109	refs.c	FUNCTION_117
0x4003adb	            0x4154	                                push r12	      2109	refs.c	FUNCTION_117
0x4003add	              0x55	                                push rbp	      2109	refs.c	FUNCTION_117
0x4003ade	              0x53	                                push rbx	      2109	refs.c	FUNCTION_117
0x4003adf	        0x4883ec08	                              sub rsp, 8	      2109	refs.c	FUNCTION_117
0x4003ae3	          0x4889fb	                            mov rbx, rdi	      2109	refs.c	FUNCTION_117
0x4003ae6	          0x4889f5	                            mov rbp, rsi	      2109	refs.c	FUNCTION_117
0x4003ae9	          0x4189d4	                           mov r12d, edx	      2109	refs.c	FUNCTION_117
0x4003aec	          0x4989cd	                            mov r13, rcx	      2109	refs.c	FUNCTION_117
0x4003aef	          0x4d89c6	                             mov r14, r8	      2109	refs.c	FUNCTION_117
0x4003af2	          0x4d89cf	                             mov r15, r9	      2109	refs.c	FUNCTION_117
0x4003af5	    0x488b3d000000	            mov rdi, qword [0x04003afc] 	      2110	refs.c	FUNCTION_117	CALL_2
0x4003afc	      0xe800000000	                          call 0x4003b01	      2110	refs.c	FUNCTION_117	CALL_2
0x4003b01	        0xff742440	                 push qword [rsp + 0x40]	      2110	refs.c	FUNCTION_117	CALL_2
0x4003b05	            0x4157	                                push r15	      2110	refs.c	FUNCTION_117	CALL_2
0x4003b07	          0x4d89f1	                             mov r9, r14	      2110	refs.c	FUNCTION_117	CALL_2
0x4003b0a	          0x4d89e8	                             mov r8, r13	      2110	refs.c	FUNCTION_117	CALL_2
0x4003b0d	          0x4489e1	                           mov ecx, r12d	      2110	refs.c	FUNCTION_117	CALL_2
0x4003b10	          0x4889ea	                            mov rdx, rbp	      2110	refs.c	FUNCTION_117	CALL_2
0x4003b13	          0x4889de	                            mov rsi, rbx	      2110	refs.c	FUNCTION_117	CALL_2
0x4003b16	          0x4889c7	                            mov rdi, rax	      2110	refs.c	FUNCTION_117	CALL_2
0x4003b19	      0xe800000000	                          call 0x4003b1e	      2110	refs.c	FUNCTION_117	CALL_2
0x4003b1e	        0x4883c418	                           add rsp, 0x18	      2114	refs.c	FUNCTION_117
0x4003b22	              0x5b	                                 pop rbx	      2114	refs.c	FUNCTION_117
0x4003b23	              0x5d	                                 pop rbp	      2114	refs.c	FUNCTION_117
0x4003b24	            0x415c	                                 pop r12	      2114	refs.c	FUNCTION_117
0x4003b26	            0x415d	                                 pop r13	      2114	refs.c	FUNCTION_117
0x4003b28	            0x415e	                                 pop r14	      2114	refs.c	FUNCTION_117
0x4003b2a	            0x415f	                                 pop r15	      2114	refs.c	FUNCTION_117
0x4003b2c	              0xc3	                                     ret	      2114	refs.c	FUNCTION_117
refs_for_each_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	9
0x40016c2	        0x4883ec08	                              sub rsp, 8	      1392	refs.c	FUNCTION_70
0x40016c6	          0x4989d1	                             mov r9, rdx	      1392	refs.c	FUNCTION_70
0x40016c9	    0x41b800000000	                              mov r8d, 0	      1393	refs.c	FUNCTION_70	CALL_1
0x40016cf	      0xb900000000	                              mov ecx, 0	      1393	refs.c	FUNCTION_70	CALL_1
0x40016d4	          0x4889f2	                            mov rdx, rsi	      1393	refs.c	FUNCTION_70	CALL_1
0x40016d7	      0xbe00000000	                              mov esi, 0	      1393	refs.c	FUNCTION_70	CALL_1
0x40016dc	      0xe8a7ffffff	                call sym.do_for_each_ref	      1393	refs.c	FUNCTION_70	CALL_1
0x40016e1	        0x4883c408	                              add rsp, 8	      1394	refs.c	FUNCTION_70
0x40016e5	              0xc3	                                     ret	      1394	refs.c	FUNCTION_70
shorten_unambiguous_ref	functions,0:ELSE,0:DO,0:IF,7:WHILE,0:CALL,17:FOR,4:SWITCH,0	190
0x40021d0	            0x4157	                                push r15	      1123	refs.c	FUNCTION_61
0x40021d2	            0x4156	                                push r14	      1123	refs.c	FUNCTION_61
0x40021d4	            0x4155	                                push r13	      1123	refs.c	FUNCTION_61
0x40021d6	            0x4154	                                push r12	      1123	refs.c	FUNCTION_61
0x40021d8	              0x55	                                push rbp	      1123	refs.c	FUNCTION_61
0x40021d9	              0x53	                                push rbx	      1123	refs.c	FUNCTION_61
0x40021da	        0x4883ec38	                           sub rsp, 0x38	      1123	refs.c	FUNCTION_61
0x40021de	        0x48893c24	                    mov qword [rsp], rdi	      1123	refs.c	FUNCTION_61
0x40021e2	        0x8974240c	              mov dword [rsp + 0xc], esi	      1123	refs.c	FUNCTION_61
0x40021e6	    0x64488b042528	                mov rax, qword fs:[0x28]	      1123	refs.c	FUNCTION_61
0x40021ef	      0x4889442428	             mov qword [rsp + 0x28], rax	      1123	refs.c	FUNCTION_61
0x40021f4	            0x31c0	                            xor eax, eax	      1123	refs.c	FUNCTION_61
0x40021f6	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1128	refs.c	FUNCTION_61
0x40021ff	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1128	refs.c	FUNCTION_61
0x4002208	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1128	refs.c	FUNCTION_61
0x4002211	    0x833d00000000	               cmp dword [0x04002218], 0	      1130	refs.c	FUNCTION_61	IF_1
0x4002218	     0xf8573010000	                           jne 0x4002391	      1130	refs.c	FUNCTION_61	IF_1
0x400221e	    0x488b3d000000	            mov rdi, qword [0x04002225] 	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002225	          0x4885ff	                           test rdi, rdi	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002228	     0xf8486000000	                            je 0x40022b4	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x400222e	      0xbe00000000	                              mov esi, 0	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002233	      0xba01000000	                              mov edx, 1	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002238	    0x41bc00000000	                             mov r12d, 0	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x400223e	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4002245	          0x4c89c1	                             mov rcx, r8	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4002248	            0xf2ae	              repne scasb al, byte [rdi]	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x400224a	          0x48f7d1	                                 not rcx	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x400224d	      0x4d8d640cfe	                lea r12, [r12 + rcx - 2]	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4002252	            0x89d1	                            mov ecx, edx	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002254	    0x891500000000	            mov dword [0x0400225a], edx 	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x400225a	          0x488b3e	                    mov rdi, qword [rsi]	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x400225d	          0x83c201	                              add edx, 1	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002260	        0x4883c608	                              add rsi, 8	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002264	          0x4885ff	                           test rdi, rdi	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002267	            0x75dc	                           jne 0x4002245	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4002269	          0x4863d1	                         movsxd rdx, ecx	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x400226c	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_139	IF_1	CALL_1
0x4002276	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_139	IF_1	CALL_1
0x4002279	            0x7614	                           jbe 0x400228f	       795	git-compat-util.h	FUNCTION_139	IF_1	CALL_1
0x400227b	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_139	IF_1	CALL_2
0x4002280	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_139	IF_1	CALL_2
0x4002285	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_139	IF_1	CALL_2
0x400228a	      0xe800000000	                          call 0x400228f	       796	git-compat-util.h	FUNCTION_139	IF_1	CALL_2
0x400228f	    0x488d34d50000	                        lea rsi, [rdx*8]	       798	git-compat-util.h	FUNCTION_139
0x4002297	          0x4889f0	                            mov rax, rsi	       785	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x400229a	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x400229d	          0x4939c4	                            cmp r12, rax	       785	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x40022a0	            0x761d	                           jbe 0x40022bf	       785	git-compat-util.h	FUNCTION_138	IF_1	CALL_1
0x40022a2	          0x4c89e2	                            mov rdx, r12	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x40022a5	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x40022aa	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x40022af	      0xe800000000	                          call 0x40022b4	       786	git-compat-util.h	FUNCTION_138	IF_1	CALL_2
0x40022b4	    0x41bc00000000	                             mov r12d, 0	      1137	refs.c	FUNCTION_61	IF_1
0x40022ba	      0xbe00000000	                              mov esi, 0	       798	git-compat-util.h	FUNCTION_139
0x40022bf	        0x4a8d3c26	                    lea rdi, [rsi + r12]	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x40022c3	      0xe800000000	                          call 0x40022c8	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x40022c8	    0x488905000000	            mov qword [0x040022cf], rax 	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x40022cf	    0x8b0500000000	            mov eax, dword [0x040022d5] 	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x40022d5	            0x85c0	                           test eax, eax	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x40022d7	     0xf8e9d000000	                           jle 0x400237a	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x40022dd	          0x4d85e4	                           test r12, r12	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40022e0	            0x7422	                            je 0x4002304	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40022e2	      0xbd00000000	                              mov ebp, 0	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40022e7	      0xbb00000000	                              mov ebx, 0	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40022ec	    0x41bd00000000	                             mov r13d, 0	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40022f2	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	        64	stdio2.h	FUNCTION_218	CALL_2
0x40022f9	            0xeb22	                           jmp 0x400231d	        64	stdio2.h	FUNCTION_218	CALL_2
0x40022fb	        0x4883c508	                              add rbp, 8	        64	stdio2.h	FUNCTION_218	CALL_2
0x40022ff	          0x4c39e3	                            cmp rbx, r12	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002302	            0x7219	                            jb 0x400231d	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002304	      0xb900000000	                              mov ecx, 0	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002309	      0xba7d040000	                          mov edx, 0x47d	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x400230e	      0xbe00000000	                              mov esi, 0	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002313	      0xbf00000000	                              mov edi, 0	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4002318	      0xe800000000	                          call 0x400231d	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x400231d	    0x488b15000000	            mov rdx, qword [0x04002324] 	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002324	            0x4898	                                    cdqe	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002326	        0x488d3cc3	                  lea rdi, [rbx + rax*8]	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x400232a	          0x4801d7	                            add rdi, rdx	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x400232d	        0x48893c2a	              mov qword [rdx + rbp], rdi	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002331	          0x4c89e6	                            mov rsi, r12	        64	stdio2.h	FUNCTION_218	CALL_2
0x4002334	          0x4829de	                            sub rsi, rbx	        64	stdio2.h	FUNCTION_218	CALL_2
0x4002337	        0x4883ec08	                              sub rsp, 8	        64	stdio2.h	FUNCTION_218	CALL_2
0x400233b	      0x6800000000	                                  push 0	        64	stdio2.h	FUNCTION_218	CALL_2
0x4002340	    0x41b902000000	                              mov r9d, 2	        64	stdio2.h	FUNCTION_218	CALL_2
0x4002346	    0x4c8b85000000	                     mov r8, qword [rbp]	        64	stdio2.h	FUNCTION_218	CALL_2
0x400234d	          0x4c89f1	                            mov rcx, r14	        64	stdio2.h	FUNCTION_218	CALL_2
0x4002350	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_218	CALL_2
0x4002355	      0xb800000000	                              mov eax, 0	        64	stdio2.h	FUNCTION_218	CALL_2
0x400235a	      0xe800000000	                          call 0x400235f	        64	stdio2.h	FUNCTION_218	CALL_2
0x400235f	          0x83c001	                              add eax, 1	      1151	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_6
0x4002362	            0x4898	                                    cdqe	      1151	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_6
0x4002364	          0x4801c3	                            add rbx, rax	      1151	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_6
0x4002367	        0x4183c501	                             add r13d, 1	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x400236b	    0x8b0500000000	            mov eax, dword [0x04002371] 	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002371	        0x4883c410	                           add rsp, 0x10	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002375	          0x4439e8	                           cmp eax, r13d	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4002378	            0x7f81	                            jg 0x40022fb	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x400237a	    0x833d00000000	               cmp dword [0x04002381], 0	      1157	refs.c	FUNCTION_61	IF_2
0x4002381	            0x750e	                           jne 0x4002391	      1157	refs.c	FUNCTION_61	IF_2
0x4002383	        0x488b3c24	                    mov rdi, qword [rsp]	      1158	refs.c	FUNCTION_61	CALL_7
0x4002387	      0xe800000000	                          call 0x400238c	      1158	refs.c	FUNCTION_61	CALL_7
0x400238c	      0xe93a010000	                           jmp 0x40024cb	      1158	refs.c	FUNCTION_61	CALL_7
0x4002391	        0x488b3c24	                    mov rdi, qword [rsp]	      1161	refs.c	FUNCTION_61	CALL_8
0x4002395	      0xe800000000	                          call 0x400239a	      1161	refs.c	FUNCTION_61	CALL_8
0x400239a	          0x4989c6	                            mov r14, rax	      1161	refs.c	FUNCTION_61	CALL_8
0x400239d	    0x8b0500000000	            mov eax, dword [0x040023a3] 	      1164	refs.c	FUNCTION_61	FOR_3
0x40023a3	        0x448d60ff	                     lea r12d, [rax - 1]	      1164	refs.c	FUNCTION_61	FOR_3
0x40023a7	          0x4585e4	                         test r12d, r12d	      1164	refs.c	FUNCTION_61	FOR_3
0x40023aa	     0xf8e00010000	                           jle 0x40024b0	      1164	refs.c	FUNCTION_61	FOR_3
0x40023b0	          0x4963c4	                        movsxd rax, r12d	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_9
0x40023b3	    0x488b15000000	            mov rdx, qword [0x040023ba] 	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_9
0x40023ba	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_9
0x40023be	          0x4c89f2	                            mov rdx, r14	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_9
0x40023c1	        0x488b3c24	                    mov rdi, qword [rsp]	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_9
0x40023c5	      0xb800000000	                              mov eax, 0	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_9
0x40023ca	      0xe800000000	                          call 0x40023cf	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_9
0x40023cf	          0x83f801	                              cmp eax, 1	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_9
0x40023d2	     0xf85ce000000	                           jne 0x40024a6	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_9
0x40023d8	      0xb800000000	                              mov eax, 0	      1172	refs.c	FUNCTION_61	FOR_3	CALL_10
0x40023dd	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1172	refs.c	FUNCTION_61	FOR_3	CALL_10
0x40023e4	          0x4c89f7	                            mov rdi, r14	      1172	refs.c	FUNCTION_61	FOR_3	CALL_10
0x40023e7	            0xf2ae	              repne scasb al, byte [rdi]	      1172	refs.c	FUNCTION_61	FOR_3	CALL_10
0x40023e9	          0x4889c8	                            mov rax, rcx	      1172	refs.c	FUNCTION_61	FOR_3	CALL_10
0x40023ec	          0x48f7d0	                                 not rax	      1172	refs.c	FUNCTION_61	FOR_3	CALL_10
0x40023ef	        0x448d78ff	                     lea r15d, [rax - 1]	      1172	refs.c	FUNCTION_61	FOR_3	CALL_10
0x40023f3	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      1179	refs.c	FUNCTION_61	FOR_3	IF_4
0x40023f8	          0x4589e5	                          mov r13d, r12d	      1179	refs.c	FUNCTION_61	FOR_3	IF_4
0x40023fb	    0x440f452d0000	         cmovne r13d, dword [0x04002403]	      1179	refs.c	FUNCTION_61	FOR_3	IF_4
0x4002403	          0x4585ed	                         test r13d, r13d	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4002406	     0xf8e81000000	                           jle 0x400248d	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x400240c	      0xbd00000000	                              mov ebp, 0	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4002411	      0xbb00000000	                              mov ebx, 0	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4002416	          0x4139dc	                           cmp r12d, ebx	      1189	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_5
0x4002419	            0x7464	                            je 0x400247f	      1189	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_5
0x400241b	        0x488b7500	                    mov rsi, qword [rbp]	      1186	refs.c	FUNCTION_61	FOR_3	FOR_4
0x400241f	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_193
0x4002428	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_193	IF_2
0x400242d	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_193	IF_2
0x4002433	            0x7405	                            je 0x400243a	       165	strbuf.h	FUNCTION_193	IF_2
0x4002435	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_193	IF_2
0x4002438	            0xeb22	                           jmp 0x400245c	       166	strbuf.h	FUNCTION_193	IF_2
0x400243a	    0x803d00000000	                cmp byte [0x04002441], 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x4002441	            0x7419	                            je 0x400245c	       168	strbuf.h	FUNCTION_193	CALL_2
0x4002443	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x4002448	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_193	CALL_2
0x400244d	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x4002452	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_193	CALL_2
0x4002457	      0xe800000000	                          call 0x400245c	       168	strbuf.h	FUNCTION_193	CALL_2
0x400245c	          0x4c89f1	                            mov rcx, r14	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_12
0x400245f	          0x4489fa	                           mov edx, r15d	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_12
0x4002462	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_12
0x4002467	      0xb800000000	                              mov eax, 0	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_12
0x400246c	      0xe800000000	                          call 0x4002471	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_12
0x4002471	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_13
0x4002476	      0xe800000000	                          call 0x400247b	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_13
0x400247b	            0x85c0	                           test eax, eax	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_13
0x400247d	            0x7513	                           jne 0x4002492	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_13
0x400247f	          0x83c301	                              add ebx, 1	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4002482	        0x4883c508	                              add rbp, 8	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4002486	          0x4139dd	                           cmp r13d, ebx	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4002489	            0x758b	                           jne 0x4002416	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x400248b	            0xeb0a	                           jmp 0x4002497	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x400248d	      0xbb00000000	                              mov ebx, 0	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4002492	          0x4139dd	                           cmp r13d, ebx	      1208	refs.c	FUNCTION_61	FOR_3	IF_7
0x4002495	            0x750f	                           jne 0x40024a6	      1208	refs.c	FUNCTION_61	FOR_3	IF_7
0x4002497	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1209	refs.c	FUNCTION_61	FOR_3	IF_7	CALL_14
0x400249c	      0xe800000000	                          call 0x40024a1	      1209	refs.c	FUNCTION_61	FOR_3	IF_7	CALL_14
0x40024a1	          0x4c89f0	                            mov rax, r14	      1210	refs.c	FUNCTION_61	FOR_3	IF_7
0x40024a4	            0xeb25	                           jmp 0x40024cb	      1210	refs.c	FUNCTION_61	FOR_3	IF_7
0x40024a6	        0x4183ec01	                             sub r12d, 1	      1164	refs.c	FUNCTION_61	FOR_3
0x40024aa	     0xf8500ffffff	                           jne 0x40023b0	      1164	refs.c	FUNCTION_61	FOR_3
0x40024b0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1214	refs.c	FUNCTION_61	CALL_15
0x40024b5	      0xe800000000	                          call 0x40024ba	      1214	refs.c	FUNCTION_61	CALL_15
0x40024ba	          0x4c89f7	                            mov rdi, r14	      1215	refs.c	FUNCTION_61	CALL_16
0x40024bd	      0xe800000000	                          call 0x40024c2	      1215	refs.c	FUNCTION_61	CALL_16
0x40024c2	        0x488b3c24	                    mov rdi, qword [rsp]	      1216	refs.c	FUNCTION_61	CALL_17
0x40024c6	      0xe800000000	                          call 0x40024cb	      1216	refs.c	FUNCTION_61	CALL_17
0x40024cb	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1217	refs.c	FUNCTION_61
0x40024d0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1217	refs.c	FUNCTION_61
0x40024d9	            0x7405	                            je 0x40024e0	      1217	refs.c	FUNCTION_61
0x40024db	      0xe800000000	                          call 0x40024e0	      1217	refs.c	FUNCTION_61
0x40024e0	        0x4883c438	                           add rsp, 0x38	      1217	refs.c	FUNCTION_61
0x40024e4	              0x5b	                                 pop rbx	      1217	refs.c	FUNCTION_61
0x40024e5	              0x5d	                                 pop rbp	      1217	refs.c	FUNCTION_61
0x40024e6	            0x415c	                                 pop r12	      1217	refs.c	FUNCTION_61
0x40024e8	            0x415d	                                 pop r13	      1217	refs.c	FUNCTION_61
0x40024ea	            0x415e	                                 pop r14	      1217	refs.c	FUNCTION_61
0x40024ec	            0x415f	                                 pop r15	      1217	refs.c	FUNCTION_61
0x40024ee	              0xc3	                                     ret	      1217	refs.c	FUNCTION_61
prettify_refname	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,3:FOR,0:SWITCH,0	29
0x4000bc2	          0x4889f8	                            mov rax, rdi	       474	refs.c	FUNCTION_30
0x4000bc5	      0xba00000000	                              mov edx, 0	       474	refs.c	FUNCTION_30
0x4000bca	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000bcd	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000bcf	            0x7448	                            je 0x4000c19	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000bd1	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000bd5	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000bd9	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000bdc	            0x74ec	                            je 0x4000bca	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000bde	          0x4889f8	                            mov rax, rdi	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000be1	      0xba00000000	                              mov edx, 0	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000be6	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000be9	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000beb	            0x742c	                            je 0x4000c19	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000bed	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000bf1	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000bf5	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000bf8	            0x74ec	                            je 0x4000be6	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000bfa	          0x4889f8	                            mov rax, rdi	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000bfd	      0xba00000000	                              mov edx, 0	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000c02	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000c05	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000c07	            0x7410	                            je 0x4000c19	       484	git-compat-util.h	FUNCTION_131	DO_1	IF_1
0x4000c09	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000c0d	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000c11	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000c14	            0x74ec	                            je 0x4000c02	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000c16	          0x4889f8	                            mov rax, rdi	       488	git-compat-util.h	FUNCTION_131	DO_1
0x4000c19	            0xf3c3	                                     ret	       480	refs.c	FUNCTION_30
refs_for_each_ref_in	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	14
0x40016e6	        0x4883ec08	                              sub rsp, 8	      1403	refs.c	FUNCTION_72
0x40016ea	          0x4989fa	                            mov r10, rdi	      1403	refs.c	FUNCTION_72
0x40016ed	          0x4989c9	                             mov r9, rcx	      1403	refs.c	FUNCTION_72
0x40016f0	      0xb800000000	                              mov eax, 0	      1404	refs.c	FUNCTION_72	CALL_2
0x40016f5	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1404	refs.c	FUNCTION_72	CALL_2
0x40016fc	          0x4889f7	                            mov rdi, rsi	      1404	refs.c	FUNCTION_72	CALL_2
0x40016ff	            0xf2ae	              repne scasb al, byte [rdi]	      1404	refs.c	FUNCTION_72	CALL_2
0x4001701	          0x48f7d1	                                 not rcx	      1404	refs.c	FUNCTION_72	CALL_2
0x4001704	        0x4883e901	                              sub rcx, 1	      1404	refs.c	FUNCTION_72	CALL_2
0x4001708	    0x41b800000000	                              mov r8d, 0	      1404	refs.c	FUNCTION_72	CALL_2
0x400170e	          0x4c89d7	                            mov rdi, r10	      1404	refs.c	FUNCTION_72	CALL_2
0x4001711	      0xe872ffffff	                call sym.do_for_each_ref	      1404	refs.c	FUNCTION_72	CALL_2
0x4001716	        0x4883c408	                              add rsp, 8	      1405	refs.c	FUNCTION_72
0x400171a	              0xc3	                                     ret	      1405	refs.c	FUNCTION_72
refs_read_ref_full	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,1:FOR,0:SWITCH,0	8
0x40019dd	        0x4883ec08	                              sub rsp, 8	       225	refs.c	FUNCTION_9
0x40019e1	      0xe800000000	                          call 0x40019e6	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x40019e6	          0x4885c0	                           test rax, rax	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x40019e9	           0xf94c0	                                 sete al	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x40019ec	           0xfb6c0	                           movzx eax, al	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x40019ef	            0xf7d8	                                 neg eax	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x40019f1	        0x4883c408	                              add rsp, 8	       229	refs.c	FUNCTION_9
0x40019f5	              0xc3	                                     ret	       229	refs.c	FUNCTION_9
for_each_replace_ref	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,3:FOR,0:SWITCH,0	30
0x4001f75	            0x4155	                                push r13	      1434	refs.c	FUNCTION_76
0x4001f77	            0x4154	                                push r12	      1434	refs.c	FUNCTION_76
0x4001f79	              0x55	                                push rbp	      1434	refs.c	FUNCTION_76
0x4001f7a	              0x53	                                push rbx	      1434	refs.c	FUNCTION_76
0x4001f7b	        0x4883ec08	                              sub rsp, 8	      1434	refs.c	FUNCTION_76
0x4001f7f	          0x4989f8	                             mov r8, rdi	      1434	refs.c	FUNCTION_76
0x4001f82	          0x4989f4	                            mov r12, rsi	      1434	refs.c	FUNCTION_76
0x4001f85	          0x4989d5	                            mov r13, rdx	      1434	refs.c	FUNCTION_76
0x4001f88	    0x488b2d000000	            mov rbp, qword [0x04001f8f] 	      1437	refs.c	FUNCTION_76	CALL_3
0x4001f8f	      0xb800000000	                              mov eax, 0	      1437	refs.c	FUNCTION_76	CALL_3
0x4001f94	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1437	refs.c	FUNCTION_76	CALL_3
0x4001f9b	          0x4889ef	                            mov rdi, rbp	      1437	refs.c	FUNCTION_76	CALL_3
0x4001f9e	            0xf2ae	              repne scasb al, byte [rdi]	      1437	refs.c	FUNCTION_76	CALL_3
0x4001fa0	          0x48f7d1	                                 not rcx	      1437	refs.c	FUNCTION_76	CALL_3
0x4001fa3	        0x488d59ff	                      lea rbx, [rcx - 1]	      1437	refs.c	FUNCTION_76	CALL_3
0x4001fa7	          0x4c89c7	                             mov rdi, r8	      1435	refs.c	FUNCTION_76	CALL_2
0x4001faa	      0xe800000000	                          call 0x4001faf	      1435	refs.c	FUNCTION_76	CALL_2
0x4001faf	          0x4d89e9	                             mov r9, r13	      1435	refs.c	FUNCTION_76	CALL_2
0x4001fb2	    0x41b801000000	                              mov r8d, 1	      1435	refs.c	FUNCTION_76	CALL_2
0x4001fb8	            0x89d9	                            mov ecx, ebx	      1435	refs.c	FUNCTION_76	CALL_2
0x4001fba	          0x4c89e2	                            mov rdx, r12	      1435	refs.c	FUNCTION_76	CALL_2
0x4001fbd	          0x4889ee	                            mov rsi, rbp	      1435	refs.c	FUNCTION_76	CALL_2
0x4001fc0	          0x4889c7	                            mov rdi, rax	      1435	refs.c	FUNCTION_76	CALL_2
0x4001fc3	      0xe8c0f6ffff	                call sym.do_for_each_ref	      1435	refs.c	FUNCTION_76	CALL_2
0x4001fc8	        0x4883c408	                              add rsp, 8	      1439	refs.c	FUNCTION_76
0x4001fcc	              0x5b	                                 pop rbx	      1439	refs.c	FUNCTION_76
0x4001fcd	              0x5d	                                 pop rbp	      1439	refs.c	FUNCTION_76
0x4001fce	            0x415c	                                 pop r12	      1439	refs.c	FUNCTION_76
0x4001fd0	            0x415d	                                 pop r13	      1439	refs.c	FUNCTION_76
0x4001fd2	              0xc3	                                     ret	      1439	refs.c	FUNCTION_76
parse_hide_refs_config	functions,0:ELSE,0:DO,0:IF,3:WHILE,1:CALL,8:FOR,0:SWITCH,0	81
0x40013ab	              0x55	                                push rbp	      1222	refs.c	FUNCTION_62
0x40013ac	              0x53	                                push rbx	      1222	refs.c	FUNCTION_62
0x40013ad	        0x4883ec18	                           sub rsp, 0x18	      1222	refs.c	FUNCTION_62
0x40013b1	          0x4889fd	                            mov rbp, rdi	      1222	refs.c	FUNCTION_62
0x40013b4	          0x4889f3	                            mov rbx, rsi	      1222	refs.c	FUNCTION_62
0x40013b7	          0x4989d1	                             mov r9, rdx	      1222	refs.c	FUNCTION_62
0x40013ba	    0x64488b042528	                mov rax, qword fs:[0x28]	      1222	refs.c	FUNCTION_62
0x40013c3	      0x4889442408	                mov qword [rsp + 8], rax	      1222	refs.c	FUNCTION_62
0x40013c8	            0x31c0	                            xor eax, eax	      1222	refs.c	FUNCTION_62
0x40013ca	      0xbe00000000	                              mov esi, 0	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x40013cf	      0xb912000000	                           mov ecx, 0x12	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x40013d4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x40013d6	           0xf97c2	                                 seta dl	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x40013d9	           0xf92c0	                                 setb al	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x40013dc	            0x38c2	                              cmp dl, al	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x40013de	            0x743e	                            je 0x400141e	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x40013e0	          0x4989e0	                             mov r8, rsp	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x40013e3	      0xb900000000	                              mov ecx, 0	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x40013e8	      0xba00000000	                              mov edx, 0	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x40013ed	          0x4c89ce	                             mov rsi, r9	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x40013f0	          0x4889ef	                            mov rdi, rbp	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x40013f3	      0xe800000000	                          call 0x40013f8	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x40013f8	            0x85c0	                           test eax, eax	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x40013fa	     0xf85b7000000	                           jne 0x40014b7	      1224	refs.c	FUNCTION_62	IF_1	CALL_1
0x4001400	      0xbf00000000	                              mov edi, 0	      1226	refs.c	FUNCTION_62	IF_1	CALL_3
0x4001405	      0xb909000000	                              mov ecx, 9	      1226	refs.c	FUNCTION_62	IF_1	CALL_3
0x400140a	        0x488b3424	                    mov rsi, qword [rsp]	      1226	refs.c	FUNCTION_62	IF_1	CALL_3
0x400140e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1226	refs.c	FUNCTION_62	IF_1	CALL_3
0x4001410	           0xf97c1	                                 seta cl	      1226	refs.c	FUNCTION_62	IF_1	CALL_3
0x4001413	           0xf92c2	                                 setb dl	      1226	refs.c	FUNCTION_62	IF_1	CALL_3
0x4001416	            0x38d1	                              cmp cl, dl	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x4001418	     0xf859e000000	                           jne 0x40014bc	      1225	refs.c	FUNCTION_62	IF_1	CALL_2
0x400141e	          0x4885db	                           test rbx, rbx	      1230	refs.c	FUNCTION_62	IF_1	IF_2
0x4001421	            0x7512	                           jne 0x4001435	      1230	refs.c	FUNCTION_62	IF_1	IF_2
0x4001423	          0x4889ef	                            mov rdi, rbp	      1231	refs.c	FUNCTION_62	IF_1	CALL_4
0x4001426	      0xe800000000	                          call 0x400142b	      1231	refs.c	FUNCTION_62	IF_1	CALL_4
0x400142b	      0xb8ffffffff	                     mov eax, 0xffffffff	      1231	refs.c	FUNCTION_62	IF_1	CALL_4
0x4001430	      0xe987000000	                           jmp 0x40014bc	      1231	refs.c	FUNCTION_62	IF_1	CALL_4
0x4001435	          0x4889df	                            mov rdi, rbx	      1232	refs.c	FUNCTION_62	IF_1	CALL_5
0x4001438	      0xe800000000	                          call 0x400143d	      1232	refs.c	FUNCTION_62	IF_1	CALL_5
0x400143d	          0x4889c3	                            mov rbx, rax	      1232	refs.c	FUNCTION_62	IF_1	CALL_5
0x4001440	      0xb800000000	                              mov eax, 0	      1233	refs.c	FUNCTION_62	IF_1	CALL_6
0x4001445	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1233	refs.c	FUNCTION_62	IF_1	CALL_6
0x400144c	          0x4889df	                            mov rdi, rbx	      1233	refs.c	FUNCTION_62	IF_1	CALL_6
0x400144f	            0xf2ae	              repne scasb al, byte [rdi]	      1233	refs.c	FUNCTION_62	IF_1	CALL_6
0x4001451	          0x48f7d1	                                 not rcx	      1233	refs.c	FUNCTION_62	IF_1	CALL_6
0x4001454	        0x4883e901	                              sub rcx, 1	      1233	refs.c	FUNCTION_62	IF_1	CALL_6
0x4001458	            0x89c8	                            mov eax, ecx	      1233	refs.c	FUNCTION_62	IF_1	CALL_6
0x400145a	            0x85c9	                           test ecx, ecx	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x400145c	            0x741f	                            je 0x400147d	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x400145e	          0x4863c9	                         movsxd rcx, ecx	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4001461	      0x807c0bff2f	         cmp byte [rbx + rcx - 1], 0x2f 	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4001466	            0x7515	                           jne 0x400147d	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4001468	          0x83e801	                              sub eax, 1	      1235	refs.c	FUNCTION_62	IF_1	WHILE_1
0x400146b	          0x4863d0	                         movsxd rdx, eax	      1235	refs.c	FUNCTION_62	IF_1	WHILE_1
0x400146e	        0xc6041300	                 mov byte [rbx + rdx], 0	      1235	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4001472	            0x85c0	                           test eax, eax	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4001474	            0x7407	                            je 0x400147d	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4001476	      0x807c13ff2f	         cmp byte [rbx + rdx - 1], 0x2f 	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x400147b	            0x74eb	                            je 0x4001468	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x400147d	    0x48833d000000	               cmp qword [0x04001485], 0	      1236	refs.c	FUNCTION_62	IF_1	IF_3
0x4001485	            0x751a	                           jne 0x40014a1	      1236	refs.c	FUNCTION_62	IF_1	IF_3
0x4001487	      0xbe20000000	                           mov esi, 0x20	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_7
0x400148c	      0xbf01000000	                              mov edi, 1	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_7
0x4001491	      0xe800000000	                          call 0x4001496	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_7
0x4001496	    0x488905000000	            mov qword [0x0400149d], rax 	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_7
0x400149d	        0x80481001	                 or byte [rax + 0x10], 1	      1238	refs.c	FUNCTION_62	IF_1	IF_3
0x40014a1	          0x4889de	                            mov rsi, rbx	      1240	refs.c	FUNCTION_62	IF_1	CALL_8
0x40014a4	    0x488b3d000000	            mov rdi, qword [0x040014ab] 	      1240	refs.c	FUNCTION_62	IF_1	CALL_8
0x40014ab	      0xe800000000	                          call 0x40014b0	      1240	refs.c	FUNCTION_62	IF_1	CALL_8
0x40014b0	      0xb800000000	                              mov eax, 0	      1242	refs.c	FUNCTION_62
0x40014b5	            0xeb05	                           jmp 0x40014bc	      1242	refs.c	FUNCTION_62
0x40014b7	      0xb800000000	                              mov eax, 0	      1242	refs.c	FUNCTION_62
0x40014bc	      0x488b742408	                mov rsi, qword [rsp + 8]	      1243	refs.c	FUNCTION_62
0x40014c1	    0x644833342528	                xor rsi, qword fs:[0x28]	      1243	refs.c	FUNCTION_62
0x40014ca	            0x7405	                            je 0x40014d1	      1243	refs.c	FUNCTION_62
0x40014cc	      0xe800000000	                          call 0x40014d1	      1243	refs.c	FUNCTION_62
0x40014d1	        0x4883c418	                           add rsp, 0x18	      1243	refs.c	FUNCTION_62
0x40014d5	              0x5b	                                 pop rbx	      1243	refs.c	FUNCTION_62
0x40014d6	              0x5d	                                 pop rbp	      1243	refs.c	FUNCTION_62
0x40014d7	              0xc3	                                     ret	      1243	refs.c	FUNCTION_62
ref_update_reject_duplicates	functions,0:ELSE,1:DO,0:IF,2:WHILE,0:CALL,4:FOR,1:SWITCH,0	49
0x4002b49	            0x4156	                                push r14	      1823	refs.c	FUNCTION_99
0x4002b4b	            0x4155	                                push r13	      1823	refs.c	FUNCTION_99
0x4002b4d	            0x4154	                                push r12	      1823	refs.c	FUNCTION_99
0x4002b4f	              0x55	                                push rbp	      1823	refs.c	FUNCTION_99
0x4002b50	              0x53	                                push rbx	      1823	refs.c	FUNCTION_99
0x4002b51	        0x448b6708	               mov r12d, dword [rdi + 8]	      1824	refs.c	FUNCTION_99
0x4002b55	          0x4885f6	                           test rsi, rsi	      1826	refs.c	FUNCTION_99	CALL_1
0x4002b58	            0x7410	                            je 0x4002b6a	      1826	refs.c	FUNCTION_99	CALL_1
0x4002b5a	          0x4989f5	                            mov r13, rsi	      1826	refs.c	FUNCTION_99	CALL_1
0x4002b5d	      0xb800000000	                              mov eax, 0	      1841	refs.c	FUNCTION_99
0x4002b62	        0x4983fc01	                              cmp r12, 1	      1828	refs.c	FUNCTION_99	FOR_1
0x4002b66	            0x7676	                           jbe 0x4002bde	      1828	refs.c	FUNCTION_99	FOR_1
0x4002b68	            0xeb19	                           jmp 0x4002b83	      1828	refs.c	FUNCTION_99	FOR_1
0x4002b6a	      0xb900000000	                              mov ecx, 0	      1826	refs.c	FUNCTION_99	CALL_1
0x4002b6f	      0xba22070000	                          mov edx, 0x722	      1826	refs.c	FUNCTION_99	CALL_1
0x4002b74	      0xbe00000000	                              mov esi, 0	      1826	refs.c	FUNCTION_99	CALL_1
0x4002b79	      0xbf00000000	                              mov edi, 0	      1826	refs.c	FUNCTION_99	CALL_1
0x4002b7e	      0xe800000000	                          call 0x4002b83	      1826	refs.c	FUNCTION_99	CALL_1
0x4002b83	          0x488b1f	                    mov rbx, qword [rdi]	      1826	refs.c	FUNCTION_99	CALL_1
0x4002b86	        0x4883c310	                           add rbx, 0x10	      1826	refs.c	FUNCTION_99	CALL_1
0x4002b8a	      0xbd01000000	                              mov ebp, 1	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x4002b8f	          0x4c8b33	                    mov r14, qword [rbx]	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x4002b92	        0x488b7bf0	             mov rdi, qword [rbx - 0x10]	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x4002b96	          0x4c89f6	                            mov rsi, r14	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x4002b99	      0xe800000000	                          call 0x4002b9e	      1829	refs.c	FUNCTION_99	FOR_1	CALL_2
0x4002b9e	            0x85c0	                           test eax, eax	      1832	refs.c	FUNCTION_99	FOR_1	IF_1
0x4002ba0	            0x7517	                           jne 0x4002bb9	      1832	refs.c	FUNCTION_99	FOR_1	IF_1
0x4002ba2	          0x4c89f2	                            mov rdx, r14	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_3
0x4002ba5	      0xbe00000000	                              mov esi, 0	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_3
0x4002baa	          0x4c89ef	                            mov rdi, r13	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_3
0x4002bad	      0xe800000000	                          call 0x4002bb2	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_3
0x4002bb2	      0xb801000000	                              mov eax, 1	      1836	refs.c	FUNCTION_99	FOR_1	IF_1
0x4002bb7	            0xeb25	                           jmp 0x4002bde	      1836	refs.c	FUNCTION_99	FOR_1	IF_1
0x4002bb9	            0x85c0	                           test eax, eax	      1837	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2
0x4002bbb	            0x7e0f	                           jle 0x4002bcc	      1837	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2
0x4002bbd	      0xbf00000000	                              mov edi, 0	      1838	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2	CALL_4
0x4002bc2	      0xb800000000	                              mov eax, 0	      1838	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2	CALL_4
0x4002bc7	      0xe800000000	                          call 0x4002bcc	      1838	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2	CALL_4
0x4002bcc	        0x4883c501	                              add rbp, 1	      1828	refs.c	FUNCTION_99	FOR_1
0x4002bd0	        0x4883c310	                           add rbx, 0x10	      1828	refs.c	FUNCTION_99	FOR_1
0x4002bd4	          0x4939ec	                            cmp r12, rbp	      1828	refs.c	FUNCTION_99	FOR_1
0x4002bd7	            0x75b6	                           jne 0x4002b8f	      1828	refs.c	FUNCTION_99	FOR_1
0x4002bd9	      0xb800000000	                              mov eax, 0	      1841	refs.c	FUNCTION_99
0x4002bde	              0x5b	                                 pop rbx	      1842	refs.c	FUNCTION_99
0x4002bdf	              0x5d	                                 pop rbp	      1842	refs.c	FUNCTION_99
0x4002be0	            0x415c	                                 pop r12	      1842	refs.c	FUNCTION_99
0x4002be2	            0x415d	                                 pop r13	      1842	refs.c	FUNCTION_99
0x4002be4	            0x415e	                                 pop r14	      1842	refs.c	FUNCTION_99
0x4002be6	              0xc3	                                     ret	      1842	refs.c	FUNCTION_99
refs_reflog_exists	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	5
0x4003865	        0x4883ec08	                              sub rsp, 8	      2058	refs.c	FUNCTION_110
0x4003869	          0x488b07	                    mov rax, qword [rdi]	      2059	refs.c	FUNCTION_110	CALL_1
0x400386c	    0xff9090000000	                 call qword [rax + 0x90]	      2059	refs.c	FUNCTION_110	CALL_1
0x4003872	        0x4883c408	                              add rsp, 8	      2060	refs.c	FUNCTION_110
0x4003876	              0xc3	                                     ret	      2060	refs.c	FUNCTION_110
ref_filter_match	functions,2:ELSE,0:DO,0:IF,3:WHILE,0:CALL,0:FOR,0:SWITCH,0	78
0x4000889	            0x4155	                                push r13	       266	refs.c	FUNCTION_14
0x400088b	            0x4154	                                push r12	       266	refs.c	FUNCTION_14
0x400088d	              0x55	                                push rbp	       266	refs.c	FUNCTION_14
0x400088e	              0x53	                                push rbx	       266	refs.c	FUNCTION_14
0x400088f	        0x4883ec08	                              sub rsp, 8	       266	refs.c	FUNCTION_14
0x4000893	          0x4989fc	                            mov r12, rdi	       266	refs.c	FUNCTION_14
0x4000896	          0x4889f5	                            mov rbp, rsi	       266	refs.c	FUNCTION_14
0x4000899	          0x4885d2	                           test rdx, rdx	       269	refs.c	FUNCTION_14	IF_1
0x400089c	            0x744a	                            je 0x40008e8	       269	refs.c	FUNCTION_14	IF_1
0x400089e	          0x4989d5	                            mov r13, rdx	       269	refs.c	FUNCTION_14	IF_1
0x40008a1	          0x8b4208	                mov eax, dword [rdx + 8]	       269	refs.c	FUNCTION_14	IF_1
0x40008a4	            0x85c0	                           test eax, eax	       269	refs.c	FUNCTION_14	IF_1
0x40008a6	            0x7440	                            je 0x40008e8	       269	refs.c	FUNCTION_14	IF_1
0x40008a8	          0x488b1a	                    mov rbx, qword [rdx]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x40008ab	          0x4885db	                           test rbx, rbx	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x40008ae	            0x7438	                            je 0x40008e8	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x40008b0	            0x89c0	                            mov eax, eax	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x40008b2	        0x48c1e004	                              shl rax, 4	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x40008b6	          0x4801d8	                            add rax, rbx	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x40008b9	          0x4839c3	                            cmp rbx, rax	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x40008bc	            0x732a	                           jae 0x40008e8	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x40008be	          0x4889de	                            mov rsi, rbx	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x40008c1	          0x4c89e7	                            mov rdi, r12	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x40008c4	      0xe8cef7ffff	              call sym.match_ref_pattern	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x40008c9	            0x85c0	                           test eax, eax	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x40008cb	     0xf8587000000	                           jne 0x4000958	       271	refs.c	FUNCTION_14	FUNCTION_1	CALL_1
0x40008d1	        0x4883c310	                           add rbx, 0x10	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x40008d5	            0x7411	                            je 0x40008e8	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x40008d7	        0x418b4508	                mov eax, dword [r13 + 8]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x40008db	        0x48c1e004	                              shl rax, 4	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x40008df	        0x49034500	                    add rax, qword [r13]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x40008e3	          0x4839c3	                            cmp rbx, rax	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x40008e6	            0x72d6	                            jb 0x40008be	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x40008e8	          0x4885ed	                           test rbp, rbp	       276	refs.c	FUNCTION_14	IF_2
0x40008eb	            0x7472	                            je 0x400095f	       276	refs.c	FUNCTION_14	IF_2
0x40008ed	          0x8b5508	                mov edx, dword [rbp + 8]	       276	refs.c	FUNCTION_14	IF_2
0x40008f0	      0xb801000000	                              mov eax, 1	       288	refs.c	FUNCTION_14
0x40008f5	            0x85d2	                           test edx, edx	       276	refs.c	FUNCTION_14	IF_2
0x40008f7	            0x746b	                            je 0x4000964	       276	refs.c	FUNCTION_14	IF_2
0x40008f9	        0x488b5d00	                    mov rbx, qword [rbp]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x40008fd	          0x4885db	                           test rbx, rbx	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000900	            0x743a	                            je 0x400093c	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000902	            0x89d2	                            mov edx, edx	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000904	        0x48c1e204	                              shl rdx, 4	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000908	          0x4801da	                            add rdx, rbx	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x400090b	          0x4839d3	                            cmp rbx, rdx	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x400090e	            0x7333	                           jae 0x4000943	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000910	          0x4889de	                            mov rsi, rbx	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x4000913	          0x4c89e7	                            mov rdi, r12	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x4000916	      0xe87cf7ffff	              call sym.match_ref_pattern	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x400091b	            0x85c0	                           test eax, eax	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x400091d	            0x752b	                           jne 0x400094a	       279	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1	CALL_1
0x400091f	        0x4883c310	                           add rbx, 0x10	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000923	            0x742c	                            je 0x4000951	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000925	          0x8b4508	                mov eax, dword [rbp + 8]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000928	        0x48c1e004	                              shl rax, 4	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x400092c	        0x48034500	                    add rax, qword [rbp]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000930	          0x4839c3	                            cmp rbx, rax	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000933	            0x72db	                            jb 0x4000910	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000935	      0xb800000000	                              mov eax, 0	       277	refs.c	FUNCTION_14	IF_2
0x400093a	            0xeb28	                           jmp 0x4000964	       277	refs.c	FUNCTION_14	IF_2
0x400093c	      0xb800000000	                              mov eax, 0	       277	refs.c	FUNCTION_14	IF_2
0x4000941	            0xeb21	                           jmp 0x4000964	       277	refs.c	FUNCTION_14	IF_2
0x4000943	      0xb800000000	                              mov eax, 0	       277	refs.c	FUNCTION_14	IF_2
0x4000948	            0xeb1a	                           jmp 0x4000964	       277	refs.c	FUNCTION_14	IF_2
0x400094a	      0xb801000000	                              mov eax, 1	       280	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1
0x400094f	            0xeb13	                           jmp 0x4000964	       280	refs.c	FUNCTION_14	IF_2	FUNCTION_2	IF_1
0x4000951	      0xb800000000	                              mov eax, 0	       277	refs.c	FUNCTION_14	IF_2
0x4000956	            0xeb0c	                           jmp 0x4000964	       277	refs.c	FUNCTION_14	IF_2
0x4000958	      0xb800000000	                              mov eax, 0	       272	refs.c	FUNCTION_14	FUNCTION_1	IF_1
0x400095d	            0xeb05	                           jmp 0x4000964	       272	refs.c	FUNCTION_14	FUNCTION_1	IF_1
0x400095f	      0xb801000000	                              mov eax, 1	       288	refs.c	FUNCTION_14
0x4000964	        0x4883c408	                              add rsp, 8	       289	refs.c	FUNCTION_14
0x4000968	              0x5b	                                 pop rbx	       289	refs.c	FUNCTION_14
0x4000969	              0x5d	                                 pop rbp	       289	refs.c	FUNCTION_14
0x400096a	            0x415c	                                 pop r12	       289	refs.c	FUNCTION_14
0x400096c	            0x415d	                                 pop r13	       289	refs.c	FUNCTION_14
0x400096e	              0xc3	                                     ret	       289	refs.c	FUNCTION_14
ref_transaction_delete	functions,0:ELSE,0:DO,0:IF,1:WHILE,0:CALL,3:FOR,0:SWITCH,0	40
0x40012ff	            0x4157	                                push r15	      1048	refs.c	FUNCTION_57
0x4001301	            0x4156	                                push r14	      1048	refs.c	FUNCTION_57
0x4001303	            0x4155	                                push r13	      1048	refs.c	FUNCTION_57
0x4001305	            0x4154	                                push r12	      1048	refs.c	FUNCTION_57
0x4001307	              0x55	                                push rbp	      1048	refs.c	FUNCTION_57
0x4001308	              0x53	                                push rbx	      1048	refs.c	FUNCTION_57
0x4001309	        0x4883ec08	                              sub rsp, 8	      1048	refs.c	FUNCTION_57
0x400130d	          0x4889fd	                            mov rbp, rdi	      1048	refs.c	FUNCTION_57
0x4001310	          0x4989f4	                            mov r12, rsi	      1048	refs.c	FUNCTION_57
0x4001313	          0x4889d3	                            mov rbx, rdx	      1048	refs.c	FUNCTION_57
0x4001316	          0x4189cd	                           mov r13d, ecx	      1048	refs.c	FUNCTION_57
0x4001319	          0x4d89c6	                             mov r14, r8	      1048	refs.c	FUNCTION_57
0x400131c	          0x4d89cf	                             mov r15, r9	      1048	refs.c	FUNCTION_57
0x400131f	          0x4885d2	                           test rdx, rdx	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x4001322	            0x7420	                            je 0x4001344	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x4001324	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_171	CALL_1
0x4001329	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_171	CALL_1
0x400132e	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_171	CALL_1
0x4001331	      0xe800000000	                          call 0x4001336	       975	cache.h	FUNCTION_171	CALL_1
0x4001336	            0x85c0	                           test eax, eax	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x4001338	            0x750a	                           jne 0x4001344	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x400133a	      0xbf00000000	                              mov edi, 0	      1050	refs.c	FUNCTION_57	CALL_2
0x400133f	      0xe800000000	                          call 0x4001344	      1050	refs.c	FUNCTION_57	CALL_2
0x4001344	        0x4883ec08	                              sub rsp, 8	      1051	refs.c	FUNCTION_57	CALL_3
0x4001348	            0x4157	                                push r15	      1051	refs.c	FUNCTION_57	CALL_3
0x400134a	          0x4d89f1	                             mov r9, r14	      1051	refs.c	FUNCTION_57	CALL_3
0x400134d	          0x4589e8	                           mov r8d, r13d	      1051	refs.c	FUNCTION_57	CALL_3
0x4001350	          0x4889d9	                            mov rcx, rbx	      1051	refs.c	FUNCTION_57	CALL_3
0x4001353	      0xba00000000	                              mov edx, 0	      1051	refs.c	FUNCTION_57	CALL_3
0x4001358	          0x4c89e6	                            mov rsi, r12	      1051	refs.c	FUNCTION_57	CALL_3
0x400135b	          0x4889ef	                            mov rdi, rbp	      1051	refs.c	FUNCTION_57	CALL_3
0x400135e	      0xe800000000	                          call 0x4001363	      1051	refs.c	FUNCTION_57	CALL_3
0x4001363	        0x4883c418	                           add rsp, 0x18	      1054	refs.c	FUNCTION_57
0x4001367	              0x5b	                                 pop rbx	      1054	refs.c	FUNCTION_57
0x4001368	              0x5d	                                 pop rbp	      1054	refs.c	FUNCTION_57
0x4001369	            0x415c	                                 pop r12	      1054	refs.c	FUNCTION_57
0x400136b	            0x415d	                                 pop r13	      1054	refs.c	FUNCTION_57
0x400136d	            0x415e	                                 pop r14	      1054	refs.c	FUNCTION_57
0x400136f	            0x415f	                                 pop r15	      1054	refs.c	FUNCTION_57
0x4001371	              0xc3	                                     ret	      1054	refs.c	FUNCTION_57
resolve_ref_unsafe	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,2:FOR,0:SWITCH,0	23
0x400216b	            0x4155	                                push r13	      1573	refs.c	FUNCTION_83
0x400216d	            0x4154	                                push r12	      1573	refs.c	FUNCTION_83
0x400216f	              0x55	                                push rbp	      1573	refs.c	FUNCTION_83
0x4002170	              0x53	                                push rbx	      1573	refs.c	FUNCTION_83
0x4002171	        0x4883ec08	                              sub rsp, 8	      1573	refs.c	FUNCTION_83
0x4002175	          0x4889fb	                            mov rbx, rdi	      1573	refs.c	FUNCTION_83
0x4002178	            0x89f5	                            mov ebp, esi	      1573	refs.c	FUNCTION_83
0x400217a	          0x4989d4	                            mov r12, rdx	      1573	refs.c	FUNCTION_83
0x400217d	          0x4989cd	                            mov r13, rcx	      1573	refs.c	FUNCTION_83
0x4002180	    0x488b3d000000	            mov rdi, qword [0x04002187] 	      1574	refs.c	FUNCTION_83	CALL_2
0x4002187	      0xe800000000	                          call 0x400218c	      1574	refs.c	FUNCTION_83	CALL_2
0x400218c	          0x4d89e8	                             mov r8, r13	      1574	refs.c	FUNCTION_83	CALL_2
0x400218f	          0x4c89e1	                            mov rcx, r12	      1574	refs.c	FUNCTION_83	CALL_2
0x4002192	            0x89ea	                            mov edx, ebp	      1574	refs.c	FUNCTION_83	CALL_2
0x4002194	          0x4889de	                            mov rsi, rbx	      1574	refs.c	FUNCTION_83	CALL_2
0x4002197	          0x4889c7	                            mov rdi, rax	      1574	refs.c	FUNCTION_83	CALL_2
0x400219a	      0xe800000000	                          call 0x400219f	      1574	refs.c	FUNCTION_83	CALL_2
0x400219f	        0x4883c408	                              add rsp, 8	      1576	refs.c	FUNCTION_83
0x40021a3	              0x5b	                                 pop rbx	      1576	refs.c	FUNCTION_83
0x40021a4	              0x5d	                                 pop rbp	      1576	refs.c	FUNCTION_83
0x40021a5	            0x415c	                                 pop r12	      1576	refs.c	FUNCTION_83
0x40021a7	            0x415d	                                 pop r13	      1576	refs.c	FUNCTION_83
0x40021a9	              0xc3	                                     ret	      1576	refs.c	FUNCTION_83
refs_for_each_reflog_ent_reverse	functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,1:FOR,0:SWITCH,0	5
0x40036ff	        0x4883ec08	                              sub rsp, 8	      2032	refs.c	FUNCTION_106
0x4003703	          0x488b07	                    mov rax, qword [rdi]	      2033	refs.c	FUNCTION_106	CALL_1
0x4003706	    0xff9088000000	                 call qword [rax + 0x88]	      2033	refs.c	FUNCTION_106	CALL_1
0x400370c	        0x4883c408	                              add rsp, 8	      2035	refs.c	FUNCTION_106
0x4003710	              0xc3	                                     ret	      2035	refs.c	FUNCTION_106
find_descendant_ref	functions,0:ELSE,0:DO,0:IF,3:WHILE,0:CALL,3:FOR,1:SWITCH,0	53
0x4001566	          0x4885f6	                           test rsi, rsi	      1284	refs.c	FUNCTION_64	IF_1
0x4001569	            0x7468	                            je 0x40015d3	      1284	refs.c	FUNCTION_64	IF_1
0x400156b	            0x4156	                                push r14	      1281	refs.c	FUNCTION_64
0x400156d	            0x4155	                                push r13	      1281	refs.c	FUNCTION_64
0x400156f	            0x4154	                                push r12	      1281	refs.c	FUNCTION_64
0x4001571	              0x55	                                push rbp	      1281	refs.c	FUNCTION_64
0x4001572	              0x53	                                push rbx	      1281	refs.c	FUNCTION_64
0x4001573	          0x4989d4	                            mov r12, rdx	      1281	refs.c	FUNCTION_64
0x4001576	          0x4889f5	                            mov rbp, rsi	      1281	refs.c	FUNCTION_64
0x4001579	          0x4989fd	                            mov r13, rdi	      1281	refs.c	FUNCTION_64
0x400157c	      0xba00000000	                              mov edx, 0	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4001581	          0x4889fe	                            mov rsi, rdi	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4001584	          0x4889ef	                            mov rdi, rbp	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4001587	      0xe800000000	                          call 0x400158c	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x400158c	            0x89c3	                            mov ebx, eax	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x400158e	          0x394508	                cmp dword [rbp + 8], eax	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4001591	            0x7646	                           jbe 0x40015d9	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x4001593	          0x4863c3	                         movsxd rax, ebx	      1295	refs.c	FUNCTION_64	FOR_1
0x4001596	        0x48c1e004	                              shl rax, 4	      1295	refs.c	FUNCTION_64	FOR_1
0x400159a	        0x48034500	                    add rax, qword [rbp]	      1295	refs.c	FUNCTION_64	FOR_1
0x400159e	          0x4c8b30	                    mov r14, qword [rax]	      1295	refs.c	FUNCTION_64	FOR_1
0x40015a1	          0x4c89ee	                            mov rsi, r13	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40015a4	          0x4c89f7	                            mov rdi, r14	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40015a7	      0xe800000000	                          call 0x40015ac	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40015ac	            0x85c0	                           test eax, eax	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40015ae	            0x7430	                            je 0x40015e0	      1297	refs.c	FUNCTION_64	FOR_1	IF_2	CALL_2
0x40015b0	          0x4d85e4	                           test r12, r12	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40015b3	            0x7432	                            je 0x40015e7	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40015b5	          0x4c89f6	                            mov rsi, r14	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40015b8	          0x4c89e7	                            mov rdi, r12	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40015bb	      0xe800000000	                          call 0x40015c0	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40015c0	            0x85c0	                           test eax, eax	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40015c2	            0x7428	                            je 0x40015ec	      1300	refs.c	FUNCTION_64	FOR_1	IF_3	CALL_3
0x40015c4	          0x83c301	                              add ebx, 1	      1294	refs.c	FUNCTION_64	FOR_1
0x40015c7	          0x395d08	                cmp dword [rbp + 8], ebx	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x40015ca	            0x77c7	                            ja 0x4001593	      1293	refs.c	FUNCTION_64	FOR_1	CALL_1
0x40015cc	      0xb800000000	                              mov eax, 0	      1303	refs.c	FUNCTION_64
0x40015d1	            0xeb1c	                           jmp 0x40015ef	      1303	refs.c	FUNCTION_64
0x40015d3	      0xb800000000	                              mov eax, 0	      1285	refs.c	FUNCTION_64	IF_1
0x40015d8	              0xc3	                                     ret	      1304	refs.c	FUNCTION_64
0x40015d9	      0xb800000000	                              mov eax, 0	      1303	refs.c	FUNCTION_64
0x40015de	            0xeb0f	                           jmp 0x40015ef	      1303	refs.c	FUNCTION_64
0x40015e0	      0xb800000000	                              mov eax, 0	      1303	refs.c	FUNCTION_64
0x40015e5	            0xeb08	                           jmp 0x40015ef	      1303	refs.c	FUNCTION_64
0x40015e7	          0x4c89f0	                            mov rax, r14	      1295	refs.c	FUNCTION_64	FOR_1
0x40015ea	            0xeb03	                           jmp 0x40015ef	      1295	refs.c	FUNCTION_64	FOR_1
0x40015ec	          0x4c89f0	                            mov rax, r14	      1295	refs.c	FUNCTION_64	FOR_1
0x40015ef	              0x5b	                                 pop rbx	      1304	refs.c	FUNCTION_64
0x40015f0	              0x5d	                                 pop rbp	      1304	refs.c	FUNCTION_64
0x40015f1	            0x415c	                                 pop r12	      1304	refs.c	FUNCTION_64
0x40015f3	            0x415d	                                 pop r13	      1304	refs.c	FUNCTION_64
0x40015f5	            0x415e	                                 pop r14	      1304	refs.c	FUNCTION_64
0x40015f7	              0xc3	                                     ret	      1304	refs.c	FUNCTION_64
for_each_glob_ref_in	functions,0:ELSE,1:DO,0:IF,3:WHILE,0:CALL,9:FOR,0:SWITCH,0	127
0x4001cee	            0x4154	                                push r12	       441	refs.c	FUNCTION_28
0x4001cf0	              0x55	                                push rbp	       441	refs.c	FUNCTION_28
0x4001cf1	              0x53	                                push rbx	       441	refs.c	FUNCTION_28
0x4001cf2	        0x4883ec40	                           sub rsp, 0x40	       441	refs.c	FUNCTION_28
0x4001cf6	          0x4889fd	                            mov rbp, rdi	       441	refs.c	FUNCTION_28
0x4001cf9	          0x4889f3	                            mov rbx, rsi	       441	refs.c	FUNCTION_28
0x4001cfc	          0x4989cc	                            mov r12, rcx	       441	refs.c	FUNCTION_28
0x4001cff	    0x64488b042528	                mov rax, qword fs:[0x28]	       441	refs.c	FUNCTION_28
0x4001d08	      0x4889442438	             mov qword [rsp + 0x38], rax	       441	refs.c	FUNCTION_28
0x4001d0d	            0x31c0	                            xor eax, eax	       441	refs.c	FUNCTION_28
0x4001d0f	    0x48c704240000	                      mov qword [rsp], 0	       442	refs.c	FUNCTION_28
0x4001d17	    0x48c744240800	                  mov qword [rsp + 8], 0	       442	refs.c	FUNCTION_28
0x4001d20	    0x48c744241000	               mov qword [rsp + 0x10], 0	       442	refs.c	FUNCTION_28
0x4001d29	          0x4885d2	                           test rdx, rdx	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4001d2c	     0xf8570010000	                           jne 0x4001ea2	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4001d32	      0xbe00000000	                              mov esi, 0	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4001d37	          0x4889df	                            mov rdi, rbx	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4001d3a	      0xe800000000	                          call 0x4001d3f	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4001d3f	            0x85c0	                           test eax, eax	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4001d41	            0x7512	                           jne 0x4001d55	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4001d43	      0xba05000000	                              mov edx, 5	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001d48	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001d4d	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001d50	      0xe800000000	                          call 0x4001d55	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001d55	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001d5a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001d61	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001d64	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001d66	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001d69	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001d6d	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001d70	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001d73	      0xe800000000	                          call 0x4001d78	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001d78	           0xfb603	                   movzx eax, byte [rbx]	      1114	string2.h	FUNCTION_249	WHILE_1
0x4001d7b	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_249	WHILE_1
0x4001d7d	            0x7442	                            je 0x4001dc1	      1114	string2.h	FUNCTION_249	WHILE_1
0x4001d7f	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_249	WHILE_1
0x4001d82	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_249	WHILE_1
0x4001d84	            0x7714	                            ja 0x4001d9a	      1114	string2.h	FUNCTION_249	WHILE_1
0x4001d86	    0x48ba01002000	             movabs rdx, 0x2000000200001	      1115	string2.h	FUNCTION_249	WHILE_1
0x4001d90	        0x480fa3c2	                             bt rdx, rax	      1115	string2.h	FUNCTION_249	WHILE_1
0x4001d94	     0xf8230010000	                            jb 0x4001eca	      1115	string2.h	FUNCTION_249	WHILE_1
0x4001d9a	    0x48ba01002000	             movabs rdx, 0x2000000200001	      1115	string2.h	FUNCTION_249	WHILE_1
0x4001da4	        0x4883c301	                              add rbx, 1	      1116	string2.h	FUNCTION_249	WHILE_1
0x4001da8	           0xfb603	                   movzx eax, byte [rbx]	      1114	string2.h	FUNCTION_249	WHILE_1
0x4001dab	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_249	WHILE_1
0x4001dad	            0x7412	                            je 0x4001dc1	      1114	string2.h	FUNCTION_249	WHILE_1
0x4001daf	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_249	WHILE_1
0x4001db2	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_249	WHILE_1
0x4001db4	            0x77ee	                            ja 0x4001da4	      1114	string2.h	FUNCTION_249	WHILE_1
0x4001db6	        0x480fa3c2	                             bt rdx, rax	      1115	string2.h	FUNCTION_249	WHILE_1
0x4001dba	            0x73e8	                           jae 0x4001da4	      1115	string2.h	FUNCTION_249	WHILE_1
0x4001dbc	      0xe909010000	                           jmp 0x4001eca	      1115	string2.h	FUNCTION_249	WHILE_1
0x4001dc1	      0x488b442408	                mov rax, qword [rsp + 8]	       595	strbuf.h	FUNCTION_200	IF_1
0x4001dc6	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_200	IF_1
0x4001dc9	            0x7450	                            je 0x4001e1b	       595	strbuf.h	FUNCTION_200	IF_1
0x4001dcb	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       595	strbuf.h	FUNCTION_200	IF_1
0x4001dd0	      0x807c02ff2f	         cmp byte [rdx + rax - 1], 0x2f 	       595	strbuf.h	FUNCTION_200	IF_1
0x4001dd5	            0x7444	                            je 0x4001e1b	       595	strbuf.h	FUNCTION_200	IF_1
0x4001dd7	        0x488b1424	                    mov rdx, qword [rsp]	       141	strbuf.h	FUNCTION_192
0x4001ddb	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_192
0x4001dde	            0x7409	                            je 0x4001de9	       141	strbuf.h	FUNCTION_192
0x4001de0	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_194	IF_1	CALL_1
0x4001de4	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_194	IF_1	CALL_1
0x4001de7	            0x750d	                           jne 0x4001df6	       227	strbuf.h	FUNCTION_194	IF_1	CALL_1
0x4001de9	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_194	CALL_2
0x4001dee	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_194	CALL_2
0x4001df1	      0xe800000000	                          call 0x4001df6	       228	strbuf.h	FUNCTION_194	CALL_2
0x4001df6	      0x488b442408	                mov rax, qword [rsp + 8]	       229	strbuf.h	FUNCTION_194
0x4001dfb	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_194
0x4001dff	      0x4889542408	                mov qword [rsp + 8], rdx	       229	strbuf.h	FUNCTION_194
0x4001e04	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_194
0x4001e09	        0xc604022f	              mov byte [rdx + rax], 0x2f	       229	strbuf.h	FUNCTION_194
0x4001e0d	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_194
0x4001e12	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_194
0x4001e17	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_194
0x4001e1b	        0x488b0424	                    mov rax, qword [rsp]	       141	strbuf.h	FUNCTION_192
0x4001e1f	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_192
0x4001e22	            0x740b	                            je 0x4001e2f	       141	strbuf.h	FUNCTION_192
0x4001e24	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_194	IF_1	CALL_1
0x4001e28	      0x4839442408	                cmp qword [rsp + 8], rax	       227	strbuf.h	FUNCTION_194	IF_1	CALL_1
0x4001e2d	            0x750d	                           jne 0x4001e3c	       227	strbuf.h	FUNCTION_194	IF_1	CALL_1
0x4001e2f	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_194	CALL_2
0x4001e34	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_194	CALL_2
0x4001e37	      0xe800000000	                          call 0x4001e3c	       228	strbuf.h	FUNCTION_194	CALL_2
0x4001e3c	      0x488b442408	                mov rax, qword [rsp + 8]	       229	strbuf.h	FUNCTION_194
0x4001e41	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_194
0x4001e45	      0x4889542408	                mov qword [rsp + 8], rdx	       229	strbuf.h	FUNCTION_194
0x4001e4a	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_194
0x4001e4f	        0xc604022a	              mov byte [rdx + rax], 0x2a	       229	strbuf.h	FUNCTION_194
0x4001e53	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_194
0x4001e58	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_194
0x4001e5d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_194
0x4001e61	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       459	refs.c	FUNCTION_28
0x4001e66	      0x4889442420	             mov qword [rsp + 0x20], rax	       459	refs.c	FUNCTION_28
0x4001e6b	      0x48896c2428	             mov qword [rsp + 0x28], rbp	       460	refs.c	FUNCTION_28
0x4001e70	      0x4c89642430	             mov qword [rsp + 0x30], r12	       461	refs.c	FUNCTION_28
0x4001e75	      0x488d742420	                   lea rsi, [rsp + 0x20]	       462	refs.c	FUNCTION_28	CALL_8
0x4001e7a	      0xbf00000000	                              mov edi, 0	       462	refs.c	FUNCTION_28	CALL_8
0x4001e7f	      0xe800000000	                          call 0x4001e84	       462	refs.c	FUNCTION_28	CALL_8
0x4001e84	            0x89c3	                            mov ebx, eax	       462	refs.c	FUNCTION_28	CALL_8
0x4001e86	          0x4889e7	                            mov rdi, rsp	       464	refs.c	FUNCTION_28	CALL_9
0x4001e89	      0xe800000000	                          call 0x4001e8e	       464	refs.c	FUNCTION_28	CALL_9
0x4001e8e	            0x89d8	                            mov eax, ebx	       466	refs.c	FUNCTION_28
0x4001e90	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       466	refs.c	FUNCTION_28
0x4001e95	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       466	refs.c	FUNCTION_28
0x4001e9e	            0x7439	                            je 0x4001ed9	       466	refs.c	FUNCTION_28
0x4001ea0	            0xeb32	                           jmp 0x4001ed4	       466	refs.c	FUNCTION_28
0x4001ea2	          0x4889d6	                            mov rsi, rdx	       466	refs.c	FUNCTION_28
0x4001ea5	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001eaa	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001eb1	          0x4889d7	                            mov rdi, rdx	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001eb4	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001eb6	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001eb9	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001ebd	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001ec0	      0xe800000000	                          call 0x4001ec5	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001ec5	      0xe98bfeffff	                           jmp 0x4001d55	       279	strbuf.h	FUNCTION_195	CALL_2
0x4001eca	          0x4885db	                           test rbx, rbx	       452	refs.c	FUNCTION_28	IF_3	CALL_5
0x4001ecd	            0x7592	                           jne 0x4001e61	       452	refs.c	FUNCTION_28	IF_3	CALL_5
0x4001ecf	      0xe9edfeffff	                           jmp 0x4001dc1	       452	refs.c	FUNCTION_28	IF_3	CALL_5
0x4001ed4	      0xe800000000	                          call 0x4001ed9	       466	refs.c	FUNCTION_28
0x4001ed9	        0x4883c440	                           add rsp, 0x40	       466	refs.c	FUNCTION_28
0x4001edd	              0x5b	                                 pop rbx	       466	refs.c	FUNCTION_28
0x4001ede	              0x5d	                                 pop rbp	       466	refs.c	FUNCTION_28
0x4001edf	            0x415c	                                 pop r12	       466	refs.c	FUNCTION_28
0x4001ee1	              0xc3	                                     ret	       466	refs.c	FUNCTION_28
