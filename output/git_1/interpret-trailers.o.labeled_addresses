option_parse_trailer	WHILE,0:FOR,0:functions,0:DO,0:CALL,3:IF,2:SWITCH,0:ELSE,0	43
0x40001f1	              0x55	                                push rbp	        55	interpret-trailers.c	FUNCTION_5
0x40001f2	          0x4889e5	                            mov rbp, rsp	        55	interpret-trailers.c	FUNCTION_5
0x40001f5	        0x4883ec30	                           sub rsp, 0x30	        55	interpret-trailers.c	FUNCTION_5
0x40001f9	        0x48897de8	             mov qword [rbp - 0x18], rdi	        55	interpret-trailers.c	FUNCTION_5
0x40001fd	        0x488975e0	             mov qword [rbp - 0x20], rsi	        55	interpret-trailers.c	FUNCTION_5
0x4000201	          0x8955dc	             mov dword [rbp - 0x24], edx	        55	interpret-trailers.c	FUNCTION_5
0x4000204	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        56	interpret-trailers.c	FUNCTION_5
0x4000208	        0x488b4010	            mov rax, qword [rax + 0x10] 	        56	interpret-trailers.c	FUNCTION_5
0x400020c	        0x488945f0	             mov qword [rbp - 0x10], rax	        56	interpret-trailers.c	FUNCTION_5
0x4000210	        0x837ddc00	               cmp dword [rbp - 0x24], 0	        59	interpret-trailers.c	FUNCTION_5	IF_1
0x4000214	            0x7413	                            je 0x4000229	        59	interpret-trailers.c	FUNCTION_5	IF_1
0x4000216	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        60	interpret-trailers.c	FUNCTION_5	IF_1	CALL_1
0x400021a	          0x4889c7	                            mov rdi, rax	        60	interpret-trailers.c	FUNCTION_5	IF_1	CALL_1
0x400021d	      0xe86bffffff	             call sym.new_trailers_clear	        60	interpret-trailers.c	FUNCTION_5	IF_1	CALL_1
0x4000222	      0xb800000000	                              mov eax, 0	        61	interpret-trailers.c	FUNCTION_5	IF_1
0x4000227	            0xeb67	                           jmp 0x4000290	        61	interpret-trailers.c	FUNCTION_5	IF_1
0x4000229	      0x48837de000	               cmp qword [rbp - 0x20], 0	        64	interpret-trailers.c	FUNCTION_5	IF_2
0x400022e	            0x7507	                           jne 0x4000237	        64	interpret-trailers.c	FUNCTION_5	IF_2
0x4000230	      0xb8ffffffff	                     mov eax, 0xffffffff	        65	interpret-trailers.c	FUNCTION_5	IF_2
0x4000235	            0xeb59	                           jmp 0x4000290	        65	interpret-trailers.c	FUNCTION_5	IF_2
0x4000237	      0xbf28000000	                           mov edi, 0x28	        67	interpret-trailers.c	FUNCTION_5	CALL_2
0x400023c	      0xe800000000	                          call 0x4000241	        67	interpret-trailers.c	FUNCTION_5	CALL_2
0x4000241	        0x488945f8	                mov qword [rbp - 8], rax	        67	interpret-trailers.c	FUNCTION_5	CALL_2
0x4000245	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	interpret-trailers.c	FUNCTION_5
0x4000249	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        68	interpret-trailers.c	FUNCTION_5
0x400024d	        0x48895010	             mov qword [rax + 0x10], rdx	        68	interpret-trailers.c	FUNCTION_5
0x4000251	    0x8b1500000000	            mov edx, dword [0x04000257] 	        69	interpret-trailers.c	FUNCTION_5
0x4000257	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	interpret-trailers.c	FUNCTION_5
0x400025b	          0x895018	             mov dword [rax + 0x18], edx	        69	interpret-trailers.c	FUNCTION_5
0x400025e	    0x8b1500000000	            mov edx, dword [0x04000264] 	        70	interpret-trailers.c	FUNCTION_5
0x4000264	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	interpret-trailers.c	FUNCTION_5
0x4000268	          0x89501c	             mov dword [rax + 0x1c], edx	        70	interpret-trailers.c	FUNCTION_5
0x400026b	    0x8b1500000000	            mov edx, dword [0x04000271] 	        71	interpret-trailers.c	FUNCTION_5
0x4000271	        0x488b45f8	                mov rax, qword [rbp - 8]	        71	interpret-trailers.c	FUNCTION_5
0x4000275	          0x895020	             mov dword [rax + 0x20], edx	        71	interpret-trailers.c	FUNCTION_5
0x4000278	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	interpret-trailers.c	FUNCTION_5	CALL_3
0x400027c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        72	interpret-trailers.c	FUNCTION_5	CALL_3
0x4000280	          0x4889d6	                            mov rsi, rdx	        72	interpret-trailers.c	FUNCTION_5	CALL_3
0x4000283	          0x4889c7	                            mov rdi, rax	        72	interpret-trailers.c	FUNCTION_5	CALL_3
0x4000286	      0xe8b5fdffff	                  call sym.list_add_tail	        72	interpret-trailers.c	FUNCTION_5	CALL_3
0x400028b	      0xb800000000	                              mov eax, 0	        73	interpret-trailers.c	FUNCTION_5
0x4000290	              0xc9	                                   leave	        74	interpret-trailers.c	FUNCTION_5
0x4000291	              0xc3	                                     ret	        74	interpret-trailers.c	FUNCTION_5
new_trailers_clear	WHILE,0:FOR,0:functions,0:DO,0:CALL,2:IF,0:SWITCH,0:ELSE,0	30
0x400018d	              0x55	                                push rbp	        42	interpret-trailers.c	FUNCTION_4
0x400018e	          0x4889e5	                            mov rbp, rsp	        42	interpret-trailers.c	FUNCTION_4
0x4000191	        0x4883ec30	                           sub rsp, 0x30	        42	interpret-trailers.c	FUNCTION_4
0x4000195	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        42	interpret-trailers.c	FUNCTION_4
0x4000199	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        46	interpret-trailers.c	FUNCTION_4
0x400019d	          0x488b00	                    mov rax, qword [rax]	        46	interpret-trailers.c	FUNCTION_4
0x40001a0	        0x488945e8	             mov qword [rbp - 0x18], rax	        46	interpret-trailers.c	FUNCTION_4
0x40001a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        46	interpret-trailers.c	FUNCTION_4
0x40001a8	          0x488b00	                    mov rax, qword [rax]	        46	interpret-trailers.c	FUNCTION_4
0x40001ab	        0x488945f0	             mov qword [rbp - 0x10], rax	        46	interpret-trailers.c	FUNCTION_4
0x40001af	            0xeb33	                           jmp 0x40001e4	        46	interpret-trailers.c	FUNCTION_4
0x40001b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        47	interpret-trailers.c	FUNCTION_4
0x40001b5	        0x488945f8	                mov qword [rbp - 8], rax	        47	interpret-trailers.c	FUNCTION_4
0x40001b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        48	interpret-trailers.c	FUNCTION_4	CALL_1
0x40001bd	          0x4889c7	                            mov rdi, rax	        48	interpret-trailers.c	FUNCTION_4	CALL_1
0x40001c0	      0xe8e6feffff	                       call sym.list_del	        48	interpret-trailers.c	FUNCTION_4	CALL_1
0x40001c5	        0x488b45f8	                mov rax, qword [rbp - 8]	        49	interpret-trailers.c	FUNCTION_4	CALL_2
0x40001c9	          0x4889c7	                            mov rdi, rax	        49	interpret-trailers.c	FUNCTION_4	CALL_2
0x40001cc	      0xe800000000	                          call 0x40001d1	        49	interpret-trailers.c	FUNCTION_4	CALL_2
0x40001d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        46	interpret-trailers.c	FUNCTION_4
0x40001d5	        0x488945e8	             mov qword [rbp - 0x18], rax	        46	interpret-trailers.c	FUNCTION_4
0x40001d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        46	interpret-trailers.c	FUNCTION_4
0x40001dd	          0x488b00	                    mov rax, qword [rax]	        46	interpret-trailers.c	FUNCTION_4
0x40001e0	        0x488945f0	             mov qword [rbp - 0x10], rax	        46	interpret-trailers.c	FUNCTION_4
0x40001e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        46	interpret-trailers.c	FUNCTION_4
0x40001e8	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	        46	interpret-trailers.c	FUNCTION_4
0x40001ec	            0x75c3	                           jne 0x40001b1	        46	interpret-trailers.c	FUNCTION_4
0x40001ee	              0x90	                                     nop	        51	interpret-trailers.c	FUNCTION_4
0x40001ef	              0xc9	                                   leave	        51	interpret-trailers.c	FUNCTION_4
0x40001f0	              0xc3	                                     ret	        51	interpret-trailers.c	FUNCTION_4
list_add_tail	WHILE,0:FOR,0:functions,0:DO,0:CALL,0:IF,0:SWITCH,0:ELSE,0	21
0x4000040	              0x55	                                push rbp	        62	list.h	FUNCTION_9
0x4000041	          0x4889e5	                            mov rbp, rsp	        62	list.h	FUNCTION_9
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	        62	list.h	FUNCTION_9
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	        62	list.h	FUNCTION_9
0x400004c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        63	list.h	FUNCTION_9
0x4000050	        0x488b4008	                mov rax, qword [rax + 8]	        63	list.h	FUNCTION_9
0x4000054	        0x488b55f8	                mov rdx, qword [rbp - 8]	        63	list.h	FUNCTION_9
0x4000058	          0x488910	                    mov qword [rax], rdx	        63	list.h	FUNCTION_9
0x400005b	        0x488b45f8	                mov rax, qword [rbp - 8]	        64	list.h	FUNCTION_9
0x400005f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        64	list.h	FUNCTION_9
0x4000063	          0x488910	                    mov qword [rax], rdx	        64	list.h	FUNCTION_9
0x4000066	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        65	list.h	FUNCTION_9
0x400006a	        0x488b5008	                mov rdx, qword [rax + 8]	        65	list.h	FUNCTION_9
0x400006e	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	list.h	FUNCTION_9
0x4000072	        0x48895008	                mov qword [rax + 8], rdx	        65	list.h	FUNCTION_9
0x4000076	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        66	list.h	FUNCTION_9
0x400007a	        0x488b55f8	                mov rdx, qword [rbp - 8]	        66	list.h	FUNCTION_9
0x400007e	        0x48895008	                mov qword [rax + 8], rdx	        66	list.h	FUNCTION_9
0x4000082	              0x90	                                     nop	        67	list.h	FUNCTION_9
0x4000083	              0x5d	                                 pop rbp	        67	list.h	FUNCTION_9
0x4000084	              0xc3	                                     ret	        67	list.h	FUNCTION_9
list_del	WHILE,0:FOR,0:functions,0:DO,0:CALL,1:IF,0:SWITCH,0:ELSE,0	14
0x40000ab	              0x55	                                push rbp	        78	list.h	FUNCTION_11
0x40000ac	          0x4889e5	                            mov rbp, rsp	        78	list.h	FUNCTION_11
0x40000af	        0x4883ec08	                              sub rsp, 8	        78	list.h	FUNCTION_11
0x40000b3	        0x48897df8	                mov qword [rbp - 8], rdi	        78	list.h	FUNCTION_11
0x40000b7	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	list.h	FUNCTION_11	CALL_1
0x40000bb	          0x488b10	                    mov rdx, qword [rax]	        79	list.h	FUNCTION_11	CALL_1
0x40000be	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	list.h	FUNCTION_11	CALL_1
0x40000c2	        0x488b4008	                mov rax, qword [rax + 8]	        79	list.h	FUNCTION_11	CALL_1
0x40000c6	          0x4889d6	                            mov rsi, rdx	        79	list.h	FUNCTION_11	CALL_1
0x40000c9	          0x4889c7	                            mov rdi, rax	        79	list.h	FUNCTION_11	CALL_1
0x40000cc	      0xe8b4ffffff	                     call sym.__list_del	        79	list.h	FUNCTION_11	CALL_1
0x40000d1	              0x90	                                     nop	        80	list.h	FUNCTION_11
0x40000d2	              0xc9	                                   leave	        80	list.h	FUNCTION_11
0x40000d3	              0xc3	                                     ret	        80	list.h	FUNCTION_11
__list_del	WHILE,0:FOR,0:functions,0:DO,0:CALL,0:IF,0:SWITCH,0:ELSE,0	13
0x4000085	              0x55	                                push rbp	        71	list.h	FUNCTION_10
0x4000086	          0x4889e5	                            mov rbp, rsp	        71	list.h	FUNCTION_10
0x4000089	        0x48897df8	                mov qword [rbp - 8], rdi	        71	list.h	FUNCTION_10
0x400008d	        0x488975f0	             mov qword [rbp - 0x10], rsi	        71	list.h	FUNCTION_10
0x4000091	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        72	list.h	FUNCTION_10
0x4000095	        0x488b55f8	                mov rdx, qword [rbp - 8]	        72	list.h	FUNCTION_10
0x4000099	        0x48895008	                mov qword [rax + 8], rdx	        72	list.h	FUNCTION_10
0x400009d	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	list.h	FUNCTION_10
0x40000a1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        73	list.h	FUNCTION_10
0x40000a5	          0x488910	                    mov qword [rax], rdx	        73	list.h	FUNCTION_10
0x40000a8	              0x90	                                     nop	        74	list.h	FUNCTION_10
0x40000a9	              0x5d	                                 pop rbp	        74	list.h	FUNCTION_10
0x40000aa	              0xc3	                                     ret	        74	list.h	FUNCTION_10
option_parse_if_missing	WHILE,0:FOR,0:functions,0:DO,0:CALL,1:IF,0:SWITCH,0:ELSE,0	12
0x4000167	              0x55	                                push rbp	        37	interpret-trailers.c	FUNCTION_3
0x4000168	          0x4889e5	                            mov rbp, rsp	        37	interpret-trailers.c	FUNCTION_3
0x400016b	        0x4883ec20	                           sub rsp, 0x20	        37	interpret-trailers.c	FUNCTION_3
0x400016f	        0x48897df8	                mov qword [rbp - 8], rdi	        37	interpret-trailers.c	FUNCTION_3
0x4000173	        0x488975f0	             mov qword [rbp - 0x10], rsi	        37	interpret-trailers.c	FUNCTION_3
0x4000177	          0x8955ec	             mov dword [rbp - 0x14], edx	        37	interpret-trailers.c	FUNCTION_3
0x400017a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        38	interpret-trailers.c	FUNCTION_3	CALL_1
0x400017e	          0x4889c6	                            mov rsi, rax	        38	interpret-trailers.c	FUNCTION_3	CALL_1
0x4000181	      0xbf00000000	                              mov edi, 0	        38	interpret-trailers.c	FUNCTION_3	CALL_1
0x4000186	      0xe800000000	                          call 0x400018b	        38	interpret-trailers.c	FUNCTION_3	CALL_1
0x400018b	              0xc9	                                   leave	        39	interpret-trailers.c	FUNCTION_3
0x400018c	              0xc3	                                     ret	        39	interpret-trailers.c	FUNCTION_3
_	WHILE,0:FOR,0:functions,0:DO,0:CALL,0:IF,1:SWITCH,0:ELSE,0	15
0x40000ef	              0x55	                                push rbp	        51	gettext.h	FUNCTION_24
0x40000f0	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_24
0x40000f3	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_24
0x40000f7	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_24
0x40000fb	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_24	IF_1
0x40000ff	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_24	IF_1
0x4000102	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_24	IF_1
0x4000104	            0x7507	                           jne 0x400010d	        52	gettext.h	FUNCTION_24	IF_1
0x4000106	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_24	IF_1
0x400010b	            0xeb0c	                           jmp 0x4000119	        53	gettext.h	FUNCTION_24	IF_1
0x400010d	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_24
0x4000111	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_24
0x4000114	      0xe800000000	                          call 0x4000119	        54	gettext.h	FUNCTION_24
0x4000119	              0xc9	                                   leave	        55	gettext.h	FUNCTION_24
0x400011a	              0xc3	                                     ret	        55	gettext.h	FUNCTION_24
cmd_interpret_trailers	WHILE,0:FOR,1:functions,0:DO,0:CALL,19:IF,3:SWITCH,0:ELSE,1	157
0x40002d5	              0x55	                                push rbp	        87	interpret-trailers.c	FUNCTION_7
0x40002d6	          0x4889e5	                            mov rbp, rsp	        87	interpret-trailers.c	FUNCTION_7
0x40002d9	    0x4881ec300300	                          sub rsp, 0x330	        87	interpret-trailers.c	FUNCTION_7
0x40002e0	    0x89bdecfcffff	            mov dword [rbp - 0x314], edi	        87	interpret-trailers.c	FUNCTION_7
0x40002e6	    0x4889b5e0fcff	            mov qword [rbp - 0x320], rsi	        87	interpret-trailers.c	FUNCTION_7
0x40002ed	    0x488995d8fcff	            mov qword [rbp - 0x328], rdx	        87	interpret-trailers.c	FUNCTION_7
0x40002f4	    0x64488b042528	                mov rax, qword fs:[0x28]	        87	interpret-trailers.c	FUNCTION_7
0x40002fd	        0x488945f8	                mov qword [rbp - 8], rax	        87	interpret-trailers.c	FUNCTION_7
0x4000301	            0x31c0	                            xor eax, eax	        87	interpret-trailers.c	FUNCTION_7
0x4000303	    0x48c78510fdff	              mov qword [rbp - 0x2f0], 0	        88	interpret-trailers.c	FUNCTION_7
0x400030e	    0x48c78518fdff	              mov qword [rbp - 0x2e8], 0	        88	interpret-trailers.c	FUNCTION_7
0x4000319	    0xc78520fdffff	              mov dword [rbp - 0x2e0], 0	        88	interpret-trailers.c	FUNCTION_7
0x4000323	    0x488d8500fdff	                  lea rax, [rbp - 0x300]	        89	interpret-trailers.c	FUNCTION_7
0x400032a	    0x48898500fdff	            mov qword [rbp - 0x300], rax	        89	interpret-trailers.c	FUNCTION_7
0x4000331	    0x488d8500fdff	                  lea rax, [rbp - 0x300]	        89	interpret-trailers.c	FUNCTION_7
0x4000338	    0x48898508fdff	            mov qword [rbp - 0x2f8], rax	        89	interpret-trailers.c	FUNCTION_7
0x400033f	    0x488d9530fdff	                  lea rdx, [rbp - 0x2d0]	        91	interpret-trailers.c	FUNCTION_7
0x4000346	      0xb800000000	                              mov eax, 0	        91	interpret-trailers.c	FUNCTION_7
0x400034b	      0xb958000000	                           mov ecx, 0x58	        91	interpret-trailers.c	FUNCTION_7
0x4000350	          0x4889d7	                            mov rdi, rdx	        91	interpret-trailers.c	FUNCTION_7
0x4000353	          0xf348ab	              rep stosq qword [rdi], rax	        91	interpret-trailers.c	FUNCTION_7
0x4000356	    0xc78530fdffff	              mov dword [rbp - 0x2d0], 7	        91	interpret-trailers.c	FUNCTION_7
0x4000360	    0x48c78538fdff	              mov qword [rbp - 0x2c8], 0	        91	interpret-trailers.c	FUNCTION_7
0x400036b	    0x488d8510fdff	                  lea rax, [rbp - 0x2f0]	        91	interpret-trailers.c	FUNCTION_7
0x4000372	    0x48898540fdff	            mov qword [rbp - 0x2c0], rax	        91	interpret-trailers.c	FUNCTION_7
0x4000379	    0x48c78550fdff	              mov qword [rbp - 0x2b0], 0	        91	interpret-trailers.c	FUNCTION_7
0x4000384	    0xc78558fdffff	              mov dword [rbp - 0x2a8], 2	        91	interpret-trailers.c	FUNCTION_7
0x400038e	    0x48c78568fdff	              mov qword [rbp - 0x298], 1	        91	interpret-trailers.c	FUNCTION_7
0x4000399	    0xc78570fdffff	              mov dword [rbp - 0x290], 7	        91	interpret-trailers.c	FUNCTION_7
0x40003a3	    0x48c78578fdff	              mov qword [rbp - 0x288], 0	        91	interpret-trailers.c	FUNCTION_7
0x40003ae	    0x488d8510fdff	                  lea rax, [rbp - 0x2f0]	        91	interpret-trailers.c	FUNCTION_7
0x40003b5	        0x4883c004	                              add rax, 4	        91	interpret-trailers.c	FUNCTION_7
0x40003b9	    0x48898580fdff	            mov qword [rbp - 0x280], rax	        91	interpret-trailers.c	FUNCTION_7
0x40003c0	    0x48c78590fdff	              mov qword [rbp - 0x270], 0	        91	interpret-trailers.c	FUNCTION_7
0x40003cb	    0xc78598fdffff	              mov dword [rbp - 0x268], 2	        91	interpret-trailers.c	FUNCTION_7
0x40003d5	    0x48c785a8fdff	              mov qword [rbp - 0x258], 1	        91	interpret-trailers.c	FUNCTION_7
0x40003e0	    0xc785b0fdffff	           mov dword [rbp - 0x250], 0xc 	        91	interpret-trailers.c	FUNCTION_7
0x40003ea	    0x48c785b8fdff	              mov qword [rbp - 0x248], 0	        91	interpret-trailers.c	FUNCTION_7
0x40003f5	    0x48c785c8fdff	              mov qword [rbp - 0x238], 0	        91	interpret-trailers.c	FUNCTION_7
0x4000400	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	        91	interpret-trailers.c	FUNCTION_7
0x400040b	    0x48c785e0fdff	              mov qword [rbp - 0x220], 0	        91	interpret-trailers.c	FUNCTION_7
0x4000416	    0xc785f0fdffff	           mov dword [rbp - 0x210], 0xc 	        91	interpret-trailers.c	FUNCTION_7
0x4000420	    0x48c785f8fdff	              mov qword [rbp - 0x208], 0	        91	interpret-trailers.c	FUNCTION_7
0x400042b	    0x48c78508feff	              mov qword [rbp - 0x1f8], 0	        91	interpret-trailers.c	FUNCTION_7
0x4000436	    0x48c78510feff	              mov qword [rbp - 0x1f0], 0	        91	interpret-trailers.c	FUNCTION_7
0x4000441	    0x48c78520feff	              mov qword [rbp - 0x1e0], 0	        91	interpret-trailers.c	FUNCTION_7
0x400044c	    0xc78530feffff	           mov dword [rbp - 0x1d0], 0xc 	        91	interpret-trailers.c	FUNCTION_7
0x4000456	    0x48c78538feff	              mov qword [rbp - 0x1c8], 0	        91	interpret-trailers.c	FUNCTION_7
0x4000461	    0x48c78548feff	              mov qword [rbp - 0x1b8], 0	        91	interpret-trailers.c	FUNCTION_7
0x400046c	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	        91	interpret-trailers.c	FUNCTION_7
0x4000477	    0x48c78560feff	              mov qword [rbp - 0x1a0], 0	        91	interpret-trailers.c	FUNCTION_7
0x4000482	    0xc78570feffff	              mov dword [rbp - 0x190], 7	        91	interpret-trailers.c	FUNCTION_7
0x400048c	    0x48c78578feff	              mov qword [rbp - 0x188], 0	        91	interpret-trailers.c	FUNCTION_7
0x4000497	    0x488d8510fdff	                  lea rax, [rbp - 0x2f0]	        91	interpret-trailers.c	FUNCTION_7
0x400049e	        0x4883c008	                              add rax, 8	        91	interpret-trailers.c	FUNCTION_7
0x40004a2	    0x48898580feff	            mov qword [rbp - 0x180], rax	        91	interpret-trailers.c	FUNCTION_7
0x40004a9	    0x48c78590feff	              mov qword [rbp - 0x170], 0	        91	interpret-trailers.c	FUNCTION_7
0x40004b4	    0xc78598feffff	              mov dword [rbp - 0x168], 2	        91	interpret-trailers.c	FUNCTION_7
0x40004be	    0x48c785a8feff	              mov qword [rbp - 0x158], 1	        91	interpret-trailers.c	FUNCTION_7
0x40004c9	    0xc785b0feffff	              mov dword [rbp - 0x150], 7	        91	interpret-trailers.c	FUNCTION_7
0x40004d3	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	        91	interpret-trailers.c	FUNCTION_7
0x40004de	    0x488d8510fdff	                  lea rax, [rbp - 0x2f0]	        91	interpret-trailers.c	FUNCTION_7
0x40004e5	        0x4883c00c	                            add rax, 0xc	        91	interpret-trailers.c	FUNCTION_7
0x40004e9	    0x488985c0feff	            mov qword [rbp - 0x140], rax	        91	interpret-trailers.c	FUNCTION_7
0x40004f0	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	        91	interpret-trailers.c	FUNCTION_7
0x40004fb	    0xc785d8feffff	              mov dword [rbp - 0x128], 2	        91	interpret-trailers.c	FUNCTION_7
0x4000505	    0x48c785e8feff	              mov qword [rbp - 0x118], 1	        91	interpret-trailers.c	FUNCTION_7
0x4000510	    0xc785f0feffff	              mov dword [rbp - 0x110], 7	        91	interpret-trailers.c	FUNCTION_7
0x400051a	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	        91	interpret-trailers.c	FUNCTION_7
0x4000525	    0x488d8510fdff	                  lea rax, [rbp - 0x2f0]	        91	interpret-trailers.c	FUNCTION_7
0x400052c	        0x4883c010	                           add rax, 0x10	        91	interpret-trailers.c	FUNCTION_7
0x4000530	    0x48898500ffff	            mov qword [rbp - 0x100], rax	        91	interpret-trailers.c	FUNCTION_7
0x4000537	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	        91	interpret-trailers.c	FUNCTION_7
0x4000542	    0xc78518ffffff	               mov dword [rbp - 0xe8], 2	        91	interpret-trailers.c	FUNCTION_7
0x400054c	    0x48c78528ffff	               mov qword [rbp - 0xd8], 1	        91	interpret-trailers.c	FUNCTION_7
0x4000557	    0xc78530ffffff	            mov dword [rbp - 0xd0], 0xc 	        91	interpret-trailers.c	FUNCTION_7
0x4000561	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	        91	interpret-trailers.c	FUNCTION_7
0x400056c	    0x488d8510fdff	                  lea rax, [rbp - 0x2f0]	        91	interpret-trailers.c	FUNCTION_7
0x4000573	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        91	interpret-trailers.c	FUNCTION_7
0x400057a	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	        91	interpret-trailers.c	FUNCTION_7
0x4000585	    0xc78558ffffff	               mov dword [rbp - 0xa8], 6	        91	interpret-trailers.c	FUNCTION_7
0x400058f	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	        91	interpret-trailers.c	FUNCTION_7
0x400059a	    0xc78570ffffff	            mov dword [rbp - 0x90], 0xc 	        91	interpret-trailers.c	FUNCTION_7
0x40005a4	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	        91	interpret-trailers.c	FUNCTION_7
0x40005af	    0x488d8500fdff	                  lea rax, [rbp - 0x300]	        91	interpret-trailers.c	FUNCTION_7
0x40005b6	        0x48894580	             mov qword [rbp - 0x80], rax	        91	interpret-trailers.c	FUNCTION_7
0x40005ba	    0x48c745880000	               mov qword [rbp - 0x78], 0	        91	interpret-trailers.c	FUNCTION_7
0x40005c2	    0x48c745900000	               mov qword [rbp - 0x70], 0	        91	interpret-trailers.c	FUNCTION_7
0x40005ca	    0x48c745a00000	               mov qword [rbp - 0x60], 0	        91	interpret-trailers.c	FUNCTION_7
0x40005d2	    0x488d8d30fdff	                  lea rcx, [rbp - 0x2d0]	       112	interpret-trailers.c	FUNCTION_7	CALL_11
0x40005d9	    0x488b95d8fcff	            mov rdx, qword [rbp - 0x328]	       112	interpret-trailers.c	FUNCTION_7	CALL_11
0x40005e0	    0x488bb5e0fcff	            mov rsi, qword [rbp - 0x320]	       112	interpret-trailers.c	FUNCTION_7	CALL_11
0x40005e7	    0x8b85ecfcffff	            mov eax, dword [rbp - 0x314]	       112	interpret-trailers.c	FUNCTION_7	CALL_11
0x40005ed	    0x41b900000000	                              mov r9d, 0	       112	interpret-trailers.c	FUNCTION_7	CALL_11
0x40005f3	    0x41b800000000	                              mov r8d, 0	       112	interpret-trailers.c	FUNCTION_7	CALL_11
0x40005f9	            0x89c7	                            mov edi, eax	       112	interpret-trailers.c	FUNCTION_7	CALL_11
0x40005fb	      0xe800000000	                          call 0x4000600	       112	interpret-trailers.c	FUNCTION_7	CALL_11
0x4000600	    0x8985ecfcffff	            mov dword [rbp - 0x314], eax	       112	interpret-trailers.c	FUNCTION_7	CALL_11
0x4000606	    0x8b851cfdffff	            mov eax, dword [rbp - 0x2e4]	       115	interpret-trailers.c	FUNCTION_7	IF_1	CALL_12
0x400060c	            0x85c0	                           test eax, eax	       115	interpret-trailers.c	FUNCTION_7	IF_1	CALL_12
0x400060e	            0x7437	                            je 0x4000647	       115	interpret-trailers.c	FUNCTION_7	IF_1	CALL_12
0x4000610	    0x488d8500fdff	                  lea rax, [rbp - 0x300]	       115	interpret-trailers.c	FUNCTION_7	IF_1	CALL_12
0x4000617	          0x4889c7	                            mov rdi, rax	       115	interpret-trailers.c	FUNCTION_7	IF_1	CALL_12
0x400061a	      0xe8b5faffff	                     call sym.list_empty	       115	interpret-trailers.c	FUNCTION_7	IF_1	CALL_12
0x400061f	            0x85c0	                           test eax, eax	       115	interpret-trailers.c	FUNCTION_7	IF_1	CALL_12
0x4000621	            0x7524	                           jne 0x4000647	       115	interpret-trailers.c	FUNCTION_7	IF_1	CALL_12
0x4000623	      0xbf00000000	                              mov edi, 0	       116	interpret-trailers.c	FUNCTION_7	IF_1	CALL_13
0x4000628	      0xe8c2faffff	                               call sym.	       116	interpret-trailers.c	FUNCTION_7	IF_1	CALL_13
0x400062d	          0x4889c1	                            mov rcx, rax	       116	interpret-trailers.c	FUNCTION_7	IF_1	CALL_13
0x4000630	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	       116	interpret-trailers.c	FUNCTION_7	IF_1	CALL_13
0x4000637	          0x4889c2	                            mov rdx, rax	       116	interpret-trailers.c	FUNCTION_7	IF_1	CALL_13
0x400063a	      0xbe00000000	                              mov esi, 0	       116	interpret-trailers.c	FUNCTION_7	IF_1	CALL_13
0x400063f	          0x4889cf	                            mov rdi, rcx	       116	interpret-trailers.c	FUNCTION_7	IF_1	CALL_13
0x4000642	      0xe800000000	                          call 0x4000647	       116	interpret-trailers.c	FUNCTION_7	IF_1	CALL_13
0x4000647	    0x83bdecfcffff	              cmp dword [rbp - 0x314], 0	       121	interpret-trailers.c	FUNCTION_7	IF_2
0x400064e	            0x7459	                            je 0x40006a9	       121	interpret-trailers.c	FUNCTION_7	IF_2
0x4000650	    0xc785fcfcffff	              mov dword [rbp - 0x304], 0	       123	interpret-trailers.c	FUNCTION_7	IF_2	FOR_1
0x400065a	            0xeb3d	                           jmp 0x4000699	       123	interpret-trailers.c	FUNCTION_7	IF_2	FOR_1
0x400065c	    0x8b85fcfcffff	            mov eax, dword [rbp - 0x304]	       124	interpret-trailers.c	FUNCTION_7	IF_2	CALL_15
0x4000662	            0x4898	                                    cdqe	       124	interpret-trailers.c	FUNCTION_7	IF_2	CALL_15
0x4000664	    0x488d14c50000	                        lea rdx, [rax*8]	       124	interpret-trailers.c	FUNCTION_7	IF_2	CALL_15
0x400066c	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       124	interpret-trailers.c	FUNCTION_7	IF_2	CALL_15
0x4000673	          0x4801d0	                            add rax, rdx	       124	interpret-trailers.c	FUNCTION_7	IF_2	CALL_15
0x4000676	          0x488b00	                    mov rax, qword [rax]	       124	interpret-trailers.c	FUNCTION_7	IF_2	CALL_15
0x4000679	    0x488d9500fdff	                  lea rdx, [rbp - 0x300]	       124	interpret-trailers.c	FUNCTION_7	IF_2	CALL_15
0x4000680	    0x488d8d10fdff	                  lea rcx, [rbp - 0x2f0]	       124	interpret-trailers.c	FUNCTION_7	IF_2	CALL_15
0x4000687	          0x4889ce	                            mov rsi, rcx	       124	interpret-trailers.c	FUNCTION_7	IF_2	CALL_15
0x400068a	          0x4889c7	                            mov rdi, rax	       124	interpret-trailers.c	FUNCTION_7	IF_2	CALL_15
0x400068d	      0xe800000000	                          call 0x4000692	       124	interpret-trailers.c	FUNCTION_7	IF_2	CALL_15
0x4000692	    0x8385fcfcffff	              add dword [rbp - 0x304], 1	       123	interpret-trailers.c	FUNCTION_7	IF_2	FOR_1
0x4000699	    0x8b85fcfcffff	            mov eax, dword [rbp - 0x304]	       123	interpret-trailers.c	FUNCTION_7	IF_2	FOR_1
0x400069f	    0x3b85ecfcffff	            cmp eax, dword [rbp - 0x314]	       123	interpret-trailers.c	FUNCTION_7	IF_2	FOR_1
0x40006a5	            0x7cb5	                            jl 0x400065c	       123	interpret-trailers.c	FUNCTION_7	IF_2	FOR_1
0x40006a7	            0xeb3c	                           jmp 0x40006e5	       123	interpret-trailers.c	FUNCTION_7	IF_2	FOR_1
0x40006a9	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	       126	interpret-trailers.c	FUNCTION_7	ELSE_1	IF_3
0x40006af	            0x85c0	                           test eax, eax	       126	interpret-trailers.c	FUNCTION_7	ELSE_1	IF_3
0x40006b1	            0x7417	                            je 0x40006ca	       126	interpret-trailers.c	FUNCTION_7	ELSE_1	IF_3
0x40006b3	      0xbf00000000	                              mov edi, 0	       127	interpret-trailers.c	FUNCTION_7	ELSE_1	CALL_17
0x40006b8	      0xe832faffff	                               call sym.	       127	interpret-trailers.c	FUNCTION_7	ELSE_1	CALL_17
0x40006bd	          0x4889c7	                            mov rdi, rax	       127	interpret-trailers.c	FUNCTION_7	ELSE_1	CALL_17
0x40006c0	      0xb800000000	                              mov eax, 0	       127	interpret-trailers.c	FUNCTION_7	ELSE_1	CALL_17
0x40006c5	      0xe800000000	                          call 0x40006ca	       127	interpret-trailers.c	FUNCTION_7	ELSE_1	CALL_17
0x40006ca	    0x488d9500fdff	                  lea rdx, [rbp - 0x300]	       128	interpret-trailers.c	FUNCTION_7	ELSE_1	CALL_18
0x40006d1	    0x488d8510fdff	                  lea rax, [rbp - 0x2f0]	       128	interpret-trailers.c	FUNCTION_7	ELSE_1	CALL_18
0x40006d8	          0x4889c6	                            mov rsi, rax	       128	interpret-trailers.c	FUNCTION_7	ELSE_1	CALL_18
0x40006db	      0xbf00000000	                              mov edi, 0	       128	interpret-trailers.c	FUNCTION_7	ELSE_1	CALL_18
0x40006e0	      0xe800000000	                          call 0x40006e5	       128	interpret-trailers.c	FUNCTION_7	ELSE_1	CALL_18
0x40006e5	    0x488d8500fdff	                  lea rax, [rbp - 0x300]	       131	interpret-trailers.c	FUNCTION_7	CALL_19
0x40006ec	          0x4889c7	                            mov rdi, rax	       131	interpret-trailers.c	FUNCTION_7	CALL_19
0x40006ef	      0xe899faffff	             call sym.new_trailers_clear	       131	interpret-trailers.c	FUNCTION_7	CALL_19
0x40006f4	      0xb800000000	                              mov eax, 0	       133	interpret-trailers.c	FUNCTION_7
0x40006f9	        0x488b75f8	                mov rsi, qword [rbp - 8]	       134	interpret-trailers.c	FUNCTION_7
0x40006fd	    0x644833342528	                xor rsi, qword fs:[0x28]	       134	interpret-trailers.c	FUNCTION_7
0x4000706	            0x7405	                            je 0x400070d	       134	interpret-trailers.c	FUNCTION_7
0x4000708	      0xe800000000	                          call 0x400070d	       134	interpret-trailers.c	FUNCTION_7
0x400070d	              0xc9	                                   leave	       134	interpret-trailers.c	FUNCTION_7
0x400070e	              0xc3	                                     ret	       134	interpret-trailers.c	FUNCTION_7
parse_opt_parse	WHILE,0:FOR,0:functions,0:DO,0:CALL,0:IF,0:SWITCH,0:ELSE,0	17
0x4000292	              0x55	                                push rbp	        78	interpret-trailers.c	FUNCTION_6
0x4000293	          0x4889e5	                            mov rbp, rsp	        78	interpret-trailers.c	FUNCTION_6
0x4000296	        0x48897de8	             mov qword [rbp - 0x18], rdi	        78	interpret-trailers.c	FUNCTION_6
0x400029a	        0x488975e0	             mov qword [rbp - 0x20], rsi	        78	interpret-trailers.c	FUNCTION_6
0x400029e	          0x8955dc	             mov dword [rbp - 0x24], edx	        78	interpret-trailers.c	FUNCTION_6
0x40002a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        79	interpret-trailers.c	FUNCTION_6
0x40002a5	        0x488b4010	            mov rax, qword [rax + 0x10] 	        79	interpret-trailers.c	FUNCTION_6
0x40002a9	        0x488945f8	                mov qword [rbp - 8], rax	        79	interpret-trailers.c	FUNCTION_6
0x40002ad	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	interpret-trailers.c	FUNCTION_6
0x40002b1	    0xc74008010000	                  mov dword [rax + 8], 1	        80	interpret-trailers.c	FUNCTION_6
0x40002b8	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	interpret-trailers.c	FUNCTION_6
0x40002bc	    0xc7400c010000	                mov dword [rax + 0xc], 1	        81	interpret-trailers.c	FUNCTION_6
0x40002c3	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	interpret-trailers.c	FUNCTION_6
0x40002c7	    0xc74010010000	               mov dword [rax + 0x10], 1	        82	interpret-trailers.c	FUNCTION_6
0x40002ce	      0xb800000000	                              mov eax, 0	        83	interpret-trailers.c	FUNCTION_6
0x40002d3	              0x5d	                                 pop rbp	        84	interpret-trailers.c	FUNCTION_6
0x40002d4	              0xc3	                                     ret	        84	interpret-trailers.c	FUNCTION_6
option_parse_where	WHILE,0:FOR,0:functions,0:DO,0:CALL,1:IF,0:SWITCH,0:ELSE,0	12
0x400011b	              0x55	                                push rbp	        25	interpret-trailers.c	FUNCTION_1
0x400011c	          0x4889e5	                            mov rbp, rsp	        25	interpret-trailers.c	FUNCTION_1
0x400011f	        0x4883ec20	                           sub rsp, 0x20	        25	interpret-trailers.c	FUNCTION_1
0x4000123	        0x48897df8	                mov qword [rbp - 8], rdi	        25	interpret-trailers.c	FUNCTION_1
0x4000127	        0x488975f0	             mov qword [rbp - 0x10], rsi	        25	interpret-trailers.c	FUNCTION_1
0x400012b	          0x8955ec	             mov dword [rbp - 0x14], edx	        25	interpret-trailers.c	FUNCTION_1
0x400012e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        26	interpret-trailers.c	FUNCTION_1	CALL_1
0x4000132	          0x4889c6	                            mov rsi, rax	        26	interpret-trailers.c	FUNCTION_1	CALL_1
0x4000135	      0xbf00000000	                              mov edi, 0	        26	interpret-trailers.c	FUNCTION_1	CALL_1
0x400013a	      0xe800000000	                          call 0x400013f	        26	interpret-trailers.c	FUNCTION_1	CALL_1
0x400013f	              0xc9	                                   leave	        27	interpret-trailers.c	FUNCTION_1
0x4000140	              0xc3	                                     ret	        27	interpret-trailers.c	FUNCTION_1
option_parse_if_exists	WHILE,0:FOR,0:functions,0:DO,0:CALL,1:IF,0:SWITCH,0:ELSE,0	12
0x4000141	              0x55	                                push rbp	        31	interpret-trailers.c	FUNCTION_2
0x4000142	          0x4889e5	                            mov rbp, rsp	        31	interpret-trailers.c	FUNCTION_2
0x4000145	        0x4883ec20	                           sub rsp, 0x20	        31	interpret-trailers.c	FUNCTION_2
0x4000149	        0x48897df8	                mov qword [rbp - 8], rdi	        31	interpret-trailers.c	FUNCTION_2
0x400014d	        0x488975f0	             mov qword [rbp - 0x10], rsi	        31	interpret-trailers.c	FUNCTION_2
0x4000151	          0x8955ec	             mov dword [rbp - 0x14], edx	        31	interpret-trailers.c	FUNCTION_2
0x4000154	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        32	interpret-trailers.c	FUNCTION_2	CALL_1
0x4000158	          0x4889c6	                            mov rsi, rax	        32	interpret-trailers.c	FUNCTION_2	CALL_1
0x400015b	      0xbf00000000	                              mov edi, 0	        32	interpret-trailers.c	FUNCTION_2	CALL_1
0x4000160	      0xe800000000	                          call 0x4000165	        32	interpret-trailers.c	FUNCTION_2	CALL_1
0x4000165	              0xc9	                                   leave	        33	interpret-trailers.c	FUNCTION_2
0x4000166	              0xc3	                                     ret	        33	interpret-trailers.c	FUNCTION_2
list_empty	WHILE,0:FOR,0:functions,0:DO,0:CALL,0:IF,0:SWITCH,0:ELSE,0	10
0x40000d4	              0x55	                                push rbp	       152	list.h	FUNCTION_16
0x40000d5	          0x4889e5	                            mov rbp, rsp	       152	list.h	FUNCTION_16
0x40000d8	        0x48897df8	                mov qword [rbp - 8], rdi	       152	list.h	FUNCTION_16
0x40000dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       153	list.h	FUNCTION_16
0x40000e0	          0x488b00	                    mov rax, qword [rax]	       153	list.h	FUNCTION_16
0x40000e3	        0x483b45f8	                cmp rax, qword [rbp - 8]	       153	list.h	FUNCTION_16
0x40000e7	           0xf94c0	                                 sete al	       153	list.h	FUNCTION_16
0x40000ea	           0xfb6c0	                           movzx eax, al	       153	list.h	FUNCTION_16
0x40000ed	              0x5d	                                 pop rbp	       154	list.h	FUNCTION_16
0x40000ee	              0xc3	                                     ret	       154	list.h	FUNCTION_16
