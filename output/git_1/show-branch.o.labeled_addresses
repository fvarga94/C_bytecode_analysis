append_one_rev	WHILE,0:ELSE,0:IF,3:DO,0:functions,0:CALL,11:SWITCH,0:FOR,0	68
0x4000540	              0x55	                                push rbp	       515	show-branch.c	FUNCTION_24
0x4000541	              0x53	                                push rbx	       515	show-branch.c	FUNCTION_24
0x4000542	        0x4883ec28	                           sub rsp, 0x28	       515	show-branch.c	FUNCTION_24
0x4000546	          0x4889fb	                            mov rbx, rdi	       515	show-branch.c	FUNCTION_24
0x4000549	    0x64488b042528	                mov rax, qword fs:[0x28]	       515	show-branch.c	FUNCTION_24
0x4000552	      0x4889442418	             mov qword [rsp + 0x18], rax	       515	show-branch.c	FUNCTION_24
0x4000557	            0x31c0	                            xor eax, eax	       515	show-branch.c	FUNCTION_24
0x4000559	          0x4889e6	                            mov rsi, rsp	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x400055c	      0xe800000000	                          call 0x4000561	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x4000561	            0x85c0	                           test eax, eax	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x4000563	            0x7515	                           jne 0x400057a	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x4000565	      0xba00000000	                              mov edx, 0	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x400056a	          0x4889e6	                            mov rsi, rsp	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x400056d	          0x4889df	                            mov rdi, rbx	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x4000570	      0xe80ffdffff	                     call sym.append_ref	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x4000575	      0xe9b4000000	                           jmp 0x400062e	       519	show-branch.c	FUNCTION_24	IF_1
0x400057a	      0xbe2a000000	                           mov esi, 0x2a	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400057f	          0x4889df	                            mov rdi, rbx	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000582	      0xe800000000	                          call 0x4000587	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000587	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400058a	            0x7524	                           jne 0x40005b0	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400058c	      0xbe3f000000	                           mov esi, 0x3f	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000591	          0x4889df	                            mov rdi, rbx	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000594	      0xe800000000	                          call 0x4000599	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000599	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400059c	            0x7512	                           jne 0x40005b0	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400059e	      0xbe5b000000	                           mov esi, 0x5b	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40005a3	          0x4889df	                            mov rdi, rbx	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40005a6	      0xe800000000	                          call 0x40005ab	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40005ab	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40005ae	            0x746c	                            je 0x400061c	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40005b0	    0x8b2d00000000	            mov ebp, dword [0x040005b6] 	       523	show-branch.c	FUNCTION_24	IF_2
0x40005b6	    0x48891d000000	            mov qword [0x040005bd], rbx 	       525	show-branch.c	FUNCTION_24	IF_2
0x40005bd	          0x4889df	                            mov rdi, rbx	       526	show-branch.c	FUNCTION_24	IF_2	CALL_6
0x40005c0	      0xe800000000	                          call 0x40005c5	       526	show-branch.c	FUNCTION_24	IF_2	CALL_6
0x40005c5	    0x890500000000	            mov dword [0x040005cb], eax 	       526	show-branch.c	FUNCTION_24	IF_2	CALL_6
0x40005cb	      0xbe00000000	                              mov esi, 0	       527	show-branch.c	FUNCTION_24	IF_2	CALL_7
0x40005d0	      0xbf00000000	                              mov edi, 0	       527	show-branch.c	FUNCTION_24	IF_2	CALL_7
0x40005d5	      0xe800000000	                          call 0x40005da	       527	show-branch.c	FUNCTION_24	IF_2	CALL_7
0x40005da	    0x8b0500000000	            mov eax, dword [0x040005e0] 	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x40005e0	          0x83f818	                           cmp eax, 0x18	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x40005e3	            0x7f28	                            jg 0x400060d	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x40005e5	            0x39c5	                            cmp ebp, eax	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x40005e7	            0x7524	                           jne 0x400060d	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x40005e9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_31	CALL_2
0x40005ee	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_31	CALL_2
0x40005f3	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_31	CALL_2
0x40005f8	      0xe800000000	                          call 0x40005fd	        54	gettext.h	FUNCTION_31	CALL_2
0x40005fd	          0x4889de	                            mov rsi, rbx	       530	show-branch.c	FUNCTION_24	IF_2	CALL_9
0x4000600	          0x4889c7	                            mov rdi, rax	       530	show-branch.c	FUNCTION_24	IF_2	CALL_9
0x4000603	      0xb800000000	                              mov eax, 0	       530	show-branch.c	FUNCTION_24	IF_2	CALL_9
0x4000608	      0xe800000000	                          call 0x400060d	       530	show-branch.c	FUNCTION_24	IF_2	CALL_9
0x400060d	    0x8b3500000000	            mov esi, dword [0x04000613] 	       531	show-branch.c	FUNCTION_24	IF_2	CALL_10
0x4000613	            0x89ef	                            mov edi, ebp	       531	show-branch.c	FUNCTION_24	IF_2	CALL_10
0x4000615	      0xe83bfcffff	                 call sym.sort_ref_range	       531	show-branch.c	FUNCTION_24	IF_2	CALL_10
0x400061a	            0xeb12	                           jmp 0x400062e	       532	show-branch.c	FUNCTION_24	IF_2
0x400061c	          0x4889de	                            mov rsi, rbx	       534	show-branch.c	FUNCTION_24	CALL_11
0x400061f	      0xbf00000000	                              mov edi, 0	       534	show-branch.c	FUNCTION_24	CALL_11
0x4000624	      0xb800000000	                              mov eax, 0	       534	show-branch.c	FUNCTION_24	CALL_11
0x4000629	      0xe800000000	                          call 0x400062e	       534	show-branch.c	FUNCTION_24	CALL_11
0x400062e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       535	show-branch.c	FUNCTION_24
0x4000633	    0x644833042528	                xor rax, qword fs:[0x28]	       535	show-branch.c	FUNCTION_24
0x400063c	            0x7405	                            je 0x4000643	       535	show-branch.c	FUNCTION_24
0x400063e	      0xe800000000	                          call 0x4000643	       535	show-branch.c	FUNCTION_24
0x4000643	        0x4883c428	                           add rsp, 0x28	       535	show-branch.c	FUNCTION_24
0x4000647	              0x5b	                                 pop rbx	       535	show-branch.c	FUNCTION_24
0x4000648	              0x5d	                                 pop rbp	       535	show-branch.c	FUNCTION_24
0x4000649	              0xc3	                                     ret	       535	show-branch.c	FUNCTION_24
append_matching_ref	WHILE,0:ELSE,0:IF,5:DO,0:functions,0:CALL,7:SWITCH,0:FOR,1	68
0x4000465	            0x4155	                                push r13	       429	show-branch.c	FUNCTION_19
0x4000467	            0x4154	                                push r12	       429	show-branch.c	FUNCTION_19
0x4000469	              0x55	                                push rbp	       429	show-branch.c	FUNCTION_19
0x400046a	              0x53	                                push rbx	       429	show-branch.c	FUNCTION_19
0x400046b	        0x4883ec08	                              sub rsp, 8	       429	show-branch.c	FUNCTION_19
0x400046f	          0x4889fb	                            mov rbx, rdi	       429	show-branch.c	FUNCTION_19
0x4000472	          0x4889f5	                            mov rbp, rsi	       429	show-branch.c	FUNCTION_19
0x4000475	          0x4189d4	                           mov r12d, edx	       429	show-branch.c	FUNCTION_19
0x4000478	          0x4989cd	                            mov r13, rcx	       429	show-branch.c	FUNCTION_19
0x400047b	      0xe800000000	                          call 0x4000480	       435	show-branch.c	FUNCTION_19	CALL_1
0x4000480	    0x8b0d00000000	            mov ecx, dword [0x04000486] 	       436	show-branch.c	FUNCTION_19	FOR_1
0x4000486	          0x4889de	                            mov rsi, rbx	       436	show-branch.c	FUNCTION_19	FOR_1
0x4000489	            0xeb0f	                           jmp 0x400049a	       436	show-branch.c	FUNCTION_19	FOR_1
0x400048b	        0x4883c601	                              add rsi, 1	       437	show-branch.c	FUNCTION_19	FOR_1	IF_1
0x400048f	          0x80fa2f	                            cmp dl, 0x2f	       438	show-branch.c	FUNCTION_19	FOR_1	IF_1
0x4000492	           0xf94c2	                                 sete dl	       438	show-branch.c	FUNCTION_19	FOR_1	IF_1
0x4000495	           0xfb6d2	                           movzx edx, dl	       438	show-branch.c	FUNCTION_19	FOR_1	IF_1
0x4000498	            0x29d0	                            sub eax, edx	       438	show-branch.c	FUNCTION_19	FOR_1	IF_1
0x400049a	           0xfb616	                   movzx edx, byte [rsi]	       436	show-branch.c	FUNCTION_19	FOR_1
0x400049d	            0x84d2	                             test dl, dl	       436	show-branch.c	FUNCTION_19	FOR_1
0x400049f	     0xf848b000000	                            je 0x4000530	       436	show-branch.c	FUNCTION_19	FOR_1
0x40004a5	            0x39c8	                            cmp eax, ecx	       436	show-branch.c	FUNCTION_19	FOR_1
0x40004a7	            0x7fe2	                            jg 0x400048b	       436	show-branch.c	FUNCTION_19	FOR_1
0x40004a9	      0xba00000000	                              mov edx, 0	       441	show-branch.c	FUNCTION_19	IF_3	CALL_2
0x40004ae	    0x488b3d000000	            mov rdi, qword [0x040004b5] 	       441	show-branch.c	FUNCTION_19	IF_3	CALL_2
0x40004b5	      0xe800000000	                          call 0x40004ba	       441	show-branch.c	FUNCTION_19	IF_3	CALL_2
0x40004ba	            0x89c2	                            mov edx, eax	       441	show-branch.c	FUNCTION_19	IF_3	CALL_2
0x40004bc	      0xb800000000	                              mov eax, 0	       442	show-branch.c	FUNCTION_19	IF_3
0x40004c1	            0x85d2	                           test edx, edx	       441	show-branch.c	FUNCTION_19	IF_3	CALL_2
0x40004c3	            0x7570	                           jne 0x4000535	       441	show-branch.c	FUNCTION_19	IF_3	CALL_2
0x40004c5	      0xbe00000000	                              mov esi, 0	       443	show-branch.c	FUNCTION_19	IF_4	CALL_3
0x40004ca	          0x4889df	                            mov rdi, rbx	       443	show-branch.c	FUNCTION_19	IF_4	CALL_3
0x40004cd	      0xe800000000	                          call 0x40004d2	       443	show-branch.c	FUNCTION_19	IF_4	CALL_3
0x40004d2	            0x85c0	                           test eax, eax	       443	show-branch.c	FUNCTION_19	IF_4	CALL_3
0x40004d4	            0x7413	                            je 0x40004e9	       443	show-branch.c	FUNCTION_19	IF_4	CALL_3
0x40004d6	          0x4c89e9	                            mov rcx, r13	       444	show-branch.c	FUNCTION_19	CALL_4
0x40004d9	          0x4489e2	                           mov edx, r12d	       444	show-branch.c	FUNCTION_19	CALL_4
0x40004dc	          0x4889ee	                            mov rsi, rbp	       444	show-branch.c	FUNCTION_19	CALL_4
0x40004df	          0x4889df	                            mov rdi, rbx	       444	show-branch.c	FUNCTION_19	CALL_4
0x40004e2	      0xe8f5feffff	                call sym.append_head_ref	       444	show-branch.c	FUNCTION_19	CALL_4
0x40004e7	            0xeb4c	                           jmp 0x4000535	       444	show-branch.c	FUNCTION_19	CALL_4
0x40004e9	      0xbe00000000	                              mov esi, 0	       445	show-branch.c	FUNCTION_19	IF_5	CALL_5
0x40004ee	          0x4889df	                            mov rdi, rbx	       445	show-branch.c	FUNCTION_19	IF_5	CALL_5
0x40004f1	      0xe800000000	                          call 0x40004f6	       445	show-branch.c	FUNCTION_19	IF_5	CALL_5
0x40004f6	            0x85c0	                           test eax, eax	       445	show-branch.c	FUNCTION_19	IF_5	CALL_5
0x40004f8	            0x7424	                            je 0x400051e	       445	show-branch.c	FUNCTION_19	IF_5	CALL_5
0x40004fa	      0xbe00000000	                              mov esi, 0	       419	show-branch.c	FUNCTION_18	IF_1	CALL_1
0x40004ff	          0x4889df	                            mov rdi, rbx	       419	show-branch.c	FUNCTION_18	IF_1	CALL_1
0x4000502	      0xe800000000	                          call 0x4000507	       419	show-branch.c	FUNCTION_18	IF_1	CALL_1
0x4000507	            0x85c0	                           test eax, eax	       419	show-branch.c	FUNCTION_18	IF_1	CALL_1
0x4000509	            0x742a	                            je 0x4000535	       419	show-branch.c	FUNCTION_18	IF_1	CALL_1
0x400050b	        0x488d7b05	                      lea rdi, [rbx + 5]	       421	show-branch.c	FUNCTION_18	CALL_2
0x400050f	      0xba00000000	                              mov edx, 0	       421	show-branch.c	FUNCTION_18	CALL_2
0x4000514	          0x4889ee	                            mov rsi, rbp	       421	show-branch.c	FUNCTION_18	CALL_2
0x4000517	      0xe868fdffff	                     call sym.append_ref	       421	show-branch.c	FUNCTION_18	CALL_2
0x400051c	            0xeb17	                           jmp 0x4000535	       421	show-branch.c	FUNCTION_18	CALL_2
0x400051e	      0xba00000000	                              mov edx, 0	       447	show-branch.c	FUNCTION_19	CALL_7
0x4000523	          0x4889ee	                            mov rsi, rbp	       447	show-branch.c	FUNCTION_19	CALL_7
0x4000526	          0x4889df	                            mov rdi, rbx	       447	show-branch.c	FUNCTION_19	CALL_7
0x4000529	      0xe856fdffff	                     call sym.append_ref	       447	show-branch.c	FUNCTION_19	CALL_7
0x400052e	            0xeb05	                           jmp 0x4000535	       447	show-branch.c	FUNCTION_19	CALL_7
0x4000530	      0xb800000000	                              mov eax, 0	       440	show-branch.c	FUNCTION_19	IF_2
0x4000535	        0x4883c408	                              add rsp, 8	       448	show-branch.c	FUNCTION_19
0x4000539	              0x5b	                                 pop rbx	       448	show-branch.c	FUNCTION_19
0x400053a	              0x5d	                                 pop rbp	       448	show-branch.c	FUNCTION_19
0x400053b	            0x415c	                                 pop r12	       448	show-branch.c	FUNCTION_19
0x400053d	            0x415d	                                 pop r13	       448	show-branch.c	FUNCTION_19
0x400053f	              0xc3	                                     ret	       448	show-branch.c	FUNCTION_19
name_first_parent_chain	WHILE,1:ELSE,1:IF,3:DO,0:functions,0:CALL,1:SWITCH,0:FOR,0	46
0x400069b	              0x55	                                push rbp	        93	show-branch.c	FUNCTION_6
0x400069c	              0x53	                                push rbx	        93	show-branch.c	FUNCTION_6
0x400069d	        0x4883ec08	                              sub rsp, 8	        93	show-branch.c	FUNCTION_6
0x40006a1	          0x4885ff	                           test rdi, rdi	        95	show-branch.c	FUNCTION_6	WHILE_1
0x40006a4	            0x745f	                            je 0x4000705	        95	show-branch.c	FUNCTION_6	WHILE_1
0x40006a6	        0x488b4718	            mov rax, qword [rdi + 0x18] 	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40006aa	          0x4885c0	                           test rax, rax	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40006ad	            0x745d	                            je 0x400070c	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40006af	        0x488b5730	            mov rdx, qword [rdi + 0x30] 	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x40006b3	          0x4885d2	                           test rdx, rdx	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x40006b6	            0x745b	                            je 0x4000713	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x40006b8	          0x488b1a	                    mov rbx, qword [rdx]	       101	show-branch.c	FUNCTION_6	WHILE_1
0x40006bb	      0xbd00000000	                              mov ebp, 0	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x40006c0	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x40006c5	            0x741e	                            je 0x40006e5	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x40006c7	            0xeb4f	                           jmp 0x4000718	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x40006c9	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40006cd	          0x4885c0	                           test rax, rax	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40006d0	            0x7446	                            je 0x4000718	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40006d2	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x40006d6	          0x4885d2	                           test rdx, rdx	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x40006d9	            0x743d	                            je 0x4000718	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x40006db	          0x488b1a	                    mov rbx, qword [rdx]	       101	show-branch.c	FUNCTION_6	WHILE_1
0x40006de	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x40006e3	            0x7533	                           jne 0x4000718	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x40006e5	          0x4885c0	                           test rax, rax	        84	show-branch.c	FUNCTION_5	IF_1
0x40006e8	            0x7411	                            je 0x40006fb	        84	show-branch.c	FUNCTION_5	IF_1
0x40006ea	          0x8b4808	                mov ecx, dword [rax + 8]	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x40006ed	          0x8d5101	                      lea edx, [rcx + 1]	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x40006f0	          0x488b30	                    mov rsi, qword [rax]	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x40006f3	          0x4889df	                            mov rdi, rbx	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x40006f6	      0xe870ffffff	                    call sym.name_commit	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x40006fb	          0x83c501	                              add ebp, 1	       104	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x40006fe	          0x4885db	                           test rbx, rbx	        95	show-branch.c	FUNCTION_6	WHILE_1
0x4000701	            0x75c6	                           jne 0x40006c9	        95	show-branch.c	FUNCTION_6	WHILE_1
0x4000703	            0xeb13	                           jmp 0x4000718	        95	show-branch.c	FUNCTION_6	WHILE_1
0x4000705	      0xbd00000000	                              mov ebp, 0	        94	show-branch.c	FUNCTION_6
0x400070a	            0xeb0c	                           jmp 0x4000718	        94	show-branch.c	FUNCTION_6
0x400070c	      0xbd00000000	                              mov ebp, 0	        94	show-branch.c	FUNCTION_6
0x4000711	            0xeb05	                           jmp 0x4000718	        94	show-branch.c	FUNCTION_6
0x4000713	      0xbd00000000	                              mov ebp, 0	        94	show-branch.c	FUNCTION_6
0x4000718	            0x89e8	                            mov eax, ebp	       111	show-branch.c	FUNCTION_6	ELSE_1
0x400071a	        0x4883c408	                              add rsp, 8	       111	show-branch.c	FUNCTION_6	ELSE_1
0x400071e	              0x5b	                                 pop rbx	       111	show-branch.c	FUNCTION_6	ELSE_1
0x400071f	              0x5d	                                 pop rbp	       111	show-branch.c	FUNCTION_6	ELSE_1
0x4000720	              0xc3	                                     ret	       111	show-branch.c	FUNCTION_6	ELSE_1
parse_reflog_param	WHILE,0:ELSE,2:IF,4:DO,0:functions,0:CALL,2:SWITCH,0:FOR,0	45
0x40000ec	              0x55	                                push rbp	       585	show-branch.c	FUNCTION_27
0x40000ed	              0x53	                                push rbx	       585	show-branch.c	FUNCTION_27
0x40000ee	        0x4883ec18	                           sub rsp, 0x18	       585	show-branch.c	FUNCTION_27
0x40000f2	          0x4889f3	                            mov rbx, rsi	       585	show-branch.c	FUNCTION_27
0x40000f5	    0x64488b042528	                mov rax, qword fs:[0x28]	       585	show-branch.c	FUNCTION_27
0x40000fe	      0x4889442408	                mov qword [rsp + 8], rax	       585	show-branch.c	FUNCTION_27
0x4000103	            0x31c0	                            xor eax, eax	       585	show-branch.c	FUNCTION_27
0x4000105	        0x488b6f10	            mov rbp, qword [rdi + 0x10] 	       587	show-branch.c	FUNCTION_27
0x4000109	          0x4885f6	                           test rsi, rsi	       588	show-branch.c	FUNCTION_27	IF_1
0x400010c	      0xb800000000	                              mov eax, 0	       589	show-branch.c	FUNCTION_27	IF_1
0x4000111	        0x480f44d8	                          cmove rbx, rax	       589	show-branch.c	FUNCTION_27	IF_1
0x4000115	      0xba0a000000	                            mov edx, 0xa	       590	show-branch.c	FUNCTION_27	CALL_1
0x400011a	          0x4889e6	                            mov rsi, rsp	       590	show-branch.c	FUNCTION_27	CALL_1
0x400011d	          0x4889df	                            mov rdi, rbx	       590	show-branch.c	FUNCTION_27	CALL_1
0x4000120	      0xe800000000	                          call 0x4000125	       590	show-branch.c	FUNCTION_27	CALL_1
0x4000125	          0x4889c2	                            mov rdx, rax	       590	show-branch.c	FUNCTION_27	CALL_1
0x4000128	    0x890500000000	            mov dword [0x0400012e], eax 	       590	show-branch.c	FUNCTION_27	CALL_1
0x400012e	        0x488b0424	                    mov rax, qword [rsp]	       591	show-branch.c	FUNCTION_27	IF_2
0x4000132	           0xfb608	                   movzx ecx, byte [rax]	       591	show-branch.c	FUNCTION_27	IF_2
0x4000135	          0x80f92c	                            cmp cl, 0x2c	       591	show-branch.c	FUNCTION_27	IF_2
0x4000138	            0x750a	                           jne 0x4000144	       591	show-branch.c	FUNCTION_27	IF_2
0x400013a	        0x4883c001	                              add rax, 1	       592	show-branch.c	FUNCTION_27	IF_2
0x400013e	        0x48894500	                    mov qword [rbp], rax	       592	show-branch.c	FUNCTION_27	IF_2
0x4000142	            0xeb25	                           jmp 0x4000169	       592	show-branch.c	FUNCTION_27	IF_2
0x4000144	            0x84c9	                             test cl, cl	       593	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x4000146	            0x7419	                            je 0x4000161	       593	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x4000148	          0x4889de	                            mov rsi, rbx	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x400014b	      0xbf00000000	                              mov edi, 0	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x4000150	      0xb800000000	                              mov eax, 0	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x4000155	      0xe800000000	                          call 0x400015a	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x400015a	      0xb8ffffffff	                     mov eax, 0xffffffff	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x400015f	            0xeb1b	                           jmp 0x400017c	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x4000161	    0x48c745000000	                      mov qword [rbp], 0	       596	show-branch.c	FUNCTION_27	ELSE_2
0x4000169	      0xb800000000	                              mov eax, 0	       599	show-branch.c	FUNCTION_27
0x400016e	            0x85d2	                           test edx, edx	       597	show-branch.c	FUNCTION_27	IF_4
0x4000170	            0x7f0a	                            jg 0x400017c	       597	show-branch.c	FUNCTION_27	IF_4
0x4000172	    0xc70500000000	               mov dword [0x0400017c], 4	       598	show-branch.c	FUNCTION_27	IF_4
0x400017c	      0x488b742408	                mov rsi, qword [rsp + 8]	       600	show-branch.c	FUNCTION_27
0x4000181	    0x644833342528	                xor rsi, qword fs:[0x28]	       600	show-branch.c	FUNCTION_27
0x400018a	            0x7405	                            je 0x4000191	       600	show-branch.c	FUNCTION_27
0x400018c	      0xe800000000	                          call 0x4000191	       600	show-branch.c	FUNCTION_27
0x4000191	        0x4883c418	                           add rsp, 0x18	       600	show-branch.c	FUNCTION_27
0x4000195	              0x5b	                                 pop rbx	       600	show-branch.c	FUNCTION_27
0x4000196	              0x5d	                                 pop rbp	       600	show-branch.c	FUNCTION_27
0x4000197	              0xc3	                                     ret	       600	show-branch.c	FUNCTION_27
append_head_ref	WHILE,0:ELSE,0:IF,2:DO,0:functions,0:CALL,4:SWITCH,0:FOR,0	39
0x40003dc	              0x55	                                push rbp	       388	show-branch.c	FUNCTION_16
0x40003dd	              0x53	                                push rbx	       388	show-branch.c	FUNCTION_16
0x40003de	        0x4883ec28	                           sub rsp, 0x28	       388	show-branch.c	FUNCTION_16
0x40003e2	          0x4889fb	                            mov rbx, rdi	       388	show-branch.c	FUNCTION_16
0x40003e5	          0x4889f5	                            mov rbp, rsi	       388	show-branch.c	FUNCTION_16
0x40003e8	    0x64488b042528	                mov rax, qword fs:[0x28]	       388	show-branch.c	FUNCTION_16
0x40003f1	      0x4889442418	             mov qword [rsp + 0x18], rax	       388	show-branch.c	FUNCTION_16
0x40003f6	            0x31c0	                            xor eax, eax	       388	show-branch.c	FUNCTION_16
0x40003f8	      0xbe00000000	                              mov esi, 0	       391	show-branch.c	FUNCTION_16	IF_1	CALL_1
0x40003fd	      0xe800000000	                          call 0x4000402	       391	show-branch.c	FUNCTION_16	IF_1	CALL_1
0x4000402	            0x85c0	                           test eax, eax	       391	show-branch.c	FUNCTION_16	IF_1	CALL_1
0x4000404	            0x7443	                            je 0x4000449	       391	show-branch.c	FUNCTION_16	IF_1	CALL_1
0x4000406	        0x488d7b0b	                    lea rdi, [rbx + 0xb]	       396	show-branch.c	FUNCTION_16	IF_2	CALL_3
0x400040a	          0x4889e6	                            mov rsi, rsp	       396	show-branch.c	FUNCTION_16	IF_2	CALL_3
0x400040d	      0xe800000000	                          call 0x4000412	       396	show-branch.c	FUNCTION_16	IF_2	CALL_3
0x4000412	      0xba05000000	                              mov edx, 5	       397	show-branch.c	FUNCTION_16	IF_2
0x4000417	            0x85c0	                           test eax, eax	       396	show-branch.c	FUNCTION_16	IF_2	CALL_3
0x4000419	            0x751b	                           jne 0x4000436	       396	show-branch.c	FUNCTION_16	IF_2	CALL_3
0x400041b	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_40	CALL_1
0x4000420	          0x4889ee	                            mov rsi, rbp	       975	cache.h	FUNCTION_40	CALL_1
0x4000423	          0x4889e7	                            mov rdi, rsp	       975	cache.h	FUNCTION_40	CALL_1
0x4000426	      0xe800000000	                          call 0x400042b	       975	cache.h	FUNCTION_40	CALL_1
0x400042b	          0x83f801	                              cmp eax, 1	       397	show-branch.c	FUNCTION_16	IF_2
0x400042e	            0x19d2	                            sbb edx, edx	       397	show-branch.c	FUNCTION_16	IF_2
0x4000430	          0x83e206	                              and edx, 6	       397	show-branch.c	FUNCTION_16	IF_2
0x4000433	          0x83c205	                              add edx, 5	       397	show-branch.c	FUNCTION_16	IF_2
0x4000436	          0x4863fa	                         movsxd rdi, edx	       398	show-branch.c	FUNCTION_16	CALL_4
0x4000439	          0x4801df	                            add rdi, rbx	       398	show-branch.c	FUNCTION_16	CALL_4
0x400043c	      0xba00000000	                              mov edx, 0	       398	show-branch.c	FUNCTION_16	CALL_4
0x4000441	          0x4889ee	                            mov rsi, rbp	       398	show-branch.c	FUNCTION_16	CALL_4
0x4000444	      0xe83bfeffff	                     call sym.append_ref	       398	show-branch.c	FUNCTION_16	CALL_4
0x4000449	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       399	show-branch.c	FUNCTION_16
0x400044e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       399	show-branch.c	FUNCTION_16
0x4000457	            0x7405	                            je 0x400045e	       399	show-branch.c	FUNCTION_16
0x4000459	      0xe800000000	                          call 0x400045e	       399	show-branch.c	FUNCTION_16
0x400045e	        0x4883c428	                           add rsp, 0x28	       399	show-branch.c	FUNCTION_16
0x4000462	              0x5b	                                 pop rbx	       399	show-branch.c	FUNCTION_16
0x4000463	              0x5d	                                 pop rbp	       399	show-branch.c	FUNCTION_16
0x4000464	              0xc3	                                     ret	       399	show-branch.c	FUNCTION_16
mark_seen	WHILE,0:ELSE,0:IF,1:DO,0:functions,0:CALL,1:SWITCH,0:FOR,0	8
0x400064a	      0xb800000000	                              mov eax, 0	       193	show-branch.c	FUNCTION_8
0x400064f	    0xf707f0ffff7f	           test dword [rdi], 0x7ffffff0 	       189	show-branch.c	FUNCTION_8	IF_1
0x4000655	            0x7512	                           jne 0x4000669	       189	show-branch.c	FUNCTION_8	IF_1
0x4000657	        0x4883ec08	                              sub rsp, 8	       188	show-branch.c	FUNCTION_8
0x400065b	      0xe800000000	                          call 0x4000660	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x4000660	      0xb801000000	                              mov eax, 1	       191	show-branch.c	FUNCTION_8	IF_1
0x4000665	        0x4883c408	                              add rsp, 8	       194	show-branch.c	FUNCTION_8
0x4000669	            0xf3c3	                                     ret	       194	show-branch.c	FUNCTION_8
rev_is_head	WHILE,0:ELSE,0:IF,2:DO,0:functions,0:CALL,5:SWITCH,0:FOR,0	63
0x4000198	          0x4885ff	                           test rdi, rdi	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x400019b	     0xf84a7000000	                            je 0x4000248	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001a1	              0x55	                                push rbp	       468	show-branch.c	FUNCTION_21
0x40001a2	              0x53	                                push rbx	       468	show-branch.c	FUNCTION_21
0x40001a3	        0x4883ec08	                              sub rsp, 8	       468	show-branch.c	FUNCTION_21
0x40001a7	          0x4889d0	                            mov rax, rdx	       468	show-branch.c	FUNCTION_21
0x40001aa	          0x4889f3	                            mov rbx, rsi	       468	show-branch.c	FUNCTION_21
0x40001ad	          0x4889fd	                            mov rbp, rdi	       468	show-branch.c	FUNCTION_21
0x40001b0	          0x4885d2	                           test rdx, rdx	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001b3	            0x742a	                            je 0x40001df	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001b5	          0x4885c9	                           test rcx, rcx	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001b8	            0x7425	                            je 0x40001df	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001ba	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_40	CALL_1
0x40001bf	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_40	CALL_1
0x40001c2	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_40	CALL_1
0x40001c5	      0xe800000000	                          call 0x40001ca	       975	cache.h	FUNCTION_40	CALL_1
0x40001ca	            0x89c2	                            mov edx, eax	       975	cache.h	FUNCTION_40	CALL_1
0x40001cc	      0xb800000000	                              mov eax, 0	       470	show-branch.c	FUNCTION_21	IF_1
0x40001d1	            0x85d2	                           test edx, edx	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001d3	            0x7579	                           jne 0x400024e	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001d5	          0x4889ef	                            mov rdi, rbp	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001d8	      0xb800000000	                              mov eax, 0	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001dd	            0xeb08	                           jmp 0x40001e7	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001df	          0x4889ef	                            mov rdi, rbp	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001e2	      0xb800000000	                              mov eax, 0	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001e7	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_66	DO_1	IF_1
0x40001ea	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_66	DO_1	IF_1
0x40001ec	            0x7410	                            je 0x40001fe	       484	git-compat-util.h	FUNCTION_66	DO_1	IF_1
0x40001ee	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_66	DO_1
0x40001f2	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_66	DO_1
0x40001f6	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_66	DO_1
0x40001f9	            0x74ec	                            je 0x40001e7	       488	git-compat-util.h	FUNCTION_66	DO_1
0x40001fb	          0x4889ef	                            mov rdi, rbp	       488	git-compat-util.h	FUNCTION_66	DO_1
0x40001fe	          0x4889de	                            mov rsi, rbx	       488	git-compat-util.h	FUNCTION_66	DO_1
0x4000201	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_66	DO_1
0x4000206	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_66	DO_1	IF_1
0x4000209	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_66	DO_1	IF_1
0x400020b	            0x742c	                            je 0x4000239	       484	git-compat-util.h	FUNCTION_66	DO_1	IF_1
0x400020d	        0x4883c601	                              add rsi, 1	       488	git-compat-util.h	FUNCTION_66	DO_1
0x4000211	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_66	DO_1
0x4000215	          0x3a56ff	                  cmp dl, byte [rsi - 1]	       488	git-compat-util.h	FUNCTION_66	DO_1
0x4000218	            0x74ec	                            je 0x4000206	       488	git-compat-util.h	FUNCTION_66	DO_1
0x400021a	          0x4889de	                            mov rsi, rbx	       488	git-compat-util.h	FUNCTION_66	DO_1
0x400021d	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_66	DO_1
0x4000222	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_66	DO_1	IF_1
0x4000225	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_66	DO_1	IF_1
0x4000227	            0x7410	                            je 0x4000239	       484	git-compat-util.h	FUNCTION_66	DO_1	IF_1
0x4000229	        0x4883c601	                              add rsi, 1	       488	git-compat-util.h	FUNCTION_66	DO_1
0x400022d	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_66	DO_1
0x4000231	          0x3a56ff	                  cmp dl, byte [rsi - 1]	       488	git-compat-util.h	FUNCTION_66	DO_1
0x4000234	            0x74ec	                            je 0x4000222	       488	git-compat-util.h	FUNCTION_66	DO_1
0x4000236	          0x4889de	                            mov rsi, rbx	       488	git-compat-util.h	FUNCTION_66	DO_1
0x4000239	      0xe800000000	                          call 0x400023e	       474	show-branch.c	FUNCTION_21	CALL_5
0x400023e	            0x85c0	                           test eax, eax	       474	show-branch.c	FUNCTION_21	CALL_5
0x4000240	           0xf94c0	                                 sete al	       474	show-branch.c	FUNCTION_21	CALL_5
0x4000243	           0xfb6c0	                           movzx eax, al	       474	show-branch.c	FUNCTION_21	CALL_5
0x4000246	            0xeb06	                           jmp 0x400024e	       474	show-branch.c	FUNCTION_21	CALL_5
0x4000248	      0xb800000000	                              mov eax, 0	       470	show-branch.c	FUNCTION_21	IF_1
0x400024d	              0xc3	                                     ret	       470	show-branch.c	FUNCTION_21	IF_1
0x400024e	        0x4883c408	                              add rsp, 8	       475	show-branch.c	FUNCTION_21
0x4000252	              0x5b	                                 pop rbx	       475	show-branch.c	FUNCTION_21
0x4000253	              0x5d	                                 pop rbp	       475	show-branch.c	FUNCTION_21
0x4000254	              0xc3	                                     ret	       475	show-branch.c	FUNCTION_21
get_color_code	WHILE,0:ELSE,0:IF,1:DO,0:functions,0:CALL,1:SWITCH,0:FOR,0	16
0x4000721	              0x53	                                push rbx	        32	show-branch.c	FUNCTION_1
0x4000722	            0x89fb	                            mov ebx, edi	        32	show-branch.c	FUNCTION_1
0x4000724	    0x8b3500000000	            mov esi, dword [0x0400072a] 	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x400072a	      0xbf01000000	                              mov edi, 1	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x400072f	      0xe800000000	                          call 0x4000734	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x4000734	      0xba00000000	                              mov edx, 0	        35	show-branch.c	FUNCTION_1
0x4000739	            0x85c0	                           test eax, eax	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x400073b	            0x7414	                            je 0x4000751	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x400073d	            0x89d8	                            mov eax, ebx	        34	show-branch.c	FUNCTION_1	IF_1
0x400073f	              0x99	                                     cdq	        34	show-branch.c	FUNCTION_1	IF_1
0x4000740	    0xf73d00000000	                 idiv dword [0x04000746]	        34	show-branch.c	FUNCTION_1	IF_1
0x4000746	          0x4863d2	                         movsxd rdx, edx	        34	show-branch.c	FUNCTION_1	IF_1
0x4000749	    0x488b14d50000	                  mov rdx, qword [rdx*8]	        34	show-branch.c	FUNCTION_1	IF_1
0x4000751	          0x4889d0	                            mov rax, rdx	        36	show-branch.c	FUNCTION_1
0x4000754	              0x5b	                                 pop rbx	        36	show-branch.c	FUNCTION_1
0x4000755	              0xc3	                                     ret	        36	show-branch.c	FUNCTION_1
sort_ref_range	WHILE,0:ELSE,0:IF,0:DO,0:functions,0:CALL,1:SWITCH,0:FOR,0	12
0x4000255	            0x29fe	                            sub esi, edi	       357	show-branch.c	FUNCTION_14	CALL_1
0x4000257	          0x4863f6	                         movsxd rsi, esi	       357	show-branch.c	FUNCTION_14	CALL_1
0x400025a	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_84	IF_1
0x400025e	            0x7622	                           jbe 0x4000282	      1048	git-compat-util.h	FUNCTION_84	IF_1
0x4000260	        0x4883ec08	                              sub rsp, 8	       356	show-branch.c	FUNCTION_14
0x4000264	          0x4863ff	                         movsxd rdi, edi	      1049	git-compat-util.h	FUNCTION_84	CALL_1
0x4000267	    0x488d3cfd0000	                        lea rdi, [rdi*8]	      1049	git-compat-util.h	FUNCTION_84	CALL_1
0x400026f	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_84	CALL_1
0x4000274	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_84	CALL_1
0x4000279	      0xe800000000	                          call 0x400027e	      1049	git-compat-util.h	FUNCTION_84	CALL_1
0x400027e	        0x4883c408	                              add rsp, 8	       358	show-branch.c	FUNCTION_14
0x4000282	            0xf3c3	                                     ret	       358	show-branch.c	FUNCTION_14
name_commit	WHILE,0:ELSE,0:IF,1:DO,0:functions,0:CALL,1:SWITCH,0:FOR,0	18
0x400066b	            0x4154	                                push r12	        66	show-branch.c	FUNCTION_4
0x400066d	              0x55	                                push rbp	        66	show-branch.c	FUNCTION_4
0x400066e	              0x53	                                push rbx	        66	show-branch.c	FUNCTION_4
0x400066f	          0x4889fb	                            mov rbx, rdi	        66	show-branch.c	FUNCTION_4
0x4000672	          0x4989f4	                            mov r12, rsi	        66	show-branch.c	FUNCTION_4
0x4000675	            0x89d5	                            mov ebp, edx	        66	show-branch.c	FUNCTION_4
0x4000677	      0x48837f1800	               cmp qword [rdi + 0x18], 0	        68	show-branch.c	FUNCTION_4	IF_1
0x400067c	            0x750e	                           jne 0x400068c	        68	show-branch.c	FUNCTION_4	IF_1
0x400067e	      0xbf10000000	                           mov edi, 0x10	        69	show-branch.c	FUNCTION_4	CALL_1
0x4000683	      0xe800000000	                          call 0x4000688	        69	show-branch.c	FUNCTION_4	CALL_1
0x4000688	        0x48894318	             mov qword [rbx + 0x18], rax	        69	show-branch.c	FUNCTION_4	CALL_1
0x400068c	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        70	show-branch.c	FUNCTION_4
0x4000690	          0x4c8920	                    mov qword [rax], r12	        71	show-branch.c	FUNCTION_4
0x4000693	          0x896808	                mov dword [rax + 8], ebp	        72	show-branch.c	FUNCTION_4
0x4000696	              0x5b	                                 pop rbx	        73	show-branch.c	FUNCTION_4
0x4000697	              0x5d	                                 pop rbp	        73	show-branch.c	FUNCTION_4
0x4000698	            0x415c	                                 pop r12	        73	show-branch.c	FUNCTION_4
0x400069a	              0xc3	                                     ret	        73	show-branch.c	FUNCTION_4
git_show_branch_config	WHILE,0:ELSE,0:IF,4:DO,0:functions,0:CALL,7:SWITCH,0:FOR,0	54
0x4000040	              0x55	                                push rbp	       538	show-branch.c	FUNCTION_25
0x4000041	              0x53	                                push rbx	       538	show-branch.c	FUNCTION_25
0x4000042	        0x4883ec08	                              sub rsp, 8	       538	show-branch.c	FUNCTION_25
0x4000046	          0x4889f8	                            mov rax, rdi	       538	show-branch.c	FUNCTION_25
0x4000049	          0x4889f5	                            mov rbp, rsi	       538	show-branch.c	FUNCTION_25
0x400004c	      0xbf00000000	                              mov edi, 0	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x4000051	      0xb913000000	                           mov ecx, 0x13	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x4000056	          0x4889c6	                            mov rsi, rax	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x4000059	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x400005b	           0xf97c3	                                 seta bl	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x400005e	           0xf92c1	                                 setb cl	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x4000061	            0x29cb	                            sub ebx, ecx	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x4000063	           0xfbedb	                           movsx ebx, bl	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x4000066	            0x85db	                           test ebx, ebx	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x4000068	            0x753b	                           jne 0x40000a5	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x400006a	          0x4885ed	                           test rbp, rbp	       540	show-branch.c	FUNCTION_25	IF_1	IF_2
0x400006d	            0x750f	                           jne 0x400007e	       540	show-branch.c	FUNCTION_25	IF_1	IF_2
0x400006f	          0x4889c7	                            mov rdi, rax	       541	show-branch.c	FUNCTION_25	IF_1	CALL_2
0x4000072	      0xe800000000	                          call 0x4000077	       541	show-branch.c	FUNCTION_25	IF_1	CALL_2
0x4000077	      0xbbffffffff	                     mov ebx, 0xffffffff	       541	show-branch.c	FUNCTION_25	IF_1	CALL_2
0x400007c	            0xeb65	                           jmp 0x40000e3	       541	show-branch.c	FUNCTION_25	IF_1	CALL_2
0x400007e	    0x833d00000000	               cmp dword [0x04000085], 0	       546	show-branch.c	FUNCTION_25	IF_1	IF_3
0x4000085	            0x750f	                           jne 0x4000096	       546	show-branch.c	FUNCTION_25	IF_1	IF_3
0x4000087	      0xbe00000000	                              mov esi, 0	       547	show-branch.c	FUNCTION_25	IF_1	CALL_3
0x400008c	      0xbf00000000	                              mov edi, 0	       547	show-branch.c	FUNCTION_25	IF_1	CALL_3
0x4000091	      0xe800000000	                          call 0x4000096	       547	show-branch.c	FUNCTION_25	IF_1	CALL_3
0x4000096	          0x4889ee	                            mov rsi, rbp	       548	show-branch.c	FUNCTION_25	IF_1	CALL_4
0x4000099	      0xbf00000000	                              mov edi, 0	       548	show-branch.c	FUNCTION_25	IF_1	CALL_4
0x400009e	      0xe800000000	                          call 0x40000a3	       548	show-branch.c	FUNCTION_25	IF_1	CALL_4
0x40000a3	            0xeb3e	                           jmp 0x40000e3	       549	show-branch.c	FUNCTION_25	IF_1
0x40000a5	      0xbf00000000	                              mov edi, 0	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000aa	      0xb911000000	                           mov ecx, 0x11	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000af	          0x4889c6	                            mov rsi, rax	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000b2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000b4	           0xf97c3	                                 seta bl	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000b7	           0xf92c1	                                 setb cl	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000ba	            0x29cb	                            sub ebx, ecx	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000bc	           0xfbedb	                           movsx ebx, bl	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000bf	            0x85db	                           test ebx, ebx	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000c1	            0x7513	                           jne 0x40000d6	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000c3	          0x4889ee	                            mov rsi, rbp	       553	show-branch.c	FUNCTION_25	IF_4	CALL_6
0x40000c6	          0x4889c7	                            mov rdi, rax	       553	show-branch.c	FUNCTION_25	IF_4	CALL_6
0x40000c9	      0xe800000000	                          call 0x40000ce	       553	show-branch.c	FUNCTION_25	IF_4	CALL_6
0x40000ce	    0x890500000000	            mov dword [0x040000d4], eax 	       553	show-branch.c	FUNCTION_25	IF_4	CALL_6
0x40000d4	            0xeb0d	                           jmp 0x40000e3	       554	show-branch.c	FUNCTION_25	IF_4
0x40000d6	          0x4889ee	                            mov rsi, rbp	       557	show-branch.c	FUNCTION_25	CALL_7
0x40000d9	          0x4889c7	                            mov rdi, rax	       557	show-branch.c	FUNCTION_25	CALL_7
0x40000dc	      0xe800000000	                          call 0x40000e1	       557	show-branch.c	FUNCTION_25	CALL_7
0x40000e1	            0x89c3	                            mov ebx, eax	       557	show-branch.c	FUNCTION_25	CALL_7
0x40000e3	            0x89d8	                            mov eax, ebx	       558	show-branch.c	FUNCTION_25
0x40000e5	        0x4883c408	                              add rsp, 8	       558	show-branch.c	FUNCTION_25
0x40000e9	              0x5b	                                 pop rbx	       558	show-branch.c	FUNCTION_25
0x40000ea	              0x5d	                                 pop rbp	       558	show-branch.c	FUNCTION_25
0x40000eb	              0xc3	                                     ret	       558	show-branch.c	FUNCTION_25
append_ref	WHILE,0:ELSE,0:IF,4:DO,0:functions,0:CALL,5:SWITCH,0:FOR,1	54
0x4000284	            0x4154	                                push r12	       362	show-branch.c	FUNCTION_15
0x4000286	              0x55	                                push rbp	       362	show-branch.c	FUNCTION_15
0x4000287	              0x53	                                push rbx	       362	show-branch.c	FUNCTION_15
0x4000288	          0x4889fd	                            mov rbp, rdi	       362	show-branch.c	FUNCTION_15
0x400028b	          0x4889f7	                            mov rdi, rsi	       362	show-branch.c	FUNCTION_15
0x400028e	            0x89d3	                            mov ebx, edx	       362	show-branch.c	FUNCTION_15
0x4000290	      0xbe01000000	                              mov esi, 1	       363	show-branch.c	FUNCTION_15	CALL_1
0x4000295	      0xe800000000	                          call 0x400029a	       363	show-branch.c	FUNCTION_15	CALL_1
0x400029a	          0x4885c0	                           test rax, rax	       366	show-branch.c	FUNCTION_15	IF_1
0x400029d	     0xf84a6000000	                            je 0x4000349	       366	show-branch.c	FUNCTION_15	IF_1
0x40002a3	            0x85db	                           test ebx, ebx	       369	show-branch.c	FUNCTION_15	IF_2
0x40002a5	            0x7532	                           jne 0x40002d9	       369	show-branch.c	FUNCTION_15	IF_2
0x40002a7	    0x8b0500000000	            mov eax, dword [0x040002ad] 	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002ad	            0x85c0	                           test eax, eax	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002af	            0x7e28	                           jle 0x40002d9	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002b1	      0xbb00000000	                              mov ebx, 0	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002b6	          0x8d40ff	                      lea eax, [rax - 1]	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002b9	    0x4c8d24c50000	                        lea r12, [rax*8]	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002c1	          0x488b33	                    mov rsi, qword [rbx]	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40002c4	          0x4889ef	                            mov rdi, rbp	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40002c7	      0xe800000000	                          call 0x40002cc	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40002cc	            0x85c0	                           test eax, eax	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40002ce	            0x7479	                            je 0x4000349	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40002d0	        0x4883c308	                              add rbx, 8	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40002d4	          0x4c39e3	                            cmp rbx, r12	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002d7	            0x75e8	                           jne 0x40002c1	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002d9	    0x8b1d00000000	            mov ebx, dword [0x040002df] 	       375	show-branch.c	FUNCTION_15	IF_4
0x40002df	          0x83fb18	                           cmp ebx, 0x18	       375	show-branch.c	FUNCTION_15	IF_4
0x40002e2	            0x7e36	                           jle 0x400031a	       375	show-branch.c	FUNCTION_15	IF_4
0x40002e4	    0x41b805000000	                              mov r8d, 5	        62	gettext.h	FUNCTION_32	CALL_2
0x40002ea	      0xb919000000	                           mov ecx, 0x19	        62	gettext.h	FUNCTION_32	CALL_2
0x40002ef	      0xba00000000	                              mov edx, 0	        62	gettext.h	FUNCTION_32	CALL_2
0x40002f4	      0xbe00000000	                              mov esi, 0	        62	gettext.h	FUNCTION_32	CALL_2
0x40002f9	      0xbf00000000	                              mov edi, 0	        62	gettext.h	FUNCTION_32	CALL_2
0x40002fe	      0xe800000000	                          call 0x4000303	        62	gettext.h	FUNCTION_32	CALL_2
0x4000303	      0xba19000000	                           mov edx, 0x19	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x4000308	          0x4889ee	                            mov rsi, rbp	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x400030b	          0x4889c7	                            mov rdi, rax	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x400030e	      0xb800000000	                              mov eax, 0	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x4000313	      0xe800000000	                          call 0x4000318	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x4000318	            0xeb2f	                           jmp 0x4000349	       379	show-branch.c	FUNCTION_15	IF_4
0x400031a	          0x8d4301	                      lea eax, [rbx + 1]	       381	show-branch.c	FUNCTION_15	CALL_5
0x400031d	    0x890500000000	            mov dword [0x04000323], eax 	       381	show-branch.c	FUNCTION_15	CALL_5
0x4000323	          0x4889ef	                            mov rdi, rbp	       381	show-branch.c	FUNCTION_15	CALL_5
0x4000326	      0xe800000000	                          call 0x400032b	       381	show-branch.c	FUNCTION_15	CALL_5
0x400032b	          0x4863db	                         movsxd rbx, ebx	       381	show-branch.c	FUNCTION_15	CALL_5
0x400032e	    0x488904dd0000	                  mov qword [rbx*8], rax	       381	show-branch.c	FUNCTION_15	CALL_5
0x4000336	    0x486305000000	         movsxd rax, dword [0x0400033d] 	       382	show-branch.c	FUNCTION_15
0x400033d	    0x48c704c50000	                    mov qword [rax*8], 0	       382	show-branch.c	FUNCTION_15
0x4000349	      0xb800000000	                              mov eax, 0	       384	show-branch.c	FUNCTION_15
0x400034e	              0x5b	                                 pop rbx	       384	show-branch.c	FUNCTION_15
0x400034f	              0x5d	                                 pop rbp	       384	show-branch.c	FUNCTION_15
0x4000350	            0x415c	                                 pop r12	       384	show-branch.c	FUNCTION_15
0x4000352	              0xc3	                                     ret	       384	show-branch.c	FUNCTION_15
show_one_commit	WHILE,0:ELSE,2:IF,5:DO,0:functions,0:CALL,10:SWITCH,0:FOR,0	82
0x4000756	            0x4155	                                push r13	       271	show-branch.c	FUNCTION_10
0x4000758	            0x4154	                                push r12	       271	show-branch.c	FUNCTION_10
0x400075a	              0x55	                                push rbp	       271	show-branch.c	FUNCTION_10
0x400075b	              0x53	                                push rbx	       271	show-branch.c	FUNCTION_10
0x400075c	        0x4883ec28	                           sub rsp, 0x28	       271	show-branch.c	FUNCTION_10
0x4000760	          0x4889fd	                            mov rbp, rdi	       271	show-branch.c	FUNCTION_10
0x4000763	          0x4189f5	                           mov r13d, esi	       271	show-branch.c	FUNCTION_10
0x4000766	    0x64488b042528	                mov rax, qword fs:[0x28]	       271	show-branch.c	FUNCTION_10
0x400076f	      0x4889442418	             mov qword [rsp + 0x18], rax	       271	show-branch.c	FUNCTION_10
0x4000774	            0x31c0	                            xor eax, eax	       271	show-branch.c	FUNCTION_10
0x4000776	    0x48c704240000	                      mov qword [rsp], 0	       272	show-branch.c	FUNCTION_10
0x400077e	    0x48c744240800	                  mov qword [rsp + 8], 0	       272	show-branch.c	FUNCTION_10
0x4000787	    0x48c744241000	               mov qword [rsp + 0x10], 0	       272	show-branch.c	FUNCTION_10
0x4000790	        0x4c8b6718	            mov r12, qword [rdi + 0x18] 	       274	show-branch.c	FUNCTION_10
0x4000794	      0xb900000000	                              mov ecx, 0	       273	show-branch.c	FUNCTION_10
0x4000799	          0xf60701	                      test byte [rdi], 1	       276	show-branch.c	FUNCTION_10	IF_1
0x400079c	            0x7415	                            je 0x40007b3	       276	show-branch.c	FUNCTION_10	IF_1
0x400079e	          0x4889e2	                            mov rdx, rsp	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x40007a1	          0x4889fe	                            mov rsi, rdi	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x40007a4	      0xbf05000000	                              mov edi, 5	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x40007a9	      0xe800000000	                          call 0x40007ae	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x40007ae	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       278	show-branch.c	FUNCTION_10	IF_1
0x40007b3	          0x4889cb	                            mov rbx, rcx	       273	show-branch.c	FUNCTION_10
0x40007b6	      0xb800000000	                              mov eax, 0	       273	show-branch.c	FUNCTION_10
0x40007bb	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_66	DO_1	IF_1
0x40007be	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_66	DO_1	IF_1
0x40007c0	            0x7410	                            je 0x40007d2	       484	git-compat-util.h	FUNCTION_66	DO_1	IF_1
0x40007c2	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_66	DO_1
0x40007c6	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_66	DO_1
0x40007ca	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_66	DO_1
0x40007cd	            0x74ec	                            je 0x40007bb	       488	git-compat-util.h	FUNCTION_66	DO_1
0x40007cf	          0x4889cb	                            mov rbx, rcx	       488	git-compat-util.h	FUNCTION_66	DO_1
0x40007d2	          0x4585ed	                         test r13d, r13d	       282	show-branch.c	FUNCTION_10	IF_2
0x40007d5	     0xf858c000000	                           jne 0x4000867	       282	show-branch.c	FUNCTION_10	IF_2
0x40007db	          0x4d85e4	                           test r12, r12	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x40007de	            0x7461	                            je 0x4000841	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x40007e0	        0x498b1424	                    mov rdx, qword [r12]	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x40007e4	          0x4885d2	                           test rdx, rdx	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x40007e7	            0x7458	                            je 0x4000841	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x40007e9	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x40007ee	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_92	CALL_2
0x40007f3	      0xb800000000	                              mov eax, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x40007f8	      0xe800000000	                          call 0x40007fd	       104	stdio2.h	FUNCTION_92	CALL_2
0x40007fd	      0x418b542408	                mov edx, dword [r12 + 8]	       285	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4
0x4000802	            0x85d2	                           test edx, edx	       285	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4
0x4000804	            0x7425	                            je 0x400082b	       285	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4
0x4000806	          0x83fa01	                              cmp edx, 1	       286	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4	IF_5
0x4000809	            0x750c	                           jne 0x4000817	       286	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4	IF_5
0x400080b	      0xbf5e000000	                           mov edi, 0x5e	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000810	      0xe800000000	                          call 0x4000815	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000815	            0xeb14	                           jmp 0x400082b	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000817	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x400081c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000821	      0xb800000000	                              mov eax, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000826	      0xe800000000	                          call 0x400082b	       104	stdio2.h	FUNCTION_92	CALL_2
0x400082b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000830	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000835	      0xb800000000	                              mov eax, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x400083a	      0xe800000000	                          call 0x400083f	       104	stdio2.h	FUNCTION_92	CALL_2
0x400083f	            0xeb26	                           jmp 0x4000867	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000841	        0x488d7d04	                      lea rdi, [rbp + 4]	       295	show-branch.c	FUNCTION_10	IF_2	ELSE_2	CALL_8
0x4000845	    0x8b3500000000	            mov esi, dword [0x0400084b] 	       294	show-branch.c	FUNCTION_10	IF_2	ELSE_2	CALL_7
0x400084b	      0xe800000000	                          call 0x4000850	       294	show-branch.c	FUNCTION_10	IF_2	ELSE_2	CALL_7
0x4000850	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000853	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000858	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_92	CALL_2
0x400085d	      0xb800000000	                              mov eax, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000862	      0xe800000000	                          call 0x4000867	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000867	          0x4889df	                            mov rdi, rbx	       298	show-branch.c	FUNCTION_10	CALL_9
0x400086a	      0xe800000000	                          call 0x400086f	       298	show-branch.c	FUNCTION_10	CALL_9
0x400086f	          0x4889e7	                            mov rdi, rsp	       299	show-branch.c	FUNCTION_10	CALL_10
0x4000872	      0xe800000000	                          call 0x4000877	       299	show-branch.c	FUNCTION_10	CALL_10
0x4000877	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       300	show-branch.c	FUNCTION_10
0x400087c	    0x644833042528	                xor rax, qword fs:[0x28]	       300	show-branch.c	FUNCTION_10
0x4000885	            0x7405	                            je 0x400088c	       300	show-branch.c	FUNCTION_10
0x4000887	      0xe800000000	                          call 0x400088c	       300	show-branch.c	FUNCTION_10
0x400088c	        0x4883c428	                           add rsp, 0x28	       300	show-branch.c	FUNCTION_10
0x4000890	              0x5b	                                 pop rbx	       300	show-branch.c	FUNCTION_10
0x4000891	              0x5d	                                 pop rbp	       300	show-branch.c	FUNCTION_10
0x4000892	            0x415c	                                 pop r12	       300	show-branch.c	FUNCTION_10
0x4000894	            0x415d	                                 pop r13	       300	show-branch.c	FUNCTION_10
0x4000896	              0xc3	                                     ret	       300	show-branch.c	FUNCTION_10
append_remote_ref	WHILE,0:ELSE,0:IF,2:DO,0:functions,0:CALL,4:SWITCH,0:FOR,0	39
0x4000353	              0x55	                                push rbp	       403	show-branch.c	FUNCTION_17
0x4000354	              0x53	                                push rbx	       403	show-branch.c	FUNCTION_17
0x4000355	        0x4883ec28	                           sub rsp, 0x28	       403	show-branch.c	FUNCTION_17
0x4000359	          0x4889fb	                            mov rbx, rdi	       403	show-branch.c	FUNCTION_17
0x400035c	          0x4889f5	                            mov rbp, rsi	       403	show-branch.c	FUNCTION_17
0x400035f	    0x64488b042528	                mov rax, qword fs:[0x28]	       403	show-branch.c	FUNCTION_17
0x4000368	      0x4889442418	             mov qword [rsp + 0x18], rax	       403	show-branch.c	FUNCTION_17
0x400036d	            0x31c0	                            xor eax, eax	       403	show-branch.c	FUNCTION_17
0x400036f	      0xbe00000000	                              mov esi, 0	       406	show-branch.c	FUNCTION_17	IF_1	CALL_1
0x4000374	      0xe800000000	                          call 0x4000379	       406	show-branch.c	FUNCTION_17	IF_1	CALL_1
0x4000379	            0x85c0	                           test eax, eax	       406	show-branch.c	FUNCTION_17	IF_1	CALL_1
0x400037b	            0x7443	                            je 0x40003c0	       406	show-branch.c	FUNCTION_17	IF_1	CALL_1
0x400037d	        0x488d7b0d	                    lea rdi, [rbx + 0xd]	       411	show-branch.c	FUNCTION_17	IF_2	CALL_3
0x4000381	          0x4889e6	                            mov rsi, rsp	       411	show-branch.c	FUNCTION_17	IF_2	CALL_3
0x4000384	      0xe800000000	                          call 0x4000389	       411	show-branch.c	FUNCTION_17	IF_2	CALL_3
0x4000389	      0xba05000000	                              mov edx, 5	       412	show-branch.c	FUNCTION_17	IF_2
0x400038e	            0x85c0	                           test eax, eax	       411	show-branch.c	FUNCTION_17	IF_2	CALL_3
0x4000390	            0x751b	                           jne 0x40003ad	       411	show-branch.c	FUNCTION_17	IF_2	CALL_3
0x4000392	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_40	CALL_1
0x4000397	          0x4889ee	                            mov rsi, rbp	       975	cache.h	FUNCTION_40	CALL_1
0x400039a	          0x4889e7	                            mov rdi, rsp	       975	cache.h	FUNCTION_40	CALL_1
0x400039d	      0xe800000000	                          call 0x40003a2	       975	cache.h	FUNCTION_40	CALL_1
0x40003a2	          0x83f801	                              cmp eax, 1	       412	show-branch.c	FUNCTION_17	IF_2
0x40003a5	            0x19d2	                            sbb edx, edx	       412	show-branch.c	FUNCTION_17	IF_2
0x40003a7	          0x83e208	                              and edx, 8	       412	show-branch.c	FUNCTION_17	IF_2
0x40003aa	          0x83c205	                              add edx, 5	       412	show-branch.c	FUNCTION_17	IF_2
0x40003ad	          0x4863fa	                         movsxd rdi, edx	       413	show-branch.c	FUNCTION_17	CALL_4
0x40003b0	          0x4801df	                            add rdi, rbx	       413	show-branch.c	FUNCTION_17	CALL_4
0x40003b3	      0xba00000000	                              mov edx, 0	       413	show-branch.c	FUNCTION_17	CALL_4
0x40003b8	          0x4889ee	                            mov rsi, rbp	       413	show-branch.c	FUNCTION_17	CALL_4
0x40003bb	      0xe8c4feffff	                     call sym.append_ref	       413	show-branch.c	FUNCTION_17	CALL_4
0x40003c0	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       414	show-branch.c	FUNCTION_17
0x40003c5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       414	show-branch.c	FUNCTION_17
0x40003ce	            0x7405	                            je 0x40003d5	       414	show-branch.c	FUNCTION_17
0x40003d0	      0xe800000000	                          call 0x40003d5	       414	show-branch.c	FUNCTION_17
0x40003d5	        0x4883c428	                           add rsp, 0x28	       414	show-branch.c	FUNCTION_17
0x40003d9	              0x5b	                                 pop rbx	       414	show-branch.c	FUNCTION_17
0x40003da	              0x5d	                                 pop rbp	       414	show-branch.c	FUNCTION_17
0x40003db	              0xc3	                                     ret	       414	show-branch.c	FUNCTION_17
compare_ref_name	WHILE,0:ELSE,0:IF,0:DO,0:functions,0:CALL,1:SWITCH,0:FOR,0	75
0x4000897	          0x488b0e	                    mov rcx, qword [rsi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x400089a	          0x488b37	                    mov rsi, qword [rdi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x400089d	           0xfb616	                   movzx edx, byte [rsi]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008a0	          0x8d42d0	                   lea eax, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008a3	            0x3c09	                               cmp al, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008a5	     0xf87b4000000	                            ja 0x400095f	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008ab	      0xb800000000	                              mov eax, 0	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008b0	          0x8d0480	                  lea eax, [rax + rax*4]	       314	show-branch.c	FUNCTION_11	FOR_1
0x40008b3	           0xfbed2	                           movsx edx, dl	       314	show-branch.c	FUNCTION_11	FOR_1
0x40008b6	        0x8d4442d0	           lea eax, [rdx + rax*2 - 0x30]	       314	show-branch.c	FUNCTION_11	FOR_1
0x40008ba	        0x4883c601	                              add rsi, 1	       313	show-branch.c	FUNCTION_11	FOR_1
0x40008be	           0xfb616	                   movzx edx, byte [rsi]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008c1	          0x8d7ad0	                   lea edi, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008c4	        0x4080ff09	                              cmp dil, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008c8	            0x76e6	                           jbe 0x40008b0	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008ca	           0xfb611	                   movzx edx, byte [rcx]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008cd	          0x8d7ad0	                   lea edi, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008d0	        0x4080ff09	                              cmp dil, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008d4	            0x7722	                            ja 0x40008f8	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008d6	      0xbf00000000	                              mov edi, 0	       311	show-branch.c	FUNCTION_11	FOR_1
0x40008db	          0x8d3cbf	                  lea edi, [rdi + rdi*4]	       314	show-branch.c	FUNCTION_11	FOR_1
0x40008de	           0xfbed2	                           movsx edx, dl	       314	show-branch.c	FUNCTION_11	FOR_1
0x40008e1	        0x8d7c7ad0	           lea edi, [rdx + rdi*2 - 0x30]	       314	show-branch.c	FUNCTION_11	FOR_1
0x40008e5	        0x4883c101	                              add rcx, 1	       313	show-branch.c	FUNCTION_11	FOR_1
0x40008e9	           0xfb611	                   movzx edx, byte [rcx]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008ec	        0x448d42d0	                   lea r8d, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008f0	        0x4180f809	                              cmp r8b, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008f4	            0x76e5	                           jbe 0x40008db	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008f6	            0xeb05	                           jmp 0x40008fd	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008f8	      0xbf00000000	                              mov edi, 0	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008fd	            0x39c7	                            cmp edi, eax	       327	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x40008ff	            0x7508	                           jne 0x4000909	       327	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x4000901	    0x41ba00000000	                             mov r10d, 0	       336	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x4000907	            0xeb03	                           jmp 0x400090c	       336	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x4000909	            0x29f8	                            sub eax, edi	       328	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x400090b	              0xc3	                                     ret	       328	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x400090c	        0x440fb606	                   movzx r8d, byte [rsi]	       331	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000910	        0x410fbec0	                          movsx eax, r8b	       331	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000914	           0xfb639	                   movzx edi, byte [rcx]	       332	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000917	        0x400fbed7	                          movsx edx, dil	       332	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x400091b	        0x448d48d0	                   lea r9d, [rax - 0x30]	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x400091f	        0x4183f909	                              cmp r9d, 9	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x4000923	            0x7651	                           jbe 0x4000976	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x4000925	          0x4189d1	                            mov r9d, edx	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x4000928	        0x4183e930	                           sub r9d, 0x30	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x400092c	        0x4183f909	                              cmp r9d, 9	       336	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x4000930	        0x410f46d2	                        cmovbe edx, r10d	       336	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x4000934	            0x39d0	                            cmp eax, edx	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000936	            0x740a	                            je 0x4000942	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000938	            0xeb05	                           jmp 0x400093f	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x400093a	      0xb800000000	                              mov eax, 0	       334	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x400093f	            0x29d0	                            sub eax, edx	       338	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000941	              0xc3	                                     ret	       338	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000942	            0x85d2	                           test edx, edx	       339	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_5
0x4000944	            0x740a	                            je 0x4000950	       339	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_5
0x4000946	        0x4883c601	                              add rsi, 1	       341	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x400094a	        0x4883c101	                              add rcx, 1	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x400094e	            0xebbc	                           jmp 0x400090c	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000950	          0x4108f8	                             or r8b, dil	       344	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x4000953	     0xf8544ffffff	                           jne 0x400089d	       344	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x4000959	      0xb800000000	                              mov eax, 0	       345	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x400095e	              0xc3	                                     ret	       352	show-branch.c	FUNCTION_13	CALL_1
0x400095f	           0xfb611	                   movzx edx, byte [rcx]	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000962	          0x8d7ad0	                   lea edi, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000965	      0xb800000000	                              mov eax, 0	       311	show-branch.c	FUNCTION_11	FOR_1
0x400096a	        0x4080ff09	                              cmp dil, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x400096e	     0xf8662ffffff	                           jbe 0x40008d6	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000974	            0xeb8b	                           jmp 0x4000901	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000976	        0x400fbec7	                          movsx eax, dil	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x400097a	          0x83e830	                           sub eax, 0x30	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x400097d	          0x83f809	                              cmp eax, 9	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x4000980	            0x76ce	                           jbe 0x4000950	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x4000982	            0x85d2	                           test edx, edx	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000984	            0x75b4	                           jne 0x400093a	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000986	            0xebc8	                           jmp 0x4000950	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
cmd_show_branch	WHILE,2:ELSE,7:IF,42:DO,0:functions,0:CALL,104:SWITCH,0:FOR,8	1128
0x4000988	            0x4157	                                push r15	       603	show-branch.c	FUNCTION_28
0x400098a	            0x4156	                                push r14	       603	show-branch.c	FUNCTION_28
0x400098c	            0x4155	                                push r13	       603	show-branch.c	FUNCTION_28
0x400098e	            0x4154	                                push r12	       603	show-branch.c	FUNCTION_28
0x4000990	              0x55	                                push rbp	       603	show-branch.c	FUNCTION_28
0x4000991	              0x53	                                push rbx	       603	show-branch.c	FUNCTION_28
0x4000992	    0x4881ecf80600	                          sub rsp, 0x6f8	       603	show-branch.c	FUNCTION_28
0x4000999	            0x89fb	                            mov ebx, edi	       603	show-branch.c	FUNCTION_28
0x400099b	          0x4889f5	                            mov rbp, rsi	       603	show-branch.c	FUNCTION_28
0x400099e	          0x4989d4	                            mov r12, rdx	       603	show-branch.c	FUNCTION_28
0x40009a1	    0x64488b042528	                mov rax, qword fs:[0x28]	       603	show-branch.c	FUNCTION_28
0x40009aa	    0x48898424e806	            mov qword [rsp + 0x6e8], rax	       603	show-branch.c	FUNCTION_28
0x40009b2	            0x31c0	                            xor eax, eax	       603	show-branch.c	FUNCTION_28
0x40009b4	    0x48c744246800	               mov qword [rsp + 0x68], 0	       606	show-branch.c	FUNCTION_28
0x40009bd	    0x48c744247000	               mov qword [rsp + 0x70], 0	       606	show-branch.c	FUNCTION_28
0x40009c6	    0xc74424340000	               mov dword [rsp + 0x34], 0	       608	show-branch.c	FUNCTION_28
0x40009ce	    0xc74424380000	               mov dword [rsp + 0x38], 0	       609	show-branch.c	FUNCTION_28
0x40009d6	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	       609	show-branch.c	FUNCTION_28
0x40009de	    0xc74424400000	               mov dword [rsp + 0x40], 0	       611	show-branch.c	FUNCTION_28
0x40009e6	    0xc74424440000	               mov dword [rsp + 0x44], 0	       614	show-branch.c	FUNCTION_28
0x40009ee	    0xc74424480000	               mov dword [rsp + 0x48], 0	       615	show-branch.c	FUNCTION_28
0x40009f6	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	       616	show-branch.c	FUNCTION_28
0x40009fe	    0xc74424500000	               mov dword [rsp + 0x50], 0	       617	show-branch.c	FUNCTION_28
0x4000a06	    0xc74424540000	               mov dword [rsp + 0x54], 0	       619	show-branch.c	FUNCTION_28
0x4000a0e	    0xc74424580000	               mov dword [rsp + 0x58], 0	       621	show-branch.c	FUNCTION_28
0x4000a16	    0xc744245c0100	               mov dword [rsp + 0x5c], 1	       622	show-branch.c	FUNCTION_28
0x4000a1e	    0x48c744247800	               mov qword [rsp + 0x78], 0	       623	show-branch.c	FUNCTION_28
0x4000a27	    0x488dbc24e002	                  lea rdi, [rsp + 0x2e0]	       624	show-branch.c	FUNCTION_28
0x4000a2f	      0xb980000000	                           mov ecx, 0x80	       624	show-branch.c	FUNCTION_28
0x4000a34	          0xf348ab	              rep stosq qword [rdi], rax	       624	show-branch.c	FUNCTION_28
0x4000a37	    0xc78424e00200	              mov dword [rsp + 0x2e0], 7	       624	show-branch.c	FUNCTION_28
0x4000a42	    0xc78424e40200	          mov dword [rsp + 0x2e4], 0x61 	       624	show-branch.c	FUNCTION_28
0x4000a4d	    0x48c78424e802	              mov qword [rsp + 0x2e8], 0	       624	show-branch.c	FUNCTION_28
0x4000a59	      0x488d442438	                   lea rax, [rsp + 0x38]	       624	show-branch.c	FUNCTION_28
0x4000a5e	    0x48898424f002	            mov qword [rsp + 0x2f0], rax	       624	show-branch.c	FUNCTION_28
0x4000a66	    0x48c784240003	              mov qword [rsp + 0x300], 0	       624	show-branch.c	FUNCTION_28
0x4000a72	    0xc78424080300	              mov dword [rsp + 0x308], 2	       624	show-branch.c	FUNCTION_28
0x4000a7d	    0x48c784241803	              mov qword [rsp + 0x318], 1	       624	show-branch.c	FUNCTION_28
0x4000a89	    0xc78424200300	              mov dword [rsp + 0x320], 7	       624	show-branch.c	FUNCTION_28
0x4000a94	    0xc78424240300	          mov dword [rsp + 0x324], 0x72 	       624	show-branch.c	FUNCTION_28
0x4000a9f	    0x48c784242803	              mov qword [rsp + 0x328], 0	       624	show-branch.c	FUNCTION_28
0x4000aab	      0x488d44243c	                   lea rax, [rsp + 0x3c]	       624	show-branch.c	FUNCTION_28
0x4000ab0	    0x488984243003	            mov qword [rsp + 0x330], rax	       624	show-branch.c	FUNCTION_28
0x4000ab8	    0x48c784244003	              mov qword [rsp + 0x340], 0	       624	show-branch.c	FUNCTION_28
0x4000ac4	    0xc78424480300	              mov dword [rsp + 0x348], 2	       624	show-branch.c	FUNCTION_28
0x4000acf	    0x48c784245803	              mov qword [rsp + 0x358], 1	       624	show-branch.c	FUNCTION_28
0x4000adb	    0xc78424600300	           mov dword [rsp + 0x360], 0xc 	       624	show-branch.c	FUNCTION_28
0x4000ae6	    0x48c784246803	              mov qword [rsp + 0x368], 0	       624	show-branch.c	FUNCTION_28
0x4000af2	    0x48c784247003	              mov qword [rsp + 0x370], 0	       624	show-branch.c	FUNCTION_28
0x4000afe	    0x48c784247803	              mov qword [rsp + 0x378], 0	       624	show-branch.c	FUNCTION_28
0x4000b0a	    0x48c784248003	              mov qword [rsp + 0x380], 0	       624	show-branch.c	FUNCTION_28
0x4000b16	    0xc78424880300	              mov dword [rsp + 0x388], 1	       624	show-branch.c	FUNCTION_28
0x4000b21	    0x48c784249003	              mov qword [rsp + 0x390], 0	       624	show-branch.c	FUNCTION_28
0x4000b2d	    0x48c784249803	              mov qword [rsp + 0x398], 0	       624	show-branch.c	FUNCTION_28
0x4000b39	    0xc78424a00300	            mov dword [rsp + 0x3a0], 0xa	       624	show-branch.c	FUNCTION_28
0x4000b44	    0x48c78424a803	              mov qword [rsp + 0x3a8], 0	       624	show-branch.c	FUNCTION_28
0x4000b50	      0x488d442434	                   lea rax, [rsp + 0x34]	       624	show-branch.c	FUNCTION_28
0x4000b55	    0x48898424b003	            mov qword [rsp + 0x3b0], rax	       624	show-branch.c	FUNCTION_28
0x4000b5d	    0x48c78424b803	              mov qword [rsp + 0x3b8], 0	       624	show-branch.c	FUNCTION_28
0x4000b69	    0x48c78424c003	              mov qword [rsp + 0x3c0], 0	       624	show-branch.c	FUNCTION_28
0x4000b75	    0xc78424c80300	              mov dword [rsp + 0x3c8], 1	       624	show-branch.c	FUNCTION_28
0x4000b80	    0x48c78424d803	              mov qword [rsp + 0x3d8], 1	       624	show-branch.c	FUNCTION_28
0x4000b8c	    0xc78424e00300	              mov dword [rsp + 0x3e0], 7	       624	show-branch.c	FUNCTION_28
0x4000b97	    0x48c78424e803	              mov qword [rsp + 0x3e8], 0	       624	show-branch.c	FUNCTION_28
0x4000ba3	    0x48898424f003	            mov qword [rsp + 0x3f0], rax	       624	show-branch.c	FUNCTION_28
0x4000bab	    0x48c784240004	              mov qword [rsp + 0x400], 0	       624	show-branch.c	FUNCTION_28
0x4000bb7	    0xc78424080400	              mov dword [rsp + 0x408], 2	       624	show-branch.c	FUNCTION_28
0x4000bc2	    0x48c784241804	mov qword [rsp + 0x418], 0xffffffffffffffff	       624	show-branch.c	FUNCTION_28
0x4000bce	    0xc78424200400	              mov dword [rsp + 0x420], 7	       624	show-branch.c	FUNCTION_28
0x4000bd9	    0x48c784242804	              mov qword [rsp + 0x428], 0	       624	show-branch.c	FUNCTION_28
0x4000be5	      0x488d44244c	                   lea rax, [rsp + 0x4c]	       624	show-branch.c	FUNCTION_28
0x4000bea	    0x488984243004	            mov qword [rsp + 0x430], rax	       624	show-branch.c	FUNCTION_28
0x4000bf2	    0x48c784244004	              mov qword [rsp + 0x440], 0	       624	show-branch.c	FUNCTION_28
0x4000bfe	    0xc78424480400	              mov dword [rsp + 0x448], 2	       624	show-branch.c	FUNCTION_28
0x4000c09	    0x48c784245804	              mov qword [rsp + 0x458], 1	       624	show-branch.c	FUNCTION_28
0x4000c15	    0xc78424600400	              mov dword [rsp + 0x460], 7	       624	show-branch.c	FUNCTION_28
0x4000c20	    0x48c784246804	              mov qword [rsp + 0x468], 0	       624	show-branch.c	FUNCTION_28
0x4000c2c	      0x488d442454	                   lea rax, [rsp + 0x54]	       624	show-branch.c	FUNCTION_28
0x4000c31	    0x488984247004	            mov qword [rsp + 0x470], rax	       624	show-branch.c	FUNCTION_28
0x4000c39	    0x48c784248004	              mov qword [rsp + 0x480], 0	       624	show-branch.c	FUNCTION_28
0x4000c45	    0xc78424880400	              mov dword [rsp + 0x488], 2	       624	show-branch.c	FUNCTION_28
0x4000c50	    0x48c784249804	              mov qword [rsp + 0x498], 1	       624	show-branch.c	FUNCTION_28
0x4000c5c	    0xc78424a00400	              mov dword [rsp + 0x4a0], 7	       624	show-branch.c	FUNCTION_28
0x4000c67	    0x48c78424a804	              mov qword [rsp + 0x4a8], 0	       624	show-branch.c	FUNCTION_28
0x4000c73	      0x488d442450	                   lea rax, [rsp + 0x50]	       624	show-branch.c	FUNCTION_28
0x4000c78	    0x48898424b004	            mov qword [rsp + 0x4b0], rax	       624	show-branch.c	FUNCTION_28
0x4000c80	    0x48c78424c004	              mov qword [rsp + 0x4c0], 0	       624	show-branch.c	FUNCTION_28
0x4000c8c	    0xc78424c80400	              mov dword [rsp + 0x4c8], 2	       624	show-branch.c	FUNCTION_28
0x4000c97	    0x48c78424d804	              mov qword [rsp + 0x4d8], 1	       624	show-branch.c	FUNCTION_28
0x4000ca3	    0xc78424e00400	              mov dword [rsp + 0x4e0], 7	       624	show-branch.c	FUNCTION_28
0x4000cae	    0x48c78424e804	              mov qword [rsp + 0x4e8], 0	       624	show-branch.c	FUNCTION_28
0x4000cba	      0x488d442444	                   lea rax, [rsp + 0x44]	       624	show-branch.c	FUNCTION_28
0x4000cbf	    0x48898424f004	            mov qword [rsp + 0x4f0], rax	       624	show-branch.c	FUNCTION_28
0x4000cc7	    0x48c784240005	              mov qword [rsp + 0x500], 0	       624	show-branch.c	FUNCTION_28
0x4000cd3	    0xc78424080500	              mov dword [rsp + 0x508], 2	       624	show-branch.c	FUNCTION_28
0x4000cde	    0x48c784241805	              mov qword [rsp + 0x518], 1	       624	show-branch.c	FUNCTION_28
0x4000cea	    0xc78424200500	              mov dword [rsp + 0x520], 7	       624	show-branch.c	FUNCTION_28
0x4000cf5	    0x48c784242805	              mov qword [rsp + 0x528], 0	       624	show-branch.c	FUNCTION_28
0x4000d01	      0x488d442448	                   lea rax, [rsp + 0x48]	       624	show-branch.c	FUNCTION_28
0x4000d06	    0x488984243005	            mov qword [rsp + 0x530], rax	       624	show-branch.c	FUNCTION_28
0x4000d0e	    0x48c784244005	              mov qword [rsp + 0x540], 0	       624	show-branch.c	FUNCTION_28
0x4000d1a	    0xc78424480500	              mov dword [rsp + 0x548], 2	       624	show-branch.c	FUNCTION_28
0x4000d25	    0x48c784245805	              mov qword [rsp + 0x558], 1	       624	show-branch.c	FUNCTION_28
0x4000d31	    0xc78424600500	              mov dword [rsp + 0x560], 7	       624	show-branch.c	FUNCTION_28
0x4000d3c	    0x48c784246805	              mov qword [rsp + 0x568], 0	       624	show-branch.c	FUNCTION_28
0x4000d48	      0x488d442440	                   lea rax, [rsp + 0x40]	       624	show-branch.c	FUNCTION_28
0x4000d4d	    0x488984247005	            mov qword [rsp + 0x570], rax	       624	show-branch.c	FUNCTION_28
0x4000d55	    0x48c784248005	              mov qword [rsp + 0x580], 0	       624	show-branch.c	FUNCTION_28
0x4000d61	    0xc78424880500	              mov dword [rsp + 0x588], 2	       624	show-branch.c	FUNCTION_28
0x4000d6c	    0xc78424a00500	              mov dword [rsp + 0x5a0], 7	       624	show-branch.c	FUNCTION_28
0x4000d77	    0x48c78424a805	              mov qword [rsp + 0x5a8], 0	       624	show-branch.c	FUNCTION_28
0x4000d83	      0x488d542458	                   lea rdx, [rsp + 0x58]	       624	show-branch.c	FUNCTION_28
0x4000d88	    0x48899424b005	            mov qword [rsp + 0x5b0], rdx	       624	show-branch.c	FUNCTION_28
0x4000d90	    0x48c78424c005	              mov qword [rsp + 0x5c0], 0	       624	show-branch.c	FUNCTION_28
0x4000d9c	    0xc78424c80500	              mov dword [rsp + 0x5c8], 2	       624	show-branch.c	FUNCTION_28
0x4000da7	    0x48c78424d805	              mov qword [rsp + 0x5d8], 1	       624	show-branch.c	FUNCTION_28
0x4000db3	    0xc78424e00500	              mov dword [rsp + 0x5e0], 7	       624	show-branch.c	FUNCTION_28
0x4000dbe	    0x48c78424e805	              mov qword [rsp + 0x5e8], 0	       624	show-branch.c	FUNCTION_28
0x4000dca	      0x488d54245c	                   lea rdx, [rsp + 0x5c]	       624	show-branch.c	FUNCTION_28
0x4000dcf	    0x48899424f005	            mov qword [rsp + 0x5f0], rdx	       624	show-branch.c	FUNCTION_28
0x4000dd7	    0x48c784240006	              mov qword [rsp + 0x600], 0	       624	show-branch.c	FUNCTION_28
0x4000de3	    0xc78424080600	              mov dword [rsp + 0x608], 2	       624	show-branch.c	FUNCTION_28
0x4000dee	    0xc78424200600	              mov dword [rsp + 0x620], 7	       624	show-branch.c	FUNCTION_28
0x4000df9	    0x48c784242806	              mov qword [rsp + 0x628], 0	       624	show-branch.c	FUNCTION_28
0x4000e05	    0x488984243006	            mov qword [rsp + 0x630], rax	       624	show-branch.c	FUNCTION_28
0x4000e0d	    0x48c784244006	              mov qword [rsp + 0x640], 0	       624	show-branch.c	FUNCTION_28
0x4000e19	    0xc78424480600	              mov dword [rsp + 0x648], 2	       624	show-branch.c	FUNCTION_28
0x4000e24	    0x48c784245806	              mov qword [rsp + 0x658], 1	       624	show-branch.c	FUNCTION_28
0x4000e30	    0xc78424600600	           mov dword [rsp + 0x660], 0xc 	       624	show-branch.c	FUNCTION_28
0x4000e3b	    0xc78424640600	          mov dword [rsp + 0x664], 0x67 	       624	show-branch.c	FUNCTION_28
0x4000e46	    0x48c784246806	              mov qword [rsp + 0x668], 0	       624	show-branch.c	FUNCTION_28
0x4000e52	      0x488d442478	                   lea rax, [rsp + 0x78]	       624	show-branch.c	FUNCTION_28
0x4000e57	    0x488984247006	            mov qword [rsp + 0x670], rax	       624	show-branch.c	FUNCTION_28
0x4000e5f	    0x48c784247806	              mov qword [rsp + 0x678], 0	       624	show-branch.c	FUNCTION_28
0x4000e6b	    0x48c784248006	              mov qword [rsp + 0x680], 0	       624	show-branch.c	FUNCTION_28
0x4000e77	    0xc78424880600	          mov dword [rsp + 0x688], 0x41 	       624	show-branch.c	FUNCTION_28
0x4000e82	    0x48c784249006	              mov qword [rsp + 0x690], 0	       624	show-branch.c	FUNCTION_28
0x4000e8e	      0xbe00000000	                              mov esi, 0	       663	show-branch.c	FUNCTION_28	CALL_32
0x4000e93	      0xbf00000000	                              mov edi, 0	       663	show-branch.c	FUNCTION_28	CALL_32
0x4000e98	      0xe800000000	                          call 0x4000e9d	       663	show-branch.c	FUNCTION_28	CALL_32
0x4000e9d	          0x83fb01	                              cmp ebx, 1	       666	show-branch.c	FUNCTION_28	IF_1
0x4000ea0	            0x7513	                           jne 0x4000eb5	       666	show-branch.c	FUNCTION_28	IF_1
0x4000ea2	    0x8b0500000000	            mov eax, dword [0x04000ea8] 	       666	show-branch.c	FUNCTION_28	IF_1
0x4000ea8	            0x85c0	                           test eax, eax	       666	show-branch.c	FUNCTION_28	IF_1
0x4000eaa	            0x7409	                            je 0x4000eb5	       666	show-branch.c	FUNCTION_28	IF_1
0x4000eac	    0x488b2d000000	            mov rbp, qword [0x04000eb3] 	       668	show-branch.c	FUNCTION_28	IF_1
0x4000eb3	            0x89c3	                            mov ebx, eax	       667	show-branch.c	FUNCTION_28	IF_1
0x4000eb5	    0x41b902000000	                              mov r9d, 2	       671	show-branch.c	FUNCTION_28	CALL_33
0x4000ebb	    0x41b800000000	                              mov r8d, 0	       671	show-branch.c	FUNCTION_28	CALL_33
0x4000ec1	    0x488d8c24e002	                  lea rcx, [rsp + 0x2e0]	       671	show-branch.c	FUNCTION_28	CALL_33
0x4000ec9	          0x4c89e2	                            mov rdx, r12	       671	show-branch.c	FUNCTION_28	CALL_33
0x4000ecc	          0x4889ee	                            mov rsi, rbp	       671	show-branch.c	FUNCTION_28	CALL_33
0x4000ecf	            0x89df	                            mov edi, ebx	       671	show-branch.c	FUNCTION_28	CALL_33
0x4000ed1	      0xe800000000	                          call 0x4000ed6	       671	show-branch.c	FUNCTION_28	CALL_33
0x4000ed6	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       673	show-branch.c	FUNCTION_28	IF_2
0x4000eda	            0x85d2	                           test edx, edx	       673	show-branch.c	FUNCTION_28	IF_2
0x4000edc	            0x7408	                            je 0x4000ee6	       673	show-branch.c	FUNCTION_28	IF_2
0x4000ede	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	       674	show-branch.c	FUNCTION_28	IF_2
0x4000ee6	        0x8b4c2434	            mov ecx, dword [rsp + 0x34] 	       676	show-branch.c	FUNCTION_28	IF_3
0x4000eea	            0x85c9	                           test ecx, ecx	       676	show-branch.c	FUNCTION_28	IF_3
0x4000eec	            0x750d	                           jne 0x4000efb	       676	show-branch.c	FUNCTION_28	IF_3
0x4000eee	    0x833d00000000	               cmp dword [0x04000ef5], 0	       676	show-branch.c	FUNCTION_28	IF_3
0x4000ef5	     0xf84350f0000	                            je 0x4001e30	       676	show-branch.c	FUNCTION_28	IF_3
0x4000efb	      0x837c244800	               cmp dword [rsp + 0x48], 0	       680	show-branch.c	FUNCTION_28	IF_3	IF_4
0x4000f00	            0x7507	                           jne 0x4000f09	       680	show-branch.c	FUNCTION_28	IF_3	IF_4
0x4000f02	      0x837c244400	               cmp dword [rsp + 0x44], 0	       680	show-branch.c	FUNCTION_28	IF_3	IF_4
0x4000f07	            0x7412	                            je 0x4000f1b	       680	show-branch.c	FUNCTION_28	IF_3	IF_4
0x4000f09	    0x488db424e002	                  lea rsi, [rsp + 0x2e0]	       681	show-branch.c	FUNCTION_28	IF_3	IF_4	CALL_34
0x4000f11	      0xbf00000000	                              mov edi, 0	       681	show-branch.c	FUNCTION_28	IF_3	IF_4	CALL_34
0x4000f16	      0xe800000000	                          call 0x4000f1b	       681	show-branch.c	FUNCTION_28	IF_3	IF_4	CALL_34
0x4000f1b	    0x833d00000000	               cmp dword [0x04000f22], 0	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f22	     0xf84080f0000	                            je 0x4001e30	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f28	            0x85c9	                           test ecx, ecx	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f2a	            0x7f0f	                            jg 0x4000f3b	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f2c	            0x85d2	                           test edx, edx	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f2e	            0x750b	                           jne 0x4000f3b	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f30	      0x837c243c00	               cmp dword [rsp + 0x3c], 0	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f35	     0xf84ea0e0000	                            je 0x4001e25	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f3b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_31	CALL_2
0x4000f40	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_31	CALL_2
0x4000f45	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_31	CALL_2
0x4000f4a	      0xe800000000	                          call 0x4000f4f	        54	gettext.h	FUNCTION_31	CALL_2
0x4000f4f	          0x4889c7	                            mov rdi, rax	       690	show-branch.c	FUNCTION_28	IF_3	IF_5	CALL_36
0x4000f52	      0xb800000000	                              mov eax, 0	       690	show-branch.c	FUNCTION_28	IF_3	IF_5	CALL_36
0x4000f57	      0xe800000000	                          call 0x4000f5c	       690	show-branch.c	FUNCTION_28	IF_3	IF_5	CALL_36
0x4000f5c	         0x354243c	             add edx, dword [rsp + 0x3c]	       695	show-branch.c	FUNCTION_28	IF_6
0x4000f60	            0x7508	                           jne 0x4000f6a	       695	show-branch.c	FUNCTION_28	IF_6
0x4000f62	    0xc74424380100	               mov dword [rsp + 0x38], 1	       696	show-branch.c	FUNCTION_28	IF_6
0x4000f6a	    0x833d00000000	               cmp dword [0x04000f71], 0	       698	show-branch.c	FUNCTION_28	IF_7
0x4000f71	            0x7515	                           jne 0x4000f88	       698	show-branch.c	FUNCTION_28	IF_7
0x4000f73	          0x8d50ff	                      lea edx, [rax - 1]	       698	show-branch.c	FUNCTION_28	IF_7
0x4000f76	      0x488d5cd508	              lea rbx, [rbp + rdx*8 + 8]	       698	show-branch.c	FUNCTION_28	IF_7
0x4000f7b	            0x85c0	                           test eax, eax	       769	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1
0x4000f7d	     0xf8fdb020000	                            jg 0x400125e	       769	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1
0x4000f83	      0xe9e8020000	                           jmp 0x4001270	       769	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1
0x4000f88	    0xc74424600000	               mov dword [rsp + 0x60], 0	       701	show-branch.c	FUNCTION_28	IF_7
0x4000f90	            0x85c0	                           test eax, eax	       704	show-branch.c	FUNCTION_28	IF_7	IF_8
0x4000f92	            0x7554	                           jne 0x4000fe8	       704	show-branch.c	FUNCTION_28	IF_7	IF_8
0x4000f94	      0xb900000000	                              mov ecx, 0	       707	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_37
0x4000f99	    0x488d94244001	                  lea rdx, [rsp + 0x140]	       707	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_37
0x4000fa1	      0xbe01000000	                              mov esi, 1	       707	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_37
0x4000fa6	      0xbf00000000	                              mov edi, 0	       707	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_37
0x4000fab	      0xe800000000	                          call 0x4000fb0	       707	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_37
0x4000fb0	    0x488905000000	            mov qword [0x04000fb7], rax 	       707	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_37
0x4000fb7	    0x48c705000000	               mov qword [0x04000fc2], 0	       710	show-branch.c	FUNCTION_28	IF_7	IF_8
0x4000fc2	          0x4885c0	                           test rax, rax	       713	show-branch.c	FUNCTION_28	IF_7	IF_8	IF_9
0x4000fc5	            0x7547	                           jne 0x400100e	       713	show-branch.c	FUNCTION_28	IF_7	IF_8	IF_9
0x4000fc7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_31	CALL_2
0x4000fcc	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_31	CALL_2
0x4000fd1	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_31	CALL_2
0x4000fd6	      0xe800000000	                          call 0x4000fdb	        54	gettext.h	FUNCTION_31	CALL_2
0x4000fdb	          0x4889c7	                            mov rdi, rax	       714	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_39
0x4000fde	      0xb800000000	                              mov eax, 0	       714	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_39
0x4000fe3	      0xe800000000	                          call 0x4000fe8	       714	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_39
0x4000fe8	          0x83f801	                              cmp eax, 1	       716	show-branch.c	FUNCTION_28	IF_7	IF_10
0x4000feb	            0x7426	                            je 0x4001013	       716	show-branch.c	FUNCTION_28	IF_7	IF_10
0x4000fed	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_31	CALL_2
0x4000ff2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_31	CALL_2
0x4000ff7	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_31	CALL_2
0x4000ffc	      0xe800000000	                          call 0x4001001	        54	gettext.h	FUNCTION_31	CALL_2
0x4001001	          0x4889c7	                            mov rdi, rax	       717	show-branch.c	FUNCTION_28	IF_7	CALL_41
0x4001004	      0xb800000000	                              mov eax, 0	       717	show-branch.c	FUNCTION_28	IF_7	CALL_41
0x4001009	      0xe800000000	                          call 0x400100e	       717	show-branch.c	FUNCTION_28	IF_7	CALL_41
0x400100e	      0xbd00000000	                              mov ebp, 0	       711	show-branch.c	FUNCTION_28	IF_7	IF_8
0x4001013	    0x833d00000000	           cmp dword [0x0400101a], 0x19 	       719	show-branch.c	FUNCTION_28	IF_7	IF_11
0x400101a	            0x7e31	                           jle 0x400104d	       719	show-branch.c	FUNCTION_28	IF_7	IF_11
0x400101c	    0x41b805000000	                              mov r8d, 5	        62	gettext.h	FUNCTION_32	CALL_2
0x4001022	      0xb919000000	                           mov ecx, 0x19	        62	gettext.h	FUNCTION_32	CALL_2
0x4001027	      0xba00000000	                              mov edx, 0	        62	gettext.h	FUNCTION_32	CALL_2
0x400102c	      0xbe00000000	                              mov esi, 0	        62	gettext.h	FUNCTION_32	CALL_2
0x4001031	      0xbf00000000	                              mov edi, 0	        62	gettext.h	FUNCTION_32	CALL_2
0x4001036	      0xe800000000	                          call 0x400103b	        62	gettext.h	FUNCTION_32	CALL_2
0x400103b	      0xbe19000000	                           mov esi, 0x19	       720	show-branch.c	FUNCTION_28	IF_7	IF_11	CALL_43
0x4001040	          0x4889c7	                            mov rdi, rax	       720	show-branch.c	FUNCTION_28	IF_7	IF_11	CALL_43
0x4001043	      0xb800000000	                              mov eax, 0	       720	show-branch.c	FUNCTION_28	IF_7	IF_11	CALL_43
0x4001048	      0xe800000000	                          call 0x400104d	       720	show-branch.c	FUNCTION_28	IF_7	IF_11	CALL_43
0x400104d	        0x4c8b4500	                     mov r8, qword [rbp]	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4001051	      0xb800000000	                              mov eax, 0	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4001056	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x400105d	          0x4c89c7	                             mov rdi, r8	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4001060	            0xf2ae	              repne scasb al, byte [rdi]	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4001062	          0x4889c8	                            mov rax, rcx	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4001065	          0x48f7d0	                                 not rax	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4001068	        0x488d70ff	                      lea rsi, [rax - 1]	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x400106c	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4001074	    0x488d94244001	                  lea rdx, [rsp + 0x140]	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x400107c	          0x4c89c7	                             mov rdi, r8	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x400107f	      0xe800000000	                          call 0x4001084	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4001084	            0x85c0	                           test eax, eax	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4001086	            0x7528	                           jne 0x40010b0	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4001088	        0x488b5d00	                    mov rbx, qword [rbp]	       724	show-branch.c	FUNCTION_28	IF_7	CALL_47
0x400108c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_31	CALL_2
0x4001091	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_31	CALL_2
0x4001096	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_31	CALL_2
0x400109b	      0xe800000000	                          call 0x40010a0	        54	gettext.h	FUNCTION_31	CALL_2
0x40010a0	          0x4889de	                            mov rsi, rbx	       724	show-branch.c	FUNCTION_28	IF_7	CALL_47
0x40010a3	          0x4889c7	                            mov rdi, rax	       724	show-branch.c	FUNCTION_28	IF_7	CALL_47
0x40010a6	      0xb800000000	                              mov eax, 0	       724	show-branch.c	FUNCTION_28	IF_7	CALL_47
0x40010ab	      0xe800000000	                          call 0x40010b0	       724	show-branch.c	FUNCTION_28	IF_7	CALL_47
0x40010b0	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	       727	show-branch.c	FUNCTION_28	IF_7	IF_13
0x40010b5	          0x4885ff	                           test rdi, rdi	       727	show-branch.c	FUNCTION_28	IF_7	IF_13
0x40010b8	            0x746c	                            je 0x4001126	       727	show-branch.c	FUNCTION_28	IF_7	IF_13
0x40010ba	      0xba0a000000	                            mov edx, 0xa	       729	show-branch.c	FUNCTION_28	IF_7	IF_13	CALL_48
0x40010bf	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       729	show-branch.c	FUNCTION_28	IF_7	IF_13	CALL_48
0x40010c7	      0xe800000000	                          call 0x40010cc	       729	show-branch.c	FUNCTION_28	IF_7	IF_13	CALL_48
0x40010cc	        0x89442460	             mov dword [rsp + 0x60], eax	       729	show-branch.c	FUNCTION_28	IF_7	IF_13	CALL_48
0x40010d0	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       730	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14
0x40010d8	          0x803800	                       cmp byte [rax], 0	       730	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14
0x40010db	            0x7449	                            je 0x4001126	       730	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14
0x40010dd	      0xbe00000000	                              mov esi, 0	       733	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_49
0x40010e2	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	       733	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_49
0x40010e7	      0xe800000000	                          call 0x40010ec	       733	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_49
0x40010ec	        0x4883ec08	                              sub rsp, 8	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x40010f0	      0x488d542468	                   lea rdx, [rsp + 0x68]	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x40010f5	              0x52	                                push rdx	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x40010f6	            0x6a00	                                  push 0	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x40010f8	            0x6a00	                                  push 0	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x40010fa	    0x41b900000000	                              mov r9d, 0	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001100	    0x4c8d84246001	                   lea r8, [rsp + 0x160]	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001108	      0xb9ffffffff	                     mov ecx, 0xffffffff	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x400110d	          0x4889c2	                            mov rdx, rax	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001110	      0xbe00000000	                              mov esi, 0	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001115	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x400111d	      0xe800000000	                          call 0x4001122	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001122	        0x4883c420	                           add rsp, 0x20	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001126	    0x833d00000000	               cmp dword [0x0400112d], 0	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x400112d	     0xf8e1c010000	                           jle 0x400124f	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x4001133	    0x4c8dac241002	                  lea r13, [rsp + 0x210]	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x400113b	    0x41bc00000000	                             mov r12d, 0	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x4001141	      0x4c8d7c2464	                   lea r15, [rsp + 0x64]	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001146	    0x4c8db4249000	                   lea r14, [rsp + 0x90]	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400114e	          0x4489e1	                           mov ecx, r12d	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001151	         0x34c2460	             add ecx, dword [rsp + 0x60]	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001155	        0x4883ec08	                              sub rsp, 8	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001159	            0x6a00	                                  push 0	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400115b	            0x4157	                                push r15	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400115d	            0x4156	                                push r14	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400115f	    0x4c8d8c24a800	                    lea r9, [rsp + 0xa8]	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001167	    0x4c8d84246001	                   lea r8, [rsp + 0x160]	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400116f	      0xba00000000	                              mov edx, 0	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001174	      0xbe00000000	                              mov esi, 0	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001179	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001181	      0xe800000000	                          call 0x4001186	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001186	        0x4883c420	                           add rsp, 0x20	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400118a	            0x85c0	                           test eax, eax	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400118c	            0x740c	                            je 0x400119a	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400118e	    0x448925000000	           mov dword [0x04001195], r12d 	       748	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15
0x4001195	      0xe9b5000000	                           jmp 0x400124f	       748	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15
0x400119a	      0xbe09000000	                              mov esi, 9	       751	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_52
0x400119f	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       751	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_52
0x40011a7	      0xe800000000	                          call 0x40011ac	       751	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_52
0x40011ac	        0x488d5801	                      lea rbx, [rax + 1]	       755	show-branch.c	FUNCTION_28	IF_7	FOR_1	ELSE_1
0x40011b0	          0x4885c0	                           test rax, rax	       755	show-branch.c	FUNCTION_28	IF_7	FOR_1	ELSE_1
0x40011b3	      0xb800000000	                              mov eax, 0	       755	show-branch.c	FUNCTION_28	IF_7	FOR_1	ELSE_1
0x40011b8	        0x480f44d8	                          cmove rbx, rax	       755	show-branch.c	FUNCTION_28	IF_7	FOR_1	ELSE_1
0x40011bc	      0xbf01000000	                              mov edi, 1	       758	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_55
0x40011c1	      0xe800000000	                          call 0x40011c6	       758	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_55
0x40011c6	          0x4889c2	                            mov rdx, rax	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40011c9	        0x8b742464	            mov esi, dword [rsp + 0x64] 	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40011cd	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40011d5	      0xe800000000	                          call 0x40011da	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40011da	          0x4889da	                            mov rdx, rbx	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40011dd	          0x4889c6	                            mov rsi, rax	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40011e0	      0xbf00000000	                              mov edi, 0	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40011e5	      0xb800000000	                              mov eax, 0	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40011ea	      0xe800000000	                          call 0x40011ef	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40011ef	        0x49894500	                    mov qword [r13], rax	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40011f3	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       760	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_56
0x40011fb	      0xe800000000	                          call 0x4001200	       760	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_56
0x4001200	          0x4489e2	                           mov edx, r12d	       762	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_57
0x4001203	         0x3542460	             add edx, dword [rsp + 0x60]	       762	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_57
0x4001207	        0x488b7500	                    mov rsi, qword [rbp]	       762	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_57
0x400120b	      0xbf00000000	                              mov edi, 0	       762	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_57
0x4001210	      0xb800000000	                              mov eax, 0	       762	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_57
0x4001215	      0xe800000000	                          call 0x400121a	       762	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_57
0x400121a	          0x4889c3	                            mov rbx, rax	       762	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_57
0x400121d	      0xba01000000	                              mov edx, 1	       763	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_58
0x4001222	    0x488db4244001	                  lea rsi, [rsp + 0x140]	       763	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_58
0x400122a	          0x4889c7	                            mov rdi, rax	       763	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_58
0x400122d	      0xe852f0ffff	                     call sym.append_ref	       763	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_58
0x4001232	          0x4889df	                            mov rdi, rbx	       764	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_59
0x4001235	      0xe800000000	                          call 0x400123a	       764	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_59
0x400123a	        0x4183c401	                             add r12d, 1	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x400123e	        0x4983c508	                              add r13, 8	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x4001242	    0x443925000000	           cmp dword [0x04001249], r12d 	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x4001249	     0xf8ffffeffff	                            jg 0x400114e	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x400124f	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       766	show-branch.c	FUNCTION_28	IF_7	CALL_60
0x4001257	      0xe800000000	                          call 0x400125c	       766	show-branch.c	FUNCTION_28	IF_7	CALL_60
0x400125c	            0xeb6c	                           jmp 0x40012ca	       766	show-branch.c	FUNCTION_28	IF_7	CALL_60
0x400125e	        0x488b7d00	                    mov rdi, qword [rbp]	       770	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1	CALL_61
0x4001262	      0xe8d9f2ffff	                 call sym.append_one_rev	       770	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1	CALL_61
0x4001267	        0x4883c508	                              add rbp, 8	       771	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1
0x400126b	          0x4839dd	                            cmp rbp, rbx	       769	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1
0x400126e	            0x75ee	                           jne 0x400125e	       769	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1
0x4001270	        0x8b442438	            mov eax, dword [rsp + 0x38] 	       773	show-branch.c	FUNCTION_28	ELSE_2	IF_17
0x4001274	        0x8b5c243c	            mov ebx, dword [rsp + 0x3c] 	       773	show-branch.c	FUNCTION_28	ELSE_2	IF_17
0x4001278	            0x89c1	                            mov ecx, eax	       773	show-branch.c	FUNCTION_28	ELSE_2	IF_17
0x400127a	             0x1d9	                            add ecx, ebx	       773	show-branch.c	FUNCTION_28	ELSE_2	IF_17
0x400127c	            0x744c	                            je 0x40012ca	       773	show-branch.c	FUNCTION_28	ELSE_2	IF_17
0x400127e	            0x85c0	                           test eax, eax	       452	show-branch.c	FUNCTION_20	IF_1
0x4001280	            0x7422	                            je 0x40012a4	       452	show-branch.c	FUNCTION_20	IF_1
0x4001282	    0x8b2d00000000	            mov ebp, dword [0x04001288] 	       453	show-branch.c	FUNCTION_20	IF_1
0x4001288	      0xbe00000000	                              mov esi, 0	       455	show-branch.c	FUNCTION_20	IF_1	CALL_1
0x400128d	      0xbf00000000	                              mov edi, 0	       455	show-branch.c	FUNCTION_20	IF_1	CALL_1
0x4001292	      0xe800000000	                          call 0x4001297	       455	show-branch.c	FUNCTION_20	IF_1	CALL_1
0x4001297	    0x8b3500000000	            mov esi, dword [0x0400129d] 	       456	show-branch.c	FUNCTION_20	IF_1	CALL_2
0x400129d	            0x89ef	                            mov edi, ebp	       456	show-branch.c	FUNCTION_20	IF_1	CALL_2
0x400129f	      0xe8b1efffff	                 call sym.sort_ref_range	       456	show-branch.c	FUNCTION_20	IF_1	CALL_2
0x40012a4	            0x85db	                           test ebx, ebx	       458	show-branch.c	FUNCTION_20	IF_2
0x40012a6	            0x7422	                            je 0x40012ca	       458	show-branch.c	FUNCTION_20	IF_2
0x40012a8	    0x8b1d00000000	            mov ebx, dword [0x040012ae] 	       459	show-branch.c	FUNCTION_20	IF_2
0x40012ae	      0xbe00000000	                              mov esi, 0	       461	show-branch.c	FUNCTION_20	IF_2	CALL_3
0x40012b3	      0xbf00000000	                              mov edi, 0	       461	show-branch.c	FUNCTION_20	IF_2	CALL_3
0x40012b8	      0xe800000000	                          call 0x40012bd	       461	show-branch.c	FUNCTION_20	IF_2	CALL_3
0x40012bd	    0x8b3500000000	            mov esi, dword [0x040012c3] 	       462	show-branch.c	FUNCTION_20	IF_2	CALL_4
0x40012c3	            0x89df	                            mov edi, ebx	       462	show-branch.c	FUNCTION_20	IF_2	CALL_4
0x40012c5	      0xe88befffff	                 call sym.sort_ref_range	       462	show-branch.c	FUNCTION_20	IF_2	CALL_4
0x40012ca	      0xb900000000	                              mov ecx, 0	       777	show-branch.c	FUNCTION_28	CALL_63
0x40012cf	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	       777	show-branch.c	FUNCTION_28	CALL_63
0x40012d7	      0xbe01000000	                              mov esi, 1	       777	show-branch.c	FUNCTION_28	CALL_63
0x40012dc	      0xbf00000000	                              mov edi, 0	       777	show-branch.c	FUNCTION_28	CALL_63
0x40012e1	      0xe800000000	                          call 0x40012e6	       777	show-branch.c	FUNCTION_28	CALL_63
0x40012e6	          0x4989c4	                            mov r12, rax	       777	show-branch.c	FUNCTION_28	CALL_63
0x40012e9	      0x4889442408	                mov qword [rsp + 8], rax	       777	show-branch.c	FUNCTION_28	CALL_63
0x40012ee	      0x837c245400	               cmp dword [rsp + 0x54], 0	       780	show-branch.c	FUNCTION_28	IF_18
0x40012f3	            0x7478	                            je 0x400136d	       780	show-branch.c	FUNCTION_28	IF_18
0x40012f5	          0x4885c0	                           test rax, rax	       780	show-branch.c	FUNCTION_28	IF_18
0x40012f8	            0x7473	                            je 0x400136d	       780	show-branch.c	FUNCTION_28	IF_18
0x40012fa	    0x8b0500000000	            mov eax, dword [0x04001300] 	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x4001300	            0x85c0	                           test eax, eax	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x4001302	            0x7e41	                           jle 0x4001345	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x4001304	      0xbb00000000	                              mov ebx, 0	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x4001309	          0x8d40ff	                      lea eax, [rax - 1]	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x400130c	    0x488d2cc50000	                        lea rbp, [rax*8]	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x4001314	      0xb900000000	                              mov ecx, 0	       786	show-branch.c	FUNCTION_28	IF_18	FOR_2	IF_19	CALL_64
0x4001319	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	       786	show-branch.c	FUNCTION_28	IF_18	FOR_2	IF_19	CALL_64
0x4001321	          0x488b33	                    mov rsi, qword [rbx]	       786	show-branch.c	FUNCTION_28	IF_18	FOR_2	IF_19	CALL_64
0x4001324	          0x4c89e7	                            mov rdi, r12	       786	show-branch.c	FUNCTION_28	IF_18	FOR_2	IF_19	CALL_64
0x4001327	      0xe86ceeffff	                    call sym.rev_is_head	       786	show-branch.c	FUNCTION_28	IF_18	FOR_2	IF_19	CALL_64
0x400132c	            0x85c0	                           test eax, eax	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x400132e	            0x753d	                           jne 0x400136d	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x4001330	        0x4883c308	                              add rbx, 8	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x4001334	          0x4839eb	                            cmp rbx, rbp	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x4001337	            0x75db	                           jne 0x4001314	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x4001339	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x400133e	      0xb800000000	                              mov eax, 0	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x4001343	            0xeb0a	                           jmp 0x400134f	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x4001345	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x400134a	      0xb800000000	                              mov eax, 0	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x400134f	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_66	DO_1	IF_1
0x4001352	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_66	DO_1	IF_1
0x4001354	            0x7412	                            je 0x4001368	       484	git-compat-util.h	FUNCTION_66	DO_1	IF_1
0x4001356	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_66	DO_1
0x400135a	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_66	DO_1
0x400135e	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_66	DO_1
0x4001361	            0x74ec	                            je 0x400134f	       488	git-compat-util.h	FUNCTION_66	DO_1
0x4001363	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       792	show-branch.c	FUNCTION_28	IF_18	IF_20
0x4001368	      0xe8d3f1ffff	                 call sym.append_one_rev	       794	show-branch.c	FUNCTION_28	IF_18	IF_20	CALL_66
0x400136d	    0x833d00000000	               cmp dword [0x04001374], 0	       798	show-branch.c	FUNCTION_28	IF_21
0x4001374	            0x7428	                            je 0x400139e	       798	show-branch.c	FUNCTION_28	IF_21
0x4001376	    0x488b3d000000	            mov rdi, qword [0x0400137d] 	       803	show-branch.c	FUNCTION_28	FOR_3
0x400137d	      0xbd00000000	                              mov ebp, 0	       803	show-branch.c	FUNCTION_28	FOR_3
0x4001382	    0x41bc04000000	                             mov r12d, 4	       803	show-branch.c	FUNCTION_28	FOR_3
0x4001388	    0x41bf00000000	                             mov r15d, 0	       803	show-branch.c	FUNCTION_28	FOR_3
0x400138e	    0x41bd01000000	                             mov r13d, 1	       805	show-branch.c	FUNCTION_28	FOR_3
0x4001394	          0x4885ff	                           test rdi, rdi	       803	show-branch.c	FUNCTION_28	FOR_3
0x4001397	            0x756f	                           jne 0x4001408	       803	show-branch.c	FUNCTION_28	FOR_3
0x4001399	      0xe99f010000	                           jmp 0x400153d	       803	show-branch.c	FUNCTION_28	FOR_3
0x400139e	    0x488b0d000000	            mov rcx, qword [0x040013a5] 	        97	stdio2.h	FUNCTION_91	CALL_1
0x40013a5	      0xba15000000	                           mov edx, 0x15	        97	stdio2.h	FUNCTION_91	CALL_1
0x40013aa	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_91	CALL_1
0x40013af	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	FUNCTION_91	CALL_1
0x40013b4	      0xe800000000	                          call 0x40013b9	        97	stdio2.h	FUNCTION_91	CALL_1
0x40013b9	      0xbf00000000	                              mov edi, 0	       800	show-branch.c	FUNCTION_28	IF_21	CALL_68
0x40013be	      0xe800000000	                          call 0x40013c3	       800	show-branch.c	FUNCTION_28	IF_21	CALL_68
0x40013c3	        0x418d4f02	                      lea ecx, [r15 + 2]	       805	show-branch.c	FUNCTION_28	FOR_3
0x40013c7	          0x4589ec	                          mov r12d, r13d	       805	show-branch.c	FUNCTION_28	FOR_3
0x40013ca	          0x41d3e4	                            shl r12d, cl	       805	show-branch.c	FUNCTION_28	FOR_3
0x40013cd	        0x4883c508	                              add rbp, 8	       805	show-branch.c	FUNCTION_28	FOR_3
0x40013d1	        0x4183ff19	                          cmp r15d, 0x19	       807	show-branch.c	FUNCTION_28	FOR_3	IF_22
0x40013d5	            0x7531	                           jne 0x4001408	       807	show-branch.c	FUNCTION_28	FOR_3	IF_22
0x40013d7	    0x41b805000000	                              mov r8d, 5	        62	gettext.h	FUNCTION_32	CALL_2
0x40013dd	      0xb919000000	                           mov ecx, 0x19	        62	gettext.h	FUNCTION_32	CALL_2
0x40013e2	      0xba00000000	                              mov edx, 0	        62	gettext.h	FUNCTION_32	CALL_2
0x40013e7	      0xbe00000000	                              mov esi, 0	        62	gettext.h	FUNCTION_32	CALL_2
0x40013ec	      0xbf00000000	                              mov edi, 0	        62	gettext.h	FUNCTION_32	CALL_2
0x40013f1	      0xe800000000	                          call 0x40013f6	        62	gettext.h	FUNCTION_32	CALL_2
0x40013f6	      0xbe19000000	                           mov esi, 0x19	       808	show-branch.c	FUNCTION_28	FOR_3	IF_22	CALL_70
0x40013fb	          0x4889c7	                            mov rdi, rax	       808	show-branch.c	FUNCTION_28	FOR_3	IF_22	CALL_70
0x40013fe	      0xb800000000	                              mov eax, 0	       808	show-branch.c	FUNCTION_28	FOR_3	IF_22	CALL_70
0x4001403	      0xe800000000	                          call 0x4001408	       808	show-branch.c	FUNCTION_28	FOR_3	IF_22	CALL_70
0x4001408	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	       811	show-branch.c	FUNCTION_28	FOR_3	IF_23	CALL_71
0x4001410	      0xe800000000	                          call 0x4001415	       811	show-branch.c	FUNCTION_28	FOR_3	IF_23	CALL_71
0x4001415	            0x85c0	                           test eax, eax	       811	show-branch.c	FUNCTION_28	FOR_3	IF_23	CALL_71
0x4001417	            0x742f	                            je 0x4001448	       811	show-branch.c	FUNCTION_28	FOR_3	IF_23	CALL_71
0x4001419	          0x4963c7	                        movsxd rax, r15d	       812	show-branch.c	FUNCTION_28	FOR_3	CALL_73
0x400141c	    0x488b1cc50000	                  mov rbx, qword [rax*8]	       812	show-branch.c	FUNCTION_28	FOR_3	CALL_73
0x4001424	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_31	CALL_2
0x4001429	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_31	CALL_2
0x400142e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_31	CALL_2
0x4001433	      0xe800000000	                          call 0x4001438	        54	gettext.h	FUNCTION_31	CALL_2
0x4001438	          0x4889de	                            mov rsi, rbx	       812	show-branch.c	FUNCTION_28	FOR_3	CALL_73
0x400143b	          0x4889c7	                            mov rdi, rax	       812	show-branch.c	FUNCTION_28	FOR_3	CALL_73
0x400143e	      0xb800000000	                              mov eax, 0	       812	show-branch.c	FUNCTION_28	FOR_3	CALL_73
0x4001443	      0xe800000000	                          call 0x4001448	       812	show-branch.c	FUNCTION_28	FOR_3	CALL_73
0x4001448	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	       813	show-branch.c	FUNCTION_28	FOR_3	CALL_74
0x4001450	      0xe800000000	                          call 0x4001455	       813	show-branch.c	FUNCTION_28	FOR_3	CALL_74
0x4001455	          0x4889c3	                            mov rbx, rax	       813	show-branch.c	FUNCTION_28	FOR_3	CALL_74
0x4001458	          0x4885c0	                           test rax, rax	       814	show-branch.c	FUNCTION_28	FOR_3	IF_24
0x400145b	            0x7542	                           jne 0x400149f	       814	show-branch.c	FUNCTION_28	FOR_3	IF_24
0x400145d	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x4001465	      0xe800000000	                          call 0x400146a	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x400146a	          0x4889c5	                            mov rbp, rax	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x400146d	          0x4963c7	                        movsxd rax, r15d	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x4001470	    0x488b1cc50000	                  mov rbx, qword [rax*8]	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x4001478	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_31	CALL_2
0x400147d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_31	CALL_2
0x4001482	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_31	CALL_2
0x4001487	      0xe800000000	                          call 0x400148c	        54	gettext.h	FUNCTION_31	CALL_2
0x400148c	          0x4889ea	                            mov rdx, rbp	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x400148f	          0x4889de	                            mov rsi, rbx	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x4001492	          0x4889c7	                            mov rdi, rax	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x4001495	      0xb800000000	                              mov eax, 0	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x400149a	      0xe800000000	                          call 0x400149f	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x400149f	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_107	CALL_1
0x40014a4	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_107	CALL_1
0x40014a7	      0xe800000000	                          call 0x40014ac	        75	commit.h	FUNCTION_107	CALL_1
0x40014ac	      0x488d742470	                   lea rsi, [rsp + 0x70]	       818	show-branch.c	FUNCTION_28	FOR_3	CALL_79
0x40014b1	          0x4889df	                            mov rdi, rbx	       818	show-branch.c	FUNCTION_28	FOR_3	CALL_79
0x40014b4	      0xe891f1ffff	                      call sym.mark_seen	       818	show-branch.c	FUNCTION_28	FOR_3	CALL_79
0x40014b9	            0x8b13	                    mov edx, dword [rbx]	       824	show-branch.c	FUNCTION_28	FOR_3
0x40014bb	            0x89d0	                            mov eax, edx	       824	show-branch.c	FUNCTION_28	FOR_3
0x40014bd	          0xc1e804	                              shr eax, 4	       824	show-branch.c	FUNCTION_28	FOR_3
0x40014c0	          0x4409e0	                            or eax, r12d	       824	show-branch.c	FUNCTION_28	FOR_3
0x40014c3	      0x25ffffff07	                      and eax, 0x7ffffff	       824	show-branch.c	FUNCTION_28	FOR_3
0x40014c8	            0x89c1	                            mov ecx, eax	       824	show-branch.c	FUNCTION_28	FOR_3
0x40014ca	          0xc1e104	                              shl ecx, 4	       824	show-branch.c	FUNCTION_28	FOR_3
0x40014cd	    0x81e20f000080	                     and edx, 0x8000000f	       824	show-branch.c	FUNCTION_28	FOR_3
0x40014d3	             0x9ca	                             or edx, ecx	       824	show-branch.c	FUNCTION_28	FOR_3
0x40014d5	            0x8913	                    mov dword [rbx], edx	       824	show-branch.c	FUNCTION_28	FOR_3
0x40014d7	          0x4439e0	                           cmp eax, r12d	       825	show-branch.c	FUNCTION_28	FOR_3	IF_25
0x40014da	            0x750d	                           jne 0x40014e9	       825	show-branch.c	FUNCTION_28	FOR_3	IF_25
0x40014dc	      0x488d742468	                   lea rsi, [rsp + 0x68]	       826	show-branch.c	FUNCTION_28	FOR_3	CALL_80
0x40014e1	          0x4889df	                            mov rdi, rbx	       826	show-branch.c	FUNCTION_28	FOR_3	CALL_80
0x40014e4	      0xe800000000	                          call 0x40014e9	       826	show-branch.c	FUNCTION_28	FOR_3	CALL_80
0x40014e9	    0x48899c2c4001	      mov qword [rsp + rbp + 0x140], rbx	       827	show-branch.c	FUNCTION_28	FOR_3
0x40014f1	        0x4183c701	                             add r15d, 1	       803	show-branch.c	FUNCTION_28	FOR_3
0x40014f5	    0x488bbd000000	                    mov rdi, qword [rbp]	       803	show-branch.c	FUNCTION_28	FOR_3
0x40014fc	          0x4885ff	                           test rdi, rdi	       803	show-branch.c	FUNCTION_28	FOR_3
0x40014ff	     0xf85befeffff	                           jne 0x40013c3	       803	show-branch.c	FUNCTION_28	FOR_3
0x4001505	          0x4585ff	                         test r15d, r15d	       829	show-branch.c	FUNCTION_28	FOR_4
0x4001508	            0x7e33	                           jle 0x400153d	       829	show-branch.c	FUNCTION_28	FOR_4
0x400150a	        0x418d47ff	                      lea eax, [r15 - 1]	       829	show-branch.c	FUNCTION_28	FOR_4
0x400150e	    0x488d0c850400	                    lea rcx, [rax*4 + 4]	       829	show-branch.c	FUNCTION_28	FOR_4
0x4001516	      0xba00000000	                              mov edx, 0	       829	show-branch.c	FUNCTION_28	FOR_4
0x400151b	    0x488b84544001	   mov rax, qword [rsp + rdx*2 + 0x140] 	       830	show-branch.c	FUNCTION_28	FOR_4
0x4001523	            0x8b00	                    mov eax, dword [rax]	       830	show-branch.c	FUNCTION_28	FOR_4
0x4001525	          0xc1e804	                              shr eax, 4	       830	show-branch.c	FUNCTION_28	FOR_4
0x4001528	      0x25ffffff07	                      and eax, 0x7ffffff	       830	show-branch.c	FUNCTION_28	FOR_4
0x400152d	    0x898414d00000	       mov dword [rsp + rdx + 0xd0], eax	       830	show-branch.c	FUNCTION_28	FOR_4
0x4001534	        0x4883c204	                              add rdx, 4	       830	show-branch.c	FUNCTION_28	FOR_4
0x4001538	          0x4839ca	                            cmp rdx, rcx	       829	show-branch.c	FUNCTION_28	FOR_4
0x400153b	            0x75de	                           jne 0x400151b	       829	show-branch.c	FUNCTION_28	FOR_4
0x400153d	      0x448b6c2434	           mov r13d, dword [rsp + 0x34] 	       832	show-branch.c	FUNCTION_28	IF_26
0x4001542	          0x4585ed	                         test r13d, r13d	       832	show-branch.c	FUNCTION_28	IF_26
0x4001545	     0xf88a3010000	                            js 0x40016ee	       832	show-branch.c	FUNCTION_28	IF_26
0x400154b	        0x418d4f02	                      lea ecx, [r15 + 2]	       200	show-branch.c	FUNCTION_9
0x400154f	      0xb801000000	                              mov eax, 1	       200	show-branch.c	FUNCTION_9
0x4001554	            0xd3e0	                             shl eax, cl	       200	show-branch.c	FUNCTION_9
0x4001556	          0x83e801	                              sub eax, 1	       200	show-branch.c	FUNCTION_9
0x4001559	          0x890424	                    mov dword [rsp], eax	       200	show-branch.c	FUNCTION_9
0x400155c	          0x4189c6	                           mov r14d, eax	       201	show-branch.c	FUNCTION_9
0x400155f	        0x4183e6fc	                    and r14d, 0xfffffffc	       201	show-branch.c	FUNCTION_9
0x4001563	      0x44897c2410	            mov dword [rsp + 0x10], r15d	       201	show-branch.c	FUNCTION_9
0x4001568	      0xe9f6000000	                           jmp 0x4001663	       201	show-branch.c	FUNCTION_9
0x400156d	          0x4c8b38	                    mov r15, qword [rax]	        48	show-branch.c	FUNCTION_3	WHILE_1
0x4001570	        0x488b4008	                mov rax, qword [rax + 8]	        49	show-branch.c	FUNCTION_3	WHILE_1
0x4001574	        0x41f60710	                   test byte [r15], 0x10	        50	show-branch.c	FUNCTION_3	WHILE_1	IF_1
0x4001578	            0x741e	                            je 0x4001598	        50	show-branch.c	FUNCTION_3	WHILE_1	IF_1
0x400157a	          0x4885c0	                           test rax, rax	        47	show-branch.c	FUNCTION_3	WHILE_1
0x400157d	            0x75ee	                           jne 0x400156d	        47	show-branch.c	FUNCTION_3	WHILE_1
0x400157f	    0x41bf00000000	                             mov r15d, 0	        54	show-branch.c	FUNCTION_3
0x4001585	            0xeb11	                           jmp 0x4001598	        54	show-branch.c	FUNCTION_3
0x4001587	          0x488b10	                    mov rdx, qword [rax]	        48	show-branch.c	FUNCTION_3	WHILE_1
0x400158a	          0x4989d7	                            mov r15, rdx	        48	show-branch.c	FUNCTION_3	WHILE_1
0x400158d	          0xf60210	                   test byte [rdx], 0x10	        50	show-branch.c	FUNCTION_3	WHILE_1	IF_1
0x4001590	            0x7406	                            je 0x4001598	        50	show-branch.c	FUNCTION_3	WHILE_1	IF_1
0x4001592	        0x488b4008	                mov rax, qword [rax + 8]	        49	show-branch.c	FUNCTION_3	WHILE_1
0x4001596	            0xebe2	                           jmp 0x400157a	        49	show-branch.c	FUNCTION_3	WHILE_1
0x4001598	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	       206	show-branch.c	FUNCTION_9	WHILE_1	CALL_2
0x400159d	      0xe800000000	                          call 0x40015a2	       206	show-branch.c	FUNCTION_9	WHILE_1	CALL_2
0x40015a2	          0x4889c5	                            mov rbp, rax	       206	show-branch.c	FUNCTION_9	WHILE_1	CALL_2
0x40015a5	            0x8b18	                    mov ebx, dword [rax]	       207	show-branch.c	FUNCTION_9	WHILE_1
0x40015a7	          0xc1eb04	                              shr ebx, 4	       207	show-branch.c	FUNCTION_9	WHILE_1
0x40015aa	    0x81e3ffffff07	                      and ebx, 0x7ffffff	       207	show-branch.c	FUNCTION_9	WHILE_1
0x40015b0	        0x448b2424	                   mov r12d, dword [rsp]	       207	show-branch.c	FUNCTION_9	WHILE_1
0x40015b4	          0x4121dc	                           and r12d, ebx	       207	show-branch.c	FUNCTION_9	WHILE_1
0x40015b7	          0x4d85ff	                           test r15, r15	       209	show-branch.c	FUNCTION_9	WHILE_1	IF_1
0x40015ba	        0x410f94c7	                               sete r15b	       209	show-branch.c	FUNCTION_9	WHILE_1	IF_1
0x40015be	          0x4585ed	                         test r13d, r13d	       209	show-branch.c	FUNCTION_9	WHILE_1	IF_1
0x40015c1	            0x7f09	                            jg 0x40015cc	       209	show-branch.c	FUNCTION_9	WHILE_1	IF_1
0x40015c3	          0x4584ff	                         test r15b, r15b	       209	show-branch.c	FUNCTION_9	WHILE_1	IF_1
0x40015c6	     0xf85ac000000	                           jne 0x4001678	       209	show-branch.c	FUNCTION_9	WHILE_1	IF_1
0x40015cc	      0x488d742470	                   lea rsi, [rsp + 0x70]	       212	show-branch.c	FUNCTION_9	WHILE_1	CALL_3
0x40015d1	          0x4889ef	                            mov rdi, rbp	       212	show-branch.c	FUNCTION_9	WHILE_1	CALL_3
0x40015d4	      0xe871f0ffff	                      call sym.mark_seen	       212	show-branch.c	FUNCTION_9	WHILE_1	CALL_3
0x40015d9	          0x83e3fc	                     and ebx, 0xfffffffc	       213	show-branch.c	FUNCTION_9	WHILE_1	IF_2
0x40015dc	          0x231c24	                    and ebx, dword [rsp]	       213	show-branch.c	FUNCTION_9	WHILE_1	IF_2
0x40015df	          0x4489e0	                           mov eax, r12d	       214	show-branch.c	FUNCTION_9	WHILE_1	IF_2
0x40015e2	          0x83c801	                               or eax, 1	       214	show-branch.c	FUNCTION_9	WHILE_1	IF_2
0x40015e5	          0x4139de	                           cmp r14d, ebx	       214	show-branch.c	FUNCTION_9	WHILE_1	IF_2
0x40015e8	        0x440f44e0	                         cmove r12d, eax	       214	show-branch.c	FUNCTION_9	WHILE_1	IF_2
0x40015ec	        0x488b6d30	            mov rbp, qword [rbp + 0x30] 	       215	show-branch.c	FUNCTION_9	WHILE_1
0x40015f0	          0x4885ed	                           test rbp, rbp	       217	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x40015f3	            0x746e	                            je 0x4001663	       217	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x40015f5	        0x488b5d00	                    mov rbx, qword [rbp]	       218	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x40015f9	        0x488b6d08	                mov rbp, qword [rbp + 8]	       220	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x40015fd	            0x8b03	                    mov eax, dword [rbx]	       219	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x40015ff	          0xc1e804	                              shr eax, 4	       219	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x4001602	      0x25ffffff07	                      and eax, 0x7ffffff	       219	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x4001607	          0x4421e0	                           and eax, r12d	       221	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_3
0x400160a	          0x4139c4	                           cmp r12d, eax	       221	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_3
0x400160d	            0x744f	                            je 0x400165e	       221	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_3
0x400160f	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_107	CALL_1
0x4001614	          0x4889df	                            mov rdi, rbx	        75	commit.h	FUNCTION_107	CALL_1
0x4001617	      0xe800000000	                          call 0x400161c	        75	commit.h	FUNCTION_107	CALL_1
0x400161c	      0x488d742470	                   lea rsi, [rsp + 0x70]	       224	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_4	CALL_5
0x4001621	          0x4889df	                            mov rdi, rbx	       224	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_4	CALL_5
0x4001624	      0xe821f0ffff	                      call sym.mark_seen	       224	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_4	CALL_5
0x4001629	            0x85c0	                           test eax, eax	       224	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_4	CALL_5
0x400162b	            0x7408	                            je 0x4001635	       224	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_4	CALL_5
0x400162d	        0x4180ff01	                             cmp r15b, 1	       225	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_4
0x4001631	        0x4183d5ff	            adc r13d, 0xffffffffffffffff	       225	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_4
0x4001635	            0x8b03	                    mov eax, dword [rbx]	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x4001637	            0x89c2	                            mov edx, eax	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x4001639	          0xc1ea04	                              shr edx, 4	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x400163c	          0x4409e2	                            or edx, r12d	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x400163f	    0x81e2ffffff07	                      and edx, 0x7ffffff	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x4001645	          0xc1e204	                              shl edx, 4	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x4001648	      0x250f000080	                     and eax, 0x8000000f	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x400164d	             0x9d0	                             or eax, edx	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x400164f	            0x8903	                    mov dword [rbx], eax	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x4001651	      0x488d742468	                   lea rsi, [rsp + 0x68]	       227	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	CALL_6
0x4001656	          0x4889df	                            mov rdi, rbx	       227	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	CALL_6
0x4001659	      0xe800000000	                          call 0x400165e	       227	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	CALL_6
0x400165e	          0x4885ed	                           test rbp, rbp	       217	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x4001661	            0x7592	                           jne 0x40015f5	       217	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x4001663	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       203	show-branch.c	FUNCTION_9	WHILE_1
0x4001668	          0x4885c0	                           test rax, rax	       203	show-branch.c	FUNCTION_9	WHILE_1
0x400166b	     0xf8516ffffff	                           jne 0x4001587	       203	show-branch.c	FUNCTION_9	WHILE_1
0x4001671	      0x448b7c2410	           mov r15d, dword [rsp + 0x10] 	       203	show-branch.c	FUNCTION_9	WHILE_1
0x4001676	            0xeb05	                           jmp 0x400167d	       203	show-branch.c	FUNCTION_9	WHILE_1
0x4001678	      0x448b7c2410	           mov r15d, dword [rsp + 0x10] 	       203	show-branch.c	FUNCTION_9	WHILE_1
0x400167d	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	       241	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x4001682	          0x4885ff	                           test rdi, rdi	       241	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x4001685	            0x7467	                            je 0x40016ee	       241	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x4001687	      0xbe00000000	                              mov esi, 0	       241	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x400168c	          0x488b17	                    mov rdx, qword [rdi]	       242	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x400168f	            0x8b02	                    mov eax, dword [rdx]	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x4001691	          0xc1e804	                              shr eax, 4	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x4001694	      0x25ffffff07	                      and eax, 0x7ffffff	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x4001699	            0x89c1	                            mov ecx, eax	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x400169b	          0x4421f1	                           and ecx, r14d	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x400169e	          0x4139ce	                           cmp r14d, ecx	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x40016a1	            0x7404	                            je 0x40016a7	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x40016a3	            0xa801	                              test al, 1	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x40016a5	            0x743a	                            je 0x40016e1	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x40016a7	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	       255	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x40016ab	          0x4885d2	                           test rdx, rdx	       256	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3
0x40016ae	            0x7431	                            je 0x40016e1	       256	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3
0x40016b0	          0x488b0a	                    mov rcx, qword [rdx]	       257	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3
0x40016b3	        0x488b5208	                mov rdx, qword [rdx + 8]	       258	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3
0x40016b7	            0x8b01	                    mov eax, dword [rcx]	       259	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x40016b9	          0xc1e804	                              shr eax, 4	       259	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x40016bc	      0x25ffffff07	                      and eax, 0x7ffffff	       259	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x40016c1	            0xa801	                              test al, 1	       259	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x40016c3	            0x7517	                           jne 0x40016dc	       259	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x40016c5	          0x83c801	                               or eax, 1	       260	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x40016c8	          0xc1e004	                              shl eax, 4	       260	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x40016cb	            0x8b31	                    mov esi, dword [rcx]	       260	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x40016cd	    0x81e60f000080	                     and esi, 0x8000000f	       260	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x40016d3	             0x9f0	                             or eax, esi	       260	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x40016d5	            0x8901	                    mov dword [rcx], eax	       260	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x40016d7	      0xbe01000000	                              mov esi, 1	       261	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x40016dc	          0x4885d2	                           test rdx, rdx	       256	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3
0x40016df	            0x75cf	                           jne 0x40016b0	       256	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3
0x40016e1	        0x488b7f08	                mov rdi, qword [rdi + 8]	       241	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x40016e5	          0x4885ff	                           test rdi, rdi	       241	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x40016e8	            0x75a2	                           jne 0x400168c	       241	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x40016ea	            0x85f6	                           test esi, esi	       265	show-branch.c	FUNCTION_9	FOR_1	IF_7
0x40016ec	            0x758f	                           jne 0x400167d	       265	show-branch.c	FUNCTION_9	FOR_1	IF_7
0x40016ee	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       835	show-branch.c	FUNCTION_28	CALL_82
0x40016f3	      0xe800000000	                          call 0x40016f8	       835	show-branch.c	FUNCTION_28	CALL_82
0x40016f8	        0x8b5c2444	            mov ebx, dword [rsp + 0x44] 	       837	show-branch.c	FUNCTION_28	IF_27
0x40016fc	            0x85db	                           test ebx, ebx	       837	show-branch.c	FUNCTION_28	IF_27
0x40016fe	     0xf8481000000	                            je 0x4001785	       837	show-branch.c	FUNCTION_28	IF_27
0x4001704	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       837	show-branch.c	FUNCTION_28	IF_27
0x4001709	    0x488984249000	             mov qword [rsp + 0x90], rax	       837	show-branch.c	FUNCTION_28	IF_27
0x4001711	        0x418d4f02	                      lea ecx, [r15 + 2]	       479	show-branch.c	FUNCTION_22
0x4001715	      0xbd01000000	                              mov ebp, 1	       479	show-branch.c	FUNCTION_22
0x400171a	            0xd3e5	                             shl ebp, cl	       479	show-branch.c	FUNCTION_22
0x400171c	          0x83ed01	                              sub ebp, 1	       479	show-branch.c	FUNCTION_22
0x400171f	          0x4189ec	                           mov r12d, ebp	       480	show-branch.c	FUNCTION_22
0x4001722	        0x4183e4fc	                    and r12d, 0xfffffffc	       480	show-branch.c	FUNCTION_22
0x4001726	    0x41bd01000000	                             mov r13d, 1	       481	show-branch.c	FUNCTION_22
0x400172c	            0xeb42	                           jmp 0x4001770	       481	show-branch.c	FUNCTION_22
0x400172e	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       484	show-branch.c	FUNCTION_22	WHILE_1	CALL_1
0x4001736	      0xe800000000	                          call 0x400173b	       484	show-branch.c	FUNCTION_22	WHILE_1	CALL_1
0x400173b	          0x4889c3	                            mov rbx, rax	       484	show-branch.c	FUNCTION_22	WHILE_1	CALL_1
0x400173e	            0x8b00	                    mov eax, dword [rax]	       485	show-branch.c	FUNCTION_22	WHILE_1
0x4001740	          0xc1e804	                              shr eax, 4	       485	show-branch.c	FUNCTION_22	WHILE_1
0x4001743	      0x25ffffff07	                      and eax, 0x7ffffff	       485	show-branch.c	FUNCTION_22	WHILE_1
0x4001748	            0x21e8	                            and eax, ebp	       485	show-branch.c	FUNCTION_22	WHILE_1
0x400174a	            0xa801	                              test al, 1	       486	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x400174c	            0x7522	                           jne 0x4001770	       486	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x400174e	          0x4421e0	                           and eax, r12d	       486	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x4001751	          0x4139c4	                           cmp r12d, eax	       486	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x4001754	            0x751a	                           jne 0x4001770	       486	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x4001756	        0x488d7b04	                      lea rdi, [rbx + 4]	       488	show-branch.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x400175a	      0xe800000000	                          call 0x400175f	       488	show-branch.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x400175f	          0x4889c7	                            mov rdi, rax	       488	show-branch.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x4001762	      0xe800000000	                          call 0x4001767	       488	show-branch.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x4001767	          0x830b10	                    or dword [rbx], 0x10	       490	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x400176a	    0x41bd00000000	                             mov r13d, 0	       489	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x4001770	    0x4883bc249000	               cmp qword [rsp + 0x90], 0	       483	show-branch.c	FUNCTION_22	WHILE_1
0x4001779	            0x75b3	                           jne 0x400172e	       483	show-branch.c	FUNCTION_22	WHILE_1
0x400177b	      0x44896c2428	            mov dword [rsp + 0x28], r13d	       483	show-branch.c	FUNCTION_22	WHILE_1
0x4001780	      0xe980060000	                           jmp 0x4001e05	       483	show-branch.c	FUNCTION_22	WHILE_1
0x4001785	        0x8b442448	            mov eax, dword [rsp + 0x48] 	       840	show-branch.c	FUNCTION_28	IF_28
0x4001789	        0x89442428	             mov dword [rsp + 0x28], eax	       840	show-branch.c	FUNCTION_28	IF_28
0x400178d	            0x85c0	                           test eax, eax	       840	show-branch.c	FUNCTION_28	IF_28
0x400178f	            0x7454	                            je 0x40017e5	       840	show-branch.c	FUNCTION_28	IF_28
0x4001791	          0x4585ff	                         test r15d, r15d	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001794	     0xf8e67060000	                           jle 0x4001e01	       503	show-branch.c	FUNCTION_23	FOR_1
0x400179a	      0xbd00000000	                              mov ebp, 0	       503	show-branch.c	FUNCTION_23	FOR_1
0x400179f	    0x4c8ba4ec4001	   mov r12, qword [rsp + rbp*8 + 0x140] 	       504	show-branch.c	FUNCTION_23	FOR_1
0x40017a7	        0x418b0424	                    mov eax, dword [r12]	       507	show-branch.c	FUNCTION_23	FOR_1	IF_1
0x40017ab	          0xc1e804	                              shr eax, 4	       507	show-branch.c	FUNCTION_23	FOR_1	IF_1
0x40017ae	      0x25ffffff07	                      and eax, 0x7ffffff	       507	show-branch.c	FUNCTION_23	FOR_1	IF_1
0x40017b3	    0x3984acd00000	    cmp dword [rsp + rbp*4 + 0xd0], eax 	       507	show-branch.c	FUNCTION_23	FOR_1	IF_1
0x40017ba	            0x7512	                           jne 0x40017ce	       507	show-branch.c	FUNCTION_23	FOR_1	IF_1
0x40017bc	      0x498d7c2404	                      lea rdi, [r12 + 4]	       508	show-branch.c	FUNCTION_23	FOR_1	CALL_2
0x40017c1	      0xe800000000	                          call 0x40017c6	       508	show-branch.c	FUNCTION_23	FOR_1	CALL_2
0x40017c6	          0x4889c7	                            mov rdi, rax	       508	show-branch.c	FUNCTION_23	FOR_1	CALL_2
0x40017c9	      0xe800000000	                          call 0x40017ce	       508	show-branch.c	FUNCTION_23	FOR_1	CALL_2
0x40017ce	      0x41830c2410	                    or dword [r12], 0x10	       509	show-branch.c	FUNCTION_23	FOR_1
0x40017d3	        0x4883c501	                              add rbp, 1	       509	show-branch.c	FUNCTION_23	FOR_1
0x40017d7	          0x4139ef	                           cmp r15d, ebp	       503	show-branch.c	FUNCTION_23	FOR_1
0x40017da	            0x7fc3	                            jg 0x400179f	       503	show-branch.c	FUNCTION_23	FOR_1
0x40017dc	        0x895c2428	             mov dword [rsp + 0x28], ebx	       841	show-branch.c	FUNCTION_28	CALL_84
0x40017e0	      0xe920060000	                           jmp 0x4001e05	       841	show-branch.c	FUNCTION_28	CALL_84
0x40017e5	        0x4183ff01	                             cmp r15d, 1	       844	show-branch.c	FUNCTION_28	IF_29
0x40017e9	            0x7e0a	                           jle 0x40017f5	       844	show-branch.c	FUNCTION_28	IF_29
0x40017eb	          0x4585ff	                         test r15d, r15d	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x40017ee	            0x7f19	                            jg 0x4001809	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x40017f0	      0xe969060000	                           jmp 0x4001e5e	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x40017f5	      0x837c243400	               cmp dword [rsp + 0x34], 0	       844	show-branch.c	FUNCTION_28	IF_29
0x40017fa	            0x78ef	                            js 0x40017eb	       844	show-branch.c	FUNCTION_28	IF_29
0x40017fc	    0xc7442408ffff	        mov dword [rsp + 8], 0xffffffff 	       620	show-branch.c	FUNCTION_28
0x4001804	      0xe98c010000	                           jmp 0x4001995	       620	show-branch.c	FUNCTION_28
0x4001809	        0x418d47ff	                      lea eax, [r15 - 1]	       620	show-branch.c	FUNCTION_28
0x400180d	        0x4883c001	                              add rax, 1	       620	show-branch.c	FUNCTION_28
0x4001811	      0x4889442410	             mov qword [rsp + 0x10], rax	       620	show-branch.c	FUNCTION_28
0x4001816	      0xbd00000000	                              mov ebp, 0	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x400181b	      0xb8ffffffff	                     mov eax, 0xffffffff	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x4001820	      0x44897c2418	            mov dword [rsp + 0x18], r15d	       847	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_85
0x4001825	          0x4189c7	                           mov r15d, eax	       847	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_85
0x4001828	            0x89eb	                            mov ebx, ebp	       847	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_85
0x400182a	    0x4c8b24ed0000	                  mov r12, qword [rbp*8]	       848	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x4001832	    0x488b84ec4001	   mov rax, qword [rsp + rbp*8 + 0x140] 	       850	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x400183a	        0x488d4804	                      lea rcx, [rax + 4]	       850	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x400183e	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	       847	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_85
0x4001846	          0x4c89e6	                            mov rsi, r12	       847	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_85
0x4001849	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       847	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_85
0x400184e	      0xe845e9ffff	                    call sym.rev_is_head	       847	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_85
0x4001853	          0x4189c5	                           mov r13d, eax	       847	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_85
0x4001856	      0x837c243400	               cmp dword [rsp + 0x34], 0	       851	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_30
0x400185b	            0x780c	                            js 0x4001869	       851	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_30
0x400185d	    0x41bc00000000	                             mov r12d, 0	       855	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	FOR_6
0x4001863	            0x85ed	                           test ebp, ebp	       855	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	FOR_6
0x4001865	            0x7f26	                            jg 0x400188d	       855	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	FOR_6
0x4001867	            0xeb3e	                           jmp 0x40018a7	       855	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	FOR_6
0x4001869	          0x83f801	                              cmp eax, 1	       852	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_30	CALL_86
0x400186c	            0x19d2	                            sbb edx, edx	       852	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_30	CALL_86
0x400186e	          0x83e2f6	                     and edx, 0xfffffff6	       852	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_30	CALL_86
0x4001871	          0x83c22a	                           add edx, 0x2a	       852	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_30	CALL_86
0x4001874	          0x4c89e1	                            mov rcx, r12	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001877	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x400187c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001881	      0xb800000000	                              mov eax, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001886	      0xe800000000	                          call 0x400188b	       104	stdio2.h	FUNCTION_92	CALL_2
0x400188b	            0xeb7e	                           jmp 0x400190b	       104	stdio2.h	FUNCTION_92	CALL_2
0x400188d	    0x488b35000000	            mov rsi, qword [0x04001894] 	        81	stdio.h	FUNCTION_113	CALL_1
0x4001894	      0xbf20000000	                           mov edi, 0x20	        81	stdio.h	FUNCTION_113	CALL_1
0x4001899	      0xe800000000	                          call 0x400189e	        81	stdio.h	FUNCTION_113	CALL_1
0x400189e	        0x4183c401	                             add r12d, 1	       855	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	FOR_6
0x40018a2	          0x4139dc	                           cmp r12d, ebx	       855	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	FOR_6
0x40018a5	            0x75e6	                           jne 0x400188d	       855	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	FOR_6
0x40018a7	    0x488b04ed0000	                  mov rax, qword [rbp*8]	       857	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	CALL_88
0x40018af	        0x48890424	                    mov qword [rsp], rax	       857	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	CALL_88
0x40018b3	    0x8b3500000000	            mov esi, dword [0x040018b9] 	        40	show-branch.c	FUNCTION_2	IF_1	CALL_1
0x40018b9	      0xbf01000000	                              mov edi, 1	        40	show-branch.c	FUNCTION_2	IF_1	CALL_1
0x40018be	      0xe800000000	                          call 0x40018c3	        40	show-branch.c	FUNCTION_2	IF_1	CALL_1
0x40018c3	            0x85c0	                           test eax, eax	        42	show-branch.c	FUNCTION_2
0x40018c5	      0xb800000000	                              mov eax, 0	        42	show-branch.c	FUNCTION_2
0x40018ca	    0x41be00000000	                             mov r14d, 0	        42	show-branch.c	FUNCTION_2
0x40018d0	        0x4c0f44f0	                          cmove r14, rax	        42	show-branch.c	FUNCTION_2
0x40018d4	        0x4183fd01	                             cmp r13d, 1	       857	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	CALL_88
0x40018d8	          0x4519e4	                          sbb r12d, r12d	       857	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	CALL_88
0x40018db	        0x4183e4f7	                    and r12d, 0xfffffff7	       857	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	CALL_88
0x40018df	        0x4183c42a	                          add r12d, 0x2a	       857	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	CALL_88
0x40018e3	            0x89df	                            mov edi, ebx	       857	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	CALL_88
0x40018e5	      0xe837eeffff	                 call sym.get_color_code	       857	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	CALL_88
0x40018ea	        0x4c8b0c24	                     mov r9, qword [rsp]	       104	stdio2.h	FUNCTION_92	CALL_2
0x40018ee	          0x4d89f0	                             mov r8, r14	       104	stdio2.h	FUNCTION_92	CALL_2
0x40018f1	          0x4489e1	                           mov ecx, r12d	       104	stdio2.h	FUNCTION_92	CALL_2
0x40018f4	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	FUNCTION_92	CALL_2
0x40018f7	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x40018fc	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001901	      0xb800000000	                              mov eax, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001906	      0xe800000000	                          call 0x400190b	       104	stdio2.h	FUNCTION_92	CALL_2
0x400190b	    0x833d00000000	               cmp dword [0x04001912], 0	       863	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_31
0x4001912	            0x7514	                           jne 0x4001928	       863	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_31
0x4001914	    0x488bbcec4001	   mov rdi, qword [rsp + rbp*8 + 0x140] 	       865	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_31	CALL_91
0x400191c	      0xbe01000000	                              mov esi, 1	       865	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_31	CALL_91
0x4001921	      0xe830eeffff	                call sym.show_one_commit	       865	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_31	CALL_91
0x4001926	            0xeb0d	                           jmp 0x4001935	       865	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_31	CALL_91
0x4001928	    0x488bbcec1002	   mov rdi, qword [rsp + rbp*8 + 0x210] 	       868	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_92
0x4001930	      0xe800000000	                          call 0x4001935	       868	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_92
0x4001935	          0x4585ed	                         test r13d, r13d	       870	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_32
0x4001938	        0x440f45fb	                        cmovne r15d, ebx	       870	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_32
0x400193c	        0x4883c501	                              add rbp, 1	       870	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_32
0x4001940	      0x483b6c2410	            cmp rbp, qword [rsp + 0x10] 	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x4001945	     0xf85ddfeffff	                           jne 0x4001828	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x400194b	      0xe9ef040000	                           jmp 0x4001e3f	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x4001950	    0x488b35000000	            mov rsi, qword [0x04001957] 	        81	stdio.h	FUNCTION_113	CALL_1
0x4001957	      0xbf2d000000	                           mov edi, 0x2d	        81	stdio.h	FUNCTION_113	CALL_1
0x400195c	      0xe800000000	                          call 0x4001961	        81	stdio.h	FUNCTION_113	CALL_1
0x4001961	          0x83c301	                              add ebx, 1	       874	show-branch.c	FUNCTION_28	IF_29	IF_33	FOR_7
0x4001964	          0x4439fb	                           cmp ebx, r15d	       874	show-branch.c	FUNCTION_28	IF_29	IF_33	FOR_7
0x4001967	            0x75e7	                           jne 0x4001950	       874	show-branch.c	FUNCTION_28	IF_29	IF_33	FOR_7
0x4001969	            0xeb08	                           jmp 0x4001973	       874	show-branch.c	FUNCTION_28	IF_29	IF_33	FOR_7
0x400196b	    0xc7442408ffff	        mov dword [rsp + 8], 0xffffffff 	       873	show-branch.c	FUNCTION_28	IF_29	IF_33
0x4001973	    0x488b35000000	            mov rsi, qword [0x0400197a] 	        81	stdio.h	FUNCTION_113	CALL_1
0x400197a	      0xbf0a000000	                            mov edi, 0xa	        81	stdio.h	FUNCTION_113	CALL_1
0x400197f	      0xe800000000	                          call 0x4001984	        81	stdio.h	FUNCTION_113	CALL_1
0x4001984	      0x837c243400	               cmp dword [rsp + 0x34], 0	       879	show-branch.c	FUNCTION_28	IF_34
0x4001989	            0x790a	                           jns 0x4001995	       879	show-branch.c	FUNCTION_28	IF_34
0x400198b	      0xbf00000000	                              mov edi, 0	       880	show-branch.c	FUNCTION_28	CALL_95
0x4001990	      0xe800000000	                          call 0x4001995	       880	show-branch.c	FUNCTION_28	CALL_95
0x4001995	        0x8b742440	            mov esi, dword [rsp + 0x40] 	       883	show-branch.c	FUNCTION_28	CALL_96
0x4001999	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       883	show-branch.c	FUNCTION_28	CALL_96
0x400199e	      0xe800000000	                          call 0x40019a3	       883	show-branch.c	FUNCTION_28	CALL_96
0x40019a3	      0x837c245000	               cmp dword [rsp + 0x50], 0	       886	show-branch.c	FUNCTION_28	IF_35
0x40019a8	     0xf8576020000	                           jne 0x4001c24	       886	show-branch.c	FUNCTION_28	IF_35
0x40019ae	      0x837c244c00	               cmp dword [rsp + 0x4c], 0	       886	show-branch.c	FUNCTION_28	IF_35
0x40019b3	     0xf856b020000	                           jne 0x4001c24	       886	show-branch.c	FUNCTION_28	IF_35
0x40019b9	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       887	show-branch.c	FUNCTION_28	CALL_97
0x40019be	          0x4889c3	                            mov rbx, rax	       887	show-branch.c	FUNCTION_28	CALL_97
0x40019c1	        0x48890424	                    mov qword [rsp], rax	       887	show-branch.c	FUNCTION_28	CALL_97
0x40019c5	          0x4885c0	                           test rax, rax	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x40019c8	            0x7465	                            je 0x4001a2f	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x40019ca	        0x418d47ff	                      lea eax, [r15 - 1]	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x40019ce	    0x488d2cc50800	                    lea rbp, [rax*8 + 8]	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x40019d6	          0x488b3b	                    mov rdi, qword [rbx]	       124	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x40019d9	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       125	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	IF_1
0x40019de	            0x7546	                           jne 0x4001a26	       125	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	IF_1
0x40019e0	          0x4585ff	                         test r15d, r15d	       127	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2
0x40019e3	            0x7e41	                           jle 0x4001a26	       127	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2
0x40019e5	    0x483bbc244001	           cmp rdi, qword [rsp + 0x140] 	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x40019ed	            0x7417	                            je 0x4001a06	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x40019ef	      0xb808000000	                              mov eax, 8	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x40019f4	            0xeb2b	                           jmp 0x4001a21	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x40019f6	        0x488d5008	                      lea rdx, [rax + 8]	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x40019fa	    0x483bbc143801	     cmp rdi, qword [rsp + rdx + 0x138] 	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x4001a02	            0x751a	                           jne 0x4001a1e	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x4001a04	            0xeb05	                           jmp 0x4001a0b	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x4001a06	      0xb800000000	                              mov eax, 0	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x4001a0b	    0x488bb0000000	                    mov rsi, qword [rax]	       129	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2	CALL_1
0x4001a12	      0xba00000000	                              mov edx, 0	       129	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2	CALL_1
0x4001a17	      0xe84fecffff	                    call sym.name_commit	       129	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2	CALL_1
0x4001a1c	            0xeb08	                           jmp 0x4001a26	       129	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2	CALL_1
0x4001a1e	          0x4889d0	                            mov rax, rdx	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x4001a21	          0x4839c5	                            cmp rbp, rax	       127	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2
0x4001a24	            0x75d0	                           jne 0x40019f6	       127	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2
0x4001a26	        0x488b5b08	                mov rbx, qword [rbx + 8]	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x4001a2a	          0x4885db	                           test rbx, rbx	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x4001a2d	            0x75a7	                           jne 0x40019d6	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x4001a2f	        0x488b0424	                    mov rax, qword [rsp]	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001a33	          0x4885c0	                           test rax, rax	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001a36	     0xf84e8010000	                            je 0x4001c24	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001a3c	          0x4889c3	                            mov rbx, rax	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001a3f	      0xbd00000000	                              mov ebp, 0	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001a44	          0x488b3b	                    mov rdi, qword [rbx]	       139	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3	CALL_2
0x4001a47	      0xe84fecffff	        call sym.name_first_parent_chain	       139	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3	CALL_2
0x4001a4c	             0x1c5	                            add ebp, eax	       139	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3	CALL_2
0x4001a4e	        0x488b5b08	                mov rbx, qword [rbx + 8]	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001a52	          0x4885db	                           test rbx, rbx	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001a55	            0x75ed	                           jne 0x4001a44	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001a57	            0x85ed	                           test ebp, ebp	       141	show-branch.c	ELSE_1	FUNCTION_7	DO_1
0x4001a59	            0x75d4	                           jne 0x4001a2f	       141	show-branch.c	ELSE_1	FUNCTION_7	DO_1
0x4001a5b	        0x896c2410	             mov dword [rsp + 0x10], ebp	       141	show-branch.c	ELSE_1	FUNCTION_7	DO_1
0x4001a5f	      0x44897c2418	            mov dword [rsp + 0x18], r15d	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001a64	        0x488b0424	                    mov rax, qword [rsp]	       146	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001a68	          0x4885c0	                           test rax, rax	       146	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001a6b	     0xf84ae010000	                            je 0x4001c1f	       146	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001a71	      0x448b7c2410	           mov r15d, dword [rsp + 0x10] 	       146	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001a76	          0x4989c6	                            mov r14, rax	       146	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001a79	          0x498b06	                    mov rax, qword [r14]	       150	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001a7c	        0x4c8b6818	            mov r13, qword [rax + 0x18] 	       151	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_3
0x4001a80	          0x4d85ed	                           test r13, r13	       151	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_3
0x4001a83	     0xf8479010000	                            je 0x4001c02	       151	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_3
0x4001a89	        0x488b5830	            mov rbx, qword [rax + 0x30] 	       154	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001a8d	          0x4885db	                           test rbx, rbx	       156	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001a90	     0xf846c010000	                            je 0x4001c02	       156	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001a96	      0xbd00000000	                              mov ebp, 0	       156	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001a9b	          0x4c8b23	                    mov r12, qword [rbx]	       157	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001a9e	    0x48c784249000	               mov qword [rsp + 0x90], 0	       158	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001aaa	    0x48c784249800	               mov qword [rsp + 0x98], 0	       158	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001ab6	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       158	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001ac2	        0x488b5b08	                mov rbx, qword [rbx + 8]	       159	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001ac6	          0x83c501	                              add ebp, 1	       160	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001ac9	    0x49837c241800	               cmp qword [r12 + 0x18], 0	       161	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_4
0x4001acf	     0xf8524010000	                           jne 0x4001bf9	       161	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_4
0x4001ad5	        0x418b4d08	                mov ecx, dword [r13 + 8]	       163	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1
0x4001ad9	            0x85c9	                           test ecx, ecx	       163	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1
0x4001adb	            0x7407	                            je 0x4001ae4	       163	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1
0x4001add	          0x83f901	                              cmp ecx, 1	       163	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1
0x4001ae0	            0x7430	                            je 0x4001b12	       163	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1
0x4001ae2	            0xeb4b	                           jmp 0x4001b2f	       163	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1
0x4001ae4	        0x498b7500	                    mov rsi, qword [r13]	       165	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_3
0x4001ae8	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001aed	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001af4	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001af7	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001af9	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001afc	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001aff	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001b03	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001b0b	      0xe800000000	                          call 0x4001b10	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001b10	            0xeb38	                           jmp 0x4001b4a	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001b12	        0x498b5500	                    mov rdx, qword [r13]	       168	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_4
0x4001b16	      0xbe00000000	                              mov esi, 0	       168	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_4
0x4001b1b	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       168	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_4
0x4001b23	      0xb800000000	                              mov eax, 0	       168	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_4
0x4001b28	      0xe800000000	                          call 0x4001b2d	       168	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_4
0x4001b2d	            0xeb1b	                           jmp 0x4001b4a	       168	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_4
0x4001b2f	        0x498b5500	                    mov rdx, qword [r13]	       171	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_5
0x4001b33	      0xbe00000000	                              mov esi, 0	       171	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_5
0x4001b38	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       171	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_5
0x4001b40	      0xb800000000	                              mov eax, 0	       171	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_5
0x4001b45	      0xe800000000	                          call 0x4001b4a	       171	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_5
0x4001b4a	          0x83fd01	                              cmp ebp, 1	       175	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_5
0x4001b4d	            0x7563	                           jne 0x4001bb2	       175	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_5
0x4001b4f	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       141	strbuf.h	FUNCTION_121
0x4001b57	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_121
0x4001b5a	            0x740e	                            je 0x4001b6a	       141	strbuf.h	FUNCTION_121
0x4001b5c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_123	IF_1	CALL_1
0x4001b60	    0x483984249800	            cmp qword [rsp + 0x98], rax 	       227	strbuf.h	FUNCTION_123	IF_1	CALL_1
0x4001b68	            0x7512	                           jne 0x4001b7c	       227	strbuf.h	FUNCTION_123	IF_1	CALL_1
0x4001b6a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_123	CALL_2
0x4001b6f	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       228	strbuf.h	FUNCTION_123	CALL_2
0x4001b77	      0xe800000000	                          call 0x4001b7c	       228	strbuf.h	FUNCTION_123	CALL_2
0x4001b7c	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       229	strbuf.h	FUNCTION_123
0x4001b84	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_123
0x4001b88	    0x488994249800	             mov qword [rsp + 0x98], rdx	       229	strbuf.h	FUNCTION_123
0x4001b90	    0x488b9424a000	            mov rdx, qword [rsp + 0xa0] 	       229	strbuf.h	FUNCTION_123
0x4001b98	        0xc604025e	              mov byte [rdx + rax], 0x5e	       229	strbuf.h	FUNCTION_123
0x4001b9c	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       230	strbuf.h	FUNCTION_123
0x4001ba4	    0x488b9424a000	            mov rdx, qword [rsp + 0xa0] 	       230	strbuf.h	FUNCTION_123
0x4001bac	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_123
0x4001bb0	            0xeb19	                           jmp 0x4001bcb	       230	strbuf.h	FUNCTION_123
0x4001bb2	            0x89ea	                            mov edx, ebp	       178	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_7
0x4001bb4	      0xbe00000000	                              mov esi, 0	       178	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_7
0x4001bb9	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       178	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_7
0x4001bc1	      0xb800000000	                              mov eax, 0	       178	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_7
0x4001bc6	      0xe800000000	                          call 0x4001bcb	       178	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_7
0x4001bcb	      0xbe00000000	                              mov esi, 0	       179	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_9
0x4001bd0	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       179	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_9
0x4001bd8	      0xe800000000	                          call 0x4001bdd	       179	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_9
0x4001bdd	      0xba00000000	                              mov edx, 0	       179	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_9
0x4001be2	          0x4889c6	                            mov rsi, rax	       179	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_9
0x4001be5	          0x4c89e7	                            mov rdi, r12	       179	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_9
0x4001be8	      0xe87eeaffff	                    call sym.name_commit	       179	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_9
0x4001bed	        0x4183c701	                             add r15d, 1	       180	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1
0x4001bf1	          0x4c89e7	                            mov rdi, r12	       181	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_10
0x4001bf4	      0xe8a2eaffff	        call sym.name_first_parent_chain	       181	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_10
0x4001bf9	          0x4885db	                           test rbx, rbx	       156	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001bfc	     0xf8599feffff	                           jne 0x4001a9b	       156	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001c02	        0x4d8b7608	                mov r14, qword [r14 + 8]	       146	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001c06	          0x4d85f6	                           test r14, r14	       146	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001c09	     0xf856afeffff	                           jne 0x4001a79	       146	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001c0f	          0x4585ff	                         test r15d, r15d	       184	show-branch.c	FUNCTION_7	ELSE_1	WHILE_1
0x4001c12	     0xf854cfeffff	                           jne 0x4001a64	       184	show-branch.c	FUNCTION_7	ELSE_1	WHILE_1
0x4001c18	      0x448b7c2418	           mov r15d, dword [rsp + 0x18] 	       184	show-branch.c	FUNCTION_7	ELSE_1	WHILE_1
0x4001c1d	            0xeb05	                           jmp 0x4001c24	       184	show-branch.c	FUNCTION_7	ELSE_1	WHILE_1
0x4001c1f	      0x448b7c2418	           mov r15d, dword [rsp + 0x18] 	       184	show-branch.c	FUNCTION_7	ELSE_1	WHILE_1
0x4001c24	        0x418d4f02	                      lea ecx, [r15 + 2]	       890	show-branch.c	FUNCTION_28
0x4001c28	      0xb801000000	                              mov eax, 1	       890	show-branch.c	FUNCTION_28
0x4001c2d	            0xd3e0	                             shl eax, cl	       890	show-branch.c	FUNCTION_28
0x4001c2f	          0x83e801	                              sub eax, 1	       890	show-branch.c	FUNCTION_28
0x4001c32	          0x83e0fc	                     and eax, 0xfffffffc	       890	show-branch.c	FUNCTION_28
0x4001c35	        0x89442410	             mov dword [rsp + 0x10], eax	       890	show-branch.c	FUNCTION_28
0x4001c39	        0x418d47fe	                      lea eax, [r15 - 2]	       890	show-branch.c	FUNCTION_28
0x4001c3d	    0x488d84c44801	         lea rax, [rsp + rax*8 + 0x148] 	       890	show-branch.c	FUNCTION_28
0x4001c45	      0x4889442420	             mov qword [rsp + 0x20], rax	       890	show-branch.c	FUNCTION_28
0x4001c4a	    0xc70424000000	                      mov dword [rsp], 0	       618	show-branch.c	FUNCTION_28
0x4001c51	        0x894c242c	             mov dword [rsp + 0x2c], ecx	       618	show-branch.c	FUNCTION_28
0x4001c55	      0xe999010000	                           jmp 0x4001df3	       892	show-branch.c	FUNCTION_28	WHILE_2
0x4001c5a	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       893	show-branch.c	FUNCTION_28	WHILE_2	CALL_98
0x4001c5f	      0xe800000000	                          call 0x4001c64	       893	show-branch.c	FUNCTION_28	WHILE_2	CALL_98
0x4001c64	          0x4989c6	                            mov r14, rax	       893	show-branch.c	FUNCTION_28	WHILE_2	CALL_98
0x4001c67	          0x448b20	                   mov r12d, dword [rax]	       894	show-branch.c	FUNCTION_28	WHILE_2
0x4001c6a	        0x41c1ec04	                             shr r12d, 4	       894	show-branch.c	FUNCTION_28	WHILE_2
0x4001c6e	    0x4181e4ffffff	                     and r12d, 0x7ffffff	       894	show-branch.c	FUNCTION_28	WHILE_2
0x4001c75	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	       895	show-branch.c	FUNCTION_28	WHILE_2
0x4001c79	            0x89c8	                            mov eax, ecx	       895	show-branch.c	FUNCTION_28	WHILE_2
0x4001c7b	          0x4421e0	                           and eax, r12d	       895	show-branch.c	FUNCTION_28	WHILE_2
0x4001c7e	            0x39c1	                            cmp ecx, eax	       897	show-branch.c	FUNCTION_28	WHILE_2
0x4001c80	           0xf94c2	                                 sete dl	       897	show-branch.c	FUNCTION_28	WHILE_2
0x4001c83	           0xfb6d2	                           movzx edx, dl	       897	show-branch.c	FUNCTION_28	WHILE_2
0x4001c86	           0x91424	                     or dword [rsp], edx	       897	show-branch.c	FUNCTION_28	WHILE_2
0x4001c89	        0x4183ff01	                             cmp r15d, 1	       899	show-branch.c	FUNCTION_28	WHILE_2	IF_36
0x4001c8d	     0xf8e3f010000	                           jle 0x4001dd2	       899	show-branch.c	FUNCTION_28	WHILE_2	IF_36
0x4001c93	        0x498b5630	            mov rdx, qword [r14 + 0x30] 	       900	show-branch.c	FUNCTION_28	WHILE_2	IF_36
0x4001c97	          0x4885d2	                           test rdx, rdx	       900	show-branch.c	FUNCTION_28	WHILE_2	IF_36
0x4001c9a	     0xf84ce010000	                            je 0x4001e6e	       900	show-branch.c	FUNCTION_28	WHILE_2	IF_36
0x4001ca0	      0x48837a0800	                  cmp qword [rdx + 8], 0	       900	show-branch.c	FUNCTION_28	WHILE_2	IF_36
0x4001ca5	     0xf84c3010000	                            je 0x4001e6e	       900	show-branch.c	FUNCTION_28	WHILE_2	IF_36
0x4001cab	      0x837c245800	               cmp dword [rsp + 0x58], 0	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001cb0	            0x740e	                            je 0x4001cc0	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001cb2	            0x39c1	                            cmp ecx, eax	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001cb4	            0x740a	                            je 0x4001cc0	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001cb6	        0x41f6c404	                            test r12b, 4	       903	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001cba	     0xf8533010000	                           jne 0x4001df3	       903	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001cc0	      0x837c245c00	               cmp dword [rsp + 0x5c], 0	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x4001cc5	            0x7453	                            je 0x4001d1a	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x4001cc7	          0x4585ff	                         test r15d, r15d	       568	show-branch.c	FUNCTION_26	FOR_1
0x4001cca	            0x7e55	                           jle 0x4001d21	       568	show-branch.c	FUNCTION_26	FOR_1
0x4001ccc	    0x4c3bb4244001	           cmp r14, qword [rsp + 0x140] 	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x4001cd4	            0x745a	                            je 0x4001d30	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x4001cd6	    0x488d84244001	                  lea rax, [rsp + 0x140]	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x4001cde	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x4001ce3	        0x4c3b7008	                cmp r14, qword [rax + 8]	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x4001ce7	            0x744e	                            je 0x4001d37	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x4001ce9	        0x4883c008	                              add rax, 8	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x4001ced	          0x4839c2	                            cmp rdx, rax	       568	show-branch.c	FUNCTION_26	FOR_1
0x4001cf0	            0x75f1	                           jne 0x4001ce3	       568	show-branch.c	FUNCTION_26	FOR_1
0x4001cf2	      0xb902000000	                              mov ecx, 2	       568	show-branch.c	FUNCTION_26	FOR_1
0x4001cf7	      0xba00000000	                              mov edx, 0	       568	show-branch.c	FUNCTION_26	FOR_1
0x4001cfc	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	       568	show-branch.c	FUNCTION_26	FOR_1
0x4001d00	          0x4489e0	                           mov eax, r12d	       573	show-branch.c	FUNCTION_26	FOR_2	IF_2
0x4001d03	            0xd3e8	                             shr eax, cl	       573	show-branch.c	FUNCTION_26	FOR_2	IF_2
0x4001d05	          0x83e001	                              and eax, 1	       573	show-branch.c	FUNCTION_26	FOR_2	IF_2
0x4001d08	          0x83f801	                              cmp eax, 1	       574	show-branch.c	FUNCTION_26	FOR_2	IF_2
0x4001d0b	          0x83daff	             sbb edx, 0xffffffffffffffff	       574	show-branch.c	FUNCTION_26	FOR_2	IF_2
0x4001d0e	          0x83c101	                              add ecx, 1	       574	show-branch.c	FUNCTION_26	FOR_2	IF_2
0x4001d11	            0x39ce	                            cmp esi, ecx	       572	show-branch.c	FUNCTION_26	FOR_2
0x4001d13	            0x75eb	                           jne 0x4001d00	       572	show-branch.c	FUNCTION_26	FOR_2
0x4001d15	      0xe991010000	                           jmp 0x4001eab	       572	show-branch.c	FUNCTION_26	FOR_2
0x4001d1a	      0xb801000000	                              mov eax, 1	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x4001d1f	            0xeb05	                           jmp 0x4001d26	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x4001d21	      0xb801000000	                              mov eax, 1	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x4001d26	          0x4585ff	                         test r15d, r15d	       909	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8
0x4001d29	            0x7f11	                            jg 0x4001d3c	       909	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8
0x4001d2b	      0xe991000000	                           jmp 0x4001dc1	       909	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8
0x4001d30	      0xb801000000	                              mov eax, 1	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x4001d35	            0xeb05	                           jmp 0x4001d3c	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x4001d37	      0xb801000000	                              mov eax, 1	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x4001d3c	      0xbb00000000	                              mov ebx, 0	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x4001d41	      0x4c89742418	             mov qword [rsp + 0x18], r14	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x4001d46	          0x4189c6	                           mov r14d, eax	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x4001d49	          0x8d4302	                      lea eax, [rbx + 2]	       911	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	IF_39
0x4001d4c	      0xbd20000000	                           mov ebp, 0x20	       912	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	IF_39
0x4001d51	        0x410fa3c4	                            bt r12d, eax	       911	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	IF_39
0x4001d55	            0x7319	                           jae 0x4001d70	       911	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	IF_39
0x4001d57	      0xbd2d000000	                           mov ebp, 0x2d	       914	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	ELSE_5	IF_40
0x4001d5c	          0x4584f6	                         test r14b, r14b	       913	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	ELSE_5	IF_40
0x4001d5f	            0x750f	                           jne 0x4001d70	       913	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	ELSE_5	IF_40
0x4001d61	        0x395c2408	                cmp dword [rsp + 8], ebx	       918	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	ELSE_7
0x4001d65	        0x400f95c5	                               setne bpl	       918	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	ELSE_7
0x4001d69	        0x400fb6ed	                          movzx ebp, bpl	       918	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	ELSE_7
0x4001d6d	          0x83c52a	                           add ebp, 0x2a	       918	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	ELSE_7
0x4001d70	    0x8b3500000000	            mov esi, dword [0x04001d76] 	        40	show-branch.c	FUNCTION_2	IF_1	CALL_1
0x4001d76	      0xbf01000000	                              mov edi, 1	        40	show-branch.c	FUNCTION_2	IF_1	CALL_1
0x4001d7b	      0xe800000000	                          call 0x4001d80	        40	show-branch.c	FUNCTION_2	IF_1	CALL_1
0x4001d80	            0x85c0	                           test eax, eax	        42	show-branch.c	FUNCTION_2
0x4001d82	    0x41bd00000000	                             mov r13d, 0	        42	show-branch.c	FUNCTION_2
0x4001d88	      0xb800000000	                              mov eax, 0	        42	show-branch.c	FUNCTION_2
0x4001d8d	        0x4c0f45e8	                         cmovne r13, rax	        42	show-branch.c	FUNCTION_2
0x4001d91	            0x89df	                            mov edi, ebx	       919	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	CALL_100
0x4001d93	      0xe889e9ffff	                 call sym.get_color_code	       919	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	CALL_100
0x4001d98	          0x4d89e8	                             mov r8, r13	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001d9b	            0x89e9	                            mov ecx, ebp	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001d9d	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001da0	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001da5	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001daa	      0xb800000000	                              mov eax, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001daf	      0xe800000000	                          call 0x4001db4	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001db4	          0x83c301	                              add ebx, 1	       909	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8
0x4001db7	          0x4439fb	                           cmp ebx, r15d	       909	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8
0x4001dba	            0x758d	                           jne 0x4001d49	       909	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8
0x4001dbc	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	       909	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8
0x4001dc1	    0x488b35000000	            mov rsi, qword [0x04001dc8] 	        81	stdio.h	FUNCTION_113	CALL_1
0x4001dc8	      0xbf20000000	                           mov edi, 0x20	        81	stdio.h	FUNCTION_113	CALL_1
0x4001dcd	      0xe800000000	                          call 0x4001dd2	        81	stdio.h	FUNCTION_113	CALL_1
0x4001dd2	        0x8b74244c	            mov esi, dword [rsp + 0x4c] 	       925	show-branch.c	FUNCTION_28	WHILE_2	CALL_104
0x4001dd6	          0x4c89f7	                            mov rdi, r14	       925	show-branch.c	FUNCTION_28	WHILE_2	CALL_104
0x4001dd9	      0xe878e9ffff	                call sym.show_one_commit	       925	show-branch.c	FUNCTION_28	WHILE_2	CALL_104
0x4001dde	        0x833c2400	                      cmp dword [rsp], 0	       927	show-branch.c	FUNCTION_28	WHILE_2	IF_42
0x4001de2	            0x740f	                            je 0x4001df3	       927	show-branch.c	FUNCTION_28	WHILE_2	IF_42
0x4001de4	        0x8b442434	            mov eax, dword [rsp + 0x34] 	       927	show-branch.c	FUNCTION_28	WHILE_2	IF_42
0x4001de8	          0x83e801	                              sub eax, 1	       927	show-branch.c	FUNCTION_28	WHILE_2	IF_42
0x4001deb	        0x89442434	             mov dword [rsp + 0x34], eax	       927	show-branch.c	FUNCTION_28	WHILE_2	IF_42
0x4001def	            0x85c0	                           test eax, eax	       927	show-branch.c	FUNCTION_28	WHILE_2	IF_42
0x4001df1	            0x7812	                            js 0x4001e05	       927	show-branch.c	FUNCTION_28	WHILE_2	IF_42
0x4001df3	    0x48837c247000	               cmp qword [rsp + 0x70], 0	       892	show-branch.c	FUNCTION_28	WHILE_2
0x4001df9	     0xf855bfeffff	                           jne 0x4001c5a	       892	show-branch.c	FUNCTION_28	WHILE_2
0x4001dff	            0xeb04	                           jmp 0x4001e05	       892	show-branch.c	FUNCTION_28	WHILE_2
0x4001e01	        0x895c2428	             mov dword [rsp + 0x28], ebx	       841	show-branch.c	FUNCTION_28	CALL_84
0x4001e05	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       931	show-branch.c	FUNCTION_28
0x4001e09	    0x488b8c24e806	           mov rcx, qword [rsp + 0x6e8] 	       931	show-branch.c	FUNCTION_28
0x4001e11	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       931	show-branch.c	FUNCTION_28
0x4001e1a	     0xf84a3000000	                            je 0x4001ec3	       931	show-branch.c	FUNCTION_28
0x4001e20	      0xe999000000	                           jmp 0x4001ebe	       931	show-branch.c	FUNCTION_28
0x4001e25	        0x3b442458	            cmp eax, dword [rsp + 0x58] 	       695	show-branch.c	FUNCTION_28	IF_6
0x4001e29	            0x7e5d	                           jle 0x4001e88	       695	show-branch.c	FUNCTION_28	IF_6
0x4001e2b	      0xe958f1ffff	                           jmp 0x4000f88	       695	show-branch.c	FUNCTION_28	IF_6
0x4001e30	        0x3b442458	            cmp eax, dword [rsp + 0x58] 	       695	show-branch.c	FUNCTION_28	IF_6
0x4001e34	     0xf8f39f1ffff	                            jg 0x4000f73	       695	show-branch.c	FUNCTION_28	IF_6
0x4001e3a	      0xe91df1ffff	                           jmp 0x4000f5c	       695	show-branch.c	FUNCTION_28	IF_6
0x4001e3f	      0x44897c2408	               mov dword [rsp + 8], r15d	       695	show-branch.c	FUNCTION_28	IF_6
0x4001e44	      0x448b7c2418	           mov r15d, dword [rsp + 0x18] 	       695	show-branch.c	FUNCTION_28	IF_6
0x4001e49	      0xbb00000000	                              mov ebx, 0	       873	show-branch.c	FUNCTION_28	IF_29	IF_33
0x4001e4e	      0x837c243400	               cmp dword [rsp + 0x34], 0	       873	show-branch.c	FUNCTION_28	IF_29	IF_33
0x4001e53	     0xf89f7faffff	                           jns 0x4001950	       873	show-branch.c	FUNCTION_28	IF_29	IF_33
0x4001e59	      0xe92dfbffff	                           jmp 0x400198b	       873	show-branch.c	FUNCTION_28	IF_29	IF_33
0x4001e5e	      0x837c243400	               cmp dword [rsp + 0x34], 0	       873	show-branch.c	FUNCTION_28	IF_29	IF_33
0x4001e63	     0xf8902fbffff	                           jns 0x400196b	       873	show-branch.c	FUNCTION_28	IF_29	IF_33
0x4001e69	      0xe91dfbffff	                           jmp 0x400198b	       873	show-branch.c	FUNCTION_28	IF_29	IF_33
0x4001e6e	      0x837c245800	               cmp dword [rsp + 0x58], 0	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001e73	           0xf95c2	                                setne dl	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001e76	        0x39442410	            cmp dword [rsp + 0x10], eax 	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001e7a	           0xf95c0	                                setne al	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001e7d	            0x20c2	                              and dl, al	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001e7f	            0x89d0	                            mov eax, edx	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001e81	            0x7514	                           jne 0x4001e97	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001e83	      0xe99efeffff	                           jmp 0x4001d26	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001e88	         0x354243c	             add edx, dword [rsp + 0x3c]	       695	show-branch.c	FUNCTION_28	IF_6
0x4001e8c	     0xf84d0f0ffff	                            je 0x4000f62	       695	show-branch.c	FUNCTION_28	IF_6
0x4001e92	      0xe9f1f0ffff	                           jmp 0x4000f88	       695	show-branch.c	FUNCTION_28	IF_6
0x4001e97	      0xb800000000	                              mov eax, 0	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x4001e9c	        0x41f6c404	                            test r12b, 4	       903	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001ea0	     0xf8480feffff	                            je 0x4001d26	       903	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001ea6	      0xe948ffffff	                           jmp 0x4001df3	       903	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001eab	          0x83fa01	                              cmp edx, 1	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x4001eae	     0xf843fffffff	                            je 0x4001df3	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x4001eb4	      0xb801000000	                              mov eax, 1	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x4001eb9	      0xe97efeffff	                           jmp 0x4001d3c	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x4001ebe	      0xe800000000	                          call 0x4001ec3	       931	show-branch.c	FUNCTION_28
0x4001ec3	    0x4881c4f80600	                          add rsp, 0x6f8	       931	show-branch.c	FUNCTION_28
0x4001eca	              0x5b	                                 pop rbx	       931	show-branch.c	FUNCTION_28
0x4001ecb	              0x5d	                                 pop rbp	       931	show-branch.c	FUNCTION_28
0x4001ecc	            0x415c	                                 pop r12	       931	show-branch.c	FUNCTION_28
0x4001ece	            0x415d	                                 pop r13	       931	show-branch.c	FUNCTION_28
0x4001ed0	            0x415e	                                 pop r14	       931	show-branch.c	FUNCTION_28
0x4001ed2	            0x415f	                                 pop r15	       931	show-branch.c	FUNCTION_28
0x4001ed4	              0xc3	                                     ret	       931	show-branch.c	FUNCTION_28
