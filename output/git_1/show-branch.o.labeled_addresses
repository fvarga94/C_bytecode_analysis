parse_commit	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:FOR,0:DO,0:CALL,1	10
0x400025c	              0x55	                                push rbp	        74	commit.h	FUNCTION_1
0x400025d	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_1
0x4000260	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_1
0x4000264	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_1
0x4000268	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_1	CALL_1
0x400026c	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_1	CALL_1
0x4000271	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_1	CALL_1
0x4000274	      0xe800000000	                          call 0x4000279	        75	commit.h	FUNCTION_1	CALL_1
0x4000279	              0xc9	                                   leave	        76	commit.h	FUNCTION_1
0x400027a	              0xc3	                                     ret	        76	commit.h	FUNCTION_1
skip_prefix	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,1:FOR,0:DO,1:CALL,0	27
0x400004b	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_8
0x400004c	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_8
0x400004f	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_8
0x4000053	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_8
0x4000057	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_8
0x400005b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_8	DO_1	IF_1
0x400005f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_8	DO_1	IF_1
0x4000062	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_8	DO_1	IF_1
0x4000064	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_8	DO_1	IF_1
0x4000066	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_8	DO_1	IF_1
0x400006a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_8	DO_1	IF_1
0x400006e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_8	DO_1	IF_1
0x4000071	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_8	DO_1	IF_1
0x4000076	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_8	DO_1	IF_1
0x4000078	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_8	DO_1
0x400007c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_8	DO_1
0x4000080	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_8	DO_1
0x4000084	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_8	DO_1
0x4000087	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_8	DO_1
0x400008b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_8	DO_1
0x400008f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_8	DO_1
0x4000093	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_8	DO_1
0x4000096	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_8	DO_1
0x4000098	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_8	DO_1
0x400009a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_8
0x400009f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_8
0x40000a0	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_8
sort_ref_range	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:FOR,0:DO,0:CALL,0	19
0x4000ce0	              0x55	                                push rbp	       356	show-branch.c	FUNCTION_42
0x4000ce1	          0x4889e5	                            mov rbp, rsp	       356	show-branch.c	FUNCTION_42
0x4000ce4	        0x4883ec10	                           sub rsp, 0x10	       356	show-branch.c	FUNCTION_42
0x4000ce8	          0x897dfc	                mov dword [rbp - 4], edi	       356	show-branch.c	FUNCTION_42
0x4000ceb	          0x8975f8	                mov dword [rbp - 8], esi	       356	show-branch.c	FUNCTION_42
0x4000cee	          0x8b45f8	                mov eax, dword [rbp - 8]	       357	show-branch.c	FUNCTION_42
0x4000cf1	          0x2b45fc	                sub eax, dword [rbp - 4]	       357	show-branch.c	FUNCTION_42
0x4000cf4	            0x4898	                                    cdqe	       357	show-branch.c	FUNCTION_42
0x4000cf6	          0x8b55fc	                mov edx, dword [rbp - 4]	       357	show-branch.c	FUNCTION_42
0x4000cf9	          0x4863d2	                         movsxd rdx, edx	       357	show-branch.c	FUNCTION_42
0x4000cfc	        0x48c1e203	                              shl rdx, 3	       357	show-branch.c	FUNCTION_42
0x4000d00	    0x488dba000000	                          lea rdi, [rdx]	       357	show-branch.c	FUNCTION_42
0x4000d07	      0xb900000000	                              mov ecx, 0	       357	show-branch.c	FUNCTION_42
0x4000d0c	      0xba08000000	                              mov edx, 8	       357	show-branch.c	FUNCTION_42
0x4000d11	          0x4889c6	                            mov rsi, rax	       357	show-branch.c	FUNCTION_42
0x4000d14	      0xe888f3ffff	                     call sym.sane_qsort	       357	show-branch.c	FUNCTION_42
0x4000d19	              0x90	                                     nop	       358	show-branch.c	FUNCTION_42
0x4000d1a	              0xc9	                                   leave	       358	show-branch.c	FUNCTION_42
0x4000d1b	              0xc3	                                     ret	       358	show-branch.c	FUNCTION_42
append_remote_ref	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,2:FOR,0:DO,0:CALL,4	52
0x4000ee8	              0x55	                                push rbp	       403	show-branch.c	FUNCTION_45
0x4000ee9	          0x4889e5	                            mov rbp, rsp	       403	show-branch.c	FUNCTION_45
0x4000eec	        0x4883ec50	                           sub rsp, 0x50	       403	show-branch.c	FUNCTION_45
0x4000ef0	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       403	show-branch.c	FUNCTION_45
0x4000ef4	        0x488975c0	             mov qword [rbp - 0x40], rsi	       403	show-branch.c	FUNCTION_45
0x4000ef8	          0x8955bc	             mov dword [rbp - 0x44], edx	       403	show-branch.c	FUNCTION_45
0x4000efb	        0x48894db0	             mov qword [rbp - 0x50], rcx	       403	show-branch.c	FUNCTION_45
0x4000eff	    0x64488b042528	                mov rax, qword fs:[0x28]	       403	show-branch.c	FUNCTION_45
0x4000f08	        0x488945f8	                mov qword [rbp - 8], rax	       403	show-branch.c	FUNCTION_45
0x4000f0c	            0x31c0	                            xor eax, eax	       403	show-branch.c	FUNCTION_45
0x4000f0e	    0xc745dc0d0000	            mov dword [rbp - 0x24], 0xd 	       405	show-branch.c	FUNCTION_45
0x4000f15	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       406	show-branch.c	FUNCTION_45	IF_1	CALL_1
0x4000f19	      0xbe00000000	                              mov esi, 0	       406	show-branch.c	FUNCTION_45	IF_1	CALL_1
0x4000f1e	          0x4889c7	                            mov rdi, rax	       406	show-branch.c	FUNCTION_45	IF_1	CALL_1
0x4000f21	      0xe800000000	                          call 0x4000f26	       406	show-branch.c	FUNCTION_45	IF_1	CALL_1
0x4000f26	            0x85c0	                           test eax, eax	       406	show-branch.c	FUNCTION_45	IF_1	CALL_1
0x4000f28	            0x7507	                           jne 0x4000f31	       406	show-branch.c	FUNCTION_45	IF_1	CALL_1
0x4000f2a	      0xb800000000	                              mov eax, 0	       407	show-branch.c	FUNCTION_45	IF_1
0x4000f2f	            0xeb60	                           jmp 0x4000f91	       407	show-branch.c	FUNCTION_45	IF_1
0x4000f31	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f34	          0x4863d0	                         movsxd rdx, eax	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f37	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f3b	          0x4801c2	                            add rdx, rax	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f3e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f42	          0x4889c6	                            mov rsi, rax	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f45	          0x4889d7	                            mov rdi, rdx	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f48	      0xe800000000	                          call 0x4000f4d	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f4d	            0x85c0	                           test eax, eax	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f4f	            0x7517	                           jne 0x4000f68	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f51	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f55	        0x488d45e0	                   lea rax, [rbp - 0x20]	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f59	          0x4889d6	                            mov rsi, rdx	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f5c	          0x4889c7	                            mov rdi, rax	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f5f	      0xe8d3f2ffff	                         call sym.oidcmp	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f64	            0x85c0	                           test eax, eax	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f66	            0x7407	                            je 0x4000f6f	       411	show-branch.c	FUNCTION_45	IF_2	CALL_3
0x4000f68	    0xc745dc050000	               mov dword [rbp - 0x24], 5	       412	show-branch.c	FUNCTION_45	IF_2
0x4000f6f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       413	show-branch.c	FUNCTION_45	CALL_4
0x4000f72	          0x4863d0	                         movsxd rdx, eax	       413	show-branch.c	FUNCTION_45	CALL_4
0x4000f75	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       413	show-branch.c	FUNCTION_45	CALL_4
0x4000f79	        0x488d0c02	                    lea rcx, [rdx + rax]	       413	show-branch.c	FUNCTION_45	CALL_4
0x4000f7d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       413	show-branch.c	FUNCTION_45	CALL_4
0x4000f81	      0xba00000000	                              mov edx, 0	       413	show-branch.c	FUNCTION_45	CALL_4
0x4000f86	          0x4889c6	                            mov rsi, rax	       413	show-branch.c	FUNCTION_45	CALL_4
0x4000f89	          0x4889cf	                            mov rdi, rcx	       413	show-branch.c	FUNCTION_45	CALL_4
0x4000f8c	      0xe88bfdffff	                     call sym.append_ref	       413	show-branch.c	FUNCTION_45	CALL_4
0x4000f91	        0x488b4df8	                mov rcx, qword [rbp - 8]	       414	show-branch.c	FUNCTION_45
0x4000f95	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       414	show-branch.c	FUNCTION_45
0x4000f9e	            0x7405	                            je 0x4000fa5	       414	show-branch.c	FUNCTION_45
0x4000fa0	      0xe800000000	                          call 0x4000fa5	       414	show-branch.c	FUNCTION_45
0x4000fa5	              0xc9	                                   leave	       414	show-branch.c	FUNCTION_45
0x4000fa6	              0xc3	                                     ret	       414	show-branch.c	FUNCTION_45
compare_ref_name	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:FOR,0:DO,0:CALL,1	18
0x4000ca5	              0x55	                                push rbp	       350	show-branch.c	FUNCTION_41
0x4000ca6	          0x4889e5	                            mov rbp, rsp	       350	show-branch.c	FUNCTION_41
0x4000ca9	        0x4883ec20	                           sub rsp, 0x20	       350	show-branch.c	FUNCTION_41
0x4000cad	        0x48897de8	             mov qword [rbp - 0x18], rdi	       350	show-branch.c	FUNCTION_41
0x4000cb1	        0x488975e0	             mov qword [rbp - 0x20], rsi	       350	show-branch.c	FUNCTION_41
0x4000cb5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       351	show-branch.c	FUNCTION_41
0x4000cb9	        0x488945f0	             mov qword [rbp - 0x10], rax	       351	show-branch.c	FUNCTION_41
0x4000cbd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       351	show-branch.c	FUNCTION_41
0x4000cc1	        0x488945f8	                mov qword [rbp - 8], rax	       351	show-branch.c	FUNCTION_41
0x4000cc5	        0x488b45f8	                mov rax, qword [rbp - 8]	       352	show-branch.c	FUNCTION_41	CALL_1
0x4000cc9	          0x488b10	                    mov rdx, qword [rax]	       352	show-branch.c	FUNCTION_41	CALL_1
0x4000ccc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       352	show-branch.c	FUNCTION_41	CALL_1
0x4000cd0	          0x488b00	                    mov rax, qword [rax]	       352	show-branch.c	FUNCTION_41	CALL_1
0x4000cd3	          0x4889d6	                            mov rsi, rdx	       352	show-branch.c	FUNCTION_41	CALL_1
0x4000cd6	          0x4889c7	                            mov rdi, rax	       352	show-branch.c	FUNCTION_41	CALL_1
0x4000cd9	      0xe8c5feffff	                    call sym.version_cmp	       352	show-branch.c	FUNCTION_41	CALL_1
0x4000cde	              0xc9	                                   leave	       353	show-branch.c	FUNCTION_41
0x4000cdf	              0xc3	                                     ret	       353	show-branch.c	FUNCTION_41
mark_seen	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,1:FOR,0:DO,0:CALL,1	20
0x4000730	              0x55	                                push rbp	       188	show-branch.c	FUNCTION_36
0x4000731	          0x4889e5	                            mov rbp, rsp	       188	show-branch.c	FUNCTION_36
0x4000734	        0x4883ec10	                           sub rsp, 0x10	       188	show-branch.c	FUNCTION_36
0x4000738	        0x48897df8	                mov qword [rbp - 8], rdi	       188	show-branch.c	FUNCTION_36
0x400073c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       188	show-branch.c	FUNCTION_36
0x4000740	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	show-branch.c	FUNCTION_36	IF_1
0x4000744	            0x8b00	                    mov eax, dword [rax]	       189	show-branch.c	FUNCTION_36	IF_1
0x4000746	      0x25f0ffff7f	                     and eax, 0x7ffffff0	       189	show-branch.c	FUNCTION_36	IF_1
0x400074b	            0x85c0	                           test eax, eax	       189	show-branch.c	FUNCTION_36	IF_1
0x400074d	            0x751a	                           jne 0x4000769	       189	show-branch.c	FUNCTION_36	IF_1
0x400074f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       190	show-branch.c	FUNCTION_36	IF_1	CALL_1
0x4000753	        0x488b45f8	                mov rax, qword [rbp - 8]	       190	show-branch.c	FUNCTION_36	IF_1	CALL_1
0x4000757	          0x4889d6	                            mov rsi, rdx	       190	show-branch.c	FUNCTION_36	IF_1	CALL_1
0x400075a	          0x4889c7	                            mov rdi, rax	       190	show-branch.c	FUNCTION_36	IF_1	CALL_1
0x400075d	      0xe800000000	                          call 0x4000762	       190	show-branch.c	FUNCTION_36	IF_1	CALL_1
0x4000762	      0xb801000000	                              mov eax, 1	       191	show-branch.c	FUNCTION_36	IF_1
0x4000767	            0xeb05	                           jmp 0x400076e	       191	show-branch.c	FUNCTION_36	IF_1
0x4000769	      0xb800000000	                              mov eax, 0	       193	show-branch.c	FUNCTION_36
0x400076e	              0xc9	                                   leave	       194	show-branch.c	FUNCTION_36
0x400076f	              0xc3	                                     ret	       194	show-branch.c	FUNCTION_36
name_parent	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,2:FOR,0:DO,0:CALL,1	35
0x400038a	              0x55	                                push rbp	        81	show-branch.c	FUNCTION_33
0x400038b	          0x4889e5	                            mov rbp, rsp	        81	show-branch.c	FUNCTION_33
0x400038e	        0x4883ec20	                           sub rsp, 0x20	        81	show-branch.c	FUNCTION_33
0x4000392	        0x48897de8	             mov qword [rbp - 0x18], rdi	        81	show-branch.c	FUNCTION_33
0x4000396	        0x488975e0	             mov qword [rbp - 0x20], rsi	        81	show-branch.c	FUNCTION_33
0x400039a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        82	show-branch.c	FUNCTION_33
0x400039e	        0x488b4018	            mov rax, qword [rax + 0x18] 	        82	show-branch.c	FUNCTION_33
0x40003a2	        0x488945f0	             mov qword [rbp - 0x10], rax	        82	show-branch.c	FUNCTION_33
0x40003a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        83	show-branch.c	FUNCTION_33
0x40003aa	        0x488b4018	            mov rax, qword [rax + 0x18] 	        83	show-branch.c	FUNCTION_33
0x40003ae	        0x488945f8	                mov qword [rbp - 8], rax	        83	show-branch.c	FUNCTION_33
0x40003b2	      0x48837df000	               cmp qword [rbp - 0x10], 0	        84	show-branch.c	FUNCTION_33	IF_1
0x40003b7	            0x743e	                            je 0x40003f7	        84	show-branch.c	FUNCTION_33	IF_1
0x40003b9	      0x48837df800	                  cmp qword [rbp - 8], 0	        86	show-branch.c	FUNCTION_33	IF_2
0x40003be	            0x7415	                            je 0x40003d5	        86	show-branch.c	FUNCTION_33	IF_2
0x40003c0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        87	show-branch.c	FUNCTION_33	IF_2
0x40003c4	          0x8b4008	                mov eax, dword [rax + 8]	        87	show-branch.c	FUNCTION_33	IF_2
0x40003c7	          0x8d5001	                      lea edx, [rax + 1]	        87	show-branch.c	FUNCTION_33	IF_2
0x40003ca	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	show-branch.c	FUNCTION_33	IF_2
0x40003ce	          0x8b4008	                mov eax, dword [rax + 8]	        87	show-branch.c	FUNCTION_33	IF_2
0x40003d1	            0x39c2	                            cmp edx, eax	        86	show-branch.c	FUNCTION_33	IF_2
0x40003d3	            0x7d23	                           jge 0x40003f8	        86	show-branch.c	FUNCTION_33	IF_2
0x40003d5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        89	show-branch.c	FUNCTION_33	IF_2
0x40003d9	          0x8b4008	                mov eax, dword [rax + 8]	        89	show-branch.c	FUNCTION_33	IF_2
0x40003dc	          0x8d5001	                      lea edx, [rax + 1]	        88	show-branch.c	FUNCTION_33	IF_2	CALL_1
0x40003df	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        88	show-branch.c	FUNCTION_33	IF_2	CALL_1
0x40003e3	          0x488b08	                    mov rcx, qword [rax]	        88	show-branch.c	FUNCTION_33	IF_2	CALL_1
0x40003e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        88	show-branch.c	FUNCTION_33	IF_2	CALL_1
0x40003ea	          0x4889ce	                            mov rsi, rcx	        88	show-branch.c	FUNCTION_33	IF_2	CALL_1
0x40003ed	          0x4889c7	                            mov rdi, rax	        88	show-branch.c	FUNCTION_33	IF_2	CALL_1
0x40003f0	      0xe83cffffff	                    call sym.name_commit	        88	show-branch.c	FUNCTION_33	IF_2	CALL_1
0x40003f5	            0xeb01	                           jmp 0x40003f8	        88	show-branch.c	FUNCTION_33	IF_2	CALL_1
0x40003f7	              0x90	                                     nop	        85	show-branch.c	FUNCTION_33	IF_1
0x40003f8	              0xc9	                                   leave	        90	show-branch.c	FUNCTION_33
0x40003f9	              0xc3	                                     ret	        90	show-branch.c	FUNCTION_33
interesting	functions,0:ELSE,0:SWITCH,0:WHILE,1:IF,1:FOR,0:DO,0:CALL,0	25
0x40002e5	              0x55	                                push rbp	        46	show-branch.c	FUNCTION_31
0x40002e6	          0x4889e5	                            mov rbp, rsp	        46	show-branch.c	FUNCTION_31
0x40002e9	        0x48897de8	             mov qword [rbp - 0x18], rdi	        46	show-branch.c	FUNCTION_31
0x40002ed	            0xeb34	                           jmp 0x4000323	        47	show-branch.c	FUNCTION_31	WHILE_1
0x40002ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        48	show-branch.c	FUNCTION_31	WHILE_1
0x40002f3	          0x488b00	                    mov rax, qword [rax]	        48	show-branch.c	FUNCTION_31	WHILE_1
0x40002f6	        0x488945f8	                mov qword [rbp - 8], rax	        48	show-branch.c	FUNCTION_31	WHILE_1
0x40002fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        49	show-branch.c	FUNCTION_31	WHILE_1
0x40002fe	        0x488b4008	                mov rax, qword [rax + 8]	        49	show-branch.c	FUNCTION_31	WHILE_1
0x4000302	        0x488945e8	             mov qword [rbp - 0x18], rax	        49	show-branch.c	FUNCTION_31	WHILE_1
0x4000306	        0x488b45f8	                mov rax, qword [rbp - 8]	        50	show-branch.c	FUNCTION_31	WHILE_1	IF_1
0x400030a	            0x8b00	                    mov eax, dword [rax]	        50	show-branch.c	FUNCTION_31	WHILE_1	IF_1
0x400030c	          0xc1e804	                              shr eax, 4	        50	show-branch.c	FUNCTION_31	WHILE_1	IF_1
0x400030f	      0x25ffffff07	                      and eax, 0x7ffffff	        50	show-branch.c	FUNCTION_31	WHILE_1	IF_1
0x4000314	          0x83e001	                              and eax, 1	        50	show-branch.c	FUNCTION_31	WHILE_1	IF_1
0x4000317	            0x85c0	                           test eax, eax	        50	show-branch.c	FUNCTION_31	WHILE_1	IF_1
0x4000319	            0x7402	                            je 0x400031d	        50	show-branch.c	FUNCTION_31	WHILE_1	IF_1
0x400031b	            0xeb06	                           jmp 0x4000323	        51	show-branch.c	FUNCTION_31	WHILE_1	IF_1
0x400031d	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	show-branch.c	FUNCTION_31	WHILE_1
0x4000321	            0xeb0c	                           jmp 0x400032f	        52	show-branch.c	FUNCTION_31	WHILE_1
0x4000323	      0x48837de800	               cmp qword [rbp - 0x18], 0	        47	show-branch.c	FUNCTION_31	WHILE_1
0x4000328	            0x75c5	                           jne 0x40002ef	        47	show-branch.c	FUNCTION_31	WHILE_1
0x400032a	      0xb800000000	                              mov eax, 0	        54	show-branch.c	FUNCTION_31
0x400032f	              0x5d	                                 pop rbp	        55	show-branch.c	FUNCTION_31
0x4000330	              0xc3	                                     ret	        55	show-branch.c	FUNCTION_31
name_first_parent_chain	functions,0:ELSE,1:SWITCH,0:WHILE,1:IF,3:FOR,0:DO,0:CALL,1	41
0x40003fa	              0x55	                                push rbp	        93	show-branch.c	FUNCTION_34
0x40003fb	          0x4889e5	                            mov rbp, rsp	        93	show-branch.c	FUNCTION_34
0x40003fe	        0x4883ec20	                           sub rsp, 0x20	        93	show-branch.c	FUNCTION_34
0x4000402	        0x48897de8	             mov qword [rbp - 0x18], rdi	        93	show-branch.c	FUNCTION_34
0x4000406	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        94	show-branch.c	FUNCTION_34
0x400040d	            0xeb55	                           jmp 0x4000464	        95	show-branch.c	FUNCTION_34	WHILE_1
0x400040f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	show-branch.c	FUNCTION_34	WHILE_1	IF_1
0x4000413	        0x488b4018	            mov rax, qword [rax + 0x18] 	        97	show-branch.c	FUNCTION_34	WHILE_1	IF_1
0x4000417	          0x4885c0	                           test rax, rax	        97	show-branch.c	FUNCTION_34	WHILE_1	IF_1
0x400041a	            0x7451	                            je 0x400046d	        97	show-branch.c	FUNCTION_34	WHILE_1	IF_1
0x400041c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        99	show-branch.c	FUNCTION_34	WHILE_1	IF_2
0x4000420	        0x488b4030	            mov rax, qword [rax + 0x30] 	        99	show-branch.c	FUNCTION_34	WHILE_1	IF_2
0x4000424	          0x4885c0	                           test rax, rax	        99	show-branch.c	FUNCTION_34	WHILE_1	IF_2
0x4000427	            0x7447	                            je 0x4000470	        99	show-branch.c	FUNCTION_34	WHILE_1	IF_2
0x4000429	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       101	show-branch.c	FUNCTION_34	WHILE_1
0x400042d	        0x488b4030	            mov rax, qword [rax + 0x30] 	       101	show-branch.c	FUNCTION_34	WHILE_1
0x4000431	          0x488b00	                    mov rax, qword [rax]	       101	show-branch.c	FUNCTION_34	WHILE_1
0x4000434	        0x488945f8	                mov qword [rbp - 8], rax	       101	show-branch.c	FUNCTION_34	WHILE_1
0x4000438	        0x488b45f8	                mov rax, qword [rbp - 8]	       102	show-branch.c	FUNCTION_34	WHILE_1	IF_3
0x400043c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       102	show-branch.c	FUNCTION_34	WHILE_1	IF_3
0x4000440	          0x4885c0	                           test rax, rax	       102	show-branch.c	FUNCTION_34	WHILE_1	IF_3
0x4000443	            0x752e	                           jne 0x4000473	       102	show-branch.c	FUNCTION_34	WHILE_1	IF_3
0x4000445	        0x488b55f8	                mov rdx, qword [rbp - 8]	       103	show-branch.c	FUNCTION_34	WHILE_1	IF_3	CALL_1
0x4000449	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       103	show-branch.c	FUNCTION_34	WHILE_1	IF_3	CALL_1
0x400044d	          0x4889d6	                            mov rsi, rdx	       103	show-branch.c	FUNCTION_34	WHILE_1	IF_3	CALL_1
0x4000450	          0x4889c7	                            mov rdi, rax	       103	show-branch.c	FUNCTION_34	WHILE_1	IF_3	CALL_1
0x4000453	      0xe832ffffff	                    call sym.name_parent	       103	show-branch.c	FUNCTION_34	WHILE_1	IF_3	CALL_1
0x4000458	        0x8345f401	                add dword [rbp - 0xc], 1	       104	show-branch.c	FUNCTION_34	WHILE_1	IF_3
0x400045c	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	show-branch.c	FUNCTION_34	WHILE_1	ELSE_1
0x4000460	        0x488945e8	             mov qword [rbp - 0x18], rax	       108	show-branch.c	FUNCTION_34	WHILE_1	ELSE_1
0x4000464	      0x48837de800	               cmp qword [rbp - 0x18], 0	        95	show-branch.c	FUNCTION_34	WHILE_1
0x4000469	            0x75a4	                           jne 0x400040f	        95	show-branch.c	FUNCTION_34	WHILE_1
0x400046b	            0xeb07	                           jmp 0x4000474	        95	show-branch.c	FUNCTION_34	WHILE_1
0x400046d	              0x90	                                     nop	        98	show-branch.c	FUNCTION_34	WHILE_1	IF_1
0x400046e	            0xeb04	                           jmp 0x4000474	        98	show-branch.c	FUNCTION_34	WHILE_1	IF_1
0x4000470	              0x90	                                     nop	       100	show-branch.c	FUNCTION_34	WHILE_1	IF_2
0x4000471	            0xeb01	                           jmp 0x4000474	       100	show-branch.c	FUNCTION_34	WHILE_1	IF_2
0x4000473	              0x90	                                     nop	       107	show-branch.c	FUNCTION_34	WHILE_1	ELSE_1
0x4000474	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       110	show-branch.c	FUNCTION_34	ELSE_1
0x4000477	              0xc9	                                   leave	       111	show-branch.c	FUNCTION_34	ELSE_1
0x4000478	              0xc3	                                     ret	       111	show-branch.c	FUNCTION_34	ELSE_1
append_head_ref	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,2:FOR,0:DO,0:CALL,4	52
0x4000e29	              0x55	                                push rbp	       388	show-branch.c	FUNCTION_44
0x4000e2a	          0x4889e5	                            mov rbp, rsp	       388	show-branch.c	FUNCTION_44
0x4000e2d	        0x4883ec50	                           sub rsp, 0x50	       388	show-branch.c	FUNCTION_44
0x4000e31	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       388	show-branch.c	FUNCTION_44
0x4000e35	        0x488975c0	             mov qword [rbp - 0x40], rsi	       388	show-branch.c	FUNCTION_44
0x4000e39	          0x8955bc	             mov dword [rbp - 0x44], edx	       388	show-branch.c	FUNCTION_44
0x4000e3c	        0x48894db0	             mov qword [rbp - 0x50], rcx	       388	show-branch.c	FUNCTION_44
0x4000e40	    0x64488b042528	                mov rax, qword fs:[0x28]	       388	show-branch.c	FUNCTION_44
0x4000e49	        0x488945f8	                mov qword [rbp - 8], rax	       388	show-branch.c	FUNCTION_44
0x4000e4d	            0x31c0	                            xor eax, eax	       388	show-branch.c	FUNCTION_44
0x4000e4f	    0xc745dc0b0000	            mov dword [rbp - 0x24], 0xb 	       390	show-branch.c	FUNCTION_44
0x4000e56	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       391	show-branch.c	FUNCTION_44	IF_1	CALL_1
0x4000e5a	      0xbe00000000	                              mov esi, 0	       391	show-branch.c	FUNCTION_44	IF_1	CALL_1
0x4000e5f	          0x4889c7	                            mov rdi, rax	       391	show-branch.c	FUNCTION_44	IF_1	CALL_1
0x4000e62	      0xe800000000	                          call 0x4000e67	       391	show-branch.c	FUNCTION_44	IF_1	CALL_1
0x4000e67	            0x85c0	                           test eax, eax	       391	show-branch.c	FUNCTION_44	IF_1	CALL_1
0x4000e69	            0x7507	                           jne 0x4000e72	       391	show-branch.c	FUNCTION_44	IF_1	CALL_1
0x4000e6b	      0xb800000000	                              mov eax, 0	       392	show-branch.c	FUNCTION_44	IF_1
0x4000e70	            0xeb60	                           jmp 0x4000ed2	       392	show-branch.c	FUNCTION_44	IF_1
0x4000e72	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000e75	          0x4863d0	                         movsxd rdx, eax	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000e78	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000e7c	          0x4801c2	                            add rdx, rax	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000e7f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000e83	          0x4889c6	                            mov rsi, rax	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000e86	          0x4889d7	                            mov rdi, rdx	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000e89	      0xe800000000	                          call 0x4000e8e	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000e8e	            0x85c0	                           test eax, eax	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000e90	            0x7517	                           jne 0x4000ea9	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000e92	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000e96	        0x488d45e0	                   lea rax, [rbp - 0x20]	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000e9a	          0x4889d6	                            mov rsi, rdx	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000e9d	          0x4889c7	                            mov rdi, rax	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000ea0	      0xe892f3ffff	                         call sym.oidcmp	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000ea5	            0x85c0	                           test eax, eax	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000ea7	            0x7407	                            je 0x4000eb0	       396	show-branch.c	FUNCTION_44	IF_2	CALL_3
0x4000ea9	    0xc745dc050000	               mov dword [rbp - 0x24], 5	       397	show-branch.c	FUNCTION_44	IF_2
0x4000eb0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       398	show-branch.c	FUNCTION_44	CALL_4
0x4000eb3	          0x4863d0	                         movsxd rdx, eax	       398	show-branch.c	FUNCTION_44	CALL_4
0x4000eb6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       398	show-branch.c	FUNCTION_44	CALL_4
0x4000eba	        0x488d0c02	                    lea rcx, [rdx + rax]	       398	show-branch.c	FUNCTION_44	CALL_4
0x4000ebe	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       398	show-branch.c	FUNCTION_44	CALL_4
0x4000ec2	      0xba00000000	                              mov edx, 0	       398	show-branch.c	FUNCTION_44	CALL_4
0x4000ec7	          0x4889c6	                            mov rsi, rax	       398	show-branch.c	FUNCTION_44	CALL_4
0x4000eca	          0x4889cf	                            mov rdi, rcx	       398	show-branch.c	FUNCTION_44	CALL_4
0x4000ecd	      0xe84afeffff	                     call sym.append_ref	       398	show-branch.c	FUNCTION_44	CALL_4
0x4000ed2	        0x488b4df8	                mov rcx, qword [rbp - 8]	       399	show-branch.c	FUNCTION_44
0x4000ed6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       399	show-branch.c	FUNCTION_44
0x4000edf	            0x7405	                            je 0x4000ee6	       399	show-branch.c	FUNCTION_44
0x4000ee1	      0xe800000000	                          call 0x4000ee6	       399	show-branch.c	FUNCTION_44
0x4000ee6	              0xc9	                                   leave	       399	show-branch.c	FUNCTION_44
0x4000ee7	              0xc3	                                     ret	       399	show-branch.c	FUNCTION_44
name_commits	functions,0:ELSE,1:SWITCH,1:WHILE,1:IF,5:FOR,4:DO,2:CALL,10	180
0x4000479	              0x55	                                push rbp	       117	show-branch.c	ELSE_1	FUNCTION_35
0x400047a	          0x4889e5	                            mov rbp, rsp	       117	show-branch.c	ELSE_1	FUNCTION_35
0x400047d	        0x4883ec70	                           sub rsp, 0x70	       117	show-branch.c	ELSE_1	FUNCTION_35
0x4000481	        0x48897da8	             mov qword [rbp - 0x58], rdi	       117	show-branch.c	ELSE_1	FUNCTION_35
0x4000485	        0x488975a0	             mov qword [rbp - 0x60], rsi	       117	show-branch.c	ELSE_1	FUNCTION_35
0x4000489	        0x48895598	             mov qword [rbp - 0x68], rdx	       117	show-branch.c	ELSE_1	FUNCTION_35
0x400048d	          0x894d94	             mov dword [rbp - 0x6c], ecx	       117	show-branch.c	ELSE_1	FUNCTION_35
0x4000490	    0x64488b042528	                mov rax, qword fs:[0x28]	       117	show-branch.c	ELSE_1	FUNCTION_35
0x4000499	        0x488945f8	                mov qword [rbp - 8], rax	       117	show-branch.c	ELSE_1	FUNCTION_35
0x400049d	            0x31c0	                            xor eax, eax	       117	show-branch.c	ELSE_1	FUNCTION_35
0x400049f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       123	show-branch.c	ELSE_1	FUNCTION_35	FOR_1
0x40004a3	        0x488945b8	             mov qword [rbp - 0x48], rax	       123	show-branch.c	ELSE_1	FUNCTION_35	FOR_1
0x40004a7	      0xe986000000	                           jmp 0x4000532	       123	show-branch.c	ELSE_1	FUNCTION_35	FOR_1
0x40004ac	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       124	show-branch.c	ELSE_1	FUNCTION_35	FOR_1
0x40004b0	          0x488b00	                    mov rax, qword [rax]	       124	show-branch.c	ELSE_1	FUNCTION_35	FOR_1
0x40004b3	        0x488945c8	             mov qword [rbp - 0x38], rax	       124	show-branch.c	ELSE_1	FUNCTION_35	FOR_1
0x40004b7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       125	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	IF_1
0x40004bb	        0x488b4018	            mov rax, qword [rax + 0x18] 	       125	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	IF_1
0x40004bf	          0x4885c0	                           test rax, rax	       125	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	IF_1
0x40004c2	            0x7561	                           jne 0x4000525	       125	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	IF_1
0x40004c4	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       127	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2
0x40004cb	            0xeb4e	                           jmp 0x400051b	       127	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2
0x40004cd	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       128	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2
0x40004d0	            0x4898	                                    cdqe	       128	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2
0x40004d2	    0x488d14c50000	                        lea rdx, [rax*8]	       128	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2
0x40004da	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       128	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2
0x40004de	          0x4801d0	                            add rax, rdx	       128	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2
0x40004e1	          0x488b00	                    mov rax, qword [rax]	       128	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2
0x40004e4	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       128	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2
0x40004e8	            0x752d	                           jne 0x4000517	       128	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2
0x40004ea	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       129	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2	CALL_1
0x40004ed	            0x4898	                                    cdqe	       129	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2	CALL_1
0x40004ef	    0x488d14c50000	                        lea rdx, [rax*8]	       129	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2	CALL_1
0x40004f7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       129	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2	CALL_1
0x40004fb	          0x4801d0	                            add rax, rdx	       129	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2	CALL_1
0x40004fe	          0x488b08	                    mov rcx, qword [rax]	       129	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2	CALL_1
0x4000501	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       129	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2	CALL_1
0x4000505	      0xba00000000	                              mov edx, 0	       129	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2	CALL_1
0x400050a	          0x4889ce	                            mov rsi, rcx	       129	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2	CALL_1
0x400050d	          0x4889c7	                            mov rdi, rax	       129	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2	CALL_1
0x4000510	      0xe81cfeffff	                    call sym.name_commit	       129	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2	CALL_1
0x4000515	            0xeb0f	                           jmp 0x4000526	       130	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2	IF_2
0x4000517	        0x8345b001	               add dword [rbp - 0x50], 1	       127	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2
0x400051b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       127	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2
0x400051e	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       127	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2
0x4000521	            0x7caa	                            jl 0x40004cd	       127	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2
0x4000523	            0xeb01	                           jmp 0x4000526	       127	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	FOR_2
0x4000525	              0x90	                                     nop	       126	show-branch.c	ELSE_1	FUNCTION_35	FOR_1	IF_1
0x4000526	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       123	show-branch.c	ELSE_1	FUNCTION_35	FOR_1
0x400052a	        0x488b4008	                mov rax, qword [rax + 8]	       123	show-branch.c	ELSE_1	FUNCTION_35	FOR_1
0x400052e	        0x488945b8	             mov qword [rbp - 0x48], rax	       123	show-branch.c	ELSE_1	FUNCTION_35	FOR_1
0x4000532	      0x48837db800	               cmp qword [rbp - 0x48], 0	       123	show-branch.c	ELSE_1	FUNCTION_35	FOR_1
0x4000537	     0xf856fffffff	                           jne 0x40004ac	       123	show-branch.c	ELSE_1	FUNCTION_35	FOR_1
0x400053d	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       137	show-branch.c	ELSE_1	FUNCTION_35	DO_1
0x4000544	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       138	show-branch.c	ELSE_1	FUNCTION_35	DO_1	FOR_3
0x4000548	        0x488945b8	             mov qword [rbp - 0x48], rax	       138	show-branch.c	ELSE_1	FUNCTION_35	DO_1	FOR_3
0x400054c	            0xeb1e	                           jmp 0x400056c	       138	show-branch.c	ELSE_1	FUNCTION_35	DO_1	FOR_3
0x400054e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       139	show-branch.c	ELSE_1	FUNCTION_35	DO_1	FOR_3	CALL_2
0x4000552	          0x488b00	                    mov rax, qword [rax]	       139	show-branch.c	ELSE_1	FUNCTION_35	DO_1	FOR_3	CALL_2
0x4000555	          0x4889c7	                            mov rdi, rax	       139	show-branch.c	ELSE_1	FUNCTION_35	DO_1	FOR_3	CALL_2
0x4000558	      0xe89dfeffff	        call sym.name_first_parent_chain	       139	show-branch.c	ELSE_1	FUNCTION_35	DO_1	FOR_3	CALL_2
0x400055d	           0x145b0	             add dword [rbp - 0x50], eax	       139	show-branch.c	ELSE_1	FUNCTION_35	DO_1	FOR_3	CALL_2
0x4000560	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       138	show-branch.c	ELSE_1	FUNCTION_35	DO_1	FOR_3
0x4000564	        0x488b4008	                mov rax, qword [rax + 8]	       138	show-branch.c	ELSE_1	FUNCTION_35	DO_1	FOR_3
0x4000568	        0x488945b8	             mov qword [rbp - 0x48], rax	       138	show-branch.c	ELSE_1	FUNCTION_35	DO_1	FOR_3
0x400056c	      0x48837db800	               cmp qword [rbp - 0x48], 0	       138	show-branch.c	ELSE_1	FUNCTION_35	DO_1	FOR_3
0x4000571	            0x75db	                           jne 0x400054e	       138	show-branch.c	ELSE_1	FUNCTION_35	DO_1	FOR_3
0x4000573	        0x837db000	               cmp dword [rbp - 0x50], 0	       141	show-branch.c	ELSE_1	FUNCTION_35	DO_1
0x4000577	            0x75c4	                           jne 0x400053d	       141	show-branch.c	ELSE_1	FUNCTION_35	DO_1
0x4000579	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       145	show-branch.c	ELSE_1	FUNCTION_35	DO_2
0x4000580	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       146	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x4000584	        0x488945b8	             mov qword [rbp - 0x48], rax	       146	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x4000588	      0xe977010000	                           jmp 0x4000704	       146	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x400058d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       150	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x4000591	          0x488b00	                    mov rax, qword [rax]	       150	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x4000594	        0x488945c8	             mov qword [rbp - 0x38], rax	       150	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x4000598	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       151	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	IF_3
0x400059c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       151	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	IF_3
0x40005a0	          0x4885c0	                           test rax, rax	       151	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	IF_3
0x40005a3	     0xf844e010000	                            je 0x40006f7	       151	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	IF_3
0x40005a9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       153	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005ad	        0x488b4018	            mov rax, qword [rax + 0x18] 	       153	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005b1	        0x488945d0	             mov qword [rbp - 0x30], rax	       153	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005b5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       154	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005b9	        0x488b4030	            mov rax, qword [rax + 0x30] 	       154	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005bd	        0x488945c0	             mov qword [rbp - 0x40], rax	       154	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005c1	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       155	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005c8	      0xe91d010000	                           jmp 0x40006ea	       156	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005cd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       157	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005d1	          0x488b00	                    mov rax, qword [rax]	       157	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005d4	        0x488945d8	             mov qword [rbp - 0x28], rax	       157	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005d8	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       158	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005e0	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       158	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005e8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       158	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005f0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       159	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005f4	        0x488b4008	                mov rax, qword [rax + 8]	       159	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005f8	        0x488945c0	             mov qword [rbp - 0x40], rax	       159	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40005fc	        0x8345b401	               add dword [rbp - 0x4c], 1	       160	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x4000600	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       161	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	IF_4
0x4000604	        0x488b4018	            mov rax, qword [rax + 0x18] 	       161	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	IF_4
0x4000608	          0x4885c0	                           test rax, rax	       161	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	IF_4
0x400060b	            0x7405	                            je 0x4000612	       161	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	IF_4
0x400060d	      0xe9d8000000	                           jmp 0x40006ea	       161	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	IF_4
0x4000612	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       163	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1
0x4000616	          0x8b4008	                mov eax, dword [rax + 8]	       163	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1
0x4000619	            0x85c0	                           test eax, eax	       163	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1
0x400061b	            0x7407	                            je 0x4000624	       163	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1
0x400061d	          0x83f801	                              cmp eax, 1	       163	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1
0x4000620	            0x741a	                            je 0x400063c	       163	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1
0x4000622	            0xeb37	                           jmp 0x400065b	       163	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1
0x4000624	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       165	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_3
0x4000628	          0x488b10	                    mov rdx, qword [rax]	       165	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_3
0x400062b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       165	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_3
0x400062f	          0x4889d6	                            mov rsi, rdx	       165	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_3
0x4000632	          0x4889c7	                            mov rdi, rax	       165	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_3
0x4000635	      0xe845fbffff	                  call sym.strbuf_addstr	       165	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_3
0x400063a	            0xeb44	                           jmp 0x4000680	       166	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1
0x400063c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       168	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_4
0x4000640	          0x488b10	                    mov rdx, qword [rax]	       168	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_4
0x4000643	        0x488d45e0	                   lea rax, [rbp - 0x20]	       168	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_4
0x4000647	      0xbe00000000	                              mov esi, 0	       168	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_4
0x400064c	          0x4889c7	                            mov rdi, rax	       168	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_4
0x400064f	      0xb800000000	                              mov eax, 0	       168	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_4
0x4000654	      0xe800000000	                          call 0x4000659	       168	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_4
0x4000659	            0xeb25	                           jmp 0x4000680	       169	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1
0x400065b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       171	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_5
0x400065f	          0x8b4808	                mov ecx, dword [rax + 8]	       171	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_5
0x4000662	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       171	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_5
0x4000666	          0x488b10	                    mov rdx, qword [rax]	       171	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_5
0x4000669	        0x488d45e0	                   lea rax, [rbp - 0x20]	       171	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_5
0x400066d	      0xbe00000000	                              mov esi, 0	       171	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_5
0x4000672	          0x4889c7	                            mov rdi, rax	       171	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_5
0x4000675	      0xb800000000	                              mov eax, 0	       171	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_5
0x400067a	      0xe800000000	                          call 0x400067f	       171	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1	CALL_5
0x400067f	              0x90	                                     nop	       173	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	SWITCH_1
0x4000680	        0x837db401	               cmp dword [rbp - 0x4c], 1	       175	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	IF_5
0x4000684	            0x7513	                           jne 0x4000699	       175	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	IF_5
0x4000686	        0x488d45e0	                   lea rax, [rbp - 0x20]	       176	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	CALL_6
0x400068a	      0xbe5e000000	                           mov esi, 0x5e	       176	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	CALL_6
0x400068f	          0x4889c7	                            mov rdi, rax	       176	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	CALL_6
0x4000692	      0xe87afaffff	                   call sym.strbuf_addch	       176	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	CALL_6
0x4000697	            0xeb19	                           jmp 0x40006b2	       176	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	CALL_6
0x4000699	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       178	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_7
0x400069c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       178	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_7
0x40006a0	      0xbe00000000	                              mov esi, 0	       178	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_7
0x40006a5	          0x4889c7	                            mov rdi, rax	       178	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_7
0x40006a8	      0xb800000000	                              mov eax, 0	       178	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_7
0x40006ad	      0xe800000000	                          call 0x40006b2	       178	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_7
0x40006b2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       179	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_9
0x40006b6	      0xbe00000000	                              mov esi, 0	       179	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_9
0x40006bb	          0x4889c7	                            mov rdi, rax	       179	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_9
0x40006be	      0xe800000000	                          call 0x40006c3	       179	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_9
0x40006c3	          0x4889c1	                            mov rcx, rax	       179	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_9
0x40006c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       179	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_9
0x40006ca	      0xba00000000	                              mov edx, 0	       179	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_9
0x40006cf	          0x4889ce	                            mov rsi, rcx	       179	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_9
0x40006d2	          0x4889c7	                            mov rdi, rax	       179	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_9
0x40006d5	      0xe857fcffff	                    call sym.name_commit	       179	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_9
0x40006da	        0x8345b001	               add dword [rbp - 0x50], 1	       180	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1
0x40006de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       181	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_10
0x40006e2	          0x4889c7	                            mov rdi, rax	       181	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_10
0x40006e5	      0xe810fdffff	        call sym.name_first_parent_chain	       181	show-branch.c	FUNCTION_35	DO_2	FOR_4	ELSE_1	CALL_10
0x40006ea	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       156	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40006ef	     0xf85d8feffff	                           jne 0x40005cd	       156	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40006f5	            0xeb01	                           jmp 0x40006f8	       156	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40006f7	              0x90	                                     nop	       152	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4	IF_3
0x40006f8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       146	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x40006fc	        0x488b4008	                mov rax, qword [rax + 8]	       146	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x4000700	        0x488945b8	             mov qword [rbp - 0x48], rax	       146	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x4000704	      0x48837db800	               cmp qword [rbp - 0x48], 0	       146	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x4000709	     0xf857efeffff	                           jne 0x400058d	       146	show-branch.c	ELSE_1	FUNCTION_35	DO_2	FOR_4
0x400070f	        0x837db000	               cmp dword [rbp - 0x50], 0	       184	show-branch.c	FUNCTION_35	ELSE_1	WHILE_1
0x4000713	     0xf8560feffff	                           jne 0x4000579	       184	show-branch.c	FUNCTION_35	ELSE_1	WHILE_1
0x4000719	              0x90	                                     nop	       185	show-branch.c	FUNCTION_35	ELSE_1
0x400071a	        0x488b45f8	                mov rax, qword [rbp - 8]	       185	show-branch.c	FUNCTION_35	ELSE_1
0x400071e	    0x644833042528	                xor rax, qword fs:[0x28]	       185	show-branch.c	FUNCTION_35	ELSE_1
0x4000727	            0x7405	                            je 0x400072e	       185	show-branch.c	FUNCTION_35	ELSE_1
0x4000729	      0xe800000000	                          call 0x400072e	       185	show-branch.c	FUNCTION_35	ELSE_1
0x400072e	              0xc9	                                   leave	       185	show-branch.c	FUNCTION_35	ELSE_1
0x400072f	              0xc3	                                     ret	       185	show-branch.c	FUNCTION_35	ELSE_1
strbuf_addch	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,1:FOR,0:DO,0:CALL,2	33
0x4000111	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_60
0x4000112	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_60
0x4000115	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_60
0x4000119	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_60
0x400011d	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_60
0x4000120	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_60	IF_1	CALL_1
0x4000124	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_60	IF_1	CALL_1
0x4000127	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_60	IF_1	CALL_1
0x400012c	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_60	IF_1	CALL_1
0x400012f	            0x7511	                           jne 0x4000142	       227	strbuf.h	FUNCTION_60	IF_1	CALL_1
0x4000131	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_60	CALL_2
0x4000135	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_60	CALL_2
0x400013a	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_60	CALL_2
0x400013d	      0xe800000000	                          call 0x4000142	       228	strbuf.h	FUNCTION_60	CALL_2
0x4000142	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_60
0x4000146	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_60
0x400014a	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_60
0x400014e	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_60
0x4000152	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_60
0x4000156	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_60
0x400015a	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_60
0x400015e	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_60
0x4000161	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_60
0x4000164	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_60
0x4000166	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_60
0x400016a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_60
0x400016e	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_60
0x4000172	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_60
0x4000176	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_60
0x4000179	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_60
0x400017c	              0x90	                                     nop	       231	strbuf.h	FUNCTION_60
0x400017d	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_60
0x400017e	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_60
show_independent	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,1:FOR,1:DO,0:CALL,2	56
0x40012f7	              0x55	                                push rbp	       500	show-branch.c	FUNCTION_51
0x40012f8	          0x4889e5	                            mov rbp, rsp	       500	show-branch.c	FUNCTION_51
0x40012fb	        0x4883ec30	                           sub rsp, 0x30	       500	show-branch.c	FUNCTION_51
0x40012ff	        0x48897de8	             mov qword [rbp - 0x18], rdi	       500	show-branch.c	FUNCTION_51
0x4001303	          0x8975e4	             mov dword [rbp - 0x1c], esi	       500	show-branch.c	FUNCTION_51
0x4001306	        0x488955d8	             mov qword [rbp - 0x28], rdx	       500	show-branch.c	FUNCTION_51
0x400130a	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       500	show-branch.c	FUNCTION_51
0x400130e	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       503	show-branch.c	FUNCTION_51	FOR_1
0x4001315	      0xe991000000	                           jmp 0x40013ab	       503	show-branch.c	FUNCTION_51	FOR_1
0x400131a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       504	show-branch.c	FUNCTION_51	FOR_1
0x400131d	            0x4898	                                    cdqe	       504	show-branch.c	FUNCTION_51	FOR_1
0x400131f	    0x488d14c50000	                        lea rdx, [rax*8]	       504	show-branch.c	FUNCTION_51	FOR_1
0x4001327	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       504	show-branch.c	FUNCTION_51	FOR_1
0x400132b	          0x4801d0	                            add rax, rdx	       504	show-branch.c	FUNCTION_51	FOR_1
0x400132e	          0x488b00	                    mov rax, qword [rax]	       504	show-branch.c	FUNCTION_51	FOR_1
0x4001331	        0x488945f8	                mov qword [rbp - 8], rax	       504	show-branch.c	FUNCTION_51	FOR_1
0x4001335	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       505	show-branch.c	FUNCTION_51	FOR_1
0x4001338	            0x4898	                                    cdqe	       505	show-branch.c	FUNCTION_51	FOR_1
0x400133a	    0x488d14850000	                        lea rdx, [rax*4]	       505	show-branch.c	FUNCTION_51	FOR_1
0x4001342	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       505	show-branch.c	FUNCTION_51	FOR_1
0x4001346	          0x4801d0	                            add rax, rdx	       505	show-branch.c	FUNCTION_51	FOR_1
0x4001349	            0x8b00	                    mov eax, dword [rax]	       505	show-branch.c	FUNCTION_51	FOR_1
0x400134b	          0x8945f4	              mov dword [rbp - 0xc], eax	       505	show-branch.c	FUNCTION_51	FOR_1
0x400134e	        0x488b45f8	                mov rax, qword [rbp - 8]	       507	show-branch.c	FUNCTION_51	FOR_1	IF_1
0x4001352	            0x8b00	                    mov eax, dword [rax]	       507	show-branch.c	FUNCTION_51	FOR_1	IF_1
0x4001354	          0xc1e804	                              shr eax, 4	       507	show-branch.c	FUNCTION_51	FOR_1	IF_1
0x4001357	      0x25ffffff07	                      and eax, 0x7ffffff	       507	show-branch.c	FUNCTION_51	FOR_1	IF_1
0x400135c	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       507	show-branch.c	FUNCTION_51	FOR_1	IF_1
0x400135f	            0x7518	                           jne 0x4001379	       507	show-branch.c	FUNCTION_51	FOR_1	IF_1
0x4001361	        0x488b45f8	                mov rax, qword [rbp - 8]	       508	show-branch.c	FUNCTION_51	FOR_1	CALL_2
0x4001365	        0x4883c004	                              add rax, 4	       508	show-branch.c	FUNCTION_51	FOR_1	CALL_2
0x4001369	          0x4889c7	                            mov rdi, rax	       508	show-branch.c	FUNCTION_51	FOR_1	CALL_2
0x400136c	      0xe800000000	                          call 0x4001371	       508	show-branch.c	FUNCTION_51	FOR_1	CALL_2
0x4001371	          0x4889c7	                            mov rdi, rax	       508	show-branch.c	FUNCTION_51	FOR_1	CALL_2
0x4001374	      0xe800000000	                          call 0x4001379	       508	show-branch.c	FUNCTION_51	FOR_1	CALL_2
0x4001379	        0x488b45f8	                mov rax, qword [rbp - 8]	       509	show-branch.c	FUNCTION_51	FOR_1
0x400137d	            0x8b00	                    mov eax, dword [rax]	       509	show-branch.c	FUNCTION_51	FOR_1
0x400137f	          0xc1e804	                              shr eax, 4	       509	show-branch.c	FUNCTION_51	FOR_1
0x4001382	      0x25ffffff07	                      and eax, 0x7ffffff	       509	show-branch.c	FUNCTION_51	FOR_1
0x4001387	          0x83c801	                               or eax, 1	       509	show-branch.c	FUNCTION_51	FOR_1
0x400138a	            0x89c2	                            mov edx, eax	       509	show-branch.c	FUNCTION_51	FOR_1
0x400138c	        0x488b45f8	                mov rax, qword [rbp - 8]	       509	show-branch.c	FUNCTION_51	FOR_1
0x4001390	    0x81e2ffffff07	                      and edx, 0x7ffffff	       509	show-branch.c	FUNCTION_51	FOR_1
0x4001396	            0x89d1	                            mov ecx, edx	       509	show-branch.c	FUNCTION_51	FOR_1
0x4001398	          0xc1e104	                              shl ecx, 4	       509	show-branch.c	FUNCTION_51	FOR_1
0x400139b	            0x8b10	                    mov edx, dword [rax]	       509	show-branch.c	FUNCTION_51	FOR_1
0x400139d	    0x81e20f000080	                     and edx, 0x8000000f	       509	show-branch.c	FUNCTION_51	FOR_1
0x40013a3	             0x9ca	                             or edx, ecx	       509	show-branch.c	FUNCTION_51	FOR_1
0x40013a5	            0x8910	                    mov dword [rax], edx	       509	show-branch.c	FUNCTION_51	FOR_1
0x40013a7	        0x8345f001	               add dword [rbp - 0x10], 1	       503	show-branch.c	FUNCTION_51	FOR_1
0x40013ab	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       503	show-branch.c	FUNCTION_51	FOR_1
0x40013ae	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       503	show-branch.c	FUNCTION_51	FOR_1
0x40013b1	     0xf8c63ffffff	                            jl 0x400131a	       503	show-branch.c	FUNCTION_51	FOR_1
0x40013b7	      0xb800000000	                              mov eax, 0	       511	show-branch.c	FUNCTION_51
0x40013bc	              0xc9	                                   leave	       512	show-branch.c	FUNCTION_51
0x40013bd	              0xc3	                                     ret	       512	show-branch.c	FUNCTION_51
git_show_branch_config	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,4:FOR,0:DO,0:CALL,7	53
0x4001504	              0x55	                                push rbp	       538	show-branch.c	FUNCTION_53
0x4001505	          0x4889e5	                            mov rbp, rsp	       538	show-branch.c	FUNCTION_53
0x4001508	        0x4883ec20	                           sub rsp, 0x20	       538	show-branch.c	FUNCTION_53
0x400150c	        0x48897df8	                mov qword [rbp - 8], rdi	       538	show-branch.c	FUNCTION_53
0x4001510	        0x488975f0	             mov qword [rbp - 0x10], rsi	       538	show-branch.c	FUNCTION_53
0x4001514	        0x488955e8	             mov qword [rbp - 0x18], rdx	       538	show-branch.c	FUNCTION_53
0x4001518	        0x488b45f8	                mov rax, qword [rbp - 8]	       539	show-branch.c	FUNCTION_53	IF_1	CALL_1
0x400151c	      0xbe00000000	                              mov esi, 0	       539	show-branch.c	FUNCTION_53	IF_1	CALL_1
0x4001521	          0x4889c7	                            mov rdi, rax	       539	show-branch.c	FUNCTION_53	IF_1	CALL_1
0x4001524	      0xe800000000	                          call 0x4001529	       539	show-branch.c	FUNCTION_53	IF_1	CALL_1
0x4001529	            0x85c0	                           test eax, eax	       539	show-branch.c	FUNCTION_53	IF_1	CALL_1
0x400152b	            0x754b	                           jne 0x4001578	       539	show-branch.c	FUNCTION_53	IF_1	CALL_1
0x400152d	      0x48837df000	               cmp qword [rbp - 0x10], 0	       540	show-branch.c	FUNCTION_53	IF_1	IF_2
0x4001532	            0x7513	                           jne 0x4001547	       540	show-branch.c	FUNCTION_53	IF_1	IF_2
0x4001534	        0x488b45f8	                mov rax, qword [rbp - 8]	       541	show-branch.c	FUNCTION_53	IF_1	CALL_2
0x4001538	          0x4889c7	                            mov rdi, rax	       541	show-branch.c	FUNCTION_53	IF_1	CALL_2
0x400153b	      0xe800000000	                          call 0x4001540	       541	show-branch.c	FUNCTION_53	IF_1	CALL_2
0x4001540	      0xe8fbeaffff	                    call sym.const_error	       541	show-branch.c	FUNCTION_53	IF_1	CALL_2
0x4001545	            0xeb7d	                           jmp 0x40015c4	       541	show-branch.c	FUNCTION_53	IF_1	CALL_2
0x4001547	    0x8b0500000000	            mov eax, dword [0x0400154d] 	       546	show-branch.c	FUNCTION_53	IF_1	IF_3
0x400154d	            0x85c0	                           test eax, eax	       546	show-branch.c	FUNCTION_53	IF_1	IF_3
0x400154f	            0x750f	                           jne 0x4001560	       546	show-branch.c	FUNCTION_53	IF_1	IF_3
0x4001551	      0xbe00000000	                              mov esi, 0	       547	show-branch.c	FUNCTION_53	IF_1	CALL_3
0x4001556	      0xbf00000000	                              mov edi, 0	       547	show-branch.c	FUNCTION_53	IF_1	CALL_3
0x400155b	      0xe800000000	                          call 0x4001560	       547	show-branch.c	FUNCTION_53	IF_1	CALL_3
0x4001560	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       548	show-branch.c	FUNCTION_53	IF_1	CALL_4
0x4001564	          0x4889c6	                            mov rsi, rax	       548	show-branch.c	FUNCTION_53	IF_1	CALL_4
0x4001567	      0xbf00000000	                              mov edi, 0	       548	show-branch.c	FUNCTION_53	IF_1	CALL_4
0x400156c	      0xe800000000	                          call 0x4001571	       548	show-branch.c	FUNCTION_53	IF_1	CALL_4
0x4001571	      0xb800000000	                              mov eax, 0	       549	show-branch.c	FUNCTION_53	IF_1
0x4001576	            0xeb4c	                           jmp 0x40015c4	       549	show-branch.c	FUNCTION_53	IF_1
0x4001578	        0x488b45f8	                mov rax, qword [rbp - 8]	       552	show-branch.c	FUNCTION_53	IF_4	CALL_5
0x400157c	      0xbe00000000	                              mov esi, 0	       552	show-branch.c	FUNCTION_53	IF_4	CALL_5
0x4001581	          0x4889c7	                            mov rdi, rax	       552	show-branch.c	FUNCTION_53	IF_4	CALL_5
0x4001584	      0xe800000000	                          call 0x4001589	       552	show-branch.c	FUNCTION_53	IF_4	CALL_5
0x4001589	            0x85c0	                           test eax, eax	       552	show-branch.c	FUNCTION_53	IF_4	CALL_5
0x400158b	            0x7520	                           jne 0x40015ad	       552	show-branch.c	FUNCTION_53	IF_4	CALL_5
0x400158d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       553	show-branch.c	FUNCTION_53	IF_4	CALL_6
0x4001591	        0x488b45f8	                mov rax, qword [rbp - 8]	       553	show-branch.c	FUNCTION_53	IF_4	CALL_6
0x4001595	          0x4889d6	                            mov rsi, rdx	       553	show-branch.c	FUNCTION_53	IF_4	CALL_6
0x4001598	          0x4889c7	                            mov rdi, rax	       553	show-branch.c	FUNCTION_53	IF_4	CALL_6
0x400159b	      0xe800000000	                          call 0x40015a0	       553	show-branch.c	FUNCTION_53	IF_4	CALL_6
0x40015a0	    0x890500000000	            mov dword [0x040015a6], eax 	       553	show-branch.c	FUNCTION_53	IF_4	CALL_6
0x40015a6	      0xb800000000	                              mov eax, 0	       554	show-branch.c	FUNCTION_53	IF_4
0x40015ab	            0xeb17	                           jmp 0x40015c4	       554	show-branch.c	FUNCTION_53	IF_4
0x40015ad	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       557	show-branch.c	FUNCTION_53	CALL_7
0x40015b1	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       557	show-branch.c	FUNCTION_53	CALL_7
0x40015b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       557	show-branch.c	FUNCTION_53	CALL_7
0x40015b9	          0x4889ce	                            mov rsi, rcx	       557	show-branch.c	FUNCTION_53	CALL_7
0x40015bc	          0x4889c7	                            mov rdi, rax	       557	show-branch.c	FUNCTION_53	CALL_7
0x40015bf	      0xe800000000	                          call 0x40015c4	       557	show-branch.c	FUNCTION_53	CALL_7
0x40015c4	              0xc9	                                   leave	       558	show-branch.c	FUNCTION_53
0x40015c5	              0xc3	                                     ret	       558	show-branch.c	FUNCTION_53
version_cmp	functions,0:ELSE,0:SWITCH,0:WHILE,2:IF,6:FOR,0:DO,0:CALL,2	74
0x4000ba3	              0x55	                                push rbp	       321	show-branch.c	FUNCTION_40
0x4000ba4	          0x4889e5	                            mov rbp, rsp	       321	show-branch.c	FUNCTION_40
0x4000ba7	        0x4883ec30	                           sub rsp, 0x30	       321	show-branch.c	FUNCTION_40
0x4000bab	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       321	show-branch.c	FUNCTION_40
0x4000baf	        0x488975d0	             mov qword [rbp - 0x30], rsi	       321	show-branch.c	FUNCTION_40
0x4000bb3	    0x64488b042528	                mov rax, qword fs:[0x28]	       321	show-branch.c	FUNCTION_40
0x4000bbc	        0x488945f8	                mov qword [rbp - 8], rax	       321	show-branch.c	FUNCTION_40
0x4000bc0	            0x31c0	                            xor eax, eax	       321	show-branch.c	FUNCTION_40
0x4000bc2	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       325	show-branch.c	FUNCTION_40	WHILE_1	CALL_1
0x4000bc6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       325	show-branch.c	FUNCTION_40	WHILE_1	CALL_1
0x4000bca	          0x4889d6	                            mov rsi, rdx	       325	show-branch.c	FUNCTION_40	WHILE_1	CALL_1
0x4000bcd	          0x4889c7	                            mov rdi, rax	       325	show-branch.c	FUNCTION_40	WHILE_1	CALL_1
0x4000bd0	      0xe86dffffff	              call sym.find_digit_prefix	       325	show-branch.c	FUNCTION_40	WHILE_1	CALL_1
0x4000bd5	        0x488945d8	             mov qword [rbp - 0x28], rax	       325	show-branch.c	FUNCTION_40	WHILE_1	CALL_1
0x4000bd9	        0x488d55ec	                   lea rdx, [rbp - 0x14]	       326	show-branch.c	FUNCTION_40	WHILE_1	CALL_2
0x4000bdd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       326	show-branch.c	FUNCTION_40	WHILE_1	CALL_2
0x4000be1	          0x4889d6	                            mov rsi, rdx	       326	show-branch.c	FUNCTION_40	WHILE_1	CALL_2
0x4000be4	          0x4889c7	                            mov rdi, rax	       326	show-branch.c	FUNCTION_40	WHILE_1	CALL_2
0x4000be7	      0xe856ffffff	              call sym.find_digit_prefix	       326	show-branch.c	FUNCTION_40	WHILE_1	CALL_2
0x4000bec	        0x488945d0	             mov qword [rbp - 0x30], rax	       326	show-branch.c	FUNCTION_40	WHILE_1	CALL_2
0x4000bf0	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       327	show-branch.c	FUNCTION_40	WHILE_1	IF_1
0x4000bf3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       327	show-branch.c	FUNCTION_40	WHILE_1	IF_1
0x4000bf6	            0x39c2	                            cmp edx, eax	       327	show-branch.c	FUNCTION_40	WHILE_1	IF_1
0x4000bf8	            0x740f	                            je 0x4000c09	       327	show-branch.c	FUNCTION_40	WHILE_1	IF_1
0x4000bfa	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       328	show-branch.c	FUNCTION_40	WHILE_1	IF_1
0x4000bfd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       328	show-branch.c	FUNCTION_40	WHILE_1	IF_1
0x4000c00	            0x29c2	                            sub edx, eax	       328	show-branch.c	FUNCTION_40	WHILE_1	IF_1
0x4000c02	            0x89d0	                            mov eax, edx	       328	show-branch.c	FUNCTION_40	WHILE_1	IF_1
0x4000c04	      0xe986000000	                           jmp 0x4000c8f	       328	show-branch.c	FUNCTION_40	WHILE_1	IF_1
0x4000c09	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       331	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2
0x4000c0d	           0xfb600	                   movzx eax, byte [rax]	       331	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2
0x4000c10	           0xfbec0	                           movsx eax, al	       331	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2
0x4000c13	          0x8945f0	             mov dword [rbp - 0x10], eax	       331	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2
0x4000c16	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       332	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2
0x4000c1a	           0xfb600	                   movzx eax, byte [rax]	       332	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2
0x4000c1d	           0xfbec0	                           movsx eax, al	       332	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2
0x4000c20	          0x8945f4	              mov dword [rbp - 0xc], eax	       332	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2
0x4000c23	        0x837df02f	           cmp dword [rbp - 0x10], 0x2f 	       333	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_2
0x4000c27	            0x7e0d	                           jle 0x4000c36	       333	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_2
0x4000c29	        0x837df039	           cmp dword [rbp - 0x10], 0x39 	       333	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_2
0x4000c2d	            0x7f07	                            jg 0x4000c36	       333	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_2
0x4000c2f	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       334	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_2
0x4000c36	        0x837df42f	            cmp dword [rbp - 0xc], 0x2f 	       335	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_3
0x4000c3a	            0x7e0d	                           jle 0x4000c49	       335	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_3
0x4000c3c	        0x837df439	            cmp dword [rbp - 0xc], 0x39 	       335	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_3
0x4000c40	            0x7f07	                            jg 0x4000c49	       335	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_3
0x4000c42	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       336	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_3
0x4000c49	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       337	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_4
0x4000c4c	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       337	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_4
0x4000c4f	            0x7408	                            je 0x4000c59	       337	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_4
0x4000c51	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       338	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_4
0x4000c54	          0x2b45f4	              sub eax, dword [rbp - 0xc]	       338	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_4
0x4000c57	            0xeb36	                           jmp 0x4000c8f	       338	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_4
0x4000c59	        0x837df000	               cmp dword [rbp - 0x10], 0	       339	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_5
0x4000c5d	            0x740c	                            je 0x4000c6b	       339	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_5
0x4000c5f	      0x488345d801	               add qword [rbp - 0x28], 1	       341	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2
0x4000c64	      0x488345d001	               add qword [rbp - 0x30], 1	       342	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2
0x4000c69	            0xeb9e	                           jmp 0x4000c09	       343	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2
0x4000c6b	              0x90	                                     nop	       340	show-branch.c	FUNCTION_40	WHILE_1	WHILE_2	IF_5
0x4000c6c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       344	show-branch.c	FUNCTION_40	WHILE_1	IF_6
0x4000c70	           0xfb600	                   movzx eax, byte [rax]	       344	show-branch.c	FUNCTION_40	WHILE_1	IF_6
0x4000c73	            0x84c0	                             test al, al	       344	show-branch.c	FUNCTION_40	WHILE_1	IF_6
0x4000c75	     0xf8547ffffff	                           jne 0x4000bc2	       344	show-branch.c	FUNCTION_40	WHILE_1	IF_6
0x4000c7b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       344	show-branch.c	FUNCTION_40	WHILE_1	IF_6
0x4000c7f	           0xfb600	                   movzx eax, byte [rax]	       344	show-branch.c	FUNCTION_40	WHILE_1	IF_6
0x4000c82	            0x84c0	                             test al, al	       344	show-branch.c	FUNCTION_40	WHILE_1	IF_6
0x4000c84	     0xf8538ffffff	                           jne 0x4000bc2	       344	show-branch.c	FUNCTION_40	WHILE_1	IF_6
0x4000c8a	      0xb800000000	                              mov eax, 0	       345	show-branch.c	FUNCTION_40	WHILE_1	IF_6
0x4000c8f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       347	show-branch.c	FUNCTION_40
0x4000c93	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       347	show-branch.c	FUNCTION_40
0x4000c9c	            0x7405	                            je 0x4000ca3	       347	show-branch.c	FUNCTION_40
0x4000c9e	      0xe800000000	                          call 0x4000ca3	       347	show-branch.c	FUNCTION_40
0x4000ca3	              0xc9	                                   leave	       347	show-branch.c	FUNCTION_40
0x4000ca4	              0xc3	                                     ret	       347	show-branch.c	FUNCTION_40
name_commit	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,1:FOR,0:DO,0:CALL,1	27
0x4000331	              0x55	                                push rbp	        66	show-branch.c	FUNCTION_32
0x4000332	          0x4889e5	                            mov rbp, rsp	        66	show-branch.c	FUNCTION_32
0x4000335	        0x4883ec30	                           sub rsp, 0x30	        66	show-branch.c	FUNCTION_32
0x4000339	        0x48897de8	             mov qword [rbp - 0x18], rdi	        66	show-branch.c	FUNCTION_32
0x400033d	        0x488975e0	             mov qword [rbp - 0x20], rsi	        66	show-branch.c	FUNCTION_32
0x4000341	          0x8955dc	             mov dword [rbp - 0x24], edx	        66	show-branch.c	FUNCTION_32
0x4000344	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        68	show-branch.c	FUNCTION_32	IF_1
0x4000348	        0x488b4018	            mov rax, qword [rax + 0x18] 	        68	show-branch.c	FUNCTION_32	IF_1
0x400034c	          0x4885c0	                           test rax, rax	        68	show-branch.c	FUNCTION_32	IF_1
0x400034f	            0x7515	                           jne 0x4000366	        68	show-branch.c	FUNCTION_32	IF_1
0x4000351	      0xbf10000000	                           mov edi, 0x10	        69	show-branch.c	FUNCTION_32	CALL_1
0x4000356	      0xe800000000	                          call 0x400035b	        69	show-branch.c	FUNCTION_32	CALL_1
0x400035b	          0x4889c2	                            mov rdx, rax	        69	show-branch.c	FUNCTION_32	CALL_1
0x400035e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	show-branch.c	FUNCTION_32	CALL_1
0x4000362	        0x48895018	             mov qword [rax + 0x18], rdx	        69	show-branch.c	FUNCTION_32	CALL_1
0x4000366	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	show-branch.c	FUNCTION_32
0x400036a	        0x488b4018	            mov rax, qword [rax + 0x18] 	        70	show-branch.c	FUNCTION_32
0x400036e	        0x488945f8	                mov qword [rbp - 8], rax	        70	show-branch.c	FUNCTION_32
0x4000372	        0x488b45f8	                mov rax, qword [rbp - 8]	        71	show-branch.c	FUNCTION_32
0x4000376	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        71	show-branch.c	FUNCTION_32
0x400037a	          0x488910	                    mov qword [rax], rdx	        71	show-branch.c	FUNCTION_32
0x400037d	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	show-branch.c	FUNCTION_32
0x4000381	          0x8b55dc	             mov edx, dword [rbp - 0x24]	        72	show-branch.c	FUNCTION_32
0x4000384	          0x895008	                mov dword [rax + 8], edx	        72	show-branch.c	FUNCTION_32
0x4000387	              0x90	                                     nop	        73	show-branch.c	FUNCTION_32
0x4000388	              0xc9	                                   leave	        73	show-branch.c	FUNCTION_32
0x4000389	              0xc3	                                     ret	        73	show-branch.c	FUNCTION_32
rev_is_head	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,2:FOR,0:DO,0:CALL,5	50
0x4001177	              0x55	                                push rbp	       468	show-branch.c	FUNCTION_49
0x4001178	          0x4889e5	                            mov rbp, rsp	       468	show-branch.c	FUNCTION_49
0x400117b	        0x4883ec20	                           sub rsp, 0x20	       468	show-branch.c	FUNCTION_49
0x400117f	        0x48897df8	                mov qword [rbp - 8], rdi	       468	show-branch.c	FUNCTION_49
0x4001183	        0x488975f0	             mov qword [rbp - 0x10], rsi	       468	show-branch.c	FUNCTION_49
0x4001187	        0x488955e8	             mov qword [rbp - 0x18], rdx	       468	show-branch.c	FUNCTION_49
0x400118b	        0x48894de0	             mov qword [rbp - 0x20], rcx	       468	show-branch.c	FUNCTION_49
0x400118f	        0x488b45f8	                mov rax, qword [rbp - 8]	       469	show-branch.c	FUNCTION_49	IF_1	CALL_1
0x4001193	          0x4885c0	                           test rax, rax	       469	show-branch.c	FUNCTION_49	IF_1	CALL_1
0x4001196	            0x7425	                            je 0x40011bd	       469	show-branch.c	FUNCTION_49	IF_1	CALL_1
0x4001198	      0x48837de800	               cmp qword [rbp - 0x18], 0	       469	show-branch.c	FUNCTION_49	IF_1	CALL_1
0x400119d	            0x7425	                            je 0x40011c4	       469	show-branch.c	FUNCTION_49	IF_1	CALL_1
0x400119f	      0x48837de000	               cmp qword [rbp - 0x20], 0	       469	show-branch.c	FUNCTION_49	IF_1	CALL_1
0x40011a4	            0x741e	                            je 0x40011c4	       469	show-branch.c	FUNCTION_49	IF_1	CALL_1
0x40011a6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       469	show-branch.c	FUNCTION_49	IF_1	CALL_1
0x40011aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       469	show-branch.c	FUNCTION_49	IF_1	CALL_1
0x40011ae	          0x4889d6	                            mov rsi, rdx	       469	show-branch.c	FUNCTION_49	IF_1	CALL_1
0x40011b1	          0x4889c7	                            mov rdi, rax	       469	show-branch.c	FUNCTION_49	IF_1	CALL_1
0x40011b4	      0xe854f0ffff	                        call sym.hashcmp	       469	show-branch.c	FUNCTION_49	IF_1	CALL_1
0x40011b9	            0x85c0	                           test eax, eax	       469	show-branch.c	FUNCTION_49	IF_1	CALL_1
0x40011bb	            0x7407	                            je 0x40011c4	       469	show-branch.c	FUNCTION_49	IF_1	CALL_1
0x40011bd	      0xb800000000	                              mov eax, 0	       470	show-branch.c	FUNCTION_49	IF_1
0x40011c2	            0xeb5e	                           jmp 0x4001222	       470	show-branch.c	FUNCTION_49	IF_1
0x40011c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       471	show-branch.c	FUNCTION_49	CALL_2
0x40011c8	        0x488d55f8	                      lea rdx, [rbp - 8]	       471	show-branch.c	FUNCTION_49	CALL_2
0x40011cc	      0xbe00000000	                              mov esi, 0	       471	show-branch.c	FUNCTION_49	CALL_2
0x40011d1	          0x4889c7	                            mov rdi, rax	       471	show-branch.c	FUNCTION_49	CALL_2
0x40011d4	      0xe872eeffff	                    call sym.skip_prefix	       471	show-branch.c	FUNCTION_49	CALL_2
0x40011d9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       472	show-branch.c	FUNCTION_49	IF_2	CALL_3
0x40011dd	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       472	show-branch.c	FUNCTION_49	IF_2	CALL_3
0x40011e1	      0xbe00000000	                              mov esi, 0	       472	show-branch.c	FUNCTION_49	IF_2	CALL_3
0x40011e6	          0x4889c7	                            mov rdi, rax	       472	show-branch.c	FUNCTION_49	IF_2	CALL_3
0x40011e9	      0xe85deeffff	                    call sym.skip_prefix	       472	show-branch.c	FUNCTION_49	IF_2	CALL_3
0x40011ee	            0x85c0	                           test eax, eax	       472	show-branch.c	FUNCTION_49	IF_2	CALL_3
0x40011f0	            0x7515	                           jne 0x4001207	       472	show-branch.c	FUNCTION_49	IF_2	CALL_3
0x40011f2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       473	show-branch.c	FUNCTION_49	CALL_4
0x40011f6	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       473	show-branch.c	FUNCTION_49	CALL_4
0x40011fa	      0xbe00000000	                              mov esi, 0	       473	show-branch.c	FUNCTION_49	CALL_4
0x40011ff	          0x4889c7	                            mov rdi, rax	       473	show-branch.c	FUNCTION_49	CALL_4
0x4001202	      0xe844eeffff	                    call sym.skip_prefix	       473	show-branch.c	FUNCTION_49	CALL_4
0x4001207	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       474	show-branch.c	FUNCTION_49	CALL_5
0x400120b	        0x488b45f8	                mov rax, qword [rbp - 8]	       474	show-branch.c	FUNCTION_49	CALL_5
0x400120f	          0x4889d6	                            mov rsi, rdx	       474	show-branch.c	FUNCTION_49	CALL_5
0x4001212	          0x4889c7	                            mov rdi, rax	       474	show-branch.c	FUNCTION_49	CALL_5
0x4001215	      0xe800000000	                          call 0x400121a	       474	show-branch.c	FUNCTION_49	CALL_5
0x400121a	            0x85c0	                           test eax, eax	       474	show-branch.c	FUNCTION_49	CALL_5
0x400121c	           0xf94c0	                                 sete al	       474	show-branch.c	FUNCTION_49	CALL_5
0x400121f	           0xfb6c0	                           movzx eax, al	       474	show-branch.c	FUNCTION_49	CALL_5
0x4001222	              0xc9	                                   leave	       475	show-branch.c	FUNCTION_49
0x4001223	              0xc3	                                     ret	       475	show-branch.c	FUNCTION_49
_	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,1:FOR,0:DO,0:CALL,0	15
0x40001b4	              0x55	                                push rbp	        51	gettext.h	FUNCTION_70
0x40001b5	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_70
0x40001b8	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_70
0x40001bc	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_70
0x40001c0	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_70	IF_1
0x40001c4	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_70	IF_1
0x40001c7	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_70	IF_1
0x40001c9	            0x7507	                           jne 0x40001d2	        52	gettext.h	FUNCTION_70	IF_1
0x40001cb	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_70	IF_1
0x40001d0	            0xeb0c	                           jmp 0x40001de	        53	gettext.h	FUNCTION_70	IF_1
0x40001d2	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_70
0x40001d6	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_70
0x40001d9	      0xe800000000	                          call 0x40001de	        54	gettext.h	FUNCTION_70
0x40001de	              0xc9	                                   leave	        55	gettext.h	FUNCTION_70
0x40001df	              0xc3	                                     ret	        55	gettext.h	FUNCTION_70
const_error	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:FOR,0:DO,0:CALL,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_7
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_7
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_7
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_7
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_7
append_tag_ref	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,1:FOR,0:DO,0:CALL,2	24
0x4000fa7	              0x55	                                push rbp	       418	show-branch.c	FUNCTION_46
0x4000fa8	          0x4889e5	                            mov rbp, rsp	       418	show-branch.c	FUNCTION_46
0x4000fab	        0x4883ec20	                           sub rsp, 0x20	       418	show-branch.c	FUNCTION_46
0x4000faf	        0x48897df8	                mov qword [rbp - 8], rdi	       418	show-branch.c	FUNCTION_46
0x4000fb3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       418	show-branch.c	FUNCTION_46
0x4000fb7	          0x8955ec	             mov dword [rbp - 0x14], edx	       418	show-branch.c	FUNCTION_46
0x4000fba	        0x48894de0	             mov qword [rbp - 0x20], rcx	       418	show-branch.c	FUNCTION_46
0x4000fbe	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	show-branch.c	FUNCTION_46	IF_1	CALL_1
0x4000fc2	      0xbe00000000	                              mov esi, 0	       419	show-branch.c	FUNCTION_46	IF_1	CALL_1
0x4000fc7	          0x4889c7	                            mov rdi, rax	       419	show-branch.c	FUNCTION_46	IF_1	CALL_1
0x4000fca	      0xe800000000	                          call 0x4000fcf	       419	show-branch.c	FUNCTION_46	IF_1	CALL_1
0x4000fcf	            0x85c0	                           test eax, eax	       419	show-branch.c	FUNCTION_46	IF_1	CALL_1
0x4000fd1	            0x7507	                           jne 0x4000fda	       419	show-branch.c	FUNCTION_46	IF_1	CALL_1
0x4000fd3	      0xb800000000	                              mov eax, 0	       420	show-branch.c	FUNCTION_46	IF_1
0x4000fd8	            0xeb1c	                           jmp 0x4000ff6	       420	show-branch.c	FUNCTION_46	IF_1
0x4000fda	        0x488b45f8	                mov rax, qword [rbp - 8]	       421	show-branch.c	FUNCTION_46	CALL_2
0x4000fde	        0x488d4805	                      lea rcx, [rax + 5]	       421	show-branch.c	FUNCTION_46	CALL_2
0x4000fe2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       421	show-branch.c	FUNCTION_46	CALL_2
0x4000fe6	      0xba00000000	                              mov edx, 0	       421	show-branch.c	FUNCTION_46	CALL_2
0x4000feb	          0x4889c6	                            mov rsi, rax	       421	show-branch.c	FUNCTION_46	CALL_2
0x4000fee	          0x4889cf	                            mov rdi, rcx	       421	show-branch.c	FUNCTION_46	CALL_2
0x4000ff1	      0xe826fdffff	                     call sym.append_ref	       421	show-branch.c	FUNCTION_46	CALL_2
0x4000ff6	              0xc9	                                   leave	       422	show-branch.c	FUNCTION_46
0x4000ff7	              0xc3	                                     ret	       422	show-branch.c	FUNCTION_46
parse_reflog_param	functions,0:ELSE,2:SWITCH,0:WHILE,0:IF,4:FOR,0:DO,0:CALL,1	55
0x4001668	              0x55	                                push rbp	       585	show-branch.c	FUNCTION_55
0x4001669	          0x4889e5	                            mov rbp, rsp	       585	show-branch.c	FUNCTION_55
0x400166c	        0x4883ec40	                           sub rsp, 0x40	       585	show-branch.c	FUNCTION_55
0x4001670	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       585	show-branch.c	FUNCTION_55
0x4001674	        0x488975d0	             mov qword [rbp - 0x30], rsi	       585	show-branch.c	FUNCTION_55
0x4001678	          0x8955cc	             mov dword [rbp - 0x34], edx	       585	show-branch.c	FUNCTION_55
0x400167b	    0x64488b042528	                mov rax, qword fs:[0x28]	       585	show-branch.c	FUNCTION_55
0x4001684	        0x488945f8	                mov qword [rbp - 8], rax	       585	show-branch.c	FUNCTION_55
0x4001688	            0x31c0	                            xor eax, eax	       585	show-branch.c	FUNCTION_55
0x400168a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       587	show-branch.c	FUNCTION_55
0x400168e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       587	show-branch.c	FUNCTION_55
0x4001692	        0x488945f0	             mov qword [rbp - 0x10], rax	       587	show-branch.c	FUNCTION_55
0x4001696	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       588	show-branch.c	FUNCTION_55	IF_1
0x400169b	            0x7508	                           jne 0x40016a5	       588	show-branch.c	FUNCTION_55	IF_1
0x400169d	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       589	show-branch.c	FUNCTION_55	IF_1
0x40016a5	        0x488d4de8	                   lea rcx, [rbp - 0x18]	       590	show-branch.c	FUNCTION_55	CALL_1
0x40016a9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       590	show-branch.c	FUNCTION_55	CALL_1
0x40016ad	      0xba0a000000	                            mov edx, 0xa	       590	show-branch.c	FUNCTION_55	CALL_1
0x40016b2	          0x4889ce	                            mov rsi, rcx	       590	show-branch.c	FUNCTION_55	CALL_1
0x40016b5	          0x4889c7	                            mov rdi, rax	       590	show-branch.c	FUNCTION_55	CALL_1
0x40016b8	      0xe800000000	                          call 0x40016bd	       590	show-branch.c	FUNCTION_55	CALL_1
0x40016bd	    0x890500000000	            mov dword [0x040016c3], eax 	       590	show-branch.c	FUNCTION_55	CALL_1
0x40016c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       591	show-branch.c	FUNCTION_55	IF_2
0x40016c7	           0xfb600	                   movzx eax, byte [rax]	       591	show-branch.c	FUNCTION_55	IF_2
0x40016ca	            0x3c2c	                            cmp al, 0x2c	       591	show-branch.c	FUNCTION_55	IF_2
0x40016cc	            0x7511	                           jne 0x40016df	       591	show-branch.c	FUNCTION_55	IF_2
0x40016ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       592	show-branch.c	FUNCTION_55	IF_2
0x40016d2	        0x488d5001	                      lea rdx, [rax + 1]	       592	show-branch.c	FUNCTION_55	IF_2
0x40016d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       592	show-branch.c	FUNCTION_55	IF_2
0x40016da	          0x488910	                    mov qword [rax], rdx	       592	show-branch.c	FUNCTION_55	IF_2
0x40016dd	            0xeb33	                           jmp 0x4001712	       592	show-branch.c	FUNCTION_55	IF_2
0x40016df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       593	show-branch.c	FUNCTION_55	ELSE_1	IF_3
0x40016e3	           0xfb600	                   movzx eax, byte [rax]	       593	show-branch.c	FUNCTION_55	ELSE_1	IF_3
0x40016e6	            0x84c0	                             test al, al	       593	show-branch.c	FUNCTION_55	ELSE_1	IF_3
0x40016e8	            0x741d	                            je 0x4001707	       593	show-branch.c	FUNCTION_55	ELSE_1	IF_3
0x40016ea	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       594	show-branch.c	FUNCTION_55	ELSE_1	IF_3
0x40016ee	          0x4889c6	                            mov rsi, rax	       594	show-branch.c	FUNCTION_55	ELSE_1	IF_3
0x40016f1	      0xbf00000000	                              mov edi, 0	       594	show-branch.c	FUNCTION_55	ELSE_1	IF_3
0x40016f6	      0xb800000000	                              mov eax, 0	       594	show-branch.c	FUNCTION_55	ELSE_1	IF_3
0x40016fb	      0xe800000000	                          call 0x4001700	       594	show-branch.c	FUNCTION_55	ELSE_1	IF_3
0x4001700	      0xe83be9ffff	                    call sym.const_error	       594	show-branch.c	FUNCTION_55	ELSE_1	IF_3
0x4001705	            0xeb24	                           jmp 0x400172b	       594	show-branch.c	FUNCTION_55	ELSE_1	IF_3
0x4001707	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       596	show-branch.c	FUNCTION_55	ELSE_2
0x400170b	    0x48c700000000	                      mov qword [rax], 0	       596	show-branch.c	FUNCTION_55	ELSE_2
0x4001712	    0x8b0500000000	            mov eax, dword [0x04001718] 	       597	show-branch.c	FUNCTION_55	IF_4
0x4001718	            0x85c0	                           test eax, eax	       597	show-branch.c	FUNCTION_55	IF_4
0x400171a	            0x7f0a	                            jg 0x4001726	       597	show-branch.c	FUNCTION_55	IF_4
0x400171c	    0xc70500000000	               mov dword [0x04001726], 4	       598	show-branch.c	FUNCTION_55	IF_4
0x4001726	      0xb800000000	                              mov eax, 0	       599	show-branch.c	FUNCTION_55
0x400172b	        0x488b4df8	                mov rcx, qword [rbp - 8]	       600	show-branch.c	FUNCTION_55
0x400172f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       600	show-branch.c	FUNCTION_55
0x4001738	            0x7405	                            je 0x400173f	       600	show-branch.c	FUNCTION_55
0x400173a	      0xe800000000	                          call 0x400173f	       600	show-branch.c	FUNCTION_55
0x400173f	              0xc9	                                   leave	       600	show-branch.c	FUNCTION_55
0x4001740	              0xc3	                                     ret	       600	show-branch.c	FUNCTION_55
get_color_reset_code	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,1:FOR,0:DO,0:CALL,1	13
0x40002bd	              0x55	                                push rbp	        39	show-branch.c	FUNCTION_30
0x40002be	          0x4889e5	                            mov rbp, rsp	        39	show-branch.c	FUNCTION_30
0x40002c1	    0x8b0500000000	            mov eax, dword [0x040002c7] 	        40	show-branch.c	FUNCTION_30	IF_1	CALL_1
0x40002c7	            0x89c6	                            mov esi, eax	        40	show-branch.c	FUNCTION_30	IF_1	CALL_1
0x40002c9	      0xbf01000000	                              mov edi, 1	        40	show-branch.c	FUNCTION_30	IF_1	CALL_1
0x40002ce	      0xe800000000	                          call 0x40002d3	        40	show-branch.c	FUNCTION_30	IF_1	CALL_1
0x40002d3	            0x85c0	                           test eax, eax	        40	show-branch.c	FUNCTION_30	IF_1	CALL_1
0x40002d5	            0x7407	                            je 0x40002de	        40	show-branch.c	FUNCTION_30	IF_1	CALL_1
0x40002d7	      0xb800000000	                              mov eax, 0	        41	show-branch.c	FUNCTION_30	IF_1
0x40002dc	            0xeb05	                           jmp 0x40002e3	        41	show-branch.c	FUNCTION_30	IF_1
0x40002de	      0xb800000000	                              mov eax, 0	        42	show-branch.c	FUNCTION_30
0x40002e3	              0x5d	                                 pop rbp	        43	show-branch.c	FUNCTION_30
0x40002e4	              0xc3	                                     ret	        43	show-branch.c	FUNCTION_30
Q_	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,1:FOR,0:DO,0:CALL,0	14
0x40001e0	              0x55	                                push rbp	        59	gettext.h	FUNCTION_71
0x40001e1	          0x4889e5	                            mov rbp, rsp	        59	gettext.h	FUNCTION_71
0x40001e4	        0x4883ec20	                           sub rsp, 0x20	        59	gettext.h	FUNCTION_71
0x40001e8	        0x48897df8	                mov qword [rbp - 8], rdi	        59	gettext.h	FUNCTION_71
0x40001ec	        0x488975f0	             mov qword [rbp - 0x10], rsi	        59	gettext.h	FUNCTION_71
0x40001f0	        0x488955e8	             mov qword [rbp - 0x18], rdx	        59	gettext.h	FUNCTION_71
0x40001f4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        62	gettext.h	FUNCTION_71
0x40001f8	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        62	gettext.h	FUNCTION_71
0x40001fc	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	gettext.h	FUNCTION_71
0x4000200	          0x4889ce	                            mov rsi, rcx	        62	gettext.h	FUNCTION_71
0x4000203	          0x4889c7	                            mov rdi, rax	        62	gettext.h	FUNCTION_71
0x4000206	      0xe800000000	                          call 0x400020b	        62	gettext.h	FUNCTION_71
0x400020b	              0xc9	                                   leave	        63	gettext.h	FUNCTION_71
0x400020c	              0xc3	                                     ret	        63	gettext.h	FUNCTION_71
cmd_show_branch	functions,0:ELSE,7:SWITCH,0:WHILE,2:IF,42:FOR,8:DO,0:CALL,85	877
0x4001741	              0x55	                                push rbp	       603	show-branch.c	FUNCTION_56
0x4001742	          0x4889e5	                            mov rbp, rsp	       603	show-branch.c	FUNCTION_56
0x4001745	            0x4155	                                push r13	       603	show-branch.c	FUNCTION_56
0x4001747	            0x4154	                                push r12	       603	show-branch.c	FUNCTION_56
0x4001749	              0x53	                                push rbx	       603	show-branch.c	FUNCTION_56
0x400174a	    0x4881ec380700	                          sub rsp, 0x738	       603	show-branch.c	FUNCTION_56
0x4001751	    0x89bdccf8ffff	            mov dword [rbp - 0x734], edi	       603	show-branch.c	FUNCTION_56
0x4001757	    0x4889b5c0f8ff	            mov qword [rbp - 0x740], rsi	       603	show-branch.c	FUNCTION_56
0x400175e	    0x488995b8f8ff	            mov qword [rbp - 0x748], rdx	       603	show-branch.c	FUNCTION_56
0x4001765	    0x64488b042528	                mov rax, qword fs:[0x28]	       603	show-branch.c	FUNCTION_56
0x400176e	        0x488945d8	             mov qword [rbp - 0x28], rax	       603	show-branch.c	FUNCTION_56
0x4001772	            0x31c0	                            xor eax, eax	       603	show-branch.c	FUNCTION_56
0x4001774	    0x48c78540f9ff	              mov qword [rbp - 0x6c0], 0	       606	show-branch.c	FUNCTION_56
0x400177f	    0x48c78548f9ff	              mov qword [rbp - 0x6b8], 0	       606	show-branch.c	FUNCTION_56
0x400178a	    0xc785d0f8ffff	              mov dword [rbp - 0x730], 0	       608	show-branch.c	FUNCTION_56
0x4001794	    0xc785d4f8ffff	              mov dword [rbp - 0x72c], 0	       609	show-branch.c	FUNCTION_56
0x400179e	    0xc785d8f8ffff	              mov dword [rbp - 0x728], 0	       609	show-branch.c	FUNCTION_56
0x40017a8	    0xc785dcf8ffff	              mov dword [rbp - 0x724], 0	       611	show-branch.c	FUNCTION_56
0x40017b2	    0xc785e0f8ffff	              mov dword [rbp - 0x720], 0	       614	show-branch.c	FUNCTION_56
0x40017bc	    0xc785e4f8ffff	              mov dword [rbp - 0x71c], 0	       615	show-branch.c	FUNCTION_56
0x40017c6	    0xc785e8f8ffff	              mov dword [rbp - 0x718], 0	       616	show-branch.c	FUNCTION_56
0x40017d0	    0xc785ecf8ffff	              mov dword [rbp - 0x714], 0	       617	show-branch.c	FUNCTION_56
0x40017da	    0xc7850cf9ffff	              mov dword [rbp - 0x6f4], 0	       618	show-branch.c	FUNCTION_56
0x40017e4	    0xc785f0f8ffff	              mov dword [rbp - 0x710], 0	       619	show-branch.c	FUNCTION_56
0x40017ee	    0xc78510f9ffff	    mov dword [rbp - 0x6f0], 0xffffffff 	       620	show-branch.c	FUNCTION_56
0x40017f8	    0xc785f4f8ffff	              mov dword [rbp - 0x70c], 0	       621	show-branch.c	FUNCTION_56
0x4001802	    0xc785f8f8ffff	              mov dword [rbp - 0x708], 1	       622	show-branch.c	FUNCTION_56
0x400180c	    0x48c78550f9ff	              mov qword [rbp - 0x6b0], 0	       623	show-branch.c	FUNCTION_56
0x4001817	    0x488d95d0fbff	                  lea rdx, [rbp - 0x430]	       624	show-branch.c	FUNCTION_56
0x400181e	      0xb800000000	                              mov eax, 0	       624	show-branch.c	FUNCTION_56
0x4001823	      0xb980000000	                           mov ecx, 0x80	       624	show-branch.c	FUNCTION_56
0x4001828	          0x4889d7	                            mov rdi, rdx	       624	show-branch.c	FUNCTION_56
0x400182b	          0xf348ab	              rep stosq qword [rdi], rax	       624	show-branch.c	FUNCTION_56
0x400182e	    0xc785d0fbffff	              mov dword [rbp - 0x430], 7	       624	show-branch.c	FUNCTION_56
0x4001838	    0xc785d4fbffff	          mov dword [rbp - 0x42c], 0x61 	       624	show-branch.c	FUNCTION_56
0x4001842	    0x48c785d8fbff	              mov qword [rbp - 0x428], 0	       624	show-branch.c	FUNCTION_56
0x400184d	    0x488d85d4f8ff	                  lea rax, [rbp - 0x72c]	       624	show-branch.c	FUNCTION_56
0x4001854	    0x488985e0fbff	            mov qword [rbp - 0x420], rax	       624	show-branch.c	FUNCTION_56
0x400185b	    0x48c785f0fbff	              mov qword [rbp - 0x410], 0	       624	show-branch.c	FUNCTION_56
0x4001866	    0xc785f8fbffff	              mov dword [rbp - 0x408], 2	       624	show-branch.c	FUNCTION_56
0x4001870	    0x48c78508fcff	              mov qword [rbp - 0x3f8], 1	       624	show-branch.c	FUNCTION_56
0x400187b	    0xc78510fcffff	              mov dword [rbp - 0x3f0], 7	       624	show-branch.c	FUNCTION_56
0x4001885	    0xc78514fcffff	          mov dword [rbp - 0x3ec], 0x72 	       624	show-branch.c	FUNCTION_56
0x400188f	    0x48c78518fcff	              mov qword [rbp - 0x3e8], 0	       624	show-branch.c	FUNCTION_56
0x400189a	    0x488d85d8f8ff	                  lea rax, [rbp - 0x728]	       624	show-branch.c	FUNCTION_56
0x40018a1	    0x48898520fcff	            mov qword [rbp - 0x3e0], rax	       624	show-branch.c	FUNCTION_56
0x40018a8	    0x48c78530fcff	              mov qword [rbp - 0x3d0], 0	       624	show-branch.c	FUNCTION_56
0x40018b3	    0xc78538fcffff	              mov dword [rbp - 0x3c8], 2	       624	show-branch.c	FUNCTION_56
0x40018bd	    0x48c78548fcff	              mov qword [rbp - 0x3b8], 1	       624	show-branch.c	FUNCTION_56
0x40018c8	    0xc78550fcffff	           mov dword [rbp - 0x3b0], 0xc 	       624	show-branch.c	FUNCTION_56
0x40018d2	    0x48c78558fcff	              mov qword [rbp - 0x3a8], 0	       624	show-branch.c	FUNCTION_56
0x40018dd	    0x48c78560fcff	              mov qword [rbp - 0x3a0], 0	       624	show-branch.c	FUNCTION_56
0x40018e8	    0x48c78568fcff	              mov qword [rbp - 0x398], 0	       624	show-branch.c	FUNCTION_56
0x40018f3	    0x48c78570fcff	              mov qword [rbp - 0x390], 0	       624	show-branch.c	FUNCTION_56
0x40018fe	    0xc78578fcffff	              mov dword [rbp - 0x388], 1	       624	show-branch.c	FUNCTION_56
0x4001908	    0x48c78580fcff	              mov qword [rbp - 0x380], 0	       624	show-branch.c	FUNCTION_56
0x4001913	      0xb800000000	                              mov eax, 0	       629	show-branch.c	FUNCTION_56	CALL_3
0x4001918	    0x48898588fcff	            mov qword [rbp - 0x378], rax	       624	show-branch.c	FUNCTION_56
0x400191f	    0xc78590fcffff	            mov dword [rbp - 0x370], 0xa	       624	show-branch.c	FUNCTION_56
0x4001929	    0x48c78598fcff	              mov qword [rbp - 0x368], 0	       624	show-branch.c	FUNCTION_56
0x4001934	    0x488d85d0f8ff	                  lea rax, [rbp - 0x730]	       624	show-branch.c	FUNCTION_56
0x400193b	    0x488985a0fcff	            mov qword [rbp - 0x360], rax	       624	show-branch.c	FUNCTION_56
0x4001942	    0x48c785a8fcff	              mov qword [rbp - 0x358], 0	       624	show-branch.c	FUNCTION_56
0x400194d	    0x48c785b0fcff	              mov qword [rbp - 0x350], 0	       624	show-branch.c	FUNCTION_56
0x4001958	    0xc785b8fcffff	              mov dword [rbp - 0x348], 1	       624	show-branch.c	FUNCTION_56
0x4001962	    0x48c785c8fcff	              mov qword [rbp - 0x338], 1	       624	show-branch.c	FUNCTION_56
0x400196d	    0xc785d0fcffff	              mov dword [rbp - 0x330], 7	       624	show-branch.c	FUNCTION_56
0x4001977	    0x48c785d8fcff	              mov qword [rbp - 0x328], 0	       624	show-branch.c	FUNCTION_56
0x4001982	    0x488d85d0f8ff	                  lea rax, [rbp - 0x730]	       624	show-branch.c	FUNCTION_56
0x4001989	    0x488985e0fcff	            mov qword [rbp - 0x320], rax	       624	show-branch.c	FUNCTION_56
0x4001990	    0x48c785f0fcff	              mov qword [rbp - 0x310], 0	       624	show-branch.c	FUNCTION_56
0x400199b	    0xc785f8fcffff	              mov dword [rbp - 0x308], 2	       624	show-branch.c	FUNCTION_56
0x40019a5	    0x48c78508fdff	mov qword [rbp - 0x2f8], 0xffffffffffffffff	       624	show-branch.c	FUNCTION_56
0x40019b0	    0xc78510fdffff	              mov dword [rbp - 0x2f0], 7	       624	show-branch.c	FUNCTION_56
0x40019ba	    0x48c78518fdff	              mov qword [rbp - 0x2e8], 0	       624	show-branch.c	FUNCTION_56
0x40019c5	    0x488d85e8f8ff	                  lea rax, [rbp - 0x718]	       624	show-branch.c	FUNCTION_56
0x40019cc	    0x48898520fdff	            mov qword [rbp - 0x2e0], rax	       624	show-branch.c	FUNCTION_56
0x40019d3	    0x48c78530fdff	              mov qword [rbp - 0x2d0], 0	       624	show-branch.c	FUNCTION_56
0x40019de	    0xc78538fdffff	              mov dword [rbp - 0x2c8], 2	       624	show-branch.c	FUNCTION_56
0x40019e8	    0x48c78548fdff	              mov qword [rbp - 0x2b8], 1	       624	show-branch.c	FUNCTION_56
0x40019f3	    0xc78550fdffff	              mov dword [rbp - 0x2b0], 7	       624	show-branch.c	FUNCTION_56
0x40019fd	    0x48c78558fdff	              mov qword [rbp - 0x2a8], 0	       624	show-branch.c	FUNCTION_56
0x4001a08	    0x488d85f0f8ff	                  lea rax, [rbp - 0x710]	       624	show-branch.c	FUNCTION_56
0x4001a0f	    0x48898560fdff	            mov qword [rbp - 0x2a0], rax	       624	show-branch.c	FUNCTION_56
0x4001a16	    0x48c78570fdff	              mov qword [rbp - 0x290], 0	       624	show-branch.c	FUNCTION_56
0x4001a21	    0xc78578fdffff	              mov dword [rbp - 0x288], 2	       624	show-branch.c	FUNCTION_56
0x4001a2b	    0x48c78588fdff	              mov qword [rbp - 0x278], 1	       624	show-branch.c	FUNCTION_56
0x4001a36	    0xc78590fdffff	              mov dword [rbp - 0x270], 7	       624	show-branch.c	FUNCTION_56
0x4001a40	    0x48c78598fdff	              mov qword [rbp - 0x268], 0	       624	show-branch.c	FUNCTION_56
0x4001a4b	    0x488d85ecf8ff	                  lea rax, [rbp - 0x714]	       624	show-branch.c	FUNCTION_56
0x4001a52	    0x488985a0fdff	            mov qword [rbp - 0x260], rax	       624	show-branch.c	FUNCTION_56
0x4001a59	    0x48c785b0fdff	              mov qword [rbp - 0x250], 0	       624	show-branch.c	FUNCTION_56
0x4001a64	    0xc785b8fdffff	              mov dword [rbp - 0x248], 2	       624	show-branch.c	FUNCTION_56
0x4001a6e	    0x48c785c8fdff	              mov qword [rbp - 0x238], 1	       624	show-branch.c	FUNCTION_56
0x4001a79	    0xc785d0fdffff	              mov dword [rbp - 0x230], 7	       624	show-branch.c	FUNCTION_56
0x4001a83	    0x48c785d8fdff	              mov qword [rbp - 0x228], 0	       624	show-branch.c	FUNCTION_56
0x4001a8e	    0x488d85e0f8ff	                  lea rax, [rbp - 0x720]	       624	show-branch.c	FUNCTION_56
0x4001a95	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	       624	show-branch.c	FUNCTION_56
0x4001a9c	    0x48c785f0fdff	              mov qword [rbp - 0x210], 0	       624	show-branch.c	FUNCTION_56
0x4001aa7	    0xc785f8fdffff	              mov dword [rbp - 0x208], 2	       624	show-branch.c	FUNCTION_56
0x4001ab1	    0x48c78508feff	              mov qword [rbp - 0x1f8], 1	       624	show-branch.c	FUNCTION_56
0x4001abc	    0xc78510feffff	              mov dword [rbp - 0x1f0], 7	       624	show-branch.c	FUNCTION_56
0x4001ac6	    0x48c78518feff	              mov qword [rbp - 0x1e8], 0	       624	show-branch.c	FUNCTION_56
0x4001ad1	    0x488d85e4f8ff	                  lea rax, [rbp - 0x71c]	       624	show-branch.c	FUNCTION_56
0x4001ad8	    0x48898520feff	            mov qword [rbp - 0x1e0], rax	       624	show-branch.c	FUNCTION_56
0x4001adf	    0x48c78530feff	              mov qword [rbp - 0x1d0], 0	       624	show-branch.c	FUNCTION_56
0x4001aea	    0xc78538feffff	              mov dword [rbp - 0x1c8], 2	       624	show-branch.c	FUNCTION_56
0x4001af4	    0x48c78548feff	              mov qword [rbp - 0x1b8], 1	       624	show-branch.c	FUNCTION_56
0x4001aff	    0xc78550feffff	              mov dword [rbp - 0x1b0], 7	       624	show-branch.c	FUNCTION_56
0x4001b09	    0x48c78558feff	              mov qword [rbp - 0x1a8], 0	       624	show-branch.c	FUNCTION_56
0x4001b14	    0x488d85dcf8ff	                  lea rax, [rbp - 0x724]	       624	show-branch.c	FUNCTION_56
0x4001b1b	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	       624	show-branch.c	FUNCTION_56
0x4001b22	    0x48c78570feff	              mov qword [rbp - 0x190], 0	       624	show-branch.c	FUNCTION_56
0x4001b2d	    0xc78578feffff	              mov dword [rbp - 0x188], 2	       624	show-branch.c	FUNCTION_56
0x4001b37	    0xc78590feffff	              mov dword [rbp - 0x170], 7	       624	show-branch.c	FUNCTION_56
0x4001b41	    0x48c78598feff	              mov qword [rbp - 0x168], 0	       624	show-branch.c	FUNCTION_56
0x4001b4c	    0x488d85f4f8ff	                  lea rax, [rbp - 0x70c]	       624	show-branch.c	FUNCTION_56
0x4001b53	    0x488985a0feff	            mov qword [rbp - 0x160], rax	       624	show-branch.c	FUNCTION_56
0x4001b5a	    0x48c785b0feff	              mov qword [rbp - 0x150], 0	       624	show-branch.c	FUNCTION_56
0x4001b65	    0xc785b8feffff	              mov dword [rbp - 0x148], 2	       624	show-branch.c	FUNCTION_56
0x4001b6f	    0x48c785c8feff	              mov qword [rbp - 0x138], 1	       624	show-branch.c	FUNCTION_56
0x4001b7a	    0xc785d0feffff	              mov dword [rbp - 0x130], 7	       624	show-branch.c	FUNCTION_56
0x4001b84	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	       624	show-branch.c	FUNCTION_56
0x4001b8f	    0x488d85f8f8ff	                  lea rax, [rbp - 0x708]	       624	show-branch.c	FUNCTION_56
0x4001b96	    0x488985e0feff	            mov qword [rbp - 0x120], rax	       624	show-branch.c	FUNCTION_56
0x4001b9d	    0x48c785f0feff	              mov qword [rbp - 0x110], 0	       624	show-branch.c	FUNCTION_56
0x4001ba8	    0xc785f8feffff	              mov dword [rbp - 0x108], 2	       624	show-branch.c	FUNCTION_56
0x4001bb2	    0xc78510ffffff	               mov dword [rbp - 0xf0], 7	       624	show-branch.c	FUNCTION_56
0x4001bbc	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	       624	show-branch.c	FUNCTION_56
0x4001bc7	    0x488d85dcf8ff	                  lea rax, [rbp - 0x724]	       624	show-branch.c	FUNCTION_56
0x4001bce	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	       624	show-branch.c	FUNCTION_56
0x4001bd5	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	       624	show-branch.c	FUNCTION_56
0x4001be0	    0xc78538ffffff	               mov dword [rbp - 0xc8], 2	       624	show-branch.c	FUNCTION_56
0x4001bea	    0x48c78548ffff	               mov qword [rbp - 0xb8], 1	       624	show-branch.c	FUNCTION_56
0x4001bf5	    0xc78550ffffff	            mov dword [rbp - 0xb0], 0xc 	       624	show-branch.c	FUNCTION_56
0x4001bff	    0xc78554ffffff	           mov dword [rbp - 0xac], 0x67 	       624	show-branch.c	FUNCTION_56
0x4001c09	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	       624	show-branch.c	FUNCTION_56
0x4001c14	    0x488d8550f9ff	                  lea rax, [rbp - 0x6b0]	       624	show-branch.c	FUNCTION_56
0x4001c1b	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       624	show-branch.c	FUNCTION_56
0x4001c22	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       624	show-branch.c	FUNCTION_56
0x4001c2d	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       624	show-branch.c	FUNCTION_56
0x4001c38	    0xc78578ffffff	           mov dword [rbp - 0x88], 0x41 	       624	show-branch.c	FUNCTION_56
0x4001c42	    0x48c745800000	               mov qword [rbp - 0x80], 0	       624	show-branch.c	FUNCTION_56
0x4001c4a	      0xbe00000000	                              mov esi, 0	       663	show-branch.c	FUNCTION_56	CALL_15
0x4001c4f	      0xbf00000000	                              mov edi, 0	       663	show-branch.c	FUNCTION_56	CALL_15
0x4001c54	      0xe800000000	                          call 0x4001c59	       663	show-branch.c	FUNCTION_56	CALL_15
0x4001c59	    0x83bdccf8ffff	              cmp dword [rbp - 0x734], 1	       666	show-branch.c	FUNCTION_56	IF_1
0x4001c60	            0x7524	                           jne 0x4001c86	       666	show-branch.c	FUNCTION_56	IF_1
0x4001c62	    0x8b0500000000	            mov eax, dword [0x04001c68] 	       666	show-branch.c	FUNCTION_56	IF_1
0x4001c68	            0x85c0	                           test eax, eax	       666	show-branch.c	FUNCTION_56	IF_1
0x4001c6a	            0x741a	                            je 0x4001c86	       666	show-branch.c	FUNCTION_56	IF_1
0x4001c6c	    0x8b0500000000	            mov eax, dword [0x04001c72] 	       667	show-branch.c	FUNCTION_56	IF_1
0x4001c72	    0x8985ccf8ffff	            mov dword [rbp - 0x734], eax	       667	show-branch.c	FUNCTION_56	IF_1
0x4001c78	    0x488b05000000	            mov rax, qword [0x04001c7f] 	       668	show-branch.c	FUNCTION_56	IF_1
0x4001c7f	    0x488985c0f8ff	            mov qword [rbp - 0x740], rax	       668	show-branch.c	FUNCTION_56	IF_1
0x4001c86	    0x488d8dd0fbff	                  lea rcx, [rbp - 0x430]	       671	show-branch.c	FUNCTION_56	CALL_16
0x4001c8d	    0x488b95b8f8ff	            mov rdx, qword [rbp - 0x748]	       671	show-branch.c	FUNCTION_56	CALL_16
0x4001c94	    0x488bb5c0f8ff	            mov rsi, qword [rbp - 0x740]	       671	show-branch.c	FUNCTION_56	CALL_16
0x4001c9b	    0x8b85ccf8ffff	            mov eax, dword [rbp - 0x734]	       671	show-branch.c	FUNCTION_56	CALL_16
0x4001ca1	    0x41b902000000	                              mov r9d, 2	       671	show-branch.c	FUNCTION_56	CALL_16
0x4001ca7	    0x41b800000000	                              mov r8d, 0	       671	show-branch.c	FUNCTION_56	CALL_16
0x4001cad	            0x89c7	                            mov edi, eax	       671	show-branch.c	FUNCTION_56	CALL_16
0x4001caf	      0xe800000000	                          call 0x4001cb4	       671	show-branch.c	FUNCTION_56	CALL_16
0x4001cb4	    0x8985ccf8ffff	            mov dword [rbp - 0x734], eax	       671	show-branch.c	FUNCTION_56	CALL_16
0x4001cba	    0x8b85d4f8ffff	            mov eax, dword [rbp - 0x72c]	       673	show-branch.c	FUNCTION_56	IF_2
0x4001cc0	            0x85c0	                           test eax, eax	       673	show-branch.c	FUNCTION_56	IF_2
0x4001cc2	            0x740a	                            je 0x4001cce	       673	show-branch.c	FUNCTION_56	IF_2
0x4001cc4	    0xc785d8f8ffff	              mov dword [rbp - 0x728], 1	       674	show-branch.c	FUNCTION_56	IF_2
0x4001cce	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       676	show-branch.c	FUNCTION_56	IF_3
0x4001cd4	            0x85c0	                           test eax, eax	       676	show-branch.c	FUNCTION_56	IF_3
0x4001cd6	            0x750a	                           jne 0x4001ce2	       676	show-branch.c	FUNCTION_56	IF_3
0x4001cd8	    0x8b0500000000	            mov eax, dword [0x04001cde] 	       676	show-branch.c	FUNCTION_56	IF_3
0x4001cde	            0x85c0	                           test eax, eax	       676	show-branch.c	FUNCTION_56	IF_3
0x4001ce0	            0x7467	                            je 0x4001d49	       676	show-branch.c	FUNCTION_56	IF_3
0x4001ce2	    0x8b85e4f8ffff	            mov eax, dword [rbp - 0x71c]	       680	show-branch.c	FUNCTION_56	IF_3	IF_4
0x4001ce8	            0x85c0	                           test eax, eax	       680	show-branch.c	FUNCTION_56	IF_3	IF_4
0x4001cea	            0x750a	                           jne 0x4001cf6	       680	show-branch.c	FUNCTION_56	IF_3	IF_4
0x4001cec	    0x8b85e0f8ffff	            mov eax, dword [rbp - 0x720]	       680	show-branch.c	FUNCTION_56	IF_3	IF_4
0x4001cf2	            0x85c0	                           test eax, eax	       680	show-branch.c	FUNCTION_56	IF_3	IF_4
0x4001cf4	            0x7414	                            je 0x4001d0a	       680	show-branch.c	FUNCTION_56	IF_3	IF_4
0x4001cf6	    0x488d85d0fbff	                  lea rax, [rbp - 0x430]	       681	show-branch.c	FUNCTION_56	IF_3	IF_4	CALL_17
0x4001cfd	          0x4889c6	                            mov rsi, rax	       681	show-branch.c	FUNCTION_56	IF_3	IF_4	CALL_17
0x4001d00	      0xbf00000000	                              mov edi, 0	       681	show-branch.c	FUNCTION_56	IF_3	IF_4	CALL_17
0x4001d05	      0xe800000000	                          call 0x4001d0a	       681	show-branch.c	FUNCTION_56	IF_3	IF_4	CALL_17
0x4001d0a	    0x8b0500000000	            mov eax, dword [0x04001d10] 	       683	show-branch.c	FUNCTION_56	IF_3	IF_5
0x4001d10	            0x85c0	                           test eax, eax	       683	show-branch.c	FUNCTION_56	IF_3	IF_5
0x4001d12	            0x7435	                            je 0x4001d49	       683	show-branch.c	FUNCTION_56	IF_3	IF_5
0x4001d14	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       683	show-branch.c	FUNCTION_56	IF_3	IF_5
0x4001d1a	            0x85c0	                           test eax, eax	       683	show-branch.c	FUNCTION_56	IF_3	IF_5
0x4001d1c	            0x7f14	                            jg 0x4001d32	       683	show-branch.c	FUNCTION_56	IF_3	IF_5
0x4001d1e	    0x8b85d4f8ffff	            mov eax, dword [rbp - 0x72c]	       683	show-branch.c	FUNCTION_56	IF_3	IF_5
0x4001d24	            0x85c0	                           test eax, eax	       683	show-branch.c	FUNCTION_56	IF_3	IF_5
0x4001d26	            0x750a	                           jne 0x4001d32	       683	show-branch.c	FUNCTION_56	IF_3	IF_5
0x4001d28	    0x8b85d8f8ffff	            mov eax, dword [rbp - 0x728]	       683	show-branch.c	FUNCTION_56	IF_3	IF_5
0x4001d2e	            0x85c0	                           test eax, eax	       683	show-branch.c	FUNCTION_56	IF_3	IF_5
0x4001d30	            0x7417	                            je 0x4001d49	       683	show-branch.c	FUNCTION_56	IF_3	IF_5
0x4001d32	      0xbf00000000	                              mov edi, 0	       690	show-branch.c	FUNCTION_56	IF_3	IF_5	CALL_19
0x4001d37	      0xe878e4ffff	                               call sym.	       690	show-branch.c	FUNCTION_56	IF_3	IF_5	CALL_19
0x4001d3c	          0x4889c7	                            mov rdi, rax	       690	show-branch.c	FUNCTION_56	IF_3	IF_5	CALL_19
0x4001d3f	      0xb800000000	                              mov eax, 0	       690	show-branch.c	FUNCTION_56	IF_3	IF_5	CALL_19
0x4001d44	      0xe800000000	                          call 0x4001d49	       690	show-branch.c	FUNCTION_56	IF_3	IF_5	CALL_19
0x4001d49	    0x8b85f4f8ffff	            mov eax, dword [rbp - 0x70c]	       695	show-branch.c	FUNCTION_56	IF_6
0x4001d4f	    0x3985ccf8ffff	           cmp dword [rbp - 0x734], eax 	       695	show-branch.c	FUNCTION_56	IF_6
0x4001d55	            0x7f1c	                            jg 0x4001d73	       695	show-branch.c	FUNCTION_56	IF_6
0x4001d57	    0x8b95d4f8ffff	            mov edx, dword [rbp - 0x72c]	       695	show-branch.c	FUNCTION_56	IF_6
0x4001d5d	    0x8b85d8f8ffff	            mov eax, dword [rbp - 0x728]	       695	show-branch.c	FUNCTION_56	IF_6
0x4001d63	             0x1d0	                            add eax, edx	       695	show-branch.c	FUNCTION_56	IF_6
0x4001d65	            0x85c0	                           test eax, eax	       695	show-branch.c	FUNCTION_56	IF_6
0x4001d67	            0x750a	                           jne 0x4001d73	       695	show-branch.c	FUNCTION_56	IF_6
0x4001d69	    0xc785d4f8ffff	              mov dword [rbp - 0x72c], 1	       696	show-branch.c	FUNCTION_56	IF_6
0x4001d73	    0x8b0500000000	            mov eax, dword [0x04001d79] 	       698	show-branch.c	FUNCTION_56	IF_7
0x4001d79	            0x85c0	                           test eax, eax	       698	show-branch.c	FUNCTION_56	IF_7
0x4001d7b	     0xf849a030000	                            je 0x400211b	       698	show-branch.c	FUNCTION_56	IF_7
0x4001d81	    0xc785fcf8ffff	              mov dword [rbp - 0x704], 0	       701	show-branch.c	FUNCTION_56	IF_7
0x4001d8b	    0xc78520f9ffff	              mov dword [rbp - 0x6e0], 0	       702	show-branch.c	FUNCTION_56	IF_7
0x4001d95	    0x83bdccf8ffff	              cmp dword [rbp - 0x734], 0	       704	show-branch.c	FUNCTION_56	IF_7	IF_8
0x4001d9c	            0x756b	                           jne 0x4001e09	       704	show-branch.c	FUNCTION_56	IF_7	IF_8
0x4001d9e	    0x488d8530faff	                  lea rax, [rbp - 0x5d0]	       707	show-branch.c	FUNCTION_56	IF_7	IF_8	CALL_20
0x4001da5	      0xb900000000	                              mov ecx, 0	       707	show-branch.c	FUNCTION_56	IF_7	IF_8	CALL_20
0x4001daa	          0x4889c2	                            mov rdx, rax	       707	show-branch.c	FUNCTION_56	IF_7	IF_8	CALL_20
0x4001dad	      0xbe01000000	                              mov esi, 1	       707	show-branch.c	FUNCTION_56	IF_7	IF_8	CALL_20
0x4001db2	      0xbf00000000	                              mov edi, 0	       707	show-branch.c	FUNCTION_56	IF_7	IF_8	CALL_20
0x4001db7	      0xe800000000	                          call 0x4001dbc	       707	show-branch.c	FUNCTION_56	IF_7	IF_8	CALL_20
0x4001dbc	    0x488905000000	            mov qword [0x04001dc3], rax 	       707	show-branch.c	FUNCTION_56	IF_7	IF_8	CALL_20
0x4001dc3	    0x48c705000000	               mov qword [0x04001dce], 0	       710	show-branch.c	FUNCTION_56	IF_7	IF_8
0x4001dce	    0x48c785c0f8ff	              mov qword [rbp - 0x740], 0	       711	show-branch.c	FUNCTION_56	IF_7	IF_8
0x4001dd9	    0xc785ccf8ffff	              mov dword [rbp - 0x734], 1	       712	show-branch.c	FUNCTION_56	IF_7	IF_8
0x4001de3	    0x488b85c0f8ff	            mov rax, qword [rbp - 0x740]	       713	show-branch.c	FUNCTION_56	IF_7	IF_8	IF_9
0x4001dea	          0x488b00	                    mov rax, qword [rax]	       713	show-branch.c	FUNCTION_56	IF_7	IF_8	IF_9
0x4001ded	          0x4885c0	                           test rax, rax	       713	show-branch.c	FUNCTION_56	IF_7	IF_8	IF_9
0x4001df0	            0x7517	                           jne 0x4001e09	       713	show-branch.c	FUNCTION_56	IF_7	IF_8	IF_9
0x4001df2	      0xbf00000000	                              mov edi, 0	       714	show-branch.c	FUNCTION_56	IF_7	IF_8	CALL_22
0x4001df7	      0xe8b8e3ffff	                               call sym.	       714	show-branch.c	FUNCTION_56	IF_7	IF_8	CALL_22
0x4001dfc	          0x4889c7	                            mov rdi, rax	       714	show-branch.c	FUNCTION_56	IF_7	IF_8	CALL_22
0x4001dff	      0xb800000000	                              mov eax, 0	       714	show-branch.c	FUNCTION_56	IF_7	IF_8	CALL_22
0x4001e04	      0xe800000000	                          call 0x4001e09	       714	show-branch.c	FUNCTION_56	IF_7	IF_8	CALL_22
0x4001e09	    0x83bdccf8ffff	              cmp dword [rbp - 0x734], 1	       716	show-branch.c	FUNCTION_56	IF_7	IF_10
0x4001e10	            0x7417	                            je 0x4001e29	       716	show-branch.c	FUNCTION_56	IF_7	IF_10
0x4001e12	      0xbf00000000	                              mov edi, 0	       717	show-branch.c	FUNCTION_56	IF_7	CALL_24
0x4001e17	      0xe898e3ffff	                               call sym.	       717	show-branch.c	FUNCTION_56	IF_7	CALL_24
0x4001e1c	          0x4889c7	                            mov rdi, rax	       717	show-branch.c	FUNCTION_56	IF_7	CALL_24
0x4001e1f	      0xb800000000	                              mov eax, 0	       717	show-branch.c	FUNCTION_56	IF_7	CALL_24
0x4001e24	      0xe800000000	                          call 0x4001e29	       717	show-branch.c	FUNCTION_56	IF_7	CALL_24
0x4001e29	    0x8b0500000000	            mov eax, dword [0x04001e2f] 	       719	show-branch.c	FUNCTION_56	IF_7	IF_11
0x4001e2f	          0x83f819	                           cmp eax, 0x19	       719	show-branch.c	FUNCTION_56	IF_7	IF_11
0x4001e32	            0x7e26	                           jle 0x4001e5a	       719	show-branch.c	FUNCTION_56	IF_7	IF_11
0x4001e34	      0xba19000000	                           mov edx, 0x19	       720	show-branch.c	FUNCTION_56	IF_7	IF_11	CALL_26
0x4001e39	      0xbe00000000	                              mov esi, 0	       720	show-branch.c	FUNCTION_56	IF_7	IF_11	CALL_26
0x4001e3e	      0xbf00000000	                              mov edi, 0	       720	show-branch.c	FUNCTION_56	IF_7	IF_11	CALL_26
0x4001e43	      0xe898e3ffff	                              call sym.Q	       720	show-branch.c	FUNCTION_56	IF_7	IF_11	CALL_26
0x4001e48	      0xbe19000000	                           mov esi, 0x19	       720	show-branch.c	FUNCTION_56	IF_7	IF_11	CALL_26
0x4001e4d	          0x4889c7	                            mov rdi, rax	       720	show-branch.c	FUNCTION_56	IF_7	IF_11	CALL_26
0x4001e50	      0xb800000000	                              mov eax, 0	       720	show-branch.c	FUNCTION_56	IF_7	IF_11	CALL_26
0x4001e55	      0xe800000000	                          call 0x4001e5a	       720	show-branch.c	FUNCTION_56	IF_7	IF_11	CALL_26
0x4001e5a	    0x488b85c0f8ff	            mov rax, qword [rbp - 0x740]	       723	show-branch.c	FUNCTION_56	IF_7	IF_12	CALL_28
0x4001e61	          0x488b00	                    mov rax, qword [rax]	       723	show-branch.c	FUNCTION_56	IF_7	IF_12	CALL_28
0x4001e64	          0x4889c7	                            mov rdi, rax	       723	show-branch.c	FUNCTION_56	IF_7	IF_12	CALL_28
0x4001e67	      0xe800000000	                          call 0x4001e6c	       723	show-branch.c	FUNCTION_56	IF_7	IF_12	CALL_28
0x4001e6c	            0x89c6	                            mov esi, eax	       723	show-branch.c	FUNCTION_56	IF_7	IF_12	CALL_28
0x4001e6e	    0x488b85c0f8ff	            mov rax, qword [rbp - 0x740]	       723	show-branch.c	FUNCTION_56	IF_7	IF_12	CALL_28
0x4001e75	          0x488b00	                    mov rax, qword [rax]	       723	show-branch.c	FUNCTION_56	IF_7	IF_12	CALL_28
0x4001e78	    0x488d8d58f9ff	                  lea rcx, [rbp - 0x6a8]	       723	show-branch.c	FUNCTION_56	IF_7	IF_12	CALL_28
0x4001e7f	    0x488d9530faff	                  lea rdx, [rbp - 0x5d0]	       723	show-branch.c	FUNCTION_56	IF_7	IF_12	CALL_28
0x4001e86	          0x4889c7	                            mov rdi, rax	       723	show-branch.c	FUNCTION_56	IF_7	IF_12	CALL_28
0x4001e89	      0xe800000000	                          call 0x4001e8e	       723	show-branch.c	FUNCTION_56	IF_7	IF_12	CALL_28
0x4001e8e	            0x85c0	                           test eax, eax	       723	show-branch.c	FUNCTION_56	IF_7	IF_12	CALL_28
0x4001e90	            0x7524	                           jne 0x4001eb6	       723	show-branch.c	FUNCTION_56	IF_7	IF_12	CALL_28
0x4001e92	    0x488b85c0f8ff	            mov rax, qword [rbp - 0x740]	       724	show-branch.c	FUNCTION_56	IF_7	CALL_30
0x4001e99	          0x488b18	                    mov rbx, qword [rax]	       724	show-branch.c	FUNCTION_56	IF_7	CALL_30
0x4001e9c	      0xbf00000000	                              mov edi, 0	       724	show-branch.c	FUNCTION_56	IF_7	CALL_30
0x4001ea1	      0xe80ee3ffff	                               call sym.	       724	show-branch.c	FUNCTION_56	IF_7	CALL_30
0x4001ea6	          0x4889de	                            mov rsi, rbx	       724	show-branch.c	FUNCTION_56	IF_7	CALL_30
0x4001ea9	          0x4889c7	                            mov rdi, rax	       724	show-branch.c	FUNCTION_56	IF_7	CALL_30
0x4001eac	      0xb800000000	                              mov eax, 0	       724	show-branch.c	FUNCTION_56	IF_7	CALL_30
0x4001eb1	      0xe800000000	                          call 0x4001eb6	       724	show-branch.c	FUNCTION_56	IF_7	CALL_30
0x4001eb6	    0x488b8550f9ff	            mov rax, qword [rbp - 0x6b0]	       727	show-branch.c	FUNCTION_56	IF_7	IF_13
0x4001ebd	          0x4885c0	                           test rax, rax	       727	show-branch.c	FUNCTION_56	IF_7	IF_13
0x4001ec0	     0xf8492000000	                            je 0x4001f58	       727	show-branch.c	FUNCTION_56	IF_7	IF_13
0x4001ec6	    0x488b8550f9ff	            mov rax, qword [rbp - 0x6b0]	       729	show-branch.c	FUNCTION_56	IF_7	IF_13	CALL_31
0x4001ecd	    0x488d8d68f9ff	                  lea rcx, [rbp - 0x698]	       729	show-branch.c	FUNCTION_56	IF_7	IF_13	CALL_31
0x4001ed4	      0xba0a000000	                            mov edx, 0xa	       729	show-branch.c	FUNCTION_56	IF_7	IF_13	CALL_31
0x4001ed9	          0x4889ce	                            mov rsi, rcx	       729	show-branch.c	FUNCTION_56	IF_7	IF_13	CALL_31
0x4001edc	          0x4889c7	                            mov rdi, rax	       729	show-branch.c	FUNCTION_56	IF_7	IF_13	CALL_31
0x4001edf	      0xe800000000	                          call 0x4001ee4	       729	show-branch.c	FUNCTION_56	IF_7	IF_13	CALL_31
0x4001ee4	    0x8985fcf8ffff	            mov dword [rbp - 0x704], eax	       729	show-branch.c	FUNCTION_56	IF_7	IF_13	CALL_31
0x4001eea	    0x488b8568f9ff	            mov rax, qword [rbp - 0x698]	       730	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14
0x4001ef1	           0xfb600	                   movzx eax, byte [rax]	       730	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14
0x4001ef4	            0x84c0	                             test al, al	       730	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14
0x4001ef6	            0x7460	                            je 0x4001f58	       730	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14
0x4001ef8	    0x488b8550f9ff	            mov rax, qword [rbp - 0x6b0]	       733	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14
0x4001eff	      0xbe00000000	                              mov esi, 0	       733	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14
0x4001f04	          0x4889c7	                            mov rdi, rax	       733	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14
0x4001f07	      0xe800000000	                          call 0x4001f0c	       733	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14
0x4001f0c	    0x48898578f9ff	            mov qword [rbp - 0x688], rax	       733	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14
0x4001f13	    0x488b8558f9ff	            mov rax, qword [rbp - 0x6a8]	       734	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14	CALL_32
0x4001f1a	    0x488dbd30faff	                  lea rdi, [rbp - 0x5d0]	       734	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14	CALL_32
0x4001f21	    0x488b9578f9ff	            mov rdx, qword [rbp - 0x688]	       734	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14	CALL_32
0x4001f28	    0x8bb520f9ffff	            mov esi, dword [rbp - 0x6e0]	       734	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14	CALL_32
0x4001f2e	        0x4883ec08	                              sub rsp, 8	       734	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14	CALL_32
0x4001f32	    0x488d8dfcf8ff	                  lea rcx, [rbp - 0x704]	       734	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14	CALL_32
0x4001f39	              0x51	                                push rcx	       734	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14	CALL_32
0x4001f3a	            0x6a00	                                  push 0	       734	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14	CALL_32
0x4001f3c	            0x6a00	                                  push 0	       734	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14	CALL_32
0x4001f3e	    0x41b900000000	                              mov r9d, 0	       734	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14	CALL_32
0x4001f44	          0x4989f8	                             mov r8, rdi	       734	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14	CALL_32
0x4001f47	      0xb9ffffffff	                     mov ecx, 0xffffffff	       734	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14	CALL_32
0x4001f4c	          0x4889c7	                            mov rdi, rax	       734	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14	CALL_32
0x4001f4f	      0xe800000000	                          call 0x4001f54	       734	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14	CALL_32
0x4001f54	        0x4883c420	                           add rsp, 0x20	       734	show-branch.c	FUNCTION_56	IF_7	IF_13	IF_14	CALL_32
0x4001f58	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 0	       739	show-branch.c	FUNCTION_56	IF_7	FOR_1
0x4001f62	      0xe970010000	                           jmp 0x40020d7	       739	show-branch.c	FUNCTION_56	IF_7	FOR_1
0x4001f67	    0x8b95fcf8ffff	            mov edx, dword [rbp - 0x704]	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001f6d	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001f73	          0x8d0c02	                    lea ecx, [rdx + rax]	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001f76	    0x488b8558f9ff	            mov rax, qword [rbp - 0x6a8]	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001f7d	    0x4c8d8560f9ff	                   lea r8, [rbp - 0x6a0]	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001f84	    0x488dbd30faff	                  lea rdi, [rbp - 0x5d0]	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001f8b	    0x8bb520f9ffff	            mov esi, dword [rbp - 0x6e0]	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001f91	        0x4883ec08	                              sub rsp, 8	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001f95	            0x6a00	                                  push 0	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001f97	    0x488d9500f9ff	                  lea rdx, [rbp - 0x700]	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001f9e	              0x52	                                push rdx	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001f9f	    0x488d9568f9ff	                  lea rdx, [rbp - 0x698]	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001fa6	              0x52	                                push rdx	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001fa7	          0x4d89c1	                              mov r9, r8	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001faa	          0x4989f8	                             mov r8, rdi	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001fad	      0xba00000000	                              mov edx, 0	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001fb2	          0x4889c7	                            mov rdi, rax	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001fb5	      0xe800000000	                          call 0x4001fba	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001fba	        0x4883c420	                           add rsp, 0x20	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001fbe	            0x85c0	                           test eax, eax	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001fc0	            0x7411	                            je 0x4001fd3	       746	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15	CALL_33
0x4001fc2	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       748	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15
0x4001fc8	    0x890500000000	            mov dword [0x04001fce], eax 	       748	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15
0x4001fce	      0xe916010000	                           jmp 0x40020e9	       748	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_15
0x4001fd3	    0x488b8560f9ff	            mov rax, qword [rbp - 0x6a0]	       751	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_34
0x4001fda	      0xbe09000000	                              mov esi, 9	       751	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_34
0x4001fdf	          0x4889c7	                            mov rdi, rax	       751	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_34
0x4001fe2	      0xe800000000	                          call 0x4001fe7	       751	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_34
0x4001fe7	    0x48898570f9ff	            mov qword [rbp - 0x690], rax	       751	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_34
0x4001fee	    0x4883bd70f9ff	              cmp qword [rbp - 0x690], 0	       752	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_16
0x4001ff6	            0x750d	                           jne 0x4002005	       752	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_16
0x4001ff8	    0x48c78570f9ff	              mov qword [rbp - 0x690], 0	       753	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_16
0x4002003	            0xeb08	                           jmp 0x400200d	       753	show-branch.c	FUNCTION_56	IF_7	FOR_1	IF_16
0x4002005	    0x48838570f9ff	              add qword [rbp - 0x690], 1	       755	show-branch.c	FUNCTION_56	IF_7	FOR_1	ELSE_1
0x400200d	      0xbf01000000	                              mov edi, 1	       758	show-branch.c	FUNCTION_56	IF_7	FOR_1
0x4002012	      0xe800000000	                          call 0x4002017	       758	show-branch.c	FUNCTION_56	IF_7	FOR_1
0x4002017	          0x4889c2	                            mov rdx, rax	       758	show-branch.c	FUNCTION_56	IF_7	FOR_1
0x400201a	    0x8b8d00f9ffff	            mov ecx, dword [rbp - 0x700]	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x4002020	    0x488b8568f9ff	            mov rax, qword [rbp - 0x698]	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x4002027	            0x89ce	                            mov esi, ecx	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x4002029	          0x4889c7	                            mov rdi, rax	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x400202c	      0xe800000000	                          call 0x4002031	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x4002031	          0x4889c1	                            mov rcx, rax	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x4002034	    0x488b8570f9ff	            mov rax, qword [rbp - 0x690]	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x400203b	          0x4889c2	                            mov rdx, rax	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x400203e	          0x4889ce	                            mov rsi, rcx	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x4002041	      0xbf00000000	                              mov edi, 0	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x4002046	      0xb800000000	                              mov eax, 0	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x400204b	      0xe800000000	                          call 0x4002050	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x4002050	          0x4889c2	                            mov rdx, rax	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x4002053	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x4002059	            0x4898	                                    cdqe	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x400205b	    0x488994c500fb	    mov qword [rbp + rax*8 - 0x500], rdx	       756	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_35
0x4002063	    0x488b8560f9ff	            mov rax, qword [rbp - 0x6a0]	       760	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_37
0x400206a	          0x4889c7	                            mov rdi, rax	       760	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_37
0x400206d	      0xe800000000	                          call 0x4002072	       760	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_37
0x4002072	    0x8b95fcf8ffff	            mov edx, dword [rbp - 0x704]	       762	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_38
0x4002078	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       762	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_38
0x400207e	             0x1c2	                            add edx, eax	       762	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_38
0x4002080	    0x488b85c0f8ff	            mov rax, qword [rbp - 0x740]	       762	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_38
0x4002087	          0x488b00	                    mov rax, qword [rax]	       762	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_38
0x400208a	          0x4889c6	                            mov rsi, rax	       762	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_38
0x400208d	      0xbf00000000	                              mov edi, 0	       762	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_38
0x4002092	      0xb800000000	                              mov eax, 0	       762	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_38
0x4002097	      0xe800000000	                          call 0x400209c	       762	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_38
0x400209c	    0x48898580f9ff	            mov qword [rbp - 0x680], rax	       762	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_38
0x40020a3	    0x488d8d30faff	                  lea rcx, [rbp - 0x5d0]	       763	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_39
0x40020aa	    0x488b8580f9ff	            mov rax, qword [rbp - 0x680]	       763	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_39
0x40020b1	      0xba01000000	                              mov edx, 1	       763	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_39
0x40020b6	          0x4889ce	                            mov rsi, rcx	       763	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_39
0x40020b9	          0x4889c7	                            mov rdi, rax	       763	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_39
0x40020bc	      0xe85becffff	                     call sym.append_ref	       763	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_39
0x40020c1	    0x488b8580f9ff	            mov rax, qword [rbp - 0x680]	       764	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_40
0x40020c8	          0x4889c7	                            mov rdi, rax	       764	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_40
0x40020cb	      0xe800000000	                          call 0x40020d0	       764	show-branch.c	FUNCTION_56	IF_7	FOR_1	CALL_40
0x40020d0	    0x838508f9ffff	              add dword [rbp - 0x6f8], 1	       739	show-branch.c	FUNCTION_56	IF_7	FOR_1
0x40020d7	    0x8b0500000000	            mov eax, dword [0x040020dd] 	       739	show-branch.c	FUNCTION_56	IF_7	FOR_1
0x40020dd	    0x398508f9ffff	           cmp dword [rbp - 0x6f8], eax 	       739	show-branch.c	FUNCTION_56	IF_7	FOR_1
0x40020e3	     0xf8c7efeffff	                            jl 0x4001f67	       739	show-branch.c	FUNCTION_56	IF_7	FOR_1
0x40020e9	    0x488b8558f9ff	            mov rax, qword [rbp - 0x6a8]	       766	show-branch.c	FUNCTION_56	IF_7	CALL_41
0x40020f0	          0x4889c7	                            mov rdi, rax	       766	show-branch.c	FUNCTION_56	IF_7	CALL_41
0x40020f3	      0xe800000000	                          call 0x40020f8	       766	show-branch.c	FUNCTION_56	IF_7	CALL_41
0x40020f8	            0xeb51	                           jmp 0x400214b	       766	show-branch.c	FUNCTION_56	IF_7	CALL_41
0x40020fa	    0x488b85c0f8ff	            mov rax, qword [rbp - 0x740]	       770	show-branch.c	FUNCTION_56	ELSE_2	WHILE_1	CALL_42
0x4002101	          0x488b00	                    mov rax, qword [rax]	       770	show-branch.c	FUNCTION_56	ELSE_2	WHILE_1	CALL_42
0x4002104	          0x4889c7	                            mov rdi, rax	       770	show-branch.c	FUNCTION_56	ELSE_2	WHILE_1	CALL_42
0x4002107	      0xe8b2f2ffff	                 call sym.append_one_rev	       770	show-branch.c	FUNCTION_56	ELSE_2	WHILE_1	CALL_42
0x400210c	    0x83adccf8ffff	              sub dword [rbp - 0x734], 1	       771	show-branch.c	FUNCTION_56	ELSE_2	WHILE_1
0x4002113	    0x488385c0f8ff	              add qword [rbp - 0x740], 8	       771	show-branch.c	FUNCTION_56	ELSE_2	WHILE_1
0x400211b	    0x83bdccf8ffff	              cmp dword [rbp - 0x734], 0	       769	show-branch.c	FUNCTION_56	ELSE_2	WHILE_1
0x4002122	            0x7fd6	                            jg 0x40020fa	       769	show-branch.c	FUNCTION_56	ELSE_2	WHILE_1
0x4002124	    0x8b95d4f8ffff	            mov edx, dword [rbp - 0x72c]	       773	show-branch.c	FUNCTION_56	ELSE_2	IF_17
0x400212a	    0x8b85d8f8ffff	            mov eax, dword [rbp - 0x728]	       773	show-branch.c	FUNCTION_56	ELSE_2	IF_17
0x4002130	             0x1d0	                            add eax, edx	       773	show-branch.c	FUNCTION_56	ELSE_2	IF_17
0x4002132	            0x85c0	                           test eax, eax	       773	show-branch.c	FUNCTION_56	ELSE_2	IF_17
0x4002134	            0x7415	                            je 0x400214b	       773	show-branch.c	FUNCTION_56	ELSE_2	IF_17
0x4002136	    0x8b95d8f8ffff	            mov edx, dword [rbp - 0x728]	       774	show-branch.c	FUNCTION_56	ELSE_2	CALL_43
0x400213c	    0x8b85d4f8ffff	            mov eax, dword [rbp - 0x72c]	       774	show-branch.c	FUNCTION_56	ELSE_2	CALL_43
0x4002142	            0x89d6	                            mov esi, edx	       774	show-branch.c	FUNCTION_56	ELSE_2	CALL_43
0x4002144	            0x89c7	                            mov edi, eax	       774	show-branch.c	FUNCTION_56	ELSE_2	CALL_43
0x4002146	      0xe8bbefffff	                     call sym.snarf_refs	       774	show-branch.c	FUNCTION_56	ELSE_2	CALL_43
0x400214b	    0x488d85a0f9ff	                  lea rax, [rbp - 0x660]	       777	show-branch.c	FUNCTION_56	CALL_44
0x4002152	      0xb900000000	                              mov ecx, 0	       777	show-branch.c	FUNCTION_56	CALL_44
0x4002157	          0x4889c2	                            mov rdx, rax	       777	show-branch.c	FUNCTION_56	CALL_44
0x400215a	      0xbe01000000	                              mov esi, 1	       777	show-branch.c	FUNCTION_56	CALL_44
0x400215f	      0xbf00000000	                              mov edi, 0	       777	show-branch.c	FUNCTION_56	CALL_44
0x4002164	      0xe800000000	                          call 0x4002169	       777	show-branch.c	FUNCTION_56	CALL_44
0x4002169	    0x48898588f9ff	            mov qword [rbp - 0x678], rax	       777	show-branch.c	FUNCTION_56	CALL_44
0x4002170	    0x8b85f0f8ffff	            mov eax, dword [rbp - 0x710]	       780	show-branch.c	FUNCTION_56	IF_18
0x4002176	            0x85c0	                           test eax, eax	       780	show-branch.c	FUNCTION_56	IF_18
0x4002178	     0xf84b9000000	                            je 0x4002237	       780	show-branch.c	FUNCTION_56	IF_18
0x400217e	    0x4883bd88f9ff	              cmp qword [rbp - 0x678], 0	       780	show-branch.c	FUNCTION_56	IF_18
0x4002186	     0xf84ab000000	                            je 0x4002237	       780	show-branch.c	FUNCTION_56	IF_18
0x400218c	    0xc78514f9ffff	              mov dword [rbp - 0x6ec], 0	       781	show-branch.c	FUNCTION_56	IF_18
0x4002196	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 0	       782	show-branch.c	FUNCTION_56	IF_18	FOR_2
0x40021a0	            0xeb3d	                           jmp 0x40021df	       782	show-branch.c	FUNCTION_56	IF_18	FOR_2
0x40021a2	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       787	show-branch.c	FUNCTION_56	IF_18	FOR_2	IF_19
0x40021a8	            0x4898	                                    cdqe	       787	show-branch.c	FUNCTION_56	IF_18	FOR_2	IF_19
0x40021aa	    0x488b34c50000	                  mov rsi, qword [rax*8]	       787	show-branch.c	FUNCTION_56	IF_18	FOR_2	IF_19
0x40021b2	    0x488d95a0f9ff	                  lea rdx, [rbp - 0x660]	       786	show-branch.c	FUNCTION_56	IF_18	FOR_2	IF_19	CALL_45
0x40021b9	    0x488b8588f9ff	            mov rax, qword [rbp - 0x678]	       786	show-branch.c	FUNCTION_56	IF_18	FOR_2	IF_19	CALL_45
0x40021c0	      0xb900000000	                              mov ecx, 0	       786	show-branch.c	FUNCTION_56	IF_18	FOR_2	IF_19	CALL_45
0x40021c5	          0x4889c7	                            mov rdi, rax	       786	show-branch.c	FUNCTION_56	IF_18	FOR_2	IF_19	CALL_45
0x40021c8	      0xe8aaefffff	                    call sym.rev_is_head	       786	show-branch.c	FUNCTION_56	IF_18	FOR_2	IF_19	CALL_45
0x40021cd	            0x85c0	                           test eax, eax	       786	show-branch.c	FUNCTION_56	IF_18	FOR_2	IF_19	CALL_45
0x40021cf	            0x7407	                            je 0x40021d8	       786	show-branch.c	FUNCTION_56	IF_18	FOR_2	IF_19	CALL_45
0x40021d1	    0x838514f9ffff	              add dword [rbp - 0x6ec], 1	       789	show-branch.c	FUNCTION_56	IF_18	FOR_2	IF_19
0x40021d8	    0x838508f9ffff	              add dword [rbp - 0x6f8], 1	       782	show-branch.c	FUNCTION_56	IF_18	FOR_2
0x40021df	    0x83bd14f9ffff	              cmp dword [rbp - 0x6ec], 0	       782	show-branch.c	FUNCTION_56	IF_18	FOR_2
0x40021e6	            0x750e	                           jne 0x40021f6	       782	show-branch.c	FUNCTION_56	IF_18	FOR_2
0x40021e8	    0x8b0500000000	            mov eax, dword [0x040021ee] 	       782	show-branch.c	FUNCTION_56	IF_18	FOR_2
0x40021ee	    0x398508f9ffff	           cmp dword [rbp - 0x6f8], eax 	       782	show-branch.c	FUNCTION_56	IF_18	FOR_2
0x40021f4	            0x7cac	                            jl 0x40021a2	       782	show-branch.c	FUNCTION_56	IF_18	FOR_2
0x40021f6	    0x83bd14f9ffff	              cmp dword [rbp - 0x6ec], 0	       791	show-branch.c	FUNCTION_56	IF_18	IF_20
0x40021fd	            0x7538	                           jne 0x4002237	       791	show-branch.c	FUNCTION_56	IF_18	IF_20
0x40021ff	    0x488b8588f9ff	            mov rax, qword [rbp - 0x678]	       792	show-branch.c	FUNCTION_56	IF_18	IF_20
0x4002206	    0x48898568f9ff	            mov qword [rbp - 0x698], rax	       792	show-branch.c	FUNCTION_56	IF_18	IF_20
0x400220d	    0x488b8568f9ff	            mov rax, qword [rbp - 0x698]	       793	show-branch.c	FUNCTION_56	IF_18	IF_20	CALL_46
0x4002214	    0x488d9568f9ff	                  lea rdx, [rbp - 0x698]	       793	show-branch.c	FUNCTION_56	IF_18	IF_20	CALL_46
0x400221b	      0xbe00000000	                              mov esi, 0	       793	show-branch.c	FUNCTION_56	IF_18	IF_20	CALL_46
0x4002220	          0x4889c7	                            mov rdi, rax	       793	show-branch.c	FUNCTION_56	IF_18	IF_20	CALL_46
0x4002223	      0xe823deffff	                    call sym.skip_prefix	       793	show-branch.c	FUNCTION_56	IF_18	IF_20	CALL_46
0x4002228	    0x488b8568f9ff	            mov rax, qword [rbp - 0x698]	       794	show-branch.c	FUNCTION_56	IF_18	IF_20	CALL_47
0x400222f	          0x4889c7	                            mov rdi, rax	       794	show-branch.c	FUNCTION_56	IF_18	IF_20	CALL_47
0x4002232	      0xe887f1ffff	                 call sym.append_one_rev	       794	show-branch.c	FUNCTION_56	IF_18	IF_20	CALL_47
0x4002237	    0x8b0500000000	            mov eax, dword [0x0400223d] 	       798	show-branch.c	FUNCTION_56	IF_21
0x400223d	            0x85c0	                           test eax, eax	       798	show-branch.c	FUNCTION_56	IF_21
0x400223f	            0x7528	                           jne 0x4002269	       798	show-branch.c	FUNCTION_56	IF_21
0x4002241	    0x488b05000000	            mov rax, qword [0x04002248] 	       799	show-branch.c	FUNCTION_56	IF_21	CALL_48
0x4002248	          0x4889c1	                            mov rcx, rax	       799	show-branch.c	FUNCTION_56	IF_21	CALL_48
0x400224b	      0xba15000000	                           mov edx, 0x15	       799	show-branch.c	FUNCTION_56	IF_21	CALL_48
0x4002250	      0xbe01000000	                              mov esi, 1	       799	show-branch.c	FUNCTION_56	IF_21	CALL_48
0x4002255	      0xbf00000000	                              mov edi, 0	       799	show-branch.c	FUNCTION_56	IF_21	CALL_48
0x400225a	      0xe800000000	                          call 0x400225f	       799	show-branch.c	FUNCTION_56	IF_21	CALL_48
0x400225f	      0xbf00000000	                              mov edi, 0	       800	show-branch.c	FUNCTION_56	IF_21	CALL_49
0x4002264	      0xe800000000	                          call 0x4002269	       800	show-branch.c	FUNCTION_56	IF_21	CALL_49
0x4002269	    0xc78504f9ffff	              mov dword [rbp - 0x6fc], 0	       803	show-branch.c	FUNCTION_56	FOR_3
0x4002273	      0xe9ac010000	                           jmp 0x4002424	       803	show-branch.c	FUNCTION_56	FOR_3
0x4002278	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	       805	show-branch.c	FUNCTION_56	FOR_3
0x400227e	          0x83c002	                              add eax, 2	       805	show-branch.c	FUNCTION_56	FOR_3
0x4002281	      0xba01000000	                              mov edx, 1	       805	show-branch.c	FUNCTION_56	FOR_3
0x4002286	            0x89c1	                            mov ecx, eax	       805	show-branch.c	FUNCTION_56	FOR_3
0x4002288	            0xd3e2	                             shl edx, cl	       805	show-branch.c	FUNCTION_56	FOR_3
0x400228a	            0x89d0	                            mov eax, edx	       805	show-branch.c	FUNCTION_56	FOR_3
0x400228c	    0x898524f9ffff	            mov dword [rbp - 0x6dc], eax	       805	show-branch.c	FUNCTION_56	FOR_3
0x4002292	    0x83bd04f9ffff	          cmp dword [rbp - 0x6fc], 0x18 	       807	show-branch.c	FUNCTION_56	FOR_3	IF_22
0x4002299	            0x7e26	                           jle 0x40022c1	       807	show-branch.c	FUNCTION_56	FOR_3	IF_22
0x400229b	      0xba19000000	                           mov edx, 0x19	       808	show-branch.c	FUNCTION_56	FOR_3	IF_22	CALL_51
0x40022a0	      0xbe00000000	                              mov esi, 0	       808	show-branch.c	FUNCTION_56	FOR_3	IF_22	CALL_51
0x40022a5	      0xbf00000000	                              mov edi, 0	       808	show-branch.c	FUNCTION_56	FOR_3	IF_22	CALL_51
0x40022aa	      0xe831dfffff	                              call sym.Q	       808	show-branch.c	FUNCTION_56	FOR_3	IF_22	CALL_51
0x40022af	      0xbe19000000	                           mov esi, 0x19	       808	show-branch.c	FUNCTION_56	FOR_3	IF_22	CALL_51
0x40022b4	          0x4889c7	                            mov rdi, rax	       808	show-branch.c	FUNCTION_56	FOR_3	IF_22	CALL_51
0x40022b7	      0xb800000000	                              mov eax, 0	       808	show-branch.c	FUNCTION_56	FOR_3	IF_22	CALL_51
0x40022bc	      0xe800000000	                          call 0x40022c1	       808	show-branch.c	FUNCTION_56	FOR_3	IF_22	CALL_51
0x40022c1	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	       811	show-branch.c	FUNCTION_56	FOR_3	IF_23	CALL_52
0x40022c7	            0x4898	                                    cdqe	       811	show-branch.c	FUNCTION_56	FOR_3	IF_23	CALL_52
0x40022c9	    0x488b04c50000	                  mov rax, qword [rax*8]	       811	show-branch.c	FUNCTION_56	FOR_3	IF_23	CALL_52
0x40022d1	    0x488d95c0f9ff	                  lea rdx, [rbp - 0x640]	       811	show-branch.c	FUNCTION_56	FOR_3	IF_23	CALL_52
0x40022d8	          0x4889d6	                            mov rsi, rdx	       811	show-branch.c	FUNCTION_56	FOR_3	IF_23	CALL_52
0x40022db	          0x4889c7	                            mov rdi, rax	       811	show-branch.c	FUNCTION_56	FOR_3	IF_23	CALL_52
0x40022de	      0xe800000000	                          call 0x40022e3	       811	show-branch.c	FUNCTION_56	FOR_3	IF_23	CALL_52
0x40022e3	            0x85c0	                           test eax, eax	       811	show-branch.c	FUNCTION_56	FOR_3	IF_23	CALL_52
0x40022e5	            0x742a	                            je 0x4002311	       811	show-branch.c	FUNCTION_56	FOR_3	IF_23	CALL_52
0x40022e7	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	       812	show-branch.c	FUNCTION_56	FOR_3	CALL_54
0x40022ed	            0x4898	                                    cdqe	       812	show-branch.c	FUNCTION_56	FOR_3	CALL_54
0x40022ef	    0x488b1cc50000	                  mov rbx, qword [rax*8]	       812	show-branch.c	FUNCTION_56	FOR_3	CALL_54
0x40022f7	      0xbf00000000	                              mov edi, 0	       812	show-branch.c	FUNCTION_56	FOR_3	CALL_54
0x40022fc	      0xe8b3deffff	                               call sym.	       812	show-branch.c	FUNCTION_56	FOR_3	CALL_54
0x4002301	          0x4889de	                            mov rsi, rbx	       812	show-branch.c	FUNCTION_56	FOR_3	CALL_54
0x4002304	          0x4889c7	                            mov rdi, rax	       812	show-branch.c	FUNCTION_56	FOR_3	CALL_54
0x4002307	      0xb800000000	                              mov eax, 0	       812	show-branch.c	FUNCTION_56	FOR_3	CALL_54
0x400230c	      0xe800000000	                          call 0x4002311	       812	show-branch.c	FUNCTION_56	FOR_3	CALL_54
0x4002311	    0x488d85c0f9ff	                  lea rax, [rbp - 0x640]	       813	show-branch.c	FUNCTION_56	FOR_3	CALL_55
0x4002318	          0x4889c7	                            mov rdi, rax	       813	show-branch.c	FUNCTION_56	FOR_3	CALL_55
0x400231b	      0xe800000000	                          call 0x4002320	       813	show-branch.c	FUNCTION_56	FOR_3	CALL_55
0x4002320	    0x48898590f9ff	            mov qword [rbp - 0x670], rax	       813	show-branch.c	FUNCTION_56	FOR_3	CALL_55
0x4002327	    0x4883bd90f9ff	              cmp qword [rbp - 0x670], 0	       814	show-branch.c	FUNCTION_56	FOR_3	IF_24
0x400232f	            0x753f	                           jne 0x4002370	       814	show-branch.c	FUNCTION_56	FOR_3	IF_24
0x4002331	    0x488d85c0f9ff	                  lea rax, [rbp - 0x640]	       815	show-branch.c	FUNCTION_56	FOR_3	IF_24	CALL_57
0x4002338	          0x4889c7	                            mov rdi, rax	       815	show-branch.c	FUNCTION_56	FOR_3	IF_24	CALL_57
0x400233b	      0xe800000000	                          call 0x4002340	       815	show-branch.c	FUNCTION_56	FOR_3	IF_24	CALL_57
0x4002340	          0x4989c4	                            mov r12, rax	       815	show-branch.c	FUNCTION_56	FOR_3	IF_24	CALL_57
0x4002343	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	       815	show-branch.c	FUNCTION_56	FOR_3	IF_24	CALL_57
0x4002349	            0x4898	                                    cdqe	       815	show-branch.c	FUNCTION_56	FOR_3	IF_24	CALL_57
0x400234b	    0x488b1cc50000	                  mov rbx, qword [rax*8]	       815	show-branch.c	FUNCTION_56	FOR_3	IF_24	CALL_57
0x4002353	      0xbf00000000	                              mov edi, 0	       815	show-branch.c	FUNCTION_56	FOR_3	IF_24	CALL_57
0x4002358	      0xe857deffff	                               call sym.	       815	show-branch.c	FUNCTION_56	FOR_3	IF_24	CALL_57
0x400235d	          0x4c89e2	                            mov rdx, r12	       815	show-branch.c	FUNCTION_56	FOR_3	IF_24	CALL_57
0x4002360	          0x4889de	                            mov rsi, rbx	       815	show-branch.c	FUNCTION_56	FOR_3	IF_24	CALL_57
0x4002363	          0x4889c7	                            mov rdi, rax	       815	show-branch.c	FUNCTION_56	FOR_3	IF_24	CALL_57
0x4002366	      0xb800000000	                              mov eax, 0	       815	show-branch.c	FUNCTION_56	FOR_3	IF_24	CALL_57
0x400236b	      0xe800000000	                          call 0x4002370	       815	show-branch.c	FUNCTION_56	FOR_3	IF_24	CALL_57
0x4002370	    0x488b8590f9ff	            mov rax, qword [rbp - 0x670]	       817	show-branch.c	FUNCTION_56	FOR_3	CALL_59
0x4002377	          0x4889c7	                            mov rdi, rax	       817	show-branch.c	FUNCTION_56	FOR_3	CALL_59
0x400237a	      0xe8dddeffff	                   call sym.parse_commit	       817	show-branch.c	FUNCTION_56	FOR_3	CALL_59
0x400237f	    0x488d9548f9ff	                  lea rdx, [rbp - 0x6b8]	       818	show-branch.c	FUNCTION_56	FOR_3	CALL_60
0x4002386	    0x488b8590f9ff	            mov rax, qword [rbp - 0x670]	       818	show-branch.c	FUNCTION_56	FOR_3	CALL_60
0x400238d	          0x4889d6	                            mov rsi, rdx	       818	show-branch.c	FUNCTION_56	FOR_3	CALL_60
0x4002390	          0x4889c7	                            mov rdi, rax	       818	show-branch.c	FUNCTION_56	FOR_3	CALL_60
0x4002393	      0xe898e3ffff	                      call sym.mark_seen	       818	show-branch.c	FUNCTION_56	FOR_3	CALL_60
0x4002398	    0x488b8590f9ff	            mov rax, qword [rbp - 0x670]	       824	show-branch.c	FUNCTION_56	FOR_3
0x400239f	            0x8b00	                    mov eax, dword [rax]	       824	show-branch.c	FUNCTION_56	FOR_3
0x40023a1	          0xc1e804	                              shr eax, 4	       824	show-branch.c	FUNCTION_56	FOR_3
0x40023a4	      0x25ffffff07	                      and eax, 0x7ffffff	       824	show-branch.c	FUNCTION_56	FOR_3
0x40023a9	     0xb8524f9ffff	             or eax, dword [rbp - 0x6dc]	       824	show-branch.c	FUNCTION_56	FOR_3
0x40023af	      0x25ffffff07	                      and eax, 0x7ffffff	       824	show-branch.c	FUNCTION_56	FOR_3
0x40023b4	            0x89c2	                            mov edx, eax	       824	show-branch.c	FUNCTION_56	FOR_3
0x40023b6	    0x488b8590f9ff	            mov rax, qword [rbp - 0x670]	       824	show-branch.c	FUNCTION_56	FOR_3
0x40023bd	    0x81e2ffffff07	                      and edx, 0x7ffffff	       824	show-branch.c	FUNCTION_56	FOR_3
0x40023c3	            0x89d1	                            mov ecx, edx	       824	show-branch.c	FUNCTION_56	FOR_3
0x40023c5	          0xc1e104	                              shl ecx, 4	       824	show-branch.c	FUNCTION_56	FOR_3
0x40023c8	            0x8b10	                    mov edx, dword [rax]	       824	show-branch.c	FUNCTION_56	FOR_3
0x40023ca	    0x81e20f000080	                     and edx, 0x8000000f	       824	show-branch.c	FUNCTION_56	FOR_3
0x40023d0	             0x9ca	                             or edx, ecx	       824	show-branch.c	FUNCTION_56	FOR_3
0x40023d2	            0x8910	                    mov dword [rax], edx	       824	show-branch.c	FUNCTION_56	FOR_3
0x40023d4	    0x488b8590f9ff	            mov rax, qword [rbp - 0x670]	       825	show-branch.c	FUNCTION_56	FOR_3	IF_25
0x40023db	            0x8b00	                    mov eax, dword [rax]	       825	show-branch.c	FUNCTION_56	FOR_3	IF_25
0x40023dd	          0xc1e804	                              shr eax, 4	       825	show-branch.c	FUNCTION_56	FOR_3	IF_25
0x40023e0	      0x25ffffff07	                      and eax, 0x7ffffff	       825	show-branch.c	FUNCTION_56	FOR_3	IF_25
0x40023e5	    0x3b8524f9ffff	            cmp eax, dword [rbp - 0x6dc]	       825	show-branch.c	FUNCTION_56	FOR_3	IF_25
0x40023eb	            0x7519	                           jne 0x4002406	       825	show-branch.c	FUNCTION_56	FOR_3	IF_25
0x40023ed	    0x488d9540f9ff	                  lea rdx, [rbp - 0x6c0]	       826	show-branch.c	FUNCTION_56	FOR_3	CALL_61
0x40023f4	    0x488b8590f9ff	            mov rax, qword [rbp - 0x670]	       826	show-branch.c	FUNCTION_56	FOR_3	CALL_61
0x40023fb	          0x4889d6	                            mov rsi, rdx	       826	show-branch.c	FUNCTION_56	FOR_3	CALL_61
0x40023fe	          0x4889c7	                            mov rdi, rax	       826	show-branch.c	FUNCTION_56	FOR_3	CALL_61
0x4002401	      0xe800000000	                          call 0x4002406	       826	show-branch.c	FUNCTION_56	FOR_3	CALL_61
0x4002406	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	       827	show-branch.c	FUNCTION_56	FOR_3
0x400240c	            0x4898	                                    cdqe	       827	show-branch.c	FUNCTION_56	FOR_3
0x400240e	    0x488b9590f9ff	            mov rdx, qword [rbp - 0x670]	       827	show-branch.c	FUNCTION_56	FOR_3
0x4002415	    0x488994c530fa	    mov qword [rbp + rax*8 - 0x5d0], rdx	       827	show-branch.c	FUNCTION_56	FOR_3
0x400241d	    0x838504f9ffff	              add dword [rbp - 0x6fc], 1	       803	show-branch.c	FUNCTION_56	FOR_3
0x4002424	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	       803	show-branch.c	FUNCTION_56	FOR_3
0x400242a	            0x4898	                                    cdqe	       803	show-branch.c	FUNCTION_56	FOR_3
0x400242c	    0x488b04c50000	                  mov rax, qword [rax*8]	       803	show-branch.c	FUNCTION_56	FOR_3
0x4002434	          0x4885c0	                           test rax, rax	       803	show-branch.c	FUNCTION_56	FOR_3
0x4002437	     0xf853bfeffff	                           jne 0x4002278	       803	show-branch.c	FUNCTION_56	FOR_3
0x400243d	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 0	       829	show-branch.c	FUNCTION_56	FOR_4
0x4002447	            0xeb32	                           jmp 0x400247b	       829	show-branch.c	FUNCTION_56	FOR_4
0x4002449	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       830	show-branch.c	FUNCTION_56	FOR_4
0x400244f	            0x4898	                                    cdqe	       830	show-branch.c	FUNCTION_56	FOR_4
0x4002451	    0x488b84c530fa	    mov rax, qword [rbp + rax*8 - 0x5d0]	       830	show-branch.c	FUNCTION_56	FOR_4
0x4002459	            0x8b00	                    mov eax, dword [rax]	       830	show-branch.c	FUNCTION_56	FOR_4
0x400245b	          0xc1e804	                              shr eax, 4	       830	show-branch.c	FUNCTION_56	FOR_4
0x400245e	      0x25ffffff07	                      and eax, 0x7ffffff	       830	show-branch.c	FUNCTION_56	FOR_4
0x4002463	            0x89c2	                            mov edx, eax	       830	show-branch.c	FUNCTION_56	FOR_4
0x4002465	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       830	show-branch.c	FUNCTION_56	FOR_4
0x400246b	            0x4898	                                    cdqe	       830	show-branch.c	FUNCTION_56	FOR_4
0x400246d	    0x899485c0f9ff	    mov dword [rbp + rax*4 - 0x640], edx	       830	show-branch.c	FUNCTION_56	FOR_4
0x4002474	    0x838508f9ffff	              add dword [rbp - 0x6f8], 1	       829	show-branch.c	FUNCTION_56	FOR_4
0x400247b	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       829	show-branch.c	FUNCTION_56	FOR_4
0x4002481	    0x3b8504f9ffff	            cmp eax, dword [rbp - 0x6fc]	       829	show-branch.c	FUNCTION_56	FOR_4
0x4002487	            0x7cc0	                            jl 0x4002449	       829	show-branch.c	FUNCTION_56	FOR_4
0x4002489	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       832	show-branch.c	FUNCTION_56	IF_26
0x400248f	            0x85c0	                           test eax, eax	       832	show-branch.c	FUNCTION_56	IF_26
0x4002491	            0x7822	                            js 0x40024b5	       832	show-branch.c	FUNCTION_56	IF_26
0x4002493	    0x8b8dd0f8ffff	            mov ecx, dword [rbp - 0x730]	       833	show-branch.c	FUNCTION_56	CALL_62
0x4002499	    0x8b9504f9ffff	            mov edx, dword [rbp - 0x6fc]	       833	show-branch.c	FUNCTION_56	CALL_62
0x400249f	    0x488db548f9ff	                  lea rsi, [rbp - 0x6b8]	       833	show-branch.c	FUNCTION_56	CALL_62
0x40024a6	    0x488d8540f9ff	                  lea rax, [rbp - 0x6c0]	       833	show-branch.c	FUNCTION_56	CALL_62
0x40024ad	          0x4889c7	                            mov rdi, rax	       833	show-branch.c	FUNCTION_56	CALL_62
0x40024b0	      0xe8bbe2ffff	                      call sym.join_revs	       833	show-branch.c	FUNCTION_56	CALL_62
0x40024b5	    0x488d8548f9ff	                  lea rax, [rbp - 0x6b8]	       835	show-branch.c	FUNCTION_56	CALL_63
0x40024bc	          0x4889c7	                            mov rdi, rax	       835	show-branch.c	FUNCTION_56	CALL_63
0x40024bf	      0xe800000000	                          call 0x40024c4	       835	show-branch.c	FUNCTION_56	CALL_63
0x40024c4	    0x8b85e0f8ffff	            mov eax, dword [rbp - 0x720]	       837	show-branch.c	FUNCTION_56	IF_27
0x40024ca	            0x85c0	                           test eax, eax	       837	show-branch.c	FUNCTION_56	IF_27
0x40024cc	            0x741c	                            je 0x40024ea	       837	show-branch.c	FUNCTION_56	IF_27
0x40024ce	    0x488b8548f9ff	            mov rax, qword [rbp - 0x6b8]	       838	show-branch.c	FUNCTION_56	CALL_64
0x40024d5	    0x8b9504f9ffff	            mov edx, dword [rbp - 0x6fc]	       838	show-branch.c	FUNCTION_56	CALL_64
0x40024db	            0x89d6	                            mov esi, edx	       838	show-branch.c	FUNCTION_56	CALL_64
0x40024dd	          0x4889c7	                            mov rdi, rax	       838	show-branch.c	FUNCTION_56	CALL_64
0x40024e0	      0xe83fedffff	                call sym.show_merge_base	       838	show-branch.c	FUNCTION_56	CALL_64
0x40024e5	      0xe9b4040000	                           jmp 0x400299e	       838	show-branch.c	FUNCTION_56	CALL_64
0x40024ea	    0x8b85e4f8ffff	            mov eax, dword [rbp - 0x71c]	       840	show-branch.c	FUNCTION_56	IF_28
0x40024f0	            0x85c0	                           test eax, eax	       840	show-branch.c	FUNCTION_56	IF_28
0x40024f2	            0x7429	                            je 0x400251d	       840	show-branch.c	FUNCTION_56	IF_28
0x40024f4	    0x488d95c0f9ff	                  lea rdx, [rbp - 0x640]	       841	show-branch.c	FUNCTION_56	CALL_65
0x40024fb	    0x8bb504f9ffff	            mov esi, dword [rbp - 0x6fc]	       841	show-branch.c	FUNCTION_56	CALL_65
0x4002501	    0x488d8530faff	                  lea rax, [rbp - 0x5d0]	       841	show-branch.c	FUNCTION_56	CALL_65
0x4002508	          0x4889d1	                            mov rcx, rdx	       841	show-branch.c	FUNCTION_56	CALL_65
0x400250b	      0xba00000000	                              mov edx, 0	       841	show-branch.c	FUNCTION_56	CALL_65
0x4002510	          0x4889c7	                            mov rdi, rax	       841	show-branch.c	FUNCTION_56	CALL_65
0x4002513	      0xe8dfedffff	               call sym.show_independent	       841	show-branch.c	FUNCTION_56	CALL_65
0x4002518	      0xe981040000	                           jmp 0x400299e	       841	show-branch.c	FUNCTION_56	CALL_65
0x400251d	    0x83bd04f9ffff	              cmp dword [rbp - 0x6fc], 1	       844	show-branch.c	FUNCTION_56	IF_29
0x4002524	            0x7f0e	                            jg 0x4002534	       844	show-branch.c	FUNCTION_56	IF_29
0x4002526	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       844	show-branch.c	FUNCTION_56	IF_29
0x400252c	            0x85c0	                           test eax, eax	       844	show-branch.c	FUNCTION_56	IF_29
0x400252e	     0xf89c7010000	                           jns 0x40026fb	       844	show-branch.c	FUNCTION_56	IF_29
0x4002534	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 0	       845	show-branch.c	FUNCTION_56	IF_29	FOR_5
0x400253e	      0xe967010000	                           jmp 0x40026aa	       845	show-branch.c	FUNCTION_56	IF_29	FOR_5
0x4002543	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       850	show-branch.c	FUNCTION_56	IF_29	FOR_5
0x4002549	            0x4898	                                    cdqe	       850	show-branch.c	FUNCTION_56	IF_29	FOR_5
0x400254b	    0x488b84c530fa	    mov rax, qword [rbp + rax*8 - 0x5d0]	       850	show-branch.c	FUNCTION_56	IF_29	FOR_5
0x4002553	        0x488d4804	                      lea rcx, [rax + 4]	       850	show-branch.c	FUNCTION_56	IF_29	FOR_5
0x4002557	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       848	show-branch.c	FUNCTION_56	IF_29	FOR_5
0x400255d	            0x4898	                                    cdqe	       848	show-branch.c	FUNCTION_56	IF_29	FOR_5
0x400255f	    0x488b34c50000	                  mov rsi, qword [rax*8]	       848	show-branch.c	FUNCTION_56	IF_29	FOR_5
0x4002567	    0x488d95a0f9ff	                  lea rdx, [rbp - 0x660]	       847	show-branch.c	FUNCTION_56	IF_29	FOR_5	CALL_66
0x400256e	    0x488b8588f9ff	            mov rax, qword [rbp - 0x678]	       847	show-branch.c	FUNCTION_56	IF_29	FOR_5	CALL_66
0x4002575	          0x4889c7	                            mov rdi, rax	       847	show-branch.c	FUNCTION_56	IF_29	FOR_5	CALL_66
0x4002578	      0xe8faebffff	                    call sym.rev_is_head	       847	show-branch.c	FUNCTION_56	IF_29	FOR_5	CALL_66
0x400257d	    0x898528f9ffff	            mov dword [rbp - 0x6d8], eax	       847	show-branch.c	FUNCTION_56	IF_29	FOR_5	CALL_66
0x4002583	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       851	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30
0x4002589	            0x85c0	                           test eax, eax	       851	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30
0x400258b	            0x793e	                           jns 0x40025cb	       851	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30
0x400258d	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       852	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30	CALL_67
0x4002593	            0x4898	                                    cdqe	       852	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30	CALL_67
0x4002595	    0x488b04c50000	                  mov rax, qword [rax*8]	       852	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30	CALL_67
0x400259d	    0x83bd28f9ffff	              cmp dword [rbp - 0x6d8], 0	       852	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30	CALL_67
0x40025a4	            0x7407	                            je 0x40025ad	       852	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30	CALL_67
0x40025a6	      0xb92a000000	                           mov ecx, 0x2a	       852	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30	CALL_67
0x40025ab	            0xeb05	                           jmp 0x40025b2	       852	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30	CALL_67
0x40025ad	      0xb920000000	                           mov ecx, 0x20	       852	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30	CALL_67
0x40025b2	          0x4889c2	                            mov rdx, rax	       852	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30	CALL_67
0x40025b5	            0x89ce	                            mov esi, ecx	       852	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30	CALL_67
0x40025b7	      0xbf00000000	                              mov edi, 0	       852	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30	CALL_67
0x40025bc	      0xb800000000	                              mov eax, 0	       852	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30	CALL_67
0x40025c1	      0xe800000000	                          call 0x40025c6	       852	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30	CALL_67
0x40025c6	      0xe982000000	                           jmp 0x400264d	       852	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_30	CALL_67
0x40025cb	    0xc78518f9ffff	              mov dword [rbp - 0x6e8], 0	       855	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	FOR_6
0x40025d5	            0xeb11	                           jmp 0x40025e8	       855	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	FOR_6
0x40025d7	      0xbf20000000	                           mov edi, 0x20	       856	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_68
0x40025dc	      0xe800000000	                          call 0x40025e1	       856	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_68
0x40025e1	    0x838518f9ffff	              add dword [rbp - 0x6e8], 1	       855	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	FOR_6
0x40025e8	    0x8b8518f9ffff	            mov eax, dword [rbp - 0x6e8]	       855	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	FOR_6
0x40025ee	    0x3b8508f9ffff	            cmp eax, dword [rbp - 0x6f8]	       855	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	FOR_6
0x40025f4	            0x7ce1	                            jl 0x40025d7	       855	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	FOR_6
0x40025f6	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x40025fc	            0x4898	                                    cdqe	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x40025fe	    0x488b1cc50000	                  mov rbx, qword [rax*8]	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x4002606	      0xe8b2dcffff	           call sym.get_color_reset_code	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x400260b	          0x4989c5	                            mov r13, rax	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x400260e	    0x83bd28f9ffff	              cmp dword [rbp - 0x6d8], 0	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x4002615	            0x7408	                            je 0x400261f	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x4002617	    0x41bc2a000000	                          mov r12d, 0x2a	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x400261d	            0xeb06	                           jmp 0x4002625	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x400261f	    0x41bc21000000	                          mov r12d, 0x21	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x4002625	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x400262b	            0x89c7	                            mov edi, eax	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x400262d	      0xe849dcffff	                 call sym.get_color_code	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x4002632	          0x4989d8	                             mov r8, rbx	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x4002635	          0x4c89e9	                            mov rcx, r13	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x4002638	          0x4489e2	                           mov edx, r12d	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x400263b	          0x4889c6	                            mov rsi, rax	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x400263e	      0xbf00000000	                              mov edi, 0	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x4002643	      0xb800000000	                              mov eax, 0	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x4002648	      0xe800000000	                          call 0x400264d	       857	show-branch.c	FUNCTION_56	IF_29	FOR_5	ELSE_3	CALL_69
0x400264d	    0x8b0500000000	            mov eax, dword [0x04002653] 	       863	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_31
0x4002653	            0x85c0	                           test eax, eax	       863	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_31
0x4002655	            0x751f	                           jne 0x4002676	       863	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_31
0x4002657	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       865	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_31	CALL_72
0x400265d	            0x4898	                                    cdqe	       865	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_31	CALL_72
0x400265f	    0x488b84c530fa	    mov rax, qword [rbp + rax*8 - 0x5d0]	       865	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_31	CALL_72
0x4002667	      0xbe01000000	                              mov esi, 1	       865	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_31	CALL_72
0x400266c	          0x4889c7	                            mov rdi, rax	       865	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_31	CALL_72
0x400266f	      0xe869e3ffff	                call sym.show_one_commit	       865	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_31	CALL_72
0x4002674	            0xeb18	                           jmp 0x400268e	       865	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_31	CALL_72
0x4002676	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       868	show-branch.c	FUNCTION_56	IF_29	FOR_5	CALL_73
0x400267c	            0x4898	                                    cdqe	       868	show-branch.c	FUNCTION_56	IF_29	FOR_5	CALL_73
0x400267e	    0x488b84c500fb	    mov rax, qword [rbp + rax*8 - 0x500]	       868	show-branch.c	FUNCTION_56	IF_29	FOR_5	CALL_73
0x4002686	          0x4889c7	                            mov rdi, rax	       868	show-branch.c	FUNCTION_56	IF_29	FOR_5	CALL_73
0x4002689	      0xe800000000	                          call 0x400268e	       868	show-branch.c	FUNCTION_56	IF_29	FOR_5	CALL_73
0x400268e	    0x83bd28f9ffff	              cmp dword [rbp - 0x6d8], 0	       870	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_32
0x4002695	            0x740c	                            je 0x40026a3	       870	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_32
0x4002697	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       871	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_32
0x400269d	    0x898510f9ffff	            mov dword [rbp - 0x6f0], eax	       871	show-branch.c	FUNCTION_56	IF_29	FOR_5	IF_32
0x40026a3	    0x838508f9ffff	              add dword [rbp - 0x6f8], 1	       845	show-branch.c	FUNCTION_56	IF_29	FOR_5
0x40026aa	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       845	show-branch.c	FUNCTION_56	IF_29	FOR_5
0x40026b0	    0x3b8504f9ffff	            cmp eax, dword [rbp - 0x6fc]	       845	show-branch.c	FUNCTION_56	IF_29	FOR_5
0x40026b6	     0xf8c87feffff	                            jl 0x4002543	       845	show-branch.c	FUNCTION_56	IF_29	FOR_5
0x40026bc	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       873	show-branch.c	FUNCTION_56	IF_29	IF_33
0x40026c2	            0x85c0	                           test eax, eax	       873	show-branch.c	FUNCTION_56	IF_29	IF_33
0x40026c4	            0x7835	                            js 0x40026fb	       873	show-branch.c	FUNCTION_56	IF_29	IF_33
0x40026c6	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 0	       874	show-branch.c	FUNCTION_56	IF_29	IF_33	FOR_7
0x40026d0	            0xeb11	                           jmp 0x40026e3	       874	show-branch.c	FUNCTION_56	IF_29	IF_33	FOR_7
0x40026d2	      0xbf2d000000	                           mov edi, 0x2d	       875	show-branch.c	FUNCTION_56	IF_29	IF_33	CALL_74
0x40026d7	      0xe800000000	                          call 0x40026dc	       875	show-branch.c	FUNCTION_56	IF_29	IF_33	CALL_74
0x40026dc	    0x838508f9ffff	              add dword [rbp - 0x6f8], 1	       874	show-branch.c	FUNCTION_56	IF_29	IF_33	FOR_7
0x40026e3	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       874	show-branch.c	FUNCTION_56	IF_29	IF_33	FOR_7
0x40026e9	    0x3b8504f9ffff	            cmp eax, dword [rbp - 0x6fc]	       874	show-branch.c	FUNCTION_56	IF_29	IF_33	FOR_7
0x40026ef	            0x7ce1	                            jl 0x40026d2	       874	show-branch.c	FUNCTION_56	IF_29	IF_33	FOR_7
0x40026f1	      0xbf0a000000	                            mov edi, 0xa	       876	show-branch.c	FUNCTION_56	IF_29	IF_33	CALL_75
0x40026f6	      0xe800000000	                          call 0x40026fb	       876	show-branch.c	FUNCTION_56	IF_29	IF_33	CALL_75
0x40026fb	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       879	show-branch.c	FUNCTION_56	IF_34
0x4002701	            0x85c0	                           test eax, eax	       879	show-branch.c	FUNCTION_56	IF_34
0x4002703	            0x790a	                           jns 0x400270f	       879	show-branch.c	FUNCTION_56	IF_34
0x4002705	      0xbf00000000	                              mov edi, 0	       880	show-branch.c	FUNCTION_56	CALL_76
0x400270a	      0xe800000000	                          call 0x400270f	       880	show-branch.c	FUNCTION_56	CALL_76
0x400270f	    0x8b95dcf8ffff	            mov edx, dword [rbp - 0x724]	       883	show-branch.c	FUNCTION_56	CALL_77
0x4002715	    0x488d8548f9ff	                  lea rax, [rbp - 0x6b8]	       883	show-branch.c	FUNCTION_56	CALL_77
0x400271c	            0x89d6	                            mov esi, edx	       883	show-branch.c	FUNCTION_56	CALL_77
0x400271e	          0x4889c7	                            mov rdi, rax	       883	show-branch.c	FUNCTION_56	CALL_77
0x4002721	      0xe800000000	                          call 0x4002726	       883	show-branch.c	FUNCTION_56	CALL_77
0x4002726	    0x8b85ecf8ffff	            mov eax, dword [rbp - 0x714]	       886	show-branch.c	FUNCTION_56	IF_35
0x400272c	            0x85c0	                           test eax, eax	       886	show-branch.c	FUNCTION_56	IF_35
0x400272e	            0x752d	                           jne 0x400275d	       886	show-branch.c	FUNCTION_56	IF_35
0x4002730	    0x8b85e8f8ffff	            mov eax, dword [rbp - 0x718]	       886	show-branch.c	FUNCTION_56	IF_35
0x4002736	            0x85c0	                           test eax, eax	       886	show-branch.c	FUNCTION_56	IF_35
0x4002738	            0x7523	                           jne 0x400275d	       886	show-branch.c	FUNCTION_56	IF_35
0x400273a	    0x488b8548f9ff	            mov rax, qword [rbp - 0x6b8]	       887	show-branch.c	FUNCTION_56	CALL_78
0x4002741	    0x8b9504f9ffff	            mov edx, dword [rbp - 0x6fc]	       887	show-branch.c	FUNCTION_56	CALL_78
0x4002747	    0x488db530faff	                  lea rsi, [rbp - 0x5d0]	       887	show-branch.c	FUNCTION_56	CALL_78
0x400274e	            0x89d1	                            mov ecx, edx	       887	show-branch.c	FUNCTION_56	CALL_78
0x4002750	      0xba00000000	                              mov edx, 0	       887	show-branch.c	FUNCTION_56	CALL_78
0x4002755	          0x4889c7	                            mov rdi, rax	       887	show-branch.c	FUNCTION_56	CALL_78
0x4002758	      0xe81cddffff	                   call sym.name_commits	       887	show-branch.c	FUNCTION_56	CALL_78
0x400275d	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	       889	show-branch.c	FUNCTION_56
0x4002763	          0x83c002	                              add eax, 2	       889	show-branch.c	FUNCTION_56
0x4002766	      0xba01000000	                              mov edx, 1	       889	show-branch.c	FUNCTION_56
0x400276b	            0x89c1	                            mov ecx, eax	       889	show-branch.c	FUNCTION_56
0x400276d	            0xd3e2	                             shl edx, cl	       889	show-branch.c	FUNCTION_56
0x400276f	            0x89d0	                            mov eax, edx	       889	show-branch.c	FUNCTION_56
0x4002771	          0x83e801	                              sub eax, 1	       889	show-branch.c	FUNCTION_56
0x4002774	    0x89852cf9ffff	            mov dword [rbp - 0x6d4], eax	       889	show-branch.c	FUNCTION_56
0x400277a	    0x8b852cf9ffff	            mov eax, dword [rbp - 0x6d4]	       890	show-branch.c	FUNCTION_56
0x4002780	          0x83e0fc	                     and eax, 0xfffffffc	       890	show-branch.c	FUNCTION_56
0x4002783	    0x898530f9ffff	            mov dword [rbp - 0x6d0], eax	       890	show-branch.c	FUNCTION_56
0x4002789	      0xe9f8010000	                           jmp 0x4002986	       892	show-branch.c	FUNCTION_56	WHILE_2
0x400278e	    0x488d8548f9ff	                  lea rax, [rbp - 0x6b8]	       893	show-branch.c	FUNCTION_56	WHILE_2	CALL_79
0x4002795	          0x4889c7	                            mov rdi, rax	       893	show-branch.c	FUNCTION_56	WHILE_2	CALL_79
0x4002798	      0xe800000000	                          call 0x400279d	       893	show-branch.c	FUNCTION_56	WHILE_2	CALL_79
0x400279d	    0x48898598f9ff	            mov qword [rbp - 0x668], rax	       893	show-branch.c	FUNCTION_56	WHILE_2	CALL_79
0x40027a4	    0x488b8598f9ff	            mov rax, qword [rbp - 0x668]	       894	show-branch.c	FUNCTION_56	WHILE_2
0x40027ab	            0x8b00	                    mov eax, dword [rax]	       894	show-branch.c	FUNCTION_56	WHILE_2
0x40027ad	          0xc1e804	                              shr eax, 4	       894	show-branch.c	FUNCTION_56	WHILE_2
0x40027b0	      0x25ffffff07	                      and eax, 0x7ffffff	       894	show-branch.c	FUNCTION_56	WHILE_2
0x40027b5	    0x898534f9ffff	            mov dword [rbp - 0x6cc], eax	       894	show-branch.c	FUNCTION_56	WHILE_2
0x40027bb	    0x8b8534f9ffff	            mov eax, dword [rbp - 0x6cc]	       895	show-branch.c	FUNCTION_56	WHILE_2
0x40027c1	    0x238530f9ffff	            and eax, dword [rbp - 0x6d0]	       895	show-branch.c	FUNCTION_56	WHILE_2
0x40027c7	    0x3b8530f9ffff	            cmp eax, dword [rbp - 0x6d0]	       895	show-branch.c	FUNCTION_56	WHILE_2
0x40027cd	           0xf94c0	                                 sete al	       895	show-branch.c	FUNCTION_56	WHILE_2
0x40027d0	           0xfb6c0	                           movzx eax, al	       895	show-branch.c	FUNCTION_56	WHILE_2
0x40027d3	    0x898538f9ffff	            mov dword [rbp - 0x6c8], eax	       895	show-branch.c	FUNCTION_56	WHILE_2
0x40027d9	    0x8b8538f9ffff	            mov eax, dword [rbp - 0x6c8]	       897	show-branch.c	FUNCTION_56	WHILE_2
0x40027df	     0x9850cf9ffff	             or dword [rbp - 0x6f4], eax	       897	show-branch.c	FUNCTION_56	WHILE_2
0x40027e5	    0x83bd04f9ffff	              cmp dword [rbp - 0x6fc], 1	       899	show-branch.c	FUNCTION_56	WHILE_2	IF_36
0x40027ec	     0xf8e5b010000	                           jle 0x400294d	       899	show-branch.c	FUNCTION_56	WHILE_2	IF_36
0x40027f2	    0x488b8598f9ff	            mov rax, qword [rbp - 0x668]	       900	show-branch.c	FUNCTION_56	WHILE_2	IF_36
0x40027f9	        0x488b4030	            mov rax, qword [rax + 0x30] 	       900	show-branch.c	FUNCTION_56	WHILE_2	IF_36
0x40027fd	          0x4885c0	                           test rax, rax	       900	show-branch.c	FUNCTION_56	WHILE_2	IF_36
0x4002800	            0x741b	                            je 0x400281d	       900	show-branch.c	FUNCTION_56	WHILE_2	IF_36
0x4002802	    0x488b8598f9ff	            mov rax, qword [rbp - 0x668]	       901	show-branch.c	FUNCTION_56	WHILE_2	IF_36
0x4002809	        0x488b4030	            mov rax, qword [rax + 0x30] 	       901	show-branch.c	FUNCTION_56	WHILE_2	IF_36
0x400280d	        0x488b4008	                mov rax, qword [rax + 8]	       901	show-branch.c	FUNCTION_56	WHILE_2	IF_36
0x4002811	          0x4885c0	                           test rax, rax	       900	show-branch.c	FUNCTION_56	WHILE_2	IF_36
0x4002814	            0x7407	                            je 0x400281d	       900	show-branch.c	FUNCTION_56	WHILE_2	IF_36
0x4002816	      0xb801000000	                              mov eax, 1	       900	show-branch.c	FUNCTION_56	WHILE_2	IF_36
0x400281b	            0xeb05	                           jmp 0x4002822	       900	show-branch.c	FUNCTION_56	WHILE_2	IF_36
0x400281d	      0xb800000000	                              mov eax, 0	       900	show-branch.c	FUNCTION_56	WHILE_2	IF_36
0x4002822	    0x89853cf9ffff	            mov dword [rbp - 0x6c4], eax	       900	show-branch.c	FUNCTION_56	WHILE_2	IF_36
0x4002828	    0x8b85f4f8ffff	            mov eax, dword [rbp - 0x70c]	       902	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_37
0x400282e	            0x85c0	                           test eax, eax	       902	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_37
0x4002830	            0x741b	                            je 0x400284d	       902	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_37
0x4002832	    0x83bd38f9ffff	              cmp dword [rbp - 0x6c8], 0	       902	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_37
0x4002839	            0x7512	                           jne 0x400284d	       902	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_37
0x400283b	    0x8b8534f9ffff	            mov eax, dword [rbp - 0x6cc]	       904	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_37
0x4002841	          0x83e004	                              and eax, 4	       904	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_37
0x4002844	            0x85c0	                           test eax, eax	       903	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_37
0x4002846	            0x7405	                            je 0x400284d	       903	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_37
0x4002848	      0xe939010000	                           jmp 0x4002986	       905	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_37
0x400284d	    0x8b85f8f8ffff	            mov eax, dword [rbp - 0x708]	       906	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_38
0x4002853	            0x85c0	                           test eax, eax	       906	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_38
0x4002855	            0x7431	                            je 0x4002888	       906	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_38
0x4002857	    0x83bd3cf9ffff	              cmp dword [rbp - 0x6c4], 0	       906	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_38
0x400285e	            0x7428	                            je 0x4002888	       906	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_38
0x4002860	    0x8b9504f9ffff	            mov edx, dword [rbp - 0x6fc]	       907	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_38	CALL_80
0x4002866	    0x488d8d30faff	                  lea rcx, [rbp - 0x5d0]	       907	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_38	CALL_80
0x400286d	    0x488b8598f9ff	            mov rax, qword [rbp - 0x668]	       907	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_38	CALL_80
0x4002874	          0x4889ce	                            mov rsi, rcx	       907	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_38	CALL_80
0x4002877	          0x4889c7	                            mov rdi, rax	       907	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_38	CALL_80
0x400287a	      0xe847edffff	                  call sym.omit_in_dense	       907	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_38	CALL_80
0x400287f	            0x85c0	                           test eax, eax	       906	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_38
0x4002881	            0x7405	                            je 0x4002888	       906	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_38
0x4002883	      0xe9fe000000	                           jmp 0x4002986	       908	show-branch.c	FUNCTION_56	WHILE_2	IF_36	IF_38
0x4002888	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 0	       909	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8
0x4002892	      0xe99a000000	                           jmp 0x4002931	       909	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8
0x4002897	    0x8b9534f9ffff	            mov edx, dword [rbp - 0x6cc]	       911	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	IF_39
0x400289d	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       911	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	IF_39
0x40028a3	          0x83c002	                              add eax, 2	       911	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	IF_39
0x40028a6	            0x89c1	                            mov ecx, eax	       911	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	IF_39
0x40028a8	            0xd3ea	                             shr edx, cl	       911	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	IF_39
0x40028aa	            0x89d0	                            mov eax, edx	       911	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	IF_39
0x40028ac	          0x83e001	                              and eax, 1	       911	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	IF_39
0x40028af	            0x85c0	                           test eax, eax	       911	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	IF_39
0x40028b1	            0x750c	                           jne 0x40028bf	       911	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	IF_39
0x40028b3	    0xc7851cf9ffff	          mov dword [rbp - 0x6e4], 0x20 	       912	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	IF_39
0x40028bd	            0xeb39	                           jmp 0x40028f8	       912	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	IF_39
0x40028bf	    0x83bd3cf9ffff	              cmp dword [rbp - 0x6c4], 0	       913	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	ELSE_5	IF_40
0x40028c6	            0x740c	                            je 0x40028d4	       913	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	ELSE_5	IF_40
0x40028c8	    0xc7851cf9ffff	          mov dword [rbp - 0x6e4], 0x2d 	       914	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	ELSE_5	IF_40
0x40028d2	            0xeb24	                           jmp 0x40028f8	       914	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	ELSE_5	IF_40
0x40028d4	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       915	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	ELSE_6	IF_41
0x40028da	    0x3b8510f9ffff	            cmp eax, dword [rbp - 0x6f0]	       915	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	ELSE_6	IF_41
0x40028e0	            0x750c	                           jne 0x40028ee	       915	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	ELSE_6	IF_41
0x40028e2	    0xc7851cf9ffff	          mov dword [rbp - 0x6e4], 0x2a 	       916	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	ELSE_6	IF_41
0x40028ec	            0xeb0a	                           jmp 0x40028f8	       916	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	ELSE_6	IF_41
0x40028ee	    0xc7851cf9ffff	          mov dword [rbp - 0x6e4], 0x2b 	       918	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	ELSE_7
0x40028f8	      0xe8c0d9ffff	           call sym.get_color_reset_code	       919	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	CALL_81
0x40028fd	          0x4889c3	                            mov rbx, rax	       919	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	CALL_81
0x4002900	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       919	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	CALL_81
0x4002906	            0x89c7	                            mov edi, eax	       919	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	CALL_81
0x4002908	      0xe86ed9ffff	                 call sym.get_color_code	       919	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	CALL_81
0x400290d	          0x4889c6	                            mov rsi, rax	       919	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	CALL_81
0x4002910	    0x8b851cf9ffff	            mov eax, dword [rbp - 0x6e4]	       919	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	CALL_81
0x4002916	          0x4889d9	                            mov rcx, rbx	       919	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	CALL_81
0x4002919	            0x89c2	                            mov edx, eax	       919	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	CALL_81
0x400291b	      0xbf00000000	                              mov edi, 0	       919	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	CALL_81
0x4002920	      0xb800000000	                              mov eax, 0	       919	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	CALL_81
0x4002925	      0xe800000000	                          call 0x400292a	       919	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8	CALL_81
0x400292a	    0x838508f9ffff	              add dword [rbp - 0x6f8], 1	       909	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8
0x4002931	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       909	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8
0x4002937	    0x3b8504f9ffff	            cmp eax, dword [rbp - 0x6fc]	       909	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8
0x400293d	     0xf8c54ffffff	                            jl 0x4002897	       909	show-branch.c	FUNCTION_56	WHILE_2	IF_36	FOR_8
0x4002943	      0xbf20000000	                           mov edi, 0x20	       923	show-branch.c	FUNCTION_56	WHILE_2	IF_36	CALL_84
0x4002948	      0xe800000000	                          call 0x400294d	       923	show-branch.c	FUNCTION_56	WHILE_2	IF_36	CALL_84
0x400294d	    0x8b95e8f8ffff	            mov edx, dword [rbp - 0x718]	       925	show-branch.c	FUNCTION_56	WHILE_2	CALL_85
0x4002953	    0x488b8598f9ff	            mov rax, qword [rbp - 0x668]	       925	show-branch.c	FUNCTION_56	WHILE_2	CALL_85
0x400295a	            0x89d6	                            mov esi, edx	       925	show-branch.c	FUNCTION_56	WHILE_2	CALL_85
0x400295c	          0x4889c7	                            mov rdi, rax	       925	show-branch.c	FUNCTION_56	WHILE_2	CALL_85
0x400295f	      0xe879e0ffff	                call sym.show_one_commit	       925	show-branch.c	FUNCTION_56	WHILE_2	CALL_85
0x4002964	    0x83bd0cf9ffff	              cmp dword [rbp - 0x6f4], 0	       927	show-branch.c	FUNCTION_56	WHILE_2	IF_42
0x400296b	            0x7419	                            je 0x4002986	       927	show-branch.c	FUNCTION_56	WHILE_2	IF_42
0x400296d	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       927	show-branch.c	FUNCTION_56	WHILE_2	IF_42
0x4002973	          0x83e801	                              sub eax, 1	       927	show-branch.c	FUNCTION_56	WHILE_2	IF_42
0x4002976	    0x8985d0f8ffff	            mov dword [rbp - 0x730], eax	       927	show-branch.c	FUNCTION_56	WHILE_2	IF_42
0x400297c	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       927	show-branch.c	FUNCTION_56	WHILE_2	IF_42
0x4002982	            0x85c0	                           test eax, eax	       927	show-branch.c	FUNCTION_56	WHILE_2	IF_42
0x4002984	            0x7812	                            js 0x4002998	       927	show-branch.c	FUNCTION_56	WHILE_2	IF_42
0x4002986	    0x488b8548f9ff	            mov rax, qword [rbp - 0x6b8]	       892	show-branch.c	FUNCTION_56	WHILE_2
0x400298d	          0x4885c0	                           test rax, rax	       892	show-branch.c	FUNCTION_56	WHILE_2
0x4002990	     0xf85f8fdffff	                           jne 0x400278e	       892	show-branch.c	FUNCTION_56	WHILE_2
0x4002996	            0xeb01	                           jmp 0x4002999	       892	show-branch.c	FUNCTION_56	WHILE_2
0x4002998	              0x90	                                     nop	       928	show-branch.c	FUNCTION_56	WHILE_2	IF_42
0x4002999	      0xb800000000	                              mov eax, 0	       930	show-branch.c	FUNCTION_56
0x400299e	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	       931	show-branch.c	FUNCTION_56
0x40029a2	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       931	show-branch.c	FUNCTION_56
0x40029ab	            0x7405	                            je 0x40029b2	       931	show-branch.c	FUNCTION_56
0x40029ad	      0xe800000000	                          call 0x40029b2	       931	show-branch.c	FUNCTION_56
0x40029b2	        0x488d65e8	                   lea rsp, [rbp - 0x18]	       931	show-branch.c	FUNCTION_56
0x40029b6	              0x5b	                                 pop rbx	       931	show-branch.c	FUNCTION_56
0x40029b7	            0x415c	                                 pop r12	       931	show-branch.c	FUNCTION_56
0x40029b9	            0x415d	                                 pop r13	       931	show-branch.c	FUNCTION_56
0x40029bb	              0x5d	                                 pop rbp	       931	show-branch.c	FUNCTION_56
0x40029bc	              0xc3	                                     ret	       931	show-branch.c	FUNCTION_56
sane_qsort	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,1:FOR,0:DO,0:CALL,0	18
0x40000a1	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_26
0x40000a2	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_26
0x40000a5	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_26
0x40000a9	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_26
0x40000ad	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_26
0x40000b1	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_26
0x40000b5	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_26
0x40000b9	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_26	IF_1
0x40000be	            0x7618	                           jbe 0x40000d8	      1048	git-compat-util.h	FUNCTION_26	IF_1
0x40000c0	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_26	IF_1
0x40000c4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_26	IF_1
0x40000c8	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_26	IF_1
0x40000cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_26	IF_1
0x40000d0	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_26	IF_1
0x40000d3	      0xe800000000	                          call 0x40000d8	      1049	git-compat-util.h	FUNCTION_26	IF_1
0x40000d8	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_26
0x40000d9	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_26
0x40000da	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_26
append_one_rev	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,3:FOR,0:DO,0:CALL,10	82
0x40013be	              0x55	                                push rbp	       515	show-branch.c	FUNCTION_52
0x40013bf	          0x4889e5	                            mov rbp, rsp	       515	show-branch.c	FUNCTION_52
0x40013c2	        0x4883ec40	                           sub rsp, 0x40	       515	show-branch.c	FUNCTION_52
0x40013c6	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       515	show-branch.c	FUNCTION_52
0x40013ca	    0x64488b042528	                mov rax, qword fs:[0x28]	       515	show-branch.c	FUNCTION_52
0x40013d3	        0x488945f8	                mov qword [rbp - 8], rax	       515	show-branch.c	FUNCTION_52
0x40013d7	            0x31c0	                            xor eax, eax	       515	show-branch.c	FUNCTION_52
0x40013d9	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       517	show-branch.c	FUNCTION_52	IF_1	CALL_1
0x40013dd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       517	show-branch.c	FUNCTION_52	IF_1	CALL_1
0x40013e1	          0x4889d6	                            mov rsi, rdx	       517	show-branch.c	FUNCTION_52	IF_1	CALL_1
0x40013e4	          0x4889c7	                            mov rdi, rax	       517	show-branch.c	FUNCTION_52	IF_1	CALL_1
0x40013e7	      0xe800000000	                          call 0x40013ec	       517	show-branch.c	FUNCTION_52	IF_1	CALL_1
0x40013ec	            0x85c0	                           test eax, eax	       517	show-branch.c	FUNCTION_52	IF_1	CALL_1
0x40013ee	            0x751d	                           jne 0x400140d	       517	show-branch.c	FUNCTION_52	IF_1	CALL_1
0x40013f0	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       518	show-branch.c	FUNCTION_52	IF_1	CALL_2
0x40013f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       518	show-branch.c	FUNCTION_52	IF_1	CALL_2
0x40013f8	      0xba00000000	                              mov edx, 0	       518	show-branch.c	FUNCTION_52	IF_1	CALL_2
0x40013fd	          0x4889ce	                            mov rsi, rcx	       518	show-branch.c	FUNCTION_52	IF_1	CALL_2
0x4001400	          0x4889c7	                            mov rdi, rax	       518	show-branch.c	FUNCTION_52	IF_1	CALL_2
0x4001403	      0xe814f9ffff	                     call sym.append_ref	       518	show-branch.c	FUNCTION_52	IF_1	CALL_2
0x4001408	      0xe9e1000000	                           jmp 0x40014ee	       519	show-branch.c	FUNCTION_52	IF_1
0x400140d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x4001411	      0xbe2a000000	                           mov esi, 0x2a	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x4001416	          0x4889c7	                            mov rdi, rax	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x4001419	      0xe800000000	                          call 0x400141e	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x400141e	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x4001421	            0x7530	                           jne 0x4001453	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x4001423	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x4001427	      0xbe3f000000	                           mov esi, 0x3f	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x400142c	          0x4889c7	                            mov rdi, rax	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x400142f	      0xe800000000	                          call 0x4001434	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x4001434	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x4001437	            0x751a	                           jne 0x4001453	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x4001439	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x400143d	      0xbe5b000000	                           mov esi, 0x5b	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x4001442	          0x4889c7	                            mov rdi, rax	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x4001445	      0xe800000000	                          call 0x400144a	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x400144a	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x400144d	     0xf8485000000	                            je 0x40014d8	       521	show-branch.c	FUNCTION_52	IF_2	CALL_5
0x4001453	    0x8b0500000000	            mov eax, dword [0x04001459] 	       523	show-branch.c	FUNCTION_52	IF_2
0x4001459	          0x8945dc	             mov dword [rbp - 0x24], eax	       523	show-branch.c	FUNCTION_52	IF_2
0x400145c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       525	show-branch.c	FUNCTION_52	IF_2
0x4001460	    0x488905000000	            mov qword [0x04001467], rax 	       525	show-branch.c	FUNCTION_52	IF_2
0x4001467	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       526	show-branch.c	FUNCTION_52	IF_2	CALL_6
0x400146b	          0x4889c7	                            mov rdi, rax	       526	show-branch.c	FUNCTION_52	IF_2	CALL_6
0x400146e	      0xe800000000	                          call 0x4001473	       526	show-branch.c	FUNCTION_52	IF_2	CALL_6
0x4001473	    0x890500000000	            mov dword [0x04001479], eax 	       526	show-branch.c	FUNCTION_52	IF_2	CALL_6
0x4001479	      0xbe00000000	                              mov esi, 0	       527	show-branch.c	FUNCTION_52	IF_2	CALL_7
0x400147e	      0xbf00000000	                              mov edi, 0	       527	show-branch.c	FUNCTION_52	IF_2	CALL_7
0x4001483	      0xe800000000	                          call 0x4001488	       527	show-branch.c	FUNCTION_52	IF_2	CALL_7
0x4001488	    0x8b0500000000	            mov eax, dword [0x0400148e] 	       528	show-branch.c	FUNCTION_52	IF_2	IF_3
0x400148e	          0x3945dc	            cmp dword [rbp - 0x24], eax 	       528	show-branch.c	FUNCTION_52	IF_2	IF_3
0x4001491	            0x7531	                           jne 0x40014c4	       528	show-branch.c	FUNCTION_52	IF_2	IF_3
0x4001493	    0x8b0500000000	            mov eax, dword [0x04001499] 	       529	show-branch.c	FUNCTION_52	IF_2	IF_3
0x4001499	          0x83f818	                           cmp eax, 0x18	       528	show-branch.c	FUNCTION_52	IF_2	IF_3
0x400149c	            0x7f26	                            jg 0x40014c4	       528	show-branch.c	FUNCTION_52	IF_2	IF_3
0x400149e	      0xbf00000000	                              mov edi, 0	       530	show-branch.c	FUNCTION_52	IF_2	CALL_8
0x40014a3	      0xe80cedffff	                               call sym.	       530	show-branch.c	FUNCTION_52	IF_2	CALL_8
0x40014a8	          0x4889c2	                            mov rdx, rax	       530	show-branch.c	FUNCTION_52	IF_2	CALL_8
0x40014ab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       530	show-branch.c	FUNCTION_52	IF_2	CALL_8
0x40014af	          0x4889c6	                            mov rsi, rax	       530	show-branch.c	FUNCTION_52	IF_2	CALL_8
0x40014b2	          0x4889d7	                            mov rdi, rdx	       530	show-branch.c	FUNCTION_52	IF_2	CALL_8
0x40014b5	      0xb800000000	                              mov eax, 0	       530	show-branch.c	FUNCTION_52	IF_2	CALL_8
0x40014ba	      0xe800000000	                          call 0x40014bf	       530	show-branch.c	FUNCTION_52	IF_2	CALL_8
0x40014bf	      0xe87cebffff	                    call sym.const_error	       530	show-branch.c	FUNCTION_52	IF_2	CALL_8
0x40014c4	    0x8b1500000000	            mov edx, dword [0x040014ca] 	       531	show-branch.c	FUNCTION_52	IF_2	CALL_9
0x40014ca	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       531	show-branch.c	FUNCTION_52	IF_2	CALL_9
0x40014cd	            0x89d6	                            mov esi, edx	       531	show-branch.c	FUNCTION_52	IF_2	CALL_9
0x40014cf	            0x89c7	                            mov edi, eax	       531	show-branch.c	FUNCTION_52	IF_2	CALL_9
0x40014d1	      0xe80af8ffff	                 call sym.sort_ref_range	       531	show-branch.c	FUNCTION_52	IF_2	CALL_9
0x40014d6	            0xeb16	                           jmp 0x40014ee	       532	show-branch.c	FUNCTION_52	IF_2
0x40014d8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       534	show-branch.c	FUNCTION_52	CALL_10
0x40014dc	          0x4889c6	                            mov rsi, rax	       534	show-branch.c	FUNCTION_52	CALL_10
0x40014df	      0xbf00000000	                              mov edi, 0	       534	show-branch.c	FUNCTION_52	CALL_10
0x40014e4	      0xb800000000	                              mov eax, 0	       534	show-branch.c	FUNCTION_52	CALL_10
0x40014e9	      0xe800000000	                          call 0x40014ee	       534	show-branch.c	FUNCTION_52	CALL_10
0x40014ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       535	show-branch.c	FUNCTION_52
0x40014f2	    0x644833042528	                xor rax, qword fs:[0x28]	       535	show-branch.c	FUNCTION_52
0x40014fb	            0x7405	                            je 0x4001502	       535	show-branch.c	FUNCTION_52
0x40014fd	      0xe800000000	                          call 0x4001502	       535	show-branch.c	FUNCTION_52
0x4001502	              0xc9	                                   leave	       535	show-branch.c	FUNCTION_52
0x4001503	              0xc3	                                     ret	       535	show-branch.c	FUNCTION_52
strbuf_avail	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:FOR,0:DO,0:CALL,0	18
0x40000db	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_58
0x40000dc	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_58
0x40000df	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_58
0x40000e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_58
0x40000e7	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_58
0x40000ea	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_58
0x40000ed	            0x741b	                            je 0x400010a	       141	strbuf.h	FUNCTION_58
0x40000ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_58
0x40000f3	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_58
0x40000f6	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_58
0x40000fa	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_58
0x40000fe	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_58
0x4000101	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_58
0x4000104	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_58
0x4000108	            0xeb05	                           jmp 0x400010f	       141	strbuf.h	FUNCTION_58
0x400010a	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_58
0x400010f	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_58
0x4000110	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_58
get_color_code	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,1:FOR,0:DO,0:CALL,1	21
0x400027b	              0x55	                                push rbp	        32	show-branch.c	FUNCTION_29
0x400027c	          0x4889e5	                            mov rbp, rsp	        32	show-branch.c	FUNCTION_29
0x400027f	        0x4883ec10	                           sub rsp, 0x10	        32	show-branch.c	FUNCTION_29
0x4000283	          0x897dfc	                mov dword [rbp - 4], edi	        32	show-branch.c	FUNCTION_29
0x4000286	    0x8b0500000000	            mov eax, dword [0x0400028c] 	        33	show-branch.c	FUNCTION_29	IF_1	CALL_1
0x400028c	            0x89c6	                            mov esi, eax	        33	show-branch.c	FUNCTION_29	IF_1	CALL_1
0x400028e	      0xbf01000000	                              mov edi, 1	        33	show-branch.c	FUNCTION_29	IF_1	CALL_1
0x4000293	      0xe800000000	                          call 0x4000298	        33	show-branch.c	FUNCTION_29	IF_1	CALL_1
0x4000298	            0x85c0	                           test eax, eax	        33	show-branch.c	FUNCTION_29	IF_1	CALL_1
0x400029a	            0x741a	                            je 0x40002b6	        33	show-branch.c	FUNCTION_29	IF_1	CALL_1
0x400029c	    0x8b0d00000000	            mov ecx, dword [0x040002a2] 	        34	show-branch.c	FUNCTION_29	IF_1
0x40002a2	          0x8b45fc	                mov eax, dword [rbp - 4]	        34	show-branch.c	FUNCTION_29	IF_1
0x40002a5	              0x99	                                     cdq	        34	show-branch.c	FUNCTION_29	IF_1
0x40002a6	            0xf7f9	                                idiv ecx	        34	show-branch.c	FUNCTION_29	IF_1
0x40002a8	            0x89d0	                            mov eax, edx	        34	show-branch.c	FUNCTION_29	IF_1
0x40002aa	            0x4898	                                    cdqe	        34	show-branch.c	FUNCTION_29	IF_1
0x40002ac	    0x488b04c50000	                  mov rax, qword [rax*8]	        34	show-branch.c	FUNCTION_29	IF_1
0x40002b4	            0xeb05	                           jmp 0x40002bb	        34	show-branch.c	FUNCTION_29	IF_1
0x40002b6	      0xb800000000	                              mov eax, 0	        35	show-branch.c	FUNCTION_29
0x40002bb	              0xc9	                                   leave	        36	show-branch.c	FUNCTION_29
0x40002bc	              0xc3	                                     ret	        36	show-branch.c	FUNCTION_29
show_merge_base	functions,0:ELSE,0:SWITCH,0:WHILE,1:IF,1:FOR,0:DO,0:CALL,3	63
0x4001224	              0x55	                                push rbp	       478	show-branch.c	FUNCTION_50
0x4001225	          0x4889e5	                            mov rbp, rsp	       478	show-branch.c	FUNCTION_50
0x4001228	        0x4883ec30	                           sub rsp, 0x30	       478	show-branch.c	FUNCTION_50
0x400122c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       478	show-branch.c	FUNCTION_50
0x4001230	          0x8975d4	             mov dword [rbp - 0x2c], esi	       478	show-branch.c	FUNCTION_50
0x4001233	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       479	show-branch.c	FUNCTION_50
0x4001236	          0x83c002	                              add eax, 2	       479	show-branch.c	FUNCTION_50
0x4001239	      0xba01000000	                              mov edx, 1	       479	show-branch.c	FUNCTION_50
0x400123e	            0x89c1	                            mov ecx, eax	       479	show-branch.c	FUNCTION_50
0x4001240	            0xd3e2	                             shl edx, cl	       479	show-branch.c	FUNCTION_50
0x4001242	            0x89d0	                            mov eax, edx	       479	show-branch.c	FUNCTION_50
0x4001244	          0x83e801	                              sub eax, 1	       479	show-branch.c	FUNCTION_50
0x4001247	          0x8945ec	             mov dword [rbp - 0x14], eax	       479	show-branch.c	FUNCTION_50
0x400124a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       480	show-branch.c	FUNCTION_50
0x400124d	          0x83e0fc	                     and eax, 0xfffffffc	       480	show-branch.c	FUNCTION_50
0x4001250	          0x8945f0	             mov dword [rbp - 0x10], eax	       480	show-branch.c	FUNCTION_50
0x4001253	    0xc745e8010000	               mov dword [rbp - 0x18], 1	       481	show-branch.c	FUNCTION_50
0x400125a	      0xe986000000	                           jmp 0x40012e5	       483	show-branch.c	FUNCTION_50	WHILE_1
0x400125f	        0x488d45d8	                   lea rax, [rbp - 0x28]	       484	show-branch.c	FUNCTION_50	WHILE_1	CALL_1
0x4001263	          0x4889c7	                            mov rdi, rax	       484	show-branch.c	FUNCTION_50	WHILE_1	CALL_1
0x4001266	      0xe800000000	                          call 0x400126b	       484	show-branch.c	FUNCTION_50	WHILE_1	CALL_1
0x400126b	        0x488945f8	                mov qword [rbp - 8], rax	       484	show-branch.c	FUNCTION_50	WHILE_1	CALL_1
0x400126f	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	show-branch.c	FUNCTION_50	WHILE_1
0x4001273	            0x8b00	                    mov eax, dword [rax]	       485	show-branch.c	FUNCTION_50	WHILE_1
0x4001275	          0xc1e804	                              shr eax, 4	       485	show-branch.c	FUNCTION_50	WHILE_1
0x4001278	      0x25ffffff07	                      and eax, 0x7ffffff	       485	show-branch.c	FUNCTION_50	WHILE_1
0x400127d	          0x2345ec	             and eax, dword [rbp - 0x14]	       485	show-branch.c	FUNCTION_50	WHILE_1
0x4001280	          0x8945f4	              mov dword [rbp - 0xc], eax	       485	show-branch.c	FUNCTION_50	WHILE_1
0x4001283	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       486	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x4001286	          0x83e001	                              and eax, 1	       486	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x4001289	            0x85c0	                           test eax, eax	       486	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x400128b	            0x7558	                           jne 0x40012e5	       486	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x400128d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       487	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x4001290	          0x2345f0	             and eax, dword [rbp - 0x10]	       487	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x4001293	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       486	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x4001296	            0x754d	                           jne 0x40012e5	       486	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x4001298	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	show-branch.c	FUNCTION_50	WHILE_1	IF_1	CALL_3
0x400129c	        0x4883c004	                              add rax, 4	       488	show-branch.c	FUNCTION_50	WHILE_1	IF_1	CALL_3
0x40012a0	          0x4889c7	                            mov rdi, rax	       488	show-branch.c	FUNCTION_50	WHILE_1	IF_1	CALL_3
0x40012a3	      0xe800000000	                          call 0x40012a8	       488	show-branch.c	FUNCTION_50	WHILE_1	IF_1	CALL_3
0x40012a8	          0x4889c7	                            mov rdi, rax	       488	show-branch.c	FUNCTION_50	WHILE_1	IF_1	CALL_3
0x40012ab	      0xe800000000	                          call 0x40012b0	       488	show-branch.c	FUNCTION_50	WHILE_1	IF_1	CALL_3
0x40012b0	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       489	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x40012b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       490	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x40012bb	            0x8b00	                    mov eax, dword [rax]	       490	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x40012bd	          0xc1e804	                              shr eax, 4	       490	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x40012c0	      0x25ffffff07	                      and eax, 0x7ffffff	       490	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x40012c5	          0x83c801	                               or eax, 1	       490	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x40012c8	            0x89c2	                            mov edx, eax	       490	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x40012ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       490	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x40012ce	    0x81e2ffffff07	                      and edx, 0x7ffffff	       490	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x40012d4	            0x89d1	                            mov ecx, edx	       490	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x40012d6	          0xc1e104	                              shl ecx, 4	       490	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x40012d9	            0x8b10	                    mov edx, dword [rax]	       490	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x40012db	    0x81e20f000080	                     and edx, 0x8000000f	       490	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x40012e1	             0x9ca	                             or edx, ecx	       490	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x40012e3	            0x8910	                    mov dword [rax], edx	       490	show-branch.c	FUNCTION_50	WHILE_1	IF_1
0x40012e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       483	show-branch.c	FUNCTION_50	WHILE_1
0x40012e9	          0x4885c0	                           test rax, rax	       483	show-branch.c	FUNCTION_50	WHILE_1
0x40012ec	     0xf856dffffff	                           jne 0x400125f	       483	show-branch.c	FUNCTION_50	WHILE_1
0x40012f2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       493	show-branch.c	FUNCTION_50
0x40012f5	              0xc9	                                   leave	       494	show-branch.c	FUNCTION_50
0x40012f6	              0xc3	                                     ret	       494	show-branch.c	FUNCTION_50
show_one_commit	functions,0:ELSE,2:SWITCH,0:WHILE,0:IF,5:FOR,0:DO,0:CALL,10	90
0x40009dd	              0x55	                                push rbp	       271	show-branch.c	FUNCTION_38
0x40009de	          0x4889e5	                            mov rbp, rsp	       271	show-branch.c	FUNCTION_38
0x40009e1	        0x4883ec40	                           sub rsp, 0x40	       271	show-branch.c	FUNCTION_38
0x40009e5	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       271	show-branch.c	FUNCTION_38
0x40009e9	          0x8975c4	             mov dword [rbp - 0x3c], esi	       271	show-branch.c	FUNCTION_38
0x40009ec	    0x64488b042528	                mov rax, qword fs:[0x28]	       271	show-branch.c	FUNCTION_38
0x40009f5	        0x488945f8	                mov qword [rbp - 8], rax	       271	show-branch.c	FUNCTION_38
0x40009f9	            0x31c0	                            xor eax, eax	       271	show-branch.c	FUNCTION_38
0x40009fb	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       272	show-branch.c	FUNCTION_38
0x4000a03	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       272	show-branch.c	FUNCTION_38
0x4000a0b	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       272	show-branch.c	FUNCTION_38
0x4000a13	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       273	show-branch.c	FUNCTION_38
0x4000a1b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       274	show-branch.c	FUNCTION_38
0x4000a1f	        0x488b4018	            mov rax, qword [rax + 0x18] 	       274	show-branch.c	FUNCTION_38
0x4000a23	        0x488945d8	             mov qword [rbp - 0x28], rax	       274	show-branch.c	FUNCTION_38
0x4000a27	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       276	show-branch.c	FUNCTION_38	IF_1
0x4000a2b	           0xfb600	                   movzx eax, byte [rax]	       276	show-branch.c	FUNCTION_38	IF_1
0x4000a2e	          0x83e001	                              and eax, 1	       276	show-branch.c	FUNCTION_38	IF_1
0x4000a31	            0x84c0	                             test al, al	       276	show-branch.c	FUNCTION_38	IF_1
0x4000a33	            0x741d	                            je 0x4000a52	       276	show-branch.c	FUNCTION_38	IF_1
0x4000a35	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       277	show-branch.c	FUNCTION_38	IF_1	CALL_1
0x4000a39	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       277	show-branch.c	FUNCTION_38	IF_1	CALL_1
0x4000a3d	          0x4889c6	                            mov rsi, rax	       277	show-branch.c	FUNCTION_38	IF_1	CALL_1
0x4000a40	      0xbf05000000	                              mov edi, 5	       277	show-branch.c	FUNCTION_38	IF_1	CALL_1
0x4000a45	      0xe800000000	                          call 0x4000a4a	       277	show-branch.c	FUNCTION_38	IF_1	CALL_1
0x4000a4a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       278	show-branch.c	FUNCTION_38	IF_1
0x4000a4e	        0x488945d0	             mov qword [rbp - 0x30], rax	       278	show-branch.c	FUNCTION_38	IF_1
0x4000a52	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       280	show-branch.c	FUNCTION_38	CALL_2
0x4000a56	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       280	show-branch.c	FUNCTION_38	CALL_2
0x4000a5a	      0xbe00000000	                              mov esi, 0	       280	show-branch.c	FUNCTION_38	CALL_2
0x4000a5f	          0x4889c7	                            mov rdi, rax	       280	show-branch.c	FUNCTION_38	CALL_2
0x4000a62	      0xe8e4f5ffff	                    call sym.skip_prefix	       280	show-branch.c	FUNCTION_38	CALL_2
0x4000a67	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       282	show-branch.c	FUNCTION_38	IF_2
0x4000a6b	     0xf85a2000000	                           jne 0x4000b13	       282	show-branch.c	FUNCTION_38	IF_2
0x4000a71	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       283	show-branch.c	FUNCTION_38	IF_2	IF_3
0x4000a76	            0x7471	                            je 0x4000ae9	       283	show-branch.c	FUNCTION_38	IF_2	IF_3
0x4000a78	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       283	show-branch.c	FUNCTION_38	IF_2	IF_3
0x4000a7c	          0x488b00	                    mov rax, qword [rax]	       283	show-branch.c	FUNCTION_38	IF_2	IF_3
0x4000a7f	          0x4885c0	                           test rax, rax	       283	show-branch.c	FUNCTION_38	IF_2	IF_3
0x4000a82	            0x7465	                            je 0x4000ae9	       283	show-branch.c	FUNCTION_38	IF_2	IF_3
0x4000a84	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       284	show-branch.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x4000a88	          0x488b00	                    mov rax, qword [rax]	       284	show-branch.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x4000a8b	          0x4889c6	                            mov rsi, rax	       284	show-branch.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x4000a8e	      0xbf00000000	                              mov edi, 0	       284	show-branch.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x4000a93	      0xb800000000	                              mov eax, 0	       284	show-branch.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x4000a98	      0xe800000000	                          call 0x4000a9d	       284	show-branch.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x4000a9d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       285	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4
0x4000aa1	          0x8b4008	                mov eax, dword [rax + 8]	       285	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4
0x4000aa4	            0x85c0	                           test eax, eax	       285	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4
0x4000aa6	            0x7430	                            je 0x4000ad8	       285	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4
0x4000aa8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       286	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4	IF_5
0x4000aac	          0x8b4008	                mov eax, dword [rax + 8]	       286	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4	IF_5
0x4000aaf	          0x83f801	                              cmp eax, 1	       286	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4	IF_5
0x4000ab2	            0x750c	                           jne 0x4000ac0	       286	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4	IF_5
0x4000ab4	      0xbf5e000000	                           mov edi, 0x5e	       287	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4	CALL_4
0x4000ab9	      0xe800000000	                          call 0x4000abe	       287	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4	CALL_4
0x4000abe	            0xeb18	                           jmp 0x4000ad8	       287	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4	CALL_4
0x4000ac0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       289	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4	CALL_5
0x4000ac4	          0x8b4008	                mov eax, dword [rax + 8]	       289	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4	CALL_5
0x4000ac7	            0x89c6	                            mov esi, eax	       289	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4	CALL_5
0x4000ac9	      0xbf00000000	                              mov edi, 0	       289	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4	CALL_5
0x4000ace	      0xb800000000	                              mov eax, 0	       289	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4	CALL_5
0x4000ad3	      0xe800000000	                          call 0x4000ad8	       289	show-branch.c	FUNCTION_38	IF_2	IF_3	IF_4	CALL_5
0x4000ad8	      0xbf00000000	                              mov edi, 0	       291	show-branch.c	FUNCTION_38	IF_2	IF_3	CALL_6
0x4000add	      0xb800000000	                              mov eax, 0	       291	show-branch.c	FUNCTION_38	IF_2	IF_3	CALL_6
0x4000ae2	      0xe800000000	                          call 0x4000ae7	       291	show-branch.c	FUNCTION_38	IF_2	IF_3	CALL_6
0x4000ae7	            0xeb2a	                           jmp 0x4000b13	       291	show-branch.c	FUNCTION_38	IF_2	IF_3	CALL_6
0x4000ae9	    0x8b0500000000	            mov eax, dword [0x04000aef] 	       294	show-branch.c	FUNCTION_38	IF_2	ELSE_2	CALL_7
0x4000aef	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       295	show-branch.c	FUNCTION_38	IF_2	ELSE_2	CALL_8
0x4000af3	        0x4883c204	                              add rdx, 4	       295	show-branch.c	FUNCTION_38	IF_2	ELSE_2	CALL_8
0x4000af7	            0x89c6	                            mov esi, eax	       294	show-branch.c	FUNCTION_38	IF_2	ELSE_2	CALL_7
0x4000af9	          0x4889d7	                            mov rdi, rdx	       294	show-branch.c	FUNCTION_38	IF_2	ELSE_2	CALL_7
0x4000afc	      0xe800000000	                          call 0x4000b01	       294	show-branch.c	FUNCTION_38	IF_2	ELSE_2	CALL_7
0x4000b01	          0x4889c6	                            mov rsi, rax	       294	show-branch.c	FUNCTION_38	IF_2	ELSE_2	CALL_7
0x4000b04	      0xbf00000000	                              mov edi, 0	       294	show-branch.c	FUNCTION_38	IF_2	ELSE_2	CALL_7
0x4000b09	      0xb800000000	                              mov eax, 0	       294	show-branch.c	FUNCTION_38	IF_2	ELSE_2	CALL_7
0x4000b0e	      0xe800000000	                          call 0x4000b13	       294	show-branch.c	FUNCTION_38	IF_2	ELSE_2	CALL_7
0x4000b13	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       298	show-branch.c	FUNCTION_38	CALL_9
0x4000b17	          0x4889c7	                            mov rdi, rax	       298	show-branch.c	FUNCTION_38	CALL_9
0x4000b1a	      0xe800000000	                          call 0x4000b1f	       298	show-branch.c	FUNCTION_38	CALL_9
0x4000b1f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       299	show-branch.c	FUNCTION_38	CALL_10
0x4000b23	          0x4889c7	                            mov rdi, rax	       299	show-branch.c	FUNCTION_38	CALL_10
0x4000b26	      0xe800000000	                          call 0x4000b2b	       299	show-branch.c	FUNCTION_38	CALL_10
0x4000b2b	              0x90	                                     nop	       300	show-branch.c	FUNCTION_38
0x4000b2c	        0x488b45f8	                mov rax, qword [rbp - 8]	       300	show-branch.c	FUNCTION_38
0x4000b30	    0x644833042528	                xor rax, qword fs:[0x28]	       300	show-branch.c	FUNCTION_38
0x4000b39	            0x7405	                            je 0x4000b40	       300	show-branch.c	FUNCTION_38
0x4000b3b	      0xe800000000	                          call 0x4000b40	       300	show-branch.c	FUNCTION_38
0x4000b40	              0xc9	                                   leave	       300	show-branch.c	FUNCTION_38
0x4000b41	              0xc3	                                     ret	       300	show-branch.c	FUNCTION_38
join_revs	functions,0:ELSE,0:SWITCH,0:WHILE,3:IF,7:FOR,2:DO,0:CALL,6	181
0x4000770	              0x55	                                push rbp	       199	show-branch.c	FUNCTION_37
0x4000771	          0x4889e5	                            mov rbp, rsp	       199	show-branch.c	FUNCTION_37
0x4000774	        0x4883ec70	                           sub rsp, 0x70	       199	show-branch.c	FUNCTION_37
0x4000778	        0x48897da8	             mov qword [rbp - 0x58], rdi	       199	show-branch.c	FUNCTION_37
0x400077c	        0x488975a0	             mov qword [rbp - 0x60], rsi	       199	show-branch.c	FUNCTION_37
0x4000780	          0x89559c	             mov dword [rbp - 0x64], edx	       199	show-branch.c	FUNCTION_37
0x4000783	          0x894d98	             mov dword [rbp - 0x68], ecx	       199	show-branch.c	FUNCTION_37
0x4000786	          0x8b459c	             mov eax, dword [rbp - 0x64]	       200	show-branch.c	FUNCTION_37
0x4000789	          0x83c002	                              add eax, 2	       200	show-branch.c	FUNCTION_37
0x400078c	      0xba01000000	                              mov edx, 1	       200	show-branch.c	FUNCTION_37
0x4000791	            0x89c1	                            mov ecx, eax	       200	show-branch.c	FUNCTION_37
0x4000793	            0xd3e2	                             shl edx, cl	       200	show-branch.c	FUNCTION_37
0x4000795	            0x89d0	                            mov eax, edx	       200	show-branch.c	FUNCTION_37
0x4000797	          0x83e801	                              sub eax, 1	       200	show-branch.c	FUNCTION_37
0x400079a	          0x8945b8	             mov dword [rbp - 0x48], eax	       200	show-branch.c	FUNCTION_37
0x400079d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       201	show-branch.c	FUNCTION_37
0x40007a0	          0x83e0fc	                     and eax, 0xfffffffc	       201	show-branch.c	FUNCTION_37
0x40007a3	          0x8945bc	             mov dword [rbp - 0x44], eax	       201	show-branch.c	FUNCTION_37
0x40007a6	      0xe936010000	                           jmp 0x40008e1	       203	show-branch.c	FUNCTION_37	WHILE_1
0x40007ab	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       205	show-branch.c	FUNCTION_37	WHILE_1	CALL_1
0x40007af	          0x488b00	                    mov rax, qword [rax]	       205	show-branch.c	FUNCTION_37	WHILE_1	CALL_1
0x40007b2	          0x4889c7	                            mov rdi, rax	       205	show-branch.c	FUNCTION_37	WHILE_1	CALL_1
0x40007b5	      0xe82bfbffff	                    call sym.interesting	       205	show-branch.c	FUNCTION_37	WHILE_1	CALL_1
0x40007ba	          0x4885c0	                           test rax, rax	       205	show-branch.c	FUNCTION_37	WHILE_1	CALL_1
0x40007bd	           0xf95c0	                                setne al	       205	show-branch.c	FUNCTION_37	WHILE_1	CALL_1
0x40007c0	           0xfb6c0	                           movzx eax, al	       205	show-branch.c	FUNCTION_37	WHILE_1	CALL_1
0x40007c3	          0x8945c0	             mov dword [rbp - 0x40], eax	       205	show-branch.c	FUNCTION_37	WHILE_1	CALL_1
0x40007c6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       206	show-branch.c	FUNCTION_37	WHILE_1	CALL_2
0x40007ca	          0x4889c7	                            mov rdi, rax	       206	show-branch.c	FUNCTION_37	WHILE_1	CALL_2
0x40007cd	      0xe800000000	                          call 0x40007d2	       206	show-branch.c	FUNCTION_37	WHILE_1	CALL_2
0x40007d2	        0x488945e0	             mov qword [rbp - 0x20], rax	       206	show-branch.c	FUNCTION_37	WHILE_1	CALL_2
0x40007d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       207	show-branch.c	FUNCTION_37	WHILE_1
0x40007da	            0x8b00	                    mov eax, dword [rax]	       207	show-branch.c	FUNCTION_37	WHILE_1
0x40007dc	          0xc1e804	                              shr eax, 4	       207	show-branch.c	FUNCTION_37	WHILE_1
0x40007df	      0x25ffffff07	                      and eax, 0x7ffffff	       207	show-branch.c	FUNCTION_37	WHILE_1
0x40007e4	          0x2345b8	             and eax, dword [rbp - 0x48]	       207	show-branch.c	FUNCTION_37	WHILE_1
0x40007e7	          0x8945b0	             mov dword [rbp - 0x50], eax	       207	show-branch.c	FUNCTION_37	WHILE_1
0x40007ea	        0x837dc000	               cmp dword [rbp - 0x40], 0	       209	show-branch.c	FUNCTION_37	WHILE_1	IF_1
0x40007ee	            0x750b	                           jne 0x40007fb	       209	show-branch.c	FUNCTION_37	WHILE_1	IF_1
0x40007f0	        0x837d9800	               cmp dword [rbp - 0x68], 0	       209	show-branch.c	FUNCTION_37	WHILE_1	IF_1
0x40007f4	            0x7f05	                            jg 0x40007fb	       209	show-branch.c	FUNCTION_37	WHILE_1	IF_1
0x40007f6	      0xe9f6000000	                           jmp 0x40008f1	       210	show-branch.c	FUNCTION_37	WHILE_1	IF_1
0x40007fb	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       212	show-branch.c	FUNCTION_37	WHILE_1	CALL_3
0x40007ff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       212	show-branch.c	FUNCTION_37	WHILE_1	CALL_3
0x4000803	          0x4889d6	                            mov rsi, rdx	       212	show-branch.c	FUNCTION_37	WHILE_1	CALL_3
0x4000806	          0x4889c7	                            mov rdi, rax	       212	show-branch.c	FUNCTION_37	WHILE_1	CALL_3
0x4000809	      0xe822ffffff	                      call sym.mark_seen	       212	show-branch.c	FUNCTION_37	WHILE_1	CALL_3
0x400080e	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       213	show-branch.c	FUNCTION_37	WHILE_1	IF_2
0x4000811	          0x2345bc	             and eax, dword [rbp - 0x44]	       213	show-branch.c	FUNCTION_37	WHILE_1	IF_2
0x4000814	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	       213	show-branch.c	FUNCTION_37	WHILE_1	IF_2
0x4000817	            0x7504	                           jne 0x400081d	       213	show-branch.c	FUNCTION_37	WHILE_1	IF_2
0x4000819	        0x834db001	                or dword [rbp - 0x50], 1	       214	show-branch.c	FUNCTION_37	WHILE_1	IF_2
0x400081d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       215	show-branch.c	FUNCTION_37	WHILE_1
0x4000821	        0x488b4030	            mov rax, qword [rax + 0x30] 	       215	show-branch.c	FUNCTION_37	WHILE_1
0x4000825	        0x488945c8	             mov qword [rbp - 0x38], rax	       215	show-branch.c	FUNCTION_37	WHILE_1
0x4000829	      0xe9a8000000	                           jmp 0x40008d6	       217	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x400082e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       218	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x4000832	          0x488b00	                    mov rax, qword [rax]	       218	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x4000835	        0x488945e8	             mov qword [rbp - 0x18], rax	       218	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x4000839	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       219	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x400083d	            0x8b00	                    mov eax, dword [rax]	       219	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x400083f	          0xc1e804	                              shr eax, 4	       219	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x4000842	      0x25ffffff07	                      and eax, 0x7ffffff	       219	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x4000847	          0x8945c4	             mov dword [rbp - 0x3c], eax	       219	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x400084a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       220	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x400084e	        0x488b4008	                mov rax, qword [rax + 8]	       220	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x4000852	        0x488945c8	             mov qword [rbp - 0x38], rax	       220	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x4000856	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       221	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	IF_3
0x4000859	          0x2345b0	             and eax, dword [rbp - 0x50]	       221	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	IF_3
0x400085c	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	       221	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	IF_3
0x400085f	            0x7502	                           jne 0x4000863	       221	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	IF_3
0x4000861	            0xeb73	                           jmp 0x40008d6	       222	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	IF_3
0x4000863	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       223	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	CALL_4
0x4000867	          0x4889c7	                            mov rdi, rax	       223	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	CALL_4
0x400086a	      0xe8edf9ffff	                   call sym.parse_commit	       223	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	CALL_4
0x400086f	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       224	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	IF_4	CALL_5
0x4000873	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       224	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	IF_4	CALL_5
0x4000877	          0x4889d6	                            mov rsi, rdx	       224	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	IF_4	CALL_5
0x400087a	          0x4889c7	                            mov rdi, rax	       224	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	IF_4	CALL_5
0x400087d	      0xe8aefeffff	                      call sym.mark_seen	       224	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	IF_4	CALL_5
0x4000882	            0x85c0	                           test eax, eax	       224	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	IF_4	CALL_5
0x4000884	            0x740a	                            je 0x4000890	       224	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	IF_4	CALL_5
0x4000886	        0x837dc000	               cmp dword [rbp - 0x40], 0	       224	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	IF_4	CALL_5
0x400088a	            0x7504	                           jne 0x4000890	       224	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	IF_4	CALL_5
0x400088c	        0x836d9801	               sub dword [rbp - 0x68], 1	       225	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	IF_4
0x4000890	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       226	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x4000894	            0x8b00	                    mov eax, dword [rax]	       226	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x4000896	          0xc1e804	                              shr eax, 4	       226	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x4000899	      0x25ffffff07	                      and eax, 0x7ffffff	       226	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x400089e	           0xb45b0	              or eax, dword [rbp - 0x50]	       226	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x40008a1	      0x25ffffff07	                      and eax, 0x7ffffff	       226	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x40008a6	            0x89c2	                            mov edx, eax	       226	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x40008a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       226	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x40008ac	    0x81e2ffffff07	                      and edx, 0x7ffffff	       226	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x40008b2	            0x89d1	                            mov ecx, edx	       226	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x40008b4	          0xc1e104	                              shl ecx, 4	       226	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x40008b7	            0x8b10	                    mov edx, dword [rax]	       226	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x40008b9	    0x81e20f000080	                     and edx, 0x8000000f	       226	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x40008bf	             0x9ca	                             or edx, ecx	       226	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x40008c1	            0x8910	                    mov dword [rax], edx	       226	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x40008c3	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       227	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	CALL_6
0x40008c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       227	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	CALL_6
0x40008cb	          0x4889d6	                            mov rsi, rdx	       227	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	CALL_6
0x40008ce	          0x4889c7	                            mov rdi, rax	       227	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	CALL_6
0x40008d1	      0xe800000000	                          call 0x40008d6	       227	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2	CALL_6
0x40008d6	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       217	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x40008db	     0xf854dffffff	                           jne 0x400082e	       217	show-branch.c	FUNCTION_37	WHILE_1	WHILE_2
0x40008e1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       203	show-branch.c	FUNCTION_37	WHILE_1
0x40008e5	          0x488b00	                    mov rax, qword [rax]	       203	show-branch.c	FUNCTION_37	WHILE_1
0x40008e8	          0x4885c0	                           test rax, rax	       203	show-branch.c	FUNCTION_37	WHILE_1
0x40008eb	     0xf85bafeffff	                           jne 0x40007ab	       203	show-branch.c	FUNCTION_37	WHILE_1
0x40008f1	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       239	show-branch.c	FUNCTION_37	FOR_1
0x40008f8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       241	show-branch.c	FUNCTION_37	FOR_1	FOR_2
0x40008fc	          0x488b00	                    mov rax, qword [rax]	       241	show-branch.c	FUNCTION_37	FOR_1	FOR_2
0x40008ff	        0x488945d0	             mov qword [rbp - 0x30], rax	       241	show-branch.c	FUNCTION_37	FOR_1	FOR_2
0x4000903	      0xe9bb000000	                           jmp 0x40009c3	       241	show-branch.c	FUNCTION_37	FOR_1	FOR_2
0x4000908	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       242	show-branch.c	FUNCTION_37	FOR_1	FOR_2
0x400090c	          0x488b00	                    mov rax, qword [rax]	       242	show-branch.c	FUNCTION_37	FOR_1	FOR_2
0x400090f	        0x488945f0	             mov qword [rbp - 0x10], rax	       242	show-branch.c	FUNCTION_37	FOR_1	FOR_2
0x4000913	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       245	show-branch.c	FUNCTION_37	FOR_1	FOR_2	IF_5
0x4000917	            0x8b00	                    mov eax, dword [rax]	       245	show-branch.c	FUNCTION_37	FOR_1	FOR_2	IF_5
0x4000919	          0xc1e804	                              shr eax, 4	       245	show-branch.c	FUNCTION_37	FOR_1	FOR_2	IF_5
0x400091c	      0x25ffffff07	                      and eax, 0x7ffffff	       245	show-branch.c	FUNCTION_37	FOR_1	FOR_2	IF_5
0x4000921	          0x2345bc	             and eax, dword [rbp - 0x44]	       245	show-branch.c	FUNCTION_37	FOR_1	FOR_2	IF_5
0x4000924	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	       245	show-branch.c	FUNCTION_37	FOR_1	FOR_2	IF_5
0x4000927	            0x7415	                            je 0x400093e	       245	show-branch.c	FUNCTION_37	FOR_1	FOR_2	IF_5
0x4000929	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       246	show-branch.c	FUNCTION_37	FOR_1	FOR_2	IF_5
0x400092d	            0x8b00	                    mov eax, dword [rax]	       246	show-branch.c	FUNCTION_37	FOR_1	FOR_2	IF_5
0x400092f	          0xc1e804	                              shr eax, 4	       246	show-branch.c	FUNCTION_37	FOR_1	FOR_2	IF_5
0x4000932	      0x25ffffff07	                      and eax, 0x7ffffff	       246	show-branch.c	FUNCTION_37	FOR_1	FOR_2	IF_5
0x4000937	          0x83e001	                              and eax, 1	       246	show-branch.c	FUNCTION_37	FOR_1	FOR_2	IF_5
0x400093a	            0x85c0	                           test eax, eax	       245	show-branch.c	FUNCTION_37	FOR_1	FOR_2	IF_5
0x400093c	            0x7478	                            je 0x40009b6	       245	show-branch.c	FUNCTION_37	FOR_1	FOR_2	IF_5
0x400093e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       255	show-branch.c	FUNCTION_37	FOR_1	FOR_2
0x4000942	        0x488b4030	            mov rax, qword [rax + 0x30] 	       255	show-branch.c	FUNCTION_37	FOR_1	FOR_2
0x4000946	        0x488945d8	             mov qword [rbp - 0x28], rax	       255	show-branch.c	FUNCTION_37	FOR_1	FOR_2
0x400094a	            0xeb61	                           jmp 0x40009ad	       256	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3
0x400094c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       257	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3
0x4000950	          0x488b00	                    mov rax, qword [rax]	       257	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3
0x4000953	        0x488945f8	                mov qword [rbp - 8], rax	       257	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3
0x4000957	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       258	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3
0x400095b	        0x488b4008	                mov rax, qword [rax + 8]	       258	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3
0x400095f	        0x488945d8	             mov qword [rbp - 0x28], rax	       258	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3
0x4000963	        0x488b45f8	                mov rax, qword [rbp - 8]	       259	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x4000967	            0x8b00	                    mov eax, dword [rax]	       259	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x4000969	          0xc1e804	                              shr eax, 4	       259	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x400096c	      0x25ffffff07	                      and eax, 0x7ffffff	       259	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x4000971	          0x83e001	                              and eax, 1	       259	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x4000974	            0x85c0	                           test eax, eax	       259	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x4000976	            0x7535	                           jne 0x40009ad	       259	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x4000978	        0x488b45f8	                mov rax, qword [rbp - 8]	       260	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x400097c	            0x8b00	                    mov eax, dword [rax]	       260	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x400097e	          0xc1e804	                              shr eax, 4	       260	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x4000981	      0x25ffffff07	                      and eax, 0x7ffffff	       260	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x4000986	          0x83c801	                               or eax, 1	       260	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x4000989	            0x89c2	                            mov edx, eax	       260	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x400098b	        0x488b45f8	                mov rax, qword [rbp - 8]	       260	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x400098f	    0x81e2ffffff07	                      and edx, 0x7ffffff	       260	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x4000995	            0x89d1	                            mov ecx, edx	       260	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x4000997	          0xc1e104	                              shl ecx, 4	       260	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x400099a	            0x8b10	                    mov edx, dword [rax]	       260	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x400099c	    0x81e20f000080	                     and edx, 0x8000000f	       260	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x40009a2	             0x9ca	                             or edx, ecx	       260	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x40009a4	            0x8910	                    mov dword [rax], edx	       260	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x40009a6	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	       261	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3	IF_6
0x40009ad	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       256	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3
0x40009b2	            0x7598	                           jne 0x400094c	       256	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3
0x40009b4	            0xeb01	                           jmp 0x40009b7	       256	show-branch.c	FUNCTION_37	FOR_1	FOR_2	WHILE_3
0x40009b6	              0x90	                                     nop	       247	show-branch.c	FUNCTION_37	FOR_1	FOR_2	IF_5
0x40009b7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       241	show-branch.c	FUNCTION_37	FOR_1	FOR_2
0x40009bb	        0x488b4008	                mov rax, qword [rax + 8]	       241	show-branch.c	FUNCTION_37	FOR_1	FOR_2
0x40009bf	        0x488945d0	             mov qword [rbp - 0x30], rax	       241	show-branch.c	FUNCTION_37	FOR_1	FOR_2
0x40009c3	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       241	show-branch.c	FUNCTION_37	FOR_1	FOR_2
0x40009c8	     0xf853affffff	                           jne 0x4000908	       241	show-branch.c	FUNCTION_37	FOR_1	FOR_2
0x40009ce	        0x837db400	               cmp dword [rbp - 0x4c], 0	       265	show-branch.c	FUNCTION_37	FOR_1	IF_7
0x40009d2	            0x7405	                            je 0x40009d9	       265	show-branch.c	FUNCTION_37	FOR_1	IF_7
0x40009d4	      0xe918ffffff	                           jmp 0x40008f1	       267	show-branch.c	FUNCTION_37	FOR_1
0x40009d9	              0x90	                                     nop	       266	show-branch.c	FUNCTION_37	FOR_1	IF_7
0x40009da	              0x90	                                     nop	       268	show-branch.c	FUNCTION_37
0x40009db	              0xc9	                                   leave	       268	show-branch.c	FUNCTION_37
0x40009dc	              0xc3	                                     ret	       268	show-branch.c	FUNCTION_37
hashcmp	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:FOR,0:DO,0:CALL,1	13
0x400020d	              0x55	                                push rbp	       974	cache.h	FUNCTION_79
0x400020e	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_79
0x4000211	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_79
0x4000215	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_79
0x4000219	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_79
0x400021d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_79	CALL_1
0x4000221	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_79	CALL_1
0x4000225	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_79	CALL_1
0x400022a	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_79	CALL_1
0x400022d	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_79	CALL_1
0x4000230	      0xe800000000	                          call 0x4000235	       975	cache.h	FUNCTION_79	CALL_1
0x4000235	              0xc9	                                   leave	       976	cache.h	FUNCTION_79
0x4000236	              0xc3	                                     ret	       976	cache.h	FUNCTION_79
omit_in_dense	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,3:FOR,2:DO,0:CALL,0	51
0x40015c6	              0x55	                                push rbp	       561	show-branch.c	FUNCTION_54
0x40015c7	          0x4889e5	                            mov rbp, rsp	       561	show-branch.c	FUNCTION_54
0x40015ca	        0x48897de8	             mov qword [rbp - 0x18], rdi	       561	show-branch.c	FUNCTION_54
0x40015ce	        0x488975e0	             mov qword [rbp - 0x20], rsi	       561	show-branch.c	FUNCTION_54
0x40015d2	          0x8955dc	             mov dword [rbp - 0x24], edx	       561	show-branch.c	FUNCTION_54
0x40015d5	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       568	show-branch.c	FUNCTION_54	FOR_1
0x40015dc	            0xeb28	                           jmp 0x4001606	       568	show-branch.c	FUNCTION_54	FOR_1
0x40015de	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       569	show-branch.c	FUNCTION_54	FOR_1	IF_1
0x40015e1	            0x4898	                                    cdqe	       569	show-branch.c	FUNCTION_54	FOR_1	IF_1
0x40015e3	    0x488d14c50000	                        lea rdx, [rax*8]	       569	show-branch.c	FUNCTION_54	FOR_1	IF_1
0x40015eb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       569	show-branch.c	FUNCTION_54	FOR_1	IF_1
0x40015ef	          0x4801d0	                            add rax, rdx	       569	show-branch.c	FUNCTION_54	FOR_1	IF_1
0x40015f2	          0x488b00	                    mov rax, qword [rax]	       569	show-branch.c	FUNCTION_54	FOR_1	IF_1
0x40015f5	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       569	show-branch.c	FUNCTION_54	FOR_1	IF_1
0x40015f9	            0x7507	                           jne 0x4001602	       569	show-branch.c	FUNCTION_54	FOR_1	IF_1
0x40015fb	      0xb800000000	                              mov eax, 0	       570	show-branch.c	FUNCTION_54	FOR_1	IF_1
0x4001600	            0xeb64	                           jmp 0x4001666	       570	show-branch.c	FUNCTION_54	FOR_1	IF_1
0x4001602	        0x8345f401	                add dword [rbp - 0xc], 1	       568	show-branch.c	FUNCTION_54	FOR_1
0x4001606	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       568	show-branch.c	FUNCTION_54	FOR_1
0x4001609	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       568	show-branch.c	FUNCTION_54	FOR_1
0x400160c	            0x7cd0	                            jl 0x40015de	       568	show-branch.c	FUNCTION_54	FOR_1
0x400160e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       571	show-branch.c	FUNCTION_54
0x4001612	            0x8b00	                    mov eax, dword [rax]	       571	show-branch.c	FUNCTION_54
0x4001614	          0xc1e804	                              shr eax, 4	       571	show-branch.c	FUNCTION_54
0x4001617	      0x25ffffff07	                      and eax, 0x7ffffff	       571	show-branch.c	FUNCTION_54
0x400161c	          0x8945fc	                mov dword [rbp - 4], eax	       571	show-branch.c	FUNCTION_54
0x400161f	    0xc745f8000000	                  mov dword [rbp - 8], 0	       572	show-branch.c	FUNCTION_54	FOR_2
0x4001626	          0x8b45f8	                mov eax, dword [rbp - 8]	       572	show-branch.c	FUNCTION_54	FOR_2
0x4001629	          0x8945f4	              mov dword [rbp - 0xc], eax	       572	show-branch.c	FUNCTION_54	FOR_2
0x400162c	            0xeb1e	                           jmp 0x400164c	       572	show-branch.c	FUNCTION_54	FOR_2
0x400162e	          0x8b55fc	                mov edx, dword [rbp - 4]	       573	show-branch.c	FUNCTION_54	FOR_2	IF_2
0x4001631	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       573	show-branch.c	FUNCTION_54	FOR_2	IF_2
0x4001634	          0x83c002	                              add eax, 2	       573	show-branch.c	FUNCTION_54	FOR_2	IF_2
0x4001637	            0x89c1	                            mov ecx, eax	       573	show-branch.c	FUNCTION_54	FOR_2	IF_2
0x4001639	            0xd3ea	                             shr edx, cl	       573	show-branch.c	FUNCTION_54	FOR_2	IF_2
0x400163b	            0x89d0	                            mov eax, edx	       573	show-branch.c	FUNCTION_54	FOR_2	IF_2
0x400163d	          0x83e001	                              and eax, 1	       573	show-branch.c	FUNCTION_54	FOR_2	IF_2
0x4001640	            0x85c0	                           test eax, eax	       573	show-branch.c	FUNCTION_54	FOR_2	IF_2
0x4001642	            0x7404	                            je 0x4001648	       573	show-branch.c	FUNCTION_54	FOR_2	IF_2
0x4001644	        0x8345f801	                  add dword [rbp - 8], 1	       574	show-branch.c	FUNCTION_54	FOR_2	IF_2
0x4001648	        0x8345f401	                add dword [rbp - 0xc], 1	       572	show-branch.c	FUNCTION_54	FOR_2
0x400164c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       572	show-branch.c	FUNCTION_54	FOR_2
0x400164f	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       572	show-branch.c	FUNCTION_54	FOR_2
0x4001652	            0x7cda	                            jl 0x400162e	       572	show-branch.c	FUNCTION_54	FOR_2
0x4001654	        0x837df801	                  cmp dword [rbp - 8], 1	       576	show-branch.c	FUNCTION_54	IF_3
0x4001658	            0x7507	                           jne 0x4001661	       576	show-branch.c	FUNCTION_54	IF_3
0x400165a	      0xb801000000	                              mov eax, 1	       577	show-branch.c	FUNCTION_54	IF_3
0x400165f	            0xeb05	                           jmp 0x4001666	       577	show-branch.c	FUNCTION_54	IF_3
0x4001661	      0xb800000000	                              mov eax, 0	       578	show-branch.c	FUNCTION_54
0x4001666	              0x5d	                                 pop rbp	       579	show-branch.c	FUNCTION_54
0x4001667	              0xc3	                                     ret	       579	show-branch.c	FUNCTION_54
append_matching_ref	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,5:FOR,1:DO,0:CALL,7	78
0x4000ff8	              0x55	                                push rbp	       429	show-branch.c	FUNCTION_47
0x4000ff9	          0x4889e5	                            mov rbp, rsp	       429	show-branch.c	FUNCTION_47
0x4000ffc	        0x4883ec30	                           sub rsp, 0x30	       429	show-branch.c	FUNCTION_47
0x4001000	        0x48897de8	             mov qword [rbp - 0x18], rdi	       429	show-branch.c	FUNCTION_47
0x4001004	        0x488975e0	             mov qword [rbp - 0x20], rsi	       429	show-branch.c	FUNCTION_47
0x4001008	          0x8955dc	             mov dword [rbp - 0x24], edx	       429	show-branch.c	FUNCTION_47
0x400100b	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       429	show-branch.c	FUNCTION_47
0x400100f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       435	show-branch.c	FUNCTION_47	CALL_1
0x4001013	          0x4889c7	                            mov rdi, rax	       435	show-branch.c	FUNCTION_47	CALL_1
0x4001016	      0xe800000000	                          call 0x400101b	       435	show-branch.c	FUNCTION_47	CALL_1
0x400101b	          0x8945f4	              mov dword [rbp - 0xc], eax	       435	show-branch.c	FUNCTION_47	CALL_1
0x400101e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       436	show-branch.c	FUNCTION_47	FOR_1
0x4001022	        0x488945f8	                mov qword [rbp - 8], rax	       436	show-branch.c	FUNCTION_47	FOR_1
0x4001026	            0xeb17	                           jmp 0x400103f	       436	show-branch.c	FUNCTION_47	FOR_1
0x4001028	        0x488b45f8	                mov rax, qword [rbp - 8]	       437	show-branch.c	FUNCTION_47	FOR_1	IF_1
0x400102c	        0x488d5001	                      lea rdx, [rax + 1]	       437	show-branch.c	FUNCTION_47	FOR_1	IF_1
0x4001030	        0x488955f8	                mov qword [rbp - 8], rdx	       437	show-branch.c	FUNCTION_47	FOR_1	IF_1
0x4001034	           0xfb600	                   movzx eax, byte [rax]	       437	show-branch.c	FUNCTION_47	FOR_1	IF_1
0x4001037	            0x3c2f	                            cmp al, 0x2f	       437	show-branch.c	FUNCTION_47	FOR_1	IF_1
0x4001039	            0x7504	                           jne 0x400103f	       437	show-branch.c	FUNCTION_47	FOR_1	IF_1
0x400103b	        0x836df401	                sub dword [rbp - 0xc], 1	       438	show-branch.c	FUNCTION_47	FOR_1	IF_1
0x400103f	        0x488b45f8	                mov rax, qword [rbp - 8]	       436	show-branch.c	FUNCTION_47	FOR_1
0x4001043	           0xfb600	                   movzx eax, byte [rax]	       436	show-branch.c	FUNCTION_47	FOR_1
0x4001046	            0x84c0	                             test al, al	       436	show-branch.c	FUNCTION_47	FOR_1
0x4001048	            0x740b	                            je 0x4001055	       436	show-branch.c	FUNCTION_47	FOR_1
0x400104a	    0x8b0500000000	            mov eax, dword [0x04001050] 	       436	show-branch.c	FUNCTION_47	FOR_1
0x4001050	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       436	show-branch.c	FUNCTION_47	FOR_1
0x4001053	            0x7cd3	                            jl 0x4001028	       436	show-branch.c	FUNCTION_47	FOR_1
0x4001055	        0x488b45f8	                mov rax, qword [rbp - 8]	       439	show-branch.c	FUNCTION_47	IF_2
0x4001059	           0xfb600	                   movzx eax, byte [rax]	       439	show-branch.c	FUNCTION_47	IF_2
0x400105c	            0x84c0	                             test al, al	       439	show-branch.c	FUNCTION_47	IF_2
0x400105e	            0x750a	                           jne 0x400106a	       439	show-branch.c	FUNCTION_47	IF_2
0x4001060	      0xb800000000	                              mov eax, 0	       440	show-branch.c	FUNCTION_47	IF_2
0x4001065	      0xe99a000000	                           jmp 0x4001104	       440	show-branch.c	FUNCTION_47	IF_2
0x400106a	    0x488b05000000	            mov rax, qword [0x04001071] 	       441	show-branch.c	FUNCTION_47	IF_3	CALL_2
0x4001071	        0x488b4df8	                mov rcx, qword [rbp - 8]	       441	show-branch.c	FUNCTION_47	IF_3	CALL_2
0x4001075	      0xba00000000	                              mov edx, 0	       441	show-branch.c	FUNCTION_47	IF_3	CALL_2
0x400107a	          0x4889ce	                            mov rsi, rcx	       441	show-branch.c	FUNCTION_47	IF_3	CALL_2
0x400107d	          0x4889c7	                            mov rdi, rax	       441	show-branch.c	FUNCTION_47	IF_3	CALL_2
0x4001080	      0xe800000000	                          call 0x4001085	       441	show-branch.c	FUNCTION_47	IF_3	CALL_2
0x4001085	            0x85c0	                           test eax, eax	       441	show-branch.c	FUNCTION_47	IF_3	CALL_2
0x4001087	            0x7407	                            je 0x4001090	       441	show-branch.c	FUNCTION_47	IF_3	CALL_2
0x4001089	      0xb800000000	                              mov eax, 0	       442	show-branch.c	FUNCTION_47	IF_3
0x400108e	            0xeb74	                           jmp 0x4001104	       442	show-branch.c	FUNCTION_47	IF_3
0x4001090	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       443	show-branch.c	FUNCTION_47	IF_4	CALL_3
0x4001094	      0xbe00000000	                              mov esi, 0	       443	show-branch.c	FUNCTION_47	IF_4	CALL_3
0x4001099	          0x4889c7	                            mov rdi, rax	       443	show-branch.c	FUNCTION_47	IF_4	CALL_3
0x400109c	      0xe800000000	                          call 0x40010a1	       443	show-branch.c	FUNCTION_47	IF_4	CALL_3
0x40010a1	            0x85c0	                           test eax, eax	       443	show-branch.c	FUNCTION_47	IF_4	CALL_3
0x40010a3	            0x7419	                            je 0x40010be	       443	show-branch.c	FUNCTION_47	IF_4	CALL_3
0x40010a5	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       444	show-branch.c	FUNCTION_47	CALL_4
0x40010a9	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       444	show-branch.c	FUNCTION_47	CALL_4
0x40010ac	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       444	show-branch.c	FUNCTION_47	CALL_4
0x40010b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       444	show-branch.c	FUNCTION_47	CALL_4
0x40010b4	          0x4889c7	                            mov rdi, rax	       444	show-branch.c	FUNCTION_47	CALL_4
0x40010b7	      0xe86dfdffff	                call sym.append_head_ref	       444	show-branch.c	FUNCTION_47	CALL_4
0x40010bc	            0xeb46	                           jmp 0x4001104	       444	show-branch.c	FUNCTION_47	CALL_4
0x40010be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       445	show-branch.c	FUNCTION_47	IF_5	CALL_5
0x40010c2	      0xbe00000000	                              mov esi, 0	       445	show-branch.c	FUNCTION_47	IF_5	CALL_5
0x40010c7	          0x4889c7	                            mov rdi, rax	       445	show-branch.c	FUNCTION_47	IF_5	CALL_5
0x40010ca	      0xe800000000	                          call 0x40010cf	       445	show-branch.c	FUNCTION_47	IF_5	CALL_5
0x40010cf	            0x85c0	                           test eax, eax	       445	show-branch.c	FUNCTION_47	IF_5	CALL_5
0x40010d1	            0x7419	                            je 0x40010ec	       445	show-branch.c	FUNCTION_47	IF_5	CALL_5
0x40010d3	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       446	show-branch.c	FUNCTION_47	CALL_6
0x40010d7	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       446	show-branch.c	FUNCTION_47	CALL_6
0x40010da	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       446	show-branch.c	FUNCTION_47	CALL_6
0x40010de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       446	show-branch.c	FUNCTION_47	CALL_6
0x40010e2	          0x4889c7	                            mov rdi, rax	       446	show-branch.c	FUNCTION_47	CALL_6
0x40010e5	      0xe8bdfeffff	                 call sym.append_tag_ref	       446	show-branch.c	FUNCTION_47	CALL_6
0x40010ea	            0xeb18	                           jmp 0x4001104	       446	show-branch.c	FUNCTION_47	CALL_6
0x40010ec	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       447	show-branch.c	FUNCTION_47	CALL_7
0x40010f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       447	show-branch.c	FUNCTION_47	CALL_7
0x40010f4	      0xba00000000	                              mov edx, 0	       447	show-branch.c	FUNCTION_47	CALL_7
0x40010f9	          0x4889ce	                            mov rsi, rcx	       447	show-branch.c	FUNCTION_47	CALL_7
0x40010fc	          0x4889c7	                            mov rdi, rax	       447	show-branch.c	FUNCTION_47	CALL_7
0x40010ff	      0xe818fcffff	                     call sym.append_ref	       447	show-branch.c	FUNCTION_47	CALL_7
0x4001104	              0xc9	                                   leave	       448	show-branch.c	FUNCTION_47
0x4001105	              0xc3	                                     ret	       448	show-branch.c	FUNCTION_47
oidcmp	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:FOR,0:DO,0:CALL,1	12
0x4000237	              0x55	                                push rbp	       979	cache.h	FUNCTION_80
0x4000238	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_80
0x400023b	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_80
0x400023f	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_80
0x4000243	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_80
0x4000247	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_80	CALL_1
0x400024b	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_80	CALL_1
0x400024f	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_80	CALL_1
0x4000252	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_80	CALL_1
0x4000255	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_80	CALL_1
0x400025a	              0xc9	                                   leave	       981	cache.h	FUNCTION_80
0x400025b	              0xc3	                                     ret	       981	cache.h	FUNCTION_80
snarf_refs	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,2:FOR,0:DO,0:CALL,4	32
0x4001106	              0x55	                                push rbp	       451	show-branch.c	FUNCTION_48
0x4001107	          0x4889e5	                            mov rbp, rsp	       451	show-branch.c	FUNCTION_48
0x400110a	        0x4883ec20	                           sub rsp, 0x20	       451	show-branch.c	FUNCTION_48
0x400110e	          0x897dec	             mov dword [rbp - 0x14], edi	       451	show-branch.c	FUNCTION_48
0x4001111	          0x8975e8	             mov dword [rbp - 0x18], esi	       451	show-branch.c	FUNCTION_48
0x4001114	        0x837dec00	               cmp dword [rbp - 0x14], 0	       452	show-branch.c	FUNCTION_48	IF_1
0x4001118	            0x742a	                            je 0x4001144	       452	show-branch.c	FUNCTION_48	IF_1
0x400111a	    0x8b0500000000	            mov eax, dword [0x04001120] 	       453	show-branch.c	FUNCTION_48	IF_1
0x4001120	          0x8945f8	                mov dword [rbp - 8], eax	       453	show-branch.c	FUNCTION_48	IF_1
0x4001123	      0xbe00000000	                              mov esi, 0	       455	show-branch.c	FUNCTION_48	IF_1	CALL_1
0x4001128	      0xbf00000000	                              mov edi, 0	       455	show-branch.c	FUNCTION_48	IF_1	CALL_1
0x400112d	      0xe800000000	                          call 0x4001132	       455	show-branch.c	FUNCTION_48	IF_1	CALL_1
0x4001132	    0x8b1500000000	            mov edx, dword [0x04001138] 	       456	show-branch.c	FUNCTION_48	IF_1	CALL_2
0x4001138	          0x8b45f8	                mov eax, dword [rbp - 8]	       456	show-branch.c	FUNCTION_48	IF_1	CALL_2
0x400113b	            0x89d6	                            mov esi, edx	       456	show-branch.c	FUNCTION_48	IF_1	CALL_2
0x400113d	            0x89c7	                            mov edi, eax	       456	show-branch.c	FUNCTION_48	IF_1	CALL_2
0x400113f	      0xe89cfbffff	                 call sym.sort_ref_range	       456	show-branch.c	FUNCTION_48	IF_1	CALL_2
0x4001144	        0x837de800	               cmp dword [rbp - 0x18], 0	       458	show-branch.c	FUNCTION_48	IF_2
0x4001148	            0x742a	                            je 0x4001174	       458	show-branch.c	FUNCTION_48	IF_2
0x400114a	    0x8b0500000000	            mov eax, dword [0x04001150] 	       459	show-branch.c	FUNCTION_48	IF_2
0x4001150	          0x8945fc	                mov dword [rbp - 4], eax	       459	show-branch.c	FUNCTION_48	IF_2
0x4001153	      0xbe00000000	                              mov esi, 0	       461	show-branch.c	FUNCTION_48	IF_2	CALL_3
0x4001158	      0xbf00000000	                              mov edi, 0	       461	show-branch.c	FUNCTION_48	IF_2	CALL_3
0x400115d	      0xe800000000	                          call 0x4001162	       461	show-branch.c	FUNCTION_48	IF_2	CALL_3
0x4001162	    0x8b1500000000	            mov edx, dword [0x04001168] 	       462	show-branch.c	FUNCTION_48	IF_2	CALL_4
0x4001168	          0x8b45fc	                mov eax, dword [rbp - 4]	       462	show-branch.c	FUNCTION_48	IF_2	CALL_4
0x400116b	            0x89d6	                            mov esi, edx	       462	show-branch.c	FUNCTION_48	IF_2	CALL_4
0x400116d	            0x89c7	                            mov edi, eax	       462	show-branch.c	FUNCTION_48	IF_2	CALL_4
0x400116f	      0xe86cfbffff	                 call sym.sort_ref_range	       462	show-branch.c	FUNCTION_48	IF_2	CALL_4
0x4001174	              0x90	                                     nop	       464	show-branch.c	FUNCTION_48
0x4001175	              0xc9	                                   leave	       464	show-branch.c	FUNCTION_48
0x4001176	              0xc3	                                     ret	       464	show-branch.c	FUNCTION_48
strbuf_addstr	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:FOR,0:DO,0:CALL,2	17
0x400017f	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_61
0x4000180	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_61
0x4000183	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_61
0x4000187	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_61
0x400018b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_61
0x400018f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_61	CALL_2
0x4000193	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_61	CALL_2
0x4000196	      0xe800000000	                          call 0x400019b	       279	strbuf.h	FUNCTION_61	CALL_2
0x400019b	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_61	CALL_2
0x400019e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_61	CALL_2
0x40001a2	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_61	CALL_2
0x40001a6	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_61	CALL_2
0x40001a9	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_61	CALL_2
0x40001ac	      0xe800000000	                          call 0x40001b1	       279	strbuf.h	FUNCTION_61	CALL_2
0x40001b1	              0x90	                                     nop	       280	strbuf.h	FUNCTION_61
0x40001b2	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_61
0x40001b3	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_61
append_ref	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,4:FOR,1:DO,0:CALL,5	68
0x4000d1c	              0x55	                                push rbp	       362	show-branch.c	FUNCTION_43
0x4000d1d	          0x4889e5	                            mov rbp, rsp	       362	show-branch.c	FUNCTION_43
0x4000d20	              0x53	                                push rbx	       362	show-branch.c	FUNCTION_43
0x4000d21	        0x4883ec38	                           sub rsp, 0x38	       362	show-branch.c	FUNCTION_43
0x4000d25	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       362	show-branch.c	FUNCTION_43
0x4000d29	        0x488975d0	             mov qword [rbp - 0x30], rsi	       362	show-branch.c	FUNCTION_43
0x4000d2d	          0x8955cc	             mov dword [rbp - 0x34], edx	       362	show-branch.c	FUNCTION_43
0x4000d30	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       363	show-branch.c	FUNCTION_43	CALL_1
0x4000d34	      0xbe01000000	                              mov esi, 1	       363	show-branch.c	FUNCTION_43	CALL_1
0x4000d39	          0x4889c7	                            mov rdi, rax	       363	show-branch.c	FUNCTION_43	CALL_1
0x4000d3c	      0xe800000000	                          call 0x4000d41	       363	show-branch.c	FUNCTION_43	CALL_1
0x4000d41	        0x488945e8	             mov qword [rbp - 0x18], rax	       363	show-branch.c	FUNCTION_43	CALL_1
0x4000d45	      0x48837de800	               cmp qword [rbp - 0x18], 0	       366	show-branch.c	FUNCTION_43	IF_1
0x4000d4a	            0x750a	                           jne 0x4000d56	       366	show-branch.c	FUNCTION_43	IF_1
0x4000d4c	      0xb800000000	                              mov eax, 0	       367	show-branch.c	FUNCTION_43	IF_1
0x4000d51	      0xe9cc000000	                           jmp 0x4000e22	       367	show-branch.c	FUNCTION_43	IF_1
0x4000d56	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       369	show-branch.c	FUNCTION_43	IF_2
0x4000d5a	            0x7542	                           jne 0x4000d9e	       369	show-branch.c	FUNCTION_43	IF_2
0x4000d5c	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       371	show-branch.c	FUNCTION_43	IF_2	FOR_1
0x4000d63	            0xeb2e	                           jmp 0x4000d93	       371	show-branch.c	FUNCTION_43	IF_2	FOR_1
0x4000d65	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       372	show-branch.c	FUNCTION_43	IF_2	FOR_1	IF_3	CALL_2
0x4000d68	            0x4898	                                    cdqe	       372	show-branch.c	FUNCTION_43	IF_2	FOR_1	IF_3	CALL_2
0x4000d6a	    0x488b14c50000	                  mov rdx, qword [rax*8]	       372	show-branch.c	FUNCTION_43	IF_2	FOR_1	IF_3	CALL_2
0x4000d72	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       372	show-branch.c	FUNCTION_43	IF_2	FOR_1	IF_3	CALL_2
0x4000d76	          0x4889d6	                            mov rsi, rdx	       372	show-branch.c	FUNCTION_43	IF_2	FOR_1	IF_3	CALL_2
0x4000d79	          0x4889c7	                            mov rdi, rax	       372	show-branch.c	FUNCTION_43	IF_2	FOR_1	IF_3	CALL_2
0x4000d7c	      0xe800000000	                          call 0x4000d81	       372	show-branch.c	FUNCTION_43	IF_2	FOR_1	IF_3	CALL_2
0x4000d81	            0x85c0	                           test eax, eax	       372	show-branch.c	FUNCTION_43	IF_2	FOR_1	IF_3	CALL_2
0x4000d83	            0x750a	                           jne 0x4000d8f	       372	show-branch.c	FUNCTION_43	IF_2	FOR_1	IF_3	CALL_2
0x4000d85	      0xb800000000	                              mov eax, 0	       373	show-branch.c	FUNCTION_43	IF_2	FOR_1	IF_3
0x4000d8a	      0xe993000000	                           jmp 0x4000e22	       373	show-branch.c	FUNCTION_43	IF_2	FOR_1	IF_3
0x4000d8f	        0x8345e401	               add dword [rbp - 0x1c], 1	       371	show-branch.c	FUNCTION_43	IF_2	FOR_1
0x4000d93	    0x8b0500000000	            mov eax, dword [0x04000d99] 	       371	show-branch.c	FUNCTION_43	IF_2	FOR_1
0x4000d99	          0x3945e4	            cmp dword [rbp - 0x1c], eax 	       371	show-branch.c	FUNCTION_43	IF_2	FOR_1
0x4000d9c	            0x7cc7	                            jl 0x4000d65	       371	show-branch.c	FUNCTION_43	IF_2	FOR_1
0x4000d9e	    0x8b0500000000	            mov eax, dword [0x04000da4] 	       375	show-branch.c	FUNCTION_43	IF_4
0x4000da4	          0x83f818	                           cmp eax, 0x18	       375	show-branch.c	FUNCTION_43	IF_4
0x4000da7	            0x7e37	                           jle 0x4000de0	       375	show-branch.c	FUNCTION_43	IF_4
0x4000da9	      0xba19000000	                           mov edx, 0x19	       376	show-branch.c	FUNCTION_43	IF_4	CALL_4
0x4000dae	      0xbe00000000	                              mov esi, 0	       376	show-branch.c	FUNCTION_43	IF_4	CALL_4
0x4000db3	      0xbf00000000	                              mov edi, 0	       376	show-branch.c	FUNCTION_43	IF_4	CALL_4
0x4000db8	      0xe823f4ffff	                              call sym.Q	       376	show-branch.c	FUNCTION_43	IF_4	CALL_4
0x4000dbd	          0x4889c1	                            mov rcx, rax	       376	show-branch.c	FUNCTION_43	IF_4	CALL_4
0x4000dc0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       376	show-branch.c	FUNCTION_43	IF_4	CALL_4
0x4000dc4	      0xba19000000	                           mov edx, 0x19	       376	show-branch.c	FUNCTION_43	IF_4	CALL_4
0x4000dc9	          0x4889c6	                            mov rsi, rax	       376	show-branch.c	FUNCTION_43	IF_4	CALL_4
0x4000dcc	          0x4889cf	                            mov rdi, rcx	       376	show-branch.c	FUNCTION_43	IF_4	CALL_4
0x4000dcf	      0xb800000000	                              mov eax, 0	       376	show-branch.c	FUNCTION_43	IF_4	CALL_4
0x4000dd4	      0xe800000000	                          call 0x4000dd9	       376	show-branch.c	FUNCTION_43	IF_4	CALL_4
0x4000dd9	      0xb800000000	                              mov eax, 0	       379	show-branch.c	FUNCTION_43	IF_4
0x4000dde	            0xeb42	                           jmp 0x4000e22	       379	show-branch.c	FUNCTION_43	IF_4
0x4000de0	    0x8b1d00000000	            mov ebx, dword [0x04000de6] 	       381	show-branch.c	FUNCTION_43	CALL_5
0x4000de6	          0x8d4301	                      lea eax, [rbx + 1]	       381	show-branch.c	FUNCTION_43	CALL_5
0x4000de9	    0x890500000000	            mov dword [0x04000def], eax 	       381	show-branch.c	FUNCTION_43	CALL_5
0x4000def	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       381	show-branch.c	FUNCTION_43	CALL_5
0x4000df3	          0x4889c7	                            mov rdi, rax	       381	show-branch.c	FUNCTION_43	CALL_5
0x4000df6	      0xe800000000	                          call 0x4000dfb	       381	show-branch.c	FUNCTION_43	CALL_5
0x4000dfb	          0x4889c2	                            mov rdx, rax	       381	show-branch.c	FUNCTION_43	CALL_5
0x4000dfe	          0x4863c3	                         movsxd rax, ebx	       381	show-branch.c	FUNCTION_43	CALL_5
0x4000e01	    0x488914c50000	                  mov qword [rax*8], rdx	       381	show-branch.c	FUNCTION_43	CALL_5
0x4000e09	    0x8b0500000000	            mov eax, dword [0x04000e0f] 	       382	show-branch.c	FUNCTION_43
0x4000e0f	            0x4898	                                    cdqe	       382	show-branch.c	FUNCTION_43
0x4000e11	    0x48c704c50000	                    mov qword [rax*8], 0	       382	show-branch.c	FUNCTION_43
0x4000e1d	      0xb800000000	                              mov eax, 0	       383	show-branch.c	FUNCTION_43
0x4000e22	        0x4883c438	                           add rsp, 0x38	       384	show-branch.c	FUNCTION_43
0x4000e26	              0x5b	                                 pop rbx	       384	show-branch.c	FUNCTION_43
0x4000e27	              0x5d	                                 pop rbp	       384	show-branch.c	FUNCTION_43
0x4000e28	              0xc3	                                     ret	       384	show-branch.c	FUNCTION_43
find_digit_prefix	functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:FOR,1:DO,0:CALL,0	32
0x4000b42	              0x55	                                push rbp	       306	show-branch.c	FUNCTION_39
0x4000b43	          0x4889e5	                            mov rbp, rsp	       306	show-branch.c	FUNCTION_39
0x4000b46	        0x48897de8	             mov qword [rbp - 0x18], rdi	       306	show-branch.c	FUNCTION_39
0x4000b4a	        0x488975e0	             mov qword [rbp - 0x20], rsi	       306	show-branch.c	FUNCTION_39
0x4000b4e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       311	show-branch.c	FUNCTION_39	FOR_1
0x4000b52	        0x488945f8	                mov qword [rbp - 8], rax	       311	show-branch.c	FUNCTION_39	FOR_1
0x4000b56	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       311	show-branch.c	FUNCTION_39	FOR_1
0x4000b5d	            0xeb1f	                           jmp 0x4000b7e	       311	show-branch.c	FUNCTION_39	FOR_1
0x4000b5f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       314	show-branch.c	FUNCTION_39	FOR_1
0x4000b62	            0x89d0	                            mov eax, edx	       314	show-branch.c	FUNCTION_39	FOR_1
0x4000b64	          0xc1e002	                              shl eax, 2	       314	show-branch.c	FUNCTION_39	FOR_1
0x4000b67	             0x1d0	                            add eax, edx	       314	show-branch.c	FUNCTION_39	FOR_1
0x4000b69	             0x1c0	                            add eax, eax	       314	show-branch.c	FUNCTION_39	FOR_1
0x4000b6b	            0x89c2	                            mov edx, eax	       314	show-branch.c	FUNCTION_39	FOR_1
0x4000b6d	         0xfbe45f3	             movsx eax, byte [rbp - 0xd]	       314	show-branch.c	FUNCTION_39	FOR_1
0x4000b71	             0x1d0	                            add eax, edx	       314	show-branch.c	FUNCTION_39	FOR_1
0x4000b73	          0x83e830	                           sub eax, 0x30	       314	show-branch.c	FUNCTION_39	FOR_1
0x4000b76	          0x8945f4	              mov dword [rbp - 0xc], eax	       314	show-branch.c	FUNCTION_39	FOR_1
0x4000b79	      0x488345f801	                  add qword [rbp - 8], 1	       313	show-branch.c	FUNCTION_39	FOR_1
0x4000b7e	        0x488b45f8	                mov rax, qword [rbp - 8]	       312	show-branch.c	FUNCTION_39	FOR_1
0x4000b82	           0xfb600	                   movzx eax, byte [rax]	       312	show-branch.c	FUNCTION_39	FOR_1
0x4000b85	          0x8845f3	                mov byte [rbp - 0xd], al	       312	show-branch.c	FUNCTION_39	FOR_1
0x4000b88	        0x807df32f	              cmp byte [rbp - 0xd], 0x2f	       311	show-branch.c	FUNCTION_39	FOR_1
0x4000b8c	            0x7e06	                           jle 0x4000b94	       311	show-branch.c	FUNCTION_39	FOR_1
0x4000b8e	        0x807df339	              cmp byte [rbp - 0xd], 0x39	       312	show-branch.c	FUNCTION_39	FOR_1
0x4000b92	            0x7ecb	                           jle 0x4000b5f	       312	show-branch.c	FUNCTION_39	FOR_1
0x4000b94	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       315	show-branch.c	FUNCTION_39
0x4000b98	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       315	show-branch.c	FUNCTION_39
0x4000b9b	            0x8910	                    mov dword [rax], edx	       315	show-branch.c	FUNCTION_39
0x4000b9d	        0x488b45f8	                mov rax, qword [rbp - 8]	       316	show-branch.c	FUNCTION_39
0x4000ba1	              0x5d	                                 pop rbp	       317	show-branch.c	FUNCTION_39
0x4000ba2	              0xc3	                                     ret	       317	show-branch.c	FUNCTION_39
