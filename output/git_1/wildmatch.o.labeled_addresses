sane_iscase	functions,0:IF,2:WHILE,0:FOR,0:DO,0:ELSE,1:SWITCH,0:CALL,0	29
0x4000074	              0x55	                                push rbp	       999	git-compat-util.h	FUNCTION_22
0x4000075	          0x4889e5	                            mov rbp, rsp	       999	git-compat-util.h	FUNCTION_22
0x4000078	          0x897dfc	                mov dword [rbp - 4], edi	       999	git-compat-util.h	FUNCTION_22
0x400007b	          0x8975f8	                mov dword [rbp - 8], esi	       999	git-compat-util.h	FUNCTION_22
0x400007e	          0x8b45fc	                mov eax, dword [rbp - 4]	      1000	git-compat-util.h	FUNCTION_22	IF_1
0x4000081	           0xfb6c0	                           movzx eax, al	      1000	git-compat-util.h	FUNCTION_22	IF_1
0x4000084	            0x4898	                                    cdqe	      1000	git-compat-util.h	FUNCTION_22	IF_1
0x4000086	     0xfb680000000	                   movzx eax, byte [rax]	      1000	git-compat-util.h	FUNCTION_22	IF_1
0x400008d	           0xfb6c0	                           movzx eax, al	      1000	git-compat-util.h	FUNCTION_22	IF_1
0x4000090	          0x83e004	                              and eax, 4	      1000	git-compat-util.h	FUNCTION_22	IF_1
0x4000093	            0x85c0	                           test eax, eax	      1000	git-compat-util.h	FUNCTION_22	IF_1
0x4000095	            0x7507	                           jne 0x400009e	      1000	git-compat-util.h	FUNCTION_22	IF_1
0x4000097	      0xb800000000	                              mov eax, 0	      1001	git-compat-util.h	FUNCTION_22	IF_1
0x400009c	            0xeb24	                           jmp 0x40000c2	      1001	git-compat-util.h	FUNCTION_22	IF_1
0x400009e	        0x837df800	                  cmp dword [rbp - 8], 0	      1003	git-compat-util.h	FUNCTION_22	IF_2
0x40000a2	            0x7410	                            je 0x40000b4	      1003	git-compat-util.h	FUNCTION_22	IF_2
0x40000a4	          0x8b45fc	                mov eax, dword [rbp - 4]	      1004	git-compat-util.h	FUNCTION_22	IF_2
0x40000a7	          0x83e020	                           and eax, 0x20	      1004	git-compat-util.h	FUNCTION_22	IF_2
0x40000aa	            0x85c0	                           test eax, eax	      1004	git-compat-util.h	FUNCTION_22	IF_2
0x40000ac	           0xf95c0	                                setne al	      1004	git-compat-util.h	FUNCTION_22	IF_2
0x40000af	           0xfb6c0	                           movzx eax, al	      1004	git-compat-util.h	FUNCTION_22	IF_2
0x40000b2	            0xeb0e	                           jmp 0x40000c2	      1004	git-compat-util.h	FUNCTION_22	IF_2
0x40000b4	          0x8b45fc	                mov eax, dword [rbp - 4]	      1006	git-compat-util.h	FUNCTION_22	ELSE_1
0x40000b7	          0x83e020	                           and eax, 0x20	      1006	git-compat-util.h	FUNCTION_22	ELSE_1
0x40000ba	            0x85c0	                           test eax, eax	      1006	git-compat-util.h	FUNCTION_22	ELSE_1
0x40000bc	           0xf94c0	                                 sete al	      1006	git-compat-util.h	FUNCTION_22	ELSE_1
0x40000bf	           0xfb6c0	                           movzx eax, al	      1006	git-compat-util.h	FUNCTION_22	ELSE_1
0x40000c2	              0x5d	                                 pop rbp	      1007	git-compat-util.h	FUNCTION_22
0x40000c3	              0xc3	                                     ret	      1007	git-compat-util.h	FUNCTION_22
dowild	functions,0:IF,66:WHILE,3:FOR,2:DO,1:ELSE,22:SWITCH,1:CALL,4	873
0x40000c4	              0x55	                                push rbp	        56	wildmatch.c	FUNCTION_28
0x40000c5	          0x4889e5	                            mov rbp, rsp	        56	wildmatch.c	FUNCTION_28
0x40000c8	        0x4883ec60	                           sub rsp, 0x60	        56	wildmatch.c	FUNCTION_28
0x40000cc	        0x48897db8	             mov qword [rbp - 0x48], rdi	        56	wildmatch.c	FUNCTION_28
0x40000d0	        0x488975b0	             mov qword [rbp - 0x50], rsi	        56	wildmatch.c	FUNCTION_28
0x40000d4	          0x8955ac	             mov dword [rbp - 0x54], edx	        56	wildmatch.c	FUNCTION_28
0x40000d7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        58	wildmatch.c	FUNCTION_28
0x40000db	        0x488945e0	             mov qword [rbp - 0x20], rax	        58	wildmatch.c	FUNCTION_28
0x40000df	      0xe9af0b0000	                           jmp 0x4000c93	        60	wildmatch.c	FUNCTION_28	FOR_1
0x40000e4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        63	wildmatch.c	FUNCTION_28	FOR_1	IF_1
0x40000e8	           0xfb600	                   movzx eax, byte [rax]	        63	wildmatch.c	FUNCTION_28	FOR_1	IF_1
0x40000eb	          0x8845cd	               mov byte [rbp - 0x33], al	        63	wildmatch.c	FUNCTION_28	FOR_1	IF_1
0x40000ee	        0x807dcd00	                cmp byte [rbp - 0x33], 0	        63	wildmatch.c	FUNCTION_28	FOR_1	IF_1
0x40000f2	            0x7510	                           jne 0x4000104	        63	wildmatch.c	FUNCTION_28	FOR_1	IF_1
0x40000f4	        0x807dcc2a	            cmp byte [rbp - 0x34], 0x2a 	        63	wildmatch.c	FUNCTION_28	FOR_1	IF_1
0x40000f8	            0x740a	                            je 0x4000104	        63	wildmatch.c	FUNCTION_28	FOR_1	IF_1
0x40000fa	      0xb8ffffffff	                     mov eax, 0xffffffff	        64	wildmatch.c	FUNCTION_28	FOR_1	IF_1
0x40000ff	      0xe9b20b0000	                           jmp 0x4000cb6	        64	wildmatch.c	FUNCTION_28	FOR_1	IF_1
0x4000104	          0x8b45ac	             mov eax, dword [rbp - 0x54]	        65	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x4000107	          0x83e001	                              and eax, 1	        65	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x400010a	            0x85c0	                           test eax, eax	        65	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x400010c	            0x7432	                            je 0x4000140	        65	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x400010e	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	        65	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x4000112	          0x83e080	                     and eax, 0xffffff80	        65	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x4000115	            0x85c0	                           test eax, eax	        65	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x4000117	            0x7527	                           jne 0x4000140	        65	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x4000119	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	        65	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x400011d	      0xbe00000000	                              mov esi, 0	        65	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x4000122	            0x89c7	                            mov edi, eax	        65	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x4000124	      0xe84bffffff	                    call sym.sane_iscase	        65	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x4000129	            0x85c0	                           test eax, eax	        65	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x400012b	            0x7413	                            je 0x4000140	        65	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x400012d	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	        66	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x4000131	      0xbe20000000	                           mov esi, 0x20	        66	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x4000136	            0x89c7	                            mov edi, eax	        66	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x4000138	      0xe803ffffff	                      call sym.sane_case	        66	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x400013d	          0x8845cd	               mov byte [rbp - 0x33], al	        66	wildmatch.c	FUNCTION_28	FOR_1	IF_2
0x4000140	          0x8b45ac	             mov eax, dword [rbp - 0x54]	        67	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x4000143	          0x83e001	                              and eax, 1	        67	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x4000146	            0x85c0	                           test eax, eax	        67	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x4000148	            0x7432	                            je 0x400017c	        67	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x400014a	         0xfb645cc	            movzx eax, byte [rbp - 0x34]	        67	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x400014e	          0x83e080	                     and eax, 0xffffff80	        67	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x4000151	            0x85c0	                           test eax, eax	        67	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x4000153	            0x7527	                           jne 0x400017c	        67	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x4000155	         0xfb645cc	            movzx eax, byte [rbp - 0x34]	        67	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x4000159	      0xbe00000000	                              mov esi, 0	        67	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x400015e	            0x89c7	                            mov edi, eax	        67	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x4000160	      0xe80fffffff	                    call sym.sane_iscase	        67	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x4000165	            0x85c0	                           test eax, eax	        67	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x4000167	            0x7413	                            je 0x400017c	        67	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x4000169	         0xfb645cc	            movzx eax, byte [rbp - 0x34]	        68	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x400016d	      0xbe20000000	                           mov esi, 0x20	        68	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x4000172	            0x89c7	                            mov edi, eax	        68	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x4000174	      0xe8c7feffff	                      call sym.sane_case	        68	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x4000179	          0x8845cc	               mov byte [rbp - 0x34], al	        68	wildmatch.c	FUNCTION_28	FOR_1	IF_3
0x400017c	         0xfb645cc	            movzx eax, byte [rbp - 0x34]	        69	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x4000180	          0x83f83f	                           cmp eax, 0x3f	        69	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x4000183	            0x7440	                            je 0x40001c5	        69	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x4000185	          0x83f83f	                           cmp eax, 0x3f	        69	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x4000188	            0x7f07	                            jg 0x4000191	        69	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x400018a	          0x83f82a	                           cmp eax, 0x2a	        69	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x400018d	            0x7458	                            je 0x40001e7	        69	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x400018f	            0xeb1d	                           jmp 0x40001ae	        69	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x4000191	          0x83f85b	                           cmp eax, 0x5b	        69	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x4000194	     0xf8405030000	                            je 0x400049f	        69	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x400019a	          0x83f85c	                           cmp eax, 0x5c	        69	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x400019d	            0x750f	                           jne 0x40001ae	        69	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x400019f	      0x488345b801	               add qword [rbp - 0x48], 1	        73	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x40001a4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        73	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x40001a8	           0xfb600	                   movzx eax, byte [rax]	        73	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x40001ab	          0x8845cc	               mov byte [rbp - 0x34], al	        73	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x40001ae	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	        76	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_4
0x40001b2	          0x3a45cc	               cmp al, byte [rbp - 0x34]	        76	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_4
0x40001b5	     0xf84c70a0000	                            je 0x4000c82	        76	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_4
0x40001bb	      0xb801000000	                              mov eax, 1	        77	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_4
0x40001c0	      0xe9f10a0000	                           jmp 0x4000cb6	        77	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_4
0x40001c5	          0x8b45ac	             mov eax, dword [rbp - 0x54]	        81	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_5
0x40001c8	          0x83e002	                              and eax, 2	        81	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_5
0x40001cb	            0x85c0	                           test eax, eax	        81	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_5
0x40001cd	     0xf84b20a0000	                            je 0x4000c85	        81	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_5
0x40001d3	        0x807dcd2f	            cmp byte [rbp - 0x33], 0x2f 	        81	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_5
0x40001d7	     0xf85a80a0000	                           jne 0x4000c85	        81	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_5
0x40001dd	      0xb801000000	                              mov eax, 1	        82	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_5
0x40001e2	      0xe9cf0a0000	                           jmp 0x4000cb6	        82	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_5
0x40001e7	      0x488345b801	               add qword [rbp - 0x48], 1	        85	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6
0x40001ec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        85	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6
0x40001f0	           0xfb600	                   movzx eax, byte [rax]	        85	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6
0x40001f3	            0x3c2a	                            cmp al, 0x2a	        85	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6
0x40001f5	     0xf85bd000000	                           jne 0x40002b8	        85	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6
0x40001fb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        86	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6
0x40001ff	        0x4883e802	                              sub rax, 2	        86	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6
0x4000203	        0x488945e8	             mov qword [rbp - 0x18], rax	        86	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6
0x4000207	      0x488345b801	               add qword [rbp - 0x48], 1	        87	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	WHILE_1
0x400020c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        87	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	WHILE_1
0x4000210	           0xfb600	                   movzx eax, byte [rax]	        87	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	WHILE_1
0x4000213	            0x3c2a	                            cmp al, 0x2a	        87	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	WHILE_1
0x4000215	            0x74f0	                            je 0x4000207	        87	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	WHILE_1
0x4000217	          0x8b45ac	             mov eax, dword [rbp - 0x54]	        88	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	IF_7
0x400021a	          0x83e002	                              and eax, 2	        88	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	IF_7
0x400021d	            0x85c0	                           test eax, eax	        88	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	IF_7
0x400021f	            0x750c	                           jne 0x400022d	        88	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	IF_7
0x4000221	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	        90	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	IF_7
0x4000228	      0xe99c000000	                           jmp 0x40002c9	        90	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	IF_7
0x400022d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        91	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000231	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        91	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000235	            0x720b	                            jb 0x4000242	        91	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000237	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        91	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x400023b	           0xfb600	                   movzx eax, byte [rax]	        91	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x400023e	            0x3c2f	                            cmp al, 0x2f	        91	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000240	            0x756c	                           jne 0x40002ae	        91	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000242	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        92	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000246	           0xfb600	                   movzx eax, byte [rax]	        92	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000249	            0x84c0	                             test al, al	        91	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x400024b	            0x7425	                            je 0x4000272	        91	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x400024d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        92	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000251	           0xfb600	                   movzx eax, byte [rax]	        92	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000254	            0x3c2f	                            cmp al, 0x2f	        92	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000256	            0x741a	                            je 0x4000272	        92	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000258	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        93	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x400025c	           0xfb600	                   movzx eax, byte [rax]	        93	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x400025f	            0x3c5c	                            cmp al, 0x5c	        92	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000261	            0x754b	                           jne 0x40002ae	        92	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000263	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        93	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000267	        0x4883c001	                              add rax, 1	        93	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x400026b	           0xfb600	                   movzx eax, byte [rax]	        93	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x400026e	            0x3c2f	                            cmp al, 0x2f	        93	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000270	            0x753c	                           jne 0x40002ae	        93	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x4000272	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       103	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8	IF_9
0x4000276	           0xfb600	                   movzx eax, byte [rax]	       103	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8	IF_9
0x4000279	            0x3c2f	                            cmp al, 0x2f	       103	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8	IF_9
0x400027b	            0x7528	                           jne 0x40002a5	       103	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8	IF_9
0x400027d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       104	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8	IF_9	CALL_1
0x4000281	        0x488d4801	                      lea rcx, [rax + 1]	       104	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8	IF_9	CALL_1
0x4000285	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       104	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8	IF_9	CALL_1
0x4000288	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       104	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8	IF_9	CALL_1
0x400028c	          0x4889c6	                            mov rsi, rax	       104	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8	IF_9	CALL_1
0x400028f	          0x4889cf	                            mov rdi, rcx	       104	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8	IF_9	CALL_1
0x4000292	      0xe82dfeffff	                         call sym.dowild	       104	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8	IF_9	CALL_1
0x4000297	            0x85c0	                           test eax, eax	       103	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8	IF_9
0x4000299	            0x750a	                           jne 0x40002a5	       103	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8	IF_9
0x400029b	      0xb800000000	                              mov eax, 0	       105	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8	IF_9
0x40002a0	      0xe9110a0000	                           jmp 0x4000cb6	       105	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8	IF_9
0x40002a5	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       106	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x40002ac	            0xeb1b	                           jmp 0x40002c9	       106	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_1	IF_8
0x40002ae	      0xb802000000	                              mov eax, 2	       108	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_2
0x40002b3	      0xe9fe090000	                           jmp 0x4000cb6	       108	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_6	ELSE_2
0x40002b8	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       111	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3
0x40002bb	          0x83e002	                              and eax, 2	       111	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3
0x40002be	            0x85c0	                           test eax, eax	       111	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3
0x40002c0	           0xf94c0	                                 sete al	       111	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3
0x40002c3	           0xfb6c0	                           movzx eax, al	       111	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3
0x40002c6	          0x8945d4	             mov dword [rbp - 0x2c], eax	       111	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3
0x40002c9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       112	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10
0x40002cd	           0xfb600	                   movzx eax, byte [rax]	       112	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10
0x40002d0	            0x84c0	                             test al, al	       112	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10
0x40002d2	            0x7530	                           jne 0x4000304	       112	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10
0x40002d4	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       115	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10	IF_11
0x40002d8	            0x7520	                           jne 0x40002fa	       115	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10	IF_11
0x40002da	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       116	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10	IF_11	IF_12	CALL_2
0x40002de	      0xbe2f000000	                           mov esi, 0x2f	       116	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10	IF_11	IF_12	CALL_2
0x40002e3	          0x4889c7	                            mov rdi, rax	       116	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10	IF_11	IF_12	CALL_2
0x40002e6	      0xe800000000	                          call 0x40002eb	       116	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10	IF_11	IF_12	CALL_2
0x40002eb	          0x4885c0	                           test rax, rax	       116	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10	IF_11	IF_12	CALL_2
0x40002ee	            0x740a	                            je 0x40002fa	       116	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10	IF_11	IF_12	CALL_2
0x40002f0	      0xb801000000	                              mov eax, 1	       117	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10	IF_11	IF_12
0x40002f5	      0xe9bc090000	                           jmp 0x4000cb6	       117	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10	IF_11	IF_12
0x40002fa	      0xb800000000	                              mov eax, 0	       119	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10
0x40002ff	      0xe9b2090000	                           jmp 0x4000cb6	       119	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10
0x4000304	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       120	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10
0x4000308	            0x753e	                           jne 0x4000348	       120	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10
0x400030a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       120	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10
0x400030e	           0xfb600	                   movzx eax, byte [rax]	       120	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10
0x4000311	            0x3c2f	                            cmp al, 0x2f	       120	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10
0x4000313	            0x7533	                           jne 0x4000348	       120	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_2	ELSE_3	IF_10
0x4000315	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       126	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_4	IF_13	CALL_3
0x4000319	      0xbe2f000000	                           mov esi, 0x2f	       126	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_4	IF_13	CALL_3
0x400031e	          0x4889c7	                            mov rdi, rax	       126	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_4	IF_13	CALL_3
0x4000321	      0xe800000000	                          call 0x4000326	       126	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_4	IF_13	CALL_3
0x4000326	        0x488945f0	             mov qword [rbp - 0x10], rax	       126	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_4	IF_13	CALL_3
0x400032a	      0x48837df000	               cmp qword [rbp - 0x10], 0	       127	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_4	IF_13	IF_14
0x400032f	            0x750a	                           jne 0x400033b	       127	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_4	IF_13	IF_14
0x4000331	      0xb801000000	                              mov eax, 1	       128	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_4	IF_13	IF_14
0x4000336	      0xe97b090000	                           jmp 0x4000cb6	       128	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_4	IF_13	IF_14
0x400033b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       129	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_4	IF_13
0x400033f	        0x488945b0	             mov qword [rbp - 0x50], rax	       129	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_4	IF_13
0x4000343	      0xe941090000	                           jmp 0x4000c89	       131	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	ELSE_4	IF_13
0x4000348	        0x807dcd00	                cmp byte [rbp - 0x33], 0	       134	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_15
0x400034c	     0xf8442010000	                            je 0x4000494	       134	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_15
0x4000352	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       144	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16
0x4000356	           0xfb600	                   movzx eax, byte [rax]	       144	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16
0x4000359	           0xfb6c0	                           movzx eax, al	       144	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16
0x400035c	            0x4898	                                    cdqe	       144	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16
0x400035e	     0xfb680000000	                   movzx eax, byte [rax]	       144	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16
0x4000365	           0xfb6c0	                           movzx eax, al	       144	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16
0x4000368	          0x83e008	                              and eax, 8	       144	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16
0x400036b	            0x85c0	                           test eax, eax	       144	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16
0x400036d	     0xf85c4000000	                           jne 0x4000437	       144	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16
0x4000373	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       145	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16
0x4000377	           0xfb600	                   movzx eax, byte [rax]	       145	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16
0x400037a	          0x8845cc	               mov byte [rbp - 0x34], al	       145	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16
0x400037d	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       146	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x4000380	          0x83e001	                              and eax, 1	       146	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x4000383	            0x85c0	                           test eax, eax	       146	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x4000385	            0x747e	                            je 0x4000405	       146	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x4000387	         0xfb645cc	            movzx eax, byte [rbp - 0x34]	       146	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x400038b	          0x83e080	                     and eax, 0xffffff80	       146	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x400038e	            0x85c0	                           test eax, eax	       146	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x4000390	            0x7573	                           jne 0x4000405	       146	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x4000392	         0xfb645cc	            movzx eax, byte [rbp - 0x34]	       146	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x4000396	      0xbe00000000	                              mov esi, 0	       146	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x400039b	            0x89c7	                            mov edi, eax	       146	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x400039d	      0xe8d2fcffff	                    call sym.sane_iscase	       146	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x40003a2	            0x85c0	                           test eax, eax	       146	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x40003a4	            0x745f	                            je 0x4000405	       146	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x40003a6	         0xfb645cc	            movzx eax, byte [rbp - 0x34]	       147	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x40003aa	      0xbe20000000	                           mov esi, 0x20	       147	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x40003af	            0x89c7	                            mov edi, eax	       147	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x40003b1	      0xe88afcffff	                      call sym.sane_case	       147	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x40003b6	          0x8845cc	               mov byte [rbp - 0x34], al	       147	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_17
0x40003b9	            0xeb4a	                           jmp 0x4000405	       148	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3
0x40003bb	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       150	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003be	          0x83e001	                              and eax, 1	       150	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003c1	            0x85c0	                           test eax, eax	       150	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003c3	            0x7432	                            je 0x40003f7	       150	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003c5	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       150	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003c9	          0x83e080	                     and eax, 0xffffff80	       150	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003cc	            0x85c0	                           test eax, eax	       150	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003ce	            0x7527	                           jne 0x40003f7	       150	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003d0	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       150	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003d4	      0xbe00000000	                              mov esi, 0	       150	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003d9	            0x89c7	                            mov edi, eax	       150	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003db	      0xe894fcffff	                    call sym.sane_iscase	       150	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003e0	            0x85c0	                           test eax, eax	       150	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003e2	            0x7413	                            je 0x40003f7	       150	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003e4	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       151	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003e8	      0xbe20000000	                           mov esi, 0x20	       151	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003ed	            0x89c7	                            mov edi, eax	       151	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003ef	      0xe84cfcffff	                      call sym.sane_case	       151	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003f4	          0x8845cd	               mov byte [rbp - 0x33], al	       151	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_18
0x40003f7	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       152	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_19
0x40003fb	          0x3a45cc	               cmp al, byte [rbp - 0x34]	       152	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_19
0x40003fe	            0x7423	                            je 0x4000423	       152	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_19
0x4000400	      0x488345b001	               add qword [rbp - 0x50], 1	       154	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3
0x4000405	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       148	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3
0x4000409	           0xfb600	                   movzx eax, byte [rax]	       148	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3
0x400040c	          0x8845cd	               mov byte [rbp - 0x33], al	       148	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3
0x400040f	        0x807dcd00	                cmp byte [rbp - 0x33], 0	       148	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3
0x4000413	            0x740f	                            je 0x4000424	       148	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3
0x4000415	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       148	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3
0x4000419	            0x75a0	                           jne 0x40003bb	       148	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3
0x400041b	        0x807dcd2f	            cmp byte [rbp - 0x33], 0x2f 	       149	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3
0x400041f	            0x759a	                           jne 0x40003bb	       149	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3
0x4000421	            0xeb01	                           jmp 0x4000424	       149	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3
0x4000423	              0x90	                                     nop	       153	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	WHILE_3	IF_19
0x4000424	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       156	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_20
0x4000428	          0x3a45cc	               cmp al, byte [rbp - 0x34]	       156	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_20
0x400042b	            0x740a	                            je 0x4000437	       156	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_20
0x400042d	      0xb801000000	                              mov eax, 1	       157	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_20
0x4000432	      0xe97f080000	                           jmp 0x4000cb6	       157	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_16	IF_20
0x4000437	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       159	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_21	CALL_4
0x400043a	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       159	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_21	CALL_4
0x400043e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       159	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_21	CALL_4
0x4000442	          0x4889ce	                            mov rsi, rcx	       159	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_21	CALL_4
0x4000445	          0x4889c7	                            mov rdi, rax	       159	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_21	CALL_4
0x4000448	      0xe877fcffff	                         call sym.dowild	       159	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_21	CALL_4
0x400044d	          0x8945d0	             mov dword [rbp - 0x30], eax	       159	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_21	CALL_4
0x4000450	        0x837dd001	               cmp dword [rbp - 0x30], 1	       159	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_21	CALL_4
0x4000454	            0x7414	                            je 0x400046a	       159	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_21	CALL_4
0x4000456	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       160	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_21	IF_22
0x400045a	            0x7406	                            je 0x4000462	       160	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_21	IF_22
0x400045c	        0x837dd0fe	cmp dword [rbp - 0x30], 0xfffffffffffffffe	       160	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_21	IF_22
0x4000460	            0x741e	                            je 0x4000480	       160	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_21	IF_22
0x4000462	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       161	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_21	IF_22
0x4000465	      0xe94c080000	                           jmp 0x4000cb6	       161	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_21	IF_22
0x400046a	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       162	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	ELSE_5	IF_23
0x400046e	            0x7510	                           jne 0x4000480	       162	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	ELSE_5	IF_23
0x4000470	        0x807dcd2f	            cmp byte [rbp - 0x33], 0x2f 	       162	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	ELSE_5	IF_23
0x4000474	            0x750a	                           jne 0x4000480	       162	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	ELSE_5	IF_23
0x4000476	      0xb8feffffff	                     mov eax, 0xfffffffe	       163	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	ELSE_5	IF_23
0x400047b	      0xe936080000	                           jmp 0x4000cb6	       163	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	ELSE_5	IF_23
0x4000480	      0x488345b001	               add qword [rbp - 0x50], 1	       164	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2
0x4000485	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       164	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2
0x4000489	           0xfb600	                   movzx eax, byte [rax]	       164	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2
0x400048c	          0x8845cd	               mov byte [rbp - 0x33], al	       164	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2
0x400048f	      0xe9b4feffff	                           jmp 0x4000348	       165	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2
0x4000494	              0x90	                                     nop	       135	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	WHILE_2	IF_15
0x4000495	      0xb8ffffffff	                     mov eax, 0xffffffff	       166	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x400049a	      0xe917080000	                           jmp 0x4000cb6	       166	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x400049f	      0x488345b801	               add qword [rbp - 0x48], 1	       168	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x40004a4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       168	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x40004a8	           0xfb600	                   movzx eax, byte [rax]	       168	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x40004ab	          0x8845cc	               mov byte [rbp - 0x34], al	       168	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x40004ae	        0x807dcc5e	            cmp byte [rbp - 0x34], 0x5e 	       170	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_24
0x40004b2	            0x7504	                           jne 0x40004b8	       170	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_24
0x40004b4	        0xc645cc21	            mov byte [rbp - 0x34], 0x21 	       171	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_24
0x40004b8	        0x807dcc21	            cmp byte [rbp - 0x34], 0x21 	       174	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x40004bc	           0xf94c0	                                 sete al	       174	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x40004bf	           0xfb6c0	                           movzx eax, al	       174	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x40004c2	          0x8945d8	             mov dword [rbp - 0x28], eax	       174	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x40004c5	        0x837dd800	               cmp dword [rbp - 0x28], 0	       175	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_25
0x40004c9	            0x740f	                            je 0x40004da	       175	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_25
0x40004cb	      0x488345b801	               add qword [rbp - 0x48], 1	       177	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_25
0x40004d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       177	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_25
0x40004d4	           0xfb600	                   movzx eax, byte [rax]	       177	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_25
0x40004d7	          0x8845cc	               mov byte [rbp - 0x34], al	       177	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_25
0x40004da	        0xc645ce00	                mov byte [rbp - 0x32], 0	       179	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x40004de	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       180	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x40004e5	        0x807dcc00	                cmp byte [rbp - 0x34], 0	       182	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_26
0x40004e9	            0x750a	                           jne 0x40004f5	       182	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_26
0x40004eb	      0xb8ffffffff	                     mov eax, 0xffffffff	       183	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_26
0x40004f0	      0xe9c1070000	                           jmp 0x4000cb6	       183	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_26
0x40004f5	        0x807dcc5c	            cmp byte [rbp - 0x34], 0x5c 	       184	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_27
0x40004f9	            0x7538	                           jne 0x4000533	       184	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_27
0x40004fb	      0x488345b801	               add qword [rbp - 0x48], 1	       185	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_27
0x4000500	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       185	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_27
0x4000504	           0xfb600	                   movzx eax, byte [rax]	       185	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_27
0x4000507	          0x8845cc	               mov byte [rbp - 0x34], al	       185	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_27
0x400050a	        0x807dcc00	                cmp byte [rbp - 0x34], 0	       186	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_27	IF_28
0x400050e	            0x750a	                           jne 0x400051a	       186	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_27	IF_28
0x4000510	      0xb8ffffffff	                     mov eax, 0xffffffff	       187	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_27	IF_28
0x4000515	      0xe99c070000	                           jmp 0x4000cb6	       187	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_27	IF_28
0x400051a	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       188	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_27	IF_29
0x400051e	          0x3a45cc	               cmp al, byte [rbp - 0x34]	       188	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_27	IF_29
0x4000521	     0xf851c070000	                           jne 0x4000c43	       188	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_27	IF_29
0x4000527	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       189	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_27	IF_29
0x400052e	      0xe910070000	                           jmp 0x4000c43	       189	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	IF_27	IF_29
0x4000533	        0x807dcc2d	            cmp byte [rbp - 0x34], 0x2d 	       190	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x4000537	     0xf85dd000000	                           jne 0x400061a	       190	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x400053d	        0x807dce00	                cmp byte [rbp - 0x32], 0	       190	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x4000541	     0xf84d3000000	                            je 0x400061a	       190	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x4000547	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       190	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x400054b	        0x4883c001	                              add rax, 1	       190	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x400054f	           0xfb600	                   movzx eax, byte [rax]	       190	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x4000552	            0x84c0	                             test al, al	       190	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x4000554	     0xf84c0000000	                            je 0x400061a	       190	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x400055a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       190	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x400055e	        0x4883c001	                              add rax, 1	       190	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x4000562	           0xfb600	                   movzx eax, byte [rax]	       190	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x4000565	            0x3c5d	                            cmp al, 0x5d	       190	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x4000567	     0xf84ad000000	                            je 0x400061a	       190	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x400056d	      0x488345b801	               add qword [rbp - 0x48], 1	       191	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x4000572	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       191	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x4000576	           0xfb600	                   movzx eax, byte [rax]	       191	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x4000579	          0x8845cc	               mov byte [rbp - 0x34], al	       191	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x400057c	        0x807dcc5c	            cmp byte [rbp - 0x34], 0x5c 	       192	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_31
0x4000580	            0x751f	                           jne 0x40005a1	       192	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_31
0x4000582	      0x488345b801	               add qword [rbp - 0x48], 1	       193	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_31
0x4000587	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       193	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_31
0x400058b	           0xfb600	                   movzx eax, byte [rax]	       193	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_31
0x400058e	          0x8845cc	               mov byte [rbp - 0x34], al	       193	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_31
0x4000591	        0x807dcc00	                cmp byte [rbp - 0x34], 0	       194	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_31	IF_32
0x4000595	            0x750a	                           jne 0x40005a1	       194	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_31	IF_32
0x4000597	      0xb8ffffffff	                     mov eax, 0xffffffff	       195	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_31	IF_32
0x400059c	      0xe915070000	                           jmp 0x4000cb6	       195	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_31	IF_32
0x40005a1	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       197	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_33
0x40005a5	          0x3a45cc	               cmp al, byte [rbp - 0x34]	       197	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_33
0x40005a8	            0x7712	                            ja 0x40005bc	       197	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_33
0x40005aa	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       197	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_33
0x40005ae	          0x3a45ce	               cmp al, byte [rbp - 0x32]	       197	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_33
0x40005b1	            0x7209	                            jb 0x40005bc	       197	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_33
0x40005b3	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       198	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_33
0x40005ba	            0xeb55	                           jmp 0x4000611	       198	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	IF_33
0x40005bc	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       199	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005bf	          0x83e001	                              and eax, 1	       199	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005c2	            0x85c0	                           test eax, eax	       199	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005c4	            0x744b	                            je 0x4000611	       199	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005c6	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       199	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005ca	          0x83e080	                     and eax, 0xffffff80	       199	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005cd	            0x85c0	                           test eax, eax	       199	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005cf	            0x7540	                           jne 0x4000611	       199	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005d1	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       199	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005d5	      0xbe01000000	                              mov esi, 1	       199	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005da	            0x89c7	                            mov edi, eax	       199	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005dc	      0xe893faffff	                    call sym.sane_iscase	       199	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005e1	            0x85c0	                           test eax, eax	       199	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005e3	            0x742c	                            je 0x4000611	       199	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005e5	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       200	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005e9	      0xbe00000000	                              mov esi, 0	       200	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005ee	            0x89c7	                            mov edi, eax	       200	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005f0	      0xe84bfaffff	                      call sym.sane_case	       200	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005f5	          0x8845cf	               mov byte [rbp - 0x31], al	       200	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34
0x40005f8	         0xfb645cf	            movzx eax, byte [rbp - 0x31]	       201	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34	IF_35
0x40005fc	          0x3a45cc	               cmp al, byte [rbp - 0x34]	       201	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34	IF_35
0x40005ff	            0x7710	                            ja 0x4000611	       201	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34	IF_35
0x4000601	         0xfb645cf	            movzx eax, byte [rbp - 0x31]	       201	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34	IF_35
0x4000605	          0x3a45ce	               cmp al, byte [rbp - 0x32]	       201	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34	IF_35
0x4000608	            0x7207	                            jb 0x4000611	       201	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34	IF_35
0x400060a	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       202	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30	ELSE_7	IF_34	IF_35
0x4000611	        0xc645cc00	                mov byte [rbp - 0x34], 0	       204	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x4000615	      0xe929060000	                           jmp 0x4000c43	       204	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_6	IF_30
0x400061a	        0x807dcc5b	            cmp byte [rbp - 0x34], 0x5b 	       205	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36
0x400061e	     0xf850c060000	                           jne 0x4000c30	       205	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36
0x4000624	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       205	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36
0x4000628	        0x4883c001	                              add rax, 1	       205	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36
0x400062c	           0xfb600	                   movzx eax, byte [rax]	       205	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36
0x400062f	            0x3c3a	                            cmp al, 0x3a	       205	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36
0x4000631	     0xf85f9050000	                           jne 0x4000c30	       205	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36
0x4000637	      0x488345b802	               add qword [rbp - 0x48], 2	       208	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	FOR_2
0x400063c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       208	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	FOR_2
0x4000640	        0x488945f8	                mov qword [rbp - 8], rax	       208	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	FOR_2
0x4000644	            0xeb05	                           jmp 0x400064b	       208	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	FOR_2
0x4000646	      0x488345b801	               add qword [rbp - 0x48], 1	       208	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	FOR_2
0x400064b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       208	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	FOR_2
0x400064f	           0xfb600	                   movzx eax, byte [rax]	       208	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	FOR_2
0x4000652	          0x8845cc	               mov byte [rbp - 0x34], al	       208	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	FOR_2
0x4000655	        0x807dcc00	                cmp byte [rbp - 0x34], 0	       208	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	FOR_2
0x4000659	            0x7406	                            je 0x4000661	       208	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	FOR_2
0x400065b	        0x807dcc5d	            cmp byte [rbp - 0x34], 0x5d 	       208	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	FOR_2
0x400065f	            0x75e5	                           jne 0x4000646	       208	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	FOR_2
0x4000661	        0x807dcc00	                cmp byte [rbp - 0x34], 0	       209	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_37
0x4000665	            0x750a	                           jne 0x4000671	       209	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_37
0x4000667	      0xb8ffffffff	                     mov eax, 0xffffffff	       210	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_37
0x400066c	      0xe945060000	                           jmp 0x4000cb6	       210	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_37
0x4000671	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       211	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36
0x4000675	        0x488b45f8	                mov rax, qword [rbp - 8]	       211	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36
0x4000679	          0x4829c2	                            sub rdx, rax	       211	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36
0x400067c	          0x4889d0	                            mov rax, rdx	       211	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36
0x400067f	          0x83e801	                              sub eax, 1	       211	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36
0x4000682	          0x8945dc	             mov dword [rbp - 0x24], eax	       211	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36
0x4000685	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       212	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38
0x4000689	            0x780f	                            js 0x400069a	       212	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38
0x400068b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       212	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38
0x400068f	        0x4883e801	                              sub rax, 1	       212	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38
0x4000693	           0xfb600	                   movzx eax, byte [rax]	       212	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38
0x4000696	            0x3c3a	                            cmp al, 0x3a	       212	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38
0x4000698	            0x7429	                            je 0x40006c3	       212	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38
0x400069a	        0x488b45f8	                mov rax, qword [rbp - 8]	       214	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38
0x400069e	        0x4883e802	                              sub rax, 2	       214	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38
0x40006a2	        0x488945b8	             mov qword [rbp - 0x48], rax	       214	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38
0x40006a6	        0xc645cc5b	            mov byte [rbp - 0x34], 0x5b 	       215	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38
0x40006aa	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       216	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38	IF_39
0x40006ae	          0x3a45cc	               cmp al, byte [rbp - 0x34]	       216	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38	IF_39
0x40006b1	     0xf858b050000	                           jne 0x4000c42	       216	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38	IF_39
0x40006b7	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       217	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38	IF_39
0x40006be	      0xe97f050000	                           jmp 0x4000c42	       218	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38
0x40006c3	        0x837ddc05	               cmp dword [rbp - 0x24], 5	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006c7	            0x7567	                           jne 0x4000730	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006cd	           0xfb600	                   movzx eax, byte [rax]	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006d0	           0xfb6d0	                           movzx edx, al	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006d3	      0xb861000000	                           mov eax, 0x61	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006d8	           0xfbec0	                           movsx eax, al	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006db	            0x39c2	                            cmp edx, eax	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006dd	            0x7551	                           jne 0x4000730	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006df	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006e2	          0x4863d0	                         movsxd rdx, eax	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006e5	        0x488b45f8	                mov rax, qword [rbp - 8]	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006e9	      0xbe00000000	                              mov esi, 0	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006ee	          0x4889c7	                            mov rdi, rax	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006f1	      0xe800000000	                          call 0x40006f6	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006f6	            0x85c0	                           test eax, eax	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006f8	            0x7536	                           jne 0x4000730	       220	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40
0x40006fa	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       221	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40	IF_41
0x40006fe	          0x83e080	                     and eax, 0xffffff80	       221	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40	IF_41
0x4000701	            0x85c0	                           test eax, eax	       221	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40	IF_41
0x4000703	     0xf85ff040000	                           jne 0x4000c08	       221	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40	IF_41
0x4000709	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       221	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40	IF_41
0x400070d	            0x4898	                                    cdqe	       221	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40	IF_41
0x400070f	     0xfb680000000	                   movzx eax, byte [rax]	       221	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40	IF_41
0x4000716	           0xfb6c0	                           movzx eax, al	       221	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40	IF_41
0x4000719	          0x83e006	                              and eax, 6	       221	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40	IF_41
0x400071c	            0x85c0	                           test eax, eax	       221	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40	IF_41
0x400071e	     0xf84e4040000	                            je 0x4000c08	       221	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40	IF_41
0x4000724	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       222	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40	IF_41
0x400072b	      0xe9d8040000	                           jmp 0x4000c08	       221	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40	IF_41
0x4000730	        0x837ddc05	               cmp dword [rbp - 0x24], 5	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x4000734	            0x7567	                           jne 0x400079d	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x4000736	        0x488b45f8	                mov rax, qword [rbp - 8]	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x400073a	           0xfb600	                   movzx eax, byte [rax]	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x400073d	           0xfb6d0	                           movzx edx, al	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x4000740	      0xb861000000	                           mov eax, 0x61	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x4000745	           0xfbec0	                           movsx eax, al	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x4000748	            0x39c2	                            cmp edx, eax	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x400074a	            0x7551	                           jne 0x400079d	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x400074c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x400074f	          0x4863d0	                         movsxd rdx, eax	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x4000752	        0x488b45f8	                mov rax, qword [rbp - 8]	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x4000756	      0xbe00000000	                              mov esi, 0	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x400075b	          0x4889c7	                            mov rdi, rax	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x400075e	      0xe800000000	                          call 0x4000763	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x4000763	            0x85c0	                           test eax, eax	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x4000765	            0x7536	                           jne 0x400079d	       223	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42
0x4000767	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       224	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42	IF_43
0x400076b	          0x83e080	                     and eax, 0xffffff80	       224	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42	IF_43
0x400076e	            0x85c0	                           test eax, eax	       224	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42	IF_43
0x4000770	     0xf8595040000	                           jne 0x4000c0b	       224	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42	IF_43
0x4000776	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       224	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42	IF_43
0x400077a	            0x4898	                                    cdqe	       224	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42	IF_43
0x400077c	     0xfb680000000	                   movzx eax, byte [rax]	       224	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42	IF_43
0x4000783	           0xfb6c0	                           movzx eax, al	       224	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42	IF_43
0x4000786	          0x83e004	                              and eax, 4	       224	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42	IF_43
0x4000789	            0x85c0	                           test eax, eax	       224	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42	IF_43
0x400078b	     0xf847a040000	                            je 0x4000c0b	       224	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42	IF_43
0x4000791	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       225	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42	IF_43
0x4000798	      0xe96e040000	                           jmp 0x4000c0b	       224	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42	IF_43
0x400079d	        0x837ddc05	               cmp dword [rbp - 0x24], 5	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007a1	            0x754d	                           jne 0x40007f0	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007a7	           0xfb600	                   movzx eax, byte [rax]	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007aa	           0xfb6d0	                           movzx edx, al	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007ad	      0xb862000000	                           mov eax, 0x62	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007b2	           0xfbec0	                           movsx eax, al	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007b5	            0x39c2	                            cmp edx, eax	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007b7	            0x7537	                           jne 0x40007f0	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007b9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007bc	          0x4863d0	                         movsxd rdx, eax	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007c3	      0xbe00000000	                              mov esi, 0	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007c8	          0x4889c7	                            mov rdi, rax	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007cb	      0xe800000000	                          call 0x40007d0	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007d0	            0x85c0	                           test eax, eax	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007d2	            0x751c	                           jne 0x40007f0	       226	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44
0x40007d4	        0x807dcd20	            cmp byte [rbp - 0x33], 0x20 	       227	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44	IF_45
0x40007d8	            0x740a	                            je 0x40007e4	       227	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44	IF_45
0x40007da	        0x807dcd09	                cmp byte [rbp - 0x33], 9	       227	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44	IF_45
0x40007de	     0xf852a040000	                           jne 0x4000c0e	       227	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44	IF_45
0x40007e4	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       228	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44	IF_45
0x40007eb	      0xe91e040000	                           jmp 0x4000c0e	       227	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44	IF_45
0x40007f0	        0x837ddc05	               cmp dword [rbp - 0x24], 5	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x40007f4	            0x7567	                           jne 0x400085d	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x40007f6	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x40007fa	           0xfb600	                   movzx eax, byte [rax]	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x40007fd	           0xfb6d0	                           movzx edx, al	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x4000800	      0xb863000000	                           mov eax, 0x63	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x4000805	           0xfbec0	                           movsx eax, al	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x4000808	            0x39c2	                            cmp edx, eax	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x400080a	            0x7551	                           jne 0x400085d	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x400080c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x400080f	          0x4863d0	                         movsxd rdx, eax	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x4000812	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x4000816	      0xbe00000000	                              mov esi, 0	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x400081b	          0x4889c7	                            mov rdi, rax	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x400081e	      0xe800000000	                          call 0x4000823	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x4000823	            0x85c0	                           test eax, eax	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x4000825	            0x7536	                           jne 0x400085d	       229	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46
0x4000827	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       230	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46	IF_47
0x400082b	          0x83e080	                     and eax, 0xffffff80	       230	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46	IF_47
0x400082e	            0x85c0	                           test eax, eax	       230	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46	IF_47
0x4000830	     0xf85db030000	                           jne 0x4000c11	       230	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46	IF_47
0x4000836	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       230	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46	IF_47
0x400083a	            0x4898	                                    cdqe	       230	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46	IF_47
0x400083c	     0xfb680000000	                   movzx eax, byte [rax]	       230	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46	IF_47
0x4000843	           0xfb6c0	                           movzx eax, al	       230	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46	IF_47
0x4000846	          0x83e040	                           and eax, 0x40	       230	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46	IF_47
0x4000849	            0x85c0	                           test eax, eax	       230	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46	IF_47
0x400084b	     0xf84c0030000	                            je 0x4000c11	       230	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46	IF_47
0x4000851	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       231	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46	IF_47
0x4000858	      0xe9b4030000	                           jmp 0x4000c11	       230	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46	IF_47
0x400085d	        0x837ddc05	               cmp dword [rbp - 0x24], 5	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x4000861	            0x7567	                           jne 0x40008ca	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x4000863	        0x488b45f8	                mov rax, qword [rbp - 8]	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x4000867	           0xfb600	                   movzx eax, byte [rax]	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x400086a	           0xfb6d0	                           movzx edx, al	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x400086d	      0xb864000000	                           mov eax, 0x64	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x4000872	           0xfbec0	                           movsx eax, al	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x4000875	            0x39c2	                            cmp edx, eax	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x4000877	            0x7551	                           jne 0x40008ca	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x4000879	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x400087c	          0x4863d0	                         movsxd rdx, eax	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x400087f	        0x488b45f8	                mov rax, qword [rbp - 8]	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x4000883	      0xbe00000000	                              mov esi, 0	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x4000888	          0x4889c7	                            mov rdi, rax	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x400088b	      0xe800000000	                          call 0x4000890	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x4000890	            0x85c0	                           test eax, eax	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x4000892	            0x7536	                           jne 0x40008ca	       232	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48
0x4000894	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       233	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48	IF_49
0x4000898	          0x83e080	                     and eax, 0xffffff80	       233	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48	IF_49
0x400089b	            0x85c0	                           test eax, eax	       233	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48	IF_49
0x400089d	     0xf8571030000	                           jne 0x4000c14	       233	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48	IF_49
0x40008a3	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       233	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48	IF_49
0x40008a7	            0x4898	                                    cdqe	       233	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48	IF_49
0x40008a9	     0xfb680000000	                   movzx eax, byte [rax]	       233	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48	IF_49
0x40008b0	           0xfb6c0	                           movzx eax, al	       233	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48	IF_49
0x40008b3	          0x83e002	                              and eax, 2	       233	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48	IF_49
0x40008b6	            0x85c0	                           test eax, eax	       233	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48	IF_49
0x40008b8	     0xf8456030000	                            je 0x4000c14	       233	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48	IF_49
0x40008be	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       234	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48	IF_49
0x40008c5	      0xe94a030000	                           jmp 0x4000c14	       233	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48	IF_49
0x40008ca	        0x837ddc05	               cmp dword [rbp - 0x24], 5	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008ce	            0x757b	                           jne 0x400094b	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008d4	           0xfb600	                   movzx eax, byte [rax]	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008d7	           0xfb6d0	                           movzx edx, al	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008da	      0xb867000000	                           mov eax, 0x67	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008df	           0xfbec0	                           movsx eax, al	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008e2	            0x39c2	                            cmp edx, eax	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008e4	            0x7565	                           jne 0x400094b	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008e6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008e9	          0x4863d0	                         movsxd rdx, eax	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008f0	      0xbe00000000	                              mov esi, 0	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008f5	          0x4889c7	                            mov rdi, rax	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008f8	      0xe800000000	                          call 0x40008fd	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008fd	            0x85c0	                           test eax, eax	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x40008ff	            0x754a	                           jne 0x400094b	       235	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50
0x4000901	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x4000905	          0x83e080	                     and eax, 0xffffff80	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x4000908	            0x85c0	                           test eax, eax	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x400090a	     0xf8507030000	                           jne 0x4000c17	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x4000910	        0x807dcd1f	            cmp byte [rbp - 0x33], 0x1f 	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x4000914	     0xf86fd020000	                           jbe 0x4000c17	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x400091a	        0x807dcd7e	            cmp byte [rbp - 0x33], 0x7e 	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x400091e	     0xf87f3020000	                            ja 0x4000c17	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x4000924	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x4000928	            0x4898	                                    cdqe	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x400092a	     0xfb680000000	                   movzx eax, byte [rax]	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x4000931	           0xfb6c0	                           movzx eax, al	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x4000934	          0x83e001	                              and eax, 1	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x4000937	            0x85c0	                           test eax, eax	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x4000939	     0xf85d8020000	                           jne 0x4000c17	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x400093f	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       237	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x4000946	      0xe9cc020000	                           jmp 0x4000c17	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x400094b	        0x837ddc05	               cmp dword [rbp - 0x24], 5	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x400094f	            0x7564	                           jne 0x40009b5	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x4000951	        0x488b45f8	                mov rax, qword [rbp - 8]	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x4000955	           0xfb600	                   movzx eax, byte [rax]	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x4000958	           0xfb6d0	                           movzx edx, al	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x400095b	      0xb86c000000	                           mov eax, 0x6c	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x4000960	           0xfbec0	                           movsx eax, al	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x4000963	            0x39c2	                            cmp edx, eax	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x4000965	            0x754e	                           jne 0x40009b5	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x4000967	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x400096a	          0x4863d0	                         movsxd rdx, eax	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x400096d	        0x488b45f8	                mov rax, qword [rbp - 8]	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x4000971	      0xbe00000000	                              mov esi, 0	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x4000976	          0x4889c7	                            mov rdi, rax	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x4000979	      0xe800000000	                          call 0x400097e	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x400097e	            0x85c0	                           test eax, eax	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x4000980	            0x7533	                           jne 0x40009b5	       238	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52
0x4000982	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       239	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52	IF_53
0x4000986	          0x83e080	                     and eax, 0xffffff80	       239	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52	IF_53
0x4000989	            0x85c0	                           test eax, eax	       239	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52	IF_53
0x400098b	     0xf8589020000	                           jne 0x4000c1a	       239	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52	IF_53
0x4000991	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       239	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52	IF_53
0x4000995	      0xbe01000000	                              mov esi, 1	       239	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52	IF_53
0x400099a	            0x89c7	                            mov edi, eax	       239	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52	IF_53
0x400099c	      0xe8d3f6ffff	                    call sym.sane_iscase	       239	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52	IF_53
0x40009a1	            0x85c0	                           test eax, eax	       239	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52	IF_53
0x40009a3	     0xf8471020000	                            je 0x4000c1a	       239	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52	IF_53
0x40009a9	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       240	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52	IF_53
0x40009b0	      0xe965020000	                           jmp 0x4000c1a	       239	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52	IF_53
0x40009b5	        0x837ddc05	               cmp dword [rbp - 0x24], 5	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009b9	            0x7560	                           jne 0x4000a1b	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009bb	        0x488b45f8	                mov rax, qword [rbp - 8]	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009bf	           0xfb600	                   movzx eax, byte [rax]	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009c2	           0xfb6d0	                           movzx edx, al	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009c5	      0xb870000000	                           mov eax, 0x70	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009ca	           0xfbec0	                           movsx eax, al	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009cd	            0x39c2	                            cmp edx, eax	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009cf	            0x754a	                           jne 0x4000a1b	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009d1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009d4	          0x4863d0	                         movsxd rdx, eax	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009db	      0xbe00000000	                              mov esi, 0	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009e0	          0x4889c7	                            mov rdi, rax	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009e3	      0xe800000000	                          call 0x40009e8	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009e8	            0x85c0	                           test eax, eax	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009ea	            0x752f	                           jne 0x4000a1b	       241	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54
0x40009ec	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       242	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54	IF_55
0x40009f0	          0x83e080	                     and eax, 0xffffff80	       242	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54	IF_55
0x40009f3	            0x85c0	                           test eax, eax	       242	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54	IF_55
0x40009f5	     0xf8522020000	                           jne 0x4000c1d	       242	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54	IF_55
0x40009fb	        0x807dcd1f	            cmp byte [rbp - 0x33], 0x1f 	       242	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54	IF_55
0x40009ff	     0xf8618020000	                           jbe 0x4000c1d	       242	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54	IF_55
0x4000a05	        0x807dcd7e	            cmp byte [rbp - 0x33], 0x7e 	       242	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54	IF_55
0x4000a09	     0xf870e020000	                            ja 0x4000c1d	       242	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54	IF_55
0x4000a0f	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       243	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54	IF_55
0x4000a16	      0xe902020000	                           jmp 0x4000c1d	       242	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54	IF_55
0x4000a1b	        0x837ddc05	               cmp dword [rbp - 0x24], 5	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a1f	            0x7569	                           jne 0x4000a8a	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a21	        0x488b45f8	                mov rax, qword [rbp - 8]	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a25	           0xfb600	                   movzx eax, byte [rax]	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a28	           0xfb6d0	                           movzx edx, al	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a2b	      0xb870000000	                           mov eax, 0x70	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a30	           0xfbec0	                           movsx eax, al	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a33	            0x39c2	                            cmp edx, eax	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a35	            0x7553	                           jne 0x4000a8a	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a37	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a3a	          0x4863d0	                         movsxd rdx, eax	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a3d	        0x488b45f8	                mov rax, qword [rbp - 8]	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a41	      0xbe00000000	                              mov esi, 0	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a46	          0x4889c7	                            mov rdi, rax	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a49	      0xe800000000	                          call 0x4000a4e	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a4e	            0x85c0	                           test eax, eax	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a50	            0x7538	                           jne 0x4000a8a	       244	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56
0x4000a52	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       245	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56	IF_57
0x4000a56	          0x83e080	                     and eax, 0xffffff80	       245	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56	IF_57
0x4000a59	            0x85c0	                           test eax, eax	       245	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56	IF_57
0x4000a5b	     0xf85bf010000	                           jne 0x4000c20	       245	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56	IF_57
0x4000a61	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       245	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56	IF_57
0x4000a65	            0x4898	                                    cdqe	       245	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56	IF_57
0x4000a67	     0xfb680000000	                   movzx eax, byte [rax]	       245	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56	IF_57
0x4000a6e	           0xfb6c0	                           movzx eax, al	       245	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56	IF_57
0x4000a71	      0x25b8000000	                           and eax, 0xb8	       245	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56	IF_57
0x4000a76	            0x85c0	                           test eax, eax	       245	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56	IF_57
0x4000a78	     0xf84a2010000	                            je 0x4000c20	       245	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56	IF_57
0x4000a7e	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       246	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56	IF_57
0x4000a85	      0xe996010000	                           jmp 0x4000c20	       245	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56	IF_57
0x4000a8a	        0x837ddc05	               cmp dword [rbp - 0x24], 5	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000a8e	            0x7567	                           jne 0x4000af7	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000a90	        0x488b45f8	                mov rax, qword [rbp - 8]	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000a94	           0xfb600	                   movzx eax, byte [rax]	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000a97	           0xfb6d0	                           movzx edx, al	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000a9a	      0xb873000000	                           mov eax, 0x73	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000a9f	           0xfbec0	                           movsx eax, al	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000aa2	            0x39c2	                            cmp edx, eax	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000aa4	            0x7551	                           jne 0x4000af7	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000aa6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000aa9	          0x4863d0	                         movsxd rdx, eax	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000aac	        0x488b45f8	                mov rax, qword [rbp - 8]	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000ab0	      0xbe00000000	                              mov esi, 0	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000ab5	          0x4889c7	                            mov rdi, rax	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000ab8	      0xe800000000	                          call 0x4000abd	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000abd	            0x85c0	                           test eax, eax	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000abf	            0x7536	                           jne 0x4000af7	       247	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58
0x4000ac1	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       248	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58	IF_59
0x4000ac5	          0x83e080	                     and eax, 0xffffff80	       248	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58	IF_59
0x4000ac8	            0x85c0	                           test eax, eax	       248	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58	IF_59
0x4000aca	     0xf8553010000	                           jne 0x4000c23	       248	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58	IF_59
0x4000ad0	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       248	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58	IF_59
0x4000ad4	            0x4898	                                    cdqe	       248	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58	IF_59
0x4000ad6	     0xfb680000000	                   movzx eax, byte [rax]	       248	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58	IF_59
0x4000add	           0xfb6c0	                           movzx eax, al	       248	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58	IF_59
0x4000ae0	          0x83e001	                              and eax, 1	       248	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58	IF_59
0x4000ae3	            0x85c0	                           test eax, eax	       248	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58	IF_59
0x4000ae5	     0xf8438010000	                            je 0x4000c23	       248	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58	IF_59
0x4000aeb	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       249	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58	IF_59
0x4000af2	      0xe92c010000	                           jmp 0x4000c23	       248	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58	IF_59
0x4000af7	        0x837ddc05	               cmp dword [rbp - 0x24], 5	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000afb	     0xf85a1000000	                           jne 0x4000ba2	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b01	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b05	           0xfb600	                   movzx eax, byte [rax]	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b08	           0xfb6d0	                           movzx edx, al	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b0b	      0xb875000000	                           mov eax, 0x75	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b10	           0xfbec0	                           movsx eax, al	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b13	            0x39c2	                            cmp edx, eax	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b15	     0xf8587000000	                           jne 0x4000ba2	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b1b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b1e	          0x4863d0	                         movsxd rdx, eax	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b21	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b25	      0xbe00000000	                              mov esi, 0	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b2a	          0x4889c7	                            mov rdi, rax	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b2d	      0xe800000000	                          call 0x4000b32	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b32	            0x85c0	                           test eax, eax	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b34	            0x756c	                           jne 0x4000ba2	       250	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60
0x4000b36	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       251	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	IF_61
0x4000b3a	          0x83e080	                     and eax, 0xffffff80	       251	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	IF_61
0x4000b3d	            0x85c0	                           test eax, eax	       251	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	IF_61
0x4000b3f	            0x7520	                           jne 0x4000b61	       251	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	IF_61
0x4000b41	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       251	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	IF_61
0x4000b45	      0xbe00000000	                              mov esi, 0	       251	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	IF_61
0x4000b4a	            0x89c7	                            mov edi, eax	       251	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	IF_61
0x4000b4c	      0xe823f5ffff	                    call sym.sane_iscase	       251	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	IF_61
0x4000b51	            0x85c0	                           test eax, eax	       251	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	IF_61
0x4000b53	            0x740c	                            je 0x4000b61	       251	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	IF_61
0x4000b55	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       252	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	IF_61
0x4000b5c	      0xe9c5000000	                           jmp 0x4000c26	       251	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	IF_61
0x4000b61	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       253	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	ELSE_19	IF_62
0x4000b64	          0x83e001	                              and eax, 1	       253	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	ELSE_19	IF_62
0x4000b67	            0x85c0	                           test eax, eax	       253	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	ELSE_19	IF_62
0x4000b69	     0xf84b7000000	                            je 0x4000c26	       253	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	ELSE_19	IF_62
0x4000b6f	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       253	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	ELSE_19	IF_62
0x4000b73	          0x83e080	                     and eax, 0xffffff80	       253	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	ELSE_19	IF_62
0x4000b76	            0x85c0	                           test eax, eax	       253	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	ELSE_19	IF_62
0x4000b78	     0xf85a8000000	                           jne 0x4000c26	       253	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	ELSE_19	IF_62
0x4000b7e	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       253	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	ELSE_19	IF_62
0x4000b82	      0xbe01000000	                              mov esi, 1	       253	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	ELSE_19	IF_62
0x4000b87	            0x89c7	                            mov edi, eax	       253	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	ELSE_19	IF_62
0x4000b89	      0xe8e6f4ffff	                    call sym.sane_iscase	       253	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	ELSE_19	IF_62
0x4000b8e	            0x85c0	                           test eax, eax	       253	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	ELSE_19	IF_62
0x4000b90	     0xf8490000000	                            je 0x4000c26	       253	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	ELSE_19	IF_62
0x4000b96	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       254	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	ELSE_19	IF_62
0x4000b9d	      0xe984000000	                           jmp 0x4000c26	       251	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	IF_61
0x4000ba2	        0x837ddc06	               cmp dword [rbp - 0x24], 6	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000ba6	            0x7556	                           jne 0x4000bfe	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000ba8	        0x488b45f8	                mov rax, qword [rbp - 8]	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000bac	           0xfb600	                   movzx eax, byte [rax]	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000baf	           0xfb6d0	                           movzx edx, al	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000bb2	      0xb878000000	                           mov eax, 0x78	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000bb7	           0xfbec0	                           movsx eax, al	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000bba	            0x39c2	                            cmp edx, eax	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000bbc	            0x7540	                           jne 0x4000bfe	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000bbe	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000bc1	          0x4863d0	                         movsxd rdx, eax	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000bc4	        0x488b45f8	                mov rax, qword [rbp - 8]	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000bc8	      0xbe00000000	                              mov esi, 0	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000bcd	          0x4889c7	                            mov rdi, rax	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000bd0	      0xe800000000	                          call 0x4000bd5	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000bd5	            0x85c0	                           test eax, eax	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000bd7	            0x7525	                           jne 0x4000bfe	       255	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63
0x4000bd9	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       256	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63	IF_64
0x4000bdd	          0x83e080	                     and eax, 0xffffff80	       256	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63	IF_64
0x4000be0	            0x85c0	                           test eax, eax	       256	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63	IF_64
0x4000be2	            0x7545	                           jne 0x4000c29	       256	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63	IF_64
0x4000be4	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       256	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63	IF_64
0x4000be8	            0x4898	                                    cdqe	       256	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63	IF_64
0x4000bea	     0xfb680000000	                   movzx eax, byte [rax]	       256	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63	IF_64
0x4000bf1	            0x3cff	                            cmp al, 0xff	       256	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63	IF_64
0x4000bf3	            0x7434	                            je 0x4000c29	       256	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63	IF_64
0x4000bf5	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       257	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63	IF_64
0x4000bfc	            0xeb2b	                           jmp 0x4000c29	       256	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63	IF_64
0x4000bfe	      0xb8ffffffff	                     mov eax, 0xffffffff	       259	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_21
0x4000c03	      0xe9ae000000	                           jmp 0x4000cb6	       259	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_21
0x4000c08	              0x90	                                     nop	       221	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40	IF_41
0x4000c09	            0xeb1f	                           jmp 0x4000c2a	       221	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_40	IF_41
0x4000c0b	              0x90	                                     nop	       224	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42	IF_43
0x4000c0c	            0xeb1c	                           jmp 0x4000c2a	       224	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_9	IF_42	IF_43
0x4000c0e	              0x90	                                     nop	       227	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44	IF_45
0x4000c0f	            0xeb19	                           jmp 0x4000c2a	       227	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_10	IF_44	IF_45
0x4000c11	              0x90	                                     nop	       230	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46	IF_47
0x4000c12	            0xeb16	                           jmp 0x4000c2a	       230	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_11	IF_46	IF_47
0x4000c14	              0x90	                                     nop	       233	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48	IF_49
0x4000c15	            0xeb13	                           jmp 0x4000c2a	       233	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_12	IF_48	IF_49
0x4000c17	              0x90	                                     nop	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x4000c18	            0xeb10	                           jmp 0x4000c2a	       236	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_13	IF_50	IF_51
0x4000c1a	              0x90	                                     nop	       239	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52	IF_53
0x4000c1b	            0xeb0d	                           jmp 0x4000c2a	       239	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_14	IF_52	IF_53
0x4000c1d	              0x90	                                     nop	       242	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54	IF_55
0x4000c1e	            0xeb0a	                           jmp 0x4000c2a	       242	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_15	IF_54	IF_55
0x4000c20	              0x90	                                     nop	       245	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56	IF_57
0x4000c21	            0xeb07	                           jmp 0x4000c2a	       245	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_16	IF_56	IF_57
0x4000c23	              0x90	                                     nop	       248	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58	IF_59
0x4000c24	            0xeb04	                           jmp 0x4000c2a	       248	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_17	IF_58	IF_59
0x4000c26	              0x90	                                     nop	       251	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	IF_61
0x4000c27	            0xeb01	                           jmp 0x4000c2a	       251	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_18	IF_60	IF_61
0x4000c29	              0x90	                                     nop	       256	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	ELSE_20	IF_63	IF_64
0x4000c2a	        0xc645cc00	                mov byte [rbp - 0x34], 0	       260	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36
0x4000c2e	            0xeb13	                           jmp 0x4000c43	       205	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36
0x4000c30	         0xfb645cd	            movzx eax, byte [rbp - 0x33]	       261	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_22	IF_65
0x4000c34	          0x3a45cc	               cmp al, byte [rbp - 0x34]	       261	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_22	IF_65
0x4000c37	            0x750a	                           jne 0x4000c43	       261	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_22	IF_65
0x4000c39	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       262	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_22	IF_65
0x4000c40	            0xeb01	                           jmp 0x4000c43	       262	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_22	IF_65
0x4000c42	              0x90	                                     nop	       218	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1	ELSE_8	IF_36	IF_38
0x4000c43	         0xfb645cc	            movzx eax, byte [rbp - 0x34]	       263	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1
0x4000c47	          0x8845ce	               mov byte [rbp - 0x32], al	       263	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1
0x4000c4a	      0x488345b801	               add qword [rbp - 0x48], 1	       263	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1
0x4000c4f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       263	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1
0x4000c53	           0xfb600	                   movzx eax, byte [rax]	       263	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1
0x4000c56	          0x8845cc	               mov byte [rbp - 0x34], al	       263	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1
0x4000c59	        0x807dcc5d	            cmp byte [rbp - 0x34], 0x5d 	       263	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1
0x4000c5d	     0xf8582f8ffff	                           jne 0x40004e5	       263	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	DO_1
0x4000c63	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       264	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_66
0x4000c66	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	       264	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_66
0x4000c69	            0x7410	                            je 0x4000c7b	       264	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_66
0x4000c6b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       265	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_66
0x4000c6e	          0x83e002	                              and eax, 2	       265	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_66
0x4000c71	            0x85c0	                           test eax, eax	       264	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_66
0x4000c73	            0x7413	                            je 0x4000c88	       264	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_66
0x4000c75	        0x807dcd2f	            cmp byte [rbp - 0x33], 0x2f 	       265	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_66
0x4000c79	            0x750d	                           jne 0x4000c88	       265	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_66
0x4000c7b	      0xb801000000	                              mov eax, 1	       266	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_66
0x4000c80	            0xeb34	                           jmp 0x4000cb6	       266	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1	IF_66
0x4000c82	              0x90	                                     nop	        78	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x4000c83	            0xeb04	                           jmp 0x4000c89	        78	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x4000c85	              0x90	                                     nop	        83	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x4000c86	            0xeb01	                           jmp 0x4000c89	        83	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x4000c88	              0x90	                                     nop	       267	wildmatch.c	FUNCTION_28	FOR_1	SWITCH_1
0x4000c89	      0x488345b001	               add qword [rbp - 0x50], 1	        60	wildmatch.c	FUNCTION_28	FOR_1
0x4000c8e	      0x488345b801	               add qword [rbp - 0x48], 1	        60	wildmatch.c	FUNCTION_28	FOR_1
0x4000c93	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        60	wildmatch.c	FUNCTION_28	FOR_1
0x4000c97	           0xfb600	                   movzx eax, byte [rax]	        60	wildmatch.c	FUNCTION_28	FOR_1
0x4000c9a	          0x8845cc	               mov byte [rbp - 0x34], al	        60	wildmatch.c	FUNCTION_28	FOR_1
0x4000c9d	        0x807dcc00	                cmp byte [rbp - 0x34], 0	        60	wildmatch.c	FUNCTION_28	FOR_1
0x4000ca1	     0xf853df4ffff	                           jne 0x40000e4	        60	wildmatch.c	FUNCTION_28	FOR_1
0x4000ca7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       271	wildmatch.c	FUNCTION_28
0x4000cab	           0xfb600	                   movzx eax, byte [rax]	       271	wildmatch.c	FUNCTION_28
0x4000cae	            0x84c0	                             test al, al	       271	wildmatch.c	FUNCTION_28
0x4000cb0	           0xf95c0	                                setne al	       271	wildmatch.c	FUNCTION_28
0x4000cb3	           0xfb6c0	                           movzx eax, al	       271	wildmatch.c	FUNCTION_28
0x4000cb6	              0xc9	                                   leave	       272	wildmatch.c	FUNCTION_28
0x4000cb7	              0xc3	                                     ret	       272	wildmatch.c	FUNCTION_28
wildmatch	functions,0:IF,0:WHILE,0:FOR,0:DO,0:ELSE,0:SWITCH,0:CALL,1	14
0x4000cb8	              0x55	                                push rbp	       276	wildmatch.c	FUNCTION_29
0x4000cb9	          0x4889e5	                            mov rbp, rsp	       276	wildmatch.c	FUNCTION_29
0x4000cbc	        0x4883ec20	                           sub rsp, 0x20	       276	wildmatch.c	FUNCTION_29
0x4000cc0	        0x48897df8	                mov qword [rbp - 8], rdi	       276	wildmatch.c	FUNCTION_29
0x4000cc4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       276	wildmatch.c	FUNCTION_29
0x4000cc8	          0x8955ec	             mov dword [rbp - 0x14], edx	       276	wildmatch.c	FUNCTION_29
0x4000ccb	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       277	wildmatch.c	FUNCTION_29	CALL_1
0x4000cce	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       277	wildmatch.c	FUNCTION_29	CALL_1
0x4000cd2	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	wildmatch.c	FUNCTION_29	CALL_1
0x4000cd6	          0x4889ce	                            mov rsi, rcx	       277	wildmatch.c	FUNCTION_29	CALL_1
0x4000cd9	          0x4889c7	                            mov rdi, rax	       277	wildmatch.c	FUNCTION_29	CALL_1
0x4000cdc	      0xe8e3f3ffff	                         call sym.dowild	       277	wildmatch.c	FUNCTION_29	CALL_1
0x4000ce1	              0xc9	                                   leave	       278	wildmatch.c	FUNCTION_29
0x4000ce2	              0xc3	                                     ret	       278	wildmatch.c	FUNCTION_29
sane_case	functions,0:IF,1:WHILE,0:FOR,0:DO,0:ELSE,0:SWITCH,0:CALL,0	19
0x4000040	              0x55	                                push rbp	       992	git-compat-util.h	FUNCTION_21
0x4000041	          0x4889e5	                            mov rbp, rsp	       992	git-compat-util.h	FUNCTION_21
0x4000044	          0x897dfc	                mov dword [rbp - 4], edi	       992	git-compat-util.h	FUNCTION_21
0x4000047	          0x8975f8	                mov dword [rbp - 8], esi	       992	git-compat-util.h	FUNCTION_21
0x400004a	          0x8b45fc	                mov eax, dword [rbp - 4]	       993	git-compat-util.h	FUNCTION_21	IF_1
0x400004d	           0xfb6c0	                           movzx eax, al	       993	git-compat-util.h	FUNCTION_21	IF_1
0x4000050	            0x4898	                                    cdqe	       993	git-compat-util.h	FUNCTION_21	IF_1
0x4000052	     0xfb680000000	                   movzx eax, byte [rax]	       993	git-compat-util.h	FUNCTION_21	IF_1
0x4000059	           0xfb6c0	                           movzx eax, al	       993	git-compat-util.h	FUNCTION_21	IF_1
0x400005c	          0x83e004	                              and eax, 4	       993	git-compat-util.h	FUNCTION_21	IF_1
0x400005f	            0x85c0	                           test eax, eax	       993	git-compat-util.h	FUNCTION_21	IF_1
0x4000061	            0x740c	                            je 0x400006f	       993	git-compat-util.h	FUNCTION_21	IF_1
0x4000063	          0x8b45fc	                mov eax, dword [rbp - 4]	       994	git-compat-util.h	FUNCTION_21	IF_1
0x4000066	          0x83e0df	                     and eax, 0xffffffdf	       994	git-compat-util.h	FUNCTION_21	IF_1
0x4000069	           0xb45f8	                 or eax, dword [rbp - 8]	       994	git-compat-util.h	FUNCTION_21	IF_1
0x400006c	          0x8945fc	                mov dword [rbp - 4], eax	       994	git-compat-util.h	FUNCTION_21	IF_1
0x400006f	          0x8b45fc	                mov eax, dword [rbp - 4]	       995	git-compat-util.h	FUNCTION_21
0x4000072	              0x5d	                                 pop rbp	       996	git-compat-util.h	FUNCTION_21
0x4000073	              0xc3	                                     ret	       996	git-compat-util.h	FUNCTION_21
