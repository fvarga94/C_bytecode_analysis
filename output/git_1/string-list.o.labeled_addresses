string_list_init	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,1:IF,0:FOR,0	7
0x40000fb	    0x48c707000000	                      mov qword [rdi], 0	        90	string3.h	FUNCTION_4	CALL_6
0x4000102	    0x48c747080000	                  mov qword [rdi + 8], 0	        90	string3.h	FUNCTION_4	CALL_6
0x400010a	    0x48c747100000	               mov qword [rdi + 0x10], 0	        90	string3.h	FUNCTION_4	CALL_6
0x4000112	    0x48c747180000	               mov qword [rdi + 0x18], 0	        90	string3.h	FUNCTION_4	CALL_6
0x400011a	          0x83e601	                              and esi, 1	         7	string-list.c	FUNCTION_13
0x400011d	        0x40887710	              mov byte [rdi + 0x10], sil	         7	string-list.c	FUNCTION_13
0x4000121	              0xc3	                                     ret	         7	string-list.c	FUNCTION_13
get_entry_index	SWITCH,0:DO,0:ELSE,2:WHILE,1:functions,0:CALL,1:IF,2:FOR,0	55
0x4000040	            0x4157	                                push r15	        14	string-list.c	FUNCTION_14
0x4000042	            0x4156	                                push r14	        14	string-list.c	FUNCTION_14
0x4000044	            0x4155	                                push r13	        14	string-list.c	FUNCTION_14
0x4000046	            0x4154	                                push r12	        14	string-list.c	FUNCTION_14
0x4000048	              0x55	                                push rbp	        14	string-list.c	FUNCTION_14
0x4000049	              0x53	                                push rbx	        14	string-list.c	FUNCTION_14
0x400004a	        0x4883ec18	                           sub rsp, 0x18	        14	string-list.c	FUNCTION_14
0x400004e	          0x4989fe	                            mov r14, rdi	        14	string-list.c	FUNCTION_14
0x4000051	          0x4989f7	                            mov r15, rsi	        14	string-list.c	FUNCTION_14
0x4000054	      0x4889542408	                mov qword [rsp + 8], rdx	        14	string-list.c	FUNCTION_14
0x4000059	        0x448b6708	               mov r12d, dword [rdi + 8]	        15	string-list.c	FUNCTION_14
0x400005d	        0x4c8b6f18	            mov r13, qword [rdi + 0x18] 	        16	string-list.c	FUNCTION_14
0x4000061	          0x4d85ed	                           test r13, r13	        16	string-list.c	FUNCTION_14
0x4000064	      0xb800000000	                              mov eax, 0	        16	string-list.c	FUNCTION_14
0x4000069	        0x4c0f44e8	                          cmove r13, rax	        16	string-list.c	FUNCTION_14
0x400006d	      0xbdffffffff	                     mov ebp, 0xffffffff	        15	string-list.c	FUNCTION_14
0x4000072	            0xeb44	                           jmp 0x40000b8	        18	string-list.c	FUNCTION_14	WHILE_1
0x4000074	          0x4489e0	                           mov eax, r12d	        19	string-list.c	FUNCTION_14	WHILE_1
0x4000077	            0x29e8	                            sub eax, ebp	        19	string-list.c	FUNCTION_14	WHILE_1
0x4000079	            0x89c3	                            mov ebx, eax	        19	string-list.c	FUNCTION_14	WHILE_1
0x400007b	          0xc1eb1f	                           shr ebx, 0x1f	        19	string-list.c	FUNCTION_14	WHILE_1
0x400007e	             0x1d8	                            add eax, ebx	        19	string-list.c	FUNCTION_14	WHILE_1
0x4000080	            0xd1f8	                              sar eax, 1	        19	string-list.c	FUNCTION_14	WHILE_1
0x4000082	        0x8d5c0500	                    lea ebx, [rbp + rax]	        19	string-list.c	FUNCTION_14	WHILE_1
0x4000086	          0x4863c3	                         movsxd rax, ebx	        20	string-list.c	FUNCTION_14	WHILE_1	CALL_1
0x4000089	        0x48c1e004	                              shl rax, 4	        20	string-list.c	FUNCTION_14	WHILE_1	CALL_1
0x400008d	          0x490306	                    add rax, qword [r14]	        20	string-list.c	FUNCTION_14	WHILE_1	CALL_1
0x4000090	          0x488b30	                    mov rsi, qword [rax]	        20	string-list.c	FUNCTION_14	WHILE_1	CALL_1
0x4000093	          0x4c89ff	                            mov rdi, r15	        20	string-list.c	FUNCTION_14	WHILE_1	CALL_1
0x4000096	          0x41ffd5	                                call r13	        20	string-list.c	FUNCTION_14	WHILE_1	CALL_1
0x4000099	            0x85c0	                           test eax, eax	        21	string-list.c	FUNCTION_14	WHILE_1	IF_1
0x400009b	            0x7814	                            js 0x40000b1	        21	string-list.c	FUNCTION_14	WHILE_1	IF_1
0x400009d	            0x85c0	                           test eax, eax	        23	string-list.c	FUNCTION_14	WHILE_1	ELSE_1	IF_2
0x400009f	            0x7f15	                            jg 0x40000b6	        23	string-list.c	FUNCTION_14	WHILE_1	ELSE_1	IF_2
0x40000a1	      0x488b442408	                mov rax, qword [rsp + 8]	        26	string-list.c	FUNCTION_14	WHILE_1	ELSE_2
0x40000a6	    0xc70001000000	                      mov dword [rax], 1	        26	string-list.c	FUNCTION_14	WHILE_1	ELSE_2
0x40000ac	          0x4189dc	                           mov r12d, ebx	        19	string-list.c	FUNCTION_14	WHILE_1
0x40000af	            0xeb1a	                           jmp 0x40000cb	        27	string-list.c	FUNCTION_14	WHILE_1	ELSE_2
0x40000b1	          0x4189dc	                           mov r12d, ebx	        19	string-list.c	FUNCTION_14	WHILE_1
0x40000b4	            0xeb02	                           jmp 0x40000b8	        19	string-list.c	FUNCTION_14	WHILE_1
0x40000b6	            0x89dd	                            mov ebp, ebx	        19	string-list.c	FUNCTION_14	WHILE_1
0x40000b8	          0x8d4501	                      lea eax, [rbp + 1]	        18	string-list.c	FUNCTION_14	WHILE_1
0x40000bb	          0x4139c4	                           cmp r12d, eax	        18	string-list.c	FUNCTION_14	WHILE_1
0x40000be	            0x7fb4	                            jg 0x4000074	        18	string-list.c	FUNCTION_14	WHILE_1
0x40000c0	      0x488b442408	                mov rax, qword [rsp + 8]	        31	string-list.c	FUNCTION_14
0x40000c5	    0xc70000000000	                      mov dword [rax], 0	        31	string-list.c	FUNCTION_14
0x40000cb	          0x4489e0	                           mov eax, r12d	        33	string-list.c	FUNCTION_14
0x40000ce	        0x4883c418	                           add rsp, 0x18	        33	string-list.c	FUNCTION_14
0x40000d2	              0x5b	                                 pop rbx	        33	string-list.c	FUNCTION_14
0x40000d3	              0x5d	                                 pop rbp	        33	string-list.c	FUNCTION_14
0x40000d4	            0x415c	                                 pop r12	        33	string-list.c	FUNCTION_14
0x40000d6	            0x415d	                                 pop r13	        33	string-list.c	FUNCTION_14
0x40000d8	            0x415e	                                 pop r14	        33	string-list.c	FUNCTION_14
0x40000da	            0x415f	                                 pop r15	        33	string-list.c	FUNCTION_14
0x40000dc	              0xc3	                                     ret	        33	string-list.c	FUNCTION_14
string_list_lookup	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,1:IF,1:FOR,0	22
0x4000360	              0x53	                                push rbx	       101	string-list.c	FUNCTION_20
0x4000361	        0x4883ec10	                           sub rsp, 0x10	       101	string-list.c	FUNCTION_20
0x4000365	          0x4889fb	                            mov rbx, rdi	       101	string-list.c	FUNCTION_20
0x4000368	    0x64488b042528	                mov rax, qword fs:[0x28]	       101	string-list.c	FUNCTION_20
0x4000371	      0x4889442408	                mov qword [rsp + 8], rax	       101	string-list.c	FUNCTION_20
0x4000376	            0x31c0	                            xor eax, eax	       101	string-list.c	FUNCTION_20
0x4000378	      0x488d542404	                      lea rdx, [rsp + 4]	       102	string-list.c	FUNCTION_20	CALL_1
0x400037d	      0xe8befcffff	                call sym.get_entry_index	       102	string-list.c	FUNCTION_20	CALL_1
0x4000382	      0x837c240400	                  cmp dword [rsp + 4], 0	       103	string-list.c	FUNCTION_20	IF_1
0x4000387	            0x740b	                            je 0x4000394	       103	string-list.c	FUNCTION_20	IF_1
0x4000389	            0x4898	                                    cdqe	       105	string-list.c	FUNCTION_20
0x400038b	        0x48c1e004	                              shl rax, 4	       105	string-list.c	FUNCTION_20
0x400038f	          0x480303	                    add rax, qword [rbx]	       105	string-list.c	FUNCTION_20
0x4000392	            0xeb05	                           jmp 0x4000399	       105	string-list.c	FUNCTION_20
0x4000394	      0xb800000000	                              mov eax, 0	       104	string-list.c	FUNCTION_20	IF_1
0x4000399	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       106	string-list.c	FUNCTION_20
0x400039e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       106	string-list.c	FUNCTION_20
0x40003a7	            0x7405	                            je 0x40003ae	       106	string-list.c	FUNCTION_20
0x40003a9	      0xe800000000	                          call 0x40003ae	       106	string-list.c	FUNCTION_20
0x40003ae	        0x4883c410	                           add rsp, 0x10	       106	string-list.c	FUNCTION_20
0x40003b2	              0x5b	                                 pop rbx	       106	string-list.c	FUNCTION_20
0x40003b3	              0xc3	                                     ret	       106	string-list.c	FUNCTION_20
cmp_items	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,1:IF,0:FOR,0	6
0x40000ea	        0x4883ec08	                              sub rsp, 8	       228	string-list.c	FUNCTION_31
0x40000ee	          0x488b36	                    mov rsi, qword [rsi]	       232	string-list.c	FUNCTION_31	CALL_1
0x40000f1	          0x488b3f	                    mov rdi, qword [rdi]	       232	string-list.c	FUNCTION_31	CALL_1
0x40000f4	            0xffd2	                                call rdx	       232	string-list.c	FUNCTION_31	CALL_1
0x40000f6	        0x4883c408	                              add rsp, 8	       233	string-list.c	FUNCTION_31
0x40000fa	              0xc3	                                     ret	       233	string-list.c	FUNCTION_31
string_list_find_insert_index	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,1:IF,1:FOR,0	21
0x4000311	              0x53	                                push rbx	        92	string-list.c	FUNCTION_19
0x4000312	        0x4883ec10	                           sub rsp, 0x10	        92	string-list.c	FUNCTION_19
0x4000316	            0x89d3	                            mov ebx, edx	        92	string-list.c	FUNCTION_19
0x4000318	    0x64488b042528	                mov rax, qword fs:[0x28]	        92	string-list.c	FUNCTION_19
0x4000321	      0x4889442408	                mov qword [rsp + 8], rax	        92	string-list.c	FUNCTION_19
0x4000326	            0x31c0	                            xor eax, eax	        92	string-list.c	FUNCTION_19
0x4000328	      0x488d542404	                      lea rdx, [rsp + 4]	        94	string-list.c	FUNCTION_19	CALL_1
0x400032d	      0xe80efdffff	                call sym.get_entry_index	        94	string-list.c	FUNCTION_19	CALL_1
0x4000332	      0x837c240400	                  cmp dword [rsp + 4], 0	        95	string-list.c	FUNCTION_19	IF_1
0x4000337	            0x740c	                            je 0x4000345	        95	string-list.c	FUNCTION_19	IF_1
0x4000339	            0x85db	                           test ebx, ebx	        96	string-list.c	FUNCTION_19	IF_1
0x400033b	            0xf7d0	                                 not eax	        96	string-list.c	FUNCTION_19	IF_1
0x400033d	      0xbaffffffff	                     mov edx, 0xffffffff	        96	string-list.c	FUNCTION_19	IF_1
0x4000342	           0xf44c2	                          cmove eax, edx	        96	string-list.c	FUNCTION_19	IF_1
0x4000345	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        98	string-list.c	FUNCTION_19
0x400034a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        98	string-list.c	FUNCTION_19
0x4000353	            0x7405	                            je 0x400035a	        98	string-list.c	FUNCTION_19
0x4000355	      0xe800000000	                          call 0x400035a	        98	string-list.c	FUNCTION_19
0x400035a	        0x4883c410	                           add rsp, 0x10	        98	string-list.c	FUNCTION_19
0x400035e	              0x5b	                                 pop rbx	        98	string-list.c	FUNCTION_19
0x400035f	              0xc3	                                     ret	        98	string-list.c	FUNCTION_19
print_string_list	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,2:IF,1:FOR,1	27
0x40006a6	              0x55	                                push rbp	       200	string-list.c	FUNCTION_28
0x40006a7	              0x53	                                push rbx	       200	string-list.c	FUNCTION_28
0x40006a8	        0x4883ec08	                              sub rsp, 8	       200	string-list.c	FUNCTION_28
0x40006ac	          0x4889fd	                            mov rbp, rdi	       200	string-list.c	FUNCTION_28
0x40006af	          0x4885f6	                           test rsi, rsi	       202	string-list.c	FUNCTION_28	IF_1
0x40006b2	            0x7408	                            je 0x40006bc	       202	string-list.c	FUNCTION_28	IF_1
0x40006b4	          0x4889f7	                            mov rdi, rsi	       104	stdio2.h	FUNCTION_43	CALL_2
0x40006b7	      0xe800000000	                          call 0x40006bc	       104	stdio2.h	FUNCTION_43	CALL_2
0x40006bc	        0x837d0800	                  cmp dword [rbp + 8], 0	       204	string-list.c	FUNCTION_28	FOR_1
0x40006c0	            0x7433	                            je 0x40006f5	       204	string-list.c	FUNCTION_28	FOR_1
0x40006c2	      0xbb00000000	                              mov ebx, 0	       204	string-list.c	FUNCTION_28	FOR_1
0x40006c7	          0x4863c3	                         movsxd rax, ebx	       205	string-list.c	FUNCTION_28	CALL_2
0x40006ca	        0x48c1e004	                              shl rax, 4	       205	string-list.c	FUNCTION_28	CALL_2
0x40006ce	        0x48034500	                    add rax, qword [rbp]	       205	string-list.c	FUNCTION_28	CALL_2
0x40006d2	        0x488b4808	                mov rcx, qword [rax + 8]	       104	stdio2.h	FUNCTION_43	CALL_2
0x40006d6	          0x488b10	                    mov rdx, qword [rax]	       104	stdio2.h	FUNCTION_43	CALL_2
0x40006d9	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_43	CALL_2
0x40006de	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_43	CALL_2
0x40006e3	      0xb800000000	                              mov eax, 0	       104	stdio2.h	FUNCTION_43	CALL_2
0x40006e8	      0xe800000000	                          call 0x40006ed	       104	stdio2.h	FUNCTION_43	CALL_2
0x40006ed	          0x83c301	                              add ebx, 1	       204	string-list.c	FUNCTION_28	FOR_1
0x40006f0	          0x395d08	                cmp dword [rbp + 8], ebx	       204	string-list.c	FUNCTION_28	FOR_1
0x40006f3	            0x77d2	                            ja 0x40006c7	       204	string-list.c	FUNCTION_28	FOR_1
0x40006f5	        0x4883c408	                              add rsp, 8	       206	string-list.c	FUNCTION_28
0x40006f9	              0x5b	                                 pop rbx	       206	string-list.c	FUNCTION_28
0x40006fa	              0x5d	                                 pop rbp	       206	string-list.c	FUNCTION_28
0x40006fb	              0xc3	                                     ret	       206	string-list.c	FUNCTION_28
string_list_append	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,2:IF,0:FOR,0	12
0x400075c	              0x53	                                push rbx	       221	string-list.c	FUNCTION_30
0x400075d	          0x4889fb	                            mov rbx, rdi	       221	string-list.c	FUNCTION_30
0x4000760	          0x4889f0	                            mov rax, rsi	       222	string-list.c	FUNCTION_30	CALL_1
0x4000763	        0xf6471001	               test byte [rdi + 0x10], 1	       222	string-list.c	FUNCTION_30	CALL_1
0x4000767	            0x7408	                            je 0x4000771	       222	string-list.c	FUNCTION_30	CALL_1
0x4000769	          0x4889f7	                            mov rdi, rsi	       222	string-list.c	FUNCTION_30	CALL_1
0x400076c	      0xe800000000	                          call 0x4000771	       222	string-list.c	FUNCTION_30	CALL_1
0x4000771	          0x4889c6	                            mov rsi, rax	       222	string-list.c	FUNCTION_30	CALL_1
0x4000774	          0x4889df	                            mov rdi, rbx	       222	string-list.c	FUNCTION_30	CALL_1
0x4000777	      0xe800000000	                          call 0x400077c	       222	string-list.c	FUNCTION_30	CALL_1
0x400077c	              0x5b	                                 pop rbx	       225	string-list.c	FUNCTION_30
0x400077d	              0xc3	                                     ret	       225	string-list.c	FUNCTION_30
for_each_string_list	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,1:IF,1:FOR,1	30
0x4000474	        0x837f0800	                  cmp dword [rdi + 8], 0	       130	string-list.c	ELSE_1	FUNCTION_22	FOR_1
0x4000478	            0x7437	                            je 0x40004b1	       130	string-list.c	ELSE_1	FUNCTION_22	FOR_1
0x400047a	            0x4155	                                push r13	       128	string-list.c	ELSE_1	FUNCTION_22
0x400047c	            0x4154	                                push r12	       128	string-list.c	ELSE_1	FUNCTION_22
0x400047e	              0x55	                                push rbp	       128	string-list.c	ELSE_1	FUNCTION_22
0x400047f	              0x53	                                push rbx	       128	string-list.c	ELSE_1	FUNCTION_22
0x4000480	        0x4883ec08	                              sub rsp, 8	       128	string-list.c	ELSE_1	FUNCTION_22
0x4000484	          0x4989d5	                            mov r13, rdx	       128	string-list.c	ELSE_1	FUNCTION_22
0x4000487	          0x4989f4	                            mov r12, rsi	       128	string-list.c	ELSE_1	FUNCTION_22
0x400048a	          0x4889fd	                            mov rbp, rdi	       128	string-list.c	ELSE_1	FUNCTION_22
0x400048d	      0xbb00000000	                              mov ebx, 0	       130	string-list.c	ELSE_1	FUNCTION_22	FOR_1
0x4000492	          0x4863fb	                         movsxd rdi, ebx	       131	string-list.c	ELSE_1	FUNCTION_22	FOR_1	IF_1	CALL_1
0x4000495	        0x48c1e704	                              shl rdi, 4	       131	string-list.c	ELSE_1	FUNCTION_22	FOR_1	IF_1	CALL_1
0x4000499	        0x48037d00	                    add rdi, qword [rbp]	       131	string-list.c	ELSE_1	FUNCTION_22	FOR_1	IF_1	CALL_1
0x400049d	          0x4c89ee	                            mov rsi, r13	       131	string-list.c	ELSE_1	FUNCTION_22	FOR_1	IF_1	CALL_1
0x40004a0	          0x41ffd4	                                call r12	       131	string-list.c	ELSE_1	FUNCTION_22	FOR_1	IF_1	CALL_1
0x40004a3	            0x85c0	                           test eax, eax	       131	string-list.c	ELSE_1	FUNCTION_22	FOR_1	IF_1	CALL_1
0x40004a5	            0x7510	                           jne 0x40004b7	       131	string-list.c	ELSE_1	FUNCTION_22	FOR_1	IF_1	CALL_1
0x40004a7	          0x83c301	                              add ebx, 1	       130	string-list.c	ELSE_1	FUNCTION_22	FOR_1
0x40004aa	          0x395d08	                cmp dword [rbp + 8], ebx	       130	string-list.c	ELSE_1	FUNCTION_22	FOR_1
0x40004ad	            0x77e3	                            ja 0x4000492	       130	string-list.c	ELSE_1	FUNCTION_22	FOR_1
0x40004af	            0xeb06	                           jmp 0x40004b7	       130	string-list.c	ELSE_1	FUNCTION_22	FOR_1
0x40004b1	      0xb800000000	                              mov eax, 0	       129	string-list.c	ELSE_1	FUNCTION_22
0x40004b6	              0xc3	                                     ret	       129	string-list.c	ELSE_1	FUNCTION_22
0x40004b7	        0x4883c408	                              add rsp, 8	       134	string-list.c	ELSE_1	FUNCTION_22
0x40004bb	              0x5b	                                 pop rbx	       134	string-list.c	ELSE_1	FUNCTION_22
0x40004bc	              0x5d	                                 pop rbp	       134	string-list.c	ELSE_1	FUNCTION_22
0x40004bd	            0x415c	                                 pop r12	       134	string-list.c	ELSE_1	FUNCTION_22
0x40004bf	            0x415d	                                 pop r13	       134	string-list.c	ELSE_1	FUNCTION_22
0x40004c1	              0xc3	                                     ret	       134	string-list.c	ELSE_1	FUNCTION_22
string_list_insert	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,1:IF,1:FOR,0	78
0x4000122	            0x4156	                                push r14	        57	string-list.c	FUNCTION_16
0x4000124	            0x4155	                                push r13	        57	string-list.c	FUNCTION_16
0x4000126	            0x4154	                                push r12	        57	string-list.c	FUNCTION_16
0x4000128	              0x55	                                push rbp	        57	string-list.c	FUNCTION_16
0x4000129	              0x53	                                push rbx	        57	string-list.c	FUNCTION_16
0x400012a	        0x4883ec10	                           sub rsp, 0x10	        57	string-list.c	FUNCTION_16
0x400012e	          0x4889fd	                            mov rbp, rdi	        57	string-list.c	FUNCTION_16
0x4000131	          0x4989f4	                            mov r12, rsi	        57	string-list.c	FUNCTION_16
0x4000134	    0x64488b042528	                mov rax, qword fs:[0x28]	        57	string-list.c	FUNCTION_16
0x400013d	      0x4889442408	                mov qword [rsp + 8], rax	        57	string-list.c	FUNCTION_16
0x4000142	            0x31c0	                            xor eax, eax	        57	string-list.c	FUNCTION_16
0x4000144	    0xc74424040000	                  mov dword [rsp + 4], 0	        38	string-list.c	FUNCTION_15
0x400014c	      0x488d542404	                      lea rdx, [rsp + 4]	        39	string-list.c	FUNCTION_15	CALL_1
0x4000151	      0xe8eafeffff	                call sym.get_entry_index	        39	string-list.c	FUNCTION_15	CALL_1
0x4000156	            0x89c3	                            mov ebx, eax	        39	string-list.c	FUNCTION_15	CALL_1
0x4000158	      0x837c240400	                  cmp dword [rsp + 4], 0	        41	string-list.c	FUNCTION_15	IF_1
0x400015d	            0x7407	                            je 0x4000166	        41	string-list.c	FUNCTION_15	IF_1
0x400015f	            0xf7d3	                                 not ebx	        42	string-list.c	FUNCTION_15	IF_1
0x4000161	      0xe98f000000	                           jmp 0x40001f5	        42	string-list.c	FUNCTION_15	IF_1
0x4000166	          0x8b4508	                mov eax, dword [rbp + 8]	        44	string-list.c	FUNCTION_15	CALL_2
0x4000169	          0x83c001	                              add eax, 1	        44	string-list.c	FUNCTION_15	CALL_2
0x400016c	          0x8b550c	              mov edx, dword [rbp + 0xc]	        44	string-list.c	FUNCTION_15	CALL_2
0x400016f	            0x39d0	                            cmp eax, edx	        44	string-list.c	FUNCTION_15	CALL_2
0x4000171	            0x7621	                           jbe 0x4000194	        44	string-list.c	FUNCTION_15	CALL_2
0x4000173	        0x8d745230	          lea esi, [rdx + rdx*2 + 0x30] 	        44	string-list.c	FUNCTION_15	CALL_2
0x4000177	            0xd1ee	                              shr esi, 1	        44	string-list.c	FUNCTION_15	CALL_2
0x4000179	            0x39f0	                            cmp eax, esi	        44	string-list.c	FUNCTION_15	CALL_2
0x400017b	           0xf47f0	                          cmova esi, eax	        44	string-list.c	FUNCTION_15	CALL_2
0x400017e	          0x89750c	              mov dword [rbp + 0xc], esi	        44	string-list.c	FUNCTION_15	CALL_2
0x4000181	            0x89f6	                            mov esi, esi	        44	string-list.c	FUNCTION_15	CALL_2
0x4000183	        0x48c1e604	                              shl rsi, 4	        44	string-list.c	FUNCTION_15	CALL_2
0x4000187	        0x488b7d00	                    mov rdi, qword [rbp]	        44	string-list.c	FUNCTION_15	CALL_2
0x400018b	      0xe800000000	                          call 0x4000190	        44	string-list.c	FUNCTION_15	CALL_2
0x4000190	        0x48894500	                    mov qword [rbp], rax	        44	string-list.c	FUNCTION_15	CALL_2
0x4000194	          0x8b5508	                mov edx, dword [rbp + 8]	        45	string-list.c	FUNCTION_15	IF_2
0x4000197	            0x39da	                            cmp edx, ebx	        45	string-list.c	FUNCTION_15	IF_2
0x4000199	            0x7627	                           jbe 0x40001c2	        45	string-list.c	FUNCTION_15	IF_2
0x400019b	            0x29da	                            sub edx, ebx	        46	string-list.c	FUNCTION_15	IF_2	CALL_3
0x400019d	          0x4885d2	                           test rdx, rdx	       861	git-compat-util.h	FUNCTION_75	IF_1
0x40001a0	            0x7420	                            je 0x40001c2	       861	git-compat-util.h	FUNCTION_75	IF_1
0x40001a2	        0x488b4d00	                    mov rcx, qword [rbp]	        46	string-list.c	FUNCTION_15	IF_2	CALL_3
0x40001a6	          0x4863c3	                         movsxd rax, ebx	        46	string-list.c	FUNCTION_15	IF_2	CALL_3
0x40001a9	        0x488d7801	                      lea rdi, [rax + 1]	        46	string-list.c	FUNCTION_15	IF_2	CALL_3
0x40001ad	        0x48c1e704	                              shl rdi, 4	        46	string-list.c	FUNCTION_15	IF_2	CALL_3
0x40001b1	        0x48c1e204	                              shl rdx, 4	        59	string3.h	FUNCTION_2	CALL_3
0x40001b5	      0x488d7439f0	             lea rsi, [rcx + rdi - 0x10]	        59	string3.h	FUNCTION_2	CALL_3
0x40001ba	          0x4801cf	                            add rdi, rcx	        59	string3.h	FUNCTION_2	CALL_3
0x40001bd	      0xe800000000	                          call 0x40001c2	        59	string3.h	FUNCTION_2	CALL_3
0x40001c2	          0x4c63eb	                         movsxd r13, ebx	        48	string-list.c	FUNCTION_15
0x40001c5	        0x49c1e504	                              shl r13, 4	        48	string-list.c	FUNCTION_15
0x40001c9	          0x4d89ee	                            mov r14, r13	        48	string-list.c	FUNCTION_15
0x40001cc	        0x4c037500	                    add r14, qword [rbp]	        48	string-list.c	FUNCTION_15
0x40001d0	          0x4c89e0	                            mov rax, r12	        49	string-list.c	FUNCTION_15	CALL_4
0x40001d3	        0xf6451001	               test byte [rbp + 0x10], 1	        49	string-list.c	FUNCTION_15	CALL_4
0x40001d7	            0x7408	                            je 0x40001e1	        49	string-list.c	FUNCTION_15	CALL_4
0x40001d9	          0x4c89e7	                            mov rdi, r12	        49	string-list.c	FUNCTION_15	CALL_4
0x40001dc	      0xe800000000	                          call 0x40001e1	        49	string-list.c	FUNCTION_15	CALL_4
0x40001e1	          0x498906	                    mov qword [r14], rax	        48	string-list.c	FUNCTION_15
0x40001e4	        0x488b4500	                    mov rax, qword [rbp]	        50	string-list.c	FUNCTION_15
0x40001e8	    0x4ac744280800	            mov qword [rax + r13 + 8], 0	        50	string-list.c	FUNCTION_15
0x40001f1	        0x83450801	                  add dword [rbp + 8], 1	        51	string-list.c	FUNCTION_15
0x40001f5	            0x89d8	                            mov eax, ebx	        61	string-list.c	FUNCTION_16	IF_1
0x40001f7	          0xc1f81f	                           sar eax, 0x1f	        61	string-list.c	FUNCTION_16	IF_1
0x40001fa	            0x31c3	                            xor ebx, eax	        61	string-list.c	FUNCTION_16	IF_1
0x40001fc	          0x4863c3	                         movsxd rax, ebx	        63	string-list.c	FUNCTION_16
0x40001ff	        0x48c1e004	                              shl rax, 4	        63	string-list.c	FUNCTION_16
0x4000203	        0x48034500	                    add rax, qword [rbp]	        63	string-list.c	FUNCTION_16
0x4000207	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        64	string-list.c	FUNCTION_16
0x400020c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        64	string-list.c	FUNCTION_16
0x4000215	            0x7405	                            je 0x400021c	        64	string-list.c	FUNCTION_16
0x4000217	      0xe800000000	                          call 0x400021c	        64	string-list.c	FUNCTION_16
0x400021c	        0x4883c410	                           add rsp, 0x10	        64	string-list.c	FUNCTION_16
0x4000220	              0x5b	                                 pop rbx	        64	string-list.c	FUNCTION_16
0x4000221	              0x5d	                                 pop rbp	        64	string-list.c	FUNCTION_16
0x4000222	            0x415c	                                 pop r12	        64	string-list.c	FUNCTION_16
0x4000224	            0x415d	                                 pop r13	        64	string-list.c	FUNCTION_16
0x4000226	            0x415e	                                 pop r14	        64	string-list.c	FUNCTION_16
0x4000228	              0xc3	                                     ret	        64	string-list.c	FUNCTION_16
filter_string_list	SWITCH,0:DO,0:ELSE,1:WHILE,0:functions,0:CALL,3:IF,3:FOR,1	56
0x40004c2	            0x4157	                                push r15	       138	string-list.c	FUNCTION_23
0x40004c4	            0x4156	                                push r14	       138	string-list.c	FUNCTION_23
0x40004c6	            0x4155	                                push r13	       138	string-list.c	FUNCTION_23
0x40004c8	            0x4154	                                push r12	       138	string-list.c	FUNCTION_23
0x40004ca	              0x55	                                push rbp	       138	string-list.c	FUNCTION_23
0x40004cb	              0x53	                                push rbx	       138	string-list.c	FUNCTION_23
0x40004cc	        0x4883ec18	                           sub rsp, 0x18	       138	string-list.c	FUNCTION_23
0x40004d0	          0x4989fc	                            mov r12, rdi	       138	string-list.c	FUNCTION_23
0x40004d3	        0x8974240c	              mov dword [rsp + 0xc], esi	       138	string-list.c	FUNCTION_23
0x40004d7	        0x837f0800	                  cmp dword [rdi + 8], 0	       140	string-list.c	FUNCTION_23	FOR_1
0x40004db	     0xf8482000000	                            je 0x4000563	       140	string-list.c	FUNCTION_23	FOR_1
0x40004e1	          0x4989d6	                            mov r14, rdx	       140	string-list.c	FUNCTION_23	FOR_1
0x40004e4	          0x4989cf	                            mov r15, rcx	       140	string-list.c	FUNCTION_23	FOR_1
0x40004e7	    0x41bd00000000	                             mov r13d, 0	       140	string-list.c	FUNCTION_23	FOR_1
0x40004ed	      0xbd00000000	                              mov ebp, 0	       140	string-list.c	FUNCTION_23	FOR_1
0x40004f2	          0x4863dd	                         movsxd rbx, ebp	       141	string-list.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x40004f5	        0x48c1e304	                              shl rbx, 4	       141	string-list.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x40004f9	          0x4889df	                            mov rdi, rbx	       141	string-list.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x40004fc	        0x49033c24	                    add rdi, qword [r12]	       141	string-list.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4000500	          0x4c89fe	                            mov rsi, r15	       141	string-list.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4000503	          0x41ffd6	                                call r14	       141	string-list.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4000506	            0x85c0	                           test eax, eax	       141	string-list.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4000508	            0x7423	                            je 0x400052d	       141	string-list.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x400050a	        0x498b1424	                    mov rdx, qword [r12]	       142	string-list.c	FUNCTION_23	FOR_1	IF_1
0x400050e	          0x4963c5	                        movsxd rax, r13d	       142	string-list.c	FUNCTION_23	FOR_1	IF_1
0x4000511	        0x48c1e004	                              shl rax, 4	       142	string-list.c	FUNCTION_23	FOR_1	IF_1
0x4000515	        0x488b0c1a	              mov rcx, qword [rdx + rbx]	       142	string-list.c	FUNCTION_23	FOR_1	IF_1
0x4000519	      0x488b5c1a08	         mov rbx, qword [rdx + rbx + 8] 	       142	string-list.c	FUNCTION_23	FOR_1	IF_1
0x400051e	        0x48890c02	              mov qword [rdx + rax], rcx	       142	string-list.c	FUNCTION_23	FOR_1	IF_1
0x4000522	      0x48895c0208	          mov qword [rdx + rax + 8], rbx	       142	string-list.c	FUNCTION_23	FOR_1	IF_1
0x4000527	        0x458d6d01	                     lea r13d, [r13 + 1]	       142	string-list.c	FUNCTION_23	FOR_1	IF_1
0x400052b	            0xeb2a	                           jmp 0x4000557	       142	string-list.c	FUNCTION_23	FOR_1	IF_1
0x400052d	    0x41f644241001	               test byte [r12 + 0x10], 1	       144	string-list.c	FUNCTION_23	FOR_1	ELSE_1	IF_2
0x4000533	            0x740d	                            je 0x4000542	       144	string-list.c	FUNCTION_23	FOR_1	ELSE_1	IF_2
0x4000535	        0x498b0424	                    mov rax, qword [r12]	       145	string-list.c	FUNCTION_23	FOR_1	ELSE_1	CALL_2
0x4000539	        0x488b3c18	              mov rdi, qword [rax + rbx]	       145	string-list.c	FUNCTION_23	FOR_1	ELSE_1	CALL_2
0x400053d	      0xe800000000	                          call 0x4000542	       145	string-list.c	FUNCTION_23	FOR_1	ELSE_1	CALL_2
0x4000542	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       146	string-list.c	FUNCTION_23	FOR_1	ELSE_1	IF_3
0x4000547	            0x740e	                            je 0x4000557	       146	string-list.c	FUNCTION_23	FOR_1	ELSE_1	IF_3
0x4000549	        0x498b0424	                    mov rax, qword [r12]	       147	string-list.c	FUNCTION_23	FOR_1	ELSE_1	CALL_3
0x400054d	      0x488b7c1808	         mov rdi, qword [rax + rbx + 8] 	       147	string-list.c	FUNCTION_23	FOR_1	ELSE_1	CALL_3
0x4000552	      0xe800000000	                          call 0x4000557	       147	string-list.c	FUNCTION_23	FOR_1	ELSE_1	CALL_3
0x4000557	          0x83c501	                              add ebp, 1	       140	string-list.c	FUNCTION_23	FOR_1
0x400055a	      0x41396c2408	                cmp dword [r12 + 8], ebp	       140	string-list.c	FUNCTION_23	FOR_1
0x400055f	            0x7791	                            ja 0x40004f2	       140	string-list.c	FUNCTION_23	FOR_1
0x4000561	            0xeb06	                           jmp 0x4000569	       140	string-list.c	FUNCTION_23	FOR_1
0x4000563	    0x41bd00000000	                             mov r13d, 0	       139	string-list.c	FUNCTION_23
0x4000569	      0x45896c2408	               mov dword [r12 + 8], r13d	       150	string-list.c	FUNCTION_23
0x400056e	        0x4883c418	                           add rsp, 0x18	       151	string-list.c	FUNCTION_23
0x4000572	              0x5b	                                 pop rbx	       151	string-list.c	FUNCTION_23
0x4000573	              0x5d	                                 pop rbp	       151	string-list.c	FUNCTION_23
0x4000574	            0x415c	                                 pop r12	       151	string-list.c	FUNCTION_23
0x4000576	            0x415d	                                 pop r13	       151	string-list.c	FUNCTION_23
0x4000578	            0x415e	                                 pop r14	       151	string-list.c	FUNCTION_23
0x400057a	            0x415f	                                 pop r15	       151	string-list.c	FUNCTION_23
0x400057c	              0xc3	                                     ret	       151	string-list.c	FUNCTION_23
string_list_sort	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,1:IF,0:FOR,0	17
0x400077e	        0x4883ec08	                              sub rsp, 8	       236	string-list.c	FUNCTION_32
0x4000782	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       237	string-list.c	FUNCTION_32	CALL_1
0x4000786	          0x4885c0	                           test rax, rax	       237	string-list.c	FUNCTION_32	CALL_1
0x4000789	          0x8b7708	                mov esi, dword [rdi + 8]	       237	string-list.c	FUNCTION_32	CALL_1
0x400078c	    0x41b800000000	                              mov r8d, 0	       237	string-list.c	FUNCTION_32	CALL_1
0x4000792	        0x4c0f45c0	                          cmovne r8, rax	       237	string-list.c	FUNCTION_32	CALL_1
0x4000796	      0xb900000000	                              mov ecx, 0	       237	string-list.c	FUNCTION_32	CALL_1
0x400079b	      0xba10000000	                           mov edx, 0x10	       237	string-list.c	FUNCTION_32	CALL_1
0x40007a0	          0x488b3f	                    mov rdi, qword [rdi]	       237	string-list.c	FUNCTION_32	CALL_1
0x40007a3	      0xe800000000	                          call 0x40007a8	       237	string-list.c	FUNCTION_32	CALL_1
0x40007a8	            0x85c0	                           test eax, eax	       237	string-list.c	FUNCTION_32	CALL_1
0x40007aa	            0x740f	                            je 0x40007bb	       237	string-list.c	FUNCTION_32	CALL_1
0x40007ac	      0xbf00000000	                              mov edi, 0	       237	string-list.c	FUNCTION_32	CALL_1
0x40007b1	      0xb800000000	                              mov eax, 0	       237	string-list.c	FUNCTION_32	CALL_1
0x40007b6	      0xe800000000	                          call 0x40007bb	       237	string-list.c	FUNCTION_32	CALL_1
0x40007bb	        0x4883c408	                              add rsp, 8	       239	string-list.c	FUNCTION_32
0x40007bf	              0xc3	                                     ret	       239	string-list.c	FUNCTION_32
string_list_append_nodup	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,1:IF,0:FOR,0	33
0x40006fc	              0x55	                                push rbp	       210	string-list.c	FUNCTION_29
0x40006fd	              0x53	                                push rbx	       210	string-list.c	FUNCTION_29
0x40006fe	        0x4883ec08	                              sub rsp, 8	       210	string-list.c	FUNCTION_29
0x4000702	          0x4889fb	                            mov rbx, rdi	       210	string-list.c	FUNCTION_29
0x4000705	          0x4889f5	                            mov rbp, rsi	       210	string-list.c	FUNCTION_29
0x4000708	          0x8b4708	                mov eax, dword [rdi + 8]	       212	string-list.c	FUNCTION_29	CALL_1
0x400070b	          0x83c001	                              add eax, 1	       212	string-list.c	FUNCTION_29	CALL_1
0x400070e	          0x8b570c	              mov edx, dword [rdi + 0xc]	       212	string-list.c	FUNCTION_29	CALL_1
0x4000711	            0x39d0	                            cmp eax, edx	       212	string-list.c	FUNCTION_29	CALL_1
0x4000713	            0x761f	                           jbe 0x4000734	       212	string-list.c	FUNCTION_29	CALL_1
0x4000715	        0x8d745230	          lea esi, [rdx + rdx*2 + 0x30] 	       212	string-list.c	FUNCTION_29	CALL_1
0x4000719	            0xd1ee	                              shr esi, 1	       212	string-list.c	FUNCTION_29	CALL_1
0x400071b	            0x39f0	                            cmp eax, esi	       212	string-list.c	FUNCTION_29	CALL_1
0x400071d	           0xf47f0	                          cmova esi, eax	       212	string-list.c	FUNCTION_29	CALL_1
0x4000720	          0x89770c	              mov dword [rdi + 0xc], esi	       212	string-list.c	FUNCTION_29	CALL_1
0x4000723	            0x89f6	                            mov esi, esi	       212	string-list.c	FUNCTION_29	CALL_1
0x4000725	        0x48c1e604	                              shl rsi, 4	       212	string-list.c	FUNCTION_29	CALL_1
0x4000729	          0x488b3f	                    mov rdi, qword [rdi]	       212	string-list.c	FUNCTION_29	CALL_1
0x400072c	      0xe800000000	                          call 0x4000731	       212	string-list.c	FUNCTION_29	CALL_1
0x4000731	          0x488903	                    mov qword [rbx], rax	       212	string-list.c	FUNCTION_29	CALL_1
0x4000734	          0x488b0b	                    mov rcx, qword [rbx]	       213	string-list.c	FUNCTION_29
0x4000737	          0x8b5308	                mov edx, dword [rbx + 8]	       213	string-list.c	FUNCTION_29
0x400073a	          0x8d4201	                      lea eax, [rdx + 1]	       213	string-list.c	FUNCTION_29
0x400073d	          0x894308	                mov dword [rbx + 8], eax	       213	string-list.c	FUNCTION_29
0x4000740	            0x89d0	                            mov eax, edx	       213	string-list.c	FUNCTION_29
0x4000742	        0x48c1e004	                              shl rax, 4	       213	string-list.c	FUNCTION_29
0x4000746	        0x488d0401	                    lea rax, [rcx + rax]	       213	string-list.c	FUNCTION_29
0x400074a	          0x488928	                    mov qword [rax], rbp	       214	string-list.c	FUNCTION_29
0x400074d	    0x48c740080000	                  mov qword [rax + 8], 0	       215	string-list.c	FUNCTION_29
0x4000755	        0x4883c408	                              add rsp, 8	       217	string-list.c	FUNCTION_29
0x4000759	              0x5b	                                 pop rbx	       217	string-list.c	FUNCTION_29
0x400075a	              0x5d	                                 pop rbp	       217	string-list.c	FUNCTION_29
0x400075b	              0xc3	                                     ret	       217	string-list.c	FUNCTION_29
unsorted_string_list_lookup	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,2:IF,1:FOR,0	46
0x40007c0	            0x4155	                                push r13	       243	string-list.c	FUNCTION_33
0x40007c2	            0x4154	                                push r12	       243	string-list.c	FUNCTION_33
0x40007c4	              0x55	                                push rbp	       243	string-list.c	FUNCTION_33
0x40007c5	              0x53	                                push rbx	       243	string-list.c	FUNCTION_33
0x40007c6	        0x4883ec08	                              sub rsp, 8	       243	string-list.c	FUNCTION_33
0x40007ca	        0x4c8b6718	            mov r12, qword [rdi + 0x18] 	       245	string-list.c	FUNCTION_33
0x40007ce	          0x4d85e4	                           test r12, r12	       245	string-list.c	FUNCTION_33
0x40007d1	      0xb800000000	                              mov eax, 0	       245	string-list.c	FUNCTION_33
0x40007d6	        0x4c0f44e0	                          cmove r12, rax	       245	string-list.c	FUNCTION_33
0x40007da	          0x488b1f	                    mov rbx, qword [rdi]	       247	string-list.c	FUNCTION_33	CALL_1
0x40007dd	          0x4885db	                           test rbx, rbx	       247	string-list.c	FUNCTION_33	CALL_1
0x40007e0	            0x743f	                            je 0x4000821	       247	string-list.c	FUNCTION_33	CALL_1
0x40007e2	          0x4989f5	                            mov r13, rsi	       247	string-list.c	FUNCTION_33	CALL_1
0x40007e5	          0x4889fd	                            mov rbp, rdi	       247	string-list.c	FUNCTION_33	CALL_1
0x40007e8	          0x8b4708	                mov eax, dword [rdi + 8]	       247	string-list.c	FUNCTION_33	CALL_1
0x40007eb	        0x48c1e004	                              shl rax, 4	       247	string-list.c	FUNCTION_33	CALL_1
0x40007ef	          0x4801d8	                            add rax, rbx	       247	string-list.c	FUNCTION_33	CALL_1
0x40007f2	          0x4839c3	                            cmp rbx, rax	       247	string-list.c	FUNCTION_33	CALL_1
0x40007f5	            0x7331	                           jae 0x4000828	       247	string-list.c	FUNCTION_33	CALL_1
0x40007f7	          0x488b33	                    mov rsi, qword [rbx]	       248	string-list.c	FUNCTION_33	IF_1	CALL_2
0x40007fa	          0x4c89ef	                            mov rdi, r13	       248	string-list.c	FUNCTION_33	IF_1	CALL_2
0x40007fd	          0x41ffd4	                                call r12	       248	string-list.c	FUNCTION_33	IF_1	CALL_2
0x4000800	            0x85c0	                           test eax, eax	       248	string-list.c	FUNCTION_33	IF_1	CALL_2
0x4000802	            0x742b	                            je 0x400082f	       248	string-list.c	FUNCTION_33	IF_1	CALL_2
0x4000804	        0x4883c310	                           add rbx, 0x10	       247	string-list.c	FUNCTION_33	CALL_1
0x4000808	            0x742a	                            je 0x4000834	       247	string-list.c	FUNCTION_33	CALL_1
0x400080a	          0x8b5508	                mov edx, dword [rbp + 8]	       247	string-list.c	FUNCTION_33	CALL_1
0x400080d	        0x48c1e204	                              shl rdx, 4	       247	string-list.c	FUNCTION_33	CALL_1
0x4000811	        0x48035500	                    add rdx, qword [rbp]	       247	string-list.c	FUNCTION_33	CALL_1
0x4000815	          0x4839d3	                            cmp rbx, rdx	       247	string-list.c	FUNCTION_33	CALL_1
0x4000818	            0x72dd	                            jb 0x40007f7	       247	string-list.c	FUNCTION_33	CALL_1
0x400081a	      0xb800000000	                              mov eax, 0	       250	string-list.c	FUNCTION_33
0x400081f	            0xeb18	                           jmp 0x4000839	       250	string-list.c	FUNCTION_33
0x4000821	      0xb800000000	                              mov eax, 0	       250	string-list.c	FUNCTION_33
0x4000826	            0xeb11	                           jmp 0x4000839	       250	string-list.c	FUNCTION_33
0x4000828	      0xb800000000	                              mov eax, 0	       250	string-list.c	FUNCTION_33
0x400082d	            0xeb0a	                           jmp 0x4000839	       250	string-list.c	FUNCTION_33
0x400082f	          0x4889d8	                            mov rax, rbx	       250	string-list.c	FUNCTION_33
0x4000832	            0xeb05	                           jmp 0x4000839	       250	string-list.c	FUNCTION_33
0x4000834	      0xb800000000	                              mov eax, 0	       250	string-list.c	FUNCTION_33
0x4000839	        0x4883c408	                              add rsp, 8	       251	string-list.c	FUNCTION_33
0x400083d	              0x5b	                                 pop rbx	       251	string-list.c	FUNCTION_33
0x400083e	              0x5d	                                 pop rbp	       251	string-list.c	FUNCTION_33
0x400083f	            0x415c	                                 pop r12	       251	string-list.c	FUNCTION_33
0x4000841	            0x415d	                                 pop r13	       251	string-list.c	FUNCTION_33
0x4000843	              0xc3	                                     ret	       251	string-list.c	FUNCTION_33
string_list_remove_empty_items	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,1:IF,0:FOR,0	6
0x400057d	        0x4883ec08	                              sub rsp, 8	       158	string-list.c	FUNCTION_25
0x4000581	      0xb900000000	                              mov ecx, 0	       159	string-list.c	FUNCTION_25	CALL_1
0x4000586	      0xba00000000	                              mov edx, 0	       159	string-list.c	FUNCTION_25	CALL_1
0x400058b	      0xe800000000	                          call 0x4000590	       159	string-list.c	FUNCTION_25	CALL_1
0x4000590	        0x4883c408	                              add rsp, 8	       160	string-list.c	FUNCTION_25
0x4000594	              0xc3	                                     ret	       160	string-list.c	FUNCTION_25
unsorted_string_list_has_string	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,1:IF,0:FOR,0	7
0x4000844	        0x4883ec08	                              sub rsp, 8	       255	string-list.c	FUNCTION_34
0x4000848	      0xe800000000	                          call 0x400084d	       256	string-list.c	FUNCTION_34	CALL_1
0x400084d	          0x4885c0	                           test rax, rax	       256	string-list.c	FUNCTION_34	CALL_1
0x4000850	           0xf95c0	                                setne al	       256	string-list.c	FUNCTION_34	CALL_1
0x4000853	           0xfb6c0	                           movzx eax, al	       256	string-list.c	FUNCTION_34	CALL_1
0x4000856	        0x4883c408	                              add rsp, 8	       257	string-list.c	FUNCTION_34
0x400085a	              0xc3	                                     ret	       257	string-list.c	FUNCTION_34
string_list_split	SWITCH,0:DO,0:ELSE,1:WHILE,0:functions,0:CALL,6:IF,3:FOR,1	61
0x40008c6	            0x4157	                                push r15	       271	string-list.c	FUNCTION_36
0x40008c8	            0x4156	                                push r14	       271	string-list.c	FUNCTION_36
0x40008ca	            0x4155	                                push r13	       271	string-list.c	FUNCTION_36
0x40008cc	            0x4154	                                push r12	       271	string-list.c	FUNCTION_36
0x40008ce	              0x55	                                push rbp	       271	string-list.c	FUNCTION_36
0x40008cf	              0x53	                                push rbx	       271	string-list.c	FUNCTION_36
0x40008d0	        0x4883ec18	                           sub rsp, 0x18	       271	string-list.c	FUNCTION_36
0x40008d4	        0xf6471001	               test byte [rdi + 0x10], 1	       275	string-list.c	FUNCTION_36	IF_1
0x40008d8	            0x7422	                            je 0x40008fc	       275	string-list.c	FUNCTION_36	IF_1
0x40008da	          0x4989fd	                            mov r13, rdi	       275	string-list.c	FUNCTION_36	IF_1
0x40008dd	          0x4889f3	                            mov rbx, rsi	       275	string-list.c	FUNCTION_36	IF_1
0x40008e0	          0x4189d7	                           mov r15d, edx	       275	string-list.c	FUNCTION_36	IF_1
0x40008e3	          0x4189ce	                           mov r14d, ecx	       275	string-list.c	FUNCTION_36	IF_1
0x40008e6	            0x89c8	                            mov eax, ecx	       280	string-list.c	FUNCTION_36	FOR_1	IF_2
0x40008e8	            0xf7d0	                                 not eax	       280	string-list.c	FUNCTION_36	FOR_1	IF_2
0x40008ea	          0xc1e81f	                           shr eax, 0x1f	       280	string-list.c	FUNCTION_36	FOR_1	IF_2
0x40008ed	          0x890424	                    mov dword [rsp], eax	       280	string-list.c	FUNCTION_36	FOR_1	IF_2
0x40008f0	            0x85c9	                           test ecx, ecx	       280	string-list.c	FUNCTION_36	FOR_1	IF_2
0x40008f2	            0x7417	                            je 0x400090b	       280	string-list.c	FUNCTION_36	FOR_1	IF_2
0x40008f4	    0x41bc01000000	                             mov r12d, 1	       280	string-list.c	FUNCTION_36	FOR_1	IF_2
0x40008fa	            0xeb22	                           jmp 0x400091e	       280	string-list.c	FUNCTION_36	FOR_1	IF_2
0x40008fc	      0xbf00000000	                              mov edi, 0	       276	string-list.c	FUNCTION_36	IF_1	CALL_1
0x4000901	      0xb800000000	                              mov eax, 0	       276	string-list.c	FUNCTION_36	IF_1	CALL_1
0x4000906	      0xe800000000	                          call 0x400090b	       276	string-list.c	FUNCTION_36	IF_1	CALL_1
0x400090b	    0x41bc01000000	                             mov r12d, 1	       279	string-list.c	FUNCTION_36	FOR_1
0x4000911	          0x4889de	                            mov rsi, rbx	       281	string-list.c	FUNCTION_36	FOR_1	IF_2	CALL_2
0x4000914	          0x4c89ef	                            mov rdi, r13	       281	string-list.c	FUNCTION_36	FOR_1	IF_2	CALL_2
0x4000917	      0xe800000000	                          call 0x400091c	       281	string-list.c	FUNCTION_36	FOR_1	IF_2	CALL_2
0x400091c	            0xeb4c	                           jmp 0x400096a	       282	string-list.c	FUNCTION_36	FOR_1	IF_2
0x400091e	          0x4489fe	                           mov esi, r15d	       284	string-list.c	FUNCTION_36	FOR_1	CALL_3
0x4000921	          0x4889df	                            mov rdi, rbx	       284	string-list.c	FUNCTION_36	FOR_1	CALL_3
0x4000924	      0xe800000000	                          call 0x4000929	       284	string-list.c	FUNCTION_36	FOR_1	CALL_3
0x4000929	          0x4889c5	                            mov rbp, rax	       284	string-list.c	FUNCTION_36	FOR_1	CALL_3
0x400092c	          0x4885c0	                           test rax, rax	       285	string-list.c	FUNCTION_36	FOR_1	IF_3
0x400092f	            0x742e	                            je 0x400095f	       285	string-list.c	FUNCTION_36	FOR_1	IF_3
0x4000931	          0x4889c6	                            mov rsi, rax	       286	string-list.c	FUNCTION_36	FOR_1	IF_3	CALL_5
0x4000934	          0x4829de	                            sub rsi, rbx	       286	string-list.c	FUNCTION_36	FOR_1	IF_3	CALL_5
0x4000937	          0x4889df	                            mov rdi, rbx	       286	string-list.c	FUNCTION_36	FOR_1	IF_3	CALL_5
0x400093a	      0xe800000000	                          call 0x400093f	       286	string-list.c	FUNCTION_36	FOR_1	IF_3	CALL_5
0x400093f	          0x4889c6	                            mov rsi, rax	       286	string-list.c	FUNCTION_36	FOR_1	IF_3	CALL_5
0x4000942	          0x4c89ef	                            mov rdi, r13	       286	string-list.c	FUNCTION_36	FOR_1	IF_3	CALL_5
0x4000945	      0xe800000000	                          call 0x400094a	       286	string-list.c	FUNCTION_36	FOR_1	IF_3	CALL_5
0x400094a	        0x488d5d01	                      lea rbx, [rbp + 1]	       287	string-list.c	FUNCTION_36	FOR_1	IF_3
0x400094e	        0x4183c401	                             add r12d, 1	       279	string-list.c	FUNCTION_36	FOR_1
0x4000952	          0x4539f4	                          cmp r12d, r14d	       280	string-list.c	FUNCTION_36	FOR_1	IF_2
0x4000955	            0x7ec7	                           jle 0x400091e	       280	string-list.c	FUNCTION_36	FOR_1	IF_2
0x4000957	        0x803c2400	                       cmp byte [rsp], 0	       280	string-list.c	FUNCTION_36	FOR_1	IF_2
0x400095b	            0x74c1	                            je 0x400091e	       280	string-list.c	FUNCTION_36	FOR_1	IF_2
0x400095d	            0xebb2	                           jmp 0x4000911	       280	string-list.c	FUNCTION_36	FOR_1	IF_2
0x400095f	          0x4889de	                            mov rsi, rbx	       289	string-list.c	FUNCTION_36	FOR_1	ELSE_1	CALL_6
0x4000962	          0x4c89ef	                            mov rdi, r13	       289	string-list.c	FUNCTION_36	FOR_1	ELSE_1	CALL_6
0x4000965	      0xe800000000	                          call 0x400096a	       289	string-list.c	FUNCTION_36	FOR_1	ELSE_1	CALL_6
0x400096a	          0x4489e0	                           mov eax, r12d	       293	string-list.c	FUNCTION_36
0x400096d	        0x4883c418	                           add rsp, 0x18	       293	string-list.c	FUNCTION_36
0x4000971	              0x5b	                                 pop rbx	       293	string-list.c	FUNCTION_36
0x4000972	              0x5d	                                 pop rbp	       293	string-list.c	FUNCTION_36
0x4000973	            0x415c	                                 pop r12	       293	string-list.c	FUNCTION_36
0x4000975	            0x415d	                                 pop r13	       293	string-list.c	FUNCTION_36
0x4000977	            0x415e	                                 pop r14	       293	string-list.c	FUNCTION_36
0x4000979	            0x415f	                                 pop r15	       293	string-list.c	FUNCTION_36
0x400097b	              0xc3	                                     ret	       293	string-list.c	FUNCTION_36
string_list_split_in_place	SWITCH,0:DO,0:ELSE,1:WHILE,0:functions,0:CALL,5:IF,3:FOR,1	58
0x400097c	            0x4157	                                push r15	       297	string-list.c	FUNCTION_37
0x400097e	            0x4156	                                push r14	       297	string-list.c	FUNCTION_37
0x4000980	            0x4155	                                push r13	       297	string-list.c	FUNCTION_37
0x4000982	            0x4154	                                push r12	       297	string-list.c	FUNCTION_37
0x4000984	              0x55	                                push rbp	       297	string-list.c	FUNCTION_37
0x4000985	              0x53	                                push rbx	       297	string-list.c	FUNCTION_37
0x4000986	        0x4883ec18	                           sub rsp, 0x18	       297	string-list.c	FUNCTION_37
0x400098a	        0xf6471001	               test byte [rdi + 0x10], 1	       301	string-list.c	FUNCTION_37	IF_1
0x400098e	            0x7522	                           jne 0x40009b2	       301	string-list.c	FUNCTION_37	IF_1
0x4000990	          0x4989fd	                            mov r13, rdi	       301	string-list.c	FUNCTION_37	IF_1
0x4000993	          0x4889f5	                            mov rbp, rsi	       301	string-list.c	FUNCTION_37	IF_1
0x4000996	          0x4189d7	                           mov r15d, edx	       301	string-list.c	FUNCTION_37	IF_1
0x4000999	          0x4189ce	                           mov r14d, ecx	       301	string-list.c	FUNCTION_37	IF_1
0x400099c	            0x89c8	                            mov eax, ecx	       306	string-list.c	FUNCTION_37	FOR_1	IF_2
0x400099e	            0xf7d0	                                 not eax	       306	string-list.c	FUNCTION_37	FOR_1	IF_2
0x40009a0	          0xc1e81f	                           shr eax, 0x1f	       306	string-list.c	FUNCTION_37	FOR_1	IF_2
0x40009a3	          0x890424	                    mov dword [rsp], eax	       306	string-list.c	FUNCTION_37	FOR_1	IF_2
0x40009a6	            0x85c9	                           test ecx, ecx	       306	string-list.c	FUNCTION_37	FOR_1	IF_2
0x40009a8	            0x7417	                            je 0x40009c1	       306	string-list.c	FUNCTION_37	FOR_1	IF_2
0x40009aa	    0x41bc01000000	                             mov r12d, 1	       306	string-list.c	FUNCTION_37	FOR_1	IF_2
0x40009b0	            0xeb22	                           jmp 0x40009d4	       306	string-list.c	FUNCTION_37	FOR_1	IF_2
0x40009b2	      0xbf00000000	                              mov edi, 0	       302	string-list.c	FUNCTION_37	IF_1	CALL_1
0x40009b7	      0xb800000000	                              mov eax, 0	       302	string-list.c	FUNCTION_37	IF_1	CALL_1
0x40009bc	      0xe800000000	                          call 0x40009c1	       302	string-list.c	FUNCTION_37	IF_1	CALL_1
0x40009c1	    0x41bc01000000	                             mov r12d, 1	       305	string-list.c	FUNCTION_37	FOR_1
0x40009c7	          0x4889ee	                            mov rsi, rbp	       307	string-list.c	FUNCTION_37	FOR_1	IF_2	CALL_2
0x40009ca	          0x4c89ef	                            mov rdi, r13	       307	string-list.c	FUNCTION_37	FOR_1	IF_2	CALL_2
0x40009cd	      0xe800000000	                          call 0x40009d2	       307	string-list.c	FUNCTION_37	FOR_1	IF_2	CALL_2
0x40009d2	            0xeb41	                           jmp 0x4000a15	       308	string-list.c	FUNCTION_37	FOR_1	IF_2
0x40009d4	          0x4489fe	                           mov esi, r15d	       310	string-list.c	FUNCTION_37	FOR_1	CALL_3
0x40009d7	          0x4889ef	                            mov rdi, rbp	       310	string-list.c	FUNCTION_37	FOR_1	CALL_3
0x40009da	      0xe800000000	                          call 0x40009df	       310	string-list.c	FUNCTION_37	FOR_1	CALL_3
0x40009df	          0x4889c3	                            mov rbx, rax	       310	string-list.c	FUNCTION_37	FOR_1	CALL_3
0x40009e2	          0x4885c0	                           test rax, rax	       311	string-list.c	FUNCTION_37	FOR_1	IF_3
0x40009e5	            0x7423	                            je 0x4000a0a	       311	string-list.c	FUNCTION_37	FOR_1	IF_3
0x40009e7	          0xc60000	                       mov byte [rax], 0	       312	string-list.c	FUNCTION_37	FOR_1	IF_3
0x40009ea	          0x4889ee	                            mov rsi, rbp	       313	string-list.c	FUNCTION_37	FOR_1	IF_3	CALL_4
0x40009ed	          0x4c89ef	                            mov rdi, r13	       313	string-list.c	FUNCTION_37	FOR_1	IF_3	CALL_4
0x40009f0	      0xe800000000	                          call 0x40009f5	       313	string-list.c	FUNCTION_37	FOR_1	IF_3	CALL_4
0x40009f5	        0x488d6b01	                      lea rbp, [rbx + 1]	       314	string-list.c	FUNCTION_37	FOR_1	IF_3
0x40009f9	        0x4183c401	                             add r12d, 1	       305	string-list.c	FUNCTION_37	FOR_1
0x40009fd	          0x4539f4	                          cmp r12d, r14d	       306	string-list.c	FUNCTION_37	FOR_1	IF_2
0x4000a00	            0x7ed2	                           jle 0x40009d4	       306	string-list.c	FUNCTION_37	FOR_1	IF_2
0x4000a02	        0x803c2400	                       cmp byte [rsp], 0	       306	string-list.c	FUNCTION_37	FOR_1	IF_2
0x4000a06	            0x74cc	                            je 0x40009d4	       306	string-list.c	FUNCTION_37	FOR_1	IF_2
0x4000a08	            0xebbd	                           jmp 0x40009c7	       306	string-list.c	FUNCTION_37	FOR_1	IF_2
0x4000a0a	          0x4889ee	                            mov rsi, rbp	       316	string-list.c	FUNCTION_37	FOR_1	ELSE_1	CALL_5
0x4000a0d	          0x4c89ef	                            mov rdi, r13	       316	string-list.c	FUNCTION_37	FOR_1	ELSE_1	CALL_5
0x4000a10	      0xe800000000	                          call 0x4000a15	       316	string-list.c	FUNCTION_37	FOR_1	ELSE_1	CALL_5
0x4000a15	          0x4489e0	                           mov eax, r12d	       320	string-list.c	FUNCTION_37
0x4000a18	        0x4883c418	                           add rsp, 0x18	       320	string-list.c	FUNCTION_37
0x4000a1c	              0x5b	                                 pop rbx	       320	string-list.c	FUNCTION_37
0x4000a1d	              0x5d	                                 pop rbp	       320	string-list.c	FUNCTION_37
0x4000a1e	            0x415c	                                 pop r12	       320	string-list.c	FUNCTION_37
0x4000a20	            0x415d	                                 pop r13	       320	string-list.c	FUNCTION_37
0x4000a22	            0x415e	                                 pop r14	       320	string-list.c	FUNCTION_37
0x4000a24	            0x415f	                                 pop r15	       320	string-list.c	FUNCTION_37
0x4000a26	              0xc3	                                     ret	       320	string-list.c	FUNCTION_37
string_list_remove_duplicates	SWITCH,0:DO,0:ELSE,1:WHILE,0:functions,0:CALL,3:IF,4:FOR,1	56
0x40003b4	        0x837f0801	                  cmp dword [rdi + 8], 1	       110	string-list.c	FUNCTION_21	IF_1
0x40003b8	     0xf86b4000000	                           jbe 0x4000472	       110	string-list.c	FUNCTION_21	IF_1
0x40003be	            0x4157	                                push r15	       109	string-list.c	FUNCTION_21
0x40003c0	            0x4156	                                push r14	       109	string-list.c	FUNCTION_21
0x40003c2	            0x4155	                                push r13	       109	string-list.c	FUNCTION_21
0x40003c4	            0x4154	                                push r12	       109	string-list.c	FUNCTION_21
0x40003c6	              0x55	                                push rbp	       109	string-list.c	FUNCTION_21
0x40003c7	              0x53	                                push rbx	       109	string-list.c	FUNCTION_21
0x40003c8	        0x4883ec18	                           sub rsp, 0x18	       109	string-list.c	FUNCTION_21
0x40003cc	        0x8974240c	              mov dword [rsp + 0xc], esi	       109	string-list.c	FUNCTION_21
0x40003d0	          0x4989fd	                            mov r13, rdi	       109	string-list.c	FUNCTION_21
0x40003d3	        0x4c8b7f18	            mov r15, qword [rdi + 0x18] 	       112	string-list.c	FUNCTION_21	IF_1
0x40003d7	          0x4d85ff	                           test r15, r15	       112	string-list.c	FUNCTION_21	IF_1
0x40003da	      0xb800000000	                              mov eax, 0	       112	string-list.c	FUNCTION_21	IF_1
0x40003df	        0x4c0f44f8	                          cmove r15, rax	       112	string-list.c	FUNCTION_21	IF_1
0x40003e3	    0x41be01000000	                             mov r14d, 1	       109	string-list.c	FUNCTION_21
0x40003e9	    0x41bc01000000	                             mov r12d, 1	       109	string-list.c	FUNCTION_21
0x40003ef	        0x498b4500	                    mov rax, qword [r13]	       114	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_1
0x40003f3	          0x4963dc	                        movsxd rbx, r12d	       114	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_1
0x40003f6	        0x48c1e304	                              shl rbx, 4	       114	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_1
0x40003fa	          0x4963ee	                        movsxd rbp, r14d	       114	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_1
0x40003fd	        0x48c1e504	                              shl rbp, 4	       114	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_1
0x4000401	        0x488b3418	              mov rsi, qword [rax + rbx]	       114	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_1
0x4000405	      0x488b7c28f0	       mov rdi, qword [rax + rbp - 0x10]	       114	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_1
0x400040a	          0x41ffd7	                                call r15	       114	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_1
0x400040d	            0x85c0	                           test eax, eax	       114	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_1
0x400040f	            0x752b	                           jne 0x400043c	       114	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_1
0x4000411	      0x41f6451001	               test byte [r13 + 0x10], 1	       115	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	IF_3
0x4000416	            0x740d	                            je 0x4000425	       115	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	IF_3
0x4000418	        0x498b4500	                    mov rax, qword [r13]	       116	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_2
0x400041c	        0x488b3c18	              mov rdi, qword [rax + rbx]	       116	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_2
0x4000420	      0xe800000000	                          call 0x4000425	       116	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_2
0x4000425	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       117	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	IF_4
0x400042a	            0x742a	                            je 0x4000456	       117	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	IF_4
0x400042c	        0x498b4500	                    mov rax, qword [r13]	       118	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_3
0x4000430	      0x488b7c1808	         mov rdi, qword [rax + rbx + 8] 	       118	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_3
0x4000435	      0xe800000000	                          call 0x400043a	       118	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_3
0x400043a	            0xeb1a	                           jmp 0x4000456	       118	string-list.c	FUNCTION_21	IF_1	FOR_1	IF_2	CALL_3
0x400043c	        0x498b4500	                    mov rax, qword [r13]	       120	string-list.c	FUNCTION_21	IF_1	FOR_1	ELSE_1
0x4000440	        0x4183c601	                             add r14d, 1	       120	string-list.c	FUNCTION_21	IF_1	FOR_1	ELSE_1
0x4000444	        0x488b0c18	              mov rcx, qword [rax + rbx]	       120	string-list.c	FUNCTION_21	IF_1	FOR_1	ELSE_1
0x4000448	      0x488b5c1808	         mov rbx, qword [rax + rbx + 8] 	       120	string-list.c	FUNCTION_21	IF_1	FOR_1	ELSE_1
0x400044d	        0x48890c28	              mov qword [rax + rbp], rcx	       120	string-list.c	FUNCTION_21	IF_1	FOR_1	ELSE_1
0x4000451	      0x48895c2808	          mov qword [rax + rbp + 8], rbx	       120	string-list.c	FUNCTION_21	IF_1	FOR_1	ELSE_1
0x4000456	        0x4183c401	                             add r12d, 1	       113	string-list.c	FUNCTION_21	IF_1	FOR_1
0x400045a	        0x45396508	               cmp dword [r13 + 8], r12d	       113	string-list.c	FUNCTION_21	IF_1	FOR_1
0x400045e	            0x778f	                            ja 0x40003ef	       113	string-list.c	FUNCTION_21	IF_1	FOR_1
0x4000460	        0x45897508	               mov dword [r13 + 8], r14d	       122	string-list.c	FUNCTION_21	IF_1	ELSE_1
0x4000464	        0x4883c418	                           add rsp, 0x18	       124	string-list.c	FUNCTION_21	ELSE_1
0x4000468	              0x5b	                                 pop rbx	       124	string-list.c	FUNCTION_21	ELSE_1
0x4000469	              0x5d	                                 pop rbp	       124	string-list.c	FUNCTION_21	ELSE_1
0x400046a	            0x415c	                                 pop r12	       124	string-list.c	FUNCTION_21	ELSE_1
0x400046c	            0x415d	                                 pop r13	       124	string-list.c	FUNCTION_21	ELSE_1
0x400046e	            0x415e	                                 pop r14	       124	string-list.c	FUNCTION_21	ELSE_1
0x4000470	            0x415f	                                 pop r15	       124	string-list.c	FUNCTION_21	ELSE_1
0x4000472	            0xf3c3	                                     ret	       124	string-list.c	FUNCTION_21	ELSE_1
string_list_clear_func	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,3:IF,3:FOR,2	43
0x400061d	            0x4154	                                push r12	       181	string-list.c	FUNCTION_27
0x400061f	              0x55	                                push rbp	       181	string-list.c	FUNCTION_27
0x4000620	              0x53	                                push rbx	       181	string-list.c	FUNCTION_27
0x4000621	          0x4889fb	                            mov rbx, rdi	       181	string-list.c	FUNCTION_27
0x4000624	        0x48833f00	                      cmp qword [rdi], 0	       182	string-list.c	FUNCTION_27	IF_1
0x4000628	            0x7462	                            je 0x400068c	       182	string-list.c	FUNCTION_27	IF_1
0x400062a	          0x4989f4	                            mov r12, rsi	       182	string-list.c	FUNCTION_27	IF_1
0x400062d	          0x4885f6	                           test rsi, rsi	       184	string-list.c	FUNCTION_27	IF_1	IF_2
0x4000630	            0x7427	                            je 0x4000659	       184	string-list.c	FUNCTION_27	IF_1	IF_2
0x4000632	        0x837f0800	                  cmp dword [rdi + 8], 0	       185	string-list.c	FUNCTION_27	IF_1	IF_2	FOR_1
0x4000636	            0x744c	                            je 0x4000684	       185	string-list.c	FUNCTION_27	IF_1	IF_2	FOR_1
0x4000638	      0xbd00000000	                              mov ebp, 0	       185	string-list.c	FUNCTION_27	IF_1	IF_2	FOR_1
0x400063d	          0x4863c5	                         movsxd rax, ebp	       186	string-list.c	FUNCTION_27	IF_1	IF_2	CALL_1
0x4000640	        0x48c1e004	                              shl rax, 4	       186	string-list.c	FUNCTION_27	IF_1	IF_2	CALL_1
0x4000644	          0x480303	                    add rax, qword [rbx]	       186	string-list.c	FUNCTION_27	IF_1	IF_2	CALL_1
0x4000647	        0x488b7808	                mov rdi, qword [rax + 8]	       186	string-list.c	FUNCTION_27	IF_1	IF_2	CALL_1
0x400064b	          0x488b30	                    mov rsi, qword [rax]	       186	string-list.c	FUNCTION_27	IF_1	IF_2	CALL_1
0x400064e	          0x41ffd4	                                call r12	       186	string-list.c	FUNCTION_27	IF_1	IF_2	CALL_1
0x4000651	          0x83c501	                              add ebp, 1	       185	string-list.c	FUNCTION_27	IF_1	IF_2	FOR_1
0x4000654	          0x396b08	                cmp dword [rbx + 8], ebp	       185	string-list.c	FUNCTION_27	IF_1	IF_2	FOR_1
0x4000657	            0x77e4	                            ja 0x400063d	       185	string-list.c	FUNCTION_27	IF_1	IF_2	FOR_1
0x4000659	        0xf6431001	               test byte [rbx + 0x10], 1	       188	string-list.c	FUNCTION_27	IF_1	IF_3
0x400065d	            0x7425	                            je 0x4000684	       188	string-list.c	FUNCTION_27	IF_1	IF_3
0x400065f	        0x837b0800	                  cmp dword [rbx + 8], 0	       189	string-list.c	FUNCTION_27	IF_1	IF_3	FOR_2
0x4000663	            0x741f	                            je 0x4000684	       189	string-list.c	FUNCTION_27	IF_1	IF_3	FOR_2
0x4000665	      0xbd00000000	                              mov ebp, 0	       189	string-list.c	FUNCTION_27	IF_1	IF_3	FOR_2
0x400066a	          0x4863c5	                         movsxd rax, ebp	       190	string-list.c	FUNCTION_27	IF_1	IF_3	CALL_2
0x400066d	        0x48c1e004	                              shl rax, 4	       190	string-list.c	FUNCTION_27	IF_1	IF_3	CALL_2
0x4000671	          0x480303	                    add rax, qword [rbx]	       190	string-list.c	FUNCTION_27	IF_1	IF_3	CALL_2
0x4000674	          0x488b38	                    mov rdi, qword [rax]	       190	string-list.c	FUNCTION_27	IF_1	IF_3	CALL_2
0x4000677	      0xe800000000	                          call 0x400067c	       190	string-list.c	FUNCTION_27	IF_1	IF_3	CALL_2
0x400067c	          0x83c501	                              add ebp, 1	       189	string-list.c	FUNCTION_27	IF_1	IF_3	FOR_2
0x400067f	          0x396b08	                cmp dword [rbx + 8], ebp	       189	string-list.c	FUNCTION_27	IF_1	IF_3	FOR_2
0x4000682	            0x77e6	                            ja 0x400066a	       189	string-list.c	FUNCTION_27	IF_1	IF_3	FOR_2
0x4000684	          0x488b3b	                    mov rdi, qword [rbx]	       192	string-list.c	FUNCTION_27	IF_1	CALL_3
0x4000687	      0xe800000000	                          call 0x400068c	       192	string-list.c	FUNCTION_27	IF_1	CALL_3
0x400068c	    0x48c703000000	                      mov qword [rbx], 0	       194	string-list.c	FUNCTION_27
0x4000693	    0xc7430c000000	                mov dword [rbx + 0xc], 0	       195	string-list.c	FUNCTION_27
0x400069a	    0xc74308000000	                  mov dword [rbx + 8], 0	       195	string-list.c	FUNCTION_27
0x40006a1	              0x5b	                                 pop rbx	       196	string-list.c	FUNCTION_27
0x40006a2	              0x5d	                                 pop rbp	       196	string-list.c	FUNCTION_27
0x40006a3	            0x415c	                                 pop r12	       196	string-list.c	FUNCTION_27
0x40006a5	              0xc3	                                     ret	       196	string-list.c	FUNCTION_27
unsorted_string_list_delete_item	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,2:IF,2:FOR,0	35
0x400085b	            0x4154	                                push r12	       260	string-list.c	FUNCTION_35
0x400085d	              0x55	                                push rbp	       260	string-list.c	FUNCTION_35
0x400085e	              0x53	                                push rbx	       260	string-list.c	FUNCTION_35
0x400085f	          0x4889fb	                            mov rbx, rdi	       260	string-list.c	FUNCTION_35
0x4000862	            0x89f5	                            mov ebp, esi	       260	string-list.c	FUNCTION_35
0x4000864	          0x4189d4	                           mov r12d, edx	       260	string-list.c	FUNCTION_35
0x4000867	        0xf6471001	               test byte [rdi + 0x10], 1	       261	string-list.c	FUNCTION_35	IF_1
0x400086b	            0x7412	                            je 0x400087f	       261	string-list.c	FUNCTION_35	IF_1
0x400086d	          0x4863c6	                         movsxd rax, esi	       262	string-list.c	FUNCTION_35	CALL_1
0x4000870	        0x48c1e004	                              shl rax, 4	       262	string-list.c	FUNCTION_35	CALL_1
0x4000874	          0x480307	                    add rax, qword [rdi]	       262	string-list.c	FUNCTION_35	CALL_1
0x4000877	          0x488b38	                    mov rdi, qword [rax]	       262	string-list.c	FUNCTION_35	CALL_1
0x400087a	      0xe800000000	                          call 0x400087f	       262	string-list.c	FUNCTION_35	CALL_1
0x400087f	          0x4585e4	                         test r12d, r12d	       263	string-list.c	FUNCTION_35	IF_2
0x4000882	            0x7413	                            je 0x4000897	       263	string-list.c	FUNCTION_35	IF_2
0x4000884	          0x4863c5	                         movsxd rax, ebp	       264	string-list.c	FUNCTION_35	CALL_2
0x4000887	        0x48c1e004	                              shl rax, 4	       264	string-list.c	FUNCTION_35	CALL_2
0x400088b	          0x480303	                    add rax, qword [rbx]	       264	string-list.c	FUNCTION_35	CALL_2
0x400088e	        0x488b7808	                mov rdi, qword [rax + 8]	       264	string-list.c	FUNCTION_35	CALL_2
0x4000892	      0xe800000000	                          call 0x4000897	       264	string-list.c	FUNCTION_35	CALL_2
0x4000897	          0x488b13	                    mov rdx, qword [rbx]	       265	string-list.c	FUNCTION_35
0x400089a	          0x4863ed	                         movsxd rbp, ebp	       265	string-list.c	FUNCTION_35
0x400089d	        0x48c1e504	                              shl rbp, 4	       265	string-list.c	FUNCTION_35
0x40008a1	          0x8b4308	                mov eax, dword [rbx + 8]	       265	string-list.c	FUNCTION_35
0x40008a4	          0x8d40ff	                      lea eax, [rax - 1]	       265	string-list.c	FUNCTION_35
0x40008a7	        0x48c1e004	                              shl rax, 4	       265	string-list.c	FUNCTION_35
0x40008ab	        0x488b3402	              mov rsi, qword [rdx + rax]	       265	string-list.c	FUNCTION_35
0x40008af	      0x488b7c0208	         mov rdi, qword [rdx + rax + 8] 	       265	string-list.c	FUNCTION_35
0x40008b4	        0x4889342a	              mov qword [rdx + rbp], rsi	       265	string-list.c	FUNCTION_35
0x40008b8	      0x48897c2a08	          mov qword [rdx + rbp + 8], rdi	       265	string-list.c	FUNCTION_35
0x40008bd	        0x836b0801	                  sub dword [rbx + 8], 1	       266	string-list.c	FUNCTION_35
0x40008c1	              0x5b	                                 pop rbx	       267	string-list.c	FUNCTION_35
0x40008c2	              0x5d	                                 pop rbp	       267	string-list.c	FUNCTION_35
0x40008c3	            0x415c	                                 pop r12	       267	string-list.c	FUNCTION_35
0x40008c5	              0xc3	                                     ret	       267	string-list.c	FUNCTION_35
item_is_not_empty	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,0:IF,0:FOR,0	5
0x40000dd	          0x488b07	                    mov rax, qword [rdi]	       155	string-list.c	FUNCTION_24
0x40000e0	          0x803800	                       cmp byte [rax], 0	       155	string-list.c	FUNCTION_24
0x40000e3	           0xf95c0	                                setne al	       155	string-list.c	FUNCTION_24
0x40000e6	           0xfb6c0	                           movzx eax, al	       155	string-list.c	FUNCTION_24
0x40000e9	              0xc3	                                     ret	       156	string-list.c	FUNCTION_24
string_list_clear	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,3:IF,3:FOR,2	42
0x4000595	            0x4154	                                push r12	       163	string-list.c	FUNCTION_26
0x4000597	              0x55	                                push rbp	       163	string-list.c	FUNCTION_26
0x4000598	              0x53	                                push rbx	       163	string-list.c	FUNCTION_26
0x4000599	          0x4889fb	                            mov rbx, rdi	       163	string-list.c	FUNCTION_26
0x400059c	        0x48833f00	                      cmp qword [rdi], 0	       164	string-list.c	FUNCTION_26	IF_1
0x40005a0	            0x7461	                            je 0x4000603	       164	string-list.c	FUNCTION_26	IF_1
0x40005a2	          0x4189f4	                           mov r12d, esi	       164	string-list.c	FUNCTION_26	IF_1
0x40005a5	        0xf6471001	               test byte [rdi + 0x10], 1	       166	string-list.c	FUNCTION_26	IF_1	IF_2
0x40005a9	            0x7425	                            je 0x40005d0	       166	string-list.c	FUNCTION_26	IF_1	IF_2
0x40005ab	        0x837f0800	                  cmp dword [rdi + 8], 0	       167	string-list.c	FUNCTION_26	IF_1	IF_2	FOR_1
0x40005af	            0x744a	                            je 0x40005fb	       167	string-list.c	FUNCTION_26	IF_1	IF_2	FOR_1
0x40005b1	      0xbd00000000	                              mov ebp, 0	       167	string-list.c	FUNCTION_26	IF_1	IF_2	FOR_1
0x40005b6	          0x4863c5	                         movsxd rax, ebp	       168	string-list.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x40005b9	        0x48c1e004	                              shl rax, 4	       168	string-list.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x40005bd	          0x480303	                    add rax, qword [rbx]	       168	string-list.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x40005c0	          0x488b38	                    mov rdi, qword [rax]	       168	string-list.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x40005c3	      0xe800000000	                          call 0x40005c8	       168	string-list.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x40005c8	          0x83c501	                              add ebp, 1	       167	string-list.c	FUNCTION_26	IF_1	IF_2	FOR_1
0x40005cb	          0x396b08	                cmp dword [rbx + 8], ebp	       167	string-list.c	FUNCTION_26	IF_1	IF_2	FOR_1
0x40005ce	            0x77e6	                            ja 0x40005b6	       167	string-list.c	FUNCTION_26	IF_1	IF_2	FOR_1
0x40005d0	          0x4585e4	                         test r12d, r12d	       170	string-list.c	FUNCTION_26	IF_1	IF_3
0x40005d3	            0x7426	                            je 0x40005fb	       170	string-list.c	FUNCTION_26	IF_1	IF_3
0x40005d5	        0x837b0800	                  cmp dword [rbx + 8], 0	       171	string-list.c	FUNCTION_26	IF_1	IF_3	FOR_2
0x40005d9	            0x7420	                            je 0x40005fb	       171	string-list.c	FUNCTION_26	IF_1	IF_3	FOR_2
0x40005db	      0xbd00000000	                              mov ebp, 0	       171	string-list.c	FUNCTION_26	IF_1	IF_3	FOR_2
0x40005e0	          0x4863c5	                         movsxd rax, ebp	       172	string-list.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x40005e3	        0x48c1e004	                              shl rax, 4	       172	string-list.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x40005e7	          0x480303	                    add rax, qword [rbx]	       172	string-list.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x40005ea	        0x488b7808	                mov rdi, qword [rax + 8]	       172	string-list.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x40005ee	      0xe800000000	                          call 0x40005f3	       172	string-list.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x40005f3	          0x83c501	                              add ebp, 1	       171	string-list.c	FUNCTION_26	IF_1	IF_3	FOR_2
0x40005f6	          0x396b08	                cmp dword [rbx + 8], ebp	       171	string-list.c	FUNCTION_26	IF_1	IF_3	FOR_2
0x40005f9	            0x77e5	                            ja 0x40005e0	       171	string-list.c	FUNCTION_26	IF_1	IF_3	FOR_2
0x40005fb	          0x488b3b	                    mov rdi, qword [rbx]	       174	string-list.c	FUNCTION_26	IF_1	CALL_3
0x40005fe	      0xe800000000	                          call 0x4000603	       174	string-list.c	FUNCTION_26	IF_1	CALL_3
0x4000603	    0x48c703000000	                      mov qword [rbx], 0	       176	string-list.c	FUNCTION_26
0x400060a	    0xc7430c000000	                mov dword [rbx + 0xc], 0	       177	string-list.c	FUNCTION_26
0x4000611	    0xc74308000000	                  mov dword [rbx + 8], 0	       177	string-list.c	FUNCTION_26
0x4000618	              0x5b	                                 pop rbx	       178	string-list.c	FUNCTION_26
0x4000619	              0x5d	                                 pop rbp	       178	string-list.c	FUNCTION_26
0x400061a	            0x415c	                                 pop r12	       178	string-list.c	FUNCTION_26
0x400061c	              0xc3	                                     ret	       178	string-list.c	FUNCTION_26
string_list_remove	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,4:IF,3:FOR,0	50
0x4000229	            0x4154	                                push r12	        68	string-list.c	FUNCTION_17
0x400022b	              0x55	                                push rbp	        68	string-list.c	FUNCTION_17
0x400022c	              0x53	                                push rbx	        68	string-list.c	FUNCTION_17
0x400022d	        0x4883ec10	                           sub rsp, 0x10	        68	string-list.c	FUNCTION_17
0x4000231	          0x4889fd	                            mov rbp, rdi	        68	string-list.c	FUNCTION_17
0x4000234	          0x4189d4	                           mov r12d, edx	        68	string-list.c	FUNCTION_17
0x4000237	    0x64488b042528	                mov rax, qword fs:[0x28]	        68	string-list.c	FUNCTION_17
0x4000240	      0x4889442408	                mov qword [rsp + 8], rax	        68	string-list.c	FUNCTION_17
0x4000245	            0x31c0	                            xor eax, eax	        68	string-list.c	FUNCTION_17
0x4000247	      0x488d542404	                      lea rdx, [rsp + 4]	        70	string-list.c	FUNCTION_17	CALL_1
0x400024c	      0xe8effdffff	                call sym.get_entry_index	        70	string-list.c	FUNCTION_17	CALL_1
0x4000251	      0x837c240400	                  cmp dword [rsp + 4], 0	        72	string-list.c	FUNCTION_17	IF_1
0x4000256	            0x745f	                            je 0x40002b7	        72	string-list.c	FUNCTION_17	IF_1
0x4000258	            0x89c3	                            mov ebx, eax	        72	string-list.c	FUNCTION_17	IF_1
0x400025a	        0xf6451001	               test byte [rbp + 0x10], 1	        73	string-list.c	FUNCTION_17	IF_1	IF_2
0x400025e	            0x7412	                            je 0x4000272	        73	string-list.c	FUNCTION_17	IF_1	IF_2
0x4000260	            0x4898	                                    cdqe	        74	string-list.c	FUNCTION_17	IF_1	CALL_2
0x4000262	        0x48c1e004	                              shl rax, 4	        74	string-list.c	FUNCTION_17	IF_1	CALL_2
0x4000266	        0x48034500	                    add rax, qword [rbp]	        74	string-list.c	FUNCTION_17	IF_1	CALL_2
0x400026a	          0x488b38	                    mov rdi, qword [rax]	        74	string-list.c	FUNCTION_17	IF_1	CALL_2
0x400026d	      0xe800000000	                          call 0x4000272	        74	string-list.c	FUNCTION_17	IF_1	CALL_2
0x4000272	          0x4585e4	                         test r12d, r12d	        75	string-list.c	FUNCTION_17	IF_1	IF_3
0x4000275	            0x7414	                            je 0x400028b	        75	string-list.c	FUNCTION_17	IF_1	IF_3
0x4000277	          0x4863c3	                         movsxd rax, ebx	        76	string-list.c	FUNCTION_17	IF_1	CALL_3
0x400027a	        0x48c1e004	                              shl rax, 4	        76	string-list.c	FUNCTION_17	IF_1	CALL_3
0x400027e	        0x48034500	                    add rax, qword [rbp]	        76	string-list.c	FUNCTION_17	IF_1	CALL_3
0x4000282	        0x488b7808	                mov rdi, qword [rax + 8]	        76	string-list.c	FUNCTION_17	IF_1	CALL_3
0x4000286	      0xe800000000	                          call 0x400028b	        76	string-list.c	FUNCTION_17	IF_1	CALL_3
0x400028b	          0x8b4508	                mov eax, dword [rbp + 8]	        78	string-list.c	FUNCTION_17	IF_1
0x400028e	          0x8d50ff	                      lea edx, [rax - 1]	        78	string-list.c	FUNCTION_17	IF_1
0x4000291	          0x895508	                mov dword [rbp + 8], edx	        78	string-list.c	FUNCTION_17	IF_1
0x4000294	            0x29da	                            sub edx, ebx	        79	string-list.c	FUNCTION_17	IF_1	CALL_4
0x4000296	          0x4885d2	                           test rdx, rdx	       861	git-compat-util.h	FUNCTION_75	IF_1
0x4000299	            0x741c	                            je 0x40002b7	       861	git-compat-util.h	FUNCTION_75	IF_1
0x400029b	        0x488b7d00	                    mov rdi, qword [rbp]	        79	string-list.c	FUNCTION_17	IF_1	CALL_4
0x400029f	          0x4863db	                         movsxd rbx, ebx	        79	string-list.c	FUNCTION_17	IF_1	CALL_4
0x40002a2	        0x48c1e304	                              shl rbx, 4	        79	string-list.c	FUNCTION_17	IF_1	CALL_4
0x40002a6	        0x48c1e204	                              shl rdx, 4	        59	string3.h	FUNCTION_2	CALL_3
0x40002aa	      0x488d741f10	            lea rsi, [rdi + rbx + 0x10] 	        59	string3.h	FUNCTION_2	CALL_3
0x40002af	          0x4801df	                            add rdi, rbx	        59	string3.h	FUNCTION_2	CALL_3
0x40002b2	      0xe800000000	                          call 0x40002b7	        59	string3.h	FUNCTION_2	CALL_3
0x40002b7	      0x488b442408	                mov rax, qword [rsp + 8]	        81	string-list.c	FUNCTION_17
0x40002bc	    0x644833042528	                xor rax, qword fs:[0x28]	        81	string-list.c	FUNCTION_17
0x40002c5	            0x7405	                            je 0x40002cc	        81	string-list.c	FUNCTION_17
0x40002c7	      0xe800000000	                          call 0x40002cc	        81	string-list.c	FUNCTION_17
0x40002cc	        0x4883c410	                           add rsp, 0x10	        81	string-list.c	FUNCTION_17
0x40002d0	              0x5b	                                 pop rbx	        81	string-list.c	FUNCTION_17
0x40002d1	              0x5d	                                 pop rbp	        81	string-list.c	FUNCTION_17
0x40002d2	            0x415c	                                 pop r12	        81	string-list.c	FUNCTION_17
0x40002d4	              0xc3	                                     ret	        81	string-list.c	FUNCTION_17
string_list_has_string	SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,1:IF,0:FOR,0	13
0x40002d5	        0x4883ec18	                           sub rsp, 0x18	        84	string-list.c	FUNCTION_18
0x40002d9	    0x64488b042528	                mov rax, qword fs:[0x28]	        84	string-list.c	FUNCTION_18
0x40002e2	      0x4889442408	                mov qword [rsp + 8], rax	        84	string-list.c	FUNCTION_18
0x40002e7	            0x31c0	                            xor eax, eax	        84	string-list.c	FUNCTION_18
0x40002e9	      0x488d542404	                      lea rdx, [rsp + 4]	        86	string-list.c	FUNCTION_18	CALL_1
0x40002ee	      0xe84dfdffff	                call sym.get_entry_index	        86	string-list.c	FUNCTION_18	CALL_1
0x40002f3	        0x8b442404	                mov eax, dword [rsp + 4]	        88	string-list.c	FUNCTION_18
0x40002f7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        88	string-list.c	FUNCTION_18
0x40002fc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        88	string-list.c	FUNCTION_18
0x4000305	            0x7405	                            je 0x400030c	        88	string-list.c	FUNCTION_18
0x4000307	      0xe800000000	                          call 0x400030c	        88	string-list.c	FUNCTION_18
0x400030c	        0x4883c418	                           add rsp, 0x18	        88	string-list.c	FUNCTION_18
0x4000310	              0xc3	                                     ret	        88	string-list.c	FUNCTION_18
