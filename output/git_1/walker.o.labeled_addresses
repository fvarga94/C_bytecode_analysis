mark_complete	functions,0:IF,1:CALL,2:ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0	13
0x4000040	        0x4883ec08	                              sub rsp, 8	       205	walker.c	FUNCTION_10
0x4000044	          0x4889f7	                            mov rdi, rsi	       205	walker.c	FUNCTION_10
0x4000047	      0xbe01000000	                              mov esi, 1	       206	walker.c	FUNCTION_10	CALL_1
0x400004c	      0xe800000000	                          call 0x4000051	       206	walker.c	FUNCTION_10	CALL_1
0x4000051	          0x4885c0	                           test rax, rax	       208	walker.c	FUNCTION_10	IF_1
0x4000054	            0x7410	                            je 0x4000066	       208	walker.c	FUNCTION_10	IF_1
0x4000056	          0x830810	                    or dword [rax], 0x10	       209	walker.c	FUNCTION_10	IF_1
0x4000059	      0xbe00000000	                              mov esi, 0	       210	walker.c	FUNCTION_10	IF_1	CALL_2
0x400005e	          0x4889c7	                            mov rdi, rax	       210	walker.c	FUNCTION_10	IF_1	CALL_2
0x4000061	      0xe800000000	                          call 0x4000066	       210	walker.c	FUNCTION_10	IF_1	CALL_2
0x4000066	      0xb800000000	                              mov eax, 0	       213	walker.c	FUNCTION_10
0x400006b	        0x4883c408	                              add rsp, 8	       213	walker.c	FUNCTION_10
0x400006f	              0xc3	                                     ret	       213	walker.c	FUNCTION_10
process	functions,0:IF,3:CALL,3:ELSE,1:WHILE,0:FOR,0:SWITCH,0:DO,0	42
0x4000070	            0x8b06	                    mov eax, dword [rsi]	       139	walker.c	FUNCTION_7	IF_1
0x4000072	          0xc1e804	                              shr eax, 4	       139	walker.c	FUNCTION_7	IF_1
0x4000075	      0x25ffffff07	                      and eax, 0x7ffffff	       139	walker.c	FUNCTION_7	IF_1
0x400007a	            0xa802	                              test al, 2	       139	walker.c	FUNCTION_7	IF_1
0x400007c	            0x756d	                           jne 0x40000eb	       139	walker.c	FUNCTION_7	IF_1
0x400007e	            0x4154	                                push r12	       138	walker.c	FUNCTION_7
0x4000080	              0x55	                                push rbp	       138	walker.c	FUNCTION_7
0x4000081	              0x53	                                push rbx	       138	walker.c	FUNCTION_7
0x4000082	          0x4889f3	                            mov rbx, rsi	       138	walker.c	FUNCTION_7
0x4000085	          0x4889fd	                            mov rbp, rdi	       138	walker.c	FUNCTION_7
0x4000088	          0x83c802	                               or eax, 2	       141	walker.c	FUNCTION_7
0x400008b	          0xc1e004	                              shl eax, 4	       141	walker.c	FUNCTION_7
0x400008e	            0x8b16	                    mov edx, dword [rsi]	       141	walker.c	FUNCTION_7
0x4000090	    0x81e20f000080	                     and edx, 0x8000000f	       141	walker.c	FUNCTION_7
0x4000096	             0x9d0	                             or eax, edx	       141	walker.c	FUNCTION_7
0x4000098	            0x8906	                    mov dword [rsi], eax	       141	walker.c	FUNCTION_7
0x400009a	        0x4c8d6604	                      lea r12, [rsi + 4]	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x400009e	          0x4c89e7	                            mov rdi, r12	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x40000a1	      0xe800000000	                          call 0x40000a6	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x40000a6	            0x85c0	                           test eax, eax	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x40000a8	            0x7405	                            je 0x40000af	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x40000aa	          0x830b40	                    or dword [rbx], 0x40	       145	walker.c	FUNCTION_7	IF_2
0x40000ad	            0xeb0e	                           jmp 0x40000bd	       145	walker.c	FUNCTION_7	IF_2
0x40000af	          0xf60310	                   test byte [rbx], 0x10	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x40000b2	            0x752d	                           jne 0x40000e1	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x40000b4	          0x4c89e6	                            mov rsi, r12	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x40000b7	          0x4889ef	                            mov rdi, rbp	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x40000ba	          0xff5510	                 call qword [rbp + 0x10]	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x40000bd	    0x488b35000000	            mov rsi, qword [0x040000c4] 	       153	walker.c	FUNCTION_7	CALL_3
0x40000c4	          0x4889df	                            mov rdi, rbx	       153	walker.c	FUNCTION_7	CALL_3
0x40000c7	      0xe800000000	                          call 0x40000cc	       153	walker.c	FUNCTION_7	CALL_3
0x40000cc	    0x488b05000000	            mov rax, qword [0x040000d3] 	       154	walker.c	FUNCTION_7
0x40000d3	          0x488b00	                    mov rax, qword [rax]	       154	walker.c	FUNCTION_7
0x40000d6	        0x4883c008	                              add rax, 8	       154	walker.c	FUNCTION_7
0x40000da	    0x488905000000	            mov qword [0x040000e1], rax 	       154	walker.c	FUNCTION_7
0x40000e1	      0xb800000000	                              mov eax, 0	       156	walker.c	FUNCTION_7
0x40000e6	              0x5b	                                 pop rbx	       156	walker.c	FUNCTION_7
0x40000e7	              0x5d	                                 pop rbp	       156	walker.c	FUNCTION_7
0x40000e8	            0x415c	                                 pop r12	       156	walker.c	FUNCTION_7
0x40000ea	              0xc3	                                     ret	       156	walker.c	FUNCTION_7
0x40000eb	      0xb800000000	                              mov eax, 0	       156	walker.c	FUNCTION_7
0x40000f0	              0xc3	                                     ret	       156	walker.c	FUNCTION_7
walker_targets_free	functions,0:IF,1:CALL,2:ELSE,0:WHILE,1:FOR,0:SWITCH,0:DO,0	25
0x400035e	            0x4155	                                push r13	       245	walker.c	FUNCTION_12
0x4000360	            0x4154	                                push r12	       245	walker.c	FUNCTION_12
0x4000362	              0x55	                                push rbp	       245	walker.c	FUNCTION_12
0x4000363	              0x53	                                push rbx	       245	walker.c	FUNCTION_12
0x4000364	        0x4883ec08	                              sub rsp, 8	       245	walker.c	FUNCTION_12
0x4000368	          0x4989f5	                            mov r13, rsi	       245	walker.c	FUNCTION_12
0x400036b	          0x4989d4	                            mov r12, rdx	       245	walker.c	FUNCTION_12
0x400036e	          0x8d5fff	                      lea ebx, [rdi - 1]	       245	walker.c	FUNCTION_12
0x4000371	            0xeb1e	                           jmp 0x4000391	       246	walker.c	FUNCTION_12	WHILE_1
0x4000373	          0x4863eb	                         movsxd rbp, ebx	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0x4000376	      0x498b7ced00	            mov rdi, qword [r13 + rbp*8]	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0x400037b	      0xe800000000	                          call 0x4000380	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0x4000380	          0x4d85e4	                           test r12, r12	       248	walker.c	FUNCTION_12	WHILE_1	IF_1
0x4000383	            0x7409	                            je 0x400038e	       248	walker.c	FUNCTION_12	WHILE_1	IF_1
0x4000385	        0x498b3cec	            mov rdi, qword [r12 + rbp*8]	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0x4000389	      0xe800000000	                          call 0x400038e	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0x400038e	          0x83eb01	                              sub ebx, 1	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0x4000391	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       246	walker.c	FUNCTION_12	WHILE_1
0x4000394	            0x75dd	                           jne 0x4000373	       246	walker.c	FUNCTION_12	WHILE_1
0x4000396	        0x4883c408	                              add rsp, 8	       251	walker.c	FUNCTION_12
0x400039a	              0x5b	                                 pop rbx	       251	walker.c	FUNCTION_12
0x400039b	              0x5d	                                 pop rbp	       251	walker.c	FUNCTION_12
0x400039c	            0x415c	                                 pop r12	       251	walker.c	FUNCTION_12
0x400039e	            0x415d	                                 pop r13	       251	walker.c	FUNCTION_12
0x40003a0	              0xc3	                                     ret	       251	walker.c	FUNCTION_12
walker_targets_stdin	functions,0:IF,3:CALL,7:ELSE,0:WHILE,1:FOR,0:SWITCH,0:DO,0	106
0x40001b7	            0x4157	                                push r15	       216	walker.c	FUNCTION_11
0x40001b9	            0x4156	                                push r14	       216	walker.c	FUNCTION_11
0x40001bb	            0x4155	                                push r13	       216	walker.c	FUNCTION_11
0x40001bd	            0x4154	                                push r12	       216	walker.c	FUNCTION_11
0x40001bf	              0x55	                                push rbp	       216	walker.c	FUNCTION_11
0x40001c0	              0x53	                                push rbx	       216	walker.c	FUNCTION_11
0x40001c1	        0x4883ec38	                           sub rsp, 0x38	       216	walker.c	FUNCTION_11
0x40001c5	          0x4989ff	                            mov r15, rdi	       216	walker.c	FUNCTION_11
0x40001c8	          0x4989f6	                            mov r14, rsi	       216	walker.c	FUNCTION_11
0x40001cb	    0x64488b042528	                mov rax, qword fs:[0x28]	       216	walker.c	FUNCTION_11
0x40001d4	      0x4889442428	             mov qword [rsp + 0x28], rax	       216	walker.c	FUNCTION_11
0x40001d9	            0x31c0	                            xor eax, eax	       216	walker.c	FUNCTION_11
0x40001db	    0x48c744241000	               mov qword [rsp + 0x10], 0	       218	walker.c	FUNCTION_11
0x40001e4	    0x48c744241800	               mov qword [rsp + 0x18], 0	       218	walker.c	FUNCTION_11
0x40001ed	    0x48c744242000	               mov qword [rsp + 0x20], 0	       218	walker.c	FUNCTION_11
0x40001f6	    0x48c707000000	                      mov qword [rdi], 0	       219	walker.c	FUNCTION_11
0x40001fd	    0x48c706000000	                      mov qword [rsi], 0	       219	walker.c	FUNCTION_11
0x4000204	    0xc74424040000	                  mov dword [rsp + 4], 0	       217	walker.c	FUNCTION_11
0x400020c	      0xbd00000000	                              mov ebp, 0	       217	walker.c	FUNCTION_11
0x4000211	    0x488b35000000	            mov rsi, qword [0x04000218] 	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x4000218	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x400021d	      0xe800000000	                          call 0x4000222	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x4000222	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x4000225	     0xf84cf000000	                            je 0x40002fa	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x400022b	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	       226	walker.c	FUNCTION_11	WHILE_1
0x4000230	      0xbe09000000	                              mov esi, 9	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0x4000235	          0x4c89e7	                            mov rdi, r12	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0x4000238	      0xe800000000	                          call 0x400023d	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0x400023d	          0x4885c0	                           test rax, rax	       228	walker.c	FUNCTION_11	WHILE_1	IF_2
0x4000240	     0xf84f5000000	                            je 0x400033b	       228	walker.c	FUNCTION_11	WHILE_1	IF_2
0x4000246	        0x4c8d6801	                      lea r13, [rax + 1]	       229	walker.c	FUNCTION_11	WHILE_1	IF_2
0x400024a	          0xc60000	                       mov byte [rax], 0	       229	walker.c	FUNCTION_11	WHILE_1	IF_2
0x400024d	        0x3b6c2404	                cmp ebp, dword [rsp + 4]	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000251	            0x7c65	                            jl 0x40002b8	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000253	        0x8b442404	                mov eax, dword [rsp + 4]	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000257	            0x85c0	                           test eax, eax	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000259	            0x742c	                            je 0x4000287	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x400025b	             0x1c0	                            add eax, eax	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x400025d	        0x89442404	                mov dword [rsp + 4], eax	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000261	          0x4863d0	                         movsxd rdx, eax	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0x4000264	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x400026e	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x4000271	            0x7621	                           jbe 0x4000294	       795	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x4000273	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_2
0x4000278	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_2
0x400027d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_2
0x4000282	      0xe800000000	                          call 0x4000287	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_2
0x4000287	      0xba40000000	                           mov edx, 0x40	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0x400028c	    0xc74424044000	               mov dword [rsp + 4], 0x40	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000294	    0x488d1cd50000	                        lea rbx, [rdx*8]	       798	git-compat-util.h	FUNCTION_29
0x400029c	          0x4889de	                            mov rsi, rbx	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0x400029f	          0x498b3f	                    mov rdi, qword [r15]	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0x40002a2	      0xe800000000	                          call 0x40002a7	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0x40002a7	          0x498907	                    mov qword [r15], rax	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0x40002aa	          0x4889de	                            mov rsi, rbx	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0x40002ad	          0x498b3e	                    mov rdi, qword [r14]	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0x40002b0	      0xe800000000	                          call 0x40002b5	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0x40002b5	          0x498906	                    mov qword [r14], rax	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0x40002b8	          0x4863dd	                         movsxd rbx, ebp	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x40002bb	        0x48c1e303	                              shl rbx, 3	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x40002bf	          0x4889d8	                            mov rax, rbx	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x40002c2	          0x490307	                    add rax, qword [r15]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x40002c5	      0x4889442408	                mov qword [rsp + 8], rax	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x40002ca	          0x4c89e7	                            mov rdi, r12	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x40002cd	      0xe800000000	                          call 0x40002d2	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x40002d2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x40002d7	          0x488901	                    mov qword [rcx], rax	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x40002da	          0x49031e	                    add rbx, qword [r14]	       237	walker.c	FUNCTION_11	WHILE_1	CALL_6
0x40002dd	      0xb800000000	                              mov eax, 0	       924	git-compat-util.h	FUNCTION_33	CALL_1
0x40002e2	          0x4d85ed	                           test r13, r13	       924	git-compat-util.h	FUNCTION_33	CALL_1
0x40002e5	            0x7408	                            je 0x40002ef	       924	git-compat-util.h	FUNCTION_33	CALL_1
0x40002e7	          0x4c89ef	                            mov rdi, r13	       924	git-compat-util.h	FUNCTION_33	CALL_1
0x40002ea	      0xe800000000	                          call 0x40002ef	       924	git-compat-util.h	FUNCTION_33	CALL_1
0x40002ef	          0x488903	                    mov qword [rbx], rax	       237	walker.c	FUNCTION_11	WHILE_1	CALL_6
0x40002f2	          0x83c501	                              add ebp, 1	       238	walker.c	FUNCTION_11	WHILE_1
0x40002f5	      0xe917ffffff	                           jmp 0x4000211	       239	walker.c	FUNCTION_11	WHILE_1
0x40002fa	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       240	walker.c	FUNCTION_11	CALL_7
0x40002ff	      0xe800000000	                          call 0x4000304	       240	walker.c	FUNCTION_11	CALL_7
0x4000304	            0x89e8	                            mov eax, ebp	       242	walker.c	FUNCTION_11
0x4000306	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       242	walker.c	FUNCTION_11
0x400030b	    0x644833142528	                xor rdx, qword fs:[0x28]	       242	walker.c	FUNCTION_11
0x4000314	            0x7439	                            je 0x400034f	       242	walker.c	FUNCTION_11
0x4000316	            0xeb32	                           jmp 0x400034a	       242	walker.c	FUNCTION_11
0x4000318	          0x4863dd	                         movsxd rbx, ebp	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x400031b	        0x48c1e303	                              shl rbx, 3	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x400031f	          0x4989dd	                            mov r13, rbx	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x4000322	          0x4d032f	                    add r13, qword [r15]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x4000325	          0x4c89e7	                            mov rdi, r12	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x4000328	      0xe800000000	                          call 0x400032d	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x400032d	        0x49894500	                    mov qword [r13], rax	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0x4000331	          0x49031e	                    add rbx, qword [r14]	       237	walker.c	FUNCTION_11	WHILE_1	CALL_6
0x4000334	      0xb800000000	                              mov eax, 0	       924	git-compat-util.h	FUNCTION_33	CALL_1
0x4000339	            0xebb4	                           jmp 0x40002ef	       924	git-compat-util.h	FUNCTION_33	CALL_1
0x400033b	          0x4989c5	                            mov r13, rax	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0x400033e	        0x3b6c2404	                cmp ebp, dword [rsp + 4]	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000342	     0xf8d0bffffff	                           jge 0x4000253	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000348	            0xebce	                           jmp 0x4000318	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0x400034a	      0xe800000000	                          call 0x400034f	       242	walker.c	FUNCTION_11
0x400034f	        0x4883c438	                           add rsp, 0x38	       242	walker.c	FUNCTION_11
0x4000353	              0x5b	                                 pop rbx	       242	walker.c	FUNCTION_11
0x4000354	              0x5d	                                 pop rbp	       242	walker.c	FUNCTION_11
0x4000355	            0x415c	                                 pop r12	       242	walker.c	FUNCTION_11
0x4000357	            0x415d	                                 pop r13	       242	walker.c	FUNCTION_11
0x4000359	            0x415e	                                 pop r14	       242	walker.c	FUNCTION_11
0x400035b	            0x415f	                                 pop r15	       242	walker.c	FUNCTION_11
0x400035d	              0xc3	                                     ret	       242	walker.c	FUNCTION_11
walker_free	functions,0:IF,0:CALL,2:ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0	7
0x4000a90	              0x53	                                push rbx	       328	walker.c	FUNCTION_14
0x4000a91	          0x4889fb	                            mov rbx, rdi	       328	walker.c	FUNCTION_14
0x4000a94	          0xff5720	                 call qword [rdi + 0x20]	       329	walker.c	FUNCTION_14	CALL_1
0x4000a97	          0x4889df	                            mov rdi, rbx	       330	walker.c	FUNCTION_14	CALL_2
0x4000a9a	      0xe800000000	                          call 0x4000a9f	       330	walker.c	FUNCTION_14	CALL_2
0x4000a9f	              0x5b	                                 pop rbx	       331	walker.c	FUNCTION_14
0x4000aa0	              0xc3	                                     ret	       331	walker.c	FUNCTION_14
walker_say	functions,0:IF,1:CALL,3:ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0	37
0x40000f1	    0x4881ecd80000	                           sub rsp, 0xd8	        13	walker.c	FUNCTION_1
0x40000f8	      0x4889542430	             mov qword [rsp + 0x30], rdx	        13	walker.c	FUNCTION_1
0x40000fd	      0x48894c2438	             mov qword [rsp + 0x38], rcx	        13	walker.c	FUNCTION_1
0x4000102	      0x4c89442440	              mov qword [rsp + 0x40], r8	        13	walker.c	FUNCTION_1
0x4000107	      0x4c894c2448	              mov qword [rsp + 0x48], r9	        13	walker.c	FUNCTION_1
0x400010c	            0x84c0	                             test al, al	        13	walker.c	FUNCTION_1
0x400010e	            0x7437	                            je 0x4000147	        13	walker.c	FUNCTION_1
0x4000110	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	        13	walker.c	FUNCTION_1
0x4000115	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	        13	walker.c	FUNCTION_1
0x400011a	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	        13	walker.c	FUNCTION_1
0x400011f	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	        13	walker.c	FUNCTION_1
0x4000127	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	        13	walker.c	FUNCTION_1
0x400012f	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	        13	walker.c	FUNCTION_1
0x4000137	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	        13	walker.c	FUNCTION_1
0x400013f	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	        13	walker.c	FUNCTION_1
0x4000147	    0x64488b042528	                mov rax, qword fs:[0x28]	        13	walker.c	FUNCTION_1
0x4000150	      0x4889442418	             mov qword [rsp + 0x18], rax	        13	walker.c	FUNCTION_1
0x4000155	            0x31c0	                            xor eax, eax	        13	walker.c	FUNCTION_1
0x4000157	        0x837f2800	               cmp dword [rdi + 0x28], 0	        14	walker.c	FUNCTION_1	IF_1
0x400015b	            0x743d	                            je 0x400019a	        14	walker.c	FUNCTION_1	IF_1
0x400015d	    0xc70424100000	                   mov dword [rsp], 0x10	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x4000164	    0xc74424043000	               mov dword [rsp + 4], 0x30	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x400016c	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x4000174	      0x4889442408	                mov qword [rsp + 8], rax	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x4000179	      0x488d442420	                   lea rax, [rsp + 0x20]	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x400017e	      0x4889442410	             mov qword [rsp + 0x10], rax	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x4000183	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_49	CALL_1
0x4000186	          0x4889f2	                            mov rdx, rsi	       127	stdio2.h	FUNCTION_49	CALL_1
0x4000189	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_49	CALL_1
0x400018e	    0x488b3d000000	            mov rdi, qword [0x04000195] 	       127	stdio2.h	FUNCTION_49	CALL_1
0x4000195	      0xe800000000	                          call 0x400019a	       127	stdio2.h	FUNCTION_49	CALL_1
0x400019a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        20	walker.c	FUNCTION_1
0x400019f	    0x644833042528	                xor rax, qword fs:[0x28]	        20	walker.c	FUNCTION_1
0x40001a8	            0x7405	                            je 0x40001af	        20	walker.c	FUNCTION_1
0x40001aa	      0xe800000000	                          call 0x40001af	        20	walker.c	FUNCTION_1
0x40001af	    0x4881c4d80000	                           add rsp, 0xd8	        20	walker.c	FUNCTION_1
0x40001b6	              0xc3	                                     ret	        20	walker.c	FUNCTION_1
walker_fetch	functions,0:IF,11:CALL,22:ELSE,1:WHILE,0:FOR,2:SWITCH,0:DO,0	432
0x40003a1	            0x4157	                                push r15	       255	walker.c	FUNCTION_13
0x40003a3	            0x4156	                                push r14	       255	walker.c	FUNCTION_13
0x40003a5	            0x4155	                                push r13	       255	walker.c	FUNCTION_13
0x40003a7	            0x4154	                                push r12	       255	walker.c	FUNCTION_13
0x40003a9	              0x55	                                push rbp	       255	walker.c	FUNCTION_13
0x40003aa	              0x53	                                push rbx	       255	walker.c	FUNCTION_13
0x40003ab	    0x4881ecc80000	                           sub rsp, 0xc8	       255	walker.c	FUNCTION_13
0x40003b2	          0x4989fc	                            mov r12, rdi	       255	walker.c	FUNCTION_13
0x40003b5	            0x89f0	                            mov eax, esi	       255	walker.c	FUNCTION_13
0x40003b7	        0x8974241c	             mov dword [rsp + 0x1c], esi	       255	walker.c	FUNCTION_13
0x40003bb	          0x4989d5	                            mov r13, rdx	       255	walker.c	FUNCTION_13
0x40003be	          0x4889cb	                            mov rbx, rcx	       255	walker.c	FUNCTION_13
0x40003c1	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       255	walker.c	FUNCTION_13
0x40003c6	      0x4c89442428	              mov qword [rsp + 0x28], r8	       255	walker.c	FUNCTION_13
0x40003cb	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	       255	walker.c	FUNCTION_13
0x40003d4	    0x48898c24b800	             mov qword [rsp + 0xb8], rcx	       255	walker.c	FUNCTION_13
0x40003dc	            0x31c9	                            xor ecx, ecx	       255	walker.c	FUNCTION_13
0x40003de	    0x48c744243000	               mov qword [rsp + 0x30], 0	       256	walker.c	FUNCTION_13
0x40003e7	    0x48c744243800	               mov qword [rsp + 0x38], 0	       256	walker.c	FUNCTION_13
0x40003f0	    0x48c744244000	               mov qword [rsp + 0x40], 0	       256	walker.c	FUNCTION_13
0x40003f9	    0x48c744245000	               mov qword [rsp + 0x50], 0	       257	walker.c	FUNCTION_13
0x4000402	    0x48c744245800	               mov qword [rsp + 0x58], 0	       257	walker.c	FUNCTION_13
0x400040b	    0x48c744246000	               mov qword [rsp + 0x60], 0	       257	walker.c	FUNCTION_13
0x4000414	            0x4898	                                    cdqe	       259	walker.c	FUNCTION_13	CALL_1
0x4000416	        0x488d3c80	                  lea rdi, [rax + rax*4]	       259	walker.c	FUNCTION_13	CALL_1
0x400041a	        0x48c1e702	                              shl rdi, 2	       259	walker.c	FUNCTION_13	CALL_1
0x400041e	      0xe800000000	                          call 0x4000423	       259	walker.c	FUNCTION_13	CALL_1
0x4000423	      0x4889442410	             mov qword [rsp + 0x10], rax	       259	walker.c	FUNCTION_13	CALL_1
0x4000428	    0xc70500000000	               mov dword [0x04000432], 0	       263	walker.c	FUNCTION_13
0x4000432	          0x4885db	                           test rbx, rbx	       265	walker.c	FUNCTION_13	IF_1
0x4000435	            0x7433	                            je 0x400046a	       265	walker.c	FUNCTION_13	IF_1
0x4000437	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       266	walker.c	FUNCTION_13	IF_1	CALL_2
0x400043c	      0xe800000000	                          call 0x4000441	       266	walker.c	FUNCTION_13	IF_1	CALL_2
0x4000441	      0x4889442408	                mov qword [rsp + 8], rax	       266	walker.c	FUNCTION_13	IF_1	CALL_2
0x4000446	          0x4885c0	                           test rax, rax	       267	walker.c	FUNCTION_13	IF_1	IF_2
0x4000449	            0x7528	                           jne 0x4000473	       267	walker.c	FUNCTION_13	IF_1	IF_2
0x400044b	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       268	walker.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x4000450	      0xbf00000000	                              mov edi, 0	       268	walker.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x4000455	      0xe800000000	                          call 0x400045a	       268	walker.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x400045a	      0xbbffffffff	                     mov ebx, 0xffffffff	       261	walker.c	FUNCTION_13
0x400045f	    0x41bf00000000	                             mov r15d, 0	       260	walker.c	FUNCTION_13
0x4000465	      0xe975050000	                           jmp 0x40009df	       260	walker.c	FUNCTION_13
0x400046a	    0x48c744240800	                  mov qword [rsp + 8], 0	       258	walker.c	FUNCTION_13
0x4000473	    0x41837c242c00	               cmp dword [r12 + 0x2c], 0	       273	walker.c	FUNCTION_13	IF_3
0x4000479	            0x7519	                           jne 0x4000494	       273	walker.c	FUNCTION_13	IF_3
0x400047b	      0xbe00000000	                              mov esi, 0	       274	walker.c	FUNCTION_13	IF_3	CALL_4
0x4000480	      0xbf00000000	                              mov edi, 0	       274	walker.c	FUNCTION_13	IF_3	CALL_4
0x4000485	      0xe800000000	                          call 0x400048a	       274	walker.c	FUNCTION_13	IF_3	CALL_4
0x400048a	      0xbf00000000	                              mov edi, 0	       275	walker.c	FUNCTION_13	IF_3	CALL_5
0x400048f	      0xe800000000	                          call 0x4000494	       275	walker.c	FUNCTION_13	IF_3	CALL_5
0x4000494	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       278	walker.c	FUNCTION_13	FOR_1
0x4000498	            0x85c0	                           test eax, eax	       278	walker.c	FUNCTION_13	FOR_1
0x400049a	     0xf8ec3030000	                           jle 0x4000863	       278	walker.c	FUNCTION_13	FOR_1
0x40004a0	          0x4c89eb	                            mov rbx, r13	       278	walker.c	FUNCTION_13	FOR_1
0x40004a3	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       278	walker.c	FUNCTION_13	FOR_1
0x40004a8	          0x8d40ff	                      lea eax, [rax - 1]	       278	walker.c	FUNCTION_13	FOR_1
0x40004ab	      0x4d8d7cc508	              lea r15, [r13 + rax*8 + 8]	       278	walker.c	FUNCTION_13	FOR_1
0x40004b0	          0x4989ed	                            mov r13, rbp	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0x40004b3	        0x48891c24	                    mov qword [rsp], rbx	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0x40004b7	          0x4c8b33	                    mov r14, qword [rbx]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0x40004ba	          0x4889ee	                            mov rsi, rbp	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x40004bd	          0x4c89f7	                            mov rdi, r14	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x40004c0	      0xe800000000	                          call 0x40004c5	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x40004c5	            0x85c0	                           test eax, eax	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x40004c7	     0xf847c050000	                            je 0x4000a49	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x40004cd	      0xbe00000000	                              mov esi, 0	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x40004d2	          0x4c89f7	                            mov rdi, r14	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x40004d5	      0xe800000000	                          call 0x40004da	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x40004da	            0x85c0	                           test eax, eax	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x40004dc	     0xf8544050000	                           jne 0x4000a26	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x40004e2	          0x4c89f7	                            mov rdi, r14	       192	walker.c	FUNCTION_9	IF_2	CALL_3
0x40004e5	      0xe800000000	                          call 0x40004ea	       192	walker.c	FUNCTION_9	IF_2	CALL_3
0x40004ea	          0x4989c6	                            mov r14, rax	       192	walker.c	FUNCTION_9	IF_2	CALL_3
0x40004ed	          0x4889c6	                            mov rsi, rax	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x40004f0	          0x4c89e7	                            mov rdi, r12	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x40004f3	      0x41ff542408	                    call qword [r12 + 8]	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x40004f8	            0x85c0	                           test eax, eax	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x40004fa	            0x7524	                           jne 0x4000520	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x40004fc	        0x498b5608	                mov rdx, qword [r14 + 8]	        53	string3.h	FUNCTION_62	CALL_3
0x4000500	        0x48895500	                    mov qword [rbp], rdx	        53	string3.h	FUNCTION_62	CALL_3
0x4000504	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	        53	string3.h	FUNCTION_62	CALL_3
0x4000508	        0x48895508	                mov qword [rbp + 8], rdx	        53	string3.h	FUNCTION_62	CALL_3
0x400050c	        0x418b4618	            mov eax, dword [r14 + 0x18] 	        53	string3.h	FUNCTION_62	CALL_3
0x4000510	          0x894510	            mov dword [rbp + 0x10], eax 	        53	string3.h	FUNCTION_62	CALL_3
0x4000513	          0x4c89f7	                            mov rdi, r14	       195	walker.c	FUNCTION_9	IF_2	IF_3	CALL_6
0x4000516	      0xe800000000	                          call 0x400051b	       195	walker.c	FUNCTION_9	IF_2	IF_3	CALL_6
0x400051b	      0xe929050000	                           jmp 0x4000a49	       195	walker.c	FUNCTION_9	IF_2	IF_3	CALL_6
0x4000520	          0x4c89f7	                            mov rdi, r14	       198	walker.c	FUNCTION_9	IF_2	CALL_7
0x4000523	      0xe800000000	                          call 0x4000528	       198	walker.c	FUNCTION_9	IF_2	CALL_7
0x4000528	      0xe9f9040000	                           jmp 0x4000a26	       198	walker.c	FUNCTION_9	IF_2	CALL_7
0x400052d	        0x4883c308	                              add rbx, 8	       198	walker.c	FUNCTION_9	IF_2	CALL_7
0x4000531	        0x4883c514	                           add rbp, 0x14	       198	walker.c	FUNCTION_9	IF_2	CALL_7
0x4000535	          0x4c39fb	                            cmp rbx, r15	       278	walker.c	FUNCTION_13	FOR_1
0x4000538	     0xf8572ffffff	                           jne 0x40004b0	       278	walker.c	FUNCTION_13	FOR_1
0x400053e	      0xe920030000	                           jmp 0x4000863	       278	walker.c	FUNCTION_13	FOR_1
0x4000543	          0x488b1f	                    mov rbx, qword [rdi]	       163	walker.c	FUNCTION_8	WHILE_1
0x4000546	        0x488b4708	                mov rax, qword [rdi + 8]	       165	walker.c	FUNCTION_8	WHILE_1
0x400054a	    0x488905000000	            mov qword [0x04000551], rax 	       165	walker.c	FUNCTION_8	WHILE_1
0x4000551	      0xe800000000	                          call 0x4000556	       166	walker.c	FUNCTION_8	WHILE_1	CALL_1
0x4000556	    0x48833d000000	               cmp qword [0x0400055e], 0	       167	walker.c	FUNCTION_8	WHILE_1	IF_1
0x400055e	            0x750b	                           jne 0x400056b	       167	walker.c	FUNCTION_8	WHILE_1	IF_1
0x4000560	    0x48c705000000	               mov qword [0x0400056b], 0	       168	walker.c	FUNCTION_8	WHILE_1	IF_1
0x400056b	          0xf60340	                   test byte [rbx], 0x40	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x400056e	     0xf85a4000000	                           jne 0x4000618	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x4000574	        0x488d6b04	                      lea rbp, [rbx + 4]	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x4000578	          0x4889ee	                            mov rsi, rbp	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x400057b	          0x4c89e7	                            mov rdi, r12	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x400057e	      0x41ff542418	                 call qword [r12 + 0x18]	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x4000583	            0x85c0	                           test eax, eax	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x4000585	     0xf848d000000	                            je 0x4000618	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x400058b	          0x4889ef	                            mov rdi, rbp	        24	walker.c	FUNCTION_2	CALL_1
0x400058e	      0xe800000000	                          call 0x4000593	        24	walker.c	FUNCTION_2	CALL_1
0x4000593	          0x4889c5	                            mov rbp, rax	        24	walker.c	FUNCTION_2	CALL_1
0x4000596	      0xb900000000	                              mov ecx, 0	        24	walker.c	FUNCTION_2	CALL_1
0x400059b	          0xf6030e	                    test byte [rbx], 0xe	        24	walker.c	FUNCTION_2	CALL_1
0x400059e	            0x7411	                            je 0x40005b1	        24	walker.c	FUNCTION_2	CALL_1
0x40005a0	           0xfb63b	                   movzx edi, byte [rbx]	        25	walker.c	FUNCTION_2	CALL_2
0x40005a3	          0x40d0ef	                              shr dil, 1	        25	walker.c	FUNCTION_2	CALL_2
0x40005a6	          0x83e707	                              and edi, 7	        24	walker.c	FUNCTION_2	CALL_1
0x40005a9	      0xe800000000	                          call 0x40005ae	        24	walker.c	FUNCTION_2	CALL_1
0x40005ae	          0x4889c1	                            mov rcx, rax	        24	walker.c	FUNCTION_2	CALL_1
0x40005b1	          0x4989e8	                             mov r8, rbp	        97	stdio2.h	FUNCTION_46	CALL_1
0x40005b4	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_46	CALL_1
0x40005b9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_46	CALL_1
0x40005be	    0x488b3d000000	            mov rdi, qword [0x040005c5] 	        97	stdio2.h	FUNCTION_46	CALL_1
0x40005c5	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_46	CALL_1
0x40005ca	      0xe800000000	                          call 0x40005cf	        97	stdio2.h	FUNCTION_46	CALL_1
0x40005cf	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_81	CALL_1
0x40005d4	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_81	CALL_1
0x40005d9	      0xbf00000000	                              mov edi, 0	       975	cache.h	FUNCTION_81	CALL_1
0x40005de	      0xe800000000	                          call 0x40005e3	       975	cache.h	FUNCTION_81	CALL_1
0x40005e3	            0x85c0	                           test eax, eax	        27	walker.c	FUNCTION_2	IF_1	CALL_4
0x40005e5	     0xf847e040000	                            je 0x4000a69	        27	walker.c	FUNCTION_2	IF_1	CALL_4
0x40005eb	      0xbf00000000	                              mov edi, 0	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x40005f0	      0xe800000000	                          call 0x40005f5	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x40005f5	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	FUNCTION_46	CALL_1
0x40005f8	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_46	CALL_1
0x40005fd	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_46	CALL_1
0x4000602	    0x488b3d000000	            mov rdi, qword [0x04000609] 	        97	stdio2.h	FUNCTION_46	CALL_1
0x4000609	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_46	CALL_1
0x400060e	      0xe800000000	                          call 0x4000613	        97	stdio2.h	FUNCTION_46	CALL_1
0x4000613	      0xe951040000	                           jmp 0x4000a69	        97	stdio2.h	FUNCTION_46	CALL_1
0x4000618	          0xf6030e	                    test byte [rbx], 0xe	       179	walker.c	FUNCTION_8	WHILE_1	IF_4
0x400061b	            0x7509	                           jne 0x4000626	       179	walker.c	FUNCTION_8	WHILE_1	IF_4
0x400061d	        0x488d7b04	                      lea rdi, [rbx + 4]	       180	walker.c	FUNCTION_8	WHILE_1	CALL_4
0x4000621	      0xe800000000	                          call 0x4000626	       180	walker.c	FUNCTION_8	WHILE_1	CALL_4
0x4000626	           0xfb603	                   movzx eax, byte [rbx]	       114	walker.c	FUNCTION_6	IF_1
0x4000629	          0x83e00e	                            and eax, 0xe	       114	walker.c	FUNCTION_6	IF_1
0x400062c	            0x3c02	                               cmp al, 2	       114	walker.c	FUNCTION_6	IF_1
0x400062e	     0xf85fe000000	                           jne 0x4000732	       114	walker.c	FUNCTION_6	IF_1
0x4000634	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_101	CALL_1
0x4000639	          0x4889df	                            mov rdi, rbx	        75	commit.h	FUNCTION_101	CALL_1
0x400063c	      0xe800000000	                          call 0x4000641	        75	commit.h	FUNCTION_101	CALL_1
0x4000641	            0x89c5	                            mov ebp, eax	        75	commit.h	FUNCTION_101	CALL_1
0x4000643	            0x85c0	                           test eax, eax	        77	walker.c	FUNCTION_4	IF_1	CALL_1
0x4000645	     0xf85c5000000	                           jne 0x4000710	        77	walker.c	FUNCTION_4	IF_1	CALL_1
0x400064b	    0x488b05000000	            mov rax, qword [0x04000652] 	        80	walker.c	FUNCTION_4	WHILE_1
0x4000652	          0x4885c0	                           test rax, rax	        80	walker.c	FUNCTION_4	WHILE_1
0x4000655	            0x7435	                            je 0x400068c	        80	walker.c	FUNCTION_4	WHILE_1
0x4000657	          0x488b00	                    mov rax, qword [rax]	        80	walker.c	FUNCTION_4	WHILE_1
0x400065a	        0x488b4028	            mov rax, qword [rax + 0x28] 	        80	walker.c	FUNCTION_4	WHILE_1
0x400065e	        0x48394328	            cmp qword [rbx + 0x28], rax 	        80	walker.c	FUNCTION_4	WHILE_1
0x4000662	            0x7728	                            ja 0x400068c	        80	walker.c	FUNCTION_4	WHILE_1
0x4000664	      0xbe01000000	                              mov esi, 1	        81	walker.c	FUNCTION_4	WHILE_1	CALL_2
0x4000669	      0xbf00000000	                              mov edi, 0	        81	walker.c	FUNCTION_4	WHILE_1	CALL_2
0x400066e	      0xe800000000	                          call 0x4000673	        81	walker.c	FUNCTION_4	WHILE_1	CALL_2
0x4000673	    0x488b05000000	            mov rax, qword [0x0400067a] 	        80	walker.c	FUNCTION_4	WHILE_1
0x400067a	          0x4885c0	                           test rax, rax	        80	walker.c	FUNCTION_4	WHILE_1
0x400067d	            0x740d	                            je 0x400068c	        80	walker.c	FUNCTION_4	WHILE_1
0x400067f	          0x488b00	                    mov rax, qword [rax]	        80	walker.c	FUNCTION_4	WHILE_1
0x4000682	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	        80	walker.c	FUNCTION_4	WHILE_1
0x4000686	        0x48394828	            cmp qword [rax + 0x28], rcx 	        80	walker.c	FUNCTION_4	WHILE_1
0x400068a	            0x73d8	                           jae 0x4000664	        80	walker.c	FUNCTION_4	WHILE_1
0x400068c	          0xf60310	                   test byte [rbx], 0x10	        84	walker.c	FUNCTION_4	IF_2
0x400068f	     0xf858e000000	                           jne 0x4000723	        84	walker.c	FUNCTION_4	IF_2
0x4000695	        0x488b4304	                mov rax, qword [rbx + 4]	        53	string3.h	FUNCTION_62	CALL_3
0x4000699	    0x488905000000	            mov qword [0x040006a0], rax 	        53	string3.h	FUNCTION_62	CALL_3
0x40006a0	        0x488b430c	              mov rax, qword [rbx + 0xc]	        53	string3.h	FUNCTION_62	CALL_3
0x40006a4	    0x488905000000	            mov qword [0x040006ab], rax 	        53	string3.h	FUNCTION_62	CALL_3
0x40006ab	          0x8b4314	            mov eax, dword [rbx + 0x14] 	        53	string3.h	FUNCTION_62	CALL_3
0x40006ae	    0x890500000000	            mov dword [0x040006b4], eax 	        53	string3.h	FUNCTION_62	CALL_3
0x40006b4	        0x488d7b04	                      lea rdi, [rbx + 4]	        89	walker.c	FUNCTION_4	CALL_5
0x40006b8	      0xe800000000	                          call 0x40006bd	        89	walker.c	FUNCTION_4	CALL_5
0x40006bd	          0x4889c2	                            mov rdx, rax	        89	walker.c	FUNCTION_4	CALL_5
0x40006c0	      0xbe00000000	                              mov esi, 0	        89	walker.c	FUNCTION_4	CALL_5
0x40006c5	          0x4c89e7	                            mov rdi, r12	        89	walker.c	FUNCTION_4	CALL_5
0x40006c8	      0xb800000000	                              mov eax, 0	        89	walker.c	FUNCTION_4	CALL_5
0x40006cd	      0xe800000000	                          call 0x40006d2	        89	walker.c	FUNCTION_4	CALL_5
0x40006d2	          0x4889df	                            mov rdi, rbx	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40006d5	      0xe800000000	                          call 0x40006da	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40006da	          0x4889c6	                            mov rsi, rax	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40006dd	          0x4c89e7	                            mov rdi, r12	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40006e0	      0xe88bf9ffff	                        call sym.process	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40006e5	            0x89c5	                            mov ebp, eax	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40006e7	            0x85c0	                           test eax, eax	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40006e9	            0x752c	                           jne 0x4000717	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40006eb	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	        94	walker.c	FUNCTION_4	FOR_1
0x40006ef	          0x4885db	                           test rbx, rbx	        94	walker.c	FUNCTION_4	FOR_1
0x40006f2	            0x742f	                            je 0x4000723	        94	walker.c	FUNCTION_4	FOR_1
0x40006f4	          0x488b33	                    mov rsi, qword [rbx]	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40006f7	          0x4c89e7	                            mov rdi, r12	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40006fa	      0xe871f9ffff	                        call sym.process	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40006ff	            0x89c5	                            mov ebp, eax	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x4000701	            0x85c0	                           test eax, eax	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x4000703	            0x7519	                           jne 0x400071e	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x4000705	        0x488b5b08	                mov rbx, qword [rbx + 8]	        94	walker.c	FUNCTION_4	FOR_1
0x4000709	          0x4885db	                           test rbx, rbx	        94	walker.c	FUNCTION_4	FOR_1
0x400070c	            0x75e6	                           jne 0x40006f4	        94	walker.c	FUNCTION_4	FOR_1
0x400070e	            0xeb13	                           jmp 0x4000723	        94	walker.c	FUNCTION_4	FOR_1
0x4000710	      0xbdffffffff	                     mov ebp, 0xffffffff	        78	walker.c	FUNCTION_4	IF_1
0x4000715	            0xeb0c	                           jmp 0x4000723	        78	walker.c	FUNCTION_4	IF_1
0x4000717	      0xbdffffffff	                     mov ebp, 0xffffffff	        92	walker.c	FUNCTION_4	IF_3
0x400071c	            0xeb05	                           jmp 0x4000723	        92	walker.c	FUNCTION_4	IF_3
0x400071e	      0xbdffffffff	                     mov ebp, 0xffffffff	        96	walker.c	FUNCTION_4	FOR_1	IF_4
0x4000723	            0x85ed	                           test ebp, ebp	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000725	           0xf95c0	                                setne al	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000728	           0xfb6c0	                           movzx eax, al	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x400072b	            0xf7d8	                                 neg eax	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x400072d	      0xe929010000	                           jmp 0x400085b	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000732	            0x3c04	                               cmp al, 4	       119	walker.c	FUNCTION_6	IF_3
0x4000734	     0xf85af000000	                           jne 0x40007e9	       119	walker.c	FUNCTION_6	IF_3
0x400073a	      0xbe00000000	                              mov esi, 0	        22	tree.h	FUNCTION_102	CALL_1
0x400073f	          0x4889df	                            mov rdi, rbx	        22	tree.h	FUNCTION_102	CALL_1
0x4000742	      0xe800000000	                          call 0x4000747	        22	tree.h	FUNCTION_102	CALL_1
0x4000747	      0xbdffffffff	                     mov ebp, 0xffffffff	        40	walker.c	FUNCTION_3	IF_1
0x400074c	            0x85c0	                           test eax, eax	        39	walker.c	FUNCTION_3	IF_1	CALL_1
0x400074e	     0xf8589000000	                           jne 0x40007dd	        39	walker.c	FUNCTION_3	IF_1	CALL_1
0x4000754	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	        42	walker.c	FUNCTION_3	CALL_2
0x4000758	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	        42	walker.c	FUNCTION_3	CALL_2
0x400075c	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	        42	walker.c	FUNCTION_3	CALL_2
0x4000764	      0xe800000000	                          call 0x4000769	        42	walker.c	FUNCTION_3	CALL_2
0x4000769	            0xeb44	                           jmp 0x40007af	        42	walker.c	FUNCTION_3	CALL_2
0x400076b	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	        47	walker.c	FUNCTION_3	WHILE_1	IF_2	CALL_4
0x4000772	      0x2500f00000	                         and eax, 0xf000	        47	walker.c	FUNCTION_3	WHILE_1	IF_2	CALL_4
0x4000777	      0x3d00e00000	                         cmp eax, 0xe000	        47	walker.c	FUNCTION_3	WHILE_1	IF_2	CALL_4
0x400077c	            0x7431	                            je 0x40007af	        47	walker.c	FUNCTION_3	WHILE_1	IF_2	CALL_4
0x400077e	      0x3d00400000	                         cmp eax, 0x4000	        49	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_5
0x4000783	            0x750c	                           jne 0x4000791	        49	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_5
0x4000785	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	        50	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_6
0x400078a	      0xe800000000	                          call 0x400078f	        50	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_6
0x400078f	            0xeb0a	                           jmp 0x400079b	        50	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_6
0x4000791	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	        55	walker.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_7
0x4000796	      0xe800000000	                          call 0x400079b	        55	walker.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_7
0x400079b	          0x4885c0	                           test rax, rax	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x400079e	            0x7431	                            je 0x40007d1	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x40007a0	          0x4889c6	                            mov rsi, rax	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x40007a3	          0x4c89e7	                            mov rdi, r12	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x40007a6	      0xe8c5f8ffff	                        call sym.process	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x40007ab	            0x85c0	                           test eax, eax	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x40007ad	            0x7529	                           jne 0x40007d8	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x40007af	      0x488d742470	                   lea rsi, [rsp + 0x70]	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x40007b4	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x40007bc	      0xe800000000	                          call 0x40007c1	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x40007c1	            0x89c5	                            mov ebp, eax	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x40007c3	            0x85c0	                           test eax, eax	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x40007c5	            0x75a4	                           jne 0x400076b	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x40007c7	          0x4889df	                            mov rdi, rbx	        62	walker.c	FUNCTION_3	CALL_9
0x40007ca	      0xe800000000	                          call 0x40007cf	        62	walker.c	FUNCTION_3	CALL_9
0x40007cf	            0xeb0c	                           jmp 0x40007dd	        62	walker.c	FUNCTION_3	CALL_9
0x40007d1	      0xbdffffffff	                     mov ebp, 0xffffffff	        60	walker.c	FUNCTION_3	WHILE_1	IF_6
0x40007d6	            0xeb05	                           jmp 0x40007dd	        60	walker.c	FUNCTION_3	WHILE_1	IF_6
0x40007d8	      0xbdffffffff	                     mov ebp, 0xffffffff	        60	walker.c	FUNCTION_3	WHILE_1	IF_6
0x40007dd	            0x85ed	                           test ebp, ebp	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x40007df	           0xf95c0	                                setne al	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x40007e2	           0xfb6c0	                           movzx eax, al	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x40007e5	            0xf7d8	                                 neg eax	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x40007e7	            0xeb72	                           jmp 0x400085b	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x40007e9	            0x3c06	                               cmp al, 6	       124	walker.c	FUNCTION_6	IF_5
0x40007eb	            0x7476	                            je 0x4000863	       124	walker.c	FUNCTION_6	IF_5
0x40007ed	            0x3c08	                               cmp al, 8	       127	walker.c	FUNCTION_6	IF_6
0x40007ef	            0x752b	                           jne 0x400081c	       127	walker.c	FUNCTION_6	IF_6
0x40007f1	          0x4889df	                            mov rdi, rbx	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x40007f4	      0xe800000000	                          call 0x40007f9	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x40007f9	      0xbaffffffff	                     mov edx, 0xffffffff	       105	walker.c	FUNCTION_5	IF_1
0x40007fe	            0x85c0	                           test eax, eax	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x4000800	            0x750e	                           jne 0x4000810	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x4000802	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       106	walker.c	FUNCTION_5	CALL_2
0x4000806	          0x4c89e7	                            mov rdi, r12	       106	walker.c	FUNCTION_5	CALL_2
0x4000809	      0xe862f8ffff	                        call sym.process	       106	walker.c	FUNCTION_5	CALL_2
0x400080e	            0x89c2	                            mov edx, eax	       106	walker.c	FUNCTION_5	CALL_2
0x4000810	            0x85d2	                           test edx, edx	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x4000812	           0xf95c0	                                setne al	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x4000815	           0xfb6c0	                           movzx eax, al	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x4000818	            0xf7d8	                                 neg eax	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x400081a	            0xeb3f	                           jmp 0x400085b	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x400081c	        0x488d7b04	                      lea rdi, [rbx + 4]	       132	walker.c	FUNCTION_6	CALL_4
0x4000820	      0xe800000000	                          call 0x4000825	       132	walker.c	FUNCTION_6	CALL_4
0x4000825	          0x4889c5	                            mov rbp, rax	       132	walker.c	FUNCTION_6	CALL_4
0x4000828	           0xfb63b	                   movzx edi, byte [rbx]	       132	walker.c	FUNCTION_6	CALL_4
0x400082b	          0x40d0ef	                              shr dil, 1	       132	walker.c	FUNCTION_6	CALL_4
0x400082e	          0x83e707	                              and edi, 7	       132	walker.c	FUNCTION_6	CALL_4
0x4000831	      0xe800000000	                          call 0x4000836	       132	walker.c	FUNCTION_6	CALL_4
0x4000836	          0x4889ea	                            mov rdx, rbp	       132	walker.c	FUNCTION_6	CALL_4
0x4000839	          0x4889c6	                            mov rsi, rax	       132	walker.c	FUNCTION_6	CALL_4
0x400083c	      0xbf00000000	                              mov edi, 0	       132	walker.c	FUNCTION_6	CALL_4
0x4000841	      0xb800000000	                              mov eax, 0	       132	walker.c	FUNCTION_6	CALL_4
0x4000846	      0xe800000000	                          call 0x400084b	       132	walker.c	FUNCTION_6	CALL_4
0x400084b	      0xbbffffffff	                     mov ebx, 0xffffffff	       261	walker.c	FUNCTION_13
0x4000850	    0x41bf00000000	                             mov r15d, 0	       260	walker.c	FUNCTION_13
0x4000856	      0xe984010000	                           jmp 0x40009df	       260	walker.c	FUNCTION_13
0x400085b	            0x85c0	                           test eax, eax	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x400085d	     0xf8506020000	                           jne 0x4000a69	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x4000863	    0x488b3d000000	            mov rdi, qword [0x0400086a] 	       162	walker.c	FUNCTION_8	WHILE_1
0x400086a	          0x4885ff	                           test rdi, rdi	       162	walker.c	FUNCTION_8	WHILE_1
0x400086d	     0xf85d0fcffff	                           jne 0x4000543	       162	walker.c	FUNCTION_8	WHILE_1
0x4000873	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       289	walker.c	FUNCTION_13	IF_7
0x4000879	     0xf8441010000	                            je 0x40009c0	       289	walker.c	FUNCTION_13	IF_7
0x400087f	    0x41bf00000000	                             mov r15d, 0	       296	walker.c	FUNCTION_13	ELSE_1
0x4000885	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       293	walker.c	FUNCTION_13	IF_8
0x400088a	          0x4885c0	                           test rax, rax	       293	walker.c	FUNCTION_13	IF_8
0x400088d	            0x7415	                            je 0x40008a4	       293	walker.c	FUNCTION_13	IF_8
0x400088f	          0x4889c6	                            mov rsi, rax	       294	walker.c	FUNCTION_13	IF_8	CALL_11
0x4000892	      0xbf00000000	                              mov edi, 0	       294	walker.c	FUNCTION_13	IF_8	CALL_11
0x4000897	      0xb800000000	                              mov eax, 0	       294	walker.c	FUNCTION_13	IF_8	CALL_11
0x400089c	      0xe800000000	                          call 0x40008a1	       294	walker.c	FUNCTION_13	IF_8	CALL_11
0x40008a1	          0x4989c7	                            mov r15, rax	       294	walker.c	FUNCTION_13	IF_8	CALL_11
0x40008a4	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       298	walker.c	FUNCTION_13	FOR_2
0x40008a8	            0x85c0	                           test eax, eax	       298	walker.c	FUNCTION_13	FOR_2
0x40008aa	     0xf8ee2000000	                           jle 0x4000992	       298	walker.c	FUNCTION_13	FOR_2
0x40008b0	          0x4d85ff	                           test r15, r15	       298	walker.c	FUNCTION_13	FOR_2
0x40008b3	    0x41bc00000000	                             mov r12d, 0	       298	walker.c	FUNCTION_13	FOR_2
0x40008b9	        0x4d0f45e7	                         cmovne r12, r15	       298	walker.c	FUNCTION_13	FOR_2
0x40008bd	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       298	walker.c	FUNCTION_13	FOR_2
0x40008c2	          0x4889cb	                            mov rbx, rcx	       298	walker.c	FUNCTION_13	FOR_2
0x40008c5	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       298	walker.c	FUNCTION_13	FOR_2
0x40008ca	          0x8d40ff	                      lea eax, [rax - 1]	       298	walker.c	FUNCTION_13	FOR_2
0x40008cd	      0x4c8d6cc108	              lea r13, [rcx + rax*8 + 8]	       298	walker.c	FUNCTION_13	FOR_2
0x40008d2	      0x4c8d742450	                   lea r14, [rsp + 0x50]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0x40008d7	          0x4889da	                            mov rdx, rbx	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0x40008da	        0x48833b00	                      cmp qword [rbx], 0	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0x40008de	     0xf849d000000	                            je 0x4000981	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0x40008e4	    0x48c744243800	               mov qword [rsp + 0x38], 0	       164	strbuf.h	FUNCTION_105
0x40008ed	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       165	strbuf.h	FUNCTION_105	IF_2
0x40008f2	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_105	IF_2
0x40008f8	            0x7405	                            je 0x40008ff	       165	strbuf.h	FUNCTION_105	IF_2
0x40008fa	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_105	IF_2
0x40008fd	            0xeb22	                           jmp 0x4000921	       166	strbuf.h	FUNCTION_105	IF_2
0x40008ff	    0x803d00000000	                cmp byte [0x04000906], 0	       168	strbuf.h	FUNCTION_105	CALL_2
0x4000906	            0x7419	                            je 0x4000921	       168	strbuf.h	FUNCTION_105	CALL_2
0x4000908	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_105	CALL_2
0x400090d	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_105	CALL_2
0x4000912	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_105	CALL_2
0x4000917	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_105	CALL_2
0x400091c	      0xe800000000	                          call 0x4000921	       168	strbuf.h	FUNCTION_105	CALL_2
0x4000921	          0x488b12	                    mov rdx, qword [rdx]	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0x4000924	      0xbe00000000	                              mov esi, 0	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0x4000929	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0x400092e	      0xb800000000	                              mov eax, 0	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0x4000933	      0xe800000000	                          call 0x4000938	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0x4000938	        0x4883ec08	                              sub rsp, 8	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0x400093c	            0x4156	                                push r14	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0x400093e	          0x4d89e1	                             mov r9, r12	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0x4000941	    0x41b800000000	                              mov r8d, 0	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0x4000947	      0xb900000000	                              mov ecx, 0	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0x400094c	          0x4889ea	                            mov rdx, rbp	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0x400094f	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0x4000954	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0x4000959	      0xe800000000	                          call 0x400095e	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0x400095e	        0x4883c410	                           add rsp, 0x10	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0x4000962	            0x85c0	                           test eax, eax	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0x4000964	            0x741b	                            je 0x4000981	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0x4000966	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       307	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_15
0x400096b	      0xbf00000000	                              mov edi, 0	       307	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_15
0x4000970	      0xb800000000	                              mov eax, 0	       307	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_15
0x4000975	      0xe800000000	                          call 0x400097a	       307	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_15
0x400097a	      0xbbffffffff	                     mov ebx, 0xffffffff	       261	walker.c	FUNCTION_13
0x400097f	            0xeb5e	                           jmp 0x40009df	       261	walker.c	FUNCTION_13
0x4000981	        0x4883c308	                              add rbx, 8	       261	walker.c	FUNCTION_13
0x4000985	        0x4883c514	                           add rbp, 0x14	       261	walker.c	FUNCTION_13
0x4000989	          0x4939dd	                            cmp r13, rbx	       298	walker.c	FUNCTION_13	FOR_2
0x400098c	     0xf8545ffffff	                           jne 0x40008d7	       298	walker.c	FUNCTION_13	FOR_2
0x4000992	      0x488d742450	                   lea rsi, [rsp + 0x50]	       311	walker.c	FUNCTION_13	IF_11	CALL_16
0x4000997	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       311	walker.c	FUNCTION_13	IF_11	CALL_16
0x400099c	      0xe800000000	                          call 0x40009a1	       311	walker.c	FUNCTION_13	IF_11	CALL_16
0x40009a1	            0x85c0	                           test eax, eax	       311	walker.c	FUNCTION_13	IF_11	CALL_16
0x40009a3	            0x7428	                            je 0x40009cd	       311	walker.c	FUNCTION_13	IF_11	CALL_16
0x40009a5	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       312	walker.c	FUNCTION_13	IF_11	CALL_17
0x40009aa	      0xbf00000000	                              mov edi, 0	       312	walker.c	FUNCTION_13	IF_11	CALL_17
0x40009af	      0xb800000000	                              mov eax, 0	       312	walker.c	FUNCTION_13	IF_11	CALL_17
0x40009b4	      0xe800000000	                          call 0x40009b9	       312	walker.c	FUNCTION_13	IF_11	CALL_17
0x40009b9	      0xbbffffffff	                     mov ebx, 0xffffffff	       261	walker.c	FUNCTION_13
0x40009be	            0xeb1f	                           jmp 0x40009df	       261	walker.c	FUNCTION_13
0x40009c0	      0xbb00000000	                              mov ebx, 0	       290	walker.c	FUNCTION_13	IF_7
0x40009c5	    0x41bf00000000	                             mov r15d, 0	       260	walker.c	FUNCTION_13
0x40009cb	            0xeb12	                           jmp 0x40009df	       260	walker.c	FUNCTION_13
0x40009cd	      0xbb00000000	                              mov ebx, 0	       316	walker.c	FUNCTION_13
0x40009d2	            0xeb0b	                           jmp 0x40009df	       316	walker.c	FUNCTION_13
0x40009d4	      0xbbffffffff	                     mov ebx, 0xffffffff	       261	walker.c	FUNCTION_13
0x40009d9	    0x41bf00000000	                             mov r15d, 0	       260	walker.c	FUNCTION_13
0x40009df	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       319	walker.c	FUNCTION_13	CALL_18
0x40009e4	      0xe800000000	                          call 0x40009e9	       319	walker.c	FUNCTION_13	CALL_18
0x40009e9	          0x4c89ff	                            mov rdi, r15	       320	walker.c	FUNCTION_13	CALL_19
0x40009ec	      0xe800000000	                          call 0x40009f1	       320	walker.c	FUNCTION_13	CALL_19
0x40009f1	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       321	walker.c	FUNCTION_13	CALL_20
0x40009f6	      0xe800000000	                          call 0x40009fb	       321	walker.c	FUNCTION_13	CALL_20
0x40009fb	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       322	walker.c	FUNCTION_13	CALL_21
0x4000a00	      0xe800000000	                          call 0x4000a05	       322	walker.c	FUNCTION_13	CALL_21
0x4000a05	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       323	walker.c	FUNCTION_13	CALL_22
0x4000a0a	      0xe800000000	                          call 0x4000a0f	       323	walker.c	FUNCTION_13	CALL_22
0x4000a0f	            0x89d8	                            mov eax, ebx	       325	walker.c	FUNCTION_13
0x4000a11	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	       325	walker.c	FUNCTION_13
0x4000a19	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       325	walker.c	FUNCTION_13
0x4000a22	            0x745a	                            je 0x4000a7e	       325	walker.c	FUNCTION_13
0x4000a24	            0xeb53	                           jmp 0x4000a79	       325	walker.c	FUNCTION_13
0x4000a26	        0x488b0424	                    mov rax, qword [rsp]	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0x4000a2a	          0x488b30	                    mov rsi, qword [rax]	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0x4000a2d	      0xbf00000000	                              mov edi, 0	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0x4000a32	      0xb800000000	                              mov eax, 0	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0x4000a37	      0xe800000000	                          call 0x4000a3c	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0x4000a3c	      0xbbffffffff	                     mov ebx, 0xffffffff	       261	walker.c	FUNCTION_13
0x4000a41	    0x41bf00000000	                             mov r15d, 0	       260	walker.c	FUNCTION_13
0x4000a47	            0xeb96	                           jmp 0x40009df	       260	walker.c	FUNCTION_13
0x4000a49	          0x4c89ef	                            mov rdi, r13	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0x4000a4c	      0xe800000000	                          call 0x4000a51	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0x4000a51	          0x4889c6	                            mov rsi, rax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0x4000a54	          0x4c89e7	                            mov rdi, r12	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0x4000a57	      0xe814f6ffff	                        call sym.process	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0x4000a5c	            0x85c0	                           test eax, eax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0x4000a5e	     0xf84c9faffff	                            je 0x400052d	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0x4000a64	      0xe96bffffff	                           jmp 0x40009d4	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0x4000a69	      0xbbffffffff	                     mov ebx, 0xffffffff	       261	walker.c	FUNCTION_13
0x4000a6e	    0x41bf00000000	                             mov r15d, 0	       260	walker.c	FUNCTION_13
0x4000a74	      0xe966ffffff	                           jmp 0x40009df	       260	walker.c	FUNCTION_13
0x4000a79	      0xe800000000	                          call 0x4000a7e	       325	walker.c	FUNCTION_13
0x4000a7e	    0x4881c4c80000	                           add rsp, 0xc8	       325	walker.c	FUNCTION_13
0x4000a85	              0x5b	                                 pop rbx	       325	walker.c	FUNCTION_13
0x4000a86	              0x5d	                                 pop rbp	       325	walker.c	FUNCTION_13
0x4000a87	            0x415c	                                 pop r12	       325	walker.c	FUNCTION_13
0x4000a89	            0x415d	                                 pop r13	       325	walker.c	FUNCTION_13
0x4000a8b	            0x415e	                                 pop r14	       325	walker.c	FUNCTION_13
0x4000a8d	            0x415f	                                 pop r15	       325	walker.c	FUNCTION_13
0x4000a8f	              0xc3	                                     ret	       325	walker.c	FUNCTION_13
