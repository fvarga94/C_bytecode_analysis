is_null_oid	CALL,1:IF,0:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	13
0x400017b	              0x55	                                push rbp	       989	cache.h	FUNCTION_11
0x400017c	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_11
0x400017f	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_11
0x4000183	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_11
0x4000187	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_11	CALL_1
0x400018b	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_11	CALL_1
0x4000190	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_11	CALL_1
0x4000193	      0xe894ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_11	CALL_1
0x4000198	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_11	CALL_1
0x400019a	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_11	CALL_1
0x400019d	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_11	CALL_1
0x40001a0	              0xc9	                                   leave	       991	cache.h	FUNCTION_11
0x40001a1	              0xc3	                                     ret	       991	cache.h	FUNCTION_11
discard_unused_subtrees	CALL,2:IF,1:DO,0:WHILE,0:ELSE,1:functions,0:SWITCH,0:FOR,1	53
0x4000a71	              0x55	                                push rbp	       205	cache-tree.c	FUNCTION_37
0x4000a72	          0x4889e5	                            mov rbp, rsp	       205	cache-tree.c	FUNCTION_37
0x4000a75	        0x4883ec30	                           sub rsp, 0x30	       205	cache-tree.c	FUNCTION_37
0x4000a79	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       205	cache-tree.c	FUNCTION_37
0x4000a7d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       206	cache-tree.c	FUNCTION_37
0x4000a81	        0x488b4020	            mov rax, qword [rax + 0x20] 	       206	cache-tree.c	FUNCTION_37
0x4000a85	        0x488945f0	             mov qword [rbp - 0x10], rax	       206	cache-tree.c	FUNCTION_37
0x4000a89	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       207	cache-tree.c	FUNCTION_37
0x4000a8d	          0x8b4018	            mov eax, dword [rax + 0x18] 	       207	cache-tree.c	FUNCTION_37
0x4000a90	          0x8945ec	             mov dword [rbp - 0x14], eax	       207	cache-tree.c	FUNCTION_37
0x4000a93	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       209	cache-tree.c	FUNCTION_37	FOR_1
0x4000a9a	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       209	cache-tree.c	FUNCTION_37	FOR_1
0x4000a9d	          0x8945e4	             mov dword [rbp - 0x1c], eax	       209	cache-tree.c	FUNCTION_37	FOR_1
0x4000aa0	            0xeb76	                           jmp 0x4000b18	       209	cache-tree.c	FUNCTION_37	FOR_1
0x4000aa2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       210	cache-tree.c	FUNCTION_37	FOR_1
0x4000aa5	            0x4898	                                    cdqe	       210	cache-tree.c	FUNCTION_37	FOR_1
0x4000aa7	    0x488d14c50000	                        lea rdx, [rax*8]	       210	cache-tree.c	FUNCTION_37	FOR_1
0x4000aaf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       210	cache-tree.c	FUNCTION_37	FOR_1
0x4000ab3	          0x4801d0	                            add rax, rdx	       210	cache-tree.c	FUNCTION_37	FOR_1
0x4000ab6	          0x488b00	                    mov rax, qword [rax]	       210	cache-tree.c	FUNCTION_37	FOR_1
0x4000ab9	        0x488945f8	                mov qword [rbp - 8], rax	       210	cache-tree.c	FUNCTION_37	FOR_1
0x4000abd	        0x488b45f8	                mov rax, qword [rbp - 8]	       211	cache-tree.c	FUNCTION_37	FOR_1	IF_1
0x4000ac1	          0x8b4010	            mov eax, dword [rax + 0x10] 	       211	cache-tree.c	FUNCTION_37	FOR_1	IF_1
0x4000ac4	            0x85c0	                           test eax, eax	       211	cache-tree.c	FUNCTION_37	FOR_1	IF_1
0x4000ac6	            0x7423	                            je 0x4000aeb	       211	cache-tree.c	FUNCTION_37	FOR_1	IF_1
0x4000ac8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       212	cache-tree.c	FUNCTION_37	FOR_1	IF_1
0x4000acb	          0x8d5001	                      lea edx, [rax + 1]	       212	cache-tree.c	FUNCTION_37	FOR_1	IF_1
0x4000ace	          0x8955e4	             mov dword [rbp - 0x1c], edx	       212	cache-tree.c	FUNCTION_37	FOR_1	IF_1
0x4000ad1	            0x4898	                                    cdqe	       212	cache-tree.c	FUNCTION_37	FOR_1	IF_1
0x4000ad3	    0x488d14c50000	                        lea rdx, [rax*8]	       212	cache-tree.c	FUNCTION_37	FOR_1	IF_1
0x4000adb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       212	cache-tree.c	FUNCTION_37	FOR_1	IF_1
0x4000adf	          0x4801c2	                            add rdx, rax	       212	cache-tree.c	FUNCTION_37	FOR_1	IF_1
0x4000ae2	        0x488b45f8	                mov rax, qword [rbp - 8]	       212	cache-tree.c	FUNCTION_37	FOR_1	IF_1
0x4000ae6	          0x488902	                    mov qword [rdx], rax	       212	cache-tree.c	FUNCTION_37	FOR_1	IF_1
0x4000ae9	            0xeb29	                           jmp 0x4000b14	       212	cache-tree.c	FUNCTION_37	FOR_1	IF_1
0x4000aeb	        0x488b45f8	                mov rax, qword [rbp - 8]	       214	cache-tree.c	FUNCTION_37	FOR_1	ELSE_1	CALL_1
0x4000aef	          0x4889c7	                            mov rdi, rax	       214	cache-tree.c	FUNCTION_37	FOR_1	ELSE_1	CALL_1
0x4000af2	      0xe800000000	                          call 0x4000af7	       214	cache-tree.c	FUNCTION_37	FOR_1	ELSE_1	CALL_1
0x4000af7	        0x488b45f8	                mov rax, qword [rbp - 8]	       215	cache-tree.c	FUNCTION_37	FOR_1	ELSE_1	CALL_2
0x4000afb	          0x4889c7	                            mov rdi, rax	       215	cache-tree.c	FUNCTION_37	FOR_1	ELSE_1	CALL_2
0x4000afe	      0xe800000000	                          call 0x4000b03	       215	cache-tree.c	FUNCTION_37	FOR_1	ELSE_1	CALL_2
0x4000b03	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       216	cache-tree.c	FUNCTION_37	FOR_1	ELSE_1
0x4000b07	          0x8b4018	            mov eax, dword [rax + 0x18] 	       216	cache-tree.c	FUNCTION_37	FOR_1	ELSE_1
0x4000b0a	          0x8d50ff	                      lea edx, [rax - 1]	       216	cache-tree.c	FUNCTION_37	FOR_1	ELSE_1
0x4000b0d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       216	cache-tree.c	FUNCTION_37	FOR_1	ELSE_1
0x4000b11	          0x895018	             mov dword [rax + 0x18], edx	       216	cache-tree.c	FUNCTION_37	FOR_1	ELSE_1
0x4000b14	        0x8345e801	               add dword [rbp - 0x18], 1	       209	cache-tree.c	FUNCTION_37	FOR_1
0x4000b18	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       209	cache-tree.c	FUNCTION_37	FOR_1
0x4000b1b	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       209	cache-tree.c	FUNCTION_37	FOR_1
0x4000b1e	            0x7c82	                            jl 0x4000aa2	       209	cache-tree.c	FUNCTION_37	FOR_1
0x4000b20	              0x90	                                     nop	       219	cache-tree.c	FUNCTION_37
0x4000b21	              0xc9	                                   leave	       219	cache-tree.c	FUNCTION_37
0x4000b22	              0xc3	                                     ret	       219	cache-tree.c	FUNCTION_37
cache_tree_matches_traversal	CALL,3:IF,1:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	40
0x4001d6b	              0x55	                                push rbp	       715	cache-tree.c	FUNCTION_51
0x4001d6c	          0x4889e5	                            mov rbp, rsp	       715	cache-tree.c	FUNCTION_51
0x4001d6f	        0x4883ec30	                           sub rsp, 0x30	       715	cache-tree.c	FUNCTION_51
0x4001d73	        0x48897de8	             mov qword [rbp - 0x18], rdi	       715	cache-tree.c	FUNCTION_51
0x4001d77	        0x488975e0	             mov qword [rbp - 0x20], rsi	       715	cache-tree.c	FUNCTION_51
0x4001d7b	        0x488955d8	             mov qword [rbp - 0x28], rdx	       715	cache-tree.c	FUNCTION_51
0x4001d7f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       718	cache-tree.c	FUNCTION_51	CALL_1
0x4001d83	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       718	cache-tree.c	FUNCTION_51	CALL_1
0x4001d87	          0x4889d6	                            mov rsi, rdx	       718	cache-tree.c	FUNCTION_51	CALL_1
0x4001d8a	          0x4889c7	                            mov rdi, rax	       718	cache-tree.c	FUNCTION_51	CALL_1
0x4001d8d	      0xe882ffffff	 call sym.find_cache_tree_from_traversal	       718	cache-tree.c	FUNCTION_51	CALL_1
0x4001d92	        0x488945f8	                mov qword [rbp - 8], rax	       718	cache-tree.c	FUNCTION_51	CALL_1
0x4001d96	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       719	cache-tree.c	FUNCTION_51	CALL_2
0x4001d9a	        0x488b5008	                mov rdx, qword [rax + 8]	       719	cache-tree.c	FUNCTION_51	CALL_2
0x4001d9e	        0x488b45f8	                mov rax, qword [rbp - 8]	       719	cache-tree.c	FUNCTION_51	CALL_2
0x4001da2	          0x4889d6	                            mov rsi, rdx	       719	cache-tree.c	FUNCTION_51	CALL_2
0x4001da5	          0x4889c7	                            mov rdi, rax	       719	cache-tree.c	FUNCTION_51	CALL_2
0x4001da8	      0xe871fbffff	                call sym.cache_tree_find	       719	cache-tree.c	FUNCTION_51	CALL_2
0x4001dad	        0x488945f8	                mov qword [rbp - 8], rax	       719	cache-tree.c	FUNCTION_51	CALL_2
0x4001db1	      0x48837df800	                  cmp qword [rbp - 8], 0	       720	cache-tree.c	FUNCTION_51	IF_1	CALL_3
0x4001db6	            0x7430	                            je 0x4001de8	       720	cache-tree.c	FUNCTION_51	IF_1	CALL_3
0x4001db8	        0x488b45f8	                mov rax, qword [rbp - 8]	       720	cache-tree.c	FUNCTION_51	IF_1	CALL_3
0x4001dbc	            0x8b00	                    mov eax, dword [rax]	       720	cache-tree.c	FUNCTION_51	IF_1	CALL_3
0x4001dbe	            0x85c0	                           test eax, eax	       720	cache-tree.c	FUNCTION_51	IF_1	CALL_3
0x4001dc0	            0x7e26	                           jle 0x4001de8	       720	cache-tree.c	FUNCTION_51	IF_1	CALL_3
0x4001dc2	        0x488b45f8	                mov rax, qword [rbp - 8]	       720	cache-tree.c	FUNCTION_51	IF_1	CALL_3
0x4001dc6	        0x488d5004	                      lea rdx, [rax + 4]	       720	cache-tree.c	FUNCTION_51	IF_1	CALL_3
0x4001dca	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       720	cache-tree.c	FUNCTION_51	IF_1	CALL_3
0x4001dce	          0x488b00	                    mov rax, qword [rax]	       720	cache-tree.c	FUNCTION_51	IF_1	CALL_3
0x4001dd1	          0x4889d6	                            mov rsi, rdx	       720	cache-tree.c	FUNCTION_51	IF_1	CALL_3
0x4001dd4	          0x4889c7	                            mov rdi, rax	       720	cache-tree.c	FUNCTION_51	IF_1	CALL_3
0x4001dd7	      0xe87ae3ffff	                         call sym.oidcmp	       720	cache-tree.c	FUNCTION_51	IF_1	CALL_3
0x4001ddc	            0x85c0	                           test eax, eax	       720	cache-tree.c	FUNCTION_51	IF_1	CALL_3
0x4001dde	            0x7508	                           jne 0x4001de8	       720	cache-tree.c	FUNCTION_51	IF_1	CALL_3
0x4001de0	        0x488b45f8	                mov rax, qword [rbp - 8]	       721	cache-tree.c	FUNCTION_51	IF_1
0x4001de4	            0x8b00	                    mov eax, dword [rax]	       721	cache-tree.c	FUNCTION_51	IF_1
0x4001de6	            0xeb05	                           jmp 0x4001ded	       721	cache-tree.c	FUNCTION_51	IF_1
0x4001de8	      0xb800000000	                              mov eax, 0	       722	cache-tree.c	FUNCTION_51
0x4001ded	              0xc9	                                   leave	       723	cache-tree.c	FUNCTION_51
0x4001dee	              0xc3	                                     ret	       723	cache-tree.c	FUNCTION_51
hold_lock_file_for_update	CALL,1:IF,0:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	14
0x4000212	              0x55	                                push rbp	       174	lockfile.h	FUNCTION_80
0x4000213	          0x4889e5	                            mov rbp, rsp	       174	lockfile.h	FUNCTION_80
0x4000216	        0x4883ec20	                           sub rsp, 0x20	       174	lockfile.h	FUNCTION_80
0x400021a	        0x48897df8	                mov qword [rbp - 8], rdi	       174	lockfile.h	FUNCTION_80
0x400021e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       174	lockfile.h	FUNCTION_80
0x4000222	          0x8955ec	             mov dword [rbp - 0x14], edx	       174	lockfile.h	FUNCTION_80
0x4000225	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       175	lockfile.h	FUNCTION_80	CALL_1
0x4000228	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       175	lockfile.h	FUNCTION_80	CALL_1
0x400022c	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	lockfile.h	FUNCTION_80	CALL_1
0x4000230	      0xb900000000	                              mov ecx, 0	       175	lockfile.h	FUNCTION_80	CALL_1
0x4000235	          0x4889c7	                            mov rdi, rax	       175	lockfile.h	FUNCTION_80	CALL_1
0x4000238	      0xe800000000	                          call 0x400023d	       175	lockfile.h	FUNCTION_80	CALL_1
0x400023d	              0xc9	                                   leave	       176	lockfile.h	FUNCTION_80
0x400023e	              0xc3	                                     ret	       176	lockfile.h	FUNCTION_80
st_mult	CALL,1:IF,1:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	22
0x400008f	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_67
0x4000090	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_67
0x4000093	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_67
0x4000097	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_67
0x400009b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_67
0x400009f	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_67	IF_1
0x40000a4	            0x7430	                            je 0x40000d6	       795	git-compat-util.h	FUNCTION_67	IF_1
0x40000a6	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_67	IF_1
0x40000ad	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_67	IF_1
0x40000b2	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_67	IF_1
0x40000b6	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_67	IF_1
0x40000ba	            0x731a	                           jae 0x40000d6	       795	git-compat-util.h	FUNCTION_67	IF_1
0x40000bc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_67	IF_1	CALL_1
0x40000c0	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_67	IF_1	CALL_1
0x40000c4	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_67	IF_1	CALL_1
0x40000c7	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_67	IF_1	CALL_1
0x40000cc	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_67	IF_1	CALL_1
0x40000d1	      0xe800000000	                          call 0x40000d6	       796	git-compat-util.h	FUNCTION_67	IF_1	CALL_1
0x40000d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_67
0x40000da	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_67
0x40000df	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_67
0x40000e0	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_67
oidcmp	CALL,1:IF,0:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	12
0x4000156	              0x55	                                push rbp	       979	cache.h	FUNCTION_9
0x4000157	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_9
0x400015a	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_9
0x400015e	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_9
0x4000162	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_9
0x4000166	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_9	CALL_1
0x400016a	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_9	CALL_1
0x400016e	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_9	CALL_1
0x4000171	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_9	CALL_1
0x4000174	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_9	CALL_1
0x4000179	              0xc9	                                   leave	       981	cache.h	FUNCTION_9
0x400017a	              0xc3	                                     ret	       981	cache.h	FUNCTION_9
cache_tree_update	CALL,2:IF,2:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	59
0x40013c1	              0x55	                                push rbp	       427	cache-tree.c	FUNCTION_40
0x40013c2	          0x4889e5	                            mov rbp, rsp	       427	cache-tree.c	FUNCTION_40
0x40013c5	        0x4883ec40	                           sub rsp, 0x40	       427	cache-tree.c	FUNCTION_40
0x40013c9	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       427	cache-tree.c	FUNCTION_40
0x40013cd	          0x8975c4	             mov dword [rbp - 0x3c], esi	       427	cache-tree.c	FUNCTION_40
0x40013d0	    0x64488b042528	                mov rax, qword fs:[0x28]	       427	cache-tree.c	FUNCTION_40
0x40013d9	        0x488945f8	                mov qword [rbp - 8], rax	       427	cache-tree.c	FUNCTION_40
0x40013dd	            0x31c0	                            xor eax, eax	       427	cache-tree.c	FUNCTION_40
0x40013df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       428	cache-tree.c	FUNCTION_40
0x40013e3	        0x488b4020	            mov rax, qword [rax + 0x20] 	       428	cache-tree.c	FUNCTION_40
0x40013e7	        0x488945e8	             mov qword [rbp - 0x18], rax	       428	cache-tree.c	FUNCTION_40
0x40013eb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       429	cache-tree.c	FUNCTION_40
0x40013ef	          0x488b00	                    mov rax, qword [rax]	       429	cache-tree.c	FUNCTION_40
0x40013f2	        0x488945f0	             mov qword [rbp - 0x10], rax	       429	cache-tree.c	FUNCTION_40
0x40013f6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       430	cache-tree.c	FUNCTION_40
0x40013fa	          0x8b400c	              mov eax, dword [rax + 0xc]	       430	cache-tree.c	FUNCTION_40
0x40013fd	          0x8945e0	             mov dword [rbp - 0x20], eax	       430	cache-tree.c	FUNCTION_40
0x4001400	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       431	cache-tree.c	FUNCTION_40	CALL_1
0x4001403	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	       431	cache-tree.c	FUNCTION_40	CALL_1
0x4001406	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       431	cache-tree.c	FUNCTION_40	CALL_1
0x400140a	            0x89ce	                            mov esi, ecx	       431	cache-tree.c	FUNCTION_40	CALL_1
0x400140c	          0x4889c7	                            mov rdi, rax	       431	cache-tree.c	FUNCTION_40	CALL_1
0x400140f	      0xe84ff4ffff	                   call sym.verify_cache	       431	cache-tree.c	FUNCTION_40	CALL_1
0x4001414	          0x8945e4	             mov dword [rbp - 0x1c], eax	       431	cache-tree.c	FUNCTION_40	CALL_1
0x4001417	        0x837de400	               cmp dword [rbp - 0x1c], 0	       433	cache-tree.c	FUNCTION_40	IF_1
0x400141b	            0x7405	                            je 0x4001422	       433	cache-tree.c	FUNCTION_40	IF_1
0x400141d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       434	cache-tree.c	FUNCTION_40	IF_1
0x4001420	            0xeb57	                           jmp 0x4001479	       434	cache-tree.c	FUNCTION_40	IF_1
0x4001422	        0x488d7ddc	                   lea rdi, [rbp - 0x24]	       435	cache-tree.c	FUNCTION_40	CALL_2
0x4001426	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       435	cache-tree.c	FUNCTION_40	CALL_2
0x4001429	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       435	cache-tree.c	FUNCTION_40	CALL_2
0x400142d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       435	cache-tree.c	FUNCTION_40	CALL_2
0x4001431	        0x4883ec08	                              sub rsp, 8	       435	cache-tree.c	FUNCTION_40	CALL_2
0x4001435	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	       435	cache-tree.c	FUNCTION_40	CALL_2
0x4001438	              0x51	                                push rcx	       435	cache-tree.c	FUNCTION_40	CALL_2
0x4001439	          0x4989f9	                             mov r9, rdi	       435	cache-tree.c	FUNCTION_40	CALL_2
0x400143c	    0x41b800000000	                              mov r8d, 0	       435	cache-tree.c	FUNCTION_40	CALL_2
0x4001442	      0xb900000000	                              mov ecx, 0	       435	cache-tree.c	FUNCTION_40	CALL_2
0x4001447	          0x4889c7	                            mov rdi, rax	       435	cache-tree.c	FUNCTION_40	CALL_2
0x400144a	      0xe861f7ffff	                     call sym.update_one	       435	cache-tree.c	FUNCTION_40	CALL_2
0x400144f	        0x4883c410	                           add rsp, 0x10	       435	cache-tree.c	FUNCTION_40	CALL_2
0x4001453	          0x8945e4	             mov dword [rbp - 0x1c], eax	       435	cache-tree.c	FUNCTION_40	CALL_2
0x4001456	        0x837de400	               cmp dword [rbp - 0x1c], 0	       436	cache-tree.c	FUNCTION_40	IF_2
0x400145a	            0x7905	                           jns 0x4001461	       436	cache-tree.c	FUNCTION_40	IF_2
0x400145c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       437	cache-tree.c	FUNCTION_40	IF_2
0x400145f	            0xeb18	                           jmp 0x4001479	       437	cache-tree.c	FUNCTION_40	IF_2
0x4001461	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       438	cache-tree.c	FUNCTION_40
0x4001465	          0x8b4014	            mov eax, dword [rax + 0x14] 	       438	cache-tree.c	FUNCTION_40
0x4001468	          0x83c820	                            or eax, 0x20	       438	cache-tree.c	FUNCTION_40
0x400146b	            0x89c2	                            mov edx, eax	       438	cache-tree.c	FUNCTION_40
0x400146d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       438	cache-tree.c	FUNCTION_40
0x4001471	          0x895014	             mov dword [rax + 0x14], edx	       438	cache-tree.c	FUNCTION_40
0x4001474	      0xb800000000	                              mov eax, 0	       439	cache-tree.c	FUNCTION_40
0x4001479	        0x488b4df8	                mov rcx, qword [rbp - 8]	       440	cache-tree.c	FUNCTION_40
0x400147d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       440	cache-tree.c	FUNCTION_40
0x4001486	            0x7405	                            je 0x400148d	       440	cache-tree.c	FUNCTION_40
0x4001488	      0xe800000000	                          call 0x400148d	       440	cache-tree.c	FUNCTION_40
0x400148d	              0xc9	                                   leave	       440	cache-tree.c	FUNCTION_40
0x400148e	              0xc3	                                     ret	       440	cache-tree.c	FUNCTION_40
cache_tree_read	CALL,1:IF,1:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	18
0x40018e7	              0x55	                                push rbp	       572	cache-tree.c	FUNCTION_44
0x40018e8	          0x4889e5	                            mov rbp, rsp	       572	cache-tree.c	FUNCTION_44
0x40018eb	        0x4883ec10	                           sub rsp, 0x10	       572	cache-tree.c	FUNCTION_44
0x40018ef	        0x48897df8	                mov qword [rbp - 8], rdi	       572	cache-tree.c	FUNCTION_44
0x40018f3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       572	cache-tree.c	FUNCTION_44
0x40018f7	        0x488b45f8	                mov rax, qword [rbp - 8]	       573	cache-tree.c	FUNCTION_44	IF_1
0x40018fb	           0xfb600	                   movzx eax, byte [rax]	       573	cache-tree.c	FUNCTION_44	IF_1
0x40018fe	            0x84c0	                             test al, al	       573	cache-tree.c	FUNCTION_44	IF_1
0x4001900	            0x7407	                            je 0x4001909	       573	cache-tree.c	FUNCTION_44	IF_1
0x4001902	      0xb800000000	                              mov eax, 0	       574	cache-tree.c	FUNCTION_44	IF_1
0x4001907	            0xeb13	                           jmp 0x400191c	       574	cache-tree.c	FUNCTION_44	IF_1
0x4001909	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       575	cache-tree.c	FUNCTION_44	CALL_1
0x400190d	        0x488d45f8	                      lea rax, [rbp - 8]	       575	cache-tree.c	FUNCTION_44	CALL_1
0x4001911	          0x4889d6	                            mov rsi, rdx	       575	cache-tree.c	FUNCTION_44	CALL_1
0x4001914	          0x4889c7	                            mov rdi, rax	       575	cache-tree.c	FUNCTION_44	CALL_1
0x4001917	      0xe80efdffff	                       call sym.read_one	       575	cache-tree.c	FUNCTION_44	CALL_1
0x400191c	              0xc9	                                   leave	       576	cache-tree.c	FUNCTION_44
0x400191d	              0xc3	                                     ret	       576	cache-tree.c	FUNCTION_44
find_cache_tree_from_traversal	CALL,2:IF,1:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	26
0x4001d14	              0x55	                                push rbp	       703	cache-tree.c	FUNCTION_50
0x4001d15	          0x4889e5	                            mov rbp, rsp	       703	cache-tree.c	FUNCTION_50
0x4001d18	        0x4883ec20	                           sub rsp, 0x20	       703	cache-tree.c	FUNCTION_50
0x4001d1c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       703	cache-tree.c	FUNCTION_50
0x4001d20	        0x488975e0	             mov qword [rbp - 0x20], rsi	       703	cache-tree.c	FUNCTION_50
0x4001d24	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       706	cache-tree.c	FUNCTION_50	IF_1
0x4001d28	        0x488b4008	                mov rax, qword [rax + 8]	       706	cache-tree.c	FUNCTION_50	IF_1
0x4001d2c	          0x4885c0	                           test rax, rax	       706	cache-tree.c	FUNCTION_50	IF_1
0x4001d2f	            0x7506	                           jne 0x4001d37	       706	cache-tree.c	FUNCTION_50	IF_1
0x4001d31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       707	cache-tree.c	FUNCTION_50	IF_1
0x4001d35	            0xeb32	                           jmp 0x4001d69	       707	cache-tree.c	FUNCTION_50	IF_1
0x4001d37	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       708	cache-tree.c	FUNCTION_50	CALL_1
0x4001d3b	        0x488b5008	                mov rdx, qword [rax + 8]	       708	cache-tree.c	FUNCTION_50	CALL_1
0x4001d3f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       708	cache-tree.c	FUNCTION_50	CALL_1
0x4001d43	          0x4889d6	                            mov rsi, rdx	       708	cache-tree.c	FUNCTION_50	CALL_1
0x4001d46	          0x4889c7	                            mov rdi, rax	       708	cache-tree.c	FUNCTION_50	CALL_1
0x4001d49	      0xe8c6ffffff	 call sym.find_cache_tree_from_traversal	       708	cache-tree.c	FUNCTION_50	CALL_1
0x4001d4e	        0x488945f8	                mov qword [rbp - 8], rax	       708	cache-tree.c	FUNCTION_50	CALL_1
0x4001d52	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       709	cache-tree.c	FUNCTION_50	CALL_2
0x4001d56	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       709	cache-tree.c	FUNCTION_50	CALL_2
0x4001d5a	        0x488b45f8	                mov rax, qword [rbp - 8]	       709	cache-tree.c	FUNCTION_50	CALL_2
0x4001d5e	          0x4889d6	                            mov rsi, rdx	       709	cache-tree.c	FUNCTION_50	CALL_2
0x4001d61	          0x4889c7	                            mov rdi, rax	       709	cache-tree.c	FUNCTION_50	CALL_2
0x4001d64	      0xe8b5fbffff	                call sym.cache_tree_find	       709	cache-tree.c	FUNCTION_50	CALL_2
0x4001d69	              0xc9	                                   leave	       710	cache-tree.c	FUNCTION_50
0x4001d6a	              0xc3	                                     ret	       710	cache-tree.c	FUNCTION_50
const_error	CALL,0:IF,0:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_58
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_58
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_58
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_58
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_58
find_subtree	CALL,1:IF,3:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	153
0x4000478	              0x55	                                push rbp	        70	cache-tree.c	ELSE_1	FUNCTION_32
0x4000479	          0x4889e5	                            mov rbp, rsp	        70	cache-tree.c	ELSE_1	FUNCTION_32
0x400047c	        0x4883ec40	                           sub rsp, 0x40	        70	cache-tree.c	ELSE_1	FUNCTION_32
0x4000480	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        70	cache-tree.c	ELSE_1	FUNCTION_32
0x4000484	        0x488975d0	             mov qword [rbp - 0x30], rsi	        70	cache-tree.c	ELSE_1	FUNCTION_32
0x4000488	          0x8955cc	             mov dword [rbp - 0x34], edx	        70	cache-tree.c	ELSE_1	FUNCTION_32
0x400048b	          0x894dc8	             mov dword [rbp - 0x38], ecx	        70	cache-tree.c	ELSE_1	FUNCTION_32
0x400048e	          0x8b55cc	             mov edx, dword [rbp - 0x34]	        72	cache-tree.c	ELSE_1	FUNCTION_32	CALL_1
0x4000491	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	        72	cache-tree.c	ELSE_1	FUNCTION_32	CALL_1
0x4000495	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        72	cache-tree.c	ELSE_1	FUNCTION_32	CALL_1
0x4000499	          0x4889ce	                            mov rsi, rcx	        72	cache-tree.c	ELSE_1	FUNCTION_32	CALL_1
0x400049c	          0x4889c7	                            mov rdi, rax	        72	cache-tree.c	ELSE_1	FUNCTION_32	CALL_1
0x400049f	      0xe813ffffff	                    call sym.subtree_pos	        72	cache-tree.c	ELSE_1	FUNCTION_32	CALL_1
0x40004a4	          0x8945ec	             mov dword [rbp - 0x14], eax	        72	cache-tree.c	ELSE_1	FUNCTION_32	CALL_1
0x40004a7	        0x837dec00	               cmp dword [rbp - 0x14], 0	        73	cache-tree.c	ELSE_1	FUNCTION_32	IF_1
0x40004ab	            0x781d	                            js 0x40004ca	        73	cache-tree.c	ELSE_1	FUNCTION_32	IF_1
0x40004ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        74	cache-tree.c	ELSE_1	FUNCTION_32	IF_1
0x40004b1	        0x488b4020	            mov rax, qword [rax + 0x20] 	        74	cache-tree.c	ELSE_1	FUNCTION_32	IF_1
0x40004b5	          0x8b55ec	             mov edx, dword [rbp - 0x14]	        74	cache-tree.c	ELSE_1	FUNCTION_32	IF_1
0x40004b8	          0x4863d2	                         movsxd rdx, edx	        74	cache-tree.c	ELSE_1	FUNCTION_32	IF_1
0x40004bb	        0x48c1e203	                              shl rdx, 3	        74	cache-tree.c	ELSE_1	FUNCTION_32	IF_1
0x40004bf	          0x4801d0	                            add rax, rdx	        74	cache-tree.c	ELSE_1	FUNCTION_32	IF_1
0x40004c2	          0x488b00	                    mov rax, qword [rax]	        74	cache-tree.c	ELSE_1	FUNCTION_32	IF_1
0x40004c5	      0xe9b2010000	                           jmp 0x400067c	        74	cache-tree.c	ELSE_1	FUNCTION_32	IF_1
0x40004ca	        0x837dc800	               cmp dword [rbp - 0x38], 0	        75	cache-tree.c	ELSE_1	FUNCTION_32	IF_2
0x40004ce	            0x750a	                           jne 0x40004da	        75	cache-tree.c	ELSE_1	FUNCTION_32	IF_2
0x40004d0	      0xb800000000	                              mov eax, 0	        76	cache-tree.c	ELSE_1	FUNCTION_32	IF_2
0x40004d5	      0xe9a2010000	                           jmp 0x400067c	        76	cache-tree.c	ELSE_1	FUNCTION_32	IF_2
0x40004da	          0xf755ec	                  not dword [rbp - 0x14]	        78	cache-tree.c	ELSE_1	FUNCTION_32
0x40004dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x40004e1	          0x8b4018	            mov eax, dword [rax + 0x18] 	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x40004e4	          0x8d5001	                      lea edx, [rax + 1]	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x40004e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x40004eb	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x40004ee	            0x39c2	                            cmp edx, eax	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x40004f0	     0xf8e95000000	                           jle 0x400058b	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x40004f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x40004fa	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x40004fd	          0x8d5010	                   lea edx, [rax + 0x10]	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000500	            0x89d0	                            mov eax, edx	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000502	             0x1c0	                            add eax, eax	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000504	             0x1d0	                            add eax, edx	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000506	            0x89c2	                            mov edx, eax	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000508	          0xc1ea1f	                           shr edx, 0x1f	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400050b	             0x1d0	                            add eax, edx	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400050d	            0xd1f8	                              sar eax, 1	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400050f	            0x89c2	                            mov edx, eax	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000511	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000515	          0x8b4018	            mov eax, dword [rax + 0x18] 	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000518	          0x83c001	                              add eax, 1	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400051b	            0x39c2	                            cmp edx, eax	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400051d	            0x7d13	                           jge 0x4000532	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400051f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000523	          0x8b4018	            mov eax, dword [rax + 0x18] 	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000526	          0x8d5001	                      lea edx, [rax + 1]	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000529	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400052d	          0x89501c	             mov dword [rax + 0x1c], edx	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000530	            0xeb22	                           jmp 0x4000554	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000532	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000536	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000539	          0x8d5010	                   lea edx, [rax + 0x10]	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400053c	            0x89d0	                            mov eax, edx	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400053e	             0x1c0	                            add eax, eax	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000540	             0x1d0	                            add eax, edx	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000542	            0x89c2	                            mov edx, eax	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000544	          0xc1ea1f	                           shr edx, 0x1f	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000547	             0x1d0	                            add eax, edx	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000549	            0xd1f8	                              sar eax, 1	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400054b	            0x89c2	                            mov edx, eax	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400054d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000551	          0x89501c	             mov dword [rax + 0x1c], edx	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000554	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000558	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400055b	            0x4898	                                    cdqe	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400055d	          0x4889c6	                            mov rsi, rax	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000560	      0xbf08000000	                              mov edi, 8	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000565	      0xe825fbffff	                        call sym.st_mult	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400056a	          0x4889c2	                            mov rdx, rax	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400056d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000571	        0x488b4020	            mov rax, qword [rax + 0x20] 	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000575	          0x4889d6	                            mov rsi, rdx	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000578	          0x4889c7	                            mov rdi, rax	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400057b	      0xe800000000	                          call 0x4000580	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000580	          0x4889c2	                            mov rdx, rax	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000583	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x4000587	        0x48895020	             mov qword [rax + 0x20], rdx	        79	cache-tree.c	ELSE_1	FUNCTION_32
0x400058b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        80	cache-tree.c	ELSE_1	FUNCTION_32
0x400058f	          0x8b4018	            mov eax, dword [rax + 0x18] 	        80	cache-tree.c	ELSE_1	FUNCTION_32
0x4000592	          0x8d5001	                      lea edx, [rax + 1]	        80	cache-tree.c	ELSE_1	FUNCTION_32
0x4000595	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        80	cache-tree.c	ELSE_1	FUNCTION_32
0x4000599	          0x895018	             mov dword [rax + 0x18], edx	        80	cache-tree.c	ELSE_1	FUNCTION_32
0x400059c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x400059f	            0x4898	                                    cdqe	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005a1	        0x488945f0	             mov qword [rbp - 0x10], rax	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005a9	          0x4889c6	                            mov rsi, rax	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005ac	      0xbf18000000	                           mov edi, 0x18	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005b1	      0xe895faffff	                         call sym.st_add	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005b6	      0xbe01000000	                              mov esi, 1	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005bb	          0x4889c7	                            mov rdi, rax	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005be	      0xe888faffff	                         call sym.st_add	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005c3	          0x4889c6	                            mov rsi, rax	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005c6	      0xbf01000000	                              mov edi, 1	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005cb	      0xe800000000	                          call 0x40005d0	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005d0	        0x488945f8	                mov qword [rbp - 8], rax	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005d4	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005d8	        0x488d4814	                   lea rcx, [rax + 0x14]	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005dc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005e4	          0x4889c6	                            mov rsi, rax	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005e7	          0x4889cf	                            mov rdi, rcx	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005ea	      0xe800000000	                          call 0x40005ef	        82	cache-tree.c	ELSE_1	FUNCTION_32
0x40005ef	        0x488b45f8	                mov rax, qword [rbp - 8]	        83	cache-tree.c	ELSE_1	FUNCTION_32
0x40005f3	    0x48c700000000	                      mov qword [rax], 0	        83	cache-tree.c	ELSE_1	FUNCTION_32
0x40005fa	        0x488b45f8	                mov rax, qword [rbp - 8]	        84	cache-tree.c	ELSE_1	FUNCTION_32
0x40005fe	          0x8b55cc	             mov edx, dword [rbp - 0x34]	        84	cache-tree.c	ELSE_1	FUNCTION_32
0x4000601	          0x89500c	              mov dword [rax + 0xc], edx	        84	cache-tree.c	ELSE_1	FUNCTION_32
0x4000604	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        86	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x4000608	          0x8b4018	            mov eax, dword [rax + 0x18] 	        86	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x400060b	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	        86	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x400060e	            0x7e4c	                           jle 0x400065c	        86	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x4000610	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x4000614	          0x8b4018	            mov eax, dword [rax + 0x18] 	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x4000617	          0x2b45ec	             sub eax, dword [rbp - 0x14]	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x400061a	          0x83e801	                              sub eax, 1	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x400061d	            0x4898	                                    cdqe	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x400061f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x4000623	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x4000627	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x400062a	          0x4863c9	                         movsxd rcx, ecx	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x400062d	        0x48c1e103	                              shl rcx, 3	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x4000631	        0x488d340a	                    lea rsi, [rdx + rcx]	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x4000635	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x4000639	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x400063d	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x4000640	          0x4863c9	                         movsxd rcx, ecx	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x4000643	        0x4883c101	                              add rcx, 1	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x4000647	        0x48c1e103	                              shl rcx, 3	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x400064b	        0x488d3c0a	                    lea rdi, [rdx + rcx]	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x400064f	      0xb908000000	                              mov ecx, 8	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x4000654	          0x4889c2	                            mov rdx, rax	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x4000657	      0xe885faffff	                     call sym.move_array	        87	cache-tree.c	ELSE_1	FUNCTION_32	IF_3
0x400065c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        89	cache-tree.c	ELSE_1	FUNCTION_32
0x4000660	        0x488b4020	            mov rax, qword [rax + 0x20] 	        89	cache-tree.c	ELSE_1	FUNCTION_32
0x4000664	          0x8b55ec	             mov edx, dword [rbp - 0x14]	        89	cache-tree.c	ELSE_1	FUNCTION_32
0x4000667	          0x4863d2	                         movsxd rdx, edx	        89	cache-tree.c	ELSE_1	FUNCTION_32
0x400066a	        0x48c1e203	                              shl rdx, 3	        89	cache-tree.c	ELSE_1	FUNCTION_32
0x400066e	          0x4801c2	                            add rdx, rax	        89	cache-tree.c	ELSE_1	FUNCTION_32
0x4000671	        0x488b45f8	                mov rax, qword [rbp - 8]	        89	cache-tree.c	ELSE_1	FUNCTION_32
0x4000675	          0x488902	                    mov qword [rdx], rax	        89	cache-tree.c	ELSE_1	FUNCTION_32
0x4000678	        0x488b45f8	                mov rax, qword [rbp - 8]	        90	cache-tree.c	ELSE_1	FUNCTION_32
0x400067c	              0xc9	                                   leave	        91	cache-tree.c	ELSE_1	FUNCTION_32
0x400067d	              0xc3	                                     ret	        91	cache-tree.c	ELSE_1	FUNCTION_32
st_add	CALL,1:IF,1:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	20
0x400004b	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_66
0x400004c	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_66
0x400004f	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_66
0x4000053	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_66
0x4000057	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_66
0x400005b	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_66	IF_1
0x400005f	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_66	IF_1
0x4000062	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_66	IF_1
0x4000066	            0x731a	                           jae 0x4000082	       785	git-compat-util.h	FUNCTION_66	IF_1
0x4000068	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x400006c	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x4000070	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x4000073	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x4000078	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x400007d	      0xe800000000	                          call 0x4000082	       786	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x4000082	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_66
0x4000086	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_66
0x400008a	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_66
0x400008d	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_66
0x400008e	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_66
cache_tree_fully_valid	CALL,2:IF,3:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,1	44
0x4000b23	              0x55	                                push rbp	       222	cache-tree.c	FUNCTION_38
0x4000b24	          0x4889e5	                            mov rbp, rsp	       222	cache-tree.c	FUNCTION_38
0x4000b27	        0x4883ec20	                           sub rsp, 0x20	       222	cache-tree.c	FUNCTION_38
0x4000b2b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       222	cache-tree.c	FUNCTION_38
0x4000b2f	      0x48837de800	               cmp qword [rbp - 0x18], 0	       224	cache-tree.c	FUNCTION_38	IF_1
0x4000b34	            0x7507	                           jne 0x4000b3d	       224	cache-tree.c	FUNCTION_38	IF_1
0x4000b36	      0xb800000000	                              mov eax, 0	       225	cache-tree.c	FUNCTION_38	IF_1
0x4000b3b	            0xeb71	                           jmp 0x4000bae	       225	cache-tree.c	FUNCTION_38	IF_1
0x4000b3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       226	cache-tree.c	FUNCTION_38	IF_2	CALL_1
0x4000b41	            0x8b00	                    mov eax, dword [rax]	       226	cache-tree.c	FUNCTION_38	IF_2	CALL_1
0x4000b43	            0x85c0	                           test eax, eax	       226	cache-tree.c	FUNCTION_38	IF_2	CALL_1
0x4000b45	            0x7814	                            js 0x4000b5b	       226	cache-tree.c	FUNCTION_38	IF_2	CALL_1
0x4000b47	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       226	cache-tree.c	FUNCTION_38	IF_2	CALL_1
0x4000b4b	        0x4883c004	                              add rax, 4	       226	cache-tree.c	FUNCTION_38	IF_2	CALL_1
0x4000b4f	          0x4889c7	                            mov rdi, rax	       226	cache-tree.c	FUNCTION_38	IF_2	CALL_1
0x4000b52	      0xe89cf6ffff	                  call sym.has_sha1_file	       226	cache-tree.c	FUNCTION_38	IF_2	CALL_1
0x4000b57	            0x85c0	                           test eax, eax	       226	cache-tree.c	FUNCTION_38	IF_2	CALL_1
0x4000b59	            0x7507	                           jne 0x4000b62	       226	cache-tree.c	FUNCTION_38	IF_2	CALL_1
0x4000b5b	      0xb800000000	                              mov eax, 0	       227	cache-tree.c	FUNCTION_38	IF_2
0x4000b60	            0xeb4c	                           jmp 0x4000bae	       227	cache-tree.c	FUNCTION_38	IF_2
0x4000b62	    0xc745fc000000	                  mov dword [rbp - 4], 0	       228	cache-tree.c	FUNCTION_38	FOR_1
0x4000b69	            0xeb32	                           jmp 0x4000b9d	       228	cache-tree.c	FUNCTION_38	FOR_1
0x4000b6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       229	cache-tree.c	FUNCTION_38	FOR_1	IF_3	CALL_2
0x4000b6f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       229	cache-tree.c	FUNCTION_38	FOR_1	IF_3	CALL_2
0x4000b73	          0x8b55fc	                mov edx, dword [rbp - 4]	       229	cache-tree.c	FUNCTION_38	FOR_1	IF_3	CALL_2
0x4000b76	          0x4863d2	                         movsxd rdx, edx	       229	cache-tree.c	FUNCTION_38	FOR_1	IF_3	CALL_2
0x4000b79	        0x48c1e203	                              shl rdx, 3	       229	cache-tree.c	FUNCTION_38	FOR_1	IF_3	CALL_2
0x4000b7d	          0x4801d0	                            add rax, rdx	       229	cache-tree.c	FUNCTION_38	FOR_1	IF_3	CALL_2
0x4000b80	          0x488b00	                    mov rax, qword [rax]	       229	cache-tree.c	FUNCTION_38	FOR_1	IF_3	CALL_2
0x4000b83	          0x488b00	                    mov rax, qword [rax]	       229	cache-tree.c	FUNCTION_38	FOR_1	IF_3	CALL_2
0x4000b86	          0x4889c7	                            mov rdi, rax	       229	cache-tree.c	FUNCTION_38	FOR_1	IF_3	CALL_2
0x4000b89	      0xe800000000	                          call 0x4000b8e	       229	cache-tree.c	FUNCTION_38	FOR_1	IF_3	CALL_2
0x4000b8e	            0x85c0	                           test eax, eax	       229	cache-tree.c	FUNCTION_38	FOR_1	IF_3	CALL_2
0x4000b90	            0x7507	                           jne 0x4000b99	       229	cache-tree.c	FUNCTION_38	FOR_1	IF_3	CALL_2
0x4000b92	      0xb800000000	                              mov eax, 0	       230	cache-tree.c	FUNCTION_38	FOR_1	IF_3
0x4000b97	            0xeb15	                           jmp 0x4000bae	       230	cache-tree.c	FUNCTION_38	FOR_1	IF_3
0x4000b99	        0x8345fc01	                  add dword [rbp - 4], 1	       228	cache-tree.c	FUNCTION_38	FOR_1
0x4000b9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       228	cache-tree.c	FUNCTION_38	FOR_1
0x4000ba1	          0x8b4018	            mov eax, dword [rax + 0x18] 	       228	cache-tree.c	FUNCTION_38	FOR_1
0x4000ba4	          0x3b45fc	                cmp eax, dword [rbp - 4]	       228	cache-tree.c	FUNCTION_38	FOR_1
0x4000ba7	            0x7fc2	                            jg 0x4000b6b	       228	cache-tree.c	FUNCTION_38	FOR_1
0x4000ba9	      0xb801000000	                              mov eax, 1	       232	cache-tree.c	FUNCTION_38
0x4000bae	              0xc9	                                   leave	       233	cache-tree.c	FUNCTION_38
0x4000baf	              0xc3	                                     ret	       233	cache-tree.c	FUNCTION_38
verify_cache	CALL,8:IF,7:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,2	138
0x4000863	              0x55	                                push rbp	       153	cache-tree.c	FUNCTION_36
0x4000864	          0x4889e5	                            mov rbp, rsp	       153	cache-tree.c	FUNCTION_36
0x4000867	              0x53	                                push rbx	       153	cache-tree.c	FUNCTION_36
0x4000868	        0x4883ec48	                           sub rsp, 0x48	       153	cache-tree.c	FUNCTION_36
0x400086c	        0x48897db8	             mov qword [rbp - 0x48], rdi	       153	cache-tree.c	FUNCTION_36
0x4000870	          0x8975b4	             mov dword [rbp - 0x4c], esi	       153	cache-tree.c	FUNCTION_36
0x4000873	          0x8955b0	             mov dword [rbp - 0x50], edx	       153	cache-tree.c	FUNCTION_36
0x4000876	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       155	cache-tree.c	FUNCTION_36
0x4000879	          0x83e008	                              and eax, 8	       155	cache-tree.c	FUNCTION_36
0x400087c	          0x8945d0	             mov dword [rbp - 0x30], eax	       155	cache-tree.c	FUNCTION_36
0x400087f	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       158	cache-tree.c	FUNCTION_36
0x4000886	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       159	cache-tree.c	FUNCTION_36	FOR_1
0x400088d	      0xe9a0000000	                           jmp 0x4000932	       159	cache-tree.c	FUNCTION_36	FOR_1
0x4000892	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       160	cache-tree.c	FUNCTION_36	FOR_1
0x4000895	            0x4898	                                    cdqe	       160	cache-tree.c	FUNCTION_36	FOR_1
0x4000897	    0x488d14c50000	                        lea rdx, [rax*8]	       160	cache-tree.c	FUNCTION_36	FOR_1
0x400089f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       160	cache-tree.c	FUNCTION_36	FOR_1
0x40008a3	          0x4801d0	                            add rax, rdx	       160	cache-tree.c	FUNCTION_36	FOR_1
0x40008a6	          0x488b00	                    mov rax, qword [rax]	       160	cache-tree.c	FUNCTION_36	FOR_1
0x40008a9	        0x488945d8	             mov qword [rbp - 0x28], rax	       160	cache-tree.c	FUNCTION_36	FOR_1
0x40008ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       161	cache-tree.c	FUNCTION_36	FOR_1	IF_1
0x40008b1	          0x8b4038	            mov eax, dword [rax + 0x38] 	       161	cache-tree.c	FUNCTION_36	FOR_1	IF_1
0x40008b4	      0x2500300000	                         and eax, 0x3000	       161	cache-tree.c	FUNCTION_36	FOR_1	IF_1
0x40008b9	          0xc1e80c	                            shr eax, 0xc	       161	cache-tree.c	FUNCTION_36	FOR_1	IF_1
0x40008bc	            0x85c0	                           test eax, eax	       161	cache-tree.c	FUNCTION_36	FOR_1	IF_1
0x40008be	            0x746e	                            je 0x400092e	       161	cache-tree.c	FUNCTION_36	FOR_1	IF_1
0x40008c0	        0x837dd000	               cmp dword [rbp - 0x30], 0	       162	cache-tree.c	FUNCTION_36	FOR_1	IF_1	IF_2
0x40008c4	            0x740a	                            je 0x40008d0	       162	cache-tree.c	FUNCTION_36	FOR_1	IF_1	IF_2
0x40008c6	      0xb8ffffffff	                     mov eax, 0xffffffff	       163	cache-tree.c	FUNCTION_36	FOR_1	IF_1	IF_2
0x40008cb	      0xe99a010000	                           jmp 0x4000a6a	       163	cache-tree.c	FUNCTION_36	FOR_1	IF_1	IF_2
0x40008d0	        0x8345cc01	               add dword [rbp - 0x34], 1	       164	cache-tree.c	FUNCTION_36	FOR_1	IF_1	IF_3
0x40008d4	        0x837dcc0a	            cmp dword [rbp - 0x34], 0xa 	       164	cache-tree.c	FUNCTION_36	FOR_1	IF_1	IF_3
0x40008d8	            0x7e20	                           jle 0x40008fa	       164	cache-tree.c	FUNCTION_36	FOR_1	IF_1	IF_3
0x40008da	    0x488b05000000	            mov rax, qword [0x040008e1] 	       165	cache-tree.c	FUNCTION_36	FOR_1	IF_1	IF_3	CALL_1
0x40008e1	          0x4889c1	                            mov rcx, rax	       165	cache-tree.c	FUNCTION_36	FOR_1	IF_1	IF_3	CALL_1
0x40008e4	      0xba04000000	                              mov edx, 4	       165	cache-tree.c	FUNCTION_36	FOR_1	IF_1	IF_3	CALL_1
0x40008e9	      0xbe01000000	                              mov esi, 1	       165	cache-tree.c	FUNCTION_36	FOR_1	IF_1	IF_3	CALL_1
0x40008ee	      0xbf00000000	                              mov edi, 0	       165	cache-tree.c	FUNCTION_36	FOR_1	IF_1	IF_3	CALL_1
0x40008f3	      0xe800000000	                          call 0x40008f8	       165	cache-tree.c	FUNCTION_36	FOR_1	IF_1	IF_3	CALL_1
0x40008f8	            0xeb44	                           jmp 0x400093e	       166	cache-tree.c	FUNCTION_36	FOR_1	IF_1	IF_3
0x40008fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       168	cache-tree.c	FUNCTION_36	FOR_1	IF_1	CALL_2
0x40008fe	        0x4883c044	                           add rax, 0x44	       168	cache-tree.c	FUNCTION_36	FOR_1	IF_1	CALL_2
0x4000902	          0x4889c7	                            mov rdi, rax	       168	cache-tree.c	FUNCTION_36	FOR_1	IF_1	CALL_2
0x4000905	      0xe800000000	                          call 0x400090a	       168	cache-tree.c	FUNCTION_36	FOR_1	IF_1	CALL_2
0x400090a	          0x4889c1	                            mov rcx, rax	       168	cache-tree.c	FUNCTION_36	FOR_1	IF_1	CALL_2
0x400090d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       169	cache-tree.c	FUNCTION_36	FOR_1	IF_1	CALL_3
0x4000911	        0x488d5058	                   lea rdx, [rax + 0x58]	       169	cache-tree.c	FUNCTION_36	FOR_1	IF_1	CALL_3
0x4000915	    0x488b05000000	            mov rax, qword [0x0400091c] 	       168	cache-tree.c	FUNCTION_36	FOR_1	IF_1	CALL_2
0x400091c	      0xbe00000000	                              mov esi, 0	       168	cache-tree.c	FUNCTION_36	FOR_1	IF_1	CALL_2
0x4000921	          0x4889c7	                            mov rdi, rax	       168	cache-tree.c	FUNCTION_36	FOR_1	IF_1	CALL_2
0x4000924	      0xb800000000	                              mov eax, 0	       168	cache-tree.c	FUNCTION_36	FOR_1	IF_1	CALL_2
0x4000929	      0xe800000000	                          call 0x400092e	       168	cache-tree.c	FUNCTION_36	FOR_1	IF_1	CALL_2
0x400092e	        0x8345c801	               add dword [rbp - 0x38], 1	       159	cache-tree.c	FUNCTION_36	FOR_1
0x4000932	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       159	cache-tree.c	FUNCTION_36	FOR_1
0x4000935	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       159	cache-tree.c	FUNCTION_36	FOR_1
0x4000938	     0xf8c54ffffff	                            jl 0x4000892	       159	cache-tree.c	FUNCTION_36	FOR_1
0x400093e	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       172	cache-tree.c	FUNCTION_36	IF_4
0x4000942	            0x740a	                            je 0x400094e	       172	cache-tree.c	FUNCTION_36	IF_4
0x4000944	      0xb8ffffffff	                     mov eax, 0xffffffff	       173	cache-tree.c	FUNCTION_36	IF_4
0x4000949	      0xe91c010000	                           jmp 0x4000a6a	       173	cache-tree.c	FUNCTION_36	IF_4
0x400094e	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       179	cache-tree.c	FUNCTION_36
0x4000955	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       180	cache-tree.c	FUNCTION_36	FOR_2
0x400095c	      0xe9e8000000	                           jmp 0x4000a49	       180	cache-tree.c	FUNCTION_36	FOR_2
0x4000961	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       185	cache-tree.c	FUNCTION_36	FOR_2
0x4000964	            0x4898	                                    cdqe	       185	cache-tree.c	FUNCTION_36	FOR_2
0x4000966	    0x488d14c50000	                        lea rdx, [rax*8]	       185	cache-tree.c	FUNCTION_36	FOR_2
0x400096e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       185	cache-tree.c	FUNCTION_36	FOR_2
0x4000972	          0x4801d0	                            add rax, rdx	       185	cache-tree.c	FUNCTION_36	FOR_2
0x4000975	          0x488b00	                    mov rax, qword [rax]	       185	cache-tree.c	FUNCTION_36	FOR_2
0x4000978	        0x4883c058	                           add rax, 0x58	       185	cache-tree.c	FUNCTION_36	FOR_2
0x400097c	        0x488945e0	             mov qword [rbp - 0x20], rax	       185	cache-tree.c	FUNCTION_36	FOR_2
0x4000980	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       186	cache-tree.c	FUNCTION_36	FOR_2
0x4000983	            0x4898	                                    cdqe	       186	cache-tree.c	FUNCTION_36	FOR_2
0x4000985	        0x4883c001	                              add rax, 1	       186	cache-tree.c	FUNCTION_36	FOR_2
0x4000989	    0x488d14c50000	                        lea rdx, [rax*8]	       186	cache-tree.c	FUNCTION_36	FOR_2
0x4000991	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       186	cache-tree.c	FUNCTION_36	FOR_2
0x4000995	          0x4801d0	                            add rax, rdx	       186	cache-tree.c	FUNCTION_36	FOR_2
0x4000998	          0x488b00	                    mov rax, qword [rax]	       186	cache-tree.c	FUNCTION_36	FOR_2
0x400099b	        0x4883c058	                           add rax, 0x58	       186	cache-tree.c	FUNCTION_36	FOR_2
0x400099f	        0x488945e8	             mov qword [rbp - 0x18], rax	       186	cache-tree.c	FUNCTION_36	FOR_2
0x40009a3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       187	cache-tree.c	FUNCTION_36	FOR_2	CALL_4
0x40009a7	          0x4889c7	                            mov rdi, rax	       187	cache-tree.c	FUNCTION_36	FOR_2	CALL_4
0x40009aa	      0xe800000000	                          call 0x40009af	       187	cache-tree.c	FUNCTION_36	FOR_2	CALL_4
0x40009af	          0x8945d4	             mov dword [rbp - 0x2c], eax	       187	cache-tree.c	FUNCTION_36	FOR_2	CALL_4
0x40009b2	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       188	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_5
0x40009b5	          0x4863d8	                         movsxd rbx, eax	       188	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_5
0x40009b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       188	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_5
0x40009bc	          0x4889c7	                            mov rdi, rax	       188	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_5
0x40009bf	      0xe800000000	                          call 0x40009c4	       188	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_5
0x40009c4	          0x4839c3	                            cmp rbx, rax	       188	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_5
0x40009c7	            0x737c	                           jae 0x4000a45	       188	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_5
0x40009c9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       189	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_6
0x40009cc	          0x4863d0	                         movsxd rdx, eax	       189	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_6
0x40009cf	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       189	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_6
0x40009d3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       189	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_6
0x40009d7	          0x4889ce	                            mov rsi, rcx	       189	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_6
0x40009da	          0x4889c7	                            mov rdi, rax	       189	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_6
0x40009dd	      0xe800000000	                          call 0x40009e2	       189	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_6
0x40009e2	            0x85c0	                           test eax, eax	       188	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_5
0x40009e4	            0x755f	                           jne 0x4000a45	       188	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_5
0x40009e6	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       190	cache-tree.c	FUNCTION_36	FOR_2	IF_5
0x40009e9	          0x4863d0	                         movsxd rdx, eax	       190	cache-tree.c	FUNCTION_36	FOR_2	IF_5
0x40009ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       190	cache-tree.c	FUNCTION_36	FOR_2	IF_5
0x40009f0	          0x4801d0	                            add rax, rdx	       190	cache-tree.c	FUNCTION_36	FOR_2	IF_5
0x40009f3	           0xfb600	                   movzx eax, byte [rax]	       190	cache-tree.c	FUNCTION_36	FOR_2	IF_5
0x40009f6	            0x3c2f	                            cmp al, 0x2f	       189	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_6
0x40009f8	            0x754b	                           jne 0x4000a45	       189	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_6
0x40009fa	        0x8345cc01	               add dword [rbp - 0x34], 1	       191	cache-tree.c	FUNCTION_36	FOR_2	IF_5	IF_6
0x40009fe	        0x837dcc0a	            cmp dword [rbp - 0x34], 0xa 	       191	cache-tree.c	FUNCTION_36	FOR_2	IF_5	IF_6
0x4000a02	            0x7e20	                           jle 0x4000a24	       191	cache-tree.c	FUNCTION_36	FOR_2	IF_5	IF_6
0x4000a04	    0x488b05000000	            mov rax, qword [0x04000a0b] 	       192	cache-tree.c	FUNCTION_36	FOR_2	IF_5	IF_6	CALL_7
0x4000a0b	          0x4889c1	                            mov rcx, rax	       192	cache-tree.c	FUNCTION_36	FOR_2	IF_5	IF_6	CALL_7
0x4000a0e	      0xba04000000	                              mov edx, 4	       192	cache-tree.c	FUNCTION_36	FOR_2	IF_5	IF_6	CALL_7
0x4000a13	      0xbe01000000	                              mov esi, 1	       192	cache-tree.c	FUNCTION_36	FOR_2	IF_5	IF_6	CALL_7
0x4000a18	      0xbf00000000	                              mov edi, 0	       192	cache-tree.c	FUNCTION_36	FOR_2	IF_5	IF_6	CALL_7
0x4000a1d	      0xe800000000	                          call 0x4000a22	       192	cache-tree.c	FUNCTION_36	FOR_2	IF_5	IF_6	CALL_7
0x4000a22	            0xeb34	                           jmp 0x4000a58	       193	cache-tree.c	FUNCTION_36	FOR_2	IF_5	IF_6
0x4000a24	    0x488b05000000	            mov rax, qword [0x04000a2b] 	       195	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_8
0x4000a2b	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       195	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_8
0x4000a2f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       195	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_8
0x4000a33	      0xbe00000000	                              mov esi, 0	       195	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_8
0x4000a38	          0x4889c7	                            mov rdi, rax	       195	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_8
0x4000a3b	      0xb800000000	                              mov eax, 0	       195	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_8
0x4000a40	      0xe800000000	                          call 0x4000a45	       195	cache-tree.c	FUNCTION_36	FOR_2	IF_5	CALL_8
0x4000a45	        0x8345c801	               add dword [rbp - 0x38], 1	       180	cache-tree.c	FUNCTION_36	FOR_2
0x4000a49	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       180	cache-tree.c	FUNCTION_36	FOR_2
0x4000a4c	          0x83e801	                              sub eax, 1	       180	cache-tree.c	FUNCTION_36	FOR_2
0x4000a4f	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	       180	cache-tree.c	FUNCTION_36	FOR_2
0x4000a52	     0xf8f09ffffff	                            jg 0x4000961	       180	cache-tree.c	FUNCTION_36	FOR_2
0x4000a58	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       199	cache-tree.c	FUNCTION_36	IF_7
0x4000a5c	            0x7407	                            je 0x4000a65	       199	cache-tree.c	FUNCTION_36	IF_7
0x4000a5e	      0xb8ffffffff	                     mov eax, 0xffffffff	       200	cache-tree.c	FUNCTION_36	IF_7
0x4000a63	            0xeb05	                           jmp 0x4000a6a	       200	cache-tree.c	FUNCTION_36	IF_7
0x4000a65	      0xb800000000	                              mov eax, 0	       201	cache-tree.c	FUNCTION_36
0x4000a6a	        0x4883c448	                           add rsp, 0x48	       202	cache-tree.c	FUNCTION_36
0x4000a6e	              0x5b	                                 pop rbx	       202	cache-tree.c	FUNCTION_36
0x4000a6f	              0x5d	                                 pop rbp	       202	cache-tree.c	FUNCTION_36
0x4000a70	              0xc3	                                     ret	       202	cache-tree.c	FUNCTION_36
update_main_cache_tree	CALL,2:IF,1:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	15
0x4001def	              0x55	                                push rbp	       726	cache-tree.c	FUNCTION_52
0x4001df0	          0x4889e5	                            mov rbp, rsp	       726	cache-tree.c	FUNCTION_52
0x4001df3	        0x4883ec10	                           sub rsp, 0x10	       726	cache-tree.c	FUNCTION_52
0x4001df7	          0x897dfc	                mov dword [rbp - 4], edi	       726	cache-tree.c	FUNCTION_52
0x4001dfa	    0x488b05000000	            mov rax, qword [0x04001e01] 	       727	cache-tree.c	FUNCTION_52	IF_1
0x4001e01	          0x4885c0	                           test rax, rax	       727	cache-tree.c	FUNCTION_52	IF_1
0x4001e04	            0x750c	                           jne 0x4001e12	       727	cache-tree.c	FUNCTION_52	IF_1
0x4001e06	      0xe800000000	                          call 0x4001e0b	       728	cache-tree.c	FUNCTION_52	CALL_1
0x4001e0b	    0x488905000000	            mov qword [0x04001e12], rax 	       728	cache-tree.c	FUNCTION_52	CALL_1
0x4001e12	          0x8b45fc	                mov eax, dword [rbp - 4]	       729	cache-tree.c	FUNCTION_52	CALL_2
0x4001e15	            0x89c6	                            mov esi, eax	       729	cache-tree.c	FUNCTION_52	CALL_2
0x4001e17	      0xbf00000000	                              mov edi, 0	       729	cache-tree.c	FUNCTION_52	CALL_2
0x4001e1c	      0xe800000000	                          call 0x4001e21	       729	cache-tree.c	FUNCTION_52	CALL_2
0x4001e21	              0xc9	                                   leave	       730	cache-tree.c	FUNCTION_52
0x4001e22	              0xc3	                                     ret	       730	cache-tree.c	FUNCTION_52
prime_cache_tree	CALL,3:IF,0:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	28
0x4001cb7	              0x55	                                push rbp	       686	cache-tree.c	FUNCTION_49
0x4001cb8	          0x4889e5	                            mov rbp, rsp	       686	cache-tree.c	FUNCTION_49
0x4001cbb	        0x4883ec10	                           sub rsp, 0x10	       686	cache-tree.c	FUNCTION_49
0x4001cbf	        0x48897df8	                mov qword [rbp - 8], rdi	       686	cache-tree.c	FUNCTION_49
0x4001cc3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       686	cache-tree.c	FUNCTION_49
0x4001cc7	        0x488b45f8	                mov rax, qword [rbp - 8]	       687	cache-tree.c	FUNCTION_49	CALL_1
0x4001ccb	        0x4883c020	                           add rax, 0x20	       687	cache-tree.c	FUNCTION_49	CALL_1
0x4001ccf	          0x4889c7	                            mov rdi, rax	       687	cache-tree.c	FUNCTION_49	CALL_1
0x4001cd2	      0xe800000000	                          call 0x4001cd7	       687	cache-tree.c	FUNCTION_49	CALL_1
0x4001cd7	      0xe800000000	                          call 0x4001cdc	       688	cache-tree.c	FUNCTION_49	CALL_2
0x4001cdc	          0x4889c2	                            mov rdx, rax	       688	cache-tree.c	FUNCTION_49	CALL_2
0x4001cdf	        0x488b45f8	                mov rax, qword [rbp - 8]	       688	cache-tree.c	FUNCTION_49	CALL_2
0x4001ce3	        0x48895020	             mov qword [rax + 0x20], rdx	       688	cache-tree.c	FUNCTION_49	CALL_2
0x4001ce7	        0x488b45f8	                mov rax, qword [rbp - 8]	       689	cache-tree.c	FUNCTION_49	CALL_3
0x4001ceb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       689	cache-tree.c	FUNCTION_49	CALL_3
0x4001cef	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       689	cache-tree.c	FUNCTION_49	CALL_3
0x4001cf3	          0x4889d6	                            mov rsi, rdx	       689	cache-tree.c	FUNCTION_49	CALL_3
0x4001cf6	          0x4889c7	                            mov rdi, rax	       689	cache-tree.c	FUNCTION_49	CALL_3
0x4001cf9	      0xe892feffff	           call sym.prime_cache_tree_rec	       689	cache-tree.c	FUNCTION_49	CALL_3
0x4001cfe	        0x488b45f8	                mov rax, qword [rbp - 8]	       690	cache-tree.c	FUNCTION_49
0x4001d02	          0x8b4014	            mov eax, dword [rax + 0x14] 	       690	cache-tree.c	FUNCTION_49
0x4001d05	          0x83c820	                            or eax, 0x20	       690	cache-tree.c	FUNCTION_49
0x4001d08	            0x89c2	                            mov edx, eax	       690	cache-tree.c	FUNCTION_49
0x4001d0a	        0x488b45f8	                mov rax, qword [rbp - 8]	       690	cache-tree.c	FUNCTION_49
0x4001d0e	          0x895014	             mov dword [rax + 0x14], edx	       690	cache-tree.c	FUNCTION_49
0x4001d11	              0x90	                                     nop	       691	cache-tree.c	FUNCTION_49
0x4001d12	              0xc9	                                   leave	       691	cache-tree.c	FUNCTION_49
0x4001d13	              0xc3	                                     ret	       691	cache-tree.c	FUNCTION_49
cache_tree_find	CALL,1:IF,2:DO,0:WHILE,2:ELSE,0:functions,0:SWITCH,0:FOR,0	47
0x400191e	              0x55	                                push rbp	       579	cache-tree.c	FUNCTION_45
0x400191f	          0x4889e5	                            mov rbp, rsp	       579	cache-tree.c	FUNCTION_45
0x4001922	        0x4883ec20	                           sub rsp, 0x20	       579	cache-tree.c	FUNCTION_45
0x4001926	        0x48897de8	             mov qword [rbp - 0x18], rdi	       579	cache-tree.c	FUNCTION_45
0x400192a	        0x488975e0	             mov qword [rbp - 0x20], rsi	       579	cache-tree.c	FUNCTION_45
0x400192e	      0x48837de800	               cmp qword [rbp - 0x18], 0	       580	cache-tree.c	FUNCTION_45	IF_1
0x4001933	            0x757b	                           jne 0x40019b0	       580	cache-tree.c	FUNCTION_45	IF_1
0x4001935	      0xb800000000	                              mov eax, 0	       581	cache-tree.c	FUNCTION_45	IF_1
0x400193a	      0xe980000000	                           jmp 0x40019bf	       581	cache-tree.c	FUNCTION_45	IF_1
0x400193f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       586	cache-tree.c	FUNCTION_45	WHILE_1
0x4001943	      0xbe2f000000	                           mov esi, 0x2f	       586	cache-tree.c	FUNCTION_45	WHILE_1
0x4001948	          0x4889c7	                            mov rdi, rax	       586	cache-tree.c	FUNCTION_45	WHILE_1
0x400194b	      0xe800000000	                          call 0x4001950	       586	cache-tree.c	FUNCTION_45	WHILE_1
0x4001950	        0x488945f0	             mov qword [rbp - 0x10], rax	       586	cache-tree.c	FUNCTION_45	WHILE_1
0x4001954	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       591	cache-tree.c	FUNCTION_45	WHILE_1	CALL_1
0x4001958	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       591	cache-tree.c	FUNCTION_45	WHILE_1	CALL_1
0x400195c	          0x4829c2	                            sub rdx, rax	       591	cache-tree.c	FUNCTION_45	WHILE_1	CALL_1
0x400195f	          0x4889d0	                            mov rax, rdx	       591	cache-tree.c	FUNCTION_45	WHILE_1	CALL_1
0x4001962	            0x89c2	                            mov edx, eax	       591	cache-tree.c	FUNCTION_45	WHILE_1	CALL_1
0x4001964	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       591	cache-tree.c	FUNCTION_45	WHILE_1	CALL_1
0x4001968	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       591	cache-tree.c	FUNCTION_45	WHILE_1	CALL_1
0x400196c	      0xb900000000	                              mov ecx, 0	       591	cache-tree.c	FUNCTION_45	WHILE_1	CALL_1
0x4001971	          0x4889c7	                            mov rdi, rax	       591	cache-tree.c	FUNCTION_45	WHILE_1	CALL_1
0x4001974	      0xe8ffeaffff	                   call sym.find_subtree	       591	cache-tree.c	FUNCTION_45	WHILE_1	CALL_1
0x4001979	        0x488945f8	                mov qword [rbp - 8], rax	       591	cache-tree.c	FUNCTION_45	WHILE_1	CALL_1
0x400197d	      0x48837df800	                  cmp qword [rbp - 8], 0	       592	cache-tree.c	FUNCTION_45	WHILE_1	IF_2
0x4001982	            0x7507	                           jne 0x400198b	       592	cache-tree.c	FUNCTION_45	WHILE_1	IF_2
0x4001984	      0xb800000000	                              mov eax, 0	       593	cache-tree.c	FUNCTION_45	WHILE_1	IF_2
0x4001989	            0xeb34	                           jmp 0x40019bf	       593	cache-tree.c	FUNCTION_45	WHILE_1	IF_2
0x400198b	        0x488b45f8	                mov rax, qword [rbp - 8]	       594	cache-tree.c	FUNCTION_45	WHILE_1
0x400198f	          0x488b00	                    mov rax, qword [rax]	       594	cache-tree.c	FUNCTION_45	WHILE_1
0x4001992	        0x488945e8	             mov qword [rbp - 0x18], rax	       594	cache-tree.c	FUNCTION_45	WHILE_1
0x4001996	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       596	cache-tree.c	FUNCTION_45	WHILE_1
0x400199a	        0x488945e0	             mov qword [rbp - 0x20], rax	       596	cache-tree.c	FUNCTION_45	WHILE_1
0x400199e	            0xeb05	                           jmp 0x40019a5	       597	cache-tree.c	FUNCTION_45	WHILE_1	WHILE_2
0x40019a0	      0x488345e001	               add qword [rbp - 0x20], 1	       598	cache-tree.c	FUNCTION_45	WHILE_1	WHILE_2
0x40019a5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       597	cache-tree.c	FUNCTION_45	WHILE_1	WHILE_2
0x40019a9	           0xfb600	                   movzx eax, byte [rax]	       597	cache-tree.c	FUNCTION_45	WHILE_1	WHILE_2
0x40019ac	            0x3c2f	                            cmp al, 0x2f	       597	cache-tree.c	FUNCTION_45	WHILE_1	WHILE_2
0x40019ae	            0x74f0	                            je 0x40019a0	       597	cache-tree.c	FUNCTION_45	WHILE_1	WHILE_2
0x40019b0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       582	cache-tree.c	FUNCTION_45	WHILE_1
0x40019b4	           0xfb600	                   movzx eax, byte [rax]	       582	cache-tree.c	FUNCTION_45	WHILE_1
0x40019b7	            0x84c0	                             test al, al	       582	cache-tree.c	FUNCTION_45	WHILE_1
0x40019b9	            0x7584	                           jne 0x400193f	       582	cache-tree.c	FUNCTION_45	WHILE_1
0x40019bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       600	cache-tree.c	FUNCTION_45
0x40019bf	              0xc9	                                   leave	       601	cache-tree.c	FUNCTION_45
0x40019c0	              0xc3	                                     ret	       601	cache-tree.c	FUNCTION_45
cache_tree_free	CALL,4:IF,2:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,1	56
0x40002a4	              0x55	                                push rbp	        19	cache-tree.c	FUNCTION_29
0x40002a5	          0x4889e5	                            mov rbp, rsp	        19	cache-tree.c	FUNCTION_29
0x40002a8	        0x4883ec20	                           sub rsp, 0x20	        19	cache-tree.c	FUNCTION_29
0x40002ac	        0x48897de8	             mov qword [rbp - 0x18], rdi	        19	cache-tree.c	FUNCTION_29
0x40002b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        21	cache-tree.c	FUNCTION_29
0x40002b4	          0x488b00	                    mov rax, qword [rax]	        21	cache-tree.c	FUNCTION_29
0x40002b7	        0x488945f8	                mov qword [rbp - 8], rax	        21	cache-tree.c	FUNCTION_29
0x40002bb	      0x48837df800	                  cmp qword [rbp - 8], 0	        23	cache-tree.c	FUNCTION_29	IF_1
0x40002c0	     0xf849f000000	                            je 0x4000365	        23	cache-tree.c	FUNCTION_29	IF_1
0x40002c6	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        25	cache-tree.c	FUNCTION_29	FOR_1
0x40002cd	            0xeb61	                           jmp 0x4000330	        25	cache-tree.c	FUNCTION_29	FOR_1
0x40002cf	        0x488b45f8	                mov rax, qword [rbp - 8]	        26	cache-tree.c	FUNCTION_29	FOR_1	IF_2
0x40002d3	        0x488b4020	            mov rax, qword [rax + 0x20] 	        26	cache-tree.c	FUNCTION_29	FOR_1	IF_2
0x40002d7	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        26	cache-tree.c	FUNCTION_29	FOR_1	IF_2
0x40002da	          0x4863d2	                         movsxd rdx, edx	        26	cache-tree.c	FUNCTION_29	FOR_1	IF_2
0x40002dd	        0x48c1e203	                              shl rdx, 3	        26	cache-tree.c	FUNCTION_29	FOR_1	IF_2
0x40002e1	          0x4801d0	                            add rax, rdx	        26	cache-tree.c	FUNCTION_29	FOR_1	IF_2
0x40002e4	          0x488b00	                    mov rax, qword [rax]	        26	cache-tree.c	FUNCTION_29	FOR_1	IF_2
0x40002e7	          0x4885c0	                           test rax, rax	        26	cache-tree.c	FUNCTION_29	FOR_1	IF_2
0x40002ea	            0x7440	                            je 0x400032c	        26	cache-tree.c	FUNCTION_29	FOR_1	IF_2
0x40002ec	        0x488b45f8	                mov rax, qword [rbp - 8]	        27	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_1
0x40002f0	        0x488b4020	            mov rax, qword [rax + 0x20] 	        27	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_1
0x40002f4	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        27	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_1
0x40002f7	          0x4863d2	                         movsxd rdx, edx	        27	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_1
0x40002fa	        0x48c1e203	                              shl rdx, 3	        27	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_1
0x40002fe	          0x4801d0	                            add rax, rdx	        27	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_1
0x4000301	          0x488b00	                    mov rax, qword [rax]	        27	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_1
0x4000304	          0x4889c7	                            mov rdi, rax	        27	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_1
0x4000307	      0xe800000000	                          call 0x400030c	        27	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_1
0x400030c	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_2
0x4000310	        0x488b4020	            mov rax, qword [rax + 0x20] 	        28	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_2
0x4000314	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        28	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_2
0x4000317	          0x4863d2	                         movsxd rdx, edx	        28	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_2
0x400031a	        0x48c1e203	                              shl rdx, 3	        28	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_2
0x400031e	          0x4801d0	                            add rax, rdx	        28	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_2
0x4000321	          0x488b00	                    mov rax, qword [rax]	        28	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_2
0x4000324	          0x4889c7	                            mov rdi, rax	        28	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_2
0x4000327	      0xe800000000	                          call 0x400032c	        28	cache-tree.c	FUNCTION_29	FOR_1	IF_2	CALL_2
0x400032c	        0x8345f401	                add dword [rbp - 0xc], 1	        25	cache-tree.c	FUNCTION_29	FOR_1
0x4000330	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	cache-tree.c	FUNCTION_29	FOR_1
0x4000334	          0x8b4018	            mov eax, dword [rax + 0x18] 	        25	cache-tree.c	FUNCTION_29	FOR_1
0x4000337	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	        25	cache-tree.c	FUNCTION_29	FOR_1
0x400033a	            0x7f93	                            jg 0x40002cf	        25	cache-tree.c	FUNCTION_29	FOR_1
0x400033c	        0x488b45f8	                mov rax, qword [rbp - 8]	        30	cache-tree.c	FUNCTION_29	CALL_3
0x4000340	        0x488b4020	            mov rax, qword [rax + 0x20] 	        30	cache-tree.c	FUNCTION_29	CALL_3
0x4000344	          0x4889c7	                            mov rdi, rax	        30	cache-tree.c	FUNCTION_29	CALL_3
0x4000347	      0xe800000000	                          call 0x400034c	        30	cache-tree.c	FUNCTION_29	CALL_3
0x400034c	        0x488b45f8	                mov rax, qword [rbp - 8]	        31	cache-tree.c	FUNCTION_29	CALL_4
0x4000350	          0x4889c7	                            mov rdi, rax	        31	cache-tree.c	FUNCTION_29	CALL_4
0x4000353	      0xe800000000	                          call 0x4000358	        31	cache-tree.c	FUNCTION_29	CALL_4
0x4000358	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        32	cache-tree.c	FUNCTION_29
0x400035c	    0x48c700000000	                      mov qword [rax], 0	        32	cache-tree.c	FUNCTION_29
0x4000363	            0xeb01	                           jmp 0x4000366	        32	cache-tree.c	FUNCTION_29
0x4000365	              0x90	                                     nop	        24	cache-tree.c	FUNCTION_29	IF_1
0x4000366	              0xc9	                                   leave	        33	cache-tree.c	FUNCTION_29
0x4000367	              0xc3	                                     ret	        33	cache-tree.c	FUNCTION_29
cache_tree_write	CALL,1:IF,0:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	14
0x40015fd	              0x55	                                push rbp	       483	cache-tree.c	FUNCTION_42
0x40015fe	          0x4889e5	                            mov rbp, rsp	       483	cache-tree.c	FUNCTION_42
0x4001601	        0x4883ec10	                           sub rsp, 0x10	       483	cache-tree.c	FUNCTION_42
0x4001605	        0x48897df8	                mov qword [rbp - 8], rdi	       483	cache-tree.c	FUNCTION_42
0x4001609	        0x488975f0	             mov qword [rbp - 0x10], rsi	       483	cache-tree.c	FUNCTION_42
0x400160d	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       484	cache-tree.c	FUNCTION_42	CALL_1
0x4001611	        0x488b45f8	                mov rax, qword [rbp - 8]	       484	cache-tree.c	FUNCTION_42	CALL_1
0x4001615	      0xb900000000	                              mov ecx, 0	       484	cache-tree.c	FUNCTION_42	CALL_1
0x400161a	      0xba00000000	                              mov edx, 0	       484	cache-tree.c	FUNCTION_42	CALL_1
0x400161f	          0x4889c7	                            mov rdi, rax	       484	cache-tree.c	FUNCTION_42	CALL_1
0x4001622	      0xe868feffff	                      call sym.write_one	       484	cache-tree.c	FUNCTION_42	CALL_1
0x4001627	              0x90	                                     nop	       485	cache-tree.c	FUNCTION_42
0x4001628	              0xc9	                                   leave	       485	cache-tree.c	FUNCTION_42
0x4001629	              0xc3	                                     ret	       485	cache-tree.c	FUNCTION_42
subtree_pos	CALL,1:IF,2:DO,0:WHILE,1:ELSE,1:functions,0:SWITCH,0:FOR,0	61
0x40003b7	              0x55	                                push rbp	        46	cache-tree.c	FUNCTION_31
0x40003b8	          0x4889e5	                            mov rbp, rsp	        46	cache-tree.c	FUNCTION_31
0x40003bb	        0x4883ec40	                           sub rsp, 0x40	        46	cache-tree.c	FUNCTION_31
0x40003bf	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        46	cache-tree.c	FUNCTION_31
0x40003c3	        0x488975d0	             mov qword [rbp - 0x30], rsi	        46	cache-tree.c	FUNCTION_31
0x40003c7	          0x8955cc	             mov dword [rbp - 0x34], edx	        46	cache-tree.c	FUNCTION_31
0x40003ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        47	cache-tree.c	FUNCTION_31
0x40003ce	        0x488b4020	            mov rax, qword [rax + 0x20] 	        47	cache-tree.c	FUNCTION_31
0x40003d2	        0x488945f0	             mov qword [rbp - 0x10], rax	        47	cache-tree.c	FUNCTION_31
0x40003d6	    0xc745e0000000	               mov dword [rbp - 0x20], 0	        49	cache-tree.c	FUNCTION_31
0x40003dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        50	cache-tree.c	FUNCTION_31
0x40003e1	          0x8b4018	            mov eax, dword [rax + 0x18] 	        50	cache-tree.c	FUNCTION_31
0x40003e4	          0x8945e4	             mov dword [rbp - 0x1c], eax	        50	cache-tree.c	FUNCTION_31
0x40003e7	            0xeb7c	                           jmp 0x4000465	        51	cache-tree.c	FUNCTION_31	WHILE_1
0x40003e9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        52	cache-tree.c	FUNCTION_31	WHILE_1
0x40003ec	          0x2b45e0	             sub eax, dword [rbp - 0x20]	        52	cache-tree.c	FUNCTION_31	WHILE_1
0x40003ef	            0x89c2	                            mov edx, eax	        52	cache-tree.c	FUNCTION_31	WHILE_1
0x40003f1	          0xc1ea1f	                           shr edx, 0x1f	        52	cache-tree.c	FUNCTION_31	WHILE_1
0x40003f4	             0x1d0	                            add eax, edx	        52	cache-tree.c	FUNCTION_31	WHILE_1
0x40003f6	            0xd1f8	                              sar eax, 1	        52	cache-tree.c	FUNCTION_31	WHILE_1
0x40003f8	            0x89c2	                            mov edx, eax	        52	cache-tree.c	FUNCTION_31	WHILE_1
0x40003fa	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        52	cache-tree.c	FUNCTION_31	WHILE_1
0x40003fd	             0x1d0	                            add eax, edx	        52	cache-tree.c	FUNCTION_31	WHILE_1
0x40003ff	          0x8945e8	             mov dword [rbp - 0x18], eax	        52	cache-tree.c	FUNCTION_31	WHILE_1
0x4000402	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        53	cache-tree.c	FUNCTION_31	WHILE_1
0x4000405	            0x4898	                                    cdqe	        53	cache-tree.c	FUNCTION_31	WHILE_1
0x4000407	    0x488d14c50000	                        lea rdx, [rax*8]	        53	cache-tree.c	FUNCTION_31	WHILE_1
0x400040f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        53	cache-tree.c	FUNCTION_31	WHILE_1
0x4000413	          0x4801d0	                            add rax, rdx	        53	cache-tree.c	FUNCTION_31	WHILE_1
0x4000416	          0x488b00	                    mov rax, qword [rax]	        53	cache-tree.c	FUNCTION_31	WHILE_1
0x4000419	        0x488945f8	                mov qword [rbp - 8], rax	        53	cache-tree.c	FUNCTION_31	WHILE_1
0x400041d	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	cache-tree.c	FUNCTION_31	WHILE_1	CALL_1
0x4000421	          0x8b500c	              mov edx, dword [rax + 0xc]	        54	cache-tree.c	FUNCTION_31	WHILE_1	CALL_1
0x4000424	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	cache-tree.c	FUNCTION_31	WHILE_1
0x4000428	        0x488d7814	                   lea rdi, [rax + 0x14]	        55	cache-tree.c	FUNCTION_31	WHILE_1
0x400042c	          0x8b75cc	             mov esi, dword [rbp - 0x34]	        54	cache-tree.c	FUNCTION_31	WHILE_1	CALL_1
0x400042f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        54	cache-tree.c	FUNCTION_31	WHILE_1	CALL_1
0x4000433	            0x89d1	                            mov ecx, edx	        54	cache-tree.c	FUNCTION_31	WHILE_1	CALL_1
0x4000435	          0x4889fa	                            mov rdx, rdi	        54	cache-tree.c	FUNCTION_31	WHILE_1	CALL_1
0x4000438	          0x4889c7	                            mov rdi, rax	        54	cache-tree.c	FUNCTION_31	WHILE_1	CALL_1
0x400043b	      0xe828ffffff	               call sym.subtree_name_cmp	        54	cache-tree.c	FUNCTION_31	WHILE_1	CALL_1
0x4000440	          0x8945ec	             mov dword [rbp - 0x14], eax	        54	cache-tree.c	FUNCTION_31	WHILE_1	CALL_1
0x4000443	        0x837dec00	               cmp dword [rbp - 0x14], 0	        56	cache-tree.c	FUNCTION_31	WHILE_1	IF_1
0x4000447	            0x7505	                           jne 0x400044e	        56	cache-tree.c	FUNCTION_31	WHILE_1	IF_1
0x4000449	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        57	cache-tree.c	FUNCTION_31	WHILE_1	IF_1
0x400044c	            0xeb28	                           jmp 0x4000476	        57	cache-tree.c	FUNCTION_31	WHILE_1	IF_1
0x400044e	        0x837dec00	               cmp dword [rbp - 0x14], 0	        58	cache-tree.c	FUNCTION_31	WHILE_1	IF_2
0x4000452	            0x7908	                           jns 0x400045c	        58	cache-tree.c	FUNCTION_31	WHILE_1	IF_2
0x4000454	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        59	cache-tree.c	FUNCTION_31	WHILE_1	IF_2
0x4000457	          0x8945e4	             mov dword [rbp - 0x1c], eax	        59	cache-tree.c	FUNCTION_31	WHILE_1	IF_2
0x400045a	            0xeb09	                           jmp 0x4000465	        59	cache-tree.c	FUNCTION_31	WHILE_1	IF_2
0x400045c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        61	cache-tree.c	FUNCTION_31	WHILE_1	ELSE_1
0x400045f	          0x83c001	                              add eax, 1	        61	cache-tree.c	FUNCTION_31	WHILE_1	ELSE_1
0x4000462	          0x8945e0	             mov dword [rbp - 0x20], eax	        61	cache-tree.c	FUNCTION_31	WHILE_1	ELSE_1
0x4000465	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        51	cache-tree.c	FUNCTION_31	WHILE_1
0x4000468	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	        51	cache-tree.c	FUNCTION_31	WHILE_1
0x400046b	     0xf8c78ffffff	                            jl 0x40003e9	        51	cache-tree.c	FUNCTION_31	WHILE_1
0x4000471	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        63	cache-tree.c	FUNCTION_31	ELSE_1
0x4000474	            0xf7d0	                                 not eax	        63	cache-tree.c	FUNCTION_31	ELSE_1
0x4000476	              0xc9	                                   leave	        64	cache-tree.c	FUNCTION_31	ELSE_1
0x4000477	              0xc3	                                     ret	        64	cache-tree.c	FUNCTION_31	ELSE_1
parse_tree	CALL,1:IF,0:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	10
0x400025a	              0x55	                                push rbp	        21	tree.h	FUNCTION_90
0x400025b	          0x4889e5	                            mov rbp, rsp	        21	tree.h	FUNCTION_90
0x400025e	        0x4883ec10	                           sub rsp, 0x10	        21	tree.h	FUNCTION_90
0x4000262	        0x48897df8	                mov qword [rbp - 8], rdi	        21	tree.h	FUNCTION_90
0x4000266	        0x488b45f8	                mov rax, qword [rbp - 8]	        22	tree.h	FUNCTION_90	CALL_1
0x400026a	      0xbe00000000	                              mov esi, 0	        22	tree.h	FUNCTION_90	CALL_1
0x400026f	          0x4889c7	                            mov rdi, rax	        22	tree.h	FUNCTION_90	CALL_1
0x4000272	      0xe800000000	                          call 0x4000277	        22	tree.h	FUNCTION_90	CALL_1
0x4000277	              0xc9	                                   leave	        23	tree.h	FUNCTION_90
0x4000278	              0xc3	                                     ret	        23	tree.h	FUNCTION_90
hashcpy	CALL,1:IF,0:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	14
0x40001a2	              0x55	                                push rbp	       994	cache.h	FUNCTION_12
0x40001a3	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_12
0x40001a6	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_12
0x40001aa	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_12
0x40001ae	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_12
0x40001b2	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_12	CALL_1
0x40001b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_12	CALL_1
0x40001ba	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_12	CALL_1
0x40001bf	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_12	CALL_1
0x40001c2	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_12	CALL_1
0x40001c5	      0xe800000000	                          call 0x40001ca	       995	cache.h	FUNCTION_12	CALL_1
0x40001ca	              0x90	                                     nop	       996	cache.h	FUNCTION_12
0x40001cb	              0xc9	                                   leave	       996	cache.h	FUNCTION_12
0x40001cc	              0xc3	                                     ret	       996	cache.h	FUNCTION_12
cache_tree_sub	CALL,2:IF,0:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	17
0x400067e	              0x55	                                push rbp	        94	cache-tree.c	FUNCTION_33
0x400067f	          0x4889e5	                            mov rbp, rsp	        94	cache-tree.c	FUNCTION_33
0x4000682	        0x4883ec20	                           sub rsp, 0x20	        94	cache-tree.c	FUNCTION_33
0x4000686	        0x48897de8	             mov qword [rbp - 0x18], rdi	        94	cache-tree.c	FUNCTION_33
0x400068a	        0x488975e0	             mov qword [rbp - 0x20], rsi	        94	cache-tree.c	FUNCTION_33
0x400068e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        95	cache-tree.c	FUNCTION_33	CALL_1
0x4000692	          0x4889c7	                            mov rdi, rax	        95	cache-tree.c	FUNCTION_33	CALL_1
0x4000695	      0xe800000000	                          call 0x400069a	        95	cache-tree.c	FUNCTION_33	CALL_1
0x400069a	          0x8945fc	                mov dword [rbp - 4], eax	        95	cache-tree.c	FUNCTION_33	CALL_1
0x400069d	          0x8b55fc	                mov edx, dword [rbp - 4]	        96	cache-tree.c	FUNCTION_33	CALL_2
0x40006a0	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	        96	cache-tree.c	FUNCTION_33	CALL_2
0x40006a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        96	cache-tree.c	FUNCTION_33	CALL_2
0x40006a8	      0xb901000000	                              mov ecx, 1	        96	cache-tree.c	FUNCTION_33	CALL_2
0x40006ad	          0x4889c7	                            mov rdi, rax	        96	cache-tree.c	FUNCTION_33	CALL_2
0x40006b0	      0xe8c3fdffff	                   call sym.find_subtree	        96	cache-tree.c	FUNCTION_33	CALL_2
0x40006b5	              0xc9	                                   leave	        97	cache-tree.c	FUNCTION_33
0x40006b6	              0xc3	                                     ret	        97	cache-tree.c	FUNCTION_33
has_sha1_file	CALL,1:IF,0:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	10
0x40001f3	              0x55	                                push rbp	      1250	cache.h	FUNCTION_23
0x40001f4	          0x4889e5	                            mov rbp, rsp	      1250	cache.h	FUNCTION_23
0x40001f7	        0x4883ec10	                           sub rsp, 0x10	      1250	cache.h	FUNCTION_23
0x40001fb	        0x48897df8	                mov qword [rbp - 8], rdi	      1250	cache.h	FUNCTION_23
0x40001ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      1251	cache.h	FUNCTION_23	CALL_1
0x4000203	      0xbe00000000	                              mov esi, 0	      1251	cache.h	FUNCTION_23	CALL_1
0x4000208	          0x4889c7	                            mov rdi, rax	      1251	cache.h	FUNCTION_23	CALL_1
0x400020b	      0xe800000000	                          call 0x4000210	      1251	cache.h	FUNCTION_23	CALL_1
0x4000210	              0xc9	                                   leave	      1252	cache.h	FUNCTION_23
0x4000211	              0xc3	                                     ret	      1252	cache.h	FUNCTION_23
write_cache_as_tree	CALL,2:IF,0:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	19
0x4001b53	              0x55	                                push rbp	       655	cache-tree.c	FUNCTION_47
0x4001b54	          0x4889e5	                            mov rbp, rsp	       655	cache-tree.c	FUNCTION_47
0x4001b57	        0x4883ec20	                           sub rsp, 0x20	       655	cache-tree.c	FUNCTION_47
0x4001b5b	        0x48897df8	                mov qword [rbp - 8], rdi	       655	cache-tree.c	FUNCTION_47
0x4001b5f	          0x8975f4	              mov dword [rbp - 0xc], esi	       655	cache-tree.c	FUNCTION_47
0x4001b62	        0x488955e8	             mov qword [rbp - 0x18], rdx	       655	cache-tree.c	FUNCTION_47
0x4001b66	      0xe800000000	                          call 0x4001b6b	       656	cache-tree.c	FUNCTION_47	CALL_2
0x4001b6b	          0x4889c6	                            mov rsi, rax	       656	cache-tree.c	FUNCTION_47	CALL_2
0x4001b6e	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       656	cache-tree.c	FUNCTION_47	CALL_2
0x4001b72	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       656	cache-tree.c	FUNCTION_47	CALL_2
0x4001b75	        0x488b45f8	                mov rax, qword [rbp - 8]	       656	cache-tree.c	FUNCTION_47	CALL_2
0x4001b79	          0x4989c8	                             mov r8, rcx	       656	cache-tree.c	FUNCTION_47	CALL_2
0x4001b7c	            0x89d1	                            mov ecx, edx	       656	cache-tree.c	FUNCTION_47	CALL_2
0x4001b7e	          0x4889f2	                            mov rdx, rsi	       656	cache-tree.c	FUNCTION_47	CALL_2
0x4001b81	      0xbe00000000	                              mov esi, 0	       656	cache-tree.c	FUNCTION_47	CALL_2
0x4001b86	          0x4889c7	                            mov rdi, rax	       656	cache-tree.c	FUNCTION_47	CALL_2
0x4001b89	      0xe800000000	                          call 0x4001b8e	       656	cache-tree.c	FUNCTION_47	CALL_2
0x4001b8e	              0xc9	                                   leave	       657	cache-tree.c	FUNCTION_47
0x4001b8f	              0xc3	                                     ret	       657	cache-tree.c	FUNCTION_47
read_one	CALL,12:IF,9:DO,0:WHILE,2:ELSE,1:functions,0:SWITCH,0:FOR,1	196
0x400162a	              0x55	                                push rbp	       488	cache-tree.c	FUNCTION_43
0x400162b	          0x4889e5	                            mov rbp, rsp	       488	cache-tree.c	FUNCTION_43
0x400162e	              0x53	                                push rbx	       488	cache-tree.c	FUNCTION_43
0x400162f	        0x4883ec78	                           sub rsp, 0x78	       488	cache-tree.c	FUNCTION_43
0x4001633	        0x48897d88	             mov qword [rbp - 0x78], rdi	       488	cache-tree.c	FUNCTION_43
0x4001637	        0x48897580	             mov qword [rbp - 0x80], rsi	       488	cache-tree.c	FUNCTION_43
0x400163b	    0x64488b042528	                mov rax, qword fs:[0x28]	       488	cache-tree.c	FUNCTION_43
0x4001644	        0x488945e8	             mov qword [rbp - 0x18], rax	       488	cache-tree.c	FUNCTION_43
0x4001648	            0x31c0	                            xor eax, eax	       488	cache-tree.c	FUNCTION_43
0x400164a	        0x488b4588	             mov rax, qword [rbp - 0x78]	       489	cache-tree.c	FUNCTION_43
0x400164e	          0x488b00	                    mov rax, qword [rax]	       489	cache-tree.c	FUNCTION_43
0x4001651	        0x488945a8	             mov qword [rbp - 0x58], rax	       489	cache-tree.c	FUNCTION_43
0x4001655	        0x488b4580	             mov rax, qword [rbp - 0x80]	       490	cache-tree.c	FUNCTION_43
0x4001659	          0x488b00	                    mov rax, qword [rax]	       490	cache-tree.c	FUNCTION_43
0x400165c	        0x488945b0	             mov qword [rbp - 0x50], rax	       490	cache-tree.c	FUNCTION_43
0x4001660	    0x488b05000000	            mov rax, qword [0x04001667] 	       495	cache-tree.c	FUNCTION_43
0x4001667	        0x488b4058	            mov rax, qword [rax + 0x58] 	       495	cache-tree.c	FUNCTION_43
0x400166b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       495	cache-tree.c	FUNCTION_43
0x400166f	          0x8945a0	             mov dword [rbp - 0x60], eax	       495	cache-tree.c	FUNCTION_43
0x4001672	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       497	cache-tree.c	FUNCTION_43
0x400167a	            0xeb18	                           jmp 0x4001694	       499	cache-tree.c	FUNCTION_43	WHILE_1
0x400167c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       500	cache-tree.c	FUNCTION_43	WHILE_1
0x4001680	        0x4883e801	                              sub rax, 1	       500	cache-tree.c	FUNCTION_43	WHILE_1
0x4001684	        0x488945b0	             mov qword [rbp - 0x50], rax	       500	cache-tree.c	FUNCTION_43	WHILE_1
0x4001688	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       501	cache-tree.c	FUNCTION_43	WHILE_1
0x400168c	        0x4883c001	                              add rax, 1	       501	cache-tree.c	FUNCTION_43	WHILE_1
0x4001690	        0x488945a8	             mov qword [rbp - 0x58], rax	       501	cache-tree.c	FUNCTION_43	WHILE_1
0x4001694	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       499	cache-tree.c	FUNCTION_43	WHILE_1
0x4001698	          0x4885c0	                           test rax, rax	       499	cache-tree.c	FUNCTION_43	WHILE_1
0x400169b	            0x740b	                            je 0x40016a8	       499	cache-tree.c	FUNCTION_43	WHILE_1
0x400169d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       499	cache-tree.c	FUNCTION_43	WHILE_1
0x40016a1	           0xfb600	                   movzx eax, byte [rax]	       499	cache-tree.c	FUNCTION_43	WHILE_1
0x40016a4	            0x84c0	                             test al, al	       499	cache-tree.c	FUNCTION_43	WHILE_1
0x40016a6	            0x75d4	                           jne 0x400167c	       499	cache-tree.c	FUNCTION_43	WHILE_1
0x40016a8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       503	cache-tree.c	FUNCTION_43	IF_1
0x40016ac	          0x4885c0	                           test rax, rax	       503	cache-tree.c	FUNCTION_43	IF_1
0x40016af	     0xf84f6010000	                            je 0x40018ab	       503	cache-tree.c	FUNCTION_43	IF_1
0x40016b5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       505	cache-tree.c	FUNCTION_43
0x40016b9	        0x4883c001	                              add rax, 1	       505	cache-tree.c	FUNCTION_43
0x40016bd	        0x488945a8	             mov qword [rbp - 0x58], rax	       505	cache-tree.c	FUNCTION_43
0x40016c1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       505	cache-tree.c	FUNCTION_43
0x40016c5	        0x4883e801	                              sub rax, 1	       505	cache-tree.c	FUNCTION_43
0x40016c9	        0x488945b0	             mov qword [rbp - 0x50], rax	       505	cache-tree.c	FUNCTION_43
0x40016cd	      0xe800000000	                          call 0x40016d2	       506	cache-tree.c	FUNCTION_43	CALL_1
0x40016d2	        0x488945c0	             mov qword [rbp - 0x40], rax	       506	cache-tree.c	FUNCTION_43	CALL_1
0x40016d6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       508	cache-tree.c	FUNCTION_43
0x40016da	        0x488945c8	             mov qword [rbp - 0x38], rax	       508	cache-tree.c	FUNCTION_43
0x40016de	        0x488b5dc0	             mov rbx, qword [rbp - 0x40]	       509	cache-tree.c	FUNCTION_43	CALL_2
0x40016e2	        0x488d4db8	                   lea rcx, [rbp - 0x48]	       509	cache-tree.c	FUNCTION_43	CALL_2
0x40016e6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       509	cache-tree.c	FUNCTION_43	CALL_2
0x40016ea	      0xba0a000000	                            mov edx, 0xa	       509	cache-tree.c	FUNCTION_43	CALL_2
0x40016ef	          0x4889ce	                            mov rsi, rcx	       509	cache-tree.c	FUNCTION_43	CALL_2
0x40016f2	          0x4889c7	                            mov rdi, rax	       509	cache-tree.c	FUNCTION_43	CALL_2
0x40016f5	      0xe800000000	                          call 0x40016fa	       509	cache-tree.c	FUNCTION_43	CALL_2
0x40016fa	            0x8903	                    mov dword [rbx], eax	       509	cache-tree.c	FUNCTION_43	CALL_2
0x40016fc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       510	cache-tree.c	FUNCTION_43	IF_2
0x4001700	        0x483945c8	            cmp qword [rbp - 0x38], rax 	       510	cache-tree.c	FUNCTION_43	IF_2
0x4001704	     0xf84a4010000	                            je 0x40018ae	       510	cache-tree.c	FUNCTION_43	IF_2
0x400170a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       512	cache-tree.c	FUNCTION_43
0x400170e	        0x488945c8	             mov qword [rbp - 0x38], rax	       512	cache-tree.c	FUNCTION_43
0x4001712	        0x488d4db8	                   lea rcx, [rbp - 0x48]	       513	cache-tree.c	FUNCTION_43	CALL_3
0x4001716	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       513	cache-tree.c	FUNCTION_43	CALL_3
0x400171a	      0xba0a000000	                            mov edx, 0xa	       513	cache-tree.c	FUNCTION_43	CALL_3
0x400171f	          0x4889ce	                            mov rsi, rcx	       513	cache-tree.c	FUNCTION_43	CALL_3
0x4001722	          0x4889c7	                            mov rdi, rax	       513	cache-tree.c	FUNCTION_43	CALL_3
0x4001725	      0xe800000000	                          call 0x400172a	       513	cache-tree.c	FUNCTION_43	CALL_3
0x400172a	          0x8945a4	             mov dword [rbp - 0x5c], eax	       513	cache-tree.c	FUNCTION_43	CALL_3
0x400172d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       514	cache-tree.c	FUNCTION_43	IF_3
0x4001731	        0x483945c8	            cmp qword [rbp - 0x38], rax 	       514	cache-tree.c	FUNCTION_43	IF_3
0x4001735	     0xf8476010000	                            je 0x40018b1	       514	cache-tree.c	FUNCTION_43	IF_3
0x400173b	            0xeb18	                           jmp 0x4001755	       516	cache-tree.c	FUNCTION_43	WHILE_2
0x400173d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       517	cache-tree.c	FUNCTION_43	WHILE_2
0x4001741	        0x4883e801	                              sub rax, 1	       517	cache-tree.c	FUNCTION_43	WHILE_2
0x4001745	        0x488945b0	             mov qword [rbp - 0x50], rax	       517	cache-tree.c	FUNCTION_43	WHILE_2
0x4001749	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       518	cache-tree.c	FUNCTION_43	WHILE_2
0x400174d	        0x4883c001	                              add rax, 1	       518	cache-tree.c	FUNCTION_43	WHILE_2
0x4001751	        0x488945a8	             mov qword [rbp - 0x58], rax	       518	cache-tree.c	FUNCTION_43	WHILE_2
0x4001755	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       516	cache-tree.c	FUNCTION_43	WHILE_2
0x4001759	          0x4885c0	                           test rax, rax	       516	cache-tree.c	FUNCTION_43	WHILE_2
0x400175c	            0x7416	                            je 0x4001774	       516	cache-tree.c	FUNCTION_43	WHILE_2
0x400175e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       516	cache-tree.c	FUNCTION_43	WHILE_2
0x4001762	           0xfb600	                   movzx eax, byte [rax]	       516	cache-tree.c	FUNCTION_43	WHILE_2
0x4001765	            0x84c0	                             test al, al	       516	cache-tree.c	FUNCTION_43	WHILE_2
0x4001767	            0x740b	                            je 0x4001774	       516	cache-tree.c	FUNCTION_43	WHILE_2
0x4001769	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       516	cache-tree.c	FUNCTION_43	WHILE_2
0x400176d	           0xfb600	                   movzx eax, byte [rax]	       516	cache-tree.c	FUNCTION_43	WHILE_2
0x4001770	            0x3c0a	                             cmp al, 0xa	       516	cache-tree.c	FUNCTION_43	WHILE_2
0x4001772	            0x75c9	                           jne 0x400173d	       516	cache-tree.c	FUNCTION_43	WHILE_2
0x4001774	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       520	cache-tree.c	FUNCTION_43	IF_4
0x4001778	          0x4885c0	                           test rax, rax	       520	cache-tree.c	FUNCTION_43	IF_4
0x400177b	     0xf8433010000	                            je 0x40018b4	       520	cache-tree.c	FUNCTION_43	IF_4
0x4001781	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       522	cache-tree.c	FUNCTION_43
0x4001785	        0x4883c001	                              add rax, 1	       522	cache-tree.c	FUNCTION_43
0x4001789	        0x488945a8	             mov qword [rbp - 0x58], rax	       522	cache-tree.c	FUNCTION_43
0x400178d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       522	cache-tree.c	FUNCTION_43
0x4001791	        0x4883e801	                              sub rax, 1	       522	cache-tree.c	FUNCTION_43
0x4001795	        0x488945b0	             mov qword [rbp - 0x50], rax	       522	cache-tree.c	FUNCTION_43
0x4001799	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       523	cache-tree.c	FUNCTION_43	IF_5
0x400179d	            0x8b00	                    mov eax, dword [rax]	       523	cache-tree.c	FUNCTION_43	IF_5
0x400179f	            0x85c0	                           test eax, eax	       523	cache-tree.c	FUNCTION_43	IF_5
0x40017a1	            0x7849	                            js 0x40017ec	       523	cache-tree.c	FUNCTION_43	IF_5
0x40017a3	          0x8b55a0	             mov edx, dword [rbp - 0x60]	       524	cache-tree.c	FUNCTION_43	IF_5	IF_6
0x40017a6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       524	cache-tree.c	FUNCTION_43	IF_5	IF_6
0x40017aa	          0x4839c2	                            cmp rdx, rax	       524	cache-tree.c	FUNCTION_43	IF_5	IF_6
0x40017ad	     0xf8704010000	                            ja 0x40018b7	       524	cache-tree.c	FUNCTION_43	IF_5	IF_6
0x40017b3	          0x8b55a0	             mov edx, dword [rbp - 0x60]	       526	cache-tree.c	FUNCTION_43	IF_5	CALL_4
0x40017b6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       526	cache-tree.c	FUNCTION_43	IF_5	CALL_4
0x40017ba	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       526	cache-tree.c	FUNCTION_43	IF_5	CALL_4
0x40017be	        0x4883c104	                              add rcx, 4	       526	cache-tree.c	FUNCTION_43	IF_5	CALL_4
0x40017c2	          0x4889c6	                            mov rsi, rax	       526	cache-tree.c	FUNCTION_43	IF_5	CALL_4
0x40017c5	          0x4889cf	                            mov rdi, rcx	       526	cache-tree.c	FUNCTION_43	IF_5	CALL_4
0x40017c8	      0xe800000000	                          call 0x40017cd	       526	cache-tree.c	FUNCTION_43	IF_5	CALL_4
0x40017cd	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       527	cache-tree.c	FUNCTION_43	IF_5
0x40017d1	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       527	cache-tree.c	FUNCTION_43	IF_5
0x40017d4	          0x4801d0	                            add rax, rdx	       527	cache-tree.c	FUNCTION_43	IF_5
0x40017d7	        0x488945a8	             mov qword [rbp - 0x58], rax	       527	cache-tree.c	FUNCTION_43	IF_5
0x40017db	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       528	cache-tree.c	FUNCTION_43	IF_5
0x40017df	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       528	cache-tree.c	FUNCTION_43	IF_5
0x40017e2	          0x4829c2	                            sub rdx, rax	       528	cache-tree.c	FUNCTION_43	IF_5
0x40017e5	          0x4889d0	                            mov rax, rdx	       528	cache-tree.c	FUNCTION_43	IF_5
0x40017e8	        0x488945b0	             mov qword [rbp - 0x50], rax	       528	cache-tree.c	FUNCTION_43	IF_5
0x40017ec	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       546	cache-tree.c	FUNCTION_43
0x40017f0	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       546	cache-tree.c	FUNCTION_43
0x40017f3	          0x83c202	                              add edx, 2	       546	cache-tree.c	FUNCTION_43
0x40017f6	          0x89501c	             mov dword [rax + 0x1c], edx	       546	cache-tree.c	FUNCTION_43
0x40017f9	        0x488b5dc0	             mov rbx, qword [rbp - 0x40]	       547	cache-tree.c	FUNCTION_43	CALL_8
0x40017fd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       547	cache-tree.c	FUNCTION_43	CALL_8
0x4001801	          0x8b401c	            mov eax, dword [rax + 0x1c] 	       547	cache-tree.c	FUNCTION_43	CALL_8
0x4001804	            0x4898	                                    cdqe	       547	cache-tree.c	FUNCTION_43	CALL_8
0x4001806	      0xbe08000000	                              mov esi, 8	       547	cache-tree.c	FUNCTION_43	CALL_8
0x400180b	          0x4889c7	                            mov rdi, rax	       547	cache-tree.c	FUNCTION_43	CALL_8
0x400180e	      0xe800000000	                          call 0x4001813	       547	cache-tree.c	FUNCTION_43	CALL_8
0x4001813	        0x48894320	             mov qword [rbx + 0x20], rax	       547	cache-tree.c	FUNCTION_43	CALL_8
0x4001817	    0xc7459c000000	               mov dword [rbp - 0x64], 0	       548	cache-tree.c	FUNCTION_43	FOR_1
0x400181e	            0xeb4c	                           jmp 0x400186c	       548	cache-tree.c	FUNCTION_43	FOR_1
0x4001820	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       552	cache-tree.c	FUNCTION_43	FOR_1
0x4001824	        0x488945d0	             mov qword [rbp - 0x30], rax	       552	cache-tree.c	FUNCTION_43	FOR_1
0x4001828	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       554	cache-tree.c	FUNCTION_43	FOR_1	CALL_9
0x400182c	        0x488d45a8	                   lea rax, [rbp - 0x58]	       554	cache-tree.c	FUNCTION_43	FOR_1	CALL_9
0x4001830	          0x4889d6	                            mov rsi, rdx	       554	cache-tree.c	FUNCTION_43	FOR_1	CALL_9
0x4001833	          0x4889c7	                            mov rdi, rax	       554	cache-tree.c	FUNCTION_43	FOR_1	CALL_9
0x4001836	      0xe8effdffff	                       call sym.read_one	       554	cache-tree.c	FUNCTION_43	FOR_1	CALL_9
0x400183b	        0x488945d8	             mov qword [rbp - 0x28], rax	       554	cache-tree.c	FUNCTION_43	FOR_1	CALL_9
0x400183f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       555	cache-tree.c	FUNCTION_43	FOR_1	IF_8
0x4001844	            0x7474	                            je 0x40018ba	       555	cache-tree.c	FUNCTION_43	FOR_1	IF_8
0x4001846	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       557	cache-tree.c	FUNCTION_43	FOR_1	CALL_10
0x400184a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       557	cache-tree.c	FUNCTION_43	FOR_1	CALL_10
0x400184e	          0x4889d6	                            mov rsi, rdx	       557	cache-tree.c	FUNCTION_43	FOR_1	CALL_10
0x4001851	          0x4889c7	                            mov rdi, rax	       557	cache-tree.c	FUNCTION_43	FOR_1	CALL_10
0x4001854	      0xe800000000	                          call 0x4001859	       557	cache-tree.c	FUNCTION_43	FOR_1	CALL_10
0x4001859	        0x488945e0	             mov qword [rbp - 0x20], rax	       557	cache-tree.c	FUNCTION_43	FOR_1	CALL_10
0x400185d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       558	cache-tree.c	FUNCTION_43	FOR_1
0x4001861	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       558	cache-tree.c	FUNCTION_43	FOR_1
0x4001865	          0x488910	                    mov qword [rax], rdx	       558	cache-tree.c	FUNCTION_43	FOR_1
0x4001868	        0x83459c01	               add dword [rbp - 0x64], 1	       548	cache-tree.c	FUNCTION_43	FOR_1
0x400186c	          0x8b459c	             mov eax, dword [rbp - 0x64]	       548	cache-tree.c	FUNCTION_43	FOR_1
0x400186f	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	       548	cache-tree.c	FUNCTION_43	FOR_1
0x4001872	            0x7cac	                            jl 0x4001820	       548	cache-tree.c	FUNCTION_43	FOR_1
0x4001874	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       560	cache-tree.c	FUNCTION_43	IF_9
0x4001878	          0x8b4018	            mov eax, dword [rax + 0x18] 	       560	cache-tree.c	FUNCTION_43	IF_9
0x400187b	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	       560	cache-tree.c	FUNCTION_43	IF_9
0x400187e	            0x740f	                            je 0x400188f	       560	cache-tree.c	FUNCTION_43	IF_9
0x4001880	      0xbf00000000	                              mov edi, 0	       561	cache-tree.c	FUNCTION_43	CALL_11
0x4001885	      0xb800000000	                              mov eax, 0	       561	cache-tree.c	FUNCTION_43	CALL_11
0x400188a	      0xe800000000	                          call 0x400188f	       561	cache-tree.c	FUNCTION_43	CALL_11
0x400188f	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       562	cache-tree.c	FUNCTION_43
0x4001893	        0x488b4588	             mov rax, qword [rbp - 0x78]	       562	cache-tree.c	FUNCTION_43
0x4001897	          0x488910	                    mov qword [rax], rdx	       562	cache-tree.c	FUNCTION_43
0x400189a	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       563	cache-tree.c	FUNCTION_43
0x400189e	        0x488b4580	             mov rax, qword [rbp - 0x80]	       563	cache-tree.c	FUNCTION_43
0x40018a2	          0x488910	                    mov qword [rax], rdx	       563	cache-tree.c	FUNCTION_43
0x40018a5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       564	cache-tree.c	FUNCTION_43
0x40018a9	            0xeb21	                           jmp 0x40018cc	       564	cache-tree.c	FUNCTION_43
0x40018ab	              0x90	                                     nop	       504	cache-tree.c	FUNCTION_43	IF_1
0x40018ac	            0xeb0d	                           jmp 0x40018bb	       504	cache-tree.c	FUNCTION_43	IF_1
0x40018ae	              0x90	                                     nop	       511	cache-tree.c	FUNCTION_43	IF_2
0x40018af	            0xeb0a	                           jmp 0x40018bb	       511	cache-tree.c	FUNCTION_43	IF_2
0x40018b1	              0x90	                                     nop	       515	cache-tree.c	FUNCTION_43	IF_3
0x40018b2	            0xeb07	                           jmp 0x40018bb	       515	cache-tree.c	FUNCTION_43	IF_3
0x40018b4	              0x90	                                     nop	       521	cache-tree.c	FUNCTION_43	IF_4
0x40018b5	            0xeb04	                           jmp 0x40018bb	       521	cache-tree.c	FUNCTION_43	IF_4
0x40018b7	              0x90	                                     nop	       525	cache-tree.c	FUNCTION_43	IF_5	IF_6
0x40018b8	            0xeb01	                           jmp 0x40018bb	       525	cache-tree.c	FUNCTION_43	IF_5	IF_6
0x40018ba	              0x90	                                     nop	       556	cache-tree.c	FUNCTION_43	FOR_1	IF_8
0x40018bb	        0x488d45c0	                   lea rax, [rbp - 0x40]	       567	cache-tree.c	FUNCTION_43	CALL_12
0x40018bf	          0x4889c7	                            mov rdi, rax	       567	cache-tree.c	FUNCTION_43	CALL_12
0x40018c2	      0xe800000000	                          call 0x40018c7	       567	cache-tree.c	FUNCTION_43	CALL_12
0x40018c7	      0xb800000000	                              mov eax, 0	       568	cache-tree.c	FUNCTION_43
0x40018cc	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       569	cache-tree.c	FUNCTION_43
0x40018d0	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       569	cache-tree.c	FUNCTION_43
0x40018d9	            0x7405	                            je 0x40018e0	       569	cache-tree.c	FUNCTION_43
0x40018db	      0xe800000000	                          call 0x40018e0	       569	cache-tree.c	FUNCTION_43
0x40018e0	        0x4883c478	                           add rsp, 0x78	       569	cache-tree.c	FUNCTION_43
0x40018e4	              0x5b	                                 pop rbx	       569	cache-tree.c	FUNCTION_43
0x40018e5	              0x5d	                                 pop rbp	       569	cache-tree.c	FUNCTION_43
0x40018e6	              0xc3	                                     ret	       569	cache-tree.c	FUNCTION_43
rollback_lock_file	CALL,1:IF,0:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	10
0x400023f	              0x55	                                push rbp	       303	lockfile.h	FUNCTION_89
0x4000240	          0x4889e5	                            mov rbp, rsp	       303	lockfile.h	FUNCTION_89
0x4000243	        0x4883ec10	                           sub rsp, 0x10	       303	lockfile.h	FUNCTION_89
0x4000247	        0x48897df8	                mov qword [rbp - 8], rdi	       303	lockfile.h	FUNCTION_89
0x400024b	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	lockfile.h	FUNCTION_89	CALL_1
0x400024f	          0x4889c7	                            mov rdi, rax	       304	lockfile.h	FUNCTION_89	CALL_1
0x4000252	      0xe800000000	                          call 0x4000257	       304	lockfile.h	FUNCTION_89	CALL_1
0x4000257	              0x90	                                     nop	       305	lockfile.h	FUNCTION_89
0x4000258	              0xc9	                                   leave	       305	lockfile.h	FUNCTION_89
0x4000259	              0xc3	                                     ret	       305	lockfile.h	FUNCTION_89
update_one	CALL,32:IF,19:DO,0:WHILE,2:ELSE,4:functions,0:SWITCH,0:FOR,1	450
0x4000bb0	              0x55	                                push rbp	       242	cache-tree.c	FUNCTION_39
0x4000bb1	          0x4889e5	                            mov rbp, rsp	       242	cache-tree.c	FUNCTION_39
0x4000bb4	              0x53	                                push rbx	       242	cache-tree.c	FUNCTION_39
0x4000bb5	    0x4881ecf80000	                           sub rsp, 0xf8	       242	cache-tree.c	FUNCTION_39
0x4000bbc	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       242	cache-tree.c	FUNCTION_39
0x4000bc3	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       242	cache-tree.c	FUNCTION_39
0x4000bca	    0x89951cffffff	             mov dword [rbp - 0xe4], edx	       242	cache-tree.c	FUNCTION_39
0x4000bd0	    0x48898d10ffff	             mov qword [rbp - 0xf0], rcx	       242	cache-tree.c	FUNCTION_39
0x4000bd7	    0x44898518ffff	             mov dword [rbp - 0xe8], r8d	       242	cache-tree.c	FUNCTION_39
0x4000bde	    0x4c898d08ffff	              mov qword [rbp - 0xf8], r9	       242	cache-tree.c	FUNCTION_39
0x4000be5	    0x64488b042528	                mov rax, qword fs:[0x28]	       242	cache-tree.c	FUNCTION_39
0x4000bee	        0x488945e8	             mov qword [rbp - 0x18], rax	       242	cache-tree.c	FUNCTION_39
0x4000bf2	            0x31c0	                            xor eax, eax	       242	cache-tree.c	FUNCTION_39
0x4000bf4	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       244	cache-tree.c	FUNCTION_39
0x4000bf7	          0x83e001	                              and eax, 1	       244	cache-tree.c	FUNCTION_39
0x4000bfa	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       244	cache-tree.c	FUNCTION_39
0x4000c00	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       245	cache-tree.c	FUNCTION_39
0x4000c03	          0x83e004	                              and eax, 4	       245	cache-tree.c	FUNCTION_39
0x4000c06	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	       245	cache-tree.c	FUNCTION_39
0x4000c0c	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       246	cache-tree.c	FUNCTION_39
0x4000c0f	          0x83e010	                           and eax, 0x10	       246	cache-tree.c	FUNCTION_39
0x4000c12	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       246	cache-tree.c	FUNCTION_39
0x4000c18	    0xc78534ffffff	               mov dword [rbp - 0xcc], 0	       247	cache-tree.c	FUNCTION_39
0x4000c22	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	       250	cache-tree.c	FUNCTION_39	CALL_1
0x4000c29	            0x7422	                            je 0x4000c4d	       250	cache-tree.c	FUNCTION_39	CALL_1
0x4000c2b	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	       250	cache-tree.c	FUNCTION_39	CALL_1
0x4000c32	            0x7419	                            je 0x4000c4d	       250	cache-tree.c	FUNCTION_39	CALL_1
0x4000c34	      0xb900000000	                              mov ecx, 0	       250	cache-tree.c	FUNCTION_39	CALL_1
0x4000c39	      0xbafa000000	                           mov edx, 0xfa	       250	cache-tree.c	FUNCTION_39	CALL_1
0x4000c3e	      0xbe00000000	                              mov esi, 0	       250	cache-tree.c	FUNCTION_39	CALL_1
0x4000c43	      0xbf00000000	                              mov edi, 0	       250	cache-tree.c	FUNCTION_39	CALL_1
0x4000c48	      0xe800000000	                          call 0x4000c4d	       250	cache-tree.c	FUNCTION_39	CALL_1
0x4000c4d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       252	cache-tree.c	FUNCTION_39
0x4000c54	    0xc70000000000	                      mov dword [rax], 0	       252	cache-tree.c	FUNCTION_39
0x4000c5a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       254	cache-tree.c	FUNCTION_39	IF_1	CALL_2
0x4000c61	            0x8b00	                    mov eax, dword [rax]	       254	cache-tree.c	FUNCTION_39	IF_1	CALL_2
0x4000c63	            0x85c0	                           test eax, eax	       254	cache-tree.c	FUNCTION_39	IF_1	CALL_2
0x4000c65	            0x7825	                            js 0x4000c8c	       254	cache-tree.c	FUNCTION_39	IF_1	CALL_2
0x4000c67	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       254	cache-tree.c	FUNCTION_39	IF_1	CALL_2
0x4000c6e	        0x4883c004	                              add rax, 4	       254	cache-tree.c	FUNCTION_39	IF_1	CALL_2
0x4000c72	          0x4889c7	                            mov rdi, rax	       254	cache-tree.c	FUNCTION_39	IF_1	CALL_2
0x4000c75	      0xe879f5ffff	                  call sym.has_sha1_file	       254	cache-tree.c	FUNCTION_39	IF_1	CALL_2
0x4000c7a	            0x85c0	                           test eax, eax	       254	cache-tree.c	FUNCTION_39	IF_1	CALL_2
0x4000c7c	            0x740e	                            je 0x4000c8c	       254	cache-tree.c	FUNCTION_39	IF_1	CALL_2
0x4000c7e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       255	cache-tree.c	FUNCTION_39	IF_1
0x4000c85	            0x8b00	                    mov eax, dword [rax]	       255	cache-tree.c	FUNCTION_39	IF_1
0x4000c87	      0xe91b070000	                           jmp 0x40013a7	       255	cache-tree.c	FUNCTION_39	IF_1
0x4000c8c	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	       262	cache-tree.c	FUNCTION_39	FOR_1
0x4000c96	            0xeb2c	                           jmp 0x4000cc4	       262	cache-tree.c	FUNCTION_39	FOR_1
0x4000c98	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       263	cache-tree.c	FUNCTION_39	FOR_1
0x4000c9f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       263	cache-tree.c	FUNCTION_39	FOR_1
0x4000ca3	    0x8b9538ffffff	             mov edx, dword [rbp - 0xc8]	       263	cache-tree.c	FUNCTION_39	FOR_1
0x4000ca9	          0x4863d2	                         movsxd rdx, edx	       263	cache-tree.c	FUNCTION_39	FOR_1
0x4000cac	        0x48c1e203	                              shl rdx, 3	       263	cache-tree.c	FUNCTION_39	FOR_1
0x4000cb0	          0x4801d0	                            add rax, rdx	       263	cache-tree.c	FUNCTION_39	FOR_1
0x4000cb3	          0x488b00	                    mov rax, qword [rax]	       263	cache-tree.c	FUNCTION_39	FOR_1
0x4000cb6	    0xc74010000000	               mov dword [rax + 0x10], 0	       263	cache-tree.c	FUNCTION_39	FOR_1
0x4000cbd	    0x838538ffffff	               add dword [rbp - 0xc8], 1	       262	cache-tree.c	FUNCTION_39	FOR_1
0x4000cc4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       262	cache-tree.c	FUNCTION_39	FOR_1
0x4000ccb	          0x8b4018	            mov eax, dword [rax + 0x18] 	       262	cache-tree.c	FUNCTION_39	FOR_1
0x4000cce	    0x3b8538ffffff	             cmp eax, dword [rbp - 0xc8]	       262	cache-tree.c	FUNCTION_39	FOR_1
0x4000cd4	            0x7fc2	                            jg 0x4000c98	       262	cache-tree.c	FUNCTION_39	FOR_1
0x4000cd6	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	       268	cache-tree.c	FUNCTION_39
0x4000ce0	      0xe9eb010000	                           jmp 0x4000ed0	       269	cache-tree.c	FUNCTION_39	WHILE_1
0x4000ce5	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       270	cache-tree.c	FUNCTION_39	WHILE_1
0x4000ceb	            0x4898	                                    cdqe	       270	cache-tree.c	FUNCTION_39	WHILE_1
0x4000ced	    0x488d14c50000	                        lea rdx, [rax*8]	       270	cache-tree.c	FUNCTION_39	WHILE_1
0x4000cf5	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       270	cache-tree.c	FUNCTION_39	WHILE_1
0x4000cfc	          0x4801d0	                            add rax, rdx	       270	cache-tree.c	FUNCTION_39	WHILE_1
0x4000cff	          0x488b00	                    mov rax, qword [rax]	       270	cache-tree.c	FUNCTION_39	WHILE_1
0x4000d02	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       270	cache-tree.c	FUNCTION_39	WHILE_1
0x4000d09	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       275	cache-tree.c	FUNCTION_39	WHILE_1
0x4000d10	        0x4883c058	                           add rax, 0x58	       275	cache-tree.c	FUNCTION_39	WHILE_1
0x4000d14	        0x48894580	             mov qword [rbp - 0x80], rax	       275	cache-tree.c	FUNCTION_39	WHILE_1
0x4000d18	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       276	cache-tree.c	FUNCTION_39	WHILE_1
0x4000d1f	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       276	cache-tree.c	FUNCTION_39	WHILE_1
0x4000d22	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	       276	cache-tree.c	FUNCTION_39	WHILE_1
0x4000d28	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       277	cache-tree.c	FUNCTION_39	WHILE_1	IF_2	CALL_3
0x4000d2e	    0x3b8518ffffff	             cmp eax, dword [rbp - 0xe8]	       277	cache-tree.c	FUNCTION_39	WHILE_1	IF_2	CALL_3
0x4000d34	     0xf8ea8010000	                           jle 0x4000ee2	       277	cache-tree.c	FUNCTION_39	WHILE_1	IF_2	CALL_3
0x4000d3a	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	       277	cache-tree.c	FUNCTION_39	WHILE_1	IF_2	CALL_3
0x4000d40	          0x4863d0	                         movsxd rdx, eax	       277	cache-tree.c	FUNCTION_39	WHILE_1	IF_2	CALL_3
0x4000d43	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	       277	cache-tree.c	FUNCTION_39	WHILE_1	IF_2	CALL_3
0x4000d47	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       277	cache-tree.c	FUNCTION_39	WHILE_1	IF_2	CALL_3
0x4000d4e	          0x4889ce	                            mov rsi, rcx	       277	cache-tree.c	FUNCTION_39	WHILE_1	IF_2	CALL_3
0x4000d51	          0x4889c7	                            mov rdi, rax	       277	cache-tree.c	FUNCTION_39	WHILE_1	IF_2	CALL_3
0x4000d54	      0xe800000000	                          call 0x4000d59	       277	cache-tree.c	FUNCTION_39	WHILE_1	IF_2	CALL_3
0x4000d59	            0x85c0	                           test eax, eax	       277	cache-tree.c	FUNCTION_39	WHILE_1	IF_2	CALL_3
0x4000d5b	     0xf8581010000	                           jne 0x4000ee2	       277	cache-tree.c	FUNCTION_39	WHILE_1	IF_2	CALL_3
0x4000d61	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	       280	cache-tree.c	FUNCTION_39	WHILE_1	CALL_4
0x4000d67	          0x4863d0	                         movsxd rdx, eax	       280	cache-tree.c	FUNCTION_39	WHILE_1	CALL_4
0x4000d6a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       280	cache-tree.c	FUNCTION_39	WHILE_1	CALL_4
0x4000d6e	          0x4801d0	                            add rax, rdx	       280	cache-tree.c	FUNCTION_39	WHILE_1	CALL_4
0x4000d71	      0xbe2f000000	                           mov esi, 0x2f	       280	cache-tree.c	FUNCTION_39	WHILE_1	CALL_4
0x4000d76	          0x4889c7	                            mov rdi, rax	       280	cache-tree.c	FUNCTION_39	WHILE_1	CALL_4
0x4000d79	      0xe800000000	                          call 0x4000d7e	       280	cache-tree.c	FUNCTION_39	WHILE_1	CALL_4
0x4000d7e	        0x48894588	             mov qword [rbp - 0x78], rax	       280	cache-tree.c	FUNCTION_39	WHILE_1	CALL_4
0x4000d82	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       281	cache-tree.c	FUNCTION_39	WHILE_1	IF_3
0x4000d87	            0x750c	                           jne 0x4000d95	       281	cache-tree.c	FUNCTION_39	WHILE_1	IF_3
0x4000d89	    0x838538ffffff	               add dword [rbp - 0xc8], 1	       282	cache-tree.c	FUNCTION_39	WHILE_1	IF_3
0x4000d90	      0xe93b010000	                           jmp 0x4000ed0	       282	cache-tree.c	FUNCTION_39	WHILE_1	IF_3
0x4000d95	        0x488b4588	             mov rax, qword [rbp - 0x78]	       290	cache-tree.c	FUNCTION_39	WHILE_1
0x4000d99	    0x8b9518ffffff	             mov edx, dword [rbp - 0xe8]	       290	cache-tree.c	FUNCTION_39	WHILE_1
0x4000d9f	          0x4863ca	                         movsxd rcx, edx	       290	cache-tree.c	FUNCTION_39	WHILE_1
0x4000da2	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       290	cache-tree.c	FUNCTION_39	WHILE_1
0x4000da6	          0x4801ca	                            add rdx, rcx	       290	cache-tree.c	FUNCTION_39	WHILE_1
0x4000da9	          0x4829d0	                            sub rax, rdx	       290	cache-tree.c	FUNCTION_39	WHILE_1
0x4000dac	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	       290	cache-tree.c	FUNCTION_39	WHILE_1
0x4000db2	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	       291	cache-tree.c	FUNCTION_39	WHILE_1	CALL_5
0x4000db8	          0x4863d0	                         movsxd rdx, eax	       291	cache-tree.c	FUNCTION_39	WHILE_1	CALL_5
0x4000dbb	        0x488b4580	             mov rax, qword [rbp - 0x80]	       291	cache-tree.c	FUNCTION_39	WHILE_1	CALL_5
0x4000dbf	        0x488d3402	                    lea rsi, [rdx + rax]	       291	cache-tree.c	FUNCTION_39	WHILE_1	CALL_5
0x4000dc3	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	       291	cache-tree.c	FUNCTION_39	WHILE_1	CALL_5
0x4000dc9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       291	cache-tree.c	FUNCTION_39	WHILE_1	CALL_5
0x4000dd0	      0xb901000000	                              mov ecx, 1	       291	cache-tree.c	FUNCTION_39	WHILE_1	CALL_5
0x4000dd5	          0x4889c7	                            mov rdi, rax	       291	cache-tree.c	FUNCTION_39	WHILE_1	CALL_5
0x4000dd8	      0xe89bf6ffff	                   call sym.find_subtree	       291	cache-tree.c	FUNCTION_39	WHILE_1	CALL_5
0x4000ddd	        0x48894590	             mov qword [rbp - 0x70], rax	       291	cache-tree.c	FUNCTION_39	WHILE_1	CALL_5
0x4000de1	        0x488b4590	             mov rax, qword [rbp - 0x70]	       292	cache-tree.c	FUNCTION_39	WHILE_1	IF_4
0x4000de5	          0x488b00	                    mov rax, qword [rax]	       292	cache-tree.c	FUNCTION_39	WHILE_1	IF_4
0x4000de8	          0x4885c0	                           test rax, rax	       292	cache-tree.c	FUNCTION_39	WHILE_1	IF_4
0x4000deb	            0x750f	                           jne 0x4000dfc	       292	cache-tree.c	FUNCTION_39	WHILE_1	IF_4
0x4000ded	      0xe800000000	                          call 0x4000df2	       293	cache-tree.c	FUNCTION_39	WHILE_1	CALL_6
0x4000df2	          0x4889c2	                            mov rdx, rax	       293	cache-tree.c	FUNCTION_39	WHILE_1	CALL_6
0x4000df5	        0x488b4590	             mov rax, qword [rbp - 0x70]	       293	cache-tree.c	FUNCTION_39	WHILE_1	CALL_6
0x4000df9	          0x488910	                    mov qword [rax], rdx	       293	cache-tree.c	FUNCTION_39	WHILE_1	CALL_6
0x4000dfc	    0x8b9518ffffff	             mov edx, dword [rbp - 0xe8]	       297	cache-tree.c	FUNCTION_39	WHILE_1
0x4000e02	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       297	cache-tree.c	FUNCTION_39	WHILE_1
0x4000e08	             0x1d0	                            add eax, edx	       297	cache-tree.c	FUNCTION_39	WHILE_1
0x4000e0a	        0x448d5001	                     lea r10d, [rax + 1]	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e0e	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e14	    0x2b8538ffffff	             sub eax, dword [rbp - 0xc8]	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e1a	            0x89c2	                            mov edx, eax	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e1c	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e22	            0x4898	                                    cdqe	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e24	    0x488d0cc50000	                        lea rcx, [rax*8]	       295	cache-tree.c	FUNCTION_39	WHILE_1
0x4000e2c	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e33	        0x488d3c01	                    lea rdi, [rcx + rax]	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e37	        0x488b4590	             mov rax, qword [rbp - 0x70]	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e3b	          0x488b00	                    mov rax, qword [rax]	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e3e	        0x4c8d45b0	                    lea r8, [rbp - 0x50]	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e42	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e46	        0x4883ec08	                              sub rsp, 8	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e4a	          0x8b7510	            mov esi, dword [rbp + 0x10] 	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e4d	              0x56	                                push rsi	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e4e	          0x4d89c1	                              mov r9, r8	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e51	          0x4589d0	                           mov r8d, r10d	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e54	          0x4889fe	                            mov rsi, rdi	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e57	          0x4889c7	                            mov rdi, rax	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e5a	      0xe851fdffff	                     call sym.update_one	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e5f	        0x4883c410	                           add rsp, 0x10	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e63	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	       294	cache-tree.c	FUNCTION_39	WHILE_1	CALL_7
0x4000e69	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	       300	cache-tree.c	FUNCTION_39	WHILE_1	IF_5
0x4000e70	            0x790b	                           jns 0x4000e7d	       300	cache-tree.c	FUNCTION_39	WHILE_1	IF_5
0x4000e72	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       301	cache-tree.c	FUNCTION_39	WHILE_1	IF_5
0x4000e78	      0xe92a050000	                           jmp 0x40013a7	       301	cache-tree.c	FUNCTION_39	WHILE_1	IF_5
0x4000e7d	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	       302	cache-tree.c	FUNCTION_39	WHILE_1	IF_6
0x4000e84	            0x750f	                           jne 0x4000e95	       302	cache-tree.c	FUNCTION_39	WHILE_1	IF_6
0x4000e86	      0xbf00000000	                              mov edi, 0	       303	cache-tree.c	FUNCTION_39	WHILE_1	CALL_8
0x4000e8b	      0xb800000000	                              mov eax, 0	       303	cache-tree.c	FUNCTION_39	WHILE_1	CALL_8
0x4000e90	      0xe800000000	                          call 0x4000e95	       303	cache-tree.c	FUNCTION_39	WHILE_1	CALL_8
0x4000e95	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       304	cache-tree.c	FUNCTION_39	WHILE_1
0x4000e9b	     0x18538ffffff	             add dword [rbp - 0xc8], eax	       304	cache-tree.c	FUNCTION_39	WHILE_1
0x4000ea1	        0x488b4590	             mov rax, qword [rbp - 0x70]	       305	cache-tree.c	FUNCTION_39	WHILE_1
0x4000ea5	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	       305	cache-tree.c	FUNCTION_39	WHILE_1
0x4000eab	          0x895008	                mov dword [rax + 8], edx	       305	cache-tree.c	FUNCTION_39	WHILE_1
0x4000eae	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       306	cache-tree.c	FUNCTION_39	WHILE_1
0x4000eb5	            0x8b10	                    mov edx, dword [rax]	       306	cache-tree.c	FUNCTION_39	WHILE_1
0x4000eb7	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       306	cache-tree.c	FUNCTION_39	WHILE_1
0x4000eba	             0x1c2	                            add edx, eax	       306	cache-tree.c	FUNCTION_39	WHILE_1
0x4000ebc	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       306	cache-tree.c	FUNCTION_39	WHILE_1
0x4000ec3	            0x8910	                    mov dword [rax], edx	       306	cache-tree.c	FUNCTION_39	WHILE_1
0x4000ec5	        0x488b4590	             mov rax, qword [rbp - 0x70]	       307	cache-tree.c	FUNCTION_39	WHILE_1
0x4000ec9	    0xc74010010000	               mov dword [rax + 0x10], 1	       307	cache-tree.c	FUNCTION_39	WHILE_1
0x4000ed0	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       269	cache-tree.c	FUNCTION_39	WHILE_1
0x4000ed6	    0x3b851cffffff	             cmp eax, dword [rbp - 0xe4]	       269	cache-tree.c	FUNCTION_39	WHILE_1
0x4000edc	     0xf8c03feffff	                            jl 0x4000ce5	       269	cache-tree.c	FUNCTION_39	WHILE_1
0x4000ee2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       310	cache-tree.c	FUNCTION_39	CALL_9
0x4000ee9	          0x4889c7	                            mov rdi, rax	       310	cache-tree.c	FUNCTION_39	CALL_9
0x4000eec	      0xe880fbffff	        call sym.discard_unused_subtrees	       310	cache-tree.c	FUNCTION_39	CALL_9
0x4000ef1	        0x488d45b0	                   lea rax, [rbp - 0x50]	       315	cache-tree.c	FUNCTION_39	CALL_10
0x4000ef5	      0xbe00200000	                         mov esi, 0x2000	       315	cache-tree.c	FUNCTION_39	CALL_10
0x4000efa	          0x4889c7	                            mov rdi, rax	       315	cache-tree.c	FUNCTION_39	CALL_10
0x4000efd	      0xe800000000	                          call 0x4000f02	       315	cache-tree.c	FUNCTION_39	CALL_10
0x4000f02	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	       317	cache-tree.c	FUNCTION_39
0x4000f0c	      0xe986030000	                           jmp 0x4001297	       318	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f11	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       319	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f17	            0x4898	                                    cdqe	       319	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f19	    0x488d14c50000	                        lea rdx, [rax*8]	       319	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f21	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       319	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f28	          0x4801d0	                            add rax, rdx	       319	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f2b	          0x488b00	                    mov rax, qword [rax]	       319	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f2e	        0x48894598	             mov qword [rbp - 0x68], rax	       319	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f32	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       320	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f3d	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	       325	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f47	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	       326	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f51	        0x488b4598	             mov rax, qword [rbp - 0x68]	       328	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f55	        0x4883c058	                           add rax, 0x58	       328	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f59	        0x488945a0	             mov qword [rbp - 0x60], rax	       328	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f5d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       329	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f61	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       329	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f64	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       329	cache-tree.c	FUNCTION_39	WHILE_2
0x4000f6a	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	       330	cache-tree.c	FUNCTION_39	WHILE_2	IF_7	CALL_11
0x4000f70	    0x3b8518ffffff	             cmp eax, dword [rbp - 0xe8]	       330	cache-tree.c	FUNCTION_39	WHILE_2	IF_7	CALL_11
0x4000f76	     0xf8e2d030000	                           jle 0x40012a9	       330	cache-tree.c	FUNCTION_39	WHILE_2	IF_7	CALL_11
0x4000f7c	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	       330	cache-tree.c	FUNCTION_39	WHILE_2	IF_7	CALL_11
0x4000f82	          0x4863d0	                         movsxd rdx, eax	       330	cache-tree.c	FUNCTION_39	WHILE_2	IF_7	CALL_11
0x4000f85	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       330	cache-tree.c	FUNCTION_39	WHILE_2	IF_7	CALL_11
0x4000f89	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       330	cache-tree.c	FUNCTION_39	WHILE_2	IF_7	CALL_11
0x4000f90	          0x4889ce	                            mov rsi, rcx	       330	cache-tree.c	FUNCTION_39	WHILE_2	IF_7	CALL_11
0x4000f93	          0x4889c7	                            mov rdi, rax	       330	cache-tree.c	FUNCTION_39	WHILE_2	IF_7	CALL_11
0x4000f96	      0xe800000000	                          call 0x4000f9b	       330	cache-tree.c	FUNCTION_39	WHILE_2	IF_7	CALL_11
0x4000f9b	            0x85c0	                           test eax, eax	       330	cache-tree.c	FUNCTION_39	WHILE_2	IF_7	CALL_11
0x4000f9d	     0xf8506030000	                           jne 0x40012a9	       330	cache-tree.c	FUNCTION_39	WHILE_2	IF_7	CALL_11
0x4000fa3	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	       333	cache-tree.c	FUNCTION_39	WHILE_2	CALL_12
0x4000fa9	          0x4863d0	                         movsxd rdx, eax	       333	cache-tree.c	FUNCTION_39	WHILE_2	CALL_12
0x4000fac	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       333	cache-tree.c	FUNCTION_39	WHILE_2	CALL_12
0x4000fb0	          0x4801d0	                            add rax, rdx	       333	cache-tree.c	FUNCTION_39	WHILE_2	CALL_12
0x4000fb3	      0xbe2f000000	                           mov esi, 0x2f	       333	cache-tree.c	FUNCTION_39	WHILE_2	CALL_12
0x4000fb8	          0x4889c7	                            mov rdi, rax	       333	cache-tree.c	FUNCTION_39	WHILE_2	CALL_12
0x4000fbb	      0xe800000000	                          call 0x4000fc0	       333	cache-tree.c	FUNCTION_39	WHILE_2	CALL_12
0x4000fc0	        0x488945a8	             mov qword [rbp - 0x58], rax	       333	cache-tree.c	FUNCTION_39	WHILE_2	CALL_12
0x4000fc4	      0x48837da800	               cmp qword [rbp - 0x58], 0	       334	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4000fc9	     0xf84f1000000	                            je 0x40010c0	       334	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4000fcf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       335	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4000fd3	    0x8b9518ffffff	             mov edx, dword [rbp - 0xe8]	       335	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4000fd9	          0x4863ca	                         movsxd rcx, edx	       335	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4000fdc	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       335	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4000fe0	          0x4801ca	                            add rdx, rcx	       335	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4000fe3	          0x4829d0	                            sub rax, rdx	       335	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4000fe6	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       335	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4000fec	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	       336	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	CALL_13
0x4000ff2	          0x4863d0	                         movsxd rdx, eax	       336	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	CALL_13
0x4000ff5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       336	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	CALL_13
0x4000ff9	        0x488d3402	                    lea rsi, [rdx + rax]	       336	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	CALL_13
0x4000ffd	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	       336	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	CALL_13
0x4001003	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       336	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	CALL_13
0x400100a	      0xb900000000	                              mov ecx, 0	       336	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	CALL_13
0x400100f	          0x4889c7	                            mov rdi, rax	       336	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	CALL_13
0x4001012	      0xe861f4ffff	                   call sym.find_subtree	       336	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	CALL_13
0x4001017	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       336	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	CALL_13
0x400101e	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	       337	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_9
0x4001026	            0x7532	                           jne 0x400105a	       337	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_9
0x4001028	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	       338	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_9	CALL_14
0x400102e	          0x4863d0	                         movsxd rdx, eax	       338	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_9	CALL_14
0x4001031	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       338	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_9	CALL_14
0x4001035	        0x488d3402	                    lea rsi, [rdx + rax]	       338	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_9	CALL_14
0x4001039	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       338	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_9	CALL_14
0x400103d	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       338	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_9	CALL_14
0x4001043	          0x4889d1	                            mov rcx, rdx	       338	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_9	CALL_14
0x4001046	          0x4889f2	                            mov rdx, rsi	       338	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_9	CALL_14
0x4001049	            0x89c6	                            mov esi, eax	       338	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_9	CALL_14
0x400104b	      0xbf00000000	                              mov edi, 0	       338	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_9	CALL_14
0x4001050	      0xb800000000	                              mov eax, 0	       338	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_9	CALL_14
0x4001055	      0xe800000000	                          call 0x400105a	       338	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_9	CALL_14
0x400105a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       340	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4001061	          0x8b4008	                mov eax, dword [rax + 8]	       340	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4001064	     0x18538ffffff	             add dword [rbp - 0xc8], eax	       340	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x400106a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       341	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4001071	          0x488b00	                    mov rax, qword [rax]	       341	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4001074	        0x4883c004	                              add rax, 4	       341	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4001078	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       341	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x400107f	    0xc78540ffffff	          mov dword [rbp - 0xc0], 0x4000	       342	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4001089	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       343	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4001090	          0x488b00	                    mov rax, qword [rax]	       343	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4001093	            0x8b00	                    mov eax, dword [rax]	       343	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4001095	          0xc1e81f	                           shr eax, 0x1f	       343	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x4001098	           0xfb6c0	                           movzx eax, al	       343	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x400109b	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       343	cache-tree.c	FUNCTION_39	WHILE_2	IF_8
0x40010a1	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	       344	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_10
0x40010a8	            0x744b	                            je 0x40010f5	       344	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_10
0x40010aa	    0xc78534ffffff	               mov dword [rbp - 0xcc], 1	       345	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_10
0x40010b4	    0xc78544ffffff	               mov dword [rbp - 0xbc], 1	       346	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_10
0x40010be	            0xeb35	                           jmp 0x40010f5	       346	cache-tree.c	FUNCTION_39	WHILE_2	IF_8	IF_10
0x40010c0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       350	cache-tree.c	FUNCTION_39	WHILE_2	ELSE_1
0x40010c4	        0x4883c044	                           add rax, 0x44	       350	cache-tree.c	FUNCTION_39	WHILE_2	ELSE_1
0x40010c8	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       350	cache-tree.c	FUNCTION_39	WHILE_2	ELSE_1
0x40010cf	        0x488b4598	             mov rax, qword [rbp - 0x68]	       351	cache-tree.c	FUNCTION_39	WHILE_2	ELSE_1
0x40010d3	          0x8b4034	            mov eax, dword [rax + 0x34] 	       351	cache-tree.c	FUNCTION_39	WHILE_2	ELSE_1
0x40010d6	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	       351	cache-tree.c	FUNCTION_39	WHILE_2	ELSE_1
0x40010dc	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	       352	cache-tree.c	FUNCTION_39	WHILE_2	ELSE_1
0x40010e2	    0x2b8518ffffff	             sub eax, dword [rbp - 0xe8]	       352	cache-tree.c	FUNCTION_39	WHILE_2	ELSE_1
0x40010e8	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       352	cache-tree.c	FUNCTION_39	WHILE_2	ELSE_1
0x40010ee	    0x838538ffffff	               add dword [rbp - 0xc8], 1	       353	cache-tree.c	FUNCTION_39	WHILE_2	ELSE_1
0x40010f5	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       356	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_15
0x40010fc	          0x4889c7	                            mov rdi, rax	       356	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_15
0x40010ff	      0xe877f0ffff	                    call sym.is_null_oid	       356	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_15
0x4001104	            0x85c0	                           test eax, eax	       356	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_15
0x4001106	            0x7530	                           jne 0x4001138	       356	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_15
0x4001108	    0x81bd40ffffff	         cmp dword [rbp - 0xc0], 0xe000 	       356	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_15
0x4001112	     0xf848d000000	                            je 0x40011a5	       356	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_15
0x4001118	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       357	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_16
0x400111f	     0xf8580000000	                           jne 0x40011a5	       357	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_16
0x4001125	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       357	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_16
0x400112c	          0x4889c7	                            mov rdi, rax	       357	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_16
0x400112f	      0xe800000000	                          call 0x4001134	       357	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_16
0x4001134	            0x85c0	                           test eax, eax	       357	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_16
0x4001136	            0x756d	                           jne 0x40011a5	       357	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_16
0x4001138	        0x488d45b0	                   lea rax, [rbp - 0x50]	       358	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_17
0x400113c	          0x4889c7	                            mov rdi, rax	       358	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_17
0x400113f	      0xe800000000	                          call 0x4001144	       358	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	CALL_17
0x4001144	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	       359	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	IF_12
0x400114b	            0x740a	                            je 0x4001157	       359	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	IF_12
0x400114d	      0xb8ffffffff	                     mov eax, 0xffffffff	       360	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	IF_12
0x4001152	      0xe950020000	                           jmp 0x40013a7	       360	cache-tree.c	FUNCTION_39	WHILE_2	IF_11	IF_12
0x4001157	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x400115d	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x4001163	          0x8d1c02	                    lea ebx, [rdx + rax]	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x4001166	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x400116d	          0x4889c7	                            mov rdi, rax	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x4001170	      0xe800000000	                          call 0x4001175	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x4001175	          0x4889c6	                            mov rsi, rax	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x4001178	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x400117c	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x4001182	          0x4989d0	                             mov r8, rdx	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x4001185	            0x89d9	                            mov ecx, ebx	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x4001187	          0x4889f2	                            mov rdx, rsi	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x400118a	            0x89c6	                            mov esi, eax	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x400118c	      0xbf00000000	                              mov edi, 0	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x4001191	      0xb800000000	                              mov eax, 0	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x4001196	      0xe800000000	                          call 0x400119b	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x400119b	      0xe8a0eeffff	                    call sym.const_error	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x40011a0	      0xe902020000	                           jmp 0x40013a7	       361	cache-tree.c	FUNCTION_39	WHILE_2	IF_11
0x40011a5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       370	cache-tree.c	FUNCTION_39	WHILE_2	IF_13
0x40011a9	          0x8b4038	            mov eax, dword [rax + 0x38] 	       370	cache-tree.c	FUNCTION_39	WHILE_2	IF_13
0x40011ac	      0x2500000200	                        and eax, 0x20000	       370	cache-tree.c	FUNCTION_39	WHILE_2	IF_13
0x40011b1	            0x85c0	                           test eax, eax	       370	cache-tree.c	FUNCTION_39	WHILE_2	IF_13
0x40011b3	            0x741a	                            je 0x40011cf	       370	cache-tree.c	FUNCTION_39	WHILE_2	IF_13
0x40011b5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       371	cache-tree.c	FUNCTION_39	WHILE_2	IF_13
0x40011bc	            0x8b00	                    mov eax, dword [rax]	       371	cache-tree.c	FUNCTION_39	WHILE_2	IF_13
0x40011be	          0x8d5001	                      lea edx, [rax + 1]	       371	cache-tree.c	FUNCTION_39	WHILE_2	IF_13
0x40011c1	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       371	cache-tree.c	FUNCTION_39	WHILE_2	IF_13
0x40011c8	            0x8910	                    mov dword [rax], edx	       371	cache-tree.c	FUNCTION_39	WHILE_2	IF_13
0x40011ca	      0xe9c8000000	                           jmp 0x4001297	       372	cache-tree.c	FUNCTION_39	WHILE_2	IF_13
0x40011cf	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	       380	cache-tree.c	FUNCTION_39	WHILE_2	IF_14
0x40011d7	            0x751f	                           jne 0x40011f8	       380	cache-tree.c	FUNCTION_39	WHILE_2	IF_14
0x40011d9	        0x488b4598	             mov rax, qword [rbp - 0x68]	       380	cache-tree.c	FUNCTION_39	WHILE_2	IF_14
0x40011dd	          0x8b4038	            mov eax, dword [rax + 0x38] 	       380	cache-tree.c	FUNCTION_39	WHILE_2	IF_14
0x40011e0	      0x2500000020	                     and eax, 0x20000000	       380	cache-tree.c	FUNCTION_39	WHILE_2	IF_14
0x40011e5	            0x85c0	                           test eax, eax	       380	cache-tree.c	FUNCTION_39	WHILE_2	IF_14
0x40011e7	            0x740f	                            je 0x40011f8	       380	cache-tree.c	FUNCTION_39	WHILE_2	IF_14
0x40011e9	    0xc78534ffffff	               mov dword [rbp - 0xcc], 1	       381	cache-tree.c	FUNCTION_39	WHILE_2	IF_14
0x40011f3	      0xe99f000000	                           jmp 0x4001297	       382	cache-tree.c	FUNCTION_39	WHILE_2	IF_14
0x40011f8	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	       388	cache-tree.c	FUNCTION_39	WHILE_2	IF_15	CALL_19
0x40011ff	            0x741a	                            je 0x400121b	       388	cache-tree.c	FUNCTION_39	WHILE_2	IF_15	CALL_19
0x4001201	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       388	cache-tree.c	FUNCTION_39	WHILE_2	IF_15	CALL_19
0x4001208	      0xbe00000000	                              mov esi, 0	       388	cache-tree.c	FUNCTION_39	WHILE_2	IF_15	CALL_19
0x400120d	          0x4889c7	                            mov rdi, rax	       388	cache-tree.c	FUNCTION_39	WHILE_2	IF_15	CALL_19
0x4001210	      0xe841efffff	                         call sym.oidcmp	       388	cache-tree.c	FUNCTION_39	WHILE_2	IF_15	CALL_19
0x4001215	            0x85c0	                           test eax, eax	       388	cache-tree.c	FUNCTION_39	WHILE_2	IF_15	CALL_19
0x4001217	            0x7502	                           jne 0x400121b	       388	cache-tree.c	FUNCTION_39	WHILE_2	IF_15	CALL_19
0x4001219	            0xeb7c	                           jmp 0x4001297	       389	cache-tree.c	FUNCTION_39	WHILE_2	IF_15
0x400121b	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       391	cache-tree.c	FUNCTION_39	WHILE_2	CALL_20
0x4001221	          0x83c064	                           add eax, 0x64	       391	cache-tree.c	FUNCTION_39	WHILE_2	CALL_20
0x4001224	          0x4863d0	                         movsxd rdx, eax	       391	cache-tree.c	FUNCTION_39	WHILE_2	CALL_20
0x4001227	        0x488d45b0	                   lea rax, [rbp - 0x50]	       391	cache-tree.c	FUNCTION_39	WHILE_2	CALL_20
0x400122b	          0x4889d6	                            mov rsi, rdx	       391	cache-tree.c	FUNCTION_39	WHILE_2	CALL_20
0x400122e	          0x4889c7	                            mov rdi, rax	       391	cache-tree.c	FUNCTION_39	WHILE_2	CALL_20
0x4001231	      0xe800000000	                          call 0x4001236	       391	cache-tree.c	FUNCTION_39	WHILE_2	CALL_20
0x4001236	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	       392	cache-tree.c	FUNCTION_39	WHILE_2	CALL_21
0x400123c	          0x4863d0	                         movsxd rdx, eax	       392	cache-tree.c	FUNCTION_39	WHILE_2	CALL_21
0x400123f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       392	cache-tree.c	FUNCTION_39	WHILE_2	CALL_21
0x4001243	        0x488d3402	                    lea rsi, [rdx + rax]	       392	cache-tree.c	FUNCTION_39	WHILE_2	CALL_21
0x4001247	    0x8b8d3cffffff	             mov ecx, dword [rbp - 0xc4]	       392	cache-tree.c	FUNCTION_39	WHILE_2	CALL_21
0x400124d	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	       392	cache-tree.c	FUNCTION_39	WHILE_2	CALL_21
0x4001253	        0x488d45b0	                   lea rax, [rbp - 0x50]	       392	cache-tree.c	FUNCTION_39	WHILE_2	CALL_21
0x4001257	    0x41b900000000	                              mov r9d, 0	       392	cache-tree.c	FUNCTION_39	WHILE_2	CALL_21
0x400125d	          0x4989f0	                             mov r8, rsi	       392	cache-tree.c	FUNCTION_39	WHILE_2	CALL_21
0x4001260	      0xbe00000000	                              mov esi, 0	       392	cache-tree.c	FUNCTION_39	WHILE_2	CALL_21
0x4001265	          0x4889c7	                            mov rdi, rax	       392	cache-tree.c	FUNCTION_39	WHILE_2	CALL_21
0x4001268	      0xb800000000	                              mov eax, 0	       392	cache-tree.c	FUNCTION_39	WHILE_2	CALL_21
0x400126d	      0xe800000000	                          call 0x4001272	       392	cache-tree.c	FUNCTION_39	WHILE_2	CALL_21
0x4001272	    0x488b05000000	            mov rax, qword [0x04001279] 	       393	cache-tree.c	FUNCTION_39	WHILE_2	CALL_22
0x4001279	        0x488b4058	            mov rax, qword [rax + 0x58] 	       393	cache-tree.c	FUNCTION_39	WHILE_2	CALL_22
0x400127d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       393	cache-tree.c	FUNCTION_39	WHILE_2	CALL_22
0x4001281	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	       393	cache-tree.c	FUNCTION_39	WHILE_2	CALL_22
0x4001288	        0x488d45b0	                   lea rax, [rbp - 0x50]	       393	cache-tree.c	FUNCTION_39	WHILE_2	CALL_22
0x400128c	          0x4889ce	                            mov rsi, rcx	       393	cache-tree.c	FUNCTION_39	WHILE_2	CALL_22
0x400128f	          0x4889c7	                            mov rdi, rax	       393	cache-tree.c	FUNCTION_39	WHILE_2	CALL_22
0x4001292	      0xe800000000	                          call 0x4001297	       393	cache-tree.c	FUNCTION_39	WHILE_2	CALL_22
0x4001297	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       318	cache-tree.c	FUNCTION_39	WHILE_2
0x400129d	    0x3b851cffffff	             cmp eax, dword [rbp - 0xe4]	       318	cache-tree.c	FUNCTION_39	WHILE_2
0x40012a3	     0xf8c68fcffff	                            jl 0x4000f11	       318	cache-tree.c	FUNCTION_39	WHILE_2
0x40012a9	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	       401	cache-tree.c	FUNCTION_39	IF_16
0x40012b0	            0x7453	                            je 0x4001305	       401	cache-tree.c	FUNCTION_39	IF_16
0x40012b2	    0x488b15000000	            mov rdx, qword [0x040012b9] 	       403	cache-tree.c	FUNCTION_39	IF_16	CALL_24
0x40012b9	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       403	cache-tree.c	FUNCTION_39	IF_16	CALL_24
0x40012bd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       403	cache-tree.c	FUNCTION_39	IF_16	CALL_24
0x40012c1	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       403	cache-tree.c	FUNCTION_39	IF_16	CALL_24
0x40012c5	          0x4889c7	                            mov rdi, rax	       403	cache-tree.c	FUNCTION_39	IF_16	CALL_24
0x40012c8	      0xe800000000	                          call 0x40012cd	       403	cache-tree.c	FUNCTION_39	IF_16	CALL_24
0x40012cd	        0x488d45d0	                   lea rax, [rbp - 0x30]	       404	cache-tree.c	FUNCTION_39	IF_16	IF_17	CALL_25
0x40012d1	          0x4889c7	                            mov rdi, rax	       404	cache-tree.c	FUNCTION_39	IF_16	IF_17	CALL_25
0x40012d4	      0xe800000000	                          call 0x40012d9	       404	cache-tree.c	FUNCTION_39	IF_16	IF_17	CALL_25
0x40012d9	            0x85c0	                           test eax, eax	       404	cache-tree.c	FUNCTION_39	IF_16	IF_17	CALL_25
0x40012db	            0x741c	                            je 0x40012f9	       404	cache-tree.c	FUNCTION_39	IF_16	IF_17	CALL_25
0x40012dd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       405	cache-tree.c	FUNCTION_39	IF_16	CALL_26
0x40012e4	        0x488d5004	                      lea rdx, [rax + 4]	       405	cache-tree.c	FUNCTION_39	IF_16	CALL_26
0x40012e8	        0x488d45d0	                   lea rax, [rbp - 0x30]	       405	cache-tree.c	FUNCTION_39	IF_16	CALL_26
0x40012ec	          0x4889c6	                            mov rsi, rax	       405	cache-tree.c	FUNCTION_39	IF_16	CALL_26
0x40012ef	          0x4889d7	                            mov rdi, rdx	       405	cache-tree.c	FUNCTION_39	IF_16	CALL_26
0x40012f2	      0xe8d6eeffff	                         call sym.oidcpy	       405	cache-tree.c	FUNCTION_39	IF_16	CALL_26
0x40012f7	            0xeb72	                           jmp 0x400136b	       405	cache-tree.c	FUNCTION_39	IF_16	CALL_26
0x40012f9	    0xc78534ffffff	               mov dword [rbp - 0xcc], 1	       407	cache-tree.c	FUNCTION_39	IF_16	ELSE_2
0x4001303	            0xeb66	                           jmp 0x400136b	       407	cache-tree.c	FUNCTION_39	IF_16	ELSE_2
0x4001305	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	       408	cache-tree.c	FUNCTION_39	ELSE_2	ELSE_3	IF_18
0x400130c	            0x7424	                            je 0x4001332	       408	cache-tree.c	FUNCTION_39	ELSE_2	ELSE_3	IF_18
0x400130e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       409	cache-tree.c	FUNCTION_39	ELSE_2	ELSE_3	IF_18	CALL_27
0x4001315	        0x488d4804	                      lea rcx, [rax + 4]	       409	cache-tree.c	FUNCTION_39	ELSE_2	ELSE_3	IF_18	CALL_27
0x4001319	    0x488b15000000	            mov rdx, qword [0x04001320] 	       409	cache-tree.c	FUNCTION_39	ELSE_2	ELSE_3	IF_18	CALL_27
0x4001320	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       409	cache-tree.c	FUNCTION_39	ELSE_2	ELSE_3	IF_18	CALL_27
0x4001324	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       409	cache-tree.c	FUNCTION_39	ELSE_2	ELSE_3	IF_18	CALL_27
0x4001328	          0x4889c7	                            mov rdi, rax	       409	cache-tree.c	FUNCTION_39	ELSE_2	ELSE_3	IF_18	CALL_27
0x400132b	      0xe800000000	                          call 0x4001330	       409	cache-tree.c	FUNCTION_39	ELSE_2	ELSE_3	IF_18	CALL_27
0x4001330	            0xeb39	                           jmp 0x400136b	       409	cache-tree.c	FUNCTION_39	ELSE_2	ELSE_3	IF_18	CALL_27
0x4001332	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       410	cache-tree.c	FUNCTION_39	ELSE_4	IF_19	CALL_28
0x4001339	        0x488d4804	                      lea rcx, [rax + 4]	       410	cache-tree.c	FUNCTION_39	ELSE_4	IF_19	CALL_28
0x400133d	    0x488b15000000	            mov rdx, qword [0x04001344] 	       410	cache-tree.c	FUNCTION_39	ELSE_4	IF_19	CALL_28
0x4001344	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       410	cache-tree.c	FUNCTION_39	ELSE_4	IF_19	CALL_28
0x4001348	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       410	cache-tree.c	FUNCTION_39	ELSE_4	IF_19	CALL_28
0x400134c	          0x4889c7	                            mov rdi, rax	       410	cache-tree.c	FUNCTION_39	ELSE_4	IF_19	CALL_28
0x400134f	      0xe800000000	                          call 0x4001354	       410	cache-tree.c	FUNCTION_39	ELSE_4	IF_19	CALL_28
0x4001354	            0x85c0	                           test eax, eax	       410	cache-tree.c	FUNCTION_39	ELSE_4	IF_19	CALL_28
0x4001356	            0x7413	                            je 0x400136b	       410	cache-tree.c	FUNCTION_39	ELSE_4	IF_19	CALL_28
0x4001358	        0x488d45b0	                   lea rax, [rbp - 0x50]	       412	cache-tree.c	FUNCTION_39	ELSE_4	IF_19	CALL_29
0x400135c	          0x4889c7	                            mov rdi, rax	       412	cache-tree.c	FUNCTION_39	ELSE_4	IF_19	CALL_29
0x400135f	      0xe800000000	                          call 0x4001364	       412	cache-tree.c	FUNCTION_39	ELSE_4	IF_19	CALL_29
0x4001364	      0xb8ffffffff	                     mov eax, 0xffffffff	       413	cache-tree.c	FUNCTION_39	ELSE_4	IF_19
0x4001369	            0xeb3c	                           jmp 0x40013a7	       413	cache-tree.c	FUNCTION_39	ELSE_4	IF_19
0x400136b	        0x488d45b0	                   lea rax, [rbp - 0x50]	       416	cache-tree.c	FUNCTION_39	CALL_30
0x400136f	          0x4889c7	                            mov rdi, rax	       416	cache-tree.c	FUNCTION_39	CALL_30
0x4001372	      0xe800000000	                          call 0x4001377	       416	cache-tree.c	FUNCTION_39	CALL_30
0x4001377	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	       417	cache-tree.c	FUNCTION_39
0x400137e	            0x7513	                           jne 0x4001393	       417	cache-tree.c	FUNCTION_39
0x4001380	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       417	cache-tree.c	FUNCTION_39
0x4001387	            0x8b00	                    mov eax, dword [rax]	       417	cache-tree.c	FUNCTION_39
0x4001389	    0x8b9538ffffff	             mov edx, dword [rbp - 0xc8]	       417	cache-tree.c	FUNCTION_39
0x400138f	            0x29c2	                            sub edx, eax	       417	cache-tree.c	FUNCTION_39
0x4001391	            0xeb05	                           jmp 0x4001398	       417	cache-tree.c	FUNCTION_39
0x4001393	      0xbaffffffff	                     mov edx, 0xffffffff	       417	cache-tree.c	FUNCTION_39
0x4001398	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       417	cache-tree.c	FUNCTION_39
0x400139f	            0x8910	                    mov dword [rax], edx	       417	cache-tree.c	FUNCTION_39
0x40013a1	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       423	cache-tree.c	FUNCTION_39
0x40013a7	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       424	cache-tree.c	FUNCTION_39
0x40013ab	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       424	cache-tree.c	FUNCTION_39
0x40013b4	            0x7405	                            je 0x40013bb	       424	cache-tree.c	FUNCTION_39
0x40013b6	      0xe800000000	                          call 0x40013bb	       424	cache-tree.c	FUNCTION_39
0x40013bb	        0x488b5df8	                mov rbx, qword [rbp - 8]	       424	cache-tree.c	FUNCTION_39
0x40013bf	              0xc9	                                   leave	       424	cache-tree.c	FUNCTION_39
0x40013c0	              0xc3	                                     ret	       424	cache-tree.c	FUNCTION_39
subtree_name_cmp	CALL,1:IF,2:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	26
0x4000368	              0x55	                                push rbp	        37	cache-tree.c	FUNCTION_30
0x4000369	          0x4889e5	                            mov rbp, rsp	        37	cache-tree.c	FUNCTION_30
0x400036c	        0x4883ec20	                           sub rsp, 0x20	        37	cache-tree.c	FUNCTION_30
0x4000370	        0x48897df8	                mov qword [rbp - 8], rdi	        37	cache-tree.c	FUNCTION_30
0x4000374	          0x8975f4	              mov dword [rbp - 0xc], esi	        37	cache-tree.c	FUNCTION_30
0x4000377	        0x488955e8	             mov qword [rbp - 0x18], rdx	        37	cache-tree.c	FUNCTION_30
0x400037b	          0x894df0	             mov dword [rbp - 0x10], ecx	        37	cache-tree.c	FUNCTION_30
0x400037e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        38	cache-tree.c	FUNCTION_30	IF_1
0x4000381	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	        38	cache-tree.c	FUNCTION_30	IF_1
0x4000384	            0x7d07	                           jge 0x400038d	        38	cache-tree.c	FUNCTION_30	IF_1
0x4000386	      0xb8ffffffff	                     mov eax, 0xffffffff	        39	cache-tree.c	FUNCTION_30	IF_1
0x400038b	            0xeb28	                           jmp 0x40003b5	        39	cache-tree.c	FUNCTION_30	IF_1
0x400038d	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        40	cache-tree.c	FUNCTION_30	IF_2
0x4000390	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	        40	cache-tree.c	FUNCTION_30	IF_2
0x4000393	            0x7d07	                           jge 0x400039c	        40	cache-tree.c	FUNCTION_30	IF_2
0x4000395	      0xb801000000	                              mov eax, 1	        41	cache-tree.c	FUNCTION_30	IF_2
0x400039a	            0xeb19	                           jmp 0x40003b5	        41	cache-tree.c	FUNCTION_30	IF_2
0x400039c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        42	cache-tree.c	FUNCTION_30	CALL_1
0x400039f	          0x4863d0	                         movsxd rdx, eax	        42	cache-tree.c	FUNCTION_30	CALL_1
0x40003a2	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        42	cache-tree.c	FUNCTION_30	CALL_1
0x40003a6	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	cache-tree.c	FUNCTION_30	CALL_1
0x40003aa	          0x4889ce	                            mov rsi, rcx	        42	cache-tree.c	FUNCTION_30	CALL_1
0x40003ad	          0x4889c7	                            mov rdi, rax	        42	cache-tree.c	FUNCTION_30	CALL_1
0x40003b0	      0xe800000000	                          call 0x40003b5	        42	cache-tree.c	FUNCTION_30	CALL_1
0x40003b5	              0xc9	                                   leave	        43	cache-tree.c	FUNCTION_30
0x40003b6	              0xc3	                                     ret	        43	cache-tree.c	FUNCTION_30
do_invalidate_path	CALL,6:IF,4:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	99
0x40006b7	              0x55	                                push rbp	       100	cache-tree.c	FUNCTION_34
0x40006b8	          0x4889e5	                            mov rbp, rsp	       100	cache-tree.c	FUNCTION_34
0x40006bb	        0x4883ec30	                           sub rsp, 0x30	       100	cache-tree.c	FUNCTION_34
0x40006bf	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       100	cache-tree.c	FUNCTION_34
0x40006c3	        0x488975d0	             mov qword [rbp - 0x30], rsi	       100	cache-tree.c	FUNCTION_34
0x40006c7	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       116	cache-tree.c	FUNCTION_34	IF_1
0x40006cc	            0x750a	                           jne 0x40006d8	       116	cache-tree.c	FUNCTION_34	IF_1
0x40006ce	      0xb800000000	                              mov eax, 0	       117	cache-tree.c	FUNCTION_34	IF_1
0x40006d3	      0xe948010000	                           jmp 0x4000820	       117	cache-tree.c	FUNCTION_34	IF_1
0x40006d8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       118	cache-tree.c	FUNCTION_34
0x40006dc	      0xbe2f000000	                           mov esi, 0x2f	       118	cache-tree.c	FUNCTION_34
0x40006e1	          0x4889c7	                            mov rdi, rax	       118	cache-tree.c	FUNCTION_34
0x40006e4	      0xe800000000	                          call 0x40006e9	       118	cache-tree.c	FUNCTION_34
0x40006e9	        0x488945f0	             mov qword [rbp - 0x10], rax	       118	cache-tree.c	FUNCTION_34
0x40006ed	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       119	cache-tree.c	FUNCTION_34
0x40006f1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       119	cache-tree.c	FUNCTION_34
0x40006f5	          0x4829c2	                            sub rdx, rax	       119	cache-tree.c	FUNCTION_34
0x40006f8	          0x4889d0	                            mov rax, rdx	       119	cache-tree.c	FUNCTION_34
0x40006fb	          0x8945e8	             mov dword [rbp - 0x18], eax	       119	cache-tree.c	FUNCTION_34
0x40006fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       120	cache-tree.c	FUNCTION_34
0x4000702	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	       120	cache-tree.c	FUNCTION_34
0x4000708	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       121	cache-tree.c	FUNCTION_34	IF_2
0x400070c	           0xfb600	                   movzx eax, byte [rax]	       121	cache-tree.c	FUNCTION_34	IF_2
0x400070f	            0x84c0	                             test al, al	       121	cache-tree.c	FUNCTION_34	IF_2
0x4000711	     0xf85c7000000	                           jne 0x40007de	       121	cache-tree.c	FUNCTION_34	IF_2
0x4000717	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       123	cache-tree.c	FUNCTION_34	IF_2	CALL_2
0x400071a	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       123	cache-tree.c	FUNCTION_34	IF_2	CALL_2
0x400071e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       123	cache-tree.c	FUNCTION_34	IF_2	CALL_2
0x4000722	          0x4889ce	                            mov rsi, rcx	       123	cache-tree.c	FUNCTION_34	IF_2	CALL_2
0x4000725	          0x4889c7	                            mov rdi, rax	       123	cache-tree.c	FUNCTION_34	IF_2	CALL_2
0x4000728	      0xe88afcffff	                    call sym.subtree_pos	       123	cache-tree.c	FUNCTION_34	IF_2	CALL_2
0x400072d	          0x8945ec	             mov dword [rbp - 0x14], eax	       123	cache-tree.c	FUNCTION_34	IF_2	CALL_2
0x4000730	        0x837dec00	               cmp dword [rbp - 0x14], 0	       124	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x4000734	     0xf889d000000	                            js 0x40007d7	       124	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x400073a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       125	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_3
0x400073e	        0x488b4020	            mov rax, qword [rax + 0x20] 	       125	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_3
0x4000742	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       125	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_3
0x4000745	          0x4863d2	                         movsxd rdx, edx	       125	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_3
0x4000748	        0x48c1e203	                              shl rdx, 3	       125	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_3
0x400074c	          0x4801d0	                            add rax, rdx	       125	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_3
0x400074f	          0x488b00	                    mov rax, qword [rax]	       125	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_3
0x4000752	          0x4889c7	                            mov rdi, rax	       125	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_3
0x4000755	      0xe800000000	                          call 0x400075a	       125	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_3
0x400075a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       126	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_4
0x400075e	        0x488b4020	            mov rax, qword [rax + 0x20] 	       126	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_4
0x4000762	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       126	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_4
0x4000765	          0x4863d2	                         movsxd rdx, edx	       126	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_4
0x4000768	        0x48c1e203	                              shl rdx, 3	       126	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_4
0x400076c	          0x4801d0	                            add rax, rdx	       126	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_4
0x400076f	          0x488b00	                    mov rax, qword [rax]	       126	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_4
0x4000772	          0x4889c7	                            mov rdi, rax	       126	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_4
0x4000775	      0xe800000000	                          call 0x400077a	       126	cache-tree.c	FUNCTION_34	IF_2	IF_3	CALL_4
0x400077a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x400077e	          0x8b4018	            mov eax, dword [rax + 0x18] 	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x4000781	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x4000784	          0x83e801	                              sub eax, 1	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x4000787	            0x4898	                                    cdqe	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x4000789	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x400078d	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x4000791	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x4000794	          0x4863c9	                         movsxd rcx, ecx	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x4000797	        0x4883c101	                              add rcx, 1	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x400079b	        0x48c1e103	                              shl rcx, 3	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x400079f	        0x488d340a	                    lea rsi, [rdx + rcx]	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x40007a3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x40007a7	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x40007ab	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x40007ae	          0x4863c9	                         movsxd rcx, ecx	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x40007b1	        0x48c1e103	                              shl rcx, 3	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x40007b5	        0x488d3c0a	                    lea rdi, [rdx + rcx]	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x40007b9	      0xb908000000	                              mov ecx, 8	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x40007be	          0x4889c2	                            mov rdx, rax	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x40007c1	      0xe81bf9ffff	                     call sym.move_array	       133	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x40007c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       135	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x40007ca	          0x8b4018	            mov eax, dword [rax + 0x18] 	       135	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x40007cd	          0x8d50ff	                      lea edx, [rax - 1]	       135	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x40007d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       135	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x40007d4	          0x895018	             mov dword [rax + 0x18], edx	       135	cache-tree.c	FUNCTION_34	IF_2	IF_3
0x40007d7	      0xb801000000	                              mov eax, 1	       137	cache-tree.c	FUNCTION_34	IF_2
0x40007dc	            0xeb42	                           jmp 0x4000820	       137	cache-tree.c	FUNCTION_34	IF_2
0x40007de	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       139	cache-tree.c	FUNCTION_34	CALL_5
0x40007e1	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       139	cache-tree.c	FUNCTION_34	CALL_5
0x40007e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       139	cache-tree.c	FUNCTION_34	CALL_5
0x40007e9	      0xb900000000	                              mov ecx, 0	       139	cache-tree.c	FUNCTION_34	CALL_5
0x40007ee	          0x4889c7	                            mov rdi, rax	       139	cache-tree.c	FUNCTION_34	CALL_5
0x40007f1	      0xe882fcffff	                   call sym.find_subtree	       139	cache-tree.c	FUNCTION_34	CALL_5
0x40007f6	        0x488945f8	                mov qword [rbp - 8], rax	       139	cache-tree.c	FUNCTION_34	CALL_5
0x40007fa	      0x48837df800	                  cmp qword [rbp - 8], 0	       140	cache-tree.c	FUNCTION_34	IF_4
0x40007ff	            0x741a	                            je 0x400081b	       140	cache-tree.c	FUNCTION_34	IF_4
0x4000801	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       141	cache-tree.c	FUNCTION_34	CALL_6
0x4000805	        0x488d5001	                      lea rdx, [rax + 1]	       141	cache-tree.c	FUNCTION_34	CALL_6
0x4000809	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	cache-tree.c	FUNCTION_34	CALL_6
0x400080d	          0x488b00	                    mov rax, qword [rax]	       141	cache-tree.c	FUNCTION_34	CALL_6
0x4000810	          0x4889d6	                            mov rsi, rdx	       141	cache-tree.c	FUNCTION_34	CALL_6
0x4000813	          0x4889c7	                            mov rdi, rax	       141	cache-tree.c	FUNCTION_34	CALL_6
0x4000816	      0xe89cfeffff	             call sym.do_invalidate_path	       141	cache-tree.c	FUNCTION_34	CALL_6
0x400081b	      0xb801000000	                              mov eax, 1	       142	cache-tree.c	FUNCTION_34
0x4000820	              0xc9	                                   leave	       143	cache-tree.c	FUNCTION_34
0x4000821	              0xc3	                                     ret	       143	cache-tree.c	FUNCTION_34
write_one	CALL,10:IF,4:DO,0:WHILE,0:ELSE,1:functions,0:SWITCH,0:FOR,1	103
0x400148f	              0x55	                                push rbp	       444	cache-tree.c	FUNCTION_41
0x4001490	          0x4889e5	                            mov rbp, rsp	       444	cache-tree.c	FUNCTION_41
0x4001493	        0x4883ec40	                           sub rsp, 0x40	       444	cache-tree.c	FUNCTION_41
0x4001497	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       444	cache-tree.c	FUNCTION_41
0x400149b	        0x488975d0	             mov qword [rbp - 0x30], rsi	       444	cache-tree.c	FUNCTION_41
0x400149f	        0x488955c8	             mov qword [rbp - 0x38], rdx	       444	cache-tree.c	FUNCTION_41
0x40014a3	          0x894dc4	             mov dword [rbp - 0x3c], ecx	       444	cache-tree.c	FUNCTION_41
0x40014a6	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       453	cache-tree.c	FUNCTION_41	CALL_1
0x40014a9	          0x83c064	                           add eax, 0x64	       453	cache-tree.c	FUNCTION_41	CALL_1
0x40014ac	          0x4863d0	                         movsxd rdx, eax	       453	cache-tree.c	FUNCTION_41	CALL_1
0x40014af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       453	cache-tree.c	FUNCTION_41	CALL_1
0x40014b3	          0x4889d6	                            mov rsi, rdx	       453	cache-tree.c	FUNCTION_41	CALL_1
0x40014b6	          0x4889c7	                            mov rdi, rax	       453	cache-tree.c	FUNCTION_41	CALL_1
0x40014b9	      0xe800000000	                          call 0x40014be	       453	cache-tree.c	FUNCTION_41	CALL_1
0x40014be	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       454	cache-tree.c	FUNCTION_41	CALL_2
0x40014c1	          0x4863d0	                         movsxd rdx, eax	       454	cache-tree.c	FUNCTION_41	CALL_2
0x40014c4	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       454	cache-tree.c	FUNCTION_41	CALL_2
0x40014c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       454	cache-tree.c	FUNCTION_41	CALL_2
0x40014cc	          0x4889ce	                            mov rsi, rcx	       454	cache-tree.c	FUNCTION_41	CALL_2
0x40014cf	          0x4889c7	                            mov rdi, rax	       454	cache-tree.c	FUNCTION_41	CALL_2
0x40014d2	      0xe800000000	                          call 0x40014d7	       454	cache-tree.c	FUNCTION_41	CALL_2
0x40014d7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       455	cache-tree.c	FUNCTION_41	CALL_3
0x40014db	          0x8b4818	            mov ecx, dword [rax + 0x18] 	       455	cache-tree.c	FUNCTION_41	CALL_3
0x40014de	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       455	cache-tree.c	FUNCTION_41	CALL_3
0x40014e2	            0x8b10	                    mov edx, dword [rax]	       455	cache-tree.c	FUNCTION_41	CALL_3
0x40014e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       455	cache-tree.c	FUNCTION_41	CALL_3
0x40014e8	          0x4189c8	                            mov r8d, ecx	       455	cache-tree.c	FUNCTION_41	CALL_3
0x40014eb	            0x89d1	                            mov ecx, edx	       455	cache-tree.c	FUNCTION_41	CALL_3
0x40014ed	      0xba00000000	                              mov edx, 0	       455	cache-tree.c	FUNCTION_41	CALL_3
0x40014f2	      0xbe00000000	                              mov esi, 0	       455	cache-tree.c	FUNCTION_41	CALL_3
0x40014f7	          0x4889c7	                            mov rdi, rax	       455	cache-tree.c	FUNCTION_41	CALL_3
0x40014fa	      0xb800000000	                              mov eax, 0	       455	cache-tree.c	FUNCTION_41	CALL_3
0x40014ff	      0xe800000000	                          call 0x4001504	       455	cache-tree.c	FUNCTION_41	CALL_3
0x4001504	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       467	cache-tree.c	FUNCTION_41	IF_2
0x4001508	            0x8b00	                    mov eax, dword [rax]	       467	cache-tree.c	FUNCTION_41	IF_2
0x400150a	            0x85c0	                           test eax, eax	       467	cache-tree.c	FUNCTION_41	IF_2
0x400150c	            0x7826	                            js 0x4001534	       467	cache-tree.c	FUNCTION_41	IF_2
0x400150e	    0x488b05000000	            mov rax, qword [0x04001515] 	       468	cache-tree.c	FUNCTION_41	IF_2	CALL_7
0x4001515	        0x488b4058	            mov rax, qword [rax + 0x58] 	       468	cache-tree.c	FUNCTION_41	IF_2	CALL_7
0x4001519	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       468	cache-tree.c	FUNCTION_41	IF_2	CALL_7
0x400151d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       468	cache-tree.c	FUNCTION_41	IF_2	CALL_7
0x4001521	        0x488d4804	                      lea rcx, [rax + 4]	       468	cache-tree.c	FUNCTION_41	IF_2	CALL_7
0x4001525	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       468	cache-tree.c	FUNCTION_41	IF_2	CALL_7
0x4001529	          0x4889ce	                            mov rsi, rcx	       468	cache-tree.c	FUNCTION_41	IF_2	CALL_7
0x400152c	          0x4889c7	                            mov rdi, rax	       468	cache-tree.c	FUNCTION_41	IF_2	CALL_7
0x400152f	      0xe800000000	                          call 0x4001534	       468	cache-tree.c	FUNCTION_41	IF_2	CALL_7
0x4001534	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       470	cache-tree.c	FUNCTION_41	FOR_1
0x400153b	      0xe9aa000000	                           jmp 0x40015ea	       470	cache-tree.c	FUNCTION_41	FOR_1
0x4001540	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       471	cache-tree.c	FUNCTION_41	FOR_1
0x4001544	        0x488b4020	            mov rax, qword [rax + 0x20] 	       471	cache-tree.c	FUNCTION_41	FOR_1
0x4001548	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       471	cache-tree.c	FUNCTION_41	FOR_1
0x400154b	          0x4863d2	                         movsxd rdx, edx	       471	cache-tree.c	FUNCTION_41	FOR_1
0x400154e	        0x48c1e203	                              shl rdx, 3	       471	cache-tree.c	FUNCTION_41	FOR_1
0x4001552	          0x4801d0	                            add rax, rdx	       471	cache-tree.c	FUNCTION_41	FOR_1
0x4001555	          0x488b00	                    mov rax, qword [rax]	       471	cache-tree.c	FUNCTION_41	FOR_1
0x4001558	        0x488945f0	             mov qword [rbp - 0x10], rax	       471	cache-tree.c	FUNCTION_41	FOR_1
0x400155c	        0x837dec00	               cmp dword [rbp - 0x14], 0	       472	cache-tree.c	FUNCTION_41	FOR_1	IF_3
0x4001560	            0x745d	                            je 0x40015bf	       472	cache-tree.c	FUNCTION_41	FOR_1	IF_3
0x4001562	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       473	cache-tree.c	FUNCTION_41	FOR_1	IF_3
0x4001566	        0x488b4020	            mov rax, qword [rax + 0x20] 	       473	cache-tree.c	FUNCTION_41	FOR_1	IF_3
0x400156a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       473	cache-tree.c	FUNCTION_41	FOR_1	IF_3
0x400156d	          0x4863d2	                         movsxd rdx, edx	       473	cache-tree.c	FUNCTION_41	FOR_1	IF_3
0x4001570	        0x48c1e203	                              shl rdx, 3	       473	cache-tree.c	FUNCTION_41	FOR_1	IF_3
0x4001574	        0x4883ea08	                              sub rdx, 8	       473	cache-tree.c	FUNCTION_41	FOR_1	IF_3
0x4001578	          0x4801d0	                            add rax, rdx	       473	cache-tree.c	FUNCTION_41	FOR_1	IF_3
0x400157b	          0x488b00	                    mov rax, qword [rax]	       473	cache-tree.c	FUNCTION_41	FOR_1	IF_3
0x400157e	        0x488945f8	                mov qword [rbp - 8], rax	       473	cache-tree.c	FUNCTION_41	FOR_1	IF_3
0x4001582	        0x488b45f8	                mov rax, qword [rbp - 8]	       474	cache-tree.c	FUNCTION_41	FOR_1	IF_3	IF_4	CALL_8
0x4001586	          0x8b500c	              mov edx, dword [rax + 0xc]	       474	cache-tree.c	FUNCTION_41	FOR_1	IF_3	IF_4	CALL_8
0x4001589	        0x488b45f8	                mov rax, qword [rbp - 8]	       475	cache-tree.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x400158d	        0x488d7014	                   lea rsi, [rax + 0x14]	       475	cache-tree.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4001591	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       474	cache-tree.c	FUNCTION_41	FOR_1	IF_3	IF_4	CALL_8
0x4001595	          0x8b400c	              mov eax, dword [rax + 0xc]	       474	cache-tree.c	FUNCTION_41	FOR_1	IF_3	IF_4	CALL_8
0x4001598	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       474	cache-tree.c	FUNCTION_41	FOR_1	IF_3	IF_4	CALL_8
0x400159c	        0x488d7914	                   lea rdi, [rcx + 0x14]	       474	cache-tree.c	FUNCTION_41	FOR_1	IF_3	IF_4	CALL_8
0x40015a0	            0x89d1	                            mov ecx, edx	       474	cache-tree.c	FUNCTION_41	FOR_1	IF_3	IF_4	CALL_8
0x40015a2	          0x4889f2	                            mov rdx, rsi	       474	cache-tree.c	FUNCTION_41	FOR_1	IF_3	IF_4	CALL_8
0x40015a5	            0x89c6	                            mov esi, eax	       474	cache-tree.c	FUNCTION_41	FOR_1	IF_3	IF_4	CALL_8
0x40015a7	      0xe8bcedffff	               call sym.subtree_name_cmp	       474	cache-tree.c	FUNCTION_41	FOR_1	IF_3	IF_4	CALL_8
0x40015ac	            0x85c0	                           test eax, eax	       474	cache-tree.c	FUNCTION_41	FOR_1	IF_3	IF_4	CALL_8
0x40015ae	            0x7f0f	                            jg 0x40015bf	       474	cache-tree.c	FUNCTION_41	FOR_1	IF_3	IF_4	CALL_8
0x40015b0	      0xbf00000000	                              mov edi, 0	       476	cache-tree.c	FUNCTION_41	FOR_1	IF_3	CALL_9
0x40015b5	      0xb800000000	                              mov eax, 0	       476	cache-tree.c	FUNCTION_41	FOR_1	IF_3	CALL_9
0x40015ba	      0xe800000000	                          call 0x40015bf	       476	cache-tree.c	FUNCTION_41	FOR_1	IF_3	CALL_9
0x40015bf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       478	cache-tree.c	FUNCTION_41	FOR_1	CALL_10
0x40015c3	          0x8b500c	              mov edx, dword [rax + 0xc]	       478	cache-tree.c	FUNCTION_41	FOR_1	CALL_10
0x40015c6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       478	cache-tree.c	FUNCTION_41	FOR_1	CALL_10
0x40015ca	        0x488d7814	                   lea rdi, [rax + 0x14]	       478	cache-tree.c	FUNCTION_41	FOR_1	CALL_10
0x40015ce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       478	cache-tree.c	FUNCTION_41	FOR_1	CALL_10
0x40015d2	          0x488b30	                    mov rsi, qword [rax]	       478	cache-tree.c	FUNCTION_41	FOR_1	CALL_10
0x40015d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       478	cache-tree.c	FUNCTION_41	FOR_1	CALL_10
0x40015d9	            0x89d1	                            mov ecx, edx	       478	cache-tree.c	FUNCTION_41	FOR_1	CALL_10
0x40015db	          0x4889fa	                            mov rdx, rdi	       478	cache-tree.c	FUNCTION_41	FOR_1	CALL_10
0x40015de	          0x4889c7	                            mov rdi, rax	       478	cache-tree.c	FUNCTION_41	FOR_1	CALL_10
0x40015e1	      0xe8a9feffff	                      call sym.write_one	       478	cache-tree.c	FUNCTION_41	FOR_1	CALL_10
0x40015e6	        0x8345ec01	               add dword [rbp - 0x14], 1	       470	cache-tree.c	FUNCTION_41	FOR_1
0x40015ea	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       470	cache-tree.c	FUNCTION_41	FOR_1
0x40015ee	          0x8b4018	            mov eax, dword [rax + 0x18] 	       470	cache-tree.c	FUNCTION_41	FOR_1
0x40015f1	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       470	cache-tree.c	FUNCTION_41	FOR_1
0x40015f4	     0xf8f46ffffff	                            jg 0x4001540	       470	cache-tree.c	FUNCTION_41	FOR_1
0x40015fa	              0x90	                                     nop	       480	cache-tree.c	FUNCTION_41
0x40015fb	              0xc9	                                   leave	       480	cache-tree.c	FUNCTION_41
0x40015fc	              0xc3	                                     ret	       480	cache-tree.c	FUNCTION_41
prime_cache_tree_rec	CALL,9:IF,2:DO,0:WHILE,1:ELSE,1:functions,0:SWITCH,0:FOR,0	80
0x4001b90	              0x55	                                push rbp	       660	cache-tree.c	FUNCTION_48
0x4001b91	          0x4889e5	                            mov rbp, rsp	       660	cache-tree.c	FUNCTION_48
0x4001b94	        0x4883c480	             add rsp, 0xffffffffffffff80	       660	cache-tree.c	FUNCTION_48
0x4001b98	        0x48897d88	             mov qword [rbp - 0x78], rdi	       660	cache-tree.c	FUNCTION_48
0x4001b9c	        0x48897580	             mov qword [rbp - 0x80], rsi	       660	cache-tree.c	FUNCTION_48
0x4001ba0	    0x64488b042528	                mov rax, qword fs:[0x28]	       660	cache-tree.c	FUNCTION_48
0x4001ba9	        0x488945f8	                mov qword [rbp - 8], rax	       660	cache-tree.c	FUNCTION_48
0x4001bad	            0x31c0	                            xor eax, eax	       660	cache-tree.c	FUNCTION_48
0x4001baf	        0x488b4580	             mov rax, qword [rbp - 0x80]	       665	cache-tree.c	FUNCTION_48	CALL_1
0x4001bb3	        0x488d5004	                      lea rdx, [rax + 4]	       665	cache-tree.c	FUNCTION_48	CALL_1
0x4001bb7	        0x488b4588	             mov rax, qword [rbp - 0x78]	       665	cache-tree.c	FUNCTION_48	CALL_1
0x4001bbb	        0x4883c004	                              add rax, 4	       665	cache-tree.c	FUNCTION_48	CALL_1
0x4001bbf	          0x4889d6	                            mov rsi, rdx	       665	cache-tree.c	FUNCTION_48	CALL_1
0x4001bc2	          0x4889c7	                            mov rdi, rax	       665	cache-tree.c	FUNCTION_48	CALL_1
0x4001bc5	      0xe803e6ffff	                         call sym.oidcpy	       665	cache-tree.c	FUNCTION_48	CALL_1
0x4001bca	        0x488b4580	             mov rax, qword [rbp - 0x80]	       666	cache-tree.c	FUNCTION_48	CALL_2
0x4001bce	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       666	cache-tree.c	FUNCTION_48	CALL_2
0x4001bd2	        0x488b4580	             mov rax, qword [rbp - 0x80]	       666	cache-tree.c	FUNCTION_48	CALL_2
0x4001bd6	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       666	cache-tree.c	FUNCTION_48	CALL_2
0x4001bda	        0x488d45d0	                   lea rax, [rbp - 0x30]	       666	cache-tree.c	FUNCTION_48	CALL_2
0x4001bde	          0x4889ce	                            mov rsi, rcx	       666	cache-tree.c	FUNCTION_48	CALL_2
0x4001be1	          0x4889c7	                            mov rdi, rax	       666	cache-tree.c	FUNCTION_48	CALL_2
0x4001be4	      0xe800000000	                          call 0x4001be9	       666	cache-tree.c	FUNCTION_48	CALL_2
0x4001be9	    0xc7459c000000	               mov dword [rbp - 0x64], 0	       667	cache-tree.c	FUNCTION_48
0x4001bf0	      0xe987000000	                           jmp 0x4001c7c	       668	cache-tree.c	FUNCTION_48	WHILE_1	CALL_3
0x4001bf5	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       669	cache-tree.c	FUNCTION_48	WHILE_1	IF_1	CALL_4
0x4001bf8	      0x2500f00000	                         and eax, 0xf000	       669	cache-tree.c	FUNCTION_48	WHILE_1	IF_1	CALL_4
0x4001bfd	      0x3d00400000	                         cmp eax, 0x4000	       669	cache-tree.c	FUNCTION_48	WHILE_1	IF_1	CALL_4
0x4001c02	            0x7406	                            je 0x4001c0a	       669	cache-tree.c	FUNCTION_48	WHILE_1	IF_1	CALL_4
0x4001c04	        0x83459c01	               add dword [rbp - 0x64], 1	       670	cache-tree.c	FUNCTION_48	WHILE_1	IF_1
0x4001c08	            0xeb72	                           jmp 0x4001c7c	       670	cache-tree.c	FUNCTION_48	WHILE_1	IF_1
0x4001c0a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       673	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_5
0x4001c0e	          0x4889c7	                            mov rdi, rax	       673	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_5
0x4001c11	      0xe800000000	                          call 0x4001c16	       673	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_5
0x4001c16	        0x488945a0	             mov qword [rbp - 0x60], rax	       673	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_5
0x4001c1a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       674	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	IF_2
0x4001c1e	           0xfb600	                   movzx eax, byte [rax]	       674	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	IF_2
0x4001c21	          0x83e001	                              and eax, 1	       674	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	IF_2
0x4001c24	            0x84c0	                             test al, al	       674	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	IF_2
0x4001c26	            0x750c	                           jne 0x4001c34	       674	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	IF_2
0x4001c28	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       675	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_6
0x4001c2c	          0x4889c7	                            mov rdi, rax	       675	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_6
0x4001c2f	      0xe826e6ffff	                     call sym.parse_tree	       675	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_6
0x4001c34	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       676	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_7
0x4001c38	        0x488b4588	             mov rax, qword [rbp - 0x78]	       676	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_7
0x4001c3c	          0x4889d6	                            mov rsi, rdx	       676	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_7
0x4001c3f	          0x4889c7	                            mov rdi, rax	       676	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_7
0x4001c42	      0xe800000000	                          call 0x4001c47	       676	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_7
0x4001c47	        0x488945a8	             mov qword [rbp - 0x58], rax	       676	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_7
0x4001c4b	      0xe800000000	                          call 0x4001c50	       677	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_8
0x4001c50	          0x4889c2	                            mov rdx, rax	       677	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_8
0x4001c53	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       677	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_8
0x4001c57	          0x488910	                    mov qword [rax], rdx	       677	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_8
0x4001c5a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       678	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_9
0x4001c5e	          0x488b00	                    mov rax, qword [rax]	       678	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_9
0x4001c61	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       678	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_9
0x4001c65	          0x4889d6	                            mov rsi, rdx	       678	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_9
0x4001c68	          0x4889c7	                            mov rdi, rax	       678	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_9
0x4001c6b	      0xe820ffffff	           call sym.prime_cache_tree_rec	       678	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1	CALL_9
0x4001c70	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       679	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1
0x4001c74	          0x488b00	                    mov rax, qword [rax]	       679	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1
0x4001c77	            0x8b00	                    mov eax, dword [rax]	       679	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1
0x4001c79	           0x1459c	             add dword [rbp - 0x64], eax	       679	cache-tree.c	FUNCTION_48	WHILE_1	ELSE_1
0x4001c7c	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       668	cache-tree.c	FUNCTION_48	WHILE_1	CALL_3
0x4001c80	        0x488d45d0	                   lea rax, [rbp - 0x30]	       668	cache-tree.c	FUNCTION_48	WHILE_1	CALL_3
0x4001c84	          0x4889d6	                            mov rsi, rdx	       668	cache-tree.c	FUNCTION_48	WHILE_1	CALL_3
0x4001c87	          0x4889c7	                            mov rdi, rax	       668	cache-tree.c	FUNCTION_48	WHILE_1	CALL_3
0x4001c8a	      0xe800000000	                          call 0x4001c8f	       668	cache-tree.c	FUNCTION_48	WHILE_1	CALL_3
0x4001c8f	            0x85c0	                           test eax, eax	       668	cache-tree.c	FUNCTION_48	WHILE_1	CALL_3
0x4001c91	     0xf855effffff	                           jne 0x4001bf5	       668	cache-tree.c	FUNCTION_48	WHILE_1	CALL_3
0x4001c97	        0x488b4588	             mov rax, qword [rbp - 0x78]	       682	cache-tree.c	FUNCTION_48
0x4001c9b	          0x8b559c	             mov edx, dword [rbp - 0x64]	       682	cache-tree.c	FUNCTION_48
0x4001c9e	            0x8910	                    mov dword [rax], edx	       682	cache-tree.c	FUNCTION_48
0x4001ca0	              0x90	                                     nop	       683	cache-tree.c	FUNCTION_48
0x4001ca1	        0x488b45f8	                mov rax, qword [rbp - 8]	       683	cache-tree.c	FUNCTION_48
0x4001ca5	    0x644833042528	                xor rax, qword fs:[0x28]	       683	cache-tree.c	FUNCTION_48
0x4001cae	            0x7405	                            je 0x4001cb5	       683	cache-tree.c	FUNCTION_48
0x4001cb0	      0xe800000000	                          call 0x4001cb5	       683	cache-tree.c	FUNCTION_48
0x4001cb5	              0xc9	                                   leave	       683	cache-tree.c	FUNCTION_48
0x4001cb6	              0xc3	                                     ret	       683	cache-tree.c	FUNCTION_48
write_index_as_tree	CALL,12:IF,7:DO,0:WHILE,0:ELSE,1:functions,0:SWITCH,0:FOR,0	106
0x40019c1	              0x55	                                push rbp	       604	cache-tree.c	FUNCTION_46
0x40019c2	          0x4889e5	                            mov rbp, rsp	       604	cache-tree.c	FUNCTION_46
0x40019c5	        0x4883ec60	                           sub rsp, 0x60	       604	cache-tree.c	FUNCTION_46
0x40019c9	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       604	cache-tree.c	FUNCTION_46
0x40019cd	        0x488975c0	             mov qword [rbp - 0x40], rsi	       604	cache-tree.c	FUNCTION_46
0x40019d1	        0x488955b8	             mov qword [rbp - 0x48], rdx	       604	cache-tree.c	FUNCTION_46
0x40019d5	          0x894db4	             mov dword [rbp - 0x4c], ecx	       604	cache-tree.c	FUNCTION_46
0x40019d8	        0x4c8945a8	              mov qword [rbp - 0x58], r8	       604	cache-tree.c	FUNCTION_46
0x40019dc	    0x64488b042528	                mov rax, qword fs:[0x28]	       604	cache-tree.c	FUNCTION_46
0x40019e5	        0x488945f8	                mov qword [rbp - 8], rax	       604	cache-tree.c	FUNCTION_46
0x40019e9	            0x31c0	                            xor eax, eax	       604	cache-tree.c	FUNCTION_46
0x40019eb	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       606	cache-tree.c	FUNCTION_46
0x40019f3	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       607	cache-tree.c	FUNCTION_46
0x40019fa	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       609	cache-tree.c	FUNCTION_46	CALL_1
0x40019fe	        0x488d45e0	                   lea rax, [rbp - 0x20]	       609	cache-tree.c	FUNCTION_46	CALL_1
0x4001a02	      0xba01000000	                              mov edx, 1	       609	cache-tree.c	FUNCTION_46	CALL_1
0x4001a07	          0x4889ce	                            mov rsi, rcx	       609	cache-tree.c	FUNCTION_46	CALL_1
0x4001a0a	          0x4889c7	                            mov rdi, rax	       609	cache-tree.c	FUNCTION_46	CALL_1
0x4001a0d	      0xe800e8ffff	      call sym.hold_lock_file_for_update	       609	cache-tree.c	FUNCTION_46	CALL_1
0x4001a12	      0xe800000000	                          call 0x4001a17	       611	cache-tree.c	FUNCTION_46	CALL_3
0x4001a17	          0x4889c2	                            mov rdx, rax	       611	cache-tree.c	FUNCTION_46	CALL_3
0x4001a1a	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       611	cache-tree.c	FUNCTION_46	CALL_3
0x4001a1e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       611	cache-tree.c	FUNCTION_46	CALL_3
0x4001a22	          0x4889ce	                            mov rsi, rcx	       611	cache-tree.c	FUNCTION_46	CALL_3
0x4001a25	          0x4889c7	                            mov rdi, rax	       611	cache-tree.c	FUNCTION_46	CALL_3
0x4001a28	      0xe800000000	                          call 0x4001a2d	       611	cache-tree.c	FUNCTION_46	CALL_3
0x4001a2d	          0x8945d8	             mov dword [rbp - 0x28], eax	       611	cache-tree.c	FUNCTION_46	CALL_3
0x4001a30	        0x837dd800	               cmp dword [rbp - 0x28], 0	       612	cache-tree.c	FUNCTION_46	IF_1
0x4001a34	            0x790c	                           jns 0x4001a42	       612	cache-tree.c	FUNCTION_46	IF_1
0x4001a36	    0xc745d4ffffff	     mov dword [rbp - 0x2c], 0xffffffff 	       613	cache-tree.c	FUNCTION_46	IF_1
0x4001a3d	      0xe9ec000000	                           jmp 0x4001b2e	       614	cache-tree.c	FUNCTION_46	IF_1
0x4001a42	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       616	cache-tree.c	FUNCTION_46	IF_2
0x4001a45	          0x83e002	                              and eax, 2	       616	cache-tree.c	FUNCTION_46	IF_2
0x4001a48	            0x85c0	                           test eax, eax	       616	cache-tree.c	FUNCTION_46	IF_2
0x4001a4a	            0x7410	                            je 0x4001a5c	       616	cache-tree.c	FUNCTION_46	IF_2
0x4001a4c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       617	cache-tree.c	FUNCTION_46	CALL_4
0x4001a50	        0x4883c020	                           add rax, 0x20	       617	cache-tree.c	FUNCTION_46	CALL_4
0x4001a54	          0x4889c7	                            mov rdi, rax	       617	cache-tree.c	FUNCTION_46	CALL_4
0x4001a57	      0xe800000000	                          call 0x4001a5c	       617	cache-tree.c	FUNCTION_46	CALL_4
0x4001a5c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       619	cache-tree.c	FUNCTION_46	IF_3
0x4001a60	        0x488b4020	            mov rax, qword [rax + 0x20] 	       619	cache-tree.c	FUNCTION_46	IF_3
0x4001a64	          0x4885c0	                           test rax, rax	       619	cache-tree.c	FUNCTION_46	IF_3
0x4001a67	            0x7510	                           jne 0x4001a79	       619	cache-tree.c	FUNCTION_46	IF_3
0x4001a69	      0xe800000000	                          call 0x4001a6e	       620	cache-tree.c	FUNCTION_46	CALL_5
0x4001a6e	          0x4889c2	                            mov rdx, rax	       620	cache-tree.c	FUNCTION_46	CALL_5
0x4001a71	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       620	cache-tree.c	FUNCTION_46	CALL_5
0x4001a75	        0x48895020	             mov qword [rax + 0x20], rdx	       620	cache-tree.c	FUNCTION_46	CALL_5
0x4001a79	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       622	cache-tree.c	FUNCTION_46	CALL_6
0x4001a7d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       622	cache-tree.c	FUNCTION_46	CALL_6
0x4001a81	          0x4889c7	                            mov rdi, rax	       622	cache-tree.c	FUNCTION_46	CALL_6
0x4001a84	      0xe800000000	                          call 0x4001a89	       622	cache-tree.c	FUNCTION_46	CALL_6
0x4001a89	          0x8945dc	             mov dword [rbp - 0x24], eax	       622	cache-tree.c	FUNCTION_46	CALL_6
0x4001a8c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       623	cache-tree.c	FUNCTION_46	IF_4
0x4001a90	            0x7536	                           jne 0x4001ac8	       623	cache-tree.c	FUNCTION_46	IF_4
0x4001a92	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       624	cache-tree.c	FUNCTION_46	IF_4	IF_5	CALL_7
0x4001a95	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       624	cache-tree.c	FUNCTION_46	IF_4	IF_5	CALL_7
0x4001a99	            0x89d6	                            mov esi, edx	       624	cache-tree.c	FUNCTION_46	IF_4	IF_5	CALL_7
0x4001a9b	          0x4889c7	                            mov rdi, rax	       624	cache-tree.c	FUNCTION_46	IF_4	IF_5	CALL_7
0x4001a9e	      0xe800000000	                          call 0x4001aa3	       624	cache-tree.c	FUNCTION_46	IF_4	IF_5	CALL_7
0x4001aa3	            0x85c0	                           test eax, eax	       624	cache-tree.c	FUNCTION_46	IF_4	IF_5	CALL_7
0x4001aa5	            0x7909	                           jns 0x4001ab0	       624	cache-tree.c	FUNCTION_46	IF_4	IF_5	CALL_7
0x4001aa7	    0xc745d4feffff	     mov dword [rbp - 0x2c], 0xfffffffe 	       625	cache-tree.c	FUNCTION_46	IF_4	IF_5
0x4001aae	            0xeb7e	                           jmp 0x4001b2e	       626	cache-tree.c	FUNCTION_46	IF_4	IF_5
0x4001ab0	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       628	cache-tree.c	FUNCTION_46	IF_4	CALL_8
0x4001ab4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       628	cache-tree.c	FUNCTION_46	IF_4	CALL_8
0x4001ab8	      0xba01000000	                              mov edx, 1	       628	cache-tree.c	FUNCTION_46	IF_4	CALL_8
0x4001abd	          0x4889ce	                            mov rsi, rcx	       628	cache-tree.c	FUNCTION_46	IF_4	CALL_8
0x4001ac0	          0x4889c7	                            mov rdi, rax	       628	cache-tree.c	FUNCTION_46	IF_4	CALL_8
0x4001ac3	      0xe800000000	                          call 0x4001ac8	       628	cache-tree.c	FUNCTION_46	IF_4	CALL_8
0x4001ac8	      0x48837da800	               cmp qword [rbp - 0x58], 0	       637	cache-tree.c	FUNCTION_46	IF_6
0x4001acd	            0x7444	                            je 0x4001b13	       637	cache-tree.c	FUNCTION_46	IF_6
0x4001acf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       639	cache-tree.c	FUNCTION_46	IF_6	CALL_9
0x4001ad3	        0x488b4020	            mov rax, qword [rax + 0x20] 	       639	cache-tree.c	FUNCTION_46	IF_6	CALL_9
0x4001ad7	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       639	cache-tree.c	FUNCTION_46	IF_6	CALL_9
0x4001adb	          0x4889d6	                            mov rsi, rdx	       639	cache-tree.c	FUNCTION_46	IF_6	CALL_9
0x4001ade	          0x4889c7	                            mov rdi, rax	       639	cache-tree.c	FUNCTION_46	IF_6	CALL_9
0x4001ae1	      0xe838feffff	                call sym.cache_tree_find	       639	cache-tree.c	FUNCTION_46	IF_6	CALL_9
0x4001ae6	        0x488945f0	             mov qword [rbp - 0x10], rax	       639	cache-tree.c	FUNCTION_46	IF_6	CALL_9
0x4001aea	      0x48837df000	               cmp qword [rbp - 0x10], 0	       640	cache-tree.c	FUNCTION_46	IF_6	IF_7
0x4001aef	            0x7509	                           jne 0x4001afa	       640	cache-tree.c	FUNCTION_46	IF_6	IF_7
0x4001af1	    0xc745d4fdffff	     mov dword [rbp - 0x2c], 0xfffffffd 	       641	cache-tree.c	FUNCTION_46	IF_6	IF_7
0x4001af8	            0xeb34	                           jmp 0x4001b2e	       642	cache-tree.c	FUNCTION_46	IF_6	IF_7
0x4001afa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       644	cache-tree.c	FUNCTION_46	IF_6	CALL_10
0x4001afe	        0x488d5004	                      lea rdx, [rax + 4]	       644	cache-tree.c	FUNCTION_46	IF_6	CALL_10
0x4001b02	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       644	cache-tree.c	FUNCTION_46	IF_6	CALL_10
0x4001b06	          0x4889d6	                            mov rsi, rdx	       644	cache-tree.c	FUNCTION_46	IF_6	CALL_10
0x4001b09	          0x4889c7	                            mov rdi, rax	       644	cache-tree.c	FUNCTION_46	IF_6	CALL_10
0x4001b0c	      0xe8bce6ffff	                         call sym.oidcpy	       644	cache-tree.c	FUNCTION_46	IF_6	CALL_10
0x4001b11	            0xeb1b	                           jmp 0x4001b2e	       644	cache-tree.c	FUNCTION_46	IF_6	CALL_10
0x4001b13	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       647	cache-tree.c	FUNCTION_46	CALL_11
0x4001b17	        0x488b4020	            mov rax, qword [rax + 0x20] 	       647	cache-tree.c	FUNCTION_46	CALL_11
0x4001b1b	        0x488d5004	                      lea rdx, [rax + 4]	       647	cache-tree.c	FUNCTION_46	CALL_11
0x4001b1f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       647	cache-tree.c	FUNCTION_46	CALL_11
0x4001b23	          0x4889d6	                            mov rsi, rdx	       647	cache-tree.c	FUNCTION_46	CALL_11
0x4001b26	          0x4889c7	                            mov rdi, rax	       647	cache-tree.c	FUNCTION_46	CALL_11
0x4001b29	      0xe89fe6ffff	                         call sym.oidcpy	       647	cache-tree.c	FUNCTION_46	CALL_11
0x4001b2e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       650	cache-tree.c	FUNCTION_46	CALL_12
0x4001b32	          0x4889c7	                            mov rdi, rax	       650	cache-tree.c	FUNCTION_46	CALL_12
0x4001b35	      0xe805e7ffff	             call sym.rollback_lock_file	       650	cache-tree.c	FUNCTION_46	CALL_12
0x4001b3a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       651	cache-tree.c	FUNCTION_46
0x4001b3d	        0x488b4df8	                mov rcx, qword [rbp - 8]	       652	cache-tree.c	FUNCTION_46
0x4001b41	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       652	cache-tree.c	FUNCTION_46
0x4001b4a	            0x7405	                            je 0x4001b51	       652	cache-tree.c	FUNCTION_46
0x4001b4c	      0xe800000000	                          call 0x4001b51	       652	cache-tree.c	FUNCTION_46
0x4001b51	              0xc9	                                   leave	       652	cache-tree.c	FUNCTION_46
0x4001b52	              0xc3	                                     ret	       652	cache-tree.c	FUNCTION_46
oidcpy	CALL,1:IF,0:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	13
0x40001cd	              0x55	                                push rbp	       999	cache.h	FUNCTION_13
0x40001ce	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_13
0x40001d1	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_13
0x40001d5	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_13
0x40001d9	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_13
0x40001dd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_13	CALL_1
0x40001e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_13	CALL_1
0x40001e5	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_13	CALL_1
0x40001e8	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_13	CALL_1
0x40001eb	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_13	CALL_1
0x40001f0	              0x90	                                     nop	      1001	cache.h	FUNCTION_13
0x40001f1	              0xc9	                                   leave	      1001	cache.h	FUNCTION_13
0x40001f2	              0xc3	                                     ret	      1001	cache.h	FUNCTION_13
hashcmp	CALL,1:IF,0:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	13
0x400012c	              0x55	                                push rbp	       974	cache.h	FUNCTION_8
0x400012d	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_8
0x4000130	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_8
0x4000134	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_8
0x4000138	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_8
0x400013c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_8	CALL_1
0x4000140	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_8	CALL_1
0x4000144	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_8	CALL_1
0x4000149	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_8	CALL_1
0x400014c	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_8	CALL_1
0x400014f	      0xe800000000	                          call 0x4000154	       975	cache.h	FUNCTION_8	CALL_1
0x4000154	              0xc9	                                   leave	       976	cache.h	FUNCTION_8
0x4000155	              0xc3	                                     ret	       976	cache.h	FUNCTION_8
cache_tree	CALL,1:IF,0:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	12
0x4000279	              0x55	                                push rbp	        12	cache-tree.c	FUNCTION_28
0x400027a	          0x4889e5	                            mov rbp, rsp	        12	cache-tree.c	FUNCTION_28
0x400027d	        0x4883ec10	                           sub rsp, 0x10	        12	cache-tree.c	FUNCTION_28
0x4000281	      0xbe28000000	                           mov esi, 0x28	        13	cache-tree.c	FUNCTION_28	CALL_1
0x4000286	      0xbf01000000	                              mov edi, 1	        13	cache-tree.c	FUNCTION_28	CALL_1
0x400028b	      0xe800000000	                          call 0x4000290	        13	cache-tree.c	FUNCTION_28	CALL_1
0x4000290	        0x488945f8	                mov qword [rbp - 8], rax	        13	cache-tree.c	FUNCTION_28	CALL_1
0x4000294	        0x488b45f8	                mov rax, qword [rbp - 8]	        14	cache-tree.c	FUNCTION_28
0x4000298	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	        14	cache-tree.c	FUNCTION_28
0x400029e	        0x488b45f8	                mov rax, qword [rbp - 8]	        15	cache-tree.c	FUNCTION_28
0x40002a2	              0xc9	                                   leave	        16	cache-tree.c	FUNCTION_28
0x40002a3	              0xc3	                                     ret	        16	cache-tree.c	FUNCTION_28
move_array	CALL,2:IF,1:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	23
0x40000e1	              0x55	                                push rbp	       860	git-compat-util.h	FUNCTION_70
0x40000e2	          0x4889e5	                            mov rbp, rsp	       860	git-compat-util.h	FUNCTION_70
0x40000e5	        0x4883ec20	                           sub rsp, 0x20	       860	git-compat-util.h	FUNCTION_70
0x40000e9	        0x48897df8	                mov qword [rbp - 8], rdi	       860	git-compat-util.h	FUNCTION_70
0x40000ed	        0x488975f0	             mov qword [rbp - 0x10], rsi	       860	git-compat-util.h	FUNCTION_70
0x40000f1	        0x488955e8	             mov qword [rbp - 0x18], rdx	       860	git-compat-util.h	FUNCTION_70
0x40000f5	        0x48894de0	             mov qword [rbp - 0x20], rcx	       860	git-compat-util.h	FUNCTION_70
0x40000f9	      0x48837de800	               cmp qword [rbp - 0x18], 0	       861	git-compat-util.h	FUNCTION_70	IF_1
0x40000fe	            0x7429	                            je 0x4000129	       861	git-compat-util.h	FUNCTION_70	IF_1
0x4000100	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       862	git-compat-util.h	FUNCTION_70	CALL_2
0x4000104	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       862	git-compat-util.h	FUNCTION_70	CALL_2
0x4000108	          0x4889d6	                            mov rsi, rdx	       862	git-compat-util.h	FUNCTION_70	CALL_2
0x400010b	          0x4889c7	                            mov rdi, rax	       862	git-compat-util.h	FUNCTION_70	CALL_2
0x400010e	      0xe87cffffff	                        call sym.st_mult	       862	git-compat-util.h	FUNCTION_70	CALL_2
0x4000113	          0x4889c2	                            mov rdx, rax	       862	git-compat-util.h	FUNCTION_70	CALL_2
0x4000116	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       862	git-compat-util.h	FUNCTION_70	CALL_2
0x400011a	        0x488b45f8	                mov rax, qword [rbp - 8]	       862	git-compat-util.h	FUNCTION_70	CALL_2
0x400011e	          0x4889ce	                            mov rsi, rcx	       862	git-compat-util.h	FUNCTION_70	CALL_2
0x4000121	          0x4889c7	                            mov rdi, rax	       862	git-compat-util.h	FUNCTION_70	CALL_2
0x4000124	      0xe800000000	                          call 0x4000129	       862	git-compat-util.h	FUNCTION_70	CALL_2
0x4000129	              0x90	                                     nop	       863	git-compat-util.h	FUNCTION_70
0x400012a	              0xc9	                                   leave	       863	git-compat-util.h	FUNCTION_70
0x400012b	              0xc3	                                     ret	       863	git-compat-util.h	FUNCTION_70
cache_tree_invalidate_path	CALL,1:IF,1:DO,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:FOR,0	22
0x4000822	              0x55	                                push rbp	       146	cache-tree.c	FUNCTION_35
0x4000823	          0x4889e5	                            mov rbp, rsp	       146	cache-tree.c	FUNCTION_35
0x4000826	        0x4883ec10	                           sub rsp, 0x10	       146	cache-tree.c	FUNCTION_35
0x400082a	        0x48897df8	                mov qword [rbp - 8], rdi	       146	cache-tree.c	FUNCTION_35
0x400082e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       146	cache-tree.c	FUNCTION_35
0x4000832	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	cache-tree.c	FUNCTION_35	IF_1	CALL_1
0x4000836	        0x488b4020	            mov rax, qword [rax + 0x20] 	       147	cache-tree.c	FUNCTION_35	IF_1	CALL_1
0x400083a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       147	cache-tree.c	FUNCTION_35	IF_1	CALL_1
0x400083e	          0x4889d6	                            mov rsi, rdx	       147	cache-tree.c	FUNCTION_35	IF_1	CALL_1
0x4000841	          0x4889c7	                            mov rdi, rax	       147	cache-tree.c	FUNCTION_35	IF_1	CALL_1
0x4000844	      0xe86efeffff	             call sym.do_invalidate_path	       147	cache-tree.c	FUNCTION_35	IF_1	CALL_1
0x4000849	            0x85c0	                           test eax, eax	       147	cache-tree.c	FUNCTION_35	IF_1	CALL_1
0x400084b	            0x7413	                            je 0x4000860	       147	cache-tree.c	FUNCTION_35	IF_1	CALL_1
0x400084d	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	cache-tree.c	FUNCTION_35	IF_1
0x4000851	          0x8b4014	            mov eax, dword [rax + 0x14] 	       148	cache-tree.c	FUNCTION_35	IF_1
0x4000854	          0x83c820	                            or eax, 0x20	       148	cache-tree.c	FUNCTION_35	IF_1
0x4000857	            0x89c2	                            mov edx, eax	       148	cache-tree.c	FUNCTION_35	IF_1
0x4000859	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	cache-tree.c	FUNCTION_35	IF_1
0x400085d	          0x895014	             mov dword [rax + 0x14], edx	       148	cache-tree.c	FUNCTION_35	IF_1
0x4000860	              0x90	                                     nop	       149	cache-tree.c	FUNCTION_35
0x4000861	              0xc9	                                   leave	       149	cache-tree.c	FUNCTION_35
0x4000862	              0xc3	                                     ret	       149	cache-tree.c	FUNCTION_35
