cache_tree_invalidate_path	WHILE,0:FOR,0:DO,0:functions,0:IF,1:SWITCH,0:ELSE,0:CALL,1	9
0x4000f63	              0x53	                                push rbx	       146	cache-tree.c	FUNCTION_8
0x4000f64	          0x4889fb	                            mov rbx, rdi	       146	cache-tree.c	FUNCTION_8
0x4000f67	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	       147	cache-tree.c	FUNCTION_8	IF_1	CALL_1
0x4000f6b	      0xe801f5ffff	             call sym.do_invalidate_path	       147	cache-tree.c	FUNCTION_8	IF_1	CALL_1
0x4000f70	            0x85c0	                           test eax, eax	       147	cache-tree.c	FUNCTION_8	IF_1	CALL_1
0x4000f72	            0x7404	                            je 0x4000f78	       147	cache-tree.c	FUNCTION_8	IF_1	CALL_1
0x4000f74	        0x834b1420	             or dword [rbx + 0x14], 0x20	       148	cache-tree.c	FUNCTION_8	IF_1
0x4000f78	              0x5b	                                 pop rbx	       149	cache-tree.c	FUNCTION_8
0x4000f79	              0xc3	                                     ret	       149	cache-tree.c	FUNCTION_8
cache_tree_update	WHILE,0:FOR,0:DO,0:functions,0:IF,2:SWITCH,0:ELSE,0:CALL,2	149
0x4000fe8	            0x4157	                                push r15	       427	cache-tree.c	FUNCTION_13
0x4000fea	            0x4156	                                push r14	       427	cache-tree.c	FUNCTION_13
0x4000fec	            0x4155	                                push r13	       427	cache-tree.c	FUNCTION_13
0x4000fee	            0x4154	                                push r12	       427	cache-tree.c	FUNCTION_13
0x4000ff0	              0x55	                                push rbp	       427	cache-tree.c	FUNCTION_13
0x4000ff1	              0x53	                                push rbx	       427	cache-tree.c	FUNCTION_13
0x4000ff2	        0x4883ec48	                           sub rsp, 0x48	       427	cache-tree.c	FUNCTION_13
0x4000ff6	      0x48897c2428	             mov qword [rsp + 0x28], rdi	       427	cache-tree.c	FUNCTION_13
0x4000ffb	        0x89742424	             mov dword [rsp + 0x24], esi	       427	cache-tree.c	FUNCTION_13
0x4000fff	    0x64488b142528	                mov rdx, qword fs:[0x28]	       427	cache-tree.c	FUNCTION_13
0x4001008	      0x4889542438	             mov qword [rsp + 0x38], rdx	       427	cache-tree.c	FUNCTION_13
0x400100d	            0x31d2	                            xor edx, edx	       427	cache-tree.c	FUNCTION_13
0x400100f	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	       428	cache-tree.c	FUNCTION_13
0x4001013	      0x4889542418	             mov qword [rsp + 0x18], rdx	       428	cache-tree.c	FUNCTION_13
0x4001018	          0x488b17	                    mov rdx, qword [rdi]	       429	cache-tree.c	FUNCTION_13
0x400101b	      0x4889542410	             mov qword [rsp + 0x10], rdx	       429	cache-tree.c	FUNCTION_13
0x4001020	          0x8b470c	              mov eax, dword [rdi + 0xc]	       430	cache-tree.c	FUNCTION_13
0x4001023	        0x89442420	             mov dword [rsp + 0x20], eax	       430	cache-tree.c	FUNCTION_13
0x4001027	          0x4189f6	                           mov r14d, esi	       155	cache-tree.c	FUNCTION_9
0x400102a	        0x4183e608	                             and r14d, 8	       155	cache-tree.c	FUNCTION_9
0x400102e	            0x85c0	                           test eax, eax	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001030	     0xf8e8a000000	                           jle 0x40010c0	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001036	          0x4889d3	                            mov rbx, rdx	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001039	          0x8d40ff	                      lea eax, [rax - 1]	       159	cache-tree.c	FUNCTION_9	FOR_1
0x400103c	      0x4c8d6cc208	              lea r13, [rdx + rax*8 + 8]	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001041	    0x41bc00000000	                             mov r12d, 0	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001047	          0x488b2b	                    mov rbp, qword [rbx]	       160	cache-tree.c	FUNCTION_9	FOR_1
0x400104a	    0xf74538003000	        test dword [rbp + 0x38], 0x3000 	       161	cache-tree.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x4001051	            0x745b	                            je 0x40010ae	       161	cache-tree.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x4001053	          0x4585f6	                         test r14d, r14d	       162	cache-tree.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x4001056	     0xf85ad010000	                           jne 0x4001209	       162	cache-tree.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x400105c	        0x4183c401	                             add r12d, 1	       164	cache-tree.c	FUNCTION_9	FOR_1	IF_1	IF_3
0x4001060	        0x4183fc0a	                           cmp r12d, 0xa	       164	cache-tree.c	FUNCTION_9	FOR_1	IF_1	IF_3
0x4001064	            0x7e1d	                           jle 0x4001083	       164	cache-tree.c	FUNCTION_9	FOR_1	IF_1	IF_3
0x4001066	    0x488b0d000000	            mov rcx, qword [0x0400106d] 	        97	stdio2.h	FUNCTION_30	CALL_1
0x400106d	      0xba04000000	                              mov edx, 4	        97	stdio2.h	FUNCTION_30	CALL_1
0x4001072	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_30	CALL_1
0x4001077	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	FUNCTION_30	CALL_1
0x400107c	      0xe800000000	                          call 0x4001081	        97	stdio2.h	FUNCTION_30	CALL_1
0x4001081	            0xeb34	                           jmp 0x40010b7	        97	stdio2.h	FUNCTION_30	CALL_1
0x4001083	        0x488d7d44	                   lea rdi, [rbp + 0x44]	       168	cache-tree.c	FUNCTION_9	FOR_1	IF_1	CALL_3
0x4001087	      0xe800000000	                          call 0x400108c	       168	cache-tree.c	FUNCTION_9	FOR_1	IF_1	CALL_3
0x400108c	          0x4989c0	                             mov r8, rax	       168	cache-tree.c	FUNCTION_9	FOR_1	IF_1	CALL_3
0x400108f	        0x488d4d58	                   lea rcx, [rbp + 0x58]	        97	stdio2.h	FUNCTION_30	CALL_1
0x4001093	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_30	CALL_1
0x4001098	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_30	CALL_1
0x400109d	    0x488b3d000000	            mov rdi, qword [0x040010a4] 	        97	stdio2.h	FUNCTION_30	CALL_1
0x40010a4	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_30	CALL_1
0x40010a9	      0xe800000000	                          call 0x40010ae	        97	stdio2.h	FUNCTION_30	CALL_1
0x40010ae	        0x4883c308	                              add rbx, 8	        97	stdio2.h	FUNCTION_30	CALL_1
0x40010b2	          0x4c39eb	                            cmp rbx, r13	       159	cache-tree.c	FUNCTION_9	FOR_1
0x40010b5	            0x7590	                           jne 0x4001047	       159	cache-tree.c	FUNCTION_9	FOR_1
0x40010b7	          0x4585e4	                         test r12d, r12d	       172	cache-tree.c	FUNCTION_9	IF_4
0x40010ba	     0xf8549010000	                           jne 0x4001209	       172	cache-tree.c	FUNCTION_9	IF_4
0x40010c0	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40010c4	            0x89f0	                            mov eax, esi	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40010c6	          0x83e801	                              sub eax, 1	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40010c9	            0x85c0	                           test eax, eax	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40010cb	     0xf8ee4000000	                           jle 0x40011b5	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40010d1	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40010d6	          0x4889d5	                            mov rbp, rdx	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40010d9	          0x8d46fe	                      lea eax, [rsi - 2]	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40010dc	      0x488d44c208	              lea rax, [rdx + rax*8 + 8]	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40010e1	        0x48890424	                    mov qword [rsp], rax	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40010e5	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40010ed	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	       187	cache-tree.c	FUNCTION_9	FOR_2	CALL_5
0x40010f4	        0x488b4500	                    mov rax, qword [rbp]	       185	cache-tree.c	FUNCTION_9	FOR_2
0x40010f8	        0x4c8d6058	                   lea r12, [rax + 0x58]	       185	cache-tree.c	FUNCTION_9	FOR_2
0x40010fc	        0x4c8b7508	                mov r14, qword [rbp + 8]	       186	cache-tree.c	FUNCTION_9	FOR_2
0x4001100	        0x4d8d6e58	                   lea r13, [r14 + 0x58]	       186	cache-tree.c	FUNCTION_9	FOR_2
0x4001104	      0xb800000000	                              mov eax, 0	       187	cache-tree.c	FUNCTION_9	FOR_2	CALL_5
0x4001109	          0x4c89f9	                            mov rcx, r15	       187	cache-tree.c	FUNCTION_9	FOR_2	CALL_5
0x400110c	          0x4c89e7	                            mov rdi, r12	       187	cache-tree.c	FUNCTION_9	FOR_2	CALL_5
0x400110f	            0xf2ae	              repne scasb al, byte [rdi]	       187	cache-tree.c	FUNCTION_9	FOR_2	CALL_5
0x4001111	          0x48f7d1	                                 not rcx	       187	cache-tree.c	FUNCTION_9	FOR_2	CALL_5
0x4001114	        0x488d59ff	                      lea rbx, [rcx - 1]	       187	cache-tree.c	FUNCTION_9	FOR_2	CALL_5
0x4001118	          0x4863db	                         movsxd rbx, ebx	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x400111b	          0x4c89f9	                            mov rcx, r15	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x400111e	          0x4c89ef	                            mov rdi, r13	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x4001121	            0xf2ae	              repne scasb al, byte [rdi]	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x4001123	          0x4889c8	                            mov rax, rcx	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x4001126	          0x48f7d0	                                 not rax	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x4001129	        0x4883e801	                              sub rax, 1	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x400112d	          0x4839c3	                            cmp rbx, rax	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x4001130	            0x7366	                           jae 0x4001198	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x4001132	          0x4889da	                            mov rdx, rbx	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_7
0x4001135	          0x4c89ee	                            mov rsi, r13	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_7
0x4001138	          0x4c89e7	                            mov rdi, r12	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_7
0x400113b	      0xe800000000	                          call 0x4001140	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_7
0x4001140	            0x85c0	                           test eax, eax	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x4001142	            0x7554	                           jne 0x4001198	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x4001144	    0x41807c1e582f	      cmp byte [r14 + rbx + 0x58], 0x2f 	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_7
0x400114a	            0x754c	                           jne 0x4001198	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_7
0x400114c	      0x8344240c01	                add dword [rsp + 0xc], 1	       191	cache-tree.c	FUNCTION_9	FOR_2	IF_5	IF_6
0x4001151	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       191	cache-tree.c	FUNCTION_9	FOR_2	IF_5	IF_6
0x4001155	          0x83f80a	                            cmp eax, 0xa	       191	cache-tree.c	FUNCTION_9	FOR_2	IF_5	IF_6
0x4001158	            0x7e1d	                           jle 0x4001177	       191	cache-tree.c	FUNCTION_9	FOR_2	IF_5	IF_6
0x400115a	    0x488b0d000000	            mov rcx, qword [0x04001161] 	        97	stdio2.h	FUNCTION_30	CALL_1
0x4001161	      0xba04000000	                              mov edx, 4	        97	stdio2.h	FUNCTION_30	CALL_1
0x4001166	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_30	CALL_1
0x400116b	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	FUNCTION_30	CALL_1
0x4001170	      0xe800000000	                          call 0x4001175	        97	stdio2.h	FUNCTION_30	CALL_1
0x4001175	            0xeb2f	                           jmp 0x40011a6	        97	stdio2.h	FUNCTION_30	CALL_1
0x4001177	          0x4d89e8	                             mov r8, r13	        97	stdio2.h	FUNCTION_30	CALL_1
0x400117a	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	FUNCTION_30	CALL_1
0x400117d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_30	CALL_1
0x4001182	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_30	CALL_1
0x4001187	    0x488b3d000000	            mov rdi, qword [0x0400118e] 	        97	stdio2.h	FUNCTION_30	CALL_1
0x400118e	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_30	CALL_1
0x4001193	      0xe800000000	                          call 0x4001198	        97	stdio2.h	FUNCTION_30	CALL_1
0x4001198	        0x4883c508	                              add rbp, 8	        97	stdio2.h	FUNCTION_30	CALL_1
0x400119c	        0x483b2c24	                    cmp rbp, qword [rsp]	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40011a0	     0xf854effffff	                           jne 0x40010f4	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40011a6	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       199	cache-tree.c	FUNCTION_9	IF_7
0x40011ab	           0xf95c0	                                setne al	       199	cache-tree.c	FUNCTION_9	IF_7
0x40011ae	           0xfb6c0	                           movzx eax, al	       199	cache-tree.c	FUNCTION_9	IF_7
0x40011b1	            0xf7d8	                                 neg eax	       433	cache-tree.c	FUNCTION_13	IF_1
0x40011b3	            0x7542	                           jne 0x40011f7	       433	cache-tree.c	FUNCTION_13	IF_1
0x40011b5	        0x4883ec08	                              sub rsp, 8	       435	cache-tree.c	FUNCTION_13	CALL_2
0x40011b9	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       435	cache-tree.c	FUNCTION_13	CALL_2
0x40011bd	              0x50	                                push rax	       435	cache-tree.c	FUNCTION_13	CALL_2
0x40011be	      0x4c8d4c2444	                    lea r9, [rsp + 0x44]	       435	cache-tree.c	FUNCTION_13	CALL_2
0x40011c3	    0x41b800000000	                              mov r8d, 0	       435	cache-tree.c	FUNCTION_13	CALL_2
0x40011c9	      0xb900000000	                              mov ecx, 0	       435	cache-tree.c	FUNCTION_13	CALL_2
0x40011ce	        0x8b542430	            mov edx, dword [rsp + 0x30] 	       435	cache-tree.c	FUNCTION_13	CALL_2
0x40011d2	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       435	cache-tree.c	FUNCTION_13	CALL_2
0x40011d7	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       435	cache-tree.c	FUNCTION_13	CALL_2
0x40011dc	      0xe8a1f3ffff	                     call sym.update_one	       435	cache-tree.c	FUNCTION_13	CALL_2
0x40011e1	        0x4883c410	                           add rsp, 0x10	       436	cache-tree.c	FUNCTION_13	IF_2
0x40011e5	            0x85c0	                           test eax, eax	       436	cache-tree.c	FUNCTION_13	IF_2
0x40011e7	            0x780e	                            js 0x40011f7	       436	cache-tree.c	FUNCTION_13	IF_2
0x40011e9	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       438	cache-tree.c	FUNCTION_13
0x40011ee	        0x83481420	             or dword [rax + 0x14], 0x20	       438	cache-tree.c	FUNCTION_13
0x40011f2	      0xb800000000	                              mov eax, 0	       439	cache-tree.c	FUNCTION_13
0x40011f7	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       440	cache-tree.c	FUNCTION_13
0x40011fc	    0x644833342528	                xor rsi, qword fs:[0x28]	       440	cache-tree.c	FUNCTION_13
0x4001205	            0x740e	                            je 0x4001215	       440	cache-tree.c	FUNCTION_13
0x4001207	            0xeb07	                           jmp 0x4001210	       440	cache-tree.c	FUNCTION_13
0x4001209	      0xb8ffffffff	                     mov eax, 0xffffffff	       439	cache-tree.c	FUNCTION_13
0x400120e	            0xebe7	                           jmp 0x40011f7	       439	cache-tree.c	FUNCTION_13
0x4001210	      0xe800000000	                          call 0x4001215	       440	cache-tree.c	FUNCTION_13
0x4001215	        0x4883c448	                           add rsp, 0x48	       440	cache-tree.c	FUNCTION_13
0x4001219	              0x5b	                                 pop rbx	       440	cache-tree.c	FUNCTION_13
0x400121a	              0x5d	                                 pop rbp	       440	cache-tree.c	FUNCTION_13
0x400121b	            0x415c	                                 pop r12	       440	cache-tree.c	FUNCTION_13
0x400121d	            0x415d	                                 pop r13	       440	cache-tree.c	FUNCTION_13
0x400121f	            0x415e	                                 pop r14	       440	cache-tree.c	FUNCTION_13
0x4001221	            0x415f	                                 pop r15	       440	cache-tree.c	FUNCTION_13
0x4001223	              0xc3	                                     ret	       440	cache-tree.c	FUNCTION_13
update_main_cache_tree	WHILE,0:FOR,0:DO,0:functions,0:IF,1:SWITCH,0:ELSE,0:CALL,2	11
0x4001468	              0x53	                                push rbx	       726	cache-tree.c	FUNCTION_25
0x4001469	            0x89fb	                            mov ebx, edi	       726	cache-tree.c	FUNCTION_25
0x400146b	    0x48833d000000	               cmp qword [0x04001473], 0	       727	cache-tree.c	FUNCTION_25	IF_1
0x4001473	            0x750c	                           jne 0x4001481	       727	cache-tree.c	FUNCTION_25	IF_1
0x4001475	      0xe800000000	                          call 0x400147a	       728	cache-tree.c	FUNCTION_25	CALL_1
0x400147a	    0x488905000000	            mov qword [0x04001481], rax 	       728	cache-tree.c	FUNCTION_25	CALL_1
0x4001481	            0x89de	                            mov esi, ebx	       729	cache-tree.c	FUNCTION_25	CALL_2
0x4001483	      0xbf00000000	                              mov edi, 0	       729	cache-tree.c	FUNCTION_25	CALL_2
0x4001488	      0xe800000000	                          call 0x400148d	       729	cache-tree.c	FUNCTION_25	CALL_2
0x400148d	              0x5b	                                 pop rbx	       730	cache-tree.c	FUNCTION_25
0x400148e	              0xc3	                                     ret	       730	cache-tree.c	FUNCTION_25
write_one	WHILE,0:FOR,1:DO,0:functions,0:IF,4:SWITCH,0:ELSE,1:CALL,10	74
0x40002e6	            0x4155	                                push r13	       444	cache-tree.c	FUNCTION_14
0x40002e8	            0x4154	                                push r12	       444	cache-tree.c	FUNCTION_14
0x40002ea	              0x55	                                push rbp	       444	cache-tree.c	FUNCTION_14
0x40002eb	              0x53	                                push rbx	       444	cache-tree.c	FUNCTION_14
0x40002ec	        0x4883ec08	                              sub rsp, 8	       444	cache-tree.c	FUNCTION_14
0x40002f0	          0x4989fd	                            mov r13, rdi	       444	cache-tree.c	FUNCTION_14
0x40002f3	          0x4989f4	                            mov r12, rsi	       444	cache-tree.c	FUNCTION_14
0x40002f6	          0x4889d5	                            mov rbp, rdx	       444	cache-tree.c	FUNCTION_14
0x40002f9	            0x89cb	                            mov ebx, ecx	       444	cache-tree.c	FUNCTION_14
0x40002fb	          0x8d7164	                   lea esi, [rcx + 0x64]	       453	cache-tree.c	FUNCTION_14	CALL_1
0x40002fe	          0x4863f6	                         movsxd rsi, esi	       453	cache-tree.c	FUNCTION_14	CALL_1
0x4000301	      0xe800000000	                          call 0x4000306	       453	cache-tree.c	FUNCTION_14	CALL_1
0x4000306	          0x4863d3	                         movsxd rdx, ebx	       454	cache-tree.c	FUNCTION_14	CALL_2
0x4000309	          0x4889ee	                            mov rsi, rbp	       454	cache-tree.c	FUNCTION_14	CALL_2
0x400030c	          0x4c89ef	                            mov rdi, r13	       454	cache-tree.c	FUNCTION_14	CALL_2
0x400030f	      0xe800000000	                          call 0x4000314	       454	cache-tree.c	FUNCTION_14	CALL_2
0x4000314	      0x458b442418	            mov r8d, dword [r12 + 0x18] 	       455	cache-tree.c	FUNCTION_14	CALL_3
0x4000319	        0x418b0c24	                    mov ecx, dword [r12]	       455	cache-tree.c	FUNCTION_14	CALL_3
0x400031d	      0xba00000000	                              mov edx, 0	       455	cache-tree.c	FUNCTION_14	CALL_3
0x4000322	      0xbe00000000	                              mov esi, 0	       455	cache-tree.c	FUNCTION_14	CALL_3
0x4000327	          0x4c89ef	                            mov rdi, r13	       455	cache-tree.c	FUNCTION_14	CALL_3
0x400032a	      0xb800000000	                              mov eax, 0	       455	cache-tree.c	FUNCTION_14	CALL_3
0x400032f	      0xe800000000	                          call 0x4000334	       455	cache-tree.c	FUNCTION_14	CALL_3
0x4000334	      0x41833c2400	                      cmp dword [r12], 0	       467	cache-tree.c	FUNCTION_14	IF_2
0x4000339	            0x781c	                            js 0x4000357	       467	cache-tree.c	FUNCTION_14	IF_2
0x400033b	    0x488b05000000	            mov rax, qword [0x04000342] 	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_7
0x4000342	        0x488b4058	            mov rax, qword [rax + 0x58] 	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_7
0x4000346	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_7
0x400034a	      0x498d742404	                      lea rsi, [r12 + 4]	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_7
0x400034f	          0x4c89ef	                            mov rdi, r13	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_7
0x4000352	      0xe800000000	                          call 0x4000357	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_7
0x4000357	    0x41837c241800	               cmp dword [r12 + 0x18], 0	       470	cache-tree.c	FUNCTION_14	FOR_1
0x400035d	            0x7f6c	                            jg 0x40003cb	       470	cache-tree.c	FUNCTION_14	FOR_1
0x400035f	            0xeb79	                           jmp 0x40003da	       470	cache-tree.c	FUNCTION_14	FOR_1
0x4000361	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	       471	cache-tree.c	FUNCTION_14	FOR_1
0x4000366	          0x4863c5	                         movsxd rax, ebp	       471	cache-tree.c	FUNCTION_14	FOR_1
0x4000369	    0x488d0cc50000	                        lea rcx, [rax*8]	       471	cache-tree.c	FUNCTION_14	FOR_1
0x4000371	        0x488b1cc2	            mov rbx, qword [rdx + rax*8]	       471	cache-tree.c	FUNCTION_14	FOR_1
0x4000375	            0x85ed	                           test ebp, ebp	       472	cache-tree.c	FUNCTION_14	FOR_1	IF_3
0x4000377	            0x7434	                            je 0x40003ad	       472	cache-tree.c	FUNCTION_14	FOR_1	IF_3
0x4000379	      0x488b740af8	          mov rsi, qword [rdx + rcx - 8]	       473	cache-tree.c	FUNCTION_14	FOR_1	IF_3
0x400037e	          0x8b460c	              mov eax, dword [rsi + 0xc]	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_8
0x4000381	          0x8b530c	              mov edx, dword [rbx + 0xc]	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_8
0x4000384	            0x39d0	                            cmp eax, edx	        38	cache-tree.c	FUNCTION_3	IF_1
0x4000386	            0x7f16	                            jg 0x400039e	        38	cache-tree.c	FUNCTION_3	IF_1
0x4000388	            0x7c23	                            jl 0x40003ad	        40	cache-tree.c	FUNCTION_3	IF_2
0x400038a	          0x4863d2	                         movsxd rdx, edx	        42	cache-tree.c	FUNCTION_3	CALL_1
0x400038d	        0x4883c614	                           add rsi, 0x14	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000391	        0x488d7b14	                   lea rdi, [rbx + 0x14]	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000395	      0xe800000000	                          call 0x400039a	        42	cache-tree.c	FUNCTION_3	CALL_1
0x400039a	            0x85c0	                           test eax, eax	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_8
0x400039c	            0x7f0f	                            jg 0x40003ad	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_8
0x400039e	      0xbf00000000	                              mov edi, 0	       476	cache-tree.c	FUNCTION_14	FOR_1	IF_3	CALL_9
0x40003a3	      0xb800000000	                              mov eax, 0	       476	cache-tree.c	FUNCTION_14	FOR_1	IF_3	CALL_9
0x40003a8	      0xe800000000	                          call 0x40003ad	       476	cache-tree.c	FUNCTION_14	FOR_1	IF_3	CALL_9
0x40003ad	          0x8b4b0c	              mov ecx, dword [rbx + 0xc]	       478	cache-tree.c	FUNCTION_14	FOR_1	CALL_10
0x40003b0	        0x488d5314	                   lea rdx, [rbx + 0x14]	       478	cache-tree.c	FUNCTION_14	FOR_1	CALL_10
0x40003b4	          0x488b33	                    mov rsi, qword [rbx]	       478	cache-tree.c	FUNCTION_14	FOR_1	CALL_10
0x40003b7	          0x4c89ef	                            mov rdi, r13	       478	cache-tree.c	FUNCTION_14	FOR_1	CALL_10
0x40003ba	      0xe827ffffff	                      call sym.write_one	       478	cache-tree.c	FUNCTION_14	FOR_1	CALL_10
0x40003bf	          0x83c501	                              add ebp, 1	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40003c2	      0x41396c2418	            cmp dword [r12 + 0x18], ebp 	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40003c7	            0x7f98	                            jg 0x4000361	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40003c9	            0xeb0f	                           jmp 0x40003da	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40003cb	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40003d0	          0x488b18	                    mov rbx, qword [rax]	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40003d3	      0xbd00000000	                              mov ebp, 0	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40003d8	            0xebd3	                           jmp 0x40003ad	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40003da	        0x4883c408	                              add rsp, 8	       480	cache-tree.c	FUNCTION_14
0x40003de	              0x5b	                                 pop rbx	       480	cache-tree.c	FUNCTION_14
0x40003df	              0x5d	                                 pop rbp	       480	cache-tree.c	FUNCTION_14
0x40003e0	            0x415c	                                 pop r12	       480	cache-tree.c	FUNCTION_14
0x40003e2	            0x415d	                                 pop r13	       480	cache-tree.c	FUNCTION_14
0x40003e4	              0xc3	                                     ret	       480	cache-tree.c	FUNCTION_14
cache_tree_matches_traversal	WHILE,0:FOR,0:DO,0:functions,0:IF,1:SWITCH,0:ELSE,0:CALL,3	30
0x400140d	              0x55	                                push rbp	       715	cache-tree.c	FUNCTION_24
0x400140e	              0x53	                                push rbx	       715	cache-tree.c	FUNCTION_24
0x400140f	        0x4883ec08	                              sub rsp, 8	       715	cache-tree.c	FUNCTION_24
0x4001413	          0x4889f5	                            mov rbp, rsi	       715	cache-tree.c	FUNCTION_24
0x4001416	          0x4889d6	                            mov rsi, rdx	       718	cache-tree.c	FUNCTION_24	CALL_1
0x4001419	      0xe8a1eeffff	 call sym.find_cache_tree_from_traversal	       718	cache-tree.c	FUNCTION_24	CALL_1
0x400141e	        0x488b7508	                mov rsi, qword [rbp + 8]	       719	cache-tree.c	FUNCTION_24	CALL_2
0x4001422	          0x4889c7	                            mov rdi, rax	       719	cache-tree.c	FUNCTION_24	CALL_2
0x4001425	      0xe829eeffff	                call sym.cache_tree_find	       719	cache-tree.c	FUNCTION_24	CALL_2
0x400142a	          0x4885c0	                           test rax, rax	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x400142d	            0x7424	                            je 0x4001453	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x400142f	            0x8b18	                    mov ebx, dword [rax]	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x4001431	            0x85db	                           test ebx, ebx	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x4001433	            0x7e25	                           jle 0x400145a	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x4001435	        0x488d7004	                      lea rsi, [rax + 4]	       975	cache.h	FUNCTION_53	CALL_1
0x4001439	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_53	CALL_1
0x400143e	        0x488b7d00	                    mov rdi, qword [rbp]	       975	cache.h	FUNCTION_53	CALL_1
0x4001442	      0xe800000000	                          call 0x4001447	       975	cache.h	FUNCTION_53	CALL_1
0x4001447	            0x85c0	                           test eax, eax	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x4001449	      0xb800000000	                              mov eax, 0	       722	cache-tree.c	FUNCTION_24
0x400144e	           0xf45d8	                         cmovne ebx, eax	       722	cache-tree.c	FUNCTION_24
0x4001451	            0xeb0c	                           jmp 0x400145f	       722	cache-tree.c	FUNCTION_24
0x4001453	      0xbb00000000	                              mov ebx, 0	       722	cache-tree.c	FUNCTION_24
0x4001458	            0xeb05	                           jmp 0x400145f	       722	cache-tree.c	FUNCTION_24
0x400145a	      0xbb00000000	                              mov ebx, 0	       722	cache-tree.c	FUNCTION_24
0x400145f	            0x89d8	                            mov eax, ebx	       723	cache-tree.c	FUNCTION_24
0x4001461	        0x4883c408	                              add rsp, 8	       723	cache-tree.c	FUNCTION_24
0x4001465	              0x5b	                                 pop rbx	       723	cache-tree.c	FUNCTION_24
0x4001466	              0x5d	                                 pop rbp	       723	cache-tree.c	FUNCTION_24
0x4001467	              0xc3	                                     ret	       723	cache-tree.c	FUNCTION_24
cache_tree_fully_valid	WHILE,0:FOR,1:DO,0:functions,0:IF,3:SWITCH,0:ELSE,0:CALL,2	36
0x4000f7a	          0x4885ff	                           test rdi, rdi	       224	cache-tree.c	FUNCTION_11	IF_1
0x4000f7d	            0x7456	                            je 0x4000fd5	       224	cache-tree.c	FUNCTION_11	IF_1
0x4000f7f	      0xb800000000	                              mov eax, 0	       227	cache-tree.c	FUNCTION_11	IF_2
0x4000f84	          0x833f00	                      cmp dword [rdi], 0	       226	cache-tree.c	FUNCTION_11	IF_2	CALL_1
0x4000f87	            0x785d	                            js 0x4000fe6	       226	cache-tree.c	FUNCTION_11	IF_2	CALL_1
0x4000f89	              0x55	                                push rbp	       222	cache-tree.c	FUNCTION_11
0x4000f8a	              0x53	                                push rbx	       222	cache-tree.c	FUNCTION_11
0x4000f8b	        0x4883ec08	                              sub rsp, 8	       222	cache-tree.c	FUNCTION_11
0x4000f8f	          0x4889fd	                            mov rbp, rdi	       222	cache-tree.c	FUNCTION_11
0x4000f92	        0x488d7f04	                      lea rdi, [rdi + 4]	       226	cache-tree.c	FUNCTION_11	IF_2	CALL_1
0x4000f96	      0xbe00000000	                              mov esi, 0	      1251	cache.h	FUNCTION_68	CALL_1
0x4000f9b	      0xe800000000	                          call 0x4000fa0	      1251	cache.h	FUNCTION_68	CALL_1
0x4000fa0	            0x85c0	                           test eax, eax	       226	cache-tree.c	FUNCTION_11	IF_2	CALL_1
0x4000fa2	            0x743c	                            je 0x4000fe0	       226	cache-tree.c	FUNCTION_11	IF_2	CALL_1
0x4000fa4	        0x837d1800	               cmp dword [rbp + 0x18], 0	       228	cache-tree.c	FUNCTION_11	FOR_1
0x4000fa8	            0x7e31	                           jle 0x4000fdb	       228	cache-tree.c	FUNCTION_11	FOR_1
0x4000faa	      0xbb00000000	                              mov ebx, 0	       228	cache-tree.c	FUNCTION_11	FOR_1
0x4000faf	          0x4863c3	                         movsxd rax, ebx	       229	cache-tree.c	FUNCTION_11	FOR_1	IF_3	CALL_2
0x4000fb2	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	       229	cache-tree.c	FUNCTION_11	FOR_1	IF_3	CALL_2
0x4000fb6	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       229	cache-tree.c	FUNCTION_11	FOR_1	IF_3	CALL_2
0x4000fba	          0x488b38	                    mov rdi, qword [rax]	       229	cache-tree.c	FUNCTION_11	FOR_1	IF_3	CALL_2
0x4000fbd	      0xe800000000	                          call 0x4000fc2	       229	cache-tree.c	FUNCTION_11	FOR_1	IF_3	CALL_2
0x4000fc2	            0x85c0	                           test eax, eax	       229	cache-tree.c	FUNCTION_11	FOR_1	IF_3	CALL_2
0x4000fc4	            0x741a	                            je 0x4000fe0	       229	cache-tree.c	FUNCTION_11	FOR_1	IF_3	CALL_2
0x4000fc6	          0x83c301	                              add ebx, 1	       228	cache-tree.c	FUNCTION_11	FOR_1
0x4000fc9	          0x395d18	            cmp dword [rbp + 0x18], ebx 	       228	cache-tree.c	FUNCTION_11	FOR_1
0x4000fcc	            0x7fe1	                            jg 0x4000faf	       228	cache-tree.c	FUNCTION_11	FOR_1
0x4000fce	      0xb801000000	                              mov eax, 1	       232	cache-tree.c	FUNCTION_11
0x4000fd3	            0xeb0b	                           jmp 0x4000fe0	       232	cache-tree.c	FUNCTION_11
0x4000fd5	      0xb800000000	                              mov eax, 0	       225	cache-tree.c	FUNCTION_11	IF_1
0x4000fda	              0xc3	                                     ret	       233	cache-tree.c	FUNCTION_11
0x4000fdb	      0xb801000000	                              mov eax, 1	       232	cache-tree.c	FUNCTION_11
0x4000fe0	        0x4883c408	                              add rsp, 8	       233	cache-tree.c	FUNCTION_11
0x4000fe4	              0x5b	                                 pop rbx	       233	cache-tree.c	FUNCTION_11
0x4000fe5	              0x5d	                                 pop rbp	       233	cache-tree.c	FUNCTION_11
0x4000fe6	            0xf3c3	                                     ret	       233	cache-tree.c	FUNCTION_11
cache_tree_sub	WHILE,0:FOR,0:DO,0:functions,0:IF,0:SWITCH,0:ELSE,0:CALL,2	13
0x4000bf2	        0x4883ec08	                              sub rsp, 8	        94	cache-tree.c	FUNCTION_6
0x4000bf6	          0x4989f8	                             mov r8, rdi	        94	cache-tree.c	FUNCTION_6
0x4000bf9	      0xb800000000	                              mov eax, 0	        95	cache-tree.c	FUNCTION_6	CALL_1
0x4000bfe	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        95	cache-tree.c	FUNCTION_6	CALL_1
0x4000c05	          0x4889f7	                            mov rdi, rsi	        95	cache-tree.c	FUNCTION_6	CALL_1
0x4000c08	            0xf2ae	              repne scasb al, byte [rdi]	        95	cache-tree.c	FUNCTION_6	CALL_1
0x4000c0a	          0x48f7d1	                                 not rcx	        95	cache-tree.c	FUNCTION_6	CALL_1
0x4000c0d	        0x488d51ff	                      lea rdx, [rcx - 1]	        95	cache-tree.c	FUNCTION_6	CALL_1
0x4000c11	      0xb901000000	                              mov ecx, 1	        96	cache-tree.c	FUNCTION_6	CALL_2
0x4000c16	          0x4c89c7	                             mov rdi, r8	        96	cache-tree.c	FUNCTION_6	CALL_2
0x4000c19	      0xe8aef4ffff	                   call sym.find_subtree	        96	cache-tree.c	FUNCTION_6	CALL_2
0x4000c1e	        0x4883c408	                              add rsp, 8	        97	cache-tree.c	FUNCTION_6
0x4000c22	              0xc3	                                     ret	        97	cache-tree.c	FUNCTION_6
cache_tree	WHILE,0:FOR,0:DO,0:functions,0:IF,0:SWITCH,0:ELSE,0:CALL,1	7
0x40003e5	        0x4883ec08	                              sub rsp, 8	        12	cache-tree.c	FUNCTION_1
0x40003e9	      0xbe28000000	                           mov esi, 0x28	        13	cache-tree.c	FUNCTION_1	CALL_1
0x40003ee	      0xbf01000000	                              mov edi, 1	        13	cache-tree.c	FUNCTION_1	CALL_1
0x40003f3	      0xe800000000	                          call 0x40003f8	        13	cache-tree.c	FUNCTION_1	CALL_1
0x40003f8	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	        14	cache-tree.c	FUNCTION_1
0x40003fe	        0x4883c408	                              add rsp, 8	        16	cache-tree.c	FUNCTION_1
0x4000402	              0xc3	                                     ret	        16	cache-tree.c	FUNCTION_1
prime_cache_tree_rec	WHILE,1:FOR,0:DO,0:functions,0:IF,2:SWITCH,0:ELSE,1:CALL,9	62
0x4000e86	            0x4155	                                push r13	       660	cache-tree.c	FUNCTION_21
0x4000e88	            0x4154	                                push r12	       660	cache-tree.c	FUNCTION_21
0x4000e8a	              0x55	                                push rbp	       660	cache-tree.c	FUNCTION_21
0x4000e8b	              0x53	                                push rbx	       660	cache-tree.c	FUNCTION_21
0x4000e8c	        0x4883ec58	                           sub rsp, 0x58	       660	cache-tree.c	FUNCTION_21
0x4000e90	          0x4889fd	                            mov rbp, rdi	       660	cache-tree.c	FUNCTION_21
0x4000e93	    0x64488b042528	                mov rax, qword fs:[0x28]	       660	cache-tree.c	FUNCTION_21
0x4000e9c	      0x4889442448	             mov qword [rsp + 0x48], rax	       660	cache-tree.c	FUNCTION_21
0x4000ea1	            0x31c0	                            xor eax, eax	       660	cache-tree.c	FUNCTION_21
0x4000ea3	        0x488b4e04	                mov rcx, qword [rsi + 4]	        53	string3.h	FUNCTION_73	CALL_3
0x4000ea7	        0x48894f04	                mov qword [rdi + 4], rcx	        53	string3.h	FUNCTION_73	CALL_3
0x4000eab	        0x488b4e0c	              mov rcx, qword [rsi + 0xc]	        53	string3.h	FUNCTION_73	CALL_3
0x4000eaf	        0x48894f0c	              mov qword [rdi + 0xc], rcx	        53	string3.h	FUNCTION_73	CALL_3
0x4000eb3	          0x8b5614	            mov edx, dword [rsi + 0x14] 	        53	string3.h	FUNCTION_73	CALL_3
0x4000eb6	          0x895714	             mov dword [rdi + 0x14], edx	        53	string3.h	FUNCTION_73	CALL_3
0x4000eb9	        0x488b5620	            mov rdx, qword [rsi + 0x20] 	       666	cache-tree.c	FUNCTION_21	CALL_2
0x4000ebd	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	       666	cache-tree.c	FUNCTION_21	CALL_2
0x4000ec1	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       666	cache-tree.c	FUNCTION_21	CALL_2
0x4000ec6	      0xe800000000	                          call 0x4000ecb	       666	cache-tree.c	FUNCTION_21	CALL_2
0x4000ecb	      0xbb00000000	                              mov ebx, 0	       667	cache-tree.c	FUNCTION_21
0x4000ed0	            0xeb5d	                           jmp 0x4000f2f	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x4000ed2	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       669	cache-tree.c	FUNCTION_21	WHILE_1	IF_1	CALL_4
0x4000ed6	      0x2500f00000	                         and eax, 0xf000	       669	cache-tree.c	FUNCTION_21	WHILE_1	IF_1	CALL_4
0x4000edb	      0x3d00400000	                         cmp eax, 0x4000	       669	cache-tree.c	FUNCTION_21	WHILE_1	IF_1	CALL_4
0x4000ee0	            0x7405	                            je 0x4000ee7	       669	cache-tree.c	FUNCTION_21	WHILE_1	IF_1	CALL_4
0x4000ee2	          0x83c301	                              add ebx, 1	       670	cache-tree.c	FUNCTION_21	WHILE_1	IF_1
0x4000ee5	            0xeb48	                           jmp 0x4000f2f	       670	cache-tree.c	FUNCTION_21	WHILE_1	IF_1
0x4000ee7	        0x488b3c24	                    mov rdi, qword [rsp]	       673	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_5
0x4000eeb	      0xe800000000	                          call 0x4000ef0	       673	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_5
0x4000ef0	          0x4989c4	                            mov r12, rax	       673	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_5
0x4000ef3	          0xf60001	                      test byte [rax], 1	       674	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	IF_2
0x4000ef6	            0x750d	                           jne 0x4000f05	       674	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	IF_2
0x4000ef8	      0xbe00000000	                              mov esi, 0	        22	tree.h	FUNCTION_85	CALL_1
0x4000efd	          0x4889c7	                            mov rdi, rax	        22	tree.h	FUNCTION_85	CALL_1
0x4000f00	      0xe800000000	                          call 0x4000f05	        22	tree.h	FUNCTION_85	CALL_1
0x4000f05	      0x488b742408	                mov rsi, qword [rsp + 8]	       676	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_7
0x4000f0a	          0x4889ef	                            mov rdi, rbp	       676	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_7
0x4000f0d	      0xe800000000	                          call 0x4000f12	       676	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_7
0x4000f12	          0x4989c5	                            mov r13, rax	       676	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_7
0x4000f15	      0xe800000000	                          call 0x4000f1a	       677	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_8
0x4000f1a	        0x49894500	                    mov qword [r13], rax	       677	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_8
0x4000f1e	          0x4c89e6	                            mov rsi, r12	       678	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_9
0x4000f21	          0x4889c7	                            mov rdi, rax	       678	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_9
0x4000f24	      0xe85dffffff	           call sym.prime_cache_tree_rec	       678	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_9
0x4000f29	        0x498b4500	                    mov rax, qword [r13]	       679	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1
0x4000f2d	             0x318	                    add ebx, dword [rax]	       679	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1
0x4000f2f	          0x4889e6	                            mov rsi, rsp	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x4000f32	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x4000f37	      0xe800000000	                          call 0x4000f3c	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x4000f3c	            0x85c0	                           test eax, eax	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x4000f3e	            0x7592	                           jne 0x4000ed2	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x4000f40	          0x895d00	                    mov dword [rbp], ebx	       682	cache-tree.c	FUNCTION_21
0x4000f43	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       683	cache-tree.c	FUNCTION_21
0x4000f48	    0x644833042528	                xor rax, qword fs:[0x28]	       683	cache-tree.c	FUNCTION_21
0x4000f51	            0x7405	                            je 0x4000f58	       683	cache-tree.c	FUNCTION_21
0x4000f53	      0xe800000000	                          call 0x4000f58	       683	cache-tree.c	FUNCTION_21
0x4000f58	        0x4883c458	                           add rsp, 0x58	       683	cache-tree.c	FUNCTION_21
0x4000f5c	              0x5b	                                 pop rbx	       683	cache-tree.c	FUNCTION_21
0x4000f5d	              0x5d	                                 pop rbp	       683	cache-tree.c	FUNCTION_21
0x4000f5e	            0x415c	                                 pop r12	       683	cache-tree.c	FUNCTION_21
0x4000f60	            0x415d	                                 pop r13	       683	cache-tree.c	FUNCTION_21
0x4000f62	              0xc3	                                     ret	       683	cache-tree.c	FUNCTION_21
find_subtree	WHILE,0:FOR,0:DO,0:functions,0:IF,3:SWITCH,0:ELSE,0:CALL,4	109
0x40000cc	            0x4157	                                push r15	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x40000ce	            0x4156	                                push r14	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x40000d0	            0x4155	                                push r13	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x40000d2	            0x4154	                                push r12	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x40000d4	              0x55	                                push rbp	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x40000d5	              0x53	                                push rbx	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x40000d6	        0x4883ec08	                              sub rsp, 8	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x40000da	          0x4889fd	                            mov rbp, rdi	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x40000dd	          0x4989f6	                            mov r14, rsi	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x40000e0	          0x4189d5	                           mov r13d, edx	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x40000e3	            0x89cb	                            mov ebx, ecx	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x40000e5	      0xe856ffffff	                    call sym.subtree_pos	        72	cache-tree.c	ELSE_1	FUNCTION_5	CALL_1
0x40000ea	            0x85c0	                           test eax, eax	        73	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x40000ec	            0x780f	                            js 0x40000fd	        73	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x40000ee	            0x4898	                                    cdqe	        74	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x40000f0	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	        74	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x40000f4	        0x488b04c2	            mov rax, qword [rdx + rax*8]	        74	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x40000f8	      0xe947010000	                           jmp 0x4000244	        74	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x40000fd	            0x85db	                           test ebx, ebx	        75	cache-tree.c	ELSE_1	FUNCTION_5	IF_2
0x40000ff	     0xf843a010000	                            je 0x400023f	        75	cache-tree.c	ELSE_1	FUNCTION_5	IF_2
0x4000105	            0xf7d0	                                 not eax	        78	cache-tree.c	ELSE_1	FUNCTION_5
0x4000107	            0x89c3	                            mov ebx, eax	        78	cache-tree.c	ELSE_1	FUNCTION_5
0x4000109	          0x8b4518	            mov eax, dword [rbp + 0x18] 	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x400010c	          0x8d5001	                      lea edx, [rax + 1]	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x400010f	          0x8b451c	            mov eax, dword [rbp + 0x1c] 	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000112	            0x39c2	                            cmp edx, eax	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000114	            0x7e50	                           jle 0x4000166	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000116	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x400011a	            0x89c6	                            mov esi, eax	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x400011c	          0xc1ee1f	                           shr esi, 0x1f	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x400011f	             0x1c6	                            add esi, eax	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000121	            0xd1fe	                              sar esi, 1	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000123	            0x39f2	                            cmp edx, esi	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000125	           0xf4ff2	                          cmovg esi, edx	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000128	          0x89751c	            mov dword [rbp + 0x1c], esi 	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x400012b	          0x4863d6	                         movsxd rdx, esi	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x400012e	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_100	IF_1	CALL_1
0x4000138	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_100	IF_1	CALL_1
0x400013b	            0x7614	                           jbe 0x4000151	       795	git-compat-util.h	FUNCTION_100	IF_1	CALL_1
0x400013d	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_100	IF_1	CALL_2
0x4000142	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_100	IF_1	CALL_2
0x4000147	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_100	IF_1	CALL_2
0x400014c	      0xe800000000	                          call 0x4000151	       796	git-compat-util.h	FUNCTION_100	IF_1	CALL_2
0x4000151	    0x488d34d50000	                        lea rsi, [rdx*8]	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000159	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x400015d	      0xe800000000	                          call 0x4000162	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000162	        0x48894520	            mov qword [rbp + 0x20], rax 	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000166	        0x83451801	               add dword [rbp + 0x18], 1	        80	cache-tree.c	ELSE_1	FUNCTION_5
0x400016a	          0x4d63fd	                        movsxd r15, r13d	        82	cache-tree.c	ELSE_1	FUNCTION_5	CALL_3
0x400016d	        0x4983ffe7	             cmp r15, 0xffffffffffffffe7	       785	git-compat-util.h	FUNCTION_99	IF_1	CALL_1
0x4000171	            0x7617	                           jbe 0x400018a	       785	git-compat-util.h	FUNCTION_99	IF_1	CALL_1
0x4000173	          0x4c89fa	                            mov rdx, r15	       786	git-compat-util.h	FUNCTION_99	IF_1	CALL_2
0x4000176	      0xbe18000000	                           mov esi, 0x18	       786	git-compat-util.h	FUNCTION_99	IF_1	CALL_2
0x400017b	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_99	IF_1	CALL_2
0x4000180	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_99	IF_1	CALL_2
0x4000185	      0xe800000000	                          call 0x400018a	       786	git-compat-util.h	FUNCTION_99	IF_1	CALL_2
0x400018a	        0x4983ffe7	             cmp r15, 0xffffffffffffffe7	       785	git-compat-util.h	FUNCTION_99	IF_1	CALL_1
0x400018e	            0x751b	                           jne 0x40001ab	       785	git-compat-util.h	FUNCTION_99	IF_1	CALL_1
0x4000190	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_99	IF_1	CALL_2
0x4000195	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_99	IF_1	CALL_2
0x400019c	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_99	IF_1	CALL_2
0x40001a1	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_99	IF_1	CALL_2
0x40001a6	      0xe800000000	                          call 0x40001ab	       786	git-compat-util.h	FUNCTION_99	IF_1	CALL_2
0x40001ab	        0x498d7719	                   lea rsi, [r15 + 0x19]	        82	cache-tree.c	ELSE_1	FUNCTION_5	CALL_3
0x40001af	      0xbf01000000	                              mov edi, 1	        82	cache-tree.c	ELSE_1	FUNCTION_5	CALL_3
0x40001b4	      0xe800000000	                          call 0x40001b9	        82	cache-tree.c	ELSE_1	FUNCTION_5	CALL_3
0x40001b9	          0x4989c4	                            mov r12, rax	        82	cache-tree.c	ELSE_1	FUNCTION_5	CALL_3
0x40001bc	        0x488d7814	                   lea rdi, [rax + 0x14]	        53	string3.h	FUNCTION_73	CALL_3
0x40001c0	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_73	CALL_3
0x40001c3	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_73	CALL_3
0x40001c6	      0xe800000000	                          call 0x40001cb	        53	string3.h	FUNCTION_73	CALL_3
0x40001cb	    0x49c704240000	                      mov qword [r12], 0	        83	cache-tree.c	ELSE_1	FUNCTION_5
0x40001d3	      0x45896c240c	             mov dword [r12 + 0xc], r13d	        84	cache-tree.c	ELSE_1	FUNCTION_5
0x40001d8	          0x8b5518	            mov edx, dword [rbp + 0x18] 	        86	cache-tree.c	ELSE_1	FUNCTION_5	IF_3
0x40001db	            0x39d3	                            cmp ebx, edx	        86	cache-tree.c	ELSE_1	FUNCTION_5	IF_3
0x40001dd	            0x7d50	                           jge 0x400022f	        86	cache-tree.c	ELSE_1	FUNCTION_5	IF_3
0x40001df	            0x29da	                            sub edx, ebx	        87	cache-tree.c	ELSE_1	FUNCTION_5	IF_3	CALL_4
0x40001e1	          0x83ea01	                              sub edx, 1	        87	cache-tree.c	ELSE_1	FUNCTION_5	IF_3	CALL_4
0x40001e4	          0x4863d2	                         movsxd rdx, edx	        87	cache-tree.c	ELSE_1	FUNCTION_5	IF_3	CALL_4
0x40001e7	          0x4885d2	                           test rdx, rdx	       861	git-compat-util.h	FUNCTION_103	IF_1
0x40001ea	            0x7443	                            je 0x400022f	       861	git-compat-util.h	FUNCTION_103	IF_1
0x40001ec	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_100	IF_1	CALL_1
0x40001f6	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_100	IF_1	CALL_1
0x40001f9	            0x7614	                           jbe 0x400020f	       795	git-compat-util.h	FUNCTION_100	IF_1	CALL_1
0x40001fb	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_100	IF_1	CALL_2
0x4000200	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_100	IF_1	CALL_2
0x4000205	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_100	IF_1	CALL_2
0x400020a	      0xe800000000	                          call 0x400020f	       796	git-compat-util.h	FUNCTION_100	IF_1	CALL_2
0x400020f	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	        87	cache-tree.c	ELSE_1	FUNCTION_5	IF_3	CALL_4
0x4000213	          0x4863c3	                         movsxd rax, ebx	        87	cache-tree.c	ELSE_1	FUNCTION_5	IF_3	CALL_4
0x4000216	    0x488d04c50800	                    lea rax, [rax*8 + 8]	        87	cache-tree.c	ELSE_1	FUNCTION_5	IF_3	CALL_4
0x400021e	        0x48c1e203	                              shl rdx, 3	        59	string3.h	FUNCTION_74	CALL_3
0x4000222	      0x488d7407f8	                lea rsi, [rdi + rax - 8]	        59	string3.h	FUNCTION_74	CALL_3
0x4000227	          0x4801c7	                            add rdi, rax	        59	string3.h	FUNCTION_74	CALL_3
0x400022a	      0xe800000000	                          call 0x400022f	        59	string3.h	FUNCTION_74	CALL_3
0x400022f	          0x4863c3	                         movsxd rax, ebx	        89	cache-tree.c	ELSE_1	FUNCTION_5
0x4000232	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	        89	cache-tree.c	ELSE_1	FUNCTION_5
0x4000236	        0x4c8924c2	            mov qword [rdx + rax*8], r12	        89	cache-tree.c	ELSE_1	FUNCTION_5
0x400023a	          0x4c89e0	                            mov rax, r12	        90	cache-tree.c	ELSE_1	FUNCTION_5
0x400023d	            0xeb05	                           jmp 0x4000244	        90	cache-tree.c	ELSE_1	FUNCTION_5
0x400023f	      0xb800000000	                              mov eax, 0	        76	cache-tree.c	ELSE_1	FUNCTION_5	IF_2
0x4000244	        0x4883c408	                              add rsp, 8	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000248	              0x5b	                                 pop rbx	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000249	              0x5d	                                 pop rbp	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x400024a	            0x415c	                                 pop r12	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x400024c	            0x415d	                                 pop r13	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x400024e	            0x415e	                                 pop r14	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000250	            0x415f	                                 pop r15	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000252	              0xc3	                                     ret	        91	cache-tree.c	ELSE_1	FUNCTION_5
write_cache_as_tree	WHILE,0:FOR,0:DO,0:functions,0:IF,0:SWITCH,0:ELSE,0:CALL,2	17
0x40013ae	            0x4154	                                push r12	       655	cache-tree.c	FUNCTION_20
0x40013b0	              0x55	                                push rbp	       655	cache-tree.c	FUNCTION_20
0x40013b1	              0x53	                                push rbx	       655	cache-tree.c	FUNCTION_20
0x40013b2	          0x4889fb	                            mov rbx, rdi	       655	cache-tree.c	FUNCTION_20
0x40013b5	            0x89f5	                            mov ebp, esi	       655	cache-tree.c	FUNCTION_20
0x40013b7	          0x4989d4	                            mov r12, rdx	       655	cache-tree.c	FUNCTION_20
0x40013ba	      0xe800000000	                          call 0x40013bf	       656	cache-tree.c	FUNCTION_20	CALL_2
0x40013bf	          0x4d89e0	                             mov r8, r12	       656	cache-tree.c	FUNCTION_20	CALL_2
0x40013c2	            0x89e9	                            mov ecx, ebp	       656	cache-tree.c	FUNCTION_20	CALL_2
0x40013c4	          0x4889c2	                            mov rdx, rax	       656	cache-tree.c	FUNCTION_20	CALL_2
0x40013c7	      0xbe00000000	                              mov esi, 0	       656	cache-tree.c	FUNCTION_20	CALL_2
0x40013cc	          0x4889df	                            mov rdi, rbx	       656	cache-tree.c	FUNCTION_20	CALL_2
0x40013cf	      0xe800000000	                          call 0x40013d4	       656	cache-tree.c	FUNCTION_20	CALL_2
0x40013d4	              0x5b	                                 pop rbx	       657	cache-tree.c	FUNCTION_20
0x40013d5	              0x5d	                                 pop rbp	       657	cache-tree.c	FUNCTION_20
0x40013d6	            0x415c	                                 pop r12	       657	cache-tree.c	FUNCTION_20
0x40013d8	              0xc3	                                     ret	       657	cache-tree.c	FUNCTION_20
cache_tree_write	WHILE,0:FOR,0:DO,0:functions,0:IF,0:SWITCH,0:ELSE,0:CALL,1	6
0x4001224	        0x4883ec08	                              sub rsp, 8	       483	cache-tree.c	FUNCTION_15
0x4001228	      0xb900000000	                              mov ecx, 0	       484	cache-tree.c	FUNCTION_15	CALL_1
0x400122d	      0xba00000000	                              mov edx, 0	       484	cache-tree.c	FUNCTION_15	CALL_1
0x4001232	      0xe8aff0ffff	                      call sym.write_one	       484	cache-tree.c	FUNCTION_15	CALL_1
0x4001237	        0x4883c408	                              add rsp, 8	       485	cache-tree.c	FUNCTION_15
0x400123b	              0xc3	                                     ret	       485	cache-tree.c	FUNCTION_15
cache_tree_free	WHILE,0:FOR,1:DO,0:functions,0:IF,2:SWITCH,0:ELSE,0:CALL,4	35
0x4000403	            0x4155	                                push r13	        19	cache-tree.c	FUNCTION_2
0x4000405	            0x4154	                                push r12	        19	cache-tree.c	FUNCTION_2
0x4000407	              0x55	                                push rbp	        19	cache-tree.c	FUNCTION_2
0x4000408	              0x53	                                push rbx	        19	cache-tree.c	FUNCTION_2
0x4000409	        0x4883ec08	                              sub rsp, 8	        19	cache-tree.c	FUNCTION_2
0x400040d	          0x488b2f	                    mov rbp, qword [rdi]	        21	cache-tree.c	FUNCTION_2
0x4000410	          0x4885ed	                           test rbp, rbp	        23	cache-tree.c	FUNCTION_2	IF_1
0x4000413	            0x7451	                            je 0x4000466	        23	cache-tree.c	FUNCTION_2	IF_1
0x4000415	          0x4989fd	                            mov r13, rdi	        23	cache-tree.c	FUNCTION_2	IF_1
0x4000418	        0x837d1800	               cmp dword [rbp + 0x18], 0	        25	cache-tree.c	FUNCTION_2	FOR_1
0x400041c	            0x7e2f	                           jle 0x400044d	        25	cache-tree.c	FUNCTION_2	FOR_1
0x400041e	      0xbb00000000	                              mov ebx, 0	        25	cache-tree.c	FUNCTION_2	FOR_1
0x4000423	          0x4c63e3	                         movsxd r12, ebx	        26	cache-tree.c	FUNCTION_2	FOR_1	IF_2
0x4000426	        0x488b4520	            mov rax, qword [rbp + 0x20] 	        26	cache-tree.c	FUNCTION_2	FOR_1	IF_2
0x400042a	        0x4a8b3ce0	            mov rdi, qword [rax + r12*8]	        26	cache-tree.c	FUNCTION_2	FOR_1	IF_2
0x400042e	          0x4885ff	                           test rdi, rdi	        26	cache-tree.c	FUNCTION_2	FOR_1	IF_2
0x4000431	            0x7412	                            je 0x4000445	        26	cache-tree.c	FUNCTION_2	FOR_1	IF_2
0x4000433	      0xe800000000	                          call 0x4000438	        27	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000438	        0x488b4520	            mov rax, qword [rbp + 0x20] 	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x400043c	        0x4a8b3ce0	            mov rdi, qword [rax + r12*8]	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x4000440	      0xe800000000	                          call 0x4000445	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x4000445	          0x83c301	                              add ebx, 1	        25	cache-tree.c	FUNCTION_2	FOR_1
0x4000448	          0x395d18	            cmp dword [rbp + 0x18], ebx 	        25	cache-tree.c	FUNCTION_2	FOR_1
0x400044b	            0x7fd6	                            jg 0x4000423	        25	cache-tree.c	FUNCTION_2	FOR_1
0x400044d	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	        30	cache-tree.c	FUNCTION_2	CALL_3
0x4000451	      0xe800000000	                          call 0x4000456	        30	cache-tree.c	FUNCTION_2	CALL_3
0x4000456	          0x4889ef	                            mov rdi, rbp	        31	cache-tree.c	FUNCTION_2	CALL_4
0x4000459	      0xe800000000	                          call 0x400045e	        31	cache-tree.c	FUNCTION_2	CALL_4
0x400045e	    0x49c745000000	                      mov qword [r13], 0	        32	cache-tree.c	FUNCTION_2
0x4000466	        0x4883c408	                              add rsp, 8	        33	cache-tree.c	FUNCTION_2
0x400046a	              0x5b	                                 pop rbx	        33	cache-tree.c	FUNCTION_2
0x400046b	              0x5d	                                 pop rbp	        33	cache-tree.c	FUNCTION_2
0x400046c	            0x415c	                                 pop r12	        33	cache-tree.c	FUNCTION_2
0x400046e	            0x415d	                                 pop r13	        33	cache-tree.c	FUNCTION_2
0x4000470	              0xc3	                                     ret	        33	cache-tree.c	FUNCTION_2
cache_tree_read	WHILE,0:FOR,0:DO,0:functions,0:IF,1:SWITCH,0:ELSE,0:CALL,1	11
0x400123c	        0x4883ec18	                           sub rsp, 0x18	       572	cache-tree.c	FUNCTION_17
0x4001240	      0x48897c2408	                mov qword [rsp + 8], rdi	       572	cache-tree.c	FUNCTION_17
0x4001245	        0x48893424	                    mov qword [rsp], rsi	       572	cache-tree.c	FUNCTION_17
0x4001249	      0xb800000000	                              mov eax, 0	       574	cache-tree.c	FUNCTION_17	IF_1
0x400124e	          0x803f00	                       cmp byte [rdi], 0	       573	cache-tree.c	FUNCTION_17	IF_1
0x4001251	            0x750d	                           jne 0x4001260	       573	cache-tree.c	FUNCTION_17	IF_1
0x4001253	          0x4889e6	                            mov rsi, rsp	       575	cache-tree.c	FUNCTION_17	CALL_1
0x4001256	      0x488d7c2408	                      lea rdi, [rsp + 8]	       575	cache-tree.c	FUNCTION_17	CALL_1
0x400125b	      0xe8c3f9ffff	                       call sym.read_one	       575	cache-tree.c	FUNCTION_17	CALL_1
0x4001260	        0x4883c418	                           add rsp, 0x18	       576	cache-tree.c	FUNCTION_17
0x4001264	              0xc3	                                     ret	       576	cache-tree.c	FUNCTION_17
subtree_pos	WHILE,1:FOR,0:DO,0:functions,0:IF,2:SWITCH,0:ELSE,1:CALL,1	54
0x4000040	            0x4157	                                push r15	        46	cache-tree.c	FUNCTION_4
0x4000042	            0x4156	                                push r14	        46	cache-tree.c	FUNCTION_4
0x4000044	            0x4155	                                push r13	        46	cache-tree.c	FUNCTION_4
0x4000046	            0x4154	                                push r12	        46	cache-tree.c	FUNCTION_4
0x4000048	              0x55	                                push rbp	        46	cache-tree.c	FUNCTION_4
0x4000049	              0x53	                                push rbx	        46	cache-tree.c	FUNCTION_4
0x400004a	        0x4883ec18	                           sub rsp, 0x18	        46	cache-tree.c	FUNCTION_4
0x400004e	      0x4889742408	                mov qword [rsp + 8], rsi	        46	cache-tree.c	FUNCTION_4
0x4000053	          0x4189d5	                           mov r13d, edx	        46	cache-tree.c	FUNCTION_4
0x4000056	        0x4c8b7720	            mov r14, qword [rdi + 0x20] 	        47	cache-tree.c	FUNCTION_4
0x400005a	        0x448b6718	           mov r12d, dword [rdi + 0x18] 	        50	cache-tree.c	FUNCTION_4
0x400005e	      0xbd00000000	                              mov ebp, 0	        49	cache-tree.c	FUNCTION_4
0x4000063	          0x4c63fa	                         movsxd r15, edx	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000066	            0xeb3f	                           jmp 0x40000a7	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4000068	          0x4489e0	                           mov eax, r12d	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x400006b	            0x29e8	                            sub eax, ebp	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x400006d	            0x89c3	                            mov ebx, eax	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x400006f	          0xc1eb1f	                           shr ebx, 0x1f	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x4000072	             0x1d8	                            add eax, ebx	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x4000074	            0xd1f8	                              sar eax, 1	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x4000076	        0x8d5c0500	                    lea ebx, [rbp + rax]	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x400007a	          0x4863c3	                         movsxd rax, ebx	        53	cache-tree.c	FUNCTION_4	WHILE_1
0x400007d	        0x498b34c6	            mov rsi, qword [r14 + rax*8]	        53	cache-tree.c	FUNCTION_4	WHILE_1
0x4000081	          0x8b460c	              mov eax, dword [rsi + 0xc]	        54	cache-tree.c	FUNCTION_4	WHILE_1	CALL_1
0x4000084	          0x4439e8	                           cmp eax, r13d	        38	cache-tree.c	FUNCTION_3	IF_1
0x4000087	            0x7f25	                            jg 0x40000ae	        38	cache-tree.c	FUNCTION_3	IF_1
0x4000089	            0x7c19	                            jl 0x40000a4	        40	cache-tree.c	FUNCTION_3	IF_2
0x400008b	        0x4883c614	                           add rsi, 0x14	        42	cache-tree.c	FUNCTION_3	CALL_1
0x400008f	          0x4c89fa	                            mov rdx, r15	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000092	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000097	      0xe800000000	                          call 0x400009c	        42	cache-tree.c	FUNCTION_3	CALL_1
0x400009c	            0x85c0	                           test eax, eax	        56	cache-tree.c	FUNCTION_4	WHILE_1	IF_1
0x400009e	            0x741b	                            je 0x40000bb	        56	cache-tree.c	FUNCTION_4	WHILE_1	IF_1
0x40000a0	            0x85c0	                           test eax, eax	        58	cache-tree.c	FUNCTION_4	WHILE_1	IF_2
0x40000a2	            0x780a	                            js 0x40000ae	        58	cache-tree.c	FUNCTION_4	WHILE_1	IF_2
0x40000a4	          0x8d6b01	                      lea ebp, [rbx + 1]	        61	cache-tree.c	FUNCTION_4	WHILE_1	ELSE_1
0x40000a7	          0x4439e5	                           cmp ebp, r12d	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40000aa	            0x7cbc	                            jl 0x4000068	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40000ac	            0xeb07	                           jmp 0x40000b5	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40000ae	          0x4189dc	                           mov r12d, ebx	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40000b1	            0x39dd	                            cmp ebp, ebx	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40000b3	            0x7cb3	                            jl 0x4000068	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40000b5	            0x89e8	                            mov eax, ebp	        63	cache-tree.c	FUNCTION_4	ELSE_1
0x40000b7	            0xf7d0	                                 not eax	        63	cache-tree.c	FUNCTION_4	ELSE_1
0x40000b9	            0xeb02	                           jmp 0x40000bd	        63	cache-tree.c	FUNCTION_4	ELSE_1
0x40000bb	            0x89d8	                            mov eax, ebx	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40000bd	        0x4883c418	                           add rsp, 0x18	        64	cache-tree.c	FUNCTION_4	ELSE_1
0x40000c1	              0x5b	                                 pop rbx	        64	cache-tree.c	FUNCTION_4	ELSE_1
0x40000c2	              0x5d	                                 pop rbp	        64	cache-tree.c	FUNCTION_4	ELSE_1
0x40000c3	            0x415c	                                 pop r12	        64	cache-tree.c	FUNCTION_4	ELSE_1
0x40000c5	            0x415d	                                 pop r13	        64	cache-tree.c	FUNCTION_4	ELSE_1
0x40000c7	            0x415e	                                 pop r14	        64	cache-tree.c	FUNCTION_4	ELSE_1
0x40000c9	            0x415f	                                 pop r15	        64	cache-tree.c	FUNCTION_4	ELSE_1
0x40000cb	              0xc3	                                     ret	        64	cache-tree.c	FUNCTION_4	ELSE_1
find_cache_tree_from_traversal	WHILE,0:FOR,0:DO,0:functions,0:IF,1:SWITCH,0:ELSE,0:CALL,2	13
0x40002bf	          0x4889f2	                            mov rdx, rsi	       703	cache-tree.c	FUNCTION_23
0x40002c2	        0x488b7608	                mov rsi, qword [rsi + 8]	       706	cache-tree.c	FUNCTION_23	IF_1
0x40002c6	          0x4889f8	                            mov rax, rdi	       707	cache-tree.c	FUNCTION_23	IF_1
0x40002c9	          0x4885f6	                           test rsi, rsi	       706	cache-tree.c	FUNCTION_23	IF_1
0x40002cc	            0x7416	                            je 0x40002e4	       706	cache-tree.c	FUNCTION_23	IF_1
0x40002ce	              0x53	                                push rbx	       703	cache-tree.c	FUNCTION_23
0x40002cf	          0x4889d3	                            mov rbx, rdx	       703	cache-tree.c	FUNCTION_23
0x40002d2	      0xe8e8ffffff	 call sym.find_cache_tree_from_traversal	       708	cache-tree.c	FUNCTION_23	CALL_1
0x40002d7	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40002db	          0x4889c7	                            mov rdi, rax	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40002de	      0xe870ffffff	                call sym.cache_tree_find	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40002e3	              0x5b	                                 pop rbx	       710	cache-tree.c	FUNCTION_23
0x40002e4	            0xf3c3	                                     ret	       710	cache-tree.c	FUNCTION_23
update_one	WHILE,2:FOR,1:DO,0:functions,0:IF,19:SWITCH,0:ELSE,4:CALL,36	398
0x4000582	            0x4157	                                push r15	       242	cache-tree.c	FUNCTION_12
0x4000584	            0x4156	                                push r14	       242	cache-tree.c	FUNCTION_12
0x4000586	            0x4155	                                push r13	       242	cache-tree.c	FUNCTION_12
0x4000588	            0x4154	                                push r12	       242	cache-tree.c	FUNCTION_12
0x400058a	              0x55	                                push rbp	       242	cache-tree.c	FUNCTION_12
0x400058b	              0x53	                                push rbx	       242	cache-tree.c	FUNCTION_12
0x400058c	    0x4881eca80000	                           sub rsp, 0xa8	       242	cache-tree.c	FUNCTION_12
0x4000593	          0x4989ff	                            mov r15, rdi	       242	cache-tree.c	FUNCTION_12
0x4000596	      0x4889742408	                mov qword [rsp + 8], rsi	       242	cache-tree.c	FUNCTION_12
0x400059b	        0x89542430	             mov dword [rsp + 0x30], edx	       242	cache-tree.c	FUNCTION_12
0x400059f	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       242	cache-tree.c	FUNCTION_12
0x40005a4	      0x4489442404	                mov dword [rsp + 4], r8d	       242	cache-tree.c	FUNCTION_12
0x40005a9	      0x4c894c2420	              mov qword [rsp + 0x20], r9	       242	cache-tree.c	FUNCTION_12
0x40005ae	    0x64488b042528	                mov rax, qword fs:[0x28]	       242	cache-tree.c	FUNCTION_12
0x40005b7	    0x488984249800	             mov qword [rsp + 0x98], rax	       242	cache-tree.c	FUNCTION_12
0x40005bf	            0x31c0	                            xor eax, eax	       242	cache-tree.c	FUNCTION_12
0x40005c1	    0x8b8424e00000	            mov eax, dword [rsp + 0xe0] 	       246	cache-tree.c	FUNCTION_12
0x40005c8	          0x83e010	                           and eax, 0x10	       246	cache-tree.c	FUNCTION_12
0x40005cb	        0x89442458	             mov dword [rsp + 0x58], eax	       246	cache-tree.c	FUNCTION_12
0x40005cf	    0x8bb424e00000	            mov esi, dword [rsp + 0xe0] 	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40005d6	          0x83e604	                              and esi, 4	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40005d9	        0x8974245c	             mov dword [rsp + 0x5c], esi	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40005dd	            0x741d	                            je 0x40005fc	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40005df	            0x85c0	                           test eax, eax	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40005e1	            0x7419	                            je 0x40005fc	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40005e3	      0xb900000000	                              mov ecx, 0	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40005e8	      0xbafa000000	                           mov edx, 0xfa	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40005ed	      0xbe00000000	                              mov esi, 0	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40005f2	      0xbf00000000	                              mov edi, 0	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40005f7	      0xe800000000	                          call 0x40005fc	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40005fc	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       252	cache-tree.c	FUNCTION_12
0x4000601	    0xc70000000000	                      mov dword [rax], 0	       252	cache-tree.c	FUNCTION_12
0x4000607	        0x41833f00	                      cmp dword [r15], 0	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x400060b	            0x7911	                           jns 0x400061e	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x400060d	      0xb800000000	                              mov eax, 0	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4000612	      0x41837f1800	               cmp dword [r15 + 0x18], 0	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4000617	            0x7f1f	                            jg 0x4000638	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4000619	      0xe9b0050000	                           jmp 0x4000bce	       262	cache-tree.c	FUNCTION_12	FOR_1
0x400061e	        0x498d7f04	                      lea rdi, [r15 + 4]	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x4000622	      0xbe00000000	                              mov esi, 0	      1251	cache.h	FUNCTION_68	CALL_1
0x4000627	      0xe800000000	                          call 0x400062c	      1251	cache.h	FUNCTION_68	CALL_1
0x400062c	            0x85c0	                           test eax, eax	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x400062e	            0x74dd	                            je 0x400060d	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x4000630	          0x418b07	                    mov eax, dword [r15]	       255	cache-tree.c	FUNCTION_12	IF_1
0x4000633	      0xe91a050000	                           jmp 0x4000b52	       255	cache-tree.c	FUNCTION_12	IF_1
0x4000638	          0x4863c8	                         movsxd rcx, eax	       263	cache-tree.c	FUNCTION_12	FOR_1
0x400063b	        0x498b5720	            mov rdx, qword [r15 + 0x20] 	       263	cache-tree.c	FUNCTION_12	FOR_1
0x400063f	        0x488b14ca	            mov rdx, qword [rdx + rcx*8]	       263	cache-tree.c	FUNCTION_12	FOR_1
0x4000643	    0xc74210000000	               mov dword [rdx + 0x10], 0	       263	cache-tree.c	FUNCTION_12	FOR_1
0x400064a	          0x83c001	                              add eax, 1	       262	cache-tree.c	FUNCTION_12	FOR_1
0x400064d	        0x41394718	            cmp dword [r15 + 0x18], eax 	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4000651	            0x7fe5	                            jg 0x4000638	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4000653	      0x837c243000	               cmp dword [rsp + 0x30], 0	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4000658	     0xf8e5e050000	                           jle 0x4000bbc	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x400065e	      0x4c8b742408	                mov r14, qword [rsp + 8]	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x4000663	          0x498b06	                    mov rax, qword [r14]	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x4000666	        0x4c8d6058	                   lea r12, [rax + 0x58]	       275	cache-tree.c	FUNCTION_12	WHILE_1
0x400066a	        0x8b7c2404	                mov edi, dword [rsp + 4]	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x400066e	          0x3b783c	            cmp edi, dword [rax + 0x3c] 	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000671	     0xf8d10050000	                           jge 0x4000b87	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000677	      0xbd00000000	                              mov ebp, 0	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x400067c	          0x4863df	                         movsxd rbx, edi	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x400067f	      0x4c897c2418	             mov qword [rsp + 0x18], r15	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000684	            0xeb20	                           jmp 0x40006a6	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000686	          0x4863c5	                         movsxd rax, ebp	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x4000689	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x400068e	        0x4c8d34c1	                  lea r14, [rcx + rax*8]	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x4000692	          0x498b06	                    mov rax, qword [r14]	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x4000695	        0x4c8d6058	                   lea r12, [rax + 0x58]	       275	cache-tree.c	FUNCTION_12	WHILE_1
0x4000699	        0x8b4c2404	                mov ecx, dword [rsp + 4]	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x400069d	          0x39483c	            cmp dword [rax + 0x3c], ecx 	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x40006a0	     0xf8ed5040000	                           jle 0x4000b7b	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x40006a6	          0x4889da	                            mov rdx, rbx	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x40006a9	          0x4c89e6	                            mov rsi, r12	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x40006ac	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x40006b1	      0xe800000000	                          call 0x40006b6	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x40006b6	            0x85c0	                           test eax, eax	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x40006b8	     0xf85c4040000	                           jne 0x4000b82	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x40006be	        0x4d8d3c1c	                    lea r15, [r12 + rbx]	       280	cache-tree.c	FUNCTION_12	WHILE_1	CALL_5
0x40006c2	      0xbe2f000000	                           mov esi, 0x2f	       280	cache-tree.c	FUNCTION_12	WHILE_1	CALL_5
0x40006c7	          0x4c89ff	                            mov rdi, r15	       280	cache-tree.c	FUNCTION_12	WHILE_1	CALL_5
0x40006ca	      0xe800000000	                          call 0x40006cf	       280	cache-tree.c	FUNCTION_12	WHILE_1	CALL_5
0x40006cf	          0x4885c0	                           test rax, rax	       281	cache-tree.c	FUNCTION_12	WHILE_1	IF_3
0x40006d2	            0x7508	                           jne 0x40006dc	       281	cache-tree.c	FUNCTION_12	WHILE_1	IF_3
0x40006d4	          0x83c501	                              add ebp, 1	       282	cache-tree.c	FUNCTION_12	WHILE_1	IF_3
0x40006d7	      0xe98c000000	                           jmp 0x4000768	       282	cache-tree.c	FUNCTION_12	WHILE_1	IF_3
0x40006dc	          0x4c29f8	                            sub rax, r15	       290	cache-tree.c	FUNCTION_12	WHILE_1
0x40006df	          0x4989c5	                            mov r13, rax	       290	cache-tree.c	FUNCTION_12	WHILE_1
0x40006e2	      0xb901000000	                              mov ecx, 1	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x40006e7	            0x89c2	                            mov edx, eax	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x40006e9	          0x4c89fe	                            mov rsi, r15	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x40006ec	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x40006f1	      0xe8d6f9ffff	                   call sym.find_subtree	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x40006f6	          0x4989c7	                            mov r15, rax	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x40006f9	        0x48833800	                      cmp qword [rax], 0	       292	cache-tree.c	FUNCTION_12	WHILE_1	IF_4
0x40006fd	            0x7508	                           jne 0x4000707	       292	cache-tree.c	FUNCTION_12	WHILE_1	IF_4
0x40006ff	      0xe800000000	                          call 0x4000704	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x4000704	          0x498907	                    mov qword [r15], rax	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x4000707	        0x8b542430	            mov edx, dword [rsp + 0x30] 	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x400070b	            0x29ea	                            sub edx, ebp	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x400070d	        0x4883ec08	                              sub rsp, 8	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x4000711	    0x8b8424e80000	            mov eax, dword [rsp + 0xe8] 	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x4000718	              0x50	                                push rax	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x4000719	      0x4c8d4c2470	                    lea r9, [rsp + 0x70]	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x400071e	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x4000722	      0x468d442801	                lea r8d, [rax + r13 + 1]	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x4000727	          0x4c89e1	                            mov rcx, r12	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x400072a	          0x4c89f6	                            mov rsi, r14	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x400072d	          0x498b3f	                    mov rdi, qword [r15]	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x4000730	      0xe84dfeffff	                     call sym.update_one	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x4000735	        0x4883c410	                           add rsp, 0x10	       300	cache-tree.c	FUNCTION_12	WHILE_1	IF_5
0x4000739	            0x85c0	                           test eax, eax	       300	cache-tree.c	FUNCTION_12	WHILE_1	IF_5
0x400073b	     0xf8811040000	                            js 0x4000b52	       300	cache-tree.c	FUNCTION_12	WHILE_1	IF_5
0x4000741	            0x85c0	                           test eax, eax	       302	cache-tree.c	FUNCTION_12	WHILE_1	IF_6
0x4000743	            0x750a	                           jne 0x400074f	       302	cache-tree.c	FUNCTION_12	WHILE_1	IF_6
0x4000745	      0xbf00000000	                              mov edi, 0	       303	cache-tree.c	FUNCTION_12	WHILE_1	CALL_9
0x400074a	      0xe800000000	                          call 0x400074f	       303	cache-tree.c	FUNCTION_12	WHILE_1	CALL_9
0x400074f	             0x1c5	                            add ebp, eax	       304	cache-tree.c	FUNCTION_12	WHILE_1
0x4000751	        0x41894708	                mov dword [r15 + 8], eax	       305	cache-tree.c	FUNCTION_12	WHILE_1
0x4000755	        0x8b442460	            mov eax, dword [rsp + 0x60] 	       306	cache-tree.c	FUNCTION_12	WHILE_1
0x4000759	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       306	cache-tree.c	FUNCTION_12	WHILE_1
0x400075e	             0x106	                    add dword [rsi], eax	       306	cache-tree.c	FUNCTION_12	WHILE_1
0x4000760	    0x41c747100100	               mov dword [r15 + 0x10], 1	       307	cache-tree.c	FUNCTION_12	WHILE_1
0x4000768	        0x396c2430	            cmp dword [rsp + 0x30], ebp 	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x400076c	     0xf8f14ffffff	                            jg 0x4000686	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4000772	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4000777	      0xe90b040000	                           jmp 0x4000b87	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x400077c	      0xbb00000000	                              mov ebx, 0	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000781	    0x41bc00000000	                             mov r12d, 0	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000787	      0x498b6cdd00	            mov rbp, qword [r13 + rbx*8]	       210	cache-tree.c	FUNCTION_10	FOR_1
0x400078c	        0x837d1000	               cmp dword [rbp + 0x10], 0	       211	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x4000790	            0x740f	                            je 0x40007a1	       211	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x4000792	          0x4963c4	                        movsxd rax, r12d	       212	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x4000795	      0x49896cc500	            mov qword [r13 + rax*8], rbp	       212	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x400079a	      0x458d642401	                     lea r12d, [r12 + 1]	       212	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x400079f	            0xeb15	                           jmp 0x40007b6	       212	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x40007a1	          0x4889ef	                            mov rdi, rbp	       214	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1	CALL_1
0x40007a4	      0xe800000000	                          call 0x40007a9	       214	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1	CALL_1
0x40007a9	          0x4889ef	                            mov rdi, rbp	       215	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1	CALL_2
0x40007ac	      0xe800000000	                          call 0x40007b1	       215	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1	CALL_2
0x40007b1	      0x41836f1801	               sub dword [r15 + 0x18], 1	       216	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1
0x40007b6	        0x4883c301	                              add rbx, 1	       216	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1
0x40007ba	          0x4139de	                           cmp r14d, ebx	       209	cache-tree.c	FUNCTION_10	FOR_1
0x40007bd	            0x7fc8	                            jg 0x4000787	       209	cache-tree.c	FUNCTION_10	FOR_1
0x40007bf	      0xbe00200000	                         mov esi, 0x2000	       315	cache-tree.c	FUNCTION_12	CALL_11
0x40007c4	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       315	cache-tree.c	FUNCTION_12	CALL_11
0x40007c9	      0xe800000000	                          call 0x40007ce	       315	cache-tree.c	FUNCTION_12	CALL_11
0x40007ce	      0x837c243000	               cmp dword [rsp + 0x30], 0	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x40007d3	     0xf8e70020000	                           jle 0x4000a49	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x40007d9	      0x488b442408	                mov rax, qword [rsp + 8]	       319	cache-tree.c	FUNCTION_12	WHILE_2
0x40007de	          0x488b18	                    mov rbx, qword [rax]	       319	cache-tree.c	FUNCTION_12	WHILE_2
0x40007e1	        0x4c8d6b58	                   lea r13, [rbx + 0x58]	       328	cache-tree.c	FUNCTION_12	WHILE_2
0x40007e5	          0x8b6b3c	            mov ebp, dword [rbx + 0x3c] 	       329	cache-tree.c	FUNCTION_12	WHILE_2	CALL_12
0x40007e8	        0x8b442404	                mov eax, dword [rsp + 4]	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x40007ec	            0x39e8	                            cmp eax, ebp	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x40007ee	     0xf8d65020000	                           jge 0x4000a59	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x40007f4	    0x41be00000000	                             mov r14d, 0	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x40007fa	    0xc74424340000	               mov dword [rsp + 0x34], 0	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000802	            0x4898	                                    cdqe	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000804	      0x4889442440	             mov qword [rsp + 0x40], rax	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000809	    0x8b8424e00000	            mov eax, dword [rsp + 0xe0] 	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000810	          0x83f001	                              xor eax, 1	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000813	          0x83e001	                              and eax, 1	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000816	        0x8844244b	               mov byte [rsp + 0x4b], al	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x400081a	      0x4c897c2450	             mov qword [rsp + 0x50], r15	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x400081f	            0xeb1d	                           jmp 0x400083e	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000821	          0x4963c6	                        movsxd rax, r14d	       319	cache-tree.c	FUNCTION_12	WHILE_2
0x4000824	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       319	cache-tree.c	FUNCTION_12	WHILE_2
0x4000829	        0x488b1cc3	            mov rbx, qword [rbx + rax*8]	       319	cache-tree.c	FUNCTION_12	WHILE_2
0x400082d	        0x4c8d6b58	                   lea r13, [rbx + 0x58]	       328	cache-tree.c	FUNCTION_12	WHILE_2
0x4000831	          0x8b6b3c	            mov ebp, dword [rbx + 0x3c] 	       329	cache-tree.c	FUNCTION_12	WHILE_2	CALL_12
0x4000834	        0x396c2404	                cmp dword [rsp + 4], ebp	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000838	     0xf8d2b020000	                           jge 0x4000a69	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x400083e	      0x4c8b7c2440	            mov r15, qword [rsp + 0x40] 	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000843	          0x4c89fa	                            mov rdx, r15	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000846	          0x4c89ee	                            mov rsi, r13	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000849	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x400084e	      0xe800000000	                          call 0x4000853	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000853	            0x85c0	                           test eax, eax	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000855	     0xf8515020000	                           jne 0x4000a70	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x400085b	      0x4f8d643d00	                    lea r12, [r13 + r15]	       333	cache-tree.c	FUNCTION_12	WHILE_2	CALL_14
0x4000860	      0xbe2f000000	                           mov esi, 0x2f	       333	cache-tree.c	FUNCTION_12	WHILE_2	CALL_14
0x4000865	          0x4c89e7	                            mov rdi, r12	       333	cache-tree.c	FUNCTION_12	WHILE_2	CALL_14
0x4000868	      0xe800000000	                          call 0x400086d	       333	cache-tree.c	FUNCTION_12	WHILE_2	CALL_14
0x400086d	          0x4885c0	                           test rax, rax	       334	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4000870	            0x7471	                            je 0x40008e3	       334	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4000872	          0x4c29e0	                            sub rax, r12	       335	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4000875	          0x4889c2	                            mov rdx, rax	       335	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4000878	        0x8944243c	             mov dword [rsp + 0x3c], eax	       335	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x400087c	      0xb900000000	                              mov ecx, 0	       336	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	CALL_15
0x4000881	          0x4c89e6	                            mov rsi, r12	       336	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	CALL_15
0x4000884	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       336	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	CALL_15
0x4000889	      0xe83ef8ffff	                   call sym.find_subtree	       336	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	CALL_15
0x400088e	          0x4889c5	                            mov rbp, rax	       336	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	CALL_15
0x4000891	          0x4885c0	                           test rax, rax	       337	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9
0x4000894	            0x7519	                           jne 0x40008af	       337	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9
0x4000896	          0x4c89e9	                            mov rcx, r13	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_16
0x4000899	          0x4c89e2	                            mov rdx, r12	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_16
0x400089c	        0x8b74243c	            mov esi, dword [rsp + 0x3c] 	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_16
0x40008a0	      0xbf00000000	                              mov edi, 0	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_16
0x40008a5	      0xb800000000	                              mov eax, 0	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_16
0x40008aa	      0xe800000000	                          call 0x40008af	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_16
0x40008af	        0x44037008	               add r14d, dword [rax + 8]	       340	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40008b3	          0x488b00	                    mov rax, qword [rax]	       341	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40008b6	        0x4c8d7804	                      lea r15, [rax + 4]	       341	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40008ba	            0x8b00	                    mov eax, dword [rax]	       343	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40008bc	            0x89c1	                            mov ecx, eax	       343	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40008be	          0xc1e91f	                           shr ecx, 0x1f	       343	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40008c1	        0x894c2438	             mov dword [rsp + 0x38], ecx	       343	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40008c5	        0x894c244c	             mov dword [rsp + 0x4c], ecx	       346	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_10
0x40008c9	    0xc74424180040	         mov dword [rsp + 0x18], 0x4000 	       346	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_10
0x40008d1	            0x85c0	                           test eax, eax	       346	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_10
0x40008d3	      0xb801000000	                              mov eax, 1	       346	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_10
0x40008d8	       0xf49442434	          cmovns eax, dword [rsp + 0x34]	       346	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_10
0x40008dd	        0x89442434	             mov dword [rsp + 0x34], eax	       346	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_10
0x40008e1	            0xeb2c	                           jmp 0x400090f	       346	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_10
0x40008e3	        0x4c8d7b44	                   lea r15, [rbx + 0x44]	       350	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x40008e7	          0x8b4334	            mov eax, dword [rbx + 0x34] 	       351	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x40008ea	        0x89442418	             mov dword [rsp + 0x18], eax	       351	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x40008ee	        0x2b6c2404	                sub ebp, dword [rsp + 4]	       352	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x40008f2	        0x896c243c	             mov dword [rsp + 0x3c], ebp	       352	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x40008f6	        0x4183c601	                             add r14d, 1	       353	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x40008fa	    0xc74424380000	               mov dword [rsp + 0x38], 0	       326	cache-tree.c	FUNCTION_12	WHILE_2
0x4000902	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x400090a	      0xbd00000000	                              mov ebp, 0	       320	cache-tree.c	FUNCTION_12	WHILE_2
0x400090f	      0x4c897c2428	             mov qword [rsp + 0x28], r15	       990	cache.h	FUNCTION_56	CALL_1
0x4000914	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_53	CALL_1
0x4000919	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_53	CALL_1
0x400091e	          0x4c89ff	                            mov rdi, r15	       975	cache.h	FUNCTION_53	CALL_1
0x4000921	      0xe800000000	                          call 0x4000926	       975	cache.h	FUNCTION_53	CALL_1
0x4000926	            0x85c0	                           test eax, eax	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000928	            0x741d	                            je 0x4000947	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x400092a	      0x807c244b00	                cmp byte [rsp + 0x4b], 0	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x400092f	            0x7465	                            je 0x4000996	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000931	    0x817c241800e0	         cmp dword [rsp + 0x18], 0xe000 	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000939	            0x745b	                            je 0x4000996	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x400093b	          0x4c89ff	                            mov rdi, r15	       357	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_18
0x400093e	      0xe800000000	                          call 0x4000943	       357	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_18
0x4000943	            0x85c0	                           test eax, eax	       357	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_18
0x4000945	            0x754f	                           jne 0x4000996	       357	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_18
0x4000947	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       358	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_19
0x400094c	      0xe800000000	                          call 0x4000951	       358	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_19
0x4000951	      0xb8ffffffff	                     mov eax, 0xffffffff	       360	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	IF_12
0x4000956	      0x837c244c00	               cmp dword [rsp + 0x4c], 0	       359	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	IF_12
0x400095b	     0xf85f1010000	                           jne 0x4000b52	       359	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	IF_12
0x4000961	        0x8b6c243c	            mov ebp, dword [rsp + 0x3c] 	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000965	         0x36c2404	                add ebp, dword [rsp + 4]	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000969	          0x4c89ff	                            mov rdi, r15	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x400096c	      0xe800000000	                          call 0x4000971	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000971	          0x4d89e8	                             mov r8, r13	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000974	            0x89e9	                            mov ecx, ebp	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000976	          0x4889c2	                            mov rdx, rax	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000979	        0x8b742418	            mov esi, dword [rsp + 0x18] 	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x400097d	      0xbf00000000	                              mov edi, 0	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000982	      0xb800000000	                              mov eax, 0	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000987	      0xe800000000	                          call 0x400098c	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x400098c	      0xb8ffffffff	                     mov eax, 0xffffffff	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000991	      0xe9bc010000	                           jmp 0x4000b52	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000996	          0x8b4338	            mov eax, dword [rbx + 0x38] 	       370	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x4000999	      0xa900000200	                       test eax, 0x20000	       370	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x400099e	            0x740d	                            je 0x40009ad	       370	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x40009a0	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       371	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x40009a5	          0x830001	                      add dword [rax], 1	       371	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x40009a8	      0xe98a000000	                           jmp 0x4000a37	       372	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x40009ad	          0x4885ed	                           test rbp, rbp	       380	cache-tree.c	FUNCTION_12	WHILE_2	IF_14	CALL_22
0x40009b0	            0x7507	                           jne 0x40009b9	       380	cache-tree.c	FUNCTION_12	WHILE_2	IF_14	CALL_22
0x40009b2	      0xa900000020	                    test eax, 0x20000000	       380	cache-tree.c	FUNCTION_12	WHILE_2	IF_14	CALL_22
0x40009b7	            0x7576	                           jne 0x4000a2f	       380	cache-tree.c	FUNCTION_12	WHILE_2	IF_14	CALL_22
0x40009b9	      0x837c243800	               cmp dword [rsp + 0x38], 0	       388	cache-tree.c	FUNCTION_12	WHILE_2	IF_15	CALL_23
0x40009be	            0x7418	                            je 0x40009d8	       388	cache-tree.c	FUNCTION_12	WHILE_2	IF_15	CALL_23
0x40009c0	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_53	CALL_1
0x40009c5	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_53	CALL_1
0x40009ca	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       975	cache.h	FUNCTION_53	CALL_1
0x40009cf	      0xe800000000	                          call 0x40009d4	       975	cache.h	FUNCTION_53	CALL_1
0x40009d4	            0x85c0	                           test eax, eax	       388	cache-tree.c	FUNCTION_12	WHILE_2	IF_15	CALL_23
0x40009d6	            0x745f	                            je 0x4000a37	       388	cache-tree.c	FUNCTION_12	WHILE_2	IF_15	CALL_23
0x40009d8	        0x8b5c243c	            mov ebx, dword [rsp + 0x3c] 	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_24
0x40009dc	          0x8d7364	                   lea esi, [rbx + 0x64]	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_24
0x40009df	          0x4863f6	                         movsxd rsi, esi	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_24
0x40009e2	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_24
0x40009e7	      0xe800000000	                          call 0x40009ec	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_24
0x40009ec	    0x41b900000000	                              mov r9d, 0	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x40009f2	          0x4d89e0	                             mov r8, r12	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x40009f5	            0x89d9	                            mov ecx, ebx	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x40009f7	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x40009fb	      0xbe00000000	                              mov esi, 0	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x4000a00	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x4000a05	      0xb800000000	                              mov eax, 0	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x4000a0a	      0xe800000000	                          call 0x4000a0f	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x4000a0f	    0x488b05000000	            mov rax, qword [0x04000a16] 	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_26
0x4000a16	        0x488b4058	            mov rax, qword [rax + 0x58] 	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_26
0x4000a1a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_26
0x4000a1e	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_26
0x4000a23	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_26
0x4000a28	      0xe800000000	                          call 0x4000a2d	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_26
0x4000a2d	            0xeb08	                           jmp 0x4000a37	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_26
0x4000a2f	    0xc74424340100	               mov dword [rsp + 0x34], 1	       381	cache-tree.c	FUNCTION_12	WHILE_2	IF_14
0x4000a37	      0x443b742430	           cmp r14d, dword [rsp + 0x30] 	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x4000a3c	     0xf8cdffdffff	                            jl 0x4000821	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x4000a42	      0x4c8b7c2450	            mov r15, qword [rsp + 0x50] 	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x4000a47	            0xeb2c	                           jmp 0x4000a75	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x4000a49	    0x41be00000000	                             mov r14d, 0	       317	cache-tree.c	FUNCTION_12
0x4000a4f	    0xc74424340000	               mov dword [rsp + 0x34], 0	       247	cache-tree.c	FUNCTION_12
0x4000a57	            0xeb1c	                           jmp 0x4000a75	       247	cache-tree.c	FUNCTION_12
0x4000a59	    0x41be00000000	                             mov r14d, 0	       317	cache-tree.c	FUNCTION_12
0x4000a5f	    0xc74424340000	               mov dword [rsp + 0x34], 0	       247	cache-tree.c	FUNCTION_12
0x4000a67	            0xeb0c	                           jmp 0x4000a75	       247	cache-tree.c	FUNCTION_12
0x4000a69	      0x4c8b7c2450	            mov r15, qword [rsp + 0x50] 	       247	cache-tree.c	FUNCTION_12
0x4000a6e	            0xeb05	                           jmp 0x4000a75	       247	cache-tree.c	FUNCTION_12
0x4000a70	      0x4c8b7c2450	            mov r15, qword [rsp + 0x50] 	       247	cache-tree.c	FUNCTION_12
0x4000a75	      0x837c245800	               cmp dword [rsp + 0x58], 0	       401	cache-tree.c	FUNCTION_12	IF_16
0x4000a7a	            0x745e	                            je 0x4000ada	       401	cache-tree.c	FUNCTION_12	IF_16
0x4000a7c	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	       403	cache-tree.c	FUNCTION_12	IF_16	CALL_28
0x4000a84	    0x488b15000000	            mov rdx, qword [0x04000a8b] 	       403	cache-tree.c	FUNCTION_12	IF_16	CALL_28
0x4000a8b	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	       403	cache-tree.c	FUNCTION_12	IF_16	CALL_28
0x4000a90	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	       403	cache-tree.c	FUNCTION_12	IF_16	CALL_28
0x4000a95	      0xe800000000	                          call 0x4000a9a	       403	cache-tree.c	FUNCTION_12	IF_16	CALL_28
0x4000a9a	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       404	cache-tree.c	FUNCTION_12	IF_16	IF_17	CALL_29
0x4000aa2	      0xe800000000	                          call 0x4000aa7	       404	cache-tree.c	FUNCTION_12	IF_16	IF_17	CALL_29
0x4000aa7	            0x85c0	                           test eax, eax	       404	cache-tree.c	FUNCTION_12	IF_16	IF_17	CALL_29
0x4000aa9	            0x7425	                            je 0x4000ad0	       404	cache-tree.c	FUNCTION_12	IF_16	IF_17	CALL_29
0x4000aab	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	        53	string3.h	FUNCTION_73	CALL_3
0x4000ab3	        0x49894704	                mov qword [r15 + 4], rax	        53	string3.h	FUNCTION_73	CALL_3
0x4000ab7	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	        53	string3.h	FUNCTION_73	CALL_3
0x4000abf	        0x4989470c	              mov qword [r15 + 0xc], rax	        53	string3.h	FUNCTION_73	CALL_3
0x4000ac3	    0x8b8424900000	            mov eax, dword [rsp + 0x90] 	        53	string3.h	FUNCTION_73	CALL_3
0x4000aca	        0x41894714	             mov dword [r15 + 0x14], eax	        53	string3.h	FUNCTION_73	CALL_3
0x4000ace	            0xeb5c	                           jmp 0x4000b2c	        53	string3.h	FUNCTION_73	CALL_3
0x4000ad0	    0xc74424340100	               mov dword [rsp + 0x34], 1	       407	cache-tree.c	FUNCTION_12	IF_16	ELSE_2
0x4000ad8	            0xeb52	                           jmp 0x4000b2c	       407	cache-tree.c	FUNCTION_12	IF_16	ELSE_2
0x4000ada	      0x837c245c00	               cmp dword [rsp + 0x5c], 0	       408	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18
0x4000adf	            0x741c	                            je 0x4000afd	       408	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18
0x4000ae1	        0x498d4f04	                      lea rcx, [r15 + 4]	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_31
0x4000ae5	    0x488b15000000	            mov rdx, qword [0x04000aec] 	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_31
0x4000aec	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_31
0x4000af1	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_31
0x4000af6	      0xe800000000	                          call 0x4000afb	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_31
0x4000afb	            0xeb2f	                           jmp 0x4000b2c	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_31
0x4000afd	        0x498d4f04	                      lea rcx, [r15 + 4]	       410	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_32
0x4000b01	    0x488b15000000	            mov rdx, qword [0x04000b08] 	       410	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_32
0x4000b08	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	       410	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_32
0x4000b0d	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	       410	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_32
0x4000b12	      0xe800000000	                          call 0x4000b17	       410	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_32
0x4000b17	            0x85c0	                           test eax, eax	       410	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_32
0x4000b19	            0x7411	                            je 0x4000b2c	       410	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_32
0x4000b1b	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       412	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_33
0x4000b20	      0xe800000000	                          call 0x4000b25	       412	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_33
0x4000b25	      0xb8ffffffff	                     mov eax, 0xffffffff	       413	cache-tree.c	FUNCTION_12	ELSE_4	IF_19
0x4000b2a	            0xeb26	                           jmp 0x4000b52	       413	cache-tree.c	FUNCTION_12	ELSE_4	IF_19
0x4000b2c	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       416	cache-tree.c	FUNCTION_12	CALL_34
0x4000b31	      0xe800000000	                          call 0x4000b36	       416	cache-tree.c	FUNCTION_12	CALL_34
0x4000b36	      0xb8ffffffff	                     mov eax, 0xffffffff	       417	cache-tree.c	FUNCTION_12
0x4000b3b	      0x837c243400	               cmp dword [rsp + 0x34], 0	       417	cache-tree.c	FUNCTION_12
0x4000b40	            0x750a	                           jne 0x4000b4c	       417	cache-tree.c	FUNCTION_12
0x4000b42	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       417	cache-tree.c	FUNCTION_12
0x4000b47	          0x4489f0	                           mov eax, r14d	       417	cache-tree.c	FUNCTION_12
0x4000b4a	            0x2b06	                    sub eax, dword [rsi]	       417	cache-tree.c	FUNCTION_12
0x4000b4c	          0x418907	                    mov dword [r15], eax	       417	cache-tree.c	FUNCTION_12
0x4000b4f	          0x4489f0	                           mov eax, r14d	       423	cache-tree.c	FUNCTION_12
0x4000b52	    0x488bb4249800	            mov rsi, qword [rsp + 0x98] 	       424	cache-tree.c	FUNCTION_12
0x4000b5a	    0x644833342528	                xor rsi, qword fs:[0x28]	       424	cache-tree.c	FUNCTION_12
0x4000b63	            0x747b	                            je 0x4000be0	       424	cache-tree.c	FUNCTION_12
0x4000b65	            0xeb74	                           jmp 0x4000bdb	       424	cache-tree.c	FUNCTION_12
0x4000b67	      0xbe00200000	                         mov esi, 0x2000	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000b6c	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000b71	      0xe800000000	                          call 0x4000b76	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000b76	      0xe95efcffff	                           jmp 0x40007d9	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000b7b	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000b80	            0xeb05	                           jmp 0x4000b87	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000b82	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000b87	        0x4d8b6f20	            mov r13, qword [r15 + 0x20] 	       206	cache-tree.c	FUNCTION_10
0x4000b8b	        0x458b7718	           mov r14d, dword [r15 + 0x18] 	       207	cache-tree.c	FUNCTION_10
0x4000b8f	          0x4585f6	                         test r14d, r14d	       209	cache-tree.c	FUNCTION_10	FOR_1
0x4000b92	     0xf8fe4fbffff	                            jg 0x400077c	       209	cache-tree.c	FUNCTION_10	FOR_1
0x4000b98	            0xebcd	                           jmp 0x4000b67	       209	cache-tree.c	FUNCTION_10	FOR_1
0x4000b9a	      0xbe00200000	                         mov esi, 0x2000	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000b9f	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000ba4	      0xe800000000	                          call 0x4000ba9	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000ba9	    0x41be00000000	                             mov r14d, 0	       317	cache-tree.c	FUNCTION_12
0x4000baf	    0xc74424340000	               mov dword [rsp + 0x34], 0	       247	cache-tree.c	FUNCTION_12
0x4000bb7	      0xe9b9feffff	                           jmp 0x4000a75	       247	cache-tree.c	FUNCTION_12
0x4000bbc	        0x458b7718	           mov r14d, dword [r15 + 0x18] 	       207	cache-tree.c	FUNCTION_10
0x4000bc0	          0x4585f6	                         test r14d, r14d	       209	cache-tree.c	FUNCTION_10	FOR_1
0x4000bc3	            0x7ed5	                           jle 0x4000b9a	       209	cache-tree.c	FUNCTION_10	FOR_1
0x4000bc5	        0x4d8b6f20	            mov r13, qword [r15 + 0x20] 	       206	cache-tree.c	FUNCTION_10
0x4000bc9	      0xe9aefbffff	                           jmp 0x400077c	       206	cache-tree.c	FUNCTION_10
0x4000bce	      0x837c243000	               cmp dword [rsp + 0x30], 0	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4000bd3	     0xf8f85faffff	                            jg 0x400065e	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4000bd9	            0xebbf	                           jmp 0x4000b9a	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4000bdb	      0xe800000000	                          call 0x4000be0	       424	cache-tree.c	FUNCTION_12
0x4000be0	    0x4881c4a80000	                           add rsp, 0xa8	       424	cache-tree.c	FUNCTION_12
0x4000be7	              0x5b	                                 pop rbx	       424	cache-tree.c	FUNCTION_12
0x4000be8	              0x5d	                                 pop rbp	       424	cache-tree.c	FUNCTION_12
0x4000be9	            0x415c	                                 pop r12	       424	cache-tree.c	FUNCTION_12
0x4000beb	            0x415d	                                 pop r13	       424	cache-tree.c	FUNCTION_12
0x4000bed	            0x415e	                                 pop r14	       424	cache-tree.c	FUNCTION_12
0x4000bef	            0x415f	                                 pop r15	       424	cache-tree.c	FUNCTION_12
0x4000bf1	              0xc3	                                     ret	       424	cache-tree.c	FUNCTION_12
do_invalidate_path	WHILE,0:FOR,0:DO,0:functions,0:IF,4:SWITCH,0:ELSE,0:CALL,8	75
0x4000471	          0x4885ff	                           test rdi, rdi	       116	cache-tree.c	FUNCTION_7	IF_1
0x4000474	     0xf84f2000000	                            je 0x400056c	       116	cache-tree.c	FUNCTION_7	IF_1
0x400047a	            0x4155	                                push r13	       100	cache-tree.c	FUNCTION_7
0x400047c	            0x4154	                                push r12	       100	cache-tree.c	FUNCTION_7
0x400047e	              0x55	                                push rbp	       100	cache-tree.c	FUNCTION_7
0x400047f	              0x53	                                push rbx	       100	cache-tree.c	FUNCTION_7
0x4000480	        0x4883ec08	                              sub rsp, 8	       100	cache-tree.c	FUNCTION_7
0x4000484	          0x4889f5	                            mov rbp, rsi	       100	cache-tree.c	FUNCTION_7
0x4000487	          0x4889fb	                            mov rbx, rdi	       100	cache-tree.c	FUNCTION_7
0x400048a	      0xbe2f000000	                           mov esi, 0x2f	       118	cache-tree.c	FUNCTION_7	CALL_2
0x400048f	          0x4889ef	                            mov rdi, rbp	       118	cache-tree.c	FUNCTION_7	CALL_2
0x4000492	      0xe800000000	                          call 0x4000497	       118	cache-tree.c	FUNCTION_7	CALL_2
0x4000497	          0x4989c4	                            mov r12, rax	       118	cache-tree.c	FUNCTION_7	CALL_2
0x400049a	          0x4889c2	                            mov rdx, rax	       119	cache-tree.c	FUNCTION_7
0x400049d	          0x4829ea	                            sub rdx, rbp	       119	cache-tree.c	FUNCTION_7
0x40004a0	    0xc703ffffffff	            mov dword [rbx], 0xffffffff 	       120	cache-tree.c	FUNCTION_7
0x40004a6	          0x803800	                       cmp byte [rax], 0	       121	cache-tree.c	FUNCTION_7	IF_2
0x40004a9	     0xf858c000000	                           jne 0x400053b	       121	cache-tree.c	FUNCTION_7	IF_2
0x40004af	          0x4889ee	                            mov rsi, rbp	       123	cache-tree.c	FUNCTION_7	IF_2	CALL_3
0x40004b2	          0x4889df	                            mov rdi, rbx	       123	cache-tree.c	FUNCTION_7	IF_2	CALL_3
0x40004b5	      0xe886fbffff	                    call sym.subtree_pos	       123	cache-tree.c	FUNCTION_7	IF_2	CALL_3
0x40004ba	            0x89c5	                            mov ebp, eax	       123	cache-tree.c	FUNCTION_7	IF_2	CALL_3
0x40004bc	            0x85c0	                           test eax, eax	       124	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x40004be	     0xf88ae000000	                            js 0x4000572	       124	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x40004c4	          0x4c63e8	                         movsxd r13, eax	       125	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x40004c7	    0x4e8d24ed0000	                        lea r12, [r13*8]	       125	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x40004cf	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       125	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x40004d3	        0x4a8b3ce8	            mov rdi, qword [rax + r13*8]	       125	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x40004d7	      0xe800000000	                          call 0x40004dc	       125	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x40004dc	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       126	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_5
0x40004e0	        0x4a8b3ce8	            mov rdi, qword [rax + r13*8]	       126	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_5
0x40004e4	      0xe800000000	                          call 0x40004e9	       126	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_5
0x40004e9	            0xf7d5	                                 not ebp	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40004eb	            0x89ea	                            mov edx, ebp	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40004ed	           0x35318	             add edx, dword [rbx + 0x18]	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40004f0	          0x4863d2	                         movsxd rdx, edx	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40004f3	          0x4885d2	                           test rdx, rdx	       861	git-compat-util.h	FUNCTION_103	IF_1
0x40004f6	            0x7438	                            je 0x4000530	       861	git-compat-util.h	FUNCTION_103	IF_1
0x40004f8	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_100	IF_1	CALL_1
0x4000502	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_100	IF_1	CALL_1
0x4000505	            0x7614	                           jbe 0x400051b	       795	git-compat-util.h	FUNCTION_100	IF_1	CALL_1
0x4000507	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_100	IF_1	CALL_2
0x400050c	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_100	IF_1	CALL_2
0x4000511	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_100	IF_1	CALL_2
0x4000516	      0xe800000000	                          call 0x400051b	       796	git-compat-util.h	FUNCTION_100	IF_1	CALL_2
0x400051b	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x400051f	        0x48c1e203	                              shl rdx, 3	        59	string3.h	FUNCTION_74	CALL_3
0x4000523	      0x4a8d742708	                lea rsi, [rdi + r12 + 8]	        59	string3.h	FUNCTION_74	CALL_3
0x4000528	          0x4c01e7	                            add rdi, r12	        59	string3.h	FUNCTION_74	CALL_3
0x400052b	      0xe800000000	                          call 0x4000530	        59	string3.h	FUNCTION_74	CALL_3
0x4000530	        0x836b1801	               sub dword [rbx + 0x18], 1	       135	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x4000534	      0xb801000000	                              mov eax, 1	       137	cache-tree.c	FUNCTION_7	IF_2
0x4000539	            0xeb3c	                           jmp 0x4000577	       137	cache-tree.c	FUNCTION_7	IF_2
0x400053b	      0xb900000000	                              mov ecx, 0	       139	cache-tree.c	FUNCTION_7	CALL_7
0x4000540	          0x4889ee	                            mov rsi, rbp	       139	cache-tree.c	FUNCTION_7	CALL_7
0x4000543	          0x4889df	                            mov rdi, rbx	       139	cache-tree.c	FUNCTION_7	CALL_7
0x4000546	      0xe881fbffff	                   call sym.find_subtree	       139	cache-tree.c	FUNCTION_7	CALL_7
0x400054b	          0x4889c2	                            mov rdx, rax	       139	cache-tree.c	FUNCTION_7	CALL_7
0x400054e	      0xb801000000	                              mov eax, 1	       142	cache-tree.c	FUNCTION_7
0x4000553	          0x4885d2	                           test rdx, rdx	       140	cache-tree.c	FUNCTION_7	IF_4
0x4000556	            0x741f	                            je 0x4000577	       140	cache-tree.c	FUNCTION_7	IF_4
0x4000558	      0x498d742401	                      lea rsi, [r12 + 1]	       141	cache-tree.c	FUNCTION_7	CALL_8
0x400055d	          0x488b3a	                    mov rdi, qword [rdx]	       141	cache-tree.c	FUNCTION_7	CALL_8
0x4000560	      0xe80cffffff	             call sym.do_invalidate_path	       141	cache-tree.c	FUNCTION_7	CALL_8
0x4000565	      0xb801000000	                              mov eax, 1	       142	cache-tree.c	FUNCTION_7
0x400056a	            0xeb0b	                           jmp 0x4000577	       142	cache-tree.c	FUNCTION_7
0x400056c	      0xb800000000	                              mov eax, 0	       117	cache-tree.c	FUNCTION_7	IF_1
0x4000571	              0xc3	                                     ret	       143	cache-tree.c	FUNCTION_7
0x4000572	      0xb801000000	                              mov eax, 1	       137	cache-tree.c	FUNCTION_7	IF_2
0x4000577	        0x4883c408	                              add rsp, 8	       143	cache-tree.c	FUNCTION_7
0x400057b	              0x5b	                                 pop rbx	       143	cache-tree.c	FUNCTION_7
0x400057c	              0x5d	                                 pop rbp	       143	cache-tree.c	FUNCTION_7
0x400057d	            0x415c	                                 pop r12	       143	cache-tree.c	FUNCTION_7
0x400057f	            0x415d	                                 pop r13	       143	cache-tree.c	FUNCTION_7
0x4000581	              0xc3	                                     ret	       143	cache-tree.c	FUNCTION_7
read_one	WHILE,2:FOR,1:DO,0:functions,0:IF,9:SWITCH,0:ELSE,1:CALL,12	153
0x4000c23	            0x4157	                                push r15	       488	cache-tree.c	FUNCTION_16
0x4000c25	            0x4156	                                push r14	       488	cache-tree.c	FUNCTION_16
0x4000c27	            0x4155	                                push r13	       488	cache-tree.c	FUNCTION_16
0x4000c29	            0x4154	                                push r12	       488	cache-tree.c	FUNCTION_16
0x4000c2b	              0x55	                                push rbp	       488	cache-tree.c	FUNCTION_16
0x4000c2c	              0x53	                                push rbx	       488	cache-tree.c	FUNCTION_16
0x4000c2d	        0x4883ec48	                           sub rsp, 0x48	       488	cache-tree.c	FUNCTION_16
0x4000c31	      0x48897c2408	                mov qword [rsp + 8], rdi	       488	cache-tree.c	FUNCTION_16
0x4000c36	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	       488	cache-tree.c	FUNCTION_16
0x4000c3f	      0x48895c2438	             mov qword [rsp + 0x38], rbx	       488	cache-tree.c	FUNCTION_16
0x4000c44	            0x31db	                            xor ebx, ebx	       488	cache-tree.c	FUNCTION_16
0x4000c46	          0x488b17	                    mov rdx, qword [rdi]	       489	cache-tree.c	FUNCTION_16
0x4000c49	      0x4889542418	             mov qword [rsp + 0x18], rdx	       489	cache-tree.c	FUNCTION_16
0x4000c4e	          0x488b06	                    mov rax, qword [rsi]	       490	cache-tree.c	FUNCTION_16
0x4000c51	      0x4889442420	             mov qword [rsp + 0x20], rax	       490	cache-tree.c	FUNCTION_16
0x4000c56	    0x488b0d000000	            mov rcx, qword [0x04000c5d] 	       495	cache-tree.c	FUNCTION_16
0x4000c5d	        0x488b4958	            mov rcx, qword [rcx + 0x58] 	       495	cache-tree.c	FUNCTION_16
0x4000c61	        0x488b5910	            mov rbx, qword [rcx + 0x10] 	       495	cache-tree.c	FUNCTION_16
0x4000c65	    0x48c744243000	               mov qword [rsp + 0x30], 0	       497	cache-tree.c	FUNCTION_16
0x4000c6e	          0x4885c0	                           test rax, rax	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000c71	     0xf846a010000	                            je 0x4000de1	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000c77	          0x4989f7	                            mov r15, rsi	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000c7a	          0x803a00	                       cmp byte [rdx], 0	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000c7d	     0xf847f010000	                            je 0x4000e02	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000c83	        0x4883e801	                              sub rax, 1	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000c87	            0xeb03	                           jmp 0x4000c8c	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000c89	          0x4889c8	                            mov rax, rcx	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000c8c	      0x4889442420	             mov qword [rsp + 0x20], rax	       500	cache-tree.c	FUNCTION_16	WHILE_1
0x4000c91	        0x4883c201	                              add rdx, 1	       501	cache-tree.c	FUNCTION_16	WHILE_1
0x4000c95	      0x4889542418	             mov qword [rsp + 0x18], rdx	       501	cache-tree.c	FUNCTION_16	WHILE_1
0x4000c9a	          0x4885c0	                           test rax, rax	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000c9d	     0xf843e010000	                            je 0x4000de1	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000ca3	        0x488d48ff	                      lea rcx, [rax - 1]	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000ca7	          0x803a00	                       cmp byte [rdx], 0	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000caa	            0x75dd	                           jne 0x4000c89	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000cac	      0xe951010000	                           jmp 0x4000e02	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000cb1	      0xba0a000000	                            mov edx, 0xa	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4000cb6	      0x488d742428	                   lea rsi, [rsp + 0x28]	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4000cbb	          0x4889ef	                            mov rdi, rbp	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4000cbe	      0xe800000000	                          call 0x4000cc3	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4000cc3	          0x4989c6	                            mov r14, rax	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4000cc6	      0x483b6c2428	            cmp rbp, qword [rsp + 0x28] 	       514	cache-tree.c	FUNCTION_16	IF_3
0x4000ccb	     0xf8410010000	                            je 0x4000de1	       514	cache-tree.c	FUNCTION_16	IF_3
0x4000cd1	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000cd6	          0x4885c0	                           test rax, rax	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000cd9	     0xf8402010000	                            je 0x4000de1	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000cdf	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000ce4	           0xfb60a	                   movzx ecx, byte [rdx]	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000ce7	          0x80f90a	                             cmp cl, 0xa	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000cea	     0xf8458010000	                            je 0x4000e48	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000cf0	            0x84c9	                             test cl, cl	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000cf2	     0xf8450010000	                            je 0x4000e48	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000cf8	        0x4883e801	                              sub rax, 1	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000cfc	            0xeb03	                           jmp 0x4000d01	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000cfe	          0x4889f0	                            mov rax, rsi	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000d01	      0x4889442420	             mov qword [rsp + 0x20], rax	       517	cache-tree.c	FUNCTION_16	WHILE_2
0x4000d06	        0x4883c201	                              add rdx, 1	       518	cache-tree.c	FUNCTION_16	WHILE_2
0x4000d0a	      0x4889542418	             mov qword [rsp + 0x18], rdx	       518	cache-tree.c	FUNCTION_16	WHILE_2
0x4000d0f	          0x4885c0	                           test rax, rax	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000d12	     0xf84c9000000	                            je 0x4000de1	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000d18	           0xfb60a	                   movzx ecx, byte [rdx]	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000d1b	        0x488d70ff	                      lea rsi, [rax - 1]	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000d1f	          0x80f90a	                             cmp cl, 0xa	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000d22	     0xf8420010000	                            je 0x4000e48	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000d28	            0x84c9	                             test cl, cl	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000d2a	            0x75d2	                           jne 0x4000cfe	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000d2c	      0xe917010000	                           jmp 0x4000e48	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000d31	            0x89db	                            mov ebx, ebx	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000d33	          0x4839d8	                            cmp rax, rbx	       524	cache-tree.c	FUNCTION_16	IF_5	IF_6
0x4000d36	     0xf82a5000000	                            jb 0x4000de1	       524	cache-tree.c	FUNCTION_16	IF_5	IF_6
0x4000d3c	        0x4883c704	                              add rdi, 4	        53	string3.h	FUNCTION_73	CALL_3
0x4000d40	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_73	CALL_3
0x4000d43	      0xe800000000	                          call 0x4000d48	        53	string3.h	FUNCTION_73	CALL_3
0x4000d48	      0x48015c2418	            add qword [rsp + 0x18], rbx 	       527	cache-tree.c	FUNCTION_16	IF_5
0x4000d4d	      0x48295c2420	             sub qword [rsp + 0x20], rbx	       528	cache-tree.c	FUNCTION_16	IF_5
0x4000d52	          0x4589f5	                          mov r13d, r14d	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4000d55	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       546	cache-tree.c	FUNCTION_16
0x4000d5a	        0x418d7e02	                      lea edi, [r14 + 2]	       546	cache-tree.c	FUNCTION_16
0x4000d5e	          0x897b1c	             mov dword [rbx + 0x1c], edi	       546	cache-tree.c	FUNCTION_16
0x4000d61	          0x4863ff	                         movsxd rdi, edi	       547	cache-tree.c	FUNCTION_16	CALL_8
0x4000d64	      0xbe08000000	                              mov esi, 8	       547	cache-tree.c	FUNCTION_16	CALL_8
0x4000d69	      0xe800000000	                          call 0x4000d6e	       547	cache-tree.c	FUNCTION_16	CALL_8
0x4000d6e	        0x48894320	             mov qword [rbx + 0x20], rax	       547	cache-tree.c	FUNCTION_16	CALL_8
0x4000d72	          0x4585f6	                         test r14d, r14d	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4000d75	            0x7e39	                           jle 0x4000db0	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4000d77	      0xbd00000000	                              mov ebp, 0	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4000d7c	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	       552	cache-tree.c	FUNCTION_16	FOR_1
0x4000d81	      0x488d742420	                   lea rsi, [rsp + 0x20]	       554	cache-tree.c	FUNCTION_16	FOR_1	CALL_9
0x4000d86	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	       554	cache-tree.c	FUNCTION_16	FOR_1	CALL_9
0x4000d8b	      0xe893feffff	                       call sym.read_one	       554	cache-tree.c	FUNCTION_16	FOR_1	CALL_9
0x4000d90	          0x4889c3	                            mov rbx, rax	       554	cache-tree.c	FUNCTION_16	FOR_1	CALL_9
0x4000d93	          0x4885c0	                           test rax, rax	       555	cache-tree.c	FUNCTION_16	FOR_1	IF_8
0x4000d96	            0x7449	                            je 0x4000de1	       555	cache-tree.c	FUNCTION_16	FOR_1	IF_8
0x4000d98	          0x4c89e6	                            mov rsi, r12	       557	cache-tree.c	FUNCTION_16	FOR_1	CALL_10
0x4000d9b	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       557	cache-tree.c	FUNCTION_16	FOR_1	CALL_10
0x4000da0	      0xe800000000	                          call 0x4000da5	       557	cache-tree.c	FUNCTION_16	FOR_1	CALL_10
0x4000da5	          0x488918	                    mov qword [rax], rbx	       558	cache-tree.c	FUNCTION_16	FOR_1
0x4000da8	          0x83c501	                              add ebp, 1	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4000dab	          0x4139ed	                           cmp r13d, ebp	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4000dae	            0x75cc	                           jne 0x4000d7c	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4000db0	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       560	cache-tree.c	FUNCTION_16	IF_9
0x4000db5	        0x443b7018	           cmp r14d, dword [rax + 0x18] 	       560	cache-tree.c	FUNCTION_16	IF_9
0x4000db9	            0x740f	                            je 0x4000dca	       560	cache-tree.c	FUNCTION_16	IF_9
0x4000dbb	      0xbf00000000	                              mov edi, 0	       561	cache-tree.c	FUNCTION_16	CALL_11
0x4000dc0	      0xb800000000	                              mov eax, 0	       561	cache-tree.c	FUNCTION_16	CALL_11
0x4000dc5	      0xe800000000	                          call 0x4000dca	       561	cache-tree.c	FUNCTION_16	CALL_11
0x4000dca	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       562	cache-tree.c	FUNCTION_16
0x4000dcf	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       562	cache-tree.c	FUNCTION_16
0x4000dd4	          0x488913	                    mov qword [rbx], rdx	       562	cache-tree.c	FUNCTION_16
0x4000dd7	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       563	cache-tree.c	FUNCTION_16
0x4000ddc	          0x498917	                    mov qword [r15], rdx	       563	cache-tree.c	FUNCTION_16
0x4000ddf	            0xeb0f	                           jmp 0x4000df0	       564	cache-tree.c	FUNCTION_16
0x4000de1	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       567	cache-tree.c	FUNCTION_16	CALL_12
0x4000de6	      0xe800000000	                          call 0x4000deb	       567	cache-tree.c	FUNCTION_16	CALL_12
0x4000deb	      0xb800000000	                              mov eax, 0	       568	cache-tree.c	FUNCTION_16
0x4000df0	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       569	cache-tree.c	FUNCTION_16
0x4000df5	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       569	cache-tree.c	FUNCTION_16
0x4000dfe	            0x7477	                            je 0x4000e77	       569	cache-tree.c	FUNCTION_16
0x4000e00	            0xeb70	                           jmp 0x4000e72	       569	cache-tree.c	FUNCTION_16
0x4000e02	    0x488344241801	               add qword [rsp + 0x18], 1	       505	cache-tree.c	FUNCTION_16
0x4000e08	        0x4883e801	                              sub rax, 1	       505	cache-tree.c	FUNCTION_16
0x4000e0c	      0x4889442420	             mov qword [rsp + 0x20], rax	       505	cache-tree.c	FUNCTION_16
0x4000e11	      0xe800000000	                          call 0x4000e16	       506	cache-tree.c	FUNCTION_16	CALL_1
0x4000e16	          0x4889c5	                            mov rbp, rax	       506	cache-tree.c	FUNCTION_16	CALL_1
0x4000e19	      0x4889442430	             mov qword [rsp + 0x30], rax	       506	cache-tree.c	FUNCTION_16	CALL_1
0x4000e1e	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	       508	cache-tree.c	FUNCTION_16
0x4000e23	      0xba0a000000	                            mov edx, 0xa	       509	cache-tree.c	FUNCTION_16	CALL_2
0x4000e28	      0x488d742428	                   lea rsi, [rsp + 0x28]	       509	cache-tree.c	FUNCTION_16	CALL_2
0x4000e2d	          0x4c89e7	                            mov rdi, r12	       509	cache-tree.c	FUNCTION_16	CALL_2
0x4000e30	      0xe800000000	                          call 0x4000e35	       509	cache-tree.c	FUNCTION_16	CALL_2
0x4000e35	          0x894500	                    mov dword [rbp], eax	       509	cache-tree.c	FUNCTION_16	CALL_2
0x4000e38	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	       510	cache-tree.c	FUNCTION_16	IF_2
0x4000e3d	          0x4939ec	                            cmp r12, rbp	       510	cache-tree.c	FUNCTION_16	IF_2
0x4000e40	     0xf856bfeffff	                           jne 0x4000cb1	       510	cache-tree.c	FUNCTION_16	IF_2
0x4000e46	            0xeb99	                           jmp 0x4000de1	       510	cache-tree.c	FUNCTION_16	IF_2
0x4000e48	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       522	cache-tree.c	FUNCTION_16
0x4000e4d	        0x488d7701	                      lea rsi, [rdi + 1]	       522	cache-tree.c	FUNCTION_16
0x4000e51	      0x4889742418	             mov qword [rsp + 0x18], rsi	       522	cache-tree.c	FUNCTION_16
0x4000e56	        0x4883e801	                              sub rax, 1	       522	cache-tree.c	FUNCTION_16
0x4000e5a	      0x4889442420	             mov qword [rsp + 0x20], rax	       522	cache-tree.c	FUNCTION_16
0x4000e5f	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       523	cache-tree.c	FUNCTION_16	IF_5
0x4000e64	          0x833f00	                      cmp dword [rdi], 0	       523	cache-tree.c	FUNCTION_16	IF_5
0x4000e67	     0xf89c4feffff	                           jns 0x4000d31	       523	cache-tree.c	FUNCTION_16	IF_5
0x4000e6d	      0xe9e0feffff	                           jmp 0x4000d52	       523	cache-tree.c	FUNCTION_16	IF_5
0x4000e72	      0xe800000000	                          call 0x4000e77	       569	cache-tree.c	FUNCTION_16
0x4000e77	        0x4883c448	                           add rsp, 0x48	       569	cache-tree.c	FUNCTION_16
0x4000e7b	              0x5b	                                 pop rbx	       569	cache-tree.c	FUNCTION_16
0x4000e7c	              0x5d	                                 pop rbp	       569	cache-tree.c	FUNCTION_16
0x4000e7d	            0x415c	                                 pop r12	       569	cache-tree.c	FUNCTION_16
0x4000e7f	            0x415d	                                 pop r13	       569	cache-tree.c	FUNCTION_16
0x4000e81	            0x415e	                                 pop r14	       569	cache-tree.c	FUNCTION_16
0x4000e83	            0x415f	                                 pop r15	       569	cache-tree.c	FUNCTION_16
0x4000e85	              0xc3	                                     ret	       569	cache-tree.c	FUNCTION_16
prime_cache_tree	WHILE,0:FOR,0:DO,0:functions,0:IF,0:SWITCH,0:ELSE,0:CALL,3	17
0x40013d9	              0x55	                                push rbp	       686	cache-tree.c	FUNCTION_22
0x40013da	              0x53	                                push rbx	       686	cache-tree.c	FUNCTION_22
0x40013db	        0x4883ec08	                              sub rsp, 8	       686	cache-tree.c	FUNCTION_22
0x40013df	          0x4889fb	                            mov rbx, rdi	       686	cache-tree.c	FUNCTION_22
0x40013e2	          0x4889f5	                            mov rbp, rsi	       686	cache-tree.c	FUNCTION_22
0x40013e5	        0x488d7f20	                   lea rdi, [rdi + 0x20]	       687	cache-tree.c	FUNCTION_22	CALL_1
0x40013e9	      0xe800000000	                          call 0x40013ee	       687	cache-tree.c	FUNCTION_22	CALL_1
0x40013ee	      0xe800000000	                          call 0x40013f3	       688	cache-tree.c	FUNCTION_22	CALL_2
0x40013f3	        0x48894320	             mov qword [rbx + 0x20], rax	       688	cache-tree.c	FUNCTION_22	CALL_2
0x40013f7	          0x4889ee	                            mov rsi, rbp	       689	cache-tree.c	FUNCTION_22	CALL_3
0x40013fa	          0x4889c7	                            mov rdi, rax	       689	cache-tree.c	FUNCTION_22	CALL_3
0x40013fd	      0xe884faffff	           call sym.prime_cache_tree_rec	       689	cache-tree.c	FUNCTION_22	CALL_3
0x4001402	        0x834b1420	             or dword [rbx + 0x14], 0x20	       690	cache-tree.c	FUNCTION_22
0x4001406	        0x4883c408	                              add rsp, 8	       691	cache-tree.c	FUNCTION_22
0x400140a	              0x5b	                                 pop rbx	       691	cache-tree.c	FUNCTION_22
0x400140b	              0x5d	                                 pop rbp	       691	cache-tree.c	FUNCTION_22
0x400140c	              0xc3	                                     ret	       691	cache-tree.c	FUNCTION_22
write_index_as_tree	WHILE,0:FOR,0:DO,0:functions,0:IF,7:SWITCH,0:ELSE,1:CALL,12	93
0x4001265	            0x4156	                                push r14	       604	cache-tree.c	FUNCTION_19
0x4001267	            0x4155	                                push r13	       604	cache-tree.c	FUNCTION_19
0x4001269	            0x4154	                                push r12	       604	cache-tree.c	FUNCTION_19
0x400126b	              0x55	                                push rbp	       604	cache-tree.c	FUNCTION_19
0x400126c	              0x53	                                push rbx	       604	cache-tree.c	FUNCTION_19
0x400126d	        0x4883ec10	                           sub rsp, 0x10	       604	cache-tree.c	FUNCTION_19
0x4001271	          0x4889fd	                            mov rbp, rdi	       604	cache-tree.c	FUNCTION_19
0x4001274	          0x4889f3	                            mov rbx, rsi	       604	cache-tree.c	FUNCTION_19
0x4001277	          0x4989d4	                            mov r12, rdx	       604	cache-tree.c	FUNCTION_19
0x400127a	          0x4189ce	                           mov r14d, ecx	       604	cache-tree.c	FUNCTION_19
0x400127d	          0x4d89c5	                             mov r13, r8	       604	cache-tree.c	FUNCTION_19
0x4001280	    0x64488b042528	                mov rax, qword fs:[0x28]	       604	cache-tree.c	FUNCTION_19
0x4001289	      0x4889442408	                mov qword [rsp + 8], rax	       604	cache-tree.c	FUNCTION_19
0x400128e	            0x31c0	                            xor eax, eax	       604	cache-tree.c	FUNCTION_19
0x4001290	    0x48c704240000	                      mov qword [rsp], 0	       606	cache-tree.c	FUNCTION_19
0x4001298	      0xb900000000	                              mov ecx, 0	       175	lockfile.h	FUNCTION_113	CALL_1
0x400129d	      0xba01000000	                              mov edx, 1	       175	lockfile.h	FUNCTION_113	CALL_1
0x40012a2	          0x4c89e6	                            mov rsi, r12	       175	lockfile.h	FUNCTION_113	CALL_1
0x40012a5	          0x4889e7	                            mov rdi, rsp	       175	lockfile.h	FUNCTION_113	CALL_1
0x40012a8	      0xe800000000	                          call 0x40012ad	       175	lockfile.h	FUNCTION_113	CALL_1
0x40012ad	      0xe800000000	                          call 0x40012b2	       611	cache-tree.c	FUNCTION_19	CALL_3
0x40012b2	          0x4889c2	                            mov rdx, rax	       611	cache-tree.c	FUNCTION_19	CALL_3
0x40012b5	          0x4c89e6	                            mov rsi, r12	       611	cache-tree.c	FUNCTION_19	CALL_3
0x40012b8	          0x4889df	                            mov rdi, rbx	       611	cache-tree.c	FUNCTION_19	CALL_3
0x40012bb	      0xe800000000	                          call 0x40012c0	       611	cache-tree.c	FUNCTION_19	CALL_3
0x40012c0	            0x85c0	                           test eax, eax	       612	cache-tree.c	FUNCTION_19	IF_1
0x40012c2	     0xf88a7000000	                            js 0x400136f	       612	cache-tree.c	FUNCTION_19	IF_1
0x40012c8	        0x41f6c602	                            test r14b, 2	       616	cache-tree.c	FUNCTION_19	IF_2
0x40012cc	            0x7409	                            je 0x40012d7	       616	cache-tree.c	FUNCTION_19	IF_2
0x40012ce	        0x488d7b20	                   lea rdi, [rbx + 0x20]	       617	cache-tree.c	FUNCTION_19	CALL_4
0x40012d2	      0xe800000000	                          call 0x40012d7	       617	cache-tree.c	FUNCTION_19	CALL_4
0x40012d7	      0x48837b2000	               cmp qword [rbx + 0x20], 0	       619	cache-tree.c	FUNCTION_19	IF_3
0x40012dc	            0x7509	                           jne 0x40012e7	       619	cache-tree.c	FUNCTION_19	IF_3
0x40012de	      0xe800000000	                          call 0x40012e3	       620	cache-tree.c	FUNCTION_19	CALL_5
0x40012e3	        0x48894320	             mov qword [rbx + 0x20], rax	       620	cache-tree.c	FUNCTION_19	CALL_5
0x40012e7	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       622	cache-tree.c	FUNCTION_19	CALL_6
0x40012eb	      0xe800000000	                          call 0x40012f0	       622	cache-tree.c	FUNCTION_19	CALL_6
0x40012f0	            0x85c0	                           test eax, eax	       623	cache-tree.c	FUNCTION_19	IF_4
0x40012f2	            0x751f	                           jne 0x4001313	       623	cache-tree.c	FUNCTION_19	IF_4
0x40012f4	          0x4489f6	                           mov esi, r14d	       624	cache-tree.c	FUNCTION_19	IF_4	IF_5	CALL_7
0x40012f7	          0x4889df	                            mov rdi, rbx	       624	cache-tree.c	FUNCTION_19	IF_4	IF_5	CALL_7
0x40012fa	      0xe800000000	                          call 0x40012ff	       624	cache-tree.c	FUNCTION_19	IF_4	IF_5	CALL_7
0x40012ff	            0x85c0	                           test eax, eax	       624	cache-tree.c	FUNCTION_19	IF_4	IF_5	CALL_7
0x4001301	            0x7873	                            js 0x4001376	       624	cache-tree.c	FUNCTION_19	IF_4	IF_5	CALL_7
0x4001303	      0xba01000000	                              mov edx, 1	       628	cache-tree.c	FUNCTION_19	IF_4	CALL_8
0x4001308	          0x4889e6	                            mov rsi, rsp	       628	cache-tree.c	FUNCTION_19	IF_4	CALL_8
0x400130b	          0x4889df	                            mov rdi, rbx	       628	cache-tree.c	FUNCTION_19	IF_4	CALL_8
0x400130e	      0xe800000000	                          call 0x4001313	       628	cache-tree.c	FUNCTION_19	IF_4	CALL_8
0x4001313	          0x4d85ed	                           test r13, r13	       637	cache-tree.c	FUNCTION_19	IF_6
0x4001316	            0x7432	                            je 0x400134a	       637	cache-tree.c	FUNCTION_19	IF_6
0x4001318	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       639	cache-tree.c	FUNCTION_19	IF_6	CALL_9
0x400131c	          0x4c89ee	                            mov rsi, r13	       639	cache-tree.c	FUNCTION_19	IF_6	CALL_9
0x400131f	      0xe82fefffff	                call sym.cache_tree_find	       639	cache-tree.c	FUNCTION_19	IF_6	CALL_9
0x4001324	          0x4885c0	                           test rax, rax	       640	cache-tree.c	FUNCTION_19	IF_6	IF_7
0x4001327	            0x7454	                            je 0x400137d	       640	cache-tree.c	FUNCTION_19	IF_6	IF_7
0x4001329	        0x488d5004	                      lea rdx, [rax + 4]	        53	string3.h	FUNCTION_73	CALL_3
0x400132d	        0x488b4004	                mov rax, qword [rax + 4]	        53	string3.h	FUNCTION_73	CALL_3
0x4001331	        0x48894500	                    mov qword [rbp], rax	        53	string3.h	FUNCTION_73	CALL_3
0x4001335	        0x488b4208	                mov rax, qword [rdx + 8]	        53	string3.h	FUNCTION_73	CALL_3
0x4001339	        0x48894508	                mov qword [rbp + 8], rax	        53	string3.h	FUNCTION_73	CALL_3
0x400133d	          0x8b4210	            mov eax, dword [rdx + 0x10] 	        53	string3.h	FUNCTION_73	CALL_3
0x4001340	          0x894510	            mov dword [rbp + 0x10], eax 	        53	string3.h	FUNCTION_73	CALL_3
0x4001343	      0xbb00000000	                              mov ebx, 0	       607	cache-tree.c	FUNCTION_19
0x4001348	            0xeb38	                           jmp 0x4001382	       607	cache-tree.c	FUNCTION_19
0x400134a	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	        53	string3.h	FUNCTION_73	CALL_3
0x400134e	        0x488d4204	                      lea rax, [rdx + 4]	        53	string3.h	FUNCTION_73	CALL_3
0x4001352	        0x488b5204	                mov rdx, qword [rdx + 4]	        53	string3.h	FUNCTION_73	CALL_3
0x4001356	        0x48895500	                    mov qword [rbp], rdx	        53	string3.h	FUNCTION_73	CALL_3
0x400135a	        0x488b5008	                mov rdx, qword [rax + 8]	        53	string3.h	FUNCTION_73	CALL_3
0x400135e	        0x48895508	                mov qword [rbp + 8], rdx	        53	string3.h	FUNCTION_73	CALL_3
0x4001362	          0x8b4010	            mov eax, dword [rax + 0x10] 	        53	string3.h	FUNCTION_73	CALL_3
0x4001365	          0x894510	            mov dword [rbp + 0x10], eax 	        53	string3.h	FUNCTION_73	CALL_3
0x4001368	      0xbb00000000	                              mov ebx, 0	       607	cache-tree.c	FUNCTION_19
0x400136d	            0xeb13	                           jmp 0x4001382	       607	cache-tree.c	FUNCTION_19
0x400136f	      0xbbffffffff	                     mov ebx, 0xffffffff	       613	cache-tree.c	FUNCTION_19	IF_1
0x4001374	            0xeb0c	                           jmp 0x4001382	       613	cache-tree.c	FUNCTION_19	IF_1
0x4001376	      0xbbfeffffff	                     mov ebx, 0xfffffffe	       625	cache-tree.c	FUNCTION_19	IF_4	IF_5
0x400137b	            0xeb05	                           jmp 0x4001382	       625	cache-tree.c	FUNCTION_19	IF_4	IF_5
0x400137d	      0xbbfdffffff	                     mov ebx, 0xfffffffd	       641	cache-tree.c	FUNCTION_19	IF_6	IF_7
0x4001382	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_122	CALL_1
0x4001385	      0xe800000000	                          call 0x400138a	       304	lockfile.h	FUNCTION_122	CALL_1
0x400138a	            0x89d8	                            mov eax, ebx	       652	cache-tree.c	FUNCTION_19
0x400138c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       652	cache-tree.c	FUNCTION_19
0x4001391	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       652	cache-tree.c	FUNCTION_19
0x400139a	            0x7405	                            je 0x40013a1	       652	cache-tree.c	FUNCTION_19
0x400139c	      0xe800000000	                          call 0x40013a1	       652	cache-tree.c	FUNCTION_19
0x40013a1	        0x4883c410	                           add rsp, 0x10	       652	cache-tree.c	FUNCTION_19
0x40013a5	              0x5b	                                 pop rbx	       652	cache-tree.c	FUNCTION_19
0x40013a6	              0x5d	                                 pop rbp	       652	cache-tree.c	FUNCTION_19
0x40013a7	            0x415c	                                 pop r12	       652	cache-tree.c	FUNCTION_19
0x40013a9	            0x415d	                                 pop r13	       652	cache-tree.c	FUNCTION_19
0x40013ab	            0x415e	                                 pop r14	       652	cache-tree.c	FUNCTION_19
0x40013ad	              0xc3	                                     ret	       652	cache-tree.c	FUNCTION_19
cache_tree_find	WHILE,2:FOR,0:DO,0:functions,0:IF,2:SWITCH,0:ELSE,0:CALL,2	38
0x4000253	            0x4154	                                push r12	       579	cache-tree.c	FUNCTION_18
0x4000255	              0x55	                                push rbp	       579	cache-tree.c	FUNCTION_18
0x4000256	              0x53	                                push rbx	       579	cache-tree.c	FUNCTION_18
0x4000257	          0x4989fc	                            mov r12, rdi	       579	cache-tree.c	FUNCTION_18
0x400025a	          0x4889f5	                            mov rbp, rsi	       579	cache-tree.c	FUNCTION_18
0x400025d	          0x4885ff	                           test rdi, rdi	       580	cache-tree.c	FUNCTION_18	IF_1
0x4000260	            0x7541	                           jne 0x40002a3	       580	cache-tree.c	FUNCTION_18	IF_1
0x4000262	            0xeb4a	                           jmp 0x40002ae	       580	cache-tree.c	FUNCTION_18	IF_1
0x4000264	      0xbe2f000000	                           mov esi, 0x2f	       586	cache-tree.c	FUNCTION_18	WHILE_1	CALL_1
0x4000269	          0x4889ef	                            mov rdi, rbp	       586	cache-tree.c	FUNCTION_18	WHILE_1	CALL_1
0x400026c	      0xe800000000	                          call 0x4000271	       586	cache-tree.c	FUNCTION_18	WHILE_1	CALL_1
0x4000271	          0x4889c3	                            mov rbx, rax	       586	cache-tree.c	FUNCTION_18	WHILE_1	CALL_1
0x4000274	          0x4889c2	                            mov rdx, rax	       591	cache-tree.c	FUNCTION_18	WHILE_1	CALL_2
0x4000277	          0x4829ea	                            sub rdx, rbp	       591	cache-tree.c	FUNCTION_18	WHILE_1	CALL_2
0x400027a	      0xb900000000	                              mov ecx, 0	       591	cache-tree.c	FUNCTION_18	WHILE_1	CALL_2
0x400027f	          0x4889ee	                            mov rsi, rbp	       591	cache-tree.c	FUNCTION_18	WHILE_1	CALL_2
0x4000282	          0x4c89e7	                            mov rdi, r12	       591	cache-tree.c	FUNCTION_18	WHILE_1	CALL_2
0x4000285	      0xe842feffff	                   call sym.find_subtree	       591	cache-tree.c	FUNCTION_18	WHILE_1	CALL_2
0x400028a	          0x4885c0	                           test rax, rax	       592	cache-tree.c	FUNCTION_18	WHILE_1	IF_2
0x400028d	            0x7426	                            je 0x40002b5	       592	cache-tree.c	FUNCTION_18	WHILE_1	IF_2
0x400028f	          0x4c8b20	                    mov r12, qword [rax]	       594	cache-tree.c	FUNCTION_18	WHILE_1
0x4000292	          0x803b2f	                    cmp byte [rbx], 0x2f	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x4000295	            0x7509	                           jne 0x40002a0	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x4000297	        0x4883c301	                              add rbx, 1	       598	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x400029b	          0x803b2f	                    cmp byte [rbx], 0x2f	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x400029e	            0x74f7	                            je 0x4000297	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x40002a0	          0x4889dd	                            mov rbp, rbx	       579	cache-tree.c	FUNCTION_18
0x40002a3	        0x807d0000	                       cmp byte [rbp], 0	       582	cache-tree.c	FUNCTION_18	WHILE_1
0x40002a7	            0x75bb	                           jne 0x4000264	       582	cache-tree.c	FUNCTION_18	WHILE_1
0x40002a9	          0x4c89e0	                            mov rax, r12	       582	cache-tree.c	FUNCTION_18	WHILE_1
0x40002ac	            0xeb0c	                           jmp 0x40002ba	       582	cache-tree.c	FUNCTION_18	WHILE_1
0x40002ae	      0xb800000000	                              mov eax, 0	       581	cache-tree.c	FUNCTION_18	IF_1
0x40002b3	            0xeb05	                           jmp 0x40002ba	       581	cache-tree.c	FUNCTION_18	IF_1
0x40002b5	      0xb800000000	                              mov eax, 0	       593	cache-tree.c	FUNCTION_18	WHILE_1	IF_2
0x40002ba	              0x5b	                                 pop rbx	       601	cache-tree.c	FUNCTION_18
0x40002bb	              0x5d	                                 pop rbp	       601	cache-tree.c	FUNCTION_18
0x40002bc	            0x415c	                                 pop r12	       601	cache-tree.c	FUNCTION_18
0x40002be	              0xc3	                                     ret	       601	cache-tree.c	FUNCTION_18
