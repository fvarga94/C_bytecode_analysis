do_generic_cmd	CALL,6:ELSE,0:IF,2:DO,0:SWITCH,0:functions,0:WHILE,0:FOR,0	42
0x4000075	              0x55	                                push rbp	        12	shell.c	FUNCTION_1
0x4000076	              0x53	                                push rbx	        12	shell.c	FUNCTION_1
0x4000077	        0x4883ec38	                           sub rsp, 0x38	        12	shell.c	FUNCTION_1
0x400007b	          0x4889fb	                            mov rbx, rdi	        12	shell.c	FUNCTION_1
0x400007e	          0x4889f5	                            mov rbp, rsi	        12	shell.c	FUNCTION_1
0x4000081	    0x64488b042528	                mov rax, qword fs:[0x28]	        12	shell.c	FUNCTION_1
0x400008a	      0x4889442428	             mov qword [rsp + 0x28], rax	        12	shell.c	FUNCTION_1
0x400008f	            0x31c0	                            xor eax, eax	        12	shell.c	FUNCTION_1
0x4000091	      0xe800000000	                          call 0x4000096	        15	shell.c	FUNCTION_1	CALL_1
0x4000096	          0x4885ed	                           test rbp, rbp	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x4000099	            0x7415	                            je 0x40000b0	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x400009b	          0x4889ef	                            mov rdi, rbp	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x400009e	      0xe800000000	                          call 0x40000a3	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x40000a3	          0x4889c5	                            mov rbp, rax	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x40000a6	          0x4885c0	                           test rax, rax	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x40000a9	            0x7405	                            je 0x40000b0	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x40000ab	          0x80382d	                    cmp byte [rax], 0x2d	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x40000ae	            0x750f	                           jne 0x40000bf	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x40000b0	      0xbf00000000	                              mov edi, 0	        17	shell.c	FUNCTION_1	CALL_3
0x40000b5	      0xb800000000	                              mov eax, 0	        17	shell.c	FUNCTION_1	CALL_3
0x40000ba	      0xe800000000	                          call 0x40000bf	        17	shell.c	FUNCTION_1	CALL_3
0x40000bf	      0xbe00000000	                              mov esi, 0	        18	shell.c	FUNCTION_1	IF_2	CALL_4
0x40000c4	          0x4889df	                            mov rdi, rbx	        18	shell.c	FUNCTION_1	IF_2	CALL_4
0x40000c7	      0xe800000000	                          call 0x40000cc	        18	shell.c	FUNCTION_1	IF_2	CALL_4
0x40000cc	            0x85c0	                           test eax, eax	        18	shell.c	FUNCTION_1	IF_2	CALL_4
0x40000ce	            0x750a	                           jne 0x40000da	        18	shell.c	FUNCTION_1	IF_2	CALL_4
0x40000d0	      0xbf00000000	                              mov edi, 0	        19	shell.c	FUNCTION_1	CALL_5
0x40000d5	      0xe800000000	                          call 0x40000da	        19	shell.c	FUNCTION_1	CALL_5
0x40000da	        0x4883c304	                              add rbx, 4	        21	shell.c	FUNCTION_1
0x40000de	        0x48891c24	                    mov qword [rsp], rbx	        21	shell.c	FUNCTION_1
0x40000e2	      0x48896c2408	                mov qword [rsp + 8], rbp	        22	shell.c	FUNCTION_1
0x40000e7	    0x48c744241000	               mov qword [rsp + 0x10], 0	        23	shell.c	FUNCTION_1
0x40000f0	          0x4889e7	                            mov rdi, rsp	        25	shell.c	FUNCTION_1	CALL_6
0x40000f3	      0xe800000000	                          call 0x40000f8	        25	shell.c	FUNCTION_1	CALL_6
0x40000f8	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        26	shell.c	FUNCTION_1
0x40000fd	    0x644833142528	                xor rdx, qword fs:[0x28]	        26	shell.c	FUNCTION_1
0x4000106	            0x7405	                            je 0x400010d	        26	shell.c	FUNCTION_1
0x4000108	      0xe800000000	                          call 0x400010d	        26	shell.c	FUNCTION_1
0x400010d	        0x4883c438	                           add rsp, 0x38	        26	shell.c	FUNCTION_1
0x4000111	              0x5b	                                 pop rbx	        26	shell.c	FUNCTION_1
0x4000112	              0x5d	                                 pop rbp	        26	shell.c	FUNCTION_1
0x4000113	              0xc3	                                     ret	        26	shell.c	FUNCTION_1
is_valid_cmd_name	CALL,1:ELSE,0:IF,0:DO,0:SWITCH,0:functions,0:WHILE,0:FOR,0	20
0x4000040	           0xfb617	                   movzx edx, byte [rdi]	       961	string2.h	FUNCTION_34	WHILE_1
0x4000043	            0x84d2	                             test dl, dl	       961	string2.h	FUNCTION_34	WHILE_1
0x4000045	            0x7425	                            je 0x400006c	       961	string2.h	FUNCTION_34	WHILE_1
0x4000047	           0xfbec2	                           movsx eax, dl	       962	string2.h	FUNCTION_34	WHILE_1
0x400004a	          0x83e82e	                           sub eax, 0x2e	       962	string2.h	FUNCTION_34	WHILE_1
0x400004d	          0x83f801	                              cmp eax, 1	       962	string2.h	FUNCTION_34	WHILE_1
0x4000050	            0x761a	                           jbe 0x400006c	       962	string2.h	FUNCTION_34	WHILE_1
0x4000052	        0x4883c701	                              add rdi, 1	       962	string2.h	FUNCTION_34	WHILE_1
0x4000056	           0xfb617	                   movzx edx, byte [rdi]	       961	string2.h	FUNCTION_34	WHILE_1
0x4000059	            0x84d2	                             test dl, dl	       961	string2.h	FUNCTION_34	WHILE_1
0x400005b	            0x740f	                            je 0x400006c	       961	string2.h	FUNCTION_34	WHILE_1
0x400005d	        0x4883c701	                              add rdi, 1	       961	string2.h	FUNCTION_34	WHILE_1
0x4000061	           0xfbec2	                           movsx eax, dl	       962	string2.h	FUNCTION_34	WHILE_1
0x4000064	          0x83e82e	                           sub eax, 0x2e	       962	string2.h	FUNCTION_34	WHILE_1
0x4000067	          0x83f801	                              cmp eax, 1	       962	string2.h	FUNCTION_34	WHILE_1
0x400006a	            0x77ea	                            ja 0x4000056	       962	string2.h	FUNCTION_34	WHILE_1
0x400006c	            0x84d2	                             test dl, dl	        31	shell.c	FUNCTION_2	CALL_1
0x400006e	           0xf94c0	                                 sete al	        31	shell.c	FUNCTION_2	CALL_1
0x4000071	           0xfb6c0	                           movzx eax, al	        31	shell.c	FUNCTION_2	CALL_1
0x4000074	              0xc3	                                     ret	        32	shell.c	FUNCTION_2
cd_to_homedir	CALL,4:ELSE,0:IF,2:DO,0:SWITCH,0:functions,0:WHILE,0:FOR,0	16
0x4000114	        0x4883ec08	                              sub rsp, 8	        40	shell.c	FUNCTION_4
0x4000118	      0xbf00000000	                              mov edi, 0	        41	shell.c	FUNCTION_4	CALL_1
0x400011d	      0xe800000000	                          call 0x4000122	        41	shell.c	FUNCTION_4	CALL_1
0x4000122	          0x4885c0	                           test rax, rax	        42	shell.c	FUNCTION_4	IF_1
0x4000125	            0x750a	                           jne 0x4000131	        42	shell.c	FUNCTION_4	IF_1
0x4000127	      0xbf00000000	                              mov edi, 0	        43	shell.c	FUNCTION_4	CALL_2
0x400012c	      0xe800000000	                          call 0x4000131	        43	shell.c	FUNCTION_4	CALL_2
0x4000131	          0x4889c7	                            mov rdi, rax	        44	shell.c	FUNCTION_4	IF_2	CALL_3
0x4000134	      0xe800000000	                          call 0x4000139	        44	shell.c	FUNCTION_4	IF_2	CALL_3
0x4000139	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        44	shell.c	FUNCTION_4	IF_2	CALL_3
0x400013c	            0x750f	                           jne 0x400014d	        44	shell.c	FUNCTION_4	IF_2	CALL_3
0x400013e	      0xbf00000000	                              mov edi, 0	        45	shell.c	FUNCTION_4	CALL_4
0x4000143	      0xb800000000	                              mov eax, 0	        45	shell.c	FUNCTION_4	CALL_4
0x4000148	      0xe800000000	                          call 0x400014d	        45	shell.c	FUNCTION_4	CALL_4
0x400014d	        0x4883c408	                              add rsp, 8	        46	shell.c	FUNCTION_4
0x4000151	              0xc3	                                     ret	        46	shell.c	FUNCTION_4
cmd_main	CALL,26:ELSE,3:IF,8:DO,0:SWITCH,1:functions,0:WHILE,0:FOR,1	273
0x4000152	            0x4157	                                push r15	       128	shell.c	FUNCTION_6
0x4000154	            0x4156	                                push r14	       128	shell.c	FUNCTION_6
0x4000156	            0x4155	                                push r13	       128	shell.c	FUNCTION_6
0x4000158	            0x4154	                                push r12	       128	shell.c	FUNCTION_6
0x400015a	              0x55	                                push rbp	       128	shell.c	FUNCTION_6
0x400015b	              0x53	                                push rbx	       128	shell.c	FUNCTION_6
0x400015c	        0x4883ec58	                           sub rsp, 0x58	       128	shell.c	FUNCTION_6
0x4000160	          0x4989f6	                            mov r14, rsi	       128	shell.c	FUNCTION_6
0x4000163	    0x64488b042528	                mov rax, qword fs:[0x28]	       128	shell.c	FUNCTION_6
0x400016c	      0x4889442448	             mov qword [rsp + 0x48], rax	       128	shell.c	FUNCTION_6
0x4000171	            0x31c0	                            xor eax, eax	       128	shell.c	FUNCTION_6
0x4000173	          0x83ff02	                              cmp edi, 2	       137	shell.c	FUNCTION_6	IF_1	CALL_1
0x4000176	            0x751f	                           jne 0x4000197	       137	shell.c	FUNCTION_6	IF_1	CALL_1
0x4000178	        0x488b7e08	                mov rdi, qword [rsi + 8]	       137	shell.c	FUNCTION_6	IF_1	CALL_1
0x400017c	      0xbe00000000	                              mov esi, 0	       137	shell.c	FUNCTION_6	IF_1	CALL_1
0x4000181	      0xe800000000	                          call 0x4000186	       137	shell.c	FUNCTION_6	IF_1	CALL_1
0x4000186	            0x85c0	                           test eax, eax	       137	shell.c	FUNCTION_6	IF_1	CALL_1
0x4000188	     0xf85cd020000	                           jne 0x400045b	       137	shell.c	FUNCTION_6	IF_1	CALL_1
0x400018e	        0x4983ee08	                              sub r14, 8	       138	shell.c	FUNCTION_6	IF_1
0x4000192	      0xe9d3020000	                           jmp 0x400046a	       138	shell.c	FUNCTION_6	IF_1
0x4000197	          0x83ff01	                              cmp edi, 1	       139	shell.c	FUNCTION_6	ELSE_1	IF_2
0x400019a	     0xf85a1020000	                           jne 0x4000441	       139	shell.c	FUNCTION_6	ELSE_1	IF_2
0x40001a0	      0xe86fffffff	                  call sym.cd_to_homedir	       141	shell.c	FUNCTION_6	ELSE_1	IF_2	CALL_2
0x40001a5	      0xbe05000000	                              mov esi, 5	       142	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_3
0x40001aa	      0xbf00000000	                              mov edi, 0	       142	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_3
0x40001af	      0xe800000000	                          call 0x40001b4	       142	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_3
0x40001b4	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       142	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_3
0x40001b7	            0x750f	                           jne 0x40001c8	       142	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_3
0x40001b9	      0xbf00000000	                              mov edi, 0	       143	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_4
0x40001be	      0xb800000000	                              mov eax, 0	       143	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_4
0x40001c3	      0xe800000000	                          call 0x40001c8	       143	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_4
0x40001c8	      0xbe00000000	                              mov esi, 0	        53	shell.c	FUNCTION_5	IF_1	CALL_1
0x40001cd	      0xbf00000000	                              mov edi, 0	        53	shell.c	FUNCTION_5	IF_1	CALL_1
0x40001d2	      0xe800000000	                          call 0x40001d7	        53	shell.c	FUNCTION_5	IF_1	CALL_1
0x40001d7	            0x85c0	                           test eax, eax	        53	shell.c	FUNCTION_5	IF_1	CALL_1
0x40001d9	            0x7536	                           jne 0x4000211	        53	shell.c	FUNCTION_5	IF_1	CALL_1
0x40001db	    0x48c744243000	               mov qword [rsp + 0x30], 0	        55	shell.c	FUNCTION_5	IF_1
0x40001e4	    0x48c744243800	               mov qword [rsp + 0x38], 0	        55	shell.c	FUNCTION_5	IF_1
0x40001ed	      0xbe00000000	                              mov esi, 0	        58	shell.c	FUNCTION_5	IF_1	CALL_2
0x40001f2	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	        58	shell.c	FUNCTION_5	IF_1	CALL_2
0x40001f7	      0xe800000000	                          call 0x40001fc	        58	shell.c	FUNCTION_5	IF_1	CALL_2
0x40001fc	            0x85c0	                           test eax, eax	        59	shell.c	FUNCTION_5	IF_1	IF_2
0x40001fe	            0x790a	                           jns 0x400020a	        59	shell.c	FUNCTION_5	IF_1	IF_2
0x4000200	      0xbf7f000000	                           mov edi, 0x7f	        60	shell.c	FUNCTION_5	IF_1	CALL_3
0x4000205	      0xe800000000	                          call 0x400020a	        60	shell.c	FUNCTION_5	IF_1	CALL_3
0x400020a	            0x89c7	                            mov edi, eax	        61	shell.c	FUNCTION_5	IF_1	CALL_4
0x400020c	      0xe800000000	                          call 0x4000211	        61	shell.c	FUNCTION_5	IF_1	CALL_4
0x4000211	      0xbe08000000	                              mov esi, 8	        65	shell.c	FUNCTION_5	CALL_5
0x4000216	      0xbf00000000	                              mov edi, 0	        65	shell.c	FUNCTION_5	CALL_5
0x400021b	      0xe800000000	                          call 0x4000220	        65	shell.c	FUNCTION_5	CALL_5
0x4000220	    0x48c744241000	               mov qword [rsp + 0x10], 0	        68	shell.c	FUNCTION_5	DO_1
0x4000229	    0x48c744241800	               mov qword [rsp + 0x18], 0	        68	shell.c	FUNCTION_5	DO_1
0x4000232	    0x48c744242000	               mov qword [rsp + 0x20], 0	        68	shell.c	FUNCTION_5	DO_1
0x400023b	    0x488b0d000000	            mov rcx, qword [0x04000242] 	        97	stdio2.h	FUNCTION_11	CALL_1
0x4000242	      0xba05000000	                              mov edx, 5	        97	stdio2.h	FUNCTION_11	CALL_1
0x4000247	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_11	CALL_1
0x400024c	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	FUNCTION_11	CALL_1
0x4000251	      0xe800000000	                          call 0x4000256	        97	stdio2.h	FUNCTION_11	CALL_1
0x4000256	    0x488b35000000	            mov rsi, qword [0x0400025d] 	        78	shell.c	FUNCTION_5	DO_1	IF_3	CALL_7
0x400025d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        78	shell.c	FUNCTION_5	DO_1	IF_3	CALL_7
0x4000262	      0xe800000000	                          call 0x4000267	        78	shell.c	FUNCTION_5	DO_1	IF_3	CALL_7
0x4000267	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        78	shell.c	FUNCTION_5	DO_1	IF_3	CALL_7
0x400026a	            0x7520	                           jne 0x400028c	        78	shell.c	FUNCTION_5	DO_1	IF_3	CALL_7
0x400026c	    0x488b35000000	            mov rsi, qword [0x04000273] 	        97	stdio2.h	FUNCTION_11	CALL_1
0x4000273	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	FUNCTION_11	CALL_1
0x4000278	      0xe800000000	                          call 0x400027d	        97	stdio2.h	FUNCTION_11	CALL_1
0x400027d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        80	shell.c	FUNCTION_5	DO_1	IF_3	CALL_9
0x4000282	      0xe800000000	                          call 0x4000287	        80	shell.c	FUNCTION_5	DO_1	IF_3	CALL_9
0x4000287	      0xe9ab010000	                           jmp 0x4000437	        80	shell.c	FUNCTION_5	DO_1	IF_3	CALL_9
0x400028c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        83	shell.c	FUNCTION_5	DO_1	CALL_10
0x4000291	      0xe800000000	                          call 0x4000296	        83	shell.c	FUNCTION_5	DO_1	CALL_10
0x4000296	      0xbe00000000	                              mov esi, 0	        84	shell.c	FUNCTION_5	DO_1	CALL_11
0x400029b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        84	shell.c	FUNCTION_5	DO_1	CALL_11
0x40002a0	      0xe800000000	                          call 0x40002a5	        84	shell.c	FUNCTION_5	DO_1	CALL_11
0x40002a5	          0x4889c3	                            mov rbx, rax	        84	shell.c	FUNCTION_5	DO_1	CALL_11
0x40002a8	          0x4889c7	                            mov rdi, rax	        85	shell.c	FUNCTION_5	DO_1	CALL_12
0x40002ab	      0xe800000000	                          call 0x40002b0	        85	shell.c	FUNCTION_5	DO_1	CALL_12
0x40002b0	          0x4889c5	                            mov rbp, rax	        85	shell.c	FUNCTION_5	DO_1	CALL_12
0x40002b3	      0x488d742408	                      lea rsi, [rsp + 8]	        86	shell.c	FUNCTION_5	DO_1	CALL_13
0x40002b8	          0x4889c7	                            mov rdi, rax	        86	shell.c	FUNCTION_5	DO_1	CALL_13
0x40002bb	      0xe800000000	                          call 0x40002c0	        86	shell.c	FUNCTION_5	DO_1	CALL_13
0x40002c0	            0x85c0	                           test eax, eax	        87	shell.c	FUNCTION_5	DO_1	IF_4
0x40002c2	            0x793d	                           jns 0x4000301	        87	shell.c	FUNCTION_5	DO_1	IF_4
0x40002c4	            0x89c7	                            mov edi, eax	        88	shell.c	FUNCTION_5	DO_1	IF_4	CALL_14
0x40002c6	      0xe800000000	                          call 0x40002cb	        88	shell.c	FUNCTION_5	DO_1	IF_4	CALL_14
0x40002cb	          0x4989c0	                             mov r8, rax	        88	shell.c	FUNCTION_5	DO_1	IF_4	CALL_14
0x40002ce	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	FUNCTION_11	CALL_1
0x40002d1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_11	CALL_1
0x40002d6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_11	CALL_1
0x40002db	    0x488b3d000000	            mov rdi, qword [0x040002e2] 	        97	stdio2.h	FUNCTION_11	CALL_1
0x40002e2	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_11	CALL_1
0x40002e7	      0xe800000000	                          call 0x40002ec	        97	stdio2.h	FUNCTION_11	CALL_1
0x40002ec	          0x4889ef	                            mov rdi, rbp	        90	shell.c	FUNCTION_5	DO_1	IF_4	CALL_16
0x40002ef	      0xe800000000	                          call 0x40002f4	        90	shell.c	FUNCTION_5	DO_1	IF_4	CALL_16
0x40002f4	          0x4889df	                            mov rdi, rbx	        91	shell.c	FUNCTION_5	DO_1	IF_4	CALL_17
0x40002f7	      0xe800000000	                          call 0x40002fc	        91	shell.c	FUNCTION_5	DO_1	IF_4	CALL_17
0x40002fc	      0xe91fffffff	                           jmp 0x4000220	        91	shell.c	FUNCTION_5	DO_1	IF_4	CALL_17
0x4000301	      0x488b442408	                mov rax, qword [rsp + 8]	        95	shell.c	FUNCTION_5	DO_1
0x4000306	          0x488b28	                    mov rbp, qword [rax]	        95	shell.c	FUNCTION_5	DO_1
0x4000309	      0x440fb66d00	                  movzx r13d, byte [rbp]	        96	shell.c	FUNCTION_5	DO_1	IF_5	CALL_18
0x400030e	    0x41bc00000000	                             mov r12d, 0	        96	shell.c	FUNCTION_5	DO_1	IF_5	CALL_18
0x4000314	          0x4585ed	                         test r13d, r13d	        96	shell.c	FUNCTION_5	DO_1	IF_5	CALL_18
0x4000317	     0xf84ff000000	                            je 0x400041c	        96	shell.c	FUNCTION_5	DO_1	IF_5	CALL_18
0x400031d	      0xbe00000000	                              mov esi, 0	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x4000322	          0x4889ef	                            mov rdi, rbp	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x4000325	      0xe800000000	                          call 0x400032a	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x400032a	    0x41bc01000000	                             mov r12d, 1	        99	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6
0x4000330	            0x85c0	                           test eax, eax	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x4000332	     0xf84e4000000	                            je 0x400041c	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x4000338	      0xbe00000000	                              mov esi, 0	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x400033d	          0x4889ef	                            mov rdi, rbp	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x4000340	      0xe800000000	                          call 0x4000345	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x4000345	            0x85c0	                           test eax, eax	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x4000347	     0xf84cf000000	                            je 0x400041c	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x400034d	      0xbe00000000	                              mov esi, 0	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x4000352	          0x4889ef	                            mov rdi, rbp	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x4000355	      0xe800000000	                          call 0x400035a	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x400035a	            0x85c0	                           test eax, eax	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x400035c	     0xf84ba000000	                            je 0x400041c	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x4000362	        0x4183fd62	                          cmp r13d, 0x62	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x4000366	            0x7516	                           jne 0x400037e	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x4000368	        0x807d0179	                cmp byte [rbp + 1], 0x79	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x400036c	            0x7510	                           jne 0x400037e	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x400036e	        0x807d0265	                cmp byte [rbp + 2], 0x65	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x4000372	            0x750a	                           jne 0x400037e	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x4000374	        0x807d0300	                   cmp byte [rbp + 3], 0	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x4000378	     0xf849e000000	                            je 0x400041c	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x400037e	          0x4889ef	                            mov rdi, rbp	       100	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_23
0x4000381	      0xe8bafcffff	              call sym.is_valid_cmd_name	       100	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_23
0x4000386	            0x85c0	                           test eax, eax	       100	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_23
0x4000388	            0x746e	                            je 0x40003f8	       100	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_23
0x400038a	          0x4889ea	                            mov rdx, rbp	        36	shell.c	FUNCTION_3	CALL_1
0x400038d	      0xbe00000000	                              mov esi, 0	        36	shell.c	FUNCTION_3	CALL_1
0x4000392	      0xbf00000000	                              mov edi, 0	        36	shell.c	FUNCTION_3	CALL_1
0x4000397	      0xb800000000	                              mov eax, 0	        36	shell.c	FUNCTION_3	CALL_1
0x400039c	      0xe800000000	                          call 0x40003a1	        36	shell.c	FUNCTION_3	CALL_1
0x40003a1	          0x4989c4	                            mov r12, rax	        36	shell.c	FUNCTION_3	CALL_1
0x40003a4	      0x488b442408	                mov rax, qword [rsp + 8]	       102	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7
0x40003a9	          0x4c8920	                    mov qword [rax], r12	       102	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7
0x40003ac	      0xbe08000000	                              mov esi, 8	       103	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_25
0x40003b1	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       103	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_25
0x40003b6	      0xe800000000	                          call 0x40003bb	       103	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_25
0x40003bb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       104	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	IF_8
0x40003be	            0x7528	                           jne 0x40003e8	       104	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	IF_8
0x40003c0	      0xe800000000	                          call 0x40003c5	       104	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	IF_8
0x40003c5	          0x833802	                      cmp dword [rax], 2	       104	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	IF_8
0x40003c8	            0x751e	                           jne 0x40003e8	       104	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	IF_8
0x40003ca	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	FUNCTION_11	CALL_1
0x40003cd	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_11	CALL_1
0x40003d2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_11	CALL_1
0x40003d7	    0x488b3d000000	            mov rdi, qword [0x040003de] 	        97	stdio2.h	FUNCTION_11	CALL_1
0x40003de	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_11	CALL_1
0x40003e3	      0xe800000000	                          call 0x40003e8	        97	stdio2.h	FUNCTION_11	CALL_1
0x40003e8	          0x4c89e7	                            mov rdi, r12	       107	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_27
0x40003eb	      0xe800000000	                          call 0x40003f0	       107	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_27
0x40003f0	    0x41bc00000000	                             mov r12d, 0	       107	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_27
0x40003f6	            0xeb24	                           jmp 0x400041c	       107	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_27
0x40003f8	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	FUNCTION_11	CALL_1
0x40003fb	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_11	CALL_1
0x4000400	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_11	CALL_1
0x4000405	    0x488b3d000000	            mov rdi, qword [0x0400040c] 	        97	stdio2.h	FUNCTION_11	CALL_1
0x400040c	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_11	CALL_1
0x4000411	      0xe800000000	                          call 0x4000416	        97	stdio2.h	FUNCTION_11	CALL_1
0x4000416	    0x41bc00000000	                             mov r12d, 0	        97	stdio2.h	FUNCTION_11	CALL_1
0x400041c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       112	shell.c	FUNCTION_5	DO_1	CALL_29
0x4000421	      0xe800000000	                          call 0x4000426	       112	shell.c	FUNCTION_5	DO_1	CALL_29
0x4000426	          0x4889df	                            mov rdi, rbx	       113	shell.c	FUNCTION_5	DO_1	CALL_30
0x4000429	      0xe800000000	                          call 0x400042e	       113	shell.c	FUNCTION_5	DO_1	CALL_30
0x400042e	          0x4585e4	                         test r12d, r12d	       114	shell.c	FUNCTION_5	DO_1
0x4000431	     0xf84e9fdffff	                            je 0x4000220	       114	shell.c	FUNCTION_5	DO_1
0x4000437	      0xbf00000000	                              mov edi, 0	       148	shell.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x400043c	      0xe800000000	                          call 0x4000441	       148	shell.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000441	          0x83ff03	                              cmp edi, 3	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x4000444	            0x7515	                           jne 0x400045b	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x4000446	        0x488b4608	                mov rax, qword [rsi + 8]	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x400044a	          0x80382d	                    cmp byte [rax], 0x2d	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x400044d	            0x750c	                           jne 0x400045b	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x400044f	        0x80780163	                cmp byte [rax + 1], 0x63	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x4000453	            0x7506	                           jne 0x400045b	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x4000455	        0x80780200	                   cmp byte [rax + 2], 0	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x4000459	            0x740f	                            je 0x400046a	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x400045b	      0xbf00000000	                              mov edi, 0	       155	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_8
0x4000460	      0xb800000000	                              mov eax, 0	       155	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_8
0x4000465	      0xe800000000	                          call 0x400046a	       155	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_8
0x400046a	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       158	shell.c	FUNCTION_6	CALL_9
0x400046e	      0xe800000000	                          call 0x4000473	       158	shell.c	FUNCTION_6	CALL_9
0x4000473	          0x4989c4	                            mov r12, rax	       158	shell.c	FUNCTION_6	CALL_9
0x4000476	      0xba03000000	                              mov edx, 3	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x400047b	      0xbe00000000	                              mov esi, 0	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x4000480	          0x4889c7	                            mov rdi, rax	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x4000483	      0xe800000000	                          call 0x4000488	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x4000488	            0x85c0	                           test eax, eax	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x400048a	            0x7515	                           jne 0x40004a1	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x400048c	    0x410fb6442403	               movzx eax, byte [r12 + 3]	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x4000492	    0xf68000000000	                      test byte [rax], 1	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x4000499	            0x7406	                            je 0x40004a1	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x400049b	    0x41c64424032d	                mov byte [r12 + 3], 0x2d	       161	shell.c	FUNCTION_6	IF_5
0x40004a1	    0x488b2d000000	            mov rbp, qword [0x040004a8] 	       163	shell.c	FUNCTION_6	FOR_1
0x40004a8	          0x4885ed	                           test rbp, rbp	       163	shell.c	FUNCTION_6	FOR_1
0x40004ab	            0x746a	                            je 0x4000517	       163	shell.c	FUNCTION_6	FOR_1
0x40004ad	    0x41bd00000000	                             mov r13d, 0	       163	shell.c	FUNCTION_6	FOR_1
0x40004b3	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	       164	shell.c	FUNCTION_6	FOR_1	CALL_12
0x40004ba	          0x4c89f9	                            mov rcx, r15	       164	shell.c	FUNCTION_6	FOR_1	CALL_12
0x40004bd	          0x4889ef	                            mov rdi, rbp	       164	shell.c	FUNCTION_6	FOR_1	CALL_12
0x40004c0	      0xb800000000	                              mov eax, 0	       164	shell.c	FUNCTION_6	FOR_1	CALL_12
0x40004c5	            0xf2ae	              repne scasb al, byte [rdi]	       164	shell.c	FUNCTION_6	FOR_1	CALL_12
0x40004c7	          0x48f7d1	                                 not rcx	       164	shell.c	FUNCTION_6	FOR_1	CALL_12
0x40004ca	        0x488d59ff	                      lea rbx, [rcx - 1]	       164	shell.c	FUNCTION_6	FOR_1	CALL_12
0x40004ce	          0x4863db	                         movsxd rbx, ebx	       166	shell.c	FUNCTION_6	FOR_1	IF_6	CALL_13
0x40004d1	          0x4889da	                            mov rdx, rbx	       166	shell.c	FUNCTION_6	FOR_1	IF_6	CALL_13
0x40004d4	          0x4c89e6	                            mov rsi, r12	       166	shell.c	FUNCTION_6	FOR_1	IF_6	CALL_13
0x40004d7	          0x4889ef	                            mov rdi, rbp	       166	shell.c	FUNCTION_6	FOR_1	IF_6	CALL_13
0x40004da	      0xe800000000	                          call 0x40004df	       166	shell.c	FUNCTION_6	FOR_1	IF_6	CALL_13
0x40004df	            0x85c0	                           test eax, eax	       166	shell.c	FUNCTION_6	FOR_1	IF_6	CALL_13
0x40004e1	            0x7527	                           jne 0x400050a	       166	shell.c	FUNCTION_6	FOR_1	IF_6	CALL_13
0x40004e3	      0x410fb6041c	             movzx eax, byte [r12 + rbx]	       169	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40004e8	            0x84c0	                             test al, al	       169	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40004ea	            0x740b	                            je 0x40004f7	       169	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40004ec	            0x3c20	                            cmp al, 0x20	       169	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40004ee	            0x751a	                           jne 0x400050a	       169	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40004f0	      0x498d741c01	                lea rsi, [r12 + rbx + 1]	       174	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40004f5	            0xeb05	                           jmp 0x40004fc	       175	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40004f7	      0xbe00000000	                              mov esi, 0	       171	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40004fc	          0x4889ef	                            mov rdi, rbp	       179	shell.c	FUNCTION_6	FOR_1	CALL_15
0x40004ff	        0x41ff5508	                    call qword [r13 + 8]	       179	shell.c	FUNCTION_6	FOR_1	CALL_15
0x4000503	            0x89c7	                            mov edi, eax	       179	shell.c	FUNCTION_6	FOR_1	CALL_15
0x4000505	      0xe800000000	                          call 0x400050a	       179	shell.c	FUNCTION_6	FOR_1	CALL_15
0x400050a	        0x4983c510	                           add r13, 0x10	       163	shell.c	FUNCTION_6	FOR_1
0x400050e	        0x498b6d00	                    mov rbp, qword [r13]	       163	shell.c	FUNCTION_6	FOR_1
0x4000512	          0x4885ed	                           test rbp, rbp	       163	shell.c	FUNCTION_6	FOR_1
0x4000515	            0x75a3	                           jne 0x40004ba	       163	shell.c	FUNCTION_6	FOR_1
0x4000517	      0xe8f8fbffff	                  call sym.cd_to_homedir	       182	shell.c	FUNCTION_6	CALL_16
0x400051c	      0x488d742410	                   lea rsi, [rsp + 0x10]	       183	shell.c	FUNCTION_6	CALL_17
0x4000521	          0x4c89e7	                            mov rdi, r12	       183	shell.c	FUNCTION_6	CALL_17
0x4000524	      0xe800000000	                          call 0x4000529	       183	shell.c	FUNCTION_6	CALL_17
0x4000529	            0x89c3	                            mov ebx, eax	       183	shell.c	FUNCTION_6	CALL_17
0x400052b	            0x85c0	                           test eax, eax	       184	shell.c	FUNCTION_6	IF_7
0x400052d	            0x786b	                            js 0x400059a	       184	shell.c	FUNCTION_6	IF_7
0x400052f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       185	shell.c	FUNCTION_6	IF_7	IF_8	CALL_18
0x4000534	          0x488b18	                    mov rbx, qword [rax]	       185	shell.c	FUNCTION_6	IF_7	IF_8	CALL_18
0x4000537	          0x4889df	                            mov rdi, rbx	       185	shell.c	FUNCTION_6	IF_7	IF_8	CALL_18
0x400053a	      0xe801fbffff	              call sym.is_valid_cmd_name	       185	shell.c	FUNCTION_6	IF_7	IF_8	CALL_18
0x400053f	            0x85c0	                           test eax, eax	       185	shell.c	FUNCTION_6	IF_7	IF_8	CALL_18
0x4000541	            0x7432	                            je 0x4000575	       185	shell.c	FUNCTION_6	IF_7	IF_8	CALL_18
0x4000543	          0x4889da	                            mov rdx, rbx	        36	shell.c	FUNCTION_3	CALL_1
0x4000546	      0xbe00000000	                              mov esi, 0	        36	shell.c	FUNCTION_3	CALL_1
0x400054b	      0xbf00000000	                              mov edi, 0	        36	shell.c	FUNCTION_3	CALL_1
0x4000550	      0xb800000000	                              mov eax, 0	        36	shell.c	FUNCTION_3	CALL_1
0x4000555	      0xe800000000	                          call 0x400055a	        36	shell.c	FUNCTION_3	CALL_1
0x400055a	          0x4989c4	                            mov r12, rax	        36	shell.c	FUNCTION_3	CALL_1
0x400055d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       187	shell.c	FUNCTION_6	IF_7	IF_8
0x4000562	          0x4c8920	                    mov qword [rax], r12	       187	shell.c	FUNCTION_6	IF_7	IF_8
0x4000565	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       188	shell.c	FUNCTION_6	IF_7	IF_8	CALL_20
0x400056a	          0x4889c6	                            mov rsi, rax	       188	shell.c	FUNCTION_6	IF_7	IF_8	CALL_20
0x400056d	          0x488b38	                    mov rdi, qword [rax]	       188	shell.c	FUNCTION_6	IF_7	IF_8	CALL_20
0x4000570	      0xe800000000	                          call 0x4000575	       188	shell.c	FUNCTION_6	IF_7	IF_8	CALL_20
0x4000575	          0x4c89e7	                            mov rdi, r12	       190	shell.c	FUNCTION_6	IF_7	CALL_21
0x4000578	      0xe800000000	                          call 0x400057d	       190	shell.c	FUNCTION_6	IF_7	CALL_21
0x400057d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       191	shell.c	FUNCTION_6	IF_7	CALL_22
0x4000582	      0xe800000000	                          call 0x4000587	       191	shell.c	FUNCTION_6	IF_7	CALL_22
0x4000587	        0x498b7610	            mov rsi, qword [r14 + 0x10] 	       192	shell.c	FUNCTION_6	IF_7	CALL_23
0x400058b	      0xbf00000000	                              mov edi, 0	       192	shell.c	FUNCTION_6	IF_7	CALL_23
0x4000590	      0xb800000000	                              mov eax, 0	       192	shell.c	FUNCTION_6	IF_7	CALL_23
0x4000595	      0xe800000000	                          call 0x400059a	       192	shell.c	FUNCTION_6	IF_7	CALL_23
0x400059a	          0x4c89e7	                            mov rdi, r12	       194	shell.c	FUNCTION_6	ELSE_3	CALL_24
0x400059d	      0xe800000000	                          call 0x40005a2	       194	shell.c	FUNCTION_6	ELSE_3	CALL_24
0x40005a2	            0x89df	                            mov edi, ebx	       195	shell.c	FUNCTION_6	ELSE_3	CALL_25
0x40005a4	      0xe800000000	                          call 0x40005a9	       195	shell.c	FUNCTION_6	ELSE_3	CALL_25
0x40005a9	        0x498b7610	            mov rsi, qword [r14 + 0x10] 	       195	shell.c	FUNCTION_6	ELSE_3	CALL_25
0x40005ad	          0x4889c2	                            mov rdx, rax	       195	shell.c	FUNCTION_6	ELSE_3	CALL_25
0x40005b0	      0xbf00000000	                              mov edi, 0	       195	shell.c	FUNCTION_6	ELSE_3	CALL_25
0x40005b5	      0xb800000000	                              mov eax, 0	       195	shell.c	FUNCTION_6	ELSE_3	CALL_25
0x40005ba	      0xe800000000	                  call section_end..text	       195	shell.c	FUNCTION_6	ELSE_3	CALL_25
