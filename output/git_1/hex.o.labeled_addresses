oid_to_hex_r	CALL,1:ELSE,0:WHILE,0:SWITCH,0:DO,0:IF,0:FOR,0:functions,0	12
0x400027e	              0x55	                                push rbp	        93	hex.c	FUNCTION_6
0x400027f	          0x4889e5	                            mov rbp, rsp	        93	hex.c	FUNCTION_6
0x4000282	        0x4883ec10	                           sub rsp, 0x10	        93	hex.c	FUNCTION_6
0x4000286	        0x48897df8	                mov qword [rbp - 8], rdi	        93	hex.c	FUNCTION_6
0x400028a	        0x488975f0	             mov qword [rbp - 0x10], rsi	        93	hex.c	FUNCTION_6
0x400028e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        94	hex.c	FUNCTION_6	CALL_1
0x4000292	        0x488b45f8	                mov rax, qword [rbp - 8]	        94	hex.c	FUNCTION_6	CALL_1
0x4000296	          0x4889d6	                            mov rsi, rdx	        94	hex.c	FUNCTION_6	CALL_1
0x4000299	          0x4889c7	                            mov rdi, rax	        94	hex.c	FUNCTION_6	CALL_1
0x400029c	      0xe800000000	                          call 0x40002a1	        94	hex.c	FUNCTION_6	CALL_1
0x40002a1	              0xc9	                                   leave	        95	hex.c	FUNCTION_6
0x40002a2	              0xc3	                                     ret	        95	hex.c	FUNCTION_6
sha1_to_hex_r	CALL,0:ELSE,0:WHILE,0:SWITCH,0:DO,0:IF,0:FOR,1:functions,0	38
0x40001fb	              0x55	                                push rbp	        77	hex.c	FUNCTION_5
0x40001fc	          0x4889e5	                            mov rbp, rsp	        77	hex.c	FUNCTION_5
0x40001ff	        0x48897de8	             mov qword [rbp - 0x18], rdi	        77	hex.c	FUNCTION_5
0x4000203	        0x488975e0	             mov qword [rbp - 0x20], rsi	        77	hex.c	FUNCTION_5
0x4000207	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        79	hex.c	FUNCTION_5
0x400020b	        0x488945f8	                mov qword [rbp - 8], rax	        79	hex.c	FUNCTION_5
0x400020f	    0xc745f0000000	               mov dword [rbp - 0x10], 0	        82	hex.c	FUNCTION_5	FOR_1
0x4000216	            0xeb53	                           jmp 0x400026b	        82	hex.c	FUNCTION_5	FOR_1
0x4000218	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        83	hex.c	FUNCTION_5	FOR_1
0x400021c	        0x488d5001	                      lea rdx, [rax + 1]	        83	hex.c	FUNCTION_5	FOR_1
0x4000220	        0x488955e0	             mov qword [rbp - 0x20], rdx	        83	hex.c	FUNCTION_5	FOR_1
0x4000224	           0xfb600	                   movzx eax, byte [rax]	        83	hex.c	FUNCTION_5	FOR_1
0x4000227	           0xfb6c0	                           movzx eax, al	        83	hex.c	FUNCTION_5	FOR_1
0x400022a	          0x8945f4	              mov dword [rbp - 0xc], eax	        83	hex.c	FUNCTION_5	FOR_1
0x400022d	        0x488b45f8	                mov rax, qword [rbp - 8]	        84	hex.c	FUNCTION_5	FOR_1
0x4000231	        0x488d5001	                      lea rdx, [rax + 1]	        84	hex.c	FUNCTION_5	FOR_1
0x4000235	        0x488955f8	                mov qword [rbp - 8], rdx	        84	hex.c	FUNCTION_5	FOR_1
0x4000239	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        84	hex.c	FUNCTION_5	FOR_1
0x400023c	          0xc1ea04	                              shr edx, 4	        84	hex.c	FUNCTION_5	FOR_1
0x400023f	            0x89d2	                            mov edx, edx	        84	hex.c	FUNCTION_5	FOR_1
0x4000241	     0xfb692000000	                   movzx edx, byte [rdx]	        84	hex.c	FUNCTION_5	FOR_1
0x4000248	            0x8810	                      mov byte [rax], dl	        84	hex.c	FUNCTION_5	FOR_1
0x400024a	        0x488b45f8	                mov rax, qword [rbp - 8]	        85	hex.c	FUNCTION_5	FOR_1
0x400024e	        0x488d5001	                      lea rdx, [rax + 1]	        85	hex.c	FUNCTION_5	FOR_1
0x4000252	        0x488955f8	                mov qword [rbp - 8], rdx	        85	hex.c	FUNCTION_5	FOR_1
0x4000256	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        85	hex.c	FUNCTION_5	FOR_1
0x4000259	          0x83e20f	                            and edx, 0xf	        85	hex.c	FUNCTION_5	FOR_1
0x400025c	            0x89d2	                            mov edx, edx	        85	hex.c	FUNCTION_5	FOR_1
0x400025e	     0xfb692000000	                   movzx edx, byte [rdx]	        85	hex.c	FUNCTION_5	FOR_1
0x4000265	            0x8810	                      mov byte [rax], dl	        85	hex.c	FUNCTION_5	FOR_1
0x4000267	        0x8345f001	               add dword [rbp - 0x10], 1	        82	hex.c	FUNCTION_5	FOR_1
0x400026b	        0x837df013	           cmp dword [rbp - 0x10], 0x13 	        82	hex.c	FUNCTION_5	FOR_1
0x400026f	            0x7ea7	                           jle 0x4000218	        82	hex.c	FUNCTION_5	FOR_1
0x4000271	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	hex.c	FUNCTION_5
0x4000275	          0xc60000	                       mov byte [rax], 0	        87	hex.c	FUNCTION_5
0x4000278	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        89	hex.c	FUNCTION_5
0x400027c	              0x5d	                                 pop rbp	        90	hex.c	FUNCTION_5
0x400027d	              0xc3	                                     ret	        90	hex.c	FUNCTION_5
hex2chr	CALL,2:ELSE,0:WHILE,0:SWITCH,0:DO,0:IF,0:FOR,0:functions,0	31
0x400005b	              0x55	                                push rbp	      1281	cache.h	FUNCTION_33
0x400005c	          0x4889e5	                            mov rbp, rsp	      1281	cache.h	FUNCTION_33
0x400005f	              0x53	                                push rbx	      1281	cache.h	FUNCTION_33
0x4000060	        0x4883ec18	                           sub rsp, 0x18	      1281	cache.h	FUNCTION_33
0x4000064	        0x48897de0	             mov qword [rbp - 0x20], rdi	      1281	cache.h	FUNCTION_33
0x4000068	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1282	cache.h	FUNCTION_33	CALL_1
0x400006c	           0xfb600	                   movzx eax, byte [rax]	      1282	cache.h	FUNCTION_33	CALL_1
0x400006f	           0xfb6c0	                           movzx eax, al	      1282	cache.h	FUNCTION_33	CALL_1
0x4000072	            0x89c7	                            mov edi, eax	      1282	cache.h	FUNCTION_33	CALL_1
0x4000074	      0xe8c7ffffff	                         call sym.hexval	      1282	cache.h	FUNCTION_33	CALL_1
0x4000079	          0x8945f4	              mov dword [rbp - 0xc], eax	      1282	cache.h	FUNCTION_33	CALL_1
0x400007c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1283	cache.h	FUNCTION_33	CALL_2
0x400007f	          0x83e0f0	                     and eax, 0xfffffff0	      1283	cache.h	FUNCTION_33	CALL_2
0x4000082	            0x85c0	                           test eax, eax	      1283	cache.h	FUNCTION_33	CALL_2
0x4000084	            0x7521	                           jne 0x40000a7	      1283	cache.h	FUNCTION_33	CALL_2
0x4000086	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1283	cache.h	FUNCTION_33	CALL_2
0x4000089	          0xc1e004	                              shl eax, 4	      1283	cache.h	FUNCTION_33	CALL_2
0x400008c	            0x89c3	                            mov ebx, eax	      1283	cache.h	FUNCTION_33	CALL_2
0x400008e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1283	cache.h	FUNCTION_33	CALL_2
0x4000092	        0x4883c001	                              add rax, 1	      1283	cache.h	FUNCTION_33	CALL_2
0x4000096	           0xfb600	                   movzx eax, byte [rax]	      1283	cache.h	FUNCTION_33	CALL_2
0x4000099	           0xfb6c0	                           movzx eax, al	      1283	cache.h	FUNCTION_33	CALL_2
0x400009c	            0x89c7	                            mov edi, eax	      1283	cache.h	FUNCTION_33	CALL_2
0x400009e	      0xe89dffffff	                         call sym.hexval	      1283	cache.h	FUNCTION_33	CALL_2
0x40000a3	             0x9d8	                             or eax, ebx	      1283	cache.h	FUNCTION_33	CALL_2
0x40000a5	            0xeb03	                           jmp 0x40000aa	      1283	cache.h	FUNCTION_33	CALL_2
0x40000a7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1283	cache.h	FUNCTION_33	CALL_2
0x40000aa	        0x4883c418	                           add rsp, 0x18	      1284	cache.h	FUNCTION_33
0x40000ae	              0x5b	                                 pop rbx	      1284	cache.h	FUNCTION_33
0x40000af	              0x5d	                                 pop rbp	      1284	cache.h	FUNCTION_33
0x40000b0	              0xc3	                                     ret	      1284	cache.h	FUNCTION_33
get_sha1_hex	CALL,1:ELSE,0:WHILE,0:SWITCH,0:DO,0:IF,1:FOR,1:functions,0	27
0x4000136	              0x55	                                push rbp	        51	hex.c	FUNCTION_2
0x4000137	          0x4889e5	                            mov rbp, rsp	        51	hex.c	FUNCTION_2
0x400013a	        0x4883ec20	                           sub rsp, 0x20	        51	hex.c	FUNCTION_2
0x400013e	        0x48897de8	             mov qword [rbp - 0x18], rdi	        51	hex.c	FUNCTION_2
0x4000142	        0x488975e0	             mov qword [rbp - 0x20], rsi	        51	hex.c	FUNCTION_2
0x4000146	    0xc745f8000000	                  mov dword [rbp - 8], 0	        53	hex.c	FUNCTION_2	FOR_1
0x400014d	            0xeb36	                           jmp 0x4000185	        53	hex.c	FUNCTION_2	FOR_1
0x400014f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        54	hex.c	FUNCTION_2	FOR_1	CALL_1
0x4000153	          0x4889c7	                            mov rdi, rax	        54	hex.c	FUNCTION_2	FOR_1	CALL_1
0x4000156	      0xe800ffffff	                        call sym.hex2chr	        54	hex.c	FUNCTION_2	FOR_1	CALL_1
0x400015b	          0x8945fc	                mov dword [rbp - 4], eax	        54	hex.c	FUNCTION_2	FOR_1	CALL_1
0x400015e	        0x837dfc00	                  cmp dword [rbp - 4], 0	        55	hex.c	FUNCTION_2	FOR_1	IF_1
0x4000162	            0x7907	                           jns 0x400016b	        55	hex.c	FUNCTION_2	FOR_1	IF_1
0x4000164	      0xb8ffffffff	                     mov eax, 0xffffffff	        56	hex.c	FUNCTION_2	FOR_1	IF_1
0x4000169	            0xeb25	                           jmp 0x4000190	        56	hex.c	FUNCTION_2	FOR_1	IF_1
0x400016b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        57	hex.c	FUNCTION_2	FOR_1
0x400016f	        0x488d5001	                      lea rdx, [rax + 1]	        57	hex.c	FUNCTION_2	FOR_1
0x4000173	        0x488955e0	             mov qword [rbp - 0x20], rdx	        57	hex.c	FUNCTION_2	FOR_1
0x4000177	          0x8b55fc	                mov edx, dword [rbp - 4]	        57	hex.c	FUNCTION_2	FOR_1
0x400017a	            0x8810	                      mov byte [rax], dl	        57	hex.c	FUNCTION_2	FOR_1
0x400017c	      0x488345e802	               add qword [rbp - 0x18], 2	        58	hex.c	FUNCTION_2	FOR_1
0x4000181	        0x8345f801	                  add dword [rbp - 8], 1	        53	hex.c	FUNCTION_2	FOR_1
0x4000185	        0x837df813	               cmp dword [rbp - 8], 0x13	        53	hex.c	FUNCTION_2	FOR_1
0x4000189	            0x7ec4	                           jle 0x400014f	        53	hex.c	FUNCTION_2	FOR_1
0x400018b	      0xb800000000	                              mov eax, 0	        60	hex.c	FUNCTION_2
0x4000190	              0xc9	                                   leave	        61	hex.c	FUNCTION_2
0x4000191	              0xc3	                                     ret	        61	hex.c	FUNCTION_2
hex_to_bytes	CALL,2:ELSE,0:WHILE,0:SWITCH,0:DO,0:IF,1:FOR,1:functions,0	43
0x40000b1	              0x55	                                push rbp	        39	hex.c	FUNCTION_1
0x40000b2	          0x4889e5	                            mov rbp, rsp	        39	hex.c	FUNCTION_1
0x40000b5	              0x53	                                push rbx	        39	hex.c	FUNCTION_1
0x40000b6	        0x4883ec28	                           sub rsp, 0x28	        39	hex.c	FUNCTION_1
0x40000ba	        0x48897de0	             mov qword [rbp - 0x20], rdi	        39	hex.c	FUNCTION_1
0x40000be	        0x488975d8	             mov qword [rbp - 0x28], rsi	        39	hex.c	FUNCTION_1
0x40000c2	        0x488955d0	             mov qword [rbp - 0x30], rdx	        39	hex.c	FUNCTION_1
0x40000c6	            0xeb5b	                           jmp 0x4000123	        40	hex.c	FUNCTION_1	FOR_1
0x40000c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x40000cc	           0xfb600	                   movzx eax, byte [rax]	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x40000cf	           0xfb6c0	                           movzx eax, al	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x40000d2	            0x89c7	                            mov edi, eax	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x40000d4	      0xe867ffffff	                         call sym.hexval	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x40000d9	          0xc1e004	                              shl eax, 4	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x40000dc	            0x89c3	                            mov ebx, eax	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x40000de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x40000e2	        0x4883c001	                              add rax, 1	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x40000e6	           0xfb600	                   movzx eax, byte [rax]	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x40000e9	           0xfb6c0	                           movzx eax, al	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x40000ec	            0x89c7	                            mov edi, eax	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x40000ee	      0xe84dffffff	                         call sym.hexval	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x40000f3	             0x9d8	                             or eax, ebx	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x40000f5	          0x8945f4	              mov dword [rbp - 0xc], eax	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x40000f8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        43	hex.c	FUNCTION_1	FOR_1	IF_1
0x40000fb	            0xb000	                               mov al, 0	        43	hex.c	FUNCTION_1	FOR_1	IF_1
0x40000fd	            0x85c0	                           test eax, eax	        43	hex.c	FUNCTION_1	FOR_1	IF_1
0x40000ff	            0x7407	                            je 0x4000108	        43	hex.c	FUNCTION_1	FOR_1	IF_1
0x4000101	      0xb8ffffffff	                     mov eax, 0xffffffff	        44	hex.c	FUNCTION_1	FOR_1	IF_1
0x4000106	            0xeb27	                           jmp 0x400012f	        44	hex.c	FUNCTION_1	FOR_1	IF_1
0x4000108	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        45	hex.c	FUNCTION_1	FOR_1
0x400010c	        0x488d5001	                      lea rdx, [rax + 1]	        45	hex.c	FUNCTION_1	FOR_1
0x4000110	        0x488955e0	             mov qword [rbp - 0x20], rdx	        45	hex.c	FUNCTION_1	FOR_1
0x4000114	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        45	hex.c	FUNCTION_1	FOR_1
0x4000117	            0x8810	                      mov byte [rax], dl	        45	hex.c	FUNCTION_1	FOR_1
0x4000119	      0x48836dd001	               sub qword [rbp - 0x30], 1	        40	hex.c	FUNCTION_1	FOR_1
0x400011e	      0x488345d802	               add qword [rbp - 0x28], 2	        40	hex.c	FUNCTION_1	FOR_1
0x4000123	      0x48837dd000	               cmp qword [rbp - 0x30], 0	        40	hex.c	FUNCTION_1	FOR_1
0x4000128	            0x759e	                           jne 0x40000c8	        40	hex.c	FUNCTION_1	FOR_1
0x400012a	      0xb800000000	                              mov eax, 0	        47	hex.c	FUNCTION_1
0x400012f	        0x4883c428	                           add rsp, 0x28	        48	hex.c	FUNCTION_1
0x4000133	              0x5b	                                 pop rbx	        48	hex.c	FUNCTION_1
0x4000134	              0x5d	                                 pop rbp	        48	hex.c	FUNCTION_1
0x4000135	              0xc3	                                     ret	        48	hex.c	FUNCTION_1
get_oid_hex	CALL,1:ELSE,0:WHILE,0:SWITCH,0:DO,0:IF,0:FOR,0:functions,0	12
0x4000192	              0x55	                                push rbp	        64	hex.c	FUNCTION_3
0x4000193	          0x4889e5	                            mov rbp, rsp	        64	hex.c	FUNCTION_3
0x4000196	        0x4883ec10	                           sub rsp, 0x10	        64	hex.c	FUNCTION_3
0x400019a	        0x48897df8	                mov qword [rbp - 8], rdi	        64	hex.c	FUNCTION_3
0x400019e	        0x488975f0	             mov qword [rbp - 0x10], rsi	        64	hex.c	FUNCTION_3
0x40001a2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        65	hex.c	FUNCTION_3	CALL_1
0x40001a6	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	hex.c	FUNCTION_3	CALL_1
0x40001aa	          0x4889d6	                            mov rsi, rdx	        65	hex.c	FUNCTION_3	CALL_1
0x40001ad	          0x4889c7	                            mov rdi, rax	        65	hex.c	FUNCTION_3	CALL_1
0x40001b0	      0xe800000000	                          call 0x40001b5	        65	hex.c	FUNCTION_3	CALL_1
0x40001b5	              0xc9	                                   leave	        66	hex.c	FUNCTION_3
0x40001b6	              0xc3	                                     ret	        66	hex.c	FUNCTION_3
sha1_to_hex	CALL,2:ELSE,0:WHILE,0:SWITCH,0:DO,0:IF,0:FOR,0:functions,0	22
0x40002a3	              0x55	                                push rbp	        98	hex.c	FUNCTION_7
0x40002a4	          0x4889e5	                            mov rbp, rsp	        98	hex.c	FUNCTION_7
0x40002a7	        0x4883ec08	                              sub rsp, 8	        98	hex.c	FUNCTION_7
0x40002ab	        0x48897df8	                mov qword [rbp - 8], rdi	        98	hex.c	FUNCTION_7
0x40002af	    0x8b0500000000	            mov eax, dword [0x040002b5] 	       101	hex.c	FUNCTION_7	CALL_1
0x40002b5	          0x83c001	                              add eax, 1	       101	hex.c	FUNCTION_7	CALL_1
0x40002b8	          0x83e003	                              and eax, 3	       101	hex.c	FUNCTION_7	CALL_1
0x40002bb	    0x890500000000	            mov dword [0x040002c1], eax 	       101	hex.c	FUNCTION_7	CALL_1
0x40002c1	    0x8b0500000000	            mov eax, dword [0x040002c7] 	       102	hex.c	FUNCTION_7	CALL_2
0x40002c7	          0x4863d0	                         movsxd rdx, eax	       102	hex.c	FUNCTION_7	CALL_2
0x40002ca	          0x4889d0	                            mov rax, rdx	       102	hex.c	FUNCTION_7	CALL_2
0x40002cd	        0x48c1e002	                              shl rax, 2	       102	hex.c	FUNCTION_7	CALL_2
0x40002d1	          0x4801d0	                            add rax, rdx	       102	hex.c	FUNCTION_7	CALL_2
0x40002d4	        0x48c1e003	                              shl rax, 3	       102	hex.c	FUNCTION_7	CALL_2
0x40002d8	          0x4801d0	                            add rax, rdx	       102	hex.c	FUNCTION_7	CALL_2
0x40002db	    0x488d90000000	                          lea rdx, [rax]	       102	hex.c	FUNCTION_7	CALL_2
0x40002e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       102	hex.c	FUNCTION_7	CALL_2
0x40002e6	          0x4889c6	                            mov rsi, rax	       102	hex.c	FUNCTION_7	CALL_2
0x40002e9	          0x4889d7	                            mov rdi, rdx	       102	hex.c	FUNCTION_7	CALL_2
0x40002ec	      0xe800000000	                          call 0x40002f1	       102	hex.c	FUNCTION_7	CALL_2
0x40002f1	              0xc9	                                   leave	       103	hex.c	FUNCTION_7
0x40002f2	              0xc3	                                     ret	       103	hex.c	FUNCTION_7
parse_oid_hex	CALL,1:ELSE,0:WHILE,0:SWITCH,0:DO,0:IF,1:FOR,0:functions,0	21
0x40001b7	              0x55	                                push rbp	        69	hex.c	FUNCTION_4
0x40001b8	          0x4889e5	                            mov rbp, rsp	        69	hex.c	FUNCTION_4
0x40001bb	        0x4883ec28	                           sub rsp, 0x28	        69	hex.c	FUNCTION_4
0x40001bf	        0x48897de8	             mov qword [rbp - 0x18], rdi	        69	hex.c	FUNCTION_4
0x40001c3	        0x488975e0	             mov qword [rbp - 0x20], rsi	        69	hex.c	FUNCTION_4
0x40001c7	        0x488955d8	             mov qword [rbp - 0x28], rdx	        69	hex.c	FUNCTION_4
0x40001cb	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        70	hex.c	FUNCTION_4	CALL_1
0x40001cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	hex.c	FUNCTION_4	CALL_1
0x40001d3	          0x4889d6	                            mov rsi, rdx	        70	hex.c	FUNCTION_4	CALL_1
0x40001d6	          0x4889c7	                            mov rdi, rax	        70	hex.c	FUNCTION_4	CALL_1
0x40001d9	      0xe800000000	                          call 0x40001de	        70	hex.c	FUNCTION_4	CALL_1
0x40001de	          0x8945fc	                mov dword [rbp - 4], eax	        70	hex.c	FUNCTION_4	CALL_1
0x40001e1	        0x837dfc00	                  cmp dword [rbp - 4], 0	        71	hex.c	FUNCTION_4	IF_1
0x40001e5	            0x750f	                           jne 0x40001f6	        71	hex.c	FUNCTION_4	IF_1
0x40001e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	hex.c	FUNCTION_4	IF_1
0x40001eb	        0x488d5028	                   lea rdx, [rax + 0x28]	        72	hex.c	FUNCTION_4	IF_1
0x40001ef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        72	hex.c	FUNCTION_4	IF_1
0x40001f3	          0x488910	                    mov qword [rax], rdx	        72	hex.c	FUNCTION_4	IF_1
0x40001f6	          0x8b45fc	                mov eax, dword [rbp - 4]	        73	hex.c	FUNCTION_4
0x40001f9	              0xc9	                                   leave	        74	hex.c	FUNCTION_4
0x40001fa	              0xc3	                                     ret	        74	hex.c	FUNCTION_4
hexval	CALL,0:ELSE,0:WHILE,0:SWITCH,0:DO,0:IF,0:FOR,0:functions,0	10
0x4000040	              0x55	                                push rbp	      1272	cache.h	FUNCTION_32
0x4000041	          0x4889e5	                            mov rbp, rsp	      1272	cache.h	FUNCTION_32
0x4000044	            0x89f8	                            mov eax, edi	      1272	cache.h	FUNCTION_32
0x4000046	          0x8845fc	                  mov byte [rbp - 4], al	      1272	cache.h	FUNCTION_32
0x4000049	         0xfb645fc	               movzx eax, byte [rbp - 4]	      1273	cache.h	FUNCTION_32
0x400004d	            0x4898	                                    cdqe	      1273	cache.h	FUNCTION_32
0x400004f	     0xfb680000000	                   movzx eax, byte [rax]	      1273	cache.h	FUNCTION_32
0x4000056	           0xfbec0	                           movsx eax, al	      1273	cache.h	FUNCTION_32
0x4000059	              0x5d	                                 pop rbp	      1274	cache.h	FUNCTION_32
0x400005a	              0xc3	                                     ret	      1274	cache.h	FUNCTION_32
oid_to_hex	CALL,1:ELSE,0:WHILE,0:SWITCH,0:DO,0:IF,0:FOR,0:functions,0	9
0x40002f3	              0x55	                                push rbp	       106	hex.c	FUNCTION_8
0x40002f4	          0x4889e5	                            mov rbp, rsp	       106	hex.c	FUNCTION_8
0x40002f7	        0x4883ec08	                              sub rsp, 8	       106	hex.c	FUNCTION_8
0x40002fb	        0x48897df8	                mov qword [rbp - 8], rdi	       106	hex.c	FUNCTION_8
0x40002ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       107	hex.c	FUNCTION_8	CALL_1
0x4000303	          0x4889c7	                            mov rdi, rax	       107	hex.c	FUNCTION_8	CALL_1
0x4000306	      0xe800000000	                          call 0x400030b	       107	hex.c	FUNCTION_8	CALL_1
0x400030b	              0xc9	                                   leave	       108	hex.c	FUNCTION_8
0x400030c	              0xc3	                                     ret	       108	hex.c	FUNCTION_8
