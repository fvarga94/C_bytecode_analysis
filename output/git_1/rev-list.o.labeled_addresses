finish_object	IF,2:functions,0:WHILE,0:CALL,3:FOR,0:DO,0:ELSE,0:SWITCH,0	47
0x40008dd	              0x55	                                push rbp	       234	rev-list.c	FUNCTION_4
0x40008de	          0x4889e5	                            mov rbp, rsp	       234	rev-list.c	FUNCTION_4
0x40008e1	        0x4883ec30	                           sub rsp, 0x30	       234	rev-list.c	FUNCTION_4
0x40008e5	        0x48897de8	             mov qword [rbp - 0x18], rdi	       234	rev-list.c	FUNCTION_4
0x40008e9	        0x488975e0	             mov qword [rbp - 0x20], rsi	       234	rev-list.c	FUNCTION_4
0x40008ed	        0x488955d8	             mov qword [rbp - 0x28], rdx	       234	rev-list.c	FUNCTION_4
0x40008f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       235	rev-list.c	FUNCTION_4
0x40008f5	        0x488945f8	                mov qword [rbp - 8], rax	       235	rev-list.c	FUNCTION_4
0x40008f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       236	rev-list.c	FUNCTION_4	IF_1	CALL_1
0x40008fd	           0xfb600	                   movzx eax, byte [rax]	       236	rev-list.c	FUNCTION_4	IF_1	CALL_1
0x4000900	          0x83e00e	                            and eax, 0xe	       236	rev-list.c	FUNCTION_4	IF_1	CALL_1
0x4000903	            0x3c06	                               cmp al, 6	       236	rev-list.c	FUNCTION_4	IF_1	CALL_1
0x4000905	            0x7527	                           jne 0x400092e	       236	rev-list.c	FUNCTION_4	IF_1	CALL_1
0x4000907	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       236	rev-list.c	FUNCTION_4	IF_1	CALL_1
0x400090b	        0x4883c004	                              add rax, 4	       236	rev-list.c	FUNCTION_4	IF_1	CALL_1
0x400090f	          0x4889c7	                            mov rdi, rax	       236	rev-list.c	FUNCTION_4	IF_1	CALL_1
0x4000912	      0xe800000000	                          call 0x4000917	       236	rev-list.c	FUNCTION_4	IF_1	CALL_1
0x4000917	            0x85c0	                           test eax, eax	       236	rev-list.c	FUNCTION_4	IF_1	CALL_1
0x4000919	            0x7513	                           jne 0x400092e	       236	rev-list.c	FUNCTION_4	IF_1	CALL_1
0x400091b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       237	rev-list.c	FUNCTION_4	IF_1	CALL_2
0x400091f	          0x4889c7	                            mov rdi, rax	       237	rev-list.c	FUNCTION_4	IF_1	CALL_2
0x4000922	      0xe8fcfeffff	              call sym.finish_object__ma	       237	rev-list.c	FUNCTION_4	IF_1	CALL_2
0x4000927	      0xb801000000	                              mov eax, 1	       238	rev-list.c	FUNCTION_4	IF_1
0x400092c	            0xeb43	                           jmp 0x4000971	       238	rev-list.c	FUNCTION_4	IF_1
0x400092e	        0x488b45f8	                mov rax, qword [rbp - 8]	       240	rev-list.c	FUNCTION_4	IF_2
0x4000932	          0x488b00	                    mov rax, qword [rax]	       240	rev-list.c	FUNCTION_4	IF_2
0x4000935	         0xfb64075	           movzx eax, byte [rax + 0x75] 	       240	rev-list.c	FUNCTION_4	IF_2
0x4000939	          0x83e080	                     and eax, 0xffffff80	       240	rev-list.c	FUNCTION_4	IF_2
0x400093c	            0x84c0	                             test al, al	       240	rev-list.c	FUNCTION_4	IF_2
0x400093e	            0x742c	                            je 0x400096c	       240	rev-list.c	FUNCTION_4	IF_2
0x4000940	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       240	rev-list.c	FUNCTION_4	IF_2
0x4000944	           0xfb600	                   movzx eax, byte [rax]	       240	rev-list.c	FUNCTION_4	IF_2
0x4000947	          0x83e001	                              and eax, 1	       240	rev-list.c	FUNCTION_4	IF_2
0x400094a	            0x84c0	                             test al, al	       240	rev-list.c	FUNCTION_4	IF_2
0x400094c	            0x751e	                           jne 0x400096c	       240	rev-list.c	FUNCTION_4	IF_2
0x400094e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       240	rev-list.c	FUNCTION_4	IF_2
0x4000952	           0xfb600	                   movzx eax, byte [rax]	       240	rev-list.c	FUNCTION_4	IF_2
0x4000955	          0x83e00e	                            and eax, 0xe	       240	rev-list.c	FUNCTION_4	IF_2
0x4000958	            0x3c02	                               cmp al, 2	       240	rev-list.c	FUNCTION_4	IF_2
0x400095a	            0x7410	                            je 0x400096c	       240	rev-list.c	FUNCTION_4	IF_2
0x400095c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       241	rev-list.c	FUNCTION_4	CALL_3
0x4000960	        0x4883c004	                              add rax, 4	       241	rev-list.c	FUNCTION_4	CALL_3
0x4000964	          0x4889c7	                            mov rdi, rax	       241	rev-list.c	FUNCTION_4	CALL_3
0x4000967	      0xe800000000	                          call 0x400096c	       241	rev-list.c	FUNCTION_4	CALL_3
0x400096c	      0xb800000000	                              mov eax, 0	       242	rev-list.c	FUNCTION_4
0x4000971	              0xc9	                                   leave	       243	rev-list.c	FUNCTION_4
0x4000972	              0xc3	                                     ret	       243	rev-list.c	FUNCTION_4
finish_object__ma	IF,1:functions,0:WHILE,0:CALL,6:FOR,0:DO,0:ELSE,0:SWITCH,1	52
0x4000823	              0x55	                                push rbp	       201	rev-list.c	FUNCTION_3
0x4000824	          0x4889e5	                            mov rbp, rsp	       201	rev-list.c	FUNCTION_3
0x4000827	        0x4883ec10	                           sub rsp, 0x10	       201	rev-list.c	FUNCTION_3
0x400082b	        0x48897df8	                mov qword [rbp - 8], rdi	       201	rev-list.c	FUNCTION_3
0x400082f	    0x8b0500000000	            mov eax, dword [0x04000835] 	       208	rev-list.c	FUNCTION_3	SWITCH_1
0x4000835	          0x83f801	                              cmp eax, 1	       208	rev-list.c	FUNCTION_3	SWITCH_1
0x4000838	     0xf8499000000	                            je 0x40008d7	       208	rev-list.c	FUNCTION_3	SWITCH_1
0x400083e	          0x83f801	                              cmp eax, 1	       208	rev-list.c	FUNCTION_3	SWITCH_1
0x4000841	            0x720c	                            jb 0x400084f	       208	rev-list.c	FUNCTION_3	SWITCH_1
0x4000843	          0x83f802	                              cmp eax, 2	       208	rev-list.c	FUNCTION_3	SWITCH_1
0x4000846	            0x7429	                            je 0x4000871	       208	rev-list.c	FUNCTION_3	SWITCH_1
0x4000848	          0x83f803	                              cmp eax, 3	       208	rev-list.c	FUNCTION_3	SWITCH_1
0x400084b	            0x743b	                            je 0x4000888	       208	rev-list.c	FUNCTION_3	SWITCH_1
0x400084d	            0xeb6f	                           jmp 0x40008be	       208	rev-list.c	FUNCTION_3	SWITCH_1
0x400084f	        0x488b45f8	                mov rax, qword [rbp - 8]	       210	rev-list.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000853	        0x4883c004	                              add rax, 4	       210	rev-list.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000857	          0x4889c7	                            mov rdi, rax	       210	rev-list.c	FUNCTION_3	SWITCH_1	CALL_2
0x400085a	      0xe800000000	                          call 0x400085f	       210	rev-list.c	FUNCTION_3	SWITCH_1	CALL_2
0x400085f	          0x4889c6	                            mov rsi, rax	       210	rev-list.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000862	      0xbf00000000	                              mov edi, 0	       210	rev-list.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000867	      0xb800000000	                              mov eax, 0	       210	rev-list.c	FUNCTION_3	SWITCH_1	CALL_2
0x400086c	      0xe800000000	                          call 0x4000871	       210	rev-list.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000871	        0x488b45f8	                mov rax, qword [rbp - 8]	       217	rev-list.c	FUNCTION_3	SWITCH_1	CALL_3
0x4000875	        0x4883c004	                              add rax, 4	       217	rev-list.c	FUNCTION_3	SWITCH_1	CALL_3
0x4000879	          0x4889c6	                            mov rsi, rax	       217	rev-list.c	FUNCTION_3	SWITCH_1	CALL_3
0x400087c	      0xbf00000000	                              mov edi, 0	       217	rev-list.c	FUNCTION_3	SWITCH_1	CALL_3
0x4000881	      0xe800000000	                          call 0x4000886	       217	rev-list.c	FUNCTION_3	SWITCH_1	CALL_3
0x4000886	            0xeb53	                           jmp 0x40008db	       218	rev-list.c	FUNCTION_3	SWITCH_1
0x4000888	        0x488b45f8	                mov rax, qword [rbp - 8]	       221	rev-list.c	FUNCTION_3	SWITCH_1	IF_1	CALL_4
0x400088c	        0x4883c004	                              add rax, 4	       221	rev-list.c	FUNCTION_3	SWITCH_1	IF_1	CALL_4
0x4000890	          0x4889c7	                            mov rdi, rax	       221	rev-list.c	FUNCTION_3	SWITCH_1	IF_1	CALL_4
0x4000893	      0xe800000000	                          call 0x4000898	       221	rev-list.c	FUNCTION_3	SWITCH_1	IF_1	CALL_4
0x4000898	            0x85c0	                           test eax, eax	       221	rev-list.c	FUNCTION_3	SWITCH_1	IF_1	CALL_4
0x400089a	            0x753e	                           jne 0x40008da	       221	rev-list.c	FUNCTION_3	SWITCH_1	IF_1	CALL_4
0x400089c	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	rev-list.c	FUNCTION_3	SWITCH_1	CALL_6
0x40008a0	        0x4883c004	                              add rax, 4	       224	rev-list.c	FUNCTION_3	SWITCH_1	CALL_6
0x40008a4	          0x4889c7	                            mov rdi, rax	       223	rev-list.c	FUNCTION_3	SWITCH_1	CALL_5
0x40008a7	      0xe800000000	                          call 0x40008ac	       223	rev-list.c	FUNCTION_3	SWITCH_1	CALL_5
0x40008ac	          0x4889c6	                            mov rsi, rax	       223	rev-list.c	FUNCTION_3	SWITCH_1	CALL_5
0x40008af	      0xbf00000000	                              mov edi, 0	       223	rev-list.c	FUNCTION_3	SWITCH_1	CALL_5
0x40008b4	      0xb800000000	                              mov eax, 0	       223	rev-list.c	FUNCTION_3	SWITCH_1	CALL_5
0x40008b9	      0xe800000000	                          call 0x40008be	       223	rev-list.c	FUNCTION_3	SWITCH_1	CALL_5
0x40008be	      0xba00000000	                              mov edx, 0	       228	rev-list.c	FUNCTION_3	SWITCH_1
0x40008c3	      0xbee4000000	                           mov esi, 0xe4	       228	rev-list.c	FUNCTION_3	SWITCH_1
0x40008c8	      0xbf00000000	                              mov edi, 0	       228	rev-list.c	FUNCTION_3	SWITCH_1
0x40008cd	      0xb800000000	                              mov eax, 0	       228	rev-list.c	FUNCTION_3	SWITCH_1
0x40008d2	      0xe800000000	                          call 0x40008d7	       228	rev-list.c	FUNCTION_3	SWITCH_1
0x40008d7	              0x90	                                     nop	       214	rev-list.c	FUNCTION_3	SWITCH_1
0x40008d8	            0xeb01	                           jmp 0x40008db	       214	rev-list.c	FUNCTION_3	SWITCH_1
0x40008da	              0x90	                                     nop	       222	rev-list.c	FUNCTION_3	SWITCH_1	IF_1
0x40008db	              0xc9	                                   leave	       231	rev-list.c	FUNCTION_3
0x40008dc	              0xc3	                                     ret	       231	rev-list.c	FUNCTION_3
print_var_int	IF,0:functions,0:WHILE,0:CALL,1:FOR,0:DO,0:ELSE,0:SWITCH,0	14
0x4000a61	              0x55	                                push rbp	       267	rev-list.c	FUNCTION_8
0x4000a62	          0x4889e5	                            mov rbp, rsp	       267	rev-list.c	FUNCTION_8
0x4000a65	        0x4883ec10	                           sub rsp, 0x10	       267	rev-list.c	FUNCTION_8
0x4000a69	        0x48897df8	                mov qword [rbp - 8], rdi	       267	rev-list.c	FUNCTION_8
0x4000a6d	          0x8975f4	              mov dword [rbp - 0xc], esi	       267	rev-list.c	FUNCTION_8
0x4000a70	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       268	rev-list.c	FUNCTION_8	CALL_1
0x4000a73	        0x488b45f8	                mov rax, qword [rbp - 8]	       268	rev-list.c	FUNCTION_8	CALL_1
0x4000a77	          0x4889c6	                            mov rsi, rax	       268	rev-list.c	FUNCTION_8	CALL_1
0x4000a7a	      0xbf00000000	                              mov edi, 0	       268	rev-list.c	FUNCTION_8	CALL_1
0x4000a7f	      0xb800000000	                              mov eax, 0	       268	rev-list.c	FUNCTION_8	CALL_1
0x4000a84	      0xe800000000	                          call 0x4000a89	       268	rev-list.c	FUNCTION_8	CALL_1
0x4000a89	              0x90	                                     nop	       269	rev-list.c	FUNCTION_8
0x4000a8a	              0xc9	                                   leave	       269	rev-list.c	FUNCTION_8
0x4000a8b	              0xc3	                                     ret	       269	rev-list.c	FUNCTION_8
list_objects_filter_set_no_filter	IF,0:functions,0:WHILE,0:CALL,1:FOR,0:DO,0:ELSE,0:SWITCH,0	14
0x4000182	              0x55	                                push rbp	        68	list-objects-filter-options.h	FUNCTION_13
0x4000183	          0x4889e5	                            mov rbp, rsp	        68	list-objects-filter-options.h	FUNCTION_13
0x4000186	        0x4883ec10	                           sub rsp, 0x10	        68	list-objects-filter-options.h	FUNCTION_13
0x400018a	        0x48897df8	                mov qword [rbp - 8], rdi	        68	list-objects-filter-options.h	FUNCTION_13
0x400018e	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	list-objects-filter-options.h	FUNCTION_13	CALL_1
0x4000192	          0x4889c7	                            mov rdi, rax	        69	list-objects-filter-options.h	FUNCTION_13	CALL_1
0x4000195	      0xe800000000	                          call 0x400019a	        69	list-objects-filter-options.h	FUNCTION_13	CALL_1
0x400019a	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	list-objects-filter-options.h	FUNCTION_13
0x400019e	         0xfb6500c	            movzx edx, byte [rax + 0xc] 	        70	list-objects-filter-options.h	FUNCTION_13
0x40001a2	          0x83ca01	                               or edx, 1	        70	list-objects-filter-options.h	FUNCTION_13
0x40001a5	          0x88500c	                mov byte [rax + 0xc], dl	        70	list-objects-filter-options.h	FUNCTION_13
0x40001a8	              0x90	                                     nop	        71	list-objects-filter-options.h	FUNCTION_13
0x40001a9	              0xc9	                                   leave	        71	list-objects-filter-options.h	FUNCTION_13
0x40001aa	              0xc3	                                     ret	        71	list-objects-filter-options.h	FUNCTION_13
oidmap_iter_init	IF,0:functions,0:WHILE,0:CALL,1:FOR,0:DO,0:ELSE,0:SWITCH,0	13
0x40000c2	              0x55	                                push rbp	        74	oidmap.h	FUNCTION_14
0x40000c3	          0x4889e5	                            mov rbp, rsp	        74	oidmap.h	FUNCTION_14
0x40000c6	        0x4883ec10	                           sub rsp, 0x10	        74	oidmap.h	FUNCTION_14
0x40000ca	        0x48897df8	                mov qword [rbp - 8], rdi	        74	oidmap.h	FUNCTION_14
0x40000ce	        0x488975f0	             mov qword [rbp - 0x10], rsi	        74	oidmap.h	FUNCTION_14
0x40000d2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        75	oidmap.h	FUNCTION_14	CALL_1
0x40000d6	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	oidmap.h	FUNCTION_14	CALL_1
0x40000da	          0x4889d6	                            mov rsi, rdx	        75	oidmap.h	FUNCTION_14	CALL_1
0x40000dd	          0x4889c7	                            mov rdi, rax	        75	oidmap.h	FUNCTION_14	CALL_1
0x40000e0	      0xe800000000	                          call 0x40000e5	        75	oidmap.h	FUNCTION_14	CALL_1
0x40000e5	              0x90	                                     nop	        76	oidmap.h	FUNCTION_14
0x40000e6	              0xc9	                                   leave	        76	oidmap.h	FUNCTION_14
0x40000e7	              0xc3	                                     ret	        76	oidmap.h	FUNCTION_14
parse_missing_action_value	IF,4:functions,0:WHILE,0:CALL,4:FOR,0:DO,0:ELSE,0:SWITCH,0	46
0x4000c7b	              0x55	                                push rbp	       329	rev-list.c	FUNCTION_11
0x4000c7c	          0x4889e5	                            mov rbp, rsp	       329	rev-list.c	FUNCTION_11
0x4000c7f	        0x4883ec10	                           sub rsp, 0x10	       329	rev-list.c	FUNCTION_11
0x4000c83	        0x48897df8	                mov qword [rbp - 8], rdi	       329	rev-list.c	FUNCTION_11
0x4000c87	        0x488b45f8	                mov rax, qword [rbp - 8]	       330	rev-list.c	FUNCTION_11	IF_1	CALL_1
0x4000c8b	      0xbe00000000	                              mov esi, 0	       330	rev-list.c	FUNCTION_11	IF_1	CALL_1
0x4000c90	          0x4889c7	                            mov rdi, rax	       330	rev-list.c	FUNCTION_11	IF_1	CALL_1
0x4000c93	      0xe800000000	                          call 0x4000c98	       330	rev-list.c	FUNCTION_11	IF_1	CALL_1
0x4000c98	            0x85c0	                           test eax, eax	       330	rev-list.c	FUNCTION_11	IF_1	CALL_1
0x4000c9a	            0x7514	                           jne 0x4000cb0	       330	rev-list.c	FUNCTION_11	IF_1	CALL_1
0x4000c9c	    0xc70500000000	               mov dword [0x04000ca6], 0	       331	rev-list.c	FUNCTION_11	IF_1
0x4000ca6	      0xb801000000	                              mov eax, 1	       332	rev-list.c	FUNCTION_11	IF_1
0x4000cab	      0xe995000000	                           jmp 0x4000d45	       332	rev-list.c	FUNCTION_11	IF_1
0x4000cb0	        0x488b45f8	                mov rax, qword [rbp - 8]	       335	rev-list.c	FUNCTION_11	IF_2	CALL_2
0x4000cb4	      0xbe00000000	                              mov esi, 0	       335	rev-list.c	FUNCTION_11	IF_2	CALL_2
0x4000cb9	          0x4889c7	                            mov rdi, rax	       335	rev-list.c	FUNCTION_11	IF_2	CALL_2
0x4000cbc	      0xe800000000	                          call 0x4000cc1	       335	rev-list.c	FUNCTION_11	IF_2	CALL_2
0x4000cc1	            0x85c0	                           test eax, eax	       335	rev-list.c	FUNCTION_11	IF_2	CALL_2
0x4000cc3	            0x751b	                           jne 0x4000ce0	       335	rev-list.c	FUNCTION_11	IF_2	CALL_2
0x4000cc5	    0xc70500000000	               mov dword [0x04000ccf], 1	       336	rev-list.c	FUNCTION_11	IF_2
0x4000ccf	    0xc70500000000	               mov dword [0x04000cd9], 0	       337	rev-list.c	FUNCTION_11	IF_2
0x4000cd9	      0xb801000000	                              mov eax, 1	       338	rev-list.c	FUNCTION_11	IF_2
0x4000cde	            0xeb65	                           jmp 0x4000d45	       338	rev-list.c	FUNCTION_11	IF_2
0x4000ce0	        0x488b45f8	                mov rax, qword [rbp - 8]	       341	rev-list.c	FUNCTION_11	IF_3	CALL_3
0x4000ce4	      0xbe00000000	                              mov esi, 0	       341	rev-list.c	FUNCTION_11	IF_3	CALL_3
0x4000ce9	          0x4889c7	                            mov rdi, rax	       341	rev-list.c	FUNCTION_11	IF_3	CALL_3
0x4000cec	      0xe800000000	                          call 0x4000cf1	       341	rev-list.c	FUNCTION_11	IF_3	CALL_3
0x4000cf1	            0x85c0	                           test eax, eax	       341	rev-list.c	FUNCTION_11	IF_3	CALL_3
0x4000cf3	            0x751b	                           jne 0x4000d10	       341	rev-list.c	FUNCTION_11	IF_3	CALL_3
0x4000cf5	    0xc70500000000	               mov dword [0x04000cff], 2	       342	rev-list.c	FUNCTION_11	IF_3
0x4000cff	    0xc70500000000	               mov dword [0x04000d09], 0	       343	rev-list.c	FUNCTION_11	IF_3
0x4000d09	      0xb801000000	                              mov eax, 1	       344	rev-list.c	FUNCTION_11	IF_3
0x4000d0e	            0xeb35	                           jmp 0x4000d45	       344	rev-list.c	FUNCTION_11	IF_3
0x4000d10	        0x488b45f8	                mov rax, qword [rbp - 8]	       347	rev-list.c	FUNCTION_11	IF_4	CALL_4
0x4000d14	      0xbe00000000	                              mov esi, 0	       347	rev-list.c	FUNCTION_11	IF_4	CALL_4
0x4000d19	          0x4889c7	                            mov rdi, rax	       347	rev-list.c	FUNCTION_11	IF_4	CALL_4
0x4000d1c	      0xe800000000	                          call 0x4000d21	       347	rev-list.c	FUNCTION_11	IF_4	CALL_4
0x4000d21	            0x85c0	                           test eax, eax	       347	rev-list.c	FUNCTION_11	IF_4	CALL_4
0x4000d23	            0x751b	                           jne 0x4000d40	       347	rev-list.c	FUNCTION_11	IF_4	CALL_4
0x4000d25	    0xc70500000000	               mov dword [0x04000d2f], 3	       348	rev-list.c	FUNCTION_11	IF_4
0x4000d2f	    0xc70500000000	               mov dword [0x04000d39], 0	       349	rev-list.c	FUNCTION_11	IF_4
0x4000d39	      0xb801000000	                              mov eax, 1	       350	rev-list.c	FUNCTION_11	IF_4
0x4000d3e	            0xeb05	                           jmp 0x4000d45	       350	rev-list.c	FUNCTION_11	IF_4
0x4000d40	      0xb800000000	                              mov eax, 0	       353	rev-list.c	FUNCTION_11
0x4000d45	              0xc9	                                   leave	       354	rev-list.c	FUNCTION_11
0x4000d46	              0xc3	                                     ret	       354	rev-list.c	FUNCTION_11
show_object	IF,2:functions,0:WHILE,0:CALL,3:FOR,0:DO,0:ELSE,0:SWITCH,0	42
0x4000973	              0x55	                                push rbp	       246	rev-list.c	FUNCTION_5
0x4000974	          0x4889e5	                            mov rbp, rsp	       246	rev-list.c	FUNCTION_5
0x4000977	        0x4883ec30	                           sub rsp, 0x30	       246	rev-list.c	FUNCTION_5
0x400097b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       246	rev-list.c	FUNCTION_5
0x400097f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       246	rev-list.c	FUNCTION_5
0x4000983	        0x488955d8	             mov qword [rbp - 0x28], rdx	       246	rev-list.c	FUNCTION_5
0x4000987	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       247	rev-list.c	FUNCTION_5
0x400098b	        0x488945f8	                mov qword [rbp - 8], rax	       247	rev-list.c	FUNCTION_5
0x400098f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       248	rev-list.c	FUNCTION_5	IF_1	CALL_1
0x4000993	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       248	rev-list.c	FUNCTION_5	IF_1	CALL_1
0x4000997	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       248	rev-list.c	FUNCTION_5	IF_1	CALL_1
0x400099b	          0x4889ce	                            mov rsi, rcx	       248	rev-list.c	FUNCTION_5	IF_1	CALL_1
0x400099e	          0x4889c7	                            mov rdi, rax	       248	rev-list.c	FUNCTION_5	IF_1	CALL_1
0x40009a1	      0xe837ffffff	                  call sym.finish_object	       248	rev-list.c	FUNCTION_5	IF_1	CALL_1
0x40009a6	            0x85c0	                           test eax, eax	       248	rev-list.c	FUNCTION_5	IF_1	CALL_1
0x40009a8	            0x7553	                           jne 0x40009fd	       248	rev-list.c	FUNCTION_5	IF_1	CALL_1
0x40009aa	    0x8b0500000000	            mov eax, dword [0x040009b0] 	       250	rev-list.c	FUNCTION_5	CALL_2
0x40009b0	          0x83c001	                              add eax, 1	       250	rev-list.c	FUNCTION_5	CALL_2
0x40009b3	    0x890500000000	            mov dword [0x040009b9], eax 	       250	rev-list.c	FUNCTION_5	CALL_2
0x40009b9	    0x8b0500000000	            mov eax, dword [0x040009bf] 	       250	rev-list.c	FUNCTION_5	CALL_2
0x40009bf	            0x89c2	                            mov edx, eax	       250	rev-list.c	FUNCTION_5	CALL_2
0x40009c1	    0x488b05000000	            mov rax, qword [0x040009c8] 	       250	rev-list.c	FUNCTION_5	CALL_2
0x40009c8	          0x4889d6	                            mov rsi, rdx	       250	rev-list.c	FUNCTION_5	CALL_2
0x40009cb	          0x4889c7	                            mov rdi, rax	       250	rev-list.c	FUNCTION_5	CALL_2
0x40009ce	      0xe800000000	                          call 0x40009d3	       250	rev-list.c	FUNCTION_5	CALL_2
0x40009d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       251	rev-list.c	FUNCTION_5	IF_2
0x40009d7	          0x8b4008	                mov eax, dword [rax + 8]	       251	rev-list.c	FUNCTION_5	IF_2
0x40009da	          0x83e002	                              and eax, 2	       251	rev-list.c	FUNCTION_5	IF_2
0x40009dd	            0x85c0	                           test eax, eax	       251	rev-list.c	FUNCTION_5	IF_2
0x40009df	            0x751f	                           jne 0x4000a00	       251	rev-list.c	FUNCTION_5	IF_2
0x40009e1	    0x488b05000000	            mov rax, qword [0x040009e8] 	       253	rev-list.c	FUNCTION_5	CALL_3
0x40009e8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       253	rev-list.c	FUNCTION_5	CALL_3
0x40009ec	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       253	rev-list.c	FUNCTION_5	CALL_3
0x40009f0	          0x4889ce	                            mov rsi, rcx	       253	rev-list.c	FUNCTION_5	CALL_3
0x40009f3	          0x4889c7	                            mov rdi, rax	       253	rev-list.c	FUNCTION_5	CALL_3
0x40009f6	      0xe800000000	                          call 0x40009fb	       253	rev-list.c	FUNCTION_5	CALL_3
0x40009fb	            0xeb04	                           jmp 0x4000a01	       253	rev-list.c	FUNCTION_5	CALL_3
0x40009fd	              0x90	                                     nop	       249	rev-list.c	FUNCTION_5	IF_1
0x40009fe	            0xeb01	                           jmp 0x4000a01	       249	rev-list.c	FUNCTION_5	IF_1
0x4000a00	              0x90	                                     nop	       252	rev-list.c	FUNCTION_5	IF_2
0x4000a01	              0xc9	                                   leave	       254	rev-list.c	FUNCTION_5
0x4000a02	              0xc3	                                     ret	       254	rev-list.c	FUNCTION_5
show_object_fast	IF,0:functions,0:WHILE,0:CALL,2:FOR,0:DO,0:ELSE,0:SWITCH,0	21
0x4000c2f	              0x55	                                push rbp	       323	rev-list.c	FUNCTION_10
0x4000c30	          0x4889e5	                            mov rbp, rsp	       323	rev-list.c	FUNCTION_10
0x4000c33	        0x4883ec30	                           sub rsp, 0x30	       323	rev-list.c	FUNCTION_10
0x4000c37	        0x48897df8	                mov qword [rbp - 8], rdi	       323	rev-list.c	FUNCTION_10
0x4000c3b	          0x8975f4	              mov dword [rbp - 0xc], esi	       323	rev-list.c	FUNCTION_10
0x4000c3e	          0x8955f0	             mov dword [rbp - 0x10], edx	       323	rev-list.c	FUNCTION_10
0x4000c41	          0x894dec	             mov dword [rbp - 0x14], ecx	       323	rev-list.c	FUNCTION_10
0x4000c44	        0x4c8945e0	              mov qword [rbp - 0x20], r8	       323	rev-list.c	FUNCTION_10
0x4000c48	        0x4c894dd8	              mov qword [rbp - 0x28], r9	       323	rev-list.c	FUNCTION_10
0x4000c4c	        0x488b45f8	                mov rax, qword [rbp - 8]	       324	rev-list.c	FUNCTION_10	CALL_2
0x4000c50	          0x4889c7	                            mov rdi, rax	       324	rev-list.c	FUNCTION_10	CALL_2
0x4000c53	      0xe800000000	                          call 0x4000c58	       324	rev-list.c	FUNCTION_10	CALL_2
0x4000c58	          0x4889c2	                            mov rdx, rax	       324	rev-list.c	FUNCTION_10	CALL_2
0x4000c5b	    0x488b05000000	            mov rax, qword [0x04000c62] 	       324	rev-list.c	FUNCTION_10	CALL_2
0x4000c62	      0xbe00000000	                              mov esi, 0	       324	rev-list.c	FUNCTION_10	CALL_2
0x4000c67	          0x4889c7	                            mov rdi, rax	       324	rev-list.c	FUNCTION_10	CALL_2
0x4000c6a	      0xb800000000	                              mov eax, 0	       324	rev-list.c	FUNCTION_10	CALL_2
0x4000c6f	      0xe800000000	                          call 0x4000c74	       324	rev-list.c	FUNCTION_10	CALL_2
0x4000c74	      0xb801000000	                              mov eax, 1	       325	rev-list.c	FUNCTION_10
0x4000c79	              0xc9	                                   leave	       326	rev-list.c	FUNCTION_10
0x4000c7a	              0xc3	                                     ret	       326	rev-list.c	FUNCTION_10
show_commit	IF,18:functions,0:WHILE,2:CALL,34:FOR,0:DO,0:ELSE,6:SWITCH,0	333
0x40001ab	              0x55	                                push rbp	        79	rev-list.c	FUNCTION_1
0x40001ac	          0x4889e5	                            mov rbp, rsp	        79	rev-list.c	FUNCTION_1
0x40001af	              0x53	                                push rbx	        79	rev-list.c	FUNCTION_1
0x40001b0	    0x4881ec080100	                          sub rsp, 0x108	        79	rev-list.c	FUNCTION_1
0x40001b7	    0x4889bdf8feff	            mov qword [rbp - 0x108], rdi	        79	rev-list.c	FUNCTION_1
0x40001be	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	        79	rev-list.c	FUNCTION_1
0x40001c5	    0x64488b042528	                mov rax, qword fs:[0x28]	        79	rev-list.c	FUNCTION_1
0x40001ce	        0x488945e8	             mov qword [rbp - 0x18], rax	        79	rev-list.c	FUNCTION_1
0x40001d2	            0x31c0	                            xor eax, eax	        79	rev-list.c	FUNCTION_1
0x40001d4	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	        80	rev-list.c	FUNCTION_1
0x40001db	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	        80	rev-list.c	FUNCTION_1
0x40001e2	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	        81	rev-list.c	FUNCTION_1
0x40001e9	          0x488b00	                    mov rax, qword [rax]	        81	rev-list.c	FUNCTION_1
0x40001ec	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	        81	rev-list.c	FUNCTION_1
0x40001f3	    0x8b0500000000	            mov eax, dword [0x040001f9] 	        83	rev-list.c	FUNCTION_1	CALL_1
0x40001f9	          0x83c001	                              add eax, 1	        83	rev-list.c	FUNCTION_1	CALL_1
0x40001fc	    0x890500000000	            mov dword [0x04000202], eax 	        83	rev-list.c	FUNCTION_1	CALL_1
0x4000202	    0x8b0500000000	            mov eax, dword [0x04000208] 	        83	rev-list.c	FUNCTION_1	CALL_1
0x4000208	            0x89c2	                            mov edx, eax	        83	rev-list.c	FUNCTION_1	CALL_1
0x400020a	    0x488b05000000	            mov rax, qword [0x04000211] 	        83	rev-list.c	FUNCTION_1	CALL_1
0x4000211	          0x4889d6	                            mov rsi, rdx	        83	rev-list.c	FUNCTION_1	CALL_1
0x4000214	          0x4889c7	                            mov rdi, rax	        83	rev-list.c	FUNCTION_1	CALL_1
0x4000217	      0xe800000000	                          call 0x400021c	        83	rev-list.c	FUNCTION_1	CALL_1
0x400021c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	        85	rev-list.c	FUNCTION_1	IF_1
0x4000223	          0x8b4008	                mov eax, dword [rax + 8]	        85	rev-list.c	FUNCTION_1	IF_1
0x4000226	          0x83e002	                              and eax, 2	        85	rev-list.c	FUNCTION_1	IF_1
0x4000229	            0x85c0	                           test eax, eax	        85	rev-list.c	FUNCTION_1	IF_1
0x400022b	            0x741e	                            je 0x400024b	        85	rev-list.c	FUNCTION_1	IF_1
0x400022d	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	        86	rev-list.c	FUNCTION_1	IF_1	CALL_2
0x4000234	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	        86	rev-list.c	FUNCTION_1	IF_1	CALL_2
0x400023b	          0x4889d6	                            mov rsi, rdx	        86	rev-list.c	FUNCTION_1	IF_1	CALL_2
0x400023e	          0x4889c7	                            mov rdi, rax	        86	rev-list.c	FUNCTION_1	IF_1	CALL_2
0x4000241	      0xe895050000	                  call sym.finish_commit	        86	rev-list.c	FUNCTION_1	IF_1	CALL_2
0x4000246	      0xe972050000	                           jmp 0x40007bd	        87	rev-list.c	FUNCTION_1	IF_1
0x400024b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        90	rev-list.c	FUNCTION_1	CALL_3
0x4000252	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	        90	rev-list.c	FUNCTION_1	CALL_3
0x4000259	          0x4889c7	                            mov rdi, rax	        90	rev-list.c	FUNCTION_1	CALL_3
0x400025c	      0xe800000000	                          call 0x4000261	        90	rev-list.c	FUNCTION_1	CALL_3
0x4000261	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        92	rev-list.c	FUNCTION_1	IF_2
0x4000268	         0xfb64076	           movzx eax, byte [rax + 0x76] 	        92	rev-list.c	FUNCTION_1	IF_2
0x400026c	          0x83e040	                           and eax, 0x40	        92	rev-list.c	FUNCTION_1	IF_2
0x400026f	            0x84c0	                             test al, al	        92	rev-list.c	FUNCTION_1	IF_2
0x4000271	     0xf84ad000000	                            je 0x4000324	        92	rev-list.c	FUNCTION_1	IF_2
0x4000277	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	        93	rev-list.c	FUNCTION_1	IF_2	IF_3
0x400027e	            0x8b00	                    mov eax, dword [rax]	        93	rev-list.c	FUNCTION_1	IF_2	IF_3
0x4000280	          0xc1e804	                              shr eax, 4	        93	rev-list.c	FUNCTION_1	IF_2	IF_3
0x4000283	      0x25ffffff07	                      and eax, 0x7ffffff	        93	rev-list.c	FUNCTION_1	IF_2	IF_3
0x4000288	      0x2500020000	                          and eax, 0x200	        93	rev-list.c	FUNCTION_1	IF_2	IF_3
0x400028d	            0x85c0	                           test eax, eax	        93	rev-list.c	FUNCTION_1	IF_2	IF_3
0x400028f	            0x741f	                            je 0x40002b0	        93	rev-list.c	FUNCTION_1	IF_2	IF_3
0x4000291	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        94	rev-list.c	FUNCTION_1	IF_2	IF_3
0x4000298	    0x8b8078080000	           mov eax, dword [rax + 0x878] 	        94	rev-list.c	FUNCTION_1	IF_2	IF_3
0x400029e	          0x8d5001	                      lea edx, [rax + 1]	        94	rev-list.c	FUNCTION_1	IF_2	IF_3
0x40002a1	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        94	rev-list.c	FUNCTION_1	IF_2	IF_3
0x40002a8	    0x899078080000	            mov dword [rax + 0x878], edx	        94	rev-list.c	FUNCTION_1	IF_2	IF_3
0x40002ae	            0xeb56	                           jmp 0x4000306	        94	rev-list.c	FUNCTION_1	IF_2	IF_3
0x40002b0	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	        95	rev-list.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40002b7	            0x8b00	                    mov eax, dword [rax]	        95	rev-list.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40002b9	          0xc1e804	                              shr eax, 4	        95	rev-list.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40002bc	      0x25ffffff07	                      and eax, 0x7ffffff	        95	rev-list.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40002c1	      0x2500010000	                          and eax, 0x100	        95	rev-list.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40002c6	            0x85c0	                           test eax, eax	        95	rev-list.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40002c8	            0x741f	                            je 0x40002e9	        95	rev-list.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40002ca	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        96	rev-list.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40002d1	    0x8b8070080000	           mov eax, dword [rax + 0x870] 	        96	rev-list.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40002d7	          0x8d5001	                      lea edx, [rax + 1]	        96	rev-list.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40002da	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        96	rev-list.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40002e1	    0x899070080000	            mov dword [rax + 0x870], edx	        96	rev-list.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40002e7	            0xeb1d	                           jmp 0x4000306	        96	rev-list.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40002e9	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        98	rev-list.c	FUNCTION_1	IF_2	ELSE_2
0x40002f0	    0x8b8074080000	           mov eax, dword [rax + 0x874] 	        98	rev-list.c	FUNCTION_1	IF_2	ELSE_2
0x40002f6	          0x8d5001	                      lea edx, [rax + 1]	        98	rev-list.c	FUNCTION_1	IF_2	ELSE_2
0x40002f9	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        98	rev-list.c	FUNCTION_1	IF_2	ELSE_2
0x4000300	    0x899074080000	            mov dword [rax + 0x874], edx	        98	rev-list.c	FUNCTION_1	IF_2	ELSE_2
0x4000306	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	        99	rev-list.c	FUNCTION_1	IF_2	CALL_4
0x400030d	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	        99	rev-list.c	FUNCTION_1	IF_2	CALL_4
0x4000314	          0x4889d6	                            mov rsi, rdx	        99	rev-list.c	FUNCTION_1	IF_2	CALL_4
0x4000317	          0x4889c7	                            mov rdi, rax	        99	rev-list.c	FUNCTION_1	IF_2	CALL_4
0x400031a	      0xe8bc040000	                  call sym.finish_commit	        99	rev-list.c	FUNCTION_1	IF_2	CALL_4
0x400031f	      0xe999040000	                           jmp 0x40007bd	       100	rev-list.c	FUNCTION_1	IF_2
0x4000324	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       103	rev-list.c	FUNCTION_1	IF_5
0x400032b	          0x8b400c	              mov eax, dword [rax + 0xc]	       103	rev-list.c	FUNCTION_1	IF_5
0x400032e	            0x85c0	                           test eax, eax	       103	rev-list.c	FUNCTION_1	IF_5
0x4000330	            0x741d	                            je 0x400034f	       103	rev-list.c	FUNCTION_1	IF_5
0x4000332	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       104	rev-list.c	FUNCTION_1	CALL_5
0x4000339	        0x488b4028	            mov rax, qword [rax + 0x28] 	       104	rev-list.c	FUNCTION_1	CALL_5
0x400033d	          0x4889c6	                            mov rsi, rax	       104	rev-list.c	FUNCTION_1	CALL_5
0x4000340	      0xbf00000000	                              mov edi, 0	       104	rev-list.c	FUNCTION_1	CALL_5
0x4000345	      0xb800000000	                              mov eax, 0	       104	rev-list.c	FUNCTION_1	CALL_5
0x400034a	      0xe800000000	                          call 0x400034f	       104	rev-list.c	FUNCTION_1	CALL_5
0x400034f	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       105	rev-list.c	FUNCTION_1	IF_6
0x4000356	        0x488b4018	            mov rax, qword [rax + 0x18] 	       105	rev-list.c	FUNCTION_1	IF_6
0x400035a	          0x4885c0	                           test rax, rax	       105	rev-list.c	FUNCTION_1	IF_6
0x400035d	            0x741d	                            je 0x400037c	       105	rev-list.c	FUNCTION_1	IF_6
0x400035f	    0x488b15000000	            mov rdx, qword [0x04000366] 	       106	rev-list.c	FUNCTION_1	CALL_6
0x4000366	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       106	rev-list.c	FUNCTION_1	CALL_6
0x400036d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       106	rev-list.c	FUNCTION_1	CALL_6
0x4000371	          0x4889d6	                            mov rsi, rdx	       106	rev-list.c	FUNCTION_1	CALL_6
0x4000374	          0x4889c7	                            mov rdi, rax	       106	rev-list.c	FUNCTION_1	CALL_6
0x4000377	      0xe800000000	                          call 0x400037c	       106	rev-list.c	FUNCTION_1	CALL_6
0x400037c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       108	rev-list.c	FUNCTION_1	IF_7
0x4000383	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	       108	rev-list.c	FUNCTION_1	IF_7
0x400038a	          0x4885c0	                           test rax, rax	       108	rev-list.c	FUNCTION_1	IF_7
0x400038d	            0x752b	                           jne 0x40003ba	       108	rev-list.c	FUNCTION_1	IF_7
0x400038f	    0x488b1d000000	            mov rbx, qword [0x04000396] 	       109	rev-list.c	FUNCTION_1	CALL_8
0x4000396	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	       109	rev-list.c	FUNCTION_1	CALL_8
0x400039d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       109	rev-list.c	FUNCTION_1	CALL_8
0x40003a4	          0x4889d6	                            mov rsi, rdx	       109	rev-list.c	FUNCTION_1	CALL_8
0x40003a7	          0x4889c7	                            mov rdi, rax	       109	rev-list.c	FUNCTION_1	CALL_8
0x40003aa	      0xe800000000	                          call 0x40003af	       109	rev-list.c	FUNCTION_1	CALL_8
0x40003af	          0x4889de	                            mov rsi, rbx	       109	rev-list.c	FUNCTION_1	CALL_8
0x40003b2	          0x4889c7	                            mov rdi, rax	       109	rev-list.c	FUNCTION_1	CALL_8
0x40003b5	      0xe800000000	                          call 0x40003ba	       109	rev-list.c	FUNCTION_1	CALL_8
0x40003ba	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       110	rev-list.c	FUNCTION_1	IF_8
0x40003c1	         0xfb6407b	           movzx eax, byte [rax + 0x7b] 	       110	rev-list.c	FUNCTION_1	IF_8
0x40003c5	          0x83e001	                              and eax, 1	       110	rev-list.c	FUNCTION_1	IF_8
0x40003c8	            0x84c0	                             test al, al	       110	rev-list.c	FUNCTION_1	IF_8
0x40003ca	            0x7449	                            je 0x4000415	       110	rev-list.c	FUNCTION_1	IF_8
0x40003cc	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       110	rev-list.c	FUNCTION_1	IF_8
0x40003d3	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       110	rev-list.c	FUNCTION_1	IF_8
0x40003d9	            0x85c0	                           test eax, eax	       110	rev-list.c	FUNCTION_1	IF_8
0x40003db	            0x7438	                            je 0x4000415	       110	rev-list.c	FUNCTION_1	IF_8
0x40003dd	    0x488b1d000000	            mov rbx, qword [0x040003e4] 	       111	rev-list.c	FUNCTION_1	IF_8	CALL_10
0x40003e4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       111	rev-list.c	FUNCTION_1	IF_8	CALL_10
0x40003eb	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       111	rev-list.c	FUNCTION_1	IF_8	CALL_10
0x40003f1	            0x89c2	                            mov edx, eax	       111	rev-list.c	FUNCTION_1	IF_8	CALL_10
0x40003f3	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       111	rev-list.c	FUNCTION_1	IF_8	CALL_10
0x40003fa	        0x4883c004	                              add rax, 4	       111	rev-list.c	FUNCTION_1	IF_8	CALL_10
0x40003fe	            0x89d6	                            mov esi, edx	       111	rev-list.c	FUNCTION_1	IF_8	CALL_10
0x4000400	          0x4889c7	                            mov rdi, rax	       111	rev-list.c	FUNCTION_1	IF_8	CALL_10
0x4000403	      0xe800000000	                          call 0x4000408	       111	rev-list.c	FUNCTION_1	IF_8	CALL_10
0x4000408	          0x4889de	                            mov rsi, rbx	       111	rev-list.c	FUNCTION_1	IF_8	CALL_10
0x400040b	          0x4889c7	                            mov rdi, rax	       111	rev-list.c	FUNCTION_1	IF_8	CALL_10
0x400040e	      0xe800000000	                          call 0x4000413	       111	rev-list.c	FUNCTION_1	IF_8	CALL_10
0x4000413	            0xeb25	                           jmp 0x400043a	       111	rev-list.c	FUNCTION_1	IF_8	CALL_10
0x4000415	    0x488b1d000000	            mov rbx, qword [0x0400041c] 	       114	rev-list.c	FUNCTION_1	CALL_12
0x400041c	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       114	rev-list.c	FUNCTION_1	CALL_12
0x4000423	        0x4883c004	                              add rax, 4	       114	rev-list.c	FUNCTION_1	CALL_12
0x4000427	          0x4889c7	                            mov rdi, rax	       114	rev-list.c	FUNCTION_1	CALL_12
0x400042a	      0xe800000000	                          call 0x400042f	       114	rev-list.c	FUNCTION_1	CALL_12
0x400042f	          0x4889de	                            mov rsi, rbx	       114	rev-list.c	FUNCTION_1	CALL_12
0x4000432	          0x4889c7	                            mov rdi, rax	       114	rev-list.c	FUNCTION_1	CALL_12
0x4000435	      0xe800000000	                          call 0x400043a	       114	rev-list.c	FUNCTION_1	CALL_12
0x400043a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       115	rev-list.c	FUNCTION_1	IF_9
0x4000441	         0xfb64077	           movzx eax, byte [rax + 0x77] 	       115	rev-list.c	FUNCTION_1	IF_9
0x4000445	          0x83e008	                              and eax, 8	       115	rev-list.c	FUNCTION_1	IF_9
0x4000448	            0x84c0	                             test al, al	       115	rev-list.c	FUNCTION_1	IF_9
0x400044a	            0x7458	                            je 0x40004a4	       115	rev-list.c	FUNCTION_1	IF_9
0x400044c	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       116	rev-list.c	FUNCTION_1	IF_9
0x4000453	        0x488b4030	            mov rax, qword [rax + 0x30] 	       116	rev-list.c	FUNCTION_1	IF_9
0x4000457	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       116	rev-list.c	FUNCTION_1	IF_9
0x400045e	            0xeb3a	                           jmp 0x400049a	       117	rev-list.c	FUNCTION_1	IF_9	WHILE_1
0x4000460	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       118	rev-list.c	FUNCTION_1	IF_9	WHILE_1	CALL_14
0x4000467	          0x488b00	                    mov rax, qword [rax]	       118	rev-list.c	FUNCTION_1	IF_9	WHILE_1	CALL_14
0x400046a	        0x4883c004	                              add rax, 4	       118	rev-list.c	FUNCTION_1	IF_9	WHILE_1	CALL_14
0x400046e	          0x4889c7	                            mov rdi, rax	       118	rev-list.c	FUNCTION_1	IF_9	WHILE_1	CALL_14
0x4000471	      0xe800000000	                          call 0x4000476	       118	rev-list.c	FUNCTION_1	IF_9	WHILE_1	CALL_14
0x4000476	          0x4889c6	                            mov rsi, rax	       118	rev-list.c	FUNCTION_1	IF_9	WHILE_1	CALL_14
0x4000479	      0xbf00000000	                              mov edi, 0	       118	rev-list.c	FUNCTION_1	IF_9	WHILE_1	CALL_14
0x400047e	      0xb800000000	                              mov eax, 0	       118	rev-list.c	FUNCTION_1	IF_9	WHILE_1	CALL_14
0x4000483	      0xe800000000	                          call 0x4000488	       118	rev-list.c	FUNCTION_1	IF_9	WHILE_1	CALL_14
0x4000488	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       119	rev-list.c	FUNCTION_1	IF_9	WHILE_1
0x400048f	        0x488b4008	                mov rax, qword [rax + 8]	       119	rev-list.c	FUNCTION_1	IF_9	WHILE_1
0x4000493	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       119	rev-list.c	FUNCTION_1	IF_9	WHILE_1
0x400049a	    0x4883bd00ffff	              cmp qword [rbp - 0x100], 0	       117	rev-list.c	FUNCTION_1	IF_9	WHILE_1
0x40004a2	            0x75bc	                           jne 0x4000460	       117	rev-list.c	FUNCTION_1	IF_9	WHILE_1
0x40004a4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       122	rev-list.c	FUNCTION_1	IF_10
0x40004ab	    0x488b80000800	           mov rax, qword [rax + 0x800] 	       122	rev-list.c	FUNCTION_1	IF_10
0x40004b2	          0x4885c0	                           test rax, rax	       122	rev-list.c	FUNCTION_1	IF_10
0x40004b5	            0x746d	                            je 0x4000524	       122	rev-list.c	FUNCTION_1	IF_10
0x40004b7	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       125	rev-list.c	FUNCTION_1	IF_10	CALL_15
0x40004be	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       125	rev-list.c	FUNCTION_1	IF_10	CALL_15
0x40004c5	    0x4881c2000800	                          add rdx, 0x800	       125	rev-list.c	FUNCTION_1	IF_10	CALL_15
0x40004cc	          0x4889c6	                            mov rsi, rax	       125	rev-list.c	FUNCTION_1	IF_10	CALL_15
0x40004cf	          0x4889d7	                            mov rdi, rdx	       125	rev-list.c	FUNCTION_1	IF_10	CALL_15
0x40004d2	      0xe800000000	                          call 0x40004d7	       125	rev-list.c	FUNCTION_1	IF_10	CALL_15
0x40004d7	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	       125	rev-list.c	FUNCTION_1	IF_10	CALL_15
0x40004de	            0xeb3a	                           jmp 0x400051a	       126	rev-list.c	FUNCTION_1	IF_10	WHILE_2
0x40004e0	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       127	rev-list.c	FUNCTION_1	IF_10	WHILE_2	CALL_17
0x40004e7	          0x488b00	                    mov rax, qword [rax]	       127	rev-list.c	FUNCTION_1	IF_10	WHILE_2	CALL_17
0x40004ea	        0x4883c004	                              add rax, 4	       127	rev-list.c	FUNCTION_1	IF_10	WHILE_2	CALL_17
0x40004ee	          0x4889c7	                            mov rdi, rax	       127	rev-list.c	FUNCTION_1	IF_10	WHILE_2	CALL_17
0x40004f1	      0xe800000000	                          call 0x40004f6	       127	rev-list.c	FUNCTION_1	IF_10	WHILE_2	CALL_17
0x40004f6	          0x4889c6	                            mov rsi, rax	       127	rev-list.c	FUNCTION_1	IF_10	WHILE_2	CALL_17
0x40004f9	      0xbf00000000	                              mov edi, 0	       127	rev-list.c	FUNCTION_1	IF_10	WHILE_2	CALL_17
0x40004fe	      0xb800000000	                              mov eax, 0	       127	rev-list.c	FUNCTION_1	IF_10	WHILE_2	CALL_17
0x4000503	      0xe800000000	                          call 0x4000508	       127	rev-list.c	FUNCTION_1	IF_10	WHILE_2	CALL_17
0x4000508	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       128	rev-list.c	FUNCTION_1	IF_10	WHILE_2
0x400050f	        0x488b4008	                mov rax, qword [rax + 8]	       128	rev-list.c	FUNCTION_1	IF_10	WHILE_2
0x4000513	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	       128	rev-list.c	FUNCTION_1	IF_10	WHILE_2
0x400051a	    0x4883bd08ffff	               cmp qword [rbp - 0xf8], 0	       126	rev-list.c	FUNCTION_1	IF_10	WHILE_2
0x4000522	            0x75bc	                           jne 0x40004e0	       126	rev-list.c	FUNCTION_1	IF_10	WHILE_2
0x4000524	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	       131	rev-list.c	FUNCTION_1	CALL_18
0x400052b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       131	rev-list.c	FUNCTION_1	CALL_18
0x4000532	          0x4889d6	                            mov rsi, rdx	       131	rev-list.c	FUNCTION_1	CALL_18
0x4000535	          0x4889c7	                            mov rdi, rax	       131	rev-list.c	FUNCTION_1	CALL_18
0x4000538	      0xe800000000	                          call 0x400053d	       131	rev-list.c	FUNCTION_1	CALL_18
0x400053d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       132	rev-list.c	FUNCTION_1	IF_11
0x4000544	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	       132	rev-list.c	FUNCTION_1	IF_11
0x400054a	          0x83f805	                              cmp eax, 5	       132	rev-list.c	FUNCTION_1	IF_11
0x400054d	            0x750c	                           jne 0x400055b	       132	rev-list.c	FUNCTION_1	IF_11
0x400054f	      0xbf20000000	                           mov edi, 0x20	       133	rev-list.c	FUNCTION_1	CALL_19
0x4000554	      0xe800000000	                          call 0x4000559	       133	rev-list.c	FUNCTION_1	CALL_19
0x4000559	            0xeb0a	                           jmp 0x4000565	       133	rev-list.c	FUNCTION_1	CALL_19
0x400055b	      0xbf0a000000	                            mov edi, 0xa	       135	rev-list.c	FUNCTION_1	CALL_20
0x4000560	      0xe800000000	                          call 0x4000565	       135	rev-list.c	FUNCTION_1	CALL_20
0x4000565	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       137	rev-list.c	FUNCTION_1	IF_12
0x400056c	         0xfb64079	           movzx eax, byte [rax + 0x79] 	       137	rev-list.c	FUNCTION_1	IF_12
0x4000570	          0x83e010	                           and eax, 0x10	       137	rev-list.c	FUNCTION_1	IF_12
0x4000573	            0x84c0	                             test al, al	       137	rev-list.c	FUNCTION_1	IF_12
0x4000575	     0xf84f1010000	                            je 0x400076c	       137	rev-list.c	FUNCTION_1	IF_12
0x400057b	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       138	rev-list.c	FUNCTION_1	IF_12
0x4000586	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	       138	rev-list.c	FUNCTION_1	IF_12
0x4000591	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	       138	rev-list.c	FUNCTION_1	IF_12
0x400059c	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	       139	rev-list.c	FUNCTION_1	IF_12
0x40005a3	      0xb800000000	                              mov eax, 0	       139	rev-list.c	FUNCTION_1	IF_12
0x40005a8	      0xb914000000	                           mov ecx, 0x14	       139	rev-list.c	FUNCTION_1	IF_12
0x40005ad	          0x4889d7	                            mov rdi, rdx	       139	rev-list.c	FUNCTION_1	IF_12
0x40005b0	          0xf348ab	              rep stosq qword [rdi], rax	       139	rev-list.c	FUNCTION_1	IF_12
0x40005b3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       140	rev-list.c	FUNCTION_1	IF_12
0x40005ba	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       140	rev-list.c	FUNCTION_1	IF_12
0x40005c0	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	       140	rev-list.c	FUNCTION_1	IF_12
0x40005c6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       141	rev-list.c	FUNCTION_1	IF_12
0x40005cd	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	       141	rev-list.c	FUNCTION_1	IF_12
0x40005d4	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	       141	rev-list.c	FUNCTION_1	IF_12
0x40005db	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	       141	rev-list.c	FUNCTION_1	IF_12
0x40005e2	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       141	rev-list.c	FUNCTION_1	IF_12
0x40005e9	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       141	rev-list.c	FUNCTION_1	IF_12
0x40005f0	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       141	rev-list.c	FUNCTION_1	IF_12
0x40005f7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       142	rev-list.c	FUNCTION_1	IF_12
0x40005fe	         0xfb6407b	           movzx eax, byte [rax + 0x7b] 	       142	rev-list.c	FUNCTION_1	IF_12
0x4000602	          0xc0e805	                               shr al, 5	       142	rev-list.c	FUNCTION_1	IF_12
0x4000605	          0x83e001	                              and eax, 1	       142	rev-list.c	FUNCTION_1	IF_12
0x4000608	          0x83e001	                              and eax, 1	       142	rev-list.c	FUNCTION_1	IF_12
0x400060b	            0x89c2	                            mov edx, eax	       142	rev-list.c	FUNCTION_1	IF_12
0x400060d	     0xfb68570ffff	            movzx eax, byte [rbp - 0x90]	       142	rev-list.c	FUNCTION_1	IF_12
0x4000614	          0x83e0fe	                     and eax, 0xfffffffe	       142	rev-list.c	FUNCTION_1	IF_12
0x4000617	             0x9d0	                             or eax, edx	       142	rev-list.c	FUNCTION_1	IF_12
0x4000619	    0x888570ffffff	               mov byte [rbp - 0x90], al	       142	rev-list.c	FUNCTION_1	IF_12
0x400061f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       143	rev-list.c	FUNCTION_1	IF_12
0x4000626	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	       143	rev-list.c	FUNCTION_1	IF_12
0x400062c	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	       143	rev-list.c	FUNCTION_1	IF_12
0x4000632	      0xe800000000	                          call 0x4000637	       144	rev-list.c	FUNCTION_1	IF_12	CALL_21
0x4000637	        0x48894598	             mov qword [rbp - 0x68], rax	       144	rev-list.c	FUNCTION_1	IF_12	CALL_21
0x400063b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       145	rev-list.c	FUNCTION_1	IF_12
0x4000642	    0x8b8038050000	           mov eax, dword [rax + 0x538] 	       145	rev-list.c	FUNCTION_1	IF_12
0x4000648	          0x8945a8	             mov dword [rbp - 0x58], eax	       145	rev-list.c	FUNCTION_1	IF_12
0x400064b	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	       146	rev-list.c	FUNCTION_1	IF_12	CALL_22
0x4000652	    0x488b8df8feff	            mov rcx, qword [rbp - 0x108]	       146	rev-list.c	FUNCTION_1	IF_12	CALL_22
0x4000659	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       146	rev-list.c	FUNCTION_1	IF_12	CALL_22
0x4000660	          0x4889ce	                            mov rsi, rcx	       146	rev-list.c	FUNCTION_1	IF_12	CALL_22
0x4000663	          0x4889c7	                            mov rdi, rax	       146	rev-list.c	FUNCTION_1	IF_12	CALL_22
0x4000666	      0xe800000000	                          call 0x400066b	       146	rev-list.c	FUNCTION_1	IF_12	CALL_22
0x400066b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       147	rev-list.c	FUNCTION_1	IF_12	IF_13
0x4000672	          0x4885c0	                           test rax, rax	       147	rev-list.c	FUNCTION_1	IF_12	IF_13
0x4000675	     0xf84a0000000	                            je 0x400071b	       147	rev-list.c	FUNCTION_1	IF_12	IF_13
0x400067b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       148	rev-list.c	FUNCTION_1	IF_12	IF_13	IF_14
0x4000682	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	       148	rev-list.c	FUNCTION_1	IF_12	IF_13	IF_14
0x4000688	          0x83f805	                              cmp eax, 5	       148	rev-list.c	FUNCTION_1	IF_12	IF_13	IF_14
0x400068b	            0x7416	                            je 0x40006a3	       148	rev-list.c	FUNCTION_1	IF_12	IF_13	IF_14
0x400068d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       149	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_23
0x4000694	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	       149	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_23
0x400069b	          0x4889c7	                            mov rdi, rax	       149	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_23
0x400069e	      0xe800000000	                          call 0x40006a3	       149	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_23
0x40006a3	    0x488b0d000000	            mov rcx, qword [0x040006aa] 	       151	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_24
0x40006aa	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       151	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_24
0x40006b1	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	       151	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_24
0x40006b8	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	       151	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_24
0x40006bf	          0x4889ce	                            mov rsi, rcx	       151	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_24
0x40006c2	          0x4889c7	                            mov rdi, rax	       151	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_24
0x40006c5	      0xe800000000	                          call 0x40006ca	       151	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_24
0x40006ca	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       168	rev-list.c	FUNCTION_1	IF_12	IF_13	IF_15
0x40006d1	          0x4885c0	                           test rax, rax	       168	rev-list.c	FUNCTION_1	IF_12	IF_13	IF_15
0x40006d4	            0x7432	                            je 0x4000708	       168	rev-list.c	FUNCTION_1	IF_12	IF_13	IF_15
0x40006d6	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       168	rev-list.c	FUNCTION_1	IF_12	IF_13	IF_15
0x40006dd	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       168	rev-list.c	FUNCTION_1	IF_12	IF_13	IF_15
0x40006e4	        0x4883ea01	                              sub rdx, 1	       168	rev-list.c	FUNCTION_1	IF_12	IF_13	IF_15
0x40006e8	          0x4801d0	                            add rax, rdx	       168	rev-list.c	FUNCTION_1	IF_12	IF_13	IF_15
0x40006eb	           0xfb600	                   movzx eax, byte [rax]	       168	rev-list.c	FUNCTION_1	IF_12	IF_13	IF_15
0x40006ee	            0x3c0a	                             cmp al, 0xa	       168	rev-list.c	FUNCTION_1	IF_12	IF_13	IF_15
0x40006f0	            0x7516	                           jne 0x4000708	       168	rev-list.c	FUNCTION_1	IF_12	IF_13	IF_15
0x40006f2	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       169	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_25
0x40006f9	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	       169	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_25
0x4000700	          0x4889c7	                            mov rdi, rax	       169	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_25
0x4000703	      0xe800000000	                          call 0x4000708	       169	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_25
0x4000708	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       170	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_26
0x400070f	          0x8b4010	            mov eax, dword [rax + 0x10] 	       170	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_26
0x4000712	            0x89c7	                            mov edi, eax	       170	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_26
0x4000714	      0xe800000000	                          call 0x4000719	       170	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_26
0x4000719	            0xeb40	                           jmp 0x400075b	       170	rev-list.c	FUNCTION_1	IF_12	IF_13	CALL_26
0x400071b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       177	rev-list.c	FUNCTION_1	IF_12	ELSE_5	IF_16	CALL_27
0x4000722	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	       177	rev-list.c	FUNCTION_1	IF_12	ELSE_5	IF_16	CALL_27
0x4000729	          0x4889c7	                            mov rdi, rax	       177	rev-list.c	FUNCTION_1	IF_12	ELSE_5	IF_16	CALL_27
0x400072c	      0xe800000000	                          call 0x4000731	       177	rev-list.c	FUNCTION_1	IF_12	ELSE_5	IF_16	CALL_27
0x4000731	            0x85c0	                           test eax, eax	       177	rev-list.c	FUNCTION_1	IF_12	ELSE_5	IF_16	CALL_27
0x4000733	            0x740a	                            je 0x400073f	       177	rev-list.c	FUNCTION_1	IF_12	ELSE_5	IF_16	CALL_27
0x4000735	      0xbf0a000000	                            mov edi, 0xa	       178	rev-list.c	FUNCTION_1	IF_12	ELSE_5	CALL_28
0x400073a	      0xe800000000	                          call 0x400073f	       178	rev-list.c	FUNCTION_1	IF_12	ELSE_5	CALL_28
0x400073f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       179	rev-list.c	FUNCTION_1	IF_12	ELSE_5	IF_17
0x4000746	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	       179	rev-list.c	FUNCTION_1	IF_12	ELSE_5	IF_17
0x400074c	          0x83f805	                              cmp eax, 5	       179	rev-list.c	FUNCTION_1	IF_12	ELSE_5	IF_17
0x400074f	            0x750a	                           jne 0x400075b	       179	rev-list.c	FUNCTION_1	IF_12	ELSE_5	IF_17
0x4000751	      0xbf0a000000	                            mov edi, 0xa	       180	rev-list.c	FUNCTION_1	IF_12	ELSE_5	CALL_29
0x4000756	      0xe800000000	                          call 0x400075b	       180	rev-list.c	FUNCTION_1	IF_12	ELSE_5	CALL_29
0x400075b	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       182	rev-list.c	FUNCTION_1	IF_12	CALL_30
0x4000762	          0x4889c7	                            mov rdi, rax	       182	rev-list.c	FUNCTION_1	IF_12	CALL_30
0x4000765	      0xe800000000	                          call 0x400076a	       182	rev-list.c	FUNCTION_1	IF_12	CALL_30
0x400076a	            0xeb24	                           jmp 0x4000790	       182	rev-list.c	FUNCTION_1	IF_12	CALL_30
0x400076c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       184	rev-list.c	FUNCTION_1	ELSE_6	IF_18	CALL_31
0x4000773	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	       184	rev-list.c	FUNCTION_1	ELSE_6	IF_18	CALL_31
0x400077a	          0x4889c7	                            mov rdi, rax	       184	rev-list.c	FUNCTION_1	ELSE_6	IF_18	CALL_31
0x400077d	      0xe800000000	                          call 0x4000782	       184	rev-list.c	FUNCTION_1	ELSE_6	IF_18	CALL_31
0x4000782	            0x85c0	                           test eax, eax	       184	rev-list.c	FUNCTION_1	ELSE_6	IF_18	CALL_31
0x4000784	            0x740a	                            je 0x4000790	       184	rev-list.c	FUNCTION_1	ELSE_6	IF_18	CALL_31
0x4000786	      0xbf0a000000	                            mov edi, 0xa	       185	rev-list.c	FUNCTION_1	ELSE_6	CALL_32
0x400078b	      0xe800000000	                          call 0x4000790	       185	rev-list.c	FUNCTION_1	ELSE_6	CALL_32
0x4000790	    0x488b05000000	            mov rax, qword [0x04000797] 	       187	rev-list.c	FUNCTION_1	CALL_33
0x4000797	      0xbe00000000	                              mov esi, 0	       187	rev-list.c	FUNCTION_1	CALL_33
0x400079c	          0x4889c7	                            mov rdi, rax	       187	rev-list.c	FUNCTION_1	CALL_33
0x400079f	      0xe800000000	                          call 0x40007a4	       187	rev-list.c	FUNCTION_1	CALL_33
0x40007a4	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	       188	rev-list.c	FUNCTION_1	CALL_34
0x40007ab	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       188	rev-list.c	FUNCTION_1	CALL_34
0x40007b2	          0x4889d6	                            mov rsi, rdx	       188	rev-list.c	FUNCTION_1	CALL_34
0x40007b5	          0x4889c7	                            mov rdi, rax	       188	rev-list.c	FUNCTION_1	CALL_34
0x40007b8	      0xe81e000000	                  call sym.finish_commit	       188	rev-list.c	FUNCTION_1	CALL_34
0x40007bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       189	rev-list.c	FUNCTION_1
0x40007c1	    0x644833042528	                xor rax, qword fs:[0x28]	       189	rev-list.c	FUNCTION_1
0x40007ca	            0x7405	                            je 0x40007d1	       189	rev-list.c	FUNCTION_1
0x40007cc	      0xe800000000	                          call 0x40007d1	       189	rev-list.c	FUNCTION_1
0x40007d1	    0x4881c4080100	                          add rsp, 0x108	       189	rev-list.c	FUNCTION_1
0x40007d8	              0x5b	                                 pop rbx	       189	rev-list.c	FUNCTION_1
0x40007d9	              0x5d	                                 pop rbp	       189	rev-list.c	FUNCTION_1
0x40007da	              0xc3	                                     ret	       189	rev-list.c	FUNCTION_1
cmd_rev_list	IF,48:functions,0:WHILE,2:CALL,67:FOR,3:DO,0:ELSE,6:SWITCH,0	622
0x4000d47	              0x55	                                push rbp	       357	rev-list.c	FUNCTION_12
0x4000d48	          0x4889e5	                            mov rbp, rsp	       357	rev-list.c	FUNCTION_12
0x4000d4b	              0x53	                                push rbx	       357	rev-list.c	FUNCTION_12
0x4000d4c	    0x4881ec680900	                          sub rsp, 0x968	       357	rev-list.c	FUNCTION_12
0x4000d53	    0x89bdacf6ffff	            mov dword [rbp - 0x954], edi	       357	rev-list.c	FUNCTION_12
0x4000d59	    0x4889b5a0f6ff	            mov qword [rbp - 0x960], rsi	       357	rev-list.c	FUNCTION_12
0x4000d60	    0x48899598f6ff	            mov qword [rbp - 0x968], rdx	       357	rev-list.c	FUNCTION_12
0x4000d67	    0x64488b042528	                mov rax, qword fs:[0x28]	       357	rev-list.c	FUNCTION_12
0x4000d70	        0x488945e8	             mov qword [rbp - 0x18], rax	       357	rev-list.c	FUNCTION_12
0x4000d74	            0x31c0	                            xor eax, eax	       357	rev-list.c	FUNCTION_12
0x4000d76	    0xc785bcf6ffff	              mov dword [rbp - 0x944], 0	       361	rev-list.c	FUNCTION_12
0x4000d80	    0xc785c0f6ffff	              mov dword [rbp - 0x940], 0	       362	rev-list.c	FUNCTION_12
0x4000d8a	    0xc785c4f6ffff	              mov dword [rbp - 0x93c], 0	       363	rev-list.c	FUNCTION_12
0x4000d94	    0xc785c8f6ffff	              mov dword [rbp - 0x938], 0	       364	rev-list.c	FUNCTION_12
0x4000d9e	    0x48c785d0f6ff	              mov qword [rbp - 0x930], 0	       365	rev-list.c	FUNCTION_12
0x4000da9	    0x83bdacf6ffff	              cmp dword [rbp - 0x954], 2	       367	rev-list.c	FUNCTION_12	IF_1	CALL_1
0x4000db0	            0x7529	                           jne 0x4000ddb	       367	rev-list.c	FUNCTION_12	IF_1	CALL_1
0x4000db2	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       367	rev-list.c	FUNCTION_12	IF_1	CALL_1
0x4000db9	        0x4883c008	                              add rax, 8	       367	rev-list.c	FUNCTION_12	IF_1	CALL_1
0x4000dbd	          0x488b00	                    mov rax, qword [rax]	       367	rev-list.c	FUNCTION_12	IF_1	CALL_1
0x4000dc0	      0xbe00000000	                              mov esi, 0	       367	rev-list.c	FUNCTION_12	IF_1	CALL_1
0x4000dc5	          0x4889c7	                            mov rdi, rax	       367	rev-list.c	FUNCTION_12	IF_1	CALL_1
0x4000dc8	      0xe800000000	                          call 0x4000dcd	       367	rev-list.c	FUNCTION_12	IF_1	CALL_1
0x4000dcd	            0x85c0	                           test eax, eax	       367	rev-list.c	FUNCTION_12	IF_1	CALL_1
0x4000dcf	            0x750a	                           jne 0x4000ddb	       367	rev-list.c	FUNCTION_12	IF_1	CALL_1
0x4000dd1	      0xbf00000000	                              mov edi, 0	       368	rev-list.c	FUNCTION_12	CALL_2
0x4000dd6	      0xe800000000	                          call 0x4000ddb	       368	rev-list.c	FUNCTION_12	CALL_2
0x4000ddb	      0xbe00000000	                              mov esi, 0	       370	rev-list.c	FUNCTION_12	CALL_3
0x4000de0	      0xbf00000000	                              mov edi, 0	       370	rev-list.c	FUNCTION_12	CALL_3
0x4000de5	      0xe800000000	                          call 0x4000dea	       370	rev-list.c	FUNCTION_12	CALL_3
0x4000dea	    0x488b9598f6ff	            mov rdx, qword [rbp - 0x968]	       371	rev-list.c	FUNCTION_12	CALL_4
0x4000df1	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       371	rev-list.c	FUNCTION_12	CALL_4
0x4000df8	          0x4889d6	                            mov rsi, rdx	       371	rev-list.c	FUNCTION_12	CALL_4
0x4000dfb	          0x4889c7	                            mov rdi, rax	       371	rev-list.c	FUNCTION_12	CALL_4
0x4000dfe	      0xe800000000	                          call 0x4000e03	       371	rev-list.c	FUNCTION_12	CALL_4
0x4000e03	    0x8b0500000000	            mov eax, dword [0x04000e09] 	       372	rev-list.c	FUNCTION_12
0x4000e09	    0x8985d0f7ffff	            mov dword [rbp - 0x830], eax	       372	rev-list.c	FUNCTION_12
0x4000e0f	    0xc785d4f7ffff	              mov dword [rbp - 0x82c], 9	       373	rev-list.c	FUNCTION_12
0x4000e19	    0xc785b8f6ffff	              mov dword [rbp - 0x948], 1	       385	rev-list.c	FUNCTION_12	FOR_1
0x4000e23	            0xeb5f	                           jmp 0x4000e84	       385	rev-list.c	FUNCTION_12	FOR_1
0x4000e25	    0x8b85b8f6ffff	            mov eax, dword [rbp - 0x948]	       386	rev-list.c	FUNCTION_12	FOR_1
0x4000e2b	            0x4898	                                    cdqe	       386	rev-list.c	FUNCTION_12	FOR_1
0x4000e2d	    0x488d14c50000	                        lea rdx, [rax*8]	       386	rev-list.c	FUNCTION_12	FOR_1
0x4000e35	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       386	rev-list.c	FUNCTION_12	FOR_1
0x4000e3c	          0x4801d0	                            add rax, rdx	       386	rev-list.c	FUNCTION_12	FOR_1
0x4000e3f	          0x488b00	                    mov rax, qword [rax]	       386	rev-list.c	FUNCTION_12	FOR_1
0x4000e42	    0x488985d8f6ff	            mov qword [rbp - 0x928], rax	       386	rev-list.c	FUNCTION_12	FOR_1
0x4000e49	    0x488b85d8f6ff	            mov rax, qword [rbp - 0x928]	       387	rev-list.c	FUNCTION_12	FOR_1	IF_2	CALL_5
0x4000e50	      0xbe00000000	                              mov esi, 0	       387	rev-list.c	FUNCTION_12	FOR_1	IF_2	CALL_5
0x4000e55	          0x4889c7	                            mov rdi, rax	       387	rev-list.c	FUNCTION_12	FOR_1	IF_2	CALL_5
0x4000e58	      0xe800000000	                          call 0x4000e5d	       387	rev-list.c	FUNCTION_12	FOR_1	IF_2	CALL_5
0x4000e5d	            0x85c0	                           test eax, eax	       387	rev-list.c	FUNCTION_12	FOR_1	IF_2	CALL_5
0x4000e5f	            0x751c	                           jne 0x4000e7d	       387	rev-list.c	FUNCTION_12	FOR_1	IF_2	CALL_5
0x4000e61	    0xc70500000000	               mov dword [0x04000e6b], 0	       388	rev-list.c	FUNCTION_12	FOR_1	IF_2
0x4000e6b	     0xfb685a8f7ff	           movzx eax, byte [rbp - 0x858]	       389	rev-list.c	FUNCTION_12	FOR_1	IF_2
0x4000e72	          0x83c880	                      or eax, 0xffffff80	       389	rev-list.c	FUNCTION_12	FOR_1	IF_2
0x4000e75	    0x8885a8f7ffff	              mov byte [rbp - 0x858], al	       389	rev-list.c	FUNCTION_12	FOR_1	IF_2
0x4000e7b	            0xeb15	                           jmp 0x4000e92	       390	rev-list.c	FUNCTION_12	FOR_1	IF_2
0x4000e7d	    0x8385b8f6ffff	              add dword [rbp - 0x948], 1	       385	rev-list.c	FUNCTION_12	FOR_1
0x4000e84	    0x8b85b8f6ffff	            mov eax, dword [rbp - 0x948]	       385	rev-list.c	FUNCTION_12	FOR_1
0x4000e8a	    0x3b85acf6ffff	            cmp eax, dword [rbp - 0x954]	       385	rev-list.c	FUNCTION_12	FOR_1
0x4000e90	            0x7c93	                            jl 0x4000e25	       385	rev-list.c	FUNCTION_12	FOR_1
0x4000e92	    0xc785b8f6ffff	              mov dword [rbp - 0x948], 1	       393	rev-list.c	FUNCTION_12	FOR_2
0x4000e9c	      0xe982000000	                           jmp 0x4000f23	       393	rev-list.c	FUNCTION_12	FOR_2
0x4000ea1	    0x8b85b8f6ffff	            mov eax, dword [rbp - 0x948]	       394	rev-list.c	FUNCTION_12	FOR_2
0x4000ea7	            0x4898	                                    cdqe	       394	rev-list.c	FUNCTION_12	FOR_2
0x4000ea9	    0x488d14c50000	                        lea rdx, [rax*8]	       394	rev-list.c	FUNCTION_12	FOR_2
0x4000eb1	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       394	rev-list.c	FUNCTION_12	FOR_2
0x4000eb8	          0x4801d0	                            add rax, rdx	       394	rev-list.c	FUNCTION_12	FOR_2
0x4000ebb	          0x488b00	                    mov rax, qword [rax]	       394	rev-list.c	FUNCTION_12	FOR_2
0x4000ebe	    0x48898510f7ff	            mov qword [rbp - 0x8f0], rax	       394	rev-list.c	FUNCTION_12	FOR_2
0x4000ec5	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	       395	rev-list.c	FUNCTION_12	FOR_2	IF_3	CALL_6
0x4000ecc	    0x488d9510f7ff	                  lea rdx, [rbp - 0x8f0]	       395	rev-list.c	FUNCTION_12	FOR_2	IF_3	CALL_6
0x4000ed3	      0xbe00000000	                              mov esi, 0	       395	rev-list.c	FUNCTION_12	FOR_2	IF_3	CALL_6
0x4000ed8	          0x4889c7	                            mov rdi, rax	       395	rev-list.c	FUNCTION_12	FOR_2	IF_3	CALL_6
0x4000edb	      0xe860f1ffff	                    call sym.skip_prefix	       395	rev-list.c	FUNCTION_12	FOR_2	IF_3	CALL_6
0x4000ee0	            0x85c0	                           test eax, eax	       395	rev-list.c	FUNCTION_12	FOR_2	IF_3	CALL_6
0x4000ee2	            0x7438	                            je 0x4000f1c	       395	rev-list.c	FUNCTION_12	FOR_2	IF_3	CALL_6
0x4000ee4	     0xfb685a8f7ff	           movzx eax, byte [rbp - 0x858]	       396	rev-list.c	FUNCTION_12	FOR_2	IF_3	IF_4
0x4000eeb	          0x83e080	                     and eax, 0xffffff80	       396	rev-list.c	FUNCTION_12	FOR_2	IF_3	IF_4
0x4000eee	            0x84c0	                             test al, al	       396	rev-list.c	FUNCTION_12	FOR_2	IF_3	IF_4
0x4000ef0	            0x7417	                            je 0x4000f09	       396	rev-list.c	FUNCTION_12	FOR_2	IF_3	IF_4
0x4000ef2	      0xbf00000000	                              mov edi, 0	       397	rev-list.c	FUNCTION_12	FOR_2	IF_3	CALL_8
0x4000ef7	      0xe89af1ffff	                               call sym.	       397	rev-list.c	FUNCTION_12	FOR_2	IF_3	CALL_8
0x4000efc	          0x4889c7	                            mov rdi, rax	       397	rev-list.c	FUNCTION_12	FOR_2	IF_3	CALL_8
0x4000eff	      0xb800000000	                              mov eax, 0	       397	rev-list.c	FUNCTION_12	FOR_2	IF_3	CALL_8
0x4000f04	      0xe800000000	                          call 0x4000f09	       397	rev-list.c	FUNCTION_12	FOR_2	IF_3	CALL_8
0x4000f09	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	       398	rev-list.c	FUNCTION_12	FOR_2	IF_3	IF_5	CALL_9
0x4000f10	          0x4889c7	                            mov rdi, rax	       398	rev-list.c	FUNCTION_12	FOR_2	IF_3	IF_5	CALL_9
0x4000f13	      0xe863fdffff	     call sym.parse_missing_action_value	       398	rev-list.c	FUNCTION_12	FOR_2	IF_3	IF_5	CALL_9
0x4000f18	            0x85c0	                           test eax, eax	       398	rev-list.c	FUNCTION_12	FOR_2	IF_3	IF_5	CALL_9
0x4000f1a	            0x751b	                           jne 0x4000f37	       398	rev-list.c	FUNCTION_12	FOR_2	IF_3	IF_5	CALL_9
0x4000f1c	    0x8385b8f6ffff	              add dword [rbp - 0x948], 1	       393	rev-list.c	FUNCTION_12	FOR_2
0x4000f23	    0x8b85b8f6ffff	            mov eax, dword [rbp - 0x948]	       393	rev-list.c	FUNCTION_12	FOR_2
0x4000f29	    0x3b85acf6ffff	            cmp eax, dword [rbp - 0x954]	       393	rev-list.c	FUNCTION_12	FOR_2
0x4000f2f	     0xf8c6cffffff	                            jl 0x4000ea1	       393	rev-list.c	FUNCTION_12	FOR_2
0x4000f35	            0xeb01	                           jmp 0x4000f38	       393	rev-list.c	FUNCTION_12	FOR_2
0x4000f37	              0x90	                                     nop	       399	rev-list.c	FUNCTION_12	FOR_2	IF_3	IF_5
0x4000f38	    0x488d9530f7ff	                  lea rdx, [rbp - 0x8d0]	       403	rev-list.c	FUNCTION_12	CALL_10
0x4000f3f	    0x488bb5a0f6ff	            mov rsi, qword [rbp - 0x960]	       403	rev-list.c	FUNCTION_12	CALL_10
0x4000f46	    0x8b85acf6ffff	            mov eax, dword [rbp - 0x954]	       403	rev-list.c	FUNCTION_12	CALL_10
0x4000f4c	      0xb900000000	                              mov ecx, 0	       403	rev-list.c	FUNCTION_12	CALL_10
0x4000f51	            0x89c7	                            mov edi, eax	       403	rev-list.c	FUNCTION_12	CALL_10
0x4000f53	      0xe800000000	                          call 0x4000f58	       403	rev-list.c	FUNCTION_12	CALL_10
0x4000f58	    0x8985acf6ffff	            mov dword [rbp - 0x954], eax	       403	rev-list.c	FUNCTION_12	CALL_10
0x4000f5e	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	       405	rev-list.c	FUNCTION_12	CALL_11
0x4000f65	      0xba20000000	                           mov edx, 0x20	       405	rev-list.c	FUNCTION_12	CALL_11
0x4000f6a	      0xbe00000000	                              mov esi, 0	       405	rev-list.c	FUNCTION_12	CALL_11
0x4000f6f	          0x4889c7	                            mov rdi, rax	       405	rev-list.c	FUNCTION_12	CALL_11
0x4000f72	      0xe800000000	                          call 0x4000f77	       405	rev-list.c	FUNCTION_12	CALL_11
0x4000f77	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       406	rev-list.c	FUNCTION_12
0x4000f7e	    0x48898510f7ff	            mov qword [rbp - 0x8f0], rax	       406	rev-list.c	FUNCTION_12
0x4000f85	     0xfb685a8f7ff	           movzx eax, byte [rbp - 0x858]	       407	rev-list.c	FUNCTION_12	IF_6
0x4000f8c	          0x83e004	                              and eax, 4	       407	rev-list.c	FUNCTION_12	IF_6
0x4000f8f	            0x84c0	                             test al, al	       407	rev-list.c	FUNCTION_12	IF_6
0x4000f91	            0x740a	                            je 0x4000f9d	       407	rev-list.c	FUNCTION_12	IF_6
0x4000f93	    0xc785bcf6ffff	              mov dword [rbp - 0x944], 1	       408	rev-list.c	FUNCTION_12	IF_6
0x4000f9d	     0xfb68561fcff	           movzx eax, byte [rbp - 0x39f]	       410	rev-list.c	FUNCTION_12	IF_7
0x4000fa4	          0x83e004	                              and eax, 4	       410	rev-list.c	FUNCTION_12	IF_7
0x4000fa7	            0x84c0	                             test al, al	       410	rev-list.c	FUNCTION_12	IF_7
0x4000fa9	            0x740f	                            je 0x4000fba	       410	rev-list.c	FUNCTION_12	IF_7
0x4000fab	    0x8b8518f7ffff	            mov eax, dword [rbp - 0x8e8]	       411	rev-list.c	FUNCTION_12	IF_7
0x4000fb1	          0x83c802	                               or eax, 2	       411	rev-list.c	FUNCTION_12	IF_7
0x4000fb4	    0x898518f7ffff	            mov dword [rbp - 0x8e8], eax	       411	rev-list.c	FUNCTION_12	IF_7
0x4000fba	    0xc785b8f6ffff	              mov dword [rbp - 0x948], 1	       412	rev-list.c	FUNCTION_12	FOR_3
0x4000fc4	      0xe9e7020000	                           jmp 0x40012b0	       412	rev-list.c	FUNCTION_12	FOR_3
0x4000fc9	    0x8b85b8f6ffff	            mov eax, dword [rbp - 0x948]	       413	rev-list.c	FUNCTION_12	FOR_3
0x4000fcf	            0x4898	                                    cdqe	       413	rev-list.c	FUNCTION_12	FOR_3
0x4000fd1	    0x488d14c50000	                        lea rdx, [rax*8]	       413	rev-list.c	FUNCTION_12	FOR_3
0x4000fd9	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       413	rev-list.c	FUNCTION_12	FOR_3
0x4000fe0	          0x4801d0	                            add rax, rdx	       413	rev-list.c	FUNCTION_12	FOR_3
0x4000fe3	          0x488b00	                    mov rax, qword [rax]	       413	rev-list.c	FUNCTION_12	FOR_3
0x4000fe6	    0x488985f0f6ff	            mov qword [rbp - 0x910], rax	       413	rev-list.c	FUNCTION_12	FOR_3
0x4000fed	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       415	rev-list.c	FUNCTION_12	FOR_3	IF_8	CALL_12
0x4000ff4	      0xbe00000000	                              mov esi, 0	       415	rev-list.c	FUNCTION_12	FOR_3	IF_8	CALL_12
0x4000ff9	          0x4889c7	                            mov rdi, rax	       415	rev-list.c	FUNCTION_12	FOR_3	IF_8	CALL_12
0x4000ffc	      0xe800000000	                          call 0x4001001	       415	rev-list.c	FUNCTION_12	FOR_3	IF_8	CALL_12
0x4001001	            0x85c0	                           test eax, eax	       415	rev-list.c	FUNCTION_12	FOR_3	IF_8	CALL_12
0x4001003	            0x7515	                           jne 0x400101a	       415	rev-list.c	FUNCTION_12	FOR_3	IF_8	CALL_12
0x4001005	     0xfb685a9f7ff	           movzx eax, byte [rbp - 0x857]	       416	rev-list.c	FUNCTION_12	FOR_3	IF_8
0x400100c	          0x83c810	                            or eax, 0x10	       416	rev-list.c	FUNCTION_12	FOR_3	IF_8
0x400100f	    0x8885a9f7ffff	              mov byte [rbp - 0x857], al	       416	rev-list.c	FUNCTION_12	FOR_3	IF_8
0x4001015	      0xe98f020000	                           jmp 0x40012a9	       417	rev-list.c	FUNCTION_12	FOR_3	IF_8
0x400101a	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       419	rev-list.c	FUNCTION_12	FOR_3	IF_9	CALL_13
0x4001021	      0xbe00000000	                              mov esi, 0	       419	rev-list.c	FUNCTION_12	FOR_3	IF_9	CALL_13
0x4001026	          0x4889c7	                            mov rdi, rax	       419	rev-list.c	FUNCTION_12	FOR_3	IF_9	CALL_13
0x4001029	      0xe800000000	                          call 0x400102e	       419	rev-list.c	FUNCTION_12	FOR_3	IF_9	CALL_13
0x400102e	            0x85c0	                           test eax, eax	       419	rev-list.c	FUNCTION_12	FOR_3	IF_9	CALL_13
0x4001030	            0x750f	                           jne 0x4001041	       419	rev-list.c	FUNCTION_12	FOR_3	IF_9	CALL_13
0x4001032	    0xc7851cf7ffff	              mov dword [rbp - 0x8e4], 1	       420	rev-list.c	FUNCTION_12	FOR_3	IF_9
0x400103c	      0xe968020000	                           jmp 0x40012a9	       421	rev-list.c	FUNCTION_12	FOR_3	IF_9
0x4001041	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       423	rev-list.c	FUNCTION_12	FOR_3	IF_10	CALL_14
0x4001048	      0xbe00000000	                              mov esi, 0	       423	rev-list.c	FUNCTION_12	FOR_3	IF_10	CALL_14
0x400104d	          0x4889c7	                            mov rdi, rax	       423	rev-list.c	FUNCTION_12	FOR_3	IF_10	CALL_14
0x4001050	      0xe800000000	                          call 0x4001055	       423	rev-list.c	FUNCTION_12	FOR_3	IF_10	CALL_14
0x4001055	            0x85c0	                           test eax, eax	       423	rev-list.c	FUNCTION_12	FOR_3	IF_10	CALL_14
0x4001057	            0x750f	                           jne 0x4001068	       423	rev-list.c	FUNCTION_12	FOR_3	IF_10	CALL_14
0x4001059	    0xc785bcf6ffff	              mov dword [rbp - 0x944], 1	       424	rev-list.c	FUNCTION_12	FOR_3	IF_10
0x4001063	      0xe941020000	                           jmp 0x40012a9	       425	rev-list.c	FUNCTION_12	FOR_3	IF_10
0x4001068	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       427	rev-list.c	FUNCTION_12	FOR_3	IF_11	CALL_15
0x400106f	      0xbe00000000	                              mov esi, 0	       427	rev-list.c	FUNCTION_12	FOR_3	IF_11	CALL_15
0x4001074	          0x4889c7	                            mov rdi, rax	       427	rev-list.c	FUNCTION_12	FOR_3	IF_11	CALL_15
0x4001077	      0xe800000000	                          call 0x400107c	       427	rev-list.c	FUNCTION_12	FOR_3	IF_11	CALL_15
0x400107c	            0x85c0	                           test eax, eax	       427	rev-list.c	FUNCTION_12	FOR_3	IF_11	CALL_15
0x400107e	            0x7538	                           jne 0x40010b8	       427	rev-list.c	FUNCTION_12	FOR_3	IF_11	CALL_15
0x4001080	    0xc785bcf6ffff	              mov dword [rbp - 0x944], 1	       428	rev-list.c	FUNCTION_12	FOR_3	IF_11
0x400108a	    0xc785c4f6ffff	              mov dword [rbp - 0x93c], 1	       429	rev-list.c	FUNCTION_12	FOR_3	IF_11
0x4001094	    0x8b8518f7ffff	            mov eax, dword [rbp - 0x8e8]	       430	rev-list.c	FUNCTION_12	FOR_3	IF_11
0x400109a	          0x83c801	                               or eax, 1	       430	rev-list.c	FUNCTION_12	FOR_3	IF_11
0x400109d	    0x898518f7ffff	            mov dword [rbp - 0x8e8], eax	       430	rev-list.c	FUNCTION_12	FOR_3	IF_11
0x40010a3	     0xfb685a7f7ff	           movzx eax, byte [rbp - 0x859]	       431	rev-list.c	FUNCTION_12	FOR_3	IF_11
0x40010aa	          0x83c820	                            or eax, 0x20	       431	rev-list.c	FUNCTION_12	FOR_3	IF_11
0x40010ad	    0x8885a7f7ffff	              mov byte [rbp - 0x859], al	       431	rev-list.c	FUNCTION_12	FOR_3	IF_11
0x40010b3	      0xe9f1010000	                           jmp 0x40012a9	       432	rev-list.c	FUNCTION_12	FOR_3	IF_11
0x40010b8	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       434	rev-list.c	FUNCTION_12	FOR_3	IF_12	CALL_16
0x40010bf	      0xbe00000000	                              mov esi, 0	       434	rev-list.c	FUNCTION_12	FOR_3	IF_12	CALL_16
0x40010c4	          0x4889c7	                            mov rdi, rax	       434	rev-list.c	FUNCTION_12	FOR_3	IF_12	CALL_16
0x40010c7	      0xe800000000	                          call 0x40010cc	       434	rev-list.c	FUNCTION_12	FOR_3	IF_12	CALL_16
0x40010cc	            0x85c0	                           test eax, eax	       434	rev-list.c	FUNCTION_12	FOR_3	IF_12	CALL_16
0x40010ce	            0x7519	                           jne 0x40010e9	       434	rev-list.c	FUNCTION_12	FOR_3	IF_12	CALL_16
0x40010d0	    0xc785bcf6ffff	              mov dword [rbp - 0x944], 1	       435	rev-list.c	FUNCTION_12	FOR_3	IF_12
0x40010da	    0xc785c0f6ffff	              mov dword [rbp - 0x940], 1	       436	rev-list.c	FUNCTION_12	FOR_3	IF_12
0x40010e4	      0xe9c0010000	                           jmp 0x40012a9	       437	rev-list.c	FUNCTION_12	FOR_3	IF_12
0x40010e9	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       439	rev-list.c	FUNCTION_12	FOR_3	IF_13	CALL_17
0x40010f0	      0xbe00000000	                              mov esi, 0	       439	rev-list.c	FUNCTION_12	FOR_3	IF_13	CALL_17
0x40010f5	          0x4889c7	                            mov rdi, rax	       439	rev-list.c	FUNCTION_12	FOR_3	IF_13	CALL_17
0x40010f8	      0xe800000000	                          call 0x40010fd	       439	rev-list.c	FUNCTION_12	FOR_3	IF_13	CALL_17
0x40010fd	            0x85c0	                           test eax, eax	       439	rev-list.c	FUNCTION_12	FOR_3	IF_13	CALL_17
0x40010ff	            0x750f	                           jne 0x4001110	       439	rev-list.c	FUNCTION_12	FOR_3	IF_13	CALL_17
0x4001101	    0xc785c8f6ffff	              mov dword [rbp - 0x938], 1	       440	rev-list.c	FUNCTION_12	FOR_3	IF_13
0x400110b	      0xe999010000	                           jmp 0x40012a9	       441	rev-list.c	FUNCTION_12	FOR_3	IF_13
0x4001110	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       443	rev-list.c	FUNCTION_12	FOR_3	IF_14	CALL_18
0x4001117	      0xbe00000000	                              mov esi, 0	       443	rev-list.c	FUNCTION_12	FOR_3	IF_14	CALL_18
0x400111c	          0x4889c7	                            mov rdi, rax	       443	rev-list.c	FUNCTION_12	FOR_3	IF_14	CALL_18
0x400111f	      0xe800000000	                          call 0x4001124	       443	rev-list.c	FUNCTION_12	FOR_3	IF_14	CALL_18
0x4001124	            0x85c0	                           test eax, eax	       443	rev-list.c	FUNCTION_12	FOR_3	IF_14	CALL_18
0x4001126	            0x7519	                           jne 0x4001141	       443	rev-list.c	FUNCTION_12	FOR_3	IF_14	CALL_18
0x4001128	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       444	rev-list.c	FUNCTION_12	FOR_3	IF_14	CALL_19
0x400112f	          0x4889c7	                            mov rdi, rax	       444	rev-list.c	FUNCTION_12	FOR_3	IF_14	CALL_19
0x4001132	      0xe800000000	                          call 0x4001137	       444	rev-list.c	FUNCTION_12	FOR_3	IF_14	CALL_19
0x4001137	      0xb800000000	                              mov eax, 0	       445	rev-list.c	FUNCTION_12	FOR_3	IF_14
0x400113c	      0xe9f2060000	                           jmp 0x4001833	       445	rev-list.c	FUNCTION_12	FOR_3	IF_14
0x4001141	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       447	rev-list.c	FUNCTION_12	FOR_3	IF_15	CALL_20
0x4001148	    0x488d95f0f6ff	                  lea rdx, [rbp - 0x910]	       447	rev-list.c	FUNCTION_12	FOR_3	IF_15	CALL_20
0x400114f	      0xbe00000000	                              mov esi, 0	       447	rev-list.c	FUNCTION_12	FOR_3	IF_15	CALL_20
0x4001154	          0x4889c7	                            mov rdi, rax	       447	rev-list.c	FUNCTION_12	FOR_3	IF_15	CALL_20
0x4001157	      0xe8e4eeffff	                    call sym.skip_prefix	       447	rev-list.c	FUNCTION_12	FOR_3	IF_15	CALL_20
0x400115c	            0x85c0	                           test eax, eax	       447	rev-list.c	FUNCTION_12	FOR_3	IF_15	CALL_20
0x400115e	            0x7413	                            je 0x4001173	       447	rev-list.c	FUNCTION_12	FOR_3	IF_15	CALL_20
0x4001160	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       448	rev-list.c	FUNCTION_12	FOR_3	IF_15
0x4001167	    0x488985d0f6ff	            mov qword [rbp - 0x930], rax	       448	rev-list.c	FUNCTION_12	FOR_3	IF_15
0x400116e	      0xe936010000	                           jmp 0x40012a9	       449	rev-list.c	FUNCTION_12	FOR_3	IF_15
0x4001173	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       452	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_21
0x400117a	    0x488d95f0f6ff	                  lea rdx, [rbp - 0x910]	       452	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_21
0x4001181	      0xbe00000000	                              mov esi, 0	       452	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_21
0x4001186	          0x4889c7	                            mov rdi, rax	       452	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_21
0x4001189	      0xe8b2eeffff	                    call sym.skip_prefix	       452	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_21
0x400118e	            0x85c0	                           test eax, eax	       452	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_21
0x4001190	     0xf8483000000	                            je 0x4001219	       452	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_21
0x4001196	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       453	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_22
0x400119d	          0x4889c6	                            mov rsi, rax	       453	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_22
0x40011a0	      0xbf00000000	                              mov edi, 0	       453	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_22
0x40011a5	      0xe800000000	                          call 0x40011aa	       453	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_22
0x40011aa	    0x8b0500000000	            mov eax, dword [0x040011b0] 	       454	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_17
0x40011b0	            0x85c0	                           test eax, eax	       454	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_17
0x40011b2	            0x7425	                            je 0x40011d9	       454	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_17
0x40011b4	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       454	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_17
0x40011bb	          0x83e040	                           and eax, 0x40	       454	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_17
0x40011be	            0x84c0	                             test al, al	       454	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_17
0x40011c0	            0x7517	                           jne 0x40011d9	       454	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_17
0x40011c2	      0xbf00000000	                              mov edi, 0	       455	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_24
0x40011c7	      0xe8caeeffff	                               call sym.	       455	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_24
0x40011cc	          0x4889c7	                            mov rdi, rax	       455	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_24
0x40011cf	      0xb800000000	                              mov eax, 0	       455	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_24
0x40011d4	      0xe800000000	                          call 0x40011d9	       455	rev-list.c	FUNCTION_12	FOR_3	IF_16	CALL_24
0x40011d9	    0x8b0500000000	            mov eax, dword [0x040011df] 	       456	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_18
0x40011df	          0x83f803	                              cmp eax, 3	       456	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_18
0x40011e2	     0xf85ba000000	                           jne 0x40012a2	       456	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_18
0x40011e8	    0x488b05000000	            mov rax, qword [0x040011ef] 	       457	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_18
0x40011ef	          0x4885c0	                           test rax, rax	       456	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_18
0x40011f2	     0xf85aa000000	                           jne 0x40012a2	       456	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_18
0x40011f8	    0x488b1d000000	            mov rbx, qword [0x040011ff] 	       458	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_18	CALL_26
0x40011ff	      0xbf00000000	                              mov edi, 0	       458	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_18	CALL_26
0x4001204	      0xe88deeffff	                               call sym.	       458	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_18	CALL_26
0x4001209	          0x4889de	                            mov rsi, rbx	       458	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_18	CALL_26
0x400120c	          0x4889c7	                            mov rdi, rax	       458	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_18	CALL_26
0x400120f	      0xb800000000	                              mov eax, 0	       458	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_18	CALL_26
0x4001214	      0xe800000000	                          call 0x4001219	       458	rev-list.c	FUNCTION_12	FOR_3	IF_16	IF_18	CALL_26
0x4001219	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       462	rev-list.c	FUNCTION_12	FOR_3	IF_19	CALL_27
0x4001220	      0xbe00000000	                              mov esi, 0	       462	rev-list.c	FUNCTION_12	FOR_3	IF_19	CALL_27
0x4001225	          0x4889c7	                            mov rdi, rax	       462	rev-list.c	FUNCTION_12	FOR_3	IF_19	CALL_27
0x4001228	      0xe800000000	                          call 0x400122d	       462	rev-list.c	FUNCTION_12	FOR_3	IF_19	CALL_27
0x400122d	            0x85c0	                           test eax, eax	       462	rev-list.c	FUNCTION_12	FOR_3	IF_19	CALL_27
0x400122f	            0x750c	                           jne 0x400123d	       462	rev-list.c	FUNCTION_12	FOR_3	IF_19	CALL_27
0x4001231	      0xbf00000000	                              mov edi, 0	       463	rev-list.c	FUNCTION_12	FOR_3	IF_19	CALL_28
0x4001236	      0xe847efffff	call sym.list_objects_filter_set_no_filter	       463	rev-list.c	FUNCTION_12	FOR_3	IF_19	CALL_28
0x400123b	            0xeb6c	                           jmp 0x40012a9	       464	rev-list.c	FUNCTION_12	FOR_3	IF_19
0x400123d	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       466	rev-list.c	FUNCTION_12	FOR_3	IF_20	CALL_29
0x4001244	      0xbe00000000	                              mov esi, 0	       466	rev-list.c	FUNCTION_12	FOR_3	IF_20	CALL_29
0x4001249	          0x4889c7	                            mov rdi, rax	       466	rev-list.c	FUNCTION_12	FOR_3	IF_20	CALL_29
0x400124c	      0xe800000000	                          call 0x4001251	       466	rev-list.c	FUNCTION_12	FOR_3	IF_20	CALL_29
0x4001251	            0x85c0	                           test eax, eax	       466	rev-list.c	FUNCTION_12	FOR_3	IF_20	CALL_29
0x4001253	            0x750c	                           jne 0x4001261	       466	rev-list.c	FUNCTION_12	FOR_3	IF_20	CALL_29
0x4001255	    0xc70500000000	               mov dword [0x0400125f], 1	       467	rev-list.c	FUNCTION_12	FOR_3	IF_20
0x400125f	            0xeb48	                           jmp 0x40012a9	       468	rev-list.c	FUNCTION_12	FOR_3	IF_20
0x4001261	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       471	rev-list.c	FUNCTION_12	FOR_3	IF_21	CALL_30
0x4001268	      0xbe00000000	                              mov esi, 0	       471	rev-list.c	FUNCTION_12	FOR_3	IF_21	CALL_30
0x400126d	          0x4889c7	                            mov rdi, rax	       471	rev-list.c	FUNCTION_12	FOR_3	IF_21	CALL_30
0x4001270	      0xe800000000	                          call 0x4001275	       471	rev-list.c	FUNCTION_12	FOR_3	IF_21	CALL_30
0x4001275	            0x85c0	                           test eax, eax	       471	rev-list.c	FUNCTION_12	FOR_3	IF_21	CALL_30
0x4001277	            0x742c	                            je 0x40012a5	       471	rev-list.c	FUNCTION_12	FOR_3	IF_21	CALL_30
0x4001279	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	       473	rev-list.c	FUNCTION_12	FOR_3	IF_22	CALL_31
0x4001280	    0x488d95f0f6ff	                  lea rdx, [rbp - 0x910]	       473	rev-list.c	FUNCTION_12	FOR_3	IF_22	CALL_31
0x4001287	      0xbe00000000	                              mov esi, 0	       473	rev-list.c	FUNCTION_12	FOR_3	IF_22	CALL_31
0x400128c	          0x4889c7	                            mov rdi, rax	       473	rev-list.c	FUNCTION_12	FOR_3	IF_22	CALL_31
0x400128f	      0xe8acedffff	                    call sym.skip_prefix	       473	rev-list.c	FUNCTION_12	FOR_3	IF_22	CALL_31
0x4001294	            0x85c0	                           test eax, eax	       473	rev-list.c	FUNCTION_12	FOR_3	IF_22	CALL_31
0x4001296	            0x7510	                           jne 0x40012a8	       473	rev-list.c	FUNCTION_12	FOR_3	IF_22	CALL_31
0x4001298	      0xbf00000000	                              mov edi, 0	       476	rev-list.c	FUNCTION_12	FOR_3	CALL_32
0x400129d	      0xe800000000	                          call 0x40012a2	       476	rev-list.c	FUNCTION_12	FOR_3	CALL_32
0x40012a2	              0x90	                                     nop	       460	rev-list.c	FUNCTION_12	FOR_3	IF_16
0x40012a3	            0xeb04	                           jmp 0x40012a9	       460	rev-list.c	FUNCTION_12	FOR_3	IF_16
0x40012a5	              0x90	                                     nop	       472	rev-list.c	FUNCTION_12	FOR_3	IF_21
0x40012a6	            0xeb01	                           jmp 0x40012a9	       472	rev-list.c	FUNCTION_12	FOR_3	IF_21
0x40012a8	              0x90	                                     nop	       474	rev-list.c	FUNCTION_12	FOR_3	IF_22
0x40012a9	    0x8385b8f6ffff	              add dword [rbp - 0x948], 1	       412	rev-list.c	FUNCTION_12	FOR_3
0x40012b0	    0x8b85b8f6ffff	            mov eax, dword [rbp - 0x948]	       412	rev-list.c	FUNCTION_12	FOR_3
0x40012b6	    0x3b85acf6ffff	            cmp eax, dword [rbp - 0x954]	       412	rev-list.c	FUNCTION_12	FOR_3
0x40012bc	     0xf8c07fdffff	                            jl 0x4000fc9	       412	rev-list.c	FUNCTION_12	FOR_3
0x40012c2	    0x8b85d4f7ffff	            mov eax, dword [rbp - 0x82c]	       479	rev-list.c	FUNCTION_12	IF_23
0x40012c8	          0x83f809	                              cmp eax, 9	       479	rev-list.c	FUNCTION_12	IF_23
0x40012cb	            0x742f	                            je 0x40012fc	       479	rev-list.c	FUNCTION_12	IF_23
0x40012cd	    0xc78520f7ffff	            mov dword [rbp - 0x8e0], 0xa	       481	rev-list.c	FUNCTION_12	IF_23
0x40012d7	    0x8b85d4f7ffff	            mov eax, dword [rbp - 0x82c]	       482	rev-list.c	FUNCTION_12	IF_23	IF_24
0x40012dd	          0x83f805	                              cmp eax, 5	       482	rev-list.c	FUNCTION_12	IF_23	IF_24
0x40012e0	            0x750d	                           jne 0x40012ef	       482	rev-list.c	FUNCTION_12	IF_23	IF_24
0x40012e2	    0x48c78528f7ff	              mov qword [rbp - 0x8d8], 0	       483	rev-list.c	FUNCTION_12	IF_23	IF_24
0x40012ed	            0xeb25	                           jmp 0x4001314	       483	rev-list.c	FUNCTION_12	IF_23	IF_24
0x40012ef	    0x48c78528f7ff	              mov qword [rbp - 0x8d8], 0	       485	rev-list.c	FUNCTION_12	IF_23	ELSE_1
0x40012fa	            0xeb18	                           jmp 0x4001314	       485	rev-list.c	FUNCTION_12	IF_23	ELSE_1
0x40012fc	     0xfb685a9f7ff	           movzx eax, byte [rbp - 0x857]	       487	rev-list.c	FUNCTION_12	ELSE_2	IF_25
0x4001303	          0x83e010	                           and eax, 0x10	       487	rev-list.c	FUNCTION_12	ELSE_2	IF_25
0x4001306	            0x84c0	                             test al, al	       487	rev-list.c	FUNCTION_12	ELSE_2	IF_25
0x4001308	            0x740a	                            je 0x4001314	       487	rev-list.c	FUNCTION_12	ELSE_2	IF_25
0x400130a	    0xc785d4f7ffff	              mov dword [rbp - 0x82c], 0	       489	rev-list.c	FUNCTION_12	ELSE_2	IF_25
0x4001314	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	       491	rev-list.c	FUNCTION_12	IF_26	CALL_33
0x400131b	          0x4885c0	                           test rax, rax	       491	rev-list.c	FUNCTION_12	IF_26	CALL_33
0x400131e	            0x7551	                           jne 0x4001371	       491	rev-list.c	FUNCTION_12	IF_26	CALL_33
0x4001320	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       491	rev-list.c	FUNCTION_12	IF_26	CALL_33
0x4001327	          0x4889c7	                            mov rdi, rax	       491	rev-list.c	FUNCTION_12	IF_26	CALL_33
0x400132a	      0xe800000000	                          call 0x400132f	       491	rev-list.c	FUNCTION_12	IF_26	CALL_33
0x400132f	            0x85c0	                           test eax, eax	       491	rev-list.c	FUNCTION_12	IF_26	CALL_33
0x4001331	            0x743e	                            je 0x4001371	       491	rev-list.c	FUNCTION_12	IF_26	CALL_33
0x4001333	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       492	rev-list.c	FUNCTION_12	IF_26
0x400133a	          0x83e010	                           and eax, 0x10	       492	rev-list.c	FUNCTION_12	IF_26
0x400133d	            0x84c0	                             test al, al	       491	rev-list.c	FUNCTION_12	IF_26	CALL_33
0x400133f	            0x7530	                           jne 0x4001371	       491	rev-list.c	FUNCTION_12	IF_26	CALL_33
0x4001341	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       492	rev-list.c	FUNCTION_12	IF_26
0x4001348	          0x83e020	                           and eax, 0x20	       492	rev-list.c	FUNCTION_12	IF_26
0x400134b	            0x84c0	                             test al, al	       492	rev-list.c	FUNCTION_12	IF_26
0x400134d	            0x7522	                           jne 0x4001371	       492	rev-list.c	FUNCTION_12	IF_26
0x400134f	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       492	rev-list.c	FUNCTION_12	IF_26
0x4001356	          0x83e040	                           and eax, 0x40	       492	rev-list.c	FUNCTION_12	IF_26
0x4001359	            0x84c0	                             test al, al	       492	rev-list.c	FUNCTION_12	IF_26
0x400135b	            0x7514	                           jne 0x4001371	       492	rev-list.c	FUNCTION_12	IF_26
0x400135d	    0x8b8538f7ffff	            mov eax, dword [rbp - 0x8c8]	       493	rev-list.c	FUNCTION_12	IF_26
0x4001363	            0x85c0	                           test eax, eax	       492	rev-list.c	FUNCTION_12	IF_26
0x4001365	            0x750a	                           jne 0x4001371	       492	rev-list.c	FUNCTION_12	IF_26
0x4001367	    0x8b8598f7ffff	            mov eax, dword [rbp - 0x868]	       494	rev-list.c	FUNCTION_12	IF_26
0x400136d	            0x85c0	                           test eax, eax	       493	rev-list.c	FUNCTION_12	IF_26
0x400136f	            0x740e	                            je 0x400137f	       493	rev-list.c	FUNCTION_12	IF_26
0x4001371	     0xfb685a9f7ff	           movzx eax, byte [rbp - 0x857]	       494	rev-list.c	FUNCTION_12	IF_26
0x4001378	          0x83e001	                              and eax, 1	       494	rev-list.c	FUNCTION_12	IF_26
0x400137b	            0x84c0	                             test al, al	       494	rev-list.c	FUNCTION_12	IF_26
0x400137d	            0x740a	                            je 0x4001389	       494	rev-list.c	FUNCTION_12	IF_26
0x400137f	      0xbf00000000	                              mov edi, 0	       496	rev-list.c	FUNCTION_12	CALL_34
0x4001384	      0xe800000000	                          call 0x4001389	       496	rev-list.c	FUNCTION_12	CALL_34
0x4001389	     0xfb685aaf7ff	           movzx eax, byte [rbp - 0x856]	       498	rev-list.c	FUNCTION_12	IF_27
0x4001390	          0x83e010	                           and eax, 0x10	       498	rev-list.c	FUNCTION_12	IF_27
0x4001393	            0x84c0	                             test al, al	       498	rev-list.c	FUNCTION_12	IF_27
0x4001395	            0x7417	                            je 0x40013ae	       498	rev-list.c	FUNCTION_12	IF_27
0x4001397	      0xbf00000000	                              mov edi, 0	       499	rev-list.c	FUNCTION_12	CALL_36
0x400139c	      0xe8f5ecffff	                               call sym.	       499	rev-list.c	FUNCTION_12	CALL_36
0x40013a1	          0x4889c7	                            mov rdi, rax	       499	rev-list.c	FUNCTION_12	CALL_36
0x40013a4	      0xb800000000	                              mov eax, 0	       499	rev-list.c	FUNCTION_12	CALL_36
0x40013a9	      0xe800000000	                          call 0x40013ae	       499	rev-list.c	FUNCTION_12	CALL_36
0x40013ae	    0x8b0500000000	            mov eax, dword [0x040013b4] 	       501	rev-list.c	FUNCTION_12	IF_28
0x40013b4	            0x85c0	                           test eax, eax	       501	rev-list.c	FUNCTION_12	IF_28
0x40013b6	            0x7420	                            je 0x40013d8	       501	rev-list.c	FUNCTION_12	IF_28
0x40013b8	    0x83bdc8f6ffff	              cmp dword [rbp - 0x938], 0	       501	rev-list.c	FUNCTION_12	IF_28
0x40013bf	            0x7417	                            je 0x40013d8	       501	rev-list.c	FUNCTION_12	IF_28
0x40013c1	      0xbf00000000	                              mov edi, 0	       502	rev-list.c	FUNCTION_12	CALL_38
0x40013c6	      0xe8cbecffff	                               call sym.	       502	rev-list.c	FUNCTION_12	CALL_38
0x40013cb	          0x4889c7	                            mov rdi, rax	       502	rev-list.c	FUNCTION_12	CALL_38
0x40013ce	      0xb800000000	                              mov eax, 0	       502	rev-list.c	FUNCTION_12	CALL_38
0x40013d3	      0xe800000000	                          call 0x40013d8	       502	rev-list.c	FUNCTION_12	CALL_38
0x40013d8	     0xfb685a9f7ff	           movzx eax, byte [rbp - 0x857]	       504	rev-list.c	FUNCTION_12
0x40013df	          0x83e010	                           and eax, 0x10	       504	rev-list.c	FUNCTION_12
0x40013e2	            0x84c0	                             test al, al	       505	rev-list.c	FUNCTION_12
0x40013e4	            0x7518	                           jne 0x40013fe	       505	rev-list.c	FUNCTION_12
0x40013e6	    0x488b8580f8ff	            mov rax, qword [rbp - 0x780]	       505	rev-list.c	FUNCTION_12
0x40013ed	          0x4885c0	                           test rax, rax	       504	rev-list.c	FUNCTION_12
0x40013f0	            0x750c	                           jne 0x40013fe	       504	rev-list.c	FUNCTION_12
0x40013f2	    0x488b8590f8ff	            mov rax, qword [rbp - 0x770]	       506	rev-list.c	FUNCTION_12
0x40013f9	          0x4885c0	                           test rax, rax	       505	rev-list.c	FUNCTION_12
0x40013fc	            0x7407	                            je 0x4001405	       505	rev-list.c	FUNCTION_12
0x40013fe	      0xb801000000	                              mov eax, 1	       505	rev-list.c	FUNCTION_12
0x4001403	            0xeb05	                           jmp 0x400140a	       505	rev-list.c	FUNCTION_12
0x4001405	      0xb800000000	                              mov eax, 0	       505	rev-list.c	FUNCTION_12
0x400140a	    0x890500000000	            mov dword [0x04001410], eax 	       504	rev-list.c	FUNCTION_12
0x4001410	    0x83bdbcf6ffff	              cmp dword [rbp - 0x944], 0	       507	rev-list.c	FUNCTION_12	IF_29
0x4001417	            0x7410	                            je 0x4001429	       507	rev-list.c	FUNCTION_12	IF_29
0x4001419	     0xfb685a6f7ff	           movzx eax, byte [rbp - 0x85a]	       508	rev-list.c	FUNCTION_12	IF_29
0x4001420	          0x83c804	                               or eax, 4	       508	rev-list.c	FUNCTION_12	IF_29
0x4001423	    0x8885a6f7ffff	              mov byte [rbp - 0x85a], al	       508	rev-list.c	FUNCTION_12	IF_29
0x4001429	    0x4883bdd0f6ff	              cmp qword [rbp - 0x930], 0	       510	rev-list.c	FUNCTION_12	IF_30
0x4001431	            0x741b	                            je 0x400144e	       510	rev-list.c	FUNCTION_12	IF_30
0x4001433	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       511	rev-list.c	FUNCTION_12	CALL_39
0x400143a	      0xbe00000000	                              mov esi, 0	       511	rev-list.c	FUNCTION_12	CALL_39
0x400143f	          0x4889c7	                            mov rdi, rax	       511	rev-list.c	FUNCTION_12	CALL_39
0x4001442	      0xe800000000	                          call 0x4001447	       511	rev-list.c	FUNCTION_12	CALL_39
0x4001447	    0x488905000000	            mov qword [0x0400144e], rax 	       511	rev-list.c	FUNCTION_12	CALL_39
0x400144e	    0x83bdc8f6ffff	              cmp dword [rbp - 0x938], 0	       513	rev-list.c	FUNCTION_12	IF_31
0x4001455	     0xf842b010000	                            je 0x4001586	       513	rev-list.c	FUNCTION_12	IF_31
0x400145b	     0xfb685a4f7ff	           movzx eax, byte [rbp - 0x85c]	       513	rev-list.c	FUNCTION_12	IF_31
0x4001462	          0x83e008	                              and eax, 8	       513	rev-list.c	FUNCTION_12	IF_31
0x4001465	            0x84c0	                             test al, al	       513	rev-list.c	FUNCTION_12	IF_31
0x4001467	     0xf8519010000	                           jne 0x4001586	       513	rev-list.c	FUNCTION_12	IF_31
0x400146d	     0xfb685a6f7ff	           movzx eax, byte [rbp - 0x85a]	       514	rev-list.c	FUNCTION_12	IF_31	IF_32
0x4001474	          0x83e040	                           and eax, 0x40	       514	rev-list.c	FUNCTION_12	IF_31	IF_32
0x4001477	            0x84c0	                             test al, al	       514	rev-list.c	FUNCTION_12	IF_31	IF_32
0x4001479	     0xf84ab000000	                            je 0x400152a	       514	rev-list.c	FUNCTION_12	IF_31	IF_32
0x400147f	     0xfb685a6f7ff	           movzx eax, byte [rbp - 0x85a]	       514	rev-list.c	FUNCTION_12	IF_31	IF_32
0x4001486	          0x83e080	                     and eax, 0xffffff80	       514	rev-list.c	FUNCTION_12	IF_31	IF_32
0x4001489	            0x84c0	                             test al, al	       514	rev-list.c	FUNCTION_12	IF_31	IF_32
0x400148b	     0xf8599000000	                           jne 0x400152a	       514	rev-list.c	FUNCTION_12	IF_31	IF_32
0x4001491	     0xfb685a8f7ff	           movzx eax, byte [rbp - 0x858]	       514	rev-list.c	FUNCTION_12	IF_31	IF_32
0x4001498	          0x83e002	                              and eax, 2	       514	rev-list.c	FUNCTION_12	IF_31	IF_32
0x400149b	            0x84c0	                             test al, al	       514	rev-list.c	FUNCTION_12	IF_31	IF_32
0x400149d	     0xf8587000000	                           jne 0x400152a	       514	rev-list.c	FUNCTION_12	IF_31	IF_32
0x40014a3	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	       516	rev-list.c	FUNCTION_12	IF_31	IF_32
0x40014a9	    0x8985ccf6ffff	            mov dword [rbp - 0x934], eax	       516	rev-list.c	FUNCTION_12	IF_31	IF_32
0x40014af	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       517	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_40
0x40014b6	          0x4889c7	                            mov rdi, rax	       517	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_40
0x40014b9	      0xe800000000	                          call 0x40014be	       517	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_40
0x40014be	            0x85c0	                           test eax, eax	       517	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_40
0x40014c0	     0xf85bf000000	                           jne 0x4001585	       517	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_40
0x40014c6	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	       518	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_41
0x40014cd	      0xb900000000	                              mov ecx, 0	       518	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_41
0x40014d2	      0xba00000000	                              mov edx, 0	       518	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_41
0x40014d7	      0xbe00000000	                              mov esi, 0	       518	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_41
0x40014dc	          0x4889c7	                            mov rdi, rax	       518	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_41
0x40014df	      0xe800000000	                          call 0x40014e4	       518	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_41
0x40014e4	    0x83bdccf6ffff	              cmp dword [rbp - 0x934], 0	       519	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	IF_34
0x40014eb	            0x781c	                            js 0x4001509	       519	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	IF_34
0x40014ed	    0x8b95ccf6ffff	            mov edx, dword [rbp - 0x934]	       519	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	IF_34
0x40014f3	    0x8b85f0f6ffff	            mov eax, dword [rbp - 0x910]	       519	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	IF_34
0x40014f9	            0x39c2	                            cmp edx, eax	       519	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	IF_34
0x40014fb	            0x730c	                           jae 0x4001509	       519	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	IF_34
0x40014fd	    0x8b85ccf6ffff	            mov eax, dword [rbp - 0x934]	       520	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	IF_34
0x4001503	    0x8985f0f6ffff	            mov dword [rbp - 0x910], eax	       520	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	IF_34
0x4001509	    0x8b85f0f6ffff	            mov eax, dword [rbp - 0x910]	       521	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_42
0x400150f	            0x89c6	                            mov esi, eax	       521	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_42
0x4001511	      0xbf00000000	                              mov edi, 0	       521	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_42
0x4001516	      0xb800000000	                              mov eax, 0	       521	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_42
0x400151b	      0xe800000000	                          call 0x4001520	       521	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33	CALL_42
0x4001520	      0xb800000000	                              mov eax, 0	       522	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33
0x4001525	      0xe909030000	                           jmp 0x4001833	       522	rev-list.c	FUNCTION_12	IF_31	IF_32	IF_33
0x400152a	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	       524	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35
0x4001530	            0x85c0	                           test eax, eax	       524	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35
0x4001532	            0x7952	                           jns 0x4001586	       524	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35
0x4001534	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       524	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35
0x400153b	          0x83e010	                           and eax, 0x10	       524	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35
0x400153e	            0x84c0	                             test al, al	       524	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35
0x4001540	            0x7444	                            je 0x4001586	       524	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35
0x4001542	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       525	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35
0x4001549	          0x83e020	                           and eax, 0x20	       525	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35
0x400154c	            0x84c0	                             test al, al	       525	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35
0x400154e	            0x7436	                            je 0x4001586	       525	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35
0x4001550	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       525	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35
0x4001557	          0x83e040	                           and eax, 0x40	       525	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35
0x400155a	            0x84c0	                             test al, al	       525	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35
0x400155c	            0x7428	                            je 0x4001586	       525	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35
0x400155e	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       526	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35	IF_36	CALL_43
0x4001565	          0x4889c7	                            mov rdi, rax	       526	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35	IF_36	CALL_43
0x4001568	      0xe800000000	                          call 0x400156d	       526	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35	IF_36	CALL_43
0x400156d	            0x85c0	                           test eax, eax	       526	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35	IF_36	CALL_43
0x400156f	            0x7515	                           jne 0x4001586	       526	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35	IF_36	CALL_43
0x4001571	      0xbf00000000	                              mov edi, 0	       527	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35	IF_36	CALL_44
0x4001576	      0xe800000000	                          call 0x400157b	       527	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35	IF_36	CALL_44
0x400157b	      0xb800000000	                              mov eax, 0	       528	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35	IF_36
0x4001580	      0xe9ae020000	                           jmp 0x4001833	       528	rev-list.c	FUNCTION_12	IF_31	ELSE_3	IF_35	IF_36
0x4001585	              0x90	                                     nop	       514	rev-list.c	FUNCTION_12	IF_31	IF_32
0x4001586	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       533	rev-list.c	FUNCTION_12	IF_37	CALL_45
0x400158d	          0x4889c7	                            mov rdi, rax	       533	rev-list.c	FUNCTION_12	IF_37	CALL_45
0x4001590	      0xe800000000	                          call 0x4001595	       533	rev-list.c	FUNCTION_12	IF_37	CALL_45
0x4001595	            0x85c0	                           test eax, eax	       533	rev-list.c	FUNCTION_12	IF_37	CALL_45
0x4001597	            0x740f	                            je 0x40015a8	       533	rev-list.c	FUNCTION_12	IF_37	CALL_45
0x4001599	      0xbf00000000	                              mov edi, 0	       534	rev-list.c	FUNCTION_12	CALL_46
0x400159e	      0xb800000000	                              mov eax, 0	       534	rev-list.c	FUNCTION_12	CALL_46
0x40015a3	      0xe800000000	                          call 0x40015a8	       534	rev-list.c	FUNCTION_12	CALL_46
0x40015a8	     0xfb685a5f7ff	           movzx eax, byte [rbp - 0x85b]	       535	rev-list.c	FUNCTION_12	IF_38
0x40015af	          0x83e020	                           and eax, 0x20	       535	rev-list.c	FUNCTION_12	IF_38
0x40015b2	            0x84c0	                             test al, al	       535	rev-list.c	FUNCTION_12	IF_38
0x40015b4	            0x7414	                            je 0x40015ca	       535	rev-list.c	FUNCTION_12	IF_38
0x40015b6	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       536	rev-list.c	FUNCTION_12	CALL_47
0x40015bd	      0xbe00000000	                              mov esi, 0	       536	rev-list.c	FUNCTION_12	CALL_47
0x40015c2	          0x4889c7	                            mov rdi, rax	       536	rev-list.c	FUNCTION_12	CALL_47
0x40015c5	      0xe800000000	                          call 0x40015ca	       536	rev-list.c	FUNCTION_12	CALL_47
0x40015ca	    0x83bdbcf6ffff	              cmp dword [rbp - 0x944], 0	       538	rev-list.c	FUNCTION_12	IF_39
0x40015d1	            0x744e	                            je 0x4001621	       538	rev-list.c	FUNCTION_12	IF_39
0x40015d3	    0x8b8dc4f6ffff	            mov ecx, dword [rbp - 0x93c]	       541	rev-list.c	FUNCTION_12	IF_39	CALL_48
0x40015d9	    0x488d95f0f6ff	                  lea rdx, [rbp - 0x910]	       541	rev-list.c	FUNCTION_12	IF_39	CALL_48
0x40015e0	    0x488db5b4f6ff	                  lea rsi, [rbp - 0x94c]	       541	rev-list.c	FUNCTION_12	IF_39	CALL_48
0x40015e7	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       541	rev-list.c	FUNCTION_12	IF_39	CALL_48
0x40015ee	          0x4889c7	                            mov rdi, rax	       541	rev-list.c	FUNCTION_12	IF_39	CALL_48
0x40015f1	      0xe800000000	                          call 0x40015f6	       541	rev-list.c	FUNCTION_12	IF_39	CALL_48
0x40015f6	    0x83bdc0f6ffff	              cmp dword [rbp - 0x940], 0	       543	rev-list.c	FUNCTION_12	IF_39	IF_40
0x40015fd	            0x7422	                            je 0x4001621	       543	rev-list.c	FUNCTION_12	IF_39	IF_40
0x40015ff	    0x8b95f0f6ffff	            mov edx, dword [rbp - 0x910]	       544	rev-list.c	FUNCTION_12	IF_39	CALL_49
0x4001605	    0x8b8db4f6ffff	            mov ecx, dword [rbp - 0x94c]	       544	rev-list.c	FUNCTION_12	IF_39	CALL_49
0x400160b	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	       544	rev-list.c	FUNCTION_12	IF_39	CALL_49
0x4001612	            0x89ce	                            mov esi, ecx	       544	rev-list.c	FUNCTION_12	IF_39	CALL_49
0x4001614	          0x4889c7	                            mov rdi, rax	       544	rev-list.c	FUNCTION_12	IF_39	CALL_49
0x4001617	      0xe870f4ffff	               call sym.show_bisect_vars	       544	rev-list.c	FUNCTION_12	IF_39	CALL_49
0x400161c	      0xe912020000	                           jmp 0x4001833	       544	rev-list.c	FUNCTION_12	IF_39	CALL_49
0x4001621	    0x8b0500000000	            mov eax, dword [0x04001627] 	       547	rev-list.c	FUNCTION_12	IF_41
0x4001627	            0x85c0	                           test eax, eax	       547	rev-list.c	FUNCTION_12	IF_41
0x4001629	            0x740f	                            je 0x400163a	       547	rev-list.c	FUNCTION_12	IF_41
0x400162b	      0xbe00400000	                         mov esi, 0x4000	       548	rev-list.c	FUNCTION_12	CALL_50
0x4001630	      0xbf00000000	                              mov edi, 0	       548	rev-list.c	FUNCTION_12	CALL_50
0x4001635	      0xe8c8eaffff	                    call sym.oidset_init	       548	rev-list.c	FUNCTION_12	CALL_50
0x400163a	    0x8b0500000000	            mov eax, dword [0x04001640] 	       549	rev-list.c	FUNCTION_12	IF_42
0x4001640	          0x83f802	                              cmp eax, 2	       549	rev-list.c	FUNCTION_12	IF_42
0x4001643	            0x750f	                           jne 0x4001654	       549	rev-list.c	FUNCTION_12	IF_42
0x4001645	      0xbe00400000	                         mov esi, 0x4000	       550	rev-list.c	FUNCTION_12	CALL_51
0x400164a	      0xbf00000000	                              mov edi, 0	       550	rev-list.c	FUNCTION_12	CALL_51
0x400164f	      0xe8aeeaffff	                    call sym.oidset_init	       550	rev-list.c	FUNCTION_12	CALL_51
0x4001654	    0x8b0500000000	            mov eax, dword [0x0400165a] 	       554	rev-list.c	FUNCTION_12
0x400165a	            0x85c0	                           test eax, eax	       552	rev-list.c	FUNCTION_12	CALL_52
0x400165c	            0x7407	                            je 0x4001665	       552	rev-list.c	FUNCTION_12	CALL_52
0x400165e	      0xb900000000	                              mov ecx, 0	       552	rev-list.c	FUNCTION_12	CALL_52
0x4001663	            0xeb05	                           jmp 0x400166a	       552	rev-list.c	FUNCTION_12	CALL_52
0x4001665	      0xb900000000	                              mov ecx, 0	       552	rev-list.c	FUNCTION_12	CALL_52
0x400166a	    0x488d9510f7ff	                  lea rdx, [rbp - 0x8f0]	       552	rev-list.c	FUNCTION_12	CALL_52
0x4001671	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	       552	rev-list.c	FUNCTION_12	CALL_52
0x4001678	          0x4989c9	                             mov r9, rcx	       552	rev-list.c	FUNCTION_12	CALL_52
0x400167b	          0x4989d0	                             mov r8, rdx	       552	rev-list.c	FUNCTION_12	CALL_52
0x400167e	      0xb900000000	                              mov ecx, 0	       552	rev-list.c	FUNCTION_12	CALL_52
0x4001683	      0xba00000000	                              mov edx, 0	       552	rev-list.c	FUNCTION_12	CALL_52
0x4001688	          0x4889c6	                            mov rsi, rax	       552	rev-list.c	FUNCTION_12	CALL_52
0x400168b	      0xbf00000000	                              mov edi, 0	       552	rev-list.c	FUNCTION_12	CALL_52
0x4001690	      0xe800000000	                          call 0x4001695	       552	rev-list.c	FUNCTION_12	CALL_52
0x4001695	    0x8b0500000000	            mov eax, dword [0x0400169b] 	       556	rev-list.c	FUNCTION_12	IF_43
0x400169b	            0x85c0	                           test eax, eax	       556	rev-list.c	FUNCTION_12	IF_43
0x400169d	            0x7461	                            je 0x4001700	       556	rev-list.c	FUNCTION_12	IF_43
0x400169f	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	       559	rev-list.c	FUNCTION_12	IF_43	CALL_53
0x40016a6	          0x4889c6	                            mov rsi, rax	       559	rev-list.c	FUNCTION_12	IF_43	CALL_53
0x40016a9	      0xbf00000000	                              mov edi, 0	       559	rev-list.c	FUNCTION_12	IF_43	CALL_53
0x40016ae	      0xe875eaffff	               call sym.oidset_iter_init	       559	rev-list.c	FUNCTION_12	IF_43	CALL_53
0x40016b3	            0xeb21	                           jmp 0x40016d6	       560	rev-list.c	FUNCTION_12	IF_43	WHILE_1	CALL_54
0x40016b5	    0x488b85e0f6ff	            mov rax, qword [rbp - 0x920]	       561	rev-list.c	FUNCTION_12	IF_43	CALL_56
0x40016bc	          0x4889c7	                            mov rdi, rax	       561	rev-list.c	FUNCTION_12	IF_43	CALL_56
0x40016bf	      0xe800000000	                          call 0x40016c4	       561	rev-list.c	FUNCTION_12	IF_43	CALL_56
0x40016c4	          0x4889c6	                            mov rsi, rax	       561	rev-list.c	FUNCTION_12	IF_43	CALL_56
0x40016c7	      0xbf00000000	                              mov edi, 0	       561	rev-list.c	FUNCTION_12	IF_43	CALL_56
0x40016cc	      0xb800000000	                              mov eax, 0	       561	rev-list.c	FUNCTION_12	IF_43	CALL_56
0x40016d1	      0xe800000000	                          call 0x40016d6	       561	rev-list.c	FUNCTION_12	IF_43	CALL_56
0x40016d6	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	       560	rev-list.c	FUNCTION_12	IF_43	WHILE_1	CALL_54
0x40016dd	          0x4889c7	                            mov rdi, rax	       560	rev-list.c	FUNCTION_12	IF_43	WHILE_1	CALL_54
0x40016e0	      0xe869eaffff	               call sym.oidset_iter_next	       560	rev-list.c	FUNCTION_12	IF_43	WHILE_1	CALL_54
0x40016e5	    0x488985e0f6ff	            mov qword [rbp - 0x920], rax	       560	rev-list.c	FUNCTION_12	IF_43	WHILE_1	CALL_54
0x40016ec	    0x4883bde0f6ff	              cmp qword [rbp - 0x920], 0	       560	rev-list.c	FUNCTION_12	IF_43	WHILE_1	CALL_54
0x40016f4	            0x75bf	                           jne 0x40016b5	       560	rev-list.c	FUNCTION_12	IF_43	WHILE_1	CALL_54
0x40016f6	      0xbf00000000	                              mov edi, 0	       562	rev-list.c	FUNCTION_12	IF_43	CALL_57
0x40016fb	      0xe800000000	                          call 0x4001700	       562	rev-list.c	FUNCTION_12	IF_43	CALL_57
0x4001700	    0x8b0500000000	            mov eax, dword [0x04001706] 	       564	rev-list.c	FUNCTION_12	IF_44
0x4001706	          0x83f802	                              cmp eax, 2	       564	rev-list.c	FUNCTION_12	IF_44
0x4001709	            0x7561	                           jne 0x400176c	       564	rev-list.c	FUNCTION_12	IF_44
0x400170b	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	       567	rev-list.c	FUNCTION_12	IF_44	CALL_58
0x4001712	          0x4889c6	                            mov rsi, rax	       567	rev-list.c	FUNCTION_12	IF_44	CALL_58
0x4001715	      0xbf00000000	                              mov edi, 0	       567	rev-list.c	FUNCTION_12	IF_44	CALL_58
0x400171a	      0xe809eaffff	               call sym.oidset_iter_init	       567	rev-list.c	FUNCTION_12	IF_44	CALL_58
0x400171f	            0xeb21	                           jmp 0x4001742	       568	rev-list.c	FUNCTION_12	IF_44	WHILE_2	CALL_59
0x4001721	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	       569	rev-list.c	FUNCTION_12	IF_44	CALL_61
0x4001728	          0x4889c7	                            mov rdi, rax	       569	rev-list.c	FUNCTION_12	IF_44	CALL_61
0x400172b	      0xe800000000	                          call 0x4001730	       569	rev-list.c	FUNCTION_12	IF_44	CALL_61
0x4001730	          0x4889c6	                            mov rsi, rax	       569	rev-list.c	FUNCTION_12	IF_44	CALL_61
0x4001733	      0xbf00000000	                              mov edi, 0	       569	rev-list.c	FUNCTION_12	IF_44	CALL_61
0x4001738	      0xb800000000	                              mov eax, 0	       569	rev-list.c	FUNCTION_12	IF_44	CALL_61
0x400173d	      0xe800000000	                          call 0x4001742	       569	rev-list.c	FUNCTION_12	IF_44	CALL_61
0x4001742	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	       568	rev-list.c	FUNCTION_12	IF_44	WHILE_2	CALL_59
0x4001749	          0x4889c7	                            mov rdi, rax	       568	rev-list.c	FUNCTION_12	IF_44	WHILE_2	CALL_59
0x400174c	      0xe8fde9ffff	               call sym.oidset_iter_next	       568	rev-list.c	FUNCTION_12	IF_44	WHILE_2	CALL_59
0x4001751	    0x488985e8f6ff	            mov qword [rbp - 0x918], rax	       568	rev-list.c	FUNCTION_12	IF_44	WHILE_2	CALL_59
0x4001758	    0x4883bde8f6ff	              cmp qword [rbp - 0x918], 0	       568	rev-list.c	FUNCTION_12	IF_44	WHILE_2	CALL_59
0x4001760	            0x75bf	                           jne 0x4001721	       568	rev-list.c	FUNCTION_12	IF_44	WHILE_2	CALL_59
0x4001762	      0xbf00000000	                              mov edi, 0	       570	rev-list.c	FUNCTION_12	IF_44	CALL_62
0x4001767	      0xe800000000	                          call 0x400176c	       570	rev-list.c	FUNCTION_12	IF_44	CALL_62
0x400176c	      0xbf00000000	                              mov edi, 0	       573	rev-list.c	FUNCTION_12	CALL_63
0x4001771	      0xe800000000	                          call 0x4001776	       573	rev-list.c	FUNCTION_12	CALL_63
0x4001776	     0xfb685a6f7ff	           movzx eax, byte [rbp - 0x85a]	       575	rev-list.c	FUNCTION_12	IF_45
0x400177d	          0x83e040	                           and eax, 0x40	       575	rev-list.c	FUNCTION_12	IF_45
0x4001780	            0x84c0	                             test al, al	       575	rev-list.c	FUNCTION_12	IF_45
0x4001782	     0xf84a6000000	                            je 0x400182e	       575	rev-list.c	FUNCTION_12	IF_45
0x4001788	     0xfb685a6f7ff	           movzx eax, byte [rbp - 0x85a]	       576	rev-list.c	FUNCTION_12	IF_45	IF_46
0x400178f	          0x83e080	                     and eax, 0xffffff80	       576	rev-list.c	FUNCTION_12	IF_45	IF_46
0x4001792	            0x84c0	                             test al, al	       576	rev-list.c	FUNCTION_12	IF_45	IF_46
0x4001794	            0x742a	                            je 0x40017c0	       576	rev-list.c	FUNCTION_12	IF_45	IF_46
0x4001796	     0xfb685a8f7ff	           movzx eax, byte [rbp - 0x858]	       576	rev-list.c	FUNCTION_12	IF_45	IF_46
0x400179d	          0x83e002	                              and eax, 2	       576	rev-list.c	FUNCTION_12	IF_45	IF_46
0x40017a0	            0x84c0	                             test al, al	       576	rev-list.c	FUNCTION_12	IF_45	IF_46
0x40017a2	            0x741c	                            je 0x40017c0	       576	rev-list.c	FUNCTION_12	IF_45	IF_46
0x40017a4	          0x8b4da8	             mov ecx, dword [rbp - 0x58]	       577	rev-list.c	FUNCTION_12	IF_45	CALL_64
0x40017a7	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       577	rev-list.c	FUNCTION_12	IF_45	CALL_64
0x40017aa	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       577	rev-list.c	FUNCTION_12	IF_45	CALL_64
0x40017ad	            0x89c6	                            mov esi, eax	       577	rev-list.c	FUNCTION_12	IF_45	CALL_64
0x40017af	      0xbf00000000	                              mov edi, 0	       577	rev-list.c	FUNCTION_12	IF_45	CALL_64
0x40017b4	      0xb800000000	                              mov eax, 0	       577	rev-list.c	FUNCTION_12	IF_45	CALL_64
0x40017b9	      0xe800000000	                          call 0x40017be	       577	rev-list.c	FUNCTION_12	IF_45	CALL_64
0x40017be	            0xeb6e	                           jmp 0x400182e	       577	rev-list.c	FUNCTION_12	IF_45	CALL_64
0x40017c0	     0xfb685a6f7ff	           movzx eax, byte [rbp - 0x85a]	       578	rev-list.c	FUNCTION_12	IF_45	ELSE_4	IF_47
0x40017c7	          0x83e080	                     and eax, 0xffffff80	       578	rev-list.c	FUNCTION_12	IF_45	ELSE_4	IF_47
0x40017ca	            0x84c0	                             test al, al	       578	rev-list.c	FUNCTION_12	IF_45	ELSE_4	IF_47
0x40017cc	            0x7419	                            je 0x40017e7	       578	rev-list.c	FUNCTION_12	IF_45	ELSE_4	IF_47
0x40017ce	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       579	rev-list.c	FUNCTION_12	IF_45	ELSE_4	IF_47
0x40017d1	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       579	rev-list.c	FUNCTION_12	IF_45	ELSE_4	IF_47
0x40017d4	            0x89c6	                            mov esi, eax	       579	rev-list.c	FUNCTION_12	IF_45	ELSE_4	IF_47
0x40017d6	      0xbf00000000	                              mov edi, 0	       579	rev-list.c	FUNCTION_12	IF_45	ELSE_4	IF_47
0x40017db	      0xb800000000	                              mov eax, 0	       579	rev-list.c	FUNCTION_12	IF_45	ELSE_4	IF_47
0x40017e0	      0xe800000000	                          call 0x40017e5	       579	rev-list.c	FUNCTION_12	IF_45	ELSE_4	IF_47
0x40017e5	            0xeb47	                           jmp 0x400182e	       579	rev-list.c	FUNCTION_12	IF_45	ELSE_4	IF_47
0x40017e7	     0xfb685a8f7ff	           movzx eax, byte [rbp - 0x858]	       580	rev-list.c	FUNCTION_12	IF_45	ELSE_5	IF_48
0x40017ee	          0x83e002	                              and eax, 2	       580	rev-list.c	FUNCTION_12	IF_45	ELSE_5	IF_48
0x40017f1	            0x84c0	                             test al, al	       580	rev-list.c	FUNCTION_12	IF_45	ELSE_5	IF_48
0x40017f3	            0x7420	                            je 0x4001815	       580	rev-list.c	FUNCTION_12	IF_45	ELSE_5	IF_48
0x40017f5	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       581	rev-list.c	FUNCTION_12	IF_45	ELSE_5	IF_48
0x40017f8	          0x8b4da0	             mov ecx, dword [rbp - 0x60]	       581	rev-list.c	FUNCTION_12	IF_45	ELSE_5	IF_48
0x40017fb	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       581	rev-list.c	FUNCTION_12	IF_45	ELSE_5	IF_48
0x40017fe	             0x1d1	                            add ecx, edx	       581	rev-list.c	FUNCTION_12	IF_45	ELSE_5	IF_48
0x4001800	            0x89c2	                            mov edx, eax	       581	rev-list.c	FUNCTION_12	IF_45	ELSE_5	IF_48
0x4001802	            0x89ce	                            mov esi, ecx	       581	rev-list.c	FUNCTION_12	IF_45	ELSE_5	IF_48
0x4001804	      0xbf00000000	                              mov edi, 0	       581	rev-list.c	FUNCTION_12	IF_45	ELSE_5	IF_48
0x4001809	      0xb800000000	                              mov eax, 0	       581	rev-list.c	FUNCTION_12	IF_45	ELSE_5	IF_48
0x400180e	      0xe800000000	                          call 0x4001813	       581	rev-list.c	FUNCTION_12	IF_45	ELSE_5	IF_48
0x4001813	            0xeb19	                           jmp 0x400182e	       581	rev-list.c	FUNCTION_12	IF_45	ELSE_5	IF_48
0x4001815	          0x8b55a0	             mov edx, dword [rbp - 0x60]	       583	rev-list.c	FUNCTION_12	IF_45	CALL_67
0x4001818	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       583	rev-list.c	FUNCTION_12	IF_45	CALL_67
0x400181b	             0x1d0	                            add eax, edx	       583	rev-list.c	FUNCTION_12	IF_45	CALL_67
0x400181d	            0x89c6	                            mov esi, eax	       583	rev-list.c	FUNCTION_12	IF_45	CALL_67
0x400181f	      0xbf00000000	                              mov edi, 0	       583	rev-list.c	FUNCTION_12	IF_45	CALL_67
0x4001824	      0xb800000000	                              mov eax, 0	       583	rev-list.c	FUNCTION_12	IF_45	CALL_67
0x4001829	      0xe800000000	                          call 0x400182e	       583	rev-list.c	FUNCTION_12	IF_45	CALL_67
0x400182e	      0xb800000000	                              mov eax, 0	       586	rev-list.c	FUNCTION_12
0x4001833	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       587	rev-list.c	FUNCTION_12
0x4001837	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       587	rev-list.c	FUNCTION_12
0x4001840	            0x7405	                            je 0x4001847	       587	rev-list.c	FUNCTION_12
0x4001842	      0xe800000000	                          call 0x4001847	       587	rev-list.c	FUNCTION_12
0x4001847	    0x4881c4680900	                          add rsp, 0x968	       587	rev-list.c	FUNCTION_12
0x400184e	              0x5b	                                 pop rbx	       587	rev-list.c	FUNCTION_12
0x400184f	              0x5d	                                 pop rbp	       587	rev-list.c	FUNCTION_12
0x4001850	              0xc3	                                     ret	       587	rev-list.c	FUNCTION_12
print_var_str	IF,0:functions,0:WHILE,0:CALL,1:FOR,0:DO,0:ELSE,0:SWITCH,0	14
0x4000a34	              0x55	                                push rbp	       262	rev-list.c	FUNCTION_7
0x4000a35	          0x4889e5	                            mov rbp, rsp	       262	rev-list.c	FUNCTION_7
0x4000a38	        0x4883ec10	                           sub rsp, 0x10	       262	rev-list.c	FUNCTION_7
0x4000a3c	        0x48897df8	                mov qword [rbp - 8], rdi	       262	rev-list.c	FUNCTION_7
0x4000a40	        0x488975f0	             mov qword [rbp - 0x10], rsi	       262	rev-list.c	FUNCTION_7
0x4000a44	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       263	rev-list.c	FUNCTION_7	CALL_1
0x4000a48	        0x488b45f8	                mov rax, qword [rbp - 8]	       263	rev-list.c	FUNCTION_7	CALL_1
0x4000a4c	          0x4889c6	                            mov rsi, rax	       263	rev-list.c	FUNCTION_7	CALL_1
0x4000a4f	      0xbf00000000	                              mov edi, 0	       263	rev-list.c	FUNCTION_7	CALL_1
0x4000a54	      0xb800000000	                              mov eax, 0	       263	rev-list.c	FUNCTION_7	CALL_1
0x4000a59	      0xe800000000	                          call 0x4000a5e	       263	rev-list.c	FUNCTION_7	CALL_1
0x4000a5e	              0x90	                                     nop	       264	rev-list.c	FUNCTION_7
0x4000a5f	              0xc9	                                   leave	       264	rev-list.c	FUNCTION_7
0x4000a60	              0xc3	                                     ret	       264	rev-list.c	FUNCTION_7
finish_commit	IF,1:functions,0:WHILE,0:CALL,2:FOR,0:DO,0:ELSE,0:SWITCH,0	21
0x40007db	              0x55	                                push rbp	       192	rev-list.c	FUNCTION_2
0x40007dc	          0x4889e5	                            mov rbp, rsp	       192	rev-list.c	FUNCTION_2
0x40007df	        0x4883ec10	                           sub rsp, 0x10	       192	rev-list.c	FUNCTION_2
0x40007e3	        0x48897df8	                mov qword [rbp - 8], rdi	       192	rev-list.c	FUNCTION_2
0x40007e7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       192	rev-list.c	FUNCTION_2
0x40007eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       193	rev-list.c	FUNCTION_2	IF_1
0x40007ef	        0x488b4030	            mov rax, qword [rax + 0x30] 	       193	rev-list.c	FUNCTION_2	IF_1
0x40007f3	          0x4885c0	                           test rax, rax	       193	rev-list.c	FUNCTION_2	IF_1
0x40007f6	            0x741c	                            je 0x4000814	       193	rev-list.c	FUNCTION_2	IF_1
0x40007f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	rev-list.c	FUNCTION_2	IF_1	CALL_1
0x40007fc	        0x488b4030	            mov rax, qword [rax + 0x30] 	       194	rev-list.c	FUNCTION_2	IF_1	CALL_1
0x4000800	          0x4889c7	                            mov rdi, rax	       194	rev-list.c	FUNCTION_2	IF_1	CALL_1
0x4000803	      0xe800000000	                          call 0x4000808	       194	rev-list.c	FUNCTION_2	IF_1	CALL_1
0x4000808	        0x488b45f8	                mov rax, qword [rbp - 8]	       195	rev-list.c	FUNCTION_2	IF_1
0x400080c	    0x48c740300000	               mov qword [rax + 0x30], 0	       195	rev-list.c	FUNCTION_2	IF_1
0x4000814	        0x488b45f8	                mov rax, qword [rbp - 8]	       197	rev-list.c	FUNCTION_2	CALL_2
0x4000818	          0x4889c7	                            mov rdi, rax	       197	rev-list.c	FUNCTION_2	CALL_2
0x400081b	      0xe800000000	                          call 0x4000820	       197	rev-list.c	FUNCTION_2	CALL_2
0x4000820	              0x90	                                     nop	       198	rev-list.c	FUNCTION_2
0x4000821	              0xc9	                                   leave	       198	rev-list.c	FUNCTION_2
0x4000822	              0xc3	                                     ret	       198	rev-list.c	FUNCTION_2
oidset_init	IF,0:functions,0:WHILE,0:CALL,1:FOR,0:DO,0:ELSE,0:SWITCH,0	13
0x4000102	              0x55	                                push rbp	        29	oidset.h	FUNCTION_17
0x4000103	          0x4889e5	                            mov rbp, rsp	        29	oidset.h	FUNCTION_17
0x4000106	        0x4883ec10	                           sub rsp, 0x10	        29	oidset.h	FUNCTION_17
0x400010a	        0x48897df8	                mov qword [rbp - 8], rdi	        29	oidset.h	FUNCTION_17
0x400010e	        0x488975f0	             mov qword [rbp - 0x10], rsi	        29	oidset.h	FUNCTION_17
0x4000112	        0x488b45f8	                mov rax, qword [rbp - 8]	        30	oidset.h	FUNCTION_17	CALL_1
0x4000116	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        30	oidset.h	FUNCTION_17	CALL_1
0x400011a	          0x4889d6	                            mov rsi, rdx	        30	oidset.h	FUNCTION_17	CALL_1
0x400011d	          0x4889c7	                            mov rdi, rax	        30	oidset.h	FUNCTION_17	CALL_1
0x4000120	      0xe800000000	                          call 0x4000125	        30	oidset.h	FUNCTION_17	CALL_1
0x4000125	              0x90	                                     nop	        31	oidset.h	FUNCTION_17
0x4000126	              0xc9	                                   leave	        31	oidset.h	FUNCTION_17
0x4000127	              0xc3	                                     ret	        31	oidset.h	FUNCTION_17
oidset_iter_next	IF,0:functions,0:WHILE,0:CALL,1:FOR,0:DO,0:ELSE,0:SWITCH,0	16
0x400014e	              0x55	                                push rbp	        71	oidset.h	FUNCTION_19
0x400014f	          0x4889e5	                            mov rbp, rsp	        71	oidset.h	FUNCTION_19
0x4000152	        0x4883ec20	                           sub rsp, 0x20	        71	oidset.h	FUNCTION_19
0x4000156	        0x48897de8	             mov qword [rbp - 0x18], rdi	        71	oidset.h	FUNCTION_19
0x400015a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	oidset.h	FUNCTION_19	CALL_1
0x400015e	          0x4889c7	                            mov rdi, rax	        72	oidset.h	FUNCTION_19	CALL_1
0x4000161	      0xe882ffffff	               call sym.oidmap_iter_next	        72	oidset.h	FUNCTION_19	CALL_1
0x4000166	        0x488945f8	                mov qword [rbp - 8], rax	        72	oidset.h	FUNCTION_19	CALL_1
0x400016a	      0x48837df800	                  cmp qword [rbp - 8], 0	        73	oidset.h	FUNCTION_19
0x400016f	            0x740a	                            je 0x400017b	        73	oidset.h	FUNCTION_19
0x4000171	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	oidset.h	FUNCTION_19
0x4000175	        0x4883c010	                           add rax, 0x10	        73	oidset.h	FUNCTION_19
0x4000179	            0xeb05	                           jmp 0x4000180	        73	oidset.h	FUNCTION_19
0x400017b	      0xb800000000	                              mov eax, 0	        73	oidset.h	FUNCTION_19
0x4000180	              0xc9	                                   leave	        74	oidset.h	FUNCTION_19
0x4000181	              0xc3	                                     ret	        74	oidset.h	FUNCTION_19
show_edge	IF,0:functions,0:WHILE,0:CALL,2:FOR,0:DO,0:ELSE,0:SWITCH,0	15
0x4000a03	              0x55	                                push rbp	       257	rev-list.c	FUNCTION_6
0x4000a04	          0x4889e5	                            mov rbp, rsp	       257	rev-list.c	FUNCTION_6
0x4000a07	        0x4883ec10	                           sub rsp, 0x10	       257	rev-list.c	FUNCTION_6
0x4000a0b	        0x48897df8	                mov qword [rbp - 8], rdi	       257	rev-list.c	FUNCTION_6
0x4000a0f	        0x488b45f8	                mov rax, qword [rbp - 8]	       258	rev-list.c	FUNCTION_6	CALL_2
0x4000a13	        0x4883c004	                              add rax, 4	       258	rev-list.c	FUNCTION_6	CALL_2
0x4000a17	          0x4889c7	                            mov rdi, rax	       258	rev-list.c	FUNCTION_6	CALL_2
0x4000a1a	      0xe800000000	                          call 0x4000a1f	       258	rev-list.c	FUNCTION_6	CALL_2
0x4000a1f	          0x4889c6	                            mov rsi, rax	       258	rev-list.c	FUNCTION_6	CALL_2
0x4000a22	      0xbf00000000	                              mov edi, 0	       258	rev-list.c	FUNCTION_6	CALL_2
0x4000a27	      0xb800000000	                              mov eax, 0	       258	rev-list.c	FUNCTION_6	CALL_2
0x4000a2c	      0xe800000000	                          call 0x4000a31	       258	rev-list.c	FUNCTION_6	CALL_2
0x4000a31	              0x90	                                     nop	       259	rev-list.c	FUNCTION_6
0x4000a32	              0xc9	                                   leave	       259	rev-list.c	FUNCTION_6
0x4000a33	              0xc3	                                     ret	       259	rev-list.c	FUNCTION_6
oidset_iter_init	IF,0:functions,0:WHILE,0:CALL,1:FOR,0:DO,0:ELSE,0:SWITCH,0	13
0x4000128	              0x55	                                push rbp	        66	oidset.h	FUNCTION_18
0x4000129	          0x4889e5	                            mov rbp, rsp	        66	oidset.h	FUNCTION_18
0x400012c	        0x4883ec10	                           sub rsp, 0x10	        66	oidset.h	FUNCTION_18
0x4000130	        0x48897df8	                mov qword [rbp - 8], rdi	        66	oidset.h	FUNCTION_18
0x4000134	        0x488975f0	             mov qword [rbp - 0x10], rsi	        66	oidset.h	FUNCTION_18
0x4000138	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        67	oidset.h	FUNCTION_18	CALL_1
0x400013c	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	oidset.h	FUNCTION_18	CALL_1
0x4000140	          0x4889d6	                            mov rsi, rdx	        67	oidset.h	FUNCTION_18	CALL_1
0x4000143	          0x4889c7	                            mov rdi, rax	        67	oidset.h	FUNCTION_18	CALL_1
0x4000146	      0xe877ffffff	               call sym.oidmap_iter_init	        67	oidset.h	FUNCTION_18	CALL_1
0x400014b	              0x90	                                     nop	        68	oidset.h	FUNCTION_18
0x400014c	              0xc9	                                   leave	        68	oidset.h	FUNCTION_18
0x400014d	              0xc3	                                     ret	        68	oidset.h	FUNCTION_18
show_bisect_vars	IF,4:functions,0:WHILE,0:CALL,11:FOR,0:DO,0:ELSE,0:SWITCH,0	110
0x4000a8c	              0x55	                                push rbp	       272	rev-list.c	FUNCTION_9
0x4000a8d	          0x4889e5	                            mov rbp, rsp	       272	rev-list.c	FUNCTION_9
0x4000a90	        0x4883ec70	                           sub rsp, 0x70	       272	rev-list.c	FUNCTION_9
0x4000a94	        0x48897d98	             mov qword [rbp - 0x68], rdi	       272	rev-list.c	FUNCTION_9
0x4000a98	          0x897594	             mov dword [rbp - 0x6c], esi	       272	rev-list.c	FUNCTION_9
0x4000a9b	          0x895590	             mov dword [rbp - 0x70], edx	       272	rev-list.c	FUNCTION_9
0x4000a9e	    0x64488b042528	                mov rax, qword fs:[0x28]	       272	rev-list.c	FUNCTION_9
0x4000aa7	        0x488945f8	                mov qword [rbp - 8], rax	       272	rev-list.c	FUNCTION_9
0x4000aab	            0x31c0	                            xor eax, eax	       272	rev-list.c	FUNCTION_9
0x4000aad	        0x488b4598	             mov rax, qword [rbp - 0x68]	       273	rev-list.c	FUNCTION_9
0x4000ab1	          0x8b4008	                mov eax, dword [rax + 8]	       273	rev-list.c	FUNCTION_9
0x4000ab4	          0x8945ac	             mov dword [rbp - 0x54], eax	       273	rev-list.c	FUNCTION_9
0x4000ab7	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       274	rev-list.c	FUNCTION_9
0x4000abf	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       274	rev-list.c	FUNCTION_9
0x4000ac7	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       274	rev-list.c	FUNCTION_9
0x4000acf	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       274	rev-list.c	FUNCTION_9
0x4000ad7	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       274	rev-list.c	FUNCTION_9
0x4000adf	        0xc645e800	                mov byte [rbp - 0x18], 0	       274	rev-list.c	FUNCTION_9
0x4000ae3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       276	rev-list.c	FUNCTION_9
0x4000ae7	          0x488b00	                    mov rax, qword [rax]	       276	rev-list.c	FUNCTION_9
0x4000aea	        0x488945b8	             mov qword [rbp - 0x48], rax	       276	rev-list.c	FUNCTION_9
0x4000aee	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       278	rev-list.c	FUNCTION_9	IF_1
0x4000af2	          0x488b00	                    mov rax, qword [rax]	       278	rev-list.c	FUNCTION_9	IF_1
0x4000af5	          0x4885c0	                           test rax, rax	       278	rev-list.c	FUNCTION_9	IF_1
0x4000af8	            0x750a	                           jne 0x4000b04	       278	rev-list.c	FUNCTION_9	IF_1
0x4000afa	      0xb801000000	                              mov eax, 1	       279	rev-list.c	FUNCTION_9	IF_1
0x4000aff	      0xe915010000	                           jmp 0x4000c19	       279	rev-list.c	FUNCTION_9	IF_1
0x4000b04	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       281	rev-list.c	FUNCTION_9	CALL_1
0x4000b07	          0x83e001	                              and eax, 1	       281	rev-list.c	FUNCTION_9	CALL_1
0x4000b0a	            0x89c2	                            mov edx, eax	       281	rev-list.c	FUNCTION_9	CALL_1
0x4000b0c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       281	rev-list.c	FUNCTION_9	CALL_1
0x4000b10	          0x488b00	                    mov rax, qword [rax]	       281	rev-list.c	FUNCTION_9	CALL_1
0x4000b13	        0x488d75b0	                   lea rsi, [rbp - 0x50]	       281	rev-list.c	FUNCTION_9	CALL_1
0x4000b17	    0x41b800000000	                              mov r8d, 0	       281	rev-list.c	FUNCTION_9	CALL_1
0x4000b1d	      0xb900000000	                              mov ecx, 0	       281	rev-list.c	FUNCTION_9	CALL_1
0x4000b22	          0x4889c7	                            mov rdi, rax	       281	rev-list.c	FUNCTION_9	CALL_1
0x4000b25	      0xe800000000	                          call 0x4000b2a	       281	rev-list.c	FUNCTION_9	CALL_1
0x4000b2a	          0x4889c2	                            mov rdx, rax	       281	rev-list.c	FUNCTION_9	CALL_1
0x4000b2d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       281	rev-list.c	FUNCTION_9	CALL_1
0x4000b31	          0x488910	                    mov qword [rax], rdx	       281	rev-list.c	FUNCTION_9	CALL_1
0x4000b34	          0x8b4590	             mov eax, dword [rbp - 0x70]	       294	rev-list.c	FUNCTION_9
0x4000b37	          0x2b4594	             sub eax, dword [rbp - 0x6c]	       294	rev-list.c	FUNCTION_9
0x4000b3a	          0x8945a8	             mov dword [rbp - 0x58], eax	       294	rev-list.c	FUNCTION_9
0x4000b3d	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       295	rev-list.c	FUNCTION_9	IF_2
0x4000b40	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       295	rev-list.c	FUNCTION_9	IF_2
0x4000b43	            0x7d06	                           jge 0x4000b4b	       295	rev-list.c	FUNCTION_9	IF_2
0x4000b45	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       296	rev-list.c	FUNCTION_9	IF_2
0x4000b48	          0x8945a8	             mov dword [rbp - 0x58], eax	       296	rev-list.c	FUNCTION_9	IF_2
0x4000b4b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       298	rev-list.c	FUNCTION_9	IF_3
0x4000b4f	          0x488b00	                    mov rax, qword [rax]	       298	rev-list.c	FUNCTION_9	IF_3
0x4000b52	          0x4885c0	                           test rax, rax	       298	rev-list.c	FUNCTION_9	IF_3
0x4000b55	            0x741d	                            je 0x4000b74	       298	rev-list.c	FUNCTION_9	IF_3
0x4000b57	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       299	rev-list.c	FUNCTION_9	CALL_2
0x4000b5b	          0x488b00	                    mov rax, qword [rax]	       299	rev-list.c	FUNCTION_9	CALL_2
0x4000b5e	          0x488b00	                    mov rax, qword [rax]	       299	rev-list.c	FUNCTION_9	CALL_2
0x4000b61	        0x488d5004	                      lea rdx, [rax + 4]	       299	rev-list.c	FUNCTION_9	CALL_2
0x4000b65	        0x488d45c0	                   lea rax, [rbp - 0x40]	       299	rev-list.c	FUNCTION_9	CALL_2
0x4000b69	          0x4889d6	                            mov rsi, rdx	       299	rev-list.c	FUNCTION_9	CALL_2
0x4000b6c	          0x4889c7	                            mov rdi, rax	       299	rev-list.c	FUNCTION_9	CALL_2
0x4000b6f	      0xe800000000	                          call 0x4000b74	       299	rev-list.c	FUNCTION_9	CALL_2
0x4000b74	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       301	rev-list.c	FUNCTION_9	IF_4
0x4000b77	          0x83e001	                              and eax, 1	       301	rev-list.c	FUNCTION_9	IF_4
0x4000b7a	            0x85c0	                           test eax, eax	       301	rev-list.c	FUNCTION_9	IF_4
0x4000b7c	            0x7427	                            je 0x4000ba5	       301	rev-list.c	FUNCTION_9	IF_4
0x4000b7e	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       302	rev-list.c	FUNCTION_9	IF_4	CALL_3
0x4000b82	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       302	rev-list.c	FUNCTION_9	IF_4	CALL_3
0x4000b86	          0x4889d1	                            mov rcx, rdx	       302	rev-list.c	FUNCTION_9	IF_4	CALL_3
0x4000b89	      0xba00000000	                              mov edx, 0	       302	rev-list.c	FUNCTION_9	IF_4	CALL_3
0x4000b8e	      0xbe00000000	                              mov esi, 0	       302	rev-list.c	FUNCTION_9	IF_4	CALL_3
0x4000b93	          0x4889c7	                            mov rdi, rax	       302	rev-list.c	FUNCTION_9	IF_4	CALL_3
0x4000b96	      0xe800000000	                          call 0x4000b9b	       302	rev-list.c	FUNCTION_9	IF_4	CALL_3
0x4000b9b	      0xbf00000000	                              mov edi, 0	       303	rev-list.c	FUNCTION_9	IF_4	CALL_4
0x4000ba0	      0xe800000000	                          call 0x4000ba5	       303	rev-list.c	FUNCTION_9	IF_4	CALL_4
0x4000ba5	        0x488d45c0	                   lea rax, [rbp - 0x40]	       306	rev-list.c	FUNCTION_9	CALL_5
0x4000ba9	          0x4889c6	                            mov rsi, rax	       306	rev-list.c	FUNCTION_9	CALL_5
0x4000bac	      0xbf00000000	                              mov edi, 0	       306	rev-list.c	FUNCTION_9	CALL_5
0x4000bb1	      0xe87efeffff	                  call sym.print_var_str	       306	rev-list.c	FUNCTION_9	CALL_5
0x4000bb6	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       307	rev-list.c	FUNCTION_9	CALL_6
0x4000bb9	          0x83e801	                              sub eax, 1	       307	rev-list.c	FUNCTION_9	CALL_6
0x4000bbc	            0x89c6	                            mov esi, eax	       307	rev-list.c	FUNCTION_9	CALL_6
0x4000bbe	      0xbf00000000	                              mov edi, 0	       307	rev-list.c	FUNCTION_9	CALL_6
0x4000bc3	      0xe899feffff	                  call sym.print_var_int	       307	rev-list.c	FUNCTION_9	CALL_6
0x4000bc8	          0x8b4590	             mov eax, dword [rbp - 0x70]	       308	rev-list.c	FUNCTION_9	CALL_7
0x4000bcb	          0x2b4594	             sub eax, dword [rbp - 0x6c]	       308	rev-list.c	FUNCTION_9	CALL_7
0x4000bce	          0x83e801	                              sub eax, 1	       308	rev-list.c	FUNCTION_9	CALL_7
0x4000bd1	            0x89c6	                            mov esi, eax	       308	rev-list.c	FUNCTION_9	CALL_7
0x4000bd3	      0xbf00000000	                              mov edi, 0	       308	rev-list.c	FUNCTION_9	CALL_7
0x4000bd8	      0xe884feffff	                  call sym.print_var_int	       308	rev-list.c	FUNCTION_9	CALL_7
0x4000bdd	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       309	rev-list.c	FUNCTION_9	CALL_8
0x4000be0	          0x83e801	                              sub eax, 1	       309	rev-list.c	FUNCTION_9	CALL_8
0x4000be3	            0x89c6	                            mov esi, eax	       309	rev-list.c	FUNCTION_9	CALL_8
0x4000be5	      0xbf00000000	                              mov edi, 0	       309	rev-list.c	FUNCTION_9	CALL_8
0x4000bea	      0xe872feffff	                  call sym.print_var_int	       309	rev-list.c	FUNCTION_9	CALL_8
0x4000bef	          0x8b4590	             mov eax, dword [rbp - 0x70]	       310	rev-list.c	FUNCTION_9	CALL_9
0x4000bf2	            0x89c6	                            mov esi, eax	       310	rev-list.c	FUNCTION_9	CALL_9
0x4000bf4	      0xbf00000000	                              mov edi, 0	       310	rev-list.c	FUNCTION_9	CALL_9
0x4000bf9	      0xe863feffff	                  call sym.print_var_int	       310	rev-list.c	FUNCTION_9	CALL_9
0x4000bfe	          0x8b4590	             mov eax, dword [rbp - 0x70]	       311	rev-list.c	FUNCTION_9	CALL_11
0x4000c01	            0x89c7	                            mov edi, eax	       311	rev-list.c	FUNCTION_9	CALL_11
0x4000c03	      0xe800000000	                          call 0x4000c08	       311	rev-list.c	FUNCTION_9	CALL_11
0x4000c08	            0x89c6	                            mov esi, eax	       311	rev-list.c	FUNCTION_9	CALL_11
0x4000c0a	      0xbf00000000	                              mov edi, 0	       311	rev-list.c	FUNCTION_9	CALL_11
0x4000c0f	      0xe84dfeffff	                  call sym.print_var_int	       311	rev-list.c	FUNCTION_9	CALL_11
0x4000c14	      0xb800000000	                              mov eax, 0	       313	rev-list.c	FUNCTION_9
0x4000c19	        0x488b4df8	                mov rcx, qword [rbp - 8]	       314	rev-list.c	FUNCTION_9
0x4000c1d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       314	rev-list.c	FUNCTION_9
0x4000c26	            0x7405	                            je 0x4000c2d	       314	rev-list.c	FUNCTION_9
0x4000c28	      0xe800000000	                          call 0x4000c2d	       314	rev-list.c	FUNCTION_9
0x4000c2d	              0xc9	                                   leave	       314	rev-list.c	FUNCTION_9
0x4000c2e	              0xc3	                                     ret	       314	rev-list.c	FUNCTION_9
skip_prefix	IF,1:functions,0:WHILE,0:CALL,0:FOR,0:DO,1:ELSE,0:SWITCH,0	27
0x4000040	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_27
0x4000041	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_27
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_27
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_27
0x400004c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_27
0x4000050	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x4000054	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x4000057	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x4000059	            0x7512	                           jne 0x400006d	       484	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x400005b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x400005f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x4000063	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x4000066	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x400006b	            0xeb27	                           jmp 0x4000094	       486	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x400006d	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_27	DO_1
0x4000071	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_27	DO_1
0x4000075	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_27	DO_1
0x4000079	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_27	DO_1
0x400007c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_27	DO_1
0x4000080	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_27	DO_1
0x4000084	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_27	DO_1
0x4000088	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_27	DO_1
0x400008b	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_27	DO_1
0x400008d	            0x74c1	                            je 0x4000050	       488	git-compat-util.h	FUNCTION_27	DO_1
0x400008f	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_27
0x4000094	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_27
0x4000095	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_27
oidmap_iter_next	IF,0:functions,0:WHILE,0:CALL,1:FOR,0:DO,0:ELSE,0:SWITCH,0	9
0x40000e8	              0x55	                                push rbp	        79	oidmap.h	FUNCTION_15
0x40000e9	          0x4889e5	                            mov rbp, rsp	        79	oidmap.h	FUNCTION_15
0x40000ec	        0x4883ec10	                           sub rsp, 0x10	        79	oidmap.h	FUNCTION_15
0x40000f0	        0x48897df8	                mov qword [rbp - 8], rdi	        79	oidmap.h	FUNCTION_15
0x40000f4	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	oidmap.h	FUNCTION_15	CALL_1
0x40000f8	          0x4889c7	                            mov rdi, rax	        80	oidmap.h	FUNCTION_15	CALL_1
0x40000fb	      0xe800000000	                          call 0x4000100	        80	oidmap.h	FUNCTION_15	CALL_1
0x4000100	              0xc9	                                   leave	        81	oidmap.h	FUNCTION_15
0x4000101	              0xc3	                                     ret	        81	oidmap.h	FUNCTION_15
_	IF,1:functions,0:WHILE,0:CALL,0:FOR,0:DO,0:ELSE,0:SWITCH,0	15
0x4000096	              0x55	                                push rbp	        51	gettext.h	FUNCTION_50
0x4000097	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_50
0x400009a	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_50
0x400009e	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_50
0x40000a2	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_50	IF_1
0x40000a6	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_50	IF_1
0x40000a9	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_50	IF_1
0x40000ab	            0x7507	                           jne 0x40000b4	        52	gettext.h	FUNCTION_50	IF_1
0x40000ad	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_50	IF_1
0x40000b2	            0xeb0c	                           jmp 0x40000c0	        53	gettext.h	FUNCTION_50	IF_1
0x40000b4	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_50
0x40000b8	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_50
0x40000bb	      0xe800000000	                          call 0x40000c0	        54	gettext.h	FUNCTION_50
0x40000c0	              0xc9	                                   leave	        55	gettext.h	FUNCTION_50
0x40000c1	              0xc3	                                     ret	        55	gettext.h	FUNCTION_50
