show_one	IF,5:ELSE,1:SWITCH,0:functions,0:WHILE,0:DO,0:CALL,9:FOR,0	60
0x4000249	              0x55	                                push rbp	        21	show-ref.c	FUNCTION_1
0x400024a	              0x53	                                push rbx	        21	show-ref.c	FUNCTION_1
0x400024b	        0x4883ec28	                           sub rsp, 0x28	        21	show-ref.c	FUNCTION_1
0x400024f	          0x4889fd	                            mov rbp, rdi	        21	show-ref.c	FUNCTION_1
0x4000252	          0x4889f3	                            mov rbx, rsi	        21	show-ref.c	FUNCTION_1
0x4000255	    0x64488b042528	                mov rax, qword fs:[0x28]	        21	show-ref.c	FUNCTION_1
0x400025e	      0x4889442418	             mov qword [rsp + 0x18], rax	        21	show-ref.c	FUNCTION_1
0x4000263	            0x31c0	                            xor eax, eax	        21	show-ref.c	FUNCTION_1
0x4000265	      0xbe00000000	                              mov esi, 0	      1251	cache.h	FUNCTION_30	CALL_1
0x400026a	          0x4889df	                            mov rdi, rbx	      1251	cache.h	FUNCTION_30	CALL_1
0x400026d	      0xe800000000	                          call 0x4000272	      1251	cache.h	FUNCTION_30	CALL_1
0x4000272	            0x85c0	                           test eax, eax	        25	show-ref.c	FUNCTION_1	IF_1	CALL_1
0x4000274	            0x751d	                           jne 0x4000293	        25	show-ref.c	FUNCTION_1	IF_1	CALL_1
0x4000276	          0x4889df	                            mov rdi, rbx	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000279	      0xe800000000	                          call 0x400027e	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x400027e	          0x4889c2	                            mov rdx, rax	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000281	          0x4889ee	                            mov rsi, rbp	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000284	      0xbf00000000	                              mov edi, 0	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000289	      0xb800000000	                              mov eax, 0	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x400028e	      0xe800000000	                          call 0x4000293	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000293	    0x833d00000000	               cmp dword [0x0400029a], 0	        29	show-ref.c	FUNCTION_1	IF_2
0x400029a	            0x757b	                           jne 0x4000317	        29	show-ref.c	FUNCTION_1	IF_2
0x400029c	    0x8b3500000000	            mov esi, dword [0x040002a2] 	        32	show-ref.c	FUNCTION_1	CALL_4
0x40002a2	          0x4889df	                            mov rdi, rbx	        32	show-ref.c	FUNCTION_1	CALL_4
0x40002a5	      0xe800000000	                          call 0x40002aa	        32	show-ref.c	FUNCTION_1	CALL_4
0x40002aa	    0x833d00000000	               cmp dword [0x040002b1], 0	        33	show-ref.c	FUNCTION_1	IF_3
0x40002b1	            0x740a	                            je 0x40002bd	        33	show-ref.c	FUNCTION_1	IF_3
0x40002b3	          0x4889c7	                            mov rdi, rax	       104	stdio2.h	FUNCTION_40	CALL_2
0x40002b6	      0xe800000000	                          call 0x40002bb	       104	stdio2.h	FUNCTION_40	CALL_2
0x40002bb	            0xeb1a	                           jmp 0x40002d7	       104	stdio2.h	FUNCTION_40	CALL_2
0x40002bd	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	FUNCTION_40	CALL_2
0x40002c0	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	FUNCTION_40	CALL_2
0x40002c3	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_40	CALL_2
0x40002c8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_40	CALL_2
0x40002cd	      0xb800000000	                              mov eax, 0	       104	stdio2.h	FUNCTION_40	CALL_2
0x40002d2	      0xe800000000	                          call 0x40002d7	       104	stdio2.h	FUNCTION_40	CALL_2
0x40002d7	    0x833d00000000	               cmp dword [0x040002de], 0	        38	show-ref.c	FUNCTION_1	IF_4
0x40002de	            0x7437	                            je 0x4000317	        38	show-ref.c	FUNCTION_1	IF_4
0x40002e0	          0x4889e6	                            mov rsi, rsp	        41	show-ref.c	FUNCTION_1	IF_5	CALL_7
0x40002e3	          0x4889ef	                            mov rdi, rbp	        41	show-ref.c	FUNCTION_1	IF_5	CALL_7
0x40002e6	      0xe800000000	                          call 0x40002eb	        41	show-ref.c	FUNCTION_1	IF_5	CALL_7
0x40002eb	            0x85c0	                           test eax, eax	        41	show-ref.c	FUNCTION_1	IF_5	CALL_7
0x40002ed	            0x7528	                           jne 0x4000317	        41	show-ref.c	FUNCTION_1	IF_5	CALL_7
0x40002ef	    0x8b3500000000	            mov esi, dword [0x040002f5] 	        42	show-ref.c	FUNCTION_1	IF_5	CALL_8
0x40002f5	          0x4889e7	                            mov rdi, rsp	        42	show-ref.c	FUNCTION_1	IF_5	CALL_8
0x40002f8	      0xe800000000	                          call 0x40002fd	        42	show-ref.c	FUNCTION_1	IF_5	CALL_8
0x40002fd	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	FUNCTION_40	CALL_2
0x4000300	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	FUNCTION_40	CALL_2
0x4000303	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_40	CALL_2
0x4000308	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_40	CALL_2
0x400030d	      0xb800000000	                              mov eax, 0	       104	stdio2.h	FUNCTION_40	CALL_2
0x4000312	      0xe800000000	                          call 0x4000317	       104	stdio2.h	FUNCTION_40	CALL_2
0x4000317	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        45	show-ref.c	FUNCTION_1
0x400031c	    0x644833042528	                xor rax, qword fs:[0x28]	        45	show-ref.c	FUNCTION_1
0x4000325	            0x7405	                            je 0x400032c	        45	show-ref.c	FUNCTION_1
0x4000327	      0xe800000000	                          call 0x400032c	        45	show-ref.c	FUNCTION_1
0x400032c	        0x4883c428	                           add rsp, 0x28	        45	show-ref.c	FUNCTION_1
0x4000330	              0x5b	                                 pop rbx	        45	show-ref.c	FUNCTION_1
0x4000331	              0x5d	                                 pop rbp	        45	show-ref.c	FUNCTION_1
0x4000332	              0xc3	                                     ret	        45	show-ref.c	FUNCTION_1
exclude_existing	IF,8:ELSE,0:SWITCH,0:functions,0:WHILE,1:DO,0:CALL,11:FOR,1	125
0x4000093	            0x4157	                                push r15	       104	show-ref.c	FUNCTION_4
0x4000095	            0x4156	                                push r14	       104	show-ref.c	FUNCTION_4
0x4000097	            0x4155	                                push r13	       104	show-ref.c	FUNCTION_4
0x4000099	            0x4154	                                push r12	       104	show-ref.c	FUNCTION_4
0x400009b	              0x55	                                push rbp	       104	show-ref.c	FUNCTION_4
0x400009c	              0x53	                                push rbx	       104	show-ref.c	FUNCTION_4
0x400009d	    0x4881ec280400	                          sub rsp, 0x428	       104	show-ref.c	FUNCTION_4
0x40000a4	          0x4989fc	                            mov r12, rdi	       104	show-ref.c	FUNCTION_4
0x40000a7	    0x64488b042528	                mov rax, qword fs:[0x28]	       104	show-ref.c	FUNCTION_4
0x40000b0	    0x488984241804	            mov qword [rsp + 0x418], rax	       104	show-ref.c	FUNCTION_4
0x40000b8	            0x31c0	                            xor eax, eax	       104	show-ref.c	FUNCTION_4
0x40000ba	          0x4885ff	                           test rdi, rdi	       107	show-ref.c	FUNCTION_4	CALL_1
0x40000bd	            0x7415	                            je 0x40000d4	       107	show-ref.c	FUNCTION_4	CALL_1
0x40000bf	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       107	show-ref.c	FUNCTION_4	CALL_1
0x40000c6	            0xf2ae	              repne scasb al, byte [rdi]	       107	show-ref.c	FUNCTION_4	CALL_1
0x40000c8	          0x4889c8	                            mov rax, rcx	       107	show-ref.c	FUNCTION_4	CALL_1
0x40000cb	          0x48f7d0	                                 not rax	       107	show-ref.c	FUNCTION_4	CALL_1
0x40000ce	        0x448d70ff	                     lea r14d, [rax - 1]	       107	show-ref.c	FUNCTION_4	CALL_1
0x40000d2	            0xeb06	                           jmp 0x40000da	       107	show-ref.c	FUNCTION_4	CALL_1
0x40000d4	    0x41be00000000	                             mov r14d, 0	       107	show-ref.c	FUNCTION_4	CALL_1
0x40000da	      0xbe00000000	                              mov esi, 0	       109	show-ref.c	FUNCTION_4	CALL_2
0x40000df	      0xbf00000000	                              mov edi, 0	       109	show-ref.c	FUNCTION_4	CALL_2
0x40000e4	      0xe800000000	                          call 0x40000e9	       109	show-ref.c	FUNCTION_4	CALL_2
0x40000e9	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	       263	stdio2.h	FUNCTION_51	CALL_8
0x40000ee	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x40000f5	    0x41bd00000000	                             mov r13d, 0	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x40000fb	          0x4963c6	                        movsxd rax, r14d	       127	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_6	CALL_7
0x40000fe	      0x4889442408	                mov qword [rsp + 8], rax	       127	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_6	CALL_7
0x4000103	      0xe9fa000000	                           jmp 0x4000202	       110	show-ref.c	FUNCTION_4	WHILE_1	CALL_3
0x4000108	          0x4c89f9	                            mov rcx, r15	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x400010b	          0x4889ef	                            mov rdi, rbp	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x400010e	          0x4489e8	                           mov eax, r13d	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000111	            0xf2ae	              repne scasb al, byte [rdi]	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000113	          0x48f7d1	                                 not rcx	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000116	        0x4883e901	                              sub rcx, 1	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x400011a	            0x89ca	                            mov edx, ecx	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x400011c	            0x85c9	                           test ecx, ecx	       114	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x400011e	            0x7e14	                           jle 0x4000134	       114	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x4000120	          0x83e901	                              sub ecx, 1	       114	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x4000123	          0x4863c1	                         movsxd rax, ecx	       114	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x4000126	      0x807c04100a	       cmp byte [rsp + rax + 0x10], 0xa 	       114	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x400012b	            0x7507	                           jne 0x4000134	       114	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x400012d	      0xc644041000	          mov byte [rsp + rax + 0x10], 0	       115	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x4000132	            0x89ca	                            mov edx, ecx	       115	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x4000134	          0x83fa02	                              cmp edx, 2	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000137	            0x7e2a	                           jle 0x4000163	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000139	          0x4863c2	                         movsxd rax, edx	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x400013c	      0x488d4405fd	                lea rax, [rbp + rax - 3]	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000141	          0x80385e	                    cmp byte [rax], 0x5e	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000144	            0x751d	                           jne 0x4000163	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000146	        0x8078017b	                cmp byte [rax + 1], 0x7b	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x400014a	            0x7517	                           jne 0x4000163	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x400014c	        0x8078027d	                cmp byte [rax + 2], 0x7d	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000150	            0x7511	                           jne 0x4000163	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000152	        0x80780300	                   cmp byte [rax + 3], 0	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000156	            0x750b	                           jne 0x4000163	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000158	          0x83ea03	                              sub edx, 3	       117	show-ref.c	FUNCTION_4	WHILE_1	IF_2
0x400015b	          0x4863c2	                         movsxd rax, edx	       118	show-ref.c	FUNCTION_4	WHILE_1	IF_2
0x400015e	      0xc644041000	          mov byte [rsp + rax + 0x10], 0	       118	show-ref.c	FUNCTION_4	WHILE_1	IF_2
0x4000163	          0x4863d2	                         movsxd rdx, edx	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x4000166	          0x4801ea	                            add rdx, rbp	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x4000169	          0x4839ea	                            cmp rdx, rbp	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x400016c	            0x762f	                           jbe 0x400019d	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x400016e	         0xfb642ff	               movzx eax, byte [rdx - 1]	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x4000172	    0xf68000000000	                      test byte [rax], 1	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x4000179	            0x7527	                           jne 0x40001a2	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x400017b	          0x4889d3	                            mov rbx, rdx	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x400017e	            0xeb0d	                           jmp 0x400018d	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x4000180	         0xfb643ff	               movzx eax, byte [rbx - 1]	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x4000184	    0xf68000000000	                      test byte [rax], 1	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x400018b	            0x7518	                           jne 0x40001a5	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x400018d	        0x4883eb01	                              sub rbx, 1	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x4000191	          0x4839eb	                            cmp rbx, rbp	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x4000194	            0x75ea	                           jne 0x4000180	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x4000196	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x400019b	            0xeb08	                           jmp 0x40001a5	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x400019d	          0x4889d3	                            mov rbx, rdx	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x40001a0	            0xeb03	                           jmp 0x40001a5	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x40001a2	          0x4889d3	                            mov rbx, rdx	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x40001a5	          0x4d85e4	                           test r12, r12	       123	show-ref.c	FUNCTION_4	WHILE_1	IF_4
0x40001a8	            0x741c	                            je 0x40001c6	       123	show-ref.c	FUNCTION_4	WHILE_1	IF_4
0x40001aa	          0x4829da	                            sub rdx, rbx	       125	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_5
0x40001ad	          0x4139d6	                           cmp r14d, edx	       125	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_5
0x40001b0	            0x7f50	                            jg 0x4000202	       125	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_5
0x40001b2	      0x488b542408	                mov rdx, qword [rsp + 8]	       127	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_6	CALL_7
0x40001b7	          0x4c89e6	                            mov rsi, r12	       127	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_6	CALL_7
0x40001ba	          0x4889df	                            mov rdi, rbx	       127	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_6	CALL_7
0x40001bd	      0xe800000000	                          call 0x40001c2	       127	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_6	CALL_7
0x40001c2	            0x85c0	                           test eax, eax	       127	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_6	CALL_7
0x40001c4	            0x753c	                           jne 0x4000202	       127	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_6	CALL_7
0x40001c6	      0xbe00000000	                              mov esi, 0	       130	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_8
0x40001cb	          0x4889df	                            mov rdi, rbx	       130	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_8
0x40001ce	      0xe800000000	                          call 0x40001d3	       130	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_8
0x40001d3	            0x85c0	                           test eax, eax	       130	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_8
0x40001d5	            0x7412	                            je 0x40001e9	       130	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_8
0x40001d7	          0x4889de	                            mov rsi, rbx	       131	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_9
0x40001da	      0xbf00000000	                              mov edi, 0	       131	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_9
0x40001df	          0x4489e8	                           mov eax, r13d	       131	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_9
0x40001e2	      0xe800000000	                          call 0x40001e7	       131	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_9
0x40001e7	            0xeb19	                           jmp 0x4000202	       132	show-ref.c	FUNCTION_4	WHILE_1	IF_7
0x40001e9	          0x4889de	                            mov rsi, rbx	       134	show-ref.c	FUNCTION_4	WHILE_1	IF_8	CALL_10
0x40001ec	      0xbf00000000	                              mov edi, 0	       134	show-ref.c	FUNCTION_4	WHILE_1	IF_8	CALL_10
0x40001f1	      0xe800000000	                          call 0x40001f6	       134	show-ref.c	FUNCTION_4	WHILE_1	IF_8	CALL_10
0x40001f6	            0x85c0	                           test eax, eax	       134	show-ref.c	FUNCTION_4	WHILE_1	IF_8	CALL_10
0x40001f8	            0x7508	                           jne 0x4000202	       134	show-ref.c	FUNCTION_4	WHILE_1	IF_8	CALL_10
0x40001fa	          0x4889ef	                            mov rdi, rbp	       104	stdio2.h	FUNCTION_40	CALL_2
0x40001fd	      0xe800000000	                          call 0x4000202	       104	stdio2.h	FUNCTION_40	CALL_2
0x4000202	    0x488b15000000	            mov rdx, qword [0x04000209] 	       263	stdio2.h	FUNCTION_51	CALL_8
0x4000209	      0xbe00040000	                          mov esi, 0x400	       263	stdio2.h	FUNCTION_51	CALL_8
0x400020e	          0x4889ef	                            mov rdi, rbp	       263	stdio2.h	FUNCTION_51	CALL_8
0x4000211	      0xe800000000	                          call 0x4000216	       263	stdio2.h	FUNCTION_51	CALL_8
0x4000216	          0x4885c0	                           test rax, rax	       110	show-ref.c	FUNCTION_4	WHILE_1	CALL_3
0x4000219	     0xf85e9feffff	                           jne 0x4000108	       110	show-ref.c	FUNCTION_4	WHILE_1	CALL_3
0x400021f	    0x488bb4241804	           mov rsi, qword [rsp + 0x418] 	       139	show-ref.c	FUNCTION_4
0x4000227	    0x644833342528	                xor rsi, qword fs:[0x28]	       139	show-ref.c	FUNCTION_4
0x4000230	            0x7405	                            je 0x4000237	       139	show-ref.c	FUNCTION_4
0x4000232	      0xe800000000	                          call 0x4000237	       139	show-ref.c	FUNCTION_4
0x4000237	    0x4881c4280400	                          add rsp, 0x428	       139	show-ref.c	FUNCTION_4
0x400023e	              0x5b	                                 pop rbx	       139	show-ref.c	FUNCTION_4
0x400023f	              0x5d	                                 pop rbp	       139	show-ref.c	FUNCTION_4
0x4000240	            0x415c	                                 pop r12	       139	show-ref.c	FUNCTION_4
0x4000242	            0x415d	                                 pop r13	       139	show-ref.c	FUNCTION_4
0x4000244	            0x415e	                                 pop r14	       139	show-ref.c	FUNCTION_4
0x4000246	            0x415f	                                 pop r15	       139	show-ref.c	FUNCTION_4
0x4000248	              0xc3	                                     ret	       139	show-ref.c	FUNCTION_4
hash_callback	IF,1:ELSE,0:SWITCH,0:functions,0:WHILE,0:DO,0:CALL,1:FOR,0	8
0x4000057	    0xc70500000000	               mov dword [0x04000061], 1	       143	show-ref.c	FUNCTION_5
0x4000061	      0xb800000000	                              mov eax, 0	       146	show-ref.c	FUNCTION_5	IF_1
0x4000066	          0x4885f6	                           test rsi, rsi	       145	show-ref.c	FUNCTION_5	IF_1
0x4000069	            0x740d	                            je 0x4000078	       145	show-ref.c	FUNCTION_5	IF_1
0x400006b	        0x4883ec08	                              sub rsp, 8	       142	show-ref.c	FUNCTION_5
0x400006f	      0xe800000000	                          call 0x4000074	       147	show-ref.c	FUNCTION_5	CALL_1
0x4000074	        0x4883c408	                              add rsp, 8	       148	show-ref.c	FUNCTION_5
0x4000078	            0xf3c3	                                     ret	       148	show-ref.c	FUNCTION_5
add_existing	IF,0:ELSE,0:SWITCH,0:functions,0:WHILE,0:DO,0:CALL,1:FOR,0	7
0x400007a	        0x4883ec08	                              sub rsp, 8	        88	show-ref.c	FUNCTION_3
0x400007e	          0x4889fe	                            mov rsi, rdi	        88	show-ref.c	FUNCTION_3
0x4000081	          0x4889cf	                            mov rdi, rcx	        90	show-ref.c	FUNCTION_3	CALL_1
0x4000084	      0xe800000000	                          call 0x4000089	        90	show-ref.c	FUNCTION_3	CALL_1
0x4000089	      0xb800000000	                              mov eax, 0	        92	show-ref.c	FUNCTION_3
0x400008e	        0x4883c408	                              add rsp, 8	        92	show-ref.c	FUNCTION_3
0x4000092	              0xc3	                                     ret	        92	show-ref.c	FUNCTION_3
show_ref	IF,8:ELSE,0:SWITCH,0:functions,0:WHILE,1:DO,0:CALL,7:FOR,0	100
0x4000333	            0x4157	                                push r15	        49	show-ref.c	FUNCTION_2
0x4000335	            0x4156	                                push r14	        49	show-ref.c	FUNCTION_2
0x4000337	            0x4155	                                push r13	        49	show-ref.c	FUNCTION_2
0x4000339	            0x4154	                                push r12	        49	show-ref.c	FUNCTION_2
0x400033b	              0x55	                                push rbp	        49	show-ref.c	FUNCTION_2
0x400033c	              0x53	                                push rbx	        49	show-ref.c	FUNCTION_2
0x400033d	        0x4883ec18	                           sub rsp, 0x18	        49	show-ref.c	FUNCTION_2
0x4000341	          0x4989ff	                            mov r15, rdi	        49	show-ref.c	FUNCTION_2
0x4000344	      0x4889742408	                mov qword [rsp + 8], rsi	        49	show-ref.c	FUNCTION_2
0x4000349	    0x833d00000000	               cmp dword [0x04000350], 0	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000350	            0x741d	                            je 0x400036f	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000352	      0xbf00000000	                              mov edi, 0	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000357	      0xb905000000	                              mov ecx, 5	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x400035c	          0x4c89fe	                            mov rsi, r15	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x400035f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000361	           0xf97c2	                                 seta dl	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000364	           0xf92c0	                                 setb al	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000367	            0x38c2	                              cmp dl, al	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000369	     0xf84f1000000	                            je 0x4000460	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x400036f	    0x833d00000000	               cmp dword [0x04000376], 0	        53	show-ref.c	FUNCTION_2	IF_2
0x4000376	            0x750b	                           jne 0x4000383	        53	show-ref.c	FUNCTION_2	IF_2
0x4000378	    0x833d00000000	               cmp dword [0x0400037f], 0	        53	show-ref.c	FUNCTION_2	IF_2
0x400037f	            0x750b	                           jne 0x400038c	        53	show-ref.c	FUNCTION_2	IF_2
0x4000381	            0xeb4c	                           jmp 0x40003cf	        53	show-ref.c	FUNCTION_2	IF_2
0x4000383	    0x833d00000000	               cmp dword [0x0400038a], 0	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x400038a	            0x7421	                            je 0x40003ad	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x400038c	      0xbe00000000	                              mov esi, 0	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x4000391	          0x4c89ff	                            mov rdi, r15	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x4000394	      0xe800000000	                          call 0x4000399	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x4000399	            0x85c0	                           test eax, eax	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x400039b	           0xf95c3	                                setne bl	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x400039e	           0xfb6db	                           movzx ebx, bl	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x40003a1	    0x8b0500000000	            mov eax, dword [0x040003a7] 	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x40003a7	            0x85c0	                           test eax, eax	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x40003a9	            0x741c	                            je 0x40003c7	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x40003ab	            0xeb05	                           jmp 0x40003b2	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x40003ad	      0xbb00000000	                              mov ebx, 0	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x40003b2	      0xbe00000000	                              mov esi, 0	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x40003b7	          0x4c89ff	                            mov rdi, r15	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x40003ba	      0xe800000000	                          call 0x40003bf	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x40003bf	            0x85c0	                           test eax, eax	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x40003c1	           0xf95c0	                                setne al	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x40003c4	           0xfb6c0	                           movzx eax, al	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x40003c7	             0x9d8	                             or eax, ebx	        58	show-ref.c	FUNCTION_2	IF_2	IF_3
0x40003c9	     0xf84a5000000	                            je 0x4000474	        58	show-ref.c	FUNCTION_2	IF_2	IF_3
0x40003cf	    0x488b2d000000	            mov rbp, qword [0x040003d6] 	        61	show-ref.c	FUNCTION_2	IF_4
0x40003d6	          0x4885ed	                           test rbp, rbp	        61	show-ref.c	FUNCTION_2	IF_4
0x40003d9	     0xf8481000000	                            je 0x4000460	        61	show-ref.c	FUNCTION_2	IF_4
0x40003df	      0xb800000000	                              mov eax, 0	        62	show-ref.c	FUNCTION_2	IF_4	CALL_4
0x40003e4	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        62	show-ref.c	FUNCTION_2	IF_4	CALL_4
0x40003eb	          0x4c89ff	                            mov rdi, r15	        62	show-ref.c	FUNCTION_2	IF_4	CALL_4
0x40003ee	            0xf2ae	              repne scasb al, byte [rdi]	        62	show-ref.c	FUNCTION_2	IF_4	CALL_4
0x40003f0	          0x48f7d1	                                 not rcx	        62	show-ref.c	FUNCTION_2	IF_4	CALL_4
0x40003f3	        0x448d61ff	                     lea r12d, [rcx - 1]	        62	show-ref.c	FUNCTION_2	IF_4	CALL_4
0x40003f7	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	        65	show-ref.c	FUNCTION_2	IF_4	WHILE_1	CALL_5
0x40003fe	    0x41bd00000000	                             mov r13d, 0	        65	show-ref.c	FUNCTION_2	IF_4	WHILE_1	CALL_5
0x4000404	          0x4963c4	                        movsxd rax, r12d	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x4000407	        0x48890424	                    mov qword [rsp], rax	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x400040b	            0xeb44	                           jmp 0x4000451	        64	show-ref.c	FUNCTION_2	IF_4	WHILE_1
0x400040d	          0x4c89f1	                            mov rcx, r14	        65	show-ref.c	FUNCTION_2	IF_4	WHILE_1	CALL_5
0x4000410	          0x4c89c7	                             mov rdi, r8	        65	show-ref.c	FUNCTION_2	IF_4	WHILE_1	CALL_5
0x4000413	          0x4489e8	                           mov eax, r13d	        65	show-ref.c	FUNCTION_2	IF_4	WHILE_1	CALL_5
0x4000416	            0xf2ae	              repne scasb al, byte [rdi]	        65	show-ref.c	FUNCTION_2	IF_4	WHILE_1	CALL_5
0x4000418	          0x48f7d1	                                 not rcx	        65	show-ref.c	FUNCTION_2	IF_4	WHILE_1	CALL_5
0x400041b	        0x488d59ff	                      lea rbx, [rcx - 1]	        65	show-ref.c	FUNCTION_2	IF_4	WHILE_1	CALL_5
0x400041f	          0x4139dc	                           cmp r12d, ebx	        66	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_5
0x4000422	            0x7c2d	                            jl 0x4000451	        66	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_5
0x4000424	          0x4863d3	                         movsxd rdx, ebx	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x4000427	        0x488b3424	                    mov rsi, qword [rsp]	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x400042b	          0x4829d6	                            sub rsi, rdx	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x400042e	          0x4c01fe	                            add rsi, r15	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x4000431	          0x4c89c7	                             mov rdi, r8	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x4000434	      0xe800000000	                          call 0x4000439	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x4000439	            0x85c0	                           test eax, eax	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x400043b	            0x7514	                           jne 0x4000451	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x400043d	          0x4139dc	                           cmp r12d, ebx	        70	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_7
0x4000440	            0x741e	                            je 0x4000460	        70	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_7
0x4000442	          0x4489e0	                           mov eax, r12d	        72	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_8
0x4000445	            0x29d8	                            sub eax, ebx	        72	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_8
0x4000447	            0x4898	                                    cdqe	        72	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_8
0x4000449	    0x41807c07ff2f	         cmp byte [r15 + rax - 1], 0x2f 	        72	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_8
0x400044f	            0x740f	                            je 0x4000460	        72	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_8
0x4000451	        0x4883c508	                              add rbp, 8	        64	show-ref.c	FUNCTION_2	IF_4	WHILE_1
0x4000455	        0x4c8b45f8	                 mov r8, qword [rbp - 8]	        64	show-ref.c	FUNCTION_2	IF_4	WHILE_1
0x4000459	          0x4d85c0	                             test r8, r8	        64	show-ref.c	FUNCTION_2	IF_4	WHILE_1
0x400045c	            0x75af	                           jne 0x400040d	        64	show-ref.c	FUNCTION_2	IF_4	WHILE_1
0x400045e	            0xeb14	                           jmp 0x4000474	        64	show-ref.c	FUNCTION_2	IF_4	WHILE_1
0x4000460	    0x830500000000	               add dword [0x04000467], 1	        79	show-ref.c	FUNCTION_2
0x4000467	      0x488b742408	                mov rsi, qword [rsp + 8]	        81	show-ref.c	FUNCTION_2	CALL_7
0x400046c	          0x4c89ff	                            mov rdi, r15	        81	show-ref.c	FUNCTION_2	CALL_7
0x400046f	      0xe8d5fdffff	                       call sym.show_one	        81	show-ref.c	FUNCTION_2	CALL_7
0x4000474	      0xb800000000	                              mov eax, 0	        84	show-ref.c	FUNCTION_2
0x4000479	        0x4883c418	                           add rsp, 0x18	        84	show-ref.c	FUNCTION_2
0x400047d	              0x5b	                                 pop rbx	        84	show-ref.c	FUNCTION_2
0x400047e	              0x5d	                                 pop rbp	        84	show-ref.c	FUNCTION_2
0x400047f	            0x415c	                                 pop r12	        84	show-ref.c	FUNCTION_2
0x4000481	            0x415d	                                 pop r13	        84	show-ref.c	FUNCTION_2
0x4000483	            0x415e	                                 pop r14	        84	show-ref.c	FUNCTION_2
0x4000485	            0x415f	                                 pop r15	        84	show-ref.c	FUNCTION_2
0x4000487	              0xc3	                                     ret	        84	show-ref.c	FUNCTION_2
cmd_show_ref	IF,9:ELSE,2:SWITCH,0:functions,0:WHILE,1:DO,0:CALL,11:FOR,0	102
0x4000488	              0x55	                                push rbp	       182	show-ref.c	FUNCTION_7
0x4000489	              0x53	                                push rbx	       182	show-ref.c	FUNCTION_7
0x400048a	        0x4883ec28	                           sub rsp, 0x28	       182	show-ref.c	FUNCTION_7
0x400048e	          0x4889f5	                            mov rbp, rsi	       182	show-ref.c	FUNCTION_7
0x4000491	    0x64488b042528	                mov rax, qword fs:[0x28]	       182	show-ref.c	FUNCTION_7
0x400049a	      0x4889442418	             mov qword [rsp + 0x18], rax	       182	show-ref.c	FUNCTION_7
0x400049f	            0x31c0	                            xor eax, eax	       182	show-ref.c	FUNCTION_7
0x40004a1	    0x41b900000000	                              mov r9d, 0	       183	show-ref.c	FUNCTION_7	CALL_1
0x40004a7	    0x41b800000000	                              mov r8d, 0	       183	show-ref.c	FUNCTION_7	CALL_1
0x40004ad	      0xb900000000	                              mov ecx, 0	       183	show-ref.c	FUNCTION_7	CALL_1
0x40004b2	      0xe800000000	                          call 0x40004b7	       183	show-ref.c	FUNCTION_7	CALL_1
0x40004b7	    0x8b1d00000000	            mov ebx, dword [0x040004bd] 	       186	show-ref.c	FUNCTION_7	IF_1
0x40004bd	            0x85db	                           test ebx, ebx	       186	show-ref.c	FUNCTION_7	IF_1
0x40004bf	            0x7413	                            je 0x40004d4	       186	show-ref.c	FUNCTION_7	IF_1
0x40004c1	    0x488b3d000000	            mov rdi, qword [0x040004c8] 	       187	show-ref.c	FUNCTION_7	CALL_2
0x40004c8	      0xe8c6fbffff	               call sym.exclude_existing	       187	show-ref.c	FUNCTION_7	CALL_2
0x40004cd	            0x89c3	                            mov ebx, eax	       187	show-ref.c	FUNCTION_7	CALL_2
0x40004cf	      0xe949010000	                           jmp 0x400061d	       187	show-ref.c	FUNCTION_7	CALL_2
0x40004d4	    0x48892d000000	            mov qword [0x040004db], rbp 	       189	show-ref.c	FUNCTION_7
0x40004db	        0x488b7d00	                    mov rdi, qword [rbp]	       190	show-ref.c	FUNCTION_7	IF_2
0x40004df	          0x4885ff	                           test rdi, rdi	       190	show-ref.c	FUNCTION_7	IF_2
0x40004e2	            0x751a	                           jne 0x40004fe	       190	show-ref.c	FUNCTION_7	IF_2
0x40004e4	    0x48c705000000	               mov qword [0x040004ef], 0	       191	show-ref.c	FUNCTION_7	IF_2
0x40004ef	    0x833d00000000	               cmp dword [0x040004f6], 0	       193	show-ref.c	FUNCTION_7	IF_3
0x40004f6	     0xf84c4000000	                            je 0x40005c0	       193	show-ref.c	FUNCTION_7	IF_3
0x40004fc	            0xeb12	                           jmp 0x4000510	       193	show-ref.c	FUNCTION_7	IF_3
0x40004fe	    0x833d00000000	               cmp dword [0x04000505], 0	       193	show-ref.c	FUNCTION_7	IF_3
0x4000505	     0xf84b5000000	                            je 0x40005c0	       193	show-ref.c	FUNCTION_7	IF_3
0x400050b	          0x4885ed	                           test rbp, rbp	       194	show-ref.c	FUNCTION_7	IF_3	IF_4
0x400050e	            0x750f	                           jne 0x400051f	       194	show-ref.c	FUNCTION_7	IF_3	IF_4
0x4000510	      0xbf00000000	                              mov edi, 0	       195	show-ref.c	FUNCTION_7	IF_3	CALL_3
0x4000515	      0xb800000000	                              mov eax, 0	       195	show-ref.c	FUNCTION_7	IF_3	CALL_3
0x400051a	      0xe800000000	                          call 0x400051f	       195	show-ref.c	FUNCTION_7	IF_3	CALL_3
0x400051f	      0xbe00000000	                              mov esi, 0	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000524	      0xe800000000	                          call 0x4000529	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000529	            0x85c0	                           test eax, eax	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x400052b	            0x7520	                           jne 0x400054d	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x400052d	    0x488b05000000	            mov rax, qword [0x04000534] 	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000534	          0x488b30	                    mov rsi, qword [rax]	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000537	      0xbf00000000	                              mov edi, 0	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x400053c	      0xb905000000	                              mov ecx, 5	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000541	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000543	           0xf97c2	                                 seta dl	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000546	           0xf92c0	                                 setb al	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000549	            0x38c2	                              cmp dl, al	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x400054b	            0x754a	                           jne 0x4000597	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x400054d	          0x4889e6	                            mov rsi, rsp	       200	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_6
0x4000550	    0x488b05000000	            mov rax, qword [0x04000557] 	       200	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_6
0x4000557	          0x488b38	                    mov rdi, qword [rax]	       200	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_6
0x400055a	      0xe800000000	                          call 0x400055f	       200	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_6
0x400055f	            0x89c3	                            mov ebx, eax	       200	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_6
0x4000561	            0x85c0	                           test eax, eax	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000563	            0x7532	                           jne 0x4000597	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000565	          0x4889e6	                            mov rsi, rsp	       201	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_7
0x4000568	    0x488b05000000	            mov rax, qword [0x0400056f] 	       201	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_7
0x400056f	          0x488b38	                    mov rdi, qword [rax]	       201	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_7
0x4000572	      0xe8d2fcffff	                       call sym.show_one	       201	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_7
0x4000577	    0x488b05000000	            mov rax, qword [0x0400057e] 	       207	show-ref.c	FUNCTION_7	IF_3	WHILE_1
0x400057e	        0x488d5008	                      lea rdx, [rax + 8]	       207	show-ref.c	FUNCTION_7	IF_3	WHILE_1
0x4000582	    0x488915000000	            mov qword [0x04000589], rdx 	       207	show-ref.c	FUNCTION_7	IF_3	WHILE_1
0x4000589	        0x488b7808	                mov rdi, qword [rax + 8]	       196	show-ref.c	FUNCTION_7	IF_3	WHILE_1
0x400058d	          0x4885ff	                           test rdi, rdi	       196	show-ref.c	FUNCTION_7	IF_3	WHILE_1
0x4000590	            0x758d	                           jne 0x400051f	       196	show-ref.c	FUNCTION_7	IF_3	WHILE_1
0x4000592	      0xe986000000	                           jmp 0x400061d	       196	show-ref.c	FUNCTION_7	IF_3	WHILE_1
0x4000597	    0x833d00000000	               cmp dword [0x0400059e], 0	       203	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x400059e	            0x7519	                           jne 0x40005b9	       203	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x40005a0	    0x488b05000000	            mov rax, qword [0x040005a7] 	       204	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x40005a7	          0x488b30	                    mov rsi, qword [rax]	       204	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x40005aa	      0xbf00000000	                              mov edi, 0	       204	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x40005af	      0xb800000000	                              mov eax, 0	       204	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x40005b4	      0xe800000000	                          call 0x40005b9	       204	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x40005b9	      0xbb01000000	                              mov ebx, 1	       206	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_2
0x40005be	            0xeb5d	                           jmp 0x400061d	       206	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_2
0x40005c0	    0x833d00000000	               cmp dword [0x040005c7], 0	       212	show-ref.c	FUNCTION_7	IF_7
0x40005c7	            0x740f	                            je 0x40005d8	       212	show-ref.c	FUNCTION_7	IF_7
0x40005c9	      0xbe00000000	                              mov esi, 0	       213	show-ref.c	FUNCTION_7	CALL_9
0x40005ce	      0xbf00000000	                              mov edi, 0	       213	show-ref.c	FUNCTION_7	CALL_9
0x40005d3	      0xe800000000	                          call 0x40005d8	       213	show-ref.c	FUNCTION_7	CALL_9
0x40005d8	      0xbe00000000	                              mov esi, 0	       214	show-ref.c	FUNCTION_7	CALL_10
0x40005dd	      0xbf00000000	                              mov edi, 0	       214	show-ref.c	FUNCTION_7	CALL_10
0x40005e2	      0xe800000000	                          call 0x40005e7	       214	show-ref.c	FUNCTION_7	CALL_10
0x40005e7	    0x833d00000000	               cmp dword [0x040005ee], 0	       215	show-ref.c	FUNCTION_7	IF_8
0x40005ee	            0x752d	                           jne 0x400061d	       215	show-ref.c	FUNCTION_7	IF_8
0x40005f0	    0x833d00000000	               cmp dword [0x040005f7], 0	       216	show-ref.c	FUNCTION_7	IF_8	IF_9
0x40005f7	            0x7418	                            je 0x4000611	       216	show-ref.c	FUNCTION_7	IF_8	IF_9
0x40005f9	    0x833d00000000	               cmp dword [0x04000600], 0	       216	show-ref.c	FUNCTION_7	IF_8	IF_9
0x4000600	            0x7516	                           jne 0x4000618	       216	show-ref.c	FUNCTION_7	IF_8	IF_9
0x4000602	      0xbf00000000	                              mov edi, 0	       217	show-ref.c	FUNCTION_7	IF_8	CALL_11
0x4000607	      0xb800000000	                              mov eax, 0	       217	show-ref.c	FUNCTION_7	IF_8	CALL_11
0x400060c	      0xe800000000	                          call 0x4000611	       217	show-ref.c	FUNCTION_7	IF_8	CALL_11
0x4000611	      0xbb01000000	                              mov ebx, 1	       218	show-ref.c	FUNCTION_7	IF_8
0x4000616	            0xeb05	                           jmp 0x400061d	       218	show-ref.c	FUNCTION_7	IF_8
0x4000618	      0xbb01000000	                              mov ebx, 1	       218	show-ref.c	FUNCTION_7	IF_8
0x400061d	            0x89d8	                            mov eax, ebx	       221	show-ref.c	FUNCTION_7
0x400061f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       221	show-ref.c	FUNCTION_7
0x4000624	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       221	show-ref.c	FUNCTION_7
0x400062d	            0x7405	                            je 0x4000634	       221	show-ref.c	FUNCTION_7
0x400062f	      0xe800000000	                          call 0x4000634	       221	show-ref.c	FUNCTION_7
0x4000634	        0x4883c428	                           add rsp, 0x28	       221	show-ref.c	FUNCTION_7
0x4000638	              0x5b	                                 pop rbx	       221	show-ref.c	FUNCTION_7
0x4000639	              0x5d	                                 pop rbp	       221	show-ref.c	FUNCTION_7
0x400063a	              0xc3	                                     ret	       221	show-ref.c	FUNCTION_7
exclude_existing_callback	IF,0:ELSE,0:SWITCH,0:functions,0:WHILE,0:DO,0:CALL,0:FOR,0	5
0x4000040	    0xc70500000000	               mov dword [0x0400004a], 1	       153	show-ref.c	FUNCTION_6
0x400004a	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       154	show-ref.c	FUNCTION_6
0x400004e	          0x488930	                    mov qword [rax], rsi	       154	show-ref.c	FUNCTION_6
0x4000051	      0xb800000000	                              mov eax, 0	       156	show-ref.c	FUNCTION_6
0x4000056	              0xc3	                                     ret	       156	show-ref.c	FUNCTION_6
