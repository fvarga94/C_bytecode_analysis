parse_key_value_squoted	functions,0:IF,2:FOR,0:SWITCH,0:DO,0:WHILE,1:ELSE,0:CALL,4	61
0x4000a20	              0x55	                                push rbp	       267	am.c	FUNCTION_13
0x4000a21	          0x4889e5	                            mov rbp, rsp	       267	am.c	FUNCTION_13
0x4000a24	        0x4883ec30	                           sub rsp, 0x30	       267	am.c	FUNCTION_13
0x4000a28	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       267	am.c	FUNCTION_13
0x4000a2c	        0x488975d0	             mov qword [rbp - 0x30], rsi	       267	am.c	FUNCTION_13
0x4000a30	      0xe9b7000000	                           jmp 0x4000aec	       268	am.c	FUNCTION_13	WHILE_1
0x4000a35	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x4000a39	      0xbe3d000000	                           mov esi, 0x3d	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x4000a3e	          0x4889c7	                            mov rdi, rax	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x4000a41	      0xe800000000	                          call 0x4000a46	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x4000a46	        0x488945e8	             mov qword [rbp - 0x18], rax	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x4000a4a	      0x48837de800	               cmp qword [rbp - 0x18], 0	       272	am.c	FUNCTION_13	WHILE_1	IF_1
0x4000a4f	            0x750a	                           jne 0x4000a5b	       272	am.c	FUNCTION_13	WHILE_1	IF_1
0x4000a51	      0xb8ffffffff	                     mov eax, 0xffffffff	       273	am.c	FUNCTION_13	WHILE_1	IF_1
0x4000a56	      0xe9a5000000	                           jmp 0x4000b00	       273	am.c	FUNCTION_13	WHILE_1	IF_1
0x4000a5b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       274	am.c	FUNCTION_13	WHILE_1
0x4000a5f	      0xbe0a000000	                            mov esi, 0xa	       274	am.c	FUNCTION_13	WHILE_1
0x4000a64	          0x4889c7	                            mov rdi, rax	       274	am.c	FUNCTION_13	WHILE_1
0x4000a67	      0xe800000000	                          call 0x4000a6c	       274	am.c	FUNCTION_13	WHILE_1
0x4000a6c	        0x488945f0	             mov qword [rbp - 0x10], rax	       274	am.c	FUNCTION_13	WHILE_1
0x4000a70	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       275	am.c	FUNCTION_13	WHILE_1
0x4000a74	        0x488d5001	                      lea rdx, [rax + 1]	       275	am.c	FUNCTION_13	WHILE_1
0x4000a78	        0x488955e8	             mov qword [rbp - 0x18], rdx	       275	am.c	FUNCTION_13	WHILE_1
0x4000a7c	          0xc60000	                       mov byte [rax], 0	       275	am.c	FUNCTION_13	WHILE_1
0x4000a7f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4000a83	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4000a87	          0x4889d6	                            mov rsi, rdx	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4000a8a	          0x4889c7	                            mov rdi, rax	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4000a8d	      0xe800000000	                          call 0x4000a92	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4000a92	        0x488945f8	                mov qword [rbp - 8], rax	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4000a96	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       278	am.c	FUNCTION_13	WHILE_1
0x4000a9a	           0xfb600	                   movzx eax, byte [rax]	       278	am.c	FUNCTION_13	WHILE_1
0x4000a9d	            0x3c0a	                             cmp al, 0xa	       278	am.c	FUNCTION_13	WHILE_1
0x4000a9f	           0xf94c0	                                 sete al	       278	am.c	FUNCTION_13	WHILE_1
0x4000aa2	           0xfb6d0	                           movzx edx, al	       278	am.c	FUNCTION_13	WHILE_1
0x4000aa5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       278	am.c	FUNCTION_13	WHILE_1
0x4000aa9	          0x4801d0	                            add rax, rdx	       278	am.c	FUNCTION_13	WHILE_1
0x4000aac	        0x488945d8	             mov qword [rbp - 0x28], rax	       278	am.c	FUNCTION_13	WHILE_1
0x4000ab0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	am.c	FUNCTION_13	WHILE_1
0x4000ab4	          0xc60000	                       mov byte [rax], 0	       279	am.c	FUNCTION_13	WHILE_1
0x4000ab7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       280	am.c	FUNCTION_13	WHILE_1	CALL_3
0x4000abb	          0x4889c7	                            mov rdi, rax	       280	am.c	FUNCTION_13	WHILE_1	CALL_3
0x4000abe	      0xe800000000	                          call 0x4000ac3	       280	am.c	FUNCTION_13	WHILE_1	CALL_3
0x4000ac3	        0x488945e8	             mov qword [rbp - 0x18], rax	       280	am.c	FUNCTION_13	WHILE_1	CALL_3
0x4000ac7	      0x48837de800	               cmp qword [rbp - 0x18], 0	       281	am.c	FUNCTION_13	WHILE_1	IF_2
0x4000acc	            0x7507	                           jne 0x4000ad5	       281	am.c	FUNCTION_13	WHILE_1	IF_2
0x4000ace	      0xb8ffffffff	                     mov eax, 0xffffffff	       282	am.c	FUNCTION_13	WHILE_1	IF_2
0x4000ad3	            0xeb2b	                           jmp 0x4000b00	       282	am.c	FUNCTION_13	WHILE_1	IF_2
0x4000ad5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       283	am.c	FUNCTION_13	WHILE_1	CALL_4
0x4000ad9	          0x4889c7	                            mov rdi, rax	       283	am.c	FUNCTION_13	WHILE_1	CALL_4
0x4000adc	      0xe800000000	                          call 0x4000ae1	       283	am.c	FUNCTION_13	WHILE_1	CALL_4
0x4000ae1	          0x4889c2	                            mov rdx, rax	       283	am.c	FUNCTION_13	WHILE_1	CALL_4
0x4000ae4	        0x488b45f8	                mov rax, qword [rbp - 8]	       283	am.c	FUNCTION_13	WHILE_1	CALL_4
0x4000ae8	        0x48895008	                mov qword [rax + 8], rdx	       283	am.c	FUNCTION_13	WHILE_1	CALL_4
0x4000aec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       268	am.c	FUNCTION_13	WHILE_1
0x4000af0	           0xfb600	                   movzx eax, byte [rax]	       268	am.c	FUNCTION_13	WHILE_1
0x4000af3	            0x84c0	                             test al, al	       268	am.c	FUNCTION_13	WHILE_1
0x4000af5	     0xf853affffff	                           jne 0x4000a35	       268	am.c	FUNCTION_13	WHILE_1
0x4000afb	      0xb800000000	                              mov eax, 0	       285	am.c	FUNCTION_13
0x4000b00	              0xc9	                                   leave	       286	am.c	FUNCTION_13
0x4000b01	              0xc3	                                     ret	       286	am.c	FUNCTION_13
do_interactive	functions,0:IF,9:FOR,1:SWITCH,0:DO,0:WHILE,0:ELSE,5:CALL,21	167
0x4004947	              0x55	                                push rbp	      1699	am.c	FUNCTION_48
0x4004948	          0x4889e5	                            mov rbp, rsp	      1699	am.c	FUNCTION_48
0x400494b	    0x4881ec900000	                           sub rsp, 0x90	      1699	am.c	FUNCTION_48
0x4004952	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      1699	am.c	FUNCTION_48
0x4004959	    0x64488b042528	                mov rax, qword fs:[0x28]	      1699	am.c	FUNCTION_48
0x4004962	        0x488945f8	                mov qword [rbp - 8], rax	      1699	am.c	FUNCTION_48
0x4004966	            0x31c0	                            xor eax, eax	      1699	am.c	FUNCTION_48
0x4004968	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1700	am.c	FUNCTION_48	CALL_1
0x400496f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1700	am.c	FUNCTION_48	CALL_1
0x4004973	          0x4885c0	                           test rax, rax	      1700	am.c	FUNCTION_48	CALL_1
0x4004976	            0x7519	                           jne 0x4004991	      1700	am.c	FUNCTION_48	CALL_1
0x4004978	      0xb900000000	                              mov ecx, 0	      1700	am.c	FUNCTION_48	CALL_1
0x400497d	      0xbaa4060000	                          mov edx, 0x6a4	      1700	am.c	FUNCTION_48	CALL_1
0x4004982	      0xbe00000000	                              mov esi, 0	      1700	am.c	FUNCTION_48	CALL_1
0x4004987	      0xbf00000000	                              mov edi, 0	      1700	am.c	FUNCTION_48	CALL_1
0x400498c	      0xe800000000	                          call 0x4004991	      1700	am.c	FUNCTION_48	CALL_1
0x4004991	      0xbf00000000	                              mov edi, 0	      1702	am.c	FUNCTION_48	IF_1	CALL_2
0x4004996	      0xe800000000	                          call 0x400499b	      1702	am.c	FUNCTION_48	IF_1	CALL_2
0x400499b	            0x85c0	                           test eax, eax	      1702	am.c	FUNCTION_48	IF_1	CALL_2
0x400499d	            0x7517	                           jne 0x40049b6	      1702	am.c	FUNCTION_48	IF_1	CALL_2
0x400499f	      0xbf00000000	                              mov edi, 0	      1703	am.c	FUNCTION_48	CALL_4
0x40049a4	      0xe88db8ffff	                               call sym.	      1703	am.c	FUNCTION_48	CALL_4
0x40049a9	          0x4889c7	                            mov rdi, rax	      1703	am.c	FUNCTION_48	CALL_4
0x40049ac	      0xb800000000	                              mov eax, 0	      1703	am.c	FUNCTION_48	CALL_4
0x40049b1	      0xe800000000	                          call 0x40049b6	      1703	am.c	FUNCTION_48	CALL_4
0x40049b6	      0xbf00000000	                              mov edi, 0	      1708	am.c	FUNCTION_48	FOR_1	CALL_6
0x40049bb	      0xe876b8ffff	                               call sym.	      1708	am.c	FUNCTION_48	FOR_1	CALL_6
0x40049c0	          0x4889c7	                            mov rdi, rax	      1708	am.c	FUNCTION_48	FOR_1	CALL_6
0x40049c3	      0xe800000000	                          call 0x40049c8	      1708	am.c	FUNCTION_48	FOR_1	CALL_6
0x40049c8	      0xbf00000000	                              mov edi, 0	      1709	am.c	FUNCTION_48	FOR_1	CALL_7
0x40049cd	      0xe800000000	                          call 0x40049d2	      1709	am.c	FUNCTION_48	FOR_1	CALL_7
0x40049d2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1710	am.c	FUNCTION_48	FOR_1	CALL_8
0x40049d9	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1710	am.c	FUNCTION_48	FOR_1	CALL_8
0x40049dd	          0x4889c6	                            mov rsi, rax	      1710	am.c	FUNCTION_48	FOR_1	CALL_8
0x40049e0	      0xbf00000000	                              mov edi, 0	      1710	am.c	FUNCTION_48	FOR_1	CALL_8
0x40049e5	      0xb800000000	                              mov eax, 0	      1710	am.c	FUNCTION_48	FOR_1	CALL_8
0x40049ea	      0xe800000000	                          call 0x40049ef	      1710	am.c	FUNCTION_48	FOR_1	CALL_8
0x40049ef	      0xbf00000000	                              mov edi, 0	      1711	am.c	FUNCTION_48	FOR_1	CALL_9
0x40049f4	      0xe800000000	                          call 0x40049f9	      1711	am.c	FUNCTION_48	FOR_1	CALL_9
0x40049f9	      0xbf00000000	                              mov edi, 0	      1718	am.c	FUNCTION_48	FOR_1	CALL_11
0x40049fe	      0xe833b8ffff	                               call sym.	      1718	am.c	FUNCTION_48	FOR_1	CALL_11
0x4004a03	      0xbe02000000	                              mov esi, 2	      1718	am.c	FUNCTION_48	FOR_1	CALL_11
0x4004a08	          0x4889c7	                            mov rdi, rax	      1718	am.c	FUNCTION_48	FOR_1	CALL_11
0x4004a0b	      0xe800000000	                          call 0x4004a10	      1718	am.c	FUNCTION_48	FOR_1	CALL_11
0x4004a10	        0x48894588	             mov qword [rbp - 0x78], rax	      1718	am.c	FUNCTION_48	FOR_1	CALL_11
0x4004a14	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      1720	am.c	FUNCTION_48	FOR_1	IF_2
0x4004a19	     0xf84c4010000	                            je 0x4004be3	      1720	am.c	FUNCTION_48	FOR_1	IF_2
0x4004a1f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4004a23	           0xfb600	                   movzx eax, byte [rax]	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4004a26	            0x3c79	                            cmp al, 0x79	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4004a28	            0x740b	                            je 0x4004a35	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4004a2a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4004a2e	           0xfb600	                   movzx eax, byte [rax]	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4004a31	            0x3c59	                            cmp al, 0x59	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4004a33	            0x750a	                           jne 0x4004a3f	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4004a35	      0xb800000000	                              mov eax, 0	      1723	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4004a3a	      0xe9aa010000	                           jmp 0x4004be9	      1723	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4004a3f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4004a43	           0xfb600	                   movzx eax, byte [rax]	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4004a46	            0x3c61	                            cmp al, 0x61	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4004a48	            0x740b	                            je 0x4004a55	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4004a4a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4004a4e	           0xfb600	                   movzx eax, byte [rax]	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4004a51	            0x3c41	                            cmp al, 0x41	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4004a53	            0x7518	                           jne 0x4004a6d	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4004a55	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1725	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4004a5c	    0xc74050000000	               mov dword [rax + 0x50], 0	      1725	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4004a63	      0xb800000000	                              mov eax, 0	      1726	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4004a68	      0xe97c010000	                           jmp 0x4004be9	      1726	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4004a6d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4004a71	           0xfb600	                   movzx eax, byte [rax]	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4004a74	            0x3c6e	                            cmp al, 0x6e	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4004a76	            0x740b	                            je 0x4004a83	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4004a78	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4004a7c	           0xfb600	                   movzx eax, byte [rax]	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4004a7f	            0x3c4e	                            cmp al, 0x4e	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4004a81	            0x750a	                           jne 0x4004a8d	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4004a83	      0xb801000000	                              mov eax, 1	      1728	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4004a88	      0xe95c010000	                           jmp 0x4004be9	      1728	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4004a8d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4004a91	           0xfb600	                   movzx eax, byte [rax]	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4004a94	            0x3c65	                            cmp al, 0x65	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4004a96	            0x740f	                            je 0x4004aa7	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4004a98	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4004a9c	           0xfb600	                   movzx eax, byte [rax]	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4004a9f	            0x3c45	                            cmp al, 0x45	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4004aa1	     0xf8593000000	                           jne 0x4004b3a	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4004aa7	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1730	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4004aaf	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1730	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4004ab7	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1730	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4004abf	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4004ac6	      0xbe00000000	                              mov esi, 0	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4004acb	          0x4889c7	                            mov rdi, rax	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4004ace	      0xe8a4bbffff	                        call sym.am_path	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4004ad3	          0x4889c1	                            mov rcx, rax	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4004ad6	        0x488d4590	                   lea rax, [rbp - 0x70]	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4004ada	      0xba00000000	                              mov edx, 0	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4004adf	          0x4889c6	                            mov rsi, rax	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4004ae2	          0x4889cf	                            mov rdi, rcx	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4004ae5	      0xe800000000	                          call 0x4004aea	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4004aea	            0x85c0	                           test eax, eax	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4004aec	            0x753b	                           jne 0x4004b29	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4004aee	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1733	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_14
0x4004af5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1733	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_14
0x4004af9	          0x4889c7	                            mov rdi, rax	      1733	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_14
0x4004afc	      0xe800000000	                          call 0x4004b01	      1733	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_14
0x4004b01	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4004b08	        0x488d5030	                   lea rdx, [rax + 0x30]	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4004b0c	        0x488d4590	                   lea rax, [rbp - 0x70]	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4004b10	          0x4889d6	                            mov rsi, rdx	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4004b13	          0x4889c7	                            mov rdi, rax	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4004b16	      0xe800000000	                          call 0x4004b1b	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4004b1b	          0x4889c2	                            mov rdx, rax	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4004b1e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4004b25	        0x48895028	             mov qword [rax + 0x28], rdx	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_15
0x4004b29	        0x488d4590	                   lea rax, [rbp - 0x70]	      1736	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	CALL_16
0x4004b2d	          0x4889c7	                            mov rdi, rax	      1736	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	CALL_16
0x4004b30	      0xe800000000	                          call 0x4004b35	      1736	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	CALL_16
0x4004b35	      0xe9aa000000	                           jmp 0x4004be4	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4004b3a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4004b3e	           0xfb600	                   movzx eax, byte [rax]	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4004b41	            0x3c76	                            cmp al, 0x76	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4004b43	            0x740f	                            je 0x4004b54	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4004b45	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4004b49	           0xfb600	                   movzx eax, byte [rax]	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4004b4c	            0x3c56	                            cmp al, 0x56	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4004b4e	     0xf8562feffff	                           jne 0x40049b6	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4004b54	      0xbf01000000	                              mov edi, 1	      1738	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_17
0x4004b59	      0xe800000000	                          call 0x4004b5e	      1738	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_17
0x4004b5e	        0x48894580	             mov qword [rbp - 0x80], rax	      1738	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_17
0x4004b62	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4004b66	      0xb800000000	                              mov eax, 0	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4004b6b	      0xb90c000000	                            mov ecx, 0xc	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4004b70	          0x4889d7	                            mov rdi, rdx	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4004b73	          0xf348ab	              rep stosq qword [rdi], rax	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4004b76	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4004b7e	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4004b86	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      1741	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	IF_9
0x4004b8b	            0x7508	                           jne 0x4004b95	      1741	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	IF_9
0x4004b8d	    0x48c745800000	               mov qword [rbp - 0x80], 0	      1742	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	IF_9
0x4004b95	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      1743	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_18
0x4004b99	        0x488d4590	                   lea rax, [rbp - 0x70]	      1743	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_18
0x4004b9d	          0x4889d6	                            mov rsi, rdx	      1743	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_18
0x4004ba0	          0x4889c7	                            mov rdi, rax	      1743	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_18
0x4004ba3	      0xe800000000	                          call 0x4004ba8	      1743	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_18
0x4004ba8	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4004baf	      0xbe00000000	                              mov esi, 0	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4004bb4	          0x4889c7	                            mov rdi, rax	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4004bb7	      0xe8bbbaffff	                        call sym.am_path	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4004bbc	          0x4889c2	                            mov rdx, rax	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4004bbf	        0x488d4590	                   lea rax, [rbp - 0x70]	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4004bc3	        0x4883c008	                              add rax, 8	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4004bc7	          0x4889d6	                            mov rsi, rdx	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4004bca	          0x4889c7	                            mov rdi, rax	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4004bcd	      0xe800000000	                          call 0x4004bd2	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4004bd2	        0x488d4590	                   lea rax, [rbp - 0x70]	      1745	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_21
0x4004bd6	          0x4889c7	                            mov rdi, rax	      1745	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_21
0x4004bd9	      0xe800000000	                          call 0x4004bde	      1745	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_21
0x4004bde	      0xe9d3fdffff	                           jmp 0x40049b6	      1745	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_21
0x4004be3	              0x90	                                     nop	      1721	am.c	FUNCTION_48	FOR_1	IF_2
0x4004be4	      0xe9cdfdffff	                           jmp 0x40049b6	      1747	am.c	FUNCTION_48	FOR_1
0x4004be9	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1748	am.c	FUNCTION_48
0x4004bed	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1748	am.c	FUNCTION_48
0x4004bf6	            0x7405	                            je 0x4004bfd	      1748	am.c	FUNCTION_48
0x4004bf8	      0xe800000000	                          call 0x4004bfd	      1748	am.c	FUNCTION_48
0x4004bfd	              0xc9	                                   leave	      1748	am.c	FUNCTION_48
0x4004bfe	              0xc3	                                     ret	      1748	am.c	FUNCTION_48
am_append_signoff	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,3	40
0x4002f52	              0x55	                                push rbp	      1174	am.c	FUNCTION_36
0x4002f53	          0x4889e5	                            mov rbp, rsp	      1174	am.c	FUNCTION_36
0x4002f56	        0x4883ec30	                           sub rsp, 0x30	      1174	am.c	FUNCTION_36
0x4002f5a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1174	am.c	FUNCTION_36
0x4002f5e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1174	am.c	FUNCTION_36
0x4002f67	        0x488945f8	                mov qword [rbp - 8], rax	      1174	am.c	FUNCTION_36
0x4002f6b	            0x31c0	                            xor eax, eax	      1174	am.c	FUNCTION_36
0x4002f6d	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1175	am.c	FUNCTION_36
0x4002f75	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1175	am.c	FUNCTION_36
0x4002f7d	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1175	am.c	FUNCTION_36
0x4002f85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1177	am.c	FUNCTION_36	CALL_1
0x4002f89	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      1177	am.c	FUNCTION_36	CALL_1
0x4002f8d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1177	am.c	FUNCTION_36	CALL_1
0x4002f91	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1177	am.c	FUNCTION_36	CALL_1
0x4002f95	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1177	am.c	FUNCTION_36	CALL_1
0x4002f99	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      1177	am.c	FUNCTION_36	CALL_1
0x4002f9d	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1177	am.c	FUNCTION_36	CALL_1
0x4002fa1	          0x4889c7	                            mov rdi, rax	      1177	am.c	FUNCTION_36	CALL_1
0x4002fa4	      0xe800000000	                          call 0x4002fa9	      1177	am.c	FUNCTION_36	CALL_1
0x4002fa9	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1178	am.c	FUNCTION_36	CALL_2
0x4002fad	      0xba00000000	                              mov edx, 0	      1178	am.c	FUNCTION_36	CALL_2
0x4002fb2	      0xbe00000000	                              mov esi, 0	      1178	am.c	FUNCTION_36	CALL_2
0x4002fb7	          0x4889c7	                            mov rdi, rax	      1178	am.c	FUNCTION_36	CALL_2
0x4002fba	      0xe800000000	                          call 0x4002fbf	      1178	am.c	FUNCTION_36	CALL_2
0x4002fbf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1179	am.c	FUNCTION_36	CALL_3
0x4002fc3	        0x488d5030	                   lea rdx, [rax + 0x30]	      1179	am.c	FUNCTION_36	CALL_3
0x4002fc7	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1179	am.c	FUNCTION_36	CALL_3
0x4002fcb	          0x4889d6	                            mov rsi, rdx	      1179	am.c	FUNCTION_36	CALL_3
0x4002fce	          0x4889c7	                            mov rdi, rax	      1179	am.c	FUNCTION_36	CALL_3
0x4002fd1	      0xe800000000	                          call 0x4002fd6	      1179	am.c	FUNCTION_36	CALL_3
0x4002fd6	          0x4889c2	                            mov rdx, rax	      1179	am.c	FUNCTION_36	CALL_3
0x4002fd9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1179	am.c	FUNCTION_36	CALL_3
0x4002fdd	        0x48895028	             mov qword [rax + 0x28], rdx	      1179	am.c	FUNCTION_36	CALL_3
0x4002fe1	              0x90	                                     nop	      1180	am.c	FUNCTION_36
0x4002fe2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1180	am.c	FUNCTION_36
0x4002fe6	    0x644833042528	                xor rax, qword fs:[0x28]	      1180	am.c	FUNCTION_36
0x4002fef	            0x7405	                            je 0x4002ff6	      1180	am.c	FUNCTION_36
0x4002ff1	      0xe800000000	                          call 0x4002ff6	      1180	am.c	FUNCTION_36
0x4002ff6	              0xc9	                                   leave	      1180	am.c	FUNCTION_36
0x4002ff7	              0xc3	                                     ret	      1180	am.c	FUNCTION_36
_	functions,0:IF,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,0	15
0x4000236	              0x55	                                push rbp	        51	gettext.h	FUNCTION_64
0x4000237	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_64
0x400023a	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_64
0x400023e	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_64
0x4000242	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_64	IF_1
0x4000246	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_64	IF_1
0x4000249	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_64	IF_1
0x400024b	            0x7507	                           jne 0x4000254	        52	gettext.h	FUNCTION_64	IF_1
0x400024d	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_64	IF_1
0x4000252	            0xeb0c	                           jmp 0x4000260	        53	gettext.h	FUNCTION_64	IF_1
0x4000254	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_64
0x4000258	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_64
0x400025b	      0xe800000000	                          call 0x4000260	        54	gettext.h	FUNCTION_64
0x4000260	              0xc9	                                   leave	        55	gettext.h	FUNCTION_64
0x4000261	              0xc3	                                     ret	        55	gettext.h	FUNCTION_64
run_apply	functions,0:IF,7:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,1:CALL,14	120
0x4003dae	              0x55	                                push rbp	      1457	am.c	FUNCTION_43
0x4003daf	          0x4889e5	                            mov rbp, rsp	      1457	am.c	FUNCTION_43
0x4003db2	    0x4881ec900100	                          sub rsp, 0x190	      1457	am.c	FUNCTION_43
0x4003db9	    0x4889bd78feff	            mov qword [rbp - 0x188], rdi	      1457	am.c	FUNCTION_43
0x4003dc0	    0x4889b570feff	            mov qword [rbp - 0x190], rsi	      1457	am.c	FUNCTION_43
0x4003dc7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1457	am.c	FUNCTION_43
0x4003dd0	        0x488945f8	                mov qword [rbp - 8], rax	      1457	am.c	FUNCTION_43
0x4003dd4	            0x31c0	                            xor eax, eax	      1457	am.c	FUNCTION_43
0x4003dd6	    0x48c78590feff	              mov qword [rbp - 0x170], 0	      1458	am.c	FUNCTION_43
0x4003de1	    0xc78598feffff	              mov dword [rbp - 0x168], 0	      1458	am.c	FUNCTION_43
0x4003deb	    0xc7859cfeffff	              mov dword [rbp - 0x164], 0	      1458	am.c	FUNCTION_43
0x4003df5	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	      1459	am.c	FUNCTION_43
0x4003e00	    0xc785a8feffff	              mov dword [rbp - 0x158], 0	      1459	am.c	FUNCTION_43
0x4003e0a	    0xc785acfeffff	              mov dword [rbp - 0x154], 0	      1459	am.c	FUNCTION_43
0x4003e14	    0xc78580feffff	              mov dword [rbp - 0x180], 0	      1462	am.c	FUNCTION_43
0x4003e1e	    0xc78584feffff	              mov dword [rbp - 0x17c], 0	      1463	am.c	FUNCTION_43
0x4003e28	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x4003e2f	      0xbe00000000	                              mov esi, 0	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x4003e34	          0x4889c7	                            mov rdi, rax	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x4003e37	      0xe800000000	                          call 0x4003e3c	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x4003e3c	            0x85c0	                           test eax, eax	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x4003e3e	            0x740f	                            je 0x4003e4f	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x4003e40	      0xbf00000000	                              mov edi, 0	      1466	am.c	FUNCTION_43	CALL_2
0x4003e45	      0xb800000000	                              mov eax, 0	      1466	am.c	FUNCTION_43	CALL_2
0x4003e4a	      0xe800000000	                          call 0x4003e4f	      1466	am.c	FUNCTION_43	CALL_2
0x4003e4f	    0x488d85a0feff	                  lea rax, [rbp - 0x160]	      1468	am.c	FUNCTION_43	CALL_3
0x4003e56	      0xbe00000000	                              mov esi, 0	      1468	am.c	FUNCTION_43	CALL_3
0x4003e5b	          0x4889c7	                            mov rdi, rax	      1468	am.c	FUNCTION_43	CALL_3
0x4003e5e	      0xe800000000	                          call 0x4003e63	      1468	am.c	FUNCTION_43	CALL_3
0x4003e63	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1469	am.c	FUNCTION_43	CALL_4
0x4003e6a	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      1469	am.c	FUNCTION_43	CALL_4
0x4003e6e	    0x488d85a0feff	                  lea rax, [rbp - 0x160]	      1469	am.c	FUNCTION_43	CALL_4
0x4003e75	          0x4889d6	                            mov rsi, rdx	      1469	am.c	FUNCTION_43	CALL_4
0x4003e78	          0x4889c7	                            mov rdi, rax	      1469	am.c	FUNCTION_43	CALL_4
0x4003e7b	      0xe800000000	                          call 0x4003e80	      1469	am.c	FUNCTION_43	CALL_4
0x4003e80	    0x488bb5a0feff	            mov rsi, qword [rbp - 0x160]	      1471	am.c	FUNCTION_43	CALL_5
0x4003e87	    0x8b85a8feffff	            mov eax, dword [rbp - 0x158]	      1471	am.c	FUNCTION_43	CALL_5
0x4003e8d	    0x488dbd84feff	                  lea rdi, [rbp - 0x17c]	      1471	am.c	FUNCTION_43	CALL_5
0x4003e94	    0x488d8d80feff	                  lea rcx, [rbp - 0x180]	      1471	am.c	FUNCTION_43	CALL_5
0x4003e9b	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	      1471	am.c	FUNCTION_43	CALL_5
0x4003ea2	    0x41b900000000	                              mov r9d, 0	      1471	am.c	FUNCTION_43	CALL_5
0x4003ea8	          0x4989f8	                             mov r8, rdi	      1471	am.c	FUNCTION_43	CALL_5
0x4003eab	            0x89c7	                            mov edi, eax	      1471	am.c	FUNCTION_43	CALL_5
0x4003ead	      0xe800000000	                          call 0x4003eb2	      1471	am.c	FUNCTION_43	CALL_5
0x4003eb2	    0x898588feffff	            mov dword [rbp - 0x178], eax	      1471	am.c	FUNCTION_43	CALL_5
0x4003eb8	    0x83bd88feffff	              cmp dword [rbp - 0x178], 0	      1475	am.c	FUNCTION_43	IF_2
0x4003ebf	            0x740f	                            je 0x4003ed0	      1475	am.c	FUNCTION_43	IF_2
0x4003ec1	      0xbf00000000	                              mov edi, 0	      1476	am.c	FUNCTION_43	CALL_6
0x4003ec6	      0xb800000000	                              mov eax, 0	      1476	am.c	FUNCTION_43	CALL_6
0x4003ecb	      0xe800000000	                          call 0x4003ed0	      1476	am.c	FUNCTION_43	CALL_6
0x4003ed0	    0x4883bd70feff	              cmp qword [rbp - 0x190], 0	      1478	am.c	FUNCTION_43	IF_3
0x4003ed8	            0x741a	                            je 0x4003ef4	      1478	am.c	FUNCTION_43	IF_3
0x4003eda	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1479	am.c	FUNCTION_43	IF_3
0x4003ee1	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      1479	am.c	FUNCTION_43	IF_3
0x4003ee8	    0xc785c4feffff	              mov dword [rbp - 0x13c], 1	      1480	am.c	FUNCTION_43	IF_3
0x4003ef2	            0xeb0a	                           jmp 0x4003efe	      1480	am.c	FUNCTION_43	IF_3
0x4003ef4	    0xc785ccfeffff	              mov dword [rbp - 0x134], 1	      1482	am.c	FUNCTION_43	ELSE_1
0x4003efe	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1488	am.c	FUNCTION_43	IF_4
0x4003f05	          0x8b4054	            mov eax, dword [rax + 0x54] 	      1488	am.c	FUNCTION_43	IF_4
0x4003f08	            0x85c0	                           test eax, eax	      1488	am.c	FUNCTION_43	IF_4
0x4003f0a	            0x7414	                            je 0x4003f20	      1488	am.c	FUNCTION_43	IF_4
0x4003f0c	    0x4883bd70feff	              cmp qword [rbp - 0x190], 0	      1488	am.c	FUNCTION_43	IF_4
0x4003f14	            0x750a	                           jne 0x4003f20	      1488	am.c	FUNCTION_43	IF_4
0x4003f16	    0xc78508ffffff	     mov dword [rbp - 0xf8], 0xffffffff 	      1489	am.c	FUNCTION_43	IF_4
0x4003f20	    0x8b9580feffff	            mov edx, dword [rbp - 0x180]	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4003f26	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4003f2d	            0x89d6	                            mov esi, edx	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4003f2f	          0x4889c7	                            mov rdi, rax	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4003f32	      0xe800000000	                          call 0x4003f37	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4003f37	            0x85c0	                           test eax, eax	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4003f39	            0x740f	                            je 0x4003f4a	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4003f3b	      0xbf00000000	                              mov edi, 0	      1492	am.c	FUNCTION_43	CALL_8
0x4003f40	      0xb800000000	                              mov eax, 0	      1492	am.c	FUNCTION_43	CALL_8
0x4003f45	      0xe800000000	                          call 0x4003f4a	      1492	am.c	FUNCTION_43	CALL_8
0x4003f4a	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      1494	am.c	FUNCTION_43	CALL_10
0x4003f51	      0xbe00000000	                              mov esi, 0	      1494	am.c	FUNCTION_43	CALL_10
0x4003f56	          0x4889c7	                            mov rdi, rax	      1494	am.c	FUNCTION_43	CALL_10
0x4003f59	      0xe819c7ffff	                        call sym.am_path	      1494	am.c	FUNCTION_43	CALL_10
0x4003f5e	          0x4889c2	                            mov rdx, rax	      1494	am.c	FUNCTION_43	CALL_10
0x4003f61	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1494	am.c	FUNCTION_43	CALL_10
0x4003f68	          0x4889d6	                            mov rsi, rdx	      1494	am.c	FUNCTION_43	CALL_10
0x4003f6b	          0x4889c7	                            mov rdi, rax	      1494	am.c	FUNCTION_43	CALL_10
0x4003f6e	      0xe800000000	                          call 0x4003f73	      1494	am.c	FUNCTION_43	CALL_10
0x4003f73	    0x8b8d84feffff	            mov ecx, dword [rbp - 0x17c]	      1496	am.c	FUNCTION_43	CALL_11
0x4003f79	    0x488b9590feff	            mov rdx, qword [rbp - 0x170]	      1496	am.c	FUNCTION_43	CALL_11
0x4003f80	    0x8bb598feffff	            mov esi, dword [rbp - 0x168]	      1496	am.c	FUNCTION_43	CALL_11
0x4003f86	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      1496	am.c	FUNCTION_43	CALL_11
0x4003f8d	          0x4889c7	                            mov rdi, rax	      1496	am.c	FUNCTION_43	CALL_11
0x4003f90	      0xe800000000	                          call 0x4003f95	      1496	am.c	FUNCTION_43	CALL_11
0x4003f95	    0x89858cfeffff	            mov dword [rbp - 0x174], eax	      1496	am.c	FUNCTION_43	CALL_11
0x4003f9b	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1498	am.c	FUNCTION_43	CALL_12
0x4003fa2	          0x4889c7	                            mov rdi, rax	      1498	am.c	FUNCTION_43	CALL_12
0x4003fa5	      0xe800000000	                          call 0x4003faa	      1498	am.c	FUNCTION_43	CALL_12
0x4003faa	    0x488d85a0feff	                  lea rax, [rbp - 0x160]	      1499	am.c	FUNCTION_43	CALL_13
0x4003fb1	          0x4889c7	                            mov rdi, rax	      1499	am.c	FUNCTION_43	CALL_13
0x4003fb4	      0xe800000000	                          call 0x4003fb9	      1499	am.c	FUNCTION_43	CALL_13
0x4003fb9	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      1500	am.c	FUNCTION_43	CALL_14
0x4003fc0	          0x4889c7	                            mov rdi, rax	      1500	am.c	FUNCTION_43	CALL_14
0x4003fc3	      0xe800000000	                          call 0x4003fc8	      1500	am.c	FUNCTION_43	CALL_14
0x4003fc8	    0x83bd8cfeffff	              cmp dword [rbp - 0x174], 0	      1502	am.c	FUNCTION_43	IF_6
0x4003fcf	            0x7408	                            je 0x4003fd9	      1502	am.c	FUNCTION_43	IF_6
0x4003fd1	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      1503	am.c	FUNCTION_43	IF_6
0x4003fd7	            0xeb35	                           jmp 0x400400e	      1503	am.c	FUNCTION_43	IF_6
0x4003fd9	    0x4883bd70feff	              cmp qword [rbp - 0x190], 0	      1505	am.c	FUNCTION_43	IF_7
0x4003fe1	            0x7426	                            je 0x4004009	      1505	am.c	FUNCTION_43	IF_7
0x4003fe3	      0xbf00000000	                              mov edi, 0	      1507	am.c	FUNCTION_43	IF_7
0x4003fe8	      0xe800000000	                          call 0x4003fed	      1507	am.c	FUNCTION_43	IF_7
0x4003fed	      0xe800000000	                          call 0x4003ff2	      1508	am.c	FUNCTION_43	IF_7
0x4003ff2	          0x4889c2	                            mov rdx, rax	      1508	am.c	FUNCTION_43	IF_7
0x4003ff5	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      1508	am.c	FUNCTION_43	IF_7
0x4003ffc	          0x4889c6	                            mov rsi, rax	      1508	am.c	FUNCTION_43	IF_7
0x4003fff	      0xbf00000000	                              mov edi, 0	      1508	am.c	FUNCTION_43	IF_7
0x4004004	      0xe800000000	                          call 0x4004009	      1508	am.c	FUNCTION_43	IF_7
0x4004009	      0xb800000000	                              mov eax, 0	      1511	am.c	FUNCTION_43
0x400400e	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1512	am.c	FUNCTION_43
0x4004012	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1512	am.c	FUNCTION_43
0x400401b	            0x7405	                            je 0x4004022	      1512	am.c	FUNCTION_43
0x400401d	      0xe800000000	                          call 0x4004022	      1512	am.c	FUNCTION_43
0x4004022	              0xc9	                                   leave	      1512	am.c	FUNCTION_43
0x4004023	              0xc3	                                     ret	      1512	am.c	FUNCTION_43
am_state_release	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,6	31
0x4000609	              0x55	                                push rbp	       169	am.c	FUNCTION_5
0x400060a	          0x4889e5	                            mov rbp, rsp	       169	am.c	FUNCTION_5
0x400060d	        0x4883ec10	                           sub rsp, 0x10	       169	am.c	FUNCTION_5
0x4000611	        0x48897df8	                mov qword [rbp - 8], rdi	       169	am.c	FUNCTION_5
0x4000615	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	am.c	FUNCTION_5	CALL_1
0x4000619	          0x488b00	                    mov rax, qword [rax]	       170	am.c	FUNCTION_5	CALL_1
0x400061c	          0x4889c7	                            mov rdi, rax	       170	am.c	FUNCTION_5	CALL_1
0x400061f	      0xe800000000	                          call 0x4000624	       170	am.c	FUNCTION_5	CALL_1
0x4000624	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	am.c	FUNCTION_5	CALL_2
0x4000628	        0x488b4010	            mov rax, qword [rax + 0x10] 	       171	am.c	FUNCTION_5	CALL_2
0x400062c	          0x4889c7	                            mov rdi, rax	       171	am.c	FUNCTION_5	CALL_2
0x400062f	      0xe800000000	                          call 0x4000634	       171	am.c	FUNCTION_5	CALL_2
0x4000634	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	am.c	FUNCTION_5	CALL_3
0x4000638	        0x488b4018	            mov rax, qword [rax + 0x18] 	       172	am.c	FUNCTION_5	CALL_3
0x400063c	          0x4889c7	                            mov rdi, rax	       172	am.c	FUNCTION_5	CALL_3
0x400063f	      0xe800000000	                          call 0x4000644	       172	am.c	FUNCTION_5	CALL_3
0x4000644	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	am.c	FUNCTION_5	CALL_4
0x4000648	        0x488b4020	            mov rax, qword [rax + 0x20] 	       173	am.c	FUNCTION_5	CALL_4
0x400064c	          0x4889c7	                            mov rdi, rax	       173	am.c	FUNCTION_5	CALL_4
0x400064f	      0xe800000000	                          call 0x4000654	       173	am.c	FUNCTION_5	CALL_4
0x4000654	        0x488b45f8	                mov rax, qword [rbp - 8]	       174	am.c	FUNCTION_5	CALL_5
0x4000658	        0x488b4028	            mov rax, qword [rax + 0x28] 	       174	am.c	FUNCTION_5	CALL_5
0x400065c	          0x4889c7	                            mov rdi, rax	       174	am.c	FUNCTION_5	CALL_5
0x400065f	      0xe800000000	                          call 0x4000664	       174	am.c	FUNCTION_5	CALL_5
0x4000664	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	am.c	FUNCTION_5	CALL_6
0x4000668	        0x4883c070	                           add rax, 0x70	       175	am.c	FUNCTION_5	CALL_6
0x400066c	          0x4889c7	                            mov rdi, rax	       175	am.c	FUNCTION_5	CALL_6
0x400066f	      0xe800000000	                          call 0x4000674	       175	am.c	FUNCTION_5	CALL_6
0x4000674	              0x90	                                     nop	       176	am.c	FUNCTION_5
0x4000675	              0xc9	                                   leave	       176	am.c	FUNCTION_5
0x4000676	              0xc3	                                     ret	       176	am.c	FUNCTION_5
write_commit_msg	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,2	20
0x4000f34	              0x55	                                push rbp	       393	am.c	FUNCTION_17
0x4000f35	          0x4889e5	                            mov rbp, rsp	       393	am.c	FUNCTION_17
0x4000f38	        0x4883ec20	                           sub rsp, 0x20	       393	am.c	FUNCTION_17
0x4000f3c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       393	am.c	FUNCTION_17
0x4000f40	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       394	am.c	FUNCTION_17	CALL_1
0x4000f44	      0xbe00000000	                              mov esi, 0	       394	am.c	FUNCTION_17	CALL_1
0x4000f49	          0x4889c7	                            mov rdi, rax	       394	am.c	FUNCTION_17	CALL_1
0x4000f4c	      0xe826f7ffff	                        call sym.am_path	       394	am.c	FUNCTION_17	CALL_1
0x4000f51	        0x488945f8	                mov qword [rbp - 8], rax	       394	am.c	FUNCTION_17	CALL_1
0x4000f55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	am.c	FUNCTION_17	CALL_2
0x4000f59	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       395	am.c	FUNCTION_17	CALL_2
0x4000f5d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	am.c	FUNCTION_17	CALL_2
0x4000f61	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       395	am.c	FUNCTION_17	CALL_2
0x4000f65	        0x488b45f8	                mov rax, qword [rbp - 8]	       395	am.c	FUNCTION_17	CALL_2
0x4000f69	          0x4889ce	                            mov rsi, rcx	       395	am.c	FUNCTION_17	CALL_2
0x4000f6c	          0x4889c7	                            mov rdi, rax	       395	am.c	FUNCTION_17	CALL_2
0x4000f6f	      0xe800000000	                          call 0x4000f74	       395	am.c	FUNCTION_17	CALL_2
0x4000f74	              0x90	                                     nop	       396	am.c	FUNCTION_17
0x4000f75	              0xc9	                                   leave	       396	am.c	FUNCTION_17
0x4000f76	              0xc3	                                     ret	       396	am.c	FUNCTION_17
split_mail	functions,0:IF,1:FOR,0:SWITCH,1:DO,0:WHILE,0:ELSE,0:CALL,7	60
0x400273d	              0x55	                                push rbp	       971	am.c	FUNCTION_30
0x400273e	          0x4889e5	                            mov rbp, rsp	       971	am.c	FUNCTION_30
0x4002741	        0x4883ec20	                           sub rsp, 0x20	       971	am.c	FUNCTION_30
0x4002745	        0x48897df8	                mov qword [rbp - 8], rdi	       971	am.c	FUNCTION_30
0x4002749	          0x8975f4	              mov dword [rbp - 0xc], esi	       971	am.c	FUNCTION_30
0x400274c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       971	am.c	FUNCTION_30
0x4002750	          0x894df0	             mov dword [rbp - 0x10], ecx	       971	am.c	FUNCTION_30
0x4002753	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       972	am.c	FUNCTION_30	IF_1
0x4002756	            0x85c0	                           test eax, eax	       972	am.c	FUNCTION_30	IF_1
0x4002758	            0x7918	                           jns 0x4002772	       972	am.c	FUNCTION_30	IF_1
0x400275a	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       973	am.c	FUNCTION_30	IF_1
0x4002761	        0x488d45f0	                   lea rax, [rbp - 0x10]	       974	am.c	FUNCTION_30	IF_1	CALL_1
0x4002765	          0x4889c6	                            mov rsi, rax	       974	am.c	FUNCTION_30	IF_1	CALL_1
0x4002768	      0xbf00000000	                              mov edi, 0	       974	am.c	FUNCTION_30	IF_1	CALL_1
0x400276d	      0xe800000000	                          call 0x4002772	       974	am.c	FUNCTION_30	IF_1	CALL_1
0x4002772	        0x837df405	                cmp dword [rbp - 0xc], 5	       977	am.c	FUNCTION_30	SWITCH_1
0x4002776	     0xf878d000000	                            ja 0x4002809	       977	am.c	FUNCTION_30	SWITCH_1
0x400277c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       977	am.c	FUNCTION_30	SWITCH_1
0x400277f	    0x488b04c50000	                  mov rax, qword [rax*8]	       977	am.c	FUNCTION_30	SWITCH_1
0x4002787	            0xffe0	                                 jmp rax	       977	am.c	FUNCTION_30	SWITCH_1
0x4002789	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       979	am.c	FUNCTION_30	SWITCH_1	CALL_2
0x400278c	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       979	am.c	FUNCTION_30	SWITCH_1	CALL_2
0x4002790	        0x488b45f8	                mov rax, qword [rbp - 8]	       979	am.c	FUNCTION_30	SWITCH_1	CALL_2
0x4002794	      0xb900000000	                              mov ecx, 0	       979	am.c	FUNCTION_30	SWITCH_1	CALL_2
0x4002799	          0x4889c7	                            mov rdi, rax	       979	am.c	FUNCTION_30	SWITCH_1	CALL_2
0x400279c	      0xe8e4f4ffff	                call sym.split_mail_mbox	       979	am.c	FUNCTION_30	SWITCH_1	CALL_2
0x40027a1	            0xeb75	                           jmp 0x4002818	       979	am.c	FUNCTION_30	SWITCH_1	CALL_2
0x40027a3	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	       981	am.c	FUNCTION_30	SWITCH_1	CALL_3
0x40027a6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       981	am.c	FUNCTION_30	SWITCH_1	CALL_3
0x40027aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       981	am.c	FUNCTION_30	SWITCH_1	CALL_3
0x40027ae	          0x4889c6	                            mov rsi, rax	       981	am.c	FUNCTION_30	SWITCH_1	CALL_3
0x40027b1	      0xbf00000000	                              mov edi, 0	       981	am.c	FUNCTION_30	SWITCH_1	CALL_3
0x40027b6	      0xe8c3f6ffff	                call sym.split_mail_conv	       981	am.c	FUNCTION_30	SWITCH_1	CALL_3
0x40027bb	            0xeb5b	                           jmp 0x4002818	       981	am.c	FUNCTION_30	SWITCH_1	CALL_3
0x40027bd	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       983	am.c	FUNCTION_30	SWITCH_1	CALL_4
0x40027c0	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       983	am.c	FUNCTION_30	SWITCH_1	CALL_4
0x40027c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       983	am.c	FUNCTION_30	SWITCH_1	CALL_4
0x40027c8	          0x4889ce	                            mov rsi, rcx	       983	am.c	FUNCTION_30	SWITCH_1	CALL_4
0x40027cb	          0x4889c7	                            mov rdi, rax	       983	am.c	FUNCTION_30	SWITCH_1	CALL_4
0x40027ce	      0xe837faffff	        call sym.split_mail_stgit_series	       983	am.c	FUNCTION_30	SWITCH_1	CALL_4
0x40027d3	            0xeb43	                           jmp 0x4002818	       983	am.c	FUNCTION_30	SWITCH_1	CALL_4
0x40027d5	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	       985	am.c	FUNCTION_30	SWITCH_1	CALL_5
0x40027d8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       985	am.c	FUNCTION_30	SWITCH_1	CALL_5
0x40027dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       985	am.c	FUNCTION_30	SWITCH_1	CALL_5
0x40027e0	          0x4889c6	                            mov rsi, rax	       985	am.c	FUNCTION_30	SWITCH_1	CALL_5
0x40027e3	      0xbf00000000	                              mov edi, 0	       985	am.c	FUNCTION_30	SWITCH_1	CALL_5
0x40027e8	      0xe891f6ffff	                call sym.split_mail_conv	       985	am.c	FUNCTION_30	SWITCH_1	CALL_5
0x40027ed	            0xeb29	                           jmp 0x4002818	       985	am.c	FUNCTION_30	SWITCH_1	CALL_5
0x40027ef	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       987	am.c	FUNCTION_30	SWITCH_1	CALL_6
0x40027f2	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       987	am.c	FUNCTION_30	SWITCH_1	CALL_6
0x40027f6	        0x488b45f8	                mov rax, qword [rbp - 8]	       987	am.c	FUNCTION_30	SWITCH_1	CALL_6
0x40027fa	      0xb901000000	                              mov ecx, 1	       987	am.c	FUNCTION_30	SWITCH_1	CALL_6
0x40027ff	          0x4889c7	                            mov rdi, rax	       987	am.c	FUNCTION_30	SWITCH_1	CALL_6
0x4002802	      0xe87ef4ffff	                call sym.split_mail_mbox	       987	am.c	FUNCTION_30	SWITCH_1	CALL_6
0x4002807	            0xeb0f	                           jmp 0x4002818	       987	am.c	FUNCTION_30	SWITCH_1	CALL_6
0x4002809	      0xbf00000000	                              mov edi, 0	       989	am.c	FUNCTION_30	SWITCH_1	CALL_7
0x400280e	      0xb800000000	                              mov eax, 0	       989	am.c	FUNCTION_30	SWITCH_1	CALL_7
0x4002813	      0xe800000000	                          call 0x4002818	       989	am.c	FUNCTION_30	SWITCH_1	CALL_7
0x4002818	              0xc9	                                   leave	       992	am.c	FUNCTION_30
0x4002819	              0xc3	                                     ret	       992	am.c	FUNCTION_30
is_absolute_path	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,0	21
0x400034e	              0x55	                                push rbp	      1153	cache.h	FUNCTION_86
0x400034f	          0x4889e5	                            mov rbp, rsp	      1153	cache.h	FUNCTION_86
0x4000352	        0x4883ec08	                              sub rsp, 8	      1153	cache.h	FUNCTION_86
0x4000356	        0x48897df8	                mov qword [rbp - 8], rdi	      1153	cache.h	FUNCTION_86
0x400035a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	cache.h	FUNCTION_86
0x400035e	           0xfb600	                   movzx eax, byte [rax]	      1154	cache.h	FUNCTION_86
0x4000361	           0xfbec0	                           movsx eax, al	      1154	cache.h	FUNCTION_86
0x4000364	            0x89c7	                            mov edi, eax	      1154	cache.h	FUNCTION_86
0x4000366	      0xe8e4fcffff	                 call sym.git_is_dir_sep	      1154	cache.h	FUNCTION_86
0x400036b	            0x85c0	                           test eax, eax	      1154	cache.h	FUNCTION_86
0x400036d	            0x7510	                           jne 0x400037f	      1154	cache.h	FUNCTION_86
0x400036f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	cache.h	FUNCTION_86
0x4000373	          0x4889c7	                            mov rdi, rax	      1154	cache.h	FUNCTION_86
0x4000376	      0xe8c5fcffff	       call sym.git_has_dos_drive_prefix	      1154	cache.h	FUNCTION_86
0x400037b	            0x85c0	                           test eax, eax	      1154	cache.h	FUNCTION_86
0x400037d	            0x7407	                            je 0x4000386	      1154	cache.h	FUNCTION_86
0x400037f	      0xb801000000	                              mov eax, 1	      1154	cache.h	FUNCTION_86
0x4000384	            0xeb05	                           jmp 0x400038b	      1154	cache.h	FUNCTION_86
0x4000386	      0xb800000000	                              mov eax, 0	      1154	cache.h	FUNCTION_86
0x400038b	              0xc9	                                   leave	      1155	cache.h	FUNCTION_86
0x400038c	              0xc3	                                     ret	      1155	cache.h	FUNCTION_86
capture_command	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,1	21
0x40003ac	              0x55	                                push rbp	       111	run-command.h	FUNCTION_93
0x40003ad	          0x4889e5	                            mov rbp, rsp	       111	run-command.h	FUNCTION_93
0x40003b0	        0x4883ec20	                           sub rsp, 0x20	       111	run-command.h	FUNCTION_93
0x40003b4	        0x48897df8	                mov qword [rbp - 8], rdi	       111	run-command.h	FUNCTION_93
0x40003b8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       111	run-command.h	FUNCTION_93
0x40003bc	        0x488955e8	             mov qword [rbp - 0x18], rdx	       111	run-command.h	FUNCTION_93
0x40003c0	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       112	run-command.h	FUNCTION_93	CALL_1
0x40003c4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       112	run-command.h	FUNCTION_93	CALL_1
0x40003c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	run-command.h	FUNCTION_93	CALL_1
0x40003cc	        0x4883ec08	                              sub rsp, 8	       112	run-command.h	FUNCTION_93	CALL_1
0x40003d0	            0x6a00	                                  push 0	       112	run-command.h	FUNCTION_93	CALL_1
0x40003d2	    0x41b900000000	                              mov r9d, 0	       112	run-command.h	FUNCTION_93	CALL_1
0x40003d8	          0x4989c8	                             mov r8, rcx	       112	run-command.h	FUNCTION_93	CALL_1
0x40003db	          0x4889d1	                            mov rcx, rdx	       112	run-command.h	FUNCTION_93	CALL_1
0x40003de	      0xba00000000	                              mov edx, 0	       112	run-command.h	FUNCTION_93	CALL_1
0x40003e3	      0xbe00000000	                              mov esi, 0	       112	run-command.h	FUNCTION_93	CALL_1
0x40003e8	          0x4889c7	                            mov rdi, rax	       112	run-command.h	FUNCTION_93	CALL_1
0x40003eb	      0xe800000000	                          call 0x40003f0	       112	run-command.h	FUNCTION_93	CALL_1
0x40003f0	        0x4883c410	                           add rsp, 0x10	       112	run-command.h	FUNCTION_93	CALL_1
0x40003f4	              0xc9	                                   leave	       113	run-command.h	FUNCTION_93
0x40003f5	              0xc3	                                     ret	       113	run-command.h	FUNCTION_93
write_author_script	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,11	67
0x4000d57	              0x55	                                push rbp	       347	am.c	FUNCTION_15
0x4000d58	          0x4889e5	                            mov rbp, rsp	       347	am.c	FUNCTION_15
0x4000d5b	        0x4883ec30	                           sub rsp, 0x30	       347	am.c	FUNCTION_15
0x4000d5f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       347	am.c	FUNCTION_15
0x4000d63	    0x64488b042528	                mov rax, qword fs:[0x28]	       347	am.c	FUNCTION_15
0x4000d6c	        0x488945f8	                mov qword [rbp - 8], rax	       347	am.c	FUNCTION_15
0x4000d70	            0x31c0	                            xor eax, eax	       347	am.c	FUNCTION_15
0x4000d72	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       348	am.c	FUNCTION_15
0x4000d7a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       348	am.c	FUNCTION_15
0x4000d82	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       348	am.c	FUNCTION_15
0x4000d8a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       350	am.c	FUNCTION_15	CALL_1
0x4000d8e	      0xbe00000000	                              mov esi, 0	       350	am.c	FUNCTION_15	CALL_1
0x4000d93	          0x4889c7	                            mov rdi, rax	       350	am.c	FUNCTION_15	CALL_1
0x4000d96	      0xe866f4ffff	                  call sym.strbuf_addstr	       350	am.c	FUNCTION_15	CALL_1
0x4000d9b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       351	am.c	FUNCTION_15	CALL_2
0x4000d9f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       351	am.c	FUNCTION_15	CALL_2
0x4000da3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       351	am.c	FUNCTION_15	CALL_2
0x4000da7	          0x4889d6	                            mov rsi, rdx	       351	am.c	FUNCTION_15	CALL_2
0x4000daa	          0x4889c7	                            mov rdi, rax	       351	am.c	FUNCTION_15	CALL_2
0x4000dad	      0xe800000000	                          call 0x4000db2	       351	am.c	FUNCTION_15	CALL_2
0x4000db2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       352	am.c	FUNCTION_15	CALL_3
0x4000db6	      0xbe0a000000	                            mov esi, 0xa	       352	am.c	FUNCTION_15	CALL_3
0x4000dbb	          0x4889c7	                            mov rdi, rax	       352	am.c	FUNCTION_15	CALL_3
0x4000dbe	      0xe8d0f3ffff	                   call sym.strbuf_addch	       352	am.c	FUNCTION_15	CALL_3
0x4000dc3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       354	am.c	FUNCTION_15	CALL_4
0x4000dc7	      0xbe00000000	                              mov esi, 0	       354	am.c	FUNCTION_15	CALL_4
0x4000dcc	          0x4889c7	                            mov rdi, rax	       354	am.c	FUNCTION_15	CALL_4
0x4000dcf	      0xe82df4ffff	                  call sym.strbuf_addstr	       354	am.c	FUNCTION_15	CALL_4
0x4000dd4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       355	am.c	FUNCTION_15	CALL_5
0x4000dd8	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       355	am.c	FUNCTION_15	CALL_5
0x4000ddc	        0x488d45e0	                   lea rax, [rbp - 0x20]	       355	am.c	FUNCTION_15	CALL_5
0x4000de0	          0x4889d6	                            mov rsi, rdx	       355	am.c	FUNCTION_15	CALL_5
0x4000de3	          0x4889c7	                            mov rdi, rax	       355	am.c	FUNCTION_15	CALL_5
0x4000de6	      0xe800000000	                          call 0x4000deb	       355	am.c	FUNCTION_15	CALL_5
0x4000deb	        0x488d45e0	                   lea rax, [rbp - 0x20]	       356	am.c	FUNCTION_15	CALL_6
0x4000def	      0xbe0a000000	                            mov esi, 0xa	       356	am.c	FUNCTION_15	CALL_6
0x4000df4	          0x4889c7	                            mov rdi, rax	       356	am.c	FUNCTION_15	CALL_6
0x4000df7	      0xe897f3ffff	                   call sym.strbuf_addch	       356	am.c	FUNCTION_15	CALL_6
0x4000dfc	        0x488d45e0	                   lea rax, [rbp - 0x20]	       358	am.c	FUNCTION_15	CALL_7
0x4000e00	      0xbe00000000	                              mov esi, 0	       358	am.c	FUNCTION_15	CALL_7
0x4000e05	          0x4889c7	                            mov rdi, rax	       358	am.c	FUNCTION_15	CALL_7
0x4000e08	      0xe8f4f3ffff	                  call sym.strbuf_addstr	       358	am.c	FUNCTION_15	CALL_7
0x4000e0d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       359	am.c	FUNCTION_15	CALL_8
0x4000e11	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       359	am.c	FUNCTION_15	CALL_8
0x4000e15	        0x488d45e0	                   lea rax, [rbp - 0x20]	       359	am.c	FUNCTION_15	CALL_8
0x4000e19	          0x4889d6	                            mov rsi, rdx	       359	am.c	FUNCTION_15	CALL_8
0x4000e1c	          0x4889c7	                            mov rdi, rax	       359	am.c	FUNCTION_15	CALL_8
0x4000e1f	      0xe800000000	                          call 0x4000e24	       359	am.c	FUNCTION_15	CALL_8
0x4000e24	        0x488d45e0	                   lea rax, [rbp - 0x20]	       360	am.c	FUNCTION_15	CALL_9
0x4000e28	      0xbe0a000000	                            mov esi, 0xa	       360	am.c	FUNCTION_15	CALL_9
0x4000e2d	          0x4889c7	                            mov rdi, rax	       360	am.c	FUNCTION_15	CALL_9
0x4000e30	      0xe85ef3ffff	                   call sym.strbuf_addch	       360	am.c	FUNCTION_15	CALL_9
0x4000e35	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       362	am.c	FUNCTION_15	CALL_10
0x4000e39	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       362	am.c	FUNCTION_15	CALL_10
0x4000e3d	      0xbe00000000	                              mov esi, 0	       362	am.c	FUNCTION_15	CALL_10
0x4000e42	          0x4889c7	                            mov rdi, rax	       362	am.c	FUNCTION_15	CALL_10
0x4000e45	      0xe85cf8ffff	               call sym.write_state_text	       362	am.c	FUNCTION_15	CALL_10
0x4000e4a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       364	am.c	FUNCTION_15	CALL_11
0x4000e4e	          0x4889c7	                            mov rdi, rax	       364	am.c	FUNCTION_15	CALL_11
0x4000e51	      0xe800000000	                          call 0x4000e56	       364	am.c	FUNCTION_15	CALL_11
0x4000e56	              0x90	                                     nop	       365	am.c	FUNCTION_15
0x4000e57	        0x488b45f8	                mov rax, qword [rbp - 8]	       365	am.c	FUNCTION_15
0x4000e5b	    0x644833042528	                xor rax, qword fs:[0x28]	       365	am.c	FUNCTION_15
0x4000e64	            0x7405	                            je 0x4000e6b	       365	am.c	FUNCTION_15
0x4000e66	      0xe800000000	                          call 0x4000e6b	       365	am.c	FUNCTION_15
0x4000e6b	              0xc9	                                   leave	       365	am.c	FUNCTION_15
0x4000e6c	              0xc3	                                     ret	       365	am.c	FUNCTION_15
strbuf_addch	functions,0:IF,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,2	33
0x4000193	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_97
0x4000194	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_97
0x4000197	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_97
0x400019b	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_97
0x400019f	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_97
0x40001a2	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_97	IF_1	CALL_1
0x40001a6	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_97	IF_1	CALL_1
0x40001a9	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_97	IF_1	CALL_1
0x40001ae	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_97	IF_1	CALL_1
0x40001b1	            0x7511	                           jne 0x40001c4	       227	strbuf.h	FUNCTION_97	IF_1	CALL_1
0x40001b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_97	CALL_2
0x40001b7	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_97	CALL_2
0x40001bc	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_97	CALL_2
0x40001bf	      0xe800000000	                          call 0x40001c4	       228	strbuf.h	FUNCTION_97	CALL_2
0x40001c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_97
0x40001c8	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_97
0x40001cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_97
0x40001d0	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_97
0x40001d4	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_97
0x40001d8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_97
0x40001dc	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_97
0x40001e0	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_97
0x40001e3	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_97
0x40001e6	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_97
0x40001e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_97
0x40001ec	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_97
0x40001f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_97
0x40001f4	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_97
0x40001f8	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_97
0x40001fb	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_97
0x40001fe	              0x90	                                     nop	       231	strbuf.h	FUNCTION_97
0x40001ff	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_97
0x4000200	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_97
am_path	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,1	14
0x4000677	              0x55	                                push rbp	       182	am.c	FUNCTION_6
0x4000678	          0x4889e5	                            mov rbp, rsp	       182	am.c	FUNCTION_6
0x400067b	        0x4883ec10	                           sub rsp, 0x10	       182	am.c	FUNCTION_6
0x400067f	        0x48897df8	                mov qword [rbp - 8], rdi	       182	am.c	FUNCTION_6
0x4000683	        0x488975f0	             mov qword [rbp - 0x10], rsi	       182	am.c	FUNCTION_6
0x4000687	        0x488b45f8	                mov rax, qword [rbp - 8]	       183	am.c	FUNCTION_6	CALL_1
0x400068b	          0x488b00	                    mov rax, qword [rax]	       183	am.c	FUNCTION_6	CALL_1
0x400068e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       183	am.c	FUNCTION_6	CALL_1
0x4000692	          0x4889c6	                            mov rsi, rax	       183	am.c	FUNCTION_6	CALL_1
0x4000695	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400069a	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x400069f	      0xe800000000	                          call 0x40006a4	       183	am.c	FUNCTION_6	CALL_1
0x40006a4	              0xc9	                                   leave	       184	am.c	FUNCTION_6
0x40006a5	              0xc3	                                     ret	       184	am.c	FUNCTION_6
strbuf_avail	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,0	18
0x40000c3	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_95
0x40000c4	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_95
0x40000c7	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_95
0x40000cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_95
0x40000cf	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_95
0x40000d2	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_95
0x40000d5	            0x741b	                            je 0x40000f2	       141	strbuf.h	FUNCTION_95
0x40000d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_95
0x40000db	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_95
0x40000de	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_95
0x40000e2	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_95
0x40000e6	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_95
0x40000e9	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_95
0x40000ec	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_95
0x40000f0	            0xeb05	                           jmp 0x40000f7	       141	strbuf.h	FUNCTION_95
0x40000f2	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_95
0x40000f7	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_95
0x40000f8	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_95
get_commit_info	functions,0:IF,4:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,2:CALL,23	180
0x40036f9	              0x55	                                push rbp	      1327	am.c	FUNCTION_39
0x40036fa	          0x4889e5	                            mov rbp, rsp	      1327	am.c	FUNCTION_39
0x40036fd	              0x53	                                push rbx	      1327	am.c	FUNCTION_39
0x40036fe	    0x4881ec880000	                           sub rsp, 0x88	      1327	am.c	FUNCTION_39
0x4003705	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      1327	am.c	FUNCTION_39
0x400370c	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      1327	am.c	FUNCTION_39
0x4003713	    0x64488b042528	                mov rax, qword fs:[0x28]	      1327	am.c	FUNCTION_39
0x400371c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1327	am.c	FUNCTION_39
0x4003720	            0x31c0	                            xor eax, eax	      1327	am.c	FUNCTION_39
0x4003722	      0xe800000000	                          call 0x4003727	      1332	am.c	FUNCTION_39	CALL_2
0x4003727	          0x4889c2	                            mov rdx, rax	      1332	am.c	FUNCTION_39	CALL_2
0x400372a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1332	am.c	FUNCTION_39	CALL_2
0x4003731	      0xbe00000000	                              mov esi, 0	      1332	am.c	FUNCTION_39	CALL_2
0x4003736	          0x4889c7	                            mov rdi, rax	      1332	am.c	FUNCTION_39	CALL_2
0x4003739	      0xe800000000	                          call 0x400373e	      1332	am.c	FUNCTION_39	CALL_2
0x400373e	        0x48894588	             mov qword [rbp - 0x78], rax	      1332	am.c	FUNCTION_39	CALL_2
0x4003742	        0x488d5580	                   lea rdx, [rbp - 0x80]	      1334	am.c	FUNCTION_39	CALL_3
0x4003746	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1334	am.c	FUNCTION_39	CALL_3
0x400374a	      0xbe00000000	                              mov esi, 0	      1334	am.c	FUNCTION_39	CALL_3
0x400374f	          0x4889c7	                            mov rdi, rax	      1334	am.c	FUNCTION_39	CALL_3
0x4003752	      0xe800000000	                          call 0x4003757	      1334	am.c	FUNCTION_39	CALL_3
0x4003757	        0x48894590	             mov qword [rbp - 0x70], rax	      1334	am.c	FUNCTION_39	CALL_3
0x400375b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x400375f	            0x89c2	                            mov edx, eax	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x4003761	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x4003765	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x4003769	          0x4889ce	                            mov rsi, rcx	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x400376c	          0x4889c7	                            mov rdi, rax	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x400376f	      0xe800000000	                          call 0x4003774	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x4003774	            0x85c0	                           test eax, eax	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x4003776	            0x7929	                           jns 0x40037a1	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x4003778	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1337	am.c	FUNCTION_39	CALL_6
0x400377c	            0x89c3	                            mov ebx, eax	      1337	am.c	FUNCTION_39	CALL_6
0x400377e	      0xbf00000000	                              mov edi, 0	      1337	am.c	FUNCTION_39	CALL_6
0x4003783	      0xe8aecaffff	                               call sym.	      1337	am.c	FUNCTION_39	CALL_6
0x4003788	          0x4889c1	                            mov rcx, rax	      1337	am.c	FUNCTION_39	CALL_6
0x400378b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1337	am.c	FUNCTION_39	CALL_6
0x400378f	          0x4889c2	                            mov rdx, rax	      1337	am.c	FUNCTION_39	CALL_6
0x4003792	            0x89de	                            mov esi, ebx	      1337	am.c	FUNCTION_39	CALL_6
0x4003794	          0x4889cf	                            mov rdi, rcx	      1337	am.c	FUNCTION_39	CALL_6
0x4003797	      0xb800000000	                              mov eax, 0	      1337	am.c	FUNCTION_39	CALL_6
0x400379c	      0xe800000000	                          call 0x40037a1	      1337	am.c	FUNCTION_39	CALL_6
0x40037a1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1339	am.c	FUNCTION_39	CALL_7
0x40037a8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1339	am.c	FUNCTION_39	CALL_7
0x40037ac	          0x4885c0	                           test rax, rax	      1339	am.c	FUNCTION_39	CALL_7
0x40037af	            0x7419	                            je 0x40037ca	      1339	am.c	FUNCTION_39	CALL_7
0x40037b1	      0xb900000000	                              mov ecx, 0	      1339	am.c	FUNCTION_39	CALL_7
0x40037b6	      0xba3b050000	                          mov edx, 0x53b	      1339	am.c	FUNCTION_39	CALL_7
0x40037bb	      0xbe00000000	                              mov esi, 0	      1339	am.c	FUNCTION_39	CALL_7
0x40037c0	      0xbf00000000	                              mov edi, 0	      1339	am.c	FUNCTION_39	CALL_7
0x40037c5	      0xe800000000	                          call 0x40037ca	      1339	am.c	FUNCTION_39	CALL_7
0x40037ca	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1340	am.c	FUNCTION_39	IF_2
0x40037ce	          0x4885c0	                           test rax, rax	      1340	am.c	FUNCTION_39	IF_2
0x40037d1	            0x7433	                            je 0x4003806	      1340	am.c	FUNCTION_39	IF_2
0x40037d3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1342	am.c	FUNCTION_39	CALL_8
0x40037d7	          0x4889c2	                            mov rdx, rax	      1342	am.c	FUNCTION_39	CALL_8
0x40037da	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1342	am.c	FUNCTION_39	CALL_8
0x40037de	          0x4829c2	                            sub rdx, rax	      1342	am.c	FUNCTION_39	CALL_8
0x40037e1	          0x4889d0	                            mov rax, rdx	      1342	am.c	FUNCTION_39	CALL_8
0x40037e4	          0x4889c2	                            mov rdx, rax	      1342	am.c	FUNCTION_39	CALL_8
0x40037e7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1342	am.c	FUNCTION_39	CALL_8
0x40037eb	          0x4889d6	                            mov rsi, rdx	      1342	am.c	FUNCTION_39	CALL_8
0x40037ee	          0x4889c7	                            mov rdi, rax	      1342	am.c	FUNCTION_39	CALL_8
0x40037f1	      0xe800000000	                          call 0x40037f6	      1342	am.c	FUNCTION_39	CALL_8
0x40037f6	          0x4889c2	                            mov rdx, rax	      1342	am.c	FUNCTION_39	CALL_8
0x40037f9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1341	am.c	FUNCTION_39	IF_2
0x4003800	        0x48895010	             mov qword [rax + 0x10], rdx	      1341	am.c	FUNCTION_39	IF_2
0x4003804	            0xeb18	                           jmp 0x400381e	      1341	am.c	FUNCTION_39	IF_2
0x4003806	      0xbf00000000	                              mov edi, 0	      1344	am.c	FUNCTION_39	CALL_9
0x400380b	      0xe800000000	                          call 0x4003810	      1344	am.c	FUNCTION_39	CALL_9
0x4003810	          0x4889c2	                            mov rdx, rax	      1344	am.c	FUNCTION_39	CALL_9
0x4003813	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1344	am.c	FUNCTION_39	CALL_9
0x400381a	        0x48895010	             mov qword [rax + 0x10], rdx	      1344	am.c	FUNCTION_39	CALL_9
0x400381e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1346	am.c	FUNCTION_39	CALL_10
0x4003825	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1346	am.c	FUNCTION_39	CALL_10
0x4003829	          0x4885c0	                           test rax, rax	      1346	am.c	FUNCTION_39	CALL_10
0x400382c	            0x7419	                            je 0x4003847	      1346	am.c	FUNCTION_39	CALL_10
0x400382e	      0xb900000000	                              mov ecx, 0	      1346	am.c	FUNCTION_39	CALL_10
0x4003833	      0xba42050000	                          mov edx, 0x542	      1346	am.c	FUNCTION_39	CALL_10
0x4003838	      0xbe00000000	                              mov esi, 0	      1346	am.c	FUNCTION_39	CALL_10
0x400383d	      0xbf00000000	                              mov edi, 0	      1346	am.c	FUNCTION_39	CALL_10
0x4003842	      0xe800000000	                          call 0x4003847	      1346	am.c	FUNCTION_39	CALL_10
0x4003847	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1347	am.c	FUNCTION_39	IF_3
0x400384b	          0x4885c0	                           test rax, rax	      1347	am.c	FUNCTION_39	IF_3
0x400384e	            0x7433	                            je 0x4003883	      1347	am.c	FUNCTION_39	IF_3
0x4003850	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1349	am.c	FUNCTION_39	CALL_11
0x4003854	          0x4889c2	                            mov rdx, rax	      1349	am.c	FUNCTION_39	CALL_11
0x4003857	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1349	am.c	FUNCTION_39	CALL_11
0x400385b	          0x4829c2	                            sub rdx, rax	      1349	am.c	FUNCTION_39	CALL_11
0x400385e	          0x4889d0	                            mov rax, rdx	      1349	am.c	FUNCTION_39	CALL_11
0x4003861	          0x4889c2	                            mov rdx, rax	      1349	am.c	FUNCTION_39	CALL_11
0x4003864	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1349	am.c	FUNCTION_39	CALL_11
0x4003868	          0x4889d6	                            mov rsi, rdx	      1349	am.c	FUNCTION_39	CALL_11
0x400386b	          0x4889c7	                            mov rdi, rax	      1349	am.c	FUNCTION_39	CALL_11
0x400386e	      0xe800000000	                          call 0x4003873	      1349	am.c	FUNCTION_39	CALL_11
0x4003873	          0x4889c2	                            mov rdx, rax	      1349	am.c	FUNCTION_39	CALL_11
0x4003876	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1348	am.c	FUNCTION_39	IF_3
0x400387d	        0x48895018	             mov qword [rax + 0x18], rdx	      1348	am.c	FUNCTION_39	IF_3
0x4003881	            0xeb18	                           jmp 0x400389b	      1348	am.c	FUNCTION_39	IF_3
0x4003883	      0xbf00000000	                              mov edi, 0	      1351	am.c	FUNCTION_39	CALL_12
0x4003888	      0xe800000000	                          call 0x400388d	      1351	am.c	FUNCTION_39	CALL_12
0x400388d	          0x4889c2	                            mov rdx, rax	      1351	am.c	FUNCTION_39	CALL_12
0x4003890	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1351	am.c	FUNCTION_39	CALL_12
0x4003897	        0x48895018	             mov qword [rax + 0x18], rdx	      1351	am.c	FUNCTION_39	CALL_12
0x400389b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1353	am.c	FUNCTION_39	CALL_13
0x40038a2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1353	am.c	FUNCTION_39	CALL_13
0x40038a6	          0x4885c0	                           test rax, rax	      1353	am.c	FUNCTION_39	CALL_13
0x40038a9	            0x7419	                            je 0x40038c4	      1353	am.c	FUNCTION_39	CALL_13
0x40038ab	      0xb900000000	                              mov ecx, 0	      1353	am.c	FUNCTION_39	CALL_13
0x40038b0	      0xba49050000	                          mov edx, 0x549	      1353	am.c	FUNCTION_39	CALL_13
0x40038b5	      0xbe00000000	                              mov esi, 0	      1353	am.c	FUNCTION_39	CALL_13
0x40038ba	      0xbf00000000	                              mov edi, 0	      1353	am.c	FUNCTION_39	CALL_13
0x40038bf	      0xe800000000	                          call 0x40038c4	      1353	am.c	FUNCTION_39	CALL_13
0x40038c4	      0xbf00000000	                              mov edi, 0	      1354	am.c	FUNCTION_39	CALL_15
0x40038c9	      0xe800000000	                          call 0x40038ce	      1354	am.c	FUNCTION_39	CALL_15
0x40038ce	          0x4889c2	                            mov rdx, rax	      1354	am.c	FUNCTION_39	CALL_15
0x40038d1	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1354	am.c	FUNCTION_39	CALL_15
0x40038d5	          0x4889d6	                            mov rsi, rdx	      1354	am.c	FUNCTION_39	CALL_15
0x40038d8	          0x4889c7	                            mov rdi, rax	      1354	am.c	FUNCTION_39	CALL_15
0x40038db	      0xe800000000	                          call 0x40038e0	      1354	am.c	FUNCTION_39	CALL_15
0x40038e0	          0x4889c7	                            mov rdi, rax	      1354	am.c	FUNCTION_39	CALL_15
0x40038e3	      0xe800000000	                          call 0x40038e8	      1354	am.c	FUNCTION_39	CALL_15
0x40038e8	          0x4889c2	                            mov rdx, rax	      1354	am.c	FUNCTION_39	CALL_15
0x40038eb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1354	am.c	FUNCTION_39	CALL_15
0x40038f2	        0x48895020	             mov qword [rax + 0x20], rdx	      1354	am.c	FUNCTION_39	CALL_15
0x40038f6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1356	am.c	FUNCTION_39	CALL_16
0x40038fd	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1356	am.c	FUNCTION_39	CALL_16
0x4003901	          0x4885c0	                           test rax, rax	      1356	am.c	FUNCTION_39	CALL_16
0x4003904	            0x7419	                            je 0x400391f	      1356	am.c	FUNCTION_39	CALL_16
0x4003906	      0xb900000000	                              mov ecx, 0	      1356	am.c	FUNCTION_39	CALL_16
0x400390b	      0xba4c050000	                          mov edx, 0x54c	      1356	am.c	FUNCTION_39	CALL_16
0x4003910	      0xbe00000000	                              mov esi, 0	      1356	am.c	FUNCTION_39	CALL_16
0x4003915	      0xbf00000000	                              mov edi, 0	      1356	am.c	FUNCTION_39	CALL_16
0x400391a	      0xe800000000	                          call 0x400391f	      1356	am.c	FUNCTION_39	CALL_16
0x400391f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1357	am.c	FUNCTION_39	CALL_17
0x4003923	      0xbe00000000	                              mov esi, 0	      1357	am.c	FUNCTION_39	CALL_17
0x4003928	          0x4889c7	                            mov rdi, rax	      1357	am.c	FUNCTION_39	CALL_17
0x400392b	      0xe800000000	                          call 0x4003930	      1357	am.c	FUNCTION_39	CALL_17
0x4003930	        0x48894598	             mov qword [rbp - 0x68], rax	      1357	am.c	FUNCTION_39	CALL_17
0x4003934	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      1358	am.c	FUNCTION_39	IF_4
0x4003939	            0x7530	                           jne 0x400396b	      1358	am.c	FUNCTION_39	IF_4
0x400393b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1359	am.c	FUNCTION_39	CALL_20
0x4003942	        0x4883c004	                              add rax, 4	      1359	am.c	FUNCTION_39	CALL_20
0x4003946	          0x4889c7	                            mov rdi, rax	      1359	am.c	FUNCTION_39	CALL_20
0x4003949	      0xe800000000	                          call 0x400394e	      1359	am.c	FUNCTION_39	CALL_20
0x400394e	          0x4889c3	                            mov rbx, rax	      1359	am.c	FUNCTION_39	CALL_20
0x4003951	      0xbf00000000	                              mov edi, 0	      1359	am.c	FUNCTION_39	CALL_20
0x4003956	      0xe8dbc8ffff	                               call sym.	      1359	am.c	FUNCTION_39	CALL_20
0x400395b	          0x4889de	                            mov rsi, rbx	      1359	am.c	FUNCTION_39	CALL_20
0x400395e	          0x4889c7	                            mov rdi, rax	      1359	am.c	FUNCTION_39	CALL_20
0x4003961	      0xb800000000	                              mov eax, 0	      1359	am.c	FUNCTION_39	CALL_20
0x4003966	      0xe800000000	                          call 0x400396b	      1359	am.c	FUNCTION_39	CALL_20
0x400396b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1360	am.c	FUNCTION_39	CALL_21
0x400396f	        0x4883c002	                              add rax, 2	      1360	am.c	FUNCTION_39	CALL_21
0x4003973	          0x4889c7	                            mov rdi, rax	      1360	am.c	FUNCTION_39	CALL_21
0x4003976	      0xe800000000	                          call 0x400397b	      1360	am.c	FUNCTION_39	CALL_21
0x400397b	          0x4889c2	                            mov rdx, rax	      1360	am.c	FUNCTION_39	CALL_21
0x400397e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1360	am.c	FUNCTION_39	CALL_21
0x4003985	        0x48895028	             mov qword [rax + 0x28], rdx	      1360	am.c	FUNCTION_39	CALL_21
0x4003989	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1361	am.c	FUNCTION_39	CALL_22
0x4003990	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1361	am.c	FUNCTION_39	CALL_22
0x4003994	          0x4889c7	                            mov rdi, rax	      1361	am.c	FUNCTION_39	CALL_22
0x4003997	      0xe800000000	                          call 0x400399c	      1361	am.c	FUNCTION_39	CALL_22
0x400399c	          0x4889c2	                            mov rdx, rax	      1361	am.c	FUNCTION_39	CALL_22
0x400399f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1361	am.c	FUNCTION_39	CALL_22
0x40039a6	        0x48895030	             mov qword [rax + 0x30], rdx	      1361	am.c	FUNCTION_39	CALL_22
0x40039aa	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1362	am.c	FUNCTION_39	CALL_23
0x40039ae	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1362	am.c	FUNCTION_39	CALL_23
0x40039b5	          0x4889d6	                            mov rsi, rdx	      1362	am.c	FUNCTION_39	CALL_23
0x40039b8	          0x4889c7	                            mov rdi, rax	      1362	am.c	FUNCTION_39	CALL_23
0x40039bb	      0xe800000000	                          call 0x40039c0	      1362	am.c	FUNCTION_39	CALL_23
0x40039c0	              0x90	                                     nop	      1363	am.c	FUNCTION_39
0x40039c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1363	am.c	FUNCTION_39
0x40039c5	    0x644833042528	                xor rax, qword fs:[0x28]	      1363	am.c	FUNCTION_39
0x40039ce	            0x7405	                            je 0x40039d5	      1363	am.c	FUNCTION_39
0x40039d0	      0xe800000000	                          call 0x40039d5	      1363	am.c	FUNCTION_39
0x40039d5	    0x4881c4880000	                           add rsp, 0x88	      1363	am.c	FUNCTION_39
0x40039dc	              0x5b	                                 pop rbx	      1363	am.c	FUNCTION_39
0x40039dd	              0x5d	                                 pop rbp	      1363	am.c	FUNCTION_39
0x40039de	              0xc3	                                     ret	      1363	am.c	FUNCTION_39
linelen	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,0	14
0x40004a9	              0x55	                                push rbp	        56	am.c	FUNCTION_2
0x40004aa	          0x4889e5	                            mov rbp, rsp	        56	am.c	FUNCTION_2
0x40004ad	        0x4883ec10	                           sub rsp, 0x10	        56	am.c	FUNCTION_2
0x40004b1	        0x48897df8	                mov qword [rbp - 8], rdi	        56	am.c	FUNCTION_2
0x40004b5	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	am.c	FUNCTION_2
0x40004b9	      0xbe0a000000	                            mov esi, 0xa	        57	am.c	FUNCTION_2
0x40004be	          0x4889c7	                            mov rdi, rax	        57	am.c	FUNCTION_2
0x40004c1	      0xe800000000	                          call 0x40004c6	        57	am.c	FUNCTION_2
0x40004c6	          0x4889c2	                            mov rdx, rax	        57	am.c	FUNCTION_2
0x40004c9	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	am.c	FUNCTION_2
0x40004cd	          0x4829c2	                            sub rdx, rax	        57	am.c	FUNCTION_2
0x40004d0	          0x4889d0	                            mov rax, rdx	        57	am.c	FUNCTION_2
0x40004d3	              0xc9	                                   leave	        58	am.c	FUNCTION_2
0x40004d4	              0xc3	                                     ret	        58	am.c	FUNCTION_2
read_author_script	functions,0:IF,4:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,15	148
0x4000b02	              0x55	                                push rbp	       305	am.c	FUNCTION_14
0x4000b03	          0x4889e5	                            mov rbp, rsp	       305	am.c	FUNCTION_14
0x4000b06	        0x4883ec70	                           sub rsp, 0x70	       305	am.c	FUNCTION_14
0x4000b0a	        0x48897d98	             mov qword [rbp - 0x68], rdi	       305	am.c	FUNCTION_14
0x4000b0e	    0x64488b042528	                mov rax, qword fs:[0x28]	       305	am.c	FUNCTION_14
0x4000b17	        0x488945f8	                mov qword [rbp - 8], rax	       305	am.c	FUNCTION_14
0x4000b1b	            0x31c0	                            xor eax, eax	       305	am.c	FUNCTION_14
0x4000b1d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       306	am.c	FUNCTION_14	CALL_1
0x4000b21	      0xbe00000000	                              mov esi, 0	       306	am.c	FUNCTION_14	CALL_1
0x4000b26	          0x4889c7	                            mov rdi, rax	       306	am.c	FUNCTION_14	CALL_1
0x4000b29	      0xe849fbffff	                        call sym.am_path	       306	am.c	FUNCTION_14	CALL_1
0x4000b2e	        0x488945a8	             mov qword [rbp - 0x58], rax	       306	am.c	FUNCTION_14	CALL_1
0x4000b32	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       307	am.c	FUNCTION_14
0x4000b3a	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       307	am.c	FUNCTION_14
0x4000b42	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       307	am.c	FUNCTION_14
0x4000b4a	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       308	am.c	FUNCTION_14
0x4000b52	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       308	am.c	FUNCTION_14
0x4000b59	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       308	am.c	FUNCTION_14
0x4000b60	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       308	am.c	FUNCTION_14
0x4000b64	          0x83c801	                               or eax, 1	       308	am.c	FUNCTION_14
0x4000b67	          0x8845e0	               mov byte [rbp - 0x20], al	       308	am.c	FUNCTION_14
0x4000b6a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       308	am.c	FUNCTION_14
0x4000b72	    0xc745a0ffffff	     mov dword [rbp - 0x60], 0xffffffff 	       309	am.c	FUNCTION_14
0x4000b79	        0x488b4598	             mov rax, qword [rbp - 0x68]	       312	am.c	FUNCTION_14	CALL_2
0x4000b7d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       312	am.c	FUNCTION_14	CALL_2
0x4000b81	          0x4885c0	                           test rax, rax	       312	am.c	FUNCTION_14	CALL_2
0x4000b84	            0x7419	                            je 0x4000b9f	       312	am.c	FUNCTION_14	CALL_2
0x4000b86	      0xb900000000	                              mov ecx, 0	       312	am.c	FUNCTION_14	CALL_2
0x4000b8b	      0xba38010000	                          mov edx, 0x138	       312	am.c	FUNCTION_14	CALL_2
0x4000b90	      0xbe00000000	                              mov esi, 0	       312	am.c	FUNCTION_14	CALL_2
0x4000b95	      0xbf00000000	                              mov edi, 0	       312	am.c	FUNCTION_14	CALL_2
0x4000b9a	      0xe800000000	                          call 0x4000b9f	       312	am.c	FUNCTION_14	CALL_2
0x4000b9f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       313	am.c	FUNCTION_14	CALL_3
0x4000ba3	        0x488b4018	            mov rax, qword [rax + 0x18] 	       313	am.c	FUNCTION_14	CALL_3
0x4000ba7	          0x4885c0	                           test rax, rax	       313	am.c	FUNCTION_14	CALL_3
0x4000baa	            0x7419	                            je 0x4000bc5	       313	am.c	FUNCTION_14	CALL_3
0x4000bac	      0xb900000000	                              mov ecx, 0	       313	am.c	FUNCTION_14	CALL_3
0x4000bb1	      0xba39010000	                          mov edx, 0x139	       313	am.c	FUNCTION_14	CALL_3
0x4000bb6	      0xbe00000000	                              mov esi, 0	       313	am.c	FUNCTION_14	CALL_3
0x4000bbb	      0xbf00000000	                              mov edi, 0	       313	am.c	FUNCTION_14	CALL_3
0x4000bc0	      0xe800000000	                          call 0x4000bc5	       313	am.c	FUNCTION_14	CALL_3
0x4000bc5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       314	am.c	FUNCTION_14	CALL_4
0x4000bc9	        0x488b4020	            mov rax, qword [rax + 0x20] 	       314	am.c	FUNCTION_14	CALL_4
0x4000bcd	          0x4885c0	                           test rax, rax	       314	am.c	FUNCTION_14	CALL_4
0x4000bd0	            0x7419	                            je 0x4000beb	       314	am.c	FUNCTION_14	CALL_4
0x4000bd2	      0xb900000000	                              mov ecx, 0	       314	am.c	FUNCTION_14	CALL_4
0x4000bd7	      0xba3a010000	                          mov edx, 0x13a	       314	am.c	FUNCTION_14	CALL_4
0x4000bdc	      0xbe00000000	                              mov esi, 0	       314	am.c	FUNCTION_14	CALL_4
0x4000be1	      0xbf00000000	                              mov edi, 0	       314	am.c	FUNCTION_14	CALL_4
0x4000be6	      0xe800000000	                          call 0x4000beb	       314	am.c	FUNCTION_14	CALL_4
0x4000beb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       316	am.c	FUNCTION_14	CALL_5
0x4000bef	      0xbe00000000	                              mov esi, 0	       316	am.c	FUNCTION_14	CALL_5
0x4000bf4	          0x4889c7	                            mov rdi, rax	       316	am.c	FUNCTION_14	CALL_5
0x4000bf7	      0xb800000000	                              mov eax, 0	       316	am.c	FUNCTION_14	CALL_5
0x4000bfc	      0xe800000000	                          call 0x4000c01	       316	am.c	FUNCTION_14	CALL_5
0x4000c01	          0x8945a4	             mov dword [rbp - 0x5c], eax	       316	am.c	FUNCTION_14	CALL_5
0x4000c04	        0x837da400	               cmp dword [rbp - 0x5c], 0	       317	am.c	FUNCTION_14	IF_1
0x4000c08	            0x7937	                           jns 0x4000c41	       317	am.c	FUNCTION_14	IF_1
0x4000c0a	      0xe800000000	                          call 0x4000c0f	       318	am.c	FUNCTION_14	IF_1	IF_2
0x4000c0f	            0x8b00	                    mov eax, dword [rax]	       318	am.c	FUNCTION_14	IF_1	IF_2
0x4000c11	          0x83f802	                              cmp eax, 2	       318	am.c	FUNCTION_14	IF_1	IF_2
0x4000c14	            0x750a	                           jne 0x4000c20	       318	am.c	FUNCTION_14	IF_1	IF_2
0x4000c16	      0xb800000000	                              mov eax, 0	       319	am.c	FUNCTION_14	IF_1	IF_2
0x4000c1b	      0xe921010000	                           jmp 0x4000d41	       319	am.c	FUNCTION_14	IF_1	IF_2
0x4000c20	      0xbf00000000	                              mov edi, 0	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4000c25	      0xe80cf6ffff	                               call sym.	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4000c2a	          0x4889c2	                            mov rdx, rax	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4000c2d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4000c31	          0x4889c6	                            mov rsi, rax	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4000c34	          0x4889d7	                            mov rdi, rdx	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4000c37	      0xb800000000	                              mov eax, 0	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4000c3c	      0xe800000000	                          call 0x4000c41	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4000c41	          0x8b4da4	             mov ecx, dword [rbp - 0x5c]	       322	am.c	FUNCTION_14	CALL_8
0x4000c44	        0x488d45b0	                   lea rax, [rbp - 0x50]	       322	am.c	FUNCTION_14	CALL_8
0x4000c48	      0xba00000000	                              mov edx, 0	       322	am.c	FUNCTION_14	CALL_8
0x4000c4d	            0x89ce	                            mov esi, ecx	       322	am.c	FUNCTION_14	CALL_8
0x4000c4f	          0x4889c7	                            mov rdi, rax	       322	am.c	FUNCTION_14	CALL_8
0x4000c52	      0xe800000000	                          call 0x4000c57	       322	am.c	FUNCTION_14	CALL_8
0x4000c57	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       323	am.c	FUNCTION_14	CALL_9
0x4000c5a	            0x89c7	                            mov edi, eax	       323	am.c	FUNCTION_14	CALL_9
0x4000c5c	      0xe800000000	                          call 0x4000c61	       323	am.c	FUNCTION_14	CALL_9
0x4000c61	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       324	am.c	FUNCTION_14	IF_3	CALL_10
0x4000c65	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       324	am.c	FUNCTION_14	IF_3	CALL_10
0x4000c69	          0x4889d6	                            mov rsi, rdx	       324	am.c	FUNCTION_14	IF_3	CALL_10
0x4000c6c	          0x4889c7	                            mov rdi, rax	       324	am.c	FUNCTION_14	IF_3	CALL_10
0x4000c6f	      0xe8acfdffff	        call sym.parse_key_value_squoted	       324	am.c	FUNCTION_14	IF_3	CALL_10
0x4000c74	            0x85c0	                           test eax, eax	       324	am.c	FUNCTION_14	IF_3	CALL_10
0x4000c76	     0xf859d000000	                           jne 0x4000d19	       324	am.c	FUNCTION_14	IF_3	CALL_10
0x4000c7c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       327	am.c	FUNCTION_14	IF_4
0x4000c7f	          0x83f803	                              cmp eax, 3	       327	am.c	FUNCTION_14	IF_4
0x4000c82	     0xf8592000000	                           jne 0x4000d1a	       327	am.c	FUNCTION_14	IF_4
0x4000c88	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x4000c8c	          0x488b00	                    mov rax, qword [rax]	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x4000c8f	      0xbe00000000	                              mov esi, 0	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x4000c94	          0x4889c7	                            mov rdi, rax	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x4000c97	      0xe800000000	                          call 0x4000c9c	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x4000c9c	            0x85c0	                           test eax, eax	       327	am.c	FUNCTION_14	IF_4
0x4000c9e	            0x757a	                           jne 0x4000d1a	       327	am.c	FUNCTION_14	IF_4
0x4000ca0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x4000ca4	        0x4883c010	                           add rax, 0x10	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x4000ca8	          0x488b00	                    mov rax, qword [rax]	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x4000cab	      0xbe00000000	                              mov esi, 0	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x4000cb0	          0x4889c7	                            mov rdi, rax	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x4000cb3	      0xe800000000	                          call 0x4000cb8	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x4000cb8	            0x85c0	                           test eax, eax	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x4000cba	            0x755e	                           jne 0x4000d1a	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x4000cbc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x4000cc0	        0x4883c020	                           add rax, 0x20	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x4000cc4	          0x488b00	                    mov rax, qword [rax]	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x4000cc7	      0xbe00000000	                              mov esi, 0	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x4000ccc	          0x4889c7	                            mov rdi, rax	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x4000ccf	      0xe800000000	                          call 0x4000cd4	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x4000cd4	            0x85c0	                           test eax, eax	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x4000cd6	            0x7542	                           jne 0x4000d1a	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x4000cd8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       332	am.c	FUNCTION_14
0x4000cdc	        0x488b5008	                mov rdx, qword [rax + 8]	       332	am.c	FUNCTION_14
0x4000ce0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       332	am.c	FUNCTION_14
0x4000ce4	        0x48895010	             mov qword [rax + 0x10], rdx	       332	am.c	FUNCTION_14
0x4000ce8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       333	am.c	FUNCTION_14
0x4000cec	        0x4883c010	                           add rax, 0x10	       333	am.c	FUNCTION_14
0x4000cf0	        0x488b5008	                mov rdx, qword [rax + 8]	       333	am.c	FUNCTION_14
0x4000cf4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       333	am.c	FUNCTION_14
0x4000cf8	        0x48895018	             mov qword [rax + 0x18], rdx	       333	am.c	FUNCTION_14
0x4000cfc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       334	am.c	FUNCTION_14
0x4000d00	        0x4883c020	                           add rax, 0x20	       334	am.c	FUNCTION_14
0x4000d04	        0x488b5008	                mov rdx, qword [rax + 8]	       334	am.c	FUNCTION_14
0x4000d08	        0x488b4598	             mov rax, qword [rbp - 0x68]	       334	am.c	FUNCTION_14
0x4000d0c	        0x48895020	             mov qword [rax + 0x20], rdx	       334	am.c	FUNCTION_14
0x4000d10	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       335	am.c	FUNCTION_14
0x4000d17	            0xeb01	                           jmp 0x4000d1a	       335	am.c	FUNCTION_14
0x4000d19	              0x90	                                     nop	       325	am.c	FUNCTION_14	IF_3
0x4000d1a	        0x837da000	               cmp dword [rbp - 0x60], 0	       337	am.c	FUNCTION_14	CALL_14
0x4000d1e	           0xf95c0	                                setne al	       337	am.c	FUNCTION_14	CALL_14
0x4000d21	           0xfb6d0	                           movzx edx, al	       337	am.c	FUNCTION_14	CALL_14
0x4000d24	        0x488d45d0	                   lea rax, [rbp - 0x30]	       337	am.c	FUNCTION_14	CALL_14
0x4000d28	            0x89d6	                            mov esi, edx	       337	am.c	FUNCTION_14	CALL_14
0x4000d2a	          0x4889c7	                            mov rdi, rax	       337	am.c	FUNCTION_14	CALL_14
0x4000d2d	      0xe800000000	                          call 0x4000d32	       337	am.c	FUNCTION_14	CALL_14
0x4000d32	        0x488d45b0	                   lea rax, [rbp - 0x50]	       338	am.c	FUNCTION_14	CALL_15
0x4000d36	          0x4889c7	                            mov rdi, rax	       338	am.c	FUNCTION_14	CALL_15
0x4000d39	      0xe800000000	                          call 0x4000d3e	       338	am.c	FUNCTION_14	CALL_15
0x4000d3e	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       339	am.c	FUNCTION_14
0x4000d41	        0x488b4df8	                mov rcx, qword [rbp - 8]	       340	am.c	FUNCTION_14
0x4000d45	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       340	am.c	FUNCTION_14
0x4000d4e	            0x7405	                            je 0x4000d55	       340	am.c	FUNCTION_14
0x4000d50	      0xe800000000	                          call 0x4000d55	       340	am.c	FUNCTION_14
0x4000d55	              0xc9	                                   leave	       340	am.c	FUNCTION_14
0x4000d56	              0xc3	                                     ret	       340	am.c	FUNCTION_14
copy_notes_for_rebase	functions,0:IF,6:FOR,0:SWITCH,0:DO,0:WHILE,1:ELSE,0:CALL,15	155
0x4001657	              0x55	                                push rbp	       536	am.c	FUNCTION_22
0x4001658	          0x4889e5	                            mov rbp, rsp	       536	am.c	FUNCTION_22
0x400165b	            0x4154	                                push r12	       536	am.c	FUNCTION_22
0x400165d	              0x53	                                push rbx	       536	am.c	FUNCTION_22
0x400165e	    0x4881eca00000	                           sub rsp, 0xa0	       536	am.c	FUNCTION_22
0x4001665	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	       536	am.c	FUNCTION_22
0x400166c	    0x64488b042528	                mov rax, qword fs:[0x28]	       536	am.c	FUNCTION_22
0x4001675	        0x488945e8	             mov qword [rbp - 0x18], rax	       536	am.c	FUNCTION_22
0x4001679	            0x31c0	                            xor eax, eax	       536	am.c	FUNCTION_22
0x400167b	    0x48c745900000	               mov qword [rbp - 0x70], 0	       538	am.c	FUNCTION_22
0x4001683	    0x48c745980000	               mov qword [rbp - 0x68], 0	       538	am.c	FUNCTION_22
0x400168b	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       538	am.c	FUNCTION_22
0x4001693	      0xbf00000000	                              mov edi, 0	       539	am.c	FUNCTION_22	CALL_1
0x4001698	      0xe899ebffff	                               call sym.	       539	am.c	FUNCTION_22	CALL_1
0x400169d	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       539	am.c	FUNCTION_22	CALL_1
0x40016a4	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       540	am.c	FUNCTION_22
0x40016af	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	       542	am.c	FUNCTION_22
0x40016b9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       544	am.c	FUNCTION_22	CALL_2
0x40016c0	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       544	am.c	FUNCTION_22	CALL_2
0x40016c6	            0x85c0	                           test eax, eax	       544	am.c	FUNCTION_22	CALL_2
0x40016c8	            0x7519	                           jne 0x40016e3	       544	am.c	FUNCTION_22	CALL_2
0x40016ca	      0xb900000000	                              mov ecx, 0	       544	am.c	FUNCTION_22	CALL_2
0x40016cf	      0xba20020000	                          mov edx, 0x220	       544	am.c	FUNCTION_22	CALL_2
0x40016d4	      0xbe00000000	                              mov esi, 0	       544	am.c	FUNCTION_22	CALL_2
0x40016d9	      0xbf00000000	                              mov edi, 0	       544	am.c	FUNCTION_22	CALL_2
0x40016de	      0xe800000000	                          call 0x40016e3	       544	am.c	FUNCTION_22	CALL_2
0x40016e3	      0xbf00000000	                              mov edi, 0	       546	am.c	FUNCTION_22	CALL_3
0x40016e8	      0xe800000000	                          call 0x40016ed	       546	am.c	FUNCTION_22	CALL_3
0x40016ed	        0x48894580	             mov qword [rbp - 0x80], rax	       546	am.c	FUNCTION_22	CALL_3
0x40016f1	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       547	am.c	FUNCTION_22	IF_1
0x40016f6	            0x750a	                           jne 0x4001702	       547	am.c	FUNCTION_22	IF_1
0x40016f8	      0xb800000000	                              mov eax, 0	       548	am.c	FUNCTION_22	IF_1
0x40016fd	      0xe9cf010000	                           jmp 0x40018d1	       548	am.c	FUNCTION_22	IF_1
0x4001702	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       550	am.c	FUNCTION_22	CALL_5
0x4001709	      0xbe00000000	                              mov esi, 0	       550	am.c	FUNCTION_22	CALL_5
0x400170e	          0x4889c7	                            mov rdi, rax	       550	am.c	FUNCTION_22	CALL_5
0x4001711	      0xe861efffff	                        call sym.am_path	       550	am.c	FUNCTION_22	CALL_5
0x4001716	      0xbe00000000	                              mov esi, 0	       550	am.c	FUNCTION_22	CALL_5
0x400171b	          0x4889c7	                            mov rdi, rax	       550	am.c	FUNCTION_22	CALL_5
0x400171e	      0xe800000000	                          call 0x4001723	       550	am.c	FUNCTION_22	CALL_5
0x4001723	        0x48894588	             mov qword [rbp - 0x78], rax	       550	am.c	FUNCTION_22	CALL_5
0x4001727	      0xe956010000	                           jmp 0x4001882	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x400172c	        0x488b4598	             mov rax, qword [rbp - 0x68]	       555	am.c	FUNCTION_22	WHILE_1	IF_2
0x4001730	        0x4883f851	                           cmp rax, 0x51	       555	am.c	FUNCTION_22	WHILE_1	IF_2
0x4001734	            0x742b	                            je 0x4001761	       555	am.c	FUNCTION_22	WHILE_1	IF_2
0x4001736	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       556	am.c	FUNCTION_22	WHILE_1	IF_2
0x400173a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       556	am.c	FUNCTION_22	WHILE_1	IF_2
0x4001741	          0x4889d6	                            mov rsi, rdx	       556	am.c	FUNCTION_22	WHILE_1	IF_2
0x4001744	          0x4889c7	                            mov rdi, rax	       556	am.c	FUNCTION_22	WHILE_1	IF_2
0x4001747	      0xb800000000	                              mov eax, 0	       556	am.c	FUNCTION_22	WHILE_1	IF_2
0x400174c	      0xe800000000	                          call 0x4001751	       556	am.c	FUNCTION_22	WHILE_1	IF_2
0x4001751	      0xe80ce9ffff	                    call sym.const_error	       556	am.c	FUNCTION_22	WHILE_1	IF_2
0x4001756	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       556	am.c	FUNCTION_22	WHILE_1	IF_2
0x400175c	      0xe93c010000	                           jmp 0x400189d	       557	am.c	FUNCTION_22	WHILE_1	IF_2
0x4001761	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x4001765	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x4001769	          0x4889d6	                            mov rsi, rdx	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x400176c	          0x4889c7	                            mov rdi, rax	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x400176f	      0xe800000000	                          call 0x4001774	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x4001774	            0x85c0	                           test eax, eax	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x4001776	            0x742b	                            je 0x40017a3	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x4001778	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       561	am.c	FUNCTION_22	WHILE_1	IF_3
0x400177c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       561	am.c	FUNCTION_22	WHILE_1	IF_3
0x4001783	          0x4889d6	                            mov rsi, rdx	       561	am.c	FUNCTION_22	WHILE_1	IF_3
0x4001786	          0x4889c7	                            mov rdi, rax	       561	am.c	FUNCTION_22	WHILE_1	IF_3
0x4001789	      0xb800000000	                              mov eax, 0	       561	am.c	FUNCTION_22	WHILE_1	IF_3
0x400178e	      0xe800000000	                          call 0x4001793	       561	am.c	FUNCTION_22	WHILE_1	IF_3
0x4001793	      0xe8cae8ffff	                    call sym.const_error	       561	am.c	FUNCTION_22	WHILE_1	IF_3
0x4001798	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       561	am.c	FUNCTION_22	WHILE_1	IF_3
0x400179e	      0xe9fa000000	                           jmp 0x400189d	       562	am.c	FUNCTION_22	WHILE_1	IF_3
0x40017a3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       565	am.c	FUNCTION_22	WHILE_1	IF_4
0x40017a7	        0x4883c028	                           add rax, 0x28	       565	am.c	FUNCTION_22	WHILE_1	IF_4
0x40017ab	           0xfb600	                   movzx eax, byte [rax]	       565	am.c	FUNCTION_22	WHILE_1	IF_4
0x40017ae	            0x3c20	                            cmp al, 0x20	       565	am.c	FUNCTION_22	WHILE_1	IF_4
0x40017b0	            0x742b	                            je 0x40017dd	       565	am.c	FUNCTION_22	WHILE_1	IF_4
0x40017b2	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       566	am.c	FUNCTION_22	WHILE_1	IF_4
0x40017b6	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       566	am.c	FUNCTION_22	WHILE_1	IF_4
0x40017bd	          0x4889d6	                            mov rsi, rdx	       566	am.c	FUNCTION_22	WHILE_1	IF_4
0x40017c0	          0x4889c7	                            mov rdi, rax	       566	am.c	FUNCTION_22	WHILE_1	IF_4
0x40017c3	      0xb800000000	                              mov eax, 0	       566	am.c	FUNCTION_22	WHILE_1	IF_4
0x40017c8	      0xe800000000	                          call 0x40017cd	       566	am.c	FUNCTION_22	WHILE_1	IF_4
0x40017cd	      0xe890e8ffff	                    call sym.const_error	       566	am.c	FUNCTION_22	WHILE_1	IF_4
0x40017d2	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       566	am.c	FUNCTION_22	WHILE_1	IF_4
0x40017d8	      0xe9c0000000	                           jmp 0x400189d	       567	am.c	FUNCTION_22	WHILE_1	IF_4
0x40017dd	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x40017e1	        0x488d5029	                   lea rdx, [rax + 0x29]	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x40017e5	        0x488d45d0	                   lea rax, [rbp - 0x30]	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x40017e9	          0x4889c6	                            mov rsi, rax	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x40017ec	          0x4889d7	                            mov rdi, rdx	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x40017ef	      0xe800000000	                          call 0x40017f4	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x40017f4	            0x85c0	                           test eax, eax	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x40017f6	            0x7429	                            je 0x4001821	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x40017f8	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x40017fc	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x4001803	          0x4889d6	                            mov rsi, rdx	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x4001806	          0x4889c7	                            mov rdi, rax	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x4001809	      0xb800000000	                              mov eax, 0	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x400180e	      0xe800000000	                          call 0x4001813	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x4001813	      0xe84ae8ffff	                    call sym.const_error	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x4001818	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x400181e	              0x90	                                     nop	       572	am.c	FUNCTION_22	WHILE_1	IF_5
0x400181f	            0xeb7c	                           jmp 0x400189d	       572	am.c	FUNCTION_22	WHILE_1	IF_5
0x4001821	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x4001825	        0x488d4db0	                   lea rcx, [rbp - 0x50]	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x4001829	        0x488b4580	             mov rax, qword [rbp - 0x80]	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x400182d	          0x4889ce	                            mov rsi, rcx	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x4001830	          0x4889c7	                            mov rdi, rax	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x4001833	      0xe800000000	                          call 0x4001838	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x4001838	            0x85c0	                           test eax, eax	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x400183a	            0x7446	                            je 0x4001882	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x400183c	        0x488d45d0	                   lea rax, [rbp - 0x30]	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4001840	          0x4889c7	                            mov rdi, rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4001843	      0xe800000000	                          call 0x4001848	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4001848	          0x4989c4	                            mov r12, rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x400184b	        0x488d45b0	                   lea rax, [rbp - 0x50]	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x400184f	          0x4889c7	                            mov rdi, rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4001852	      0xe800000000	                          call 0x4001857	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4001857	          0x4889c3	                            mov rbx, rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x400185a	      0xbf00000000	                              mov edi, 0	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x400185f	      0xe8d2e9ffff	                               call sym.	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4001864	          0x4c89e2	                            mov rdx, r12	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4001867	          0x4889de	                            mov rsi, rbx	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x400186a	          0x4889c7	                            mov rdi, rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x400186d	      0xb800000000	                              mov eax, 0	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4001872	      0xe800000000	                          call 0x4001877	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4001877	      0xe8e6e7ffff	                    call sym.const_error	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x400187c	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4001882	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x4001886	        0x488d4590	                   lea rax, [rbp - 0x70]	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x400188a	          0x4889d6	                            mov rsi, rdx	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x400188d	          0x4889c7	                            mov rdi, rax	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x4001890	      0xe800000000	                          call 0x4001895	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x4001895	            0x85c0	                           test eax, eax	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x4001897	     0xf848ffeffff	                            je 0x400172c	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x400189d	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       581	am.c	FUNCTION_22	CALL_13
0x40018a4	        0x488b4580	             mov rax, qword [rbp - 0x80]	       581	am.c	FUNCTION_22	CALL_13
0x40018a8	          0x4889d6	                            mov rsi, rdx	       581	am.c	FUNCTION_22	CALL_13
0x40018ab	          0x4889c7	                            mov rdi, rax	       581	am.c	FUNCTION_22	CALL_13
0x40018ae	      0xe800000000	                          call 0x40018b3	       581	am.c	FUNCTION_22	CALL_13
0x40018b3	        0x488b4588	             mov rax, qword [rbp - 0x78]	       582	am.c	FUNCTION_22	CALL_14
0x40018b7	          0x4889c7	                            mov rdi, rax	       582	am.c	FUNCTION_22	CALL_14
0x40018ba	      0xe800000000	                          call 0x40018bf	       582	am.c	FUNCTION_22	CALL_14
0x40018bf	        0x488d4590	                   lea rax, [rbp - 0x70]	       583	am.c	FUNCTION_22	CALL_15
0x40018c3	          0x4889c7	                            mov rdi, rax	       583	am.c	FUNCTION_22	CALL_15
0x40018c6	      0xe800000000	                          call 0x40018cb	       583	am.c	FUNCTION_22	CALL_15
0x40018cb	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	       584	am.c	FUNCTION_22
0x40018d1	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       585	am.c	FUNCTION_22
0x40018d5	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       585	am.c	FUNCTION_22
0x40018de	            0x7405	                            je 0x40018e5	       585	am.c	FUNCTION_22
0x40018e0	      0xe800000000	                          call 0x40018e5	       585	am.c	FUNCTION_22
0x40018e5	    0x4881c4a00000	                           add rsp, 0xa0	       585	am.c	FUNCTION_22
0x40018ec	              0x5b	                                 pop rbx	       585	am.c	FUNCTION_22
0x40018ed	            0x415c	                                 pop r12	       585	am.c	FUNCTION_22
0x40018ef	              0x5d	                                 pop rbp	       585	am.c	FUNCTION_22
0x40018f0	              0xc3	                                     ret	       585	am.c	FUNCTION_22
hashcmp	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,1	13
0x4000262	              0x55	                                push rbp	       974	cache.h	FUNCTION_73
0x4000263	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_73
0x4000266	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_73
0x400026a	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_73
0x400026e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_73
0x4000272	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_73	CALL_1
0x4000276	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_73	CALL_1
0x400027a	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_73	CALL_1
0x400027f	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_73	CALL_1
0x4000282	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_73	CALL_1
0x4000285	      0xe800000000	                          call 0x400028a	       975	cache.h	FUNCTION_73	CALL_1
0x400028a	              0xc9	                                   leave	       976	cache.h	FUNCTION_73
0x400028b	              0xc3	                                     ret	       976	cache.h	FUNCTION_73
refresh_and_write_cache	functions,0:IF,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,4	36
0x4002df8	              0x55	                                push rbp	      1142	am.c	FUNCTION_34
0x4002df9	          0x4889e5	                            mov rbp, rsp	      1142	am.c	FUNCTION_34
0x4002dfc	        0x4883ec10	                           sub rsp, 0x10	      1142	am.c	FUNCTION_34
0x4002e00	    0x64488b042528	                mov rax, qword fs:[0x28]	      1142	am.c	FUNCTION_34
0x4002e09	        0x488945f8	                mov qword [rbp - 8], rax	      1142	am.c	FUNCTION_34
0x4002e0d	            0x31c0	                            xor eax, eax	      1142	am.c	FUNCTION_34
0x4002e0f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1143	am.c	FUNCTION_34
0x4002e17	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1145	am.c	FUNCTION_34	CALL_1
0x4002e1b	      0xbe01000000	                              mov esi, 1	      1145	am.c	FUNCTION_34	CALL_1
0x4002e20	          0x4889c7	                            mov rdi, rax	      1145	am.c	FUNCTION_34	CALL_1
0x4002e23	      0xe800000000	                          call 0x4002e28	      1145	am.c	FUNCTION_34	CALL_1
0x4002e28	    0x41b800000000	                              mov r8d, 0	      1146	am.c	FUNCTION_34
0x4002e2e	      0xb900000000	                              mov ecx, 0	      1146	am.c	FUNCTION_34
0x4002e33	      0xba00000000	                              mov edx, 0	      1146	am.c	FUNCTION_34
0x4002e38	      0xbe04000000	                              mov esi, 4	      1146	am.c	FUNCTION_34
0x4002e3d	      0xbf00000000	                              mov edi, 0	      1146	am.c	FUNCTION_34
0x4002e42	      0xe800000000	                          call 0x4002e47	      1146	am.c	FUNCTION_34
0x4002e47	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x4002e4b	      0xba01000000	                              mov edx, 1	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x4002e50	          0x4889c6	                            mov rsi, rax	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x4002e53	      0xbf00000000	                              mov edi, 0	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x4002e58	      0xe800000000	                          call 0x4002e5d	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x4002e5d	            0x85c0	                           test eax, eax	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x4002e5f	            0x7417	                            je 0x4002e78	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x4002e61	      0xbf00000000	                              mov edi, 0	      1148	am.c	FUNCTION_34	CALL_4
0x4002e66	      0xe8cbd3ffff	                               call sym.	      1148	am.c	FUNCTION_34	CALL_4
0x4002e6b	          0x4889c7	                            mov rdi, rax	      1148	am.c	FUNCTION_34	CALL_4
0x4002e6e	      0xb800000000	                              mov eax, 0	      1148	am.c	FUNCTION_34	CALL_4
0x4002e73	      0xe800000000	                          call 0x4002e78	      1148	am.c	FUNCTION_34	CALL_4
0x4002e78	              0x90	                                     nop	      1149	am.c	FUNCTION_34
0x4002e79	        0x488b45f8	                mov rax, qword [rbp - 8]	      1149	am.c	FUNCTION_34
0x4002e7d	    0x644833042528	                xor rax, qword fs:[0x28]	      1149	am.c	FUNCTION_34
0x4002e86	            0x7405	                            je 0x4002e8d	      1149	am.c	FUNCTION_34
0x4002e88	      0xe800000000	                          call 0x4002e8d	      1149	am.c	FUNCTION_34
0x4002e8d	              0xc9	                                   leave	      1149	am.c	FUNCTION_34
0x4002e8e	              0xc3	                                     ret	      1149	am.c	FUNCTION_34
am_run	functions,0:IF,15:FOR,0:SWITCH,0:DO,0:WHILE,1:ELSE,2:CALL,51	289
0x4004bff	              0x55	                                push rbp	      1758	am.c	FUNCTION_49
0x4004c00	          0x4889e5	                            mov rbp, rsp	      1758	am.c	FUNCTION_49
0x4004c03	            0x4155	                                push r13	      1758	am.c	FUNCTION_49
0x4004c05	            0x4154	                                push r12	      1758	am.c	FUNCTION_49
0x4004c07	              0x53	                                push rbx	      1758	am.c	FUNCTION_49
0x4004c08	    0x4881ec880000	                           sub rsp, 0x88	      1758	am.c	FUNCTION_49
0x4004c0f	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      1758	am.c	FUNCTION_49
0x4004c16	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      1758	am.c	FUNCTION_49
0x4004c1c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1758	am.c	FUNCTION_49
0x4004c25	        0x488945d8	             mov qword [rbp - 0x28], rax	      1758	am.c	FUNCTION_49
0x4004c29	            0x31c0	                            xor eax, eax	      1758	am.c	FUNCTION_49
0x4004c2b	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1759	am.c	FUNCTION_49
0x4004c33	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1759	am.c	FUNCTION_49
0x4004c3b	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1759	am.c	FUNCTION_49
0x4004c43	    0x48c745800000	               mov qword [rbp - 0x80], 0	      1760	am.c	FUNCTION_49
0x4004c4b	    0x48c745880000	               mov qword [rbp - 0x78], 0	      1760	am.c	FUNCTION_49
0x4004c53	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1760	am.c	FUNCTION_49
0x4004c5b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1762	am.c	FUNCTION_49	CALL_2
0x4004c62	      0xbe00000000	                              mov esi, 0	      1762	am.c	FUNCTION_49	CALL_2
0x4004c67	          0x4889c7	                            mov rdi, rax	      1762	am.c	FUNCTION_49	CALL_2
0x4004c6a	      0xe808baffff	                        call sym.am_path	      1762	am.c	FUNCTION_49	CALL_2
0x4004c6f	          0x4889c7	                            mov rdi, rax	      1762	am.c	FUNCTION_49	CALL_2
0x4004c72	      0xe800000000	                          call 0x4004c77	      1762	am.c	FUNCTION_49	CALL_2
0x4004c77	      0xe87ce1ffff	        call sym.refresh_and_write_cache	      1764	am.c	FUNCTION_49	CALL_3
0x4004c7c	        0x488d4580	                   lea rax, [rbp - 0x80]	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x4004c80	          0x4889c7	                            mov rdi, rax	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x4004c83	      0xe800000000	                          call 0x4004c88	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x4004c88	            0x85c0	                           test eax, eax	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x4004c8a	            0x7437	                            je 0x4004cc3	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x4004c8c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1767	am.c	FUNCTION_49	IF_1	CALL_5
0x4004c93	      0xba01000000	                              mov edx, 1	      1767	am.c	FUNCTION_49	IF_1	CALL_5
0x4004c98	      0xbe00000000	                              mov esi, 0	      1767	am.c	FUNCTION_49	IF_1	CALL_5
0x4004c9d	          0x4889c7	                            mov rdi, rax	      1767	am.c	FUNCTION_49	IF_1	CALL_5
0x4004ca0	      0xe88abaffff	               call sym.write_state_bool	      1767	am.c	FUNCTION_49	IF_1	CALL_5
0x4004ca5	        0x488b5d90	             mov rbx, qword [rbp - 0x70]	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4004ca9	      0xbf00000000	                              mov edi, 0	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4004cae	      0xe883b5ffff	                               call sym.	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4004cb3	          0x4889de	                            mov rsi, rbx	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4004cb6	          0x4889c7	                            mov rdi, rax	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4004cb9	      0xb800000000	                              mov eax, 0	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4004cbe	      0xe800000000	                          call 0x4004cc3	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4004cc3	        0x488d4580	                   lea rax, [rbp - 0x80]	      1771	am.c	FUNCTION_49	CALL_8
0x4004cc7	          0x4889c7	                            mov rdi, rax	      1771	am.c	FUNCTION_49	CALL_8
0x4004cca	      0xe800000000	                          call 0x4004ccf	      1771	am.c	FUNCTION_49	CALL_8
0x4004ccf	      0xe962030000	                           jmp 0x4005036	      1773	am.c	FUNCTION_49	WHILE_1
0x4004cd4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4004cdb	          0x4889c7	                            mov rdi, rax	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4004cde	      0xe8cbe0ffff	                         call sym.msgnum	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4004ce3	          0x4889c2	                            mov rdx, rax	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4004ce6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4004ced	          0x4889d6	                            mov rsi, rdx	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4004cf0	          0x4889c7	                            mov rdi, rax	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4004cf3	      0xe87fb9ffff	                        call sym.am_path	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4004cf8	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4004cff	      0xe800000000	                          call 0x4004d04	      1777	am.c	FUNCTION_49	WHILE_1	CALL_11
0x4004d04	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x4004d0b	          0x4889c7	                            mov rdi, rax	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x4004d0e	      0xe800000000	                          call 0x4004d13	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x4004d13	            0x85c0	                           test eax, eax	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x4004d15	     0xf84e3020000	                            je 0x4004ffe	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x4004d1b	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      1782	am.c	FUNCTION_49	WHILE_1	IF_3
0x4004d22	            0x7414	                            je 0x4004d38	      1782	am.c	FUNCTION_49	WHILE_1	IF_3
0x4004d24	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1783	am.c	FUNCTION_49	WHILE_1	IF_3	CALL_13
0x4004d2b	          0x4889c7	                            mov rdi, rax	      1783	am.c	FUNCTION_49	WHILE_1	IF_3	CALL_13
0x4004d2e	      0xe86ffbffff	          call sym.validate_resume_state	      1783	am.c	FUNCTION_49	WHILE_1	IF_3	CALL_13
0x4004d33	      0xe999000000	                           jmp 0x4004dd1	      1783	am.c	FUNCTION_49	WHILE_1	IF_3	CALL_13
0x4004d38	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1787	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_4
0x4004d3f	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1787	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_4
0x4004d45	            0x85c0	                           test eax, eax	      1787	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_4
0x4004d47	            0x7421	                            je 0x4004d6a	      1787	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_4
0x4004d49	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1788	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_14
0x4004d50	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1788	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_14
0x4004d57	          0x4889d6	                            mov rsi, rdx	      1788	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_14
0x4004d5a	          0x4889c7	                            mov rdi, rax	      1788	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_14
0x4004d5d	      0xe83fefffff	              call sym.parse_mail_rebase	      1788	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_14
0x4004d62	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      1788	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_14
0x4004d68	            0xeb1f	                           jmp 0x4004d89	      1788	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_14
0x4004d6a	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1790	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_15
0x4004d71	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1790	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_15
0x4004d78	          0x4889d6	                            mov rsi, rdx	      1790	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_15
0x4004d7b	          0x4889c7	                            mov rdi, rax	      1790	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_15
0x4004d7e	      0xe875e2ffff	                     call sym.parse_mail	      1790	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_15
0x4004d83	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      1790	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_15
0x4004d89	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      1792	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_5
0x4004d90	     0xf856b020000	                           jne 0x4005001	      1792	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_5
0x4004d96	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x4004d9d	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x4004da0	            0x85c0	                           test eax, eax	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x4004da2	            0x740f	                            je 0x4004db3	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x4004da4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1796	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_16
0x4004dab	          0x4889c7	                            mov rdi, rax	      1796	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_16
0x4004dae	      0xe89fe1ffff	              call sym.am_append_signoff	      1796	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_16
0x4004db3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1798	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_17
0x4004dba	          0x4889c7	                            mov rdi, rax	      1798	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_17
0x4004dbd	      0xe895bfffff	            call sym.write_author_script	      1798	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_17
0x4004dc2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1799	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_18
0x4004dc9	          0x4889c7	                            mov rdi, rax	      1799	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_18
0x4004dcc	      0xe863c1ffff	               call sym.write_commit_msg	      1799	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_18
0x4004dd1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4004dd8	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4004ddb	            0x85c0	                           test eax, eax	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4004ddd	            0x7417	                            je 0x4004df6	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4004ddf	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4004de6	          0x4889c7	                            mov rdi, rax	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4004de9	      0xe859fbffff	                 call sym.do_interactive	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4004dee	            0x85c0	                           test eax, eax	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4004df0	     0xf850e020000	                           jne 0x4005004	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x4004df6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1805	am.c	FUNCTION_49	WHILE_1	IF_8	CALL_20
0x4004dfd	          0x4889c7	                            mov rdi, rax	      1805	am.c	FUNCTION_49	WHILE_1	IF_8	CALL_20
0x4004e00	      0xe893c6ffff	        call sym.run_applypatch_msg_hook	      1805	am.c	FUNCTION_49	WHILE_1	IF_8	CALL_20
0x4004e05	            0x85c0	                           test eax, eax	      1805	am.c	FUNCTION_49	WHILE_1	IF_8	CALL_20
0x4004e07	            0x740a	                            je 0x4004e13	      1805	am.c	FUNCTION_49	WHILE_1	IF_8	CALL_20
0x4004e09	      0xbf01000000	                              mov edi, 1	      1806	am.c	FUNCTION_49	WHILE_1	CALL_21
0x4004e0e	      0xe800000000	                          call 0x4004e13	      1806	am.c	FUNCTION_49	WHILE_1	CALL_21
0x4004e13	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e1a	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e1e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e25	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e29	          0x4889c7	                            mov rdi, rax	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e2c	      0xe878b6ffff	                        call sym.linelen	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e31	          0x4189c4	                           mov r12d, eax	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e34	      0xbf00000000	                              mov edi, 0	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e39	      0xe8f8b3ffff	                               call sym.	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e3e	          0x4889c2	                            mov rdx, rax	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e41	    0x488b35000000	            mov rsi, qword [0x04004e48] 	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e48	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e4f	          0x4989d8	                             mov r8, rbx	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e52	          0x4489e1	                           mov ecx, r12d	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e55	          0x4889c7	                            mov rdi, rax	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e58	      0xb800000000	                              mov eax, 0	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e5d	      0xe808b9ffff	                            call sym.say	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4004e62	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x4004e69	      0xbe00000000	                              mov esi, 0	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x4004e6e	          0x4889c7	                            mov rdi, rax	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x4004e71	      0xe838efffff	                      call sym.run_apply	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x4004e76	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x4004e7c	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4004e83	     0xf84bf000000	                            je 0x4004f48	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4004e89	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4004e90	          0x8b4054	            mov eax, dword [rax + 0x54] 	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4004e93	            0x85c0	                           test eax, eax	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4004e95	     0xf84ad000000	                            je 0x4004f48	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4004e9b	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1813	am.c	FUNCTION_49	WHILE_1	IF_9
0x4004ea3	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1813	am.c	FUNCTION_49	WHILE_1	IF_9
0x4004eab	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1813	am.c	FUNCTION_49	WHILE_1	IF_9
0x4004eb3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4004eba	      0xbe00000000	                              mov esi, 0	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4004ebf	          0x4889c7	                            mov rdi, rax	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4004ec2	      0xe8b0b7ffff	                        call sym.am_path	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4004ec7	          0x4889c2	                            mov rdx, rax	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4004eca	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4004ece	          0x4889d6	                            mov rsi, rdx	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4004ed1	          0x4889c7	                            mov rdi, rax	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4004ed4	      0xe828b3ffff	                  call sym.strbuf_addstr	      1815	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_27
0x4004ed9	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4004edd	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4004ee4	          0x4889d6	                            mov rsi, rdx	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4004ee7	          0x4889c7	                            mov rdi, rax	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4004eea	      0xe82cf2ffff	             call sym.fall_back_threeway	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4004eef	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4004ef5	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1817	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_29
0x4004ef9	          0x4889c7	                            mov rdi, rax	      1817	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_29
0x4004efc	      0xe800000000	                          call 0x4004f01	      1817	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_29
0x4004f01	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4004f08	            0x753e	                           jne 0x4004f48	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4004f0a	      0xbf00000000	                              mov edi, 0	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4004f0f	      0xe800000000	                          call 0x4004f14	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4004f14	            0x85c0	                           test eax, eax	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4004f16	            0x7530	                           jne 0x4004f48	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4004f18	      0xbf00000000	                              mov edi, 0	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4004f1d	      0xe814b3ffff	                               call sym.	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4004f22	          0x4889c2	                            mov rdx, rax	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4004f25	    0x488b0d000000	            mov rcx, qword [0x04004f2c] 	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4004f2c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4004f33	          0x4889ce	                            mov rsi, rcx	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4004f36	          0x4889c7	                            mov rdi, rax	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4004f39	      0xb800000000	                              mov eax, 0	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4004f3e	      0xe827b8ffff	                            call sym.say	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4004f43	      0xe9bd000000	                           jmp 0x4005005	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4004f48	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      1829	am.c	FUNCTION_49	WHILE_1	IF_11
0x4004f4f	     0xf8498000000	                            je 0x4004fed	      1829	am.c	FUNCTION_49	WHILE_1	IF_11
0x4004f55	    0xc745a0010000	               mov dword [rbp - 0x60], 1	      1830	am.c	FUNCTION_49	WHILE_1	IF_11
0x4004f5c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004f63	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004f67	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1833	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_36
0x4004f6e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1833	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_36
0x4004f72	          0x4889c7	                            mov rdi, rax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004f75	      0xe82fb5ffff	                        call sym.linelen	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004f7a	          0x4189c5	                           mov r13d, eax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004f7d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004f84	          0x4889c7	                            mov rdi, rax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004f87	      0xe822deffff	                         call sym.msgnum	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004f8c	          0x4989c4	                            mov r12, rax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004f8f	      0xbf00000000	                              mov edi, 0	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004f94	      0xe89db2ffff	                               call sym.	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004f99	          0x4889d9	                            mov rcx, rbx	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004f9c	          0x4489ea	                           mov edx, r13d	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004f9f	          0x4c89e6	                            mov rsi, r12	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004fa2	          0x4889c7	                            mov rdi, rax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004fa5	      0xb800000000	                              mov eax, 0	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004faa	      0xe800000000	                          call 0x4004faf	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4004faf	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1835	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_37
0x4004fb3	          0x4889c6	                            mov rsi, rax	      1835	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_37
0x4004fb6	      0xbf00000000	                              mov edi, 0	      1835	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_37
0x4004fbb	      0xe800000000	                          call 0x4004fc0	      1835	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_37
0x4004fc0	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1837	am.c	FUNCTION_49	WHILE_1	IF_11	IF_12
0x4004fc3	            0x85c0	                           test eax, eax	      1837	am.c	FUNCTION_49	WHILE_1	IF_11	IF_12
0x4004fc5	            0x7417	                            je 0x4004fde	      1837	am.c	FUNCTION_49	WHILE_1	IF_11	IF_12
0x4004fc7	      0xbf00000000	                              mov edi, 0	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x4004fcc	      0xe865b2ffff	                               call sym.	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x4004fd1	          0x4889c7	                            mov rdi, rax	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x4004fd4	      0xb800000000	                              mov eax, 0	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x4004fd9	      0xe800000000	                          call 0x4004fde	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x4004fde	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1840	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_40
0x4004fe5	          0x4889c7	                            mov rdi, rax	      1840	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_40
0x4004fe8	      0xe8a2deffff	               call sym.die_user_resolve	      1840	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_40
0x4004fed	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1843	am.c	FUNCTION_49	WHILE_1	CALL_41
0x4004ff4	          0x4889c7	                            mov rdi, rax	      1843	am.c	FUNCTION_49	WHILE_1	CALL_41
0x4004ff7	      0xe8eaf4ffff	                      call sym.do_commit	      1843	am.c	FUNCTION_49	WHILE_1	CALL_41
0x4004ffc	            0xeb07	                           jmp 0x4005005	      1843	am.c	FUNCTION_49	WHILE_1	CALL_41
0x4004ffe	              0x90	                                     nop	      1780	am.c	FUNCTION_49	WHILE_1	IF_2
0x4004fff	            0xeb04	                           jmp 0x4005005	      1780	am.c	FUNCTION_49	WHILE_1	IF_2
0x4005001	              0x90	                                     nop	      1793	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_5
0x4005002	            0xeb01	                           jmp 0x4005005	      1793	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_5
0x4005004	              0x90	                                     nop	      1803	am.c	FUNCTION_49	WHILE_1	IF_7
0x4005005	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x400500c	          0x4889c7	                            mov rdi, rax	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x400500f	      0xe802dcffff	                        call sym.am_next	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x4005014	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      1848	am.c	FUNCTION_49	WHILE_1	IF_13
0x400501b	            0x740f	                            je 0x400502c	      1848	am.c	FUNCTION_49	WHILE_1	IF_13
0x400501d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1849	am.c	FUNCTION_49	WHILE_1	CALL_43
0x4005024	          0x4889c7	                            mov rdi, rax	      1849	am.c	FUNCTION_49	WHILE_1	CALL_43
0x4005027	      0xe84bbfffff	                        call sym.am_load	      1849	am.c	FUNCTION_49	WHILE_1	CALL_43
0x400502c	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      1850	am.c	FUNCTION_49	WHILE_1
0x4005036	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1773	am.c	FUNCTION_49	WHILE_1
0x400503d	          0x8b5008	                mov edx, dword [rax + 8]	      1773	am.c	FUNCTION_49	WHILE_1
0x4005040	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1773	am.c	FUNCTION_49	WHILE_1
0x4005047	          0x8b400c	              mov eax, dword [rax + 0xc]	      1773	am.c	FUNCTION_49	WHILE_1
0x400504a	            0x39c2	                            cmp edx, eax	      1773	am.c	FUNCTION_49	WHILE_1
0x400504c	     0xf8e82fcffff	                           jle 0x4004cd4	      1773	am.c	FUNCTION_49	WHILE_1
0x4005052	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x4005059	      0xbe00000000	                              mov esi, 0	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x400505e	          0x4889c7	                            mov rdi, rax	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x4005061	      0xe811b6ffff	                        call sym.am_path	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x4005066	          0x4889c7	                            mov rdi, rax	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x4005069	      0xe8a3b3ffff	                  call sym.is_empty_file	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x400506e	            0x85c0	                           test eax, eax	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x4005070	            0x7548	                           jne 0x40050ba	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x4005072	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4005079	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x400507f	            0x85c0	                           test eax, eax	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4005081	            0x7519	                           jne 0x400509c	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4005083	      0xb900000000	                              mov ecx, 0	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4005088	      0xba3e070000	                          mov edx, 0x73e	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x400508d	      0xbe00000000	                              mov esi, 0	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4005092	      0xbf00000000	                              mov edi, 0	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4005097	      0xe800000000	                          call 0x400509c	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x400509c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1855	am.c	FUNCTION_49	IF_14	CALL_47
0x40050a3	          0x4889c7	                            mov rdi, rax	      1855	am.c	FUNCTION_49	IF_14	CALL_47
0x40050a6	      0xe8acc5ffff	          call sym.copy_notes_for_rebase	      1855	am.c	FUNCTION_49	IF_14	CALL_47
0x40050ab	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1856	am.c	FUNCTION_49	IF_14	CALL_48
0x40050b2	          0x4889c7	                            mov rdi, rax	      1856	am.c	FUNCTION_49	IF_14	CALL_48
0x40050b5	      0xe8abc4ffff	          call sym.run_post_rewrite_hook	      1856	am.c	FUNCTION_49	IF_14	CALL_48
0x40050ba	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1863	am.c	FUNCTION_49	IF_15
0x40050c1	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1863	am.c	FUNCTION_49	IF_15
0x40050c7	            0x85c0	                           test eax, eax	      1863	am.c	FUNCTION_49	IF_15
0x40050c9	            0x7533	                           jne 0x40050fe	      1863	am.c	FUNCTION_49	IF_15
0x40050cb	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1864	am.c	FUNCTION_49	IF_15	CALL_49
0x40050d2	          0x4889c7	                            mov rdi, rax	      1864	am.c	FUNCTION_49	IF_15	CALL_49
0x40050d5	      0xe841c3ffff	                     call sym.am_destroy	      1864	am.c	FUNCTION_49	IF_15	CALL_49
0x40050da	    0x488b05000000	            mov rax, qword [0x040050e1] 	      1865	am.c	FUNCTION_49	IF_15	CALL_50
0x40050e1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1865	am.c	FUNCTION_49	IF_15	CALL_50
0x40050e5	          0x4889c7	                            mov rdi, rax	      1865	am.c	FUNCTION_49	IF_15	CALL_50
0x40050e8	      0xe800000000	                          call 0x40050ed	      1865	am.c	FUNCTION_49	IF_15	CALL_50
0x40050ed	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1866	am.c	FUNCTION_49	IF_15	CALL_51
0x40050f1	      0xbe02000000	                              mov esi, 2	      1866	am.c	FUNCTION_49	IF_15	CALL_51
0x40050f6	          0x4889c7	                            mov rdi, rax	      1866	am.c	FUNCTION_49	IF_15	CALL_51
0x40050f9	      0xe800000000	                          call 0x40050fe	      1866	am.c	FUNCTION_49	IF_15	CALL_51
0x40050fe	              0x90	                                     nop	      1868	am.c	FUNCTION_49
0x40050ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1868	am.c	FUNCTION_49
0x4005103	    0x644833042528	                xor rax, qword fs:[0x28]	      1868	am.c	FUNCTION_49
0x400510c	            0x7405	                            je 0x4005113	      1868	am.c	FUNCTION_49
0x400510e	      0xe800000000	                          call 0x4005113	      1868	am.c	FUNCTION_49
0x4005113	    0x4881c4880000	                           add rsp, 0x88	      1868	am.c	FUNCTION_49
0x400511a	              0x5b	                                 pop rbx	      1868	am.c	FUNCTION_49
0x400511b	            0x415c	                                 pop r12	      1868	am.c	FUNCTION_49
0x400511d	            0x415d	                                 pop r13	      1868	am.c	FUNCTION_49
0x400511f	              0x5d	                                 pop rbp	      1868	am.c	FUNCTION_49
0x4005120	              0xc3	                                     ret	      1868	am.c	FUNCTION_49
git_has_dos_drive_prefix	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,0	6
0x4000040	              0x55	                                push rbp	       347	git-compat-util.h	FUNCTION_105
0x4000041	          0x4889e5	                            mov rbp, rsp	       347	git-compat-util.h	FUNCTION_105
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       347	git-compat-util.h	FUNCTION_105
0x4000048	      0xb800000000	                              mov eax, 0	       348	git-compat-util.h	FUNCTION_105
0x400004d	              0x5d	                                 pop rbp	       349	git-compat-util.h	FUNCTION_105
0x400004e	              0xc3	                                     ret	       349	git-compat-util.h	FUNCTION_105
am_next	functions,0:IF,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,1:CALL,13	98
0x4002c16	              0x55	                                push rbp	      1100	am.c	FUNCTION_32
0x4002c17	          0x4889e5	                            mov rbp, rsp	      1100	am.c	FUNCTION_32
0x4002c1a	        0x4883ec30	                           sub rsp, 0x30	      1100	am.c	FUNCTION_32
0x4002c1e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1100	am.c	FUNCTION_32
0x4002c22	    0x64488b042528	                mov rax, qword fs:[0x28]	      1100	am.c	FUNCTION_32
0x4002c2b	        0x488945f8	                mov qword [rbp - 8], rax	      1100	am.c	FUNCTION_32
0x4002c2f	            0x31c0	                            xor eax, eax	      1100	am.c	FUNCTION_32
0x4002c31	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1103	am.c	FUNCTION_32
0x4002c35	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1103	am.c	FUNCTION_32
0x4002c39	          0x4889c7	                            mov rdi, rax	      1103	am.c	FUNCTION_32
0x4002c3c	      0xe800000000	                          call 0x4002c41	      1103	am.c	FUNCTION_32
0x4002c41	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1103	am.c	FUNCTION_32
0x4002c45	    0x48c740100000	               mov qword [rax + 0x10], 0	      1103	am.c	FUNCTION_32
0x4002c4d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1104	am.c	FUNCTION_32
0x4002c51	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1104	am.c	FUNCTION_32
0x4002c55	          0x4889c7	                            mov rdi, rax	      1104	am.c	FUNCTION_32
0x4002c58	      0xe800000000	                          call 0x4002c5d	      1104	am.c	FUNCTION_32
0x4002c5d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1104	am.c	FUNCTION_32
0x4002c61	    0x48c740180000	               mov qword [rax + 0x18], 0	      1104	am.c	FUNCTION_32
0x4002c69	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1105	am.c	FUNCTION_32
0x4002c6d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1105	am.c	FUNCTION_32
0x4002c71	          0x4889c7	                            mov rdi, rax	      1105	am.c	FUNCTION_32
0x4002c74	      0xe800000000	                          call 0x4002c79	      1105	am.c	FUNCTION_32
0x4002c79	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1105	am.c	FUNCTION_32
0x4002c7d	    0x48c740200000	               mov qword [rax + 0x20], 0	      1105	am.c	FUNCTION_32
0x4002c85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1106	am.c	FUNCTION_32
0x4002c89	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1106	am.c	FUNCTION_32
0x4002c8d	          0x4889c7	                            mov rdi, rax	      1106	am.c	FUNCTION_32
0x4002c90	      0xe800000000	                          call 0x4002c95	      1106	am.c	FUNCTION_32
0x4002c95	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1106	am.c	FUNCTION_32
0x4002c99	    0x48c740280000	               mov qword [rax + 0x28], 0	      1106	am.c	FUNCTION_32
0x4002ca1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1107	am.c	FUNCTION_32
0x4002ca5	    0x48c740300000	               mov qword [rax + 0x30], 0	      1107	am.c	FUNCTION_32
0x4002cad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1109	am.c	FUNCTION_32	CALL_2
0x4002cb1	      0xbe00000000	                              mov esi, 0	      1109	am.c	FUNCTION_32	CALL_2
0x4002cb6	          0x4889c7	                            mov rdi, rax	      1109	am.c	FUNCTION_32	CALL_2
0x4002cb9	      0xe8b9d9ffff	                        call sym.am_path	      1109	am.c	FUNCTION_32	CALL_2
0x4002cbe	          0x4889c7	                            mov rdi, rax	      1109	am.c	FUNCTION_32	CALL_2
0x4002cc1	      0xe800000000	                          call 0x4002cc6	      1109	am.c	FUNCTION_32	CALL_2
0x4002cc6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1110	am.c	FUNCTION_32	CALL_4
0x4002cca	      0xbe00000000	                              mov esi, 0	      1110	am.c	FUNCTION_32	CALL_4
0x4002ccf	          0x4889c7	                            mov rdi, rax	      1110	am.c	FUNCTION_32	CALL_4
0x4002cd2	      0xe8a0d9ffff	                        call sym.am_path	      1110	am.c	FUNCTION_32	CALL_4
0x4002cd7	          0x4889c7	                            mov rdi, rax	      1110	am.c	FUNCTION_32	CALL_4
0x4002cda	      0xe800000000	                          call 0x4002cdf	      1110	am.c	FUNCTION_32	CALL_4
0x4002cdf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1112	am.c	FUNCTION_32	CALL_5
0x4002ce3	        0x4883c038	                           add rax, 0x38	      1112	am.c	FUNCTION_32	CALL_5
0x4002ce7	          0x4889c7	                            mov rdi, rax	      1112	am.c	FUNCTION_32	CALL_5
0x4002cea	      0xe83ad6ffff	                         call sym.oidclr	      1112	am.c	FUNCTION_32	CALL_5
0x4002cef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1113	am.c	FUNCTION_32	CALL_7
0x4002cf3	      0xbe00000000	                              mov esi, 0	      1113	am.c	FUNCTION_32	CALL_7
0x4002cf8	          0x4889c7	                            mov rdi, rax	      1113	am.c	FUNCTION_32	CALL_7
0x4002cfb	      0xe877d9ffff	                        call sym.am_path	      1113	am.c	FUNCTION_32	CALL_7
0x4002d00	          0x4889c7	                            mov rdi, rax	      1113	am.c	FUNCTION_32	CALL_7
0x4002d03	      0xe800000000	                          call 0x4002d08	      1113	am.c	FUNCTION_32	CALL_7
0x4002d08	      0xb901000000	                              mov ecx, 1	      1114	am.c	FUNCTION_32	CALL_8
0x4002d0d	      0xba00000000	                              mov edx, 0	      1114	am.c	FUNCTION_32	CALL_8
0x4002d12	      0xbe00000000	                              mov esi, 0	      1114	am.c	FUNCTION_32	CALL_8
0x4002d17	      0xbf00000000	                              mov edi, 0	      1114	am.c	FUNCTION_32	CALL_8
0x4002d1c	      0xe800000000	                          call 0x4002d21	      1114	am.c	FUNCTION_32	CALL_8
0x4002d21	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x4002d25	          0x4889c6	                            mov rsi, rax	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x4002d28	      0xbf00000000	                              mov edi, 0	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x4002d2d	      0xe800000000	                          call 0x4002d32	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x4002d32	            0x85c0	                           test eax, eax	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x4002d34	            0x7522	                           jne 0x4002d58	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x4002d36	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1117	am.c	FUNCTION_32	CALL_11
0x4002d3a	          0x4889c7	                            mov rdi, rax	      1117	am.c	FUNCTION_32	CALL_11
0x4002d3d	      0xe800000000	                          call 0x4002d42	      1117	am.c	FUNCTION_32	CALL_11
0x4002d42	          0x4889c2	                            mov rdx, rax	      1117	am.c	FUNCTION_32	CALL_11
0x4002d45	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1117	am.c	FUNCTION_32	CALL_11
0x4002d49	      0xbe00000000	                              mov esi, 0	      1117	am.c	FUNCTION_32	CALL_11
0x4002d4e	          0x4889c7	                            mov rdi, rax	      1117	am.c	FUNCTION_32	CALL_11
0x4002d51	      0xe850d9ffff	               call sym.write_state_text	      1117	am.c	FUNCTION_32	CALL_11
0x4002d56	            0xeb16	                           jmp 0x4002d6e	      1117	am.c	FUNCTION_32	CALL_11
0x4002d58	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1119	am.c	FUNCTION_32	CALL_12
0x4002d5c	      0xba00000000	                              mov edx, 0	      1119	am.c	FUNCTION_32	CALL_12
0x4002d61	      0xbe00000000	                              mov esi, 0	      1119	am.c	FUNCTION_32	CALL_12
0x4002d66	          0x4889c7	                            mov rdi, rax	      1119	am.c	FUNCTION_32	CALL_12
0x4002d69	      0xe838d9ffff	               call sym.write_state_text	      1119	am.c	FUNCTION_32	CALL_12
0x4002d6e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1121	am.c	FUNCTION_32
0x4002d72	          0x8b4008	                mov eax, dword [rax + 8]	      1121	am.c	FUNCTION_32
0x4002d75	          0x8d5001	                      lea edx, [rax + 1]	      1121	am.c	FUNCTION_32
0x4002d78	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1121	am.c	FUNCTION_32
0x4002d7c	          0x895008	                mov dword [rax + 8], edx	      1121	am.c	FUNCTION_32
0x4002d7f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1122	am.c	FUNCTION_32	CALL_13
0x4002d83	          0x8b5008	                mov edx, dword [rax + 8]	      1122	am.c	FUNCTION_32	CALL_13
0x4002d86	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1122	am.c	FUNCTION_32	CALL_13
0x4002d8a	      0xbe00000000	                              mov esi, 0	      1122	am.c	FUNCTION_32	CALL_13
0x4002d8f	          0x4889c7	                            mov rdi, rax	      1122	am.c	FUNCTION_32	CALL_13
0x4002d92	      0xe855d9ffff	              call sym.write_state_count	      1122	am.c	FUNCTION_32	CALL_13
0x4002d97	              0x90	                                     nop	      1123	am.c	FUNCTION_32
0x4002d98	        0x488b45f8	                mov rax, qword [rbp - 8]	      1123	am.c	FUNCTION_32
0x4002d9c	    0x644833042528	                xor rax, qword fs:[0x28]	      1123	am.c	FUNCTION_32
0x4002da5	            0x7405	                            je 0x4002dac	      1123	am.c	FUNCTION_32
0x4002da7	      0xe800000000	                          call 0x4002dac	      1123	am.c	FUNCTION_32
0x4002dac	              0xc9	                                   leave	      1123	am.c	FUNCTION_32
0x4002dad	              0xc3	                                     ret	      1123	am.c	FUNCTION_32
run_post_rewrite_hook	functions,0:IF,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,7	58
0x4001565	              0x55	                                push rbp	       509	am.c	FUNCTION_21
0x4001566	          0x4889e5	                            mov rbp, rsp	       509	am.c	FUNCTION_21
0x4001569	    0x4881ec900000	                           sub rsp, 0x90	       509	am.c	FUNCTION_21
0x4001570	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       509	am.c	FUNCTION_21
0x4001577	    0x64488b042528	                mov rax, qword fs:[0x28]	       509	am.c	FUNCTION_21
0x4001580	        0x488945f8	                mov qword [rbp - 8], rax	       509	am.c	FUNCTION_21
0x4001584	            0x31c0	                            xor eax, eax	       509	am.c	FUNCTION_21
0x4001586	        0x488d5590	                   lea rdx, [rbp - 0x70]	       510	am.c	FUNCTION_21
0x400158a	      0xb800000000	                              mov eax, 0	       510	am.c	FUNCTION_21
0x400158f	      0xb90c000000	                            mov ecx, 0xc	       510	am.c	FUNCTION_21
0x4001594	          0x4889d7	                            mov rdi, rdx	       510	am.c	FUNCTION_21
0x4001597	          0xf348ab	              rep stosq qword [rdi], rax	       510	am.c	FUNCTION_21
0x400159a	    0x48c745980000	               mov qword [rbp - 0x68], 0	       510	am.c	FUNCTION_21
0x40015a2	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       510	am.c	FUNCTION_21
0x40015aa	      0xbf00000000	                              mov edi, 0	       511	am.c	FUNCTION_21	CALL_1
0x40015af	      0xe800000000	                          call 0x40015b4	       511	am.c	FUNCTION_21	CALL_1
0x40015b4	        0x48894588	             mov qword [rbp - 0x78], rax	       511	am.c	FUNCTION_21	CALL_1
0x40015b8	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       514	am.c	FUNCTION_21	IF_1
0x40015bd	            0x7507	                           jne 0x40015c6	       514	am.c	FUNCTION_21	IF_1
0x40015bf	      0xb800000000	                              mov eax, 0	       515	am.c	FUNCTION_21	IF_1
0x40015c4	            0xeb7b	                           jmp 0x4001641	       515	am.c	FUNCTION_21	IF_1
0x40015c6	        0x488b4588	             mov rax, qword [rbp - 0x78]	       517	am.c	FUNCTION_21	CALL_2
0x40015ca	        0x488d5590	                   lea rdx, [rbp - 0x70]	       517	am.c	FUNCTION_21	CALL_2
0x40015ce	        0x4883c208	                              add rdx, 8	       517	am.c	FUNCTION_21	CALL_2
0x40015d2	          0x4889c6	                            mov rsi, rax	       517	am.c	FUNCTION_21	CALL_2
0x40015d5	          0x4889d7	                            mov rdi, rdx	       517	am.c	FUNCTION_21	CALL_2
0x40015d8	      0xe800000000	                          call 0x40015dd	       517	am.c	FUNCTION_21	CALL_2
0x40015dd	        0x488d4590	                   lea rax, [rbp - 0x70]	       518	am.c	FUNCTION_21	CALL_3
0x40015e1	        0x4883c008	                              add rax, 8	       518	am.c	FUNCTION_21	CALL_3
0x40015e5	      0xbe00000000	                              mov esi, 0	       518	am.c	FUNCTION_21	CALL_3
0x40015ea	          0x4889c7	                            mov rdi, rax	       518	am.c	FUNCTION_21	CALL_3
0x40015ed	      0xe800000000	                          call 0x40015f2	       518	am.c	FUNCTION_21	CALL_3
0x40015f2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       520	am.c	FUNCTION_21	CALL_5
0x40015f9	      0xbe00000000	                              mov esi, 0	       520	am.c	FUNCTION_21	CALL_5
0x40015fe	          0x4889c7	                            mov rdi, rax	       520	am.c	FUNCTION_21	CALL_5
0x4001601	      0xe871f0ffff	                        call sym.am_path	       520	am.c	FUNCTION_21	CALL_5
0x4001606	      0xbe00000000	                              mov esi, 0	       520	am.c	FUNCTION_21	CALL_5
0x400160b	          0x4889c7	                            mov rdi, rax	       520	am.c	FUNCTION_21	CALL_5
0x400160e	      0xb800000000	                              mov eax, 0	       520	am.c	FUNCTION_21	CALL_5
0x4001613	      0xe800000000	                          call 0x4001618	       520	am.c	FUNCTION_21	CALL_5
0x4001618	          0x8945bc	             mov dword [rbp - 0x44], eax	       520	am.c	FUNCTION_21	CALL_5
0x400161b	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       521	am.c	FUNCTION_21
0x400161f	          0x83c820	                            or eax, 0x20	       521	am.c	FUNCTION_21
0x4001622	          0x8845d8	               mov byte [rbp - 0x28], al	       521	am.c	FUNCTION_21
0x4001625	        0x488d4590	                   lea rax, [rbp - 0x70]	       523	am.c	FUNCTION_21	CALL_6
0x4001629	          0x4889c7	                            mov rdi, rax	       523	am.c	FUNCTION_21	CALL_6
0x400162c	      0xe800000000	                          call 0x4001631	       523	am.c	FUNCTION_21	CALL_6
0x4001631	          0x894584	             mov dword [rbp - 0x7c], eax	       523	am.c	FUNCTION_21	CALL_6
0x4001634	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       525	am.c	FUNCTION_21	CALL_7
0x4001637	            0x89c7	                            mov edi, eax	       525	am.c	FUNCTION_21	CALL_7
0x4001639	      0xe800000000	                          call 0x400163e	       525	am.c	FUNCTION_21	CALL_7
0x400163e	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       526	am.c	FUNCTION_21
0x4001641	        0x488b4df8	                mov rcx, qword [rbp - 8]	       527	am.c	FUNCTION_21
0x4001645	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       527	am.c	FUNCTION_21
0x400164e	            0x7405	                            je 0x4001655	       527	am.c	FUNCTION_21
0x4001650	      0xe800000000	                          call 0x4001655	       527	am.c	FUNCTION_21
0x4001655	              0xc9	                                   leave	       527	am.c	FUNCTION_21
0x4001656	              0xc3	                                     ret	       527	am.c	FUNCTION_21
is_empty_file	functions,0:IF,2:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,2	38
0x4000411	              0x55	                                push rbp	        40	am.c	FUNCTION_1
0x4000412	          0x4889e5	                            mov rbp, rsp	        40	am.c	FUNCTION_1
0x4000415	    0x4881ecb00000	                           sub rsp, 0xb0	        40	am.c	FUNCTION_1
0x400041c	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	        40	am.c	FUNCTION_1
0x4000423	    0x64488b042528	                mov rax, qword fs:[0x28]	        40	am.c	FUNCTION_1
0x400042c	        0x488945f8	                mov qword [rbp - 8], rax	        40	am.c	FUNCTION_1
0x4000430	            0x31c0	                            xor eax, eax	        40	am.c	FUNCTION_1
0x4000432	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	        43	am.c	FUNCTION_1	IF_1
0x4000439	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        43	am.c	FUNCTION_1	IF_1
0x4000440	          0x4889d6	                            mov rsi, rdx	        43	am.c	FUNCTION_1	IF_1
0x4000443	          0x4889c7	                            mov rdi, rax	        43	am.c	FUNCTION_1	IF_1
0x4000446	      0xe800000000	                          call 0x400044b	        43	am.c	FUNCTION_1	IF_1
0x400044b	            0x85c0	                           test eax, eax	        43	am.c	FUNCTION_1	IF_1
0x400044d	            0x7937	                           jns 0x4000486	        43	am.c	FUNCTION_1	IF_1
0x400044f	      0xe800000000	                          call 0x4000454	        44	am.c	FUNCTION_1	IF_1	IF_2
0x4000454	            0x8b00	                    mov eax, dword [rax]	        44	am.c	FUNCTION_1	IF_1	IF_2
0x4000456	          0x83f802	                              cmp eax, 2	        44	am.c	FUNCTION_1	IF_1	IF_2
0x4000459	            0x7507	                           jne 0x4000462	        44	am.c	FUNCTION_1	IF_1	IF_2
0x400045b	      0xb801000000	                              mov eax, 1	        45	am.c	FUNCTION_1	IF_1	IF_2
0x4000460	            0xeb31	                           jmp 0x4000493	        45	am.c	FUNCTION_1	IF_1	IF_2
0x4000462	      0xbf00000000	                              mov edi, 0	        46	am.c	FUNCTION_1	IF_1	CALL_2
0x4000467	      0xe8cafdffff	                               call sym.	        46	am.c	FUNCTION_1	IF_1	CALL_2
0x400046c	          0x4889c2	                            mov rdx, rax	        46	am.c	FUNCTION_1	IF_1	CALL_2
0x400046f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        46	am.c	FUNCTION_1	IF_1	CALL_2
0x4000476	          0x4889c6	                            mov rsi, rax	        46	am.c	FUNCTION_1	IF_1	CALL_2
0x4000479	          0x4889d7	                            mov rdi, rdx	        46	am.c	FUNCTION_1	IF_1	CALL_2
0x400047c	      0xb800000000	                              mov eax, 0	        46	am.c	FUNCTION_1	IF_1	CALL_2
0x4000481	      0xe800000000	                          call 0x4000486	        46	am.c	FUNCTION_1	IF_1	CALL_2
0x4000486	        0x488b4590	             mov rax, qword [rbp - 0x70]	        49	am.c	FUNCTION_1
0x400048a	          0x4885c0	                           test rax, rax	        49	am.c	FUNCTION_1
0x400048d	           0xf94c0	                                 sete al	        49	am.c	FUNCTION_1
0x4000490	           0xfb6c0	                           movzx eax, al	        49	am.c	FUNCTION_1
0x4000493	        0x488b4df8	                mov rcx, qword [rbp - 8]	        50	am.c	FUNCTION_1
0x4000497	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        50	am.c	FUNCTION_1
0x40004a0	            0x7405	                            je 0x40004a7	        50	am.c	FUNCTION_1
0x40004a2	      0xe800000000	                          call 0x40004a7	        50	am.c	FUNCTION_1
0x40004a7	              0xc9	                                   leave	        50	am.c	FUNCTION_1
0x40004a8	              0xc3	                                     ret	        50	am.c	FUNCTION_1
am_destroy	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,3	30
0x400141b	              0x55	                                push rbp	       477	am.c	FUNCTION_19
0x400141c	          0x4889e5	                            mov rbp, rsp	       477	am.c	FUNCTION_19
0x400141f	        0x4883ec30	                           sub rsp, 0x30	       477	am.c	FUNCTION_19
0x4001423	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       477	am.c	FUNCTION_19
0x4001427	    0x64488b042528	                mov rax, qword fs:[0x28]	       477	am.c	FUNCTION_19
0x4001430	        0x488945f8	                mov qword [rbp - 8], rax	       477	am.c	FUNCTION_19
0x4001434	            0x31c0	                            xor eax, eax	       477	am.c	FUNCTION_19
0x4001436	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       478	am.c	FUNCTION_19
0x400143e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       478	am.c	FUNCTION_19
0x4001446	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       478	am.c	FUNCTION_19
0x400144e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       480	am.c	FUNCTION_19	CALL_1
0x4001452	          0x488b10	                    mov rdx, qword [rax]	       480	am.c	FUNCTION_19	CALL_1
0x4001455	        0x488d45e0	                   lea rax, [rbp - 0x20]	       480	am.c	FUNCTION_19	CALL_1
0x4001459	          0x4889d6	                            mov rsi, rdx	       480	am.c	FUNCTION_19	CALL_1
0x400145c	          0x4889c7	                            mov rdi, rax	       480	am.c	FUNCTION_19	CALL_1
0x400145f	      0xe89dedffff	                  call sym.strbuf_addstr	       480	am.c	FUNCTION_19	CALL_1
0x4001464	        0x488d45e0	                   lea rax, [rbp - 0x20]	       481	am.c	FUNCTION_19	CALL_2
0x4001468	      0xbe00000000	                              mov esi, 0	       481	am.c	FUNCTION_19	CALL_2
0x400146d	          0x4889c7	                            mov rdi, rax	       481	am.c	FUNCTION_19	CALL_2
0x4001470	      0xe800000000	                          call 0x4001475	       481	am.c	FUNCTION_19	CALL_2
0x4001475	        0x488d45e0	                   lea rax, [rbp - 0x20]	       482	am.c	FUNCTION_19	CALL_3
0x4001479	          0x4889c7	                            mov rdi, rax	       482	am.c	FUNCTION_19	CALL_3
0x400147c	      0xe800000000	                          call 0x4001481	       482	am.c	FUNCTION_19	CALL_3
0x4001481	              0x90	                                     nop	       483	am.c	FUNCTION_19
0x4001482	        0x488b45f8	                mov rax, qword [rbp - 8]	       483	am.c	FUNCTION_19
0x4001486	    0x644833042528	                xor rax, qword fs:[0x28]	       483	am.c	FUNCTION_19
0x400148f	            0x7405	                            je 0x4001496	       483	am.c	FUNCTION_19
0x4001491	      0xe800000000	                          call 0x4001496	       483	am.c	FUNCTION_19
0x4001496	              0xc9	                                   leave	       483	am.c	FUNCTION_19
0x4001497	              0xc3	                                     ret	       483	am.c	FUNCTION_19
do_commit	functions,0:IF,7:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,1:CALL,29	203
0x40044e6	              0x55	                                push rbp	      1619	am.c	FUNCTION_46
0x40044e7	          0x4889e5	                            mov rbp, rsp	      1619	am.c	FUNCTION_46
0x40044ea	              0x53	                                push rbx	      1619	am.c	FUNCTION_46
0x40044eb	    0x4881ecc80000	                           sub rsp, 0xc8	      1619	am.c	FUNCTION_46
0x40044f2	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      1619	am.c	FUNCTION_46
0x40044f9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1619	am.c	FUNCTION_46
0x4004502	        0x488945e8	             mov qword [rbp - 0x18], rax	      1619	am.c	FUNCTION_46
0x4004506	            0x31c0	                            xor eax, eax	      1619	am.c	FUNCTION_46
0x4004508	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      1622	am.c	FUNCTION_46
0x4004513	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      1624	am.c	FUNCTION_46
0x400451e	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      1624	am.c	FUNCTION_46
0x4004529	    0x48c745800000	               mov qword [rbp - 0x80], 0	      1624	am.c	FUNCTION_46
0x4004531	      0xba00000000	                              mov edx, 0	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4004536	      0xbe00000000	                              mov esi, 0	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x400453b	      0xbf00000000	                              mov edi, 0	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4004540	      0xb800000000	                              mov eax, 0	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4004545	      0xe800000000	                          call 0x400454a	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x400454a	            0x85c0	                           test eax, eax	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x400454c	            0x740a	                            je 0x4004558	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x400454e	      0xbf01000000	                              mov edi, 1	      1627	am.c	FUNCTION_46	CALL_2
0x4004553	      0xe800000000	                          call 0x4004558	      1627	am.c	FUNCTION_46	CALL_2
0x4004558	        0x488d4590	                   lea rax, [rbp - 0x70]	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x400455c	      0xba00000000	                              mov edx, 0	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4004561	      0xbe00000000	                              mov esi, 0	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4004566	          0x4889c7	                            mov rdi, rax	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4004569	      0xe800000000	                          call 0x400456e	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x400456e	            0x85c0	                           test eax, eax	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4004570	            0x7417	                            je 0x4004589	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4004572	      0xbf00000000	                              mov edi, 0	      1630	am.c	FUNCTION_46	CALL_5
0x4004577	      0xe8babcffff	                               call sym.	      1630	am.c	FUNCTION_46	CALL_5
0x400457c	          0x4889c7	                            mov rdi, rax	      1630	am.c	FUNCTION_46	CALL_5
0x400457f	      0xb800000000	                              mov eax, 0	      1630	am.c	FUNCTION_46	CALL_5
0x4004584	      0xe800000000	                          call 0x4004589	      1630	am.c	FUNCTION_46	CALL_5
0x4004589	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x400458d	          0x4889c6	                            mov rsi, rax	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x4004590	      0xbf00000000	                              mov edi, 0	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x4004595	      0xe800000000	                          call 0x400459a	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x400459a	            0x85c0	                           test eax, eax	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x400459c	            0x752e	                           jne 0x40045cc	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x400459e	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1633	am.c	FUNCTION_46	IF_3
0x40045a2	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1633	am.c	FUNCTION_46	IF_3
0x40045a9	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x40045ad	          0x4889c7	                            mov rdi, rax	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x40045b0	      0xe800000000	                          call 0x40045b5	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x40045b5	          0x4889c2	                            mov rdx, rax	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x40045b8	    0x488d8548ffff	                   lea rax, [rbp - 0xb8]	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x40045bf	          0x4889c6	                            mov rsi, rax	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x40045c2	          0x4889d7	                            mov rdi, rdx	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x40045c5	      0xe800000000	                          call 0x40045ca	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x40045ca	            0xeb36	                           jmp 0x4004602	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x40045cc	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      1636	am.c	FUNCTION_46	ELSE_1
0x40045d7	      0xbf00000000	                              mov edi, 0	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x40045dc	      0xe855bcffff	                               call sym.	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x40045e1	          0x4889c2	                            mov rdx, rax	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x40045e4	    0x488b0d000000	            mov rcx, qword [0x040045eb] 	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x40045eb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x40045f2	          0x4889ce	                            mov rsi, rcx	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x40045f5	          0x4889c7	                            mov rdi, rax	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x40045f8	      0xb800000000	                              mov eax, 0	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x40045fd	      0xe868c1ffff	                            call sym.say	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x4004602	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1641	am.c	FUNCTION_46
0x4004609	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      1641	am.c	FUNCTION_46
0x400460f	            0x85c0	                           test eax, eax	      1640	am.c	FUNCTION_46	CALL_11
0x4004611	            0x750d	                           jne 0x4004620	      1640	am.c	FUNCTION_46	CALL_11
0x4004613	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1640	am.c	FUNCTION_46	CALL_11
0x400461a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1640	am.c	FUNCTION_46	CALL_11
0x400461e	            0xeb05	                           jmp 0x4004625	      1640	am.c	FUNCTION_46	CALL_11
0x4004620	      0xb800000000	                              mov eax, 0	      1640	am.c	FUNCTION_46	CALL_11
0x4004625	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1640	am.c	FUNCTION_46	CALL_11
0x400462c	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	      1640	am.c	FUNCTION_46	CALL_11
0x4004630	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1640	am.c	FUNCTION_46	CALL_11
0x4004637	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      1640	am.c	FUNCTION_46	CALL_11
0x400463b	      0xb901000000	                              mov ecx, 1	      1640	am.c	FUNCTION_46	CALL_11
0x4004640	          0x4889c2	                            mov rdx, rax	      1640	am.c	FUNCTION_46	CALL_11
0x4004643	      0xe800000000	                          call 0x4004648	      1640	am.c	FUNCTION_46	CALL_11
0x4004648	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      1640	am.c	FUNCTION_46	CALL_11
0x400464f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1644	am.c	FUNCTION_46	IF_4
0x4004656	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      1644	am.c	FUNCTION_46	IF_4
0x400465c	            0x85c0	                           test eax, eax	      1644	am.c	FUNCTION_46	IF_4
0x400465e	            0x7435	                            je 0x4004695	      1644	am.c	FUNCTION_46	IF_4
0x4004660	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1646	am.c	FUNCTION_46	IF_4
0x4004667	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      1646	am.c	FUNCTION_46	IF_4
0x400466d	            0x85c0	                           test eax, eax	      1645	am.c	FUNCTION_46	IF_4
0x400466f	            0x750d	                           jne 0x400467e	      1645	am.c	FUNCTION_46	IF_4
0x4004671	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1645	am.c	FUNCTION_46	IF_4
0x4004678	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1645	am.c	FUNCTION_46	IF_4
0x400467c	            0xeb05	                           jmp 0x4004683	      1645	am.c	FUNCTION_46	IF_4
0x400467e	      0xb800000000	                              mov eax, 0	      1645	am.c	FUNCTION_46	IF_4
0x4004683	      0xba01000000	                              mov edx, 1	      1645	am.c	FUNCTION_46	IF_4
0x4004688	          0x4889c6	                            mov rsi, rax	      1645	am.c	FUNCTION_46	IF_4
0x400468b	      0xbf00000000	                              mov edi, 0	      1645	am.c	FUNCTION_46	IF_4
0x4004690	      0xe800000000	                          call 0x4004695	      1645	am.c	FUNCTION_46	IF_4
0x4004695	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x400469c	    0x488bb8980000	            mov rdi, qword [rax + 0x98] 	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046a3	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046aa	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046b1	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046b5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046bc	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046c0	    0x4c8b8d60ffff	              mov r9, qword [rbp - 0xa0]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046c7	        0x4c8d45d0	                    lea r8, [rbp - 0x30]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046cb	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046cf	        0x4883ec08	                              sub rsp, 8	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046d3	              0x57	                                push rdi	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046d4	          0x4889c7	                            mov rdi, rax	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046d7	      0xe800000000	                          call 0x40046dc	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046dc	        0x4883c410	                           add rsp, 0x10	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046e0	            0x85c0	                           test eax, eax	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046e2	            0x7417	                            je 0x40046fb	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x40046e4	      0xbf00000000	                              mov edi, 0	      1650	am.c	FUNCTION_46	CALL_14
0x40046e9	      0xe848bbffff	                               call sym.	      1650	am.c	FUNCTION_46	CALL_14
0x40046ee	          0x4889c7	                            mov rdi, rax	      1650	am.c	FUNCTION_46	CALL_14
0x40046f1	      0xb800000000	                              mov eax, 0	      1650	am.c	FUNCTION_46	CALL_14
0x40046f6	      0xe800000000	                          call 0x40046fb	      1650	am.c	FUNCTION_46	CALL_14
0x40046fb	      0xbf00000000	                              mov edi, 0	      1652	am.c	FUNCTION_46	CALL_15
0x4004700	      0xe800000000	                          call 0x4004705	      1652	am.c	FUNCTION_46	CALL_15
0x4004705	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1652	am.c	FUNCTION_46	CALL_15
0x400470c	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      1653	am.c	FUNCTION_46	IF_6
0x4004714	            0x750b	                           jne 0x4004721	      1653	am.c	FUNCTION_46	IF_6
0x4004716	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1654	am.c	FUNCTION_46	IF_6
0x4004721	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1656	am.c	FUNCTION_46	CALL_17
0x4004728	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1656	am.c	FUNCTION_46	CALL_17
0x400472c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1656	am.c	FUNCTION_46	CALL_17
0x4004733	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1656	am.c	FUNCTION_46	CALL_17
0x4004737	          0x4889c7	                            mov rdi, rax	      1656	am.c	FUNCTION_46	CALL_17
0x400473a	      0xe86abdffff	                        call sym.linelen	      1656	am.c	FUNCTION_46	CALL_17
0x400473f	            0x89c1	                            mov ecx, eax	      1656	am.c	FUNCTION_46	CALL_17
0x4004741	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1656	am.c	FUNCTION_46	CALL_17
0x4004748	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      1656	am.c	FUNCTION_46	CALL_17
0x400474f	          0x4989d8	                             mov r8, rbx	      1656	am.c	FUNCTION_46	CALL_17
0x4004752	      0xbe00000000	                              mov esi, 0	      1656	am.c	FUNCTION_46	CALL_17
0x4004757	          0x4889c7	                            mov rdi, rax	      1656	am.c	FUNCTION_46	CALL_17
0x400475a	      0xb800000000	                              mov eax, 0	      1656	am.c	FUNCTION_46	CALL_17
0x400475f	      0xe800000000	                          call 0x4004764	      1656	am.c	FUNCTION_46	CALL_17
0x4004764	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1659	am.c	FUNCTION_46	CALL_18
0x4004768	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	      1659	am.c	FUNCTION_46	CALL_18
0x400476f	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1659	am.c	FUNCTION_46	CALL_18
0x4004773	    0x41b901000000	                              mov r9d, 1	      1659	am.c	FUNCTION_46	CALL_18
0x4004779	    0x41b800000000	                              mov r8d, 0	      1659	am.c	FUNCTION_46	CALL_18
0x400477f	      0xbe00000000	                              mov esi, 0	      1659	am.c	FUNCTION_46	CALL_18
0x4004784	          0x4889c7	                            mov rdi, rax	      1659	am.c	FUNCTION_46	CALL_18
0x4004787	      0xe800000000	                          call 0x400478c	      1659	am.c	FUNCTION_46	CALL_18
0x400478c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1662	am.c	FUNCTION_46	IF_7
0x4004793	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1662	am.c	FUNCTION_46	IF_7
0x4004799	            0x85c0	                           test eax, eax	      1662	am.c	FUNCTION_46	IF_7
0x400479b	     0xf84be000000	                            je 0x400485f	      1662	am.c	FUNCTION_46	IF_7
0x40047a1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x40047a8	      0xbe00000000	                              mov esi, 0	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x40047ad	          0x4889c7	                            mov rdi, rax	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x40047b0	      0xe8c2beffff	                        call sym.am_path	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x40047b5	      0xbe00000000	                              mov esi, 0	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x40047ba	          0x4889c7	                            mov rdi, rax	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x40047bd	      0xe800000000	                          call 0x40047c2	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x40047c2	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x40047c9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x40047d0	        0x4883c038	                           add rax, 0x38	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x40047d4	          0x4889c7	                            mov rdi, rax	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x40047d7	      0xe8d5baffff	                    call sym.is_null_oid	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x40047dc	            0x85c0	                           test eax, eax	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x40047de	            0x7419	                            je 0x40047f9	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x40047e0	      0xb900000000	                              mov ecx, 0	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x40047e5	      0xba81060000	                          mov edx, 0x681	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x40047ea	      0xbe00000000	                              mov esi, 0	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x40047ef	      0xbf00000000	                              mov edi, 0	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x40047f4	      0xe800000000	                          call 0x40047f9	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x40047f9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1666	am.c	FUNCTION_46	IF_7	CALL_24
0x4004800	        0x4883c038	                           add rax, 0x38	      1666	am.c	FUNCTION_46	IF_7	CALL_24
0x4004804	          0x4889c7	                            mov rdi, rax	      1666	am.c	FUNCTION_46	IF_7	CALL_24
0x4004807	      0xe800000000	                          call 0x400480c	      1666	am.c	FUNCTION_46	IF_7	CALL_24
0x400480c	          0x4889c2	                            mov rdx, rax	      1666	am.c	FUNCTION_46	IF_7	CALL_24
0x400480f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1666	am.c	FUNCTION_46	IF_7	CALL_24
0x4004816	      0xbe00000000	                              mov esi, 0	      1666	am.c	FUNCTION_46	IF_7	CALL_24
0x400481b	          0x4889c7	                            mov rdi, rax	      1666	am.c	FUNCTION_46	IF_7	CALL_24
0x400481e	      0xb800000000	                              mov eax, 0	      1666	am.c	FUNCTION_46	IF_7	CALL_24
0x4004823	      0xe800000000	                          call 0x4004828	      1666	am.c	FUNCTION_46	IF_7	CALL_24
0x4004828	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1667	am.c	FUNCTION_46	IF_7	CALL_26
0x400482c	          0x4889c7	                            mov rdi, rax	      1667	am.c	FUNCTION_46	IF_7	CALL_26
0x400482f	      0xe800000000	                          call 0x4004834	      1667	am.c	FUNCTION_46	IF_7	CALL_26
0x4004834	          0x4889c2	                            mov rdx, rax	      1667	am.c	FUNCTION_46	IF_7	CALL_26
0x4004837	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1667	am.c	FUNCTION_46	IF_7	CALL_26
0x400483e	      0xbe00000000	                              mov esi, 0	      1667	am.c	FUNCTION_46	IF_7	CALL_26
0x4004843	          0x4889c7	                            mov rdi, rax	      1667	am.c	FUNCTION_46	IF_7	CALL_26
0x4004846	      0xb800000000	                              mov eax, 0	      1667	am.c	FUNCTION_46	IF_7	CALL_26
0x400484b	      0xe800000000	                          call 0x4004850	      1667	am.c	FUNCTION_46	IF_7	CALL_26
0x4004850	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1668	am.c	FUNCTION_46	IF_7	CALL_27
0x4004857	          0x4889c7	                            mov rdi, rax	      1668	am.c	FUNCTION_46	IF_7	CALL_27
0x400485a	      0xe800000000	                          call 0x400485f	      1668	am.c	FUNCTION_46	IF_7	CALL_27
0x400485f	      0xba00000000	                              mov edx, 0	      1671	am.c	FUNCTION_46	CALL_28
0x4004864	      0xbe00000000	                              mov esi, 0	      1671	am.c	FUNCTION_46	CALL_28
0x4004869	      0xbf00000000	                              mov edi, 0	      1671	am.c	FUNCTION_46	CALL_28
0x400486e	      0xb800000000	                              mov eax, 0	      1671	am.c	FUNCTION_46	CALL_28
0x4004873	      0xe800000000	                          call 0x4004878	      1671	am.c	FUNCTION_46	CALL_28
0x4004878	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      1673	am.c	FUNCTION_46	CALL_29
0x400487f	          0x4889c7	                            mov rdi, rax	      1673	am.c	FUNCTION_46	CALL_29
0x4004882	      0xe800000000	                          call 0x4004887	      1673	am.c	FUNCTION_46	CALL_29
0x4004887	              0x90	                                     nop	      1674	am.c	FUNCTION_46
0x4004888	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1674	am.c	FUNCTION_46
0x400488c	    0x644833042528	                xor rax, qword fs:[0x28]	      1674	am.c	FUNCTION_46
0x4004895	            0x7405	                            je 0x400489c	      1674	am.c	FUNCTION_46
0x4004897	      0xe800000000	                          call 0x400489c	      1674	am.c	FUNCTION_46
0x400489c	        0x488b5df8	                mov rbx, qword [rbp - 8]	      1674	am.c	FUNCTION_46
0x40048a0	              0xc9	                                   leave	      1674	am.c	FUNCTION_46
0x40048a1	              0xc3	                                     ret	      1674	am.c	FUNCTION_46
split_mail_mbox	functions,0:IF,3:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,11	111
0x4001c85	              0x55	                                push rbp	       708	am.c	FUNCTION_25
0x4001c86	          0x4889e5	                            mov rbp, rsp	       708	am.c	FUNCTION_25
0x4001c89	    0x4881ecc00000	                           sub rsp, 0xc0	       708	am.c	FUNCTION_25
0x4001c90	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	       708	am.c	FUNCTION_25
0x4001c97	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	       708	am.c	FUNCTION_25
0x4001c9e	    0x89954cffffff	             mov dword [rbp - 0xb4], edx	       708	am.c	FUNCTION_25
0x4001ca4	    0x898d48ffffff	             mov dword [rbp - 0xb8], ecx	       708	am.c	FUNCTION_25
0x4001caa	    0x64488b042528	                mov rax, qword fs:[0x28]	       708	am.c	FUNCTION_25
0x4001cb3	        0x488945f8	                mov qword [rbp - 8], rax	       708	am.c	FUNCTION_25
0x4001cb7	            0x31c0	                            xor eax, eax	       708	am.c	FUNCTION_25
0x4001cb9	        0x488d5590	                   lea rdx, [rbp - 0x70]	       709	am.c	FUNCTION_25
0x4001cbd	      0xb800000000	                              mov eax, 0	       709	am.c	FUNCTION_25
0x4001cc2	      0xb90c000000	                            mov ecx, 0xc	       709	am.c	FUNCTION_25
0x4001cc7	          0x4889d7	                            mov rdi, rdx	       709	am.c	FUNCTION_25
0x4001cca	          0xf348ab	              rep stosq qword [rdi], rax	       709	am.c	FUNCTION_25
0x4001ccd	    0x48c745980000	               mov qword [rbp - 0x68], 0	       709	am.c	FUNCTION_25
0x4001cd5	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       709	am.c	FUNCTION_25
0x4001cdd	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       710	am.c	FUNCTION_25
0x4001ce8	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       710	am.c	FUNCTION_25
0x4001cf3	    0x48c745800000	               mov qword [rbp - 0x80], 0	       710	am.c	FUNCTION_25
0x4001cfb	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       713	am.c	FUNCTION_25
0x4001cff	          0x83c808	                               or eax, 8	       713	am.c	FUNCTION_25
0x4001d02	          0x8845d8	               mov byte [rbp - 0x28], al	       713	am.c	FUNCTION_25
0x4001d05	        0x488d4590	                   lea rax, [rbp - 0x70]	       714	am.c	FUNCTION_25	CALL_1
0x4001d09	        0x4883c008	                              add rax, 8	       714	am.c	FUNCTION_25	CALL_1
0x4001d0d	      0xbe00000000	                              mov esi, 0	       714	am.c	FUNCTION_25	CALL_1
0x4001d12	          0x4889c7	                            mov rdi, rax	       714	am.c	FUNCTION_25	CALL_1
0x4001d15	      0xe800000000	                          call 0x4001d1a	       714	am.c	FUNCTION_25	CALL_1
0x4001d1a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       715	am.c	FUNCTION_25	CALL_2
0x4001d21	          0x8b404c	            mov eax, dword [rax + 0x4c] 	       715	am.c	FUNCTION_25	CALL_2
0x4001d24	        0x488d5590	                   lea rdx, [rbp - 0x70]	       715	am.c	FUNCTION_25	CALL_2
0x4001d28	        0x488d4a08	                      lea rcx, [rdx + 8]	       715	am.c	FUNCTION_25	CALL_2
0x4001d2c	            0x89c2	                            mov edx, eax	       715	am.c	FUNCTION_25	CALL_2
0x4001d2e	      0xbe00000000	                              mov esi, 0	       715	am.c	FUNCTION_25	CALL_2
0x4001d33	          0x4889cf	                            mov rdi, rcx	       715	am.c	FUNCTION_25	CALL_2
0x4001d36	      0xb800000000	                              mov eax, 0	       715	am.c	FUNCTION_25	CALL_2
0x4001d3b	      0xe800000000	                          call 0x4001d40	       715	am.c	FUNCTION_25	CALL_2
0x4001d40	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       716	am.c	FUNCTION_25	CALL_3
0x4001d47	          0x488b00	                    mov rax, qword [rax]	       716	am.c	FUNCTION_25	CALL_3
0x4001d4a	        0x488d5590	                   lea rdx, [rbp - 0x70]	       716	am.c	FUNCTION_25	CALL_3
0x4001d4e	        0x488d4a08	                      lea rcx, [rdx + 8]	       716	am.c	FUNCTION_25	CALL_3
0x4001d52	          0x4889c2	                            mov rdx, rax	       716	am.c	FUNCTION_25	CALL_3
0x4001d55	      0xbe00000000	                              mov esi, 0	       716	am.c	FUNCTION_25	CALL_3
0x4001d5a	          0x4889cf	                            mov rdi, rcx	       716	am.c	FUNCTION_25	CALL_3
0x4001d5d	      0xb800000000	                              mov eax, 0	       716	am.c	FUNCTION_25	CALL_3
0x4001d62	      0xe800000000	                          call 0x4001d67	       716	am.c	FUNCTION_25	CALL_3
0x4001d67	        0x488d4590	                   lea rax, [rbp - 0x70]	       717	am.c	FUNCTION_25	CALL_4
0x4001d6b	        0x4883c008	                              add rax, 8	       717	am.c	FUNCTION_25	CALL_4
0x4001d6f	      0xbe00000000	                              mov esi, 0	       717	am.c	FUNCTION_25	CALL_4
0x4001d74	          0x4889c7	                            mov rdi, rax	       717	am.c	FUNCTION_25	CALL_4
0x4001d77	      0xe800000000	                          call 0x4001d7c	       717	am.c	FUNCTION_25	CALL_4
0x4001d7c	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       718	am.c	FUNCTION_25	IF_1
0x4001d83	            0x7415	                            je 0x4001d9a	       718	am.c	FUNCTION_25	IF_1
0x4001d85	        0x488d4590	                   lea rax, [rbp - 0x70]	       719	am.c	FUNCTION_25	CALL_5
0x4001d89	        0x4883c008	                              add rax, 8	       719	am.c	FUNCTION_25	CALL_5
0x4001d8d	      0xbe00000000	                              mov esi, 0	       719	am.c	FUNCTION_25	CALL_5
0x4001d92	          0x4889c7	                            mov rdi, rax	       719	am.c	FUNCTION_25	CALL_5
0x4001d95	      0xe800000000	                          call 0x4001d9a	       719	am.c	FUNCTION_25	CALL_5
0x4001d9a	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	       720	am.c	FUNCTION_25	IF_2
0x4001da1	            0x7415	                            je 0x4001db8	       720	am.c	FUNCTION_25	IF_2
0x4001da3	        0x488d4590	                   lea rax, [rbp - 0x70]	       721	am.c	FUNCTION_25	CALL_6
0x4001da7	        0x4883c008	                              add rax, 8	       721	am.c	FUNCTION_25	CALL_6
0x4001dab	      0xbe00000000	                              mov esi, 0	       721	am.c	FUNCTION_25	CALL_6
0x4001db0	          0x4889c7	                            mov rdi, rax	       721	am.c	FUNCTION_25	CALL_6
0x4001db3	      0xe800000000	                          call 0x4001db8	       721	am.c	FUNCTION_25	CALL_6
0x4001db8	        0x488d4590	                   lea rax, [rbp - 0x70]	       722	am.c	FUNCTION_25	CALL_7
0x4001dbc	        0x4883c008	                              add rax, 8	       722	am.c	FUNCTION_25	CALL_7
0x4001dc0	      0xbe00000000	                              mov esi, 0	       722	am.c	FUNCTION_25	CALL_7
0x4001dc5	          0x4889c7	                            mov rdi, rax	       722	am.c	FUNCTION_25	CALL_7
0x4001dc8	      0xe800000000	                          call 0x4001dcd	       722	am.c	FUNCTION_25	CALL_7
0x4001dcd	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       723	am.c	FUNCTION_25	CALL_8
0x4001dd4	        0x488d5590	                   lea rdx, [rbp - 0x70]	       723	am.c	FUNCTION_25	CALL_8
0x4001dd8	        0x4883c208	                              add rdx, 8	       723	am.c	FUNCTION_25	CALL_8
0x4001ddc	          0x4889c6	                            mov rsi, rax	       723	am.c	FUNCTION_25	CALL_8
0x4001ddf	          0x4889d7	                            mov rdi, rdx	       723	am.c	FUNCTION_25	CALL_8
0x4001de2	      0xe800000000	                          call 0x4001de7	       723	am.c	FUNCTION_25	CALL_8
0x4001de7	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	       725	am.c	FUNCTION_25	CALL_9
0x4001dee	        0x488d4590	                   lea rax, [rbp - 0x70]	       725	am.c	FUNCTION_25	CALL_9
0x4001df2	      0xba08000000	                              mov edx, 8	       725	am.c	FUNCTION_25	CALL_9
0x4001df7	          0x4889ce	                            mov rsi, rcx	       725	am.c	FUNCTION_25	CALL_9
0x4001dfa	          0x4889c7	                            mov rdi, rax	       725	am.c	FUNCTION_25	CALL_9
0x4001dfd	      0xe8aae5ffff	                call sym.capture_command	       725	am.c	FUNCTION_25	CALL_9
0x4001e02	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       725	am.c	FUNCTION_25	CALL_9
0x4001e08	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       726	am.c	FUNCTION_25	IF_3
0x4001e0f	            0x7532	                           jne 0x4001e43	       726	am.c	FUNCTION_25	IF_3
0x4001e11	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       729	am.c	FUNCTION_25
0x4001e18	    0xc74008010000	                  mov dword [rax + 8], 1	       729	am.c	FUNCTION_25
0x4001e1f	        0x488b4580	             mov rax, qword [rbp - 0x80]	       730	am.c	FUNCTION_25	CALL_10
0x4001e23	      0xba0a000000	                            mov edx, 0xa	       730	am.c	FUNCTION_25	CALL_10
0x4001e28	      0xbe00000000	                              mov esi, 0	       730	am.c	FUNCTION_25	CALL_10
0x4001e2d	          0x4889c7	                            mov rdi, rax	       730	am.c	FUNCTION_25	CALL_10
0x4001e30	      0xe800000000	                          call 0x4001e35	       730	am.c	FUNCTION_25	CALL_10
0x4001e35	            0x89c2	                            mov edx, eax	       730	am.c	FUNCTION_25	CALL_10
0x4001e37	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       730	am.c	FUNCTION_25	CALL_10
0x4001e3e	          0x89500c	              mov dword [rax + 0xc], edx	       730	am.c	FUNCTION_25	CALL_10
0x4001e41	            0xeb01	                           jmp 0x4001e44	       730	am.c	FUNCTION_25	CALL_10
0x4001e43	              0x90	                                     nop	       727	am.c	FUNCTION_25	IF_3
0x4001e44	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       733	am.c	FUNCTION_25	CALL_11
0x4001e4b	          0x4889c7	                            mov rdi, rax	       733	am.c	FUNCTION_25	CALL_11
0x4001e4e	      0xe800000000	                          call 0x4001e53	       733	am.c	FUNCTION_25	CALL_11
0x4001e53	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       734	am.c	FUNCTION_25
0x4001e5a	            0x7407	                            je 0x4001e63	       734	am.c	FUNCTION_25
0x4001e5c	      0xb8ffffffff	                     mov eax, 0xffffffff	       734	am.c	FUNCTION_25
0x4001e61	            0xeb05	                           jmp 0x4001e68	       734	am.c	FUNCTION_25
0x4001e63	      0xb800000000	                              mov eax, 0	       734	am.c	FUNCTION_25
0x4001e68	        0x488b4df8	                mov rcx, qword [rbp - 8]	       735	am.c	FUNCTION_25
0x4001e6c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       735	am.c	FUNCTION_25
0x4001e75	            0x7405	                            je 0x4001e7c	       735	am.c	FUNCTION_25
0x4001e77	      0xe800000000	                          call 0x4001e7c	       735	am.c	FUNCTION_25
0x4001e7c	              0xc9	                                   leave	       735	am.c	FUNCTION_25
0x4001e7d	              0xc3	                                     ret	       735	am.c	FUNCTION_25
git_is_dir_sep	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,0	8
0x400004f	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_107
0x4000050	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_107
0x4000053	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_107
0x4000056	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_107
0x400005a	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_107
0x400005d	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_107
0x4000060	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_107
0x4000061	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_107
write_state_count	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,2	21
0x40006ec	              0x55	                                push rbp	       197	am.c	FUNCTION_8
0x40006ed	          0x4889e5	                            mov rbp, rsp	       197	am.c	FUNCTION_8
0x40006f0	        0x4883ec20	                           sub rsp, 0x20	       197	am.c	FUNCTION_8
0x40006f4	        0x48897df8	                mov qword [rbp - 8], rdi	       197	am.c	FUNCTION_8
0x40006f8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       197	am.c	FUNCTION_8
0x40006fc	          0x8955ec	             mov dword [rbp - 0x14], edx	       197	am.c	FUNCTION_8
0x40006ff	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       198	am.c	FUNCTION_8	CALL_2
0x4000703	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	am.c	FUNCTION_8	CALL_2
0x4000707	          0x4889d6	                            mov rsi, rdx	       198	am.c	FUNCTION_8	CALL_2
0x400070a	          0x4889c7	                            mov rdi, rax	       198	am.c	FUNCTION_8	CALL_2
0x400070d	      0xe865ffffff	                        call sym.am_path	       198	am.c	FUNCTION_8	CALL_2
0x4000712	          0x4889c1	                            mov rcx, rax	       198	am.c	FUNCTION_8	CALL_2
0x4000715	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       198	am.c	FUNCTION_8	CALL_2
0x4000718	            0x89c2	                            mov edx, eax	       198	am.c	FUNCTION_8	CALL_2
0x400071a	      0xbe00000000	                              mov esi, 0	       198	am.c	FUNCTION_8	CALL_2
0x400071f	          0x4889cf	                            mov rdi, rcx	       198	am.c	FUNCTION_8	CALL_2
0x4000722	      0xb800000000	                              mov eax, 0	       198	am.c	FUNCTION_8	CALL_2
0x4000727	      0xe800000000	                          call 0x400072c	       198	am.c	FUNCTION_8	CALL_2
0x400072c	              0x90	                                     nop	       199	am.c	FUNCTION_8
0x400072d	              0xc9	                                   leave	       199	am.c	FUNCTION_8
0x400072e	              0xc3	                                     ret	       199	am.c	FUNCTION_8
build_fake_ancestor	functions,0:IF,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,6	62
0x4004024	              0x55	                                push rbp	      1518	am.c	FUNCTION_44
0x4004025	          0x4889e5	                            mov rbp, rsp	      1518	am.c	FUNCTION_44
0x4004028	        0x4883c480	             add rsp, 0xffffffffffffff80	      1518	am.c	FUNCTION_44
0x400402c	        0x48897d88	             mov qword [rbp - 0x78], rdi	      1518	am.c	FUNCTION_44
0x4004030	        0x48897580	             mov qword [rbp - 0x80], rsi	      1518	am.c	FUNCTION_44
0x4004034	    0x64488b042528	                mov rax, qword fs:[0x28]	      1518	am.c	FUNCTION_44
0x400403d	        0x488945f8	                mov qword [rbp - 8], rax	      1518	am.c	FUNCTION_44
0x4004041	            0x31c0	                            xor eax, eax	      1518	am.c	FUNCTION_44
0x4004043	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1519	am.c	FUNCTION_44
0x4004047	      0xb800000000	                              mov eax, 0	      1519	am.c	FUNCTION_44
0x400404c	      0xb90c000000	                            mov ecx, 0xc	      1519	am.c	FUNCTION_44
0x4004051	          0x4889d7	                            mov rdi, rdx	      1519	am.c	FUNCTION_44
0x4004054	          0xf348ab	              rep stosq qword [rdi], rax	      1519	am.c	FUNCTION_44
0x4004057	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1519	am.c	FUNCTION_44
0x400405f	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1519	am.c	FUNCTION_44
0x4004067	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	      1521	am.c	FUNCTION_44
0x400406b	          0x83c808	                               or eax, 8	      1521	am.c	FUNCTION_44
0x400406e	          0x8845d8	               mov byte [rbp - 0x28], al	      1521	am.c	FUNCTION_44
0x4004071	        0x488d4590	                   lea rax, [rbp - 0x70]	      1522	am.c	FUNCTION_44	CALL_1
0x4004075	        0x4883c008	                              add rax, 8	      1522	am.c	FUNCTION_44	CALL_1
0x4004079	      0xbe00000000	                              mov esi, 0	      1522	am.c	FUNCTION_44	CALL_1
0x400407e	          0x4889c7	                            mov rdi, rax	      1522	am.c	FUNCTION_44	CALL_1
0x4004081	      0xe800000000	                          call 0x4004086	      1522	am.c	FUNCTION_44	CALL_1
0x4004086	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1523	am.c	FUNCTION_44	CALL_2
0x400408a	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1523	am.c	FUNCTION_44	CALL_2
0x400408e	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1523	am.c	FUNCTION_44	CALL_2
0x4004092	        0x4883c208	                              add rdx, 8	      1523	am.c	FUNCTION_44	CALL_2
0x4004096	          0x4889c6	                            mov rsi, rax	      1523	am.c	FUNCTION_44	CALL_2
0x4004099	          0x4889d7	                            mov rdi, rdx	      1523	am.c	FUNCTION_44	CALL_2
0x400409c	      0xe800000000	                          call 0x40040a1	      1523	am.c	FUNCTION_44	CALL_2
0x40040a1	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1524	am.c	FUNCTION_44	CALL_3
0x40040a5	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1524	am.c	FUNCTION_44	CALL_3
0x40040a9	        0x488d4a08	                      lea rcx, [rdx + 8]	      1524	am.c	FUNCTION_44	CALL_3
0x40040ad	          0x4889c2	                            mov rdx, rax	      1524	am.c	FUNCTION_44	CALL_3
0x40040b0	      0xbe00000000	                              mov esi, 0	      1524	am.c	FUNCTION_44	CALL_3
0x40040b5	          0x4889cf	                            mov rdi, rcx	      1524	am.c	FUNCTION_44	CALL_3
0x40040b8	      0xb800000000	                              mov eax, 0	      1524	am.c	FUNCTION_44	CALL_3
0x40040bd	      0xe800000000	                          call 0x40040c2	      1524	am.c	FUNCTION_44	CALL_3
0x40040c2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1525	am.c	FUNCTION_44	CALL_5
0x40040c6	      0xbe00000000	                              mov esi, 0	      1525	am.c	FUNCTION_44	CALL_5
0x40040cb	          0x4889c7	                            mov rdi, rax	      1525	am.c	FUNCTION_44	CALL_5
0x40040ce	      0xe8a4c5ffff	                        call sym.am_path	      1525	am.c	FUNCTION_44	CALL_5
0x40040d3	          0x4889c2	                            mov rdx, rax	      1525	am.c	FUNCTION_44	CALL_5
0x40040d6	        0x488d4590	                   lea rax, [rbp - 0x70]	      1525	am.c	FUNCTION_44	CALL_5
0x40040da	        0x4883c008	                              add rax, 8	      1525	am.c	FUNCTION_44	CALL_5
0x40040de	          0x4889d6	                            mov rsi, rdx	      1525	am.c	FUNCTION_44	CALL_5
0x40040e1	          0x4889c7	                            mov rdi, rax	      1525	am.c	FUNCTION_44	CALL_5
0x40040e4	      0xe800000000	                          call 0x40040e9	      1525	am.c	FUNCTION_44	CALL_5
0x40040e9	        0x488d4590	                   lea rax, [rbp - 0x70]	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x40040ed	          0x4889c7	                            mov rdi, rax	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x40040f0	      0xe800000000	                          call 0x40040f5	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x40040f5	            0x85c0	                           test eax, eax	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x40040f7	            0x7407	                            je 0x4004100	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x40040f9	      0xb8ffffffff	                     mov eax, 0xffffffff	      1528	am.c	FUNCTION_44	IF_1
0x40040fe	            0xeb05	                           jmp 0x4004105	      1528	am.c	FUNCTION_44	IF_1
0x4004100	      0xb800000000	                              mov eax, 0	      1530	am.c	FUNCTION_44
0x4004105	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1531	am.c	FUNCTION_44
0x4004109	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1531	am.c	FUNCTION_44
0x4004112	            0x7405	                            je 0x4004119	      1531	am.c	FUNCTION_44
0x4004114	      0xe800000000	                          call 0x4004119	      1531	am.c	FUNCTION_44
0x4004119	              0xc9	                                   leave	      1531	am.c	FUNCTION_44
0x400411a	              0xc3	                                     ret	      1531	am.c	FUNCTION_44
split_mail_stgit_series	functions,0:IF,3:FOR,0:SWITCH,0:DO,0:WHILE,1:ELSE,0:CALL,11	110
0x400220a	              0x55	                                push rbp	       846	am.c	FUNCTION_28
0x400220b	          0x4889e5	                            mov rbp, rsp	       846	am.c	FUNCTION_28
0x400220e	              0x53	                                push rbx	       846	am.c	FUNCTION_28
0x400220f	        0x4883ec78	                           sub rsp, 0x78	       846	am.c	FUNCTION_28
0x4002213	        0x48897d98	             mov qword [rbp - 0x68], rdi	       846	am.c	FUNCTION_28
0x4002217	        0x48897590	             mov qword [rbp - 0x70], rsi	       846	am.c	FUNCTION_28
0x400221b	          0x89558c	             mov dword [rbp - 0x74], edx	       846	am.c	FUNCTION_28
0x400221e	    0x64488b042528	                mov rax, qword fs:[0x28]	       846	am.c	FUNCTION_28
0x4002227	        0x488945e8	             mov qword [rbp - 0x18], rax	       846	am.c	FUNCTION_28
0x400222b	            0x31c0	                            xor eax, eax	       846	am.c	FUNCTION_28
0x400222d	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       850	am.c	FUNCTION_28
0x4002235	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       850	am.c	FUNCTION_28
0x400223c	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       850	am.c	FUNCTION_28
0x4002243	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       851	am.c	FUNCTION_28
0x400224b	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       851	am.c	FUNCTION_28
0x4002253	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       851	am.c	FUNCTION_28
0x400225b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       854	am.c	FUNCTION_28	IF_1
0x400225f	          0x488b00	                    mov rax, qword [rax]	       854	am.c	FUNCTION_28	IF_1
0x4002262	          0x4885c0	                           test rax, rax	       854	am.c	FUNCTION_28	IF_1
0x4002265	            0x7410	                            je 0x4002277	       854	am.c	FUNCTION_28	IF_1
0x4002267	        0x488b4590	             mov rax, qword [rbp - 0x70]	       854	am.c	FUNCTION_28	IF_1
0x400226b	        0x4883c008	                              add rax, 8	       854	am.c	FUNCTION_28	IF_1
0x400226f	          0x488b00	                    mov rax, qword [rax]	       854	am.c	FUNCTION_28	IF_1
0x4002272	          0x4885c0	                           test rax, rax	       854	am.c	FUNCTION_28	IF_1
0x4002275	            0x7421	                            je 0x4002298	       854	am.c	FUNCTION_28	IF_1
0x4002277	      0xbf00000000	                              mov edi, 0	       855	am.c	FUNCTION_28	CALL_1
0x400227c	      0xe8b5dfffff	                               call sym.	       855	am.c	FUNCTION_28	CALL_1
0x4002281	          0x4889c7	                            mov rdi, rax	       855	am.c	FUNCTION_28	CALL_1
0x4002284	      0xb800000000	                              mov eax, 0	       855	am.c	FUNCTION_28	CALL_1
0x4002289	      0xe800000000	                          call 0x400228e	       855	am.c	FUNCTION_28	CALL_1
0x400228e	      0xe8cfddffff	                    call sym.const_error	       855	am.c	FUNCTION_28	CALL_1
0x4002293	      0xe90b010000	                           jmp 0x40023a3	       855	am.c	FUNCTION_28	CALL_1
0x4002298	        0x488b4590	             mov rax, qword [rbp - 0x70]	       857	am.c	FUNCTION_28	CALL_2
0x400229c	          0x488b00	                    mov rax, qword [rax]	       857	am.c	FUNCTION_28	CALL_2
0x400229f	          0x4889c7	                            mov rdi, rax	       857	am.c	FUNCTION_28	CALL_2
0x40022a2	      0xe800000000	                          call 0x40022a7	       857	am.c	FUNCTION_28	CALL_2
0x40022a7	        0x488945a8	             mov qword [rbp - 0x58], rax	       857	am.c	FUNCTION_28	CALL_2
0x40022ab	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       858	am.c	FUNCTION_28
0x40022af	          0x4889c7	                            mov rdi, rax	       858	am.c	FUNCTION_28
0x40022b2	      0xe800000000	                          call 0x40022b7	       858	am.c	FUNCTION_28
0x40022b7	        0x488945b0	             mov qword [rbp - 0x50], rax	       858	am.c	FUNCTION_28
0x40022bb	        0x488b4590	             mov rax, qword [rbp - 0x70]	       860	am.c	FUNCTION_28
0x40022bf	          0x488b00	                    mov rax, qword [rax]	       860	am.c	FUNCTION_28
0x40022c2	      0xbe00000000	                              mov esi, 0	       860	am.c	FUNCTION_28
0x40022c7	          0x4889c7	                            mov rdi, rax	       860	am.c	FUNCTION_28
0x40022ca	      0xe800000000	                          call 0x40022cf	       860	am.c	FUNCTION_28
0x40022cf	        0x488945b8	             mov qword [rbp - 0x48], rax	       860	am.c	FUNCTION_28
0x40022d3	      0x48837db800	               cmp qword [rbp - 0x48], 0	       861	am.c	FUNCTION_28	IF_2
0x40022d8	            0x7564	                           jne 0x400233e	       861	am.c	FUNCTION_28	IF_2
0x40022da	        0x488b4590	             mov rax, qword [rbp - 0x70]	       862	am.c	FUNCTION_28	CALL_3
0x40022de	          0x488b18	                    mov rbx, qword [rax]	       862	am.c	FUNCTION_28	CALL_3
0x40022e1	      0xbf00000000	                              mov edi, 0	       862	am.c	FUNCTION_28	CALL_3
0x40022e6	      0xe84bdfffff	                               call sym.	       862	am.c	FUNCTION_28	CALL_3
0x40022eb	          0x4889de	                            mov rsi, rbx	       862	am.c	FUNCTION_28	CALL_3
0x40022ee	          0x4889c7	                            mov rdi, rax	       862	am.c	FUNCTION_28	CALL_3
0x40022f1	      0xb800000000	                              mov eax, 0	       862	am.c	FUNCTION_28	CALL_3
0x40022f6	      0xe800000000	                          call 0x40022fb	       862	am.c	FUNCTION_28	CALL_3
0x40022fb	      0xe862ddffff	                    call sym.const_error	       862	am.c	FUNCTION_28	CALL_3
0x4002300	      0xe99e000000	                           jmp 0x40023a3	       862	am.c	FUNCTION_28	CALL_3
0x4002305	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       865	am.c	FUNCTION_28	WHILE_1	IF_3
0x4002309	           0xfb600	                   movzx eax, byte [rax]	       865	am.c	FUNCTION_28	WHILE_1	IF_3
0x400230c	            0x3c23	                            cmp al, 0x23	       865	am.c	FUNCTION_28	WHILE_1	IF_3
0x400230e	            0x7502	                           jne 0x4002312	       865	am.c	FUNCTION_28	WHILE_1	IF_3
0x4002310	            0xeb2c	                           jmp 0x400233e	       866	am.c	FUNCTION_28	WHILE_1	IF_3
0x4002312	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       868	am.c	FUNCTION_28	WHILE_1	CALL_6
0x4002316	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       868	am.c	FUNCTION_28	WHILE_1	CALL_6
0x400231a	          0x4889c6	                            mov rsi, rax	       868	am.c	FUNCTION_28	WHILE_1	CALL_6
0x400231d	      0xbf00000000	                              mov edi, 0	       868	am.c	FUNCTION_28	WHILE_1	CALL_6
0x4002322	      0xb800000000	                              mov eax, 0	       868	am.c	FUNCTION_28	WHILE_1	CALL_6
0x4002327	      0xe800000000	                          call 0x400232c	       868	am.c	FUNCTION_28	WHILE_1	CALL_6
0x400232c	          0x4889c2	                            mov rdx, rax	       868	am.c	FUNCTION_28	WHILE_1	CALL_6
0x400232f	        0x488d45c0	                   lea rax, [rbp - 0x40]	       868	am.c	FUNCTION_28	WHILE_1	CALL_6
0x4002333	          0x4889d6	                            mov rsi, rdx	       868	am.c	FUNCTION_28	WHILE_1	CALL_6
0x4002336	          0x4889c7	                            mov rdi, rax	       868	am.c	FUNCTION_28	WHILE_1	CALL_6
0x4002339	      0xe800000000	                          call 0x400233e	       868	am.c	FUNCTION_28	WHILE_1	CALL_6
0x400233e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       864	am.c	FUNCTION_28	WHILE_1	CALL_4
0x4002342	        0x488d45d0	                   lea rax, [rbp - 0x30]	       864	am.c	FUNCTION_28	WHILE_1	CALL_4
0x4002346	          0x4889d6	                            mov rsi, rdx	       864	am.c	FUNCTION_28	WHILE_1	CALL_4
0x4002349	          0x4889c7	                            mov rdi, rax	       864	am.c	FUNCTION_28	WHILE_1	CALL_4
0x400234c	      0xe800000000	                          call 0x4002351	       864	am.c	FUNCTION_28	WHILE_1	CALL_4
0x4002351	            0x85c0	                           test eax, eax	       864	am.c	FUNCTION_28	WHILE_1	CALL_4
0x4002353	            0x74b0	                            je 0x4002305	       864	am.c	FUNCTION_28	WHILE_1	CALL_4
0x4002355	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       871	am.c	FUNCTION_28	CALL_7
0x4002359	          0x4889c7	                            mov rdi, rax	       871	am.c	FUNCTION_28	CALL_7
0x400235c	      0xe800000000	                          call 0x4002361	       871	am.c	FUNCTION_28	CALL_7
0x4002361	        0x488d45d0	                   lea rax, [rbp - 0x30]	       872	am.c	FUNCTION_28	CALL_8
0x4002365	          0x4889c7	                            mov rdi, rax	       872	am.c	FUNCTION_28	CALL_8
0x4002368	      0xe800000000	                          call 0x400236d	       872	am.c	FUNCTION_28	CALL_8
0x400236d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       873	am.c	FUNCTION_28	CALL_9
0x4002371	          0x4889c7	                            mov rdi, rax	       873	am.c	FUNCTION_28	CALL_9
0x4002374	      0xe800000000	                          call 0x4002379	       873	am.c	FUNCTION_28	CALL_9
0x4002379	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       875	am.c	FUNCTION_28	CALL_10
0x400237d	          0x8b4d8c	             mov ecx, dword [rbp - 0x74]	       875	am.c	FUNCTION_28	CALL_10
0x4002380	        0x488b4598	             mov rax, qword [rbp - 0x68]	       875	am.c	FUNCTION_28	CALL_10
0x4002384	          0x4889c6	                            mov rsi, rax	       875	am.c	FUNCTION_28	CALL_10
0x4002387	      0xbf00000000	                              mov edi, 0	       875	am.c	FUNCTION_28	CALL_10
0x400238c	      0xe8edfaffff	                call sym.split_mail_conv	       875	am.c	FUNCTION_28	CALL_10
0x4002391	          0x8945a4	             mov dword [rbp - 0x5c], eax	       875	am.c	FUNCTION_28	CALL_10
0x4002394	        0x488d45c0	                   lea rax, [rbp - 0x40]	       877	am.c	FUNCTION_28	CALL_11
0x4002398	          0x4889c7	                            mov rdi, rax	       877	am.c	FUNCTION_28	CALL_11
0x400239b	      0xe800000000	                          call 0x40023a0	       877	am.c	FUNCTION_28	CALL_11
0x40023a0	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       878	am.c	FUNCTION_28
0x40023a3	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       879	am.c	FUNCTION_28
0x40023a7	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       879	am.c	FUNCTION_28
0x40023b0	            0x7405	                            je 0x40023b7	       879	am.c	FUNCTION_28
0x40023b2	      0xe800000000	                          call 0x40023b7	       879	am.c	FUNCTION_28
0x40023b7	        0x4883c478	                           add rsp, 0x78	       879	am.c	FUNCTION_28
0x40023bb	              0x5b	                                 pop rbx	       879	am.c	FUNCTION_28
0x40023bc	              0x5d	                                 pop rbp	       879	am.c	FUNCTION_28
0x40023bd	              0xc3	                                     ret	       879	am.c	FUNCTION_28
clean_index	functions,0:IF,7:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,14	111
0x4005586	              0x55	                                push rbp	      1990	am.c	FUNCTION_53
0x4005587	          0x4889e5	                            mov rbp, rsp	      1990	am.c	FUNCTION_53
0x400558a	              0x53	                                push rbx	      1990	am.c	FUNCTION_53
0x400558b	        0x4883ec58	                           sub rsp, 0x58	      1990	am.c	FUNCTION_53
0x400558f	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1990	am.c	FUNCTION_53
0x4005593	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1990	am.c	FUNCTION_53
0x4005597	    0x64488b042528	                mov rax, qword fs:[0x28]	      1990	am.c	FUNCTION_53
0x40055a0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1990	am.c	FUNCTION_53
0x40055a4	            0x31c0	                            xor eax, eax	      1990	am.c	FUNCTION_53
0x40055a6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1994	am.c	FUNCTION_53	CALL_1
0x40055aa	          0x4889c7	                            mov rdi, rax	      1994	am.c	FUNCTION_53	CALL_1
0x40055ad	      0xe800000000	                          call 0x40055b2	      1994	am.c	FUNCTION_53	CALL_1
0x40055b2	        0x488945b8	             mov qword [rbp - 0x48], rax	      1994	am.c	FUNCTION_53	CALL_1
0x40055b6	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1995	am.c	FUNCTION_53	IF_1
0x40055bb	            0x7533	                           jne 0x40055f0	      1995	am.c	FUNCTION_53	IF_1
0x40055bd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1996	am.c	FUNCTION_53	CALL_3
0x40055c1	          0x4889c7	                            mov rdi, rax	      1996	am.c	FUNCTION_53	CALL_3
0x40055c4	      0xe800000000	                          call 0x40055c9	      1996	am.c	FUNCTION_53	CALL_3
0x40055c9	          0x4889c3	                            mov rbx, rax	      1996	am.c	FUNCTION_53	CALL_3
0x40055cc	      0xbf00000000	                              mov edi, 0	      1996	am.c	FUNCTION_53	CALL_3
0x40055d1	      0xe860acffff	                               call sym.	      1996	am.c	FUNCTION_53	CALL_3
0x40055d6	          0x4889de	                            mov rsi, rbx	      1996	am.c	FUNCTION_53	CALL_3
0x40055d9	          0x4889c7	                            mov rdi, rax	      1996	am.c	FUNCTION_53	CALL_3
0x40055dc	      0xb800000000	                              mov eax, 0	      1996	am.c	FUNCTION_53	CALL_3
0x40055e1	      0xe800000000	                          call 0x40055e6	      1996	am.c	FUNCTION_53	CALL_3
0x40055e6	      0xe877aaffff	                    call sym.const_error	      1996	am.c	FUNCTION_53	CALL_3
0x40055eb	      0xe929010000	                           jmp 0x4005719	      1996	am.c	FUNCTION_53	CALL_3
0x40055f0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1998	am.c	FUNCTION_53	CALL_4
0x40055f4	          0x4889c7	                            mov rdi, rax	      1998	am.c	FUNCTION_53	CALL_4
0x40055f7	      0xe800000000	                          call 0x40055fc	      1998	am.c	FUNCTION_53	CALL_4
0x40055fc	        0x488945c0	             mov qword [rbp - 0x40], rax	      1998	am.c	FUNCTION_53	CALL_4
0x4005600	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1999	am.c	FUNCTION_53	IF_2
0x4005605	            0x7533	                           jne 0x400563a	      1999	am.c	FUNCTION_53	IF_2
0x4005607	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2000	am.c	FUNCTION_53	CALL_6
0x400560b	          0x4889c7	                            mov rdi, rax	      2000	am.c	FUNCTION_53	CALL_6
0x400560e	      0xe800000000	                          call 0x4005613	      2000	am.c	FUNCTION_53	CALL_6
0x4005613	          0x4889c3	                            mov rbx, rax	      2000	am.c	FUNCTION_53	CALL_6
0x4005616	      0xbf00000000	                              mov edi, 0	      2000	am.c	FUNCTION_53	CALL_6
0x400561b	      0xe816acffff	                               call sym.	      2000	am.c	FUNCTION_53	CALL_6
0x4005620	          0x4889de	                            mov rsi, rbx	      2000	am.c	FUNCTION_53	CALL_6
0x4005623	          0x4889c7	                            mov rdi, rax	      2000	am.c	FUNCTION_53	CALL_6
0x4005626	      0xb800000000	                              mov eax, 0	      2000	am.c	FUNCTION_53	CALL_6
0x400562b	      0xe800000000	                          call 0x4005630	      2000	am.c	FUNCTION_53	CALL_6
0x4005630	      0xe82daaffff	                    call sym.const_error	      2000	am.c	FUNCTION_53	CALL_6
0x4005635	      0xe9df000000	                           jmp 0x4005719	      2000	am.c	FUNCTION_53	CALL_6
0x400563a	      0xbf00000000	                              mov edi, 0	      2002	am.c	FUNCTION_53
0x400563f	      0xe800000000	                          call 0x4005644	      2002	am.c	FUNCTION_53
0x4005644	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x4005648	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x400564c	      0xba01000000	                              mov edx, 1	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x4005651	          0x4889ce	                            mov rsi, rcx	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x4005654	          0x4889c7	                            mov rdi, rax	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x4005657	      0xe8fbfbffff	                call sym.fast_forward_to	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x400565c	            0x85c0	                           test eax, eax	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x400565e	            0x740a	                            je 0x400566a	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x4005660	      0xb8ffffffff	                     mov eax, 0xffffffff	      2005	am.c	FUNCTION_53	IF_3
0x4005665	      0xe9af000000	                           jmp 0x4005719	      2005	am.c	FUNCTION_53	IF_3
0x400566a	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x400566e	      0xba00000000	                              mov edx, 0	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4005673	      0xbe00000000	                              mov esi, 0	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4005678	          0x4889c7	                            mov rdi, rax	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x400567b	      0xe800000000	                          call 0x4005680	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4005680	            0x85c0	                           test eax, eax	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4005682	            0x740a	                            je 0x400568e	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4005684	      0xb8ffffffff	                     mov eax, 0xffffffff	      2008	am.c	FUNCTION_53	IF_4
0x4005689	      0xe98b000000	                           jmp 0x4005719	      2008	am.c	FUNCTION_53	IF_4
0x400568e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2010	am.c	FUNCTION_53	CALL_9
0x4005692	          0x4889c7	                            mov rdi, rax	      2010	am.c	FUNCTION_53	CALL_9
0x4005695	      0xe800000000	                          call 0x400569a	      2010	am.c	FUNCTION_53	CALL_9
0x400569a	        0x488945c8	             mov qword [rbp - 0x38], rax	      2010	am.c	FUNCTION_53	CALL_9
0x400569e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2011	am.c	FUNCTION_53	IF_5
0x40056a3	            0x7530	                           jne 0x40056d5	      2011	am.c	FUNCTION_53	IF_5
0x40056a5	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2012	am.c	FUNCTION_53	CALL_11
0x40056a9	          0x4889c7	                            mov rdi, rax	      2012	am.c	FUNCTION_53	CALL_11
0x40056ac	      0xe800000000	                          call 0x40056b1	      2012	am.c	FUNCTION_53	CALL_11
0x40056b1	          0x4889c3	                            mov rbx, rax	      2012	am.c	FUNCTION_53	CALL_11
0x40056b4	      0xbf00000000	                              mov edi, 0	      2012	am.c	FUNCTION_53	CALL_11
0x40056b9	      0xe878abffff	                               call sym.	      2012	am.c	FUNCTION_53	CALL_11
0x40056be	          0x4889de	                            mov rsi, rbx	      2012	am.c	FUNCTION_53	CALL_11
0x40056c1	          0x4889c7	                            mov rdi, rax	      2012	am.c	FUNCTION_53	CALL_11
0x40056c4	      0xb800000000	                              mov eax, 0	      2012	am.c	FUNCTION_53	CALL_11
0x40056c9	      0xe800000000	                          call 0x40056ce	      2012	am.c	FUNCTION_53	CALL_11
0x40056ce	      0xe88fa9ffff	                    call sym.const_error	      2012	am.c	FUNCTION_53	CALL_11
0x40056d3	            0xeb44	                           jmp 0x4005719	      2012	am.c	FUNCTION_53	CALL_11
0x40056d5	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x40056d9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x40056dd	      0xba00000000	                              mov edx, 0	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x40056e2	          0x4889ce	                            mov rsi, rcx	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x40056e5	          0x4889c7	                            mov rdi, rax	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x40056e8	      0xe86afbffff	                call sym.fast_forward_to	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x40056ed	            0x85c0	                           test eax, eax	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x40056ef	            0x7407	                            je 0x40056f8	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x40056f1	      0xb8ffffffff	                     mov eax, 0xffffffff	      2015	am.c	FUNCTION_53	IF_6
0x40056f6	            0xeb21	                           jmp 0x4005719	      2015	am.c	FUNCTION_53	IF_6
0x40056f8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x40056fc	          0x4889c7	                            mov rdi, rax	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x40056ff	      0xe82bfdffff	                     call sym.merge_tree	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x4005704	            0x85c0	                           test eax, eax	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x4005706	            0x7407	                            je 0x400570f	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x4005708	      0xb8ffffffff	                     mov eax, 0xffffffff	      2018	am.c	FUNCTION_53	IF_7
0x400570d	            0xeb0a	                           jmp 0x4005719	      2018	am.c	FUNCTION_53	IF_7
0x400570f	      0xe800000000	                          call 0x4005714	      2020	am.c	FUNCTION_53	CALL_14
0x4005714	      0xb800000000	                              mov eax, 0	      2022	am.c	FUNCTION_53
0x4005719	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2023	am.c	FUNCTION_53
0x400571d	    0x644833142528	                xor rdx, qword fs:[0x28]	      2023	am.c	FUNCTION_53
0x4005726	            0x7405	                            je 0x400572d	      2023	am.c	FUNCTION_53
0x4005728	      0xe800000000	                          call 0x400572d	      2023	am.c	FUNCTION_53
0x400572d	        0x4883c458	                           add rsp, 0x58	      2023	am.c	FUNCTION_53
0x4005731	              0x5b	                                 pop rbx	      2023	am.c	FUNCTION_53
0x4005732	              0x5d	                                 pop rbp	      2023	am.c	FUNCTION_53
0x4005733	              0xc3	                                     ret	      2023	am.c	FUNCTION_53
strbuf_addstr	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,2	17
0x4000201	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_98
0x4000202	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_98
0x4000205	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_98
0x4000209	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_98
0x400020d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_98
0x4000211	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_98	CALL_2
0x4000215	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_98	CALL_2
0x4000218	      0xe800000000	                          call 0x400021d	       279	strbuf.h	FUNCTION_98	CALL_2
0x400021d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_98	CALL_2
0x4000220	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_98	CALL_2
0x4000224	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_98	CALL_2
0x4000228	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_98	CALL_2
0x400022b	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_98	CALL_2
0x400022e	      0xe800000000	                          call 0x4000233	       279	strbuf.h	FUNCTION_98	CALL_2
0x4000233	              0x90	                                     nop	       280	strbuf.h	FUNCTION_98
0x4000234	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_98
0x4000235	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_98
write_state_bool	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,1	19
0x400072f	              0x55	                                push rbp	       203	am.c	FUNCTION_9
0x4000730	          0x4889e5	                            mov rbp, rsp	       203	am.c	FUNCTION_9
0x4000733	        0x4883ec20	                           sub rsp, 0x20	       203	am.c	FUNCTION_9
0x4000737	        0x48897df8	                mov qword [rbp - 8], rdi	       203	am.c	FUNCTION_9
0x400073b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       203	am.c	FUNCTION_9
0x400073f	          0x8955ec	             mov dword [rbp - 0x14], edx	       203	am.c	FUNCTION_9
0x4000742	        0x837dec00	               cmp dword [rbp - 0x14], 0	       204	am.c	FUNCTION_9	CALL_1
0x4000746	            0x7407	                            je 0x400074f	       204	am.c	FUNCTION_9	CALL_1
0x4000748	      0xba00000000	                              mov edx, 0	       204	am.c	FUNCTION_9	CALL_1
0x400074d	            0xeb05	                           jmp 0x4000754	       204	am.c	FUNCTION_9	CALL_1
0x400074f	      0xba00000000	                              mov edx, 0	       204	am.c	FUNCTION_9	CALL_1
0x4000754	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       204	am.c	FUNCTION_9	CALL_1
0x4000758	        0x488b45f8	                mov rax, qword [rbp - 8]	       204	am.c	FUNCTION_9	CALL_1
0x400075c	          0x4889ce	                            mov rsi, rcx	       204	am.c	FUNCTION_9	CALL_1
0x400075f	          0x4889c7	                            mov rdi, rax	       204	am.c	FUNCTION_9	CALL_1
0x4000762	      0xe83fffffff	               call sym.write_state_text	       204	am.c	FUNCTION_9	CALL_1
0x4000767	              0x90	                                     nop	       205	am.c	FUNCTION_9
0x4000768	              0xc9	                                   leave	       205	am.c	FUNCTION_9
0x4000769	              0xc3	                                     ret	       205	am.c	FUNCTION_9
am_in_progress	functions,0:IF,3:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,5	62
0x400085e	              0x55	                                push rbp	       227	am.c	FUNCTION_11
0x400085f	          0x4889e5	                            mov rbp, rsp	       227	am.c	FUNCTION_11
0x4000862	    0x4881ecb00000	                           sub rsp, 0xb0	       227	am.c	FUNCTION_11
0x4000869	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	       227	am.c	FUNCTION_11
0x4000870	    0x64488b042528	                mov rax, qword fs:[0x28]	       227	am.c	FUNCTION_11
0x4000879	        0x488945f8	                mov qword [rbp - 8], rax	       227	am.c	FUNCTION_11
0x400087d	            0x31c0	                            xor eax, eax	       227	am.c	FUNCTION_11
0x400087f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       230	am.c	FUNCTION_11	IF_1	CALL_1
0x4000886	          0x488b00	                    mov rax, qword [rax]	       230	am.c	FUNCTION_11	IF_1	CALL_1
0x4000889	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       230	am.c	FUNCTION_11	IF_1	CALL_1
0x4000890	          0x4889d6	                            mov rsi, rdx	       230	am.c	FUNCTION_11	IF_1	CALL_1
0x4000893	          0x4889c7	                            mov rdi, rax	       230	am.c	FUNCTION_11	IF_1	CALL_1
0x4000896	      0xe800000000	                          call 0x400089b	       230	am.c	FUNCTION_11	IF_1	CALL_1
0x400089b	            0x85c0	                           test eax, eax	       230	am.c	FUNCTION_11	IF_1	CALL_1
0x400089d	            0x7812	                            js 0x40008b1	       230	am.c	FUNCTION_11	IF_1	CALL_1
0x400089f	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       230	am.c	FUNCTION_11	IF_1	CALL_1
0x40008a5	      0x2500f00000	                         and eax, 0xf000	       230	am.c	FUNCTION_11	IF_1	CALL_1
0x40008aa	      0x3d00400000	                         cmp eax, 0x4000	       230	am.c	FUNCTION_11	IF_1	CALL_1
0x40008af	            0x740a	                            je 0x40008bb	       230	am.c	FUNCTION_11	IF_1	CALL_1
0x40008b1	      0xb800000000	                              mov eax, 0	       231	am.c	FUNCTION_11	IF_1
0x40008b6	      0xe991000000	                           jmp 0x400094c	       231	am.c	FUNCTION_11	IF_1
0x40008bb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       232	am.c	FUNCTION_11	IF_2	CALL_3
0x40008c2	      0xbe00000000	                              mov esi, 0	       232	am.c	FUNCTION_11	IF_2	CALL_3
0x40008c7	          0x4889c7	                            mov rdi, rax	       232	am.c	FUNCTION_11	IF_2	CALL_3
0x40008ca	      0xe8a8fdffff	                        call sym.am_path	       232	am.c	FUNCTION_11	IF_2	CALL_3
0x40008cf	          0x4889c2	                            mov rdx, rax	       232	am.c	FUNCTION_11	IF_2	CALL_3
0x40008d2	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       232	am.c	FUNCTION_11	IF_2	CALL_3
0x40008d9	          0x4889c6	                            mov rsi, rax	       232	am.c	FUNCTION_11	IF_2	CALL_3
0x40008dc	          0x4889d7	                            mov rdi, rdx	       232	am.c	FUNCTION_11	IF_2	CALL_3
0x40008df	      0xe800000000	                          call 0x40008e4	       232	am.c	FUNCTION_11	IF_2	CALL_3
0x40008e4	            0x85c0	                           test eax, eax	       232	am.c	FUNCTION_11	IF_2	CALL_3
0x40008e6	            0x7512	                           jne 0x40008fa	       232	am.c	FUNCTION_11	IF_2	CALL_3
0x40008e8	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       232	am.c	FUNCTION_11	IF_2	CALL_3
0x40008ee	      0x2500f00000	                         and eax, 0xf000	       232	am.c	FUNCTION_11	IF_2	CALL_3
0x40008f3	      0x3d00800000	                         cmp eax, 0x8000	       232	am.c	FUNCTION_11	IF_2	CALL_3
0x40008f8	            0x7407	                            je 0x4000901	       232	am.c	FUNCTION_11	IF_2	CALL_3
0x40008fa	      0xb800000000	                              mov eax, 0	       233	am.c	FUNCTION_11	IF_2
0x40008ff	            0xeb4b	                           jmp 0x400094c	       233	am.c	FUNCTION_11	IF_2
0x4000901	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       234	am.c	FUNCTION_11	IF_3	CALL_5
0x4000908	      0xbe00000000	                              mov esi, 0	       234	am.c	FUNCTION_11	IF_3	CALL_5
0x400090d	          0x4889c7	                            mov rdi, rax	       234	am.c	FUNCTION_11	IF_3	CALL_5
0x4000910	      0xe862fdffff	                        call sym.am_path	       234	am.c	FUNCTION_11	IF_3	CALL_5
0x4000915	          0x4889c2	                            mov rdx, rax	       234	am.c	FUNCTION_11	IF_3	CALL_5
0x4000918	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       234	am.c	FUNCTION_11	IF_3	CALL_5
0x400091f	          0x4889c6	                            mov rsi, rax	       234	am.c	FUNCTION_11	IF_3	CALL_5
0x4000922	          0x4889d7	                            mov rdi, rdx	       234	am.c	FUNCTION_11	IF_3	CALL_5
0x4000925	      0xe800000000	                          call 0x400092a	       234	am.c	FUNCTION_11	IF_3	CALL_5
0x400092a	            0x85c0	                           test eax, eax	       234	am.c	FUNCTION_11	IF_3	CALL_5
0x400092c	            0x7512	                           jne 0x4000940	       234	am.c	FUNCTION_11	IF_3	CALL_5
0x400092e	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       234	am.c	FUNCTION_11	IF_3	CALL_5
0x4000934	      0x2500f00000	                         and eax, 0xf000	       234	am.c	FUNCTION_11	IF_3	CALL_5
0x4000939	      0x3d00800000	                         cmp eax, 0x8000	       234	am.c	FUNCTION_11	IF_3	CALL_5
0x400093e	            0x7407	                            je 0x4000947	       234	am.c	FUNCTION_11	IF_3	CALL_5
0x4000940	      0xb800000000	                              mov eax, 0	       235	am.c	FUNCTION_11	IF_3
0x4000945	            0xeb05	                           jmp 0x400094c	       235	am.c	FUNCTION_11	IF_3
0x4000947	      0xb801000000	                              mov eax, 1	       236	am.c	FUNCTION_11
0x400094c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       237	am.c	FUNCTION_11
0x4000950	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       237	am.c	FUNCTION_11
0x4000959	            0x7405	                            je 0x4000960	       237	am.c	FUNCTION_11
0x400095b	      0xe800000000	                          call 0x4000960	       237	am.c	FUNCTION_11
0x4000960	              0xc9	                                   leave	       237	am.c	FUNCTION_11
0x4000961	              0xc3	                                     ret	       237	am.c	FUNCTION_11
parse_mail	functions,0:IF,10:FOR,0:SWITCH,2:DO,0:WHILE,1:ELSE,4:CALL,49	322
0x4002ff8	              0x55	                                push rbp	      1192	am.c	FUNCTION_37
0x4002ff9	          0x4889e5	                            mov rbp, rsp	      1192	am.c	FUNCTION_37
0x4002ffc	              0x53	                                push rbx	      1192	am.c	FUNCTION_37
0x4002ffd	    0x4881ecf80100	                          sub rsp, 0x1f8	      1192	am.c	FUNCTION_37
0x4003004	    0x4889bd08feff	            mov qword [rbp - 0x1f8], rdi	      1192	am.c	FUNCTION_37
0x400300b	    0x4889b500feff	            mov qword [rbp - 0x200], rsi	      1192	am.c	FUNCTION_37
0x4003012	    0x64488b042528	                mov rax, qword fs:[0x28]	      1192	am.c	FUNCTION_37
0x400301b	        0x488945e8	             mov qword [rbp - 0x18], rax	      1192	am.c	FUNCTION_37
0x400301f	            0x31c0	                            xor eax, eax	      1192	am.c	FUNCTION_37
0x4003021	    0x48c78530feff	              mov qword [rbp - 0x1d0], 0	      1194	am.c	FUNCTION_37
0x400302c	    0x48c78538feff	              mov qword [rbp - 0x1c8], 0	      1194	am.c	FUNCTION_37
0x4003037	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	      1194	am.c	FUNCTION_37
0x4003042	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	      1195	am.c	FUNCTION_37
0x400304d	    0x48c78558feff	              mov qword [rbp - 0x1a8], 0	      1195	am.c	FUNCTION_37
0x4003058	    0x48c78560feff	              mov qword [rbp - 0x1a0], 0	      1195	am.c	FUNCTION_37
0x4003063	    0x48c78570feff	              mov qword [rbp - 0x190], 0	      1196	am.c	FUNCTION_37
0x400306e	    0x48c78578feff	              mov qword [rbp - 0x188], 0	      1196	am.c	FUNCTION_37
0x4003079	    0x48c78580feff	              mov qword [rbp - 0x180], 0	      1196	am.c	FUNCTION_37
0x4003084	    0x48c78590feff	              mov qword [rbp - 0x170], 0	      1197	am.c	FUNCTION_37
0x400308f	    0x48c78598feff	              mov qword [rbp - 0x168], 0	      1197	am.c	FUNCTION_37
0x400309a	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	      1197	am.c	FUNCTION_37
0x40030a5	    0x48c785b0feff	              mov qword [rbp - 0x150], 0	      1198	am.c	FUNCTION_37
0x40030b0	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	      1198	am.c	FUNCTION_37
0x40030bb	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	      1198	am.c	FUNCTION_37
0x40030c6	    0xc7851cfeffff	              mov dword [rbp - 0x1e4], 0	      1199	am.c	FUNCTION_37
0x40030d0	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	      1202	am.c	FUNCTION_37	CALL_1
0x40030d7	          0x4889c7	                            mov rdi, rax	      1202	am.c	FUNCTION_37	CALL_1
0x40030da	      0xe800000000	                          call 0x40030df	      1202	am.c	FUNCTION_37	CALL_1
0x40030df	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1204	am.c	FUNCTION_37	IF_1
0x40030e6	          0x8b4060	            mov eax, dword [rax + 0x60] 	      1204	am.c	FUNCTION_37	IF_1
0x40030e9	            0x85c0	                           test eax, eax	      1204	am.c	FUNCTION_37	IF_1
0x40030eb	            0x740e	                            je 0x40030fb	      1204	am.c	FUNCTION_37	IF_1
0x40030ed	      0xe800000000	                          call 0x40030f2	      1205	am.c	FUNCTION_37	CALL_2
0x40030f2	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      1205	am.c	FUNCTION_37	CALL_2
0x40030f9	            0xeb0b	                           jmp 0x4003106	      1205	am.c	FUNCTION_37	CALL_2
0x40030fb	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	      1207	am.c	FUNCTION_37	ELSE_1
0x4003106	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x400310d	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4003110	          0x83f801	                              cmp eax, 1	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4003113	            0x740b	                            je 0x4003120	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4003115	          0x83f802	                              cmp eax, 2	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4003118	            0x7412	                            je 0x400312c	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x400311a	            0x85c0	                           test eax, eax	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x400311c	            0x7429	                            je 0x4003147	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x400311e	            0xeb18	                           jmp 0x4003138	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4003120	    0xc78518ffffff	               mov dword [rbp - 0xe8], 1	      1213	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x400312a	            0xeb1c	                           jmp 0x4003148	      1214	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x400312c	    0xc7851cffffff	               mov dword [rbp - 0xe4], 1	      1216	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4003136	            0xeb10	                           jmp 0x4003148	      1217	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4003138	      0xbf00000000	                              mov edi, 0	      1219	am.c	FUNCTION_37	ELSE_1	SWITCH_1	CALL_3
0x400313d	      0xb800000000	                              mov eax, 0	      1219	am.c	FUNCTION_37	ELSE_1	SWITCH_1	CALL_3
0x4003142	      0xe800000000	                          call 0x4003147	      1219	am.c	FUNCTION_37	ELSE_1	SWITCH_1	CALL_3
0x4003147	              0x90	                                     nop	      1211	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4003148	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1222	am.c	FUNCTION_37	IF_2
0x400314f	          0x8b4068	            mov eax, dword [rax + 0x68] 	      1222	am.c	FUNCTION_37	IF_2
0x4003152	            0x85c0	                           test eax, eax	      1222	am.c	FUNCTION_37	IF_2
0x4003154	            0x740a	                            je 0x4003160	      1222	am.c	FUNCTION_37	IF_2
0x4003156	    0xc78520ffffff	               mov dword [rbp - 0xe0], 1	      1223	am.c	FUNCTION_37	IF_2
0x4003160	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1225	am.c	FUNCTION_37	SWITCH_2
0x4003167	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      1225	am.c	FUNCTION_37	SWITCH_2
0x400316a	            0x85c0	                           test eax, eax	      1225	am.c	FUNCTION_37	SWITCH_2
0x400316c	            0x740c	                            je 0x400317a	      1225	am.c	FUNCTION_37	SWITCH_2
0x400316e	          0x83f801	                              cmp eax, 1	      1225	am.c	FUNCTION_37	SWITCH_2
0x4003171	            0x7413	                            je 0x4003186	      1225	am.c	FUNCTION_37	SWITCH_2
0x4003173	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1225	am.c	FUNCTION_37	SWITCH_2
0x4003176	            0x7429	                            je 0x40031a1	      1225	am.c	FUNCTION_37	SWITCH_2
0x4003178	            0xeb18	                           jmp 0x4003192	      1225	am.c	FUNCTION_37	SWITCH_2
0x400317a	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	      1229	am.c	FUNCTION_37	SWITCH_2
0x4003184	            0xeb1c	                           jmp 0x40031a2	      1230	am.c	FUNCTION_37	SWITCH_2
0x4003186	    0xc78524ffffff	               mov dword [rbp - 0xdc], 1	      1232	am.c	FUNCTION_37	SWITCH_2
0x4003190	            0xeb10	                           jmp 0x40031a2	      1233	am.c	FUNCTION_37	SWITCH_2
0x4003192	      0xbf00000000	                              mov edi, 0	      1235	am.c	FUNCTION_37	SWITCH_2	CALL_4
0x4003197	      0xb800000000	                              mov eax, 0	      1235	am.c	FUNCTION_37	SWITCH_2	CALL_4
0x400319c	      0xe800000000	                          call 0x40031a1	      1235	am.c	FUNCTION_37	SWITCH_2	CALL_4
0x40031a1	              0x90	                                     nop	      1227	am.c	FUNCTION_37	SWITCH_2
0x40031a2	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      1238	am.c	FUNCTION_37	CALL_5
0x40031a9	      0xbe00000000	                              mov esi, 0	      1238	am.c	FUNCTION_37	CALL_5
0x40031ae	          0x4889c7	                            mov rdi, rax	      1238	am.c	FUNCTION_37	CALL_5
0x40031b1	      0xe800000000	                          call 0x40031b6	      1238	am.c	FUNCTION_37	CALL_5
0x40031b6	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      1238	am.c	FUNCTION_37	CALL_5
0x40031bd	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1239	am.c	FUNCTION_37	CALL_7
0x40031c4	      0xbe00000000	                              mov esi, 0	      1239	am.c	FUNCTION_37	CALL_7
0x40031c9	          0x4889c7	                            mov rdi, rax	      1239	am.c	FUNCTION_37	CALL_7
0x40031cc	      0xe8a6d4ffff	                        call sym.am_path	      1239	am.c	FUNCTION_37	CALL_7
0x40031d1	      0xbe00000000	                              mov esi, 0	      1239	am.c	FUNCTION_37	CALL_7
0x40031d6	          0x4889c7	                            mov rdi, rax	      1239	am.c	FUNCTION_37	CALL_7
0x40031d9	      0xe800000000	                          call 0x40031de	      1239	am.c	FUNCTION_37	CALL_7
0x40031de	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      1239	am.c	FUNCTION_37	CALL_7
0x40031e5	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x40031ec	      0xbe00000000	                              mov esi, 0	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x40031f1	          0x4889c7	                            mov rdi, rax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x40031f4	      0xe87ed4ffff	                        call sym.am_path	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x40031f9	          0x4889c3	                            mov rbx, rax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x40031fc	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4003203	      0xbe00000000	                              mov esi, 0	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4003208	          0x4889c7	                            mov rdi, rax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x400320b	      0xe867d4ffff	                        call sym.am_path	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4003210	          0x4889c1	                            mov rcx, rax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4003213	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x400321a	          0x4889da	                            mov rdx, rbx	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x400321d	          0x4889ce	                            mov rsi, rcx	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4003220	          0x4889c7	                            mov rdi, rax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4003223	      0xe800000000	                          call 0x4003228	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4003228	            0x85c0	                           test eax, eax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x400322a	            0x740f	                            je 0x400323b	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x400322c	      0xbf00000000	                              mov edi, 0	      1241	am.c	FUNCTION_37	CALL_11
0x4003231	      0xb800000000	                              mov eax, 0	      1241	am.c	FUNCTION_37	CALL_11
0x4003236	      0xe800000000	                          call 0x400323b	      1241	am.c	FUNCTION_37	CALL_11
0x400323b	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1243	am.c	FUNCTION_37	CALL_12
0x4003242	          0x4889c7	                            mov rdi, rax	      1243	am.c	FUNCTION_37	CALL_12
0x4003245	      0xe800000000	                          call 0x400324a	      1243	am.c	FUNCTION_37	CALL_12
0x400324a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1244	am.c	FUNCTION_37	CALL_13
0x4003251	          0x4889c7	                            mov rdi, rax	      1244	am.c	FUNCTION_37	CALL_13
0x4003254	      0xe800000000	                          call 0x4003259	      1244	am.c	FUNCTION_37	CALL_13
0x4003259	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1247	am.c	FUNCTION_37	CALL_15
0x4003260	      0xbe00000000	                              mov esi, 0	      1247	am.c	FUNCTION_37	CALL_15
0x4003265	          0x4889c7	                            mov rdi, rax	      1247	am.c	FUNCTION_37	CALL_15
0x4003268	      0xe80ad4ffff	                        call sym.am_path	      1247	am.c	FUNCTION_37	CALL_15
0x400326d	      0xbe00000000	                              mov esi, 0	      1247	am.c	FUNCTION_37	CALL_15
0x4003272	          0x4889c7	                            mov rdi, rax	      1247	am.c	FUNCTION_37	CALL_15
0x4003275	      0xe800000000	                          call 0x400327a	      1247	am.c	FUNCTION_37	CALL_15
0x400327a	    0x48898528feff	            mov qword [rbp - 0x1d8], rax	      1247	am.c	FUNCTION_37	CALL_15
0x4003281	      0xe909010000	                           jmp 0x400338f	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x4003286	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x400328d	    0x488d9520feff	                  lea rdx, [rbp - 0x1e0]	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x4003294	      0xbe00000000	                              mov esi, 0	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x4003299	          0x4889c7	                            mov rdi, rax	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x400329c	      0xe8cccdffff	                    call sym.skip_prefix	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x40032a1	            0x85c0	                           test eax, eax	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x40032a3	            0x743e	                            je 0x40032e3	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x40032a5	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      1252	am.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x40032ac	          0x4885c0	                           test rax, rax	      1252	am.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x40032af	            0x7414	                            je 0x40032c5	      1252	am.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x40032b1	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1253	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_18
0x40032b8	      0xbe0a000000	                            mov esi, 0xa	      1253	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_18
0x40032bd	          0x4889c7	                            mov rdi, rax	      1253	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_18
0x40032c0	      0xe8ceceffff	                   call sym.strbuf_addch	      1253	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_18
0x40032c5	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      1254	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_19
0x40032cc	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1254	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_19
0x40032d3	          0x4889d6	                            mov rsi, rdx	      1254	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_19
0x40032d6	          0x4889c7	                            mov rdi, rax	      1254	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_19
0x40032d9	      0xe823cfffff	                  call sym.strbuf_addstr	      1254	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_19
0x40032de	      0xe9ac000000	                           jmp 0x400338f	      1254	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_19
0x40032e3	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      1255	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6	CALL_20
0x40032ea	    0x488d9520feff	                  lea rdx, [rbp - 0x1e0]	      1255	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6	CALL_20
0x40032f1	      0xbe00000000	                              mov esi, 0	      1255	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6	CALL_20
0x40032f6	          0x4889c7	                            mov rdi, rax	      1255	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6	CALL_20
0x40032f9	      0xe86fcdffff	                    call sym.skip_prefix	      1255	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6	CALL_20
0x40032fe	            0x85c0	                           test eax, eax	      1255	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6	CALL_20
0x4003300	            0x741b	                            je 0x400331d	      1255	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6	CALL_20
0x4003302	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      1256	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6
0x4003309	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      1256	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6
0x4003310	          0x4889d6	                            mov rsi, rdx	      1256	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6
0x4003313	          0x4889c7	                            mov rdi, rax	      1256	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6
0x4003316	      0xe8e6ceffff	                  call sym.strbuf_addstr	      1256	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6
0x400331b	            0xeb72	                           jmp 0x400338f	      1256	am.c	FUNCTION_37	WHILE_1	ELSE_2	IF_6
0x400331d	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      1257	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7	CALL_22
0x4003324	    0x488d9520feff	                  lea rdx, [rbp - 0x1e0]	      1257	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7	CALL_22
0x400332b	      0xbe00000000	                              mov esi, 0	      1257	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7	CALL_22
0x4003330	          0x4889c7	                            mov rdi, rax	      1257	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7	CALL_22
0x4003333	      0xe835cdffff	                    call sym.skip_prefix	      1257	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7	CALL_22
0x4003338	            0x85c0	                           test eax, eax	      1257	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7	CALL_22
0x400333a	            0x741b	                            je 0x4003357	      1257	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7	CALL_22
0x400333c	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      1258	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7
0x4003343	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      1258	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7
0x400334a	          0x4889d6	                            mov rsi, rdx	      1258	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7
0x400334d	          0x4889c7	                            mov rdi, rax	      1258	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7
0x4003350	      0xe8acceffff	                  call sym.strbuf_addstr	      1258	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7
0x4003355	            0xeb38	                           jmp 0x400338f	      1258	am.c	FUNCTION_37	WHILE_1	ELSE_3	IF_7
0x4003357	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      1259	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8	CALL_24
0x400335e	    0x488d9520feff	                  lea rdx, [rbp - 0x1e0]	      1259	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8	CALL_24
0x4003365	      0xbe00000000	                              mov esi, 0	      1259	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8	CALL_24
0x400336a	          0x4889c7	                            mov rdi, rax	      1259	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8	CALL_24
0x400336d	      0xe8fbccffff	                    call sym.skip_prefix	      1259	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8	CALL_24
0x4003372	            0x85c0	                           test eax, eax	      1259	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8	CALL_24
0x4003374	            0x7419	                            je 0x400338f	      1259	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8	CALL_24
0x4003376	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      1260	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8
0x400337d	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1260	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8
0x4003384	          0x4889d6	                            mov rsi, rdx	      1260	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8
0x4003387	          0x4889c7	                            mov rdi, rax	      1260	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8
0x400338a	      0xe872ceffff	                  call sym.strbuf_addstr	      1260	am.c	FUNCTION_37	WHILE_1	ELSE_4	IF_8
0x400338f	    0x488b9528feff	            mov rdx, qword [rbp - 0x1d8]	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x4003396	    0x488d8530feff	                  lea rax, [rbp - 0x1d0]	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x400339d	          0x4889d6	                            mov rsi, rdx	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x40033a0	          0x4889c7	                            mov rdi, rax	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x40033a3	      0xe800000000	                          call 0x40033a8	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x40033a8	            0x85c0	                           test eax, eax	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x40033aa	     0xf84d6feffff	                            je 0x4003286	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x40033b0	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      1262	am.c	FUNCTION_37	CALL_26
0x40033b7	          0x4889c7	                            mov rdi, rax	      1262	am.c	FUNCTION_37	CALL_26
0x40033ba	      0xe800000000	                          call 0x40033bf	      1262	am.c	FUNCTION_37	CALL_26
0x40033bf	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x40033c6	      0xbe00000000	                              mov esi, 0	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x40033cb	          0x4889c7	                            mov rdi, rax	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x40033ce	      0xe800000000	                          call 0x40033d3	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x40033d3	            0x85c0	                           test eax, eax	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x40033d5	            0x750f	                           jne 0x40033e6	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x40033d7	    0xc7851cfeffff	              mov dword [rbp - 0x1e4], 1	      1266	am.c	FUNCTION_37	IF_9
0x40033e1	      0xe9c3010000	                           jmp 0x40035a9	      1267	am.c	FUNCTION_37	IF_9
0x40033e6	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x40033ed	      0xbe00000000	                              mov esi, 0	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x40033f2	          0x4889c7	                            mov rdi, rax	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x40033f5	      0xe87dd2ffff	                        call sym.am_path	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x40033fa	          0x4889c7	                            mov rdi, rax	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x40033fd	      0xe80fd0ffff	                  call sym.is_empty_file	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x4003402	            0x85c0	                           test eax, eax	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x4003404	            0x7426	                            je 0x400342c	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x4003406	      0xbf00000000	                              mov edi, 0	      1271	am.c	FUNCTION_37	IF_10	CALL_31
0x400340b	      0xe826ceffff	                               call sym.	      1271	am.c	FUNCTION_37	IF_10	CALL_31
0x4003410	          0x4889c7	                            mov rdi, rax	      1271	am.c	FUNCTION_37	IF_10	CALL_31
0x4003413	      0xb800000000	                              mov eax, 0	      1271	am.c	FUNCTION_37	IF_10	CALL_31
0x4003418	      0xe800000000	                          call 0x400341d	      1271	am.c	FUNCTION_37	IF_10	CALL_31
0x400341d	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1272	am.c	FUNCTION_37	IF_10	CALL_32
0x4003424	          0x4889c7	                            mov rdi, rax	      1272	am.c	FUNCTION_37	IF_10	CALL_32
0x4003427	      0xe863faffff	               call sym.die_user_resolve	      1272	am.c	FUNCTION_37	IF_10	CALL_32
0x400342c	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1275	am.c	FUNCTION_37	CALL_33
0x4003433	      0xbe00000000	                              mov esi, 0	      1275	am.c	FUNCTION_37	CALL_33
0x4003438	          0x4889c7	                            mov rdi, rax	      1275	am.c	FUNCTION_37	CALL_33
0x400343b	      0xe8c1cdffff	                  call sym.strbuf_addstr	      1275	am.c	FUNCTION_37	CALL_33
0x4003440	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	      1276	am.c	FUNCTION_37	CALL_34
0x4003447	    0x488d90f00000	                   lea rdx, [rax + 0xf0]	      1276	am.c	FUNCTION_37	CALL_34
0x400344e	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1276	am.c	FUNCTION_37	CALL_34
0x4003455	          0x4889d6	                            mov rsi, rdx	      1276	am.c	FUNCTION_37	CALL_34
0x4003458	          0x4889c7	                            mov rdi, rax	      1276	am.c	FUNCTION_37	CALL_34
0x400345b	      0xe800000000	                          call 0x4003460	      1276	am.c	FUNCTION_37	CALL_34
0x4003460	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1277	am.c	FUNCTION_37	CALL_35
0x4003467	      0xbe00000000	                              mov esi, 0	      1277	am.c	FUNCTION_37	CALL_35
0x400346c	          0x4889c7	                            mov rdi, rax	      1277	am.c	FUNCTION_37	CALL_35
0x400346f	      0xe800000000	                          call 0x4003474	      1277	am.c	FUNCTION_37	CALL_35
0x4003474	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1279	am.c	FUNCTION_37	CALL_36
0x400347b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1279	am.c	FUNCTION_37	CALL_36
0x400347f	          0x4885c0	                           test rax, rax	      1279	am.c	FUNCTION_37	CALL_36
0x4003482	            0x7419	                            je 0x400349d	      1279	am.c	FUNCTION_37	CALL_36
0x4003484	      0xb900000000	                              mov ecx, 0	      1279	am.c	FUNCTION_37	CALL_36
0x4003489	      0xbaff040000	                          mov edx, 0x4ff	      1279	am.c	FUNCTION_37	CALL_36
0x400348e	      0xbe00000000	                              mov esi, 0	      1279	am.c	FUNCTION_37	CALL_36
0x4003493	      0xbf00000000	                              mov edi, 0	      1279	am.c	FUNCTION_37	CALL_36
0x4003498	      0xe800000000	                          call 0x400349d	      1279	am.c	FUNCTION_37	CALL_36
0x400349d	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      1280	am.c	FUNCTION_37	CALL_37
0x40034a4	      0xbe00000000	                              mov esi, 0	      1280	am.c	FUNCTION_37	CALL_37
0x40034a9	          0x4889c7	                            mov rdi, rax	      1280	am.c	FUNCTION_37	CALL_37
0x40034ac	      0xe800000000	                          call 0x40034b1	      1280	am.c	FUNCTION_37	CALL_37
0x40034b1	          0x4889c2	                            mov rdx, rax	      1280	am.c	FUNCTION_37	CALL_37
0x40034b4	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1280	am.c	FUNCTION_37	CALL_37
0x40034bb	        0x48895010	             mov qword [rax + 0x10], rdx	      1280	am.c	FUNCTION_37	CALL_37
0x40034bf	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1282	am.c	FUNCTION_37	CALL_38
0x40034c6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1282	am.c	FUNCTION_37	CALL_38
0x40034ca	          0x4885c0	                           test rax, rax	      1282	am.c	FUNCTION_37	CALL_38
0x40034cd	            0x7419	                            je 0x40034e8	      1282	am.c	FUNCTION_37	CALL_38
0x40034cf	      0xb900000000	                              mov ecx, 0	      1282	am.c	FUNCTION_37	CALL_38
0x40034d4	      0xba02050000	                          mov edx, 0x502	      1282	am.c	FUNCTION_37	CALL_38
0x40034d9	      0xbe00000000	                              mov esi, 0	      1282	am.c	FUNCTION_37	CALL_38
0x40034de	      0xbf00000000	                              mov edi, 0	      1282	am.c	FUNCTION_37	CALL_38
0x40034e3	      0xe800000000	                          call 0x40034e8	      1282	am.c	FUNCTION_37	CALL_38
0x40034e8	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      1283	am.c	FUNCTION_37	CALL_39
0x40034ef	      0xbe00000000	                              mov esi, 0	      1283	am.c	FUNCTION_37	CALL_39
0x40034f4	          0x4889c7	                            mov rdi, rax	      1283	am.c	FUNCTION_37	CALL_39
0x40034f7	      0xe800000000	                          call 0x40034fc	      1283	am.c	FUNCTION_37	CALL_39
0x40034fc	          0x4889c2	                            mov rdx, rax	      1283	am.c	FUNCTION_37	CALL_39
0x40034ff	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1283	am.c	FUNCTION_37	CALL_39
0x4003506	        0x48895018	             mov qword [rax + 0x18], rdx	      1283	am.c	FUNCTION_37	CALL_39
0x400350a	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1285	am.c	FUNCTION_37	CALL_40
0x4003511	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1285	am.c	FUNCTION_37	CALL_40
0x4003515	          0x4885c0	                           test rax, rax	      1285	am.c	FUNCTION_37	CALL_40
0x4003518	            0x7419	                            je 0x4003533	      1285	am.c	FUNCTION_37	CALL_40
0x400351a	      0xb900000000	                              mov ecx, 0	      1285	am.c	FUNCTION_37	CALL_40
0x400351f	      0xba05050000	                          mov edx, 0x505	      1285	am.c	FUNCTION_37	CALL_40
0x4003524	      0xbe00000000	                              mov esi, 0	      1285	am.c	FUNCTION_37	CALL_40
0x4003529	      0xbf00000000	                              mov edi, 0	      1285	am.c	FUNCTION_37	CALL_40
0x400352e	      0xe800000000	                          call 0x4003533	      1285	am.c	FUNCTION_37	CALL_40
0x4003533	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1286	am.c	FUNCTION_37	CALL_41
0x400353a	      0xbe00000000	                              mov esi, 0	      1286	am.c	FUNCTION_37	CALL_41
0x400353f	          0x4889c7	                            mov rdi, rax	      1286	am.c	FUNCTION_37	CALL_41
0x4003542	      0xe800000000	                          call 0x4003547	      1286	am.c	FUNCTION_37	CALL_41
0x4003547	          0x4889c2	                            mov rdx, rax	      1286	am.c	FUNCTION_37	CALL_41
0x400354a	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1286	am.c	FUNCTION_37	CALL_41
0x4003551	        0x48895020	             mov qword [rax + 0x20], rdx	      1286	am.c	FUNCTION_37	CALL_41
0x4003555	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1288	am.c	FUNCTION_37	CALL_42
0x400355c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1288	am.c	FUNCTION_37	CALL_42
0x4003560	          0x4885c0	                           test rax, rax	      1288	am.c	FUNCTION_37	CALL_42
0x4003563	            0x7419	                            je 0x400357e	      1288	am.c	FUNCTION_37	CALL_42
0x4003565	      0xb900000000	                              mov ecx, 0	      1288	am.c	FUNCTION_37	CALL_42
0x400356a	      0xba08050000	                          mov edx, 0x508	      1288	am.c	FUNCTION_37	CALL_42
0x400356f	      0xbe00000000	                              mov esi, 0	      1288	am.c	FUNCTION_37	CALL_42
0x4003574	      0xbf00000000	                              mov edi, 0	      1288	am.c	FUNCTION_37	CALL_42
0x4003579	      0xe800000000	                          call 0x400357e	      1288	am.c	FUNCTION_37	CALL_42
0x400357e	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1289	am.c	FUNCTION_37	CALL_43
0x4003585	        0x488d5030	                   lea rdx, [rax + 0x30]	      1289	am.c	FUNCTION_37	CALL_43
0x4003589	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1289	am.c	FUNCTION_37	CALL_43
0x4003590	          0x4889d6	                            mov rsi, rdx	      1289	am.c	FUNCTION_37	CALL_43
0x4003593	          0x4889c7	                            mov rdi, rax	      1289	am.c	FUNCTION_37	CALL_43
0x4003596	      0xe800000000	                          call 0x400359b	      1289	am.c	FUNCTION_37	CALL_43
0x400359b	          0x4889c2	                            mov rdx, rax	      1289	am.c	FUNCTION_37	CALL_43
0x400359e	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      1289	am.c	FUNCTION_37	CALL_43
0x40035a5	        0x48895028	             mov qword [rax + 0x28], rdx	      1289	am.c	FUNCTION_37	CALL_43
0x40035a9	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1292	am.c	FUNCTION_37	CALL_44
0x40035b0	          0x4889c7	                            mov rdi, rax	      1292	am.c	FUNCTION_37	CALL_44
0x40035b3	      0xe800000000	                          call 0x40035b8	      1292	am.c	FUNCTION_37	CALL_44
0x40035b8	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      1293	am.c	FUNCTION_37	CALL_45
0x40035bf	          0x4889c7	                            mov rdi, rax	      1293	am.c	FUNCTION_37	CALL_45
0x40035c2	      0xe800000000	                          call 0x40035c7	      1293	am.c	FUNCTION_37	CALL_45
0x40035c7	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      1294	am.c	FUNCTION_37	CALL_46
0x40035ce	          0x4889c7	                            mov rdi, rax	      1294	am.c	FUNCTION_37	CALL_46
0x40035d1	      0xe800000000	                          call 0x40035d6	      1294	am.c	FUNCTION_37	CALL_46
0x40035d6	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      1295	am.c	FUNCTION_37	CALL_47
0x40035dd	          0x4889c7	                            mov rdi, rax	      1295	am.c	FUNCTION_37	CALL_47
0x40035e0	      0xe800000000	                          call 0x40035e5	      1295	am.c	FUNCTION_37	CALL_47
0x40035e5	    0x488d8530feff	                  lea rax, [rbp - 0x1d0]	      1296	am.c	FUNCTION_37	CALL_48
0x40035ec	          0x4889c7	                            mov rdi, rax	      1296	am.c	FUNCTION_37	CALL_48
0x40035ef	      0xe800000000	                          call 0x40035f4	      1296	am.c	FUNCTION_37	CALL_48
0x40035f4	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	      1297	am.c	FUNCTION_37	CALL_49
0x40035fb	          0x4889c7	                            mov rdi, rax	      1297	am.c	FUNCTION_37	CALL_49
0x40035fe	      0xe800000000	                          call 0x4003603	      1297	am.c	FUNCTION_37	CALL_49
0x4003603	    0x8b851cfeffff	            mov eax, dword [rbp - 0x1e4]	      1298	am.c	FUNCTION_37
0x4003609	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1299	am.c	FUNCTION_37
0x400360d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1299	am.c	FUNCTION_37
0x4003616	            0x7405	                            je 0x400361d	      1299	am.c	FUNCTION_37
0x4003618	      0xe800000000	                          call 0x400361d	      1299	am.c	FUNCTION_37
0x400361d	    0x4881c4f80100	                          add rsp, 0x1f8	      1299	am.c	FUNCTION_37
0x4003624	              0x5b	                                 pop rbx	      1299	am.c	FUNCTION_37
0x4003625	              0x5d	                                 pop rbp	      1299	am.c	FUNCTION_37
0x4003626	              0xc3	                                     ret	      1299	am.c	FUNCTION_37
cmd_am	functions,0:IF,12:FOR,1:SWITCH,1:DO,0:WHILE,0:ELSE,2:CALL,72	534
0x4005dba	              0x55	                                push rbp	      2200	am.c	FUNCTION_61
0x4005dbb	          0x4889e5	                            mov rbp, rsp	      2200	am.c	FUNCTION_61
0x4005dbe	              0x53	                                push rbx	      2200	am.c	FUNCTION_61
0x4005dbf	    0x4881ecf80900	                          sub rsp, 0x9f8	      2200	am.c	FUNCTION_61
0x4005dc6	    0x89bd1cf6ffff	            mov dword [rbp - 0x9e4], edi	      2200	am.c	FUNCTION_61
0x4005dcc	    0x4889b510f6ff	            mov qword [rbp - 0x9f0], rsi	      2200	am.c	FUNCTION_61
0x4005dd3	    0x48899508f6ff	            mov qword [rbp - 0x9f8], rdx	      2200	am.c	FUNCTION_61
0x4005dda	    0x64488b042528	                mov rax, qword fs:[0x28]	      2200	am.c	FUNCTION_61
0x4005de3	        0x488945e8	             mov qword [rbp - 0x18], rax	      2200	am.c	FUNCTION_61
0x4005de7	            0x31c0	                            xor eax, eax	      2200	am.c	FUNCTION_61
0x4005de9	    0xc78524f6ffff	    mov dword [rbp - 0x9dc], 0xffffffff 	      2202	am.c	FUNCTION_61
0x4005df3	    0xc78528f6ffff	    mov dword [rbp - 0x9d8], 0xffffffff 	      2203	am.c	FUNCTION_61
0x4005dfd	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 0	      2204	am.c	FUNCTION_61
0x4005e07	    0xc78530f6ffff	              mov dword [rbp - 0x9d0], 0	      2205	am.c	FUNCTION_61
0x4005e11	    0xc78534f6ffff	              mov dword [rbp - 0x9cc], 0	      2207	am.c	FUNCTION_61
0x4005e1b	    0x48c78550f6ff	              mov qword [rbp - 0x9b0], 0	      2209	am.c	FUNCTION_61
0x4005e26	    0x48c78558f6ff	              mov qword [rbp - 0x9a8], 0	      2209	am.c	FUNCTION_61
0x4005e31	    0x48c78560f6ff	              mov qword [rbp - 0x9a0], 0	      2209	am.c	FUNCTION_61
0x4005e3c	    0x488d9520f7ff	                  lea rdx, [rbp - 0x8e0]	      2215	am.c	FUNCTION_61
0x4005e43	      0xb800000000	                              mov eax, 0	      2215	am.c	FUNCTION_61
0x4005e48	      0xb918010000	                          mov ecx, 0x118	      2215	am.c	FUNCTION_61
0x4005e4d	          0x4889d7	                            mov rdi, rdx	      2215	am.c	FUNCTION_61
0x4005e50	          0xf348ab	              rep stosq qword [rdi], rax	      2215	am.c	FUNCTION_61
0x4005e53	    0xc78520f7ffff	              mov dword [rbp - 0x8e0], 7	      2215	am.c	FUNCTION_61
0x4005e5d	    0xc78524f7ffff	          mov dword [rbp - 0x8dc], 0x69 	      2215	am.c	FUNCTION_61
0x4005e67	    0x48c78528f7ff	              mov qword [rbp - 0x8d8], 0	      2215	am.c	FUNCTION_61
0x4005e72	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x4005e79	        0x4883c050	                           add rax, 0x50	      2215	am.c	FUNCTION_61
0x4005e7d	    0x48898530f7ff	            mov qword [rbp - 0x8d0], rax	      2215	am.c	FUNCTION_61
0x4005e84	    0x48c78540f7ff	              mov qword [rbp - 0x8c0], 0	      2215	am.c	FUNCTION_61
0x4005e8f	    0xc78548f7ffff	              mov dword [rbp - 0x8b8], 2	      2215	am.c	FUNCTION_61
0x4005e99	    0x48c78558f7ff	              mov qword [rbp - 0x8a8], 1	      2215	am.c	FUNCTION_61
0x4005ea4	    0xc78560f7ffff	              mov dword [rbp - 0x8a0], 7	      2215	am.c	FUNCTION_61
0x4005eae	    0xc78564f7ffff	          mov dword [rbp - 0x89c], 0x62 	      2215	am.c	FUNCTION_61
0x4005eb8	    0x48c78568f7ff	              mov qword [rbp - 0x898], 0	      2215	am.c	FUNCTION_61
0x4005ec3	    0x488d8524f6ff	                  lea rax, [rbp - 0x9dc]	      2215	am.c	FUNCTION_61
0x4005eca	    0x48898570f7ff	            mov qword [rbp - 0x890], rax	      2215	am.c	FUNCTION_61
0x4005ed1	    0x48c78580f7ff	              mov qword [rbp - 0x880], 0	      2215	am.c	FUNCTION_61
0x4005edc	    0xc78588f7ffff	            mov dword [rbp - 0x878], 0xa	      2215	am.c	FUNCTION_61
0x4005ee6	    0x48c78598f7ff	              mov qword [rbp - 0x868], 1	      2215	am.c	FUNCTION_61
0x4005ef1	    0xc785a0f7ffff	              mov dword [rbp - 0x860], 7	      2215	am.c	FUNCTION_61
0x4005efb	    0xc785a4f7ffff	          mov dword [rbp - 0x85c], 0x33 	      2215	am.c	FUNCTION_61
0x4005f05	    0x48c785a8f7ff	              mov qword [rbp - 0x858], 0	      2215	am.c	FUNCTION_61
0x4005f10	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x4005f17	        0x4883c054	                           add rax, 0x54	      2215	am.c	FUNCTION_61
0x4005f1b	    0x488985b0f7ff	            mov qword [rbp - 0x850], rax	      2215	am.c	FUNCTION_61
0x4005f22	    0x48c785c0f7ff	              mov qword [rbp - 0x840], 0	      2215	am.c	FUNCTION_61
0x4005f2d	    0xc785c8f7ffff	              mov dword [rbp - 0x838], 2	      2215	am.c	FUNCTION_61
0x4005f37	    0x48c785d8f7ff	              mov qword [rbp - 0x828], 1	      2215	am.c	FUNCTION_61
0x4005f42	    0xc785e0f7ffff	              mov dword [rbp - 0x820], 6	      2215	am.c	FUNCTION_61
0x4005f4c	    0xc785e4f7ffff	          mov dword [rbp - 0x81c], 0x71 	      2215	am.c	FUNCTION_61
0x4005f56	    0x48c785e8f7ff	              mov qword [rbp - 0x818], 0	      2215	am.c	FUNCTION_61
0x4005f61	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x4005f68	        0x4883c058	                           add rax, 0x58	      2215	am.c	FUNCTION_61
0x4005f6c	    0x488985f0f7ff	            mov qword [rbp - 0x810], rax	      2215	am.c	FUNCTION_61
0x4005f73	    0x48c78500f8ff	              mov qword [rbp - 0x800], 0	      2215	am.c	FUNCTION_61
0x4005f7e	    0xc78508f8ffff	              mov dword [rbp - 0x7f8], 2	      2215	am.c	FUNCTION_61
0x4005f88	    0xc78520f8ffff	              mov dword [rbp - 0x7e0], 7	      2215	am.c	FUNCTION_61
0x4005f92	    0xc78524f8ffff	          mov dword [rbp - 0x7dc], 0x73 	      2215	am.c	FUNCTION_61
0x4005f9c	    0x48c78528f8ff	              mov qword [rbp - 0x7d8], 0	      2215	am.c	FUNCTION_61
0x4005fa7	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x4005fae	        0x4883c05c	                           add rax, 0x5c	      2215	am.c	FUNCTION_61
0x4005fb2	    0x48898530f8ff	            mov qword [rbp - 0x7d0], rax	      2215	am.c	FUNCTION_61
0x4005fb9	    0x48c78540f8ff	              mov qword [rbp - 0x7c0], 0	      2215	am.c	FUNCTION_61
0x4005fc4	    0xc78548f8ffff	              mov dword [rbp - 0x7b8], 2	      2215	am.c	FUNCTION_61
0x4005fce	    0x48c78558f8ff	              mov qword [rbp - 0x7a8], 2	      2215	am.c	FUNCTION_61
0x4005fd9	    0xc78560f8ffff	              mov dword [rbp - 0x7a0], 7	      2215	am.c	FUNCTION_61
0x4005fe3	    0xc78564f8ffff	          mov dword [rbp - 0x79c], 0x75 	      2215	am.c	FUNCTION_61
0x4005fed	    0x48c78568f8ff	              mov qword [rbp - 0x798], 0	      2215	am.c	FUNCTION_61
0x4005ff8	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x4005fff	        0x4883c060	                           add rax, 0x60	      2215	am.c	FUNCTION_61
0x4006003	    0x48898570f8ff	            mov qword [rbp - 0x790], rax	      2215	am.c	FUNCTION_61
0x400600a	    0x48c78580f8ff	              mov qword [rbp - 0x780], 0	      2215	am.c	FUNCTION_61
0x4006015	    0xc78588f8ffff	              mov dword [rbp - 0x778], 2	      2215	am.c	FUNCTION_61
0x400601f	    0x48c78598f8ff	              mov qword [rbp - 0x768], 1	      2215	am.c	FUNCTION_61
0x400602a	    0xc785a0f8ffff	              mov dword [rbp - 0x760], 7	      2215	am.c	FUNCTION_61
0x4006034	    0xc785a4f8ffff	          mov dword [rbp - 0x75c], 0x6b 	      2215	am.c	FUNCTION_61
0x400603e	    0x48c785a8f8ff	              mov qword [rbp - 0x758], 0	      2215	am.c	FUNCTION_61
0x4006049	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x4006050	        0x4883c064	                           add rax, 0x64	      2215	am.c	FUNCTION_61
0x4006054	    0x488985b0f8ff	            mov qword [rbp - 0x750], rax	      2215	am.c	FUNCTION_61
0x400605b	    0x48c785c0f8ff	              mov qword [rbp - 0x740], 0	      2215	am.c	FUNCTION_61
0x4006066	    0xc785c8f8ffff	              mov dword [rbp - 0x738], 2	      2215	am.c	FUNCTION_61
0x4006070	    0x48c785d8f8ff	              mov qword [rbp - 0x728], 1	      2215	am.c	FUNCTION_61
0x400607b	    0xc785e0f8ffff	              mov dword [rbp - 0x720], 7	      2215	am.c	FUNCTION_61
0x4006085	    0x48c785e8f8ff	              mov qword [rbp - 0x718], 0	      2215	am.c	FUNCTION_61
0x4006090	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x4006097	        0x4883c064	                           add rax, 0x64	      2215	am.c	FUNCTION_61
0x400609b	    0x488985f0f8ff	            mov qword [rbp - 0x710], rax	      2215	am.c	FUNCTION_61
0x40060a2	    0x48c78500f9ff	              mov qword [rbp - 0x700], 0	      2215	am.c	FUNCTION_61
0x40060ad	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 2	      2215	am.c	FUNCTION_61
0x40060b7	    0x48c78518f9ff	              mov qword [rbp - 0x6e8], 2	      2215	am.c	FUNCTION_61
0x40060c2	    0xc78520f9ffff	              mov dword [rbp - 0x6e0], 7	      2215	am.c	FUNCTION_61
0x40060cc	    0xc78524f9ffff	          mov dword [rbp - 0x6dc], 0x6d 	      2215	am.c	FUNCTION_61
0x40060d6	    0x48c78528f9ff	              mov qword [rbp - 0x6d8], 0	      2215	am.c	FUNCTION_61
0x40060e1	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x40060e8	        0x4883c068	                           add rax, 0x68	      2215	am.c	FUNCTION_61
0x40060ec	    0x48898530f9ff	            mov qword [rbp - 0x6d0], rax	      2215	am.c	FUNCTION_61
0x40060f3	    0x48c78540f9ff	              mov qword [rbp - 0x6c0], 0	      2215	am.c	FUNCTION_61
0x40060fe	    0xc78548f9ffff	              mov dword [rbp - 0x6b8], 2	      2215	am.c	FUNCTION_61
0x4006108	    0x48c78558f9ff	              mov qword [rbp - 0x6a8], 1	      2215	am.c	FUNCTION_61
0x4006113	    0xc78560f9ffff	              mov dword [rbp - 0x6a0], 7	      2215	am.c	FUNCTION_61
0x400611d	    0x48c78568f9ff	              mov qword [rbp - 0x698], 0	      2215	am.c	FUNCTION_61
0x4006128	    0x488d8528f6ff	                  lea rax, [rbp - 0x9d8]	      2215	am.c	FUNCTION_61
0x400612f	    0x48898570f9ff	            mov qword [rbp - 0x690], rax	      2215	am.c	FUNCTION_61
0x4006136	    0x48c78580f9ff	              mov qword [rbp - 0x680], 0	      2215	am.c	FUNCTION_61
0x4006141	    0xc78588f9ffff	              mov dword [rbp - 0x678], 6	      2215	am.c	FUNCTION_61
0x400614b	    0x48c78598f9ff	              mov qword [rbp - 0x668], 1	      2215	am.c	FUNCTION_61
0x4006156	    0xc785a0f9ffff	              mov dword [rbp - 0x660], 7	      2215	am.c	FUNCTION_61
0x4006160	    0x48c785a8f9ff	              mov qword [rbp - 0x658], 0	      2215	am.c	FUNCTION_61
0x400616b	    0x488d8528f6ff	                  lea rax, [rbp - 0x9d8]	      2215	am.c	FUNCTION_61
0x4006172	    0x488985b0f9ff	            mov qword [rbp - 0x650], rax	      2215	am.c	FUNCTION_61
0x4006179	    0x48c785c0f9ff	              mov qword [rbp - 0x640], 0	      2215	am.c	FUNCTION_61
0x4006184	    0xc785c8f9ffff	              mov dword [rbp - 0x638], 6	      2215	am.c	FUNCTION_61
0x400618e	    0xc785e0f9ffff	              mov dword [rbp - 0x620], 7	      2215	am.c	FUNCTION_61
0x4006198	    0xc785e4f9ffff	          mov dword [rbp - 0x61c], 0x63 	      2215	am.c	FUNCTION_61
0x40061a2	    0x48c785e8f9ff	              mov qword [rbp - 0x618], 0	      2215	am.c	FUNCTION_61
0x40061ad	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x40061b4	        0x4883c06c	                           add rax, 0x6c	      2215	am.c	FUNCTION_61
0x40061b8	    0x488985f0f9ff	            mov qword [rbp - 0x610], rax	      2215	am.c	FUNCTION_61
0x40061bf	    0x48c78500faff	              mov qword [rbp - 0x600], 0	      2215	am.c	FUNCTION_61
0x40061ca	    0xc78508faffff	              mov dword [rbp - 0x5f8], 2	      2215	am.c	FUNCTION_61
0x40061d4	    0x48c78518faff	              mov qword [rbp - 0x5e8], 1	      2215	am.c	FUNCTION_61
0x40061df	    0xc78520faffff	           mov dword [rbp - 0x5e0], 0xc 	      2215	am.c	FUNCTION_61
0x40061e9	    0x48c78528faff	              mov qword [rbp - 0x5d8], 0	      2215	am.c	FUNCTION_61
0x40061f4	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x40061fb	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x40061ff	    0x48898530faff	            mov qword [rbp - 0x5d0], rax	      2215	am.c	FUNCTION_61
0x4006206	    0x48c78538faff	              mov qword [rbp - 0x5c8], 0	      2215	am.c	FUNCTION_61
0x4006211	    0x48c78540faff	              mov qword [rbp - 0x5c0], 0	      2215	am.c	FUNCTION_61
0x400621c	    0x48c78550faff	              mov qword [rbp - 0x5b0], 0	      2215	am.c	FUNCTION_61
0x4006227	    0xc78560faffff	           mov dword [rbp - 0x5a0], 0xc 	      2215	am.c	FUNCTION_61
0x4006231	    0x48c78568faff	              mov qword [rbp - 0x598], 0	      2215	am.c	FUNCTION_61
0x400623c	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x4006243	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x4006247	    0x48898570faff	            mov qword [rbp - 0x590], rax	      2215	am.c	FUNCTION_61
0x400624e	    0x48c78580faff	              mov qword [rbp - 0x580], 0	      2215	am.c	FUNCTION_61
0x4006259	    0xc78588faffff	              mov dword [rbp - 0x578], 2	      2215	am.c	FUNCTION_61
0x4006263	    0x48c78590faff	              mov qword [rbp - 0x570], 0	      2215	am.c	FUNCTION_61
0x400626e	    0xc785a0faffff	           mov dword [rbp - 0x560], 0xc 	      2215	am.c	FUNCTION_61
0x4006278	    0x48c785a8faff	              mov qword [rbp - 0x558], 0	      2215	am.c	FUNCTION_61
0x4006283	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x400628a	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x400628e	    0x488985b0faff	            mov qword [rbp - 0x550], rax	      2215	am.c	FUNCTION_61
0x4006295	    0x48c785c0faff	              mov qword [rbp - 0x540], 0	      2215	am.c	FUNCTION_61
0x40062a0	    0xc785c8faffff	              mov dword [rbp - 0x538], 2	      2215	am.c	FUNCTION_61
0x40062aa	    0x48c785d0faff	              mov qword [rbp - 0x530], 0	      2215	am.c	FUNCTION_61
0x40062b5	    0xc785e0faffff	           mov dword [rbp - 0x520], 0xc 	      2215	am.c	FUNCTION_61
0x40062bf	    0x48c785e8faff	              mov qword [rbp - 0x518], 0	      2215	am.c	FUNCTION_61
0x40062ca	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x40062d1	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x40062d5	    0x488985f0faff	            mov qword [rbp - 0x510], rax	      2215	am.c	FUNCTION_61
0x40062dc	    0x48c785f8faff	              mov qword [rbp - 0x508], 0	      2215	am.c	FUNCTION_61
0x40062e7	    0x48c78500fbff	              mov qword [rbp - 0x500], 0	      2215	am.c	FUNCTION_61
0x40062f2	    0x48c78510fbff	              mov qword [rbp - 0x4f0], 0	      2215	am.c	FUNCTION_61
0x40062fd	    0xc78520fbffff	           mov dword [rbp - 0x4e0], 0xc 	      2215	am.c	FUNCTION_61
0x4006307	    0x48c78528fbff	              mov qword [rbp - 0x4d8], 0	      2215	am.c	FUNCTION_61
0x4006312	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x4006319	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x400631d	    0x48898530fbff	            mov qword [rbp - 0x4d0], rax	      2215	am.c	FUNCTION_61
0x4006324	    0x48c78538fbff	              mov qword [rbp - 0x4c8], 0	      2215	am.c	FUNCTION_61
0x400632f	    0x48c78540fbff	              mov qword [rbp - 0x4c0], 0	      2215	am.c	FUNCTION_61
0x400633a	    0x48c78550fbff	              mov qword [rbp - 0x4b0], 0	      2215	am.c	FUNCTION_61
0x4006345	    0xc78560fbffff	           mov dword [rbp - 0x4a0], 0xc 	      2215	am.c	FUNCTION_61
0x400634f	    0x48c78568fbff	              mov qword [rbp - 0x498], 0	      2215	am.c	FUNCTION_61
0x400635a	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x4006361	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x4006365	    0x48898570fbff	            mov qword [rbp - 0x490], rax	      2215	am.c	FUNCTION_61
0x400636c	    0x48c78578fbff	              mov qword [rbp - 0x488], 0	      2215	am.c	FUNCTION_61
0x4006377	    0x48c78580fbff	              mov qword [rbp - 0x480], 0	      2215	am.c	FUNCTION_61
0x4006382	    0x48c78590fbff	              mov qword [rbp - 0x470], 0	      2215	am.c	FUNCTION_61
0x400638d	    0xc785a0fbffff	           mov dword [rbp - 0x460], 0xc 	      2215	am.c	FUNCTION_61
0x4006397	    0xc785a4fbffff	          mov dword [rbp - 0x45c], 0x43 	      2215	am.c	FUNCTION_61
0x40063a1	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x40063a8	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x40063ac	    0x488985b0fbff	            mov qword [rbp - 0x450], rax	      2215	am.c	FUNCTION_61
0x40063b3	    0x48c785b8fbff	              mov qword [rbp - 0x448], 0	      2215	am.c	FUNCTION_61
0x40063be	    0x48c785c0fbff	              mov qword [rbp - 0x440], 0	      2215	am.c	FUNCTION_61
0x40063c9	    0x48c785d0fbff	              mov qword [rbp - 0x430], 0	      2215	am.c	FUNCTION_61
0x40063d4	    0xc785e0fbffff	           mov dword [rbp - 0x420], 0xc 	      2215	am.c	FUNCTION_61
0x40063de	    0xc785e4fbffff	          mov dword [rbp - 0x41c], 0x70 	      2215	am.c	FUNCTION_61
0x40063e8	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x40063ef	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x40063f3	    0x488985f0fbff	            mov qword [rbp - 0x410], rax	      2215	am.c	FUNCTION_61
0x40063fa	    0x48c785f8fbff	              mov qword [rbp - 0x408], 0	      2215	am.c	FUNCTION_61
0x4006405	    0x48c78500fcff	              mov qword [rbp - 0x400], 0	      2215	am.c	FUNCTION_61
0x4006410	    0x48c78510fcff	              mov qword [rbp - 0x3f0], 0	      2215	am.c	FUNCTION_61
0x400641b	    0xc78520fcffff	           mov dword [rbp - 0x3e0], 0xc 	      2215	am.c	FUNCTION_61
0x4006425	    0x48c78528fcff	              mov qword [rbp - 0x3d8], 0	      2215	am.c	FUNCTION_61
0x4006430	    0x488d852cf6ff	                  lea rax, [rbp - 0x9d4]	      2215	am.c	FUNCTION_61
0x4006437	    0x48898530fcff	            mov qword [rbp - 0x3d0], rax	      2215	am.c	FUNCTION_61
0x400643e	    0x48c78538fcff	              mov qword [rbp - 0x3c8], 0	      2215	am.c	FUNCTION_61
0x4006449	    0x48c78540fcff	              mov qword [rbp - 0x3c0], 0	      2215	am.c	FUNCTION_61
0x4006454	    0x48c78550fcff	              mov qword [rbp - 0x3b0], 0	      2215	am.c	FUNCTION_61
0x400645f	    0xc78560fcffff	           mov dword [rbp - 0x3a0], 0xc 	      2215	am.c	FUNCTION_61
0x4006469	    0x48c78568fcff	              mov qword [rbp - 0x398], 0	      2215	am.c	FUNCTION_61
0x4006474	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x400647b	        0x4883c070	                           add rax, 0x70	      2215	am.c	FUNCTION_61
0x400647f	    0x48898570fcff	            mov qword [rbp - 0x390], rax	      2215	am.c	FUNCTION_61
0x4006486	    0x48c78580fcff	              mov qword [rbp - 0x380], 0	      2215	am.c	FUNCTION_61
0x4006491	    0xc78588fcffff	              mov dword [rbp - 0x378], 2	      2215	am.c	FUNCTION_61
0x400649b	    0x48c78590fcff	              mov qword [rbp - 0x370], 0	      2215	am.c	FUNCTION_61
0x40064a6	    0xc785a0fcffff	              mov dword [rbp - 0x360], 9	      2215	am.c	FUNCTION_61
0x40064b0	    0x48c785a8fcff	              mov qword [rbp - 0x358], 0	      2215	am.c	FUNCTION_61
0x40064bb	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x40064c2	        0x4883e880	             sub rax, 0xffffffffffffff80	      2215	am.c	FUNCTION_61
0x40064c6	    0x488985b0fcff	            mov qword [rbp - 0x350], rax	      2215	am.c	FUNCTION_61
0x40064cd	    0x48c785c0fcff	              mov qword [rbp - 0x340], 0	      2215	am.c	FUNCTION_61
0x40064d8	    0xc785e0fcffff	              mov dword [rbp - 0x320], 8	      2215	am.c	FUNCTION_61
0x40064e2	    0x48c785e8fcff	              mov qword [rbp - 0x318], 0	      2215	am.c	FUNCTION_61
0x40064ed	    0x488d8530f6ff	                  lea rax, [rbp - 0x9d0]	      2215	am.c	FUNCTION_61
0x40064f4	    0x488985f0fcff	            mov qword [rbp - 0x310], rax	      2215	am.c	FUNCTION_61
0x40064fb	    0x48c78500fdff	              mov qword [rbp - 0x300], 0	      2215	am.c	FUNCTION_61
0x4006506	    0xc78508fdffff	              mov dword [rbp - 0x2f8], 6	      2215	am.c	FUNCTION_61
0x4006510	    0x48c78518fdff	              mov qword [rbp - 0x2e8], 2	      2215	am.c	FUNCTION_61
0x400651b	    0xc78520fdffff	              mov dword [rbp - 0x2e0], 8	      2215	am.c	FUNCTION_61
0x4006525	    0xc78524fdffff	          mov dword [rbp - 0x2dc], 0x72 	      2215	am.c	FUNCTION_61
0x400652f	    0x48c78528fdff	              mov qword [rbp - 0x2d8], 0	      2215	am.c	FUNCTION_61
0x400653a	    0x488d8530f6ff	                  lea rax, [rbp - 0x9d0]	      2215	am.c	FUNCTION_61
0x4006541	    0x48898530fdff	            mov qword [rbp - 0x2d0], rax	      2215	am.c	FUNCTION_61
0x4006548	    0x48c78540fdff	              mov qword [rbp - 0x2c0], 0	      2215	am.c	FUNCTION_61
0x4006553	    0xc78548fdffff	              mov dword [rbp - 0x2b8], 6	      2215	am.c	FUNCTION_61
0x400655d	    0x48c78558fdff	              mov qword [rbp - 0x2a8], 2	      2215	am.c	FUNCTION_61
0x4006568	    0xc78560fdffff	              mov dword [rbp - 0x2a0], 8	      2215	am.c	FUNCTION_61
0x4006572	    0x48c78568fdff	              mov qword [rbp - 0x298], 0	      2215	am.c	FUNCTION_61
0x400657d	    0x488d8530f6ff	                  lea rax, [rbp - 0x9d0]	      2215	am.c	FUNCTION_61
0x4006584	    0x48898570fdff	            mov qword [rbp - 0x290], rax	      2215	am.c	FUNCTION_61
0x400658b	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	      2215	am.c	FUNCTION_61
0x4006596	    0xc78588fdffff	              mov dword [rbp - 0x278], 6	      2215	am.c	FUNCTION_61
0x40065a0	    0x48c78598fdff	              mov qword [rbp - 0x268], 3	      2215	am.c	FUNCTION_61
0x40065ab	    0xc785a0fdffff	              mov dword [rbp - 0x260], 8	      2215	am.c	FUNCTION_61
0x40065b5	    0x48c785a8fdff	              mov qword [rbp - 0x258], 0	      2215	am.c	FUNCTION_61
0x40065c0	    0x488d8530f6ff	                  lea rax, [rbp - 0x9d0]	      2215	am.c	FUNCTION_61
0x40065c7	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      2215	am.c	FUNCTION_61
0x40065ce	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	      2215	am.c	FUNCTION_61
0x40065d9	    0xc785c8fdffff	              mov dword [rbp - 0x238], 6	      2215	am.c	FUNCTION_61
0x40065e3	    0x48c785d8fdff	              mov qword [rbp - 0x228], 4	      2215	am.c	FUNCTION_61
0x40065ee	    0xc785e0fdffff	              mov dword [rbp - 0x220], 8	      2215	am.c	FUNCTION_61
0x40065f8	    0x48c785e8fdff	              mov qword [rbp - 0x218], 0	      2215	am.c	FUNCTION_61
0x4006603	    0x488d8530f6ff	                  lea rax, [rbp - 0x9d0]	      2215	am.c	FUNCTION_61
0x400660a	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      2215	am.c	FUNCTION_61
0x4006611	    0x48c78500feff	              mov qword [rbp - 0x200], 0	      2215	am.c	FUNCTION_61
0x400661c	    0xc78508feffff	              mov dword [rbp - 0x1f8], 6	      2215	am.c	FUNCTION_61
0x4006626	    0x48c78518feff	              mov qword [rbp - 0x1e8], 5	      2215	am.c	FUNCTION_61
0x4006631	    0xc78520feffff	              mov dword [rbp - 0x1e0], 8	      2215	am.c	FUNCTION_61
0x400663b	    0x48c78528feff	              mov qword [rbp - 0x1d8], 0	      2215	am.c	FUNCTION_61
0x4006646	    0x488d8530f6ff	                  lea rax, [rbp - 0x9d0]	      2215	am.c	FUNCTION_61
0x400664d	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	      2215	am.c	FUNCTION_61
0x4006654	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	      2215	am.c	FUNCTION_61
0x400665f	    0xc78548feffff	              mov dword [rbp - 0x1b8], 6	      2215	am.c	FUNCTION_61
0x4006669	    0x48c78558feff	              mov qword [rbp - 0x1a8], 6	      2215	am.c	FUNCTION_61
0x4006674	    0xc78560feffff	              mov dword [rbp - 0x1a0], 7	      2215	am.c	FUNCTION_61
0x400667e	    0x48c78568feff	              mov qword [rbp - 0x198], 0	      2215	am.c	FUNCTION_61
0x4006689	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x4006690	    0x480588000000	                           add rax, 0x88	      2215	am.c	FUNCTION_61
0x4006696	    0x48898570feff	            mov qword [rbp - 0x190], rax	      2215	am.c	FUNCTION_61
0x400669d	    0x48c78580feff	              mov qword [rbp - 0x180], 0	      2215	am.c	FUNCTION_61
0x40066a8	    0xc78588feffff	              mov dword [rbp - 0x178], 2	      2215	am.c	FUNCTION_61
0x40066b2	    0x48c78598feff	              mov qword [rbp - 0x168], 1	      2215	am.c	FUNCTION_61
0x40066bd	    0xc785a0feffff	              mov dword [rbp - 0x160], 7	      2215	am.c	FUNCTION_61
0x40066c7	    0x48c785a8feff	              mov qword [rbp - 0x158], 0	      2215	am.c	FUNCTION_61
0x40066d2	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x40066d9	    0x48058c000000	                           add rax, 0x8c	      2215	am.c	FUNCTION_61
0x40066df	    0x488985b0feff	            mov qword [rbp - 0x150], rax	      2215	am.c	FUNCTION_61
0x40066e6	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	      2215	am.c	FUNCTION_61
0x40066f1	    0xc785c8feffff	              mov dword [rbp - 0x138], 2	      2215	am.c	FUNCTION_61
0x40066fb	    0x48c785d8feff	              mov qword [rbp - 0x128], 1	      2215	am.c	FUNCTION_61
0x4006706	    0xc785e0feffff	           mov dword [rbp - 0x120], 0xc 	      2215	am.c	FUNCTION_61
0x4006710	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	      2215	am.c	FUNCTION_61
0x400671b	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x4006722	    0x480590000000	                           add rax, 0x90	      2215	am.c	FUNCTION_61
0x4006728	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      2215	am.c	FUNCTION_61
0x400672f	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	      2215	am.c	FUNCTION_61
0x400673a	    0xc78508ffffff	               mov dword [rbp - 0xf8], 2	      2215	am.c	FUNCTION_61
0x4006744	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      2215	am.c	FUNCTION_61
0x400674f	    0xc78520ffffff	               mov dword [rbp - 0xe0], 9	      2215	am.c	FUNCTION_61
0x4006759	    0xc78524ffffff	           mov dword [rbp - 0xdc], 0x53 	      2215	am.c	FUNCTION_61
0x4006763	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      2215	am.c	FUNCTION_61
0x400676e	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x4006775	    0x480598000000	                           add rax, 0x98	      2215	am.c	FUNCTION_61
0x400677b	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      2215	am.c	FUNCTION_61
0x4006782	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      2215	am.c	FUNCTION_61
0x400678d	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      2215	am.c	FUNCTION_61
0x4006798	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	      2215	am.c	FUNCTION_61
0x40067a2	      0xb800000000	                              mov eax, 0	      2300	am.c	FUNCTION_61
0x40067a7	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2215	am.c	FUNCTION_61
0x40067ae	    0xc78560ffffff	               mov dword [rbp - 0xa0], 7	      2215	am.c	FUNCTION_61
0x40067b8	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      2215	am.c	FUNCTION_61
0x40067c3	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2215	am.c	FUNCTION_61
0x40067ca	    0x4805a0000000	                           add rax, 0xa0	      2215	am.c	FUNCTION_61
0x40067d0	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2215	am.c	FUNCTION_61
0x40067d7	    0x48c745800000	               mov qword [rbp - 0x80], 0	      2215	am.c	FUNCTION_61
0x40067df	    0xc745880a0000	             mov dword [rbp - 0x78], 0xa	      2215	am.c	FUNCTION_61
0x40067e6	    0x48c745980100	               mov qword [rbp - 0x68], 1	      2215	am.c	FUNCTION_61
0x40067ee	    0x83bd1cf6ffff	              cmp dword [rbp - 0x9e4], 2	      2306	am.c	FUNCTION_61	IF_1	CALL_33
0x40067f5	            0x7538	                           jne 0x400682f	      2306	am.c	FUNCTION_61	IF_1	CALL_33
0x40067f7	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      2306	am.c	FUNCTION_61	IF_1	CALL_33
0x40067fe	        0x4883c008	                              add rax, 8	      2306	am.c	FUNCTION_61	IF_1	CALL_33
0x4006802	          0x488b00	                    mov rax, qword [rax]	      2306	am.c	FUNCTION_61	IF_1	CALL_33
0x4006805	      0xbe00000000	                              mov esi, 0	      2306	am.c	FUNCTION_61	IF_1	CALL_33
0x400680a	          0x4889c7	                            mov rdi, rax	      2306	am.c	FUNCTION_61	IF_1	CALL_33
0x400680d	      0xe800000000	                          call 0x4006812	      2306	am.c	FUNCTION_61	IF_1	CALL_33
0x4006812	            0x85c0	                           test eax, eax	      2306	am.c	FUNCTION_61	IF_1	CALL_33
0x4006814	            0x7519	                           jne 0x400682f	      2306	am.c	FUNCTION_61	IF_1	CALL_33
0x4006816	    0x488d9520f7ff	                  lea rdx, [rbp - 0x8e0]	      2307	am.c	FUNCTION_61	CALL_34
0x400681d	    0x488d8550f6ff	                  lea rax, [rbp - 0x9b0]	      2307	am.c	FUNCTION_61	CALL_34
0x4006824	          0x4889d6	                            mov rsi, rdx	      2307	am.c	FUNCTION_61	CALL_34
0x4006827	          0x4889c7	                            mov rdi, rax	      2307	am.c	FUNCTION_61	CALL_34
0x400682a	      0xe800000000	                          call 0x400682f	      2307	am.c	FUNCTION_61	CALL_34
0x400682f	      0xbe00000000	                              mov esi, 0	      2309	am.c	FUNCTION_61	CALL_35
0x4006834	      0xbf00000000	                              mov edi, 0	      2309	am.c	FUNCTION_61	CALL_35
0x4006839	      0xe800000000	                          call 0x400683e	      2309	am.c	FUNCTION_61	CALL_35
0x400683e	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2311	am.c	FUNCTION_61	CALL_36
0x4006845	          0x4889c7	                            mov rdi, rax	      2311	am.c	FUNCTION_61	CALL_36
0x4006848	      0xe8cd9cffff	                  call sym.am_state_init	      2311	am.c	FUNCTION_61	CALL_36
0x400684d	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2313	am.c	FUNCTION_61	CALL_37
0x4006854	          0x4889c7	                            mov rdi, rax	      2313	am.c	FUNCTION_61	CALL_37
0x4006857	      0xe802a0ffff	                 call sym.am_in_progress	      2313	am.c	FUNCTION_61	CALL_37
0x400685c	    0x89853cf6ffff	            mov dword [rbp - 0x9c4], eax	      2313	am.c	FUNCTION_61	CALL_37
0x4006862	    0x83bd3cf6ffff	              cmp dword [rbp - 0x9c4], 0	      2314	am.c	FUNCTION_61	IF_2
0x4006869	            0x740f	                            je 0x400687a	      2314	am.c	FUNCTION_61	IF_2
0x400686b	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2315	am.c	FUNCTION_61	CALL_38
0x4006872	          0x4889c7	                            mov rdi, rax	      2315	am.c	FUNCTION_61	CALL_38
0x4006875	      0xe8fda6ffff	                        call sym.am_load	      2315	am.c	FUNCTION_61	CALL_38
0x400687a	    0x488dbd50f6ff	                  lea rdi, [rbp - 0x9b0]	      2317	am.c	FUNCTION_61	CALL_39
0x4006881	    0x488d8d20f7ff	                  lea rcx, [rbp - 0x8e0]	      2317	am.c	FUNCTION_61	CALL_39
0x4006888	    0x488b9508f6ff	            mov rdx, qword [rbp - 0x9f8]	      2317	am.c	FUNCTION_61	CALL_39
0x400688f	    0x488bb510f6ff	            mov rsi, qword [rbp - 0x9f0]	      2317	am.c	FUNCTION_61	CALL_39
0x4006896	    0x8b851cf6ffff	            mov eax, dword [rbp - 0x9e4]	      2317	am.c	FUNCTION_61	CALL_39
0x400689c	    0x41b900000000	                              mov r9d, 0	      2317	am.c	FUNCTION_61	CALL_39
0x40068a2	          0x4989f8	                             mov r8, rdi	      2317	am.c	FUNCTION_61	CALL_39
0x40068a5	            0x89c7	                            mov edi, eax	      2317	am.c	FUNCTION_61	CALL_39
0x40068a7	      0xe800000000	                          call 0x40068ac	      2317	am.c	FUNCTION_61	CALL_39
0x40068ac	    0x89851cf6ffff	            mov dword [rbp - 0x9e4], eax	      2317	am.c	FUNCTION_61	CALL_39
0x40068b2	    0x8b8524f6ffff	            mov eax, dword [rbp - 0x9dc]	      2319	am.c	FUNCTION_61	IF_3
0x40068b8	            0x85c0	                           test eax, eax	      2319	am.c	FUNCTION_61	IF_3
0x40068ba	            0x7824	                            js 0x40068e0	      2319	am.c	FUNCTION_61	IF_3
0x40068bc	      0xbf00000000	                              mov edi, 0	      2320	am.c	FUNCTION_61	IF_3	CALL_41
0x40068c1	      0xe87099ffff	                               call sym.	      2320	am.c	FUNCTION_61	IF_3	CALL_41
0x40068c6	          0x4889c2	                            mov rdx, rax	      2320	am.c	FUNCTION_61	IF_3	CALL_41
0x40068c9	    0x488b05000000	            mov rax, qword [0x040068d0] 	      2320	am.c	FUNCTION_61	IF_3	CALL_41
0x40068d0	          0x4889d6	                            mov rsi, rdx	      2320	am.c	FUNCTION_61	IF_3	CALL_41
0x40068d3	          0x4889c7	                            mov rdi, rax	      2320	am.c	FUNCTION_61	IF_3	CALL_41
0x40068d6	      0xb800000000	                              mov eax, 0	      2320	am.c	FUNCTION_61	IF_3	CALL_41
0x40068db	      0xe800000000	                          call 0x40068e0	      2320	am.c	FUNCTION_61	IF_3	CALL_41
0x40068e0	      0xbf01000000	                              mov edi, 1	      2324	am.c	FUNCTION_61	CALL_42
0x40068e5	      0xe800000000	                          call 0x40068ea	      2324	am.c	FUNCTION_61	CALL_42
0x40068ea	      0xbe00000000	                              mov esi, 0	      2326	am.c	FUNCTION_61	IF_4	CALL_43
0x40068ef	      0xbf00000000	                              mov edi, 0	      2326	am.c	FUNCTION_61	IF_4	CALL_43
0x40068f4	      0xe800000000	                          call 0x40068f9	      2326	am.c	FUNCTION_61	IF_4	CALL_43
0x40068f9	            0x85c0	                           test eax, eax	      2326	am.c	FUNCTION_61	IF_4	CALL_43
0x40068fb	            0x7917	                           jns 0x4006914	      2326	am.c	FUNCTION_61	IF_4	CALL_43
0x40068fd	      0xbf00000000	                              mov edi, 0	      2327	am.c	FUNCTION_61	CALL_45
0x4006902	      0xe82f99ffff	                               call sym.	      2327	am.c	FUNCTION_61	CALL_45
0x4006907	          0x4889c7	                            mov rdi, rax	      2327	am.c	FUNCTION_61	CALL_45
0x400690a	      0xb800000000	                              mov eax, 0	      2327	am.c	FUNCTION_61	CALL_45
0x400690f	      0xe800000000	                          call 0x4006914	      2327	am.c	FUNCTION_61	CALL_45
0x4006914	    0x83bd3cf6ffff	              cmp dword [rbp - 0x9c4], 0	      2329	am.c	FUNCTION_61	IF_5
0x400691b	            0x7479	                            je 0x4006996	      2329	am.c	FUNCTION_61	IF_5
0x400691d	    0x83bd1cf6ffff	              cmp dword [rbp - 0x9e4], 0	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_46
0x4006924	            0x7518	                           jne 0x400693e	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_46
0x4006926	    0x8b8530f6ffff	            mov eax, dword [rbp - 0x9d0]	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_46
0x400692c	            0x85c0	                           test eax, eax	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_46
0x400692e	            0x752f	                           jne 0x400695f	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_46
0x4006930	      0xbf00000000	                              mov edi, 0	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_46
0x4006935	      0xe800000000	                          call 0x400693a	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_46
0x400693a	            0x85c0	                           test eax, eax	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_46
0x400693c	            0x7521	                           jne 0x400695f	      2341	am.c	FUNCTION_61	IF_5	IF_6	CALL_46
0x400693e	    0x488b9d70f6ff	            mov rbx, qword [rbp - 0x990]	      2342	am.c	FUNCTION_61	IF_5	IF_6	CALL_48
0x4006945	      0xbf00000000	                              mov edi, 0	      2342	am.c	FUNCTION_61	IF_5	IF_6	CALL_48
0x400694a	      0xe8e798ffff	                               call sym.	      2342	am.c	FUNCTION_61	IF_5	IF_6	CALL_48
0x400694f	          0x4889de	                            mov rsi, rbx	      2342	am.c	FUNCTION_61	IF_5	IF_6	CALL_48
0x4006952	          0x4889c7	                            mov rdi, rax	      2342	am.c	FUNCTION_61	IF_5	IF_6	CALL_48
0x4006955	      0xb800000000	                              mov eax, 0	      2342	am.c	FUNCTION_61	IF_5	IF_6	CALL_48
0x400695a	      0xe800000000	                          call 0x400695f	      2342	am.c	FUNCTION_61	IF_5	IF_6	CALL_48
0x400695f	    0x8b8530f6ffff	            mov eax, dword [rbp - 0x9d0]	      2345	am.c	FUNCTION_61	IF_5	IF_7
0x4006965	            0x85c0	                           test eax, eax	      2345	am.c	FUNCTION_61	IF_5	IF_7
0x4006967	            0x750a	                           jne 0x4006973	      2345	am.c	FUNCTION_61	IF_5	IF_7
0x4006969	    0xc78530f6ffff	              mov dword [rbp - 0x9d0], 1	      2346	am.c	FUNCTION_61	IF_5	IF_7
0x4006973	    0x8b85ccf6ffff	            mov eax, dword [rbp - 0x934]	      2348	am.c	FUNCTION_61	IF_5	IF_8
0x4006979	          0x83f802	                              cmp eax, 2	      2348	am.c	FUNCTION_61	IF_5	IF_8
0x400697c	     0xf85da010000	                           jne 0x4006b5c	      2348	am.c	FUNCTION_61	IF_5	IF_8
0x4006982	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2349	am.c	FUNCTION_61	IF_5	CALL_49
0x4006989	          0x4889c7	                            mov rdi, rax	      2349	am.c	FUNCTION_61	IF_5	CALL_49
0x400698c	      0xe8c1c5ffff	              call sym.am_append_signoff	      2349	am.c	FUNCTION_61	IF_5	CALL_49
0x4006991	      0xe9c6010000	                           jmp 0x4006b5c	      2349	am.c	FUNCTION_61	IF_5	CALL_49
0x4006996	    0x48c78540f6ff	              mov qword [rbp - 0x9c0], 0	      2351	am.c	FUNCTION_61	ELSE_1
0x40069a1	    0xc78548f6ffff	              mov dword [rbp - 0x9b8], 0	      2351	am.c	FUNCTION_61	ELSE_1
0x40069ab	    0xc7854cf6ffff	              mov dword [rbp - 0x9b4], 0	      2351	am.c	FUNCTION_61	ELSE_1
0x40069b5	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_50
0x40069bc	          0x4889c7	                            mov rdi, rax	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_50
0x40069bf	      0xe800000000	                          call 0x40069c4	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_50
0x40069c4	            0x85c0	                           test eax, eax	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_50
0x40069c6	            0x7469	                            je 0x4006a31	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_50
0x40069c8	    0x8b8510f7ffff	            mov eax, dword [rbp - 0x8f0]	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_50
0x40069ce	            0x85c0	                           test eax, eax	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_50
0x40069d0	            0x755f	                           jne 0x4006a31	      2359	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_50
0x40069d2	    0x8b8530f6ffff	            mov eax, dword [rbp - 0x9d0]	      2360	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x40069d8	          0x83f804	                              cmp eax, 4	      2360	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x40069db	            0x740b	                            je 0x40069e8	      2360	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x40069dd	    0x8b8530f6ffff	            mov eax, dword [rbp - 0x9d0]	      2360	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x40069e3	          0x83f805	                              cmp eax, 5	      2360	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x40069e6	            0x7528	                           jne 0x4006a10	      2360	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x40069e8	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2361	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10	CALL_51
0x40069ef	          0x4889c7	                            mov rdi, rax	      2361	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10	CALL_51
0x40069f2	      0xe824aaffff	                     call sym.am_destroy	      2361	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10	CALL_51
0x40069f7	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2362	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10	CALL_52
0x40069fe	          0x4889c7	                            mov rdi, rax	      2362	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10	CALL_52
0x4006a01	      0xe8039cffff	               call sym.am_state_release	      2362	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10	CALL_52
0x4006a06	      0xb800000000	                              mov eax, 0	      2363	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x4006a0b	      0xe91a020000	                           jmp 0x4006c2a	      2363	am.c	FUNCTION_61	ELSE_1	IF_9	IF_10
0x4006a10	    0x488b9d70f6ff	            mov rbx, qword [rbp - 0x990]	      2366	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_54
0x4006a17	      0xbf00000000	                              mov edi, 0	      2366	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_54
0x4006a1c	      0xe81598ffff	                               call sym.	      2366	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_54
0x4006a21	          0x4889de	                            mov rsi, rbx	      2366	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_54
0x4006a24	          0x4889c7	                            mov rdi, rax	      2366	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_54
0x4006a27	      0xb800000000	                              mov eax, 0	      2366	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_54
0x4006a2c	      0xe800000000	                          call 0x4006a31	      2366	am.c	FUNCTION_61	ELSE_1	IF_9	CALL_54
0x4006a31	    0x8b8530f6ffff	            mov eax, dword [rbp - 0x9d0]	      2371	am.c	FUNCTION_61	ELSE_1	IF_11
0x4006a37	            0x85c0	                           test eax, eax	      2371	am.c	FUNCTION_61	ELSE_1	IF_11
0x4006a39	            0x7417	                            je 0x4006a52	      2371	am.c	FUNCTION_61	ELSE_1	IF_11
0x4006a3b	      0xbf00000000	                              mov edi, 0	      2372	am.c	FUNCTION_61	ELSE_1	CALL_56
0x4006a40	      0xe8f197ffff	                               call sym.	      2372	am.c	FUNCTION_61	ELSE_1	CALL_56
0x4006a45	          0x4889c7	                            mov rdi, rax	      2372	am.c	FUNCTION_61	ELSE_1	CALL_56
0x4006a48	      0xb800000000	                              mov eax, 0	      2372	am.c	FUNCTION_61	ELSE_1	CALL_56
0x4006a4d	      0xe800000000	                          call 0x4006a52	      2372	am.c	FUNCTION_61	ELSE_1	CALL_56
0x4006a52	    0xc78538f6ffff	              mov dword [rbp - 0x9c8], 0	      2374	am.c	FUNCTION_61	ELSE_1	FOR_1
0x4006a5c	      0xe9b6000000	                           jmp 0x4006b17	      2374	am.c	FUNCTION_61	ELSE_1	FOR_1
0x4006a61	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_57
0x4006a67	            0x4898	                                    cdqe	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_57
0x4006a69	    0x488d14c50000	                        lea rdx, [rax*8]	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_57
0x4006a71	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_57
0x4006a78	          0x4801d0	                            add rax, rdx	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_57
0x4006a7b	          0x488b00	                    mov rax, qword [rax]	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_57
0x4006a7e	          0x4889c7	                            mov rdi, rax	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_57
0x4006a81	      0xe8c898ffff	               call sym.is_absolute_path	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_57
0x4006a86	            0x85c0	                           test eax, eax	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_57
0x4006a88	            0x750a	                           jne 0x4006a94	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_57
0x4006a8a	    0x4883bd08f6ff	              cmp qword [rbp - 0x9f8], 0	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_57
0x4006a92	            0x7531	                           jne 0x4006ac5	      2375	am.c	FUNCTION_61	ELSE_1	FOR_1	IF_12	CALL_57
0x4006a94	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_58
0x4006a9a	            0x4898	                                    cdqe	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_58
0x4006a9c	    0x488d14c50000	                        lea rdx, [rax*8]	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_58
0x4006aa4	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_58
0x4006aab	          0x4801d0	                            add rax, rdx	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_58
0x4006aae	          0x488b10	                    mov rdx, qword [rax]	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_58
0x4006ab1	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_58
0x4006ab8	          0x4889d6	                            mov rsi, rdx	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_58
0x4006abb	          0x4889c7	                            mov rdi, rax	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_58
0x4006abe	      0xe800000000	                          call 0x4006ac3	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_58
0x4006ac3	            0xeb4b	                           jmp 0x4006b10	      2376	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_58
0x4006ac5	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006acb	            0x4898	                                    cdqe	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006acd	    0x488d14c50000	                        lea rdx, [rax*8]	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006ad5	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006adc	          0x4801d0	                            add rax, rdx	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006adf	          0x488b10	                    mov rdx, qword [rax]	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006ae2	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006ae9	          0x4889c6	                            mov rsi, rax	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006aec	      0xbf00000000	                              mov edi, 0	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006af1	      0xb800000000	                              mov eax, 0	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006af6	      0xe800000000	                          call 0x4006afb	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006afb	          0x4889c2	                            mov rdx, rax	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006afe	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006b05	          0x4889d6	                            mov rsi, rdx	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006b08	          0x4889c7	                            mov rdi, rax	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006b0b	      0xe800000000	                          call 0x4006b10	      2378	am.c	FUNCTION_61	ELSE_1	FOR_1	CALL_60
0x4006b10	    0x838538f6ffff	              add dword [rbp - 0x9c8], 1	      2374	am.c	FUNCTION_61	ELSE_1	FOR_1
0x4006b17	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      2374	am.c	FUNCTION_61	ELSE_1	FOR_1
0x4006b1d	    0x3b851cf6ffff	            cmp eax, dword [rbp - 0x9e4]	      2374	am.c	FUNCTION_61	ELSE_1	FOR_1
0x4006b23	     0xf8c38ffffff	                            jl 0x4006a61	      2374	am.c	FUNCTION_61	ELSE_1	FOR_1
0x4006b29	    0x8b8d28f6ffff	            mov ecx, dword [rbp - 0x9d8]	      2381	am.c	FUNCTION_61	ELSE_1	CALL_61
0x4006b2f	    0x488b9540f6ff	            mov rdx, qword [rbp - 0x9c0]	      2381	am.c	FUNCTION_61	ELSE_1	CALL_61
0x4006b36	    0x8b852cf6ffff	            mov eax, dword [rbp - 0x9d4]	      2381	am.c	FUNCTION_61	ELSE_1	CALL_61
0x4006b3c	            0x89c6	                            mov esi, eax	      2381	am.c	FUNCTION_61	ELSE_1	CALL_61
0x4006b3e	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2381	am.c	FUNCTION_61	ELSE_1	CALL_61
0x4006b45	          0x4889c7	                            mov rdi, rax	      2381	am.c	FUNCTION_61	ELSE_1	CALL_61
0x4006b48	      0xe8cdbcffff	                       call sym.am_setup	      2381	am.c	FUNCTION_61	ELSE_1	CALL_61
0x4006b4d	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      2383	am.c	FUNCTION_61	ELSE_1	CALL_62
0x4006b54	          0x4889c7	                            mov rdi, rax	      2383	am.c	FUNCTION_61	ELSE_1	CALL_62
0x4006b57	      0xe800000000	                          call 0x4006b5c	      2383	am.c	FUNCTION_61	ELSE_1	CALL_62
0x4006b5c	    0x8b8530f6ffff	            mov eax, dword [rbp - 0x9d0]	      2386	am.c	FUNCTION_61	SWITCH_1
0x4006b62	          0x83f806	                              cmp eax, 6	      2386	am.c	FUNCTION_61	SWITCH_1
0x4006b65	     0xf879b000000	                            ja 0x4006c06	      2386	am.c	FUNCTION_61	SWITCH_1
0x4006b6b	            0x89c0	                            mov eax, eax	      2386	am.c	FUNCTION_61	SWITCH_1
0x4006b6d	    0x488b04c50000	                  mov rax, qword [rax*8]	      2386	am.c	FUNCTION_61	SWITCH_1
0x4006b75	            0xffe0	                                 jmp rax	      2386	am.c	FUNCTION_61	SWITCH_1
0x4006b77	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2388	am.c	FUNCTION_61	SWITCH_1	CALL_63
0x4006b7e	      0xbe00000000	                              mov esi, 0	      2388	am.c	FUNCTION_61	SWITCH_1	CALL_63
0x4006b83	          0x4889c7	                            mov rdi, rax	      2388	am.c	FUNCTION_61	SWITCH_1	CALL_63
0x4006b86	      0xe874e0ffff	                         call sym.am_run	      2388	am.c	FUNCTION_61	SWITCH_1	CALL_63
0x4006b8b	      0xe985000000	                           jmp 0x4006c15	      2389	am.c	FUNCTION_61	SWITCH_1
0x4006b90	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2391	am.c	FUNCTION_61	SWITCH_1	CALL_64
0x4006b97	      0xbe01000000	                              mov esi, 1	      2391	am.c	FUNCTION_61	SWITCH_1	CALL_64
0x4006b9c	          0x4889c7	                            mov rdi, rax	      2391	am.c	FUNCTION_61	SWITCH_1	CALL_64
0x4006b9f	      0xe85be0ffff	                         call sym.am_run	      2391	am.c	FUNCTION_61	SWITCH_1	CALL_64
0x4006ba4	            0xeb6f	                           jmp 0x4006c15	      2392	am.c	FUNCTION_61	SWITCH_1
0x4006ba6	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2394	am.c	FUNCTION_61	SWITCH_1	CALL_65
0x4006bad	          0x4889c7	                            mov rdi, rax	      2394	am.c	FUNCTION_61	SWITCH_1	CALL_65
0x4006bb0	      0xe86ce5ffff	                     call sym.am_resolve	      2394	am.c	FUNCTION_61	SWITCH_1	CALL_65
0x4006bb5	            0xeb5e	                           jmp 0x4006c15	      2395	am.c	FUNCTION_61	SWITCH_1
0x4006bb7	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2397	am.c	FUNCTION_61	SWITCH_1	CALL_66
0x4006bbe	          0x4889c7	                            mov rdi, rax	      2397	am.c	FUNCTION_61	SWITCH_1	CALL_66
0x4006bc1	      0xe8e1ebffff	                        call sym.am_skip	      2397	am.c	FUNCTION_61	SWITCH_1	CALL_66
0x4006bc6	            0xeb4d	                           jmp 0x4006c15	      2398	am.c	FUNCTION_61	SWITCH_1
0x4006bc8	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2400	am.c	FUNCTION_61	SWITCH_1	CALL_67
0x4006bcf	          0x4889c7	                            mov rdi, rax	      2400	am.c	FUNCTION_61	SWITCH_1	CALL_67
0x4006bd2	      0xe8d0edffff	                       call sym.am_abort	      2400	am.c	FUNCTION_61	SWITCH_1	CALL_67
0x4006bd7	            0xeb3c	                           jmp 0x4006c15	      2401	am.c	FUNCTION_61	SWITCH_1
0x4006bd9	      0xe856ebffff	                call sym.am_rerere_clear	      2403	am.c	FUNCTION_61	SWITCH_1	CALL_68
0x4006bde	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2404	am.c	FUNCTION_61	SWITCH_1	CALL_69
0x4006be5	          0x4889c7	                            mov rdi, rax	      2404	am.c	FUNCTION_61	SWITCH_1	CALL_69
0x4006be8	      0xe82ea8ffff	                     call sym.am_destroy	      2404	am.c	FUNCTION_61	SWITCH_1	CALL_69
0x4006bed	            0xeb26	                           jmp 0x4006c15	      2405	am.c	FUNCTION_61	SWITCH_1
0x4006bef	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2407	am.c	FUNCTION_61	SWITCH_1	CALL_70
0x4006bf6	          0x4889c7	                            mov rdi, rax	      2407	am.c	FUNCTION_61	SWITCH_1	CALL_70
0x4006bf9	      0xe817efffff	                     call sym.show_patch	      2407	am.c	FUNCTION_61	SWITCH_1	CALL_70
0x4006bfe	    0x898534f6ffff	            mov dword [rbp - 0x9cc], eax	      2407	am.c	FUNCTION_61	SWITCH_1	CALL_70
0x4006c04	            0xeb0f	                           jmp 0x4006c15	      2408	am.c	FUNCTION_61	SWITCH_1
0x4006c06	      0xbf00000000	                              mov edi, 0	      2410	am.c	FUNCTION_61	SWITCH_1	CALL_71
0x4006c0b	      0xb800000000	                              mov eax, 0	      2410	am.c	FUNCTION_61	SWITCH_1	CALL_71
0x4006c10	      0xe800000000	                          call 0x4006c15	      2410	am.c	FUNCTION_61	SWITCH_1	CALL_71
0x4006c15	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	      2413	am.c	FUNCTION_61	CALL_72
0x4006c1c	          0x4889c7	                            mov rdi, rax	      2413	am.c	FUNCTION_61	CALL_72
0x4006c1f	      0xe8e599ffff	               call sym.am_state_release	      2413	am.c	FUNCTION_61	CALL_72
0x4006c24	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      2415	am.c	FUNCTION_61
0x4006c2a	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2416	am.c	FUNCTION_61
0x4006c2e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2416	am.c	FUNCTION_61
0x4006c37	            0x7405	                            je 0x4006c3e	      2416	am.c	FUNCTION_61
0x4006c39	      0xe800000000	                          call 0x4006c3e	      2416	am.c	FUNCTION_61
0x4006c3e	    0x4881c4f80900	                          add rsp, 0x9f8	      2416	am.c	FUNCTION_61
0x4006c45	              0x5b	                                 pop rbx	      2416	am.c	FUNCTION_61
0x4006c46	              0x5d	                                 pop rbp	      2416	am.c	FUNCTION_61
0x4006c47	              0xc3	                                     ret	      2416	am.c	FUNCTION_61
read_state_file	functions,0:IF,3:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,6	55
0x4000962	              0x55	                                push rbp	       246	am.c	FUNCTION_12
0x4000963	          0x4889e5	                            mov rbp, rsp	       246	am.c	FUNCTION_12
0x4000966	              0x53	                                push rbx	       246	am.c	FUNCTION_12
0x4000967	        0x4883ec28	                           sub rsp, 0x28	       246	am.c	FUNCTION_12
0x400096b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       246	am.c	FUNCTION_12
0x400096f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       246	am.c	FUNCTION_12
0x4000973	        0x488955d8	             mov qword [rbp - 0x28], rdx	       246	am.c	FUNCTION_12
0x4000977	          0x894dd4	             mov dword [rbp - 0x2c], ecx	       246	am.c	FUNCTION_12
0x400097a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	am.c	FUNCTION_12
0x400097e	      0xbe00000000	                              mov esi, 0	       247	am.c	FUNCTION_12
0x4000983	          0x4889c7	                            mov rdi, rax	       247	am.c	FUNCTION_12
0x4000986	      0xe86ef7ffff	                  call sym.strbuf_setlen	       247	am.c	FUNCTION_12
0x400098b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x400098f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4000993	          0x4889d6	                            mov rsi, rdx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4000996	          0x4889c7	                            mov rdi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4000999	      0xe8d9fcffff	                        call sym.am_path	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x400099e	          0x4889c1	                            mov rcx, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40009a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40009a5	      0xba00000000	                              mov edx, 0	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40009aa	          0x4889ce	                            mov rsi, rcx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40009ad	          0x4889c7	                            mov rdi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40009b0	      0xe800000000	                          call 0x40009b5	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40009b5	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40009b8	            0x781c	                            js 0x40009d6	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40009ba	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       250	am.c	FUNCTION_12	IF_1	IF_2
0x40009be	            0x740c	                            je 0x40009cc	       250	am.c	FUNCTION_12	IF_1	IF_2
0x40009c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x40009c4	          0x4889c7	                            mov rdi, rax	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x40009c7	      0xe800000000	                          call 0x40009cc	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x40009cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       253	am.c	FUNCTION_12	IF_1
0x40009d0	        0x488b4008	                mov rax, qword [rax + 8]	       253	am.c	FUNCTION_12	IF_1
0x40009d4	            0xeb43	                           jmp 0x4000a19	       253	am.c	FUNCTION_12	IF_1
0x40009d6	      0xe800000000	                          call 0x40009db	       256	am.c	FUNCTION_12	IF_3
0x40009db	            0x8b00	                    mov eax, dword [rax]	       256	am.c	FUNCTION_12	IF_3
0x40009dd	          0x83f802	                              cmp eax, 2	       256	am.c	FUNCTION_12	IF_3
0x40009e0	            0x7507	                           jne 0x40009e9	       256	am.c	FUNCTION_12	IF_3
0x40009e2	      0xb8ffffffff	                     mov eax, 0xffffffff	       257	am.c	FUNCTION_12	IF_3
0x40009e7	            0xeb30	                           jmp 0x4000a19	       257	am.c	FUNCTION_12	IF_3
0x40009e9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       259	am.c	FUNCTION_12	CALL_6
0x40009ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       259	am.c	FUNCTION_12	CALL_6
0x40009f1	          0x4889d6	                            mov rsi, rdx	       259	am.c	FUNCTION_12	CALL_6
0x40009f4	          0x4889c7	                            mov rdi, rax	       259	am.c	FUNCTION_12	CALL_6
0x40009f7	      0xe87bfcffff	                        call sym.am_path	       259	am.c	FUNCTION_12	CALL_6
0x40009fc	          0x4889c3	                            mov rbx, rax	       259	am.c	FUNCTION_12	CALL_6
0x40009ff	      0xbf00000000	                              mov edi, 0	       259	am.c	FUNCTION_12	CALL_6
0x4000a04	      0xe82df8ffff	                               call sym.	       259	am.c	FUNCTION_12	CALL_6
0x4000a09	          0x4889de	                            mov rsi, rbx	       259	am.c	FUNCTION_12	CALL_6
0x4000a0c	          0x4889c7	                            mov rdi, rax	       259	am.c	FUNCTION_12	CALL_6
0x4000a0f	      0xb800000000	                              mov eax, 0	       259	am.c	FUNCTION_12	CALL_6
0x4000a14	      0xe800000000	                          call 0x4000a19	       259	am.c	FUNCTION_12	CALL_6
0x4000a19	        0x4883c428	                           add rsp, 0x28	       260	am.c	FUNCTION_12
0x4000a1d	              0x5b	                                 pop rbx	       260	am.c	FUNCTION_12
0x4000a1e	              0x5d	                                 pop rbp	       260	am.c	FUNCTION_12
0x4000a1f	              0xc3	                                     ret	       260	am.c	FUNCTION_12
am_rerere_clear	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,2	27
0x4005734	              0x55	                                push rbp	      2029	am.c	FUNCTION_54
0x4005735	          0x4889e5	                            mov rbp, rsp	      2029	am.c	FUNCTION_54
0x4005738	        0x4883ec30	                           sub rsp, 0x30	      2029	am.c	FUNCTION_54
0x400573c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2029	am.c	FUNCTION_54
0x4005745	        0x488945f8	                mov qword [rbp - 8], rax	      2029	am.c	FUNCTION_54
0x4005749	            0x31c0	                            xor eax, eax	      2029	am.c	FUNCTION_54
0x400574b	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2030	am.c	FUNCTION_54
0x4005753	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      2030	am.c	FUNCTION_54
0x400575a	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      2030	am.c	FUNCTION_54
0x4005761	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	      2030	am.c	FUNCTION_54
0x4005765	          0x83c801	                               or eax, 1	      2030	am.c	FUNCTION_54
0x4005768	          0x8845e0	               mov byte [rbp - 0x20], al	      2030	am.c	FUNCTION_54
0x400576b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2030	am.c	FUNCTION_54
0x4005773	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2031	am.c	FUNCTION_54	CALL_1
0x4005777	          0x4889c7	                            mov rdi, rax	      2031	am.c	FUNCTION_54	CALL_1
0x400577a	      0xe800000000	                          call 0x400577f	      2031	am.c	FUNCTION_54	CALL_1
0x400577f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2032	am.c	FUNCTION_54	CALL_2
0x4005783	      0xbe01000000	                              mov esi, 1	      2032	am.c	FUNCTION_54	CALL_2
0x4005788	          0x4889c7	                            mov rdi, rax	      2032	am.c	FUNCTION_54	CALL_2
0x400578b	      0xe800000000	                          call 0x4005790	      2032	am.c	FUNCTION_54	CALL_2
0x4005790	              0x90	                                     nop	      2033	am.c	FUNCTION_54
0x4005791	        0x488b45f8	                mov rax, qword [rbp - 8]	      2033	am.c	FUNCTION_54
0x4005795	    0x644833042528	                xor rax, qword fs:[0x28]	      2033	am.c	FUNCTION_54
0x400579e	            0x7405	                            je 0x40057a5	      2033	am.c	FUNCTION_54
0x40057a0	      0xe800000000	                          call 0x40057a5	      2033	am.c	FUNCTION_54
0x40057a5	              0xc9	                                   leave	      2033	am.c	FUNCTION_54
0x40057a6	              0xc3	                                     ret	      2033	am.c	FUNCTION_54
am_skip	functions,0:IF,2:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,9	47
0x40057a7	              0x55	                                push rbp	      2039	am.c	FUNCTION_55
0x40057a8	          0x4889e5	                            mov rbp, rsp	      2039	am.c	FUNCTION_55
0x40057ab	        0x4883ec30	                           sub rsp, 0x30	      2039	am.c	FUNCTION_55
0x40057af	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2039	am.c	FUNCTION_55
0x40057b3	    0x64488b042528	                mov rax, qword fs:[0x28]	      2039	am.c	FUNCTION_55
0x40057bc	        0x488945f8	                mov qword [rbp - 8], rax	      2039	am.c	FUNCTION_55
0x40057c0	            0x31c0	                            xor eax, eax	      2039	am.c	FUNCTION_55
0x40057c2	      0xe86dffffff	                call sym.am_rerere_clear	      2042	am.c	FUNCTION_55	CALL_1
0x40057c7	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2044	am.c	FUNCTION_55	IF_1	CALL_2
0x40057cb	          0x4889c6	                            mov rsi, rax	      2044	am.c	FUNCTION_55	IF_1	CALL_2
0x40057ce	      0xbf00000000	                              mov edi, 0	      2044	am.c	FUNCTION_55	IF_1	CALL_2
0x40057d3	      0xe800000000	                          call 0x40057d8	      2044	am.c	FUNCTION_55	IF_1	CALL_2
0x40057d8	            0x85c0	                           test eax, eax	      2044	am.c	FUNCTION_55	IF_1	CALL_2
0x40057da	            0x7411	                            je 0x40057ed	      2044	am.c	FUNCTION_55	IF_1	CALL_2
0x40057dc	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2045	am.c	FUNCTION_55	CALL_3
0x40057e0	      0xbe00000000	                              mov esi, 0	      2045	am.c	FUNCTION_55	CALL_3
0x40057e5	          0x4889c7	                            mov rdi, rax	      2045	am.c	FUNCTION_55	CALL_3
0x40057e8	      0xe8ebaaffff	                        call sym.hashcpy	      2045	am.c	FUNCTION_55	CALL_3
0x40057ed	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2047	am.c	FUNCTION_55	IF_2	CALL_4
0x40057f1	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2047	am.c	FUNCTION_55	IF_2	CALL_4
0x40057f5	          0x4889d6	                            mov rsi, rdx	      2047	am.c	FUNCTION_55	IF_2	CALL_4
0x40057f8	          0x4889c7	                            mov rdi, rax	      2047	am.c	FUNCTION_55	IF_2	CALL_4
0x40057fb	      0xe886fdffff	                    call sym.clean_index	      2047	am.c	FUNCTION_55	IF_2	CALL_4
0x4005800	            0x85c0	                           test eax, eax	      2047	am.c	FUNCTION_55	IF_2	CALL_4
0x4005802	            0x7417	                            je 0x400581b	      2047	am.c	FUNCTION_55	IF_2	CALL_4
0x4005804	      0xbf00000000	                              mov edi, 0	      2048	am.c	FUNCTION_55	CALL_6
0x4005809	      0xe828aaffff	                               call sym.	      2048	am.c	FUNCTION_55	CALL_6
0x400580e	          0x4889c7	                            mov rdi, rax	      2048	am.c	FUNCTION_55	CALL_6
0x4005811	      0xb800000000	                              mov eax, 0	      2048	am.c	FUNCTION_55	CALL_6
0x4005816	      0xe800000000	                          call 0x400581b	      2048	am.c	FUNCTION_55	CALL_6
0x400581b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2050	am.c	FUNCTION_55	CALL_7
0x400581f	          0x4889c7	                            mov rdi, rax	      2050	am.c	FUNCTION_55	CALL_7
0x4005822	      0xe8efd3ffff	                        call sym.am_next	      2050	am.c	FUNCTION_55	CALL_7
0x4005827	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2051	am.c	FUNCTION_55	CALL_8
0x400582b	          0x4889c7	                            mov rdi, rax	      2051	am.c	FUNCTION_55	CALL_8
0x400582e	      0xe844b7ffff	                        call sym.am_load	      2051	am.c	FUNCTION_55	CALL_8
0x4005833	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2052	am.c	FUNCTION_55	CALL_9
0x4005837	      0xbe00000000	                              mov esi, 0	      2052	am.c	FUNCTION_55	CALL_9
0x400583c	          0x4889c7	                            mov rdi, rax	      2052	am.c	FUNCTION_55	CALL_9
0x400583f	      0xe8bbf3ffff	                         call sym.am_run	      2052	am.c	FUNCTION_55	CALL_9
0x4005844	              0x90	                                     nop	      2053	am.c	FUNCTION_55
0x4005845	        0x488b45f8	                mov rax, qword [rbp - 8]	      2053	am.c	FUNCTION_55
0x4005849	    0x644833042528	                xor rax, qword fs:[0x28]	      2053	am.c	FUNCTION_55
0x4005852	            0x7405	                            je 0x4005859	      2053	am.c	FUNCTION_55
0x4005854	      0xe800000000	                          call 0x4005859	      2053	am.c	FUNCTION_55
0x4005859	              0xc9	                                   leave	      2053	am.c	FUNCTION_55
0x400585a	              0xc3	                                     ret	      2053	am.c	FUNCTION_55
parse_tree	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,1	10
0x400038d	              0x55	                                push rbp	        21	tree.h	FUNCTION_132
0x400038e	          0x4889e5	                            mov rbp, rsp	        21	tree.h	FUNCTION_132
0x4000391	        0x4883ec10	                           sub rsp, 0x10	        21	tree.h	FUNCTION_132
0x4000395	        0x48897df8	                mov qword [rbp - 8], rdi	        21	tree.h	FUNCTION_132
0x4000399	        0x488b45f8	                mov rax, qword [rbp - 8]	        22	tree.h	FUNCTION_132	CALL_1
0x400039d	      0xbe00000000	                              mov esi, 0	        22	tree.h	FUNCTION_132	CALL_1
0x40003a2	          0x4889c7	                            mov rdi, rax	        22	tree.h	FUNCTION_132	CALL_1
0x40003a5	      0xe800000000	                          call 0x40003aa	        22	tree.h	FUNCTION_132	CALL_1
0x40003aa	              0xc9	                                   leave	        23	tree.h	FUNCTION_132
0x40003ab	              0xc3	                                     ret	        23	tree.h	FUNCTION_132
oidclr	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,1	12
0x4000329	              0x55	                                push rbp	      1016	cache.h	FUNCTION_81
0x400032a	          0x4889e5	                            mov rbp, rsp	      1016	cache.h	FUNCTION_81
0x400032d	        0x4883ec10	                           sub rsp, 0x10	      1016	cache.h	FUNCTION_81
0x4000331	        0x48897df8	                mov qword [rbp - 8], rdi	      1016	cache.h	FUNCTION_81
0x4000335	        0x488b45f8	                mov rax, qword [rbp - 8]	      1017	cache.h	FUNCTION_81	CALL_1
0x4000339	      0xba14000000	                           mov edx, 0x14	      1017	cache.h	FUNCTION_81	CALL_1
0x400033e	      0xbe00000000	                              mov esi, 0	      1017	cache.h	FUNCTION_81	CALL_1
0x4000343	          0x4889c7	                            mov rdi, rax	      1017	cache.h	FUNCTION_81	CALL_1
0x4000346	      0xe800000000	                          call 0x400034b	      1017	cache.h	FUNCTION_81	CALL_1
0x400034b	              0x90	                                     nop	      1018	cache.h	FUNCTION_81
0x400034c	              0xc9	                                   leave	      1018	cache.h	FUNCTION_81
0x400034d	              0xc3	                                     ret	      1018	cache.h	FUNCTION_81
oidcmp	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,1	12
0x400028c	              0x55	                                push rbp	       979	cache.h	FUNCTION_74
0x400028d	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_74
0x4000290	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_74
0x4000294	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_74
0x4000298	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_74
0x400029c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_74	CALL_1
0x40002a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_74	CALL_1
0x40002a4	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_74	CALL_1
0x40002a7	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_74	CALL_1
0x40002aa	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_74	CALL_1
0x40002af	              0xc9	                                   leave	       981	cache.h	FUNCTION_74
0x40002b0	              0xc3	                                     ret	       981	cache.h	FUNCTION_74
write_index_patch	functions,0:IF,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,1:CALL,9	71
0x4003b3c	              0x55	                                push rbp	      1396	am.c	FUNCTION_41
0x4003b3d	          0x4889e5	                            mov rbp, rsp	      1396	am.c	FUNCTION_41
0x4003b40	    0x4881ec000900	                          sub rsp, 0x900	      1396	am.c	FUNCTION_41
0x4003b47	    0x4889bd08f7ff	            mov qword [rbp - 0x8f8], rdi	      1396	am.c	FUNCTION_41
0x4003b4e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1396	am.c	FUNCTION_41
0x4003b57	        0x488945f8	                mov qword [rbp - 8], rax	      1396	am.c	FUNCTION_41
0x4003b5b	            0x31c0	                            xor eax, eax	      1396	am.c	FUNCTION_41
0x4003b5d	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      1402	am.c	FUNCTION_41	IF_1	CALL_1
0x4003b64	          0x4889c6	                            mov rsi, rax	      1402	am.c	FUNCTION_41	IF_1	CALL_1
0x4003b67	      0xbf00000000	                              mov edi, 0	      1402	am.c	FUNCTION_41	IF_1	CALL_1
0x4003b6c	      0xe800000000	                          call 0x4003b71	      1402	am.c	FUNCTION_41	IF_1	CALL_1
0x4003b71	            0x85c0	                           test eax, eax	      1402	am.c	FUNCTION_41	IF_1	CALL_1
0x4003b73	            0x7518	                           jne 0x4003b8d	      1402	am.c	FUNCTION_41	IF_1	CALL_1
0x4003b75	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      1403	am.c	FUNCTION_41	CALL_2
0x4003b7c	          0x4889c7	                            mov rdi, rax	      1403	am.c	FUNCTION_41	CALL_2
0x4003b7f	      0xe800000000	                          call 0x4003b84	      1403	am.c	FUNCTION_41	CALL_2
0x4003b84	    0x48898510f7ff	            mov qword [rbp - 0x8f0], rax	      1403	am.c	FUNCTION_41	CALL_2
0x4003b8b	            0xeb1e	                           jmp 0x4003bab	      1403	am.c	FUNCTION_41	CALL_2
0x4003b8d	    0x488b05000000	            mov rax, qword [0x04003b94] 	      1405	am.c	FUNCTION_41	CALL_3
0x4003b94	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1405	am.c	FUNCTION_41	CALL_3
0x4003b98	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1405	am.c	FUNCTION_41	CALL_3
0x4003b9c	          0x4889c7	                            mov rdi, rax	      1405	am.c	FUNCTION_41	CALL_3
0x4003b9f	      0xe800000000	                          call 0x4003ba4	      1405	am.c	FUNCTION_41	CALL_3
0x4003ba4	    0x48898510f7ff	            mov qword [rbp - 0x8f0], rax	      1405	am.c	FUNCTION_41	CALL_3
0x4003bab	    0x488b8508f7ff	            mov rax, qword [rbp - 0x8f8]	      1407	am.c	FUNCTION_41	CALL_5
0x4003bb2	      0xbe00000000	                              mov esi, 0	      1407	am.c	FUNCTION_41	CALL_5
0x4003bb7	          0x4889c7	                            mov rdi, rax	      1407	am.c	FUNCTION_41	CALL_5
0x4003bba	      0xe8b8caffff	                        call sym.am_path	      1407	am.c	FUNCTION_41	CALL_5
0x4003bbf	      0xbe00000000	                              mov esi, 0	      1407	am.c	FUNCTION_41	CALL_5
0x4003bc4	          0x4889c7	                            mov rdi, rax	      1407	am.c	FUNCTION_41	CALL_5
0x4003bc7	      0xe800000000	                          call 0x4003bcc	      1407	am.c	FUNCTION_41	CALL_5
0x4003bcc	    0x48898518f7ff	            mov qword [rbp - 0x8e8], rax	      1407	am.c	FUNCTION_41	CALL_5
0x4003bd3	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1408	am.c	FUNCTION_41	CALL_6
0x4003bda	      0xbe00000000	                              mov esi, 0	      1408	am.c	FUNCTION_41	CALL_6
0x4003bdf	          0x4889c7	                            mov rdi, rax	      1408	am.c	FUNCTION_41	CALL_6
0x4003be2	      0xe800000000	                          call 0x4003be7	      1408	am.c	FUNCTION_41	CALL_6
0x4003be7	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1409	am.c	FUNCTION_41
0x4003bee	          0x83c801	                               or eax, 1	      1409	am.c	FUNCTION_41
0x4003bf1	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1409	am.c	FUNCTION_41
0x4003bf7	     0xfb685bbf7ff	           movzx eax, byte [rbp - 0x845]	      1410	am.c	FUNCTION_41
0x4003bfe	          0x83c880	                      or eax, 0xffffff80	      1410	am.c	FUNCTION_41
0x4003c01	    0x8885bbf7ffff	              mov byte [rbp - 0x845], al	      1410	am.c	FUNCTION_41
0x4003c07	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1411	am.c	FUNCTION_41
0x4003c0e	          0x83c808	                               or eax, 8	      1411	am.c	FUNCTION_41
0x4003c11	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1411	am.c	FUNCTION_41
0x4003c17	    0xc78598fcffff	          mov dword [rbp - 0x368], 0x10 	      1412	am.c	FUNCTION_41
0x4003c21	    0xc78578fcffff	              mov dword [rbp - 0x388], 0	      1413	am.c	FUNCTION_41
0x4003c2b	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      1414	am.c	FUNCTION_41
0x4003c32	    0x48898538fdff	            mov qword [rbp - 0x2c8], rax	      1414	am.c	FUNCTION_41
0x4003c39	    0xc78540fdffff	              mov dword [rbp - 0x2c0], 1	      1415	am.c	FUNCTION_41
0x4003c43	    0x488b8d10f7ff	            mov rcx, qword [rbp - 0x8f0]	      1416	am.c	FUNCTION_41	CALL_7
0x4003c4a	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1416	am.c	FUNCTION_41	CALL_7
0x4003c51	      0xba00000000	                              mov edx, 0	      1416	am.c	FUNCTION_41	CALL_7
0x4003c56	          0x4889ce	                            mov rsi, rcx	      1416	am.c	FUNCTION_41	CALL_7
0x4003c59	          0x4889c7	                            mov rdi, rax	      1416	am.c	FUNCTION_41	CALL_7
0x4003c5c	      0xe800000000	                          call 0x4003c61	      1416	am.c	FUNCTION_41	CALL_7
0x4003c61	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1417	am.c	FUNCTION_41	CALL_8
0x4003c68	    0x4805f8040000	                          add rax, 0x4f8	      1417	am.c	FUNCTION_41	CALL_8
0x4003c6e	          0x4889c7	                            mov rdi, rax	      1417	am.c	FUNCTION_41	CALL_8
0x4003c71	      0xe800000000	                          call 0x4003c76	      1417	am.c	FUNCTION_41	CALL_8
0x4003c76	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1418	am.c	FUNCTION_41	CALL_9
0x4003c7d	      0xbe01000000	                              mov esi, 1	      1418	am.c	FUNCTION_41	CALL_9
0x4003c82	          0x4889c7	                            mov rdi, rax	      1418	am.c	FUNCTION_41	CALL_9
0x4003c85	      0xe800000000	                          call 0x4003c8a	      1418	am.c	FUNCTION_41	CALL_9
0x4003c8a	              0x90	                                     nop	      1419	am.c	FUNCTION_41
0x4003c8b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1419	am.c	FUNCTION_41
0x4003c8f	    0x644833042528	                xor rax, qword fs:[0x28]	      1419	am.c	FUNCTION_41
0x4003c98	            0x7405	                            je 0x4003c9f	      1419	am.c	FUNCTION_41
0x4003c9a	      0xe800000000	                          call 0x4003c9f	      1419	am.c	FUNCTION_41
0x4003c9f	              0xc9	                                   leave	      1419	am.c	FUNCTION_41
0x4003ca0	              0xc3	                                     ret	      1419	am.c	FUNCTION_41
write_commit_patch	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,6	66
0x40039df	              0x55	                                push rbp	      1369	am.c	FUNCTION_40
0x40039e0	          0x4889e5	                            mov rbp, rsp	      1369	am.c	FUNCTION_40
0x40039e3	    0x4881ece00800	                          sub rsp, 0x8e0	      1369	am.c	FUNCTION_40
0x40039ea	    0x4889bd28f7ff	            mov qword [rbp - 0x8d8], rdi	      1369	am.c	FUNCTION_40
0x40039f1	    0x4889b520f7ff	            mov qword [rbp - 0x8e0], rsi	      1369	am.c	FUNCTION_40
0x40039f8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1369	am.c	FUNCTION_40
0x4003a01	        0x488945f8	                mov qword [rbp - 8], rax	      1369	am.c	FUNCTION_40
0x4003a05	            0x31c0	                            xor eax, eax	      1369	am.c	FUNCTION_40
0x4003a07	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	      1373	am.c	FUNCTION_40	CALL_2
0x4003a0e	      0xbe00000000	                              mov esi, 0	      1373	am.c	FUNCTION_40	CALL_2
0x4003a13	          0x4889c7	                            mov rdi, rax	      1373	am.c	FUNCTION_40	CALL_2
0x4003a16	      0xe85cccffff	                        call sym.am_path	      1373	am.c	FUNCTION_40	CALL_2
0x4003a1b	      0xbe00000000	                              mov esi, 0	      1373	am.c	FUNCTION_40	CALL_2
0x4003a20	          0x4889c7	                            mov rdi, rax	      1373	am.c	FUNCTION_40	CALL_2
0x4003a23	      0xe800000000	                          call 0x4003a28	      1373	am.c	FUNCTION_40	CALL_2
0x4003a28	    0x48898538f7ff	            mov qword [rbp - 0x8c8], rax	      1373	am.c	FUNCTION_40	CALL_2
0x4003a2f	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1374	am.c	FUNCTION_40	CALL_3
0x4003a36	      0xbe00000000	                              mov esi, 0	      1374	am.c	FUNCTION_40	CALL_3
0x4003a3b	          0x4889c7	                            mov rdi, rax	      1374	am.c	FUNCTION_40	CALL_3
0x4003a3e	      0xe800000000	                          call 0x4003a43	      1374	am.c	FUNCTION_40	CALL_3
0x4003a43	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1375	am.c	FUNCTION_40
0x4003a4a	          0x83c801	                               or eax, 1	      1375	am.c	FUNCTION_40
0x4003a4d	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1375	am.c	FUNCTION_40
0x4003a53	    0xc785e0f7ffff	              mov dword [rbp - 0x820], 0	      1376	am.c	FUNCTION_40
0x4003a5d	     0xfb685bbf7ff	           movzx eax, byte [rbp - 0x845]	      1377	am.c	FUNCTION_40
0x4003a64	          0x83c880	                      or eax, 0xffffff80	      1377	am.c	FUNCTION_40
0x4003a67	    0x8885bbf7ffff	              mov byte [rbp - 0x845], al	      1377	am.c	FUNCTION_40
0x4003a6d	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1378	am.c	FUNCTION_40
0x4003a74	          0x83c804	                               or eax, 4	      1378	am.c	FUNCTION_40
0x4003a77	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1378	am.c	FUNCTION_40
0x4003a7d	    0xc78598fcffff	          mov dword [rbp - 0x368], 0x10 	      1379	am.c	FUNCTION_40
0x4003a87	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1380	am.c	FUNCTION_40
0x4003a8e	          0x83c808	                               or eax, 8	      1380	am.c	FUNCTION_40
0x4003a91	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1380	am.c	FUNCTION_40
0x4003a97	     0xfb68570fcff	           movzx eax, byte [rbp - 0x390]	      1381	am.c	FUNCTION_40
0x4003a9e	          0x83c804	                               or eax, 4	      1381	am.c	FUNCTION_40
0x4003aa1	    0x888570fcffff	              mov byte [rbp - 0x390], al	      1381	am.c	FUNCTION_40
0x4003aa7	     0xfb68570fcff	           movzx eax, byte [rbp - 0x390]	      1382	am.c	FUNCTION_40
0x4003aae	          0x83c810	                            or eax, 0x10	      1382	am.c	FUNCTION_40
0x4003ab1	    0x888570fcffff	              mov byte [rbp - 0x390], al	      1382	am.c	FUNCTION_40
0x4003ab7	    0xc78578fcffff	              mov dword [rbp - 0x388], 0	      1383	am.c	FUNCTION_40
0x4003ac1	    0x488b8538f7ff	            mov rax, qword [rbp - 0x8c8]	      1384	am.c	FUNCTION_40
0x4003ac8	    0x48898538fdff	            mov qword [rbp - 0x2c8], rax	      1384	am.c	FUNCTION_40
0x4003acf	    0xc78540fdffff	              mov dword [rbp - 0x2c0], 1	      1385	am.c	FUNCTION_40
0x4003ad9	    0x488b8d20f7ff	            mov rcx, qword [rbp - 0x8e0]	      1386	am.c	FUNCTION_40	CALL_4
0x4003ae0	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1386	am.c	FUNCTION_40	CALL_4
0x4003ae7	      0xba00000000	                              mov edx, 0	      1386	am.c	FUNCTION_40	CALL_4
0x4003aec	          0x4889ce	                            mov rsi, rcx	      1386	am.c	FUNCTION_40	CALL_4
0x4003aef	          0x4889c7	                            mov rdi, rax	      1386	am.c	FUNCTION_40	CALL_4
0x4003af2	      0xe800000000	                          call 0x4003af7	      1386	am.c	FUNCTION_40	CALL_4
0x4003af7	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1387	am.c	FUNCTION_40	CALL_5
0x4003afe	    0x4805f8040000	                          add rax, 0x4f8	      1387	am.c	FUNCTION_40	CALL_5
0x4003b04	          0x4889c7	                            mov rdi, rax	      1387	am.c	FUNCTION_40	CALL_5
0x4003b07	      0xe800000000	                          call 0x4003b0c	      1387	am.c	FUNCTION_40	CALL_5
0x4003b0c	    0x488b9520f7ff	            mov rdx, qword [rbp - 0x8e0]	      1388	am.c	FUNCTION_40	CALL_6
0x4003b13	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1388	am.c	FUNCTION_40	CALL_6
0x4003b1a	          0x4889d6	                            mov rsi, rdx	      1388	am.c	FUNCTION_40	CALL_6
0x4003b1d	          0x4889c7	                            mov rdi, rax	      1388	am.c	FUNCTION_40	CALL_6
0x4003b20	      0xe800000000	                          call 0x4003b25	      1388	am.c	FUNCTION_40	CALL_6
0x4003b25	              0x90	                                     nop	      1389	am.c	FUNCTION_40
0x4003b26	        0x488b45f8	                mov rax, qword [rbp - 8]	      1389	am.c	FUNCTION_40
0x4003b2a	    0x644833042528	                xor rax, qword fs:[0x28]	      1389	am.c	FUNCTION_40
0x4003b33	            0x7405	                            je 0x4003b3a	      1389	am.c	FUNCTION_40
0x4003b35	      0xe800000000	                          call 0x4003b3a	      1389	am.c	FUNCTION_40
0x4003b3a	              0xc9	                                   leave	      1389	am.c	FUNCTION_40
0x4003b3b	              0xc3	                                     ret	      1389	am.c	FUNCTION_40
am_load	functions,0:IF,11:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,6:CALL,45	301
0x4000f77	              0x55	                                push rbp	       402	am.c	FUNCTION_18
0x4000f78	          0x4889e5	                            mov rbp, rsp	       402	am.c	FUNCTION_18
0x4000f7b	              0x53	                                push rbx	       402	am.c	FUNCTION_18
0x4000f7c	        0x4883ec38	                           sub rsp, 0x38	       402	am.c	FUNCTION_18
0x4000f80	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       402	am.c	FUNCTION_18
0x4000f84	    0x64488b042528	                mov rax, qword fs:[0x28]	       402	am.c	FUNCTION_18
0x4000f8d	        0x488945e8	             mov qword [rbp - 0x18], rax	       402	am.c	FUNCTION_18
0x4000f91	            0x31c0	                            xor eax, eax	       402	am.c	FUNCTION_18
0x4000f93	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       403	am.c	FUNCTION_18
0x4000f9b	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       403	am.c	FUNCTION_18
0x4000fa3	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       403	am.c	FUNCTION_18
0x4000fab	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x4000faf	        0x488d45d0	                   lea rax, [rbp - 0x30]	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x4000fb3	      0xb901000000	                              mov ecx, 1	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x4000fb8	      0xba00000000	                              mov edx, 0	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x4000fbd	          0x4889c7	                            mov rdi, rax	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x4000fc0	      0xe89df9ffff	                call sym.read_state_file	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x4000fc5	            0x85c0	                           test eax, eax	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x4000fc7	            0x790f	                           jns 0x4000fd8	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x4000fc9	      0xbf00000000	                              mov edi, 0	       406	am.c	FUNCTION_18	CALL_2
0x4000fce	      0xb800000000	                              mov eax, 0	       406	am.c	FUNCTION_18	CALL_2
0x4000fd3	      0xe800000000	                          call 0x4000fd8	       406	am.c	FUNCTION_18	CALL_2
0x4000fd8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       407	am.c	FUNCTION_18	CALL_3
0x4000fdc	      0xba0a000000	                            mov edx, 0xa	       407	am.c	FUNCTION_18	CALL_3
0x4000fe1	      0xbe00000000	                              mov esi, 0	       407	am.c	FUNCTION_18	CALL_3
0x4000fe6	          0x4889c7	                            mov rdi, rax	       407	am.c	FUNCTION_18	CALL_3
0x4000fe9	      0xe800000000	                          call 0x4000fee	       407	am.c	FUNCTION_18	CALL_3
0x4000fee	            0x89c2	                            mov edx, eax	       407	am.c	FUNCTION_18	CALL_3
0x4000ff0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       407	am.c	FUNCTION_18	CALL_3
0x4000ff4	          0x895008	                mov dword [rax + 8], edx	       407	am.c	FUNCTION_18	CALL_3
0x4000ff7	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x4000ffb	        0x488d45d0	                   lea rax, [rbp - 0x30]	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x4000fff	      0xb901000000	                              mov ecx, 1	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x4001004	      0xba00000000	                              mov edx, 0	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x4001009	          0x4889c7	                            mov rdi, rax	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x400100c	      0xe851f9ffff	                call sym.read_state_file	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x4001011	            0x85c0	                           test eax, eax	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x4001013	            0x790f	                           jns 0x4001024	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x4001015	      0xbf00000000	                              mov edi, 0	       410	am.c	FUNCTION_18	CALL_5
0x400101a	      0xb800000000	                              mov eax, 0	       410	am.c	FUNCTION_18	CALL_5
0x400101f	      0xe800000000	                          call 0x4001024	       410	am.c	FUNCTION_18	CALL_5
0x4001024	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       411	am.c	FUNCTION_18	CALL_6
0x4001028	      0xba0a000000	                            mov edx, 0xa	       411	am.c	FUNCTION_18	CALL_6
0x400102d	      0xbe00000000	                              mov esi, 0	       411	am.c	FUNCTION_18	CALL_6
0x4001032	          0x4889c7	                            mov rdi, rax	       411	am.c	FUNCTION_18	CALL_6
0x4001035	      0xe800000000	                          call 0x400103a	       411	am.c	FUNCTION_18	CALL_6
0x400103a	            0x89c2	                            mov edx, eax	       411	am.c	FUNCTION_18	CALL_6
0x400103c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       411	am.c	FUNCTION_18	CALL_6
0x4001040	          0x89500c	              mov dword [rax + 0xc], edx	       411	am.c	FUNCTION_18	CALL_6
0x4001043	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       413	am.c	FUNCTION_18	IF_3	CALL_7
0x4001047	          0x4889c7	                            mov rdi, rax	       413	am.c	FUNCTION_18	IF_3	CALL_7
0x400104a	      0xe8b3faffff	             call sym.read_author_script	       413	am.c	FUNCTION_18	IF_3	CALL_7
0x400104f	            0x85c0	                           test eax, eax	       413	am.c	FUNCTION_18	IF_3	CALL_7
0x4001051	            0x7917	                           jns 0x400106a	       413	am.c	FUNCTION_18	IF_3	CALL_7
0x4001053	      0xbf00000000	                              mov edi, 0	       414	am.c	FUNCTION_18	CALL_9
0x4001058	      0xe8d9f1ffff	                               call sym.	       414	am.c	FUNCTION_18	CALL_9
0x400105d	          0x4889c7	                            mov rdi, rax	       414	am.c	FUNCTION_18	CALL_9
0x4001060	      0xb800000000	                              mov eax, 0	       414	am.c	FUNCTION_18	CALL_9
0x4001065	      0xe800000000	                          call 0x400106a	       414	am.c	FUNCTION_18	CALL_9
0x400106a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       416	am.c	FUNCTION_18	CALL_10
0x400106e	          0x4889c7	                            mov rdi, rax	       416	am.c	FUNCTION_18	CALL_10
0x4001071	      0xe8f7fdffff	                call sym.read_commit_msg	       416	am.c	FUNCTION_18	CALL_10
0x4001076	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x400107a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x400107e	      0xb901000000	                              mov ecx, 1	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x4001083	      0xba00000000	                              mov edx, 0	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x4001088	          0x4889c7	                            mov rdi, rax	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x400108b	      0xe8d2f8ffff	                call sym.read_state_file	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x4001090	            0x85c0	                           test eax, eax	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x4001092	            0x7912	                           jns 0x40010a6	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x4001094	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       419	am.c	FUNCTION_18	CALL_12
0x4001098	        0x4883c038	                           add rax, 0x38	       419	am.c	FUNCTION_18	CALL_12
0x400109c	          0x4889c7	                            mov rdi, rax	       419	am.c	FUNCTION_18	CALL_12
0x400109f	      0xe885f2ffff	                         call sym.oidclr	       419	am.c	FUNCTION_18	CALL_12
0x40010a4	            0xeb49	                           jmp 0x40010ef	       419	am.c	FUNCTION_18	CALL_12
0x40010a6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x40010aa	        0x488d5038	                   lea rdx, [rax + 0x38]	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x40010ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x40010b2	          0x4889d6	                            mov rsi, rdx	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x40010b5	          0x4889c7	                            mov rdi, rax	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x40010b8	      0xe800000000	                          call 0x40010bd	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x40010bd	            0x85c0	                           test eax, eax	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x40010bf	            0x792e	                           jns 0x40010ef	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x40010c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x40010c5	      0xbe00000000	                              mov esi, 0	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x40010ca	          0x4889c7	                            mov rdi, rax	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x40010cd	      0xe8a5f5ffff	                        call sym.am_path	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x40010d2	          0x4889c3	                            mov rbx, rax	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x40010d5	      0xbf00000000	                              mov edi, 0	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x40010da	      0xe857f1ffff	                               call sym.	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x40010df	          0x4889de	                            mov rsi, rbx	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x40010e2	          0x4889c7	                            mov rdi, rax	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x40010e5	      0xb800000000	                              mov eax, 0	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x40010ea	      0xe800000000	                          call 0x40010ef	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x40010ef	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       423	am.c	FUNCTION_18	CALL_17
0x40010f3	        0x488d45d0	                   lea rax, [rbp - 0x30]	       423	am.c	FUNCTION_18	CALL_17
0x40010f7	      0xb901000000	                              mov ecx, 1	       423	am.c	FUNCTION_18	CALL_17
0x40010fc	      0xba00000000	                              mov edx, 0	       423	am.c	FUNCTION_18	CALL_17
0x4001101	          0x4889c7	                            mov rdi, rax	       423	am.c	FUNCTION_18	CALL_17
0x4001104	      0xe859f8ffff	                call sym.read_state_file	       423	am.c	FUNCTION_18	CALL_17
0x4001109	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       424	am.c	FUNCTION_18	CALL_18
0x400110d	      0xbe00000000	                              mov esi, 0	       424	am.c	FUNCTION_18	CALL_18
0x4001112	          0x4889c7	                            mov rdi, rax	       424	am.c	FUNCTION_18	CALL_18
0x4001115	      0xe800000000	                          call 0x400111a	       424	am.c	FUNCTION_18	CALL_18
0x400111a	            0x85c0	                           test eax, eax	       424	am.c	FUNCTION_18	CALL_18
0x400111c	           0xf94c0	                                 sete al	       424	am.c	FUNCTION_18	CALL_18
0x400111f	           0xfb6d0	                           movzx edx, al	       424	am.c	FUNCTION_18	CALL_18
0x4001122	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       424	am.c	FUNCTION_18	CALL_18
0x4001126	          0x895054	             mov dword [rax + 0x54], edx	       424	am.c	FUNCTION_18	CALL_18
0x4001129	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       426	am.c	FUNCTION_18	CALL_19
0x400112d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       426	am.c	FUNCTION_18	CALL_19
0x4001131	      0xb901000000	                              mov ecx, 1	       426	am.c	FUNCTION_18	CALL_19
0x4001136	      0xba00000000	                              mov edx, 0	       426	am.c	FUNCTION_18	CALL_19
0x400113b	          0x4889c7	                            mov rdi, rax	       426	am.c	FUNCTION_18	CALL_19
0x400113e	      0xe81ff8ffff	                call sym.read_state_file	       426	am.c	FUNCTION_18	CALL_19
0x4001143	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       427	am.c	FUNCTION_18	CALL_20
0x4001147	      0xbe00000000	                              mov esi, 0	       427	am.c	FUNCTION_18	CALL_20
0x400114c	          0x4889c7	                            mov rdi, rax	       427	am.c	FUNCTION_18	CALL_20
0x400114f	      0xe800000000	                          call 0x4001154	       427	am.c	FUNCTION_18	CALL_20
0x4001154	            0x85c0	                           test eax, eax	       427	am.c	FUNCTION_18	CALL_20
0x4001156	           0xf94c0	                                 sete al	       427	am.c	FUNCTION_18	CALL_20
0x4001159	           0xfb6d0	                           movzx edx, al	       427	am.c	FUNCTION_18	CALL_20
0x400115c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       427	am.c	FUNCTION_18	CALL_20
0x4001160	          0x895058	             mov dword [rax + 0x58], edx	       427	am.c	FUNCTION_18	CALL_20
0x4001163	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       429	am.c	FUNCTION_18	CALL_21
0x4001167	        0x488d45d0	                   lea rax, [rbp - 0x30]	       429	am.c	FUNCTION_18	CALL_21
0x400116b	      0xb901000000	                              mov ecx, 1	       429	am.c	FUNCTION_18	CALL_21
0x4001170	      0xba00000000	                              mov edx, 0	       429	am.c	FUNCTION_18	CALL_21
0x4001175	          0x4889c7	                            mov rdi, rax	       429	am.c	FUNCTION_18	CALL_21
0x4001178	      0xe8e5f7ffff	                call sym.read_state_file	       429	am.c	FUNCTION_18	CALL_21
0x400117d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       430	am.c	FUNCTION_18	CALL_22
0x4001181	      0xbe00000000	                              mov esi, 0	       430	am.c	FUNCTION_18	CALL_22
0x4001186	          0x4889c7	                            mov rdi, rax	       430	am.c	FUNCTION_18	CALL_22
0x4001189	      0xe800000000	                          call 0x400118e	       430	am.c	FUNCTION_18	CALL_22
0x400118e	            0x85c0	                           test eax, eax	       430	am.c	FUNCTION_18	CALL_22
0x4001190	           0xf94c0	                                 sete al	       430	am.c	FUNCTION_18	CALL_22
0x4001193	           0xfb6d0	                           movzx edx, al	       430	am.c	FUNCTION_18	CALL_22
0x4001196	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       430	am.c	FUNCTION_18	CALL_22
0x400119a	          0x89505c	             mov dword [rax + 0x5c], edx	       430	am.c	FUNCTION_18	CALL_22
0x400119d	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       432	am.c	FUNCTION_18	CALL_23
0x40011a1	        0x488d45d0	                   lea rax, [rbp - 0x30]	       432	am.c	FUNCTION_18	CALL_23
0x40011a5	      0xb901000000	                              mov ecx, 1	       432	am.c	FUNCTION_18	CALL_23
0x40011aa	      0xba00000000	                              mov edx, 0	       432	am.c	FUNCTION_18	CALL_23
0x40011af	          0x4889c7	                            mov rdi, rax	       432	am.c	FUNCTION_18	CALL_23
0x40011b2	      0xe8abf7ffff	                call sym.read_state_file	       432	am.c	FUNCTION_18	CALL_23
0x40011b7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       433	am.c	FUNCTION_18	CALL_24
0x40011bb	      0xbe00000000	                              mov esi, 0	       433	am.c	FUNCTION_18	CALL_24
0x40011c0	          0x4889c7	                            mov rdi, rax	       433	am.c	FUNCTION_18	CALL_24
0x40011c3	      0xe800000000	                          call 0x40011c8	       433	am.c	FUNCTION_18	CALL_24
0x40011c8	            0x85c0	                           test eax, eax	       433	am.c	FUNCTION_18	CALL_24
0x40011ca	           0xf94c0	                                 sete al	       433	am.c	FUNCTION_18	CALL_24
0x40011cd	           0xfb6d0	                           movzx edx, al	       433	am.c	FUNCTION_18	CALL_24
0x40011d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       433	am.c	FUNCTION_18	CALL_24
0x40011d4	          0x895060	             mov dword [rax + 0x60], edx	       433	am.c	FUNCTION_18	CALL_24
0x40011d7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40011db	      0xbe00000000	                              mov esi, 0	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40011e0	          0x4889c7	                            mov rdi, rax	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40011e3	      0xe88ff4ffff	                        call sym.am_path	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40011e8	          0x4889c7	                            mov rdi, rax	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40011eb	      0xe800000000	                          call 0x40011f0	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40011f0	            0x85c0	                           test eax, eax	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40011f2	            0x7447	                            je 0x400123b	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40011f4	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x40011f8	        0x488d45d0	                   lea rax, [rbp - 0x30]	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x40011fc	      0xb901000000	                              mov ecx, 1	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x4001201	      0xba00000000	                              mov edx, 0	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x4001206	          0x4889c7	                            mov rdi, rax	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x4001209	      0xe854f7ffff	                call sym.read_state_file	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x400120e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x4001212	      0xbe00000000	                              mov esi, 0	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x4001217	          0x4889c7	                            mov rdi, rax	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x400121a	      0xe800000000	                          call 0x400121f	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x400121f	            0x85c0	                           test eax, eax	       438	am.c	FUNCTION_18	IF_6
0x4001221	            0x7407	                            je 0x400122a	       438	am.c	FUNCTION_18	IF_6
0x4001223	      0xba02000000	                              mov edx, 2	       438	am.c	FUNCTION_18	IF_6
0x4001228	            0xeb05	                           jmp 0x400122f	       438	am.c	FUNCTION_18	IF_6
0x400122a	      0xba01000000	                              mov edx, 1	       438	am.c	FUNCTION_18	IF_6
0x400122f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x4001233	    0x899090000000	             mov dword [rax + 0x90], edx	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x4001239	            0xeb0e	                           jmp 0x4001249	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x400123b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       440	am.c	FUNCTION_18	ELSE_2
0x400123f	    0xc78090000000	               mov dword [rax + 0x90], 0	       440	am.c	FUNCTION_18	ELSE_2
0x4001249	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       443	am.c	FUNCTION_18	CALL_29
0x400124d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       443	am.c	FUNCTION_18	CALL_29
0x4001251	      0xb901000000	                              mov ecx, 1	       443	am.c	FUNCTION_18	CALL_29
0x4001256	      0xba00000000	                              mov edx, 0	       443	am.c	FUNCTION_18	CALL_29
0x400125b	          0x4889c7	                            mov rdi, rax	       443	am.c	FUNCTION_18	CALL_29
0x400125e	      0xe8fff6ffff	                call sym.read_state_file	       443	am.c	FUNCTION_18	CALL_29
0x4001263	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4001267	      0xbe00000000	                              mov esi, 0	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x400126c	          0x4889c7	                            mov rdi, rax	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x400126f	      0xe800000000	                          call 0x4001274	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4001274	            0x85c0	                           test eax, eax	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4001276	            0x750d	                           jne 0x4001285	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4001278	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       445	am.c	FUNCTION_18	IF_7
0x400127c	    0xc74064010000	               mov dword [rax + 0x64], 1	       445	am.c	FUNCTION_18	IF_7
0x4001283	            0xeb2d	                           jmp 0x40012b2	       445	am.c	FUNCTION_18	IF_7
0x4001285	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x4001289	      0xbe00000000	                              mov esi, 0	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x400128e	          0x4889c7	                            mov rdi, rax	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x4001291	      0xe800000000	                          call 0x4001296	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x4001296	            0x85c0	                           test eax, eax	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x4001298	            0x750d	                           jne 0x40012a7	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x400129a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       447	am.c	FUNCTION_18	ELSE_3	IF_8
0x400129e	    0xc74064020000	               mov dword [rax + 0x64], 2	       447	am.c	FUNCTION_18	ELSE_3	IF_8
0x40012a5	            0xeb0b	                           jmp 0x40012b2	       447	am.c	FUNCTION_18	ELSE_3	IF_8
0x40012a7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       449	am.c	FUNCTION_18	ELSE_4
0x40012ab	    0xc74064000000	               mov dword [rax + 0x64], 0	       449	am.c	FUNCTION_18	ELSE_4
0x40012b2	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       451	am.c	FUNCTION_18	CALL_32
0x40012b6	        0x488d45d0	                   lea rax, [rbp - 0x30]	       451	am.c	FUNCTION_18	CALL_32
0x40012ba	      0xb901000000	                              mov ecx, 1	       451	am.c	FUNCTION_18	CALL_32
0x40012bf	      0xba00000000	                              mov edx, 0	       451	am.c	FUNCTION_18	CALL_32
0x40012c4	          0x4889c7	                            mov rdi, rax	       451	am.c	FUNCTION_18	CALL_32
0x40012c7	      0xe896f6ffff	                call sym.read_state_file	       451	am.c	FUNCTION_18	CALL_32
0x40012cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       452	am.c	FUNCTION_18	CALL_33
0x40012d0	      0xbe00000000	                              mov esi, 0	       452	am.c	FUNCTION_18	CALL_33
0x40012d5	          0x4889c7	                            mov rdi, rax	       452	am.c	FUNCTION_18	CALL_33
0x40012d8	      0xe800000000	                          call 0x40012dd	       452	am.c	FUNCTION_18	CALL_33
0x40012dd	            0x85c0	                           test eax, eax	       452	am.c	FUNCTION_18	CALL_33
0x40012df	           0xf94c0	                                 sete al	       452	am.c	FUNCTION_18	CALL_33
0x40012e2	           0xfb6d0	                           movzx edx, al	       452	am.c	FUNCTION_18	CALL_33
0x40012e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       452	am.c	FUNCTION_18	CALL_33
0x40012e9	          0x895068	             mov dword [rax + 0x68], edx	       452	am.c	FUNCTION_18	CALL_33
0x40012ec	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       454	am.c	FUNCTION_18	CALL_34
0x40012f0	        0x488d45d0	                   lea rax, [rbp - 0x30]	       454	am.c	FUNCTION_18	CALL_34
0x40012f4	      0xb901000000	                              mov ecx, 1	       454	am.c	FUNCTION_18	CALL_34
0x40012f9	      0xba00000000	                              mov edx, 0	       454	am.c	FUNCTION_18	CALL_34
0x40012fe	          0x4889c7	                            mov rdi, rax	       454	am.c	FUNCTION_18	CALL_34
0x4001301	      0xe85cf6ffff	                call sym.read_state_file	       454	am.c	FUNCTION_18	CALL_34
0x4001306	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x400130a	      0xbe00000000	                              mov esi, 0	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x400130f	          0x4889c7	                            mov rdi, rax	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x4001312	      0xe800000000	                          call 0x4001317	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x4001317	            0x85c0	                           test eax, eax	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x4001319	            0x750d	                           jne 0x4001328	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x400131b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       456	am.c	FUNCTION_18	IF_9
0x400131f	    0xc7406c010000	               mov dword [rax + 0x6c], 1	       456	am.c	FUNCTION_18	IF_9
0x4001326	            0xeb2d	                           jmp 0x4001355	       456	am.c	FUNCTION_18	IF_9
0x4001328	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x400132c	      0xbe00000000	                              mov esi, 0	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x4001331	          0x4889c7	                            mov rdi, rax	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x4001334	      0xe800000000	                          call 0x4001339	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x4001339	            0x85c0	                           test eax, eax	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x400133b	            0x750d	                           jne 0x400134a	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x400133d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       458	am.c	FUNCTION_18	ELSE_5	IF_10
0x4001341	    0xc7406c000000	               mov dword [rax + 0x6c], 0	       458	am.c	FUNCTION_18	ELSE_5	IF_10
0x4001348	            0xeb0b	                           jmp 0x4001355	       458	am.c	FUNCTION_18	ELSE_5	IF_10
0x400134a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       460	am.c	FUNCTION_18	ELSE_6
0x400134e	    0xc7406cffffff	     mov dword [rax + 0x6c], 0xffffffff 	       460	am.c	FUNCTION_18	ELSE_6
0x4001355	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       462	am.c	FUNCTION_18	CALL_37
0x4001359	        0x488d45d0	                   lea rax, [rbp - 0x30]	       462	am.c	FUNCTION_18	CALL_37
0x400135d	      0xb901000000	                              mov ecx, 1	       462	am.c	FUNCTION_18	CALL_37
0x4001362	      0xba00000000	                              mov edx, 0	       462	am.c	FUNCTION_18	CALL_37
0x4001367	          0x4889c7	                            mov rdi, rax	       462	am.c	FUNCTION_18	CALL_37
0x400136a	      0xe8f3f5ffff	                call sym.read_state_file	       462	am.c	FUNCTION_18	CALL_37
0x400136f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       463	am.c	FUNCTION_18	CALL_38
0x4001373	        0x4883c070	                           add rax, 0x70	       463	am.c	FUNCTION_18	CALL_38
0x4001377	          0x4889c7	                            mov rdi, rax	       463	am.c	FUNCTION_18	CALL_38
0x400137a	      0xe800000000	                          call 0x400137f	       463	am.c	FUNCTION_18	CALL_38
0x400137f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x4001383	        0x488d5070	                   lea rdx, [rax + 0x70]	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x4001387	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x400138b	          0x4889d6	                            mov rsi, rdx	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x400138e	          0x4889c7	                            mov rdi, rax	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x4001391	      0xe800000000	                          call 0x4001396	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x4001396	            0x85c0	                           test eax, eax	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x4001398	            0x792e	                           jns 0x40013c8	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x400139a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       465	am.c	FUNCTION_18	CALL_42
0x400139e	      0xbe00000000	                              mov esi, 0	       465	am.c	FUNCTION_18	CALL_42
0x40013a3	          0x4889c7	                            mov rdi, rax	       465	am.c	FUNCTION_18	CALL_42
0x40013a6	      0xe8ccf2ffff	                        call sym.am_path	       465	am.c	FUNCTION_18	CALL_42
0x40013ab	          0x4889c3	                            mov rbx, rax	       465	am.c	FUNCTION_18	CALL_42
0x40013ae	      0xbf00000000	                              mov edi, 0	       465	am.c	FUNCTION_18	CALL_42
0x40013b3	      0xe87eeeffff	                               call sym.	       465	am.c	FUNCTION_18	CALL_42
0x40013b8	          0x4889de	                            mov rsi, rbx	       465	am.c	FUNCTION_18	CALL_42
0x40013bb	          0x4889c7	                            mov rdi, rax	       465	am.c	FUNCTION_18	CALL_42
0x40013be	      0xb800000000	                              mov eax, 0	       465	am.c	FUNCTION_18	CALL_42
0x40013c3	      0xe800000000	                          call 0x40013c8	       465	am.c	FUNCTION_18	CALL_42
0x40013c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       467	am.c	FUNCTION_18	CALL_44
0x40013cc	      0xbe00000000	                              mov esi, 0	       467	am.c	FUNCTION_18	CALL_44
0x40013d1	          0x4889c7	                            mov rdi, rax	       467	am.c	FUNCTION_18	CALL_44
0x40013d4	      0xe89ef2ffff	                        call sym.am_path	       467	am.c	FUNCTION_18	CALL_44
0x40013d9	          0x4889c7	                            mov rdi, rax	       467	am.c	FUNCTION_18	CALL_44
0x40013dc	      0xe800000000	                          call 0x40013e1	       467	am.c	FUNCTION_18	CALL_44
0x40013e1	            0x85c0	                           test eax, eax	       467	am.c	FUNCTION_18	CALL_44
0x40013e3	           0xf95c0	                                setne al	       467	am.c	FUNCTION_18	CALL_44
0x40013e6	           0xfb6d0	                           movzx edx, al	       467	am.c	FUNCTION_18	CALL_44
0x40013e9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       467	am.c	FUNCTION_18	CALL_44
0x40013ed	    0x8990a0000000	             mov dword [rax + 0xa0], edx	       467	am.c	FUNCTION_18	CALL_44
0x40013f3	        0x488d45d0	                   lea rax, [rbp - 0x30]	       469	am.c	FUNCTION_18	CALL_45
0x40013f7	          0x4889c7	                            mov rdi, rax	       469	am.c	FUNCTION_18	CALL_45
0x40013fa	      0xe800000000	                          call 0x40013ff	       469	am.c	FUNCTION_18	CALL_45
0x40013ff	              0x90	                                     nop	       470	am.c	FUNCTION_18
0x4001400	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       470	am.c	FUNCTION_18
0x4001404	    0x644833042528	                xor rax, qword fs:[0x28]	       470	am.c	FUNCTION_18
0x400140d	            0x7405	                            je 0x4001414	       470	am.c	FUNCTION_18
0x400140f	      0xe800000000	                          call 0x4001414	       470	am.c	FUNCTION_18
0x4001414	        0x4883c438	                           add rsp, 0x38	       470	am.c	FUNCTION_18
0x4001418	              0x5b	                                 pop rbx	       470	am.c	FUNCTION_18
0x4001419	              0x5d	                                 pop rbp	       470	am.c	FUNCTION_18
0x400141a	              0xc3	                                     ret	       470	am.c	FUNCTION_18
str_isspace	functions,0:IF,1:FOR,1:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,0	23
0x40004d5	              0x55	                                push rbp	        64	am.c	FUNCTION_3
0x40004d6	          0x4889e5	                            mov rbp, rsp	        64	am.c	FUNCTION_3
0x40004d9	        0x48897df8	                mov qword [rbp - 8], rdi	        64	am.c	FUNCTION_3
0x40004dd	            0xeb29	                           jmp 0x4000508	        65	am.c	FUNCTION_3	FOR_1
0x40004df	        0x488b45f8	                mov rax, qword [rbp - 8]	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40004e3	           0xfb600	                   movzx eax, byte [rax]	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40004e6	           0xfb6c0	                           movzx eax, al	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40004e9	            0x4898	                                    cdqe	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40004eb	     0xfb680000000	                   movzx eax, byte [rax]	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40004f2	           0xfb6c0	                           movzx eax, al	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40004f5	          0x83e001	                              and eax, 1	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40004f8	            0x85c0	                           test eax, eax	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40004fa	            0x7507	                           jne 0x4000503	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40004fc	      0xb800000000	                              mov eax, 0	        67	am.c	FUNCTION_3	FOR_1	IF_1
0x4000501	            0xeb15	                           jmp 0x4000518	        67	am.c	FUNCTION_3	FOR_1	IF_1
0x4000503	      0x488345f801	                  add qword [rbp - 8], 1	        65	am.c	FUNCTION_3	FOR_1
0x4000508	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	am.c	FUNCTION_3	FOR_1
0x400050c	           0xfb600	                   movzx eax, byte [rax]	        65	am.c	FUNCTION_3	FOR_1
0x400050f	            0x84c0	                             test al, al	        65	am.c	FUNCTION_3	FOR_1
0x4000511	            0x75cc	                           jne 0x40004df	        65	am.c	FUNCTION_3	FOR_1
0x4000513	      0xb801000000	                              mov eax, 1	        69	am.c	FUNCTION_3
0x4000518	              0x5d	                                 pop rbp	        70	am.c	FUNCTION_3
0x4000519	              0xc3	                                     ret	        70	am.c	FUNCTION_3
am_state_init	functions,0:IF,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,6	59
0x400051a	              0x55	                                push rbp	       142	am.c	FUNCTION_4
0x400051b	          0x4889e5	                            mov rbp, rsp	       142	am.c	FUNCTION_4
0x400051e	        0x4883ec20	                           sub rsp, 0x20	       142	am.c	FUNCTION_4
0x4000522	        0x48897de8	             mov qword [rbp - 0x18], rdi	       142	am.c	FUNCTION_4
0x4000526	    0x64488b042528	                mov rax, qword fs:[0x28]	       142	am.c	FUNCTION_4
0x400052f	        0x488945f8	                mov qword [rbp - 8], rax	       142	am.c	FUNCTION_4
0x4000533	            0x31c0	                            xor eax, eax	       142	am.c	FUNCTION_4
0x4000535	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       145	am.c	FUNCTION_4	CALL_1
0x4000539	      0xbaa8000000	                           mov edx, 0xa8	       145	am.c	FUNCTION_4	CALL_1
0x400053e	      0xbe00000000	                              mov esi, 0	       145	am.c	FUNCTION_4	CALL_1
0x4000543	          0x4889c7	                            mov rdi, rax	       145	am.c	FUNCTION_4	CALL_1
0x4000546	      0xe800000000	                          call 0x400054b	       145	am.c	FUNCTION_4	CALL_1
0x400054b	      0xbf00000000	                              mov edi, 0	       147	am.c	FUNCTION_4	CALL_2
0x4000550	      0xb800000000	                              mov eax, 0	       147	am.c	FUNCTION_4	CALL_2
0x4000555	      0xe800000000	                          call 0x400055a	       147	am.c	FUNCTION_4	CALL_2
0x400055a	          0x4889c2	                            mov rdx, rax	       147	am.c	FUNCTION_4	CALL_2
0x400055d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       147	am.c	FUNCTION_4	CALL_2
0x4000561	          0x488910	                    mov qword [rax], rdx	       147	am.c	FUNCTION_4	CALL_2
0x4000564	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	am.c	FUNCTION_4
0x4000568	    0xc7404c040000	               mov dword [rax + 0x4c], 4	       149	am.c	FUNCTION_4
0x400056f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       151	am.c	FUNCTION_4	CALL_3
0x4000573	        0x4883c054	                           add rax, 0x54	       151	am.c	FUNCTION_4	CALL_3
0x4000577	          0x4889c6	                            mov rsi, rax	       151	am.c	FUNCTION_4	CALL_3
0x400057a	      0xbf00000000	                              mov edi, 0	       151	am.c	FUNCTION_4	CALL_3
0x400057f	      0xe800000000	                          call 0x4000584	       151	am.c	FUNCTION_4	CALL_3
0x4000584	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       153	am.c	FUNCTION_4
0x4000588	    0xc74060010000	               mov dword [rax + 0x60], 1	       153	am.c	FUNCTION_4
0x400058f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       155	am.c	FUNCTION_4	CALL_4
0x4000593	        0x4883c068	                           add rax, 0x68	       155	am.c	FUNCTION_4	CALL_4
0x4000597	          0x4889c6	                            mov rsi, rax	       155	am.c	FUNCTION_4	CALL_4
0x400059a	      0xbf00000000	                              mov edi, 0	       155	am.c	FUNCTION_4	CALL_4
0x400059f	      0xe800000000	                          call 0x40005a4	       155	am.c	FUNCTION_4	CALL_4
0x40005a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	am.c	FUNCTION_4
0x40005a8	    0xc7406cffffff	     mov dword [rax + 0x6c], 0xffffffff 	       157	am.c	FUNCTION_4
0x40005af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	am.c	FUNCTION_4	CALL_5
0x40005b3	        0x4883c070	                           add rax, 0x70	       159	am.c	FUNCTION_4	CALL_5
0x40005b7	          0x4889c7	                            mov rdi, rax	       159	am.c	FUNCTION_4	CALL_5
0x40005ba	      0xe800000000	                          call 0x40005bf	       159	am.c	FUNCTION_4	CALL_5
0x40005bf	        0x488d45f4	                    lea rax, [rbp - 0xc]	       161	am.c	FUNCTION_4	IF_1	CALL_6
0x40005c3	          0x4889c6	                            mov rsi, rax	       161	am.c	FUNCTION_4	IF_1	CALL_6
0x40005c6	      0xbf00000000	                              mov edi, 0	       161	am.c	FUNCTION_4	IF_1	CALL_6
0x40005cb	      0xe800000000	                          call 0x40005d0	       161	am.c	FUNCTION_4	IF_1	CALL_6
0x40005d0	            0x85c0	                           test eax, eax	       161	am.c	FUNCTION_4	IF_1	CALL_6
0x40005d2	            0x751e	                           jne 0x40005f2	       161	am.c	FUNCTION_4	IF_1	CALL_6
0x40005d4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       162	am.c	FUNCTION_4	IF_1
0x40005d7	            0x85c0	                           test eax, eax	       162	am.c	FUNCTION_4	IF_1
0x40005d9	            0x7407	                            je 0x40005e2	       162	am.c	FUNCTION_4	IF_1
0x40005db	      0xba00000000	                              mov edx, 0	       162	am.c	FUNCTION_4	IF_1
0x40005e0	            0xeb05	                           jmp 0x40005e7	       162	am.c	FUNCTION_4	IF_1
0x40005e2	      0xba00000000	                              mov edx, 0	       162	am.c	FUNCTION_4	IF_1
0x40005e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       162	am.c	FUNCTION_4	IF_1
0x40005eb	    0x488990980000	             mov qword [rax + 0x98], rdx	       162	am.c	FUNCTION_4	IF_1
0x40005f2	              0x90	                                     nop	       163	am.c	FUNCTION_4
0x40005f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       163	am.c	FUNCTION_4
0x40005f7	    0x644833042528	                xor rax, qword fs:[0x28]	       163	am.c	FUNCTION_4
0x4000600	            0x7405	                            je 0x4000607	       163	am.c	FUNCTION_4
0x4000602	      0xe800000000	                          call 0x4000607	       163	am.c	FUNCTION_4
0x4000607	              0xc9	                                   leave	       163	am.c	FUNCTION_4
0x4000608	              0xc3	                                     ret	       163	am.c	FUNCTION_4
parse_opt_patchformat	functions,0:IF,5:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,5:CALL,6	67
0x4005c6d	              0x55	                                push rbp	      2160	am.c	FUNCTION_59
0x4005c6e	          0x4889e5	                            mov rbp, rsp	      2160	am.c	FUNCTION_59
0x4005c71	        0x4883ec30	                           sub rsp, 0x30	      2160	am.c	FUNCTION_59
0x4005c75	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2160	am.c	FUNCTION_59
0x4005c79	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2160	am.c	FUNCTION_59
0x4005c7d	          0x8955dc	             mov dword [rbp - 0x24], edx	      2160	am.c	FUNCTION_59
0x4005c80	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2161	am.c	FUNCTION_59
0x4005c84	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2161	am.c	FUNCTION_59
0x4005c88	        0x488945f8	                mov qword [rbp - 8], rax	      2161	am.c	FUNCTION_59
0x4005c8c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4005c90	      0xbe00000000	                              mov esi, 0	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4005c95	          0x4889c7	                            mov rdi, rax	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4005c98	      0xe800000000	                          call 0x4005c9d	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4005c9d	            0x85c0	                           test eax, eax	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4005c9f	            0x750f	                           jne 0x4005cb0	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4005ca1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2164	am.c	FUNCTION_59	IF_1
0x4005ca5	    0xc70001000000	                      mov dword [rax], 1	      2164	am.c	FUNCTION_59	IF_1
0x4005cab	      0xe9af000000	                           jmp 0x4005d5f	      2164	am.c	FUNCTION_59	IF_1
0x4005cb0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4005cb4	      0xbe00000000	                              mov esi, 0	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4005cb9	          0x4889c7	                            mov rdi, rax	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4005cbc	      0xe800000000	                          call 0x4005cc1	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4005cc1	            0x85c0	                           test eax, eax	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4005cc3	            0x750f	                           jne 0x4005cd4	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4005cc5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2166	am.c	FUNCTION_59	ELSE_1	IF_2
0x4005cc9	    0xc70002000000	                      mov dword [rax], 2	      2166	am.c	FUNCTION_59	ELSE_1	IF_2
0x4005ccf	      0xe98b000000	                           jmp 0x4005d5f	      2166	am.c	FUNCTION_59	ELSE_1	IF_2
0x4005cd4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4005cd8	      0xbe00000000	                              mov esi, 0	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4005cdd	          0x4889c7	                            mov rdi, rax	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4005ce0	      0xe800000000	                          call 0x4005ce5	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4005ce5	            0x85c0	                           test eax, eax	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4005ce7	            0x750c	                           jne 0x4005cf5	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4005ce9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2168	am.c	FUNCTION_59	ELSE_2	IF_3
0x4005ced	    0xc70003000000	                      mov dword [rax], 3	      2168	am.c	FUNCTION_59	ELSE_2	IF_3
0x4005cf3	            0xeb6a	                           jmp 0x4005d5f	      2168	am.c	FUNCTION_59	ELSE_2	IF_3
0x4005cf5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4005cf9	      0xbe00000000	                              mov esi, 0	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4005cfe	          0x4889c7	                            mov rdi, rax	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4005d01	      0xe800000000	                          call 0x4005d06	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4005d06	            0x85c0	                           test eax, eax	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4005d08	            0x750c	                           jne 0x4005d16	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4005d0a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2170	am.c	FUNCTION_59	ELSE_3	IF_4
0x4005d0e	    0xc70004000000	                      mov dword [rax], 4	      2170	am.c	FUNCTION_59	ELSE_3	IF_4
0x4005d14	            0xeb49	                           jmp 0x4005d5f	      2170	am.c	FUNCTION_59	ELSE_3	IF_4
0x4005d16	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x4005d1a	      0xbe00000000	                              mov esi, 0	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x4005d1f	          0x4889c7	                            mov rdi, rax	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x4005d22	      0xe800000000	                          call 0x4005d27	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x4005d27	            0x85c0	                           test eax, eax	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x4005d29	            0x750c	                           jne 0x4005d37	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x4005d2b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2172	am.c	FUNCTION_59	ELSE_4	IF_5
0x4005d2f	    0xc70005000000	                      mov dword [rax], 5	      2172	am.c	FUNCTION_59	ELSE_4	IF_5
0x4005d35	            0xeb28	                           jmp 0x4005d5f	      2172	am.c	FUNCTION_59	ELSE_4	IF_5
0x4005d37	      0xbf00000000	                              mov edi, 0	      2174	am.c	FUNCTION_59	CALL_6
0x4005d3c	      0xe8f5a4ffff	                               call sym.	      2174	am.c	FUNCTION_59	CALL_6
0x4005d41	          0x4889c2	                            mov rdx, rax	      2174	am.c	FUNCTION_59	CALL_6
0x4005d44	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2174	am.c	FUNCTION_59	CALL_6
0x4005d48	          0x4889c6	                            mov rsi, rax	      2174	am.c	FUNCTION_59	CALL_6
0x4005d4b	          0x4889d7	                            mov rdi, rdx	      2174	am.c	FUNCTION_59	CALL_6
0x4005d4e	      0xb800000000	                              mov eax, 0	      2174	am.c	FUNCTION_59	CALL_6
0x4005d53	      0xe800000000	                          call 0x4005d58	      2174	am.c	FUNCTION_59	CALL_6
0x4005d58	      0xe805a3ffff	                    call sym.const_error	      2174	am.c	FUNCTION_59	CALL_6
0x4005d5d	            0xeb05	                           jmp 0x4005d64	      2174	am.c	FUNCTION_59	CALL_6
0x4005d5f	      0xb800000000	                              mov eax, 0	      2175	am.c	FUNCTION_59
0x4005d64	              0xc9	                                   leave	      2176	am.c	FUNCTION_59
0x4005d65	              0xc3	                                     ret	      2176	am.c	FUNCTION_59
validate_resume_state	functions,0:IF,2:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,6	48
0x40048a2	              0x55	                                push rbp	      1681	am.c	FUNCTION_47
0x40048a3	          0x4889e5	                            mov rbp, rsp	      1681	am.c	FUNCTION_47
0x40048a6	              0x53	                                push rbx	      1681	am.c	FUNCTION_47
0x40048a7	        0x4883ec18	                           sub rsp, 0x18	      1681	am.c	FUNCTION_47
0x40048ab	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1681	am.c	FUNCTION_47
0x40048af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1682	am.c	FUNCTION_47	IF_1
0x40048b3	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1682	am.c	FUNCTION_47	IF_1
0x40048b7	          0x4885c0	                           test rax, rax	      1682	am.c	FUNCTION_47	IF_1
0x40048ba	            0x752e	                           jne 0x40048ea	      1682	am.c	FUNCTION_47	IF_1
0x40048bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x40048c0	      0xbe00000000	                              mov esi, 0	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x40048c5	          0x4889c7	                            mov rdi, rax	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x40048c8	      0xe8aabdffff	                        call sym.am_path	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x40048cd	          0x4889c3	                            mov rbx, rax	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x40048d0	      0xbf00000000	                              mov edi, 0	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x40048d5	      0xe85cb9ffff	                               call sym.	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x40048da	          0x4889de	                            mov rsi, rbx	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x40048dd	          0x4889c7	                            mov rdi, rax	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x40048e0	      0xb800000000	                              mov eax, 0	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x40048e5	      0xe800000000	                          call 0x40048ea	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x40048ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1686	am.c	FUNCTION_47	IF_2
0x40048ee	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1686	am.c	FUNCTION_47	IF_2
0x40048f2	          0x4885c0	                           test rax, rax	      1686	am.c	FUNCTION_47	IF_2
0x40048f5	            0x741a	                            je 0x4004911	      1686	am.c	FUNCTION_47	IF_2
0x40048f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1686	am.c	FUNCTION_47	IF_2
0x40048fb	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1686	am.c	FUNCTION_47	IF_2
0x40048ff	          0x4885c0	                           test rax, rax	      1686	am.c	FUNCTION_47	IF_2
0x4004902	            0x740d	                            je 0x4004911	      1686	am.c	FUNCTION_47	IF_2
0x4004904	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1686	am.c	FUNCTION_47	IF_2
0x4004908	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1686	am.c	FUNCTION_47	IF_2
0x400490c	          0x4885c0	                           test rax, rax	      1686	am.c	FUNCTION_47	IF_2
0x400490f	            0x752e	                           jne 0x400493f	      1686	am.c	FUNCTION_47	IF_2
0x4004911	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x4004915	      0xbe00000000	                              mov esi, 0	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x400491a	          0x4889c7	                            mov rdi, rax	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x400491d	      0xe855bdffff	                        call sym.am_path	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x4004922	          0x4889c3	                            mov rbx, rax	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x4004925	      0xbf00000000	                              mov edi, 0	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x400492a	      0xe807b9ffff	                               call sym.	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x400492f	          0x4889de	                            mov rsi, rbx	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x4004932	          0x4889c7	                            mov rdi, rax	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x4004935	      0xb800000000	                              mov eax, 0	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x400493a	      0xe800000000	                          call 0x400493f	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x400493f	              0x90	                                     nop	      1689	am.c	FUNCTION_47
0x4004940	        0x4883c418	                           add rsp, 0x18	      1689	am.c	FUNCTION_47
0x4004944	              0x5b	                                 pop rbx	      1689	am.c	FUNCTION_47
0x4004945	              0x5d	                                 pop rbp	      1689	am.c	FUNCTION_47
0x4004946	              0xc3	                                     ret	      1689	am.c	FUNCTION_47
detect_patch_format	functions,0:IF,7:FOR,0:SWITCH,0:DO,0:WHILE,1:ELSE,0:CALL,18	150
0x4001a3b	              0x55	                                push rbp	       634	am.c	FUNCTION_24
0x4001a3c	          0x4889e5	                            mov rbp, rsp	       634	am.c	FUNCTION_24
0x4001a3f	        0x4883c480	             add rsp, 0xffffffffffffff80	       634	am.c	FUNCTION_24
0x4001a43	        0x48897d88	             mov qword [rbp - 0x78], rdi	       634	am.c	FUNCTION_24
0x4001a47	    0x64488b042528	                mov rax, qword fs:[0x28]	       634	am.c	FUNCTION_24
0x4001a50	        0x488945f8	                mov qword [rbp - 8], rax	       634	am.c	FUNCTION_24
0x4001a54	            0x31c0	                            xor eax, eax	       634	am.c	FUNCTION_24
0x4001a56	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       635	am.c	FUNCTION_24
0x4001a5d	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       636	am.c	FUNCTION_24
0x4001a65	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       636	am.c	FUNCTION_24
0x4001a6d	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       636	am.c	FUNCTION_24
0x4001a75	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       637	am.c	FUNCTION_24
0x4001a7d	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       637	am.c	FUNCTION_24
0x4001a85	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       637	am.c	FUNCTION_24
0x4001a8d	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       638	am.c	FUNCTION_24
0x4001a95	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       638	am.c	FUNCTION_24
0x4001a9d	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       638	am.c	FUNCTION_24
0x4001aa5	        0x488b4588	             mov rax, qword [rbp - 0x78]	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001aa9	          0x488b00	                    mov rax, qword [rax]	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001aac	          0x4885c0	                           test rax, rax	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001aaf	            0x742b	                            je 0x4001adc	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001ab1	        0x488b4588	             mov rax, qword [rbp - 0x78]	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001ab5	          0x488b00	                    mov rax, qword [rax]	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001ab8	      0xbe00000000	                              mov esi, 0	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001abd	          0x4889c7	                            mov rdi, rax	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001ac0	      0xe800000000	                          call 0x4001ac5	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001ac5	            0x85c0	                           test eax, eax	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001ac7	            0x7413	                            je 0x4001adc	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001ac9	        0x488b4588	             mov rax, qword [rbp - 0x78]	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001acd	          0x488b00	                    mov rax, qword [rax]	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001ad0	          0x4889c7	                            mov rdi, rax	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001ad3	      0xe800000000	                          call 0x4001ad8	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001ad8	            0x85c0	                           test eax, eax	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001ada	            0x740a	                            je 0x4001ae6	       644	am.c	FUNCTION_24	IF_1	CALL_2
0x4001adc	      0xb801000000	                              mov eax, 1	       645	am.c	FUNCTION_24	IF_1
0x4001ae1	      0xe989010000	                           jmp 0x4001c6f	       645	am.c	FUNCTION_24	IF_1
0x4001ae6	        0x488b4588	             mov rax, qword [rbp - 0x78]	       652	am.c	FUNCTION_24	CALL_3
0x4001aea	          0x488b00	                    mov rax, qword [rax]	       652	am.c	FUNCTION_24	CALL_3
0x4001aed	      0xbe00000000	                              mov esi, 0	       652	am.c	FUNCTION_24	CALL_3
0x4001af2	          0x4889c7	                            mov rdi, rax	       652	am.c	FUNCTION_24	CALL_3
0x4001af5	      0xe800000000	                          call 0x4001afa	       652	am.c	FUNCTION_24	CALL_3
0x4001afa	        0x48894598	             mov qword [rbp - 0x68], rax	       652	am.c	FUNCTION_24	CALL_3
0x4001afe	            0xeb09	                           jmp 0x4001b09	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x4001b00	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       655	am.c	FUNCTION_24	WHILE_1	IF_2
0x4001b04	          0x4885c0	                           test rax, rax	       655	am.c	FUNCTION_24	WHILE_1	IF_2
0x4001b07	            0x7519	                           jne 0x4001b22	       655	am.c	FUNCTION_24	WHILE_1	IF_2
0x4001b09	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x4001b0d	        0x488d45a0	                   lea rax, [rbp - 0x60]	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x4001b11	          0x4889d6	                            mov rsi, rdx	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x4001b14	          0x4889c7	                            mov rdi, rax	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x4001b17	      0xe800000000	                          call 0x4001b1c	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x4001b1c	            0x85c0	                           test eax, eax	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x4001b1e	            0x74e0	                            je 0x4001b00	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x4001b20	            0xeb01	                           jmp 0x4001b23	       654	am.c	FUNCTION_24	WHILE_1	CALL_4
0x4001b22	              0x90	                                     nop	       656	am.c	FUNCTION_24	WHILE_1	IF_2
0x4001b23	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x4001b27	      0xbe00000000	                              mov esi, 0	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x4001b2c	          0x4889c7	                            mov rdi, rax	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x4001b2f	      0xe800000000	                          call 0x4001b34	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x4001b34	            0x85c0	                           test eax, eax	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x4001b36	            0x7515	                           jne 0x4001b4d	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x4001b38	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x4001b3c	      0xbe00000000	                              mov esi, 0	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x4001b41	          0x4889c7	                            mov rdi, rax	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x4001b44	      0xe800000000	                          call 0x4001b49	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x4001b49	            0x85c0	                           test eax, eax	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x4001b4b	            0x740c	                            je 0x4001b59	       659	am.c	FUNCTION_24	IF_3	CALL_6
0x4001b4d	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       660	am.c	FUNCTION_24	IF_3
0x4001b54	      0xe9e3000000	                           jmp 0x4001c3c	       661	am.c	FUNCTION_24	IF_3
0x4001b59	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       664	am.c	FUNCTION_24	IF_4	CALL_7
0x4001b5d	      0xbe00000000	                              mov esi, 0	       664	am.c	FUNCTION_24	IF_4	CALL_7
0x4001b62	          0x4889c7	                            mov rdi, rax	       664	am.c	FUNCTION_24	IF_4	CALL_7
0x4001b65	      0xe800000000	                          call 0x4001b6a	       664	am.c	FUNCTION_24	IF_4	CALL_7
0x4001b6a	            0x85c0	                           test eax, eax	       664	am.c	FUNCTION_24	IF_4	CALL_7
0x4001b6c	            0x740c	                            je 0x4001b7a	       664	am.c	FUNCTION_24	IF_4	CALL_7
0x4001b6e	    0xc74594030000	               mov dword [rbp - 0x6c], 3	       665	am.c	FUNCTION_24	IF_4
0x4001b75	      0xe9c2000000	                           jmp 0x4001c3c	       666	am.c	FUNCTION_24	IF_4
0x4001b7a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       669	am.c	FUNCTION_24	IF_5	CALL_8
0x4001b7e	      0xbe00000000	                              mov esi, 0	       669	am.c	FUNCTION_24	IF_5	CALL_8
0x4001b83	          0x4889c7	                            mov rdi, rax	       669	am.c	FUNCTION_24	IF_5	CALL_8
0x4001b86	      0xe800000000	                          call 0x4001b8b	       669	am.c	FUNCTION_24	IF_5	CALL_8
0x4001b8b	            0x85c0	                           test eax, eax	       669	am.c	FUNCTION_24	IF_5	CALL_8
0x4001b8d	            0x750c	                           jne 0x4001b9b	       669	am.c	FUNCTION_24	IF_5	CALL_8
0x4001b8f	    0xc74594040000	               mov dword [rbp - 0x6c], 4	       670	am.c	FUNCTION_24	IF_5
0x4001b96	      0xe9a1000000	                           jmp 0x4001c3c	       671	am.c	FUNCTION_24	IF_5
0x4001b9b	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       674	am.c	FUNCTION_24	CALL_9
0x4001b9f	        0x488d45c0	                   lea rax, [rbp - 0x40]	       674	am.c	FUNCTION_24	CALL_9
0x4001ba3	          0x4889d6	                            mov rsi, rdx	       674	am.c	FUNCTION_24	CALL_9
0x4001ba6	          0x4889c7	                            mov rdi, rax	       674	am.c	FUNCTION_24	CALL_9
0x4001ba9	      0xe800000000	                          call 0x4001bae	       674	am.c	FUNCTION_24	CALL_9
0x4001bae	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       675	am.c	FUNCTION_24	CALL_10
0x4001bb2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       675	am.c	FUNCTION_24	CALL_10
0x4001bb6	          0x4889d6	                            mov rsi, rdx	       675	am.c	FUNCTION_24	CALL_10
0x4001bb9	          0x4889c7	                            mov rdi, rax	       675	am.c	FUNCTION_24	CALL_10
0x4001bbc	      0xe800000000	                          call 0x4001bc1	       675	am.c	FUNCTION_24	CALL_10
0x4001bc1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       681	am.c	FUNCTION_24	IF_6
0x4001bc5	          0x4885c0	                           test rax, rax	       681	am.c	FUNCTION_24	IF_6
0x4001bc8	            0x7451	                            je 0x4001c1b	       681	am.c	FUNCTION_24	IF_6
0x4001bca	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       681	am.c	FUNCTION_24	IF_6
0x4001bce	          0x4885c0	                           test rax, rax	       681	am.c	FUNCTION_24	IF_6
0x4001bd1	            0x7548	                           jne 0x4001c1b	       681	am.c	FUNCTION_24	IF_6
0x4001bd3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       682	am.c	FUNCTION_24	IF_6	CALL_11
0x4001bd7	      0xbe00000000	                              mov esi, 0	       682	am.c	FUNCTION_24	IF_6	CALL_11
0x4001bdc	          0x4889c7	                            mov rdi, rax	       682	am.c	FUNCTION_24	IF_6	CALL_11
0x4001bdf	      0xe800000000	                          call 0x4001be4	       682	am.c	FUNCTION_24	IF_6	CALL_11
0x4001be4	            0x85c0	                           test eax, eax	       681	am.c	FUNCTION_24	IF_6
0x4001be6	            0x752a	                           jne 0x4001c12	       681	am.c	FUNCTION_24	IF_6
0x4001be8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       683	am.c	FUNCTION_24	IF_6	CALL_12
0x4001bec	      0xbe00000000	                              mov esi, 0	       683	am.c	FUNCTION_24	IF_6	CALL_12
0x4001bf1	          0x4889c7	                            mov rdi, rax	       683	am.c	FUNCTION_24	IF_6	CALL_12
0x4001bf4	      0xe800000000	                          call 0x4001bf9	       683	am.c	FUNCTION_24	IF_6	CALL_12
0x4001bf9	            0x85c0	                           test eax, eax	       682	am.c	FUNCTION_24	IF_6	CALL_11
0x4001bfb	            0x7515	                           jne 0x4001c12	       682	am.c	FUNCTION_24	IF_6	CALL_11
0x4001bfd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       684	am.c	FUNCTION_24	IF_6	CALL_13
0x4001c01	      0xbe00000000	                              mov esi, 0	       684	am.c	FUNCTION_24	IF_6	CALL_13
0x4001c06	          0x4889c7	                            mov rdi, rax	       684	am.c	FUNCTION_24	IF_6	CALL_13
0x4001c09	      0xe800000000	                          call 0x4001c0e	       684	am.c	FUNCTION_24	IF_6	CALL_13
0x4001c0e	            0x85c0	                           test eax, eax	       683	am.c	FUNCTION_24	IF_6	CALL_12
0x4001c10	            0x7409	                            je 0x4001c1b	       683	am.c	FUNCTION_24	IF_6	CALL_12
0x4001c12	    0xc74594020000	               mov dword [rbp - 0x6c], 2	       685	am.c	FUNCTION_24	IF_6
0x4001c19	            0xeb21	                           jmp 0x4001c3c	       686	am.c	FUNCTION_24	IF_6
0x4001c1b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x4001c1f	          0x4885c0	                           test rax, rax	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x4001c22	            0x7418	                            je 0x4001c3c	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x4001c24	        0x488b4598	             mov rax, qword [rbp - 0x68]	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x4001c28	          0x4889c7	                            mov rdi, rax	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x4001c2b	      0xe8c1fcffff	                        call sym.is_mail	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x4001c30	            0x85c0	                           test eax, eax	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x4001c32	            0x7408	                            je 0x4001c3c	       689	am.c	FUNCTION_24	IF_7	CALL_14
0x4001c34	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       690	am.c	FUNCTION_24	IF_7
0x4001c3b	              0x90	                                     nop	       691	am.c	FUNCTION_24	IF_7
0x4001c3c	        0x488b4598	             mov rax, qword [rbp - 0x68]	       695	am.c	FUNCTION_24	CALL_15
0x4001c40	          0x4889c7	                            mov rdi, rax	       695	am.c	FUNCTION_24	CALL_15
0x4001c43	      0xe800000000	                          call 0x4001c48	       695	am.c	FUNCTION_24	CALL_15
0x4001c48	        0x488d45a0	                   lea rax, [rbp - 0x60]	       696	am.c	FUNCTION_24	CALL_16
0x4001c4c	          0x4889c7	                            mov rdi, rax	       696	am.c	FUNCTION_24	CALL_16
0x4001c4f	      0xe800000000	                          call 0x4001c54	       696	am.c	FUNCTION_24	CALL_16
0x4001c54	        0x488d45c0	                   lea rax, [rbp - 0x40]	       697	am.c	FUNCTION_24	CALL_17
0x4001c58	          0x4889c7	                            mov rdi, rax	       697	am.c	FUNCTION_24	CALL_17
0x4001c5b	      0xe800000000	                          call 0x4001c60	       697	am.c	FUNCTION_24	CALL_17
0x4001c60	        0x488d45e0	                   lea rax, [rbp - 0x20]	       698	am.c	FUNCTION_24	CALL_18
0x4001c64	          0x4889c7	                            mov rdi, rax	       698	am.c	FUNCTION_24	CALL_18
0x4001c67	      0xe800000000	                          call 0x4001c6c	       698	am.c	FUNCTION_24	CALL_18
0x4001c6c	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       699	am.c	FUNCTION_24
0x4001c6f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       700	am.c	FUNCTION_24
0x4001c73	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       700	am.c	FUNCTION_24
0x4001c7c	            0x7405	                            je 0x4001c83	       700	am.c	FUNCTION_24
0x4001c7e	      0xe800000000	                          call 0x4001c83	       700	am.c	FUNCTION_24
0x4001c83	              0xc9	                                   leave	       700	am.c	FUNCTION_24
0x4001c84	              0xc3	                                     ret	       700	am.c	FUNCTION_24
stgit_patch_to_mail	functions,0:IF,4:FOR,0:SWITCH,0:DO,0:WHILE,2:ELSE,4:CALL,12	109
0x4002053	              0x55	                                push rbp	       803	am.c	FUNCTION_27
0x4002054	          0x4889e5	                            mov rbp, rsp	       803	am.c	FUNCTION_27
0x4002057	        0x4883ec50	                           sub rsp, 0x50	       803	am.c	FUNCTION_27
0x400205b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       803	am.c	FUNCTION_27
0x400205f	        0x488975c0	             mov qword [rbp - 0x40], rsi	       803	am.c	FUNCTION_27
0x4002063	          0x8955bc	             mov dword [rbp - 0x44], edx	       803	am.c	FUNCTION_27
0x4002066	    0x64488b042528	                mov rax, qword fs:[0x28]	       803	am.c	FUNCTION_27
0x400206f	        0x488945f8	                mov qword [rbp - 8], rax	       803	am.c	FUNCTION_27
0x4002073	            0x31c0	                            xor eax, eax	       803	am.c	FUNCTION_27
0x4002075	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       804	am.c	FUNCTION_27
0x400207d	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       804	am.c	FUNCTION_27
0x4002085	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       804	am.c	FUNCTION_27
0x400208d	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       805	am.c	FUNCTION_27
0x4002094	      0xe9d8000000	                           jmp 0x4002171	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4002099	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       810	am.c	FUNCTION_27	WHILE_1	IF_1	CALL_2
0x400209d	          0x4889c7	                            mov rdi, rax	       810	am.c	FUNCTION_27	WHILE_1	IF_1	CALL_2
0x40020a0	      0xe830e4ffff	                    call sym.str_isspace	       810	am.c	FUNCTION_27	WHILE_1	IF_1	CALL_2
0x40020a5	            0x85c0	                           test eax, eax	       810	am.c	FUNCTION_27	WHILE_1	IF_1	CALL_2
0x40020a7	            0x7405	                            je 0x40020ae	       810	am.c	FUNCTION_27	WHILE_1	IF_1	CALL_2
0x40020a9	      0xe9c3000000	                           jmp 0x4002171	       810	am.c	FUNCTION_27	WHILE_1	IF_1	CALL_2
0x40020ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       812	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2	CALL_3
0x40020b2	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       812	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2	CALL_3
0x40020b6	      0xbe00000000	                              mov esi, 0	       812	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2	CALL_3
0x40020bb	          0x4889c7	                            mov rdi, rax	       812	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2	CALL_3
0x40020be	      0xe8aadfffff	                    call sym.skip_prefix	       812	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2	CALL_3
0x40020c3	            0x85c0	                           test eax, eax	       812	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2	CALL_3
0x40020c5	            0x741f	                            je 0x40020e6	       812	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2	CALL_3
0x40020c7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       813	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2
0x40020cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       813	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2
0x40020cf	      0xbe00000000	                              mov esi, 0	       813	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2
0x40020d4	          0x4889c7	                            mov rdi, rax	       813	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2
0x40020d7	      0xb800000000	                              mov eax, 0	       813	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2
0x40020dc	      0xe800000000	                          call 0x40020e1	       813	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2
0x40020e1	      0xe98b000000	                           jmp 0x4002171	       813	am.c	FUNCTION_27	WHILE_1	ELSE_1	IF_2
0x40020e6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x40020ea	      0xbe00000000	                              mov esi, 0	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x40020ef	          0x4889c7	                            mov rdi, rax	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x40020f2	      0xe800000000	                          call 0x40020f7	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x40020f7	            0x85c0	                           test eax, eax	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x40020f9	            0x7515	                           jne 0x4002110	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x40020fb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x40020ff	      0xbe00000000	                              mov esi, 0	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x4002104	          0x4889c7	                            mov rdi, rax	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x4002107	      0xe800000000	                          call 0x400210c	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x400210c	            0x85c0	                           test eax, eax	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x400210e	            0x741c	                            je 0x400212c	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_6
0x4002110	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       815	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3
0x4002114	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       815	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3
0x4002118	      0xbe00000000	                              mov esi, 0	       815	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3
0x400211d	          0x4889c7	                            mov rdi, rax	       815	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3
0x4002120	      0xb800000000	                              mov eax, 0	       815	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3
0x4002125	      0xe800000000	                          call 0x400212a	       815	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3
0x400212a	            0xeb45	                           jmp 0x4002171	       815	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3
0x400212c	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       816	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x4002130	            0x7523	                           jne 0x4002155	       816	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x4002132	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       817	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4	CALL_8
0x4002136	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       817	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4	CALL_8
0x400213a	      0xbe00000000	                              mov esi, 0	       817	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4	CALL_8
0x400213f	          0x4889c7	                            mov rdi, rax	       817	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4	CALL_8
0x4002142	      0xb800000000	                              mov eax, 0	       817	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4	CALL_8
0x4002147	      0xe800000000	                          call 0x400214c	       817	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4	CALL_8
0x400214c	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       818	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x4002153	            0xeb1c	                           jmp 0x4002171	       818	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x4002155	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       820	am.c	FUNCTION_27	WHILE_1	ELSE_4	CALL_9
0x4002159	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       820	am.c	FUNCTION_27	WHILE_1	ELSE_4	CALL_9
0x400215d	      0xbe00000000	                              mov esi, 0	       820	am.c	FUNCTION_27	WHILE_1	ELSE_4	CALL_9
0x4002162	          0x4889c7	                            mov rdi, rax	       820	am.c	FUNCTION_27	WHILE_1	ELSE_4	CALL_9
0x4002165	      0xb800000000	                              mov eax, 0	       820	am.c	FUNCTION_27	WHILE_1	ELSE_4	CALL_9
0x400216a	      0xe800000000	                          call 0x400216f	       820	am.c	FUNCTION_27	WHILE_1	ELSE_4	CALL_9
0x400216f	            0xeb1b	                           jmp 0x400218c	       820	am.c	FUNCTION_27	WHILE_1	ELSE_4	CALL_9
0x4002171	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4002175	        0x488d45e0	                   lea rax, [rbp - 0x20]	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4002179	          0x4889d6	                            mov rsi, rdx	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x400217c	          0x4889c7	                            mov rdi, rax	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x400217f	      0xe800000000	                          call 0x4002184	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4002184	            0x85c0	                           test eax, eax	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4002186	     0xf840dffffff	                            je 0x4002099	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x400218c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       825	am.c	FUNCTION_27
0x4002190	      0xbe00000000	                              mov esi, 0	       825	am.c	FUNCTION_27
0x4002195	          0x4889c7	                            mov rdi, rax	       825	am.c	FUNCTION_27
0x4002198	      0xe85cdfffff	                  call sym.strbuf_setlen	       825	am.c	FUNCTION_27
0x400219d	            0xeb2a	                           jmp 0x40021c9	       826	am.c	FUNCTION_27	WHILE_2	CALL_10
0x400219f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       827	am.c	FUNCTION_27	WHILE_2	CALL_11
0x40021a3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       827	am.c	FUNCTION_27	WHILE_2	CALL_11
0x40021a7	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       827	am.c	FUNCTION_27	WHILE_2	CALL_11
0x40021ab	      0xbe01000000	                              mov esi, 1	       827	am.c	FUNCTION_27	WHILE_2	CALL_11
0x40021b0	          0x4889c7	                            mov rdi, rax	       827	am.c	FUNCTION_27	WHILE_2	CALL_11
0x40021b3	      0xe800000000	                          call 0x40021b8	       827	am.c	FUNCTION_27	WHILE_2	CALL_11
0x40021b8	        0x488d45e0	                   lea rax, [rbp - 0x20]	       828	am.c	FUNCTION_27	WHILE_2
0x40021bc	      0xbe00000000	                              mov esi, 0	       828	am.c	FUNCTION_27	WHILE_2
0x40021c1	          0x4889c7	                            mov rdi, rax	       828	am.c	FUNCTION_27	WHILE_2
0x40021c4	      0xe830dfffff	                  call sym.strbuf_setlen	       828	am.c	FUNCTION_27	WHILE_2
0x40021c9	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       826	am.c	FUNCTION_27	WHILE_2	CALL_10
0x40021cd	        0x488d45e0	                   lea rax, [rbp - 0x20]	       826	am.c	FUNCTION_27	WHILE_2	CALL_10
0x40021d1	      0xbe00200000	                         mov esi, 0x2000	       826	am.c	FUNCTION_27	WHILE_2	CALL_10
0x40021d6	          0x4889c7	                            mov rdi, rax	       826	am.c	FUNCTION_27	WHILE_2	CALL_10
0x40021d9	      0xe800000000	                          call 0x40021de	       826	am.c	FUNCTION_27	WHILE_2	CALL_10
0x40021de	          0x4885c0	                           test rax, rax	       826	am.c	FUNCTION_27	WHILE_2	CALL_10
0x40021e1	            0x75bc	                           jne 0x400219f	       826	am.c	FUNCTION_27	WHILE_2	CALL_10
0x40021e3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       831	am.c	FUNCTION_27	CALL_12
0x40021e7	          0x4889c7	                            mov rdi, rax	       831	am.c	FUNCTION_27	CALL_12
0x40021ea	      0xe800000000	                          call 0x40021ef	       831	am.c	FUNCTION_27	CALL_12
0x40021ef	      0xb800000000	                              mov eax, 0	       832	am.c	FUNCTION_27
0x40021f4	        0x488b4df8	                mov rcx, qword [rbp - 8]	       833	am.c	FUNCTION_27
0x40021f8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       833	am.c	FUNCTION_27
0x4002201	            0x7405	                            je 0x4002208	       833	am.c	FUNCTION_27
0x4002203	      0xe800000000	                          call 0x4002208	       833	am.c	FUNCTION_27
0x4002208	              0xc9	                                   leave	       833	am.c	FUNCTION_27
0x4002209	              0xc3	                                     ret	       833	am.c	FUNCTION_27
hg_patch_to_mail	functions,0:IF,8:FOR,0:SWITCH,0:DO,0:WHILE,2:ELSE,3:CALL,19	223
0x40023be	              0x55	                                push rbp	       886	am.c	FUNCTION_29
0x40023bf	          0x4889e5	                            mov rbp, rsp	       886	am.c	FUNCTION_29
0x40023c2	        0x4883ec70	                           sub rsp, 0x70	       886	am.c	FUNCTION_29
0x40023c6	        0x48897da8	             mov qword [rbp - 0x58], rdi	       886	am.c	FUNCTION_29
0x40023ca	        0x488975a0	             mov qword [rbp - 0x60], rsi	       886	am.c	FUNCTION_29
0x40023ce	          0x89559c	             mov dword [rbp - 0x64], edx	       886	am.c	FUNCTION_29
0x40023d1	    0x64488b042528	                mov rax, qword fs:[0x28]	       886	am.c	FUNCTION_29
0x40023da	        0x488945f8	                mov qword [rbp - 8], rax	       886	am.c	FUNCTION_29
0x40023de	            0x31c0	                            xor eax, eax	       886	am.c	FUNCTION_29
0x40023e0	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       887	am.c	FUNCTION_29
0x40023e8	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       887	am.c	FUNCTION_29
0x40023f0	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       887	am.c	FUNCTION_29
0x40023f8	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       888	am.c	FUNCTION_29
0x40023ff	      0xe9a2020000	                           jmp 0x40026a6	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x4002404	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       893	am.c	FUNCTION_29	WHILE_1	IF_1	CALL_2
0x4002408	        0x488d55b8	                   lea rdx, [rbp - 0x48]	       893	am.c	FUNCTION_29	WHILE_1	IF_1	CALL_2
0x400240c	      0xbe00000000	                              mov esi, 0	       893	am.c	FUNCTION_29	WHILE_1	IF_1	CALL_2
0x4002411	          0x4889c7	                            mov rdi, rax	       893	am.c	FUNCTION_29	WHILE_1	IF_1	CALL_2
0x4002414	      0xe854dcffff	                    call sym.skip_prefix	       893	am.c	FUNCTION_29	WHILE_1	IF_1	CALL_2
0x4002419	            0x85c0	                           test eax, eax	       893	am.c	FUNCTION_29	WHILE_1	IF_1	CALL_2
0x400241b	            0x741f	                            je 0x400243c	       893	am.c	FUNCTION_29	WHILE_1	IF_1	CALL_2
0x400241d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       894	am.c	FUNCTION_29	WHILE_1	CALL_3
0x4002421	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       894	am.c	FUNCTION_29	WHILE_1	CALL_3
0x4002425	      0xbe00000000	                              mov esi, 0	       894	am.c	FUNCTION_29	WHILE_1	CALL_3
0x400242a	          0x4889c7	                            mov rdi, rax	       894	am.c	FUNCTION_29	WHILE_1	CALL_3
0x400242d	      0xb800000000	                              mov eax, 0	       894	am.c	FUNCTION_29	WHILE_1	CALL_3
0x4002432	      0xe800000000	                          call 0x4002437	       894	am.c	FUNCTION_29	WHILE_1	CALL_3
0x4002437	      0xe96a020000	                           jmp 0x40026a6	       894	am.c	FUNCTION_29	WHILE_1	CALL_3
0x400243c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       895	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_4
0x4002440	        0x488d55b8	                   lea rdx, [rbp - 0x48]	       895	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_4
0x4002444	      0xbe00000000	                              mov esi, 0	       895	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_4
0x4002449	          0x4889c7	                            mov rdi, rax	       895	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_4
0x400244c	      0xe81cdcffff	                    call sym.skip_prefix	       895	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_4
0x4002451	            0x85c0	                           test eax, eax	       895	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_4
0x4002453	     0xf841a020000	                            je 0x4002673	       895	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_4
0x4002459	      0xe800000000	                          call 0x400245e	       900	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2
0x400245e	    0xc70000000000	                      mov dword [rax], 0	       900	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2
0x4002464	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       901	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2
0x4002468	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       901	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2
0x400246c	      0xba0a000000	                            mov edx, 0xa	       901	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2
0x4002471	          0x4889ce	                            mov rsi, rcx	       901	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2
0x4002474	          0x4889c7	                            mov rdi, rax	       901	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2
0x4002477	      0xe800000000	                          call 0x400247c	       901	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2
0x400247c	        0x488945d0	             mov qword [rbp - 0x30], rax	       901	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2
0x4002480	      0xe800000000	                          call 0x4002485	       902	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3
0x4002485	            0x8b00	                    mov eax, dword [rax]	       902	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3
0x4002487	            0x85c0	                           test eax, eax	       902	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3
0x4002489	            0x7424	                            je 0x40024af	       902	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3
0x400248b	      0xbf00000000	                              mov edi, 0	       903	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3	CALL_5
0x4002490	      0xe8a1ddffff	                               call sym.	       903	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3	CALL_5
0x4002495	          0x4889c7	                            mov rdi, rax	       903	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3	CALL_5
0x4002498	      0xb800000000	                              mov eax, 0	       903	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3	CALL_5
0x400249d	      0xe800000000	                          call 0x40024a2	       903	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3	CALL_5
0x40024a2	      0xe8bbdbffff	                    call sym.const_error	       903	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3	CALL_5
0x40024a7	          0x8945b4	             mov dword [rbp - 0x4c], eax	       903	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3	CALL_5
0x40024aa	      0xe969020000	                           jmp 0x4002718	       904	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_3
0x40024af	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       907	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_6
0x40024b3	        0x488d55b8	                   lea rdx, [rbp - 0x48]	       907	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_6
0x40024b7	      0xbe00000000	                              mov esi, 0	       907	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_6
0x40024bc	          0x4889c7	                            mov rdi, rax	       907	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_6
0x40024bf	      0xe8a9dbffff	                    call sym.skip_prefix	       907	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_6
0x40024c4	            0x85c0	                           test eax, eax	       907	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_6
0x40024c6	            0x7524	                           jne 0x40024ec	       907	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_6
0x40024c8	      0xbf00000000	                              mov edi, 0	       908	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_7
0x40024cd	      0xe864ddffff	                               call sym.	       908	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_7
0x40024d2	          0x4889c7	                            mov rdi, rax	       908	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_7
0x40024d5	      0xb800000000	                              mov eax, 0	       908	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_7
0x40024da	      0xe800000000	                          call 0x40024df	       908	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_7
0x40024df	      0xe87edbffff	                    call sym.const_error	       908	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_7
0x40024e4	          0x8945b4	             mov dword [rbp - 0x4c], eax	       908	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4	CALL_7
0x40024e7	      0xe92c020000	                           jmp 0x4002718	       909	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_4
0x40024ec	      0xe800000000	                          call 0x40024f1	       912	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2
0x40024f1	    0xc70000000000	                      mov dword [rax], 0	       912	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2
0x40024f7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       913	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_8
0x40024fb	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       913	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_8
0x40024ff	      0xba0a000000	                            mov edx, 0xa	       913	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_8
0x4002504	          0x4889ce	                            mov rsi, rcx	       913	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_8
0x4002507	          0x4889c7	                            mov rdi, rax	       913	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_8
0x400250a	      0xe800000000	                          call 0x400250f	       913	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_8
0x400250f	        0x488945d8	             mov qword [rbp - 0x28], rax	       913	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_8
0x4002513	      0xe800000000	                          call 0x4002518	       914	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5
0x4002518	            0x8b00	                    mov eax, dword [rax]	       914	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5
0x400251a	            0x85c0	                           test eax, eax	       914	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5
0x400251c	            0x7424	                            je 0x4002542	       914	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5
0x400251e	      0xbf00000000	                              mov edi, 0	       915	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5	CALL_9
0x4002523	      0xe80eddffff	                               call sym.	       915	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5	CALL_9
0x4002528	          0x4889c7	                            mov rdi, rax	       915	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5	CALL_9
0x400252b	      0xb800000000	                              mov eax, 0	       915	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5	CALL_9
0x4002530	      0xe800000000	                          call 0x4002535	       915	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5	CALL_9
0x4002535	      0xe828dbffff	                    call sym.const_error	       915	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5	CALL_9
0x400253a	          0x8945b4	             mov dword [rbp - 0x4c], eax	       915	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5	CALL_9
0x400253d	      0xe9d6010000	                           jmp 0x4002718	       916	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_5
0x4002542	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       919	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6
0x4002546	           0xfb600	                   movzx eax, byte [rax]	       919	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6
0x4002549	            0x84c0	                             test al, al	       919	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6
0x400254b	            0x7424	                            je 0x4002571	       919	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6
0x400254d	      0xbf00000000	                              mov edi, 0	       920	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6	CALL_10
0x4002552	      0xe8dfdcffff	                               call sym.	       920	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6	CALL_10
0x4002557	          0x4889c7	                            mov rdi, rax	       920	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6	CALL_10
0x400255a	      0xb800000000	                              mov eax, 0	       920	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6	CALL_10
0x400255f	      0xe800000000	                          call 0x4002564	       920	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6	CALL_10
0x4002564	      0xe8f9daffff	                    call sym.const_error	       920	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6	CALL_10
0x4002569	          0x8945b4	             mov dword [rbp - 0x4c], eax	       920	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6	CALL_10
0x400256c	      0xe9a7010000	                           jmp 0x4002718	       921	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_6
0x4002571	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x4002575	        0x48c1f83f	                           sar rax, 0x3f	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x4002579	          0x4889c1	                            mov rcx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x400257c	        0x48334dd8	             xor rcx, qword [rbp - 0x28]	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x4002580	          0x4829c1	                            sub rcx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x4002583	    0x48ba057cf36a	          movabs rdx, 0x48d159e26af37c05	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x400258d	          0x4889c8	                            mov rax, rcx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x4002590	          0x48f7ea	                                imul rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x4002593	        0x48c1fa0a	                            sar rdx, 0xa	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x4002597	          0x4889c8	                            mov rax, rcx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x400259a	        0x48c1f83f	                           sar rax, 0x3f	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x400259e	          0x4829c2	                            sub rdx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025a1	          0x4889d0	                            mov rax, rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025a4	        0x48c1e002	                              shl rax, 2	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025a8	          0x4801d0	                            add rax, rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025ab	    0x488d14850000	                        lea rdx, [rax*4]	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025b3	          0x4801d0	                            add rax, rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025b6	        0x48c1e002	                              shl rax, 2	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025ba	          0x4889c7	                            mov rdi, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025c1	        0x48c1f83f	                           sar rax, 0x3f	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025c5	          0x4889c1	                            mov rcx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025c8	        0x48334dd8	             xor rcx, qword [rbp - 0x28]	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025cc	          0x4829c1	                            sub rcx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025cf	    0x48ba057cf36a	          movabs rdx, 0x48d159e26af37c05	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025d9	          0x4889c8	                            mov rax, rcx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025dc	          0x48f7ea	                                imul rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025df	        0x48c1fa0a	                            sar rdx, 0xa	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025e3	          0x4889c8	                            mov rax, rcx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025e6	        0x48c1f83f	                           sar rax, 0x3f	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025ea	          0x4889d6	                            mov rsi, rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025ed	          0x4829c6	                            sub rsi, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025f0	    0x4869c6100e00	                    imul rax, rsi, 0xe10	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025f7	          0x4829c1	                            sub rcx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025fa	          0x4889ce	                            mov rsi, rcx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x40025fd	    0x48ba89888888	          movabs rdx, 0x8888888888888889	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x4002607	          0x4889f0	                            mov rax, rsi	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x400260a	          0x48f7ea	                                imul rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x400260d	        0x488d0432	                    lea rax, [rdx + rsi]	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x4002611	        0x48c1f805	                              sar rax, 5	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x4002615	          0x4889c2	                            mov rdx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x4002618	          0x4889f0	                            mov rax, rsi	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x400261b	        0x48c1f83f	                           sar rax, 0x3f	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x400261f	          0x4829c2	                            sub rdx, rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x4002622	          0x4889d0	                            mov rax, rdx	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x4002625	          0x4801f8	                            add rax, rdi	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x4002628	        0x488945c8	             mov qword [rbp - 0x38], rax	       929	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_12
0x400262c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       930	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_7
0x4002631	            0x7e04	                           jle 0x4002637	       930	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_7
0x4002633	        0x48f75dc8	                  neg qword [rbp - 0x38]	       931	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	IF_7
0x4002637	      0xbf05000000	                              mov edi, 5	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x400263c	      0xe800000000	                          call 0x4002641	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x4002641	          0x4889c2	                            mov rdx, rax	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x4002644	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x4002648	            0x89c1	                            mov ecx, eax	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x400264a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x400264e	            0x89ce	                            mov esi, ecx	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x4002650	          0x4889c7	                            mov rdi, rax	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x4002653	      0xe800000000	                          call 0x4002658	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x4002658	          0x4889c2	                            mov rdx, rax	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x400265b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x400265f	      0xbe00000000	                              mov esi, 0	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x4002664	          0x4889c7	                            mov rdi, rax	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x4002667	      0xb800000000	                              mov eax, 0	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x400266c	      0xe800000000	                          call 0x4002671	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x4002671	            0xeb33	                           jmp 0x40026a6	       933	am.c	FUNCTION_29	WHILE_1	ELSE_1	IF_2	CALL_14
0x4002673	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       934	am.c	FUNCTION_29	WHILE_1	ELSE_2	IF_8	CALL_15
0x4002677	      0xbe00000000	                              mov esi, 0	       934	am.c	FUNCTION_29	WHILE_1	ELSE_2	IF_8	CALL_15
0x400267c	          0x4889c7	                            mov rdi, rax	       934	am.c	FUNCTION_29	WHILE_1	ELSE_2	IF_8	CALL_15
0x400267f	      0xe800000000	                          call 0x4002684	       934	am.c	FUNCTION_29	WHILE_1	ELSE_2	IF_8	CALL_15
0x4002684	            0x85c0	                           test eax, eax	       934	am.c	FUNCTION_29	WHILE_1	ELSE_2	IF_8	CALL_15
0x4002686	            0x7402	                            je 0x400268a	       934	am.c	FUNCTION_29	WHILE_1	ELSE_2	IF_8	CALL_15
0x4002688	            0xeb1c	                           jmp 0x40026a6	       934	am.c	FUNCTION_29	WHILE_1	ELSE_2	IF_8	CALL_15
0x400268a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       937	am.c	FUNCTION_29	WHILE_1	ELSE_3	CALL_16
0x400268e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       937	am.c	FUNCTION_29	WHILE_1	ELSE_3	CALL_16
0x4002692	      0xbe00000000	                              mov esi, 0	       937	am.c	FUNCTION_29	WHILE_1	ELSE_3	CALL_16
0x4002697	          0x4889c7	                            mov rdi, rax	       937	am.c	FUNCTION_29	WHILE_1	ELSE_3	CALL_16
0x400269a	      0xb800000000	                              mov eax, 0	       937	am.c	FUNCTION_29	WHILE_1	ELSE_3	CALL_16
0x400269f	      0xe800000000	                          call 0x40026a4	       937	am.c	FUNCTION_29	WHILE_1	ELSE_3	CALL_16
0x40026a4	            0xeb1b	                           jmp 0x40026c1	       937	am.c	FUNCTION_29	WHILE_1	ELSE_3	CALL_16
0x40026a6	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x40026aa	        0x488d45e0	                   lea rax, [rbp - 0x20]	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x40026ae	          0x4889d6	                            mov rsi, rdx	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x40026b1	          0x4889c7	                            mov rdi, rax	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x40026b4	      0xe800000000	                          call 0x40026b9	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x40026b9	            0x85c0	                           test eax, eax	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x40026bb	     0xf8443fdffff	                            je 0x4002404	       890	am.c	FUNCTION_29	WHILE_1	CALL_1
0x40026c1	        0x488d45e0	                   lea rax, [rbp - 0x20]	       942	am.c	FUNCTION_29
0x40026c5	      0xbe00000000	                              mov esi, 0	       942	am.c	FUNCTION_29
0x40026ca	          0x4889c7	                            mov rdi, rax	       942	am.c	FUNCTION_29
0x40026cd	      0xe827daffff	                  call sym.strbuf_setlen	       942	am.c	FUNCTION_29
0x40026d2	            0xeb2a	                           jmp 0x40026fe	       943	am.c	FUNCTION_29	WHILE_2	CALL_17
0x40026d4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       944	am.c	FUNCTION_29	WHILE_2	CALL_18
0x40026d8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       944	am.c	FUNCTION_29	WHILE_2	CALL_18
0x40026dc	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       944	am.c	FUNCTION_29	WHILE_2	CALL_18
0x40026e0	      0xbe01000000	                              mov esi, 1	       944	am.c	FUNCTION_29	WHILE_2	CALL_18
0x40026e5	          0x4889c7	                            mov rdi, rax	       944	am.c	FUNCTION_29	WHILE_2	CALL_18
0x40026e8	      0xe800000000	                          call 0x40026ed	       944	am.c	FUNCTION_29	WHILE_2	CALL_18
0x40026ed	        0x488d45e0	                   lea rax, [rbp - 0x20]	       945	am.c	FUNCTION_29	WHILE_2
0x40026f1	      0xbe00000000	                              mov esi, 0	       945	am.c	FUNCTION_29	WHILE_2
0x40026f6	          0x4889c7	                            mov rdi, rax	       945	am.c	FUNCTION_29	WHILE_2
0x40026f9	      0xe8fbd9ffff	                  call sym.strbuf_setlen	       945	am.c	FUNCTION_29	WHILE_2
0x40026fe	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       943	am.c	FUNCTION_29	WHILE_2	CALL_17
0x4002702	        0x488d45e0	                   lea rax, [rbp - 0x20]	       943	am.c	FUNCTION_29	WHILE_2	CALL_17
0x4002706	      0xbe00200000	                         mov esi, 0x2000	       943	am.c	FUNCTION_29	WHILE_2	CALL_17
0x400270b	          0x4889c7	                            mov rdi, rax	       943	am.c	FUNCTION_29	WHILE_2	CALL_17
0x400270e	      0xe800000000	                          call 0x4002713	       943	am.c	FUNCTION_29	WHILE_2	CALL_17
0x4002713	          0x4885c0	                           test rax, rax	       943	am.c	FUNCTION_29	WHILE_2	CALL_17
0x4002716	            0x75bc	                           jne 0x40026d4	       943	am.c	FUNCTION_29	WHILE_2	CALL_17
0x4002718	        0x488d45e0	                   lea rax, [rbp - 0x20]	       948	am.c	FUNCTION_29	CALL_19
0x400271c	          0x4889c7	                            mov rdi, rax	       948	am.c	FUNCTION_29	CALL_19
0x400271f	      0xe800000000	                          call 0x4002724	       948	am.c	FUNCTION_29	CALL_19
0x4002724	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       949	am.c	FUNCTION_29
0x4002727	        0x488b75f8	                mov rsi, qword [rbp - 8]	       950	am.c	FUNCTION_29
0x400272b	    0x644833342528	                xor rsi, qword fs:[0x28]	       950	am.c	FUNCTION_29
0x4002734	            0x7405	                            je 0x400273b	       950	am.c	FUNCTION_29
0x4002736	      0xe800000000	                          call 0x400273b	       950	am.c	FUNCTION_29
0x400273b	              0xc9	                                   leave	       950	am.c	FUNCTION_29
0x400273c	              0xc3	                                     ret	       950	am.c	FUNCTION_29
is_null_oid	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,1	13
0x40002b1	              0x55	                                push rbp	       989	cache.h	FUNCTION_76
0x40002b2	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_76
0x40002b5	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_76
0x40002b9	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_76
0x40002bd	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_76	CALL_1
0x40002c1	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_76	CALL_1
0x40002c6	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_76	CALL_1
0x40002c9	      0xe894ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_76	CALL_1
0x40002ce	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_76	CALL_1
0x40002d0	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_76	CALL_1
0x40002d3	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_76	CALL_1
0x40002d6	              0xc9	                                   leave	       991	cache.h	FUNCTION_76
0x40002d7	              0xc3	                                     ret	       991	cache.h	FUNCTION_76
skip_prefix	functions,0:IF,1:FOR,0:SWITCH,0:DO,1:WHILE,0:ELSE,0:CALL,0	27
0x400006d	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_111
0x400006e	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_111
0x4000071	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_111
0x4000075	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_111
0x4000079	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_111
0x400007d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_111	DO_1	IF_1
0x4000081	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_111	DO_1	IF_1
0x4000084	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_111	DO_1	IF_1
0x4000086	            0x7512	                           jne 0x400009a	       484	git-compat-util.h	FUNCTION_111	DO_1	IF_1
0x4000088	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_111	DO_1	IF_1
0x400008c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_111	DO_1	IF_1
0x4000090	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_111	DO_1	IF_1
0x4000093	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_111	DO_1	IF_1
0x4000098	            0xeb27	                           jmp 0x40000c1	       486	git-compat-util.h	FUNCTION_111	DO_1	IF_1
0x400009a	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_111	DO_1
0x400009e	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_111	DO_1
0x40000a2	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_111	DO_1
0x40000a6	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_111	DO_1
0x40000a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_111	DO_1
0x40000ad	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_111	DO_1
0x40000b1	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_111	DO_1
0x40000b5	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_111	DO_1
0x40000b8	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_111	DO_1
0x40000ba	            0x74c1	                            je 0x400007d	       488	git-compat-util.h	FUNCTION_111	DO_1
0x40000bc	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_111
0x40000c1	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_111
0x40000c2	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_111
run_applypatch_msg_hook	functions,0:IF,2:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,7	54
0x4001498	              0x55	                                push rbp	       489	am.c	FUNCTION_20
0x4001499	          0x4889e5	                            mov rbp, rsp	       489	am.c	FUNCTION_20
0x400149c	              0x53	                                push rbx	       489	am.c	FUNCTION_20
0x400149d	        0x4883ec28	                           sub rsp, 0x28	       489	am.c	FUNCTION_20
0x40014a1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       489	am.c	FUNCTION_20
0x40014a5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       492	am.c	FUNCTION_20	CALL_1
0x40014a9	        0x488b4028	            mov rax, qword [rax + 0x28] 	       492	am.c	FUNCTION_20	CALL_1
0x40014ad	          0x4885c0	                           test rax, rax	       492	am.c	FUNCTION_20	CALL_1
0x40014b0	            0x7519	                           jne 0x40014cb	       492	am.c	FUNCTION_20	CALL_1
0x40014b2	      0xb900000000	                              mov ecx, 0	       492	am.c	FUNCTION_20	CALL_1
0x40014b7	      0xbaec010000	                          mov edx, 0x1ec	       492	am.c	FUNCTION_20	CALL_1
0x40014bc	      0xbe00000000	                              mov esi, 0	       492	am.c	FUNCTION_20	CALL_1
0x40014c1	      0xbf00000000	                              mov edi, 0	       492	am.c	FUNCTION_20	CALL_1
0x40014c6	      0xe800000000	                          call 0x40014cb	       492	am.c	FUNCTION_20	CALL_1
0x40014cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       493	am.c	FUNCTION_20	CALL_3
0x40014cf	      0xbe00000000	                              mov esi, 0	       493	am.c	FUNCTION_20	CALL_3
0x40014d4	          0x4889c7	                            mov rdi, rax	       493	am.c	FUNCTION_20	CALL_3
0x40014d7	      0xe89bf1ffff	                        call sym.am_path	       493	am.c	FUNCTION_20	CALL_3
0x40014dc	      0xb900000000	                              mov ecx, 0	       493	am.c	FUNCTION_20	CALL_3
0x40014e1	          0x4889c2	                            mov rdx, rax	       493	am.c	FUNCTION_20	CALL_3
0x40014e4	      0xbe00000000	                              mov esi, 0	       493	am.c	FUNCTION_20	CALL_3
0x40014e9	      0xbf00000000	                              mov edi, 0	       493	am.c	FUNCTION_20	CALL_3
0x40014ee	      0xb800000000	                              mov eax, 0	       493	am.c	FUNCTION_20	CALL_3
0x40014f3	      0xe800000000	                          call 0x40014f8	       493	am.c	FUNCTION_20	CALL_3
0x40014f8	          0x8945ec	             mov dword [rbp - 0x14], eax	       493	am.c	FUNCTION_20	CALL_3
0x40014fb	        0x837dec00	               cmp dword [rbp - 0x14], 0	       495	am.c	FUNCTION_20	IF_1
0x40014ff	            0x755a	                           jne 0x400155b	       495	am.c	FUNCTION_20	IF_1
0x4001501	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       496	am.c	FUNCTION_20	IF_1
0x4001505	        0x488b4028	            mov rax, qword [rax + 0x28] 	       496	am.c	FUNCTION_20	IF_1
0x4001509	          0x4889c7	                            mov rdi, rax	       496	am.c	FUNCTION_20	IF_1
0x400150c	      0xe800000000	                          call 0x4001511	       496	am.c	FUNCTION_20	IF_1
0x4001511	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       496	am.c	FUNCTION_20	IF_1
0x4001515	    0x48c740280000	               mov qword [rax + 0x28], 0	       496	am.c	FUNCTION_20	IF_1
0x400151d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_4
0x4001521	          0x4889c7	                            mov rdi, rax	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_4
0x4001524	      0xe844f9ffff	                call sym.read_commit_msg	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_4
0x4001529	            0x85c0	                           test eax, eax	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_4
0x400152b	            0x792e	                           jns 0x400155b	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_4
0x400152d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_6
0x4001531	      0xbe00000000	                              mov esi, 0	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_6
0x4001536	          0x4889c7	                            mov rdi, rax	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_6
0x4001539	      0xe839f1ffff	                        call sym.am_path	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_6
0x400153e	          0x4889c3	                            mov rbx, rax	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_6
0x4001541	      0xbf00000000	                              mov edi, 0	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_6
0x4001546	      0xe8ebecffff	                               call sym.	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_6
0x400154b	          0x4889de	                            mov rsi, rbx	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_6
0x400154e	          0x4889c7	                            mov rdi, rax	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_6
0x4001551	      0xb800000000	                              mov eax, 0	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_6
0x4001556	      0xe800000000	                          call 0x400155b	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_6
0x400155b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       502	am.c	FUNCTION_20
0x400155e	        0x4883c428	                           add rsp, 0x28	       503	am.c	FUNCTION_20
0x4001562	              0x5b	                                 pop rbx	       503	am.c	FUNCTION_20
0x4001563	              0x5d	                                 pop rbp	       503	am.c	FUNCTION_20
0x4001564	              0xc3	                                     ret	       503	am.c	FUNCTION_20
const_error	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,0	5
0x4000062	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_110
0x4000063	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_110
0x4000066	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_110
0x400006b	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_110
0x400006c	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_110
safe_to_abort	functions,0:IF,5:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,1:CALL,14	85
0x400585b	              0x55	                                push rbp	      2063	am.c	FUNCTION_56
0x400585c	          0x4889e5	                            mov rbp, rsp	      2063	am.c	FUNCTION_56
0x400585f	              0x53	                                push rbx	      2063	am.c	FUNCTION_56
0x4005860	        0x4883ec78	                           sub rsp, 0x78	      2063	am.c	FUNCTION_56
0x4005864	        0x48897d88	             mov qword [rbp - 0x78], rdi	      2063	am.c	FUNCTION_56
0x4005868	    0x64488b042528	                mov rax, qword fs:[0x28]	      2063	am.c	FUNCTION_56
0x4005871	        0x488945e8	             mov qword [rbp - 0x18], rax	      2063	am.c	FUNCTION_56
0x4005875	            0x31c0	                            xor eax, eax	      2063	am.c	FUNCTION_56
0x4005877	    0x48c745900000	               mov qword [rbp - 0x70], 0	      2064	am.c	FUNCTION_56
0x400587f	    0x48c745980000	               mov qword [rbp - 0x68], 0	      2064	am.c	FUNCTION_56
0x4005887	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      2064	am.c	FUNCTION_56
0x400588f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x4005893	      0xbe00000000	                              mov esi, 0	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x4005898	          0x4889c7	                            mov rdi, rax	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x400589b	      0xe8d7adffff	                        call sym.am_path	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x40058a0	          0x4889c7	                            mov rdi, rax	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x40058a3	      0xe800000000	                          call 0x40058a8	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x40058a8	            0x85c0	                           test eax, eax	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x40058aa	            0x740a	                            je 0x40058b6	      2067	am.c	FUNCTION_56	IF_1	CALL_2
0x40058ac	      0xb800000000	                              mov eax, 0	      2068	am.c	FUNCTION_56	IF_1
0x40058b1	      0xe9d6000000	                           jmp 0x400598c	      2068	am.c	FUNCTION_56	IF_1
0x40058b6	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x40058ba	        0x488d4590	                   lea rax, [rbp - 0x70]	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x40058be	      0xb901000000	                              mov ecx, 1	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x40058c3	      0xba00000000	                              mov edx, 0	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x40058c8	          0x4889c7	                            mov rdi, rax	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x40058cb	      0xe892b0ffff	                call sym.read_state_file	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x40058d0	            0x85c0	                           test eax, eax	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x40058d2	            0x7e45	                           jle 0x4005919	      2070	am.c	FUNCTION_56	IF_2	CALL_3
0x40058d4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2071	am.c	FUNCTION_56	IF_2	IF_3	CALL_4
0x40058d8	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2071	am.c	FUNCTION_56	IF_2	IF_3	CALL_4
0x40058dc	          0x4889d6	                            mov rsi, rdx	      2071	am.c	FUNCTION_56	IF_2	IF_3	CALL_4
0x40058df	          0x4889c7	                            mov rdi, rax	      2071	am.c	FUNCTION_56	IF_2	IF_3	CALL_4
0x40058e2	      0xe800000000	                          call 0x40058e7	      2071	am.c	FUNCTION_56	IF_2	IF_3	CALL_4
0x40058e7	            0x85c0	                           test eax, eax	      2071	am.c	FUNCTION_56	IF_2	IF_3	CALL_4
0x40058e9	            0x743a	                            je 0x4005925	      2071	am.c	FUNCTION_56	IF_2	IF_3	CALL_4
0x40058eb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x40058ef	      0xbe00000000	                              mov esi, 0	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x40058f4	          0x4889c7	                            mov rdi, rax	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x40058f7	      0xe87badffff	                        call sym.am_path	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x40058fc	          0x4889c3	                            mov rbx, rax	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x40058ff	      0xbf00000000	                              mov edi, 0	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x4005904	      0xe82da9ffff	                               call sym.	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x4005909	          0x4889de	                            mov rsi, rbx	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x400590c	          0x4889c7	                            mov rdi, rax	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x400590f	      0xb800000000	                              mov eax, 0	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x4005914	      0xe800000000	                          call 0x4005919	      2072	am.c	FUNCTION_56	IF_2	CALL_7
0x4005919	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2074	am.c	FUNCTION_56	CALL_8
0x400591d	          0x4889c7	                            mov rdi, rax	      2074	am.c	FUNCTION_56	CALL_8
0x4005920	      0xe804aaffff	                         call sym.oidclr	      2074	am.c	FUNCTION_56	CALL_8
0x4005925	        0x488d4590	                   lea rax, [rbp - 0x70]	      2075	am.c	FUNCTION_56	CALL_9
0x4005929	          0x4889c7	                            mov rdi, rax	      2075	am.c	FUNCTION_56	CALL_9
0x400592c	      0xe800000000	                          call 0x4005931	      2075	am.c	FUNCTION_56	CALL_9
0x4005931	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2077	am.c	FUNCTION_56	IF_4	CALL_10
0x4005935	          0x4889c6	                            mov rsi, rax	      2077	am.c	FUNCTION_56	IF_4	CALL_10
0x4005938	      0xbf00000000	                              mov edi, 0	      2077	am.c	FUNCTION_56	IF_4	CALL_10
0x400593d	      0xe800000000	                          call 0x4005942	      2077	am.c	FUNCTION_56	IF_4	CALL_10
0x4005942	            0x85c0	                           test eax, eax	      2077	am.c	FUNCTION_56	IF_4	CALL_10
0x4005944	            0x740c	                            je 0x4005952	      2077	am.c	FUNCTION_56	IF_4	CALL_10
0x4005946	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2078	am.c	FUNCTION_56	CALL_11
0x400594a	          0x4889c7	                            mov rdi, rax	      2078	am.c	FUNCTION_56	CALL_11
0x400594d	      0xe8d7a9ffff	                         call sym.oidclr	      2078	am.c	FUNCTION_56	CALL_11
0x4005952	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2080	am.c	FUNCTION_56	IF_5	CALL_12
0x4005956	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2080	am.c	FUNCTION_56	IF_5	CALL_12
0x400595a	          0x4889d6	                            mov rsi, rdx	      2080	am.c	FUNCTION_56	IF_5	CALL_12
0x400595d	          0x4889c7	                            mov rdi, rax	      2080	am.c	FUNCTION_56	IF_5	CALL_12
0x4005960	      0xe827a9ffff	                         call sym.oidcmp	      2080	am.c	FUNCTION_56	IF_5	CALL_12
0x4005965	            0x85c0	                           test eax, eax	      2080	am.c	FUNCTION_56	IF_5	CALL_12
0x4005967	            0x7507	                           jne 0x4005970	      2080	am.c	FUNCTION_56	IF_5	CALL_12
0x4005969	      0xb801000000	                              mov eax, 1	      2081	am.c	FUNCTION_56	IF_5
0x400596e	            0xeb1c	                           jmp 0x400598c	      2081	am.c	FUNCTION_56	IF_5
0x4005970	      0xbf00000000	                              mov edi, 0	      2083	am.c	FUNCTION_56	CALL_14
0x4005975	      0xe8bca8ffff	                               call sym.	      2083	am.c	FUNCTION_56	CALL_14
0x400597a	          0x4889c7	                            mov rdi, rax	      2083	am.c	FUNCTION_56	CALL_14
0x400597d	      0xb800000000	                              mov eax, 0	      2083	am.c	FUNCTION_56	CALL_14
0x4005982	      0xe800000000	                          call 0x4005987	      2083	am.c	FUNCTION_56	CALL_14
0x4005987	      0xb800000000	                              mov eax, 0	      2086	am.c	FUNCTION_56
0x400598c	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2087	am.c	FUNCTION_56
0x4005990	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2087	am.c	FUNCTION_56
0x4005999	            0x7405	                            je 0x40059a0	      2087	am.c	FUNCTION_56
0x400599b	      0xe800000000	                          call 0x40059a0	      2087	am.c	FUNCTION_56
0x40059a0	        0x4883c478	                           add rsp, 0x78	      2087	am.c	FUNCTION_56
0x40059a4	              0x5b	                                 pop rbx	      2087	am.c	FUNCTION_56
0x40059a5	              0x5d	                                 pop rbp	      2087	am.c	FUNCTION_56
0x40059a6	              0xc3	                                     ret	      2087	am.c	FUNCTION_56
msgnum	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,1	20
0x4002dae	              0x55	                                push rbp	      1129	am.c	FUNCTION_33
0x4002daf	          0x4889e5	                            mov rbp, rsp	      1129	am.c	FUNCTION_33
0x4002db2	        0x4883ec10	                           sub rsp, 0x10	      1129	am.c	FUNCTION_33
0x4002db6	        0x48897df8	                mov qword [rbp - 8], rdi	      1129	am.c	FUNCTION_33
0x4002dba	      0xbe00000000	                              mov esi, 0	      1132	am.c	FUNCTION_33
0x4002dbf	      0xbf00000000	                              mov edi, 0	      1132	am.c	FUNCTION_33
0x4002dc4	      0xe830d3ffff	                  call sym.strbuf_setlen	      1132	am.c	FUNCTION_33
0x4002dc9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1133	am.c	FUNCTION_33	CALL_1
0x4002dcd	          0x8b5008	                mov edx, dword [rax + 8]	      1133	am.c	FUNCTION_33	CALL_1
0x4002dd0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1133	am.c	FUNCTION_33	CALL_1
0x4002dd4	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      1133	am.c	FUNCTION_33	CALL_1
0x4002dd7	            0x89d1	                            mov ecx, edx	      1133	am.c	FUNCTION_33	CALL_1
0x4002dd9	            0x89c2	                            mov edx, eax	      1133	am.c	FUNCTION_33	CALL_1
0x4002ddb	      0xbe00000000	                              mov esi, 0	      1133	am.c	FUNCTION_33	CALL_1
0x4002de0	      0xbf00000000	                              mov edi, 0	      1133	am.c	FUNCTION_33	CALL_1
0x4002de5	      0xb800000000	                              mov eax, 0	      1133	am.c	FUNCTION_33	CALL_1
0x4002dea	      0xe800000000	                          call 0x4002def	      1133	am.c	FUNCTION_33	CALL_1
0x4002def	    0x488b05000000	            mov rax, qword [0x04002df6] 	      1135	am.c	FUNCTION_33
0x4002df6	              0xc9	                                   leave	      1136	am.c	FUNCTION_33
0x4002df7	              0xc3	                                     ret	      1136	am.c	FUNCTION_33
parse_mail_rebase	functions,0:IF,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,10	68
0x4003ca1	              0x55	                                push rbp	      1431	am.c	FUNCTION_42
0x4003ca2	          0x4889e5	                            mov rbp, rsp	      1431	am.c	FUNCTION_42
0x4003ca5	        0x4883ec40	                           sub rsp, 0x40	      1431	am.c	FUNCTION_42
0x4003ca9	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1431	am.c	FUNCTION_42
0x4003cad	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1431	am.c	FUNCTION_42
0x4003cb1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1431	am.c	FUNCTION_42
0x4003cba	        0x488945f8	                mov qword [rbp - 8], rax	      1431	am.c	FUNCTION_42
0x4003cbe	            0x31c0	                            xor eax, eax	      1431	am.c	FUNCTION_42
0x4003cc0	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x4003cc4	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x4003cc8	          0x4889d6	                            mov rsi, rdx	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x4003ccb	          0x4889c7	                            mov rdi, rax	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x4003cce	      0xe854f9ffff	            call sym.get_mail_commit_oid	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x4003cd3	            0x85c0	                           test eax, eax	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x4003cd5	            0x7921	                           jns 0x4003cf8	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x4003cd7	      0xbf00000000	                              mov edi, 0	      1436	am.c	FUNCTION_42	CALL_3
0x4003cdc	      0xe855c5ffff	                               call sym.	      1436	am.c	FUNCTION_42	CALL_3
0x4003ce1	          0x4889c2	                            mov rdx, rax	      1436	am.c	FUNCTION_42	CALL_3
0x4003ce4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1436	am.c	FUNCTION_42	CALL_3
0x4003ce8	          0x4889c6	                            mov rsi, rax	      1436	am.c	FUNCTION_42	CALL_3
0x4003ceb	          0x4889d7	                            mov rdi, rdx	      1436	am.c	FUNCTION_42	CALL_3
0x4003cee	      0xb800000000	                              mov eax, 0	      1436	am.c	FUNCTION_42	CALL_3
0x4003cf3	      0xe800000000	                          call 0x4003cf8	      1436	am.c	FUNCTION_42	CALL_3
0x4003cf8	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1438	am.c	FUNCTION_42	CALL_4
0x4003cfc	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1438	am.c	FUNCTION_42	CALL_4
0x4003d00	          0x4889d6	                            mov rsi, rdx	      1438	am.c	FUNCTION_42	CALL_4
0x4003d03	          0x4889c7	                            mov rdi, rax	      1438	am.c	FUNCTION_42	CALL_4
0x4003d06	      0xe800000000	                          call 0x4003d0b	      1438	am.c	FUNCTION_42	CALL_4
0x4003d0b	        0x488945d8	             mov qword [rbp - 0x28], rax	      1438	am.c	FUNCTION_42	CALL_4
0x4003d0f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1440	am.c	FUNCTION_42	CALL_5
0x4003d13	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1440	am.c	FUNCTION_42	CALL_5
0x4003d17	          0x4889d6	                            mov rsi, rdx	      1440	am.c	FUNCTION_42	CALL_5
0x4003d1a	          0x4889c7	                            mov rdi, rax	      1440	am.c	FUNCTION_42	CALL_5
0x4003d1d	      0xe8d7f9ffff	                call sym.get_commit_info	      1440	am.c	FUNCTION_42	CALL_5
0x4003d22	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1442	am.c	FUNCTION_42	CALL_6
0x4003d26	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1442	am.c	FUNCTION_42	CALL_6
0x4003d2a	          0x4889d6	                            mov rsi, rdx	      1442	am.c	FUNCTION_42	CALL_6
0x4003d2d	          0x4889c7	                            mov rdi, rax	      1442	am.c	FUNCTION_42	CALL_6
0x4003d30	      0xe8aafcffff	             call sym.write_commit_patch	      1442	am.c	FUNCTION_42	CALL_6
0x4003d35	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1444	am.c	FUNCTION_42	CALL_7
0x4003d39	        0x488d5038	                   lea rdx, [rax + 0x38]	      1444	am.c	FUNCTION_42	CALL_7
0x4003d3d	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1444	am.c	FUNCTION_42	CALL_7
0x4003d41	          0x4889c6	                            mov rsi, rax	      1444	am.c	FUNCTION_42	CALL_7
0x4003d44	          0x4889d7	                            mov rdi, rdx	      1444	am.c	FUNCTION_42	CALL_7
0x4003d47	      0xe8b7c5ffff	                         call sym.oidcpy	      1444	am.c	FUNCTION_42	CALL_7
0x4003d4c	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1445	am.c	FUNCTION_42	CALL_9
0x4003d50	          0x4889c7	                            mov rdi, rax	      1445	am.c	FUNCTION_42	CALL_9
0x4003d53	      0xe800000000	                          call 0x4003d58	      1445	am.c	FUNCTION_42	CALL_9
0x4003d58	          0x4889c2	                            mov rdx, rax	      1445	am.c	FUNCTION_42	CALL_9
0x4003d5b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1445	am.c	FUNCTION_42	CALL_9
0x4003d5f	      0xbe00000000	                              mov esi, 0	      1445	am.c	FUNCTION_42	CALL_9
0x4003d64	          0x4889c7	                            mov rdi, rax	      1445	am.c	FUNCTION_42	CALL_9
0x4003d67	      0xe83ac9ffff	               call sym.write_state_text	      1445	am.c	FUNCTION_42	CALL_9
0x4003d6c	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1446	am.c	FUNCTION_42	CALL_10
0x4003d70	    0x41b901000000	                              mov r9d, 1	      1446	am.c	FUNCTION_42	CALL_10
0x4003d76	    0x41b801000000	                              mov r8d, 1	      1446	am.c	FUNCTION_42	CALL_10
0x4003d7c	      0xb900000000	                              mov ecx, 0	      1446	am.c	FUNCTION_42	CALL_10
0x4003d81	          0x4889c2	                            mov rdx, rax	      1446	am.c	FUNCTION_42	CALL_10
0x4003d84	      0xbe00000000	                              mov esi, 0	      1446	am.c	FUNCTION_42	CALL_10
0x4003d89	      0xbf00000000	                              mov edi, 0	      1446	am.c	FUNCTION_42	CALL_10
0x4003d8e	      0xe800000000	                          call 0x4003d93	      1446	am.c	FUNCTION_42	CALL_10
0x4003d93	      0xb800000000	                              mov eax, 0	      1449	am.c	FUNCTION_42
0x4003d98	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1450	am.c	FUNCTION_42
0x4003d9c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1450	am.c	FUNCTION_42
0x4003da5	            0x7405	                            je 0x4003dac	      1450	am.c	FUNCTION_42
0x4003da7	      0xe800000000	                          call 0x4003dac	      1450	am.c	FUNCTION_42
0x4003dac	              0xc9	                                   leave	      1450	am.c	FUNCTION_42
0x4003dad	              0xc3	                                     ret	      1450	am.c	FUNCTION_42
merge_tree	functions,0:IF,3:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,9	68
0x400542f	              0x55	                                push rbp	      1956	am.c	FUNCTION_52
0x4005430	          0x4889e5	                            mov rbp, rsp	      1956	am.c	FUNCTION_52
0x4005433	    0x4881ec600300	                          sub rsp, 0x360	      1956	am.c	FUNCTION_52
0x400543a	    0x4889bda8fcff	            mov qword [rbp - 0x358], rdi	      1956	am.c	FUNCTION_52
0x4005441	    0x64488b042528	                mov rax, qword fs:[0x28]	      1956	am.c	FUNCTION_52
0x400544a	        0x488945f8	                mov qword [rbp - 8], rax	      1956	am.c	FUNCTION_52
0x400544e	            0x31c0	                            xor eax, eax	      1956	am.c	FUNCTION_52
0x4005450	    0x48c785b0fcff	              mov qword [rbp - 0x350], 0	      1957	am.c	FUNCTION_52
0x400545b	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x4005462	          0x4889c7	                            mov rdi, rax	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x4005465	      0xe823afffff	                     call sym.parse_tree	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x400546a	            0x85c0	                           test eax, eax	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x400546c	            0x740a	                            je 0x4005478	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x400546e	      0xb8ffffffff	                     mov eax, 0xffffffff	      1962	am.c	FUNCTION_52	IF_1
0x4005473	      0xe9f8000000	                           jmp 0x4005570	      1962	am.c	FUNCTION_52	IF_1
0x4005478	    0x488d85b0fcff	                  lea rax, [rbp - 0x350]	      1964	am.c	FUNCTION_52	CALL_2
0x400547f	      0xbe01000000	                              mov esi, 1	      1964	am.c	FUNCTION_52	CALL_2
0x4005484	          0x4889c7	                            mov rdi, rax	      1964	am.c	FUNCTION_52	CALL_2
0x4005487	      0xe800000000	                          call 0x400548c	      1964	am.c	FUNCTION_52	CALL_2
0x400548c	    0x488d85f0fcff	                  lea rax, [rbp - 0x310]	      1966	am.c	FUNCTION_52	CALL_3
0x4005493	      0xba00030000	                          mov edx, 0x300	      1966	am.c	FUNCTION_52	CALL_3
0x4005498	      0xbe00000000	                              mov esi, 0	      1966	am.c	FUNCTION_52	CALL_3
0x400549d	          0x4889c7	                            mov rdi, rax	      1966	am.c	FUNCTION_52	CALL_3
0x40054a0	      0xe800000000	                          call 0x40054a5	      1966	am.c	FUNCTION_52	CALL_3
0x40054a5	    0xc785f0feffff	              mov dword [rbp - 0x110], 1	      1967	am.c	FUNCTION_52
0x40054af	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      1968	am.c	FUNCTION_52
0x40054ba	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	      1969	am.c	FUNCTION_52
0x40054c5	    0xc785f4fcffff	              mov dword [rbp - 0x30c], 1	      1970	am.c	FUNCTION_52
0x40054cf	    0x48c78558fdff	              mov qword [rbp - 0x2a8], 0	      1971	am.c	FUNCTION_52
0x40054da	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1972	am.c	FUNCTION_52	CALL_4
0x40054e1	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1972	am.c	FUNCTION_52	CALL_4
0x40054e5	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      1972	am.c	FUNCTION_52	CALL_4
0x40054ec	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1972	am.c	FUNCTION_52	CALL_4
0x40054f0	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	      1972	am.c	FUNCTION_52	CALL_4
0x40054f7	          0x4889ce	                            mov rsi, rcx	      1972	am.c	FUNCTION_52	CALL_4
0x40054fa	          0x4889c7	                            mov rdi, rax	      1972	am.c	FUNCTION_52	CALL_4
0x40054fd	      0xe800000000	                          call 0x4005502	      1972	am.c	FUNCTION_52	CALL_4
0x4005502	    0x488d95f0fcff	                  lea rdx, [rbp - 0x310]	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x4005509	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x4005510	          0x4889c6	                            mov rsi, rax	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x4005513	      0xbf01000000	                              mov edi, 1	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x4005518	      0xe800000000	                          call 0x400551d	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x400551d	            0x85c0	                           test eax, eax	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x400551f	            0x7416	                            je 0x4005537	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x4005521	    0x488d85b0fcff	                  lea rax, [rbp - 0x350]	      1975	am.c	FUNCTION_52	IF_2	CALL_6
0x4005528	          0x4889c7	                            mov rdi, rax	      1975	am.c	FUNCTION_52	IF_2	CALL_6
0x400552b	      0xe8c6aeffff	             call sym.rollback_lock_file	      1975	am.c	FUNCTION_52	IF_2	CALL_6
0x4005530	      0xb8ffffffff	                     mov eax, 0xffffffff	      1976	am.c	FUNCTION_52	IF_2
0x4005535	            0xeb39	                           jmp 0x4005570	      1976	am.c	FUNCTION_52	IF_2
0x4005537	    0x488d85b0fcff	                  lea rax, [rbp - 0x350]	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x400553e	      0xba01000000	                              mov edx, 1	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x4005543	          0x4889c6	                            mov rsi, rax	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x4005546	      0xbf00000000	                              mov edi, 0	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x400554b	      0xe800000000	                          call 0x4005550	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x4005550	            0x85c0	                           test eax, eax	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x4005552	            0x7417	                            je 0x400556b	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x4005554	      0xbf00000000	                              mov edi, 0	      1980	am.c	FUNCTION_52	CALL_9
0x4005559	      0xe8d8acffff	                               call sym.	      1980	am.c	FUNCTION_52	CALL_9
0x400555e	          0x4889c7	                            mov rdi, rax	      1980	am.c	FUNCTION_52	CALL_9
0x4005561	      0xb800000000	                              mov eax, 0	      1980	am.c	FUNCTION_52	CALL_9
0x4005566	      0xe800000000	                          call 0x400556b	      1980	am.c	FUNCTION_52	CALL_9
0x400556b	      0xb800000000	                              mov eax, 0	      1982	am.c	FUNCTION_52
0x4005570	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1983	am.c	FUNCTION_52
0x4005574	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1983	am.c	FUNCTION_52
0x400557d	            0x7405	                            je 0x4005584	      1983	am.c	FUNCTION_52
0x400557f	      0xe800000000	                          call 0x4005584	      1983	am.c	FUNCTION_52
0x4005584	              0xc9	                                   leave	      1983	am.c	FUNCTION_52
0x4005585	              0xc3	                                     ret	      1983	am.c	FUNCTION_52
fast_forward_to	functions,0:IF,3:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,11	93
0x4005257	              0x55	                                push rbp	      1917	am.c	FUNCTION_51
0x4005258	          0x4889e5	                            mov rbp, rsp	      1917	am.c	FUNCTION_51
0x400525b	    0x4881ec900300	                          sub rsp, 0x390	      1917	am.c	FUNCTION_51
0x4005262	    0x4889bd88fcff	            mov qword [rbp - 0x378], rdi	      1917	am.c	FUNCTION_51
0x4005269	    0x4889b580fcff	            mov qword [rbp - 0x380], rsi	      1917	am.c	FUNCTION_51
0x4005270	    0x89957cfcffff	            mov dword [rbp - 0x384], edx	      1917	am.c	FUNCTION_51
0x4005276	    0x64488b042528	                mov rax, qword fs:[0x28]	      1917	am.c	FUNCTION_51
0x400527f	        0x488945f8	                mov qword [rbp - 8], rax	      1917	am.c	FUNCTION_51
0x4005283	            0x31c0	                            xor eax, eax	      1917	am.c	FUNCTION_51
0x4005285	    0x48c78590fcff	              mov qword [rbp - 0x370], 0	      1918	am.c	FUNCTION_51
0x4005290	    0x488b8588fcff	            mov rax, qword [rbp - 0x378]	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x4005297	          0x4889c7	                            mov rdi, rax	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x400529a	      0xe8eeb0ffff	                     call sym.parse_tree	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x400529f	            0x85c0	                           test eax, eax	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x40052a1	            0x7513	                           jne 0x40052b6	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x40052a3	    0x488b8580fcff	            mov rax, qword [rbp - 0x380]	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x40052aa	          0x4889c7	                            mov rdi, rax	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x40052ad	      0xe8dbb0ffff	                     call sym.parse_tree	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x40052b2	            0x85c0	                           test eax, eax	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x40052b4	            0x740a	                            je 0x40052c0	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x40052b6	      0xb8ffffffff	                     mov eax, 0xffffffff	      1923	am.c	FUNCTION_51	IF_1
0x40052bb	      0xe959010000	                           jmp 0x4005419	      1923	am.c	FUNCTION_51	IF_1
0x40052c0	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	      1925	am.c	FUNCTION_51	CALL_3
0x40052c7	      0xbe01000000	                              mov esi, 1	      1925	am.c	FUNCTION_51	CALL_3
0x40052cc	          0x4889c7	                            mov rdi, rax	      1925	am.c	FUNCTION_51	CALL_3
0x40052cf	      0xe800000000	                          call 0x40052d4	      1925	am.c	FUNCTION_51	CALL_3
0x40052d4	    0x41b800000000	                              mov r8d, 0	      1927	am.c	FUNCTION_51
0x40052da	      0xb900000000	                              mov ecx, 0	      1927	am.c	FUNCTION_51
0x40052df	      0xba00000000	                              mov edx, 0	      1927	am.c	FUNCTION_51
0x40052e4	      0xbe04000000	                              mov esi, 4	      1927	am.c	FUNCTION_51
0x40052e9	      0xbf00000000	                              mov edi, 0	      1927	am.c	FUNCTION_51
0x40052ee	      0xe800000000	                          call 0x40052f3	      1927	am.c	FUNCTION_51
0x40052f3	    0x488d85f0fcff	                  lea rax, [rbp - 0x310]	      1929	am.c	FUNCTION_51	CALL_4
0x40052fa	      0xba00030000	                          mov edx, 0x300	      1929	am.c	FUNCTION_51	CALL_4
0x40052ff	      0xbe00000000	                              mov esi, 0	      1929	am.c	FUNCTION_51	CALL_4
0x4005304	          0x4889c7	                            mov rdi, rax	      1929	am.c	FUNCTION_51	CALL_4
0x4005307	      0xe800000000	                          call 0x400530c	      1929	am.c	FUNCTION_51	CALL_4
0x400530c	    0xc785f0feffff	              mov dword [rbp - 0x110], 1	      1930	am.c	FUNCTION_51
0x4005316	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      1931	am.c	FUNCTION_51
0x4005321	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	      1932	am.c	FUNCTION_51
0x400532c	    0xc785f8fcffff	              mov dword [rbp - 0x308], 1	      1933	am.c	FUNCTION_51
0x4005336	    0xc785f4fcffff	              mov dword [rbp - 0x30c], 1	      1934	am.c	FUNCTION_51
0x4005340	    0x8b857cfcffff	            mov eax, dword [rbp - 0x384]	      1935	am.c	FUNCTION_51
0x4005346	    0x8985f0fcffff	            mov dword [rbp - 0x310], eax	      1935	am.c	FUNCTION_51
0x400534c	    0x48c78558fdff	              mov qword [rbp - 0x2a8], 0	      1936	am.c	FUNCTION_51
0x4005357	    0x488b8588fcff	            mov rax, qword [rbp - 0x378]	      1937	am.c	FUNCTION_51	CALL_5
0x400535e	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1937	am.c	FUNCTION_51	CALL_5
0x4005362	    0x488b8588fcff	            mov rax, qword [rbp - 0x378]	      1937	am.c	FUNCTION_51	CALL_5
0x4005369	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1937	am.c	FUNCTION_51	CALL_5
0x400536d	    0x488d85a0fcff	                  lea rax, [rbp - 0x360]	      1937	am.c	FUNCTION_51	CALL_5
0x4005374	          0x4889ce	                            mov rsi, rcx	      1937	am.c	FUNCTION_51	CALL_5
0x4005377	          0x4889c7	                            mov rdi, rax	      1937	am.c	FUNCTION_51	CALL_5
0x400537a	      0xe800000000	                          call 0x400537f	      1937	am.c	FUNCTION_51	CALL_5
0x400537f	    0x488b8580fcff	            mov rax, qword [rbp - 0x380]	      1938	am.c	FUNCTION_51	CALL_6
0x4005386	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1938	am.c	FUNCTION_51	CALL_6
0x400538a	    0x488b8580fcff	            mov rax, qword [rbp - 0x380]	      1938	am.c	FUNCTION_51	CALL_6
0x4005391	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1938	am.c	FUNCTION_51	CALL_6
0x4005395	    0x488d8da0fcff	                  lea rcx, [rbp - 0x360]	      1938	am.c	FUNCTION_51	CALL_6
0x400539c	        0x4883c128	                           add rcx, 0x28	      1938	am.c	FUNCTION_51	CALL_6
0x40053a0	          0x4889c6	                            mov rsi, rax	      1938	am.c	FUNCTION_51	CALL_6
0x40053a3	          0x4889cf	                            mov rdi, rcx	      1938	am.c	FUNCTION_51	CALL_6
0x40053a6	      0xe800000000	                          call 0x40053ab	      1938	am.c	FUNCTION_51	CALL_6
0x40053ab	    0x488d95f0fcff	                  lea rdx, [rbp - 0x310]	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x40053b2	    0x488d85a0fcff	                  lea rax, [rbp - 0x360]	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x40053b9	          0x4889c6	                            mov rsi, rax	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x40053bc	      0xbf02000000	                              mov edi, 2	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x40053c1	      0xe800000000	                          call 0x40053c6	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x40053c6	            0x85c0	                           test eax, eax	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x40053c8	            0x7416	                            je 0x40053e0	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x40053ca	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	      1941	am.c	FUNCTION_51	IF_2	CALL_8
0x40053d1	          0x4889c7	                            mov rdi, rax	      1941	am.c	FUNCTION_51	IF_2	CALL_8
0x40053d4	      0xe81db0ffff	             call sym.rollback_lock_file	      1941	am.c	FUNCTION_51	IF_2	CALL_8
0x40053d9	      0xb8ffffffff	                     mov eax, 0xffffffff	      1942	am.c	FUNCTION_51	IF_2
0x40053de	            0xeb39	                           jmp 0x4005419	      1942	am.c	FUNCTION_51	IF_2
0x40053e0	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x40053e7	      0xba01000000	                              mov edx, 1	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x40053ec	          0x4889c6	                            mov rsi, rax	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x40053ef	      0xbf00000000	                              mov edi, 0	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x40053f4	      0xe800000000	                          call 0x40053f9	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x40053f9	            0x85c0	                           test eax, eax	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x40053fb	            0x7417	                            je 0x4005414	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x40053fd	      0xbf00000000	                              mov edi, 0	      1946	am.c	FUNCTION_51	CALL_11
0x4005402	      0xe82faeffff	                               call sym.	      1946	am.c	FUNCTION_51	CALL_11
0x4005407	          0x4889c7	                            mov rdi, rax	      1946	am.c	FUNCTION_51	CALL_11
0x400540a	      0xb800000000	                              mov eax, 0	      1946	am.c	FUNCTION_51	CALL_11
0x400540f	      0xe800000000	                          call 0x4005414	      1946	am.c	FUNCTION_51	CALL_11
0x4005414	      0xb800000000	                              mov eax, 0	      1948	am.c	FUNCTION_51
0x4005419	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1949	am.c	FUNCTION_51
0x400541d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1949	am.c	FUNCTION_51
0x4005426	            0x7405	                            je 0x400542d	      1949	am.c	FUNCTION_51
0x4005428	      0xe800000000	                          call 0x400542d	      1949	am.c	FUNCTION_51
0x400542d	              0xc9	                                   leave	      1949	am.c	FUNCTION_51
0x400542e	              0xc3	                                     ret	      1949	am.c	FUNCTION_51
is_mail	functions,0:IF,5:FOR,0:SWITCH,0:DO,0:WHILE,1:ELSE,0:CALL,9	82
0x40018f1	              0x55	                                push rbp	       595	am.c	FUNCTION_23
0x40018f2	          0x4889e5	                            mov rbp, rsp	       595	am.c	FUNCTION_23
0x40018f5	    0x4881ec900000	                           sub rsp, 0x90	       595	am.c	FUNCTION_23
0x40018fc	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       595	am.c	FUNCTION_23
0x4001903	    0x64488b042528	                mov rax, qword fs:[0x28]	       595	am.c	FUNCTION_23
0x400190c	        0x488945f8	                mov qword [rbp - 8], rax	       595	am.c	FUNCTION_23
0x4001910	            0x31c0	                            xor eax, eax	       595	am.c	FUNCTION_23
0x4001912	    0x48c745880000	               mov qword [rbp - 0x78], 0	       596	am.c	FUNCTION_23
0x400191a	    0x48c745900000	               mov qword [rbp - 0x70], 0	       597	am.c	FUNCTION_23
0x4001922	    0x48c745980000	               mov qword [rbp - 0x68], 0	       597	am.c	FUNCTION_23
0x400192a	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       597	am.c	FUNCTION_23
0x4001932	    0xc74584010000	               mov dword [rbp - 0x7c], 1	       599	am.c	FUNCTION_23
0x4001939	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       601	am.c	FUNCTION_23	IF_1	CALL_1
0x4001940	      0xba00000000	                              mov edx, 0	       601	am.c	FUNCTION_23	IF_1	CALL_1
0x4001945	      0xbe00000000	                              mov esi, 0	       601	am.c	FUNCTION_23	IF_1	CALL_1
0x400194a	          0x4889c7	                            mov rdi, rax	       601	am.c	FUNCTION_23	IF_1	CALL_1
0x400194d	      0xe800000000	                          call 0x4001952	       601	am.c	FUNCTION_23	IF_1	CALL_1
0x4001952	            0x85c0	                           test eax, eax	       601	am.c	FUNCTION_23	IF_1	CALL_1
0x4001954	            0x7417	                            je 0x400196d	       601	am.c	FUNCTION_23	IF_1	CALL_1
0x4001956	      0xbf00000000	                              mov edi, 0	       602	am.c	FUNCTION_23	CALL_3
0x400195b	      0xe8d6e8ffff	                               call sym.	       602	am.c	FUNCTION_23	CALL_3
0x4001960	          0x4889c7	                            mov rdi, rax	       602	am.c	FUNCTION_23	CALL_3
0x4001963	      0xb800000000	                              mov eax, 0	       602	am.c	FUNCTION_23	CALL_3
0x4001968	      0xe800000000	                          call 0x400196d	       602	am.c	FUNCTION_23	CALL_3
0x400196d	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x4001971	        0x488d45b0	                   lea rax, [rbp - 0x50]	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x4001975	      0xba09000000	                              mov edx, 9	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x400197a	          0x4889ce	                            mov rsi, rcx	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x400197d	          0x4889c7	                            mov rdi, rax	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x4001980	      0xe800000000	                          call 0x4001985	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x4001985	            0x85c0	                           test eax, eax	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x4001987	            0x7464	                            je 0x40019ed	       604	am.c	FUNCTION_23	IF_2	CALL_4
0x4001989	        0x488b4588	             mov rax, qword [rbp - 0x78]	       605	am.c	FUNCTION_23	CALL_5
0x400198d	          0x4889c6	                            mov rsi, rax	       605	am.c	FUNCTION_23	CALL_5
0x4001990	      0xbf00000000	                              mov edi, 0	       605	am.c	FUNCTION_23	CALL_5
0x4001995	      0xb800000000	                              mov eax, 0	       605	am.c	FUNCTION_23	CALL_5
0x400199a	      0xe800000000	                          call 0x400199f	       605	am.c	FUNCTION_23	CALL_5
0x400199f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       608	am.c	FUNCTION_23	WHILE_1	IF_3
0x40019a3	          0x4885c0	                           test rax, rax	       608	am.c	FUNCTION_23	WHILE_1	IF_3
0x40019a6	            0x7461	                            je 0x4001a09	       608	am.c	FUNCTION_23	WHILE_1	IF_3
0x40019a8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x40019ac	           0xfb600	                   movzx eax, byte [rax]	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x40019af	            0x3c09	                               cmp al, 9	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x40019b1	            0x743a	                            je 0x40019ed	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x40019b3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x40019b7	           0xfb600	                   movzx eax, byte [rax]	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x40019ba	            0x3c20	                            cmp al, 0x20	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x40019bc	            0x7502	                           jne 0x40019c0	       612	am.c	FUNCTION_23	WHILE_1	IF_4
0x40019be	            0xeb2d	                           jmp 0x40019ed	       613	am.c	FUNCTION_23	WHILE_1	IF_4
0x40019c0	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x40019c4	        0x488d45b0	                   lea rax, [rbp - 0x50]	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x40019c8	    0x41b800000000	                              mov r8d, 0	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x40019ce	      0xb900000000	                              mov ecx, 0	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x40019d3	      0xba00000000	                              mov edx, 0	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x40019d8	          0x4889c7	                            mov rdi, rax	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x40019db	      0xe800000000	                          call 0x40019e0	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x40019e0	            0x85c0	                           test eax, eax	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x40019e2	            0x7409	                            je 0x40019ed	       616	am.c	FUNCTION_23	WHILE_1	IF_5	CALL_7
0x40019e4	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       617	am.c	FUNCTION_23	WHILE_1	IF_5
0x40019eb	            0xeb1d	                           jmp 0x4001a0a	       618	am.c	FUNCTION_23	WHILE_1	IF_5
0x40019ed	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x40019f4	        0x488d4590	                   lea rax, [rbp - 0x70]	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x40019f8	          0x4889d6	                            mov rsi, rdx	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x40019fb	          0x4889c7	                            mov rdi, rax	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x40019fe	      0xe800000000	                          call 0x4001a03	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x4001a03	            0x85c0	                           test eax, eax	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x4001a05	            0x7498	                            je 0x400199f	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x4001a07	            0xeb01	                           jmp 0x4001a0a	       607	am.c	FUNCTION_23	WHILE_1	CALL_6
0x4001a09	              0x90	                                     nop	       609	am.c	FUNCTION_23	WHILE_1	IF_3
0x4001a0a	        0x488d45b0	                   lea rax, [rbp - 0x50]	       623	am.c	FUNCTION_23	CALL_8
0x4001a0e	          0x4889c7	                            mov rdi, rax	       623	am.c	FUNCTION_23	CALL_8
0x4001a11	      0xe800000000	                          call 0x4001a16	       623	am.c	FUNCTION_23	CALL_8
0x4001a16	        0x488d4590	                   lea rax, [rbp - 0x70]	       624	am.c	FUNCTION_23	CALL_9
0x4001a1a	          0x4889c7	                            mov rdi, rax	       624	am.c	FUNCTION_23	CALL_9
0x4001a1d	      0xe800000000	                          call 0x4001a22	       624	am.c	FUNCTION_23	CALL_9
0x4001a22	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       625	am.c	FUNCTION_23
0x4001a25	        0x488b4df8	                mov rcx, qword [rbp - 8]	       626	am.c	FUNCTION_23
0x4001a29	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       626	am.c	FUNCTION_23
0x4001a32	            0x7405	                            je 0x4001a39	       626	am.c	FUNCTION_23
0x4001a34	      0xe800000000	                          call 0x4001a39	       626	am.c	FUNCTION_23
0x4001a39	              0xc9	                                   leave	       626	am.c	FUNCTION_23
0x4001a3a	              0xc3	                                     ret	       626	am.c	FUNCTION_23
get_mail_commit_oid	functions,0:IF,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,6	52
0x4003627	              0x55	                                push rbp	      1306	am.c	FUNCTION_38
0x4003628	          0x4889e5	                            mov rbp, rsp	      1306	am.c	FUNCTION_38
0x400362b	        0x4883ec50	                           sub rsp, 0x50	      1306	am.c	FUNCTION_38
0x400362f	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1306	am.c	FUNCTION_38
0x4003633	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1306	am.c	FUNCTION_38
0x4003637	    0x64488b042528	                mov rax, qword fs:[0x28]	      1306	am.c	FUNCTION_38
0x4003640	        0x488945f8	                mov qword [rbp - 8], rax	      1306	am.c	FUNCTION_38
0x4003644	            0x31c0	                            xor eax, eax	      1306	am.c	FUNCTION_38
0x4003646	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1307	am.c	FUNCTION_38
0x400364e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1307	am.c	FUNCTION_38
0x4003656	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1307	am.c	FUNCTION_38
0x400365e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1308	am.c	FUNCTION_38	CALL_1
0x4003662	      0xbe00000000	                              mov esi, 0	      1308	am.c	FUNCTION_38	CALL_1
0x4003667	          0x4889c7	                            mov rdi, rax	      1308	am.c	FUNCTION_38	CALL_1
0x400366a	      0xe800000000	                          call 0x400366f	      1308	am.c	FUNCTION_38	CALL_1
0x400366f	        0x488945d8	             mov qword [rbp - 0x28], rax	      1308	am.c	FUNCTION_38	CALL_1
0x4003673	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1310	am.c	FUNCTION_38
0x400367a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x400367e	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x4003682	          0x4889d6	                            mov rsi, rdx	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x4003685	          0x4889c7	                            mov rdi, rax	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x4003688	      0xe800000000	                          call 0x400368d	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x400368d	            0x85c0	                           test eax, eax	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x400368f	            0x7530	                           jne 0x40036c1	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x4003691	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x4003695	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x4003699	      0xbe00000000	                              mov esi, 0	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x400369e	          0x4889c7	                            mov rdi, rax	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x40036a1	      0xe8c7c9ffff	                    call sym.skip_prefix	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x40036a6	            0x85c0	                           test eax, eax	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x40036a8	            0x7417	                            je 0x40036c1	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x40036aa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1314	am.c	FUNCTION_38	IF_1	CALL_4
0x40036ae	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1314	am.c	FUNCTION_38	IF_1	CALL_4
0x40036b2	          0x4889d6	                            mov rsi, rdx	      1314	am.c	FUNCTION_38	IF_1	CALL_4
0x40036b5	          0x4889c7	                            mov rdi, rax	      1314	am.c	FUNCTION_38	IF_1	CALL_4
0x40036b8	      0xe800000000	                          call 0x40036bd	      1314	am.c	FUNCTION_38	IF_1	CALL_4
0x40036bd	            0x85c0	                           test eax, eax	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x40036bf	            0x7907	                           jns 0x40036c8	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x40036c1	    0xc745ccffffff	     mov dword [rbp - 0x34], 0xffffffff 	      1315	am.c	FUNCTION_38	IF_1
0x40036c8	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1317	am.c	FUNCTION_38	CALL_5
0x40036cc	          0x4889c7	                            mov rdi, rax	      1317	am.c	FUNCTION_38	CALL_5
0x40036cf	      0xe800000000	                          call 0x40036d4	      1317	am.c	FUNCTION_38	CALL_5
0x40036d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1318	am.c	FUNCTION_38	CALL_6
0x40036d8	          0x4889c7	                            mov rdi, rax	      1318	am.c	FUNCTION_38	CALL_6
0x40036db	      0xe800000000	                          call 0x40036e0	      1318	am.c	FUNCTION_38	CALL_6
0x40036e0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1319	am.c	FUNCTION_38
0x40036e3	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1320	am.c	FUNCTION_38
0x40036e7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1320	am.c	FUNCTION_38
0x40036f0	            0x7405	                            je 0x40036f7	      1320	am.c	FUNCTION_38
0x40036f2	      0xe800000000	                          call 0x40036f7	      1320	am.c	FUNCTION_38
0x40036f7	              0xc9	                                   leave	      1320	am.c	FUNCTION_38
0x40036f8	              0xc3	                                     ret	      1320	am.c	FUNCTION_38
git_am_config	functions,0:IF,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,2	25
0x4005d66	              0x55	                                push rbp	      2189	am.c	FUNCTION_60
0x4005d67	          0x4889e5	                            mov rbp, rsp	      2189	am.c	FUNCTION_60
0x4005d6a	        0x4883ec30	                           sub rsp, 0x30	      2189	am.c	FUNCTION_60
0x4005d6e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2189	am.c	FUNCTION_60
0x4005d72	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2189	am.c	FUNCTION_60
0x4005d76	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2189	am.c	FUNCTION_60
0x4005d7a	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2192	am.c	FUNCTION_60	CALL_1
0x4005d7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2192	am.c	FUNCTION_60	CALL_1
0x4005d82	      0xba00000000	                              mov edx, 0	      2192	am.c	FUNCTION_60	CALL_1
0x4005d87	          0x4889ce	                            mov rsi, rcx	      2192	am.c	FUNCTION_60	CALL_1
0x4005d8a	          0x4889c7	                            mov rdi, rax	      2192	am.c	FUNCTION_60	CALL_1
0x4005d8d	      0xe800000000	                          call 0x4005d92	      2192	am.c	FUNCTION_60	CALL_1
0x4005d92	          0x8945fc	                mov dword [rbp - 4], eax	      2192	am.c	FUNCTION_60	CALL_1
0x4005d95	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2193	am.c	FUNCTION_60	IF_1
0x4005d99	            0x7405	                            je 0x4005da0	      2193	am.c	FUNCTION_60	IF_1
0x4005d9b	          0x8b45fc	                mov eax, dword [rbp - 4]	      2194	am.c	FUNCTION_60	IF_1
0x4005d9e	            0xeb18	                           jmp 0x4005db8	      2194	am.c	FUNCTION_60	IF_1
0x4005da0	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2196	am.c	FUNCTION_60	CALL_2
0x4005da4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2196	am.c	FUNCTION_60	CALL_2
0x4005da8	      0xba00000000	                              mov edx, 0	      2196	am.c	FUNCTION_60	CALL_2
0x4005dad	          0x4889ce	                            mov rsi, rcx	      2196	am.c	FUNCTION_60	CALL_2
0x4005db0	          0x4889c7	                            mov rdi, rax	      2196	am.c	FUNCTION_60	CALL_2
0x4005db3	      0xe800000000	                          call 0x4005db8	      2196	am.c	FUNCTION_60	CALL_2
0x4005db8	              0xc9	                                   leave	      2197	am.c	FUNCTION_60
0x4005db9	              0xc3	                                     ret	      2197	am.c	FUNCTION_60
split_mail_conv	functions,0:IF,7:FOR,1:SWITCH,0:DO,0:WHILE,0:ELSE,1:CALL,9	121
0x4001e7e	              0x55	                                push rbp	       752	am.c	FUNCTION_26
0x4001e7f	          0x4889e5	                            mov rbp, rsp	       752	am.c	FUNCTION_26
0x4001e82	              0x53	                                push rbx	       752	am.c	FUNCTION_26
0x4001e83	        0x4883ec48	                           sub rsp, 0x48	       752	am.c	FUNCTION_26
0x4001e87	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       752	am.c	FUNCTION_26
0x4001e8b	        0x488975c0	             mov qword [rbp - 0x40], rsi	       752	am.c	FUNCTION_26
0x4001e8f	        0x488955b8	             mov qword [rbp - 0x48], rdx	       752	am.c	FUNCTION_26
0x4001e93	          0x894db4	             mov dword [rbp - 0x4c], ecx	       752	am.c	FUNCTION_26
0x4001e96	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       756	am.c	FUNCTION_26	IF_1
0x4001e9a	          0x488b00	                    mov rax, qword [rax]	       756	am.c	FUNCTION_26	IF_1
0x4001e9d	          0x4885c0	                           test rax, rax	       756	am.c	FUNCTION_26	IF_1
0x4001ea0	            0x7508	                           jne 0x4001eaa	       756	am.c	FUNCTION_26	IF_1
0x4001ea2	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       757	am.c	FUNCTION_26	IF_1
0x4001eaa	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       759	am.c	FUNCTION_26	FOR_1
0x4001eb1	      0xe96c010000	                           jmp 0x4002022	       759	am.c	FUNCTION_26	FOR_1
0x4001eb6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x4001eba	          0x488b00	                    mov rax, qword [rax]	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x4001ebd	      0xbe00000000	                              mov esi, 0	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x4001ec2	          0x4889c7	                            mov rdi, rax	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x4001ec5	      0xe800000000	                          call 0x4001eca	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x4001eca	            0x85c0	                           test eax, eax	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x4001ecc	            0x750d	                           jne 0x4001edb	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x4001ece	    0x488b05000000	            mov rax, qword [0x04001ed5] 	       765	am.c	FUNCTION_26	FOR_1	IF_2
0x4001ed5	        0x488945d8	             mov qword [rbp - 0x28], rax	       765	am.c	FUNCTION_26	FOR_1	IF_2
0x4001ed9	            0xeb18	                           jmp 0x4001ef3	       765	am.c	FUNCTION_26	FOR_1	IF_2
0x4001edb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       767	am.c	FUNCTION_26	FOR_1	ELSE_1
0x4001edf	          0x488b00	                    mov rax, qword [rax]	       767	am.c	FUNCTION_26	FOR_1	ELSE_1
0x4001ee2	      0xbe00000000	                              mov esi, 0	       767	am.c	FUNCTION_26	FOR_1	ELSE_1
0x4001ee7	          0x4889c7	                            mov rdi, rax	       767	am.c	FUNCTION_26	FOR_1	ELSE_1
0x4001eea	      0xe800000000	                          call 0x4001eef	       767	am.c	FUNCTION_26	FOR_1	ELSE_1
0x4001eef	        0x488945d8	             mov qword [rbp - 0x28], rax	       767	am.c	FUNCTION_26	FOR_1	ELSE_1
0x4001ef3	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       769	am.c	FUNCTION_26	FOR_1	IF_3
0x4001ef8	            0x752b	                           jne 0x4001f25	       769	am.c	FUNCTION_26	FOR_1	IF_3
0x4001efa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001efe	          0x488b18	                    mov rbx, qword [rax]	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001f01	      0xbf00000000	                              mov edi, 0	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001f06	      0xe82be3ffff	                               call sym.	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001f0b	          0x4889de	                            mov rsi, rbx	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001f0e	          0x4889c7	                            mov rdi, rax	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001f11	      0xb800000000	                              mov eax, 0	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001f16	      0xe800000000	                          call 0x4001f1b	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001f1b	      0xe842e1ffff	                    call sym.const_error	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001f20	      0xe927010000	                           jmp 0x400204c	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4001f25	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001f28	          0x8d4801	                      lea ecx, [rax + 1]	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001f2b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001f2f	          0x8b504c	            mov edx, dword [rax + 0x4c] 	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001f32	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001f36	          0x488b00	                    mov rax, qword [rax]	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001f39	          0x4889c6	                            mov rsi, rax	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001f3c	      0xbf00000000	                              mov edi, 0	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001f41	      0xb800000000	                              mov eax, 0	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001f46	      0xe800000000	                          call 0x4001f4b	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001f4b	        0x488945e0	             mov qword [rbp - 0x20], rax	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4001f4f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       775	am.c	FUNCTION_26	FOR_1
0x4001f53	      0xbe00000000	                              mov esi, 0	       775	am.c	FUNCTION_26	FOR_1
0x4001f58	          0x4889c7	                            mov rdi, rax	       775	am.c	FUNCTION_26	FOR_1
0x4001f5b	      0xe800000000	                          call 0x4001f60	       775	am.c	FUNCTION_26	FOR_1
0x4001f60	        0x488945e8	             mov qword [rbp - 0x18], rax	       775	am.c	FUNCTION_26	FOR_1
0x4001f64	      0x48837de800	               cmp qword [rbp - 0x18], 0	       776	am.c	FUNCTION_26	FOR_1	IF_4
0x4001f69	            0x7544	                           jne 0x4001faf	       776	am.c	FUNCTION_26	FOR_1	IF_4
0x4001f6b	    0x488b05000000	            mov rax, qword [0x04001f72] 	       777	am.c	FUNCTION_26	FOR_1	IF_4	IF_5
0x4001f72	        0x483945d8	            cmp qword [rbp - 0x28], rax 	       777	am.c	FUNCTION_26	FOR_1	IF_4	IF_5
0x4001f76	            0x740c	                            je 0x4001f84	       777	am.c	FUNCTION_26	FOR_1	IF_4	IF_5
0x4001f78	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       778	am.c	FUNCTION_26	FOR_1	IF_4	CALL_4
0x4001f7c	          0x4889c7	                            mov rdi, rax	       778	am.c	FUNCTION_26	FOR_1	IF_4	CALL_4
0x4001f7f	      0xe800000000	                          call 0x4001f84	       778	am.c	FUNCTION_26	FOR_1	IF_4	CALL_4
0x4001f84	      0xbf00000000	                              mov edi, 0	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4001f89	      0xe8a8e2ffff	                               call sym.	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4001f8e	          0x4889c2	                            mov rdx, rax	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4001f91	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4001f95	          0x4889c6	                            mov rsi, rax	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4001f98	          0x4889d7	                            mov rdi, rdx	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4001f9b	      0xb800000000	                              mov eax, 0	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4001fa0	      0xe800000000	                          call 0x4001fa5	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4001fa5	      0xe8b8e0ffff	                    call sym.const_error	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4001faa	      0xe99d000000	                           jmp 0x400204c	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4001faf	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x4001fb2	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x4001fb6	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x4001fba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x4001fbe	          0x4889cf	                            mov rdi, rcx	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x4001fc1	            0xffd0	                                call rax	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x4001fc3	          0x8945d4	             mov dword [rbp - 0x2c], eax	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x4001fc6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       785	am.c	FUNCTION_26	FOR_1	CALL_7
0x4001fca	          0x4889c7	                            mov rdi, rax	       785	am.c	FUNCTION_26	FOR_1	CALL_7
0x4001fcd	      0xe800000000	                          call 0x4001fd2	       785	am.c	FUNCTION_26	FOR_1	CALL_7
0x4001fd2	    0x488b05000000	            mov rax, qword [0x04001fd9] 	       786	am.c	FUNCTION_26	FOR_1	IF_6
0x4001fd9	        0x483945d8	            cmp qword [rbp - 0x28], rax 	       786	am.c	FUNCTION_26	FOR_1	IF_6
0x4001fdd	            0x740c	                            je 0x4001feb	       786	am.c	FUNCTION_26	FOR_1	IF_6
0x4001fdf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       787	am.c	FUNCTION_26	FOR_1	CALL_8
0x4001fe3	          0x4889c7	                            mov rdi, rax	       787	am.c	FUNCTION_26	FOR_1	CALL_8
0x4001fe6	      0xe800000000	                          call 0x4001feb	       787	am.c	FUNCTION_26	FOR_1	CALL_8
0x4001feb	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       789	am.c	FUNCTION_26	FOR_1	IF_7
0x4001fef	            0x7428	                            je 0x4002019	       789	am.c	FUNCTION_26	FOR_1	IF_7
0x4001ff1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x4001ff5	          0x488b18	                    mov rbx, qword [rax]	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x4001ff8	      0xbf00000000	                              mov edi, 0	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x4001ffd	      0xe834e2ffff	                               call sym.	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x4002002	          0x4889de	                            mov rsi, rbx	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x4002005	          0x4889c7	                            mov rdi, rax	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x4002008	      0xb800000000	                              mov eax, 0	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x400200d	      0xe800000000	                          call 0x4002012	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x4002012	      0xe84be0ffff	                    call sym.const_error	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x4002017	            0xeb33	                           jmp 0x400204c	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x4002019	      0x488345b808	               add qword [rbp - 0x48], 8	       759	am.c	FUNCTION_26	FOR_1
0x400201e	        0x8345d001	               add dword [rbp - 0x30], 1	       759	am.c	FUNCTION_26	FOR_1
0x4002022	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       759	am.c	FUNCTION_26	FOR_1
0x4002026	          0x488b00	                    mov rax, qword [rax]	       759	am.c	FUNCTION_26	FOR_1
0x4002029	          0x4885c0	                           test rax, rax	       759	am.c	FUNCTION_26	FOR_1
0x400202c	     0xf8584feffff	                           jne 0x4001eb6	       759	am.c	FUNCTION_26	FOR_1
0x4002032	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       793	am.c	FUNCTION_26
0x4002036	    0xc74008010000	                  mov dword [rax + 8], 1	       793	am.c	FUNCTION_26
0x400203d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       794	am.c	FUNCTION_26
0x4002041	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       794	am.c	FUNCTION_26
0x4002044	          0x89500c	              mov dword [rax + 0xc], edx	       794	am.c	FUNCTION_26
0x4002047	      0xb800000000	                              mov eax, 0	       795	am.c	FUNCTION_26
0x400204c	        0x4883c448	                           add rsp, 0x48	       796	am.c	FUNCTION_26
0x4002050	              0x5b	                                 pop rbx	       796	am.c	FUNCTION_26
0x4002051	              0x5d	                                 pop rbp	       796	am.c	FUNCTION_26
0x4002052	              0xc3	                                     ret	       796	am.c	FUNCTION_26
say	functions,0:IF,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,4	49
0x400076a	              0x55	                                push rbp	       212	am.c	FUNCTION_10
0x400076b	          0x4889e5	                            mov rbp, rsp	       212	am.c	FUNCTION_10
0x400076e	    0x4881ecf00000	                           sub rsp, 0xf0	       212	am.c	FUNCTION_10
0x4000775	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       212	am.c	FUNCTION_10
0x400077c	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       212	am.c	FUNCTION_10
0x4000783	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	       212	am.c	FUNCTION_10
0x400078a	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       212	am.c	FUNCTION_10
0x4000791	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       212	am.c	FUNCTION_10
0x4000798	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       212	am.c	FUNCTION_10
0x400079f	            0x84c0	                             test al, al	       212	am.c	FUNCTION_10
0x40007a1	            0x7420	                            je 0x40007c3	       212	am.c	FUNCTION_10
0x40007a3	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       212	am.c	FUNCTION_10
0x40007a7	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       212	am.c	FUNCTION_10
0x40007ab	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       212	am.c	FUNCTION_10
0x40007af	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       212	am.c	FUNCTION_10
0x40007b3	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       212	am.c	FUNCTION_10
0x40007b7	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       212	am.c	FUNCTION_10
0x40007bb	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       212	am.c	FUNCTION_10
0x40007bf	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       212	am.c	FUNCTION_10
0x40007c3	    0x64488b042528	                mov rax, qword fs:[0x28]	       212	am.c	FUNCTION_10
0x40007cc	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       212	am.c	FUNCTION_10
0x40007d3	            0x31c0	                            xor eax, eax	       212	am.c	FUNCTION_10
0x40007d5	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       215	am.c	FUNCTION_10	CALL_1
0x40007df	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       215	am.c	FUNCTION_10	CALL_1
0x40007e9	        0x488d4510	                   lea rax, [rbp + 0x10]	       215	am.c	FUNCTION_10	CALL_1
0x40007ed	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       215	am.c	FUNCTION_10	CALL_1
0x40007f4	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       215	am.c	FUNCTION_10	CALL_1
0x40007fb	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       215	am.c	FUNCTION_10	CALL_1
0x4000802	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       216	am.c	FUNCTION_10	IF_1
0x4000809	          0x8b4058	            mov eax, dword [rax + 0x58] 	       216	am.c	FUNCTION_10	IF_1
0x400080c	            0x85c0	                           test eax, eax	       216	am.c	FUNCTION_10	IF_1
0x400080e	            0x7534	                           jne 0x4000844	       216	am.c	FUNCTION_10	IF_1
0x4000810	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       217	am.c	FUNCTION_10	IF_1	CALL_2
0x4000817	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	       217	am.c	FUNCTION_10	IF_1	CALL_2
0x400081e	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       217	am.c	FUNCTION_10	IF_1	CALL_2
0x4000825	          0x4889ce	                            mov rsi, rcx	       217	am.c	FUNCTION_10	IF_1	CALL_2
0x4000828	          0x4889c7	                            mov rdi, rax	       217	am.c	FUNCTION_10	IF_1	CALL_2
0x400082b	      0xe800000000	                          call 0x4000830	       217	am.c	FUNCTION_10	IF_1	CALL_2
0x4000830	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x4000837	          0x4889c6	                            mov rsi, rax	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x400083a	      0xbf0a000000	                            mov edi, 0xa	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x400083f	      0xe800000000	                          call 0x4000844	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x4000844	              0x90	                                     nop	       221	am.c	FUNCTION_10
0x4000845	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       221	am.c	FUNCTION_10
0x400084c	    0x644833042528	                xor rax, qword fs:[0x28]	       221	am.c	FUNCTION_10
0x4000855	            0x7405	                            je 0x400085c	       221	am.c	FUNCTION_10
0x4000857	      0xe800000000	                          call 0x400085c	       221	am.c	FUNCTION_10
0x400085c	              0xc9	                                   leave	       221	am.c	FUNCTION_10
0x400085d	              0xc3	                                     ret	       221	am.c	FUNCTION_10
show_patch	functions,0:IF,2:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,13	81
0x4005b15	              0x55	                                push rbp	      2128	am.c	FUNCTION_58
0x4005b16	          0x4889e5	                            mov rbp, rsp	      2128	am.c	FUNCTION_58
0x4005b19	        0x4883c480	             add rsp, 0xffffffffffffff80	      2128	am.c	FUNCTION_58
0x4005b1d	        0x48897d88	             mov qword [rbp - 0x78], rdi	      2128	am.c	FUNCTION_58
0x4005b21	    0x64488b042528	                mov rax, qword fs:[0x28]	      2128	am.c	FUNCTION_58
0x4005b2a	        0x488945f8	                mov qword [rbp - 8], rax	      2128	am.c	FUNCTION_58
0x4005b2e	            0x31c0	                            xor eax, eax	      2128	am.c	FUNCTION_58
0x4005b30	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      2129	am.c	FUNCTION_58
0x4005b38	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2129	am.c	FUNCTION_58
0x4005b40	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2129	am.c	FUNCTION_58
0x4005b48	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2133	am.c	FUNCTION_58	IF_1	CALL_1
0x4005b4c	        0x4883c038	                           add rax, 0x38	      2133	am.c	FUNCTION_58	IF_1	CALL_1
0x4005b50	          0x4889c7	                            mov rdi, rax	      2133	am.c	FUNCTION_58	IF_1	CALL_1
0x4005b53	      0xe859a7ffff	                    call sym.is_null_oid	      2133	am.c	FUNCTION_58	IF_1	CALL_1
0x4005b58	            0x85c0	                           test eax, eax	      2133	am.c	FUNCTION_58	IF_1	CALL_1
0x4005b5a	            0x756c	                           jne 0x4005bc8	      2133	am.c	FUNCTION_58	IF_1	CALL_1
0x4005b5c	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2134	am.c	FUNCTION_58	IF_1
0x4005b64	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2134	am.c	FUNCTION_58	IF_1
0x4005b6c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2134	am.c	FUNCTION_58	IF_1
0x4005b74	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2134	am.c	FUNCTION_58	IF_1
0x4005b7c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x4005b80	        0x4883c038	                           add rax, 0x38	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x4005b84	          0x4889c7	                            mov rdi, rax	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x4005b87	      0xe800000000	                          call 0x4005b8c	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x4005b8c	          0x4889c7	                            mov rdi, rax	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x4005b8f	      0xe800000000	                          call 0x4005b94	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x4005b94	        0x488945a0	             mov qword [rbp - 0x60], rax	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x4005b98	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x4005b9c	        0x488945d8	             mov qword [rbp - 0x28], rax	      2138	am.c	FUNCTION_58	IF_1	CALL_3
0x4005ba0	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2139	am.c	FUNCTION_58	IF_1	CALL_4
0x4005ba4	      0xbe02000000	                              mov esi, 2	      2139	am.c	FUNCTION_58	IF_1	CALL_4
0x4005ba9	          0x4889c7	                            mov rdi, rax	      2139	am.c	FUNCTION_58	IF_1	CALL_4
0x4005bac	      0xe800000000	                          call 0x4005bb1	      2139	am.c	FUNCTION_58	IF_1	CALL_4
0x4005bb1	          0x894598	             mov dword [rbp - 0x68], eax	      2139	am.c	FUNCTION_58	IF_1	CALL_4
0x4005bb4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2140	am.c	FUNCTION_58	IF_1	CALL_5
0x4005bb8	          0x4889c7	                            mov rdi, rax	      2140	am.c	FUNCTION_58	IF_1	CALL_5
0x4005bbb	      0xe800000000	                          call 0x4005bc0	      2140	am.c	FUNCTION_58	IF_1	CALL_5
0x4005bc0	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2141	am.c	FUNCTION_58	IF_1
0x4005bc3	      0xe98f000000	                           jmp 0x4005c57	      2141	am.c	FUNCTION_58	IF_1
0x4005bc8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2144	am.c	FUNCTION_58	CALL_7
0x4005bcc	          0x4889c7	                            mov rdi, rax	      2144	am.c	FUNCTION_58	CALL_7
0x4005bcf	      0xe8dad1ffff	                         call sym.msgnum	      2144	am.c	FUNCTION_58	CALL_7
0x4005bd4	          0x4889c2	                            mov rdx, rax	      2144	am.c	FUNCTION_58	CALL_7
0x4005bd7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2144	am.c	FUNCTION_58	CALL_7
0x4005bdb	          0x4889d6	                            mov rsi, rdx	      2144	am.c	FUNCTION_58	CALL_7
0x4005bde	          0x4889c7	                            mov rdi, rax	      2144	am.c	FUNCTION_58	CALL_7
0x4005be1	      0xe891aaffff	                        call sym.am_path	      2144	am.c	FUNCTION_58	CALL_7
0x4005be6	        0x488945a8	             mov qword [rbp - 0x58], rax	      2144	am.c	FUNCTION_58	CALL_7
0x4005bea	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2145	am.c	FUNCTION_58	CALL_8
0x4005bee	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2145	am.c	FUNCTION_58	CALL_8
0x4005bf2	      0xba00000000	                              mov edx, 0	      2145	am.c	FUNCTION_58	CALL_8
0x4005bf7	          0x4889ce	                            mov rsi, rcx	      2145	am.c	FUNCTION_58	CALL_8
0x4005bfa	          0x4889c7	                            mov rdi, rax	      2145	am.c	FUNCTION_58	CALL_8
0x4005bfd	      0xe800000000	                          call 0x4005c02	      2145	am.c	FUNCTION_58	CALL_8
0x4005c02	          0x89459c	             mov dword [rbp - 0x64], eax	      2145	am.c	FUNCTION_58	CALL_8
0x4005c05	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      2146	am.c	FUNCTION_58	IF_2
0x4005c09	            0x7921	                           jns 0x4005c2c	      2146	am.c	FUNCTION_58	IF_2
0x4005c0b	      0xbf00000000	                              mov edi, 0	      2147	am.c	FUNCTION_58	CALL_10
0x4005c10	      0xe821a6ffff	                               call sym.	      2147	am.c	FUNCTION_58	CALL_10
0x4005c15	          0x4889c2	                            mov rdx, rax	      2147	am.c	FUNCTION_58	CALL_10
0x4005c18	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2147	am.c	FUNCTION_58	CALL_10
0x4005c1c	          0x4889c6	                            mov rsi, rax	      2147	am.c	FUNCTION_58	CALL_10
0x4005c1f	          0x4889d7	                            mov rdi, rdx	      2147	am.c	FUNCTION_58	CALL_10
0x4005c22	      0xb800000000	                              mov eax, 0	      2147	am.c	FUNCTION_58	CALL_10
0x4005c27	      0xe800000000	                          call 0x4005c2c	      2147	am.c	FUNCTION_58	CALL_10
0x4005c2c	      0xe800000000	                          call 0x4005c31	      2149	am.c	FUNCTION_58	CALL_11
0x4005c31	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2150	am.c	FUNCTION_58	CALL_12
0x4005c35	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2150	am.c	FUNCTION_58	CALL_12
0x4005c39	          0x4889c6	                            mov rsi, rax	      2150	am.c	FUNCTION_58	CALL_12
0x4005c3c	      0xbf01000000	                              mov edi, 1	      2150	am.c	FUNCTION_58	CALL_12
0x4005c41	      0xe800000000	                          call 0x4005c46	      2150	am.c	FUNCTION_58	CALL_12
0x4005c46	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2151	am.c	FUNCTION_58	CALL_13
0x4005c4a	          0x4889c7	                            mov rdi, rax	      2151	am.c	FUNCTION_58	CALL_13
0x4005c4d	      0xe800000000	                          call 0x4005c52	      2151	am.c	FUNCTION_58	CALL_13
0x4005c52	      0xb800000000	                              mov eax, 0	      2152	am.c	FUNCTION_58
0x4005c57	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2153	am.c	FUNCTION_58
0x4005c5b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2153	am.c	FUNCTION_58
0x4005c64	            0x7405	                            je 0x4005c6b	      2153	am.c	FUNCTION_58
0x4005c66	      0xe800000000	                          call 0x4005c6b	      2153	am.c	FUNCTION_58
0x4005c6b	              0xc9	                                   leave	      2153	am.c	FUNCTION_58
0x4005c6c	              0xc3	                                     ret	      2153	am.c	FUNCTION_58
am_setup	functions,0:IF,10:FOR,0:SWITCH,2:DO,0:WHILE,0:ELSE,2:CALL,34	256
0x400281a	              0x55	                                push rbp	       999	am.c	FUNCTION_31
0x400281b	          0x4889e5	                            mov rbp, rsp	       999	am.c	FUNCTION_31
0x400281e	              0x53	                                push rbx	       999	am.c	FUNCTION_31
0x400281f	        0x4883ec78	                           sub rsp, 0x78	       999	am.c	FUNCTION_31
0x4002823	        0x48897d98	             mov qword [rbp - 0x68], rdi	       999	am.c	FUNCTION_31
0x4002827	          0x897594	             mov dword [rbp - 0x6c], esi	       999	am.c	FUNCTION_31
0x400282a	        0x48895588	             mov qword [rbp - 0x78], rdx	       999	am.c	FUNCTION_31
0x400282e	          0x894d90	             mov dword [rbp - 0x70], ecx	       999	am.c	FUNCTION_31
0x4002831	    0x64488b042528	                mov rax, qword fs:[0x28]	       999	am.c	FUNCTION_31
0x400283a	        0x488945e8	             mov qword [rbp - 0x18], rax	       999	am.c	FUNCTION_31
0x400283e	            0x31c0	                            xor eax, eax	       999	am.c	FUNCTION_31
0x4002840	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1002	am.c	FUNCTION_31
0x4002848	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1002	am.c	FUNCTION_31
0x4002850	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1002	am.c	FUNCTION_31
0x4002858	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      1004	am.c	FUNCTION_31	IF_1
0x400285c	            0x750f	                           jne 0x400286d	      1004	am.c	FUNCTION_31	IF_1
0x400285e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1005	am.c	FUNCTION_31	CALL_1
0x4002862	          0x4889c7	                            mov rdi, rax	      1005	am.c	FUNCTION_31	CALL_1
0x4002865	      0xe8d1f1ffff	            call sym.detect_patch_format	      1005	am.c	FUNCTION_31	CALL_1
0x400286a	          0x894594	             mov dword [rbp - 0x6c], eax	      1005	am.c	FUNCTION_31	CALL_1
0x400286d	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      1007	am.c	FUNCTION_31	IF_2
0x4002871	            0x752e	                           jne 0x40028a1	      1007	am.c	FUNCTION_31	IF_2
0x4002873	      0xbf00000000	                              mov edi, 0	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x4002878	      0xe8b9d9ffff	                               call sym.	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x400287d	          0x4889c2	                            mov rdx, rax	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x4002880	    0x488b05000000	            mov rax, qword [0x04002887] 	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x4002887	          0x4889d6	                            mov rsi, rdx	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x400288a	          0x4889c7	                            mov rdi, rax	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x400288d	      0xb800000000	                              mov eax, 0	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x4002892	      0xe800000000	                          call 0x4002897	      1008	am.c	FUNCTION_31	IF_2	CALL_3
0x4002897	      0xbf80000000	                           mov edi, 0x80	      1009	am.c	FUNCTION_31	IF_2	CALL_4
0x400289c	      0xe800000000	                          call 0x40028a1	      1009	am.c	FUNCTION_31	IF_2	CALL_4
0x40028a1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1012	am.c	FUNCTION_31	IF_3
0x40028a5	          0x488b00	                    mov rax, qword [rax]	      1012	am.c	FUNCTION_31	IF_3
0x40028a8	      0xbeff010000	                          mov esi, 0x1ff	      1012	am.c	FUNCTION_31	IF_3
0x40028ad	          0x4889c7	                            mov rdi, rax	      1012	am.c	FUNCTION_31	IF_3
0x40028b0	      0xe800000000	                          call 0x40028b5	      1012	am.c	FUNCTION_31	IF_3
0x40028b5	            0x85c0	                           test eax, eax	      1012	am.c	FUNCTION_31	IF_3
0x40028b7	            0x792d	                           jns 0x40028e6	      1012	am.c	FUNCTION_31	IF_3
0x40028b9	      0xe800000000	                          call 0x40028be	      1012	am.c	FUNCTION_31	IF_3
0x40028be	            0x8b00	                    mov eax, dword [rax]	      1012	am.c	FUNCTION_31	IF_3
0x40028c0	          0x83f811	                           cmp eax, 0x11	      1012	am.c	FUNCTION_31	IF_3
0x40028c3	            0x7421	                            je 0x40028e6	      1012	am.c	FUNCTION_31	IF_3
0x40028c5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1013	am.c	FUNCTION_31	CALL_6
0x40028c9	          0x488b18	                    mov rbx, qword [rax]	      1013	am.c	FUNCTION_31	CALL_6
0x40028cc	      0xbf00000000	                              mov edi, 0	      1013	am.c	FUNCTION_31	CALL_6
0x40028d1	      0xe860d9ffff	                               call sym.	      1013	am.c	FUNCTION_31	CALL_6
0x40028d6	          0x4889de	                            mov rsi, rbx	      1013	am.c	FUNCTION_31	CALL_6
0x40028d9	          0x4889c7	                            mov rdi, rax	      1013	am.c	FUNCTION_31	CALL_6
0x40028dc	      0xb800000000	                              mov eax, 0	      1013	am.c	FUNCTION_31	CALL_6
0x40028e1	      0xe800000000	                          call 0x40028e6	      1013	am.c	FUNCTION_31	CALL_6
0x40028e6	      0xb901000000	                              mov ecx, 1	      1014	am.c	FUNCTION_31	CALL_7
0x40028eb	      0xba00000000	                              mov edx, 0	      1014	am.c	FUNCTION_31	CALL_7
0x40028f0	      0xbe00000000	                              mov esi, 0	      1014	am.c	FUNCTION_31	CALL_7
0x40028f5	      0xbf00000000	                              mov edi, 0	      1014	am.c	FUNCTION_31	CALL_7
0x40028fa	      0xe800000000	                          call 0x40028ff	      1014	am.c	FUNCTION_31	CALL_7
0x40028ff	          0x8b4d90	             mov ecx, dword [rbp - 0x70]	      1016	am.c	FUNCTION_31	IF_4	CALL_8
0x4002902	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1016	am.c	FUNCTION_31	IF_4	CALL_8
0x4002906	          0x8b7594	             mov esi, dword [rbp - 0x6c]	      1016	am.c	FUNCTION_31	IF_4	CALL_8
0x4002909	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1016	am.c	FUNCTION_31	IF_4	CALL_8
0x400290d	          0x4889c7	                            mov rdi, rax	      1016	am.c	FUNCTION_31	IF_4	CALL_8
0x4002910	      0xe828feffff	                     call sym.split_mail	      1016	am.c	FUNCTION_31	IF_4	CALL_8
0x4002915	            0x85c0	                           test eax, eax	      1016	am.c	FUNCTION_31	IF_4	CALL_8
0x4002917	            0x7923	                           jns 0x400293c	      1016	am.c	FUNCTION_31	IF_4	CALL_8
0x4002919	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1017	am.c	FUNCTION_31	IF_4	CALL_9
0x400291d	          0x4889c7	                            mov rdi, rax	      1017	am.c	FUNCTION_31	IF_4	CALL_9
0x4002920	      0xe8f6eaffff	                     call sym.am_destroy	      1017	am.c	FUNCTION_31	IF_4	CALL_9
0x4002925	      0xbf00000000	                              mov edi, 0	      1018	am.c	FUNCTION_31	IF_4	CALL_11
0x400292a	      0xe807d9ffff	                               call sym.	      1018	am.c	FUNCTION_31	IF_4	CALL_11
0x400292f	          0x4889c7	                            mov rdi, rax	      1018	am.c	FUNCTION_31	IF_4	CALL_11
0x4002932	      0xb800000000	                              mov eax, 0	      1018	am.c	FUNCTION_31	IF_4	CALL_11
0x4002937	      0xe800000000	                          call 0x400293c	      1018	am.c	FUNCTION_31	IF_4	CALL_11
0x400293c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1021	am.c	FUNCTION_31	IF_5
0x4002940	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1021	am.c	FUNCTION_31	IF_5
0x4002946	            0x85c0	                           test eax, eax	      1021	am.c	FUNCTION_31	IF_5
0x4002948	            0x740b	                            je 0x4002955	      1021	am.c	FUNCTION_31	IF_5
0x400294a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1022	am.c	FUNCTION_31	IF_5
0x400294e	    0xc74054010000	               mov dword [rax + 0x54], 1	      1022	am.c	FUNCTION_31	IF_5
0x4002955	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1024	am.c	FUNCTION_31	CALL_12
0x4002959	          0x8b5054	            mov edx, dword [rax + 0x54] 	      1024	am.c	FUNCTION_31	CALL_12
0x400295c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1024	am.c	FUNCTION_31	CALL_12
0x4002960	      0xbe00000000	                              mov esi, 0	      1024	am.c	FUNCTION_31	CALL_12
0x4002965	          0x4889c7	                            mov rdi, rax	      1024	am.c	FUNCTION_31	CALL_12
0x4002968	      0xe8c2ddffff	               call sym.write_state_bool	      1024	am.c	FUNCTION_31	CALL_12
0x400296d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1025	am.c	FUNCTION_31	CALL_13
0x4002971	          0x8b5058	            mov edx, dword [rax + 0x58] 	      1025	am.c	FUNCTION_31	CALL_13
0x4002974	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1025	am.c	FUNCTION_31	CALL_13
0x4002978	      0xbe00000000	                              mov esi, 0	      1025	am.c	FUNCTION_31	CALL_13
0x400297d	          0x4889c7	                            mov rdi, rax	      1025	am.c	FUNCTION_31	CALL_13
0x4002980	      0xe8aaddffff	               call sym.write_state_bool	      1025	am.c	FUNCTION_31	CALL_13
0x4002985	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1026	am.c	FUNCTION_31	CALL_14
0x4002989	          0x8b505c	            mov edx, dword [rax + 0x5c] 	      1026	am.c	FUNCTION_31	CALL_14
0x400298c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1026	am.c	FUNCTION_31	CALL_14
0x4002990	      0xbe00000000	                              mov esi, 0	      1026	am.c	FUNCTION_31	CALL_14
0x4002995	          0x4889c7	                            mov rdi, rax	      1026	am.c	FUNCTION_31	CALL_14
0x4002998	      0xe892ddffff	               call sym.write_state_bool	      1026	am.c	FUNCTION_31	CALL_14
0x400299d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1027	am.c	FUNCTION_31	CALL_15
0x40029a1	          0x8b5060	            mov edx, dword [rax + 0x60] 	      1027	am.c	FUNCTION_31	CALL_15
0x40029a4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1027	am.c	FUNCTION_31	CALL_15
0x40029a8	      0xbe00000000	                              mov esi, 0	      1027	am.c	FUNCTION_31	CALL_15
0x40029ad	          0x4889c7	                            mov rdi, rax	      1027	am.c	FUNCTION_31	CALL_15
0x40029b0	      0xe87addffff	               call sym.write_state_bool	      1027	am.c	FUNCTION_31	CALL_15
0x40029b5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1029	am.c	FUNCTION_31	IF_6
0x40029b9	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      1029	am.c	FUNCTION_31	IF_6
0x40029bf	            0x85c0	                           test eax, eax	      1029	am.c	FUNCTION_31	IF_6
0x40029c1	            0x7424	                            je 0x40029e7	      1029	am.c	FUNCTION_31	IF_6
0x40029c3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1031	am.c	FUNCTION_31	IF_6
0x40029c7	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      1031	am.c	FUNCTION_31	IF_6
0x40029cd	          0x83f801	                              cmp eax, 1	      1030	am.c	FUNCTION_31	IF_6	CALL_16
0x40029d0	           0xf94c0	                                 sete al	      1030	am.c	FUNCTION_31	IF_6	CALL_16
0x40029d3	           0xfb6d0	                           movzx edx, al	      1030	am.c	FUNCTION_31	IF_6	CALL_16
0x40029d6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1030	am.c	FUNCTION_31	IF_6	CALL_16
0x40029da	      0xbe00000000	                              mov esi, 0	      1030	am.c	FUNCTION_31	IF_6	CALL_16
0x40029df	          0x4889c7	                            mov rdi, rax	      1030	am.c	FUNCTION_31	IF_6	CALL_16
0x40029e2	      0xe848ddffff	               call sym.write_state_bool	      1030	am.c	FUNCTION_31	IF_6	CALL_16
0x40029e7	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1033	am.c	FUNCTION_31	SWITCH_1
0x40029eb	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1033	am.c	FUNCTION_31	SWITCH_1
0x40029ee	          0x83f801	                              cmp eax, 1	      1033	am.c	FUNCTION_31	SWITCH_1
0x40029f1	            0x7413	                            je 0x4002a06	      1033	am.c	FUNCTION_31	SWITCH_1
0x40029f3	          0x83f802	                              cmp eax, 2	      1033	am.c	FUNCTION_31	SWITCH_1
0x40029f6	            0x7418	                            je 0x4002a10	      1033	am.c	FUNCTION_31	SWITCH_1
0x40029f8	            0x85c0	                           test eax, eax	      1033	am.c	FUNCTION_31	SWITCH_1
0x40029fa	            0x751e	                           jne 0x4002a1a	      1033	am.c	FUNCTION_31	SWITCH_1
0x40029fc	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1035	am.c	FUNCTION_31	SWITCH_1
0x4002a04	            0xeb23	                           jmp 0x4002a29	      1036	am.c	FUNCTION_31	SWITCH_1
0x4002a06	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1038	am.c	FUNCTION_31	SWITCH_1
0x4002a0e	            0xeb19	                           jmp 0x4002a29	      1039	am.c	FUNCTION_31	SWITCH_1
0x4002a10	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1041	am.c	FUNCTION_31	SWITCH_1
0x4002a18	            0xeb0f	                           jmp 0x4002a29	      1042	am.c	FUNCTION_31	SWITCH_1
0x4002a1a	      0xbf00000000	                              mov edi, 0	      1044	am.c	FUNCTION_31	SWITCH_1	CALL_17
0x4002a1f	      0xb800000000	                              mov eax, 0	      1044	am.c	FUNCTION_31	SWITCH_1	CALL_17
0x4002a24	      0xe800000000	                          call 0x4002a29	      1044	am.c	FUNCTION_31	SWITCH_1	CALL_17
0x4002a29	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1047	am.c	FUNCTION_31	CALL_18
0x4002a2d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1047	am.c	FUNCTION_31	CALL_18
0x4002a31	      0xbe00000000	                              mov esi, 0	      1047	am.c	FUNCTION_31	CALL_18
0x4002a36	          0x4889c7	                            mov rdi, rax	      1047	am.c	FUNCTION_31	CALL_18
0x4002a39	      0xe868dcffff	               call sym.write_state_text	      1047	am.c	FUNCTION_31	CALL_18
0x4002a3e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1048	am.c	FUNCTION_31	CALL_19
0x4002a42	          0x8b5068	            mov edx, dword [rax + 0x68] 	      1048	am.c	FUNCTION_31	CALL_19
0x4002a45	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1048	am.c	FUNCTION_31	CALL_19
0x4002a49	      0xbe00000000	                              mov esi, 0	      1048	am.c	FUNCTION_31	CALL_19
0x4002a4e	          0x4889c7	                            mov rdi, rax	      1048	am.c	FUNCTION_31	CALL_19
0x4002a51	      0xe8d9dcffff	               call sym.write_state_bool	      1048	am.c	FUNCTION_31	CALL_19
0x4002a56	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1050	am.c	FUNCTION_31	SWITCH_2
0x4002a5a	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      1050	am.c	FUNCTION_31	SWITCH_2
0x4002a5d	            0x85c0	                           test eax, eax	      1050	am.c	FUNCTION_31	SWITCH_2
0x4002a5f	            0x7414	                            je 0x4002a75	      1050	am.c	FUNCTION_31	SWITCH_2
0x4002a61	          0x83f801	                              cmp eax, 1	      1050	am.c	FUNCTION_31	SWITCH_2
0x4002a64	            0x7419	                            je 0x4002a7f	      1050	am.c	FUNCTION_31	SWITCH_2
0x4002a66	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1050	am.c	FUNCTION_31	SWITCH_2
0x4002a69	            0x751e	                           jne 0x4002a89	      1050	am.c	FUNCTION_31	SWITCH_2
0x4002a6b	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1052	am.c	FUNCTION_31	SWITCH_2
0x4002a73	            0xeb23	                           jmp 0x4002a98	      1053	am.c	FUNCTION_31	SWITCH_2
0x4002a75	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1055	am.c	FUNCTION_31	SWITCH_2
0x4002a7d	            0xeb19	                           jmp 0x4002a98	      1056	am.c	FUNCTION_31	SWITCH_2
0x4002a7f	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1058	am.c	FUNCTION_31	SWITCH_2
0x4002a87	            0xeb0f	                           jmp 0x4002a98	      1059	am.c	FUNCTION_31	SWITCH_2
0x4002a89	      0xbf00000000	                              mov edi, 0	      1061	am.c	FUNCTION_31	SWITCH_2	CALL_20
0x4002a8e	      0xb800000000	                              mov eax, 0	      1061	am.c	FUNCTION_31	SWITCH_2	CALL_20
0x4002a93	      0xe800000000	                          call 0x4002a98	      1061	am.c	FUNCTION_31	SWITCH_2	CALL_20
0x4002a98	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1063	am.c	FUNCTION_31	CALL_21
0x4002a9c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1063	am.c	FUNCTION_31	CALL_21
0x4002aa0	      0xbe00000000	                              mov esi, 0	      1063	am.c	FUNCTION_31	CALL_21
0x4002aa5	          0x4889c7	                            mov rdi, rax	      1063	am.c	FUNCTION_31	CALL_21
0x4002aa8	      0xe8f9dbffff	               call sym.write_state_text	      1063	am.c	FUNCTION_31	CALL_21
0x4002aad	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1065	am.c	FUNCTION_31	CALL_22
0x4002ab1	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      1065	am.c	FUNCTION_31	CALL_22
0x4002ab5	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1065	am.c	FUNCTION_31	CALL_22
0x4002ab9	          0x4889d6	                            mov rsi, rdx	      1065	am.c	FUNCTION_31	CALL_22
0x4002abc	          0x4889c7	                            mov rdi, rax	      1065	am.c	FUNCTION_31	CALL_22
0x4002abf	      0xe800000000	                          call 0x4002ac4	      1065	am.c	FUNCTION_31	CALL_22
0x4002ac4	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1066	am.c	FUNCTION_31	CALL_23
0x4002ac8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1066	am.c	FUNCTION_31	CALL_23
0x4002acc	      0xbe00000000	                              mov esi, 0	      1066	am.c	FUNCTION_31	CALL_23
0x4002ad1	          0x4889c7	                            mov rdi, rax	      1066	am.c	FUNCTION_31	CALL_23
0x4002ad4	      0xe8cddbffff	               call sym.write_state_text	      1066	am.c	FUNCTION_31	CALL_23
0x4002ad9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1068	am.c	FUNCTION_31	IF_7
0x4002add	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1068	am.c	FUNCTION_31	IF_7
0x4002ae3	            0x85c0	                           test eax, eax	      1068	am.c	FUNCTION_31	IF_7
0x4002ae5	            0x7418	                            je 0x4002aff	      1068	am.c	FUNCTION_31	IF_7
0x4002ae7	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1069	am.c	FUNCTION_31	CALL_24
0x4002aeb	      0xba00000000	                              mov edx, 0	      1069	am.c	FUNCTION_31	CALL_24
0x4002af0	      0xbe00000000	                              mov esi, 0	      1069	am.c	FUNCTION_31	CALL_24
0x4002af5	          0x4889c7	                            mov rdi, rax	      1069	am.c	FUNCTION_31	CALL_24
0x4002af8	      0xe8a9dbffff	               call sym.write_state_text	      1069	am.c	FUNCTION_31	CALL_24
0x4002afd	            0xeb16	                           jmp 0x4002b15	      1069	am.c	FUNCTION_31	CALL_24
0x4002aff	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1071	am.c	FUNCTION_31	CALL_25
0x4002b03	      0xba00000000	                              mov edx, 0	      1071	am.c	FUNCTION_31	CALL_25
0x4002b08	      0xbe00000000	                              mov esi, 0	      1071	am.c	FUNCTION_31	CALL_25
0x4002b0d	          0x4889c7	                            mov rdi, rax	      1071	am.c	FUNCTION_31	CALL_25
0x4002b10	      0xe891dbffff	               call sym.write_state_text	      1071	am.c	FUNCTION_31	CALL_25
0x4002b15	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1073	am.c	FUNCTION_31	IF_8	CALL_26
0x4002b19	          0x4889c6	                            mov rsi, rax	      1073	am.c	FUNCTION_31	IF_8	CALL_26
0x4002b1c	      0xbf00000000	                              mov edi, 0	      1073	am.c	FUNCTION_31	IF_8	CALL_26
0x4002b21	      0xe800000000	                          call 0x4002b26	      1073	am.c	FUNCTION_31	IF_8	CALL_26
0x4002b26	            0x85c0	                           test eax, eax	      1073	am.c	FUNCTION_31	IF_8	CALL_26
0x4002b28	            0x7557	                           jne 0x4002b81	      1073	am.c	FUNCTION_31	IF_8	CALL_26
0x4002b2a	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1074	am.c	FUNCTION_31	IF_8	CALL_28
0x4002b2e	          0x4889c7	                            mov rdi, rax	      1074	am.c	FUNCTION_31	IF_8	CALL_28
0x4002b31	      0xe800000000	                          call 0x4002b36	      1074	am.c	FUNCTION_31	IF_8	CALL_28
0x4002b36	          0x4889c2	                            mov rdx, rax	      1074	am.c	FUNCTION_31	IF_8	CALL_28
0x4002b39	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1074	am.c	FUNCTION_31	IF_8	CALL_28
0x4002b3d	      0xbe00000000	                              mov esi, 0	      1074	am.c	FUNCTION_31	IF_8	CALL_28
0x4002b42	          0x4889c7	                            mov rdi, rax	      1074	am.c	FUNCTION_31	IF_8	CALL_28
0x4002b45	      0xe85cdbffff	               call sym.write_state_text	      1074	am.c	FUNCTION_31	IF_8	CALL_28
0x4002b4a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1075	am.c	FUNCTION_31	IF_8	IF_9
0x4002b4e	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1075	am.c	FUNCTION_31	IF_8	IF_9
0x4002b54	            0x85c0	                           test eax, eax	      1075	am.c	FUNCTION_31	IF_8	IF_9
0x4002b56	            0x7566	                           jne 0x4002bbe	      1075	am.c	FUNCTION_31	IF_8	IF_9
0x4002b58	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_29
0x4002b5c	    0x41b901000000	                              mov r9d, 1	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_29
0x4002b62	    0x41b800000000	                              mov r8d, 0	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_29
0x4002b68	      0xb900000000	                              mov ecx, 0	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_29
0x4002b6d	          0x4889c2	                            mov rdx, rax	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_29
0x4002b70	      0xbe00000000	                              mov esi, 0	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_29
0x4002b75	      0xbf00000000	                              mov edi, 0	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_29
0x4002b7a	      0xe800000000	                          call 0x4002b7f	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_29
0x4002b7f	            0xeb3d	                           jmp 0x4002bbe	      1076	am.c	FUNCTION_31	IF_8	IF_9	CALL_29
0x4002b81	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1079	am.c	FUNCTION_31	ELSE_2	CALL_30
0x4002b85	      0xba00000000	                              mov edx, 0	      1079	am.c	FUNCTION_31	ELSE_2	CALL_30
0x4002b8a	      0xbe00000000	                              mov esi, 0	      1079	am.c	FUNCTION_31	ELSE_2	CALL_30
0x4002b8f	          0x4889c7	                            mov rdi, rax	      1079	am.c	FUNCTION_31	ELSE_2	CALL_30
0x4002b92	      0xe80fdbffff	               call sym.write_state_text	      1079	am.c	FUNCTION_31	ELSE_2	CALL_30
0x4002b97	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1080	am.c	FUNCTION_31	ELSE_2	IF_10
0x4002b9b	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1080	am.c	FUNCTION_31	ELSE_2	IF_10
0x4002ba1	            0x85c0	                           test eax, eax	      1080	am.c	FUNCTION_31	ELSE_2	IF_10
0x4002ba3	            0x7519	                           jne 0x4002bbe	      1080	am.c	FUNCTION_31	ELSE_2	IF_10
0x4002ba5	      0xb900000000	                              mov ecx, 0	      1081	am.c	FUNCTION_31	ELSE_2	CALL_31
0x4002baa	      0xba00000000	                              mov edx, 0	      1081	am.c	FUNCTION_31	ELSE_2	CALL_31
0x4002baf	      0xbe00000000	                              mov esi, 0	      1081	am.c	FUNCTION_31	ELSE_2	CALL_31
0x4002bb4	      0xbf00000000	                              mov edi, 0	      1081	am.c	FUNCTION_31	ELSE_2	CALL_31
0x4002bb9	      0xe800000000	                          call 0x4002bbe	      1081	am.c	FUNCTION_31	ELSE_2	CALL_31
0x4002bbe	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1089	am.c	FUNCTION_31	CALL_32
0x4002bc2	          0x8b5008	                mov edx, dword [rax + 8]	      1089	am.c	FUNCTION_31	CALL_32
0x4002bc5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1089	am.c	FUNCTION_31	CALL_32
0x4002bc9	      0xbe00000000	                              mov esi, 0	      1089	am.c	FUNCTION_31	CALL_32
0x4002bce	          0x4889c7	                            mov rdi, rax	      1089	am.c	FUNCTION_31	CALL_32
0x4002bd1	      0xe816dbffff	              call sym.write_state_count	      1089	am.c	FUNCTION_31	CALL_32
0x4002bd6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1090	am.c	FUNCTION_31	CALL_33
0x4002bda	          0x8b500c	              mov edx, dword [rax + 0xc]	      1090	am.c	FUNCTION_31	CALL_33
0x4002bdd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1090	am.c	FUNCTION_31	CALL_33
0x4002be1	      0xbe00000000	                              mov esi, 0	      1090	am.c	FUNCTION_31	CALL_33
0x4002be6	          0x4889c7	                            mov rdi, rax	      1090	am.c	FUNCTION_31	CALL_33
0x4002be9	      0xe8fedaffff	              call sym.write_state_count	      1090	am.c	FUNCTION_31	CALL_33
0x4002bee	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1092	am.c	FUNCTION_31	CALL_34
0x4002bf2	          0x4889c7	                            mov rdi, rax	      1092	am.c	FUNCTION_31	CALL_34
0x4002bf5	      0xe800000000	                          call 0x4002bfa	      1092	am.c	FUNCTION_31	CALL_34
0x4002bfa	              0x90	                                     nop	      1093	am.c	FUNCTION_31
0x4002bfb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1093	am.c	FUNCTION_31
0x4002bff	    0x644833042528	                xor rax, qword fs:[0x28]	      1093	am.c	FUNCTION_31
0x4002c08	            0x7405	                            je 0x4002c0f	      1093	am.c	FUNCTION_31
0x4002c0a	      0xe800000000	                          call 0x4002c0f	      1093	am.c	FUNCTION_31
0x4002c0f	        0x4883c478	                           add rsp, 0x78	      1093	am.c	FUNCTION_31
0x4002c13	              0x5b	                                 pop rbx	      1093	am.c	FUNCTION_31
0x4002c14	              0x5d	                                 pop rbp	      1093	am.c	FUNCTION_31
0x4002c15	              0xc3	                                     ret	      1093	am.c	FUNCTION_31
hashcpy	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,1	14
0x40002d8	              0x55	                                push rbp	       994	cache.h	FUNCTION_77
0x40002d9	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_77
0x40002dc	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_77
0x40002e0	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_77
0x40002e4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_77
0x40002e8	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_77	CALL_1
0x40002ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_77	CALL_1
0x40002f0	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_77	CALL_1
0x40002f5	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_77	CALL_1
0x40002f8	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_77	CALL_1
0x40002fb	      0xe800000000	                          call 0x4000300	       995	cache.h	FUNCTION_77	CALL_1
0x4000300	              0x90	                                     nop	       996	cache.h	FUNCTION_77
0x4000301	              0xc9	                                   leave	       996	cache.h	FUNCTION_77
0x4000302	              0xc3	                                     ret	       996	cache.h	FUNCTION_77
fall_back_threeway	functions,0:IF,8:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,25	200
0x400411b	              0x55	                                push rbp	      1537	am.c	FUNCTION_45
0x400411c	          0x4889e5	                            mov rbp, rsp	      1537	am.c	FUNCTION_45
0x400411f	              0x53	                                push rbx	      1537	am.c	FUNCTION_45
0x4004120	    0x4881ec580900	                          sub rsp, 0x958	      1537	am.c	FUNCTION_45
0x4004127	    0x4889bda8f6ff	            mov qword [rbp - 0x958], rdi	      1537	am.c	FUNCTION_45
0x400412e	    0x4889b5a0f6ff	            mov qword [rbp - 0x960], rsi	      1537	am.c	FUNCTION_45
0x4004135	    0x64488b042528	                mov rax, qword fs:[0x28]	      1537	am.c	FUNCTION_45
0x400413e	        0x488945e8	             mov qword [rbp - 0x18], rax	      1537	am.c	FUNCTION_45
0x4004142	            0x31c0	                            xor eax, eax	      1537	am.c	FUNCTION_45
0x4004144	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	      1539	am.c	FUNCTION_45
0x400414b	    0x488985c0f6ff	            mov qword [rbp - 0x940], rax	      1539	am.c	FUNCTION_45
0x4004152	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x4004159	          0x4889c6	                            mov rsi, rax	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x400415c	      0xbf00000000	                              mov edi, 0	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x4004161	      0xe800000000	                          call 0x4004166	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x4004166	            0x85c0	                           test eax, eax	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x4004168	            0x7914	                           jns 0x400417e	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x400416a	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	      1545	am.c	FUNCTION_45	CALL_2
0x4004171	      0xbe00000000	                              mov esi, 0	      1545	am.c	FUNCTION_45	CALL_2
0x4004176	          0x4889c7	                            mov rdi, rax	      1545	am.c	FUNCTION_45	CALL_2
0x4004179	      0xe85ac1ffff	                        call sym.hashcpy	      1545	am.c	FUNCTION_45	CALL_2
0x400417e	    0x488b95a0f6ff	            mov rdx, qword [rbp - 0x960]	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x4004185	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x400418c	          0x4889d6	                            mov rsi, rdx	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x400418f	          0x4889c7	                            mov rdi, rax	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x4004192	      0xe88dfeffff	            call sym.build_fake_ancestor	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x4004197	            0x85c0	                           test eax, eax	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x4004199	            0x7419	                            je 0x40041b4	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x400419b	      0xbf00000000	                              mov edi, 0	      1548	am.c	FUNCTION_45	IF_2
0x40041a0	      0xb800000000	                              mov eax, 0	      1548	am.c	FUNCTION_45	IF_2
0x40041a5	      0xe800000000	                          call 0x40041aa	      1548	am.c	FUNCTION_45	IF_2
0x40041aa	      0xe8b3beffff	                    call sym.const_error	      1548	am.c	FUNCTION_45	IF_2
0x40041af	      0xe914030000	                           jmp 0x40044c8	      1548	am.c	FUNCTION_45	IF_2
0x40041b4	      0xbf00000000	                              mov edi, 0	      1550	am.c	FUNCTION_45
0x40041b9	      0xe800000000	                          call 0x40041be	      1550	am.c	FUNCTION_45
0x40041be	      0xe800000000	                          call 0x40041c3	      1551	am.c	FUNCTION_45
0x40041c3	          0x4889c2	                            mov rdx, rax	      1551	am.c	FUNCTION_45
0x40041c6	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	      1551	am.c	FUNCTION_45
0x40041cd	          0x4889c6	                            mov rsi, rax	      1551	am.c	FUNCTION_45
0x40041d0	      0xbf00000000	                              mov edi, 0	      1551	am.c	FUNCTION_45
0x40041d5	      0xe800000000	                          call 0x40041da	      1551	am.c	FUNCTION_45
0x40041da	    0x488b95a0f6ff	            mov rdx, qword [rbp - 0x960]	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40041e1	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40041e8	    0x41b800000000	                              mov r8d, 0	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40041ee	      0xb900000000	                              mov ecx, 0	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40041f3	      0xbe00000000	                              mov esi, 0	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40041f8	          0x4889c7	                            mov rdi, rax	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40041fb	      0xe800000000	                          call 0x4004200	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x4004200	            0x85c0	                           test eax, eax	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x4004202	            0x7421	                            je 0x4004225	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x4004204	      0xbf00000000	                              mov edi, 0	      1554	am.c	FUNCTION_45	CALL_5
0x4004209	      0xe828c0ffff	                               call sym.	      1554	am.c	FUNCTION_45	CALL_5
0x400420e	          0x4889c7	                            mov rdi, rax	      1554	am.c	FUNCTION_45	CALL_5
0x4004211	      0xb800000000	                              mov eax, 0	      1554	am.c	FUNCTION_45	CALL_5
0x4004216	      0xe800000000	                          call 0x400421b	      1554	am.c	FUNCTION_45	CALL_5
0x400421b	      0xe842beffff	                    call sym.const_error	      1554	am.c	FUNCTION_45	CALL_5
0x4004220	      0xe9a3020000	                           jmp 0x40044c8	      1554	am.c	FUNCTION_45	CALL_5
0x4004225	      0xbf00000000	                              mov edi, 0	      1556	am.c	FUNCTION_45	CALL_7
0x400422a	      0xe807c0ffff	                               call sym.	      1556	am.c	FUNCTION_45	CALL_7
0x400422f	          0x4889c2	                            mov rdx, rax	      1556	am.c	FUNCTION_45	CALL_7
0x4004232	    0x488b0d000000	            mov rcx, qword [0x04004239] 	      1556	am.c	FUNCTION_45	CALL_7
0x4004239	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1556	am.c	FUNCTION_45	CALL_7
0x4004240	          0x4889ce	                            mov rsi, rcx	      1556	am.c	FUNCTION_45	CALL_7
0x4004243	          0x4889c7	                            mov rdi, rax	      1556	am.c	FUNCTION_45	CALL_7
0x4004246	      0xb800000000	                              mov eax, 0	      1556	am.c	FUNCTION_45	CALL_7
0x400424b	      0xe81ac5ffff	                            call sym.say	      1556	am.c	FUNCTION_45	CALL_7
0x4004250	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1558	am.c	FUNCTION_45	IF_4
0x4004257	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1558	am.c	FUNCTION_45	IF_4
0x400425a	            0x85c0	                           test eax, eax	      1558	am.c	FUNCTION_45	IF_4
0x400425c	     0xf859e000000	                           jne 0x4004300	      1558	am.c	FUNCTION_45	IF_4
0x4004262	    0x48c785b0f6ff	              mov qword [rbp - 0x950], 0	      1564	am.c	FUNCTION_45	IF_4
0x400426d	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      1566	am.c	FUNCTION_45	IF_4	CALL_8
0x4004274	      0xbe00000000	                              mov esi, 0	      1566	am.c	FUNCTION_45	IF_4	CALL_8
0x4004279	          0x4889c7	                            mov rdi, rax	      1566	am.c	FUNCTION_45	IF_4	CALL_8
0x400427c	      0xe800000000	                          call 0x4004281	      1566	am.c	FUNCTION_45	IF_4	CALL_8
0x4004281	    0xc78588fcffff	         mov dword [rbp - 0x378], 0x200 	      1567	am.c	FUNCTION_45	IF_4
0x400428b	    0x488b9570f7ff	            mov rdx, qword [rbp - 0x890]	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x4004292	    0x488d85b0f6ff	                  lea rax, [rbp - 0x950]	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x4004299	    0x488d8d30f7ff	                  lea rcx, [rbp - 0x8d0]	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40042a0	    0x488db9f80400	                  lea rdi, [rcx + 0x4f8]	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40042a7	          0x4889d1	                            mov rcx, rdx	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40042aa	      0xba01000000	                              mov edx, 1	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40042af	          0x4889c6	                            mov rsi, rax	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40042b2	      0xe800000000	                          call 0x40042b7	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40042b7	    0x488d9510f7ff	                  lea rdx, [rbp - 0x8f0]	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x40042be	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x40042c5	      0xb900000000	                              mov ecx, 0	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x40042ca	      0xbe00000000	                              mov esi, 0	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x40042cf	          0x4889c7	                            mov rdi, rax	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x40042d2	      0xe800000000	                          call 0x40042d7	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x40042d7	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      1570	am.c	FUNCTION_45	IF_4	CALL_11
0x40042de	    0x4805f8040000	                          add rax, 0x4f8	      1570	am.c	FUNCTION_45	IF_4	CALL_11
0x40042e4	          0x4889c7	                            mov rdi, rax	      1570	am.c	FUNCTION_45	IF_4	CALL_11
0x40042e7	      0xe800000000	                          call 0x40042ec	      1570	am.c	FUNCTION_45	IF_4	CALL_11
0x40042ec	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x40042f3	      0xbe01000000	                              mov esi, 1	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x40042f8	          0x4889c7	                            mov rdi, rax	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x40042fb	      0xe800000000	                          call 0x4004300	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x4004300	    0x488b95a0f6ff	            mov rdx, qword [rbp - 0x960]	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x4004307	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x400430e	          0x4889d6	                            mov rsi, rdx	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x4004311	          0x4889c7	                            mov rdi, rax	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x4004314	      0xe895faffff	                      call sym.run_apply	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x4004319	            0x85c0	                           test eax, eax	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x400431b	            0x7421	                            je 0x400433e	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x400431d	      0xbf00000000	                              mov edi, 0	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x4004322	      0xe80fbfffff	                               call sym.	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x4004327	          0x4889c7	                            mov rdi, rax	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x400432a	      0xb800000000	                              mov eax, 0	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x400432f	      0xe800000000	                          call 0x4004334	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x4004334	      0xe829bdffff	                    call sym.const_error	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x4004339	      0xe98a010000	                           jmp 0x40044c8	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x400433e	    0x488b95a0f6ff	            mov rdx, qword [rbp - 0x960]	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4004345	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x400434c	    0x41b800000000	                              mov r8d, 0	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4004352	      0xb900000000	                              mov ecx, 0	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4004357	      0xbe00000000	                              mov esi, 0	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x400435c	          0x4889c7	                            mov rdi, rax	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x400435f	      0xe800000000	                          call 0x4004364	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4004364	            0x85c0	                           test eax, eax	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4004366	            0x7419	                            je 0x4004381	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4004368	      0xbf00000000	                              mov edi, 0	      1579	am.c	FUNCTION_45	IF_6
0x400436d	      0xb800000000	                              mov eax, 0	      1579	am.c	FUNCTION_45	IF_6
0x4004372	      0xe800000000	                          call 0x4004377	      1579	am.c	FUNCTION_45	IF_6
0x4004377	      0xe8e6bcffff	                    call sym.const_error	      1579	am.c	FUNCTION_45	IF_6
0x400437c	      0xe947010000	                           jmp 0x40044c8	      1579	am.c	FUNCTION_45	IF_6
0x4004381	      0xbf00000000	                              mov edi, 0	      1581	am.c	FUNCTION_45	CALL_17
0x4004386	      0xe8abbeffff	                               call sym.	      1581	am.c	FUNCTION_45	CALL_17
0x400438b	          0x4889c2	                            mov rdx, rax	      1581	am.c	FUNCTION_45	CALL_17
0x400438e	    0x488b0d000000	            mov rcx, qword [0x04004395] 	      1581	am.c	FUNCTION_45	CALL_17
0x4004395	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1581	am.c	FUNCTION_45	CALL_17
0x400439c	          0x4889ce	                            mov rsi, rcx	      1581	am.c	FUNCTION_45	CALL_17
0x400439f	          0x4889c7	                            mov rdi, rax	      1581	am.c	FUNCTION_45	CALL_17
0x40043a2	      0xb800000000	                              mov eax, 0	      1581	am.c	FUNCTION_45	CALL_17
0x40043a7	      0xe8bec3ffff	                            call sym.say	      1581	am.c	FUNCTION_45	CALL_17
0x40043ac	      0xbf00000000	                              mov edi, 0	      1583	am.c	FUNCTION_45
0x40043b1	      0xe800000000	                          call 0x40043b6	      1583	am.c	FUNCTION_45
0x40043b6	      0xbf00000000	                              mov edi, 0	      1584	am.c	FUNCTION_45
0x40043bb	      0xe800000000	                          call 0x40043c0	      1584	am.c	FUNCTION_45
0x40043c0	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      1594	am.c	FUNCTION_45	CALL_18
0x40043c7	          0x4889c7	                            mov rdi, rax	      1594	am.c	FUNCTION_45	CALL_18
0x40043ca	      0xe800000000	                          call 0x40043cf	      1594	am.c	FUNCTION_45	CALL_18
0x40043cf	    0x48c78538f7ff	              mov qword [rbp - 0x8c8], 0	      1596	am.c	FUNCTION_45
0x40043da	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1597	am.c	FUNCTION_45	CALL_20
0x40043e1	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1597	am.c	FUNCTION_45	CALL_20
0x40043e5	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1597	am.c	FUNCTION_45	CALL_20
0x40043ec	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1597	am.c	FUNCTION_45	CALL_20
0x40043f0	          0x4889c7	                            mov rdi, rax	      1597	am.c	FUNCTION_45	CALL_20
0x40043f3	      0xe8b1c0ffff	                        call sym.linelen	      1597	am.c	FUNCTION_45	CALL_20
0x40043f8	          0x4889da	                            mov rdx, rbx	      1597	am.c	FUNCTION_45	CALL_20
0x40043fb	            0x89c6	                            mov esi, eax	      1597	am.c	FUNCTION_45	CALL_20
0x40043fd	      0xbf00000000	                              mov edi, 0	      1597	am.c	FUNCTION_45	CALL_20
0x4004402	      0xb800000000	                              mov eax, 0	      1597	am.c	FUNCTION_45	CALL_20
0x4004407	      0xe800000000	                          call 0x400440c	      1597	am.c	FUNCTION_45	CALL_20
0x400440c	    0x488985b8f6ff	            mov qword [rbp - 0x948], rax	      1597	am.c	FUNCTION_45	CALL_20
0x4004413	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	      1598	am.c	FUNCTION_45
0x400441a	    0x48898540f7ff	            mov qword [rbp - 0x8c0], rax	      1598	am.c	FUNCTION_45
0x4004421	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1600	am.c	FUNCTION_45	IF_7
0x4004428	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1600	am.c	FUNCTION_45	IF_7
0x400442b	            0x85c0	                           test eax, eax	      1600	am.c	FUNCTION_45	IF_7
0x400442d	            0x740a	                            je 0x4004439	      1600	am.c	FUNCTION_45	IF_7
0x400442f	    0xc78568f7ffff	              mov dword [rbp - 0x898], 0	      1601	am.c	FUNCTION_45	IF_7
0x4004439	    0x488dbdb0f6ff	                  lea rdi, [rbp - 0x950]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4004440	    0x488d8dc0f6ff	                  lea rcx, [rbp - 0x940]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4004447	    0x488d95f0f6ff	                  lea rdx, [rbp - 0x910]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x400444e	    0x488db510f7ff	                  lea rsi, [rbp - 0x8f0]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4004455	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x400445c	          0x4989f9	                             mov r9, rdi	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x400445f	          0x4989c8	                             mov r8, rcx	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4004462	      0xb901000000	                              mov ecx, 1	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4004467	          0x4889c7	                            mov rdi, rax	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x400446a	      0xe800000000	                          call 0x400446f	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x400446f	            0x85c0	                           test eax, eax	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4004471	            0x7441	                            je 0x40044b4	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4004473	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      1604	am.c	FUNCTION_45	IF_8	CALL_22
0x400447a	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      1604	am.c	FUNCTION_45	IF_8	CALL_22
0x4004480	            0x89c7	                            mov edi, eax	      1604	am.c	FUNCTION_45	IF_8	CALL_22
0x4004482	      0xe800000000	                          call 0x4004487	      1604	am.c	FUNCTION_45	IF_8	CALL_22
0x4004487	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	      1605	am.c	FUNCTION_45	IF_8	CALL_23
0x400448e	          0x4889c7	                            mov rdi, rax	      1605	am.c	FUNCTION_45	IF_8	CALL_23
0x4004491	      0xe800000000	                          call 0x4004496	      1605	am.c	FUNCTION_45	IF_8	CALL_23
0x4004496	      0xbf00000000	                              mov edi, 0	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x400449b	      0xe896bdffff	                               call sym.	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x40044a0	          0x4889c7	                            mov rdi, rax	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x40044a3	      0xb800000000	                              mov eax, 0	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x40044a8	      0xe800000000	                          call 0x40044ad	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x40044ad	      0xe8b0bbffff	                    call sym.const_error	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x40044b2	            0xeb14	                           jmp 0x40044c8	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x40044b4	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	      1609	am.c	FUNCTION_45	CALL_25
0x40044bb	          0x4889c7	                            mov rdi, rax	      1609	am.c	FUNCTION_45	CALL_25
0x40044be	      0xe800000000	                          call 0x40044c3	      1609	am.c	FUNCTION_45	CALL_25
0x40044c3	      0xb800000000	                              mov eax, 0	      1610	am.c	FUNCTION_45
0x40044c8	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1611	am.c	FUNCTION_45
0x40044cc	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1611	am.c	FUNCTION_45
0x40044d5	            0x7405	                            je 0x40044dc	      1611	am.c	FUNCTION_45
0x40044d7	      0xe800000000	                          call 0x40044dc	      1611	am.c	FUNCTION_45
0x40044dc	    0x4881c4580900	                          add rsp, 0x958	      1611	am.c	FUNCTION_45
0x40044e3	              0x5b	                                 pop rbx	      1611	am.c	FUNCTION_45
0x40044e4	              0x5d	                                 pop rbp	      1611	am.c	FUNCTION_45
0x40044e5	              0xc3	                                     ret	      1611	am.c	FUNCTION_45
oidcpy	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,1	13
0x4000303	              0x55	                                push rbp	       999	cache.h	FUNCTION_78
0x4000304	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_78
0x4000307	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_78
0x400030b	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_78
0x400030f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_78
0x4000313	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_78	CALL_1
0x4000317	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_78	CALL_1
0x400031b	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_78	CALL_1
0x400031e	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_78	CALL_1
0x4000321	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_78	CALL_1
0x4000326	              0x90	                                     nop	      1001	cache.h	FUNCTION_78
0x4000327	              0xc9	                                   leave	      1001	cache.h	FUNCTION_78
0x4000328	              0xc3	                                     ret	      1001	cache.h	FUNCTION_78
read_commit_msg	functions,0:IF,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,4	48
0x4000e6d	              0x55	                                push rbp	       375	am.c	FUNCTION_16
0x4000e6e	          0x4889e5	                            mov rbp, rsp	       375	am.c	FUNCTION_16
0x4000e71	        0x4883ec30	                           sub rsp, 0x30	       375	am.c	FUNCTION_16
0x4000e75	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       375	am.c	FUNCTION_16
0x4000e79	    0x64488b042528	                mov rax, qword fs:[0x28]	       375	am.c	FUNCTION_16
0x4000e82	        0x488945f8	                mov qword [rbp - 8], rax	       375	am.c	FUNCTION_16
0x4000e86	            0x31c0	                            xor eax, eax	       375	am.c	FUNCTION_16
0x4000e88	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       376	am.c	FUNCTION_16
0x4000e90	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       376	am.c	FUNCTION_16
0x4000e98	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       376	am.c	FUNCTION_16
0x4000ea0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       378	am.c	FUNCTION_16	CALL_1
0x4000ea4	        0x488b4028	            mov rax, qword [rax + 0x28] 	       378	am.c	FUNCTION_16	CALL_1
0x4000ea8	          0x4885c0	                           test rax, rax	       378	am.c	FUNCTION_16	CALL_1
0x4000eab	            0x7419	                            je 0x4000ec6	       378	am.c	FUNCTION_16	CALL_1
0x4000ead	      0xb900000000	                              mov ecx, 0	       378	am.c	FUNCTION_16	CALL_1
0x4000eb2	      0xba7a010000	                          mov edx, 0x17a	       378	am.c	FUNCTION_16	CALL_1
0x4000eb7	      0xbe00000000	                              mov esi, 0	       378	am.c	FUNCTION_16	CALL_1
0x4000ebc	      0xbf00000000	                              mov edi, 0	       378	am.c	FUNCTION_16	CALL_1
0x4000ec1	      0xe800000000	                          call 0x4000ec6	       378	am.c	FUNCTION_16	CALL_1
0x4000ec6	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4000eca	        0x488d45e0	                   lea rax, [rbp - 0x20]	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4000ece	      0xb900000000	                              mov ecx, 0	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4000ed3	      0xba00000000	                              mov edx, 0	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4000ed8	          0x4889c7	                            mov rdi, rax	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4000edb	      0xe882faffff	                call sym.read_state_file	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4000ee0	            0x85c0	                           test eax, eax	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4000ee2	            0x7913	                           jns 0x4000ef7	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4000ee4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       381	am.c	FUNCTION_16	IF_1	CALL_3
0x4000ee8	          0x4889c7	                            mov rdi, rax	       381	am.c	FUNCTION_16	IF_1	CALL_3
0x4000eeb	      0xe800000000	                          call 0x4000ef0	       381	am.c	FUNCTION_16	IF_1	CALL_3
0x4000ef0	      0xb8ffffffff	                     mov eax, 0xffffffff	       382	am.c	FUNCTION_16	IF_1
0x4000ef5	            0xeb27	                           jmp 0x4000f1e	       382	am.c	FUNCTION_16	IF_1
0x4000ef7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       385	am.c	FUNCTION_16	CALL_4
0x4000efb	        0x488d5030	                   lea rdx, [rax + 0x30]	       385	am.c	FUNCTION_16	CALL_4
0x4000eff	        0x488d45e0	                   lea rax, [rbp - 0x20]	       385	am.c	FUNCTION_16	CALL_4
0x4000f03	          0x4889d6	                            mov rsi, rdx	       385	am.c	FUNCTION_16	CALL_4
0x4000f06	          0x4889c7	                            mov rdi, rax	       385	am.c	FUNCTION_16	CALL_4
0x4000f09	      0xe800000000	                          call 0x4000f0e	       385	am.c	FUNCTION_16	CALL_4
0x4000f0e	          0x4889c2	                            mov rdx, rax	       385	am.c	FUNCTION_16	CALL_4
0x4000f11	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       385	am.c	FUNCTION_16	CALL_4
0x4000f15	        0x48895028	             mov qword [rax + 0x28], rdx	       385	am.c	FUNCTION_16	CALL_4
0x4000f19	      0xb800000000	                              mov eax, 0	       386	am.c	FUNCTION_16
0x4000f1e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       387	am.c	FUNCTION_16
0x4000f22	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       387	am.c	FUNCTION_16
0x4000f2b	            0x7405	                            je 0x4000f32	       387	am.c	FUNCTION_16
0x4000f2d	      0xe800000000	                          call 0x4000f32	       387	am.c	FUNCTION_16
0x4000f32	              0xc9	                                   leave	       387	am.c	FUNCTION_16
0x4000f33	              0xc3	                                     ret	       387	am.c	FUNCTION_16
rollback_lock_file	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,1	10
0x40003f6	              0x55	                                push rbp	       303	lockfile.h	FUNCTION_142
0x40003f7	          0x4889e5	                            mov rbp, rsp	       303	lockfile.h	FUNCTION_142
0x40003fa	        0x4883ec10	                           sub rsp, 0x10	       303	lockfile.h	FUNCTION_142
0x40003fe	        0x48897df8	                mov qword [rbp - 8], rdi	       303	lockfile.h	FUNCTION_142
0x4000402	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	lockfile.h	FUNCTION_142	CALL_1
0x4000406	          0x4889c7	                            mov rdi, rax	       304	lockfile.h	FUNCTION_142	CALL_1
0x4000409	      0xe800000000	                          call 0x400040e	       304	lockfile.h	FUNCTION_142	CALL_1
0x400040e	              0x90	                                     nop	       305	lockfile.h	FUNCTION_142
0x400040f	              0xc9	                                   leave	       305	lockfile.h	FUNCTION_142
0x4000410	              0xc3	                                     ret	       305	lockfile.h	FUNCTION_142
am_resolve	functions,0:IF,4:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,18	85
0x4005121	              0x55	                                push rbp	      1876	am.c	FUNCTION_50
0x4005122	          0x4889e5	                            mov rbp, rsp	      1876	am.c	FUNCTION_50
0x4005125	            0x4154	                                push r12	      1876	am.c	FUNCTION_50
0x4005127	              0x53	                                push rbx	      1876	am.c	FUNCTION_50
0x4005128	        0x4883ec10	                           sub rsp, 0x10	      1876	am.c	FUNCTION_50
0x400512c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1876	am.c	FUNCTION_50
0x4005130	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1877	am.c	FUNCTION_50	CALL_1
0x4005134	          0x4889c7	                            mov rdi, rax	      1877	am.c	FUNCTION_50	CALL_1
0x4005137	      0xe866f7ffff	          call sym.validate_resume_state	      1877	am.c	FUNCTION_50	CALL_1
0x400513c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1879	am.c	FUNCTION_50	CALL_4
0x4005140	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1879	am.c	FUNCTION_50	CALL_4
0x4005144	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1879	am.c	FUNCTION_50	CALL_4
0x4005148	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1879	am.c	FUNCTION_50	CALL_4
0x400514c	          0x4889c7	                            mov rdi, rax	      1879	am.c	FUNCTION_50	CALL_4
0x400514f	      0xe855b3ffff	                        call sym.linelen	      1879	am.c	FUNCTION_50	CALL_4
0x4005154	          0x4189c4	                           mov r12d, eax	      1879	am.c	FUNCTION_50	CALL_4
0x4005157	      0xbf00000000	                              mov edi, 0	      1879	am.c	FUNCTION_50	CALL_4
0x400515c	      0xe8d5b0ffff	                               call sym.	      1879	am.c	FUNCTION_50	CALL_4
0x4005161	          0x4889c2	                            mov rdx, rax	      1879	am.c	FUNCTION_50	CALL_4
0x4005164	    0x488b35000000	            mov rsi, qword [0x0400516b] 	      1879	am.c	FUNCTION_50	CALL_4
0x400516b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1879	am.c	FUNCTION_50	CALL_4
0x400516f	          0x4989d8	                             mov r8, rbx	      1879	am.c	FUNCTION_50	CALL_4
0x4005172	          0x4489e1	                           mov ecx, r12d	      1879	am.c	FUNCTION_50	CALL_4
0x4005175	          0x4889c7	                            mov rdi, rax	      1879	am.c	FUNCTION_50	CALL_4
0x4005178	      0xb800000000	                              mov eax, 0	      1879	am.c	FUNCTION_50	CALL_4
0x400517d	      0xe8e8b5ffff	                            call sym.say	      1879	am.c	FUNCTION_50	CALL_4
0x4005182	      0xbf00000000	                              mov edi, 0	      1881	am.c	FUNCTION_50	IF_1	CALL_5
0x4005187	      0xe800000000	                          call 0x400518c	      1881	am.c	FUNCTION_50	IF_1	CALL_5
0x400518c	            0x85c0	                           test eax, eax	      1881	am.c	FUNCTION_50	IF_1	CALL_5
0x400518e	            0x7523	                           jne 0x40051b3	      1881	am.c	FUNCTION_50	IF_1	CALL_5
0x4005190	      0xbf00000000	                              mov edi, 0	      1882	am.c	FUNCTION_50	IF_1	CALL_7
0x4005195	      0xe89cb0ffff	                               call sym.	      1882	am.c	FUNCTION_50	IF_1	CALL_7
0x400519a	          0x4889c7	                            mov rdi, rax	      1882	am.c	FUNCTION_50	IF_1	CALL_7
0x400519d	      0xb800000000	                              mov eax, 0	      1882	am.c	FUNCTION_50	IF_1	CALL_7
0x40051a2	      0xe800000000	                          call 0x40051a7	      1882	am.c	FUNCTION_50	IF_1	CALL_7
0x40051a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1885	am.c	FUNCTION_50	IF_1	CALL_8
0x40051ab	          0x4889c7	                            mov rdi, rax	      1885	am.c	FUNCTION_50	IF_1	CALL_8
0x40051ae	      0xe8dcdcffff	               call sym.die_user_resolve	      1885	am.c	FUNCTION_50	IF_1	CALL_8
0x40051b3	      0xbf00000000	                              mov edi, 0	      1888	am.c	FUNCTION_50	IF_2
0x40051b8	      0xe800000000	                          call 0x40051bd	      1888	am.c	FUNCTION_50	IF_2
0x40051bd	            0x85c0	                           test eax, eax	      1888	am.c	FUNCTION_50	IF_2
0x40051bf	            0x7423	                            je 0x40051e4	      1888	am.c	FUNCTION_50	IF_2
0x40051c1	      0xbf00000000	                              mov edi, 0	      1889	am.c	FUNCTION_50	IF_2	CALL_10
0x40051c6	      0xe86bb0ffff	                               call sym.	      1889	am.c	FUNCTION_50	IF_2	CALL_10
0x40051cb	          0x4889c7	                            mov rdi, rax	      1889	am.c	FUNCTION_50	IF_2	CALL_10
0x40051ce	      0xb800000000	                              mov eax, 0	      1889	am.c	FUNCTION_50	IF_2	CALL_10
0x40051d3	      0xe800000000	                          call 0x40051d8	      1889	am.c	FUNCTION_50	IF_2	CALL_10
0x40051d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1892	am.c	FUNCTION_50	IF_2	CALL_11
0x40051dc	          0x4889c7	                            mov rdi, rax	      1892	am.c	FUNCTION_50	IF_2	CALL_11
0x40051df	      0xe8abdcffff	               call sym.die_user_resolve	      1892	am.c	FUNCTION_50	IF_2	CALL_11
0x40051e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1895	am.c	FUNCTION_50	IF_3
0x40051e8	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1895	am.c	FUNCTION_50	IF_3
0x40051eb	            0x85c0	                           test eax, eax	      1895	am.c	FUNCTION_50	IF_3
0x40051ed	            0x741c	                            je 0x400520b	      1895	am.c	FUNCTION_50	IF_3
0x40051ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1896	am.c	FUNCTION_50	IF_3	CALL_12
0x40051f3	          0x4889c7	                            mov rdi, rax	      1896	am.c	FUNCTION_50	IF_3	CALL_12
0x40051f6	      0xe841e9ffff	              call sym.write_index_patch	      1896	am.c	FUNCTION_50	IF_3	CALL_12
0x40051fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1897	am.c	FUNCTION_50	IF_3	IF_4	CALL_13
0x40051ff	          0x4889c7	                            mov rdi, rax	      1897	am.c	FUNCTION_50	IF_3	IF_4	CALL_13
0x4005202	      0xe840f7ffff	                 call sym.do_interactive	      1897	am.c	FUNCTION_50	IF_3	IF_4	CALL_13
0x4005207	            0x85c0	                           test eax, eax	      1897	am.c	FUNCTION_50	IF_3	IF_4	CALL_13
0x4005209	            0x7518	                           jne 0x4005223	      1897	am.c	FUNCTION_50	IF_3	IF_4	CALL_13
0x400520b	      0xbf00000000	                              mov edi, 0	      1901	am.c	FUNCTION_50	CALL_14
0x4005210	      0xe800000000	                          call 0x4005215	      1901	am.c	FUNCTION_50	CALL_14
0x4005215	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1903	am.c	FUNCTION_50	CALL_15
0x4005219	          0x4889c7	                            mov rdi, rax	      1903	am.c	FUNCTION_50	CALL_15
0x400521c	      0xe8c5f2ffff	                      call sym.do_commit	      1903	am.c	FUNCTION_50	CALL_15
0x4005221	            0xeb01	                           jmp 0x4005224	      1903	am.c	FUNCTION_50	CALL_15
0x4005223	              0x90	                                     nop	      1898	am.c	FUNCTION_50	IF_3	IF_4
0x4005224	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1906	am.c	FUNCTION_50	CALL_16
0x4005228	          0x4889c7	                            mov rdi, rax	      1906	am.c	FUNCTION_50	CALL_16
0x400522b	      0xe8e6d9ffff	                        call sym.am_next	      1906	am.c	FUNCTION_50	CALL_16
0x4005230	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1907	am.c	FUNCTION_50	CALL_17
0x4005234	          0x4889c7	                            mov rdi, rax	      1907	am.c	FUNCTION_50	CALL_17
0x4005237	      0xe83bbdffff	                        call sym.am_load	      1907	am.c	FUNCTION_50	CALL_17
0x400523c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	am.c	FUNCTION_50	CALL_18
0x4005240	      0xbe00000000	                              mov esi, 0	      1908	am.c	FUNCTION_50	CALL_18
0x4005245	          0x4889c7	                            mov rdi, rax	      1908	am.c	FUNCTION_50	CALL_18
0x4005248	      0xe8b2f9ffff	                         call sym.am_run	      1908	am.c	FUNCTION_50	CALL_18
0x400524d	              0x90	                                     nop	      1909	am.c	FUNCTION_50
0x400524e	        0x4883c410	                           add rsp, 0x10	      1909	am.c	FUNCTION_50
0x4005252	              0x5b	                                 pop rbx	      1909	am.c	FUNCTION_50
0x4005253	            0x415c	                                 pop r12	      1909	am.c	FUNCTION_50
0x4005255	              0x5d	                                 pop rbp	      1909	am.c	FUNCTION_50
0x4005256	              0xc3	                                     ret	      1909	am.c	FUNCTION_50
am_abort	functions,0:IF,5:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,1:CALL,13	95
0x40059a7	              0x55	                                push rbp	      2093	am.c	FUNCTION_57
0x40059a8	          0x4889e5	                            mov rbp, rsp	      2093	am.c	FUNCTION_57
0x40059ab	        0x4883ec60	                           sub rsp, 0x60	      2093	am.c	FUNCTION_57
0x40059af	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2093	am.c	FUNCTION_57
0x40059b3	    0x64488b042528	                mov rax, qword fs:[0x28]	      2093	am.c	FUNCTION_57
0x40059bc	        0x488945f8	                mov qword [rbp - 8], rax	      2093	am.c	FUNCTION_57
0x40059c0	            0x31c0	                            xor eax, eax	      2093	am.c	FUNCTION_57
0x40059c2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2098	am.c	FUNCTION_57	IF_1	CALL_1
0x40059c6	          0x4889c7	                            mov rdi, rax	      2098	am.c	FUNCTION_57	IF_1	CALL_1
0x40059c9	      0xe88dfeffff	                  call sym.safe_to_abort	      2098	am.c	FUNCTION_57	IF_1	CALL_1
0x40059ce	            0x85c0	                           test eax, eax	      2098	am.c	FUNCTION_57	IF_1	CALL_1
0x40059d0	            0x7511	                           jne 0x40059e3	      2098	am.c	FUNCTION_57	IF_1	CALL_1
0x40059d2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2099	am.c	FUNCTION_57	IF_1	CALL_2
0x40059d6	          0x4889c7	                            mov rdi, rax	      2099	am.c	FUNCTION_57	IF_1	CALL_2
0x40059d9	      0xe83dbaffff	                     call sym.am_destroy	      2099	am.c	FUNCTION_57	IF_1	CALL_2
0x40059de	      0xe91c010000	                           jmp 0x4005aff	      2099	am.c	FUNCTION_57	IF_1	CALL_2
0x40059e3	      0xe84cfdffff	                call sym.am_rerere_clear	      2103	am.c	FUNCTION_57	CALL_3
0x40059e8	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2105	am.c	FUNCTION_57	CALL_4
0x40059ec	      0xb900000000	                              mov ecx, 0	      2105	am.c	FUNCTION_57	CALL_4
0x40059f1	          0x4889c2	                            mov rdx, rax	      2105	am.c	FUNCTION_57	CALL_4
0x40059f4	      0xbe00000000	                              mov esi, 0	      2105	am.c	FUNCTION_57	CALL_4
0x40059f9	      0xbf00000000	                              mov edi, 0	      2105	am.c	FUNCTION_57	CALL_4
0x40059fe	      0xe800000000	                          call 0x4005a03	      2105	am.c	FUNCTION_57	CALL_4
0x4005a03	        0x488945b8	             mov qword [rbp - 0x48], rax	      2105	am.c	FUNCTION_57	CALL_4
0x4005a07	      0x48837db800	               cmp qword [rbp - 0x48], 0	      2106	am.c	FUNCTION_57	CALL_5
0x4005a0c	            0x7417	                            je 0x4005a25	      2106	am.c	FUNCTION_57	CALL_5
0x4005a0e	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2106	am.c	FUNCTION_57	CALL_5
0x4005a12	          0x4889c7	                            mov rdi, rax	      2106	am.c	FUNCTION_57	CALL_5
0x4005a15	      0xe897a8ffff	                    call sym.is_null_oid	      2106	am.c	FUNCTION_57	CALL_5
0x4005a1a	            0x85c0	                           test eax, eax	      2106	am.c	FUNCTION_57	CALL_5
0x4005a1c	            0x7507	                           jne 0x4005a25	      2106	am.c	FUNCTION_57	CALL_5
0x4005a1e	      0xb801000000	                              mov eax, 1	      2106	am.c	FUNCTION_57	CALL_5
0x4005a23	            0xeb05	                           jmp 0x4005a2a	      2106	am.c	FUNCTION_57	CALL_5
0x4005a25	      0xb800000000	                              mov eax, 0	      2106	am.c	FUNCTION_57	CALL_5
0x4005a2a	          0x8945b0	             mov dword [rbp - 0x50], eax	      2106	am.c	FUNCTION_57	CALL_5
0x4005a2d	        0x837db000	               cmp dword [rbp - 0x50], 0	      2107	am.c	FUNCTION_57	IF_2
0x4005a31	            0x7511	                           jne 0x4005a44	      2107	am.c	FUNCTION_57	IF_2
0x4005a33	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2108	am.c	FUNCTION_57	CALL_6
0x4005a37	      0xbe00000000	                              mov esi, 0	      2108	am.c	FUNCTION_57	CALL_6
0x4005a3c	          0x4889c7	                            mov rdi, rax	      2108	am.c	FUNCTION_57	CALL_6
0x4005a3f	      0xe894a8ffff	                        call sym.hashcpy	      2108	am.c	FUNCTION_57	CALL_6
0x4005a44	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2110	am.c	FUNCTION_57	CALL_7
0x4005a48	          0x4889c6	                            mov rsi, rax	      2110	am.c	FUNCTION_57	CALL_7
0x4005a4b	      0xbf00000000	                              mov edi, 0	      2110	am.c	FUNCTION_57	CALL_7
0x4005a50	      0xe800000000	                          call 0x4005a55	      2110	am.c	FUNCTION_57	CALL_7
0x4005a55	            0x85c0	                           test eax, eax	      2110	am.c	FUNCTION_57	CALL_7
0x4005a57	           0xf94c0	                                 sete al	      2110	am.c	FUNCTION_57	CALL_7
0x4005a5a	           0xfb6c0	                           movzx eax, al	      2110	am.c	FUNCTION_57	CALL_7
0x4005a5d	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2110	am.c	FUNCTION_57	CALL_7
0x4005a60	        0x837db400	               cmp dword [rbp - 0x4c], 0	      2111	am.c	FUNCTION_57	IF_3
0x4005a64	            0x7511	                           jne 0x4005a77	      2111	am.c	FUNCTION_57	IF_3
0x4005a66	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2112	am.c	FUNCTION_57	CALL_8
0x4005a6a	      0xbe00000000	                              mov esi, 0	      2112	am.c	FUNCTION_57	CALL_8
0x4005a6f	          0x4889c7	                            mov rdi, rax	      2112	am.c	FUNCTION_57	CALL_8
0x4005a72	      0xe861a8ffff	                        call sym.hashcpy	      2112	am.c	FUNCTION_57	CALL_8
0x4005a77	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2114	am.c	FUNCTION_57	CALL_9
0x4005a7b	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2114	am.c	FUNCTION_57	CALL_9
0x4005a7f	          0x4889d6	                            mov rsi, rdx	      2114	am.c	FUNCTION_57	CALL_9
0x4005a82	          0x4889c7	                            mov rdi, rax	      2114	am.c	FUNCTION_57	CALL_9
0x4005a85	      0xe8fcfaffff	                    call sym.clean_index	      2114	am.c	FUNCTION_57	CALL_9
0x4005a8a	        0x837db400	               cmp dword [rbp - 0x4c], 0	      2116	am.c	FUNCTION_57	IF_4
0x4005a8e	            0x7435	                            je 0x4005ac5	      2116	am.c	FUNCTION_57	IF_4
0x4005a90	        0x837db000	               cmp dword [rbp - 0x50], 0	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x4005a94	            0x7406	                            je 0x4005a9c	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x4005a96	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x4005a9a	            0xeb05	                           jmp 0x4005aa1	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x4005a9c	      0xb800000000	                              mov eax, 0	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x4005aa1	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x4005aa5	    0x41b901000000	                              mov r9d, 1	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x4005aab	    0x41b800000000	                              mov r8d, 0	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x4005ab1	          0x4889c1	                            mov rcx, rax	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x4005ab4	      0xbe00000000	                              mov esi, 0	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x4005ab9	      0xbf00000000	                              mov edi, 0	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x4005abe	      0xe800000000	                          call 0x4005ac3	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x4005ac3	            0xeb22	                           jmp 0x4005ae7	      2117	am.c	FUNCTION_57	IF_4	CALL_10
0x4005ac5	      0x48837db800	               cmp qword [rbp - 0x48], 0	      2120	am.c	FUNCTION_57	ELSE_1	IF_5
0x4005aca	            0x741b	                            je 0x4005ae7	      2120	am.c	FUNCTION_57	ELSE_1	IF_5
0x4005acc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2121	am.c	FUNCTION_57	ELSE_1	IF_5
0x4005ad0	      0xb901000000	                              mov ecx, 1	      2121	am.c	FUNCTION_57	ELSE_1	IF_5
0x4005ad5	      0xba00000000	                              mov edx, 0	      2121	am.c	FUNCTION_57	ELSE_1	IF_5
0x4005ada	          0x4889c6	                            mov rsi, rax	      2121	am.c	FUNCTION_57	ELSE_1	IF_5
0x4005add	      0xbf00000000	                              mov edi, 0	      2121	am.c	FUNCTION_57	ELSE_1	IF_5
0x4005ae2	      0xe800000000	                          call 0x4005ae7	      2121	am.c	FUNCTION_57	ELSE_1	IF_5
0x4005ae7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2123	am.c	FUNCTION_57	CALL_12
0x4005aeb	          0x4889c7	                            mov rdi, rax	      2123	am.c	FUNCTION_57	CALL_12
0x4005aee	      0xe800000000	                          call 0x4005af3	      2123	am.c	FUNCTION_57	CALL_12
0x4005af3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2124	am.c	FUNCTION_57	CALL_13
0x4005af7	          0x4889c7	                            mov rdi, rax	      2124	am.c	FUNCTION_57	CALL_13
0x4005afa	      0xe81cb9ffff	                     call sym.am_destroy	      2124	am.c	FUNCTION_57	CALL_13
0x4005aff	        0x488b45f8	                mov rax, qword [rbp - 8]	      2125	am.c	FUNCTION_57
0x4005b03	    0x644833042528	                xor rax, qword fs:[0x28]	      2125	am.c	FUNCTION_57
0x4005b0c	            0x7405	                            je 0x4005b13	      2125	am.c	FUNCTION_57
0x4005b0e	      0xe800000000	                          call 0x4005b13	      2125	am.c	FUNCTION_57
0x4005b13	              0xc9	                                   leave	      2125	am.c	FUNCTION_57
0x4005b14	              0xc3	                                     ret	      2125	am.c	FUNCTION_57
die_user_resolve	functions,0:IF,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,1:CALL,8	49
0x4002e8f	              0x55	                                push rbp	      1156	am.c	FUNCTION_35
0x4002e90	          0x4889e5	                            mov rbp, rsp	      1156	am.c	FUNCTION_35
0x4002e93	        0x4883ec20	                           sub rsp, 0x20	      1156	am.c	FUNCTION_35
0x4002e97	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1156	am.c	FUNCTION_35
0x4002e9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1157	am.c	FUNCTION_35	IF_1
0x4002e9f	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1157	am.c	FUNCTION_35	IF_1
0x4002ea6	          0x4885c0	                           test rax, rax	      1157	am.c	FUNCTION_35	IF_1
0x4002ea9	            0x741f	                            je 0x4002eca	      1157	am.c	FUNCTION_35	IF_1
0x4002eab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x4002eaf	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x4002eb6	          0x4889c6	                            mov rsi, rax	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x4002eb9	      0xbf00000000	                              mov edi, 0	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x4002ebe	      0xb800000000	                              mov eax, 0	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x4002ec3	      0xe800000000	                          call 0x4002ec8	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x4002ec8	            0xeb7e	                           jmp 0x4002f48	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x4002eca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1160	am.c	FUNCTION_35	ELSE_1
0x4002ece	          0x8b4050	            mov eax, dword [rax + 0x50] 	      1160	am.c	FUNCTION_35	ELSE_1
0x4002ed1	            0x85c0	                           test eax, eax	      1160	am.c	FUNCTION_35	ELSE_1
0x4002ed3	            0x7407	                            je 0x4002edc	      1160	am.c	FUNCTION_35	ELSE_1
0x4002ed5	      0xb800000000	                              mov eax, 0	      1160	am.c	FUNCTION_35	ELSE_1
0x4002eda	            0xeb05	                           jmp 0x4002ee1	      1160	am.c	FUNCTION_35	ELSE_1
0x4002edc	      0xb800000000	                              mov eax, 0	      1160	am.c	FUNCTION_35	ELSE_1
0x4002ee1	        0x488945f8	                mov qword [rbp - 8], rax	      1160	am.c	FUNCTION_35	ELSE_1
0x4002ee5	      0xbf00000000	                              mov edi, 0	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x4002eea	      0xe847d3ffff	                               call sym.	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x4002eef	          0x4889c2	                            mov rdx, rax	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x4002ef2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x4002ef6	          0x4889c6	                            mov rsi, rax	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x4002ef9	          0x4889d7	                            mov rdi, rdx	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x4002efc	      0xb800000000	                              mov eax, 0	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x4002f01	      0xe800000000	                          call 0x4002f06	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x4002f06	      0xbf00000000	                              mov edi, 0	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x4002f0b	      0xe826d3ffff	                               call sym.	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x4002f10	          0x4889c2	                            mov rdx, rax	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x4002f13	        0x488b45f8	                mov rax, qword [rbp - 8]	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x4002f17	          0x4889c6	                            mov rsi, rax	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x4002f1a	          0x4889d7	                            mov rdi, rdx	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x4002f1d	      0xb800000000	                              mov eax, 0	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x4002f22	      0xe800000000	                          call 0x4002f27	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x4002f27	      0xbf00000000	                              mov edi, 0	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x4002f2c	      0xe805d3ffff	                               call sym.	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x4002f31	          0x4889c2	                            mov rdx, rax	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x4002f34	        0x488b45f8	                mov rax, qword [rbp - 8]	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x4002f38	          0x4889c6	                            mov rsi, rax	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x4002f3b	          0x4889d7	                            mov rdi, rdx	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x4002f3e	      0xb800000000	                              mov eax, 0	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x4002f43	      0xe800000000	                          call 0x4002f48	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x4002f48	      0xbf80000000	                           mov edi, 0x80	      1167	am.c	FUNCTION_35	CALL_8
0x4002f4d	      0xe800000000	              call sym.am_append_signoff	      1167	am.c	FUNCTION_35	CALL_8
strbuf_setlen	functions,0:IF,2:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,1:CALL,2	43
0x40000f9	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_96
0x40000fa	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_96
0x40000fd	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_96
0x4000101	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_96
0x4000105	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_96
0x4000109	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_96	IF_1
0x400010d	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_96	IF_1
0x4000110	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_96	IF_1
0x4000113	            0x740d	                            je 0x4000122	       162	strbuf.h	FUNCTION_96	IF_1
0x4000115	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_96	IF_1
0x4000119	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_96	IF_1
0x400011c	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_96	IF_1
0x4000120	            0xeb05	                           jmp 0x4000127	       162	strbuf.h	FUNCTION_96	IF_1
0x4000122	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_96	IF_1
0x4000127	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_96	IF_1
0x400012b	            0x730f	                           jae 0x400013c	       162	strbuf.h	FUNCTION_96	IF_1
0x400012d	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_96	CALL_1
0x4000132	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_96	CALL_1
0x4000137	      0xe800000000	                          call 0x400013c	       163	strbuf.h	FUNCTION_96	CALL_1
0x400013c	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_96
0x4000140	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_96
0x4000144	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_96
0x4000148	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_96	IF_2
0x400014c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_96	IF_2
0x4000150	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_96	IF_2
0x4000156	            0x7414	                            je 0x400016c	       165	strbuf.h	FUNCTION_96	IF_2
0x4000158	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_96	IF_2
0x400015c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_96	IF_2
0x4000160	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_96	IF_2
0x4000164	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_96	IF_2
0x4000167	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_96	IF_2
0x400016a	            0xeb24	                           jmp 0x4000190	       169	strbuf.h	FUNCTION_96
0x400016c	     0xfb605000000	           movzx eax, byte [0x04000173] 	       168	strbuf.h	FUNCTION_96	CALL_2
0x4000173	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_96	CALL_2
0x4000175	            0x7419	                            je 0x4000190	       168	strbuf.h	FUNCTION_96	CALL_2
0x4000177	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_96	CALL_2
0x400017c	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_96	CALL_2
0x4000181	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_96	CALL_2
0x4000186	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_96	CALL_2
0x400018b	      0xe800000000	                          call 0x4000190	       168	strbuf.h	FUNCTION_96	CALL_2
0x4000190	              0x90	                                     nop	       169	strbuf.h	FUNCTION_96
0x4000191	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_96
0x4000192	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_96
write_state_text	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,2	21
0x40006a6	              0x55	                                push rbp	       191	am.c	FUNCTION_7
0x40006a7	          0x4889e5	                            mov rbp, rsp	       191	am.c	FUNCTION_7
0x40006aa	        0x4883ec20	                           sub rsp, 0x20	       191	am.c	FUNCTION_7
0x40006ae	        0x48897df8	                mov qword [rbp - 8], rdi	       191	am.c	FUNCTION_7
0x40006b2	        0x488975f0	             mov qword [rbp - 0x10], rsi	       191	am.c	FUNCTION_7
0x40006b6	        0x488955e8	             mov qword [rbp - 0x18], rdx	       191	am.c	FUNCTION_7
0x40006ba	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       192	am.c	FUNCTION_7	CALL_2
0x40006be	        0x488b45f8	                mov rax, qword [rbp - 8]	       192	am.c	FUNCTION_7	CALL_2
0x40006c2	          0x4889d6	                            mov rsi, rdx	       192	am.c	FUNCTION_7	CALL_2
0x40006c5	          0x4889c7	                            mov rdi, rax	       192	am.c	FUNCTION_7	CALL_2
0x40006c8	      0xe8aaffffff	                        call sym.am_path	       192	am.c	FUNCTION_7	CALL_2
0x40006cd	          0x4889c1	                            mov rcx, rax	       192	am.c	FUNCTION_7	CALL_2
0x40006d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       192	am.c	FUNCTION_7	CALL_2
0x40006d4	          0x4889c2	                            mov rdx, rax	       192	am.c	FUNCTION_7	CALL_2
0x40006d7	      0xbe00000000	                              mov esi, 0	       192	am.c	FUNCTION_7	CALL_2
0x40006dc	          0x4889cf	                            mov rdi, rcx	       192	am.c	FUNCTION_7	CALL_2
0x40006df	      0xb800000000	                              mov eax, 0	       192	am.c	FUNCTION_7	CALL_2
0x40006e4	      0xe800000000	                          call 0x40006e9	       192	am.c	FUNCTION_7	CALL_2
0x40006e9	              0x90	                                     nop	       193	am.c	FUNCTION_7
0x40006ea	              0xc9	                                   leave	       193	am.c	FUNCTION_7
0x40006eb	              0xc3	                                     ret	       193	am.c	FUNCTION_7
