show_reference	functions,0:SWITCH,0:FOR,0:ELSE,2:WHILE,0:IF,4:DO,0:CALL,11	102
0x40001ba	              0x55	                                push rbp	        44	replace.c	FUNCTION_1
0x40001bb	          0x4889e5	                            mov rbp, rsp	        44	replace.c	FUNCTION_1
0x40001be	            0x4154	                                push r12	        44	replace.c	FUNCTION_1
0x40001c0	              0x53	                                push rbx	        44	replace.c	FUNCTION_1
0x40001c1	        0x4883ec50	                           sub rsp, 0x50	        44	replace.c	FUNCTION_1
0x40001c5	        0x48897db8	             mov qword [rbp - 0x48], rdi	        44	replace.c	FUNCTION_1
0x40001c9	        0x488975b0	             mov qword [rbp - 0x50], rsi	        44	replace.c	FUNCTION_1
0x40001cd	          0x8955ac	             mov dword [rbp - 0x54], edx	        44	replace.c	FUNCTION_1
0x40001d0	        0x48894da0	             mov qword [rbp - 0x60], rcx	        44	replace.c	FUNCTION_1
0x40001d4	    0x64488b042528	                mov rax, qword fs:[0x28]	        44	replace.c	FUNCTION_1
0x40001dd	        0x488945e8	             mov qword [rbp - 0x18], rax	        44	replace.c	FUNCTION_1
0x40001e1	            0x31c0	                            xor eax, eax	        44	replace.c	FUNCTION_1
0x40001e3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        45	replace.c	FUNCTION_1
0x40001e7	        0x488945c8	             mov qword [rbp - 0x38], rax	        45	replace.c	FUNCTION_1
0x40001eb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x40001ef	          0x488b00	                    mov rax, qword [rax]	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x40001f2	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x40001f6	      0xba00000000	                              mov edx, 0	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x40001fb	          0x4889ce	                            mov rsi, rcx	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x40001fe	          0x4889c7	                            mov rdi, rax	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x4000201	      0xe800000000	                          call 0x4000206	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x4000206	            0x85c0	                           test eax, eax	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x4000208	     0xf850a010000	                           jne 0x4000318	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x400020e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        48	replace.c	FUNCTION_1	IF_1	IF_2
0x4000212	          0x8b4008	                mov eax, dword [rax + 8]	        48	replace.c	FUNCTION_1	IF_1	IF_2
0x4000215	            0x85c0	                           test eax, eax	        48	replace.c	FUNCTION_1	IF_1	IF_2
0x4000217	            0x7511	                           jne 0x400022a	        48	replace.c	FUNCTION_1	IF_1	IF_2
0x4000219	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        49	replace.c	FUNCTION_1	IF_1	CALL_2
0x400021d	          0x4889c7	                            mov rdi, rax	        49	replace.c	FUNCTION_1	IF_1	CALL_2
0x4000220	      0xe800000000	                          call 0x4000225	        49	replace.c	FUNCTION_1	IF_1	CALL_2
0x4000225	      0xe9ee000000	                           jmp 0x4000318	        49	replace.c	FUNCTION_1	IF_1	CALL_2
0x400022a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        50	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x400022e	          0x8b4008	                mov eax, dword [rax + 8]	        50	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x4000231	          0x83f801	                              cmp eax, 1	        50	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x4000234	            0x752a	                           jne 0x4000260	        50	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x4000236	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x400023a	          0x4889c7	                            mov rdi, rax	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x400023d	      0xe800000000	                          call 0x4000242	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x4000242	          0x4889c2	                            mov rdx, rax	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x4000245	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x4000249	          0x4889c6	                            mov rsi, rax	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x400024c	      0xbf00000000	                              mov edi, 0	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x4000251	      0xb800000000	                              mov eax, 0	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x4000256	      0xe800000000	                          call 0x400025b	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x400025b	      0xe9b8000000	                           jmp 0x4000318	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x4000260	        0x488d55d0	                   lea rdx, [rbp - 0x30]	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_5
0x4000264	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_5
0x4000268	          0x4889d6	                            mov rsi, rdx	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_5
0x400026b	          0x4889c7	                            mov rdi, rax	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_5
0x400026e	      0xe800000000	                          call 0x4000273	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_5
0x4000273	            0x85c0	                           test eax, eax	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_5
0x4000275	            0x7420	                            je 0x4000297	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_5
0x4000277	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4
0x400027b	          0x4889c6	                            mov rsi, rax	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4
0x400027e	      0xbf00000000	                              mov edi, 0	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4
0x4000283	      0xb800000000	                              mov eax, 0	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4
0x4000288	      0xe800000000	                          call 0x400028d	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4
0x400028d	      0xe8aefdffff	                    call sym.const_error	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4
0x4000292	      0xe986000000	                           jmp 0x400031d	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4
0x4000297	    0x488b05000000	            mov rax, qword [0x0400029e] 	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x400029e	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x40002a2	      0xba00000000	                              mov edx, 0	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x40002a7	          0x4889ce	                            mov rsi, rcx	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x40002aa	          0x4889c7	                            mov rdi, rax	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x40002ad	      0xe800000000	                          call 0x40002b2	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x40002b2	          0x8945c0	             mov dword [rbp - 0x40], eax	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x40002b5	    0x488b05000000	            mov rax, qword [0x040002bc] 	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x40002bc	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x40002c0	      0xba00000000	                              mov edx, 0	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x40002c5	          0x4889ce	                            mov rsi, rcx	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x40002c8	          0x4889c7	                            mov rdi, rax	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x40002cb	      0xe800000000	                          call 0x40002d0	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x40002d0	          0x8945c4	             mov dword [rbp - 0x3c], eax	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x40002d3	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x40002d6	            0x89c7	                            mov edi, eax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x40002d8	      0xe800000000	                          call 0x40002dd	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x40002dd	          0x4989c4	                            mov r12, rax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x40002e0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x40002e4	          0x4889c7	                            mov rdi, rax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x40002e7	      0xe800000000	                          call 0x40002ec	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x40002ec	          0x4889c3	                            mov rbx, rax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x40002ef	          0x8b45c0	             mov eax, dword [rbp - 0x40]	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x40002f2	            0x89c7	                            mov edi, eax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x40002f4	      0xe800000000	                          call 0x40002f9	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x40002f9	          0x4889c2	                            mov rdx, rax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x40002fc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x4000300	          0x4d89e0	                             mov r8, r12	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x4000303	          0x4889d9	                            mov rcx, rbx	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x4000306	          0x4889c6	                            mov rsi, rax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x4000309	      0xbf00000000	                              mov edi, 0	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x400030e	      0xb800000000	                              mov eax, 0	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x4000313	      0xe800000000	                          call 0x4000318	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_9
0x4000318	      0xb800000000	                              mov eax, 0	        68	replace.c	FUNCTION_1
0x400031d	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	        69	replace.c	FUNCTION_1
0x4000321	    0x6448331c2528	                xor rbx, qword fs:[0x28]	        69	replace.c	FUNCTION_1
0x400032a	            0x7405	                            je 0x4000331	        69	replace.c	FUNCTION_1
0x400032c	      0xe800000000	                          call 0x4000331	        69	replace.c	FUNCTION_1
0x4000331	        0x4883c450	                           add rsp, 0x50	        69	replace.c	FUNCTION_1
0x4000335	              0x5b	                                 pop rbx	        69	replace.c	FUNCTION_1
0x4000336	            0x415c	                                 pop r12	        69	replace.c	FUNCTION_1
0x4000338	              0x5d	                                 pop rbp	        69	replace.c	FUNCTION_1
0x4000339	              0xc3	                                     ret	        69	replace.c	FUNCTION_1
oidclr	functions,0:SWITCH,0:FOR,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1	12
0x4000195	              0x55	                                push rbp	      1016	cache.h	FUNCTION_32
0x4000196	          0x4889e5	                            mov rbp, rsp	      1016	cache.h	FUNCTION_32
0x4000199	        0x4883ec10	                           sub rsp, 0x10	      1016	cache.h	FUNCTION_32
0x400019d	        0x48897df8	                mov qword [rbp - 8], rdi	      1016	cache.h	FUNCTION_32
0x40001a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1017	cache.h	FUNCTION_32	CALL_1
0x40001a5	      0xba14000000	                           mov edx, 0x14	      1017	cache.h	FUNCTION_32	CALL_1
0x40001aa	      0xbe00000000	                              mov esi, 0	      1017	cache.h	FUNCTION_32	CALL_1
0x40001af	          0x4889c7	                            mov rdi, rax	      1017	cache.h	FUNCTION_32	CALL_1
0x40001b2	      0xe800000000	                          call 0x40001b7	      1017	cache.h	FUNCTION_32	CALL_1
0x40001b7	              0x90	                                     nop	      1018	cache.h	FUNCTION_32
0x40001b8	              0xc9	                                   leave	      1018	cache.h	FUNCTION_32
0x40001b9	              0xc3	                                     ret	      1018	cache.h	FUNCTION_32
hashcmp	functions,0:SWITCH,0:FOR,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1	13
0x4000146	              0x55	                                push rbp	       974	cache.h	FUNCTION_24
0x4000147	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_24
0x400014a	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_24
0x400014e	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_24
0x4000152	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_24
0x4000156	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_24	CALL_1
0x400015a	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_24	CALL_1
0x400015e	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_24	CALL_1
0x4000163	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_24	CALL_1
0x4000166	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_24	CALL_1
0x4000169	      0xe800000000	                          call 0x400016e	       975	cache.h	FUNCTION_24	CALL_1
0x400016e	              0xc9	                                   leave	       976	cache.h	FUNCTION_24
0x400016f	              0xc3	                                     ret	       976	cache.h	FUNCTION_24
check_one_mergetag	functions,0:SWITCH,0:FOR,1:ELSE,0:WHILE,0:IF,4:DO,0:CALL,11	132
0x40012c3	              0x55	                                push rbp	       397	replace.c	FUNCTION_12
0x40012c4	          0x4889e5	                            mov rbp, rsp	       397	replace.c	FUNCTION_12
0x40012c7	              0x53	                                push rbx	       397	replace.c	FUNCTION_12
0x40012c8	    0x4881ec880000	                           sub rsp, 0x88	       397	replace.c	FUNCTION_12
0x40012cf	        0x48897d88	             mov qword [rbp - 0x78], rdi	       397	replace.c	FUNCTION_12
0x40012d3	        0x48897580	             mov qword [rbp - 0x80], rsi	       397	replace.c	FUNCTION_12
0x40012d7	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       397	replace.c	FUNCTION_12
0x40012de	    0x64488b042528	                mov rax, qword fs:[0x28]	       397	replace.c	FUNCTION_12
0x40012e7	        0x488945e8	             mov qword [rbp - 0x18], rax	       397	replace.c	FUNCTION_12
0x40012eb	            0x31c0	                            xor eax, eax	       397	replace.c	FUNCTION_12
0x40012ed	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       398	replace.c	FUNCTION_12
0x40012f4	        0x48894598	             mov qword [rbp - 0x68], rax	       398	replace.c	FUNCTION_12
0x40012f8	        0x488b4598	             mov rax, qword [rbp - 0x68]	       399	replace.c	FUNCTION_12
0x40012fc	        0x488b4008	                mov rax, qword [rax + 8]	       399	replace.c	FUNCTION_12
0x4001300	          0x488b00	                    mov rax, qword [rax]	       399	replace.c	FUNCTION_12
0x4001303	        0x488945a0	             mov qword [rbp - 0x60], rax	       399	replace.c	FUNCTION_12
0x4001307	      0xbf04000000	                              mov edi, 4	       404	replace.c	FUNCTION_12	CALL_2
0x400130c	      0xe800000000	                          call 0x4001311	       404	replace.c	FUNCTION_12	CALL_2
0x4001311	          0x4889c7	                            mov rdi, rax	       404	replace.c	FUNCTION_12	CALL_2
0x4001314	        0x488b4580	             mov rax, qword [rbp - 0x80]	       404	replace.c	FUNCTION_12	CALL_2
0x4001318	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       404	replace.c	FUNCTION_12	CALL_2
0x400131c	        0x488b4580	             mov rax, qword [rbp - 0x80]	       404	replace.c	FUNCTION_12	CALL_2
0x4001320	        0x488b4010	            mov rax, qword [rax + 0x10] 	       404	replace.c	FUNCTION_12	CALL_2
0x4001324	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       404	replace.c	FUNCTION_12	CALL_2
0x4001328	          0x4889d1	                            mov rcx, rdx	       404	replace.c	FUNCTION_12	CALL_2
0x400132b	          0x4889fa	                            mov rdx, rdi	       404	replace.c	FUNCTION_12	CALL_2
0x400132e	          0x4889c7	                            mov rdi, rax	       404	replace.c	FUNCTION_12	CALL_2
0x4001331	      0xe800000000	                          call 0x4001336	       404	replace.c	FUNCTION_12	CALL_2
0x4001336	        0x488d45b0	                   lea rax, [rbp - 0x50]	       405	replace.c	FUNCTION_12	CALL_3
0x400133a	          0x4889c7	                            mov rdi, rax	       405	replace.c	FUNCTION_12	CALL_3
0x400133d	      0xe800000000	                          call 0x4001342	       405	replace.c	FUNCTION_12	CALL_3
0x4001342	        0x488945a8	             mov qword [rbp - 0x58], rax	       405	replace.c	FUNCTION_12	CALL_3
0x4001346	      0x48837da800	               cmp qword [rbp - 0x58], 0	       406	replace.c	FUNCTION_12	IF_1
0x400134b	            0x752b	                           jne 0x4001378	       406	replace.c	FUNCTION_12	IF_1
0x400134d	      0xbf00000000	                              mov edi, 0	       407	replace.c	FUNCTION_12	CALL_4
0x4001352	      0xe8c3edffff	                               call sym.	       407	replace.c	FUNCTION_12	CALL_4
0x4001357	          0x4889c2	                            mov rdx, rax	       407	replace.c	FUNCTION_12	CALL_4
0x400135a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       407	replace.c	FUNCTION_12	CALL_4
0x400135e	          0x4889c6	                            mov rsi, rax	       407	replace.c	FUNCTION_12	CALL_4
0x4001361	          0x4889d7	                            mov rdi, rdx	       407	replace.c	FUNCTION_12	CALL_4
0x4001364	      0xb800000000	                              mov eax, 0	       407	replace.c	FUNCTION_12	CALL_4
0x4001369	      0xe800000000	                          call 0x400136e	       407	replace.c	FUNCTION_12	CALL_4
0x400136e	      0xe8cdecffff	                    call sym.const_error	       407	replace.c	FUNCTION_12	CALL_4
0x4001373	      0xe92f010000	                           jmp 0x40014a7	       407	replace.c	FUNCTION_12	CALL_4
0x4001378	        0x488b4580	             mov rax, qword [rbp - 0x80]	       408	replace.c	FUNCTION_12	IF_2	CALL_5
0x400137c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       408	replace.c	FUNCTION_12	IF_2	CALL_5
0x4001380	        0x488b4580	             mov rax, qword [rbp - 0x80]	       408	replace.c	FUNCTION_12	IF_2	CALL_5
0x4001384	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       408	replace.c	FUNCTION_12	IF_2	CALL_5
0x4001388	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       408	replace.c	FUNCTION_12	IF_2	CALL_5
0x400138c	          0x4889ce	                            mov rsi, rcx	       408	replace.c	FUNCTION_12	IF_2	CALL_5
0x400138f	          0x4889c7	                            mov rdi, rax	       408	replace.c	FUNCTION_12	IF_2	CALL_5
0x4001392	      0xe800000000	                          call 0x4001397	       408	replace.c	FUNCTION_12	IF_2	CALL_5
0x4001397	            0x85c0	                           test eax, eax	       408	replace.c	FUNCTION_12	IF_2	CALL_5
0x4001399	            0x742b	                            je 0x40013c6	       408	replace.c	FUNCTION_12	IF_2	CALL_5
0x400139b	      0xbf00000000	                              mov edi, 0	       409	replace.c	FUNCTION_12	CALL_6
0x40013a0	      0xe875edffff	                               call sym.	       409	replace.c	FUNCTION_12	CALL_6
0x40013a5	          0x4889c2	                            mov rdx, rax	       409	replace.c	FUNCTION_12	CALL_6
0x40013a8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       409	replace.c	FUNCTION_12	CALL_6
0x40013ac	          0x4889c6	                            mov rsi, rax	       409	replace.c	FUNCTION_12	CALL_6
0x40013af	          0x4889d7	                            mov rdi, rdx	       409	replace.c	FUNCTION_12	CALL_6
0x40013b2	      0xb800000000	                              mov eax, 0	       409	replace.c	FUNCTION_12	CALL_6
0x40013b7	      0xe800000000	                          call 0x40013bc	       409	replace.c	FUNCTION_12	CALL_6
0x40013bc	      0xe87fecffff	                    call sym.const_error	       409	replace.c	FUNCTION_12	CALL_6
0x40013c1	      0xe9e1000000	                           jmp 0x40014a7	       409	replace.c	FUNCTION_12	CALL_6
0x40013c6	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       412	replace.c	FUNCTION_12	FOR_1
0x40013cd	      0xe98e000000	                           jmp 0x4001460	       412	replace.c	FUNCTION_12	FOR_1
0x40013d2	        0x488b4598	             mov rax, qword [rbp - 0x68]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_7
0x40013d6	        0x488b4008	                mov rax, qword [rax + 8]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_7
0x40013da	          0x8b5594	             mov edx, dword [rbp - 0x6c]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_7
0x40013dd	          0x4863d2	                         movsxd rdx, edx	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_7
0x40013e0	        0x48c1e203	                              shl rdx, 3	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_7
0x40013e4	          0x4801d0	                            add rax, rdx	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_7
0x40013e7	          0x488b00	                    mov rax, qword [rax]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_7
0x40013ea	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_7
0x40013ee	          0x4889d6	                            mov rsi, rdx	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_7
0x40013f1	          0x4889c7	                            mov rdi, rax	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_7
0x40013f4	      0xe800000000	                          call 0x40013f9	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_7
0x40013f9	            0x85c0	                           test eax, eax	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_7
0x40013fb	            0x7939	                           jns 0x4001436	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_7
0x40013fd	        0x488b4598	             mov rax, qword [rbp - 0x68]	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_8
0x4001401	        0x488b4008	                mov rax, qword [rax + 8]	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_8
0x4001405	          0x8b5594	             mov edx, dword [rbp - 0x6c]	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_8
0x4001408	          0x4863d2	                         movsxd rdx, edx	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_8
0x400140b	        0x48c1e203	                              shl rdx, 3	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_8
0x400140f	          0x4801d0	                            add rax, rdx	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_8
0x4001412	          0x488b18	                    mov rbx, qword [rax]	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_8
0x4001415	      0xbf00000000	                              mov edi, 0	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_8
0x400141a	      0xe8fbecffff	                               call sym.	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_8
0x400141f	          0x4889de	                            mov rsi, rbx	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_8
0x4001422	          0x4889c7	                            mov rdi, rax	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_8
0x4001425	      0xb800000000	                              mov eax, 0	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_8
0x400142a	      0xe800000000	                          call 0x400142f	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_8
0x400142f	      0xe80cecffff	                    call sym.const_error	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_8
0x4001434	            0xeb71	                           jmp 0x40014a7	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_8
0x4001436	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_9
0x400143a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_9
0x400143e	        0x488d5004	                      lea rdx, [rax + 4]	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_9
0x4001442	        0x488d45d0	                   lea rax, [rbp - 0x30]	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_9
0x4001446	          0x4889c6	                            mov rsi, rax	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_9
0x4001449	          0x4889d7	                            mov rdi, rdx	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_9
0x400144c	      0xe81fedffff	                         call sym.oidcmp	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_9
0x4001451	            0x85c0	                           test eax, eax	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_9
0x4001453	            0x7507	                           jne 0x400145c	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_9
0x4001455	      0xb800000000	                              mov eax, 0	       418	replace.c	FUNCTION_12	FOR_1	IF_4
0x400145a	            0xeb4b	                           jmp 0x40014a7	       418	replace.c	FUNCTION_12	FOR_1	IF_4
0x400145c	        0x83459401	               add dword [rbp - 0x6c], 1	       412	replace.c	FUNCTION_12	FOR_1
0x4001460	        0x488b4598	             mov rax, qword [rbp - 0x68]	       412	replace.c	FUNCTION_12	FOR_1
0x4001464	            0x8b00	                    mov eax, dword [rax]	       412	replace.c	FUNCTION_12	FOR_1
0x4001466	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       412	replace.c	FUNCTION_12	FOR_1
0x4001469	     0xf8f63ffffff	                            jg 0x40013d2	       412	replace.c	FUNCTION_12	FOR_1
0x400146f	        0x488d45b0	                   lea rax, [rbp - 0x50]	       421	replace.c	FUNCTION_12	CALL_10
0x4001473	          0x4889c7	                            mov rdi, rax	       421	replace.c	FUNCTION_12	CALL_10
0x4001476	      0xe800000000	                          call 0x400147b	       421	replace.c	FUNCTION_12	CALL_10
0x400147b	          0x4889c3	                            mov rbx, rax	       421	replace.c	FUNCTION_12	CALL_10
0x400147e	      0xbf00000000	                              mov edi, 0	       421	replace.c	FUNCTION_12	CALL_10
0x4001483	      0xe892ecffff	                               call sym.	       421	replace.c	FUNCTION_12	CALL_10
0x4001488	          0x4889c1	                            mov rcx, rax	       421	replace.c	FUNCTION_12	CALL_10
0x400148b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       421	replace.c	FUNCTION_12	CALL_10
0x400148f	          0x4889da	                            mov rdx, rbx	       421	replace.c	FUNCTION_12	CALL_10
0x4001492	          0x4889c6	                            mov rsi, rax	       421	replace.c	FUNCTION_12	CALL_10
0x4001495	          0x4889cf	                            mov rdi, rcx	       421	replace.c	FUNCTION_12	CALL_10
0x4001498	      0xb800000000	                              mov eax, 0	       421	replace.c	FUNCTION_12	CALL_10
0x400149d	      0xe800000000	                          call 0x40014a2	       421	replace.c	FUNCTION_12	CALL_10
0x40014a2	      0xe899ebffff	                    call sym.const_error	       421	replace.c	FUNCTION_12	CALL_10
0x40014a7	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       424	replace.c	FUNCTION_12
0x40014ab	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       424	replace.c	FUNCTION_12
0x40014b4	            0x7405	                            je 0x40014bb	       424	replace.c	FUNCTION_12
0x40014b6	      0xe800000000	                          call 0x40014bb	       424	replace.c	FUNCTION_12
0x40014bb	    0x4881c4880000	                           add rsp, 0x88	       424	replace.c	FUNCTION_12
0x40014c2	              0x5b	                                 pop rbx	       424	replace.c	FUNCTION_12
0x40014c3	              0x5d	                                 pop rbp	       424	replace.c	FUNCTION_12
0x40014c4	              0xc3	                                     ret	       424	replace.c	FUNCTION_12
_	functions,0:SWITCH,0:FOR,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,0	15
0x400011a	              0x55	                                push rbp	        51	gettext.h	FUNCTION_46
0x400011b	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_46
0x400011e	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_46
0x4000122	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_46
0x4000126	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_46	IF_1
0x400012a	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_46	IF_1
0x400012d	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_46	IF_1
0x400012f	            0x7507	                           jne 0x4000138	        52	gettext.h	FUNCTION_46	IF_1
0x4000131	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_46	IF_1
0x4000136	            0xeb0c	                           jmp 0x4000144	        53	gettext.h	FUNCTION_46	IF_1
0x4000138	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_46
0x400013c	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_46
0x400013f	      0xe800000000	                          call 0x4000144	        54	gettext.h	FUNCTION_46
0x4000144	              0xc9	                                   leave	        55	gettext.h	FUNCTION_46
0x4000145	              0xc3	                                     ret	        55	gettext.h	FUNCTION_46
convert_graft_file	functions,0:SWITCH,0:FOR,0:ELSE,0:WHILE,1:IF,4:DO,0:CALL,13	97
0x40017fe	              0x55	                                push rbp	       489	replace.c	FUNCTION_15
0x40017ff	          0x4889e5	                            mov rbp, rsp	       489	replace.c	FUNCTION_15
0x4001802	              0x53	                                push rbx	       489	replace.c	FUNCTION_15
0x4001803	        0x4883ec78	                           sub rsp, 0x78	       489	replace.c	FUNCTION_15
0x4001807	          0x897d8c	             mov dword [rbp - 0x74], edi	       489	replace.c	FUNCTION_15
0x400180a	    0x64488b042528	                mov rax, qword fs:[0x28]	       489	replace.c	FUNCTION_15
0x4001813	        0x488945e8	             mov qword [rbp - 0x18], rax	       489	replace.c	FUNCTION_15
0x4001817	            0x31c0	                            xor eax, eax	       489	replace.c	FUNCTION_15
0x4001819	      0xe800000000	                          call 0x400181e	       490	replace.c	FUNCTION_15	CALL_1
0x400181e	        0x48894590	             mov qword [rbp - 0x70], rax	       490	replace.c	FUNCTION_15	CALL_1
0x4001822	        0x488b4590	             mov rax, qword [rbp - 0x70]	       491	replace.c	FUNCTION_15	CALL_2
0x4001826	      0xbe00000000	                              mov esi, 0	       491	replace.c	FUNCTION_15	CALL_2
0x400182b	          0x4889c7	                            mov rdi, rax	       491	replace.c	FUNCTION_15	CALL_2
0x400182e	      0xe800000000	                          call 0x4001833	       491	replace.c	FUNCTION_15	CALL_2
0x4001833	        0x48894598	             mov qword [rbp - 0x68], rax	       491	replace.c	FUNCTION_15	CALL_2
0x4001837	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       492	replace.c	FUNCTION_15
0x400183f	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       492	replace.c	FUNCTION_15
0x4001847	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       492	replace.c	FUNCTION_15
0x400184f	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       492	replace.c	FUNCTION_15
0x4001857	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       492	replace.c	FUNCTION_15
0x400185f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       492	replace.c	FUNCTION_15
0x4001867	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       493	replace.c	FUNCTION_15
0x400186f	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       493	replace.c	FUNCTION_15
0x4001876	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       493	replace.c	FUNCTION_15
0x400187d	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       495	replace.c	FUNCTION_15	IF_1
0x4001882	            0x7571	                           jne 0x40018f5	       495	replace.c	FUNCTION_15	IF_1
0x4001884	      0xb8ffffffff	                     mov eax, 0xffffffff	       496	replace.c	FUNCTION_15	IF_1
0x4001889	      0xe9dd000000	                           jmp 0x400196b	       496	replace.c	FUNCTION_15	IF_1
0x400188e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       499	replace.c	FUNCTION_15	WHILE_1	IF_2
0x4001892	           0xfb600	                   movzx eax, byte [rax]	       499	replace.c	FUNCTION_15	WHILE_1	IF_2
0x4001895	            0x3c23	                            cmp al, 0x23	       499	replace.c	FUNCTION_15	WHILE_1	IF_2
0x4001897	            0x7502	                           jne 0x400189b	       499	replace.c	FUNCTION_15	WHILE_1	IF_2
0x4001899	            0xeb5a	                           jmp 0x40018f5	       500	replace.c	FUNCTION_15	WHILE_1	IF_2
0x400189b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       502	replace.c	FUNCTION_15	WHILE_1	CALL_4
0x400189f	        0x488d45a0	                   lea rax, [rbp - 0x60]	       502	replace.c	FUNCTION_15	WHILE_1	CALL_4
0x40018a3	          0x4889d6	                            mov rsi, rdx	       502	replace.c	FUNCTION_15	WHILE_1	CALL_4
0x40018a6	          0x4889c7	                            mov rdi, rax	       502	replace.c	FUNCTION_15	WHILE_1	CALL_4
0x40018a9	      0xe800000000	                          call 0x40018ae	       502	replace.c	FUNCTION_15	WHILE_1	CALL_4
0x40018ae	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x40018b1	            0x85c0	                           test eax, eax	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x40018b3	            0x7434	                            je 0x40018e9	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x40018b5	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x40018b9	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x40018bc	          0x8b558c	             mov edx, dword [rbp - 0x74]	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x40018bf	      0xb901000000	                              mov ecx, 1	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x40018c4	            0x89c7	                            mov edi, eax	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x40018c6	      0xe855fcffff	                   call sym.create_graft	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x40018cb	            0x85c0	                           test eax, eax	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x40018cd	            0x741a	                            je 0x40018e9	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x40018cf	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       504	replace.c	FUNCTION_15	WHILE_1	CALL_6
0x40018d3	        0x488d45d0	                   lea rax, [rbp - 0x30]	       504	replace.c	FUNCTION_15	WHILE_1	CALL_6
0x40018d7	      0xbe00000000	                              mov esi, 0	       504	replace.c	FUNCTION_15	WHILE_1	CALL_6
0x40018dc	          0x4889c7	                            mov rdi, rax	       504	replace.c	FUNCTION_15	WHILE_1	CALL_6
0x40018df	      0xb800000000	                              mov eax, 0	       504	replace.c	FUNCTION_15	WHILE_1	CALL_6
0x40018e4	      0xe800000000	                          call 0x40018e9	       504	replace.c	FUNCTION_15	WHILE_1	CALL_6
0x40018e9	        0x488d45a0	                   lea rax, [rbp - 0x60]	       505	replace.c	FUNCTION_15	WHILE_1	CALL_7
0x40018ed	          0x4889c7	                            mov rdi, rax	       505	replace.c	FUNCTION_15	WHILE_1	CALL_7
0x40018f0	      0xe800000000	                          call 0x40018f5	       505	replace.c	FUNCTION_15	WHILE_1	CALL_7
0x40018f5	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       498	replace.c	FUNCTION_15	WHILE_1	CALL_3
0x40018f9	        0x488d45b0	                   lea rax, [rbp - 0x50]	       498	replace.c	FUNCTION_15	WHILE_1	CALL_3
0x40018fd	          0x4889d6	                            mov rsi, rdx	       498	replace.c	FUNCTION_15	WHILE_1	CALL_3
0x4001900	          0x4889c7	                            mov rdi, rax	       498	replace.c	FUNCTION_15	WHILE_1	CALL_3
0x4001903	      0xe800000000	                          call 0x4001908	       498	replace.c	FUNCTION_15	WHILE_1	CALL_3
0x4001908	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       498	replace.c	FUNCTION_15	WHILE_1	CALL_3
0x400190b	            0x7581	                           jne 0x400188e	       498	replace.c	FUNCTION_15	WHILE_1	CALL_3
0x400190d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       507	replace.c	FUNCTION_15	CALL_8
0x4001911	          0x4889c7	                            mov rdi, rax	       507	replace.c	FUNCTION_15	CALL_8
0x4001914	      0xe800000000	                          call 0x4001919	       507	replace.c	FUNCTION_15	CALL_8
0x4001919	        0x488d45b0	                   lea rax, [rbp - 0x50]	       509	replace.c	FUNCTION_15	CALL_9
0x400191d	          0x4889c7	                            mov rdi, rax	       509	replace.c	FUNCTION_15	CALL_9
0x4001920	      0xe800000000	                          call 0x4001925	       509	replace.c	FUNCTION_15	CALL_9
0x4001925	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       511	replace.c	FUNCTION_15	IF_4
0x4001929	          0x4885c0	                           test rax, rax	       511	replace.c	FUNCTION_15	IF_4
0x400192c	            0x750e	                           jne 0x400193c	       511	replace.c	FUNCTION_15	IF_4
0x400192e	        0x488b4590	             mov rax, qword [rbp - 0x70]	       512	replace.c	FUNCTION_15	CALL_10
0x4001932	          0x4889c7	                            mov rdi, rax	       512	replace.c	FUNCTION_15	CALL_10
0x4001935	      0xe800000000	                          call 0x400193a	       512	replace.c	FUNCTION_15	CALL_10
0x400193a	            0xeb2f	                           jmp 0x400196b	       512	replace.c	FUNCTION_15	CALL_10
0x400193c	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       514	replace.c	FUNCTION_15	CALL_12
0x4001940	      0xbf00000000	                              mov edi, 0	       514	replace.c	FUNCTION_15	CALL_12
0x4001945	      0xe8d0e7ffff	                               call sym.	       514	replace.c	FUNCTION_15	CALL_12
0x400194a	          0x4889de	                            mov rsi, rbx	       514	replace.c	FUNCTION_15	CALL_12
0x400194d	          0x4889c7	                            mov rdi, rax	       514	replace.c	FUNCTION_15	CALL_12
0x4001950	      0xb800000000	                              mov eax, 0	       514	replace.c	FUNCTION_15	CALL_12
0x4001955	      0xe800000000	                          call 0x400195a	       514	replace.c	FUNCTION_15	CALL_12
0x400195a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       515	replace.c	FUNCTION_15	CALL_13
0x400195e	          0x4889c7	                            mov rdi, rax	       515	replace.c	FUNCTION_15	CALL_13
0x4001961	      0xe800000000	                          call 0x4001966	       515	replace.c	FUNCTION_15	CALL_13
0x4001966	      0xb8ffffffff	                     mov eax, 0xffffffff	       517	replace.c	FUNCTION_15
0x400196b	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       518	replace.c	FUNCTION_15
0x400196f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       518	replace.c	FUNCTION_15
0x4001978	            0x7405	                            je 0x400197f	       518	replace.c	FUNCTION_15
0x400197a	      0xe800000000	                          call 0x400197f	       518	replace.c	FUNCTION_15
0x400197f	        0x4883c478	                           add rsp, 0x78	       518	replace.c	FUNCTION_15
0x4001983	              0x5b	                                 pop rbx	       518	replace.c	FUNCTION_15
0x4001984	              0x5d	                                 pop rbp	       518	replace.c	FUNCTION_15
0x4001985	              0xc3	                                     ret	       518	replace.c	FUNCTION_15
check_ref_valid	functions,0:SWITCH,0:FOR,0:ELSE,1:WHILE,0:IF,3:DO,0:CALL,5	61
0x4000604	              0x55	                                push rbp	       145	replace.c	FUNCTION_5
0x4000605	          0x4889e5	                            mov rbp, rsp	       145	replace.c	FUNCTION_5
0x4000608	        0x4883ec20	                           sub rsp, 0x20	       145	replace.c	FUNCTION_5
0x400060c	        0x48897df8	                mov qword [rbp - 8], rdi	       145	replace.c	FUNCTION_5
0x4000610	        0x488975f0	             mov qword [rbp - 0x10], rsi	       145	replace.c	FUNCTION_5
0x4000614	        0x488955e8	             mov qword [rbp - 0x18], rdx	       145	replace.c	FUNCTION_5
0x4000618	          0x894de4	             mov dword [rbp - 0x1c], ecx	       145	replace.c	FUNCTION_5
0x400061b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       146	replace.c	FUNCTION_5
0x400061f	      0xbe00000000	                              mov esi, 0	       146	replace.c	FUNCTION_5
0x4000624	          0x4889c7	                            mov rdi, rax	       146	replace.c	FUNCTION_5
0x4000627	      0xe81ffaffff	                  call sym.strbuf_setlen	       146	replace.c	FUNCTION_5
0x400062c	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	replace.c	FUNCTION_5	CALL_2
0x4000630	          0x4889c7	                            mov rdi, rax	       147	replace.c	FUNCTION_5	CALL_2
0x4000633	      0xe800000000	                          call 0x4000638	       147	replace.c	FUNCTION_5	CALL_2
0x4000638	          0x4889c1	                            mov rcx, rax	       147	replace.c	FUNCTION_5	CALL_2
0x400063b	    0x488b15000000	            mov rdx, qword [0x04000642] 	       147	replace.c	FUNCTION_5	CALL_2
0x4000642	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       147	replace.c	FUNCTION_5	CALL_2
0x4000646	      0xbe00000000	                              mov esi, 0	       147	replace.c	FUNCTION_5	CALL_2
0x400064b	          0x4889c7	                            mov rdi, rax	       147	replace.c	FUNCTION_5	CALL_2
0x400064e	      0xb800000000	                              mov eax, 0	       147	replace.c	FUNCTION_5	CALL_2
0x4000653	      0xe800000000	                          call 0x4000658	       147	replace.c	FUNCTION_5	CALL_2
0x4000658	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x400065c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x4000660	      0xbe00000000	                              mov esi, 0	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x4000665	          0x4889c7	                            mov rdi, rax	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x4000668	      0xe800000000	                          call 0x400066d	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x400066d	            0x85c0	                           test eax, eax	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x400066f	            0x7421	                            je 0x4000692	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x4000671	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	replace.c	FUNCTION_5	IF_1
0x4000675	        0x488b4010	            mov rax, qword [rax + 0x10] 	       149	replace.c	FUNCTION_5	IF_1
0x4000679	          0x4889c6	                            mov rsi, rax	       149	replace.c	FUNCTION_5	IF_1
0x400067c	      0xbf00000000	                              mov edi, 0	       149	replace.c	FUNCTION_5	IF_1
0x4000681	      0xb800000000	                              mov eax, 0	       149	replace.c	FUNCTION_5	IF_1
0x4000686	      0xe800000000	                          call 0x400068b	       149	replace.c	FUNCTION_5	IF_1
0x400068b	      0xe8b0f9ffff	                    call sym.const_error	       149	replace.c	FUNCTION_5	IF_1
0x4000690	            0xeb55	                           jmp 0x40006e7	       149	replace.c	FUNCTION_5	IF_1
0x4000692	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       151	replace.c	FUNCTION_5	IF_2	CALL_4
0x4000696	        0x488b4010	            mov rax, qword [rax + 0x10] 	       151	replace.c	FUNCTION_5	IF_2	CALL_4
0x400069a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       151	replace.c	FUNCTION_5	IF_2	CALL_4
0x400069e	          0x4889d6	                            mov rsi, rdx	       151	replace.c	FUNCTION_5	IF_2	CALL_4
0x40006a1	          0x4889c7	                            mov rdi, rax	       151	replace.c	FUNCTION_5	IF_2	CALL_4
0x40006a4	      0xe800000000	                          call 0x40006a9	       151	replace.c	FUNCTION_5	IF_2	CALL_4
0x40006a9	            0x85c0	                           test eax, eax	       151	replace.c	FUNCTION_5	IF_2	CALL_4
0x40006ab	            0x740e	                            je 0x40006bb	       151	replace.c	FUNCTION_5	IF_2	CALL_4
0x40006ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       152	replace.c	FUNCTION_5	CALL_5
0x40006b1	          0x4889c7	                            mov rdi, rax	       152	replace.c	FUNCTION_5	CALL_5
0x40006b4	      0xe8dcfaffff	                         call sym.oidclr	       152	replace.c	FUNCTION_5	CALL_5
0x40006b9	            0xeb27	                           jmp 0x40006e2	       152	replace.c	FUNCTION_5	CALL_5
0x40006bb	        0x837de400	               cmp dword [rbp - 0x1c], 0	       153	replace.c	FUNCTION_5	ELSE_1	IF_3
0x40006bf	            0x7521	                           jne 0x40006e2	       153	replace.c	FUNCTION_5	ELSE_1	IF_3
0x40006c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x40006c5	        0x488b4010	            mov rax, qword [rax + 0x10] 	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x40006c9	          0x4889c6	                            mov rsi, rax	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x40006cc	      0xbf00000000	                              mov edi, 0	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x40006d1	      0xb800000000	                              mov eax, 0	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x40006d6	      0xe800000000	                          call 0x40006db	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x40006db	      0xe860f9ffff	                    call sym.const_error	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x40006e0	            0xeb05	                           jmp 0x40006e7	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x40006e2	      0xb800000000	                              mov eax, 0	       155	replace.c	FUNCTION_5
0x40006e7	              0xc9	                                   leave	       156	replace.c	FUNCTION_5
0x40006e8	              0xc3	                                     ret	       156	replace.c	FUNCTION_5
list_replace_refs	functions,0:SWITCH,0:FOR,0:ELSE,3:WHILE,0:IF,4:DO,0:CALL,4	62
0x400033a	              0x55	                                push rbp	        72	replace.c	FUNCTION_2
0x400033b	          0x4889e5	                            mov rbp, rsp	        72	replace.c	FUNCTION_2
0x400033e	        0x4883ec30	                           sub rsp, 0x30	        72	replace.c	FUNCTION_2
0x4000342	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        72	replace.c	FUNCTION_2
0x4000346	        0x488975d0	             mov qword [rbp - 0x30], rsi	        72	replace.c	FUNCTION_2
0x400034a	    0x64488b042528	                mov rax, qword fs:[0x28]	        72	replace.c	FUNCTION_2
0x4000353	        0x488945f8	                mov qword [rbp - 8], rax	        72	replace.c	FUNCTION_2
0x4000357	            0x31c0	                            xor eax, eax	        72	replace.c	FUNCTION_2
0x4000359	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        75	replace.c	FUNCTION_2	IF_1
0x400035e	            0x7508	                           jne 0x4000368	        75	replace.c	FUNCTION_2	IF_1
0x4000360	    0x48c745d80000	               mov qword [rbp - 0x28], 0	        76	replace.c	FUNCTION_2	IF_1
0x4000368	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        77	replace.c	FUNCTION_2
0x400036c	        0x488945e0	             mov qword [rbp - 0x20], rax	        77	replace.c	FUNCTION_2
0x4000370	      0x48837dd000	               cmp qword [rbp - 0x30], 0	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x4000375	            0x7420	                            je 0x4000397	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x4000377	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x400037b	           0xfb600	                   movzx eax, byte [rax]	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x400037e	            0x84c0	                             test al, al	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x4000380	            0x7415	                            je 0x4000397	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x4000382	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x4000386	      0xbe00000000	                              mov esi, 0	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x400038b	          0x4889c7	                            mov rdi, rax	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x400038e	      0xe800000000	                          call 0x4000393	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x4000393	            0x85c0	                           test eax, eax	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x4000395	            0x7509	                           jne 0x40003a0	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x4000397	    0xc745e8000000	               mov dword [rbp - 0x18], 0	        80	replace.c	FUNCTION_2	IF_2
0x400039e	            0xeb59	                           jmp 0x40003f9	        80	replace.c	FUNCTION_2	IF_2
0x40003a0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        81	replace.c	FUNCTION_2	ELSE_1	IF_3	CALL_2
0x40003a4	      0xbe00000000	                              mov esi, 0	        81	replace.c	FUNCTION_2	ELSE_1	IF_3	CALL_2
0x40003a9	          0x4889c7	                            mov rdi, rax	        81	replace.c	FUNCTION_2	ELSE_1	IF_3	CALL_2
0x40003ac	      0xe800000000	                          call 0x40003b1	        81	replace.c	FUNCTION_2	ELSE_1	IF_3	CALL_2
0x40003b1	            0x85c0	                           test eax, eax	        81	replace.c	FUNCTION_2	ELSE_1	IF_3	CALL_2
0x40003b3	            0x7509	                           jne 0x40003be	        81	replace.c	FUNCTION_2	ELSE_1	IF_3	CALL_2
0x40003b5	    0xc745e8010000	               mov dword [rbp - 0x18], 1	        82	replace.c	FUNCTION_2	ELSE_1	IF_3
0x40003bc	            0xeb3b	                           jmp 0x40003f9	        82	replace.c	FUNCTION_2	ELSE_1	IF_3
0x40003be	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        83	replace.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x40003c2	      0xbe00000000	                              mov esi, 0	        83	replace.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x40003c7	          0x4889c7	                            mov rdi, rax	        83	replace.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x40003ca	      0xe800000000	                          call 0x40003cf	        83	replace.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x40003cf	            0x85c0	                           test eax, eax	        83	replace.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x40003d1	            0x7509	                           jne 0x40003dc	        83	replace.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x40003d3	    0xc745e8020000	               mov dword [rbp - 0x18], 2	        84	replace.c	FUNCTION_2	ELSE_2	IF_4
0x40003da	            0xeb1d	                           jmp 0x40003f9	        84	replace.c	FUNCTION_2	ELSE_2	IF_4
0x40003dc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        86	replace.c	FUNCTION_2	ELSE_3
0x40003e0	          0x4889c6	                            mov rsi, rax	        86	replace.c	FUNCTION_2	ELSE_3
0x40003e3	      0xbf00000000	                              mov edi, 0	        86	replace.c	FUNCTION_2	ELSE_3
0x40003e8	      0xb800000000	                              mov eax, 0	        86	replace.c	FUNCTION_2	ELSE_3
0x40003ed	      0xe800000000	                          call 0x40003f2	        86	replace.c	FUNCTION_2	ELSE_3
0x40003f2	      0xe849fcffff	                    call sym.const_error	        86	replace.c	FUNCTION_2	ELSE_3
0x40003f7	            0xeb1d	                           jmp 0x4000416	        86	replace.c	FUNCTION_2	ELSE_3
0x40003f9	    0x488b05000000	            mov rax, qword [0x04000400] 	        90	replace.c	FUNCTION_2	CALL_4
0x4000400	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        90	replace.c	FUNCTION_2	CALL_4
0x4000404	      0xbe00000000	                              mov esi, 0	        90	replace.c	FUNCTION_2	CALL_4
0x4000409	          0x4889c7	                            mov rdi, rax	        90	replace.c	FUNCTION_2	CALL_4
0x400040c	      0xe800000000	                          call 0x4000411	        90	replace.c	FUNCTION_2	CALL_4
0x4000411	      0xb800000000	                              mov eax, 0	        92	replace.c	FUNCTION_2
0x4000416	        0x488b4df8	                mov rcx, qword [rbp - 8]	        93	replace.c	FUNCTION_2
0x400041a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        93	replace.c	FUNCTION_2
0x4000423	            0x7405	                            je 0x400042a	        93	replace.c	FUNCTION_2
0x4000425	      0xe800000000	                          call 0x400042a	        93	replace.c	FUNCTION_2
0x400042a	              0xc9	                                   leave	        93	replace.c	FUNCTION_2
0x400042b	              0xc3	                                     ret	        93	replace.c	FUNCTION_2
const_error	functions,0:SWITCH,0:FOR,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_53
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_53
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_53
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_53
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_53
oidcmp	functions,0:SWITCH,0:FOR,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1	12
0x4000170	              0x55	                                push rbp	       979	cache.h	FUNCTION_25
0x4000171	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_25
0x4000174	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_25
0x4000178	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_25
0x400017c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_25
0x4000180	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_25	CALL_1
0x4000184	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_25	CALL_1
0x4000188	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_25	CALL_1
0x400018b	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_25	CALL_1
0x400018e	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_25	CALL_1
0x4000193	              0xc9	                                   leave	       981	cache.h	FUNCTION_25
0x4000194	              0xc3	                                     ret	       981	cache.h	FUNCTION_25
replace_parents	functions,0:SWITCH,0:FOR,1:ELSE,0:WHILE,1:IF,2:DO,0:CALL,11	124
0x40010c8	              0x55	                                push rbp	       353	replace.c	FUNCTION_11
0x40010c9	          0x4889e5	                            mov rbp, rsp	       353	replace.c	FUNCTION_11
0x40010cc	              0x53	                                push rbx	       353	replace.c	FUNCTION_11
0x40010cd	    0x4881ec880000	                           sub rsp, 0x88	       353	replace.c	FUNCTION_11
0x40010d4	        0x48897d88	             mov qword [rbp - 0x78], rdi	       353	replace.c	FUNCTION_11
0x40010d8	          0x897584	             mov dword [rbp - 0x7c], esi	       353	replace.c	FUNCTION_11
0x40010db	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       353	replace.c	FUNCTION_11
0x40010e2	    0x64488b042528	                mov rax, qword fs:[0x28]	       353	replace.c	FUNCTION_11
0x40010eb	        0x488945e8	             mov qword [rbp - 0x18], rax	       353	replace.c	FUNCTION_11
0x40010ef	            0x31c0	                            xor eax, eax	       353	replace.c	FUNCTION_11
0x40010f1	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       354	replace.c	FUNCTION_11
0x40010f9	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       354	replace.c	FUNCTION_11
0x4001101	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       354	replace.c	FUNCTION_11
0x4001109	        0x488b4588	             mov rax, qword [rbp - 0x78]	       359	replace.c	FUNCTION_11
0x400110d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       359	replace.c	FUNCTION_11
0x4001111	        0x488945a8	             mov qword [rbp - 0x58], rax	       359	replace.c	FUNCTION_11
0x4001115	      0x488345a82e	           add qword [rbp - 0x58], 0x2e 	       360	replace.c	FUNCTION_11
0x400111a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       361	replace.c	FUNCTION_11
0x400111e	        0x488945a0	             mov qword [rbp - 0x60], rax	       361	replace.c	FUNCTION_11
0x4001122	            0xeb05	                           jmp 0x4001129	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x4001124	      0x488345a030	           add qword [rbp - 0x60], 0x30 	       364	replace.c	FUNCTION_11	WHILE_1
0x4001129	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x400112d	      0xbe00000000	                              mov esi, 0	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x4001132	          0x4889c7	                            mov rdi, rax	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x4001135	      0xe800000000	                          call 0x400113a	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x400113a	            0x85c0	                           test eax, eax	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x400113c	            0x75e6	                           jne 0x4001124	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x400113e	    0xc7459c000000	               mov dword [rbp - 0x64], 0	       367	replace.c	FUNCTION_11	FOR_1
0x4001145	      0xe9fb000000	                           jmp 0x4001245	       367	replace.c	FUNCTION_11	FOR_1
0x400114a	          0x8b459c	             mov eax, dword [rbp - 0x64]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x400114d	            0x4898	                                    cdqe	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x400114f	    0x488d14c50000	                        lea rdx, [rax*8]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4001157	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x400115e	          0x4801d0	                            add rax, rdx	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4001161	          0x488b00	                    mov rax, qword [rax]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4001164	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4001168	          0x4889d6	                            mov rsi, rdx	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x400116b	          0x4889c7	                            mov rdi, rax	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x400116e	      0xe800000000	                          call 0x4001173	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4001173	            0x85c0	                           test eax, eax	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4001175	            0x794a	                           jns 0x40011c1	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4001177	        0x488d45b0	                   lea rax, [rbp - 0x50]	       370	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x400117b	          0x4889c7	                            mov rdi, rax	       370	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x400117e	      0xe800000000	                          call 0x4001183	       370	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4001183	          0x8b459c	             mov eax, dword [rbp - 0x64]	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_4
0x4001186	            0x4898	                                    cdqe	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_4
0x4001188	    0x488d14c50000	                        lea rdx, [rax*8]	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_4
0x4001190	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_4
0x4001197	          0x4801d0	                            add rax, rdx	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_4
0x400119a	          0x488b18	                    mov rbx, qword [rax]	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_4
0x400119d	      0xbf00000000	                              mov edi, 0	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_4
0x40011a2	      0xe873efffff	                               call sym.	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_4
0x40011a7	          0x4889de	                            mov rsi, rbx	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_4
0x40011aa	          0x4889c7	                            mov rdi, rax	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_4
0x40011ad	      0xb800000000	                              mov eax, 0	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_4
0x40011b2	      0xe800000000	                          call 0x40011b7	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_4
0x40011b7	      0xe884eeffff	                    call sym.const_error	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_4
0x40011bc	      0xe9e4000000	                           jmp 0x40012a5	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_4
0x40011c1	        0x488d45d0	                   lea rax, [rbp - 0x30]	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_5
0x40011c5	          0x4889c7	                            mov rdi, rax	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_5
0x40011c8	      0xe800000000	                          call 0x40011cd	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_5
0x40011cd	          0x4885c0	                           test rax, rax	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_5
0x40011d0	            0x754a	                           jne 0x400121c	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_5
0x40011d2	        0x488d45b0	                   lea rax, [rbp - 0x50]	       375	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x40011d6	          0x4889c7	                            mov rdi, rax	       375	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x40011d9	      0xe800000000	                          call 0x40011de	       375	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x40011de	          0x8b459c	             mov eax, dword [rbp - 0x64]	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x40011e1	            0x4898	                                    cdqe	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x40011e3	    0x488d14c50000	                        lea rdx, [rax*8]	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x40011eb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x40011f2	          0x4801d0	                            add rax, rdx	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x40011f5	          0x488b18	                    mov rbx, qword [rax]	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x40011f8	      0xbf00000000	                              mov edi, 0	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x40011fd	      0xe818efffff	                               call sym.	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x4001202	          0x4889de	                            mov rsi, rbx	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x4001205	          0x4889c7	                            mov rdi, rax	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x4001208	      0xb800000000	                              mov eax, 0	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x400120d	      0xe800000000	                          call 0x4001212	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x4001212	      0xe829eeffff	                    call sym.const_error	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x4001217	      0xe989000000	                           jmp 0x40012a5	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x400121c	        0x488d45d0	                   lea rax, [rbp - 0x30]	       378	replace.c	FUNCTION_11	FOR_1	CALL_9
0x4001220	          0x4889c7	                            mov rdi, rax	       378	replace.c	FUNCTION_11	FOR_1	CALL_9
0x4001223	      0xe800000000	                          call 0x4001228	       378	replace.c	FUNCTION_11	FOR_1	CALL_9
0x4001228	          0x4889c2	                            mov rdx, rax	       378	replace.c	FUNCTION_11	FOR_1	CALL_9
0x400122b	        0x488d45b0	                   lea rax, [rbp - 0x50]	       378	replace.c	FUNCTION_11	FOR_1	CALL_9
0x400122f	      0xbe00000000	                              mov esi, 0	       378	replace.c	FUNCTION_11	FOR_1	CALL_9
0x4001234	          0x4889c7	                            mov rdi, rax	       378	replace.c	FUNCTION_11	FOR_1	CALL_9
0x4001237	      0xb800000000	                              mov eax, 0	       378	replace.c	FUNCTION_11	FOR_1	CALL_9
0x400123c	      0xe800000000	                          call 0x4001241	       378	replace.c	FUNCTION_11	FOR_1	CALL_9
0x4001241	        0x83459c01	               add dword [rbp - 0x64], 1	       367	replace.c	FUNCTION_11	FOR_1
0x4001245	          0x8b459c	             mov eax, dword [rbp - 0x64]	       367	replace.c	FUNCTION_11	FOR_1
0x4001248	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	       367	replace.c	FUNCTION_11	FOR_1
0x400124b	     0xf8cf9feffff	                            jl 0x400114a	       367	replace.c	FUNCTION_11	FOR_1
0x4001251	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       382	replace.c	FUNCTION_11	CALL_10
0x4001255	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       383	replace.c	FUNCTION_11
0x4001259	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       382	replace.c	FUNCTION_11	CALL_10
0x400125d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       382	replace.c	FUNCTION_11	CALL_10
0x4001261	          0x4829c6	                            sub rsi, rax	       382	replace.c	FUNCTION_11	CALL_10
0x4001264	          0x4889f0	                            mov rax, rsi	       382	replace.c	FUNCTION_11	CALL_10
0x4001267	          0x4889c7	                            mov rdi, rax	       382	replace.c	FUNCTION_11	CALL_10
0x400126a	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       382	replace.c	FUNCTION_11	CALL_10
0x400126e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       382	replace.c	FUNCTION_11	CALL_10
0x4001272	        0x488b4010	            mov rax, qword [rax + 0x10] 	       382	replace.c	FUNCTION_11	CALL_10
0x4001276	          0x4829c6	                            sub rsi, rax	       382	replace.c	FUNCTION_11	CALL_10
0x4001279	          0x4889f0	                            mov rax, rsi	       382	replace.c	FUNCTION_11	CALL_10
0x400127c	          0x4889c6	                            mov rsi, rax	       382	replace.c	FUNCTION_11	CALL_10
0x400127f	        0x488b4588	             mov rax, qword [rbp - 0x78]	       382	replace.c	FUNCTION_11	CALL_10
0x4001283	          0x4989c8	                             mov r8, rcx	       382	replace.c	FUNCTION_11	CALL_10
0x4001286	          0x4889d1	                            mov rcx, rdx	       382	replace.c	FUNCTION_11	CALL_10
0x4001289	          0x4889fa	                            mov rdx, rdi	       382	replace.c	FUNCTION_11	CALL_10
0x400128c	          0x4889c7	                            mov rdi, rax	       382	replace.c	FUNCTION_11	CALL_10
0x400128f	      0xe800000000	                          call 0x4001294	       382	replace.c	FUNCTION_11	CALL_10
0x4001294	        0x488d45b0	                   lea rax, [rbp - 0x50]	       385	replace.c	FUNCTION_11	CALL_11
0x4001298	          0x4889c7	                            mov rdi, rax	       385	replace.c	FUNCTION_11	CALL_11
0x400129b	      0xe800000000	                          call 0x40012a0	       385	replace.c	FUNCTION_11	CALL_11
0x40012a0	      0xb800000000	                              mov eax, 0	       386	replace.c	FUNCTION_11
0x40012a5	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       387	replace.c	FUNCTION_11
0x40012a9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       387	replace.c	FUNCTION_11
0x40012b2	            0x7405	                            je 0x40012b9	       387	replace.c	FUNCTION_11
0x40012b4	      0xe800000000	                          call 0x40012b9	       387	replace.c	FUNCTION_11
0x40012b9	    0x4881c4880000	                           add rsp, 0x88	       387	replace.c	FUNCTION_11
0x40012c0	              0x5b	                                 pop rbx	       387	replace.c	FUNCTION_11
0x40012c1	              0x5d	                                 pop rbp	       387	replace.c	FUNCTION_11
0x40012c2	              0xc3	                                     ret	       387	replace.c	FUNCTION_11
check_mergetags	functions,0:SWITCH,0:FOR,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,1	24
0x40014c5	              0x55	                                push rbp	       427	replace.c	FUNCTION_13
0x40014c6	          0x4889e5	                            mov rbp, rsp	       427	replace.c	FUNCTION_13
0x40014c9	        0x4883ec40	                           sub rsp, 0x40	       427	replace.c	FUNCTION_13
0x40014cd	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       427	replace.c	FUNCTION_13
0x40014d1	          0x8975d4	             mov dword [rbp - 0x2c], esi	       427	replace.c	FUNCTION_13
0x40014d4	        0x488955c8	             mov qword [rbp - 0x38], rdx	       427	replace.c	FUNCTION_13
0x40014d8	    0x64488b042528	                mov rax, qword fs:[0x28]	       427	replace.c	FUNCTION_13
0x40014e1	        0x488945f8	                mov qword [rbp - 8], rax	       427	replace.c	FUNCTION_13
0x40014e5	            0x31c0	                            xor eax, eax	       427	replace.c	FUNCTION_13
0x40014e7	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       430	replace.c	FUNCTION_13
0x40014ea	          0x8945e0	             mov dword [rbp - 0x20], eax	       430	replace.c	FUNCTION_13
0x40014ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       431	replace.c	FUNCTION_13
0x40014f1	        0x488945e8	             mov qword [rbp - 0x18], rax	       431	replace.c	FUNCTION_13
0x40014f5	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       432	replace.c	FUNCTION_13	CALL_1
0x40014f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       432	replace.c	FUNCTION_13	CALL_1
0x40014fd	          0x4889c6	                            mov rsi, rax	       432	replace.c	FUNCTION_13	CALL_1
0x4001500	      0xbf00000000	                              mov edi, 0	       432	replace.c	FUNCTION_13	CALL_1
0x4001505	      0xe800000000	                          call 0x400150a	       432	replace.c	FUNCTION_13	CALL_1
0x400150a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       433	replace.c	FUNCTION_13
0x400150e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       433	replace.c	FUNCTION_13
0x4001517	            0x7405	                            je 0x400151e	       433	replace.c	FUNCTION_13
0x4001519	      0xe800000000	                          call 0x400151e	       433	replace.c	FUNCTION_13
0x400151e	              0xc9	                                   leave	       433	replace.c	FUNCTION_13
0x400151f	              0xc3	                                     ret	       433	replace.c	FUNCTION_13
strbuf_setlen	functions,0:SWITCH,0:FOR,0:ELSE,1:WHILE,0:IF,2:DO,0:CALL,2	43
0x400004b	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_77
0x400004c	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_77
0x400004f	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_77
0x4000053	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_77
0x4000057	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_77
0x400005b	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_77	IF_1
0x400005f	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_77	IF_1
0x4000062	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_77	IF_1
0x4000065	            0x740d	                            je 0x4000074	       162	strbuf.h	FUNCTION_77	IF_1
0x4000067	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_77	IF_1
0x400006b	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_77	IF_1
0x400006e	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_77	IF_1
0x4000072	            0xeb05	                           jmp 0x4000079	       162	strbuf.h	FUNCTION_77	IF_1
0x4000074	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_77	IF_1
0x4000079	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_77	IF_1
0x400007d	            0x730f	                           jae 0x400008e	       162	strbuf.h	FUNCTION_77	IF_1
0x400007f	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_77	CALL_1
0x4000084	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_77	CALL_1
0x4000089	      0xe800000000	                          call 0x400008e	       163	strbuf.h	FUNCTION_77	CALL_1
0x400008e	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_77
0x4000092	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_77
0x4000096	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_77
0x400009a	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_77	IF_2
0x400009e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_77	IF_2
0x40000a2	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_77	IF_2
0x40000a8	            0x7414	                            je 0x40000be	       165	strbuf.h	FUNCTION_77	IF_2
0x40000aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_77	IF_2
0x40000ae	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_77	IF_2
0x40000b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_77	IF_2
0x40000b6	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_77	IF_2
0x40000b9	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_77	IF_2
0x40000bc	            0xeb24	                           jmp 0x40000e2	       169	strbuf.h	FUNCTION_77
0x40000be	     0xfb605000000	           movzx eax, byte [0x040000c5] 	       168	strbuf.h	FUNCTION_77	CALL_2
0x40000c5	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_77	CALL_2
0x40000c7	            0x7419	                            je 0x40000e2	       168	strbuf.h	FUNCTION_77	CALL_2
0x40000c9	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_77	CALL_2
0x40000ce	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_77	CALL_2
0x40000d3	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_77	CALL_2
0x40000d8	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_77	CALL_2
0x40000dd	      0xe800000000	                          call 0x40000e2	       168	strbuf.h	FUNCTION_77	CALL_2
0x40000e2	              0x90	                                     nop	       169	strbuf.h	FUNCTION_77
0x40000e3	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_77
0x40000e4	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_77
replace_object	functions,0:SWITCH,0:FOR,0:ELSE,0:WHILE,0:IF,2:DO,0:CALL,3	51
0x40008f7	              0x55	                                push rbp	       199	replace.c	FUNCTION_7
0x40008f8	          0x4889e5	                            mov rbp, rsp	       199	replace.c	FUNCTION_7
0x40008fb	        0x4883ec60	                           sub rsp, 0x60	       199	replace.c	FUNCTION_7
0x40008ff	        0x48897db8	             mov qword [rbp - 0x48], rdi	       199	replace.c	FUNCTION_7
0x4000903	        0x488975b0	             mov qword [rbp - 0x50], rsi	       199	replace.c	FUNCTION_7
0x4000907	          0x8955ac	             mov dword [rbp - 0x54], edx	       199	replace.c	FUNCTION_7
0x400090a	    0x64488b042528	                mov rax, qword fs:[0x28]	       199	replace.c	FUNCTION_7
0x4000913	        0x488945f8	                mov qword [rbp - 8], rax	       199	replace.c	FUNCTION_7
0x4000917	            0x31c0	                            xor eax, eax	       199	replace.c	FUNCTION_7
0x4000919	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       202	replace.c	FUNCTION_7	IF_1	CALL_1
0x400091d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       202	replace.c	FUNCTION_7	IF_1	CALL_1
0x4000921	          0x4889d6	                            mov rsi, rdx	       202	replace.c	FUNCTION_7	IF_1	CALL_1
0x4000924	          0x4889c7	                            mov rdi, rax	       202	replace.c	FUNCTION_7	IF_1	CALL_1
0x4000927	      0xe800000000	                          call 0x400092c	       202	replace.c	FUNCTION_7	IF_1	CALL_1
0x400092c	            0x85c0	                           test eax, eax	       202	replace.c	FUNCTION_7	IF_1	CALL_1
0x400092e	            0x741d	                            je 0x400094d	       202	replace.c	FUNCTION_7	IF_1	CALL_1
0x4000930	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       203	replace.c	FUNCTION_7	IF_1
0x4000934	          0x4889c6	                            mov rsi, rax	       203	replace.c	FUNCTION_7	IF_1
0x4000937	      0xbf00000000	                              mov edi, 0	       203	replace.c	FUNCTION_7	IF_1
0x400093c	      0xb800000000	                              mov eax, 0	       203	replace.c	FUNCTION_7	IF_1
0x4000941	      0xe800000000	                          call 0x4000946	       203	replace.c	FUNCTION_7	IF_1
0x4000946	      0xe8f5f6ffff	                    call sym.const_error	       203	replace.c	FUNCTION_7	IF_1
0x400094b	            0xeb52	                           jmp 0x400099f	       203	replace.c	FUNCTION_7	IF_1
0x400094d	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       205	replace.c	FUNCTION_7	IF_2	CALL_2
0x4000951	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       205	replace.c	FUNCTION_7	IF_2	CALL_2
0x4000955	          0x4889d6	                            mov rsi, rdx	       205	replace.c	FUNCTION_7	IF_2	CALL_2
0x4000958	          0x4889c7	                            mov rdi, rax	       205	replace.c	FUNCTION_7	IF_2	CALL_2
0x400095b	      0xe800000000	                          call 0x4000960	       205	replace.c	FUNCTION_7	IF_2	CALL_2
0x4000960	            0x85c0	                           test eax, eax	       205	replace.c	FUNCTION_7	IF_2	CALL_2
0x4000962	            0x741d	                            je 0x4000981	       205	replace.c	FUNCTION_7	IF_2	CALL_2
0x4000964	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       206	replace.c	FUNCTION_7	IF_2
0x4000968	          0x4889c6	                            mov rsi, rax	       206	replace.c	FUNCTION_7	IF_2
0x400096b	      0xbf00000000	                              mov edi, 0	       206	replace.c	FUNCTION_7	IF_2
0x4000970	      0xb800000000	                              mov eax, 0	       206	replace.c	FUNCTION_7	IF_2
0x4000975	      0xe800000000	                          call 0x400097a	       206	replace.c	FUNCTION_7	IF_2
0x400097a	      0xe8c1f6ffff	                    call sym.const_error	       206	replace.c	FUNCTION_7	IF_2
0x400097f	            0xeb1e	                           jmp 0x400099f	       206	replace.c	FUNCTION_7	IF_2
0x4000981	          0x8b7dac	             mov edi, dword [rbp - 0x54]	       209	replace.c	FUNCTION_7	CALL_3
0x4000984	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       209	replace.c	FUNCTION_7	CALL_3
0x4000988	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       209	replace.c	FUNCTION_7	CALL_3
0x400098c	        0x488d75c0	                   lea rsi, [rbp - 0x40]	       209	replace.c	FUNCTION_7	CALL_3
0x4000990	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       209	replace.c	FUNCTION_7	CALL_3
0x4000994	          0x4189f8	                            mov r8d, edi	       209	replace.c	FUNCTION_7	CALL_3
0x4000997	          0x4889c7	                            mov rdi, rax	       209	replace.c	FUNCTION_7	CALL_3
0x400099a	      0xe84afdffff	             call sym.replace_object_oid	       209	replace.c	FUNCTION_7	CALL_3
0x400099f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       210	replace.c	FUNCTION_7
0x40009a3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       210	replace.c	FUNCTION_7
0x40009ac	            0x7405	                            je 0x40009b3	       210	replace.c	FUNCTION_7
0x40009ae	      0xe800000000	                          call 0x40009b3	       210	replace.c	FUNCTION_7
0x40009b3	              0xc9	                                   leave	       210	replace.c	FUNCTION_7
0x40009b4	              0xc3	                                     ret	       210	replace.c	FUNCTION_7
create_graft	functions,0:SWITCH,0:FOR,0:ELSE,0:WHILE,0:IF,8:DO,0:CALL,25	178
0x4001520	              0x55	                                push rbp	       436	replace.c	FUNCTION_14
0x4001521	          0x4889e5	                            mov rbp, rsp	       436	replace.c	FUNCTION_14
0x4001524	    0x4881eca00000	                           sub rsp, 0xa0	       436	replace.c	FUNCTION_14
0x400152b	    0x89bd7cffffff	             mov dword [rbp - 0x84], edi	       436	replace.c	FUNCTION_14
0x4001531	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       436	replace.c	FUNCTION_14
0x4001538	    0x899578ffffff	             mov dword [rbp - 0x88], edx	       436	replace.c	FUNCTION_14
0x400153e	    0x898d6cffffff	             mov dword [rbp - 0x94], ecx	       436	replace.c	FUNCTION_14
0x4001544	    0x64488b042528	                mov rax, qword fs:[0x28]	       436	replace.c	FUNCTION_14
0x400154d	        0x488945f8	                mov qword [rbp - 8], rax	       436	replace.c	FUNCTION_14
0x4001551	            0x31c0	                            xor eax, eax	       436	replace.c	FUNCTION_14
0x4001553	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       438	replace.c	FUNCTION_14
0x400155a	          0x488b00	                    mov rax, qword [rax]	       438	replace.c	FUNCTION_14
0x400155d	        0x48894588	             mov qword [rbp - 0x78], rax	       438	replace.c	FUNCTION_14
0x4001561	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       440	replace.c	FUNCTION_14
0x4001569	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       440	replace.c	FUNCTION_14
0x4001571	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       440	replace.c	FUNCTION_14
0x4001579	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x400157d	        0x488b4588	             mov rax, qword [rbp - 0x78]	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x4001581	          0x4889d6	                            mov rsi, rdx	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x4001584	          0x4889c7	                            mov rdi, rax	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x4001587	      0xe800000000	                          call 0x400158c	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x400158c	            0x85c0	                           test eax, eax	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x400158e	            0x792b	                           jns 0x40015bb	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x4001590	      0xbf00000000	                              mov edi, 0	       445	replace.c	FUNCTION_14	CALL_2
0x4001595	      0xe880ebffff	                               call sym.	       445	replace.c	FUNCTION_14	CALL_2
0x400159a	          0x4889c2	                            mov rdx, rax	       445	replace.c	FUNCTION_14	CALL_2
0x400159d	        0x488b4588	             mov rax, qword [rbp - 0x78]	       445	replace.c	FUNCTION_14	CALL_2
0x40015a1	          0x4889c6	                            mov rsi, rax	       445	replace.c	FUNCTION_14	CALL_2
0x40015a4	          0x4889d7	                            mov rdi, rdx	       445	replace.c	FUNCTION_14	CALL_2
0x40015a7	      0xb800000000	                              mov eax, 0	       445	replace.c	FUNCTION_14	CALL_2
0x40015ac	      0xe800000000	                          call 0x40015b1	       445	replace.c	FUNCTION_14	CALL_2
0x40015b1	      0xe88aeaffff	                    call sym.const_error	       445	replace.c	FUNCTION_14	CALL_2
0x40015b6	      0xe92d020000	                           jmp 0x40017e8	       445	replace.c	FUNCTION_14	CALL_2
0x40015bb	        0x488d45c0	                   lea rax, [rbp - 0x40]	       446	replace.c	FUNCTION_14	CALL_3
0x40015bf	          0x4889c7	                            mov rdi, rax	       446	replace.c	FUNCTION_14	CALL_3
0x40015c2	      0xe800000000	                          call 0x40015c7	       446	replace.c	FUNCTION_14	CALL_3
0x40015c7	        0x48894590	             mov qword [rbp - 0x70], rax	       446	replace.c	FUNCTION_14	CALL_3
0x40015cb	      0x48837d9000	               cmp qword [rbp - 0x70], 0	       447	replace.c	FUNCTION_14	IF_2
0x40015d0	            0x752b	                           jne 0x40015fd	       447	replace.c	FUNCTION_14	IF_2
0x40015d2	      0xbf00000000	                              mov edi, 0	       448	replace.c	FUNCTION_14	CALL_4
0x40015d7	      0xe83eebffff	                               call sym.	       448	replace.c	FUNCTION_14	CALL_4
0x40015dc	          0x4889c2	                            mov rdx, rax	       448	replace.c	FUNCTION_14	CALL_4
0x40015df	        0x488b4588	             mov rax, qword [rbp - 0x78]	       448	replace.c	FUNCTION_14	CALL_4
0x40015e3	          0x4889c6	                            mov rsi, rax	       448	replace.c	FUNCTION_14	CALL_4
0x40015e6	          0x4889d7	                            mov rdi, rdx	       448	replace.c	FUNCTION_14	CALL_4
0x40015e9	      0xb800000000	                              mov eax, 0	       448	replace.c	FUNCTION_14	CALL_4
0x40015ee	      0xe800000000	                          call 0x40015f3	       448	replace.c	FUNCTION_14	CALL_4
0x40015f3	      0xe848eaffff	                    call sym.const_error	       448	replace.c	FUNCTION_14	CALL_4
0x40015f8	      0xe9eb010000	                           jmp 0x40017e8	       448	replace.c	FUNCTION_14	CALL_4
0x40015fd	        0x488d5580	                   lea rdx, [rbp - 0x80]	       450	replace.c	FUNCTION_14	CALL_5
0x4001601	        0x488b4590	             mov rax, qword [rbp - 0x70]	       450	replace.c	FUNCTION_14	CALL_5
0x4001605	          0x4889d6	                            mov rsi, rdx	       450	replace.c	FUNCTION_14	CALL_5
0x4001608	          0x4889c7	                            mov rdi, rax	       450	replace.c	FUNCTION_14	CALL_5
0x400160b	      0xe800000000	                          call 0x4001610	       450	replace.c	FUNCTION_14	CALL_5
0x4001610	        0x48894598	             mov qword [rbp - 0x68], rax	       450	replace.c	FUNCTION_14	CALL_5
0x4001614	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       451	replace.c	FUNCTION_14	CALL_6
0x4001618	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       451	replace.c	FUNCTION_14	CALL_6
0x400161c	        0x488d45a0	                   lea rax, [rbp - 0x60]	       451	replace.c	FUNCTION_14	CALL_6
0x4001620	          0x4889ce	                            mov rsi, rcx	       451	replace.c	FUNCTION_14	CALL_6
0x4001623	          0x4889c7	                            mov rdi, rax	       451	replace.c	FUNCTION_14	CALL_6
0x4001626	      0xe800000000	                          call 0x400162b	       451	replace.c	FUNCTION_14	CALL_6
0x400162b	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       452	replace.c	FUNCTION_14	CALL_7
0x400162f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       452	replace.c	FUNCTION_14	CALL_7
0x4001633	          0x4889d6	                            mov rsi, rdx	       452	replace.c	FUNCTION_14	CALL_7
0x4001636	          0x4889c7	                            mov rdi, rax	       452	replace.c	FUNCTION_14	CALL_7
0x4001639	      0xe800000000	                          call 0x400163e	       452	replace.c	FUNCTION_14	CALL_7
0x400163e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       454	replace.c	FUNCTION_14	IF_3	CALL_8
0x4001645	        0x488d5008	                      lea rdx, [rax + 8]	       454	replace.c	FUNCTION_14	IF_3	CALL_8
0x4001649	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       454	replace.c	FUNCTION_14	IF_3	CALL_8
0x400164f	          0x8d48ff	                      lea ecx, [rax - 1]	       454	replace.c	FUNCTION_14	IF_3	CALL_8
0x4001652	        0x488d45a0	                   lea rax, [rbp - 0x60]	       454	replace.c	FUNCTION_14	IF_3	CALL_8
0x4001656	            0x89ce	                            mov esi, ecx	       454	replace.c	FUNCTION_14	IF_3	CALL_8
0x4001658	          0x4889c7	                            mov rdi, rax	       454	replace.c	FUNCTION_14	IF_3	CALL_8
0x400165b	      0xe868faffff	                call sym.replace_parents	       454	replace.c	FUNCTION_14	IF_3	CALL_8
0x4001660	            0x85c0	                           test eax, eax	       454	replace.c	FUNCTION_14	IF_3	CALL_8
0x4001662	            0x7916	                           jns 0x400167a	       454	replace.c	FUNCTION_14	IF_3	CALL_8
0x4001664	        0x488d45a0	                   lea rax, [rbp - 0x60]	       455	replace.c	FUNCTION_14	IF_3	CALL_9
0x4001668	          0x4889c7	                            mov rdi, rax	       455	replace.c	FUNCTION_14	IF_3	CALL_9
0x400166b	      0xe800000000	                          call 0x4001670	       455	replace.c	FUNCTION_14	IF_3	CALL_9
0x4001670	      0xb8ffffffff	                     mov eax, 0xffffffff	       456	replace.c	FUNCTION_14	IF_3
0x4001675	      0xe96e010000	                           jmp 0x40017e8	       456	replace.c	FUNCTION_14	IF_3
0x400167a	        0x488d45a0	                   lea rax, [rbp - 0x60]	       459	replace.c	FUNCTION_14	IF_4	CALL_10
0x400167e	          0x4889c7	                            mov rdi, rax	       459	replace.c	FUNCTION_14	IF_4	CALL_10
0x4001681	      0xe800000000	                          call 0x4001686	       459	replace.c	FUNCTION_14	IF_4	CALL_10
0x4001686	            0x85c0	                           test eax, eax	       459	replace.c	FUNCTION_14	IF_4	CALL_10
0x4001688	            0x7438	                            je 0x40016c2	       459	replace.c	FUNCTION_14	IF_4	CALL_10
0x400168a	      0xbf00000000	                              mov edi, 0	       460	replace.c	FUNCTION_14	IF_4	CALL_12
0x400168f	      0xe886eaffff	                               call sym.	       460	replace.c	FUNCTION_14	IF_4	CALL_12
0x4001694	          0x4889c2	                            mov rdx, rax	       460	replace.c	FUNCTION_14	IF_4	CALL_12
0x4001697	        0x488b4588	             mov rax, qword [rbp - 0x78]	       460	replace.c	FUNCTION_14	IF_4	CALL_12
0x400169b	          0x4889c6	                            mov rsi, rax	       460	replace.c	FUNCTION_14	IF_4	CALL_12
0x400169e	          0x4889d7	                            mov rdi, rdx	       460	replace.c	FUNCTION_14	IF_4	CALL_12
0x40016a1	      0xb800000000	                              mov eax, 0	       460	replace.c	FUNCTION_14	IF_4	CALL_12
0x40016a6	      0xe800000000	                          call 0x40016ab	       460	replace.c	FUNCTION_14	IF_4	CALL_12
0x40016ab	      0xbf00000000	                              mov edi, 0	       461	replace.c	FUNCTION_14	IF_4	CALL_14
0x40016b0	      0xe865eaffff	                               call sym.	       461	replace.c	FUNCTION_14	IF_4	CALL_14
0x40016b5	          0x4889c7	                            mov rdi, rax	       461	replace.c	FUNCTION_14	IF_4	CALL_14
0x40016b8	      0xb800000000	                              mov eax, 0	       461	replace.c	FUNCTION_14	IF_4	CALL_14
0x40016bd	      0xe800000000	                          call 0x40016c2	       461	replace.c	FUNCTION_14	IF_4	CALL_14
0x40016c2	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       464	replace.c	FUNCTION_14	IF_5	CALL_15
0x40016c9	    0x8b8d7cffffff	             mov ecx, dword [rbp - 0x84]	       464	replace.c	FUNCTION_14	IF_5	CALL_15
0x40016cf	        0x488b4590	             mov rax, qword [rbp - 0x70]	       464	replace.c	FUNCTION_14	IF_5	CALL_15
0x40016d3	            0x89ce	                            mov esi, ecx	       464	replace.c	FUNCTION_14	IF_5	CALL_15
0x40016d5	          0x4889c7	                            mov rdi, rax	       464	replace.c	FUNCTION_14	IF_5	CALL_15
0x40016d8	      0xe8e8fdffff	                call sym.check_mergetags	       464	replace.c	FUNCTION_14	IF_5	CALL_15
0x40016dd	            0x85c0	                           test eax, eax	       464	replace.c	FUNCTION_14	IF_5	CALL_15
0x40016df	            0x7416	                            je 0x40016f7	       464	replace.c	FUNCTION_14	IF_5	CALL_15
0x40016e1	        0x488d45a0	                   lea rax, [rbp - 0x60]	       465	replace.c	FUNCTION_14	IF_5	CALL_16
0x40016e5	          0x4889c7	                            mov rdi, rax	       465	replace.c	FUNCTION_14	IF_5	CALL_16
0x40016e8	      0xe800000000	                          call 0x40016ed	       465	replace.c	FUNCTION_14	IF_5	CALL_16
0x40016ed	      0xb8ffffffff	                     mov eax, 0xffffffff	       466	replace.c	FUNCTION_14	IF_5
0x40016f2	      0xe9f1000000	                           jmp 0x40017e8	       466	replace.c	FUNCTION_14	IF_5
0x40016f7	    0x488b15000000	            mov rdx, qword [0x040016fe] 	       469	replace.c	FUNCTION_14	IF_6	CALL_17
0x40016fe	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       469	replace.c	FUNCTION_14	IF_6	CALL_17
0x4001702	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       469	replace.c	FUNCTION_14	IF_6	CALL_17
0x4001706	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       469	replace.c	FUNCTION_14	IF_6	CALL_17
0x400170a	          0x4889c7	                            mov rdi, rax	       469	replace.c	FUNCTION_14	IF_6	CALL_17
0x400170d	      0xe800000000	                          call 0x4001712	       469	replace.c	FUNCTION_14	IF_6	CALL_17
0x4001712	            0x85c0	                           test eax, eax	       469	replace.c	FUNCTION_14	IF_6	CALL_17
0x4001714	            0x7437	                            je 0x400174d	       469	replace.c	FUNCTION_14	IF_6	CALL_17
0x4001716	        0x488d45a0	                   lea rax, [rbp - 0x60]	       470	replace.c	FUNCTION_14	IF_6	CALL_18
0x400171a	          0x4889c7	                            mov rdi, rax	       470	replace.c	FUNCTION_14	IF_6	CALL_18
0x400171d	      0xe800000000	                          call 0x4001722	       470	replace.c	FUNCTION_14	IF_6	CALL_18
0x4001722	      0xbf00000000	                              mov edi, 0	       471	replace.c	FUNCTION_14	IF_6	CALL_19
0x4001727	      0xe8eee9ffff	                               call sym.	       471	replace.c	FUNCTION_14	IF_6	CALL_19
0x400172c	          0x4889c2	                            mov rdx, rax	       471	replace.c	FUNCTION_14	IF_6	CALL_19
0x400172f	        0x488b4588	             mov rax, qword [rbp - 0x78]	       471	replace.c	FUNCTION_14	IF_6	CALL_19
0x4001733	          0x4889c6	                            mov rsi, rax	       471	replace.c	FUNCTION_14	IF_6	CALL_19
0x4001736	          0x4889d7	                            mov rdi, rdx	       471	replace.c	FUNCTION_14	IF_6	CALL_19
0x4001739	      0xb800000000	                              mov eax, 0	       471	replace.c	FUNCTION_14	IF_6	CALL_19
0x400173e	      0xe800000000	                          call 0x4001743	       471	replace.c	FUNCTION_14	IF_6	CALL_19
0x4001743	      0xe8f8e8ffff	                    call sym.const_error	       471	replace.c	FUNCTION_14	IF_6	CALL_19
0x4001748	      0xe99b000000	                           jmp 0x40017e8	       471	replace.c	FUNCTION_14	IF_6	CALL_19
0x400174d	        0x488d45a0	                   lea rax, [rbp - 0x60]	       475	replace.c	FUNCTION_14	CALL_20
0x4001751	          0x4889c7	                            mov rdi, rax	       475	replace.c	FUNCTION_14	CALL_20
0x4001754	      0xe800000000	                          call 0x4001759	       475	replace.c	FUNCTION_14	CALL_20
0x4001759	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       477	replace.c	FUNCTION_14	IF_7	CALL_21
0x400175d	        0x488d45c0	                   lea rax, [rbp - 0x40]	       477	replace.c	FUNCTION_14	IF_7	CALL_21
0x4001761	          0x4889d6	                            mov rsi, rdx	       477	replace.c	FUNCTION_14	IF_7	CALL_21
0x4001764	          0x4889c7	                            mov rdi, rax	       477	replace.c	FUNCTION_14	IF_7	CALL_21
0x4001767	      0xe804eaffff	                         call sym.oidcmp	       477	replace.c	FUNCTION_14	IF_7	CALL_21
0x400176c	            0x85c0	                           test eax, eax	       477	replace.c	FUNCTION_14	IF_7	CALL_21
0x400176e	            0x7553	                           jne 0x40017c3	       477	replace.c	FUNCTION_14	IF_7	CALL_21
0x4001770	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       478	replace.c	FUNCTION_14	IF_7	IF_8
0x4001777	            0x7425	                            je 0x400179e	       478	replace.c	FUNCTION_14	IF_7	IF_8
0x4001779	        0x488d45c0	                   lea rax, [rbp - 0x40]	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_23
0x400177d	          0x4889c7	                            mov rdi, rax	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_23
0x4001780	      0xe800000000	                          call 0x4001785	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_23
0x4001785	          0x4889c6	                            mov rsi, rax	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_23
0x4001788	      0xbf00000000	                              mov edi, 0	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_23
0x400178d	      0xb800000000	                              mov eax, 0	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_23
0x4001792	      0xe800000000	                          call 0x4001797	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_23
0x4001797	      0xb800000000	                              mov eax, 0	       480	replace.c	FUNCTION_14	IF_7	IF_8
0x400179c	            0xeb4a	                           jmp 0x40017e8	       480	replace.c	FUNCTION_14	IF_7	IF_8
0x400179e	        0x488d45c0	                   lea rax, [rbp - 0x40]	       482	replace.c	FUNCTION_14	IF_7	CALL_24
0x40017a2	          0x4889c7	                            mov rdi, rax	       482	replace.c	FUNCTION_14	IF_7	CALL_24
0x40017a5	      0xe800000000	                          call 0x40017aa	       482	replace.c	FUNCTION_14	IF_7	CALL_24
0x40017aa	          0x4889c6	                            mov rsi, rax	       482	replace.c	FUNCTION_14	IF_7	CALL_24
0x40017ad	      0xbf00000000	                              mov edi, 0	       482	replace.c	FUNCTION_14	IF_7	CALL_24
0x40017b2	      0xb800000000	                              mov eax, 0	       482	replace.c	FUNCTION_14	IF_7	CALL_24
0x40017b7	      0xe800000000	                          call 0x40017bc	       482	replace.c	FUNCTION_14	IF_7	CALL_24
0x40017bc	      0xe87fe8ffff	                    call sym.const_error	       482	replace.c	FUNCTION_14	IF_7	CALL_24
0x40017c1	            0xeb25	                           jmp 0x40017e8	       482	replace.c	FUNCTION_14	IF_7	CALL_24
0x40017c3	    0x8b8d78ffffff	             mov ecx, dword [rbp - 0x88]	       485	replace.c	FUNCTION_14	CALL_25
0x40017c9	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       485	replace.c	FUNCTION_14	CALL_25
0x40017cd	        0x488d75c0	                   lea rsi, [rbp - 0x40]	       485	replace.c	FUNCTION_14	CALL_25
0x40017d1	        0x488b4588	             mov rax, qword [rbp - 0x78]	       485	replace.c	FUNCTION_14	CALL_25
0x40017d5	          0x4189c8	                            mov r8d, ecx	       485	replace.c	FUNCTION_14	CALL_25
0x40017d8	          0x4889d1	                            mov rcx, rdx	       485	replace.c	FUNCTION_14	CALL_25
0x40017db	      0xba00000000	                              mov edx, 0	       485	replace.c	FUNCTION_14	CALL_25
0x40017e0	          0x4889c7	                            mov rdi, rax	       485	replace.c	FUNCTION_14	CALL_25
0x40017e3	      0xe801efffff	             call sym.replace_object_oid	       485	replace.c	FUNCTION_14	CALL_25
0x40017e8	        0x488b4df8	                mov rcx, qword [rbp - 8]	       486	replace.c	FUNCTION_14
0x40017ec	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       486	replace.c	FUNCTION_14
0x40017f5	            0x7405	                            je 0x40017fc	       486	replace.c	FUNCTION_14
0x40017f7	      0xe800000000	                          call 0x40017fc	       486	replace.c	FUNCTION_14
0x40017fc	              0xc9	                                   leave	       486	replace.c	FUNCTION_14
0x40017fd	              0xc3	                                     ret	       486	replace.c	FUNCTION_14
delete_replace_ref	functions,0:SWITCH,0:FOR,0:ELSE,0:WHILE,0:IF,1:DO,0:CALL,2	24
0x40005ae	              0x55	                                push rbp	       134	replace.c	FUNCTION_4
0x40005af	          0x4889e5	                            mov rbp, rsp	       134	replace.c	FUNCTION_4
0x40005b2	        0x4883ec20	                           sub rsp, 0x20	       134	replace.c	FUNCTION_4
0x40005b6	        0x48897df8	                mov qword [rbp - 8], rdi	       134	replace.c	FUNCTION_4
0x40005ba	        0x488975f0	             mov qword [rbp - 0x10], rsi	       134	replace.c	FUNCTION_4
0x40005be	        0x488955e8	             mov qword [rbp - 0x18], rdx	       134	replace.c	FUNCTION_4
0x40005c2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x40005c6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x40005ca	      0xb900000000	                              mov ecx, 0	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x40005cf	          0x4889c6	                            mov rsi, rax	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x40005d2	      0xbf00000000	                              mov edi, 0	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x40005d7	      0xe800000000	                          call 0x40005dc	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x40005dc	            0x85c0	                           test eax, eax	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x40005de	            0x7407	                            je 0x40005e7	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x40005e0	      0xb801000000	                              mov eax, 1	       136	replace.c	FUNCTION_4	IF_1
0x40005e5	            0xeb1b	                           jmp 0x4000602	       136	replace.c	FUNCTION_4	IF_1
0x40005e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	replace.c	FUNCTION_4	CALL_2
0x40005eb	          0x4889c6	                            mov rsi, rax	       137	replace.c	FUNCTION_4	CALL_2
0x40005ee	      0xbf00000000	                              mov edi, 0	       137	replace.c	FUNCTION_4	CALL_2
0x40005f3	      0xb800000000	                              mov eax, 0	       137	replace.c	FUNCTION_4	CALL_2
0x40005f8	      0xe800000000	                          call 0x40005fd	       137	replace.c	FUNCTION_4	CALL_2
0x40005fd	      0xb800000000	                              mov eax, 0	       138	replace.c	FUNCTION_4
0x4000602	              0xc9	                                   leave	       139	replace.c	FUNCTION_4
0x4000603	              0xc3	                                     ret	       139	replace.c	FUNCTION_4
replace_object_oid	functions,0:SWITCH,0:FOR,0:ELSE,0:WHILE,0:IF,3:DO,0:CALL,11	118
0x40006e9	              0x55	                                push rbp	       163	replace.c	FUNCTION_6
0x40006ea	          0x4889e5	                            mov rbp, rsp	       163	replace.c	FUNCTION_6
0x40006ed	              0x53	                                push rbx	       163	replace.c	FUNCTION_6
0x40006ee	    0x4881ecb80000	                           sub rsp, 0xb8	       163	replace.c	FUNCTION_6
0x40006f5	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	       163	replace.c	FUNCTION_6
0x40006fc	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	       163	replace.c	FUNCTION_6
0x4000703	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	       163	replace.c	FUNCTION_6
0x400070a	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	       163	replace.c	FUNCTION_6
0x4000711	    0x4489854cffff	             mov dword [rbp - 0xb4], r8d	       163	replace.c	FUNCTION_6
0x4000718	    0x64488b042528	                mov rax, qword fs:[0x28]	       163	replace.c	FUNCTION_6
0x4000721	        0x488945e8	             mov qword [rbp - 0x18], rax	       163	replace.c	FUNCTION_6
0x4000725	            0x31c0	                            xor eax, eax	       163	replace.c	FUNCTION_6
0x4000727	    0x48c745900000	               mov qword [rbp - 0x70], 0	       166	replace.c	FUNCTION_6
0x400072f	    0x48c745980000	               mov qword [rbp - 0x68], 0	       166	replace.c	FUNCTION_6
0x4000737	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       166	replace.c	FUNCTION_6
0x400073f	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       168	replace.c	FUNCTION_6
0x4000747	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       168	replace.c	FUNCTION_6
0x400074f	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       168	replace.c	FUNCTION_6
0x4000757	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	       169	replace.c	FUNCTION_6
0x4000761	    0x488b05000000	            mov rax, qword [0x04000768] 	       171	replace.c	FUNCTION_6	CALL_1
0x4000768	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	       171	replace.c	FUNCTION_6	CALL_1
0x400076f	      0xba00000000	                              mov edx, 0	       171	replace.c	FUNCTION_6	CALL_1
0x4000774	          0x4889ce	                            mov rsi, rcx	       171	replace.c	FUNCTION_6	CALL_1
0x4000777	          0x4889c7	                            mov rdi, rax	       171	replace.c	FUNCTION_6	CALL_1
0x400077a	      0xe800000000	                          call 0x400077f	       171	replace.c	FUNCTION_6	CALL_1
0x400077f	          0x894580	             mov dword [rbp - 0x80], eax	       171	replace.c	FUNCTION_6	CALL_1
0x4000782	    0x488b05000000	            mov rax, qword [0x04000789] 	       172	replace.c	FUNCTION_6	CALL_2
0x4000789	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	       172	replace.c	FUNCTION_6	CALL_2
0x4000790	      0xba00000000	                              mov edx, 0	       172	replace.c	FUNCTION_6	CALL_2
0x4000795	          0x4889ce	                            mov rsi, rcx	       172	replace.c	FUNCTION_6	CALL_2
0x4000798	          0x4889c7	                            mov rdi, rax	       172	replace.c	FUNCTION_6	CALL_2
0x400079b	      0xe800000000	                          call 0x40007a0	       172	replace.c	FUNCTION_6	CALL_2
0x40007a0	          0x894584	             mov dword [rbp - 0x7c], eax	       172	replace.c	FUNCTION_6	CALL_2
0x40007a3	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       173	replace.c	FUNCTION_6	IF_1
0x40007aa	            0x7555	                           jne 0x4000801	       173	replace.c	FUNCTION_6	IF_1
0x40007ac	          0x8b4580	             mov eax, dword [rbp - 0x80]	       173	replace.c	FUNCTION_6	IF_1
0x40007af	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	       173	replace.c	FUNCTION_6	IF_1
0x40007b2	            0x744d	                            je 0x4000801	       173	replace.c	FUNCTION_6	IF_1
0x40007b4	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       174	replace.c	FUNCTION_6	IF_1
0x40007b7	            0x89c7	                            mov edi, eax	       174	replace.c	FUNCTION_6	IF_1
0x40007b9	      0xe800000000	                          call 0x40007be	       174	replace.c	FUNCTION_6	IF_1
0x40007be	          0x4889c3	                            mov rbx, rax	       174	replace.c	FUNCTION_6	IF_1
0x40007c1	          0x8b4580	             mov eax, dword [rbp - 0x80]	       174	replace.c	FUNCTION_6	IF_1
0x40007c4	            0x89c7	                            mov edi, eax	       174	replace.c	FUNCTION_6	IF_1
0x40007c6	      0xe800000000	                          call 0x40007cb	       174	replace.c	FUNCTION_6	IF_1
0x40007cb	          0x4889c6	                            mov rsi, rax	       174	replace.c	FUNCTION_6	IF_1
0x40007ce	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       174	replace.c	FUNCTION_6	IF_1
0x40007d5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       174	replace.c	FUNCTION_6	IF_1
0x40007dc	          0x4989d8	                             mov r8, rbx	       174	replace.c	FUNCTION_6	IF_1
0x40007df	          0x4889d1	                            mov rcx, rdx	       174	replace.c	FUNCTION_6	IF_1
0x40007e2	          0x4889f2	                            mov rdx, rsi	       174	replace.c	FUNCTION_6	IF_1
0x40007e5	          0x4889c6	                            mov rsi, rax	       174	replace.c	FUNCTION_6	IF_1
0x40007e8	      0xbf00000000	                              mov edi, 0	       174	replace.c	FUNCTION_6	IF_1
0x40007ed	      0xb800000000	                              mov eax, 0	       174	replace.c	FUNCTION_6	IF_1
0x40007f2	      0xe800000000	                          call 0x40007f7	       174	replace.c	FUNCTION_6	IF_1
0x40007f7	      0xe844f8ffff	                    call sym.const_error	       174	replace.c	FUNCTION_6	IF_1
0x40007fc	      0xe9dc000000	                           jmp 0x40008dd	       174	replace.c	FUNCTION_6	IF_1
0x4000801	    0x8b8d4cffffff	             mov ecx, dword [rbp - 0xb4]	       181	replace.c	FUNCTION_6	IF_2	CALL_5
0x4000807	        0x488d5590	                   lea rdx, [rbp - 0x70]	       181	replace.c	FUNCTION_6	IF_2	CALL_5
0x400080b	        0x488d75d0	                   lea rsi, [rbp - 0x30]	       181	replace.c	FUNCTION_6	IF_2	CALL_5
0x400080f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       181	replace.c	FUNCTION_6	IF_2	CALL_5
0x4000816	          0x4889c7	                            mov rdi, rax	       181	replace.c	FUNCTION_6	IF_2	CALL_5
0x4000819	      0xe8e6fdffff	                call sym.check_ref_valid	       181	replace.c	FUNCTION_6	IF_2	CALL_5
0x400081e	            0x85c0	                           test eax, eax	       181	replace.c	FUNCTION_6	IF_2	CALL_5
0x4000820	            0x7416	                            je 0x4000838	       181	replace.c	FUNCTION_6	IF_2	CALL_5
0x4000822	        0x488d4590	                   lea rax, [rbp - 0x70]	       182	replace.c	FUNCTION_6	IF_2	CALL_6
0x4000826	          0x4889c7	                            mov rdi, rax	       182	replace.c	FUNCTION_6	IF_2	CALL_6
0x4000829	      0xe800000000	                          call 0x400082e	       182	replace.c	FUNCTION_6	IF_2	CALL_6
0x400082e	      0xb8ffffffff	                     mov eax, 0xffffffff	       183	replace.c	FUNCTION_6	IF_2
0x4000833	      0xe9a5000000	                           jmp 0x40008dd	       183	replace.c	FUNCTION_6	IF_2
0x4000838	        0x488d45b0	                   lea rax, [rbp - 0x50]	       186	replace.c	FUNCTION_6	CALL_7
0x400083c	          0x4889c7	                            mov rdi, rax	       186	replace.c	FUNCTION_6	CALL_7
0x400083f	      0xe800000000	                          call 0x4000844	       186	replace.c	FUNCTION_6	CALL_7
0x4000844	        0x48894588	             mov qword [rbp - 0x78], rax	       186	replace.c	FUNCTION_6	CALL_7
0x4000848	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       187	replace.c	FUNCTION_6	IF_3
0x400084d	            0x744f	                            je 0x400089e	       187	replace.c	FUNCTION_6	IF_3
0x400084f	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       188	replace.c	FUNCTION_6	IF_3	CALL_8
0x4000853	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       188	replace.c	FUNCTION_6	IF_3	CALL_8
0x4000857	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       188	replace.c	FUNCTION_6	IF_3	CALL_8
0x400085e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       188	replace.c	FUNCTION_6	IF_3	CALL_8
0x4000862	        0x4883ec08	                              sub rsp, 8	       188	replace.c	FUNCTION_6	IF_3	CALL_8
0x4000866	        0x488d7db0	                   lea rdi, [rbp - 0x50]	       188	replace.c	FUNCTION_6	IF_3	CALL_8
0x400086a	              0x57	                                push rdi	       188	replace.c	FUNCTION_6	IF_3	CALL_8
0x400086b	    0x41b900000000	                              mov r9d, 0	       188	replace.c	FUNCTION_6	IF_3	CALL_8
0x4000871	    0x41b800000000	                              mov r8d, 0	       188	replace.c	FUNCTION_6	IF_3	CALL_8
0x4000877	          0x4889c7	                            mov rdi, rax	       188	replace.c	FUNCTION_6	IF_3	CALL_8
0x400087a	      0xe800000000	                          call 0x400087f	       188	replace.c	FUNCTION_6	IF_3	CALL_8
0x400087f	        0x4883c410	                           add rsp, 0x10	       188	replace.c	FUNCTION_6	IF_3	CALL_8
0x4000883	            0x85c0	                           test eax, eax	       187	replace.c	FUNCTION_6	IF_3
0x4000885	            0x7517	                           jne 0x400089e	       187	replace.c	FUNCTION_6	IF_3
0x4000887	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       190	replace.c	FUNCTION_6	IF_3	CALL_9
0x400088b	        0x488b4588	             mov rax, qword [rbp - 0x78]	       190	replace.c	FUNCTION_6	IF_3	CALL_9
0x400088f	          0x4889d6	                            mov rsi, rdx	       190	replace.c	FUNCTION_6	IF_3	CALL_9
0x4000892	          0x4889c7	                            mov rdi, rax	       190	replace.c	FUNCTION_6	IF_3	CALL_9
0x4000895	      0xe800000000	                          call 0x400089a	       190	replace.c	FUNCTION_6	IF_3	CALL_9
0x400089a	            0x85c0	                           test eax, eax	       189	replace.c	FUNCTION_6	IF_3
0x400089c	            0x7421	                            je 0x40008bf	       189	replace.c	FUNCTION_6	IF_3
0x400089e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       191	replace.c	FUNCTION_6	IF_3
0x40008a2	          0x4889c6	                            mov rsi, rax	       191	replace.c	FUNCTION_6	IF_3
0x40008a5	      0xbf00000000	                              mov edi, 0	       191	replace.c	FUNCTION_6	IF_3
0x40008aa	      0xb800000000	                              mov eax, 0	       191	replace.c	FUNCTION_6	IF_3
0x40008af	      0xe800000000	                          call 0x40008b4	       191	replace.c	FUNCTION_6	IF_3
0x40008b4	      0xe887f7ffff	                    call sym.const_error	       191	replace.c	FUNCTION_6	IF_3
0x40008b9	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       191	replace.c	FUNCTION_6	IF_3
0x40008bf	        0x488b4588	             mov rax, qword [rbp - 0x78]	       193	replace.c	FUNCTION_6	CALL_10
0x40008c3	          0x4889c7	                            mov rdi, rax	       193	replace.c	FUNCTION_6	CALL_10
0x40008c6	      0xe800000000	                          call 0x40008cb	       193	replace.c	FUNCTION_6	CALL_10
0x40008cb	        0x488d4590	                   lea rax, [rbp - 0x70]	       194	replace.c	FUNCTION_6	CALL_11
0x40008cf	          0x4889c7	                            mov rdi, rax	       194	replace.c	FUNCTION_6	CALL_11
0x40008d2	      0xe800000000	                          call 0x40008d7	       194	replace.c	FUNCTION_6	CALL_11
0x40008d7	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       195	replace.c	FUNCTION_6
0x40008dd	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       196	replace.c	FUNCTION_6
0x40008e1	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       196	replace.c	FUNCTION_6
0x40008ea	            0x7405	                            je 0x40008f1	       196	replace.c	FUNCTION_6
0x40008ec	      0xe800000000	                          call 0x40008f1	       196	replace.c	FUNCTION_6
0x40008f1	        0x488b5df8	                mov rbx, qword [rbp - 8]	       196	replace.c	FUNCTION_6
0x40008f5	              0xc9	                                   leave	       196	replace.c	FUNCTION_6
0x40008f6	              0xc3	                                     ret	       196	replace.c	FUNCTION_6
cmd_replace	functions,0:SWITCH,1:FOR,0:ELSE,0:WHILE,0:IF,10:DO,0:CALL,26	247
0x4001986	              0x55	                                push rbp	       521	replace.c	FUNCTION_16
0x4001987	          0x4889e5	                            mov rbp, rsp	       521	replace.c	FUNCTION_16
0x400198a	    0x4881ec900200	                          sub rsp, 0x290	       521	replace.c	FUNCTION_16
0x4001991	    0x89bd8cfdffff	            mov dword [rbp - 0x274], edi	       521	replace.c	FUNCTION_16
0x4001997	    0x4889b580fdff	            mov qword [rbp - 0x280], rsi	       521	replace.c	FUNCTION_16
0x400199e	    0x48899578fdff	            mov qword [rbp - 0x288], rdx	       521	replace.c	FUNCTION_16
0x40019a5	    0x64488b042528	                mov rax, qword fs:[0x28]	       521	replace.c	FUNCTION_16
0x40019ae	        0x488945f8	                mov qword [rbp - 8], rax	       521	replace.c	FUNCTION_16
0x40019b2	            0x31c0	                            xor eax, eax	       521	replace.c	FUNCTION_16
0x40019b4	    0xc7859cfdffff	              mov dword [rbp - 0x264], 0	       522	replace.c	FUNCTION_16
0x40019be	    0xc785a0fdffff	              mov dword [rbp - 0x260], 0	       523	replace.c	FUNCTION_16
0x40019c8	    0x48c785a8fdff	              mov qword [rbp - 0x258], 0	       524	replace.c	FUNCTION_16
0x40019d3	    0xc785a4fdffff	              mov dword [rbp - 0x25c], 0	       533	replace.c	FUNCTION_16
0x40019dd	    0x488d95b0fdff	                  lea rdx, [rbp - 0x250]	       534	replace.c	FUNCTION_16
0x40019e4	      0xb800000000	                              mov eax, 0	       534	replace.c	FUNCTION_16
0x40019e9	      0xb948000000	                           mov ecx, 0x48	       534	replace.c	FUNCTION_16
0x40019ee	          0x4889d7	                            mov rdi, rdx	       534	replace.c	FUNCTION_16
0x40019f1	          0xf348ab	              rep stosq qword [rdi], rax	       534	replace.c	FUNCTION_16
0x40019f4	    0xc785b0fdffff	              mov dword [rbp - 0x250], 8	       534	replace.c	FUNCTION_16
0x40019fe	    0xc785b4fdffff	          mov dword [rbp - 0x24c], 0x6c 	       534	replace.c	FUNCTION_16
0x4001a08	    0x48c785b8fdff	              mov qword [rbp - 0x248], 0	       534	replace.c	FUNCTION_16
0x4001a13	    0x488d85a4fdff	                  lea rax, [rbp - 0x25c]	       534	replace.c	FUNCTION_16
0x4001a1a	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	       534	replace.c	FUNCTION_16
0x4001a21	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	       534	replace.c	FUNCTION_16
0x4001a2c	    0xc785d8fdffff	              mov dword [rbp - 0x228], 6	       534	replace.c	FUNCTION_16
0x4001a36	    0x48c785e8fdff	              mov qword [rbp - 0x218], 1	       534	replace.c	FUNCTION_16
0x4001a41	    0xc785f0fdffff	              mov dword [rbp - 0x210], 8	       534	replace.c	FUNCTION_16
0x4001a4b	    0xc785f4fdffff	          mov dword [rbp - 0x20c], 0x64 	       534	replace.c	FUNCTION_16
0x4001a55	    0x48c785f8fdff	              mov qword [rbp - 0x208], 0	       534	replace.c	FUNCTION_16
0x4001a60	    0x488d85a4fdff	                  lea rax, [rbp - 0x25c]	       534	replace.c	FUNCTION_16
0x4001a67	    0x48898500feff	            mov qword [rbp - 0x200], rax	       534	replace.c	FUNCTION_16
0x4001a6e	    0x48c78510feff	              mov qword [rbp - 0x1f0], 0	       534	replace.c	FUNCTION_16
0x4001a79	    0xc78518feffff	              mov dword [rbp - 0x1e8], 6	       534	replace.c	FUNCTION_16
0x4001a83	    0x48c78528feff	              mov qword [rbp - 0x1d8], 2	       534	replace.c	FUNCTION_16
0x4001a8e	    0xc78530feffff	              mov dword [rbp - 0x1d0], 8	       534	replace.c	FUNCTION_16
0x4001a98	    0xc78534feffff	          mov dword [rbp - 0x1cc], 0x65 	       534	replace.c	FUNCTION_16
0x4001aa2	    0x48c78538feff	              mov qword [rbp - 0x1c8], 0	       534	replace.c	FUNCTION_16
0x4001aad	    0x488d85a4fdff	                  lea rax, [rbp - 0x25c]	       534	replace.c	FUNCTION_16
0x4001ab4	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	       534	replace.c	FUNCTION_16
0x4001abb	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	       534	replace.c	FUNCTION_16
0x4001ac6	    0xc78558feffff	              mov dword [rbp - 0x1a8], 6	       534	replace.c	FUNCTION_16
0x4001ad0	    0x48c78568feff	              mov qword [rbp - 0x198], 3	       534	replace.c	FUNCTION_16
0x4001adb	    0xc78570feffff	              mov dword [rbp - 0x190], 8	       534	replace.c	FUNCTION_16
0x4001ae5	    0xc78574feffff	          mov dword [rbp - 0x18c], 0x67 	       534	replace.c	FUNCTION_16
0x4001aef	    0x48c78578feff	              mov qword [rbp - 0x188], 0	       534	replace.c	FUNCTION_16
0x4001afa	    0x488d85a4fdff	                  lea rax, [rbp - 0x25c]	       534	replace.c	FUNCTION_16
0x4001b01	    0x48898580feff	            mov qword [rbp - 0x180], rax	       534	replace.c	FUNCTION_16
0x4001b08	    0x48c78590feff	              mov qword [rbp - 0x170], 0	       534	replace.c	FUNCTION_16
0x4001b13	    0xc78598feffff	              mov dword [rbp - 0x168], 6	       534	replace.c	FUNCTION_16
0x4001b1d	    0x48c785a8feff	              mov qword [rbp - 0x158], 4	       534	replace.c	FUNCTION_16
0x4001b28	    0xc785b0feffff	              mov dword [rbp - 0x150], 8	       534	replace.c	FUNCTION_16
0x4001b32	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	       534	replace.c	FUNCTION_16
0x4001b3d	    0x488d85a4fdff	                  lea rax, [rbp - 0x25c]	       534	replace.c	FUNCTION_16
0x4001b44	    0x488985c0feff	            mov qword [rbp - 0x140], rax	       534	replace.c	FUNCTION_16
0x4001b4b	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       534	replace.c	FUNCTION_16
0x4001b56	    0xc785d8feffff	              mov dword [rbp - 0x128], 6	       534	replace.c	FUNCTION_16
0x4001b60	    0x48c785e8feff	              mov qword [rbp - 0x118], 5	       534	replace.c	FUNCTION_16
0x4001b6b	    0xc785f0feffff	              mov dword [rbp - 0x110], 7	       534	replace.c	FUNCTION_16
0x4001b75	    0xc785f4feffff	          mov dword [rbp - 0x10c], 0x66 	       534	replace.c	FUNCTION_16
0x4001b7f	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	       534	replace.c	FUNCTION_16
0x4001b8a	    0x488d859cfdff	                  lea rax, [rbp - 0x264]	       534	replace.c	FUNCTION_16
0x4001b91	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       534	replace.c	FUNCTION_16
0x4001b98	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       534	replace.c	FUNCTION_16
0x4001ba3	    0xc78518ffffff	          mov dword [rbp - 0xe8], 0x202 	       534	replace.c	FUNCTION_16
0x4001bad	    0x48c78528ffff	               mov qword [rbp - 0xd8], 1	       534	replace.c	FUNCTION_16
0x4001bb8	    0xc78530ffffff	               mov dword [rbp - 0xd0], 7	       534	replace.c	FUNCTION_16
0x4001bc2	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       534	replace.c	FUNCTION_16
0x4001bcd	    0x488d85a0fdff	                  lea rax, [rbp - 0x260]	       534	replace.c	FUNCTION_16
0x4001bd4	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       534	replace.c	FUNCTION_16
0x4001bdb	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       534	replace.c	FUNCTION_16
0x4001be6	    0xc78558ffffff	               mov dword [rbp - 0xa8], 2	       534	replace.c	FUNCTION_16
0x4001bf0	    0x48c78568ffff	               mov qword [rbp - 0x98], 1	       534	replace.c	FUNCTION_16
0x4001bfb	    0xc78570ffffff	               mov dword [rbp - 0x90], 9	       534	replace.c	FUNCTION_16
0x4001c05	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       534	replace.c	FUNCTION_16
0x4001c10	    0x488d85a8fdff	                  lea rax, [rbp - 0x258]	       534	replace.c	FUNCTION_16
0x4001c17	        0x48894580	             mov qword [rbp - 0x80], rax	       534	replace.c	FUNCTION_16
0x4001c1b	    0x48c745880000	               mov qword [rbp - 0x78], 0	       534	replace.c	FUNCTION_16
0x4001c23	    0x48c745900000	               mov qword [rbp - 0x70], 0	       534	replace.c	FUNCTION_16
0x4001c2b	    0xc70500000000	               mov dword [0x04001c35], 0	       547	replace.c	FUNCTION_16
0x4001c35	      0xbe00000000	                              mov esi, 0	       548	replace.c	FUNCTION_16	CALL_10
0x4001c3a	      0xbf00000000	                              mov edi, 0	       548	replace.c	FUNCTION_16	CALL_10
0x4001c3f	      0xe800000000	                          call 0x4001c44	       548	replace.c	FUNCTION_16	CALL_10
0x4001c44	    0x488d8db0fdff	                  lea rcx, [rbp - 0x250]	       550	replace.c	FUNCTION_16	CALL_11
0x4001c4b	    0x488b9578fdff	            mov rdx, qword [rbp - 0x288]	       550	replace.c	FUNCTION_16	CALL_11
0x4001c52	    0x488bb580fdff	            mov rsi, qword [rbp - 0x280]	       550	replace.c	FUNCTION_16	CALL_11
0x4001c59	    0x8b858cfdffff	            mov eax, dword [rbp - 0x274]	       550	replace.c	FUNCTION_16	CALL_11
0x4001c5f	    0x41b900000000	                              mov r9d, 0	       550	replace.c	FUNCTION_16	CALL_11
0x4001c65	    0x41b800000000	                              mov r8d, 0	       550	replace.c	FUNCTION_16	CALL_11
0x4001c6b	            0x89c7	                            mov edi, eax	       550	replace.c	FUNCTION_16	CALL_11
0x4001c6d	      0xe800000000	                          call 0x4001c72	       550	replace.c	FUNCTION_16	CALL_11
0x4001c72	    0x89858cfdffff	            mov dword [rbp - 0x274], eax	       550	replace.c	FUNCTION_16	CALL_11
0x4001c78	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       552	replace.c	FUNCTION_16	IF_1
0x4001c7e	            0x85c0	                           test eax, eax	       552	replace.c	FUNCTION_16	IF_1
0x4001c80	            0x751b	                           jne 0x4001c9d	       552	replace.c	FUNCTION_16	IF_1
0x4001c82	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	       553	replace.c	FUNCTION_16	IF_1
0x4001c89	            0x7407	                            je 0x4001c92	       553	replace.c	FUNCTION_16	IF_1
0x4001c8b	      0xb806000000	                              mov eax, 6	       553	replace.c	FUNCTION_16	IF_1
0x4001c90	            0xeb05	                           jmp 0x4001c97	       553	replace.c	FUNCTION_16	IF_1
0x4001c92	      0xb801000000	                              mov eax, 1	       553	replace.c	FUNCTION_16	IF_1
0x4001c97	    0x8985a4fdffff	            mov dword [rbp - 0x25c], eax	       553	replace.c	FUNCTION_16	IF_1
0x4001c9d	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       555	replace.c	FUNCTION_16	IF_2
0x4001ca4	          0x4885c0	                           test rax, rax	       555	replace.c	FUNCTION_16	IF_2
0x4001ca7	            0x7424	                            je 0x4001ccd	       555	replace.c	FUNCTION_16	IF_2
0x4001ca9	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       555	replace.c	FUNCTION_16	IF_2
0x4001caf	          0x83f801	                              cmp eax, 1	       555	replace.c	FUNCTION_16	IF_2
0x4001cb2	            0x7419	                            je 0x4001ccd	       555	replace.c	FUNCTION_16	IF_2
0x4001cb4	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       556	replace.c	FUNCTION_16	IF_2	CALL_12
0x4001cbb	          0x4889c2	                            mov rdx, rax	       556	replace.c	FUNCTION_16	IF_2	CALL_12
0x4001cbe	      0xbe00000000	                              mov esi, 0	       556	replace.c	FUNCTION_16	IF_2	CALL_12
0x4001cc3	      0xbf00000000	                              mov edi, 0	       556	replace.c	FUNCTION_16	IF_2	CALL_12
0x4001cc8	      0xe800000000	                          call 0x4001ccd	       556	replace.c	FUNCTION_16	IF_2	CALL_12
0x4001ccd	    0x8b859cfdffff	            mov eax, dword [rbp - 0x264]	       559	replace.c	FUNCTION_16	IF_3
0x4001cd3	            0x85c0	                           test eax, eax	       559	replace.c	FUNCTION_16	IF_3
0x4001cd5	            0x7445	                            je 0x4001d1c	       559	replace.c	FUNCTION_16	IF_3
0x4001cd7	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       560	replace.c	FUNCTION_16	IF_3
0x4001cdd	          0x83f806	                              cmp eax, 6	       559	replace.c	FUNCTION_16	IF_3
0x4001ce0	            0x743a	                            je 0x4001d1c	       559	replace.c	FUNCTION_16	IF_3
0x4001ce2	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       561	replace.c	FUNCTION_16	IF_3
0x4001ce8	          0x83f803	                              cmp eax, 3	       560	replace.c	FUNCTION_16	IF_3
0x4001ceb	            0x742f	                            je 0x4001d1c	       560	replace.c	FUNCTION_16	IF_3
0x4001ced	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       562	replace.c	FUNCTION_16	IF_3
0x4001cf3	          0x83f804	                              cmp eax, 4	       561	replace.c	FUNCTION_16	IF_3
0x4001cf6	            0x7424	                            je 0x4001d1c	       561	replace.c	FUNCTION_16	IF_3
0x4001cf8	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       563	replace.c	FUNCTION_16	IF_3
0x4001cfe	          0x83f805	                              cmp eax, 5	       562	replace.c	FUNCTION_16	IF_3
0x4001d01	            0x7419	                            je 0x4001d1c	       562	replace.c	FUNCTION_16	IF_3
0x4001d03	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       564	replace.c	FUNCTION_16	IF_3	CALL_13
0x4001d0a	          0x4889c2	                            mov rdx, rax	       564	replace.c	FUNCTION_16	IF_3	CALL_13
0x4001d0d	      0xbe00000000	                              mov esi, 0	       564	replace.c	FUNCTION_16	IF_3	CALL_13
0x4001d12	      0xbf00000000	                              mov edi, 0	       564	replace.c	FUNCTION_16	IF_3	CALL_13
0x4001d17	      0xe800000000	                          call 0x4001d1c	       564	replace.c	FUNCTION_16	IF_3	CALL_13
0x4001d1c	    0x8b85a0fdffff	            mov eax, dword [rbp - 0x260]	       567	replace.c	FUNCTION_16	IF_4
0x4001d22	            0x85c0	                           test eax, eax	       567	replace.c	FUNCTION_16	IF_4
0x4001d24	            0x7424	                            je 0x4001d4a	       567	replace.c	FUNCTION_16	IF_4
0x4001d26	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       567	replace.c	FUNCTION_16	IF_4
0x4001d2c	          0x83f803	                              cmp eax, 3	       567	replace.c	FUNCTION_16	IF_4
0x4001d2f	            0x7419	                            je 0x4001d4a	       567	replace.c	FUNCTION_16	IF_4
0x4001d31	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       568	replace.c	FUNCTION_16	IF_4	CALL_14
0x4001d38	          0x4889c2	                            mov rdx, rax	       568	replace.c	FUNCTION_16	IF_4	CALL_14
0x4001d3b	      0xbe00000000	                              mov esi, 0	       568	replace.c	FUNCTION_16	IF_4	CALL_14
0x4001d40	      0xbf00000000	                              mov edi, 0	       568	replace.c	FUNCTION_16	IF_4	CALL_14
0x4001d45	      0xe800000000	                          call 0x4001d4a	       568	replace.c	FUNCTION_16	IF_4	CALL_14
0x4001d4a	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       571	replace.c	FUNCTION_16	SWITCH_1
0x4001d50	          0x83f806	                              cmp eax, 6	       571	replace.c	FUNCTION_16	SWITCH_1
0x4001d53	     0xf879d010000	                            ja 0x4001ef6	       571	replace.c	FUNCTION_16	SWITCH_1
0x4001d59	            0x89c0	                            mov eax, eax	       571	replace.c	FUNCTION_16	SWITCH_1
0x4001d5b	    0x488b04c50000	                  mov rax, qword [rax*8]	       571	replace.c	FUNCTION_16	SWITCH_1
0x4001d63	            0xffe0	                                 jmp rax	       571	replace.c	FUNCTION_16	SWITCH_1
0x4001d65	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	       573	replace.c	FUNCTION_16	SWITCH_1	IF_5
0x4001d6c	            0x7f19	                            jg 0x4001d87	       573	replace.c	FUNCTION_16	SWITCH_1	IF_5
0x4001d6e	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       574	replace.c	FUNCTION_16	SWITCH_1	IF_5	CALL_15
0x4001d75	          0x4889c2	                            mov rdx, rax	       574	replace.c	FUNCTION_16	SWITCH_1	IF_5	CALL_15
0x4001d78	      0xbe00000000	                              mov esi, 0	       574	replace.c	FUNCTION_16	SWITCH_1	IF_5	CALL_15
0x4001d7d	      0xbf00000000	                              mov edi, 0	       574	replace.c	FUNCTION_16	SWITCH_1	IF_5	CALL_15
0x4001d82	      0xe800000000	                          call 0x4001d87	       574	replace.c	FUNCTION_16	SWITCH_1	IF_5	CALL_15
0x4001d87	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       576	replace.c	FUNCTION_16	SWITCH_1	CALL_16
0x4001d8e	      0xbe00000000	                              mov esi, 0	       576	replace.c	FUNCTION_16	SWITCH_1	CALL_16
0x4001d93	          0x4889c7	                            mov rdi, rax	       576	replace.c	FUNCTION_16	SWITCH_1	CALL_16
0x4001d96	      0xe891e6ffff	          call sym.for_each_replace_name	       576	replace.c	FUNCTION_16	SWITCH_1	CALL_16
0x4001d9b	      0xe977010000	                           jmp 0x4001f17	       576	replace.c	FUNCTION_16	SWITCH_1	CALL_16
0x4001da0	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 2	       579	replace.c	FUNCTION_16	SWITCH_1	IF_6
0x4001da7	            0x7419	                            je 0x4001dc2	       579	replace.c	FUNCTION_16	SWITCH_1	IF_6
0x4001da9	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       580	replace.c	FUNCTION_16	SWITCH_1	IF_6	CALL_17
0x4001db0	          0x4889c2	                            mov rdx, rax	       580	replace.c	FUNCTION_16	SWITCH_1	IF_6	CALL_17
0x4001db3	      0xbe00000000	                              mov esi, 0	       580	replace.c	FUNCTION_16	SWITCH_1	IF_6	CALL_17
0x4001db8	      0xbf00000000	                              mov edi, 0	       580	replace.c	FUNCTION_16	SWITCH_1	IF_6	CALL_17
0x4001dbd	      0xe800000000	                          call 0x4001dc2	       580	replace.c	FUNCTION_16	SWITCH_1	IF_6	CALL_17
0x4001dc2	    0x8b959cfdffff	            mov edx, dword [rbp - 0x264]	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_18
0x4001dc8	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_18
0x4001dcf	        0x4883c008	                              add rax, 8	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_18
0x4001dd3	          0x488b08	                    mov rcx, qword [rax]	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_18
0x4001dd6	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_18
0x4001ddd	          0x488b00	                    mov rax, qword [rax]	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_18
0x4001de0	          0x4889ce	                            mov rsi, rcx	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_18
0x4001de3	          0x4889c7	                            mov rdi, rax	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_18
0x4001de6	      0xe80cebffff	                 call sym.replace_object	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_18
0x4001deb	      0xe927010000	                           jmp 0x4001f17	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_18
0x4001df0	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 1	       585	replace.c	FUNCTION_16	SWITCH_1	IF_7
0x4001df7	            0x7419	                            je 0x4001e12	       585	replace.c	FUNCTION_16	SWITCH_1	IF_7
0x4001df9	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       586	replace.c	FUNCTION_16	SWITCH_1	IF_7	CALL_19
0x4001e00	          0x4889c2	                            mov rdx, rax	       586	replace.c	FUNCTION_16	SWITCH_1	IF_7	CALL_19
0x4001e03	      0xbe00000000	                              mov esi, 0	       586	replace.c	FUNCTION_16	SWITCH_1	IF_7	CALL_19
0x4001e08	      0xbf00000000	                              mov edi, 0	       586	replace.c	FUNCTION_16	SWITCH_1	IF_7	CALL_19
0x4001e0d	      0xe800000000	                          call 0x4001e12	       586	replace.c	FUNCTION_16	SWITCH_1	IF_7	CALL_19
0x4001e12	    0x8b95a0fdffff	            mov edx, dword [rbp - 0x260]	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_20
0x4001e18	    0x8b8d9cfdffff	            mov ecx, dword [rbp - 0x264]	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_20
0x4001e1e	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_20
0x4001e25	          0x488b00	                    mov rax, qword [rax]	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_20
0x4001e28	            0x89ce	                            mov esi, ecx	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_20
0x4001e2a	          0x4889c7	                            mov rdi, rax	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_20
0x4001e2d	      0xe829f0ffff	               call sym.edit_and_replace	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_20
0x4001e32	      0xe9e0000000	                           jmp 0x4001f17	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_20
0x4001e37	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	       591	replace.c	FUNCTION_16	SWITCH_1	IF_8
0x4001e3e	            0x7f19	                            jg 0x4001e59	       591	replace.c	FUNCTION_16	SWITCH_1	IF_8
0x4001e40	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       592	replace.c	FUNCTION_16	SWITCH_1	IF_8	CALL_21
0x4001e47	          0x4889c2	                            mov rdx, rax	       592	replace.c	FUNCTION_16	SWITCH_1	IF_8	CALL_21
0x4001e4a	      0xbe00000000	                              mov esi, 0	       592	replace.c	FUNCTION_16	SWITCH_1	IF_8	CALL_21
0x4001e4f	      0xbf00000000	                              mov edi, 0	       592	replace.c	FUNCTION_16	SWITCH_1	IF_8	CALL_21
0x4001e54	      0xe800000000	                          call 0x4001e59	       592	replace.c	FUNCTION_16	SWITCH_1	IF_8	CALL_21
0x4001e59	    0x8b959cfdffff	            mov edx, dword [rbp - 0x264]	       594	replace.c	FUNCTION_16	SWITCH_1	CALL_22
0x4001e5f	    0x488bb580fdff	            mov rsi, qword [rbp - 0x280]	       594	replace.c	FUNCTION_16	SWITCH_1	CALL_22
0x4001e66	    0x8b858cfdffff	            mov eax, dword [rbp - 0x274]	       594	replace.c	FUNCTION_16	SWITCH_1	CALL_22
0x4001e6c	      0xb900000000	                              mov ecx, 0	       594	replace.c	FUNCTION_16	SWITCH_1	CALL_22
0x4001e71	            0x89c7	                            mov edi, eax	       594	replace.c	FUNCTION_16	SWITCH_1	CALL_22
0x4001e73	      0xe8a8f6ffff	                   call sym.create_graft	       594	replace.c	FUNCTION_16	SWITCH_1	CALL_22
0x4001e78	      0xe99a000000	                           jmp 0x4001f17	       594	replace.c	FUNCTION_16	SWITCH_1	CALL_22
0x4001e7d	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	       597	replace.c	FUNCTION_16	SWITCH_1	IF_9
0x4001e84	            0x7419	                            je 0x4001e9f	       597	replace.c	FUNCTION_16	SWITCH_1	IF_9
0x4001e86	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       598	replace.c	FUNCTION_16	SWITCH_1	IF_9	CALL_23
0x4001e8d	          0x4889c2	                            mov rdx, rax	       598	replace.c	FUNCTION_16	SWITCH_1	IF_9	CALL_23
0x4001e90	      0xbe00000000	                              mov esi, 0	       598	replace.c	FUNCTION_16	SWITCH_1	IF_9	CALL_23
0x4001e95	      0xbf00000000	                              mov edi, 0	       598	replace.c	FUNCTION_16	SWITCH_1	IF_9	CALL_23
0x4001e9a	      0xe800000000	                          call 0x4001e9f	       598	replace.c	FUNCTION_16	SWITCH_1	IF_9	CALL_23
0x4001e9f	    0x8b859cfdffff	            mov eax, dword [rbp - 0x264]	       600	replace.c	FUNCTION_16	SWITCH_1	CALL_24
0x4001ea5	            0x89c7	                            mov edi, eax	       600	replace.c	FUNCTION_16	SWITCH_1	CALL_24
0x4001ea7	      0xe852f9ffff	             call sym.convert_graft_file	       600	replace.c	FUNCTION_16	SWITCH_1	CALL_24
0x4001eac	            0x85c0	                           test eax, eax	       600	replace.c	FUNCTION_16	SWITCH_1	CALL_24
0x4001eae	           0xf95c0	                                setne al	       600	replace.c	FUNCTION_16	SWITCH_1	CALL_24
0x4001eb1	           0xfb6c0	                           movzx eax, al	       600	replace.c	FUNCTION_16	SWITCH_1	CALL_24
0x4001eb4	            0xeb61	                           jmp 0x4001f17	       600	replace.c	FUNCTION_16	SWITCH_1	CALL_24
0x4001eb6	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 1	       603	replace.c	FUNCTION_16	SWITCH_1	IF_10
0x4001ebd	            0x7e19	                           jle 0x4001ed8	       603	replace.c	FUNCTION_16	SWITCH_1	IF_10
0x4001ebf	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       604	replace.c	FUNCTION_16	SWITCH_1	IF_10	CALL_25
0x4001ec6	          0x4889c2	                            mov rdx, rax	       604	replace.c	FUNCTION_16	SWITCH_1	IF_10	CALL_25
0x4001ec9	      0xbe00000000	                              mov esi, 0	       604	replace.c	FUNCTION_16	SWITCH_1	IF_10	CALL_25
0x4001ece	      0xbf00000000	                              mov edi, 0	       604	replace.c	FUNCTION_16	SWITCH_1	IF_10	CALL_25
0x4001ed3	      0xe800000000	                          call 0x4001ed8	       604	replace.c	FUNCTION_16	SWITCH_1	IF_10	CALL_25
0x4001ed8	    0x488b95a8fdff	            mov rdx, qword [rbp - 0x258]	       606	replace.c	FUNCTION_16	SWITCH_1	CALL_26
0x4001edf	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       606	replace.c	FUNCTION_16	SWITCH_1	CALL_26
0x4001ee6	          0x488b00	                    mov rax, qword [rax]	       606	replace.c	FUNCTION_16	SWITCH_1	CALL_26
0x4001ee9	          0x4889d6	                            mov rsi, rdx	       606	replace.c	FUNCTION_16	SWITCH_1	CALL_26
0x4001eec	          0x4889c7	                            mov rdi, rax	       606	replace.c	FUNCTION_16	SWITCH_1	CALL_26
0x4001eef	      0xe846e4ffff	              call sym.list_replace_refs	       606	replace.c	FUNCTION_16	SWITCH_1	CALL_26
0x4001ef4	            0xeb21	                           jmp 0x4001f17	       606	replace.c	FUNCTION_16	SWITCH_1	CALL_26
0x4001ef6	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       609	replace.c	FUNCTION_16	SWITCH_1
0x4001efc	            0x89c1	                            mov ecx, eax	       609	replace.c	FUNCTION_16	SWITCH_1
0x4001efe	      0xba00000000	                              mov edx, 0	       609	replace.c	FUNCTION_16	SWITCH_1
0x4001f03	      0xbe61020000	                          mov esi, 0x261	       609	replace.c	FUNCTION_16	SWITCH_1
0x4001f08	      0xbf00000000	                              mov edi, 0	       609	replace.c	FUNCTION_16	SWITCH_1
0x4001f0d	      0xb800000000	                              mov eax, 0	       609	replace.c	FUNCTION_16	SWITCH_1
0x4001f12	      0xe800000000	                          call 0x4001f17	       609	replace.c	FUNCTION_16	SWITCH_1
0x4001f17	        0x488b4df8	                mov rcx, qword [rbp - 8]	       611	replace.c	FUNCTION_16
0x4001f1b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       611	replace.c	FUNCTION_16
0x4001f24	            0x7405	                            je 0x4001f2b	       611	replace.c	FUNCTION_16
0x4001f26	      0xe800000000	                          call 0x4001f2b	       611	replace.c	FUNCTION_16
0x4001f2b	              0xc9	                                   leave	       611	replace.c	FUNCTION_16
0x4001f2c	              0xc3	                                     ret	       611	replace.c	FUNCTION_16
for_each_replace_name	functions,0:SWITCH,0:FOR,1:ELSE,0:WHILE,0:IF,3:DO,0:CALL,8	95
0x400042c	              0x55	                                push rbp	        99	replace.c	FUNCTION_3
0x400042d	          0x4889e5	                            mov rbp, rsp	        99	replace.c	FUNCTION_3
0x4000430	        0x4883ec70	                           sub rsp, 0x70	        99	replace.c	FUNCTION_3
0x4000434	        0x48897d98	             mov qword [rbp - 0x68], rdi	        99	replace.c	FUNCTION_3
0x4000438	        0x48897590	             mov qword [rbp - 0x70], rsi	        99	replace.c	FUNCTION_3
0x400043c	    0x64488b042528	                mov rax, qword fs:[0x28]	        99	replace.c	FUNCTION_3
0x4000445	        0x488945f8	                mov qword [rbp - 8], rax	        99	replace.c	FUNCTION_3
0x4000449	            0x31c0	                            xor eax, eax	        99	replace.c	FUNCTION_3
0x400044b	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       101	replace.c	FUNCTION_3
0x4000453	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       101	replace.c	FUNCTION_3
0x400045b	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       101	replace.c	FUNCTION_3
0x4000463	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       103	replace.c	FUNCTION_3
0x400046a	    0x488b15000000	            mov rdx, qword [0x04000471] 	       106	replace.c	FUNCTION_3	CALL_1
0x4000471	        0x488d45c0	                   lea rax, [rbp - 0x40]	       106	replace.c	FUNCTION_3	CALL_1
0x4000475	          0x4889d6	                            mov rsi, rdx	       106	replace.c	FUNCTION_3	CALL_1
0x4000478	          0x4889c7	                            mov rdi, rax	       106	replace.c	FUNCTION_3	CALL_1
0x400047b	      0xe865fcffff	                  call sym.strbuf_addstr	       106	replace.c	FUNCTION_3	CALL_1
0x4000480	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       107	replace.c	FUNCTION_3
0x4000484	        0x488945b0	             mov qword [rbp - 0x50], rax	       107	replace.c	FUNCTION_3
0x4000488	        0x488b4598	             mov rax, qword [rbp - 0x68]	       109	replace.c	FUNCTION_3	FOR_1
0x400048c	        0x488945a8	             mov qword [rbp - 0x58], rax	       109	replace.c	FUNCTION_3	FOR_1
0x4000490	      0xe9e4000000	                           jmp 0x4000579	       109	replace.c	FUNCTION_3	FOR_1
0x4000495	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x4000499	          0x488b00	                    mov rax, qword [rax]	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x400049c	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x40004a0	          0x4889d6	                            mov rsi, rdx	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x40004a3	          0x4889c7	                            mov rdi, rax	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x40004a6	      0xe800000000	                          call 0x40004ab	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x40004ab	            0x85c0	                           test eax, eax	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x40004ad	            0x742a	                            je 0x40004d9	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x40004af	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       111	replace.c	FUNCTION_3	FOR_1	IF_1
0x40004b3	          0x488b00	                    mov rax, qword [rax]	       111	replace.c	FUNCTION_3	FOR_1	IF_1
0x40004b6	          0x4889c6	                            mov rsi, rax	       111	replace.c	FUNCTION_3	FOR_1	IF_1
0x40004b9	      0xbf00000000	                              mov edi, 0	       111	replace.c	FUNCTION_3	FOR_1	IF_1
0x40004be	      0xb800000000	                              mov eax, 0	       111	replace.c	FUNCTION_3	FOR_1	IF_1
0x40004c3	      0xe800000000	                          call 0x40004c8	       111	replace.c	FUNCTION_3	FOR_1	IF_1
0x40004c8	      0xe873fbffff	                    call sym.const_error	       111	replace.c	FUNCTION_3	FOR_1	IF_1
0x40004cd	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	       112	replace.c	FUNCTION_3	FOR_1	IF_1
0x40004d4	      0xe99b000000	                           jmp 0x4000574	       113	replace.c	FUNCTION_3	FOR_1	IF_1
0x40004d9	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       116	replace.c	FUNCTION_3	FOR_1	CALL_3
0x40004dd	        0x488d45c0	                   lea rax, [rbp - 0x40]	       116	replace.c	FUNCTION_3	FOR_1	CALL_3
0x40004e1	          0x4889d6	                            mov rsi, rdx	       116	replace.c	FUNCTION_3	FOR_1	CALL_3
0x40004e4	          0x4889c7	                            mov rdi, rax	       116	replace.c	FUNCTION_3	FOR_1	CALL_3
0x40004e7	      0xe85ffbffff	                  call sym.strbuf_setlen	       116	replace.c	FUNCTION_3	FOR_1	CALL_3
0x40004ec	        0x488d45e0	                   lea rax, [rbp - 0x20]	       117	replace.c	FUNCTION_3	FOR_1	CALL_5
0x40004f0	          0x4889c7	                            mov rdi, rax	       117	replace.c	FUNCTION_3	FOR_1	CALL_5
0x40004f3	      0xe800000000	                          call 0x40004f8	       117	replace.c	FUNCTION_3	FOR_1	CALL_5
0x40004f8	          0x4889c2	                            mov rdx, rax	       117	replace.c	FUNCTION_3	FOR_1	CALL_5
0x40004fb	        0x488d45c0	                   lea rax, [rbp - 0x40]	       117	replace.c	FUNCTION_3	FOR_1	CALL_5
0x40004ff	          0x4889d6	                            mov rsi, rdx	       117	replace.c	FUNCTION_3	FOR_1	CALL_5
0x4000502	          0x4889c7	                            mov rdi, rax	       117	replace.c	FUNCTION_3	FOR_1	CALL_5
0x4000505	      0xe8dbfbffff	                  call sym.strbuf_addstr	       117	replace.c	FUNCTION_3	FOR_1	CALL_5
0x400050a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       118	replace.c	FUNCTION_3	FOR_1
0x400050e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       118	replace.c	FUNCTION_3	FOR_1
0x4000512	          0x4801d0	                            add rax, rdx	       118	replace.c	FUNCTION_3	FOR_1
0x4000515	        0x488945b8	             mov qword [rbp - 0x48], rax	       118	replace.c	FUNCTION_3	FOR_1
0x4000519	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       120	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_6
0x400051d	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       120	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_6
0x4000521	          0x4889d6	                            mov rsi, rdx	       120	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_6
0x4000524	          0x4889c7	                            mov rdi, rax	       120	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_6
0x4000527	      0xe800000000	                          call 0x400052c	       120	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_6
0x400052c	            0x85c0	                           test eax, eax	       120	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_6
0x400052e	            0x7424	                            je 0x4000554	       120	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_6
0x4000530	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       121	replace.c	FUNCTION_3	FOR_1	IF_2
0x4000534	          0x4889c6	                            mov rsi, rax	       121	replace.c	FUNCTION_3	FOR_1	IF_2
0x4000537	      0xbf00000000	                              mov edi, 0	       121	replace.c	FUNCTION_3	FOR_1	IF_2
0x400053c	      0xb800000000	                              mov eax, 0	       121	replace.c	FUNCTION_3	FOR_1	IF_2
0x4000541	      0xe800000000	                          call 0x4000546	       121	replace.c	FUNCTION_3	FOR_1	IF_2
0x4000546	      0xe8f5faffff	                    call sym.const_error	       121	replace.c	FUNCTION_3	FOR_1	IF_2
0x400054b	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	       122	replace.c	FUNCTION_3	FOR_1	IF_2
0x4000552	            0xeb20	                           jmp 0x4000574	       123	replace.c	FUNCTION_3	FOR_1	IF_2
0x4000554	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_7
0x4000558	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_7
0x400055c	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_7
0x4000560	        0x488b4590	             mov rax, qword [rbp - 0x70]	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_7
0x4000564	          0x4889cf	                            mov rdi, rcx	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_7
0x4000567	            0xffd0	                                call rax	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_7
0x4000569	            0x85c0	                           test eax, eax	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_7
0x400056b	            0x7407	                            je 0x4000574	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_7
0x400056d	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	       126	replace.c	FUNCTION_3	FOR_1	IF_3
0x4000574	      0x488345a808	               add qword [rbp - 0x58], 8	       109	replace.c	FUNCTION_3	FOR_1
0x4000579	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       109	replace.c	FUNCTION_3	FOR_1
0x400057d	          0x488b00	                    mov rax, qword [rax]	       109	replace.c	FUNCTION_3	FOR_1
0x4000580	          0x4885c0	                           test rax, rax	       109	replace.c	FUNCTION_3	FOR_1
0x4000583	     0xf850cffffff	                           jne 0x4000495	       109	replace.c	FUNCTION_3	FOR_1
0x4000589	        0x488d45c0	                   lea rax, [rbp - 0x40]	       128	replace.c	FUNCTION_3	CALL_8
0x400058d	          0x4889c7	                            mov rdi, rax	       128	replace.c	FUNCTION_3	CALL_8
0x4000590	      0xe800000000	                          call 0x4000595	       128	replace.c	FUNCTION_3	CALL_8
0x4000595	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       129	replace.c	FUNCTION_3
0x4000598	        0x488b4df8	                mov rcx, qword [rbp - 8]	       130	replace.c	FUNCTION_3
0x400059c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       130	replace.c	FUNCTION_3
0x40005a5	            0x7405	                            je 0x40005ac	       130	replace.c	FUNCTION_3
0x40005a7	      0xe800000000	                          call 0x40005ac	       130	replace.c	FUNCTION_3
0x40005ac	              0xc9	                                   leave	       130	replace.c	FUNCTION_3
0x40005ad	              0xc3	                                     ret	       130	replace.c	FUNCTION_3
strbuf_addstr	functions,0:SWITCH,0:FOR,0:ELSE,0:WHILE,0:IF,0:DO,0:CALL,2	17
0x40000e5	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_79
0x40000e6	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_79
0x40000e9	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_79
0x40000ed	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_79
0x40000f1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_79
0x40000f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_79	CALL_2
0x40000f9	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_79	CALL_2
0x40000fc	      0xe800000000	                          call 0x4000101	       279	strbuf.h	FUNCTION_79	CALL_2
0x4000101	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_79	CALL_2
0x4000104	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_79	CALL_2
0x4000108	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_79	CALL_2
0x400010c	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_79	CALL_2
0x400010f	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_79	CALL_2
0x4000112	      0xe800000000	                          call 0x4000117	       279	strbuf.h	FUNCTION_79	CALL_2
0x4000117	              0x90	                                     nop	       280	strbuf.h	FUNCTION_79
0x4000118	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_79
0x4000119	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_79
edit_and_replace	functions,0:SWITCH,0:FOR,0:ELSE,0:WHILE,0:IF,7:DO,0:CALL,17	139
0x4000e5b	              0x55	                                push rbp	       311	replace.c	FUNCTION_10
0x4000e5c	          0x4889e5	                            mov rbp, rsp	       311	replace.c	FUNCTION_10
0x4000e5f	    0x4881eca00000	                           sub rsp, 0xa0	       311	replace.c	FUNCTION_10
0x4000e66	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	       311	replace.c	FUNCTION_10
0x4000e6d	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	       311	replace.c	FUNCTION_10
0x4000e73	    0x899560ffffff	             mov dword [rbp - 0xa0], edx	       311	replace.c	FUNCTION_10
0x4000e79	    0x64488b042528	                mov rax, qword fs:[0x28]	       311	replace.c	FUNCTION_10
0x4000e82	        0x488945f8	                mov qword [rbp - 8], rax	       311	replace.c	FUNCTION_10
0x4000e86	            0x31c0	                            xor eax, eax	       311	replace.c	FUNCTION_10
0x4000e88	    0x48c745800000	               mov qword [rbp - 0x80], 0	       315	replace.c	FUNCTION_10
0x4000e90	    0x48c745880000	               mov qword [rbp - 0x78], 0	       315	replace.c	FUNCTION_10
0x4000e98	    0x48c745900000	               mov qword [rbp - 0x70], 0	       315	replace.c	FUNCTION_10
0x4000ea0	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       317	replace.c	FUNCTION_10	IF_1	CALL_1
0x4000ea4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       317	replace.c	FUNCTION_10	IF_1	CALL_1
0x4000eab	          0x4889d6	                            mov rsi, rdx	       317	replace.c	FUNCTION_10	IF_1	CALL_1
0x4000eae	          0x4889c7	                            mov rdi, rax	       317	replace.c	FUNCTION_10	IF_1	CALL_1
0x4000eb1	      0xe800000000	                          call 0x4000eb6	       317	replace.c	FUNCTION_10	IF_1	CALL_1
0x4000eb6	            0x85c0	                           test eax, eax	       317	replace.c	FUNCTION_10	IF_1	CALL_1
0x4000eb8	            0x7923	                           jns 0x4000edd	       317	replace.c	FUNCTION_10	IF_1	CALL_1
0x4000eba	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       318	replace.c	FUNCTION_10	IF_1
0x4000ec1	          0x4889c6	                            mov rsi, rax	       318	replace.c	FUNCTION_10	IF_1
0x4000ec4	      0xbf00000000	                              mov edi, 0	       318	replace.c	FUNCTION_10	IF_1
0x4000ec9	      0xb800000000	                              mov eax, 0	       318	replace.c	FUNCTION_10	IF_1
0x4000ece	      0xe800000000	                          call 0x4000ed3	       318	replace.c	FUNCTION_10	IF_1
0x4000ed3	      0xe868f1ffff	                    call sym.const_error	       318	replace.c	FUNCTION_10	IF_1
0x4000ed8	      0xe9d5010000	                           jmp 0x40010b2	       318	replace.c	FUNCTION_10	IF_1
0x4000edd	    0x488b05000000	            mov rax, qword [0x04000ee4] 	       320	replace.c	FUNCTION_10	CALL_2
0x4000ee4	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       320	replace.c	FUNCTION_10	CALL_2
0x4000ee8	      0xba00000000	                              mov edx, 0	       320	replace.c	FUNCTION_10	CALL_2
0x4000eed	          0x4889ce	                            mov rsi, rcx	       320	replace.c	FUNCTION_10	CALL_2
0x4000ef0	          0x4889c7	                            mov rdi, rax	       320	replace.c	FUNCTION_10	CALL_2
0x4000ef3	      0xe800000000	                          call 0x4000ef8	       320	replace.c	FUNCTION_10	CALL_2
0x4000ef8	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	       320	replace.c	FUNCTION_10	CALL_2
0x4000efe	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	       321	replace.c	FUNCTION_10	IF_2
0x4000f05	            0x7928	                           jns 0x4000f2f	       321	replace.c	FUNCTION_10	IF_2
0x4000f07	        0x488d45a0	                   lea rax, [rbp - 0x60]	       322	replace.c	FUNCTION_10	IF_2
0x4000f0b	          0x4889c7	                            mov rdi, rax	       322	replace.c	FUNCTION_10	IF_2
0x4000f0e	      0xe800000000	                          call 0x4000f13	       322	replace.c	FUNCTION_10	IF_2
0x4000f13	          0x4889c6	                            mov rsi, rax	       322	replace.c	FUNCTION_10	IF_2
0x4000f16	      0xbf00000000	                              mov edi, 0	       322	replace.c	FUNCTION_10	IF_2
0x4000f1b	      0xb800000000	                              mov eax, 0	       322	replace.c	FUNCTION_10	IF_2
0x4000f20	      0xe800000000	                          call 0x4000f25	       322	replace.c	FUNCTION_10	IF_2
0x4000f25	      0xe816f1ffff	                    call sym.const_error	       322	replace.c	FUNCTION_10	IF_2
0x4000f2a	      0xe983010000	                           jmp 0x40010b2	       322	replace.c	FUNCTION_10	IF_2
0x4000f2f	    0x8b8d64ffffff	             mov ecx, dword [rbp - 0x9c]	       325	replace.c	FUNCTION_10	IF_3	CALL_4
0x4000f35	        0x488d5580	                   lea rdx, [rbp - 0x80]	       325	replace.c	FUNCTION_10	IF_3	CALL_4
0x4000f39	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       325	replace.c	FUNCTION_10	IF_3	CALL_4
0x4000f3d	        0x488d45a0	                   lea rax, [rbp - 0x60]	       325	replace.c	FUNCTION_10	IF_3	CALL_4
0x4000f41	          0x4889c7	                            mov rdi, rax	       325	replace.c	FUNCTION_10	IF_3	CALL_4
0x4000f44	      0xe8bbf6ffff	                call sym.check_ref_valid	       325	replace.c	FUNCTION_10	IF_3	CALL_4
0x4000f49	            0x85c0	                           test eax, eax	       325	replace.c	FUNCTION_10	IF_3	CALL_4
0x4000f4b	            0x7416	                            je 0x4000f63	       325	replace.c	FUNCTION_10	IF_3	CALL_4
0x4000f4d	        0x488d4580	                   lea rax, [rbp - 0x80]	       326	replace.c	FUNCTION_10	IF_3	CALL_5
0x4000f51	          0x4889c7	                            mov rdi, rax	       326	replace.c	FUNCTION_10	IF_3	CALL_5
0x4000f54	      0xe800000000	                          call 0x4000f59	       326	replace.c	FUNCTION_10	IF_3	CALL_5
0x4000f59	      0xb8ffffffff	                     mov eax, 0xffffffff	       327	replace.c	FUNCTION_10	IF_3
0x4000f5e	      0xe94f010000	                           jmp 0x40010b2	       327	replace.c	FUNCTION_10	IF_3
0x4000f63	        0x488d4580	                   lea rax, [rbp - 0x80]	       329	replace.c	FUNCTION_10	CALL_6
0x4000f67	          0x4889c7	                            mov rdi, rax	       329	replace.c	FUNCTION_10	CALL_6
0x4000f6a	      0xe800000000	                          call 0x4000f6f	       329	replace.c	FUNCTION_10	CALL_6
0x4000f6f	      0xbf00000000	                              mov edi, 0	       331	replace.c	FUNCTION_10	CALL_7
0x4000f74	      0xb800000000	                              mov eax, 0	       331	replace.c	FUNCTION_10	CALL_7
0x4000f79	      0xe800000000	                          call 0x4000f7e	       331	replace.c	FUNCTION_10	CALL_7
0x4000f7e	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       331	replace.c	FUNCTION_10	CALL_7
0x4000f85	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	       332	replace.c	FUNCTION_10	IF_4	CALL_8
0x4000f8c	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	       332	replace.c	FUNCTION_10	IF_4	CALL_8
0x4000f92	    0x8bb574ffffff	             mov esi, dword [rbp - 0x8c]	       332	replace.c	FUNCTION_10	IF_4	CALL_8
0x4000f98	        0x488d45a0	                   lea rax, [rbp - 0x60]	       332	replace.c	FUNCTION_10	IF_4	CALL_8
0x4000f9c	          0x4889c7	                            mov rdi, rax	       332	replace.c	FUNCTION_10	IF_4	CALL_8
0x4000f9f	      0xe811faffff	                  call sym.export_object	       332	replace.c	FUNCTION_10	IF_4	CALL_8
0x4000fa4	            0x85c0	                           test eax, eax	       332	replace.c	FUNCTION_10	IF_4	CALL_8
0x4000fa6	            0x7419	                            je 0x4000fc1	       332	replace.c	FUNCTION_10	IF_4	CALL_8
0x4000fa8	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       333	replace.c	FUNCTION_10	IF_4	CALL_9
0x4000faf	          0x4889c7	                            mov rdi, rax	       333	replace.c	FUNCTION_10	IF_4	CALL_9
0x4000fb2	      0xe800000000	                          call 0x4000fb7	       333	replace.c	FUNCTION_10	IF_4	CALL_9
0x4000fb7	      0xb8ffffffff	                     mov eax, 0xffffffff	       334	replace.c	FUNCTION_10	IF_4
0x4000fbc	      0xe9f1000000	                           jmp 0x40010b2	       334	replace.c	FUNCTION_10	IF_4
0x4000fc1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       336	replace.c	FUNCTION_10	IF_5	CALL_10
0x4000fc8	      0xba00000000	                              mov edx, 0	       336	replace.c	FUNCTION_10	IF_5	CALL_10
0x4000fcd	      0xbe00000000	                              mov esi, 0	       336	replace.c	FUNCTION_10	IF_5	CALL_10
0x4000fd2	          0x4889c7	                            mov rdi, rax	       336	replace.c	FUNCTION_10	IF_5	CALL_10
0x4000fd5	      0xe800000000	                          call 0x4000fda	       336	replace.c	FUNCTION_10	IF_5	CALL_10
0x4000fda	            0x85c0	                           test eax, eax	       336	replace.c	FUNCTION_10	IF_5	CALL_10
0x4000fdc	            0x7928	                           jns 0x4001006	       336	replace.c	FUNCTION_10	IF_5	CALL_10
0x4000fde	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       337	replace.c	FUNCTION_10	IF_5	CALL_11
0x4000fe5	          0x4889c7	                            mov rdi, rax	       337	replace.c	FUNCTION_10	IF_5	CALL_11
0x4000fe8	      0xe800000000	                          call 0x4000fed	       337	replace.c	FUNCTION_10	IF_5	CALL_11
0x4000fed	      0xbf00000000	                              mov edi, 0	       338	replace.c	FUNCTION_10	IF_5
0x4000ff2	      0xb800000000	                              mov eax, 0	       338	replace.c	FUNCTION_10	IF_5
0x4000ff7	      0xe800000000	                          call 0x4000ffc	       338	replace.c	FUNCTION_10	IF_5
0x4000ffc	      0xe83ff0ffff	                    call sym.const_error	       338	replace.c	FUNCTION_10	IF_5
0x4001001	      0xe9ac000000	                           jmp 0x40010b2	       338	replace.c	FUNCTION_10	IF_5
0x4001006	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	       340	replace.c	FUNCTION_10	IF_6	CALL_12
0x400100d	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	       340	replace.c	FUNCTION_10	IF_6	CALL_12
0x4001013	    0x8bb574ffffff	             mov esi, dword [rbp - 0x8c]	       340	replace.c	FUNCTION_10	IF_6	CALL_12
0x4001019	        0x488d45c0	                   lea rax, [rbp - 0x40]	       340	replace.c	FUNCTION_10	IF_6	CALL_12
0x400101d	          0x4889c7	                            mov rdi, rax	       340	replace.c	FUNCTION_10	IF_6	CALL_12
0x4001020	      0xe815fbffff	                  call sym.import_object	       340	replace.c	FUNCTION_10	IF_6	CALL_12
0x4001025	            0x85c0	                           test eax, eax	       340	replace.c	FUNCTION_10	IF_6	CALL_12
0x4001027	            0x7416	                            je 0x400103f	       340	replace.c	FUNCTION_10	IF_6	CALL_12
0x4001029	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       341	replace.c	FUNCTION_10	IF_6	CALL_13
0x4001030	          0x4889c7	                            mov rdi, rax	       341	replace.c	FUNCTION_10	IF_6	CALL_13
0x4001033	      0xe800000000	                          call 0x4001038	       341	replace.c	FUNCTION_10	IF_6	CALL_13
0x4001038	      0xb8ffffffff	                     mov eax, 0xffffffff	       342	replace.c	FUNCTION_10	IF_6
0x400103d	            0xeb73	                           jmp 0x40010b2	       342	replace.c	FUNCTION_10	IF_6
0x400103f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       344	replace.c	FUNCTION_10	CALL_14
0x4001046	          0x4889c7	                            mov rdi, rax	       344	replace.c	FUNCTION_10	CALL_14
0x4001049	      0xe800000000	                          call 0x400104e	       344	replace.c	FUNCTION_10	CALL_14
0x400104e	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       346	replace.c	FUNCTION_10	IF_7	CALL_15
0x4001052	        0x488d45a0	                   lea rax, [rbp - 0x60]	       346	replace.c	FUNCTION_10	IF_7	CALL_15
0x4001056	          0x4889d6	                            mov rsi, rdx	       346	replace.c	FUNCTION_10	IF_7	CALL_15
0x4001059	          0x4889c7	                            mov rdi, rax	       346	replace.c	FUNCTION_10	IF_7	CALL_15
0x400105c	      0xe80ff1ffff	                         call sym.oidcmp	       346	replace.c	FUNCTION_10	IF_7	CALL_15
0x4001061	            0x85c0	                           test eax, eax	       346	replace.c	FUNCTION_10	IF_7	CALL_15
0x4001063	            0x7525	                           jne 0x400108a	       346	replace.c	FUNCTION_10	IF_7	CALL_15
0x4001065	        0x488d45a0	                   lea rax, [rbp - 0x60]	       347	replace.c	FUNCTION_10	CALL_16
0x4001069	          0x4889c7	                            mov rdi, rax	       347	replace.c	FUNCTION_10	CALL_16
0x400106c	      0xe800000000	                          call 0x4001071	       347	replace.c	FUNCTION_10	CALL_16
0x4001071	          0x4889c6	                            mov rsi, rax	       347	replace.c	FUNCTION_10	CALL_16
0x4001074	      0xbf00000000	                              mov edi, 0	       347	replace.c	FUNCTION_10	CALL_16
0x4001079	      0xb800000000	                              mov eax, 0	       347	replace.c	FUNCTION_10	CALL_16
0x400107e	      0xe800000000	                          call 0x4001083	       347	replace.c	FUNCTION_10	CALL_16
0x4001083	      0xe8b8efffff	                    call sym.const_error	       347	replace.c	FUNCTION_10	CALL_16
0x4001088	            0xeb28	                           jmp 0x40010b2	       347	replace.c	FUNCTION_10	CALL_16
0x400108a	    0x8b8d64ffffff	             mov ecx, dword [rbp - 0x9c]	       349	replace.c	FUNCTION_10	CALL_17
0x4001090	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       349	replace.c	FUNCTION_10	CALL_17
0x4001094	        0x488d75a0	                   lea rsi, [rbp - 0x60]	       349	replace.c	FUNCTION_10	CALL_17
0x4001098	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       349	replace.c	FUNCTION_10	CALL_17
0x400109f	          0x4189c8	                            mov r8d, ecx	       349	replace.c	FUNCTION_10	CALL_17
0x40010a2	          0x4889d1	                            mov rcx, rdx	       349	replace.c	FUNCTION_10	CALL_17
0x40010a5	      0xba00000000	                              mov edx, 0	       349	replace.c	FUNCTION_10	CALL_17
0x40010aa	          0x4889c7	                            mov rdi, rax	       349	replace.c	FUNCTION_10	CALL_17
0x40010ad	      0xe837f6ffff	             call sym.replace_object_oid	       349	replace.c	FUNCTION_10	CALL_17
0x40010b2	        0x488b4df8	                mov rcx, qword [rbp - 8]	       350	replace.c	FUNCTION_10
0x40010b6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       350	replace.c	FUNCTION_10
0x40010bf	            0x7405	                            je 0x40010c6	       350	replace.c	FUNCTION_10
0x40010c1	      0xe800000000	                          call 0x40010c6	       350	replace.c	FUNCTION_10
0x40010c6	              0xc9	                                   leave	       350	replace.c	FUNCTION_10
0x40010c7	              0xc3	                                     ret	       350	replace.c	FUNCTION_10
export_object	functions,0:SWITCH,0:FOR,0:ELSE,1:WHILE,0:IF,3:DO,0:CALL,9	91
0x40009b5	              0x55	                                push rbp	       219	replace.c	FUNCTION_8
0x40009b6	          0x4889e5	                            mov rbp, rsp	       219	replace.c	FUNCTION_8
0x40009b9	    0x4881eca00000	                           sub rsp, 0xa0	       219	replace.c	FUNCTION_8
0x40009c0	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       219	replace.c	FUNCTION_8
0x40009c7	    0x89b574ffffff	             mov dword [rbp - 0x8c], esi	       219	replace.c	FUNCTION_8
0x40009cd	    0x899570ffffff	             mov dword [rbp - 0x90], edx	       219	replace.c	FUNCTION_8
0x40009d3	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       219	replace.c	FUNCTION_8
0x40009da	    0x64488b042528	                mov rax, qword fs:[0x28]	       219	replace.c	FUNCTION_8
0x40009e3	        0x488945f8	                mov qword [rbp - 8], rax	       219	replace.c	FUNCTION_8
0x40009e7	            0x31c0	                            xor eax, eax	       219	replace.c	FUNCTION_8
0x40009e9	        0x488d5590	                   lea rdx, [rbp - 0x70]	       220	replace.c	FUNCTION_8
0x40009ed	      0xb800000000	                              mov eax, 0	       220	replace.c	FUNCTION_8
0x40009f2	      0xb90c000000	                            mov ecx, 0xc	       220	replace.c	FUNCTION_8
0x40009f7	          0x4889d7	                            mov rdi, rdx	       220	replace.c	FUNCTION_8
0x40009fa	          0xf348ab	              rep stosq qword [rdi], rax	       220	replace.c	FUNCTION_8
0x40009fd	    0x48c745980000	               mov qword [rbp - 0x68], 0	       220	replace.c	FUNCTION_8
0x4000a05	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       220	replace.c	FUNCTION_8
0x4000a0d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       223	replace.c	FUNCTION_8	CALL_1
0x4000a14	      0xbab6010000	                          mov edx, 0x1b6	       223	replace.c	FUNCTION_8	CALL_1
0x4000a19	      0xbe41020000	                          mov esi, 0x241	       223	replace.c	FUNCTION_8	CALL_1
0x4000a1e	          0x4889c7	                            mov rdi, rax	       223	replace.c	FUNCTION_8	CALL_1
0x4000a21	      0xb800000000	                              mov eax, 0	       223	replace.c	FUNCTION_8	CALL_1
0x4000a26	      0xe800000000	                          call 0x4000a2b	       223	replace.c	FUNCTION_8	CALL_1
0x4000a2b	          0x89458c	             mov dword [rbp - 0x74], eax	       223	replace.c	FUNCTION_8	CALL_1
0x4000a2e	        0x837d8c00	               cmp dword [rbp - 0x74], 0	       224	replace.c	FUNCTION_8	IF_1
0x4000a32	            0x7923	                           jns 0x4000a57	       224	replace.c	FUNCTION_8	IF_1
0x4000a34	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       225	replace.c	FUNCTION_8	IF_1
0x4000a3b	          0x4889c6	                            mov rsi, rax	       225	replace.c	FUNCTION_8	IF_1
0x4000a3e	      0xbf00000000	                              mov edi, 0	       225	replace.c	FUNCTION_8	IF_1
0x4000a43	      0xb800000000	                              mov eax, 0	       225	replace.c	FUNCTION_8	IF_1
0x4000a48	      0xe800000000	                          call 0x4000a4d	       225	replace.c	FUNCTION_8	IF_1
0x4000a4d	      0xe8eef5ffff	                    call sym.const_error	       225	replace.c	FUNCTION_8	IF_1
0x4000a52	      0xe9cd000000	                           jmp 0x4000b24	       225	replace.c	FUNCTION_8	IF_1
0x4000a57	        0x488d4590	                   lea rax, [rbp - 0x70]	       227	replace.c	FUNCTION_8	CALL_2
0x4000a5b	        0x4883c008	                              add rax, 8	       227	replace.c	FUNCTION_8	CALL_2
0x4000a5f	      0xbe00000000	                              mov esi, 0	       227	replace.c	FUNCTION_8	CALL_2
0x4000a64	          0x4889c7	                            mov rdi, rax	       227	replace.c	FUNCTION_8	CALL_2
0x4000a67	      0xe800000000	                          call 0x4000a6c	       227	replace.c	FUNCTION_8	CALL_2
0x4000a6c	        0x488d4590	                   lea rax, [rbp - 0x70]	       228	replace.c	FUNCTION_8	CALL_3
0x4000a70	        0x4883c008	                              add rax, 8	       228	replace.c	FUNCTION_8	CALL_3
0x4000a74	      0xbe00000000	                              mov esi, 0	       228	replace.c	FUNCTION_8	CALL_3
0x4000a79	          0x4889c7	                            mov rdi, rax	       228	replace.c	FUNCTION_8	CALL_3
0x4000a7c	      0xe800000000	                          call 0x4000a81	       228	replace.c	FUNCTION_8	CALL_3
0x4000a81	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	       229	replace.c	FUNCTION_8	IF_2
0x4000a88	            0x7425	                            je 0x4000aaf	       229	replace.c	FUNCTION_8	IF_2
0x4000a8a	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	       230	replace.c	FUNCTION_8	CALL_5
0x4000a90	            0x89c7	                            mov edi, eax	       230	replace.c	FUNCTION_8	CALL_5
0x4000a92	      0xe800000000	                          call 0x4000a97	       230	replace.c	FUNCTION_8	CALL_5
0x4000a97	          0x4889c2	                            mov rdx, rax	       230	replace.c	FUNCTION_8	CALL_5
0x4000a9a	        0x488d4590	                   lea rax, [rbp - 0x70]	       230	replace.c	FUNCTION_8	CALL_5
0x4000a9e	        0x4883c008	                              add rax, 8	       230	replace.c	FUNCTION_8	CALL_5
0x4000aa2	          0x4889d6	                            mov rsi, rdx	       230	replace.c	FUNCTION_8	CALL_5
0x4000aa5	          0x4889c7	                            mov rdi, rax	       230	replace.c	FUNCTION_8	CALL_5
0x4000aa8	      0xe800000000	                          call 0x4000aad	       230	replace.c	FUNCTION_8	CALL_5
0x4000aad	            0xeb15	                           jmp 0x4000ac4	       230	replace.c	FUNCTION_8	CALL_5
0x4000aaf	        0x488d4590	                   lea rax, [rbp - 0x70]	       232	replace.c	FUNCTION_8	CALL_6
0x4000ab3	        0x4883c008	                              add rax, 8	       232	replace.c	FUNCTION_8	CALL_6
0x4000ab7	      0xbe00000000	                              mov esi, 0	       232	replace.c	FUNCTION_8	CALL_6
0x4000abc	          0x4889c7	                            mov rdi, rax	       232	replace.c	FUNCTION_8	CALL_6
0x4000abf	      0xe800000000	                          call 0x4000ac4	       232	replace.c	FUNCTION_8	CALL_6
0x4000ac4	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       233	replace.c	FUNCTION_8	CALL_8
0x4000acb	          0x4889c7	                            mov rdi, rax	       233	replace.c	FUNCTION_8	CALL_8
0x4000ace	      0xe800000000	                          call 0x4000ad3	       233	replace.c	FUNCTION_8	CALL_8
0x4000ad3	          0x4889c2	                            mov rdx, rax	       233	replace.c	FUNCTION_8	CALL_8
0x4000ad6	        0x488d4590	                   lea rax, [rbp - 0x70]	       233	replace.c	FUNCTION_8	CALL_8
0x4000ada	        0x4883c008	                              add rax, 8	       233	replace.c	FUNCTION_8	CALL_8
0x4000ade	          0x4889d6	                            mov rsi, rdx	       233	replace.c	FUNCTION_8	CALL_8
0x4000ae1	          0x4889c7	                            mov rdi, rax	       233	replace.c	FUNCTION_8	CALL_8
0x4000ae4	      0xe800000000	                          call 0x4000ae9	       233	replace.c	FUNCTION_8	CALL_8
0x4000ae9	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       234	replace.c	FUNCTION_8
0x4000aed	          0x83c808	                               or eax, 8	       234	replace.c	FUNCTION_8
0x4000af0	          0x8845d8	               mov byte [rbp - 0x28], al	       234	replace.c	FUNCTION_8
0x4000af3	          0x8b458c	             mov eax, dword [rbp - 0x74]	       235	replace.c	FUNCTION_8
0x4000af6	          0x8945c0	             mov dword [rbp - 0x40], eax	       235	replace.c	FUNCTION_8
0x4000af9	        0x488d4590	                   lea rax, [rbp - 0x70]	       237	replace.c	FUNCTION_8	IF_3	CALL_9
0x4000afd	          0x4889c7	                            mov rdi, rax	       237	replace.c	FUNCTION_8	IF_3	CALL_9
0x4000b00	      0xe800000000	                          call 0x4000b05	       237	replace.c	FUNCTION_8	IF_3	CALL_9
0x4000b05	            0x85c0	                           test eax, eax	       237	replace.c	FUNCTION_8	IF_3	CALL_9
0x4000b07	            0x7416	                            je 0x4000b1f	       237	replace.c	FUNCTION_8	IF_3	CALL_9
0x4000b09	      0xbf00000000	                              mov edi, 0	       238	replace.c	FUNCTION_8	IF_3
0x4000b0e	      0xb800000000	                              mov eax, 0	       238	replace.c	FUNCTION_8	IF_3
0x4000b13	      0xe800000000	                          call 0x4000b18	       238	replace.c	FUNCTION_8	IF_3
0x4000b18	      0xe823f5ffff	                    call sym.const_error	       238	replace.c	FUNCTION_8	IF_3
0x4000b1d	            0xeb05	                           jmp 0x4000b24	       238	replace.c	FUNCTION_8	IF_3
0x4000b1f	      0xb800000000	                              mov eax, 0	       239	replace.c	FUNCTION_8
0x4000b24	        0x488b4df8	                mov rcx, qword [rbp - 8]	       240	replace.c	FUNCTION_8
0x4000b28	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       240	replace.c	FUNCTION_8
0x4000b31	            0x7405	                            je 0x4000b38	       240	replace.c	FUNCTION_8
0x4000b33	      0xe800000000	                          call 0x4000b38	       240	replace.c	FUNCTION_8
0x4000b38	              0xc9	                                   leave	       240	replace.c	FUNCTION_8
0x4000b39	              0xc3	                                     ret	       240	replace.c	FUNCTION_8
import_object	functions,0:SWITCH,0:FOR,0:ELSE,1:WHILE,0:IF,8:DO,0:CALL,14	159
0x4000b3a	              0x55	                                push rbp	       249	replace.c	FUNCTION_9
0x4000b3b	          0x4889e5	                            mov rbp, rsp	       249	replace.c	FUNCTION_9
0x4000b3e	    0x4881ec500100	                          sub rsp, 0x150	       249	replace.c	FUNCTION_9
0x4000b45	    0x4889bdc8feff	            mov qword [rbp - 0x138], rdi	       249	replace.c	FUNCTION_9
0x4000b4c	    0x89b5c4feffff	            mov dword [rbp - 0x13c], esi	       249	replace.c	FUNCTION_9
0x4000b52	    0x8995c0feffff	            mov dword [rbp - 0x140], edx	       249	replace.c	FUNCTION_9
0x4000b58	    0x48898db8feff	            mov qword [rbp - 0x148], rcx	       249	replace.c	FUNCTION_9
0x4000b5f	    0x64488b042528	                mov rax, qword fs:[0x28]	       249	replace.c	FUNCTION_9
0x4000b68	        0x488945f8	                mov qword [rbp - 8], rax	       249	replace.c	FUNCTION_9
0x4000b6c	            0x31c0	                            xor eax, eax	       249	replace.c	FUNCTION_9
0x4000b6e	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	       252	replace.c	FUNCTION_9	CALL_1
0x4000b75	      0xbe00000000	                              mov esi, 0	       252	replace.c	FUNCTION_9	CALL_1
0x4000b7a	          0x4889c7	                            mov rdi, rax	       252	replace.c	FUNCTION_9	CALL_1
0x4000b7d	      0xb800000000	                              mov eax, 0	       252	replace.c	FUNCTION_9	CALL_1
0x4000b82	      0xe800000000	                          call 0x4000b87	       252	replace.c	FUNCTION_9	CALL_1
0x4000b87	    0x8985d8feffff	            mov dword [rbp - 0x128], eax	       252	replace.c	FUNCTION_9	CALL_1
0x4000b8d	    0x83bdd8feffff	              cmp dword [rbp - 0x128], 0	       253	replace.c	FUNCTION_9	IF_1
0x4000b94	            0x7923	                           jns 0x4000bb9	       253	replace.c	FUNCTION_9	IF_1
0x4000b96	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	       254	replace.c	FUNCTION_9	IF_1
0x4000b9d	          0x4889c6	                            mov rsi, rax	       254	replace.c	FUNCTION_9	IF_1
0x4000ba0	      0xbf00000000	                              mov edi, 0	       254	replace.c	FUNCTION_9	IF_1
0x4000ba5	      0xb800000000	                              mov eax, 0	       254	replace.c	FUNCTION_9	IF_1
0x4000baa	      0xe800000000	                          call 0x4000baf	       254	replace.c	FUNCTION_9	IF_1
0x4000baf	      0xe88cf4ffff	                    call sym.const_error	       254	replace.c	FUNCTION_9	IF_1
0x4000bb4	      0xe98c020000	                           jmp 0x4000e45	       254	replace.c	FUNCTION_9	IF_1
0x4000bb9	    0x83bdc0feffff	              cmp dword [rbp - 0x140], 0	       256	replace.c	FUNCTION_9	IF_2
0x4000bc0	     0xf85d8010000	                           jne 0x4000d9e	       256	replace.c	FUNCTION_9	IF_2
0x4000bc6	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 2	       256	replace.c	FUNCTION_9	IF_2
0x4000bcd	     0xf85cb010000	                           jne 0x4000d9e	       256	replace.c	FUNCTION_9	IF_2
0x4000bd3	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	       257	replace.c	FUNCTION_9	IF_2
0x4000bde	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       257	replace.c	FUNCTION_9	IF_2
0x4000be9	    0x488d9500ffff	                  lea rdx, [rbp - 0x100]	       258	replace.c	FUNCTION_9	IF_2
0x4000bf0	      0xb800000000	                              mov eax, 0	       258	replace.c	FUNCTION_9	IF_2
0x4000bf5	      0xb90c000000	                            mov ecx, 0xc	       258	replace.c	FUNCTION_9	IF_2
0x4000bfa	          0x4889d7	                            mov rdi, rdx	       258	replace.c	FUNCTION_9	IF_2
0x4000bfd	          0xf348ab	              rep stosq qword [rdi], rax	       258	replace.c	FUNCTION_9	IF_2
0x4000c00	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	       258	replace.c	FUNCTION_9	IF_2
0x4000c0b	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	       258	replace.c	FUNCTION_9	IF_2
0x4000c16	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	       259	replace.c	FUNCTION_9	IF_2
0x4000c21	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	       259	replace.c	FUNCTION_9	IF_2
0x4000c2c	    0x48c785f0feff	              mov qword [rbp - 0x110], 0	       259	replace.c	FUNCTION_9	IF_2
0x4000c37	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       261	replace.c	FUNCTION_9	IF_2
0x4000c3e	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       261	replace.c	FUNCTION_9	IF_2
0x4000c45	     0xfb68548ffff	            movzx eax, byte [rbp - 0xb8]	       262	replace.c	FUNCTION_9	IF_2
0x4000c4c	          0x83c808	                               or eax, 8	       262	replace.c	FUNCTION_9	IF_2
0x4000c4f	    0x888548ffffff	               mov byte [rbp - 0xb8], al	       262	replace.c	FUNCTION_9	IF_2
0x4000c55	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       263	replace.c	FUNCTION_9	IF_2
0x4000c5b	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       263	replace.c	FUNCTION_9	IF_2
0x4000c61	    0xc78530ffffff	     mov dword [rbp - 0xd0], 0xffffffff 	       264	replace.c	FUNCTION_9	IF_2
0x4000c6b	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	       266	replace.c	FUNCTION_9	IF_2	IF_3	CALL_2
0x4000c72	          0x4889c7	                            mov rdi, rax	       266	replace.c	FUNCTION_9	IF_2	IF_3	CALL_2
0x4000c75	      0xe800000000	                          call 0x4000c7a	       266	replace.c	FUNCTION_9	IF_2	IF_3	CALL_2
0x4000c7a	            0x85c0	                           test eax, eax	       266	replace.c	FUNCTION_9	IF_2	IF_3	CALL_2
0x4000c7c	            0x7426	                            je 0x4000ca4	       266	replace.c	FUNCTION_9	IF_2	IF_3	CALL_2
0x4000c7e	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       267	replace.c	FUNCTION_9	IF_2	IF_3	CALL_3
0x4000c84	            0x89c7	                            mov edi, eax	       267	replace.c	FUNCTION_9	IF_2	IF_3	CALL_3
0x4000c86	      0xe800000000	                          call 0x4000c8b	       267	replace.c	FUNCTION_9	IF_2	IF_3	CALL_3
0x4000c8b	      0xbf00000000	                              mov edi, 0	       268	replace.c	FUNCTION_9	IF_2	IF_3
0x4000c90	      0xb800000000	                              mov eax, 0	       268	replace.c	FUNCTION_9	IF_2	IF_3
0x4000c95	      0xe800000000	                          call 0x4000c9a	       268	replace.c	FUNCTION_9	IF_2	IF_3
0x4000c9a	      0xe8a1f3ffff	                    call sym.const_error	       268	replace.c	FUNCTION_9	IF_2	IF_3
0x4000c9f	      0xe9a1010000	                           jmp 0x4000e45	       268	replace.c	FUNCTION_9	IF_2	IF_3
0x4000ca4	    0x8b8d30ffffff	             mov ecx, dword [rbp - 0xd0]	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_4
0x4000caa	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_4
0x4000cb1	      0xba29000000	                           mov edx, 0x29	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_4
0x4000cb6	            0x89ce	                            mov esi, ecx	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_4
0x4000cb8	          0x4889c7	                            mov rdi, rax	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_4
0x4000cbb	      0xe800000000	                          call 0x4000cc0	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_4
0x4000cc0	          0x4885c0	                           test rax, rax	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_4
0x4000cc3	            0x7938	                           jns 0x4000cfd	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_4
0x4000cc5	      0xbf00000000	                              mov edi, 0	       272	replace.c	FUNCTION_9	IF_2	IF_4
0x4000cca	      0xb800000000	                              mov eax, 0	       272	replace.c	FUNCTION_9	IF_2	IF_4
0x4000ccf	      0xe800000000	                          call 0x4000cd4	       272	replace.c	FUNCTION_9	IF_2	IF_4
0x4000cd4	      0xe867f3ffff	                    call sym.const_error	       272	replace.c	FUNCTION_9	IF_2	IF_4
0x4000cd9	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       273	replace.c	FUNCTION_9	IF_2	IF_4	CALL_5
0x4000cdf	            0x89c7	                            mov edi, eax	       273	replace.c	FUNCTION_9	IF_2	IF_4	CALL_5
0x4000ce1	      0xe800000000	                          call 0x4000ce6	       273	replace.c	FUNCTION_9	IF_2	IF_4	CALL_5
0x4000ce6	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	       274	replace.c	FUNCTION_9	IF_2	IF_4	CALL_6
0x4000cec	            0x89c7	                            mov edi, eax	       274	replace.c	FUNCTION_9	IF_2	IF_4	CALL_6
0x4000cee	      0xe800000000	                          call 0x4000cf3	       274	replace.c	FUNCTION_9	IF_2	IF_4	CALL_6
0x4000cf3	      0xb8ffffffff	                     mov eax, 0xffffffff	       275	replace.c	FUNCTION_9	IF_2	IF_4
0x4000cf8	      0xe948010000	                           jmp 0x4000e45	       275	replace.c	FUNCTION_9	IF_2	IF_4
0x4000cfd	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	       277	replace.c	FUNCTION_9	IF_2	CALL_7
0x4000d03	            0x89c7	                            mov edi, eax	       277	replace.c	FUNCTION_9	IF_2	CALL_7
0x4000d05	      0xe800000000	                          call 0x4000d0a	       277	replace.c	FUNCTION_9	IF_2	CALL_7
0x4000d0a	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	       279	replace.c	FUNCTION_9	IF_2	IF_5	CALL_8
0x4000d11	          0x4889c7	                            mov rdi, rax	       279	replace.c	FUNCTION_9	IF_2	IF_5	CALL_8
0x4000d14	      0xe800000000	                          call 0x4000d19	       279	replace.c	FUNCTION_9	IF_2	IF_5	CALL_8
0x4000d19	            0x85c0	                           test eax, eax	       279	replace.c	FUNCTION_9	IF_2	IF_5	CALL_8
0x4000d1b	            0x7428	                            je 0x4000d45	       279	replace.c	FUNCTION_9	IF_2	IF_5	CALL_8
0x4000d1d	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       280	replace.c	FUNCTION_9	IF_2	IF_5	CALL_9
0x4000d24	          0x4889c7	                            mov rdi, rax	       280	replace.c	FUNCTION_9	IF_2	IF_5	CALL_9
0x4000d27	      0xe800000000	                          call 0x4000d2c	       280	replace.c	FUNCTION_9	IF_2	IF_5	CALL_9
0x4000d2c	      0xbf00000000	                              mov edi, 0	       281	replace.c	FUNCTION_9	IF_2	IF_5
0x4000d31	      0xb800000000	                              mov eax, 0	       281	replace.c	FUNCTION_9	IF_2	IF_5
0x4000d36	      0xe800000000	                          call 0x4000d3b	       281	replace.c	FUNCTION_9	IF_2	IF_5
0x4000d3b	      0xe800f3ffff	                    call sym.const_error	       281	replace.c	FUNCTION_9	IF_2	IF_5
0x4000d40	      0xe900010000	                           jmp 0x4000e45	       281	replace.c	FUNCTION_9	IF_2	IF_5
0x4000d45	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	       283	replace.c	FUNCTION_9	IF_2	IF_6	CALL_10
0x4000d4c	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	       283	replace.c	FUNCTION_9	IF_2	IF_6	CALL_10
0x4000d53	          0x4889d6	                            mov rsi, rdx	       283	replace.c	FUNCTION_9	IF_2	IF_6	CALL_10
0x4000d56	          0x4889c7	                            mov rdi, rax	       283	replace.c	FUNCTION_9	IF_2	IF_6	CALL_10
0x4000d59	      0xe800000000	                          call 0x4000d5e	       283	replace.c	FUNCTION_9	IF_2	IF_6	CALL_10
0x4000d5e	            0x85c0	                           test eax, eax	       283	replace.c	FUNCTION_9	IF_2	IF_6	CALL_10
0x4000d60	            0x7928	                           jns 0x4000d8a	       283	replace.c	FUNCTION_9	IF_2	IF_6	CALL_10
0x4000d62	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       284	replace.c	FUNCTION_9	IF_2	IF_6	CALL_11
0x4000d69	          0x4889c7	                            mov rdi, rax	       284	replace.c	FUNCTION_9	IF_2	IF_6	CALL_11
0x4000d6c	      0xe800000000	                          call 0x4000d71	       284	replace.c	FUNCTION_9	IF_2	IF_6	CALL_11
0x4000d71	      0xbf00000000	                              mov edi, 0	       285	replace.c	FUNCTION_9	IF_2	IF_6
0x4000d76	      0xb800000000	                              mov eax, 0	       285	replace.c	FUNCTION_9	IF_2	IF_6
0x4000d7b	      0xe800000000	                          call 0x4000d80	       285	replace.c	FUNCTION_9	IF_2	IF_6
0x4000d80	      0xe8bbf2ffff	                    call sym.const_error	       285	replace.c	FUNCTION_9	IF_2	IF_6
0x4000d85	      0xe9bb000000	                           jmp 0x4000e45	       285	replace.c	FUNCTION_9	IF_2	IF_6
0x4000d8a	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       288	replace.c	FUNCTION_9	IF_2	CALL_12
0x4000d91	          0x4889c7	                            mov rdi, rax	       288	replace.c	FUNCTION_9	IF_2	CALL_12
0x4000d94	      0xe800000000	                          call 0x4000d99	       288	replace.c	FUNCTION_9	IF_2	CALL_12
0x4000d99	      0xe9a2000000	                           jmp 0x4000e40	       256	replace.c	FUNCTION_9	IF_2
0x4000d9e	    0xc785dcfeffff	              mov dword [rbp - 0x124], 3	       291	replace.c	FUNCTION_9	ELSE_1
0x4000da8	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       293	replace.c	FUNCTION_9	ELSE_1	IF_7
0x4000daf	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       293	replace.c	FUNCTION_9	ELSE_1	IF_7
0x4000db5	          0x4889d6	                            mov rsi, rdx	       293	replace.c	FUNCTION_9	ELSE_1	IF_7
0x4000db8	            0x89c7	                            mov edi, eax	       293	replace.c	FUNCTION_9	ELSE_1	IF_7
0x4000dba	      0xe800000000	                          call 0x4000dbf	       293	replace.c	FUNCTION_9	ELSE_1	IF_7
0x4000dbf	            0x85c0	                           test eax, eax	       293	replace.c	FUNCTION_9	ELSE_1	IF_7
0x4000dc1	            0x7932	                           jns 0x4000df5	       293	replace.c	FUNCTION_9	ELSE_1	IF_7
0x4000dc3	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	       294	replace.c	FUNCTION_9	ELSE_1	IF_7
0x4000dca	          0x4889c6	                            mov rsi, rax	       294	replace.c	FUNCTION_9	ELSE_1	IF_7
0x4000dcd	      0xbf00000000	                              mov edi, 0	       294	replace.c	FUNCTION_9	ELSE_1	IF_7
0x4000dd2	      0xb800000000	                              mov eax, 0	       294	replace.c	FUNCTION_9	ELSE_1	IF_7
0x4000dd7	      0xe800000000	                          call 0x4000ddc	       294	replace.c	FUNCTION_9	ELSE_1	IF_7
0x4000ddc	      0xe85ff2ffff	                    call sym.const_error	       294	replace.c	FUNCTION_9	ELSE_1	IF_7
0x4000de1	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       295	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_13
0x4000de7	            0x89c7	                            mov edi, eax	       295	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_13
0x4000de9	      0xe800000000	                          call 0x4000dee	       295	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_13
0x4000dee	      0xb8ffffffff	                     mov eax, 0xffffffff	       296	replace.c	FUNCTION_9	ELSE_1	IF_7
0x4000df3	            0xeb50	                           jmp 0x4000e45	       296	replace.c	FUNCTION_9	ELSE_1	IF_7
0x4000df5	    0x8bbddcfeffff	            mov edi, dword [rbp - 0x124]	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_14
0x4000dfb	    0x8b8dc4feffff	            mov ecx, dword [rbp - 0x13c]	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_14
0x4000e01	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_14
0x4000e08	    0x8bb5d8feffff	            mov esi, dword [rbp - 0x128]	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_14
0x4000e0e	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_14
0x4000e15	          0x4189f9	                            mov r9d, edi	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_14
0x4000e18	    0x41b800000000	                              mov r8d, 0	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_14
0x4000e1e	          0x4889c7	                            mov rdi, rax	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_14
0x4000e21	      0xe800000000	                          call 0x4000e26	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_14
0x4000e26	            0x85c0	                           test eax, eax	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_14
0x4000e28	            0x7916	                           jns 0x4000e40	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_14
0x4000e2a	      0xbf00000000	                              mov edi, 0	       299	replace.c	FUNCTION_9	ELSE_1	IF_8
0x4000e2f	      0xb800000000	                              mov eax, 0	       299	replace.c	FUNCTION_9	ELSE_1	IF_8
0x4000e34	      0xe800000000	                          call 0x4000e39	       299	replace.c	FUNCTION_9	ELSE_1	IF_8
0x4000e39	      0xe802f2ffff	                    call sym.const_error	       299	replace.c	FUNCTION_9	ELSE_1	IF_8
0x4000e3e	            0xeb05	                           jmp 0x4000e45	       299	replace.c	FUNCTION_9	ELSE_1	IF_8
0x4000e40	      0xb800000000	                              mov eax, 0	       307	replace.c	FUNCTION_9
0x4000e45	        0x488b4df8	                mov rcx, qword [rbp - 8]	       308	replace.c	FUNCTION_9
0x4000e49	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       308	replace.c	FUNCTION_9
0x4000e52	            0x7405	                            je 0x4000e59	       308	replace.c	FUNCTION_9
0x4000e54	      0xe800000000	                          call 0x4000e59	       308	replace.c	FUNCTION_9
0x4000e59	              0xc9	                                   leave	       308	replace.c	FUNCTION_9
0x4000e5a	              0xc3	                                     ret	       308	replace.c	FUNCTION_9
