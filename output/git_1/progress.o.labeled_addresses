clear_progress_signal	functions,0:WHILE,0:CALL,2:DO,0:IF,0:SWITCH,0:ELSE,0:FOR,0	26
0x400022c	              0x55	                                push rbp	        68	progress.c	FUNCTION_3
0x400022d	          0x4889e5	                            mov rbp, rsp	        68	progress.c	FUNCTION_3
0x4000230	        0x4883ec30	                           sub rsp, 0x30	        68	progress.c	FUNCTION_3
0x4000234	    0x64488b042528	                mov rax, qword fs:[0x28]	        68	progress.c	FUNCTION_3
0x400023d	        0x488945f8	                mov qword [rbp - 8], rax	        68	progress.c	FUNCTION_3
0x4000241	            0x31c0	                            xor eax, eax	        68	progress.c	FUNCTION_3
0x4000243	    0x48c745d00000	               mov qword [rbp - 0x30], 0	        69	progress.c	FUNCTION_3
0x400024b	    0x48c745d80000	               mov qword [rbp - 0x28], 0	        69	progress.c	FUNCTION_3
0x4000253	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        69	progress.c	FUNCTION_3
0x400025b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        69	progress.c	FUNCTION_3
0x4000263	        0x488d45d0	                   lea rax, [rbp - 0x30]	        70	progress.c	FUNCTION_3	CALL_1
0x4000267	      0xba00000000	                              mov edx, 0	        70	progress.c	FUNCTION_3	CALL_1
0x400026c	          0x4889c6	                            mov rsi, rax	        70	progress.c	FUNCTION_3	CALL_1
0x400026f	      0xbf00000000	                              mov edi, 0	        70	progress.c	FUNCTION_3	CALL_1
0x4000274	      0xe800000000	                          call 0x4000279	        70	progress.c	FUNCTION_3	CALL_1
0x4000279	      0xbe01000000	                              mov esi, 1	        71	progress.c	FUNCTION_3	CALL_2
0x400027e	      0xbf0e000000	                            mov edi, 0xe	        71	progress.c	FUNCTION_3	CALL_2
0x4000283	      0xe800000000	                          call 0x4000288	        71	progress.c	FUNCTION_3	CALL_2
0x4000288	    0xc70500000000	               mov dword [0x04000292], 0	        72	progress.c	FUNCTION_3
0x4000292	              0x90	                                     nop	        73	progress.c	FUNCTION_3
0x4000293	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	progress.c	FUNCTION_3
0x4000297	    0x644833042528	                xor rax, qword fs:[0x28]	        73	progress.c	FUNCTION_3
0x40002a0	            0x7405	                            je 0x40002a7	        73	progress.c	FUNCTION_3
0x40002a2	      0xe800000000	                          call 0x40002a7	        73	progress.c	FUNCTION_3
0x40002a7	              0xc9	                                   leave	        73	progress.c	FUNCTION_3
0x40002a8	              0xc3	                                     ret	        73	progress.c	FUNCTION_3
is_foreground_fd	functions,0:WHILE,0:CALL,2:DO,0:IF,0:SWITCH,0:ELSE,0:FOR,0	19
0x40002a9	              0x55	                                push rbp	        76	progress.c	FUNCTION_4
0x40002aa	          0x4889e5	                            mov rbp, rsp	        76	progress.c	FUNCTION_4
0x40002ad	        0x4883ec20	                           sub rsp, 0x20	        76	progress.c	FUNCTION_4
0x40002b1	          0x897dec	             mov dword [rbp - 0x14], edi	        76	progress.c	FUNCTION_4
0x40002b4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        77	progress.c	FUNCTION_4	CALL_1
0x40002b7	            0x89c7	                            mov edi, eax	        77	progress.c	FUNCTION_4	CALL_1
0x40002b9	      0xe800000000	                          call 0x40002be	        77	progress.c	FUNCTION_4	CALL_1
0x40002be	          0x8945fc	                mov dword [rbp - 4], eax	        77	progress.c	FUNCTION_4	CALL_1
0x40002c1	        0x837dfc00	                  cmp dword [rbp - 4], 0	        78	progress.c	FUNCTION_4	CALL_2
0x40002c5	            0x780f	                            js 0x40002d6	        78	progress.c	FUNCTION_4	CALL_2
0x40002c7	      0xbf00000000	                              mov edi, 0	        78	progress.c	FUNCTION_4	CALL_2
0x40002cc	      0xe800000000	                          call 0x40002d1	        78	progress.c	FUNCTION_4	CALL_2
0x40002d1	          0x3b45fc	                cmp eax, dword [rbp - 4]	        78	progress.c	FUNCTION_4	CALL_2
0x40002d4	            0x7507	                           jne 0x40002dd	        78	progress.c	FUNCTION_4	CALL_2
0x40002d6	      0xb801000000	                              mov eax, 1	        78	progress.c	FUNCTION_4	CALL_2
0x40002db	            0xeb05	                           jmp 0x40002e2	        78	progress.c	FUNCTION_4	CALL_2
0x40002dd	      0xb800000000	                              mov eax, 0	        78	progress.c	FUNCTION_4	CALL_2
0x40002e2	              0xc9	                                   leave	        79	progress.c	FUNCTION_4
0x40002e3	              0xc3	                                     ret	        79	progress.c	FUNCTION_4
start_delayed_progress	functions,0:WHILE,0:CALL,1:DO,0:IF,0:SWITCH,0:ELSE,0:FOR,0	13
0x400089b	              0x55	                                push rbp	       218	progress.c	FUNCTION_10
0x400089c	          0x4889e5	                            mov rbp, rsp	       218	progress.c	FUNCTION_10
0x400089f	        0x4883ec10	                           sub rsp, 0x10	       218	progress.c	FUNCTION_10
0x40008a3	        0x48897df8	                mov qword [rbp - 8], rdi	       218	progress.c	FUNCTION_10
0x40008a7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       218	progress.c	FUNCTION_10
0x40008ab	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       219	progress.c	FUNCTION_10	CALL_1
0x40008af	        0x488b45f8	                mov rax, qword [rbp - 8]	       219	progress.c	FUNCTION_10	CALL_1
0x40008b3	      0xba02000000	                              mov edx, 2	       219	progress.c	FUNCTION_10	CALL_1
0x40008b8	          0x4889ce	                            mov rsi, rcx	       219	progress.c	FUNCTION_10	CALL_1
0x40008bb	          0x4889c7	                            mov rdi, rax	       219	progress.c	FUNCTION_10	CALL_1
0x40008be	      0xe81effffff	           call sym.start_progress_delay	       219	progress.c	FUNCTION_10	CALL_1
0x40008c3	              0xc9	                                   leave	       220	progress.c	FUNCTION_10
0x40008c4	              0xc3	                                     ret	       220	progress.c	FUNCTION_10
display	functions,0:WHILE,0:CALL,8:DO,0:IF,6:SWITCH,0:ELSE,1:FOR,0	135
0x40002e4	              0x55	                                push rbp	        82	progress.c	FUNCTION_5
0x40002e5	          0x4889e5	                            mov rbp, rsp	        82	progress.c	FUNCTION_5
0x40002e8	        0x4883ec40	                           sub rsp, 0x40	        82	progress.c	FUNCTION_5
0x40002ec	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        82	progress.c	FUNCTION_5
0x40002f0	        0x488975d0	             mov qword [rbp - 0x30], rsi	        82	progress.c	FUNCTION_5
0x40002f4	        0x488955c8	             mov qword [rbp - 0x38], rdx	        82	progress.c	FUNCTION_5
0x40002f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	progress.c	FUNCTION_5	IF_1
0x40002fc	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        85	progress.c	FUNCTION_5	IF_1
0x40002ff	            0x85c0	                           test eax, eax	        85	progress.c	FUNCTION_5	IF_1
0x4000301	            0x7430	                            je 0x4000333	        85	progress.c	FUNCTION_5	IF_1
0x4000303	    0x8b0500000000	            mov eax, dword [0x04000309] 	        85	progress.c	FUNCTION_5	IF_1
0x4000309	            0x85c0	                           test eax, eax	        85	progress.c	FUNCTION_5	IF_1
0x400030b	            0x741c	                            je 0x4000329	        85	progress.c	FUNCTION_5	IF_1
0x400030d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	progress.c	FUNCTION_5	IF_1
0x4000311	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        85	progress.c	FUNCTION_5	IF_1
0x4000314	          0x8d50ff	                      lea edx, [rax - 1]	        85	progress.c	FUNCTION_5	IF_1
0x4000317	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	progress.c	FUNCTION_5	IF_1
0x400031b	          0x89501c	             mov dword [rax + 0x1c], edx	        85	progress.c	FUNCTION_5	IF_1
0x400031e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	progress.c	FUNCTION_5	IF_1
0x4000322	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        85	progress.c	FUNCTION_5	IF_1
0x4000325	            0x85c0	                           test eax, eax	        85	progress.c	FUNCTION_5	IF_1
0x4000327	            0x740a	                            je 0x4000333	        85	progress.c	FUNCTION_5	IF_1
0x4000329	      0xb800000000	                              mov eax, 0	        86	progress.c	FUNCTION_5	IF_1
0x400032e	      0xe9b6010000	                           jmp 0x40004e9	        86	progress.c	FUNCTION_5	IF_1
0x4000333	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        88	progress.c	FUNCTION_5
0x4000337	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        88	progress.c	FUNCTION_5
0x400033b	        0x48895008	                mov qword [rax + 8], rdx	        88	progress.c	FUNCTION_5
0x400033f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        89	progress.c	FUNCTION_5
0x4000343	        0x488b4020	            mov rax, qword [rax + 0x20] 	        89	progress.c	FUNCTION_5
0x4000347	          0x4885c0	                           test rax, rax	        89	progress.c	FUNCTION_5
0x400034a	            0x740e	                            je 0x400035a	        89	progress.c	FUNCTION_5
0x400034c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        89	progress.c	FUNCTION_5
0x4000350	        0x488b4020	            mov rax, qword [rax + 0x20] 	        89	progress.c	FUNCTION_5
0x4000354	        0x488b4078	            mov rax, qword [rax + 0x78] 	        89	progress.c	FUNCTION_5
0x4000358	            0xeb05	                           jmp 0x400035f	        89	progress.c	FUNCTION_5
0x400035a	      0xb800000000	                              mov eax, 0	        89	progress.c	FUNCTION_5
0x400035f	        0x488945f0	             mov qword [rbp - 0x10], rax	        89	progress.c	FUNCTION_5
0x4000363	      0x48837dc800	               cmp qword [rbp - 0x38], 0	        90	progress.c	FUNCTION_5
0x4000368	            0x7406	                            je 0x4000370	        90	progress.c	FUNCTION_5
0x400036a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        90	progress.c	FUNCTION_5
0x400036e	            0xeb05	                           jmp 0x4000375	        90	progress.c	FUNCTION_5
0x4000370	      0xb800000000	                              mov eax, 0	        90	progress.c	FUNCTION_5
0x4000375	        0x488945f8	                mov qword [rbp - 8], rax	        90	progress.c	FUNCTION_5
0x4000379	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        91	progress.c	FUNCTION_5	IF_2
0x400037d	        0x488b4010	            mov rax, qword [rax + 0x10] 	        91	progress.c	FUNCTION_5	IF_2
0x4000381	          0x4885c0	                           test rax, rax	        91	progress.c	FUNCTION_5	IF_2
0x4000384	     0xf84dd000000	                            je 0x4000467	        91	progress.c	FUNCTION_5	IF_2
0x400038a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        92	progress.c	FUNCTION_5	IF_2
0x400038e	          0x4889d0	                            mov rax, rdx	        92	progress.c	FUNCTION_5	IF_2
0x4000391	        0x48c1e002	                              shl rax, 2	        92	progress.c	FUNCTION_5	IF_2
0x4000395	          0x4801d0	                            add rax, rdx	        92	progress.c	FUNCTION_5	IF_2
0x4000398	    0x488d14850000	                        lea rdx, [rax*4]	        92	progress.c	FUNCTION_5	IF_2
0x40003a0	          0x4801d0	                            add rax, rdx	        92	progress.c	FUNCTION_5	IF_2
0x40003a3	        0x48c1e002	                              shl rax, 2	        92	progress.c	FUNCTION_5	IF_2
0x40003a7	          0x4889c1	                            mov rcx, rax	        92	progress.c	FUNCTION_5	IF_2
0x40003aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        92	progress.c	FUNCTION_5	IF_2
0x40003ae	        0x488b7010	            mov rsi, qword [rax + 0x10] 	        92	progress.c	FUNCTION_5	IF_2
0x40003b2	          0x4889c8	                            mov rax, rcx	        92	progress.c	FUNCTION_5	IF_2
0x40003b5	      0xba00000000	                              mov edx, 0	        92	progress.c	FUNCTION_5	IF_2
0x40003ba	          0x48f7f6	                                 div rsi	        92	progress.c	FUNCTION_5	IF_2
0x40003bd	          0x8945ec	             mov dword [rbp - 0x14], eax	        92	progress.c	FUNCTION_5	IF_2
0x40003c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        93	progress.c	FUNCTION_5	IF_2	IF_3
0x40003c4	          0x8b4018	            mov eax, dword [rax + 0x18] 	        93	progress.c	FUNCTION_5	IF_2	IF_3
0x40003c7	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	        93	progress.c	FUNCTION_5	IF_2	IF_3
0x40003ca	            0x750e	                           jne 0x40003da	        93	progress.c	FUNCTION_5	IF_2	IF_3
0x40003cc	    0x8b0500000000	            mov eax, dword [0x040003d2] 	        93	progress.c	FUNCTION_5	IF_2	IF_3
0x40003d2	            0x85c0	                           test eax, eax	        93	progress.c	FUNCTION_5	IF_2	IF_3
0x40003d4	     0xf840a010000	                            je 0x40004e4	        93	progress.c	FUNCTION_5	IF_2	IF_3
0x40003da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        94	progress.c	FUNCTION_5	IF_2	IF_3
0x40003de	          0x8b55ec	             mov edx, dword [rbp - 0x14]	        94	progress.c	FUNCTION_5	IF_2	IF_3
0x40003e1	          0x895018	             mov dword [rax + 0x18], edx	        94	progress.c	FUNCTION_5	IF_2	IF_3
0x40003e4	    0x488b05000000	            mov rax, qword [0x040003eb] 	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x40003eb	          0x4889c7	                            mov rdi, rax	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x40003ee	      0xe800000000	                          call 0x40003f3	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x40003f3	            0x89c7	                            mov edi, eax	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x40003f5	      0xe8affeffff	               call sym.is_foreground_fd	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x40003fa	            0x85c0	                           test eax, eax	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x40003fc	            0x7507	                           jne 0x4000405	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x40003fe	      0x48837dc800	               cmp qword [rbp - 0x38], 0	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x4000403	            0x744e	                            je 0x4000453	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x4000405	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        98	progress.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000409	        0x488b7810	            mov rdi, qword [rax + 0x10] 	        98	progress.c	FUNCTION_5	IF_2	IF_3	IF_4
0x400040d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x4000411	          0x488b10	                    mov rdx, qword [rax]	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x4000414	    0x488b05000000	            mov rax, qword [0x0400041b] 	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x400041b	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x400041f	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x4000422	          0xff75f8	                    push qword [rbp - 8]	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x4000425	          0xff75f0	                 push qword [rbp - 0x10]	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x4000428	          0x4989f9	                             mov r9, rdi	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x400042b	          0x4989f0	                             mov r8, rsi	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x400042e	      0xbe00000000	                              mov esi, 0	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x4000433	          0x4889c7	                            mov rdi, rax	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x4000436	      0xb800000000	                              mov eax, 0	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x400043b	      0xe800000000	                          call 0x4000440	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x4000440	        0x4883c410	                           add rsp, 0x10	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x4000444	    0x488b05000000	            mov rax, qword [0x0400044b] 	       100	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_4
0x400044b	          0x4889c7	                            mov rdi, rax	       100	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_4
0x400044e	      0xe800000000	                          call 0x4000453	       100	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_4
0x4000453	    0xc70500000000	               mov dword [0x0400045d], 0	       102	progress.c	FUNCTION_5	IF_2	IF_3
0x400045d	      0xb801000000	                              mov eax, 1	       103	progress.c	FUNCTION_5	IF_2	IF_3
0x4000462	      0xe982000000	                           jmp 0x40004e9	       103	progress.c	FUNCTION_5	IF_2	IF_3
0x4000467	    0x8b0500000000	            mov eax, dword [0x0400046d] 	       105	progress.c	FUNCTION_5	ELSE_1	IF_5
0x400046d	            0x85c0	                           test eax, eax	       105	progress.c	FUNCTION_5	ELSE_1	IF_5
0x400046f	            0x7473	                            je 0x40004e4	       105	progress.c	FUNCTION_5	ELSE_1	IF_5
0x4000471	    0x488b05000000	            mov rax, qword [0x04000478] 	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x4000478	          0x4889c7	                            mov rdi, rax	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x400047b	      0xe800000000	                          call 0x4000480	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x4000480	            0x89c7	                            mov edi, eax	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x4000482	      0xe822feffff	               call sym.is_foreground_fd	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x4000487	            0x85c0	                           test eax, eax	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x4000489	            0x7507	                           jne 0x4000492	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x400048b	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x4000490	            0x7441	                            je 0x40004d3	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x4000492	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x4000496	          0x488b10	                    mov rdx, qword [rax]	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x4000499	    0x488b05000000	            mov rax, qword [0x040004a0] 	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x40004a0	        0x488b7df8	                mov rdi, qword [rbp - 8]	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x40004a4	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x40004a8	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x40004ac	          0x4989f9	                             mov r9, rdi	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x40004af	          0x4989f0	                             mov r8, rsi	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x40004b2	      0xbe00000000	                              mov esi, 0	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x40004b7	          0x4889c7	                            mov rdi, rax	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x40004ba	      0xb800000000	                              mov eax, 0	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x40004bf	      0xe800000000	                          call 0x40004c4	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x40004c4	    0x488b05000000	            mov rax, qword [0x040004cb] 	       109	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_8
0x40004cb	          0x4889c7	                            mov rdi, rax	       109	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_8
0x40004ce	      0xe800000000	                          call 0x40004d3	       109	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_8
0x40004d3	    0xc70500000000	               mov dword [0x040004dd], 0	       111	progress.c	FUNCTION_5	ELSE_1	IF_5
0x40004dd	      0xb801000000	                              mov eax, 1	       112	progress.c	FUNCTION_5	ELSE_1	IF_5
0x40004e2	            0xeb05	                           jmp 0x40004e9	       112	progress.c	FUNCTION_5	ELSE_1	IF_5
0x40004e4	      0xb800000000	                              mov eax, 0	       115	progress.c	FUNCTION_5
0x40004e9	              0xc9	                                   leave	       116	progress.c	FUNCTION_5
0x40004ea	              0xc3	                                     ret	       116	progress.c	FUNCTION_5
display_throughput	functions,0:WHILE,0:CALL,5:DO,0:IF,5:SWITCH,0:ELSE,0:FOR,0	161
0x400056f	              0x55	                                push rbp	       130	progress.c	FUNCTION_7
0x4000570	          0x4889e5	                            mov rbp, rsp	       130	progress.c	FUNCTION_7
0x4000573	        0x4883ec30	                           sub rsp, 0x30	       130	progress.c	FUNCTION_7
0x4000577	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       130	progress.c	FUNCTION_7
0x400057b	        0x488975d0	             mov qword [rbp - 0x30], rsi	       130	progress.c	FUNCTION_7
0x400057f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       135	progress.c	FUNCTION_7	IF_1
0x4000584	     0xf8416020000	                            je 0x40007a0	       135	progress.c	FUNCTION_7	IF_1
0x400058a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       137	progress.c	FUNCTION_7
0x400058e	        0x488b4020	            mov rax, qword [rax + 0x20] 	       137	progress.c	FUNCTION_7
0x4000592	        0x488945f0	             mov qword [rbp - 0x10], rax	       137	progress.c	FUNCTION_7
0x4000596	      0xe800000000	                          call 0x400059b	       139	progress.c	FUNCTION_7	CALL_1
0x400059b	        0x488945f8	                mov qword [rbp - 8], rax	       139	progress.c	FUNCTION_7	CALL_1
0x400059f	      0x48837df000	               cmp qword [rbp - 0x10], 0	       141	progress.c	FUNCTION_7	IF_2
0x40005a4	            0x756a	                           jne 0x4000610	       141	progress.c	FUNCTION_7	IF_2
0x40005a6	      0xbe80000000	                           mov esi, 0x80	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x40005ab	      0xbf01000000	                              mov edi, 1	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x40005b0	      0xe800000000	                          call 0x40005b5	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x40005b5	        0x488945f0	             mov qword [rbp - 0x10], rax	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x40005b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x40005bd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x40005c1	        0x48895020	             mov qword [rax + 0x20], rdx	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x40005c5	      0x48837df000	               cmp qword [rbp - 0x10], 0	       143	progress.c	FUNCTION_7	IF_2	IF_3
0x40005ca	     0xf84d3010000	                            je 0x40007a3	       143	progress.c	FUNCTION_7	IF_2	IF_3
0x40005d0	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x40005d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x40005d8	          0x488910	                    mov qword [rax], rdx	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x40005db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x40005df	          0x488b10	                    mov rdx, qword [rax]	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x40005e2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x40005e6	        0x48895008	                mov qword [rax + 8], rdx	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x40005ea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       145	progress.c	FUNCTION_7	IF_2	IF_3
0x40005ee	        0x488b55f8	                mov rdx, qword [rbp - 8]	       145	progress.c	FUNCTION_7	IF_2	IF_3
0x40005f2	        0x48895010	             mov qword [rax + 0x10], rdx	       145	progress.c	FUNCTION_7	IF_2	IF_3
0x40005f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       146	progress.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x40005fa	        0x4883c068	                           add rax, 0x68	       146	progress.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x40005fe	      0xbe00000000	                              mov esi, 0	       146	progress.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x4000603	          0x4889c7	                            mov rdi, rax	       146	progress.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x4000606	      0xe800000000	                          call 0x400060b	       146	progress.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x400060b	      0xe993010000	                           jmp 0x40007a3	       148	progress.c	FUNCTION_7	IF_2
0x4000610	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       150	progress.c	FUNCTION_7
0x4000614	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       150	progress.c	FUNCTION_7
0x4000618	          0x488910	                    mov qword [rax], rdx	       150	progress.c	FUNCTION_7
0x400061b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       153	progress.c	FUNCTION_7	IF_4
0x400061f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       153	progress.c	FUNCTION_7	IF_4
0x4000623	        0x488b55f8	                mov rdx, qword [rbp - 8]	       153	progress.c	FUNCTION_7	IF_4
0x4000627	          0x4829c2	                            sub rdx, rax	       153	progress.c	FUNCTION_7	IF_4
0x400062a	          0x4889d0	                            mov rax, rdx	       153	progress.c	FUNCTION_7	IF_4
0x400062d	    0x483d0065cd1d	                     cmp rax, 0x1dcd6500	       153	progress.c	FUNCTION_7	IF_4
0x4000633	     0xf866d010000	                           jbe 0x40007a6	       153	progress.c	FUNCTION_7	IF_4
0x4000639	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       172	progress.c	FUNCTION_7
0x400063d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       172	progress.c	FUNCTION_7
0x4000641	        0x488b55f8	                mov rdx, qword [rbp - 8]	       172	progress.c	FUNCTION_7
0x4000645	          0x4829c2	                            sub rdx, rax	       172	progress.c	FUNCTION_7
0x4000648	          0x4889d0	                            mov rax, rdx	       172	progress.c	FUNCTION_7
0x400064b	    0x4869c02e1100	                   imul rax, rax, 0x112e	       172	progress.c	FUNCTION_7
0x4000652	        0x48c1e820	                           shr rax, 0x20	       172	progress.c	FUNCTION_7
0x4000656	          0x8945e4	             mov dword [rbp - 0x1c], eax	       172	progress.c	FUNCTION_7
0x4000659	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       174	progress.c	FUNCTION_7
0x400065d	            0x89c2	                            mov edx, eax	       174	progress.c	FUNCTION_7
0x400065f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       174	progress.c	FUNCTION_7
0x4000663	        0x488b4008	                mov rax, qword [rax + 8]	       174	progress.c	FUNCTION_7
0x4000667	            0x29c2	                            sub edx, eax	       174	progress.c	FUNCTION_7
0x4000669	            0x89d0	                            mov eax, edx	       174	progress.c	FUNCTION_7
0x400066b	          0x8945e8	             mov dword [rbp - 0x18], eax	       174	progress.c	FUNCTION_7
0x400066e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       175	progress.c	FUNCTION_7
0x4000672	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       175	progress.c	FUNCTION_7
0x4000676	        0x48895008	                mov qword [rax + 8], rdx	       175	progress.c	FUNCTION_7
0x400067a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       176	progress.c	FUNCTION_7
0x400067e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       176	progress.c	FUNCTION_7
0x4000682	        0x48895010	             mov qword [rax + 0x10], rdx	       176	progress.c	FUNCTION_7
0x4000686	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       177	progress.c	FUNCTION_7
0x400068a	          0x8b5018	            mov edx, dword [rax + 0x18] 	       177	progress.c	FUNCTION_7
0x400068d	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       177	progress.c	FUNCTION_7
0x4000690	             0x1c2	                            add edx, eax	       177	progress.c	FUNCTION_7
0x4000692	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       177	progress.c	FUNCTION_7
0x4000696	          0x895018	             mov dword [rax + 0x18], edx	       177	progress.c	FUNCTION_7
0x4000699	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       178	progress.c	FUNCTION_7
0x400069d	          0x8b501c	            mov edx, dword [rax + 0x1c] 	       178	progress.c	FUNCTION_7
0x40006a0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       178	progress.c	FUNCTION_7
0x40006a3	             0x1c2	                            add edx, eax	       178	progress.c	FUNCTION_7
0x40006a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       178	progress.c	FUNCTION_7
0x40006a9	          0x89501c	             mov dword [rax + 0x1c], edx	       178	progress.c	FUNCTION_7
0x40006ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       179	progress.c	FUNCTION_7
0x40006b0	          0x8b4018	            mov eax, dword [rax + 0x18] 	       179	progress.c	FUNCTION_7
0x40006b3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       179	progress.c	FUNCTION_7
0x40006b7	          0x8b721c	            mov esi, dword [rdx + 0x1c] 	       179	progress.c	FUNCTION_7
0x40006ba	      0xba00000000	                              mov edx, 0	       179	progress.c	FUNCTION_7
0x40006bf	            0xf7f6	                                 div esi	       179	progress.c	FUNCTION_7
0x40006c1	          0x8945ec	             mov dword [rbp - 0x14], eax	       179	progress.c	FUNCTION_7
0x40006c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       180	progress.c	FUNCTION_7
0x40006c8	          0x8b5018	            mov edx, dword [rax + 0x18] 	       180	progress.c	FUNCTION_7
0x40006cb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       180	progress.c	FUNCTION_7
0x40006cf	          0x8b4860	            mov ecx, dword [rax + 0x60] 	       180	progress.c	FUNCTION_7
0x40006d2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       180	progress.c	FUNCTION_7
0x40006d6	            0x89c9	                            mov ecx, ecx	       180	progress.c	FUNCTION_7
0x40006d8	        0x4883c108	                              add rcx, 8	       180	progress.c	FUNCTION_7
0x40006dc	          0x8b0488	            mov eax, dword [rax + rcx*4]	       180	progress.c	FUNCTION_7
0x40006df	            0x29c2	                            sub edx, eax	       180	progress.c	FUNCTION_7
0x40006e1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       180	progress.c	FUNCTION_7
0x40006e5	          0x895018	             mov dword [rax + 0x18], edx	       180	progress.c	FUNCTION_7
0x40006e8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       181	progress.c	FUNCTION_7
0x40006ec	          0x8b501c	            mov edx, dword [rax + 0x1c] 	       181	progress.c	FUNCTION_7
0x40006ef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       181	progress.c	FUNCTION_7
0x40006f3	          0x8b4860	            mov ecx, dword [rax + 0x60] 	       181	progress.c	FUNCTION_7
0x40006f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       181	progress.c	FUNCTION_7
0x40006fa	            0x89c9	                            mov ecx, ecx	       181	progress.c	FUNCTION_7
0x40006fc	        0x4883c110	                           add rcx, 0x10	       181	progress.c	FUNCTION_7
0x4000700	          0x8b0488	            mov eax, dword [rax + rcx*4]	       181	progress.c	FUNCTION_7
0x4000703	            0x29c2	                            sub edx, eax	       181	progress.c	FUNCTION_7
0x4000705	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       181	progress.c	FUNCTION_7
0x4000709	          0x89501c	             mov dword [rax + 0x1c], edx	       181	progress.c	FUNCTION_7
0x400070c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       182	progress.c	FUNCTION_7
0x4000710	          0x8b5060	            mov edx, dword [rax + 0x60] 	       182	progress.c	FUNCTION_7
0x4000713	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       182	progress.c	FUNCTION_7
0x4000717	            0x89d2	                            mov edx, edx	       182	progress.c	FUNCTION_7
0x4000719	        0x488d4a08	                      lea rcx, [rdx + 8]	       182	progress.c	FUNCTION_7
0x400071d	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       182	progress.c	FUNCTION_7
0x4000720	          0x891488	            mov dword [rax + rcx*4], edx	       182	progress.c	FUNCTION_7
0x4000723	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       183	progress.c	FUNCTION_7
0x4000727	          0x8b5060	            mov edx, dword [rax + 0x60] 	       183	progress.c	FUNCTION_7
0x400072a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       183	progress.c	FUNCTION_7
0x400072e	            0x89d2	                            mov edx, edx	       183	progress.c	FUNCTION_7
0x4000730	        0x488d4a10	                   lea rcx, [rdx + 0x10]	       183	progress.c	FUNCTION_7
0x4000734	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       183	progress.c	FUNCTION_7
0x4000737	          0x891488	            mov dword [rax + rcx*4], edx	       183	progress.c	FUNCTION_7
0x400073a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       184	progress.c	FUNCTION_7
0x400073e	          0x8b4060	            mov eax, dword [rax + 0x60] 	       184	progress.c	FUNCTION_7
0x4000741	          0x83c001	                              add eax, 1	       184	progress.c	FUNCTION_7
0x4000744	          0x83e007	                              and eax, 7	       184	progress.c	FUNCTION_7
0x4000747	            0x89c2	                            mov edx, eax	       184	progress.c	FUNCTION_7
0x4000749	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       184	progress.c	FUNCTION_7
0x400074d	          0x895060	             mov dword [rax + 0x60], edx	       184	progress.c	FUNCTION_7
0x4000750	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       186	progress.c	FUNCTION_7	CALL_4
0x4000754	        0x488d4868	                   lea rcx, [rax + 0x68]	       186	progress.c	FUNCTION_7	CALL_4
0x4000758	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       186	progress.c	FUNCTION_7	CALL_4
0x400075b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       186	progress.c	FUNCTION_7	CALL_4
0x400075f	          0x4889c6	                            mov rsi, rax	       186	progress.c	FUNCTION_7	CALL_4
0x4000762	          0x4889cf	                            mov rdi, rcx	       186	progress.c	FUNCTION_7	CALL_4
0x4000765	      0xe881fdffff	              call sym.throughput_string	       186	progress.c	FUNCTION_7	CALL_4
0x400076a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       187	progress.c	FUNCTION_7	IF_5
0x400076e	        0x488b4008	                mov rax, qword [rax + 8]	       187	progress.c	FUNCTION_7	IF_5
0x4000772	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       187	progress.c	FUNCTION_7	IF_5
0x4000776	            0x742f	                            je 0x40007a7	       187	progress.c	FUNCTION_7	IF_5
0x4000778	    0x8b0500000000	            mov eax, dword [0x0400077e] 	       187	progress.c	FUNCTION_7	IF_5
0x400077e	            0x85c0	                           test eax, eax	       187	progress.c	FUNCTION_7	IF_5
0x4000780	            0x7425	                            je 0x40007a7	       187	progress.c	FUNCTION_7	IF_5
0x4000782	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       188	progress.c	FUNCTION_7	CALL_5
0x4000786	        0x488b4808	                mov rcx, qword [rax + 8]	       188	progress.c	FUNCTION_7	CALL_5
0x400078a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       188	progress.c	FUNCTION_7	CALL_5
0x400078e	      0xba00000000	                              mov edx, 0	       188	progress.c	FUNCTION_7	CALL_5
0x4000793	          0x4889ce	                            mov rsi, rcx	       188	progress.c	FUNCTION_7	CALL_5
0x4000796	          0x4889c7	                            mov rdi, rax	       188	progress.c	FUNCTION_7	CALL_5
0x4000799	      0xe846fbffff	                        call sym.display	       188	progress.c	FUNCTION_7	CALL_5
0x400079e	            0xeb07	                           jmp 0x40007a7	       188	progress.c	FUNCTION_7	CALL_5
0x40007a0	              0x90	                                     nop	       136	progress.c	FUNCTION_7	IF_1
0x40007a1	            0xeb04	                           jmp 0x40007a7	       136	progress.c	FUNCTION_7	IF_1
0x40007a3	              0x90	                                     nop	       148	progress.c	FUNCTION_7	IF_2
0x40007a4	            0xeb01	                           jmp 0x40007a7	       148	progress.c	FUNCTION_7	IF_2
0x40007a6	              0x90	                                     nop	       154	progress.c	FUNCTION_7	IF_4
0x40007a7	              0xc9	                                   leave	       189	progress.c	FUNCTION_7
0x40007a8	              0xc3	                                     ret	       189	progress.c	FUNCTION_7
stop_progress	functions,0:WHILE,0:CALL,2:DO,0:IF,0:SWITCH,0:ELSE,0:FOR,0	14
0x40008ef	              0x55	                                push rbp	       228	progress.c	FUNCTION_12
0x40008f0	          0x4889e5	                            mov rbp, rsp	       228	progress.c	FUNCTION_12
0x40008f3	        0x4883ec10	                           sub rsp, 0x10	       228	progress.c	FUNCTION_12
0x40008f7	        0x48897df8	                mov qword [rbp - 8], rdi	       228	progress.c	FUNCTION_12
0x40008fb	      0xbf00000000	                              mov edi, 0	       229	progress.c	FUNCTION_12	CALL_2
0x4000900	      0xe83bf7ffff	                          call 0x4000040	       229	progress.c	FUNCTION_12	CALL_2
0x4000905	          0x4889c2	                            mov rdx, rax	       229	progress.c	FUNCTION_12	CALL_2
0x4000908	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	progress.c	FUNCTION_12	CALL_2
0x400090c	          0x4889d6	                            mov rsi, rdx	       229	progress.c	FUNCTION_12	CALL_2
0x400090f	          0x4889c7	                            mov rdi, rax	       229	progress.c	FUNCTION_12	CALL_2
0x4000912	      0xe800000000	                          call 0x4000917	       229	progress.c	FUNCTION_12	CALL_2
0x4000917	              0x90	                                     nop	       230	progress.c	FUNCTION_12
0x4000918	              0xc9	                                   leave	       230	progress.c	FUNCTION_12
0x4000919	              0xc3	                                     ret	       230	progress.c	FUNCTION_12
throughput_string	functions,0:WHILE,0:CALL,5:DO,0:IF,0:SWITCH,0:ELSE,0:FOR,0	37
0x40004eb	              0x55	                                push rbp	       120	progress.c	FUNCTION_6
0x40004ec	          0x4889e5	                            mov rbp, rsp	       120	progress.c	FUNCTION_6
0x40004ef	        0x4883ec20	                           sub rsp, 0x20	       120	progress.c	FUNCTION_6
0x40004f3	        0x48897df8	                mov qword [rbp - 8], rdi	       120	progress.c	FUNCTION_6
0x40004f7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       120	progress.c	FUNCTION_6
0x40004fb	          0x8955ec	             mov dword [rbp - 0x14], edx	       120	progress.c	FUNCTION_6
0x40004fe	        0x488b45f8	                mov rax, qword [rbp - 8]	       121	progress.c	FUNCTION_6
0x4000502	      0xbe00000000	                              mov esi, 0	       121	progress.c	FUNCTION_6
0x4000507	          0x4889c7	                            mov rdi, rax	       121	progress.c	FUNCTION_6
0x400050a	      0xe85dfbffff	                  call sym.strbuf_setlen	       121	progress.c	FUNCTION_6
0x400050f	        0x488b45f8	                mov rax, qword [rbp - 8]	       122	progress.c	FUNCTION_6	CALL_1
0x4000513	      0xbe00000000	                              mov esi, 0	       122	progress.c	FUNCTION_6	CALL_1
0x4000518	          0x4889c7	                            mov rdi, rax	       122	progress.c	FUNCTION_6	CALL_1
0x400051b	      0xe8e6fbffff	                  call sym.strbuf_addstr	       122	progress.c	FUNCTION_6	CALL_1
0x4000520	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       123	progress.c	FUNCTION_6	CALL_2
0x4000524	        0x488b45f8	                mov rax, qword [rbp - 8]	       123	progress.c	FUNCTION_6	CALL_2
0x4000528	          0x4889d6	                            mov rsi, rdx	       123	progress.c	FUNCTION_6	CALL_2
0x400052b	          0x4889c7	                            mov rdi, rax	       123	progress.c	FUNCTION_6	CALL_2
0x400052e	      0xe800000000	                          call 0x4000533	       123	progress.c	FUNCTION_6	CALL_2
0x4000533	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	progress.c	FUNCTION_6	CALL_3
0x4000537	      0xbe00000000	                              mov esi, 0	       124	progress.c	FUNCTION_6	CALL_3
0x400053c	          0x4889c7	                            mov rdi, rax	       124	progress.c	FUNCTION_6	CALL_3
0x400053f	      0xe8c2fbffff	                  call sym.strbuf_addstr	       124	progress.c	FUNCTION_6	CALL_3
0x4000544	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       125	progress.c	FUNCTION_6	CALL_4
0x4000547	          0xc1e00a	                            shl eax, 0xa	       125	progress.c	FUNCTION_6	CALL_4
0x400054a	            0x89c2	                            mov edx, eax	       125	progress.c	FUNCTION_6	CALL_4
0x400054c	        0x488b45f8	                mov rax, qword [rbp - 8]	       125	progress.c	FUNCTION_6	CALL_4
0x4000550	          0x4889d6	                            mov rsi, rdx	       125	progress.c	FUNCTION_6	CALL_4
0x4000553	          0x4889c7	                            mov rdi, rax	       125	progress.c	FUNCTION_6	CALL_4
0x4000556	      0xe800000000	                          call 0x400055b	       125	progress.c	FUNCTION_6	CALL_4
0x400055b	        0x488b45f8	                mov rax, qword [rbp - 8]	       126	progress.c	FUNCTION_6	CALL_5
0x400055f	      0xbe00000000	                              mov esi, 0	       126	progress.c	FUNCTION_6	CALL_5
0x4000564	          0x4889c7	                            mov rdi, rax	       126	progress.c	FUNCTION_6	CALL_5
0x4000567	      0xe89afbffff	                  call sym.strbuf_addstr	       126	progress.c	FUNCTION_6	CALL_5
0x400056c	              0x90	                                     nop	       127	progress.c	FUNCTION_6
0x400056d	              0xc9	                                   leave	       127	progress.c	FUNCTION_6
0x400056e	              0xc3	                                     ret	       127	progress.c	FUNCTION_6
start_progress_delay	functions,0:WHILE,0:CALL,5:DO,0:IF,1:SWITCH,0:ELSE,0:FOR,0	45
0x40007e1	              0x55	                                push rbp	       198	progress.c	FUNCTION_9
0x40007e2	          0x4889e5	                            mov rbp, rsp	       198	progress.c	FUNCTION_9
0x40007e5	        0x4883ec30	                           sub rsp, 0x30	       198	progress.c	FUNCTION_9
0x40007e9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       198	progress.c	FUNCTION_9
0x40007ed	        0x488975e0	             mov qword [rbp - 0x20], rsi	       198	progress.c	FUNCTION_9
0x40007f1	          0x8955dc	             mov dword [rbp - 0x24], edx	       198	progress.c	FUNCTION_9
0x40007f4	      0xbf30000000	                           mov edi, 0x30	       199	progress.c	FUNCTION_9	CALL_1
0x40007f9	      0xe800000000	                          call 0x40007fe	       199	progress.c	FUNCTION_9	CALL_1
0x40007fe	        0x488945f8	                mov qword [rbp - 8], rax	       199	progress.c	FUNCTION_9	CALL_1
0x4000802	      0x48837df800	                  cmp qword [rbp - 8], 0	       200	progress.c	FUNCTION_9	IF_1
0x4000807	            0x7533	                           jne 0x400083c	       200	progress.c	FUNCTION_9	IF_1
0x4000809	    0x488b05000000	            mov rax, qword [0x04000810] 	       202	progress.c	FUNCTION_9	IF_1	CALL_2
0x4000810	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       202	progress.c	FUNCTION_9	IF_1	CALL_2
0x4000814	      0xbe00000000	                              mov esi, 0	       202	progress.c	FUNCTION_9	IF_1	CALL_2
0x4000819	          0x4889c7	                            mov rdi, rax	       202	progress.c	FUNCTION_9	IF_1	CALL_2
0x400081c	      0xb800000000	                              mov eax, 0	       202	progress.c	FUNCTION_9	IF_1	CALL_2
0x4000821	      0xe800000000	                          call 0x4000826	       202	progress.c	FUNCTION_9	IF_1	CALL_2
0x4000826	    0x488b05000000	            mov rax, qword [0x0400082d] 	       203	progress.c	FUNCTION_9	IF_1	CALL_3
0x400082d	          0x4889c7	                            mov rdi, rax	       203	progress.c	FUNCTION_9	IF_1	CALL_3
0x4000830	      0xe800000000	                          call 0x4000835	       203	progress.c	FUNCTION_9	IF_1	CALL_3
0x4000835	      0xb800000000	                              mov eax, 0	       204	progress.c	FUNCTION_9	IF_1
0x400083a	            0xeb5d	                           jmp 0x4000899	       204	progress.c	FUNCTION_9	IF_1
0x400083c	        0x488b45f8	                mov rax, qword [rbp - 8]	       206	progress.c	FUNCTION_9
0x4000840	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       206	progress.c	FUNCTION_9
0x4000844	          0x488910	                    mov qword [rax], rdx	       206	progress.c	FUNCTION_9
0x4000847	        0x488b45f8	                mov rax, qword [rbp - 8]	       207	progress.c	FUNCTION_9
0x400084b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       207	progress.c	FUNCTION_9
0x400084f	        0x48895010	             mov qword [rax + 0x10], rdx	       207	progress.c	FUNCTION_9
0x4000853	        0x488b45f8	                mov rax, qword [rbp - 8]	       208	progress.c	FUNCTION_9
0x4000857	    0x48c74008ffff	 mov qword [rax + 8], 0xffffffffffffffff	       208	progress.c	FUNCTION_9
0x400085f	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	progress.c	FUNCTION_9
0x4000863	    0xc74018ffffff	     mov dword [rax + 0x18], 0xffffffff 	       209	progress.c	FUNCTION_9
0x400086a	        0x488b45f8	                mov rax, qword [rbp - 8]	       210	progress.c	FUNCTION_9
0x400086e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       210	progress.c	FUNCTION_9
0x4000871	          0x89501c	             mov dword [rax + 0x1c], edx	       210	progress.c	FUNCTION_9
0x4000874	        0x488b45f8	                mov rax, qword [rbp - 8]	       211	progress.c	FUNCTION_9
0x4000878	    0x48c740200000	               mov qword [rax + 0x20], 0	       211	progress.c	FUNCTION_9
0x4000880	      0xe800000000	                          call 0x4000885	       212	progress.c	FUNCTION_9	CALL_4
0x4000885	          0x4889c2	                            mov rdx, rax	       212	progress.c	FUNCTION_9	CALL_4
0x4000888	        0x488b45f8	                mov rax, qword [rbp - 8]	       212	progress.c	FUNCTION_9	CALL_4
0x400088c	        0x48895028	             mov qword [rax + 0x28], rdx	       212	progress.c	FUNCTION_9	CALL_4
0x4000890	      0xe8baf8ffff	            call sym.set_progress_signal	       213	progress.c	FUNCTION_9	CALL_5
0x4000895	        0x488b45f8	                mov rax, qword [rbp - 8]	       214	progress.c	FUNCTION_9
0x4000899	              0xc9	                                   leave	       215	progress.c	FUNCTION_9
0x400089a	              0xc3	                                     ret	       215	progress.c	FUNCTION_9
strbuf_addstr	functions,0:WHILE,0:CALL,2:DO,0:IF,0:SWITCH,0:ELSE,0:FOR,0	17
0x4000106	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_22
0x4000107	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_22
0x400010a	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_22
0x400010e	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_22
0x4000112	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_22
0x4000116	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_22	CALL_2
0x400011a	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_22	CALL_2
0x400011d	      0xe800000000	                          call 0x4000122	       279	strbuf.h	FUNCTION_22	CALL_2
0x4000122	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_22	CALL_2
0x4000125	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_22	CALL_2
0x4000129	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_22	CALL_2
0x400012d	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_22	CALL_2
0x4000130	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_22	CALL_2
0x4000133	      0xe800000000	                          call 0x4000138	       279	strbuf.h	FUNCTION_22	CALL_2
0x4000138	              0x90	                                     nop	       280	strbuf.h	FUNCTION_22
0x4000139	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_22
0x400013a	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_22
start_progress	functions,0:WHILE,0:CALL,1:DO,0:IF,0:SWITCH,0:ELSE,0:FOR,0	13
0x40008c5	              0x55	                                push rbp	       223	progress.c	FUNCTION_11
0x40008c6	          0x4889e5	                            mov rbp, rsp	       223	progress.c	FUNCTION_11
0x40008c9	        0x4883ec10	                           sub rsp, 0x10	       223	progress.c	FUNCTION_11
0x40008cd	        0x48897df8	                mov qword [rbp - 8], rdi	       223	progress.c	FUNCTION_11
0x40008d1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       223	progress.c	FUNCTION_11
0x40008d5	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       224	progress.c	FUNCTION_11	CALL_1
0x40008d9	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	progress.c	FUNCTION_11	CALL_1
0x40008dd	      0xba00000000	                              mov edx, 0	       224	progress.c	FUNCTION_11	CALL_1
0x40008e2	          0x4889ce	                            mov rsi, rcx	       224	progress.c	FUNCTION_11	CALL_1
0x40008e5	          0x4889c7	                            mov rdi, rax	       224	progress.c	FUNCTION_11	CALL_1
0x40008e8	      0xe8f4feffff	           call sym.start_progress_delay	       224	progress.c	FUNCTION_11	CALL_1
0x40008ed	              0xc9	                                   leave	       225	progress.c	FUNCTION_11
0x40008ee	              0xc3	                                     ret	       225	progress.c	FUNCTION_11
display_progress	functions,0:WHILE,0:CALL,1:DO,0:IF,0:SWITCH,0:ELSE,0:FOR,0	17
0x40007a9	              0x55	                                push rbp	       192	progress.c	FUNCTION_8
0x40007aa	          0x4889e5	                            mov rbp, rsp	       192	progress.c	FUNCTION_8
0x40007ad	        0x4883ec10	                           sub rsp, 0x10	       192	progress.c	FUNCTION_8
0x40007b1	        0x48897df8	                mov qword [rbp - 8], rdi	       192	progress.c	FUNCTION_8
0x40007b5	        0x488975f0	             mov qword [rbp - 0x10], rsi	       192	progress.c	FUNCTION_8
0x40007b9	      0x48837df800	                  cmp qword [rbp - 8], 0	       193	progress.c	FUNCTION_8	CALL_1
0x40007be	            0x741a	                            je 0x40007da	       193	progress.c	FUNCTION_8	CALL_1
0x40007c0	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       193	progress.c	FUNCTION_8	CALL_1
0x40007c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       193	progress.c	FUNCTION_8	CALL_1
0x40007c8	      0xba00000000	                              mov edx, 0	       193	progress.c	FUNCTION_8	CALL_1
0x40007cd	          0x4889ce	                            mov rsi, rcx	       193	progress.c	FUNCTION_8	CALL_1
0x40007d0	          0x4889c7	                            mov rdi, rax	       193	progress.c	FUNCTION_8	CALL_1
0x40007d3	      0xe80cfbffff	                        call sym.display	       193	progress.c	FUNCTION_8	CALL_1
0x40007d8	            0xeb05	                           jmp 0x40007df	       193	progress.c	FUNCTION_8	CALL_1
0x40007da	      0xb800000000	                              mov eax, 0	       193	progress.c	FUNCTION_8	CALL_1
0x40007df	              0xc9	                                   leave	       194	progress.c	FUNCTION_8
0x40007e0	              0xc3	                                     ret	       194	progress.c	FUNCTION_8
_	functions,0:WHILE,0:CALL,0:DO,0:IF,1:SWITCH,0:ELSE,0:FOR,0	15
0x4000040	              0x55	                                push rbp	        51	gettext.h	FUNCTION_16
0x4000041	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_16
0x4000044	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_16
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_16
0x400004c	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_16	IF_1
0x4000050	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_16	IF_1
0x4000053	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_16	IF_1
0x4000055	            0x7507	                           jne 0x400005e	        52	gettext.h	FUNCTION_16	IF_1
0x4000057	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_16	IF_1
0x400005c	            0xeb0c	                           jmp 0x400006a	        53	gettext.h	FUNCTION_16	IF_1
0x400005e	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_16
0x4000062	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_16
0x4000065	      0xe800000000	                          call 0x400006a	        54	gettext.h	FUNCTION_16
0x400006a	              0xc9	                                   leave	        55	gettext.h	FUNCTION_16
0x400006b	              0xc3	                                     ret	        55	gettext.h	FUNCTION_16
stop_progress_msg	functions,0:WHILE,0:CALL,9:DO,0:IF,4:SWITCH,0:ELSE,0:FOR,0	88
0x400091a	              0x55	                                push rbp	       233	progress.c	FUNCTION_13
0x400091b	          0x4889e5	                            mov rbp, rsp	       233	progress.c	FUNCTION_13
0x400091e	        0x4883ec40	                           sub rsp, 0x40	       233	progress.c	FUNCTION_13
0x4000922	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       233	progress.c	FUNCTION_13
0x4000926	        0x488975c0	             mov qword [rbp - 0x40], rsi	       233	progress.c	FUNCTION_13
0x400092a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       234	progress.c	FUNCTION_13
0x400092e	          0x488b00	                    mov rax, qword [rax]	       234	progress.c	FUNCTION_13
0x4000931	        0x488945e0	             mov qword [rbp - 0x20], rax	       234	progress.c	FUNCTION_13
0x4000935	      0x48837de000	               cmp qword [rbp - 0x20], 0	       235	progress.c	FUNCTION_13	IF_1
0x400093a	     0xf8426010000	                            je 0x4000a66	       235	progress.c	FUNCTION_13	IF_1
0x4000940	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       237	progress.c	FUNCTION_13
0x4000944	    0x48c700000000	                      mov qword [rax], 0	       237	progress.c	FUNCTION_13
0x400094b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       238	progress.c	FUNCTION_13	IF_2
0x400094f	        0x488b4008	                mov rax, qword [rax + 8]	       238	progress.c	FUNCTION_13	IF_2
0x4000953	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       238	progress.c	FUNCTION_13	IF_2
0x4000957	     0xf84c5000000	                            je 0x4000a22	       238	progress.c	FUNCTION_13	IF_2
0x400095d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       241	progress.c	FUNCTION_13	IF_2
0x4000961	        0x488b4020	            mov rax, qword [rax + 0x20] 	       241	progress.c	FUNCTION_13	IF_2
0x4000965	        0x488945e8	             mov qword [rbp - 0x18], rax	       241	progress.c	FUNCTION_13	IF_2
0x4000969	      0x48837de800	               cmp qword [rbp - 0x18], 0	       243	progress.c	FUNCTION_13	IF_2	IF_3
0x400096e	            0x7467	                            je 0x40009d7	       243	progress.c	FUNCTION_13	IF_2	IF_3
0x4000970	      0xe800000000	                          call 0x4000975	       244	progress.c	FUNCTION_13	IF_2	IF_3	CALL_1
0x4000975	        0x488945f0	             mov qword [rbp - 0x10], rax	       244	progress.c	FUNCTION_13	IF_2	IF_3	CALL_1
0x4000979	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x400097d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x4000981	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x4000985	          0x4829c2	                            sub rdx, rax	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x4000988	          0x4889d0	                            mov rax, rdx	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x400098b	    0x4869c02e1100	                   imul rax, rax, 0x112e	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x4000992	        0x48c1e820	                           shr rax, 0x20	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x4000996	          0x8945d8	             mov dword [rbp - 0x28], eax	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x4000999	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x400099d	          0x488b00	                    mov rax, qword [rax]	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x40009a0	        0x837dd800	               cmp dword [rbp - 0x28], 0	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x40009a4	            0x7405	                            je 0x40009ab	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x40009a6	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x40009a9	            0xeb05	                           jmp 0x40009b0	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x40009ab	      0xb901000000	                              mov ecx, 1	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x40009b0	            0x4899	                                     cqo	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x40009b2	          0x48f7f9	                                idiv rcx	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x40009b5	          0x8945dc	             mov dword [rbp - 0x24], eax	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x40009b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40009bc	          0x488b00	                    mov rax, qword [rax]	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40009bf	          0x4889c6	                            mov rsi, rax	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40009c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40009c6	        0x488d4868	                   lea rcx, [rax + 0x68]	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40009ca	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40009cd	            0x89c2	                            mov edx, eax	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40009cf	          0x4889cf	                            mov rdi, rcx	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40009d2	      0xe814fbffff	              call sym.throughput_string	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40009d7	    0xc70500000000	               mov dword [0x040009e1], 1	       250	progress.c	FUNCTION_13	IF_2
0x40009e1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x40009e5	          0x4889c6	                            mov rsi, rax	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x40009e8	      0xbf00000000	                              mov edi, 0	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x40009ed	      0xb800000000	                              mov eax, 0	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x40009f2	      0xe800000000	                          call 0x40009f7	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x40009f7	        0x488945f8	                mov qword [rbp - 8], rax	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x40009fb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x40009ff	        0x488b4808	                mov rcx, qword [rax + 8]	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x4000a03	        0x488b55f8	                mov rdx, qword [rbp - 8]	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x4000a07	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x4000a0b	          0x4889ce	                            mov rsi, rcx	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x4000a0e	          0x4889c7	                            mov rdi, rax	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x4000a11	      0xe8cef8ffff	                        call sym.display	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x4000a16	        0x488b45f8	                mov rax, qword [rbp - 8]	       253	progress.c	FUNCTION_13	IF_2	CALL_5
0x4000a1a	          0x4889c7	                            mov rdi, rax	       253	progress.c	FUNCTION_13	IF_2	CALL_5
0x4000a1d	      0xe800000000	                          call 0x4000a22	       253	progress.c	FUNCTION_13	IF_2	CALL_5
0x4000a22	      0xe805f8ffff	          call sym.clear_progress_signal	       255	progress.c	FUNCTION_13	CALL_6
0x4000a27	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       256	progress.c	FUNCTION_13	IF_4
0x4000a2b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       256	progress.c	FUNCTION_13	IF_4
0x4000a2f	          0x4885c0	                           test rax, rax	       256	progress.c	FUNCTION_13	IF_4
0x4000a32	            0x7414	                            je 0x4000a48	       256	progress.c	FUNCTION_13	IF_4
0x4000a34	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       257	progress.c	FUNCTION_13	CALL_7
0x4000a38	        0x488b4020	            mov rax, qword [rax + 0x20] 	       257	progress.c	FUNCTION_13	CALL_7
0x4000a3c	        0x4883c068	                           add rax, 0x68	       257	progress.c	FUNCTION_13	CALL_7
0x4000a40	          0x4889c7	                            mov rdi, rax	       257	progress.c	FUNCTION_13	CALL_7
0x4000a43	      0xe800000000	                          call 0x4000a48	       257	progress.c	FUNCTION_13	CALL_7
0x4000a48	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       258	progress.c	FUNCTION_13	CALL_8
0x4000a4c	        0x488b4020	            mov rax, qword [rax + 0x20] 	       258	progress.c	FUNCTION_13	CALL_8
0x4000a50	          0x4889c7	                            mov rdi, rax	       258	progress.c	FUNCTION_13	CALL_8
0x4000a53	      0xe800000000	                          call 0x4000a58	       258	progress.c	FUNCTION_13	CALL_8
0x4000a58	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       259	progress.c	FUNCTION_13	CALL_9
0x4000a5c	          0x4889c7	                            mov rdi, rax	       259	progress.c	FUNCTION_13	CALL_9
0x4000a5f	      0xe800000000	                          call 0x4000a64	       259	progress.c	FUNCTION_13	CALL_9
0x4000a64	            0xeb01	                           jmp 0x4000a67	       259	progress.c	FUNCTION_13	CALL_9
0x4000a66	              0x90	                                     nop	       236	progress.c	FUNCTION_13	IF_1
0x4000a67	              0xc9	                                   leave	       260	progress.c	FUNCTION_13
0x4000a68	              0xc3	                                     ret	       260	progress.c	FUNCTION_13
progress_interval	functions,0:WHILE,0:CALL,0:DO,0:IF,0:SWITCH,0:ELSE,0:FOR,0	7
0x400013b	              0x55	                                push rbp	        44	progress.c	FUNCTION_1
0x400013c	          0x4889e5	                            mov rbp, rsp	        44	progress.c	FUNCTION_1
0x400013f	          0x897dfc	                mov dword [rbp - 4], edi	        44	progress.c	FUNCTION_1
0x4000142	    0xc70500000000	               mov dword [0x0400014c], 1	        45	progress.c	FUNCTION_1
0x400014c	              0x90	                                     nop	        46	progress.c	FUNCTION_1
0x400014d	              0x5d	                                 pop rbp	        46	progress.c	FUNCTION_1
0x400014e	              0xc3	                                     ret	        46	progress.c	FUNCTION_1
strbuf_setlen	functions,0:WHILE,0:CALL,2:DO,0:IF,2:SWITCH,0:ELSE,1:FOR,0	43
0x400006c	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_20
0x400006d	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_20
0x4000070	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_20
0x4000074	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_20
0x4000078	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_20
0x400007c	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_20	IF_1
0x4000080	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_20	IF_1
0x4000083	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_20	IF_1
0x4000086	            0x740d	                            je 0x4000095	       162	strbuf.h	FUNCTION_20	IF_1
0x4000088	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_20	IF_1
0x400008c	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_20	IF_1
0x400008f	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_20	IF_1
0x4000093	            0xeb05	                           jmp 0x400009a	       162	strbuf.h	FUNCTION_20	IF_1
0x4000095	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_20	IF_1
0x400009a	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_20	IF_1
0x400009e	            0x730f	                           jae 0x40000af	       162	strbuf.h	FUNCTION_20	IF_1
0x40000a0	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_20	CALL_1
0x40000a5	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_20	CALL_1
0x40000aa	      0xe800000000	                          call 0x40000af	       163	strbuf.h	FUNCTION_20	CALL_1
0x40000af	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_20
0x40000b3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_20
0x40000b7	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_20
0x40000bb	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_20	IF_2
0x40000bf	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_20	IF_2
0x40000c3	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_20	IF_2
0x40000c9	            0x7414	                            je 0x40000df	       165	strbuf.h	FUNCTION_20	IF_2
0x40000cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_20	IF_2
0x40000cf	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_20	IF_2
0x40000d3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_20	IF_2
0x40000d7	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_20	IF_2
0x40000da	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_20	IF_2
0x40000dd	            0xeb24	                           jmp 0x4000103	       169	strbuf.h	FUNCTION_20
0x40000df	     0xfb605000000	           movzx eax, byte [0x040000e6] 	       168	strbuf.h	FUNCTION_20	CALL_2
0x40000e6	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_20	CALL_2
0x40000e8	            0x7419	                            je 0x4000103	       168	strbuf.h	FUNCTION_20	CALL_2
0x40000ea	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_20	CALL_2
0x40000ef	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_20	CALL_2
0x40000f4	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_20	CALL_2
0x40000f9	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_20	CALL_2
0x40000fe	      0xe800000000	                          call 0x4000103	       168	strbuf.h	FUNCTION_20	CALL_2
0x4000103	              0x90	                                     nop	       169	strbuf.h	FUNCTION_20
0x4000104	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_20
0x4000105	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_20
set_progress_signal	functions,0:WHILE,0:CALL,4:DO,0:IF,0:SWITCH,0:ELSE,0:FOR,0	41
0x400014f	              0x55	                                push rbp	        49	progress.c	FUNCTION_2
0x4000150	          0x4889e5	                            mov rbp, rsp	        49	progress.c	FUNCTION_2
0x4000153	    0x4881ecc00000	                           sub rsp, 0xc0	        49	progress.c	FUNCTION_2
0x400015a	    0x64488b042528	                mov rax, qword fs:[0x28]	        49	progress.c	FUNCTION_2
0x4000163	        0x488945f8	                mov qword [rbp - 8], rax	        49	progress.c	FUNCTION_2
0x4000167	            0x31c0	                            xor eax, eax	        49	progress.c	FUNCTION_2
0x4000169	    0xc70500000000	               mov dword [0x04000173], 0	        53	progress.c	FUNCTION_2
0x4000173	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	        55	progress.c	FUNCTION_2	CALL_1
0x400017a	      0xba98000000	                           mov edx, 0x98	        55	progress.c	FUNCTION_2	CALL_1
0x400017f	      0xbe00000000	                              mov esi, 0	        55	progress.c	FUNCTION_2	CALL_1
0x4000184	          0x4889c7	                            mov rdi, rax	        55	progress.c	FUNCTION_2	CALL_1
0x4000187	      0xe800000000	                          call 0x400018c	        55	progress.c	FUNCTION_2	CALL_1
0x400018c	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	        56	progress.c	FUNCTION_2
0x4000197	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	        57	progress.c	FUNCTION_2	CALL_2
0x400019e	        0x4883c008	                              add rax, 8	        57	progress.c	FUNCTION_2	CALL_2
0x40001a2	          0x4889c7	                            mov rdi, rax	        57	progress.c	FUNCTION_2	CALL_2
0x40001a5	      0xe800000000	                          call 0x40001aa	        57	progress.c	FUNCTION_2	CALL_2
0x40001aa	    0xc745e8000000	      mov dword [rbp - 0x18], 0x10000000	        58	progress.c	FUNCTION_2
0x40001b1	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	        59	progress.c	FUNCTION_2	CALL_3
0x40001b8	      0xba00000000	                              mov edx, 0	        59	progress.c	FUNCTION_2	CALL_3
0x40001bd	          0x4889c6	                            mov rsi, rax	        59	progress.c	FUNCTION_2	CALL_3
0x40001c0	      0xbf0e000000	                            mov edi, 0xe	        59	progress.c	FUNCTION_2	CALL_3
0x40001c5	      0xe800000000	                          call 0x40001ca	        59	progress.c	FUNCTION_2	CALL_3
0x40001ca	    0x48c78540ffff	               mov qword [rbp - 0xc0], 1	        61	progress.c	FUNCTION_2
0x40001d5	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	        62	progress.c	FUNCTION_2
0x40001e0	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        63	progress.c	FUNCTION_2
0x40001e7	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	        63	progress.c	FUNCTION_2
0x40001ee	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	        63	progress.c	FUNCTION_2
0x40001f5	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	        63	progress.c	FUNCTION_2
0x40001fc	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	        64	progress.c	FUNCTION_2	CALL_4
0x4000203	      0xba00000000	                              mov edx, 0	        64	progress.c	FUNCTION_2	CALL_4
0x4000208	          0x4889c6	                            mov rsi, rax	        64	progress.c	FUNCTION_2	CALL_4
0x400020b	      0xbf00000000	                              mov edi, 0	        64	progress.c	FUNCTION_2	CALL_4
0x4000210	      0xe800000000	                          call 0x4000215	        64	progress.c	FUNCTION_2	CALL_4
0x4000215	              0x90	                                     nop	        65	progress.c	FUNCTION_2
0x4000216	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	progress.c	FUNCTION_2
0x400021a	    0x644833042528	                xor rax, qword fs:[0x28]	        65	progress.c	FUNCTION_2
0x4000223	            0x7405	                            je 0x400022a	        65	progress.c	FUNCTION_2
0x4000225	      0xe800000000	                          call 0x400022a	        65	progress.c	FUNCTION_2
0x400022a	              0xc9	                                   leave	        65	progress.c	FUNCTION_2
0x400022b	              0xc3	                                     ret	        65	progress.c	FUNCTION_2
