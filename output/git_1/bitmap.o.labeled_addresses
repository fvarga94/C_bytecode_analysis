bitmap_equals	IF,3:SWITCH,0:CALL,0:FOR,2:functions,0:ELSE,1:WHILE,0:DO,0	46
0x40004d9	        0x488b4608	                mov rax, qword [rsi + 8]	       179	bitmap.c	FUNCTION_11	IF_1
0x40004dd	        0x48394708	                cmp qword [rdi + 8], rax	       179	bitmap.c	FUNCTION_11	IF_1
0x40004e1	            0x7209	                            jb 0x40004ec	       179	bitmap.c	FUNCTION_11	IF_1
0x40004e3	          0x4889f0	                            mov rax, rsi	       179	bitmap.c	FUNCTION_11	IF_1
0x40004e6	          0x4889fe	                            mov rsi, rdi	       184	bitmap.c	FUNCTION_11	ELSE_1
0x40004e9	          0x4889c7	                            mov rdi, rax	       183	bitmap.c	FUNCTION_11	ELSE_1
0x40004ec	        0x488b5708	                mov rdx, qword [rdi + 8]	       187	bitmap.c	FUNCTION_11	FOR_1
0x40004f0	          0x4885d2	                           test rdx, rdx	       187	bitmap.c	FUNCTION_11	FOR_1
0x40004f3	            0x7428	                            je 0x400051d	       187	bitmap.c	FUNCTION_11	FOR_1
0x40004f5	          0x488b0f	                    mov rcx, qword [rdi]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40004f8	          0x488b3e	                    mov rdi, qword [rsi]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40004fb	          0x488b07	                    mov rax, qword [rdi]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40004fe	          0x483901	                    cmp qword [rcx], rax	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000501	            0x7545	                           jne 0x4000548	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000503	      0xb800000000	                              mov eax, 0	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000508	            0xeb0a	                           jmp 0x4000514	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x400050a	        0x4c8b04c7	             mov r8, qword [rdi + rax*8]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x400050e	        0x4c3904c1	            cmp qword [rcx + rax*8], r8 	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000512	            0x753a	                           jne 0x400054e	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000514	        0x4883c001	                              add rax, 1	       187	bitmap.c	FUNCTION_11	FOR_1
0x4000518	          0x4839d0	                            cmp rax, rdx	       187	bitmap.c	FUNCTION_11	FOR_1
0x400051b	            0x75ed	                           jne 0x400050a	       187	bitmap.c	FUNCTION_11	FOR_1
0x400051d	        0x488b4608	                mov rax, qword [rsi + 8]	       192	bitmap.c	FUNCTION_11	FOR_2
0x4000521	          0x4839c2	                            cmp rdx, rax	       192	bitmap.c	FUNCTION_11	FOR_2
0x4000524	            0x732e	                           jae 0x4000554	       192	bitmap.c	FUNCTION_11	FOR_2
0x4000526	          0x488b0e	                    mov rcx, qword [rsi]	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000529	      0x48833cd100	              cmp qword [rcx + rdx*8], 0	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x400052e	            0x7409	                            je 0x4000539	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000530	            0xeb28	                           jmp 0x400055a	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000532	      0x48833cd100	              cmp qword [rcx + rdx*8], 0	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000537	            0x7527	                           jne 0x4000560	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000539	        0x4883c201	                              add rdx, 1	       192	bitmap.c	FUNCTION_11	FOR_2
0x400053d	          0x4839c2	                            cmp rdx, rax	       192	bitmap.c	FUNCTION_11	FOR_2
0x4000540	            0x72f0	                            jb 0x4000532	       192	bitmap.c	FUNCTION_11	FOR_2
0x4000542	      0xb801000000	                              mov eax, 1	       197	bitmap.c	FUNCTION_11
0x4000547	              0xc3	                                     ret	       197	bitmap.c	FUNCTION_11
0x4000548	      0xb800000000	                              mov eax, 0	       189	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x400054d	              0xc3	                                     ret	       189	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x400054e	      0xb800000000	                              mov eax, 0	       189	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000553	              0xc3	                                     ret	       189	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000554	      0xb801000000	                              mov eax, 1	       197	bitmap.c	FUNCTION_11
0x4000559	              0xc3	                                     ret	       197	bitmap.c	FUNCTION_11
0x400055a	      0xb800000000	                              mov eax, 0	       194	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x400055f	              0xc3	                                     ret	       194	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000560	      0xb800000000	                              mov eax, 0	       194	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000565	              0xc3	                                     ret	       198	bitmap.c	FUNCTION_11
bitmap_set	IF,1:SWITCH,0:CALL,4:FOR,0:functions,0:ELSE,0:WHILE,0:DO,0	35
0x400006d	            0x4155	                                push r13	        34	bitmap.c	FUNCTION_2
0x400006f	            0x4154	                                push r12	        34	bitmap.c	FUNCTION_2
0x4000071	              0x55	                                push rbp	        34	bitmap.c	FUNCTION_2
0x4000072	              0x53	                                push rbx	        34	bitmap.c	FUNCTION_2
0x4000073	        0x4883ec08	                              sub rsp, 8	        34	bitmap.c	FUNCTION_2
0x4000077	          0x4889fb	                            mov rbx, rdi	        34	bitmap.c	FUNCTION_2
0x400007a	          0x4989f4	                            mov r12, rsi	        34	bitmap.c	FUNCTION_2
0x400007d	          0x4889f5	                            mov rbp, rsi	        35	bitmap.c	FUNCTION_2	CALL_1
0x4000080	        0x48c1ed06	                              shr rbp, 6	        35	bitmap.c	FUNCTION_2	CALL_1
0x4000084	        0x4c8b6f08	                mov r13, qword [rdi + 8]	        37	bitmap.c	FUNCTION_2	IF_1
0x4000088	          0x4c39ed	                            cmp rbp, r13	        37	bitmap.c	FUNCTION_2	IF_1
0x400008b	            0x7231	                            jb 0x40000be	        37	bitmap.c	FUNCTION_2	IF_1
0x400008d	      0x488d742d00	                    lea rsi, [rbp + rbp]	        39	bitmap.c	FUNCTION_2	IF_1
0x4000092	        0x48897708	                mov qword [rdi + 8], rsi	        39	bitmap.c	FUNCTION_2	IF_1
0x4000096	        0x48c1e603	                              shl rsi, 3	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x400009a	          0x488b3f	                    mov rdi, qword [rdi]	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x400009d	      0xe800000000	                          call 0x40000a2	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x40000a2	          0x488903	                    mov qword [rbx], rax	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x40000a5	        0x488b5308	                mov rdx, qword [rbx + 8]	        90	string3.h	FUNCTION_17	CALL_6
0x40000a9	          0x4c29ea	                            sub rdx, r13	        90	string3.h	FUNCTION_17	CALL_6
0x40000ac	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_17	CALL_6
0x40000b0	        0x4a8d3ce8	                  lea rdi, [rax + r13*8]	        90	string3.h	FUNCTION_17	CALL_6
0x40000b4	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_17	CALL_6
0x40000b9	      0xe800000000	                          call 0x40000be	        90	string3.h	FUNCTION_17	CALL_6
0x40000be	          0x488b13	                    mov rdx, qword [rbx]	        45	bitmap.c	FUNCTION_2	CALL_4
0x40000c1	      0xb801000000	                              mov eax, 1	        45	bitmap.c	FUNCTION_2	CALL_4
0x40000c6	          0x4489e1	                           mov ecx, r12d	        45	bitmap.c	FUNCTION_2	CALL_4
0x40000c9	          0x48d3e0	                             shl rax, cl	        45	bitmap.c	FUNCTION_2	CALL_4
0x40000cc	        0x480904ea	             or qword [rdx + rbp*8], rax	        45	bitmap.c	FUNCTION_2	CALL_4
0x40000d0	        0x4883c408	                              add rsp, 8	        46	bitmap.c	FUNCTION_2
0x40000d4	              0x5b	                                 pop rbx	        46	bitmap.c	FUNCTION_2
0x40000d5	              0x5d	                                 pop rbp	        46	bitmap.c	FUNCTION_2
0x40000d6	            0x415c	                                 pop r12	        46	bitmap.c	FUNCTION_2
0x40000d8	            0x415d	                                 pop r13	        46	bitmap.c	FUNCTION_2
0x40000da	              0xc3	                                     ret	        46	bitmap.c	FUNCTION_2
bitmap_clear	IF,1:SWITCH,0:CALL,2:FOR,0:functions,0:ELSE,0:WHILE,0:DO,0	11
0x40000db	          0x4889f2	                            mov rdx, rsi	        50	bitmap.c	FUNCTION_3	CALL_1
0x40000de	        0x48c1ea06	                              shr rdx, 6	        50	bitmap.c	FUNCTION_3	CALL_1
0x40000e2	        0x483b5708	                cmp rdx, qword [rdi + 8]	        52	bitmap.c	FUNCTION_3	IF_1
0x40000e6	            0x7314	                           jae 0x40000fc	        52	bitmap.c	FUNCTION_3	IF_1
0x40000e8	          0x488b3f	                    mov rdi, qword [rdi]	        53	bitmap.c	FUNCTION_3	CALL_2
0x40000eb	      0xb801000000	                              mov eax, 1	        53	bitmap.c	FUNCTION_3	CALL_2
0x40000f0	            0x89f1	                            mov ecx, esi	        53	bitmap.c	FUNCTION_3	CALL_2
0x40000f2	          0x48d3e0	                             shl rax, cl	        53	bitmap.c	FUNCTION_3	CALL_2
0x40000f5	          0x48f7d0	                                 not rax	        53	bitmap.c	FUNCTION_3	CALL_2
0x40000f8	        0x482104d7	            and qword [rdi + rdx*8], rax	        53	bitmap.c	FUNCTION_3	CALL_2
0x40000fc	            0xf3c3	                                     ret	        53	bitmap.c	FUNCTION_3	CALL_2
bitmap_and_not	IF,0:SWITCH,0:CALL,0:FOR,1:functions,0:ELSE,0:WHILE,0:DO,0	15
0x400029e	        0x4c8b4708	                 mov r8, qword [rdi + 8]	       110	bitmap.c	FUNCTION_7
0x40002a2	        0x4c394608	                 cmp qword [rsi + 8], r8	       110	bitmap.c	FUNCTION_7
0x40002a6	      0x4c0f464608	              cmovbe r8, qword [rsi + 8]	       110	bitmap.c	FUNCTION_7
0x40002ab	          0x4d85c0	                             test r8, r8	       115	bitmap.c	FUNCTION_7	FOR_1
0x40002ae	            0x741f	                            je 0x40002cf	       115	bitmap.c	FUNCTION_7	FOR_1
0x40002b0	      0xb800000000	                              mov eax, 0	       115	bitmap.c	FUNCTION_7	FOR_1
0x40002b5	          0x488b0f	                    mov rcx, qword [rdi]	       116	bitmap.c	FUNCTION_7	FOR_1
0x40002b8	          0x488b16	                    mov rdx, qword [rsi]	       116	bitmap.c	FUNCTION_7	FOR_1
0x40002bb	        0x488b14c2	            mov rdx, qword [rdx + rax*8]	       116	bitmap.c	FUNCTION_7	FOR_1
0x40002bf	          0x48f7d2	                                 not rdx	       116	bitmap.c	FUNCTION_7	FOR_1
0x40002c2	        0x482114c1	            and qword [rcx + rax*8], rdx	       116	bitmap.c	FUNCTION_7	FOR_1
0x40002c6	        0x4883c001	                              add rax, 1	       115	bitmap.c	FUNCTION_7	FOR_1
0x40002ca	          0x4939c0	                             cmp r8, rax	       115	bitmap.c	FUNCTION_7	FOR_1
0x40002cd	            0x75e6	                           jne 0x40002b5	       115	bitmap.c	FUNCTION_7	FOR_1
0x40002cf	            0xf3c3	                                     ret	       115	bitmap.c	FUNCTION_7	FOR_1
bitmap_new	IF,0:SWITCH,0:CALL,2:FOR,0:functions,0:ELSE,0:WHILE,0:DO,0	12
0x4000040	              0x53	                                push rbx	        26	bitmap.c	FUNCTION_1
0x4000041	      0xbf10000000	                           mov edi, 0x10	        27	bitmap.c	FUNCTION_1	CALL_1
0x4000046	      0xe800000000	                          call 0x400004b	        27	bitmap.c	FUNCTION_1	CALL_1
0x400004b	          0x4889c3	                            mov rbx, rax	        27	bitmap.c	FUNCTION_1	CALL_1
0x400004e	      0xbe08000000	                              mov esi, 8	        28	bitmap.c	FUNCTION_1	CALL_2
0x4000053	      0xbf20000000	                           mov edi, 0x20	        28	bitmap.c	FUNCTION_1	CALL_2
0x4000058	      0xe800000000	                          call 0x400005d	        28	bitmap.c	FUNCTION_1	CALL_2
0x400005d	          0x488903	                    mov qword [rbx], rax	        28	bitmap.c	FUNCTION_1	CALL_2
0x4000060	    0x48c743082000	               mov qword [rbx + 8], 0x20	        29	bitmap.c	FUNCTION_1
0x4000068	          0x4889d8	                            mov rax, rbx	        31	bitmap.c	FUNCTION_1
0x400006b	              0x5b	                                 pop rbx	        31	bitmap.c	FUNCTION_1
0x400006c	              0xc3	                                     ret	        31	bitmap.c	FUNCTION_1
bitmap_free	IF,1:SWITCH,0:CALL,2:FOR,0:functions,0:ELSE,0:WHILE,0:DO,0	10
0x4000588	          0x4885ff	                           test rdi, rdi	       207	bitmap.c	FUNCTION_13	IF_1
0x400058b	            0x7415	                            je 0x40005a2	       207	bitmap.c	FUNCTION_13	IF_1
0x400058d	              0x53	                                push rbx	       206	bitmap.c	FUNCTION_13
0x400058e	          0x4889fb	                            mov rbx, rdi	       206	bitmap.c	FUNCTION_13
0x4000591	          0x488b3f	                    mov rdi, qword [rdi]	       210	bitmap.c	FUNCTION_13	CALL_1
0x4000594	      0xe800000000	                          call 0x4000599	       210	bitmap.c	FUNCTION_13	CALL_1
0x4000599	          0x4889df	                            mov rdi, rbx	       211	bitmap.c	FUNCTION_13	CALL_2
0x400059c	      0xe800000000	                          call 0x40005a1	       211	bitmap.c	FUNCTION_13	CALL_2
0x40005a1	              0x5b	                                 pop rbx	       212	bitmap.c	FUNCTION_13
0x40005a2	            0xf3c3	                                     ret	       212	bitmap.c	FUNCTION_13
bitmap_popcount	IF,0:SWITCH,0:CALL,1:FOR,1:functions,0:ELSE,0:WHILE,0:DO,0	38
0x400044b	        0x488b4708	                mov rax, qword [rdi + 8]	       168	bitmap.c	FUNCTION_10	FOR_1
0x400044f	          0x4885c0	                           test rax, rax	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000452	            0x747d	                            je 0x40004d1	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000454	              0x53	                                push rbx	       165	bitmap.c	FUNCTION_10
0x4000455	          0x488b3f	                    mov rdi, qword [rdi]	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000458	        0x488d1cc7	                  lea rbx, [rdi + rax*8]	       169	bitmap.c	FUNCTION_10	CALL_1
0x400045c	      0xb800000000	                              mov eax, 0	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000461	    0x49ba55555555	          movabs r10, 0x5555555555555555	        34	ewok.h	FUNCTION_26
0x400046b	    0x49b933333333	           movabs r9, 0x3333333333333333	        35	ewok.h	FUNCTION_26
0x4000475	    0x49b80f0f0f0f	            movabs r8, 0xf0f0f0f0f0f0f0f	        36	ewok.h	FUNCTION_26
0x400047f	    0x49bb01010101	           movabs r11, 0x101010101010101	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000489	          0x488b37	                    mov rsi, qword [rdi]	       169	bitmap.c	FUNCTION_10	CALL_1
0x400048c	          0x4889f1	                            mov rcx, rsi	        34	ewok.h	FUNCTION_26
0x400048f	          0x48d1e9	                              shr rcx, 1	        34	ewok.h	FUNCTION_26
0x4000492	          0x4c21d1	                            and rcx, r10	        34	ewok.h	FUNCTION_26
0x4000495	          0x4c21d6	                            and rsi, r10	        34	ewok.h	FUNCTION_26
0x4000498	          0x4801f1	                            add rcx, rsi	        34	ewok.h	FUNCTION_26
0x400049b	          0x4889ca	                            mov rdx, rcx	        35	ewok.h	FUNCTION_26
0x400049e	          0x4c21ca	                             and rdx, r9	        35	ewok.h	FUNCTION_26
0x40004a1	        0x48c1e902	                              shr rcx, 2	        35	ewok.h	FUNCTION_26
0x40004a5	          0x4c21c9	                             and rcx, r9	        35	ewok.h	FUNCTION_26
0x40004a8	          0x4801ca	                            add rdx, rcx	        35	ewok.h	FUNCTION_26
0x40004ab	          0x4889d1	                            mov rcx, rdx	        36	ewok.h	FUNCTION_26
0x40004ae	          0x4c21c1	                             and rcx, r8	        36	ewok.h	FUNCTION_26
0x40004b1	        0x48c1ea04	                              shr rdx, 4	        36	ewok.h	FUNCTION_26
0x40004b5	          0x4c21c2	                             and rdx, r8	        36	ewok.h	FUNCTION_26
0x40004b8	          0x4801ca	                            add rdx, rcx	       169	bitmap.c	FUNCTION_10	CALL_1
0x40004bb	        0x490fafd3	                           imul rdx, r11	       169	bitmap.c	FUNCTION_10	CALL_1
0x40004bf	        0x48c1ea38	                           shr rdx, 0x38	       169	bitmap.c	FUNCTION_10	CALL_1
0x40004c3	          0x4801d0	                            add rax, rdx	       169	bitmap.c	FUNCTION_10	CALL_1
0x40004c6	        0x4883c708	                              add rdi, 8	       169	bitmap.c	FUNCTION_10	CALL_1
0x40004ca	          0x4839fb	                            cmp rbx, rdi	       168	bitmap.c	FUNCTION_10	FOR_1
0x40004cd	            0x75ba	                           jne 0x4000489	       168	bitmap.c	FUNCTION_10	FOR_1
0x40004cf	            0xeb06	                           jmp 0x40004d7	       168	bitmap.c	FUNCTION_10	FOR_1
0x40004d1	      0xb800000000	                              mov eax, 0	       166	bitmap.c	FUNCTION_10
0x40004d6	              0xc3	                                     ret	       166	bitmap.c	FUNCTION_10
0x40004d7	              0x5b	                                 pop rbx	       172	bitmap.c	FUNCTION_10
0x40004d8	              0xc3	                                     ret	       172	bitmap.c	FUNCTION_10
bitmap_to_ewah	IF,3:SWITCH,0:CALL,4:FOR,1:functions,0:ELSE,0:WHILE,0:DO,0	46
0x4000121	            0x4156	                                push r14	        64	bitmap.c	FUNCTION_5
0x4000123	            0x4155	                                push r13	        64	bitmap.c	FUNCTION_5
0x4000125	            0x4154	                                push r12	        64	bitmap.c	FUNCTION_5
0x4000127	              0x55	                                push rbp	        64	bitmap.c	FUNCTION_5
0x4000128	              0x53	                                push rbx	        64	bitmap.c	FUNCTION_5
0x4000129	          0x4889fd	                            mov rbp, rdi	        64	bitmap.c	FUNCTION_5
0x400012c	      0xe800000000	                          call 0x4000131	        65	bitmap.c	FUNCTION_5	CALL_1
0x4000131	          0x4989c6	                            mov r14, rax	        65	bitmap.c	FUNCTION_5	CALL_1
0x4000134	      0x48837d0800	                  cmp qword [rbp + 8], 0	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000139	            0x7465	                            je 0x40001a0	        69	bitmap.c	FUNCTION_5	FOR_1
0x400013b	      0xbe00000000	                              mov esi, 0	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000140	    0x41bc00000000	                             mov r12d, 0	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000146	      0xbb00000000	                              mov ebx, 0	        69	bitmap.c	FUNCTION_5	FOR_1
0x400014b	    0x4c8d2cdd0000	                        lea r13, [rbx*8]	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000153	        0x488b4500	                    mov rax, qword [rbp]	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x4000157	      0x48833cd800	              cmp qword [rax + rbx*8], 0	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x400015c	            0x7506	                           jne 0x4000164	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x400015e	        0x4983c401	                              add r12, 1	        71	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x4000162	            0xeb30	                           jmp 0x4000194	        72	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x4000164	          0x4885f6	                           test rsi, rsi	        75	bitmap.c	FUNCTION_5	FOR_1	IF_2
0x4000167	            0x7408	                            je 0x4000171	        75	bitmap.c	FUNCTION_5	FOR_1	IF_2
0x4000169	          0x4c89f7	                            mov rdi, r14	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x400016c	      0xe800000000	                          call 0x4000171	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x4000171	          0x4d85e4	                           test r12, r12	        78	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x4000174	            0x7410	                            je 0x4000186	        78	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x4000176	          0x4c89e2	                            mov rdx, r12	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x4000179	      0xbe00000000	                              mov esi, 0	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x400017e	          0x4c89f7	                            mov rdi, r14	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x4000181	      0xe800000000	                          call 0x4000186	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x4000186	        0x488b4500	                    mov rax, qword [rbp]	        83	bitmap.c	FUNCTION_5	FOR_1
0x400018a	        0x4a8b3428	              mov rsi, qword [rax + r13]	        83	bitmap.c	FUNCTION_5	FOR_1
0x400018e	    0x41bc00000000	                             mov r12d, 0	        83	bitmap.c	FUNCTION_5	FOR_1
0x4000194	        0x4883c301	                              add rbx, 1	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000198	        0x48395d08	                cmp qword [rbp + 8], rbx	        69	bitmap.c	FUNCTION_5	FOR_1
0x400019c	            0x77ad	                            ja 0x400014b	        69	bitmap.c	FUNCTION_5	FOR_1
0x400019e	            0xeb05	                           jmp 0x40001a5	        69	bitmap.c	FUNCTION_5	FOR_1
0x40001a0	      0xbe00000000	                              mov esi, 0	        67	bitmap.c	FUNCTION_5
0x40001a5	          0x4c89f7	                            mov rdi, r14	        86	bitmap.c	FUNCTION_5	CALL_4
0x40001a8	      0xe800000000	                          call 0x40001ad	        86	bitmap.c	FUNCTION_5	CALL_4
0x40001ad	          0x4c89f0	                            mov rax, r14	        88	bitmap.c	FUNCTION_5
0x40001b0	              0x5b	                                 pop rbx	        88	bitmap.c	FUNCTION_5
0x40001b1	              0x5d	                                 pop rbp	        88	bitmap.c	FUNCTION_5
0x40001b2	            0x415c	                                 pop r12	        88	bitmap.c	FUNCTION_5
0x40001b4	            0x415d	                                 pop r13	        88	bitmap.c	FUNCTION_5
0x40001b6	            0x415e	                                 pop r14	        88	bitmap.c	FUNCTION_5
0x40001b8	              0xc3	                                     ret	        88	bitmap.c	FUNCTION_5
bitmap_each_bit	IF,2:SWITCH,0:CALL,3:FOR,3:functions,0:ELSE,1:WHILE,0:DO,0	62
0x4000389	      0x48837f0800	                  cmp qword [rdi + 8], 0	       144	bitmap.c	FUNCTION_9	FOR_1
0x400038e	     0xf84b5000000	                            je 0x4000449	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000394	            0x4157	                                push r15	       141	bitmap.c	FUNCTION_9
0x4000396	            0x4156	                                push r14	       141	bitmap.c	FUNCTION_9
0x4000398	            0x4155	                                push r13	       141	bitmap.c	FUNCTION_9
0x400039a	            0x4154	                                push r12	       141	bitmap.c	FUNCTION_9
0x400039c	              0x55	                                push rbp	       141	bitmap.c	FUNCTION_9
0x400039d	              0x53	                                push rbx	       141	bitmap.c	FUNCTION_9
0x400039e	        0x4883ec18	                           sub rsp, 0x18	       141	bitmap.c	FUNCTION_9
0x40003a2	          0x4989d5	                            mov r13, rdx	       141	bitmap.c	FUNCTION_9
0x40003a5	          0x4989f4	                            mov r12, rsi	       141	bitmap.c	FUNCTION_9
0x40003a8	      0x48897c2408	                mov qword [rsp + 8], rdi	       141	bitmap.c	FUNCTION_9
0x40003ad	    0x41be40000000	                          mov r14d, 0x40	       144	bitmap.c	FUNCTION_9	FOR_1
0x40003b3	    0x48c704240000	                      mov qword [rsp], 0	       144	bitmap.c	FUNCTION_9	FOR_1
0x40003bb	        0x488b1424	                    mov rdx, qword [rsp]	       144	bitmap.c	FUNCTION_9	FOR_1
0x40003bf	          0x4889d3	                            mov rbx, rdx	       144	bitmap.c	FUNCTION_9	FOR_1
0x40003c2	        0x48c1e306	                              shl rbx, 6	       144	bitmap.c	FUNCTION_9	FOR_1
0x40003c6	      0x488b442408	                mov rax, qword [rsp + 8]	       145	bitmap.c	FUNCTION_9	FOR_1
0x40003cb	          0x488b00	                    mov rax, qword [rax]	       145	bitmap.c	FUNCTION_9	FOR_1
0x40003ce	        0x4c8b3cd0	            mov r15, qword [rax + rdx*8]	       145	bitmap.c	FUNCTION_9	FOR_1
0x40003d2	        0x4983ffff	             cmp r15, 0xffffffffffffffff	       148	bitmap.c	FUNCTION_9	FOR_1	IF_1
0x40003d6	            0x740f	                            je 0x40003e7	       148	bitmap.c	FUNCTION_9	FOR_1	IF_1
0x40003d8	          0x4d85ff	                           test r15, r15	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40003db	            0x7446	                            je 0x4000423	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40003dd	          0x4c89fd	                            mov rbp, r15	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40003e0	      0xb900000000	                              mov ecx, 0	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40003e5	            0xeb22	                           jmp 0x4000409	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40003e7	        0x488d6b01	                      lea rbp, [rbx + 1]	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x40003eb	          0x4c89ee	                            mov rsi, r13	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x40003ee	          0x4889df	                            mov rdi, rbx	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x40003f1	          0x41ffd4	                                call r12	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x40003f4	          0x4889eb	                            mov rbx, rbp	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x40003f7	          0x4c39f5	                            cmp rbp, r14	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x40003fa	            0x75eb	                           jne 0x40003e7	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x40003fc	            0xeb25	                           jmp 0x4000423	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x40003fe	          0x4c89fd	                            mov rbp, r15	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x4000401	          0x48d3ed	                             shr rbp, cl	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x4000404	          0x4885ed	                           test rbp, rbp	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x4000407	            0x741a	                            je 0x4000423	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x4000409	      0xf3480fbced	                          tzcnt rbp, rbp	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x400040e	             0x1cd	                            add ebp, ecx	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x4000410	            0x89ef	                            mov edi, ebp	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_3
0x4000412	          0x4801df	                            add rdi, rbx	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_3
0x4000415	          0x4c89ee	                            mov rsi, r13	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_3
0x4000418	          0x41ffd4	                                call r12	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_3
0x400041b	          0x8d4d01	                      lea ecx, [rbp + 1]	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x400041e	          0x83f93f	                           cmp ecx, 0x3f	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x4000421	            0x76db	                           jbe 0x40003fe	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x4000423	      0x4883042401	                      add qword [rsp], 1	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000428	        0x488b0424	                    mov rax, qword [rsp]	       144	bitmap.c	FUNCTION_9	FOR_1
0x400042c	        0x4983c640	                           add r14, 0x40	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000430	      0x488b542408	                mov rdx, qword [rsp + 8]	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000435	        0x48394208	                cmp qword [rdx + 8], rax	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000439	            0x7780	                            ja 0x40003bb	       144	bitmap.c	FUNCTION_9	FOR_1
0x400043b	        0x4883c418	                           add rsp, 0x18	       162	bitmap.c	FUNCTION_9
0x400043f	              0x5b	                                 pop rbx	       162	bitmap.c	FUNCTION_9
0x4000440	              0x5d	                                 pop rbp	       162	bitmap.c	FUNCTION_9
0x4000441	            0x415c	                                 pop r12	       162	bitmap.c	FUNCTION_9
0x4000443	            0x415d	                                 pop r13	       162	bitmap.c	FUNCTION_9
0x4000445	            0x415e	                                 pop r14	       162	bitmap.c	FUNCTION_9
0x4000447	            0x415f	                                 pop r15	       162	bitmap.c	FUNCTION_9
0x4000449	            0xf3c3	                                     ret	       162	bitmap.c	FUNCTION_9
bitmap_or_ewah	IF,1:SWITCH,0:CALL,4:FOR,0:functions,0:ELSE,0:WHILE,1:DO,0	50
0x40002d1	            0x4154	                                push r12	       120	bitmap.c	FUNCTION_8
0x40002d3	              0x55	                                push rbp	       120	bitmap.c	FUNCTION_8
0x40002d4	              0x53	                                push rbx	       120	bitmap.c	FUNCTION_8
0x40002d5	        0x4883ec60	                           sub rsp, 0x60	       120	bitmap.c	FUNCTION_8
0x40002d9	          0x4889fd	                            mov rbp, rdi	       120	bitmap.c	FUNCTION_8
0x40002dc	          0x4989f4	                            mov r12, rsi	       120	bitmap.c	FUNCTION_8
0x40002df	    0x64488b042528	                mov rax, qword fs:[0x28]	       120	bitmap.c	FUNCTION_8
0x40002e8	      0x4889442458	             mov qword [rsp + 0x58], rax	       120	bitmap.c	FUNCTION_8
0x40002ed	            0x31c0	                            xor eax, eax	       120	bitmap.c	FUNCTION_8
0x40002ef	        0x488b5f08	                mov rbx, qword [rdi + 8]	       121	bitmap.c	FUNCTION_8
0x40002f3	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	       122	bitmap.c	FUNCTION_8
0x40002f7	        0x48c1ee06	                              shr rsi, 6	       122	bitmap.c	FUNCTION_8
0x40002fb	        0x4883c601	                              add rsi, 1	       122	bitmap.c	FUNCTION_8
0x40002ff	          0x4839f3	                            cmp rbx, rsi	       127	bitmap.c	FUNCTION_8	IF_1
0x4000302	            0x732d	                           jae 0x4000331	       127	bitmap.c	FUNCTION_8	IF_1
0x4000304	        0x48897708	                mov qword [rdi + 8], rsi	       128	bitmap.c	FUNCTION_8	IF_1
0x4000308	        0x48c1e603	                              shl rsi, 3	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x400030c	          0x488b3f	                    mov rdi, qword [rdi]	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x400030f	      0xe800000000	                          call 0x4000314	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x4000314	        0x48894500	                    mov qword [rbp], rax	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x4000318	        0x488b5508	                mov rdx, qword [rbp + 8]	        90	string3.h	FUNCTION_17	CALL_6
0x400031c	          0x4829da	                            sub rdx, rbx	        90	string3.h	FUNCTION_17	CALL_6
0x400031f	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_17	CALL_6
0x4000323	        0x488d3cd8	                  lea rdi, [rax + rbx*8]	        90	string3.h	FUNCTION_17	CALL_6
0x4000327	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_17	CALL_6
0x400032c	      0xe800000000	                          call 0x4000331	        90	string3.h	FUNCTION_17	CALL_6
0x4000331	          0x4c89e6	                            mov rsi, r12	       134	bitmap.c	FUNCTION_8	CALL_3
0x4000334	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       134	bitmap.c	FUNCTION_8	CALL_3
0x4000339	      0xe800000000	                          call 0x400033e	       134	bitmap.c	FUNCTION_8	CALL_3
0x400033e	      0xbb00000000	                              mov ebx, 0	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x4000343	            0xeb13	                           jmp 0x4000358	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x4000345	          0x4889d8	                            mov rax, rbx	       137	bitmap.c	FUNCTION_8	WHILE_1
0x4000348	        0x48034500	                    add rax, qword [rbp]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x400034c	      0x488b542408	                mov rdx, qword [rsp + 8]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x4000351	          0x480910	                     or qword [rax], rdx	       137	bitmap.c	FUNCTION_8	WHILE_1
0x4000354	        0x4883c308	                              add rbx, 8	       137	bitmap.c	FUNCTION_8	WHILE_1
0x4000358	      0x488d742410	                   lea rsi, [rsp + 0x10]	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x400035d	      0x488d7c2408	                      lea rdi, [rsp + 8]	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x4000362	      0xe800000000	                          call 0x4000367	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x4000367	            0x85c0	                           test eax, eax	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x4000369	            0x75da	                           jne 0x4000345	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x400036b	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       138	bitmap.c	FUNCTION_8
0x4000370	    0x644833042528	                xor rax, qword fs:[0x28]	       138	bitmap.c	FUNCTION_8
0x4000379	            0x7405	                            je 0x4000380	       138	bitmap.c	FUNCTION_8
0x400037b	      0xe800000000	                          call 0x4000380	       138	bitmap.c	FUNCTION_8
0x4000380	        0x4883c460	                           add rsp, 0x60	       138	bitmap.c	FUNCTION_8
0x4000384	              0x5b	                                 pop rbx	       138	bitmap.c	FUNCTION_8
0x4000385	              0x5d	                                 pop rbp	       138	bitmap.c	FUNCTION_8
0x4000386	            0x415c	                                 pop r12	       138	bitmap.c	FUNCTION_8
0x4000388	              0xc3	                                     ret	       138	bitmap.c	FUNCTION_8
bitmap_reset	IF,0:SWITCH,0:CALL,1:FOR,0:functions,0:ELSE,0:WHILE,0:DO,0	8
0x4000566	        0x4883ec08	                              sub rsp, 8	       201	bitmap.c	FUNCTION_12
0x400056a	        0x488b4708	                mov rax, qword [rdi + 8]	        90	string3.h	FUNCTION_17	CALL_6
0x400056e	    0x488d14c50000	                        lea rdx, [rax*8]	        90	string3.h	FUNCTION_17	CALL_6
0x4000576	          0x488b3f	                    mov rdi, qword [rdi]	        90	string3.h	FUNCTION_17	CALL_6
0x4000579	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_17	CALL_6
0x400057e	      0xe800000000	                          call 0x4000583	        90	string3.h	FUNCTION_17	CALL_6
0x4000583	        0x4883c408	                              add rsp, 8	       203	bitmap.c	FUNCTION_12
0x4000587	              0xc3	                                     ret	       203	bitmap.c	FUNCTION_12
bitmap_get	IF,0:SWITCH,0:CALL,2:FOR,0:functions,0:ELSE,0:WHILE,0:DO,0	11
0x40000fe	          0x4889f2	                            mov rdx, rsi	        58	bitmap.c	FUNCTION_4	CALL_1
0x4000101	        0x48c1ea06	                              shr rdx, 6	        58	bitmap.c	FUNCTION_4	CALL_1
0x4000105	      0xb800000000	                              mov eax, 0	        59	bitmap.c	FUNCTION_4
0x400010a	        0x483b5708	                cmp rdx, qword [rdi + 8]	        59	bitmap.c	FUNCTION_4
0x400010e	            0x730f	                           jae 0x400011f	        59	bitmap.c	FUNCTION_4
0x4000110	          0x488b07	                    mov rax, qword [rdi]	        60	bitmap.c	FUNCTION_4	CALL_2
0x4000113	        0x488b04d0	            mov rax, qword [rax + rdx*8]	        59	bitmap.c	FUNCTION_4
0x4000117	            0x89f1	                            mov ecx, esi	        59	bitmap.c	FUNCTION_4
0x4000119	          0x48d3e8	                             shr rax, cl	        59	bitmap.c	FUNCTION_4
0x400011c	          0x83e001	                              and eax, 1	        59	bitmap.c	FUNCTION_4
0x400011f	            0xf3c3	                                     ret	        61	bitmap.c	FUNCTION_4
ewah_to_bitmap	IF,0:SWITCH,0:CALL,4:FOR,0:functions,0:ELSE,0:WHILE,1:DO,0	59
0x40001b9	            0x4155	                                push r13	        91	bitmap.c	FUNCTION_6
0x40001bb	            0x4154	                                push r12	        91	bitmap.c	FUNCTION_6
0x40001bd	              0x55	                                push rbp	        91	bitmap.c	FUNCTION_6
0x40001be	              0x53	                                push rbx	        91	bitmap.c	FUNCTION_6
0x40001bf	        0x4883ec68	                           sub rsp, 0x68	        91	bitmap.c	FUNCTION_6
0x40001c3	          0x4889fb	                            mov rbx, rdi	        91	bitmap.c	FUNCTION_6
0x40001c6	    0x64488b042528	                mov rax, qword fs:[0x28]	        91	bitmap.c	FUNCTION_6
0x40001cf	      0x4889442458	             mov qword [rsp + 0x58], rax	        91	bitmap.c	FUNCTION_6
0x40001d4	            0x31c0	                            xor eax, eax	        91	bitmap.c	FUNCTION_6
0x40001d6	      0xe800000000	                          call 0x40001db	        92	bitmap.c	FUNCTION_6	CALL_1
0x40001db	          0x4889c5	                            mov rbp, rax	        92	bitmap.c	FUNCTION_6	CALL_1
0x40001de	          0x4889de	                            mov rsi, rbx	        97	bitmap.c	FUNCTION_6	CALL_2
0x40001e1	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        97	bitmap.c	FUNCTION_6	CALL_2
0x40001e6	      0xe800000000	                          call 0x40001eb	        97	bitmap.c	FUNCTION_6	CALL_2
0x40001eb	    0x41bc00000000	                             mov r12d, 0	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x40001f1	      0xbb00000000	                              mov ebx, 0	        95	bitmap.c	FUNCTION_6
0x40001f6	    0x49bdffffffff	         movabs r13, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_42	IF_1	CALL_1
0x4000200	            0xeb62	                           jmp 0x4000264	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000202	        0x4883c301	                              add rbx, 1	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000206	        0x488b4508	                mov rax, qword [rbp + 8]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400020a	          0x4839c3	                            cmp rbx, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400020d	            0x7644	                           jbe 0x4000253	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400020f	      0x488d744030	          lea rsi, [rax + rax*2 + 0x30] 	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000214	          0x48d1ee	                              shr rsi, 1	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000217	          0x4839f3	                            cmp rbx, rsi	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400021a	        0x480f47f3	                          cmova rsi, rbx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400021e	        0x48897508	                mov qword [rbp + 8], rsi	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000222	          0x4889f2	                            mov rdx, rsi	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000225	          0x4c39ee	                            cmp rsi, r13	       795	git-compat-util.h	FUNCTION_42	IF_1	CALL_1
0x4000228	            0x7614	                           jbe 0x400023e	       795	git-compat-util.h	FUNCTION_42	IF_1	CALL_1
0x400022a	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_42	IF_1	CALL_2
0x400022f	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_42	IF_1	CALL_2
0x4000234	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_42	IF_1	CALL_2
0x4000239	      0xe800000000	                          call 0x400023e	       796	git-compat-util.h	FUNCTION_42	IF_1	CALL_2
0x400023e	    0x488d34f50000	                        lea rsi, [rsi*8]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000246	        0x488b7d00	                    mov rdi, qword [rbp]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400024a	      0xe800000000	                          call 0x400024f	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400024f	        0x48894500	                    mov qword [rbp], rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000253	        0x488b4500	                    mov rax, qword [rbp]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4000257	      0x488b542408	                mov rdx, qword [rsp + 8]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x400025c	        0x4a891420	              mov qword [rax + r12], rdx	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4000260	        0x4983c408	                              add r12, 8	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4000264	      0x488d742410	                   lea rsi, [rsp + 0x10]	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000269	      0x488d7c2408	                      lea rdi, [rsp + 8]	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x400026e	      0xe800000000	                          call 0x4000273	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000273	            0x85c0	                           test eax, eax	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000275	            0x758b	                           jne 0x4000202	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000277	        0x48895d08	                mov qword [rbp + 8], rbx	       104	bitmap.c	FUNCTION_6
0x400027b	          0x4889e8	                            mov rax, rbp	       106	bitmap.c	FUNCTION_6
0x400027e	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       106	bitmap.c	FUNCTION_6
0x4000283	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       106	bitmap.c	FUNCTION_6
0x400028c	            0x7405	                            je 0x4000293	       106	bitmap.c	FUNCTION_6
0x400028e	      0xe800000000	                          call 0x4000293	       106	bitmap.c	FUNCTION_6
0x4000293	        0x4883c468	                           add rsp, 0x68	       106	bitmap.c	FUNCTION_6
0x4000297	              0x5b	                                 pop rbx	       106	bitmap.c	FUNCTION_6
0x4000298	              0x5d	                                 pop rbp	       106	bitmap.c	FUNCTION_6
0x4000299	            0x415c	                                 pop r12	       106	bitmap.c	FUNCTION_6
0x400029b	            0x415d	                                 pop r13	       106	bitmap.c	FUNCTION_6
0x400029d	              0xc3	                                     ret	       106	bitmap.c	FUNCTION_6
