bitmap_and_not	CALL,0:IF,0:SWITCH,0:WHILE,0:FOR,1:functions,0:DO,0:ELSE,0	40
0x400055f	              0x55	                                push rbp	       109	bitmap.c	FUNCTION_7
0x4000560	          0x4889e5	                            mov rbp, rsp	       109	bitmap.c	FUNCTION_7
0x4000563	        0x48897de8	             mov qword [rbp - 0x18], rdi	       109	bitmap.c	FUNCTION_7
0x4000567	        0x488975e0	             mov qword [rbp - 0x20], rsi	       109	bitmap.c	FUNCTION_7
0x400056b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       111	bitmap.c	FUNCTION_7
0x400056f	        0x488b5008	                mov rdx, qword [rax + 8]	       111	bitmap.c	FUNCTION_7
0x4000573	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       111	bitmap.c	FUNCTION_7
0x4000577	        0x488b4008	                mov rax, qword [rax + 8]	       111	bitmap.c	FUNCTION_7
0x400057b	          0x4839c2	                            cmp rdx, rax	       110	bitmap.c	FUNCTION_7
0x400057e	        0x480f46c2	                         cmovbe rax, rdx	       110	bitmap.c	FUNCTION_7
0x4000582	        0x488945f8	                mov qword [rbp - 8], rax	       110	bitmap.c	FUNCTION_7
0x4000586	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       115	bitmap.c	FUNCTION_7	FOR_1
0x400058e	            0xeb4a	                           jmp 0x40005da	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000590	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       116	bitmap.c	FUNCTION_7	FOR_1
0x4000594	          0x488b00	                    mov rax, qword [rax]	       116	bitmap.c	FUNCTION_7	FOR_1
0x4000597	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       116	bitmap.c	FUNCTION_7	FOR_1
0x400059b	        0x48c1e203	                              shl rdx, 3	       116	bitmap.c	FUNCTION_7	FOR_1
0x400059f	          0x4801c2	                            add rdx, rax	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005a6	          0x488b00	                    mov rax, qword [rax]	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005a9	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005ad	        0x48c1e103	                              shl rcx, 3	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005b1	          0x4801c8	                            add rax, rcx	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005b4	          0x488b08	                    mov rcx, qword [rax]	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005b7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005bb	          0x488b00	                    mov rax, qword [rax]	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005be	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005c2	        0x48c1e603	                              shl rsi, 3	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005c6	          0x4801f0	                            add rax, rsi	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005c9	          0x488b00	                    mov rax, qword [rax]	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005cc	          0x48f7d0	                                 not rax	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005cf	          0x4821c8	                            and rax, rcx	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005d2	          0x488902	                    mov qword [rdx], rax	       116	bitmap.c	FUNCTION_7	FOR_1
0x40005d5	      0x488345f001	               add qword [rbp - 0x10], 1	       115	bitmap.c	FUNCTION_7	FOR_1
0x40005da	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       115	bitmap.c	FUNCTION_7	FOR_1
0x40005de	        0x483b45f8	                cmp rax, qword [rbp - 8]	       115	bitmap.c	FUNCTION_7	FOR_1
0x40005e2	            0x72ac	                            jb 0x4000590	       115	bitmap.c	FUNCTION_7	FOR_1
0x40005e4	              0x90	                                     nop	       117	bitmap.c	FUNCTION_7
0x40005e5	              0x5d	                                 pop rbp	       117	bitmap.c	FUNCTION_7
0x40005e6	              0xc3	                                     ret	       117	bitmap.c	FUNCTION_7
bitmap_set	CALL,1:IF,1:SWITCH,0:WHILE,0:FOR,0:functions,0:DO,0:ELSE,0	66
0x4000179	              0x55	                                push rbp	        34	bitmap.c	FUNCTION_2
0x400017a	          0x4889e5	                            mov rbp, rsp	        34	bitmap.c	FUNCTION_2
0x400017d	        0x4883ec20	                           sub rsp, 0x20	        34	bitmap.c	FUNCTION_2
0x4000181	        0x48897de8	             mov qword [rbp - 0x18], rdi	        34	bitmap.c	FUNCTION_2
0x4000185	        0x488975e0	             mov qword [rbp - 0x20], rsi	        34	bitmap.c	FUNCTION_2
0x4000189	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        35	bitmap.c	FUNCTION_2
0x400018d	        0x48c1e806	                              shr rax, 6	        35	bitmap.c	FUNCTION_2
0x4000191	        0x488945f0	             mov qword [rbp - 0x10], rax	        35	bitmap.c	FUNCTION_2
0x4000195	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        37	bitmap.c	FUNCTION_2	IF_1
0x4000199	        0x488b4008	                mov rax, qword [rax + 8]	        37	bitmap.c	FUNCTION_2	IF_1
0x400019d	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        37	bitmap.c	FUNCTION_2	IF_1
0x40001a1	     0xf8783000000	                            ja 0x400022a	        37	bitmap.c	FUNCTION_2	IF_1
0x40001a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        38	bitmap.c	FUNCTION_2	IF_1
0x40001ab	        0x488b4008	                mov rax, qword [rax + 8]	        38	bitmap.c	FUNCTION_2	IF_1
0x40001af	        0x488945f8	                mov qword [rbp - 8], rax	        38	bitmap.c	FUNCTION_2	IF_1
0x40001b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        39	bitmap.c	FUNCTION_2	IF_1
0x40001b7	        0x488d1400	                    lea rdx, [rax + rax]	        39	bitmap.c	FUNCTION_2	IF_1
0x40001bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        39	bitmap.c	FUNCTION_2	IF_1
0x40001bf	        0x48895008	                mov qword [rax + 8], rdx	        39	bitmap.c	FUNCTION_2	IF_1
0x40001c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	bitmap.c	FUNCTION_2	IF_1
0x40001c7	        0x488b4008	                mov rax, qword [rax + 8]	        40	bitmap.c	FUNCTION_2	IF_1
0x40001cb	          0x4889c6	                            mov rsi, rax	        40	bitmap.c	FUNCTION_2	IF_1
0x40001ce	      0xbf08000000	                              mov edi, 8	        40	bitmap.c	FUNCTION_2	IF_1
0x40001d3	      0xe868feffff	                        call sym.st_mult	        40	bitmap.c	FUNCTION_2	IF_1
0x40001d8	          0x4889c2	                            mov rdx, rax	        40	bitmap.c	FUNCTION_2	IF_1
0x40001db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	bitmap.c	FUNCTION_2	IF_1
0x40001df	          0x488b00	                    mov rax, qword [rax]	        40	bitmap.c	FUNCTION_2	IF_1
0x40001e2	          0x4889d6	                            mov rsi, rdx	        40	bitmap.c	FUNCTION_2	IF_1
0x40001e5	          0x4889c7	                            mov rdi, rax	        40	bitmap.c	FUNCTION_2	IF_1
0x40001e8	      0xe800000000	                          call 0x40001ed	        40	bitmap.c	FUNCTION_2	IF_1
0x40001ed	          0x4889c2	                            mov rdx, rax	        40	bitmap.c	FUNCTION_2	IF_1
0x40001f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	bitmap.c	FUNCTION_2	IF_1
0x40001f4	          0x488910	                    mov qword [rax], rdx	        40	bitmap.c	FUNCTION_2	IF_1
0x40001f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        42	bitmap.c	FUNCTION_2	IF_1
0x40001fb	        0x488b4008	                mov rax, qword [rax + 8]	        42	bitmap.c	FUNCTION_2	IF_1
0x40001ff	        0x482b45f8	                sub rax, qword [rbp - 8]	        42	bitmap.c	FUNCTION_2	IF_1
0x4000203	    0x488d14c50000	                        lea rdx, [rax*8]	        41	bitmap.c	FUNCTION_2	IF_1	CALL_1
0x400020b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	bitmap.c	FUNCTION_2	IF_1	CALL_1
0x400020f	          0x488b00	                    mov rax, qword [rax]	        41	bitmap.c	FUNCTION_2	IF_1	CALL_1
0x4000212	        0x488b4df8	                mov rcx, qword [rbp - 8]	        41	bitmap.c	FUNCTION_2	IF_1	CALL_1
0x4000216	        0x48c1e103	                              shl rcx, 3	        41	bitmap.c	FUNCTION_2	IF_1	CALL_1
0x400021a	          0x4801c8	                            add rax, rcx	        41	bitmap.c	FUNCTION_2	IF_1	CALL_1
0x400021d	      0xbe00000000	                              mov esi, 0	        41	bitmap.c	FUNCTION_2	IF_1	CALL_1
0x4000222	          0x4889c7	                            mov rdi, rax	        41	bitmap.c	FUNCTION_2	IF_1	CALL_1
0x4000225	      0xe800000000	                          call 0x400022a	        41	bitmap.c	FUNCTION_2	IF_1	CALL_1
0x400022a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        45	bitmap.c	FUNCTION_2
0x400022e	          0x488b00	                    mov rax, qword [rax]	        45	bitmap.c	FUNCTION_2
0x4000231	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        45	bitmap.c	FUNCTION_2
0x4000235	        0x48c1e203	                              shl rdx, 3	        45	bitmap.c	FUNCTION_2
0x4000239	          0x4801c2	                            add rdx, rax	        45	bitmap.c	FUNCTION_2
0x400023c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        45	bitmap.c	FUNCTION_2
0x4000240	          0x488b00	                    mov rax, qword [rax]	        45	bitmap.c	FUNCTION_2
0x4000243	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        45	bitmap.c	FUNCTION_2
0x4000247	        0x48c1e103	                              shl rcx, 3	        45	bitmap.c	FUNCTION_2
0x400024b	          0x4801c8	                            add rax, rcx	        45	bitmap.c	FUNCTION_2
0x400024e	          0x488b00	                    mov rax, qword [rax]	        45	bitmap.c	FUNCTION_2
0x4000251	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        45	bitmap.c	FUNCTION_2
0x4000255	          0x83e13f	                           and ecx, 0x3f	        45	bitmap.c	FUNCTION_2
0x4000258	      0xbe01000000	                              mov esi, 1	        45	bitmap.c	FUNCTION_2
0x400025d	          0x48d3e6	                             shl rsi, cl	        45	bitmap.c	FUNCTION_2
0x4000260	          0x4889f1	                            mov rcx, rsi	        45	bitmap.c	FUNCTION_2
0x4000263	          0x4809c8	                             or rax, rcx	        45	bitmap.c	FUNCTION_2
0x4000266	          0x488902	                    mov qword [rdx], rax	        45	bitmap.c	FUNCTION_2
0x4000269	              0x90	                                     nop	        46	bitmap.c	FUNCTION_2
0x400026a	              0xc9	                                   leave	        46	bitmap.c	FUNCTION_2
0x400026b	              0xc3	                                     ret	        46	bitmap.c	FUNCTION_2
bitmap_reset	CALL,1:IF,0:SWITCH,0:WHILE,0:FOR,0:functions,0:DO,0:ELSE,0	15
0x400094d	              0x55	                                push rbp	       201	bitmap.c	FUNCTION_12
0x400094e	          0x4889e5	                            mov rbp, rsp	       201	bitmap.c	FUNCTION_12
0x4000951	        0x4883ec10	                           sub rsp, 0x10	       201	bitmap.c	FUNCTION_12
0x4000955	        0x48897df8	                mov qword [rbp - 8], rdi	       201	bitmap.c	FUNCTION_12
0x4000959	        0x488b45f8	                mov rax, qword [rbp - 8]	       202	bitmap.c	FUNCTION_12	CALL_1
0x400095d	        0x488b4008	                mov rax, qword [rax + 8]	       202	bitmap.c	FUNCTION_12	CALL_1
0x4000961	    0x488d14c50000	                        lea rdx, [rax*8]	       202	bitmap.c	FUNCTION_12	CALL_1
0x4000969	        0x488b45f8	                mov rax, qword [rbp - 8]	       202	bitmap.c	FUNCTION_12	CALL_1
0x400096d	          0x488b00	                    mov rax, qword [rax]	       202	bitmap.c	FUNCTION_12	CALL_1
0x4000970	      0xbe00000000	                              mov esi, 0	       202	bitmap.c	FUNCTION_12	CALL_1
0x4000975	          0x4889c7	                            mov rdi, rax	       202	bitmap.c	FUNCTION_12	CALL_1
0x4000978	      0xe800000000	                          call 0x400097d	       202	bitmap.c	FUNCTION_12	CALL_1
0x400097d	              0x90	                                     nop	       203	bitmap.c	FUNCTION_12
0x400097e	              0xc9	                                   leave	       203	bitmap.c	FUNCTION_12
0x400097f	              0xc3	                                     ret	       203	bitmap.c	FUNCTION_12
ewah_to_bitmap	CALL,4:IF,0:SWITCH,0:WHILE,1:FOR,0:functions,0:DO,0:ELSE,0	89
0x400040e	              0x55	                                push rbp	        91	bitmap.c	FUNCTION_6
0x400040f	          0x4889e5	                            mov rbp, rsp	        91	bitmap.c	FUNCTION_6
0x4000412	        0x4883c480	             add rsp, 0xffffffffffffff80	        91	bitmap.c	FUNCTION_6
0x4000416	        0x48897d88	             mov qword [rbp - 0x78], rdi	        91	bitmap.c	FUNCTION_6
0x400041a	    0x64488b042528	                mov rax, qword fs:[0x28]	        91	bitmap.c	FUNCTION_6
0x4000423	        0x488945f8	                mov qword [rbp - 8], rax	        91	bitmap.c	FUNCTION_6
0x4000427	            0x31c0	                            xor eax, eax	        91	bitmap.c	FUNCTION_6
0x4000429	      0xe800000000	                          call 0x400042e	        92	bitmap.c	FUNCTION_6	CALL_1
0x400042e	        0x488945a8	             mov qword [rbp - 0x58], rax	        92	bitmap.c	FUNCTION_6	CALL_1
0x4000432	    0x48c745a00000	               mov qword [rbp - 0x60], 0	        95	bitmap.c	FUNCTION_6
0x400043a	        0x488b5588	             mov rdx, qword [rbp - 0x78]	        97	bitmap.c	FUNCTION_6	CALL_2
0x400043e	        0x488d45b0	                   lea rax, [rbp - 0x50]	        97	bitmap.c	FUNCTION_6	CALL_2
0x4000442	          0x4889d6	                            mov rsi, rdx	        97	bitmap.c	FUNCTION_6	CALL_2
0x4000445	          0x4889c7	                            mov rdi, rax	        97	bitmap.c	FUNCTION_6	CALL_2
0x4000448	      0xe800000000	                          call 0x400044d	        97	bitmap.c	FUNCTION_6	CALL_2
0x400044d	      0xe9cc000000	                           jmp 0x400051e	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000452	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000456	        0x488d5001	                      lea rdx, [rax + 1]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400045a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400045e	        0x488b4008	                mov rax, qword [rax + 8]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000462	          0x4839c2	                            cmp rdx, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000465	     0xf8691000000	                           jbe 0x40004fc	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400046b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400046f	        0x488b5008	                mov rdx, qword [rax + 8]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000473	          0x4889d0	                            mov rax, rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000476	          0x4801c0	                            add rax, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000479	          0x4801d0	                            add rax, rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400047c	        0x4883c030	                           add rax, 0x30	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000480	          0x48d1e8	                              shr rax, 1	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000483	          0x4889c2	                            mov rdx, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000486	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400048a	        0x4883c001	                              add rax, 1	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400048e	          0x4839c2	                            cmp rdx, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000491	            0x7312	                           jae 0x40004a5	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000493	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000497	        0x488d5001	                      lea rdx, [rax + 1]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400049b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400049f	        0x48895008	                mov qword [rax + 8], rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004a3	            0xeb23	                           jmp 0x40004c8	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004a5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004a9	        0x488b5008	                mov rdx, qword [rax + 8]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004ad	          0x4889d0	                            mov rax, rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004b0	          0x4801c0	                            add rax, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004b3	          0x4801d0	                            add rax, rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004b6	        0x4883c030	                           add rax, 0x30	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004ba	          0x48d1e8	                              shr rax, 1	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004bd	          0x4889c2	                            mov rdx, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004c0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004c4	        0x48895008	                mov qword [rax + 8], rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004c8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004cc	        0x488b4008	                mov rax, qword [rax + 8]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004d0	          0x4889c6	                            mov rsi, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004d3	      0xbf08000000	                              mov edi, 8	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004d8	      0xe863fbffff	                        call sym.st_mult	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004dd	          0x4889c2	                            mov rdx, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004e0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004e4	          0x488b00	                    mov rax, qword [rax]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004e7	          0x4889d6	                            mov rsi, rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004ea	          0x4889c7	                            mov rdi, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004ed	      0xe800000000	                          call 0x40004f2	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004f2	          0x4889c2	                            mov rdx, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004f5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004f9	          0x488910	                    mov qword [rax], rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40004fc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4000500	          0x488b08	                    mov rcx, qword [rax]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4000503	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4000507	        0x488d5001	                      lea rdx, [rax + 1]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x400050b	        0x488955a0	             mov qword [rbp - 0x60], rdx	       101	bitmap.c	FUNCTION_6	WHILE_1
0x400050f	        0x48c1e003	                              shl rax, 3	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4000513	        0x488d1401	                    lea rdx, [rcx + rax]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4000517	        0x488b4598	             mov rax, qword [rbp - 0x68]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x400051b	          0x488902	                    mov qword [rdx], rax	       101	bitmap.c	FUNCTION_6	WHILE_1
0x400051e	        0x488d55b0	                   lea rdx, [rbp - 0x50]	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000522	        0x488d4598	                   lea rax, [rbp - 0x68]	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000526	          0x4889d6	                            mov rsi, rdx	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000529	          0x4889c7	                            mov rdi, rax	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x400052c	      0xe800000000	                          call 0x4000531	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000531	            0x85c0	                           test eax, eax	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000533	     0xf8519ffffff	                           jne 0x4000452	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000539	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       104	bitmap.c	FUNCTION_6
0x400053d	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       104	bitmap.c	FUNCTION_6
0x4000541	        0x48895008	                mov qword [rax + 8], rdx	       104	bitmap.c	FUNCTION_6
0x4000545	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       105	bitmap.c	FUNCTION_6
0x4000549	        0x488b4df8	                mov rcx, qword [rbp - 8]	       106	bitmap.c	FUNCTION_6
0x400054d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       106	bitmap.c	FUNCTION_6
0x4000556	            0x7405	                            je 0x400055d	       106	bitmap.c	FUNCTION_6
0x4000558	      0xe800000000	                          call 0x400055d	       106	bitmap.c	FUNCTION_6
0x400055d	              0xc9	                                   leave	       106	bitmap.c	FUNCTION_6
0x400055e	              0xc3	                                     ret	       106	bitmap.c	FUNCTION_6
bitmap_get	CALL,0:IF,0:SWITCH,0:WHILE,0:FOR,0:functions,0:DO,0:ELSE,0	30
0x40002d7	              0x55	                                push rbp	        57	bitmap.c	FUNCTION_4
0x40002d8	          0x4889e5	                            mov rbp, rsp	        57	bitmap.c	FUNCTION_4
0x40002db	        0x48897de8	             mov qword [rbp - 0x18], rdi	        57	bitmap.c	FUNCTION_4
0x40002df	        0x488975e0	             mov qword [rbp - 0x20], rsi	        57	bitmap.c	FUNCTION_4
0x40002e3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        58	bitmap.c	FUNCTION_4
0x40002e7	        0x48c1e806	                              shr rax, 6	        58	bitmap.c	FUNCTION_4
0x40002eb	        0x488945f8	                mov qword [rbp - 8], rax	        58	bitmap.c	FUNCTION_4
0x40002ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        59	bitmap.c	FUNCTION_4
0x40002f3	        0x488b4008	                mov rax, qword [rax + 8]	        59	bitmap.c	FUNCTION_4
0x40002f7	        0x483b45f8	                cmp rax, qword [rbp - 8]	        59	bitmap.c	FUNCTION_4
0x40002fb	            0x7633	                           jbe 0x4000330	        59	bitmap.c	FUNCTION_4
0x40002fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        60	bitmap.c	FUNCTION_4
0x4000301	          0x488b00	                    mov rax, qword [rax]	        60	bitmap.c	FUNCTION_4
0x4000304	        0x488b55f8	                mov rdx, qword [rbp - 8]	        60	bitmap.c	FUNCTION_4
0x4000308	        0x48c1e203	                              shl rdx, 3	        60	bitmap.c	FUNCTION_4
0x400030c	          0x4801d0	                            add rax, rdx	        60	bitmap.c	FUNCTION_4
0x400030f	          0x488b10	                    mov rdx, qword [rax]	        60	bitmap.c	FUNCTION_4
0x4000312	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        60	bitmap.c	FUNCTION_4
0x4000316	          0x83e03f	                           and eax, 0x3f	        60	bitmap.c	FUNCTION_4
0x4000319	            0x89c1	                            mov ecx, eax	        60	bitmap.c	FUNCTION_4
0x400031b	          0x48d3ea	                             shr rdx, cl	        60	bitmap.c	FUNCTION_4
0x400031e	          0x4889d0	                            mov rax, rdx	        60	bitmap.c	FUNCTION_4
0x4000321	          0x83e001	                              and eax, 1	        60	bitmap.c	FUNCTION_4
0x4000324	          0x4885c0	                           test rax, rax	        59	bitmap.c	FUNCTION_4
0x4000327	            0x7407	                            je 0x4000330	        59	bitmap.c	FUNCTION_4
0x4000329	      0xb801000000	                              mov eax, 1	        59	bitmap.c	FUNCTION_4
0x400032e	            0xeb05	                           jmp 0x4000335	        59	bitmap.c	FUNCTION_4
0x4000330	      0xb800000000	                              mov eax, 0	        59	bitmap.c	FUNCTION_4
0x4000335	              0x5d	                                 pop rbp	        61	bitmap.c	FUNCTION_4
0x4000336	              0xc3	                                     ret	        61	bitmap.c	FUNCTION_4
bitmap_equals	CALL,0:IF,3:SWITCH,0:WHILE,0:FOR,2:functions,0:DO,0:ELSE,1	61
0x400087a	              0x55	                                push rbp	       175	bitmap.c	FUNCTION_11
0x400087b	          0x4889e5	                            mov rbp, rsp	       175	bitmap.c	FUNCTION_11
0x400087e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       175	bitmap.c	FUNCTION_11
0x4000882	        0x488975d0	             mov qword [rbp - 0x30], rsi	       175	bitmap.c	FUNCTION_11
0x4000886	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       179	bitmap.c	FUNCTION_11	IF_1
0x400088a	        0x488b5008	                mov rdx, qword [rax + 8]	       179	bitmap.c	FUNCTION_11	IF_1
0x400088e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       179	bitmap.c	FUNCTION_11	IF_1
0x4000892	        0x488b4008	                mov rax, qword [rax + 8]	       179	bitmap.c	FUNCTION_11	IF_1
0x4000896	          0x4839c2	                            cmp rdx, rax	       179	bitmap.c	FUNCTION_11	IF_1
0x4000899	            0x7312	                           jae 0x40008ad	       179	bitmap.c	FUNCTION_11	IF_1
0x400089b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       180	bitmap.c	FUNCTION_11	IF_1
0x400089f	        0x488945f0	             mov qword [rbp - 0x10], rax	       180	bitmap.c	FUNCTION_11	IF_1
0x40008a3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       181	bitmap.c	FUNCTION_11	IF_1
0x40008a7	        0x488945e8	             mov qword [rbp - 0x18], rax	       181	bitmap.c	FUNCTION_11	IF_1
0x40008ab	            0xeb10	                           jmp 0x40008bd	       181	bitmap.c	FUNCTION_11	IF_1
0x40008ad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       183	bitmap.c	FUNCTION_11	ELSE_1
0x40008b1	        0x488945f0	             mov qword [rbp - 0x10], rax	       183	bitmap.c	FUNCTION_11	ELSE_1
0x40008b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       184	bitmap.c	FUNCTION_11	ELSE_1
0x40008b9	        0x488945e8	             mov qword [rbp - 0x18], rax	       184	bitmap.c	FUNCTION_11	ELSE_1
0x40008bd	    0x48c745f80000	                  mov qword [rbp - 8], 0	       187	bitmap.c	FUNCTION_11	FOR_1
0x40008c5	            0xeb3b	                           jmp 0x4000902	       187	bitmap.c	FUNCTION_11	FOR_1
0x40008c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008cb	          0x488b00	                    mov rax, qword [rax]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008ce	        0x488b55f8	                mov rdx, qword [rbp - 8]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008d2	        0x48c1e203	                              shl rdx, 3	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008d6	          0x4801d0	                            add rax, rdx	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008d9	          0x488b10	                    mov rdx, qword [rax]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008e0	          0x488b00	                    mov rax, qword [rax]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008e3	        0x488b4df8	                mov rcx, qword [rbp - 8]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008e7	        0x48c1e103	                              shl rcx, 3	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008eb	          0x4801c8	                            add rax, rcx	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008ee	          0x488b00	                    mov rax, qword [rax]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008f1	          0x4839c2	                            cmp rdx, rax	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008f4	            0x7407	                            je 0x40008fd	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008f6	      0xb800000000	                              mov eax, 0	       189	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008fb	            0xeb4e	                           jmp 0x400094b	       189	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008fd	      0x488345f801	                  add qword [rbp - 8], 1	       187	bitmap.c	FUNCTION_11	FOR_1
0x4000902	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       187	bitmap.c	FUNCTION_11	FOR_1
0x4000906	        0x488b4008	                mov rax, qword [rax + 8]	       187	bitmap.c	FUNCTION_11	FOR_1
0x400090a	        0x483b45f8	                cmp rax, qword [rbp - 8]	       187	bitmap.c	FUNCTION_11	FOR_1
0x400090e	            0x77b7	                            ja 0x40008c7	       187	bitmap.c	FUNCTION_11	FOR_1
0x4000910	            0xeb26	                           jmp 0x4000938	       192	bitmap.c	FUNCTION_11	FOR_2
0x4000912	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000916	          0x488b00	                    mov rax, qword [rax]	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000919	        0x488b55f8	                mov rdx, qword [rbp - 8]	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x400091d	        0x48c1e203	                              shl rdx, 3	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000921	          0x4801d0	                            add rax, rdx	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000924	          0x488b00	                    mov rax, qword [rax]	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000927	          0x4885c0	                           test rax, rax	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x400092a	            0x7407	                            je 0x4000933	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x400092c	      0xb800000000	                              mov eax, 0	       194	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000931	            0xeb18	                           jmp 0x400094b	       194	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000933	      0x488345f801	                  add qword [rbp - 8], 1	       192	bitmap.c	FUNCTION_11	FOR_2
0x4000938	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       192	bitmap.c	FUNCTION_11	FOR_2
0x400093c	        0x488b4008	                mov rax, qword [rax + 8]	       192	bitmap.c	FUNCTION_11	FOR_2
0x4000940	        0x483b45f8	                cmp rax, qword [rbp - 8]	       192	bitmap.c	FUNCTION_11	FOR_2
0x4000944	            0x77cc	                            ja 0x4000912	       192	bitmap.c	FUNCTION_11	FOR_2
0x4000946	      0xb801000000	                              mov eax, 1	       197	bitmap.c	FUNCTION_11
0x400094b	              0x5d	                                 pop rbp	       198	bitmap.c	FUNCTION_11
0x400094c	              0xc3	                                     ret	       198	bitmap.c	FUNCTION_11
bitmap_or_ewah	CALL,3:IF,1:SWITCH,0:WHILE,1:FOR,0:functions,0:DO,0:ELSE,0	85
0x40005e7	              0x55	                                push rbp	       120	bitmap.c	FUNCTION_8
0x40005e8	          0x4889e5	                            mov rbp, rsp	       120	bitmap.c	FUNCTION_8
0x40005eb	        0x4883c480	             add rsp, 0xffffffffffffff80	       120	bitmap.c	FUNCTION_8
0x40005ef	        0x48897d88	             mov qword [rbp - 0x78], rdi	       120	bitmap.c	FUNCTION_8
0x40005f3	        0x48897580	             mov qword [rbp - 0x80], rsi	       120	bitmap.c	FUNCTION_8
0x40005f7	    0x64488b042528	                mov rax, qword fs:[0x28]	       120	bitmap.c	FUNCTION_8
0x4000600	        0x488945f8	                mov qword [rbp - 8], rax	       120	bitmap.c	FUNCTION_8
0x4000604	            0x31c0	                            xor eax, eax	       120	bitmap.c	FUNCTION_8
0x4000606	        0x488b4588	             mov rax, qword [rbp - 0x78]	       121	bitmap.c	FUNCTION_8
0x400060a	        0x488b4008	                mov rax, qword [rax + 8]	       121	bitmap.c	FUNCTION_8
0x400060e	        0x488945a0	             mov qword [rbp - 0x60], rax	       121	bitmap.c	FUNCTION_8
0x4000612	        0x488b4580	             mov rax, qword [rbp - 0x80]	       122	bitmap.c	FUNCTION_8
0x4000616	        0x488b4018	            mov rax, qword [rax + 0x18] 	       122	bitmap.c	FUNCTION_8
0x400061a	        0x48c1e806	                              shr rax, 6	       122	bitmap.c	FUNCTION_8
0x400061e	        0x4883c001	                              add rax, 1	       122	bitmap.c	FUNCTION_8
0x4000622	        0x488945a8	             mov qword [rbp - 0x58], rax	       122	bitmap.c	FUNCTION_8
0x4000626	    0x48c745980000	               mov qword [rbp - 0x68], 0	       123	bitmap.c	FUNCTION_8
0x400062e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       127	bitmap.c	FUNCTION_8	IF_1
0x4000632	        0x488b4008	                mov rax, qword [rax + 8]	       127	bitmap.c	FUNCTION_8	IF_1
0x4000636	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       127	bitmap.c	FUNCTION_8	IF_1
0x400063a	            0x7373	                           jae 0x40006af	       127	bitmap.c	FUNCTION_8	IF_1
0x400063c	        0x488b4588	             mov rax, qword [rbp - 0x78]	       128	bitmap.c	FUNCTION_8	IF_1
0x4000640	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       128	bitmap.c	FUNCTION_8	IF_1
0x4000644	        0x48895008	                mov qword [rax + 8], rdx	       128	bitmap.c	FUNCTION_8	IF_1
0x4000648	        0x488b4588	             mov rax, qword [rbp - 0x78]	       129	bitmap.c	FUNCTION_8	IF_1
0x400064c	        0x488b4008	                mov rax, qword [rax + 8]	       129	bitmap.c	FUNCTION_8	IF_1
0x4000650	          0x4889c6	                            mov rsi, rax	       129	bitmap.c	FUNCTION_8	IF_1
0x4000653	      0xbf08000000	                              mov edi, 8	       129	bitmap.c	FUNCTION_8	IF_1
0x4000658	      0xe8e3f9ffff	                        call sym.st_mult	       129	bitmap.c	FUNCTION_8	IF_1
0x400065d	          0x4889c2	                            mov rdx, rax	       129	bitmap.c	FUNCTION_8	IF_1
0x4000660	        0x488b4588	             mov rax, qword [rbp - 0x78]	       129	bitmap.c	FUNCTION_8	IF_1
0x4000664	          0x488b00	                    mov rax, qword [rax]	       129	bitmap.c	FUNCTION_8	IF_1
0x4000667	          0x4889d6	                            mov rsi, rdx	       129	bitmap.c	FUNCTION_8	IF_1
0x400066a	          0x4889c7	                            mov rdi, rax	       129	bitmap.c	FUNCTION_8	IF_1
0x400066d	      0xe800000000	                          call 0x4000672	       129	bitmap.c	FUNCTION_8	IF_1
0x4000672	          0x4889c2	                            mov rdx, rax	       129	bitmap.c	FUNCTION_8	IF_1
0x4000675	        0x488b4588	             mov rax, qword [rbp - 0x78]	       129	bitmap.c	FUNCTION_8	IF_1
0x4000679	          0x488910	                    mov qword [rax], rdx	       129	bitmap.c	FUNCTION_8	IF_1
0x400067c	        0x488b4588	             mov rax, qword [rbp - 0x78]	       131	bitmap.c	FUNCTION_8	IF_1
0x4000680	        0x488b4008	                mov rax, qword [rax + 8]	       131	bitmap.c	FUNCTION_8	IF_1
0x4000684	        0x482b45a0	             sub rax, qword [rbp - 0x60]	       131	bitmap.c	FUNCTION_8	IF_1
0x4000688	    0x488d14c50000	                        lea rdx, [rax*8]	       130	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x4000690	        0x488b4588	             mov rax, qword [rbp - 0x78]	       130	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x4000694	          0x488b00	                    mov rax, qword [rax]	       130	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x4000697	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       130	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x400069b	        0x48c1e103	                              shl rcx, 3	       130	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x400069f	          0x4801c8	                            add rax, rcx	       130	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x40006a2	      0xbe00000000	                              mov esi, 0	       130	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x40006a7	          0x4889c7	                            mov rdi, rax	       130	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x40006aa	      0xe800000000	                          call 0x40006af	       130	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x40006af	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       134	bitmap.c	FUNCTION_8	CALL_2
0x40006b3	        0x488d45b0	                   lea rax, [rbp - 0x50]	       134	bitmap.c	FUNCTION_8	CALL_2
0x40006b7	          0x4889d6	                            mov rsi, rdx	       134	bitmap.c	FUNCTION_8	CALL_2
0x40006ba	          0x4889c7	                            mov rdi, rax	       134	bitmap.c	FUNCTION_8	CALL_2
0x40006bd	      0xe800000000	                          call 0x40006c2	       134	bitmap.c	FUNCTION_8	CALL_2
0x40006c2	            0xeb39	                           jmp 0x40006fd	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x40006c4	        0x488b4588	             mov rax, qword [rbp - 0x78]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40006c8	          0x488b08	                    mov rcx, qword [rax]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40006cb	        0x488b4598	             mov rax, qword [rbp - 0x68]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40006cf	        0x488d5001	                      lea rdx, [rax + 1]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40006d3	        0x48895598	             mov qword [rbp - 0x68], rdx	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40006d7	    0x488d14c50000	                        lea rdx, [rax*8]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40006df	          0x4801d1	                            add rcx, rdx	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40006e2	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40006e6	          0x488b12	                    mov rdx, qword [rdx]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40006e9	        0x48c1e003	                              shl rax, 3	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40006ed	          0x4801d0	                            add rax, rdx	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40006f0	          0x488b10	                    mov rdx, qword [rax]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40006f3	        0x488b4590	             mov rax, qword [rbp - 0x70]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40006f7	          0x4809d0	                             or rax, rdx	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40006fa	          0x488901	                    mov qword [rcx], rax	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40006fd	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x4000701	        0x488d4590	                   lea rax, [rbp - 0x70]	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x4000705	          0x4889d6	                            mov rsi, rdx	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x4000708	          0x4889c7	                            mov rdi, rax	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x400070b	      0xe800000000	                          call 0x4000710	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x4000710	            0x85c0	                           test eax, eax	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x4000712	            0x75b0	                           jne 0x40006c4	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x4000714	              0x90	                                     nop	       138	bitmap.c	FUNCTION_8
0x4000715	        0x488b45f8	                mov rax, qword [rbp - 8]	       138	bitmap.c	FUNCTION_8
0x4000719	    0x644833042528	                xor rax, qword fs:[0x28]	       138	bitmap.c	FUNCTION_8
0x4000722	            0x7405	                            je 0x4000729	       138	bitmap.c	FUNCTION_8
0x4000724	      0xe800000000	                          call 0x4000729	       138	bitmap.c	FUNCTION_8
0x4000729	              0xc9	                                   leave	       138	bitmap.c	FUNCTION_8
0x400072a	              0xc3	                                     ret	       138	bitmap.c	FUNCTION_8
ewah_bit_popcount64	CALL,0:IF,0:SWITCH,0:WHILE,0:FOR,0:functions,0:DO,0:ELSE,0	36
0x4000092	              0x55	                                push rbp	        33	ewok.h	FUNCTION_14
0x4000093	          0x4889e5	                            mov rbp, rsp	        33	ewok.h	FUNCTION_14
0x4000096	        0x48897df8	                mov qword [rbp - 8], rdi	        33	ewok.h	FUNCTION_14
0x400009a	    0x48b855555555	          movabs rax, 0x5555555555555555	        34	ewok.h	FUNCTION_14
0x40000a4	        0x482345f8	                and rax, qword [rbp - 8]	        34	ewok.h	FUNCTION_14
0x40000a8	        0x488b55f8	                mov rdx, qword [rbp - 8]	        34	ewok.h	FUNCTION_14
0x40000ac	          0x4889d1	                            mov rcx, rdx	        34	ewok.h	FUNCTION_14
0x40000af	          0x48d1e9	                              shr rcx, 1	        34	ewok.h	FUNCTION_14
0x40000b2	    0x48ba55555555	          movabs rdx, 0x5555555555555555	        34	ewok.h	FUNCTION_14
0x40000bc	          0x4821ca	                            and rdx, rcx	        34	ewok.h	FUNCTION_14
0x40000bf	          0x4801d0	                            add rax, rdx	        34	ewok.h	FUNCTION_14
0x40000c2	        0x488945f8	                mov qword [rbp - 8], rax	        34	ewok.h	FUNCTION_14
0x40000c6	    0x48b833333333	          movabs rax, 0x3333333333333333	        35	ewok.h	FUNCTION_14
0x40000d0	        0x482345f8	                and rax, qword [rbp - 8]	        35	ewok.h	FUNCTION_14
0x40000d4	        0x488b55f8	                mov rdx, qword [rbp - 8]	        35	ewok.h	FUNCTION_14
0x40000d8	          0x4889d1	                            mov rcx, rdx	        35	ewok.h	FUNCTION_14
0x40000db	        0x48c1e902	                              shr rcx, 2	        35	ewok.h	FUNCTION_14
0x40000df	    0x48ba33333333	          movabs rdx, 0x3333333333333333	        35	ewok.h	FUNCTION_14
0x40000e9	          0x4821ca	                            and rdx, rcx	        35	ewok.h	FUNCTION_14
0x40000ec	          0x4801d0	                            add rax, rdx	        35	ewok.h	FUNCTION_14
0x40000ef	        0x488945f8	                mov qword [rbp - 8], rax	        35	ewok.h	FUNCTION_14
0x40000f3	    0x48b80f0f0f0f	           movabs rax, 0xf0f0f0f0f0f0f0f	        36	ewok.h	FUNCTION_14
0x40000fd	        0x482345f8	                and rax, qword [rbp - 8]	        36	ewok.h	FUNCTION_14
0x4000101	        0x488b55f8	                mov rdx, qword [rbp - 8]	        36	ewok.h	FUNCTION_14
0x4000105	          0x4889d1	                            mov rcx, rdx	        36	ewok.h	FUNCTION_14
0x4000108	        0x48c1e904	                              shr rcx, 4	        36	ewok.h	FUNCTION_14
0x400010c	    0x48ba0f0f0f0f	           movabs rdx, 0xf0f0f0f0f0f0f0f	        36	ewok.h	FUNCTION_14
0x4000116	          0x4821ca	                            and rdx, rcx	        36	ewok.h	FUNCTION_14
0x4000119	          0x4801d0	                            add rax, rdx	        36	ewok.h	FUNCTION_14
0x400011c	        0x488945f8	                mov qword [rbp - 8], rax	        36	ewok.h	FUNCTION_14
0x4000120	        0x488b55f8	                mov rdx, qword [rbp - 8]	        37	ewok.h	FUNCTION_14
0x4000124	    0x48b801010101	           movabs rax, 0x101010101010101	        37	ewok.h	FUNCTION_14
0x400012e	        0x480fafc2	                           imul rax, rdx	        37	ewok.h	FUNCTION_14
0x4000132	        0x48c1e838	                           shr rax, 0x38	        37	ewok.h	FUNCTION_14
0x4000136	              0x5d	                                 pop rbp	        38	ewok.h	FUNCTION_14
0x4000137	              0xc3	                                     ret	        38	ewok.h	FUNCTION_14
bitmap_free	CALL,2:IF,1:SWITCH,0:WHILE,0:FOR,0:functions,0:DO,0:ELSE,0	17
0x4000980	              0x55	                                push rbp	       206	bitmap.c	FUNCTION_13
0x4000981	          0x4889e5	                            mov rbp, rsp	       206	bitmap.c	FUNCTION_13
0x4000984	        0x4883ec10	                           sub rsp, 0x10	       206	bitmap.c	FUNCTION_13
0x4000988	        0x48897df8	                mov qword [rbp - 8], rdi	       206	bitmap.c	FUNCTION_13
0x400098c	      0x48837df800	                  cmp qword [rbp - 8], 0	       207	bitmap.c	FUNCTION_13	IF_1
0x4000991	            0x741d	                            je 0x40009b0	       207	bitmap.c	FUNCTION_13	IF_1
0x4000993	        0x488b45f8	                mov rax, qword [rbp - 8]	       210	bitmap.c	FUNCTION_13	CALL_1
0x4000997	          0x488b00	                    mov rax, qword [rax]	       210	bitmap.c	FUNCTION_13	CALL_1
0x400099a	          0x4889c7	                            mov rdi, rax	       210	bitmap.c	FUNCTION_13	CALL_1
0x400099d	      0xe800000000	                          call 0x40009a2	       210	bitmap.c	FUNCTION_13	CALL_1
0x40009a2	        0x488b45f8	                mov rax, qword [rbp - 8]	       211	bitmap.c	FUNCTION_13	CALL_2
0x40009a6	          0x4889c7	                            mov rdi, rax	       211	bitmap.c	FUNCTION_13	CALL_2
0x40009a9	      0xe800000000	                          call 0x40009ae	       211	bitmap.c	FUNCTION_13	CALL_2
0x40009ae	            0xeb01	                           jmp 0x40009b1	       211	bitmap.c	FUNCTION_13	CALL_2
0x40009b0	              0x90	                                     nop	       208	bitmap.c	FUNCTION_13	IF_1
0x40009b1	              0xc9	                                   leave	       212	bitmap.c	FUNCTION_13
0x40009b2	              0xc3	                                     ret	       212	bitmap.c	FUNCTION_13
bitmap_clear	CALL,0:IF,1:SWITCH,0:WHILE,0:FOR,0:functions,0:DO,0:ELSE,0	33
0x400026c	              0x55	                                push rbp	        49	bitmap.c	FUNCTION_3
0x400026d	          0x4889e5	                            mov rbp, rsp	        49	bitmap.c	FUNCTION_3
0x4000270	        0x48897de8	             mov qword [rbp - 0x18], rdi	        49	bitmap.c	FUNCTION_3
0x4000274	        0x488975e0	             mov qword [rbp - 0x20], rsi	        49	bitmap.c	FUNCTION_3
0x4000278	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        50	bitmap.c	FUNCTION_3
0x400027c	        0x48c1e806	                              shr rax, 6	        50	bitmap.c	FUNCTION_3
0x4000280	        0x488945f8	                mov qword [rbp - 8], rax	        50	bitmap.c	FUNCTION_3
0x4000284	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        52	bitmap.c	FUNCTION_3	IF_1
0x4000288	        0x488b4008	                mov rax, qword [rax + 8]	        52	bitmap.c	FUNCTION_3	IF_1
0x400028c	        0x483b45f8	                cmp rax, qword [rbp - 8]	        52	bitmap.c	FUNCTION_3	IF_1
0x4000290	            0x7642	                           jbe 0x40002d4	        52	bitmap.c	FUNCTION_3	IF_1
0x4000292	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	bitmap.c	FUNCTION_3	IF_1
0x4000296	          0x488b00	                    mov rax, qword [rax]	        53	bitmap.c	FUNCTION_3	IF_1
0x4000299	        0x488b55f8	                mov rdx, qword [rbp - 8]	        53	bitmap.c	FUNCTION_3	IF_1
0x400029d	        0x48c1e203	                              shl rdx, 3	        53	bitmap.c	FUNCTION_3	IF_1
0x40002a1	          0x4801c2	                            add rdx, rax	        53	bitmap.c	FUNCTION_3	IF_1
0x40002a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	bitmap.c	FUNCTION_3	IF_1
0x40002a8	          0x488b00	                    mov rax, qword [rax]	        53	bitmap.c	FUNCTION_3	IF_1
0x40002ab	        0x488b4df8	                mov rcx, qword [rbp - 8]	        53	bitmap.c	FUNCTION_3	IF_1
0x40002af	        0x48c1e103	                              shl rcx, 3	        53	bitmap.c	FUNCTION_3	IF_1
0x40002b3	          0x4801c8	                            add rax, rcx	        53	bitmap.c	FUNCTION_3	IF_1
0x40002b6	          0x488b00	                    mov rax, qword [rax]	        53	bitmap.c	FUNCTION_3	IF_1
0x40002b9	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        53	bitmap.c	FUNCTION_3	IF_1
0x40002bd	          0x83e13f	                           and ecx, 0x3f	        53	bitmap.c	FUNCTION_3	IF_1
0x40002c0	      0xbe01000000	                              mov esi, 1	        53	bitmap.c	FUNCTION_3	IF_1
0x40002c5	          0x48d3e6	                             shl rsi, cl	        53	bitmap.c	FUNCTION_3	IF_1
0x40002c8	          0x4889f1	                            mov rcx, rsi	        53	bitmap.c	FUNCTION_3	IF_1
0x40002cb	          0x48f7d1	                                 not rcx	        53	bitmap.c	FUNCTION_3	IF_1
0x40002ce	          0x4821c8	                            and rax, rcx	        53	bitmap.c	FUNCTION_3	IF_1
0x40002d1	          0x488902	                    mov qword [rdx], rax	        53	bitmap.c	FUNCTION_3	IF_1
0x40002d4	              0x90	                                     nop	        54	bitmap.c	FUNCTION_3
0x40002d5	              0x5d	                                 pop rbp	        54	bitmap.c	FUNCTION_3
0x40002d6	              0xc3	                                     ret	        54	bitmap.c	FUNCTION_3
bitmap_popcount	CALL,1:IF,0:SWITCH,0:WHILE,0:FOR,1:functions,0:DO,0:ELSE,0	25
0x4000820	              0x55	                                push rbp	       165	bitmap.c	FUNCTION_10
0x4000821	          0x4889e5	                            mov rbp, rsp	       165	bitmap.c	FUNCTION_10
0x4000824	        0x4883ec18	                           sub rsp, 0x18	       165	bitmap.c	FUNCTION_10
0x4000828	        0x48897de8	             mov qword [rbp - 0x18], rdi	       165	bitmap.c	FUNCTION_10
0x400082c	    0x48c745f80000	                  mov qword [rbp - 8], 0	       166	bitmap.c	FUNCTION_10
0x4000834	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       168	bitmap.c	FUNCTION_10	FOR_1
0x400083c	            0xeb28	                           jmp 0x4000866	       168	bitmap.c	FUNCTION_10	FOR_1
0x400083e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000842	          0x488b00	                    mov rax, qword [rax]	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000845	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000849	        0x48c1e203	                              shl rdx, 3	       169	bitmap.c	FUNCTION_10	CALL_1
0x400084d	          0x4801d0	                            add rax, rdx	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000850	          0x488b00	                    mov rax, qword [rax]	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000853	          0x4889c7	                            mov rdi, rax	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000856	      0xe837f8ffff	            call sym.ewah_bit_popcount64	       169	bitmap.c	FUNCTION_10	CALL_1
0x400085b	            0x89c0	                            mov eax, eax	       169	bitmap.c	FUNCTION_10	CALL_1
0x400085d	        0x480145f8	                add qword [rbp - 8], rax	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000861	      0x488345f001	               add qword [rbp - 0x10], 1	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000866	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       168	bitmap.c	FUNCTION_10	FOR_1
0x400086a	        0x488b4008	                mov rax, qword [rax + 8]	       168	bitmap.c	FUNCTION_10	FOR_1
0x400086e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000872	            0x77ca	                            ja 0x400083e	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000874	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	bitmap.c	FUNCTION_10
0x4000878	              0xc9	                                   leave	       172	bitmap.c	FUNCTION_10
0x4000879	              0xc3	                                     ret	       172	bitmap.c	FUNCTION_10
bitmap_new	CALL,2:IF,0:SWITCH,0:WHILE,0:FOR,0:functions,0:DO,0:ELSE,0	17
0x4000138	              0x55	                                push rbp	        26	bitmap.c	FUNCTION_1
0x4000139	          0x4889e5	                            mov rbp, rsp	        26	bitmap.c	FUNCTION_1
0x400013c	        0x4883ec10	                           sub rsp, 0x10	        26	bitmap.c	FUNCTION_1
0x4000140	      0xbf10000000	                           mov edi, 0x10	        27	bitmap.c	FUNCTION_1	CALL_1
0x4000145	      0xe800000000	                          call 0x400014a	        27	bitmap.c	FUNCTION_1	CALL_1
0x400014a	        0x488945f8	                mov qword [rbp - 8], rax	        27	bitmap.c	FUNCTION_1	CALL_1
0x400014e	      0xbe08000000	                              mov esi, 8	        28	bitmap.c	FUNCTION_1	CALL_2
0x4000153	      0xbf20000000	                           mov edi, 0x20	        28	bitmap.c	FUNCTION_1	CALL_2
0x4000158	      0xe800000000	                          call 0x400015d	        28	bitmap.c	FUNCTION_1	CALL_2
0x400015d	          0x4889c2	                            mov rdx, rax	        28	bitmap.c	FUNCTION_1	CALL_2
0x4000160	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	bitmap.c	FUNCTION_1	CALL_2
0x4000164	          0x488910	                    mov qword [rax], rdx	        28	bitmap.c	FUNCTION_1	CALL_2
0x4000167	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	bitmap.c	FUNCTION_1
0x400016b	    0x48c740082000	               mov qword [rax + 8], 0x20	        29	bitmap.c	FUNCTION_1
0x4000173	        0x488b45f8	                mov rax, qword [rbp - 8]	        30	bitmap.c	FUNCTION_1
0x4000177	              0xc9	                                   leave	        31	bitmap.c	FUNCTION_1
0x4000178	              0xc3	                                     ret	        31	bitmap.c	FUNCTION_1
bitmap_each_bit	CALL,2:IF,2:SWITCH,0:WHILE,0:FOR,3:functions,0:DO,0:ELSE,1	70
0x400072b	              0x55	                                push rbp	       141	bitmap.c	FUNCTION_9
0x400072c	          0x4889e5	                            mov rbp, rsp	       141	bitmap.c	FUNCTION_9
0x400072f	        0x4883ec40	                           sub rsp, 0x40	       141	bitmap.c	FUNCTION_9
0x4000733	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       141	bitmap.c	FUNCTION_9
0x4000737	        0x488975d0	             mov qword [rbp - 0x30], rsi	       141	bitmap.c	FUNCTION_9
0x400073b	        0x488955c8	             mov qword [rbp - 0x38], rdx	       141	bitmap.c	FUNCTION_9
0x400073f	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       142	bitmap.c	FUNCTION_9
0x4000747	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       144	bitmap.c	FUNCTION_9	FOR_1
0x400074f	      0xe9b7000000	                           jmp 0x400080b	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000754	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       145	bitmap.c	FUNCTION_9	FOR_1
0x4000758	          0x488b00	                    mov rax, qword [rax]	       145	bitmap.c	FUNCTION_9	FOR_1
0x400075b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       145	bitmap.c	FUNCTION_9	FOR_1
0x400075f	        0x48c1e203	                              shl rdx, 3	       145	bitmap.c	FUNCTION_9	FOR_1
0x4000763	          0x4801d0	                            add rax, rdx	       145	bitmap.c	FUNCTION_9	FOR_1
0x4000766	          0x488b00	                    mov rax, qword [rax]	       145	bitmap.c	FUNCTION_9	FOR_1
0x4000769	        0x488945f8	                mov qword [rbp - 8], rax	       145	bitmap.c	FUNCTION_9	FOR_1
0x400076d	      0x48837df8ff	 cmp qword [rbp - 8], 0xffffffffffffffff	       148	bitmap.c	FUNCTION_9	FOR_1	IF_1
0x4000772	            0x7531	                           jne 0x40007a5	       148	bitmap.c	FUNCTION_9	FOR_1	IF_1
0x4000774	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x400077b	            0xeb20	                           jmp 0x400079d	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x400077d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x4000781	        0x488d5001	                      lea rdx, [rax + 1]	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x4000785	        0x488955e8	             mov qword [rbp - 0x18], rdx	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x4000789	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x400078d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x4000791	          0x4889ce	                            mov rsi, rcx	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x4000794	          0x4889c7	                            mov rdi, rax	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x4000797	            0xffd2	                                call rdx	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x4000799	        0x8345e401	               add dword [rbp - 0x1c], 1	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x400079d	        0x837de43f	           cmp dword [rbp - 0x1c], 0x3f 	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x40007a1	            0x76da	                           jbe 0x400077d	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x40007a3	            0xeb61	                           jmp 0x4000806	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x40007a5	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x40007ac	            0xeb4a	                           jmp 0x40007f8	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x40007ae	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40007b1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40007b5	            0x89c1	                            mov ecx, eax	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40007b7	          0x48d3ea	                             shr rdx, cl	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40007ba	          0x4889d0	                            mov rax, rdx	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40007bd	          0x4885c0	                           test rax, rax	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40007c0	            0x743e	                            je 0x4000800	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40007c2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x40007c5	        0x488b55f8	                mov rdx, qword [rbp - 8]	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x40007c9	            0x89c1	                            mov ecx, eax	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x40007cb	          0x48d3ea	                             shr rdx, cl	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x40007ce	          0x4889d0	                            mov rax, rdx	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x40007d1	      0xf3480fbcc0	                          tzcnt rax, rax	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x40007d6	           0x145e4	             add dword [rbp - 0x1c], eax	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x40007d9	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x40007dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x40007e0	        0x488d0c02	                    lea rcx, [rdx + rax]	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x40007e4	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x40007e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x40007ec	          0x4889d6	                            mov rsi, rdx	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x40007ef	          0x4889cf	                            mov rdi, rcx	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x40007f2	            0xffd0	                                call rax	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x40007f4	        0x8345e401	               add dword [rbp - 0x1c], 1	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x40007f8	        0x837de43f	           cmp dword [rbp - 0x1c], 0x3f 	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x40007fc	            0x76b0	                           jbe 0x40007ae	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x40007fe	            0xeb01	                           jmp 0x4000801	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x4000800	              0x90	                                     nop	       154	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x4000801	      0x488345e840	           add qword [rbp - 0x18], 0x40 	       159	bitmap.c	FUNCTION_9	FOR_1	ELSE_1
0x4000806	      0x488345f001	               add qword [rbp - 0x10], 1	       144	bitmap.c	FUNCTION_9	FOR_1
0x400080b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       144	bitmap.c	FUNCTION_9	FOR_1
0x400080f	        0x488b4008	                mov rax, qword [rax + 8]	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000813	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000817	     0xf8737ffffff	                            ja 0x4000754	       144	bitmap.c	FUNCTION_9	FOR_1
0x400081d	              0x90	                                     nop	       162	bitmap.c	FUNCTION_9
0x400081e	              0xc9	                                   leave	       162	bitmap.c	FUNCTION_9
0x400081f	              0xc3	                                     ret	       162	bitmap.c	FUNCTION_9
bitmap_to_ewah	CALL,4:IF,3:SWITCH,0:WHILE,0:FOR,1:functions,0:DO,0:ELSE,0	55
0x4000337	              0x55	                                push rbp	        64	bitmap.c	FUNCTION_5
0x4000338	          0x4889e5	                            mov rbp, rsp	        64	bitmap.c	FUNCTION_5
0x400033b	        0x4883ec30	                           sub rsp, 0x30	        64	bitmap.c	FUNCTION_5
0x400033f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        64	bitmap.c	FUNCTION_5
0x4000343	      0xe800000000	                          call 0x4000348	        65	bitmap.c	FUNCTION_5	CALL_1
0x4000348	        0x488945f8	                mov qword [rbp - 8], rax	        65	bitmap.c	FUNCTION_5	CALL_1
0x400034c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        66	bitmap.c	FUNCTION_5
0x4000354	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        67	bitmap.c	FUNCTION_5
0x400035c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000364	            0xeb7d	                           jmp 0x40003e3	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000366	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x400036a	          0x488b00	                    mov rax, qword [rax]	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x400036d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x4000371	        0x48c1e203	                              shl rdx, 3	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x4000375	          0x4801d0	                            add rax, rdx	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x4000378	          0x488b00	                    mov rax, qword [rax]	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x400037b	          0x4885c0	                           test rax, rax	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x400037e	            0x7507	                           jne 0x4000387	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x4000380	      0x488345e801	               add qword [rbp - 0x18], 1	        71	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x4000385	            0xeb57	                           jmp 0x40003de	        72	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x4000387	      0x48837df000	               cmp qword [rbp - 0x10], 0	        75	bitmap.c	FUNCTION_5	FOR_1	IF_2
0x400038c	            0x7413	                            je 0x40003a1	        75	bitmap.c	FUNCTION_5	FOR_1	IF_2
0x400038e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x4000392	        0x488b45f8	                mov rax, qword [rbp - 8]	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x4000396	          0x4889d6	                            mov rsi, rdx	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x4000399	          0x4889c7	                            mov rdi, rax	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x400039c	      0xe800000000	                          call 0x40003a1	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x40003a1	      0x48837de800	               cmp qword [rbp - 0x18], 0	        78	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x40003a6	            0x741d	                            je 0x40003c5	        78	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x40003a8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x40003ac	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x40003b0	      0xbe00000000	                              mov esi, 0	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x40003b5	          0x4889c7	                            mov rdi, rax	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x40003b8	      0xe800000000	                          call 0x40003bd	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x40003bd	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        80	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x40003c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        83	bitmap.c	FUNCTION_5	FOR_1
0x40003c9	          0x488b00	                    mov rax, qword [rax]	        83	bitmap.c	FUNCTION_5	FOR_1
0x40003cc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        83	bitmap.c	FUNCTION_5	FOR_1
0x40003d0	        0x48c1e203	                              shl rdx, 3	        83	bitmap.c	FUNCTION_5	FOR_1
0x40003d4	          0x4801d0	                            add rax, rdx	        83	bitmap.c	FUNCTION_5	FOR_1
0x40003d7	          0x488b00	                    mov rax, qword [rax]	        83	bitmap.c	FUNCTION_5	FOR_1
0x40003da	        0x488945f0	             mov qword [rbp - 0x10], rax	        83	bitmap.c	FUNCTION_5	FOR_1
0x40003de	      0x488345e001	               add qword [rbp - 0x20], 1	        69	bitmap.c	FUNCTION_5	FOR_1
0x40003e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        69	bitmap.c	FUNCTION_5	FOR_1
0x40003e7	        0x488b4008	                mov rax, qword [rax + 8]	        69	bitmap.c	FUNCTION_5	FOR_1
0x40003eb	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        69	bitmap.c	FUNCTION_5	FOR_1
0x40003ef	     0xf8771ffffff	                            ja 0x4000366	        69	bitmap.c	FUNCTION_5	FOR_1
0x40003f5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        86	bitmap.c	FUNCTION_5	CALL_4
0x40003f9	        0x488b45f8	                mov rax, qword [rbp - 8]	        86	bitmap.c	FUNCTION_5	CALL_4
0x40003fd	          0x4889d6	                            mov rsi, rdx	        86	bitmap.c	FUNCTION_5	CALL_4
0x4000400	          0x4889c7	                            mov rdi, rax	        86	bitmap.c	FUNCTION_5	CALL_4
0x4000403	      0xe800000000	                          call 0x4000408	        86	bitmap.c	FUNCTION_5	CALL_4
0x4000408	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	bitmap.c	FUNCTION_5
0x400040c	              0xc9	                                   leave	        88	bitmap.c	FUNCTION_5
0x400040d	              0xc3	                                     ret	        88	bitmap.c	FUNCTION_5
st_mult	CALL,1:IF,1:SWITCH,0:WHILE,0:FOR,0:functions,0:DO,0:ELSE,0	22
0x4000040	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_29
0x4000041	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_29
0x4000044	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_29
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_29
0x400004c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_29
0x4000050	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_29	IF_1
0x4000055	            0x7430	                            je 0x4000087	       795	git-compat-util.h	FUNCTION_29	IF_1
0x4000057	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_29	IF_1
0x400005e	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_29	IF_1
0x4000063	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_29	IF_1
0x4000067	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_29	IF_1
0x400006b	            0x731a	                           jae 0x4000087	       795	git-compat-util.h	FUNCTION_29	IF_1
0x400006d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x4000071	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x4000075	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x4000078	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x400007d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x4000082	      0xe800000000	                          call 0x4000087	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x4000087	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_29
0x400008b	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_29
0x4000090	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_29
0x4000091	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_29
