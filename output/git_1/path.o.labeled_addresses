calc_shared_perm	DO,0:functions,0:SWITCH,0:ELSE,2:IF,4:WHILE,0:CALL,4:FOR,0	39
0x4002a4c	              0x55	                                push rbp	       839	path.c	FUNCTION_41
0x4002a4d	          0x4889e5	                            mov rbp, rsp	       839	path.c	FUNCTION_41
0x4002a50	        0x4883ec20	                           sub rsp, 0x20	       839	path.c	FUNCTION_41
0x4002a54	          0x897dec	             mov dword [rbp - 0x14], edi	       839	path.c	FUNCTION_41
0x4002a57	      0xe800000000	                          call 0x4002a5c	       842	path.c	FUNCTION_41	IF_1	CALL_1
0x4002a5c	            0x85c0	                           test eax, eax	       842	path.c	FUNCTION_41	IF_1	CALL_1
0x4002a5e	            0x790c	                           jns 0x4002a6c	       842	path.c	FUNCTION_41	IF_1	CALL_1
0x4002a60	      0xe800000000	                          call 0x4002a65	       843	path.c	FUNCTION_41	CALL_2
0x4002a65	            0xf7d8	                                 neg eax	       843	path.c	FUNCTION_41	CALL_2
0x4002a67	          0x8945fc	                mov dword [rbp - 4], eax	       843	path.c	FUNCTION_41	CALL_2
0x4002a6a	            0xeb08	                           jmp 0x4002a74	       843	path.c	FUNCTION_41	CALL_2
0x4002a6c	      0xe800000000	                          call 0x4002a71	       845	path.c	FUNCTION_41	CALL_3
0x4002a71	          0x8945fc	                mov dword [rbp - 4], eax	       845	path.c	FUNCTION_41	CALL_3
0x4002a74	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       847	path.c	FUNCTION_41	IF_2
0x4002a77	      0x2580000000	                           and eax, 0x80	       847	path.c	FUNCTION_41	IF_2
0x4002a7c	            0x85c0	                           test eax, eax	       847	path.c	FUNCTION_41	IF_2
0x4002a7e	            0x7507	                           jne 0x4002a87	       847	path.c	FUNCTION_41	IF_2
0x4002a80	    0x8165fc6dffff	         and dword [rbp - 4], 0xffffff6d	       848	path.c	FUNCTION_41	IF_2
0x4002a87	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       849	path.c	FUNCTION_41	IF_3
0x4002a8a	          0x83e040	                           and eax, 0x40	       849	path.c	FUNCTION_41	IF_3
0x4002a8d	            0x85c0	                           test eax, eax	       849	path.c	FUNCTION_41	IF_3
0x4002a8f	            0x740e	                            je 0x4002a9f	       849	path.c	FUNCTION_41	IF_3
0x4002a91	          0x8b45fc	                mov eax, dword [rbp - 4]	       851	path.c	FUNCTION_41	IF_3
0x4002a94	      0x2524010000	                          and eax, 0x124	       851	path.c	FUNCTION_41	IF_3
0x4002a99	          0xc1f802	                              sar eax, 2	       851	path.c	FUNCTION_41	IF_3
0x4002a9c	           0x945fc	                 or dword [rbp - 4], eax	       851	path.c	FUNCTION_41	IF_3
0x4002a9f	      0xe800000000	                          call 0x4002aa4	       852	path.c	FUNCTION_41	IF_4	CALL_4
0x4002aa4	            0x85c0	                           test eax, eax	       852	path.c	FUNCTION_41	IF_4	CALL_4
0x4002aa6	            0x7910	                           jns 0x4002ab8	       852	path.c	FUNCTION_41	IF_4	CALL_4
0x4002aa8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       853	path.c	FUNCTION_41	IF_4
0x4002aab	      0x2500feffff	                     and eax, 0xfffffe00	       853	path.c	FUNCTION_41	IF_4
0x4002ab0	           0xb45fc	                 or eax, dword [rbp - 4]	       853	path.c	FUNCTION_41	IF_4
0x4002ab3	          0x8945ec	             mov dword [rbp - 0x14], eax	       853	path.c	FUNCTION_41	IF_4
0x4002ab6	            0xeb06	                           jmp 0x4002abe	       853	path.c	FUNCTION_41	IF_4
0x4002ab8	          0x8b45fc	                mov eax, dword [rbp - 4]	       855	path.c	FUNCTION_41	ELSE_2
0x4002abb	           0x945ec	              or dword [rbp - 0x14], eax	       855	path.c	FUNCTION_41	ELSE_2
0x4002abe	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       857	path.c	FUNCTION_41	ELSE_2
0x4002ac1	              0xc9	                                   leave	       858	path.c	FUNCTION_41	ELSE_2
0x4002ac2	              0xc3	                                     ret	       858	path.c	FUNCTION_41	ELSE_2
strip_path_suffix	DO,0:functions,0:SWITCH,0:ELSE,1:IF,5:WHILE,1:CALL,6:FOR,0	100
0x4003599	              0x55	                                push rbp	      1224	path.c	FUNCTION_51
0x400359a	          0x4889e5	                            mov rbp, rsp	      1224	path.c	FUNCTION_51
0x400359d	        0x4883ec20	                           sub rsp, 0x20	      1224	path.c	FUNCTION_51
0x40035a1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1224	path.c	FUNCTION_51
0x40035a5	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1224	path.c	FUNCTION_51
0x40035a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1225	path.c	FUNCTION_51	CALL_2
0x40035ad	          0x4889c7	                            mov rdi, rax	      1225	path.c	FUNCTION_51	CALL_2
0x40035b0	      0xe800000000	                          call 0x40035b5	      1225	path.c	FUNCTION_51	CALL_2
0x40035b5	          0x8945f8	                mov dword [rbp - 8], eax	      1225	path.c	FUNCTION_51	CALL_2
0x40035b8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1225	path.c	FUNCTION_51	CALL_2
0x40035bc	          0x4889c7	                            mov rdi, rax	      1225	path.c	FUNCTION_51	CALL_2
0x40035bf	      0xe800000000	                          call 0x40035c4	      1225	path.c	FUNCTION_51	CALL_2
0x40035c4	          0x8945fc	                mov dword [rbp - 4], eax	      1225	path.c	FUNCTION_51	CALL_2
0x40035c7	      0xe9b9000000	                           jmp 0x4003685	      1227	path.c	FUNCTION_51	WHILE_1
0x40035cc	        0x837df800	                  cmp dword [rbp - 8], 0	      1228	path.c	FUNCTION_51	WHILE_1	IF_1
0x40035d0	            0x750a	                           jne 0x40035dc	      1228	path.c	FUNCTION_51	WHILE_1	IF_1
0x40035d2	      0xb800000000	                              mov eax, 0	      1229	path.c	FUNCTION_51	WHILE_1	IF_1
0x40035d7	      0xe904010000	                           jmp 0x40036e0	      1229	path.c	FUNCTION_51	WHILE_1	IF_1
0x40035dc	          0x8b45f8	                mov eax, dword [rbp - 8]	      1231	path.c	FUNCTION_51	WHILE_1	IF_2
0x40035df	            0x4898	                                    cdqe	      1231	path.c	FUNCTION_51	WHILE_1	IF_2
0x40035e1	        0x488d50ff	                      lea rdx, [rax - 1]	      1231	path.c	FUNCTION_51	WHILE_1	IF_2
0x40035e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1231	path.c	FUNCTION_51	WHILE_1	IF_2
0x40035e9	          0x4801d0	                            add rax, rdx	      1231	path.c	FUNCTION_51	WHILE_1	IF_2
0x40035ec	           0xfb600	                   movzx eax, byte [rax]	      1231	path.c	FUNCTION_51	WHILE_1	IF_2
0x40035ef	           0xfbec0	                           movsx eax, al	      1231	path.c	FUNCTION_51	WHILE_1	IF_2
0x40035f2	            0x89c7	                            mov edi, eax	      1231	path.c	FUNCTION_51	WHILE_1	IF_2
0x40035f4	      0xe856caffff	                 call sym.git_is_dir_sep	      1231	path.c	FUNCTION_51	WHILE_1	IF_2
0x40035f9	            0x85c0	                           test eax, eax	      1231	path.c	FUNCTION_51	WHILE_1	IF_2
0x40035fb	            0x7455	                            je 0x4003652	      1231	path.c	FUNCTION_51	WHILE_1	IF_2
0x40035fd	          0x8b45fc	                mov eax, dword [rbp - 4]	      1232	path.c	FUNCTION_51	WHILE_1	IF_2	IF_3
0x4003600	            0x4898	                                    cdqe	      1232	path.c	FUNCTION_51	WHILE_1	IF_2	IF_3
0x4003602	        0x488d50ff	                      lea rdx, [rax - 1]	      1232	path.c	FUNCTION_51	WHILE_1	IF_2	IF_3
0x4003606	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1232	path.c	FUNCTION_51	WHILE_1	IF_2	IF_3
0x400360a	          0x4801d0	                            add rax, rdx	      1232	path.c	FUNCTION_51	WHILE_1	IF_2	IF_3
0x400360d	           0xfb600	                   movzx eax, byte [rax]	      1232	path.c	FUNCTION_51	WHILE_1	IF_2	IF_3
0x4003610	           0xfbec0	                           movsx eax, al	      1232	path.c	FUNCTION_51	WHILE_1	IF_2	IF_3
0x4003613	            0x89c7	                            mov edi, eax	      1232	path.c	FUNCTION_51	WHILE_1	IF_2	IF_3
0x4003615	      0xe835caffff	                 call sym.git_is_dir_sep	      1232	path.c	FUNCTION_51	WHILE_1	IF_2	IF_3
0x400361a	            0x85c0	                           test eax, eax	      1232	path.c	FUNCTION_51	WHILE_1	IF_2	IF_3
0x400361c	            0x750a	                           jne 0x4003628	      1232	path.c	FUNCTION_51	WHILE_1	IF_2	IF_3
0x400361e	      0xb800000000	                              mov eax, 0	      1233	path.c	FUNCTION_51	WHILE_1	IF_2	IF_3
0x4003623	      0xe9b8000000	                           jmp 0x40036e0	      1233	path.c	FUNCTION_51	WHILE_1	IF_2	IF_3
0x4003628	          0x8b55f8	                mov edx, dword [rbp - 8]	      1234	path.c	FUNCTION_51	WHILE_1	IF_2	CALL_3
0x400362b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1234	path.c	FUNCTION_51	WHILE_1	IF_2	CALL_3
0x400362f	            0x89d6	                            mov esi, edx	      1234	path.c	FUNCTION_51	WHILE_1	IF_2	CALL_3
0x4003631	          0x4889c7	                            mov rdi, rax	      1234	path.c	FUNCTION_51	WHILE_1	IF_2	CALL_3
0x4003634	      0xe81fffffff	         call sym.chomp_trailing_dir_sep	      1234	path.c	FUNCTION_51	WHILE_1	IF_2	CALL_3
0x4003639	          0x8945f8	                mov dword [rbp - 8], eax	      1234	path.c	FUNCTION_51	WHILE_1	IF_2	CALL_3
0x400363c	          0x8b55fc	                mov edx, dword [rbp - 4]	      1235	path.c	FUNCTION_51	WHILE_1	IF_2	CALL_4
0x400363f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1235	path.c	FUNCTION_51	WHILE_1	IF_2	CALL_4
0x4003643	            0x89d6	                            mov esi, edx	      1235	path.c	FUNCTION_51	WHILE_1	IF_2	CALL_4
0x4003645	          0x4889c7	                            mov rdi, rax	      1235	path.c	FUNCTION_51	WHILE_1	IF_2	CALL_4
0x4003648	      0xe80bffffff	         call sym.chomp_trailing_dir_sep	      1235	path.c	FUNCTION_51	WHILE_1	IF_2	CALL_4
0x400364d	          0x8945fc	                mov dword [rbp - 4], eax	      1235	path.c	FUNCTION_51	WHILE_1	IF_2	CALL_4
0x4003650	            0xeb33	                           jmp 0x4003685	      1235	path.c	FUNCTION_51	WHILE_1	IF_2	CALL_4
0x4003652	        0x836df801	                  sub dword [rbp - 8], 1	      1237	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x4003656	          0x8b45f8	                mov eax, dword [rbp - 8]	      1237	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x4003659	          0x4863d0	                         movsxd rdx, eax	      1237	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x400365c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1237	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x4003660	          0x4801d0	                            add rax, rdx	      1237	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x4003663	           0xfb610	                   movzx edx, byte [rax]	      1237	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x4003666	        0x836dfc01	                  sub dword [rbp - 4], 1	      1237	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x400366a	          0x8b45fc	                mov eax, dword [rbp - 4]	      1237	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x400366d	          0x4863c8	                         movsxd rcx, eax	      1237	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x4003670	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1237	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x4003674	          0x4801c8	                            add rax, rcx	      1237	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x4003677	           0xfb600	                   movzx eax, byte [rax]	      1237	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x400367a	            0x38c2	                              cmp dl, al	      1237	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x400367c	            0x7407	                            je 0x4003685	      1237	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x400367e	      0xb800000000	                              mov eax, 0	      1238	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x4003683	            0xeb5b	                           jmp 0x40036e0	      1238	path.c	FUNCTION_51	WHILE_1	ELSE_1	IF_4
0x4003685	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1227	path.c	FUNCTION_51	WHILE_1
0x4003689	     0xf853dffffff	                           jne 0x40035cc	      1227	path.c	FUNCTION_51	WHILE_1
0x400368f	        0x837df800	                  cmp dword [rbp - 8], 0	      1241	path.c	FUNCTION_51	IF_5
0x4003693	            0x7428	                            je 0x40036bd	      1241	path.c	FUNCTION_51	IF_5
0x4003695	          0x8b45f8	                mov eax, dword [rbp - 8]	      1241	path.c	FUNCTION_51	IF_5
0x4003698	            0x4898	                                    cdqe	      1241	path.c	FUNCTION_51	IF_5
0x400369a	        0x488d50ff	                      lea rdx, [rax - 1]	      1241	path.c	FUNCTION_51	IF_5
0x400369e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1241	path.c	FUNCTION_51	IF_5
0x40036a2	          0x4801d0	                            add rax, rdx	      1241	path.c	FUNCTION_51	IF_5
0x40036a5	           0xfb600	                   movzx eax, byte [rax]	      1241	path.c	FUNCTION_51	IF_5
0x40036a8	           0xfbec0	                           movsx eax, al	      1241	path.c	FUNCTION_51	IF_5
0x40036ab	            0x89c7	                            mov edi, eax	      1241	path.c	FUNCTION_51	IF_5
0x40036ad	      0xe89dc9ffff	                 call sym.git_is_dir_sep	      1241	path.c	FUNCTION_51	IF_5
0x40036b2	            0x85c0	                           test eax, eax	      1241	path.c	FUNCTION_51	IF_5
0x40036b4	            0x7507	                           jne 0x40036bd	      1241	path.c	FUNCTION_51	IF_5
0x40036b6	      0xb800000000	                              mov eax, 0	      1242	path.c	FUNCTION_51	IF_5
0x40036bb	            0xeb23	                           jmp 0x40036e0	      1242	path.c	FUNCTION_51	IF_5
0x40036bd	          0x8b55f8	                mov edx, dword [rbp - 8]	      1243	path.c	FUNCTION_51	CALL_6
0x40036c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1243	path.c	FUNCTION_51	CALL_6
0x40036c4	            0x89d6	                            mov esi, edx	      1243	path.c	FUNCTION_51	CALL_6
0x40036c6	          0x4889c7	                            mov rdi, rax	      1243	path.c	FUNCTION_51	CALL_6
0x40036c9	      0xe88afeffff	         call sym.chomp_trailing_dir_sep	      1243	path.c	FUNCTION_51	CALL_6
0x40036ce	          0x4863d0	                         movsxd rdx, eax	      1243	path.c	FUNCTION_51	CALL_6
0x40036d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1243	path.c	FUNCTION_51	CALL_6
0x40036d5	          0x4889d6	                            mov rsi, rdx	      1243	path.c	FUNCTION_51	CALL_6
0x40036d8	          0x4889c7	                            mov rdi, rax	      1243	path.c	FUNCTION_51	CALL_6
0x40036db	      0xe800000000	                          call 0x40036e0	      1243	path.c	FUNCTION_51	CALL_6
0x40036e0	              0xc9	                                   leave	      1244	path.c	FUNCTION_51
0x40036e1	              0xc3	                                     ret	      1244	path.c	FUNCTION_51
strbuf_git_path_submodule	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,3:FOR,0	42
0x4001fe6	              0x55	                                push rbp	       595	path.c	FUNCTION_33
0x4001fe7	          0x4889e5	                            mov rbp, rsp	       595	path.c	FUNCTION_33
0x4001fea	    0x4881ec000100	                          sub rsp, 0x100	       595	path.c	FUNCTION_33
0x4001ff1	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       595	path.c	FUNCTION_33
0x4001ff8	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       595	path.c	FUNCTION_33
0x4001fff	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       595	path.c	FUNCTION_33
0x4002006	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       595	path.c	FUNCTION_33
0x400200d	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       595	path.c	FUNCTION_33
0x4002014	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       595	path.c	FUNCTION_33
0x400201b	            0x84c0	                             test al, al	       595	path.c	FUNCTION_33
0x400201d	            0x7420	                            je 0x400203f	       595	path.c	FUNCTION_33
0x400201f	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       595	path.c	FUNCTION_33
0x4002023	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       595	path.c	FUNCTION_33
0x4002027	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       595	path.c	FUNCTION_33
0x400202b	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       595	path.c	FUNCTION_33
0x400202f	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       595	path.c	FUNCTION_33
0x4002033	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       595	path.c	FUNCTION_33
0x4002037	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       595	path.c	FUNCTION_33
0x400203b	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       595	path.c	FUNCTION_33
0x400203f	    0x64488b042528	                mov rax, qword fs:[0x28]	       595	path.c	FUNCTION_33
0x4002048	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       595	path.c	FUNCTION_33
0x400204f	            0x31c0	                            xor eax, eax	       595	path.c	FUNCTION_33
0x4002051	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       598	path.c	FUNCTION_33	CALL_1
0x400205b	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       598	path.c	FUNCTION_33	CALL_1
0x4002065	        0x488d4510	                   lea rax, [rbp + 0x10]	       598	path.c	FUNCTION_33	CALL_1
0x4002069	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       598	path.c	FUNCTION_33	CALL_1
0x4002070	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       598	path.c	FUNCTION_33	CALL_1
0x4002077	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       598	path.c	FUNCTION_33	CALL_1
0x400207e	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       599	path.c	FUNCTION_33	CALL_2
0x4002085	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	       599	path.c	FUNCTION_33	CALL_2
0x400208c	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	       599	path.c	FUNCTION_33	CALL_2
0x4002093	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       599	path.c	FUNCTION_33	CALL_2
0x400209a	          0x4889c7	                            mov rdi, rax	       599	path.c	FUNCTION_33	CALL_2
0x400209d	      0xe8f8fcffff	              call sym.do_submodule_path	       599	path.c	FUNCTION_33	CALL_2
0x40020a2	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       599	path.c	FUNCTION_33	CALL_2
0x40020a8	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       602	path.c	FUNCTION_33
0x40020ae	    0x488bbd48ffff	             mov rdi, qword [rbp - 0xb8]	       603	path.c	FUNCTION_33
0x40020b5	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       603	path.c	FUNCTION_33
0x40020be	            0x7405	                            je 0x40020c5	       603	path.c	FUNCTION_33
0x40020c0	      0xe800000000	                          call 0x40020c5	       603	path.c	FUNCTION_33
0x40020c5	              0xc9	                                   leave	       603	path.c	FUNCTION_33
0x40020c6	              0xc3	                                     ret	       603	path.c	FUNCTION_33
get_st_mode_bits	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,0:FOR,0	28
0x400033b	              0x55	                                push rbp	        16	path.c	FUNCTION_1
0x400033c	          0x4889e5	                            mov rbp, rsp	        16	path.c	FUNCTION_1
0x400033f	    0x4881ecb00000	                           sub rsp, 0xb0	        16	path.c	FUNCTION_1
0x4000346	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	        16	path.c	FUNCTION_1
0x400034d	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	        16	path.c	FUNCTION_1
0x4000354	    0x64488b042528	                mov rax, qword fs:[0x28]	        16	path.c	FUNCTION_1
0x400035d	        0x488945f8	                mov qword [rbp - 8], rax	        16	path.c	FUNCTION_1
0x4000361	            0x31c0	                            xor eax, eax	        16	path.c	FUNCTION_1
0x4000363	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	        18	path.c	FUNCTION_1	IF_1
0x400036a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        18	path.c	FUNCTION_1	IF_1
0x4000371	          0x4889d6	                            mov rsi, rdx	        18	path.c	FUNCTION_1	IF_1
0x4000374	          0x4889c7	                            mov rdi, rax	        18	path.c	FUNCTION_1	IF_1
0x4000377	      0xe800000000	                          call 0x400037c	        18	path.c	FUNCTION_1	IF_1
0x400037c	            0x85c0	                           test eax, eax	        18	path.c	FUNCTION_1	IF_1
0x400037e	            0x7907	                           jns 0x4000387	        18	path.c	FUNCTION_1	IF_1
0x4000380	      0xb8ffffffff	                     mov eax, 0xffffffff	        19	path.c	FUNCTION_1	IF_1
0x4000385	            0xeb16	                           jmp 0x400039d	        19	path.c	FUNCTION_1	IF_1
0x4000387	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	        20	path.c	FUNCTION_1
0x400038d	            0x89c2	                            mov edx, eax	        20	path.c	FUNCTION_1
0x400038f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	        20	path.c	FUNCTION_1
0x4000396	            0x8910	                    mov dword [rax], edx	        20	path.c	FUNCTION_1
0x4000398	      0xb800000000	                              mov eax, 0	        21	path.c	FUNCTION_1
0x400039d	        0x488b4df8	                mov rcx, qword [rbp - 8]	        22	path.c	FUNCTION_1
0x40003a1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        22	path.c	FUNCTION_1
0x40003aa	            0x7405	                            je 0x40003b1	        22	path.c	FUNCTION_1
0x40003ac	      0xe800000000	                          call 0x40003b1	        22	path.c	FUNCTION_1
0x40003b1	              0xc9	                                   leave	        22	path.c	FUNCTION_1
0x40003b2	              0xc3	                                     ret	        22	path.c	FUNCTION_1
dir_prefix	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,2:FOR,0	40
0x40005bc	              0x55	                                push rbp	        71	path.c	FUNCTION_6
0x40005bd	          0x4889e5	                            mov rbp, rsp	        71	path.c	FUNCTION_6
0x40005c0	        0x4883ec20	                           sub rsp, 0x20	        71	path.c	FUNCTION_6
0x40005c4	        0x48897de8	             mov qword [rbp - 0x18], rdi	        71	path.c	FUNCTION_6
0x40005c8	        0x488975e0	             mov qword [rbp - 0x20], rsi	        71	path.c	FUNCTION_6
0x40005cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        72	path.c	FUNCTION_6	CALL_1
0x40005d0	          0x4889c7	                            mov rdi, rax	        72	path.c	FUNCTION_6	CALL_1
0x40005d3	      0xe800000000	                          call 0x40005d8	        72	path.c	FUNCTION_6	CALL_1
0x40005d8	          0x8945fc	                mov dword [rbp - 4], eax	        72	path.c	FUNCTION_6	CALL_1
0x40005db	          0x8b45fc	                mov eax, dword [rbp - 4]	        73	path.c	FUNCTION_6	CALL_2
0x40005de	          0x4863d0	                         movsxd rdx, eax	        73	path.c	FUNCTION_6	CALL_2
0x40005e1	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        73	path.c	FUNCTION_6	CALL_2
0x40005e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	path.c	FUNCTION_6	CALL_2
0x40005e9	          0x4889ce	                            mov rsi, rcx	        73	path.c	FUNCTION_6	CALL_2
0x40005ec	          0x4889c7	                            mov rdi, rax	        73	path.c	FUNCTION_6	CALL_2
0x40005ef	      0xe800000000	                          call 0x40005f4	        73	path.c	FUNCTION_6	CALL_2
0x40005f4	            0x85c0	                           test eax, eax	        73	path.c	FUNCTION_6	CALL_2
0x40005f6	            0x7539	                           jne 0x4000631	        73	path.c	FUNCTION_6	CALL_2
0x40005f8	          0x8b45fc	                mov eax, dword [rbp - 4]	        74	path.c	FUNCTION_6
0x40005fb	          0x4863d0	                         movsxd rdx, eax	        74	path.c	FUNCTION_6
0x40005fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        74	path.c	FUNCTION_6
0x4000602	          0x4801d0	                            add rax, rdx	        74	path.c	FUNCTION_6
0x4000605	           0xfb600	                   movzx eax, byte [rax]	        74	path.c	FUNCTION_6
0x4000608	           0xfbec0	                           movsx eax, al	        74	path.c	FUNCTION_6
0x400060b	            0x89c7	                            mov edi, eax	        74	path.c	FUNCTION_6
0x400060d	      0xe83dfaffff	                 call sym.git_is_dir_sep	        74	path.c	FUNCTION_6
0x4000612	            0x85c0	                           test eax, eax	        73	path.c	FUNCTION_6	CALL_2
0x4000614	            0x7514	                           jne 0x400062a	        73	path.c	FUNCTION_6	CALL_2
0x4000616	          0x8b45fc	                mov eax, dword [rbp - 4]	        74	path.c	FUNCTION_6
0x4000619	          0x4863d0	                         movsxd rdx, eax	        74	path.c	FUNCTION_6
0x400061c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        74	path.c	FUNCTION_6
0x4000620	          0x4801d0	                            add rax, rdx	        74	path.c	FUNCTION_6
0x4000623	           0xfb600	                   movzx eax, byte [rax]	        74	path.c	FUNCTION_6
0x4000626	            0x84c0	                             test al, al	        74	path.c	FUNCTION_6
0x4000628	            0x7507	                           jne 0x4000631	        74	path.c	FUNCTION_6
0x400062a	      0xb801000000	                              mov eax, 1	        73	path.c	FUNCTION_6	CALL_2
0x400062f	            0xeb05	                           jmp 0x4000636	        73	path.c	FUNCTION_6	CALL_2
0x4000631	      0xb800000000	                              mov eax, 0	        73	path.c	FUNCTION_6	CALL_2
0x4000636	              0xc9	                                   leave	        75	path.c	FUNCTION_6
0x4000637	              0xc3	                                     ret	        75	path.c	FUNCTION_6
git_path_buf	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,3:FOR,0	48
0x400141b	              0x55	                                push rbp	       442	path.c	FUNCTION_21
0x400141c	          0x4889e5	                            mov rbp, rsp	       442	path.c	FUNCTION_21
0x400141f	    0x4881ece00000	                           sub rsp, 0xe0	       442	path.c	FUNCTION_21
0x4001426	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       442	path.c	FUNCTION_21
0x400142d	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       442	path.c	FUNCTION_21
0x4001434	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       442	path.c	FUNCTION_21
0x400143b	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       442	path.c	FUNCTION_21
0x4001442	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       442	path.c	FUNCTION_21
0x4001449	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       442	path.c	FUNCTION_21
0x4001450	            0x84c0	                             test al, al	       442	path.c	FUNCTION_21
0x4001452	            0x7420	                            je 0x4001474	       442	path.c	FUNCTION_21
0x4001454	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       442	path.c	FUNCTION_21
0x4001458	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       442	path.c	FUNCTION_21
0x400145c	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       442	path.c	FUNCTION_21
0x4001460	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       442	path.c	FUNCTION_21
0x4001464	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       442	path.c	FUNCTION_21
0x4001468	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       442	path.c	FUNCTION_21
0x400146c	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       442	path.c	FUNCTION_21
0x4001470	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       442	path.c	FUNCTION_21
0x4001474	    0x64488b042528	                mov rax, qword fs:[0x28]	       442	path.c	FUNCTION_21
0x400147d	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       442	path.c	FUNCTION_21
0x4001484	            0x31c0	                            xor eax, eax	       442	path.c	FUNCTION_21
0x4001486	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       444	path.c	FUNCTION_21
0x400148d	      0xbe00000000	                              mov esi, 0	       444	path.c	FUNCTION_21
0x4001492	          0x4889c7	                            mov rdi, rax	       444	path.c	FUNCTION_21
0x4001495	      0xe8a7ecffff	                  call sym.strbuf_setlen	       444	path.c	FUNCTION_21
0x400149a	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       445	path.c	FUNCTION_21	CALL_1
0x40014a4	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       445	path.c	FUNCTION_21	CALL_1
0x40014ae	        0x488d4510	                   lea rax, [rbp + 0x10]	       445	path.c	FUNCTION_21	CALL_1
0x40014b2	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       445	path.c	FUNCTION_21	CALL_1
0x40014b9	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       445	path.c	FUNCTION_21	CALL_1
0x40014c0	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       445	path.c	FUNCTION_21	CALL_1
0x40014c7	    0x488b05000000	            mov rax, qword [0x040014ce] 	       446	path.c	FUNCTION_21	CALL_2
0x40014ce	    0x488db530ffff	                   lea rsi, [rbp - 0xd0]	       446	path.c	FUNCTION_21	CALL_2
0x40014d5	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       446	path.c	FUNCTION_21	CALL_2
0x40014dc	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       446	path.c	FUNCTION_21	CALL_2
0x40014e3	          0x4989f0	                             mov r8, rsi	       446	path.c	FUNCTION_21	CALL_2
0x40014e6	      0xbe00000000	                              mov esi, 0	       446	path.c	FUNCTION_21	CALL_2
0x40014eb	          0x4889c7	                            mov rdi, rax	       446	path.c	FUNCTION_21	CALL_2
0x40014ee	      0xe871fcffff	                    call sym.do_git_path	       446	path.c	FUNCTION_21	CALL_2
0x40014f3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       448	path.c	FUNCTION_21
0x40014fa	        0x488b4010	            mov rax, qword [rax + 0x10] 	       448	path.c	FUNCTION_21
0x40014fe	    0x488bbd48ffff	             mov rdi, qword [rbp - 0xb8]	       449	path.c	FUNCTION_21
0x4001505	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       449	path.c	FUNCTION_21
0x400150e	            0x7405	                            je 0x4001515	       449	path.c	FUNCTION_21
0x4001510	      0xe800000000	                          call 0x4001515	       449	path.c	FUNCTION_21
0x4001515	              0xc9	                                   leave	       449	path.c	FUNCTION_21
0x4001516	              0xc3	                                     ret	       449	path.c	FUNCTION_21
strbuf_complete	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,1:FOR,0	27
0x400027e	              0x55	                                push rbp	       594	strbuf.h	FUNCTION_67
0x400027f	          0x4889e5	                            mov rbp, rsp	       594	strbuf.h	FUNCTION_67
0x4000282	        0x4883ec10	                           sub rsp, 0x10	       594	strbuf.h	FUNCTION_67
0x4000286	        0x48897df8	                mov qword [rbp - 8], rdi	       594	strbuf.h	FUNCTION_67
0x400028a	            0x89f0	                            mov eax, esi	       594	strbuf.h	FUNCTION_67
0x400028c	          0x8845f4	                mov byte [rbp - 0xc], al	       594	strbuf.h	FUNCTION_67
0x400028f	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_67	IF_1
0x4000293	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_67	IF_1
0x4000297	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_67	IF_1
0x400029a	            0x7431	                            je 0x40002cd	       595	strbuf.h	FUNCTION_67	IF_1
0x400029c	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_67	IF_1
0x40002a0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       595	strbuf.h	FUNCTION_67	IF_1
0x40002a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_67	IF_1
0x40002a8	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_67	IF_1
0x40002ac	        0x4883e801	                              sub rax, 1	       595	strbuf.h	FUNCTION_67	IF_1
0x40002b0	          0x4801d0	                            add rax, rdx	       595	strbuf.h	FUNCTION_67	IF_1
0x40002b3	           0xfb600	                   movzx eax, byte [rax]	       595	strbuf.h	FUNCTION_67	IF_1
0x40002b6	          0x3a45f4	                cmp al, byte [rbp - 0xc]	       595	strbuf.h	FUNCTION_67	IF_1
0x40002b9	            0x7412	                            je 0x40002cd	       595	strbuf.h	FUNCTION_67	IF_1
0x40002bb	         0xfbe55f4	             movsx edx, byte [rbp - 0xc]	       596	strbuf.h	FUNCTION_67	CALL_1
0x40002bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	strbuf.h	FUNCTION_67	CALL_1
0x40002c3	            0x89d6	                            mov esi, edx	       596	strbuf.h	FUNCTION_67	CALL_1
0x40002c5	          0x4889c7	                            mov rdi, rax	       596	strbuf.h	FUNCTION_67	CALL_1
0x40002c8	      0xe80effffff	                   call sym.strbuf_addch	       596	strbuf.h	FUNCTION_67	CALL_1
0x40002cd	              0x90	                                     nop	       597	strbuf.h	FUNCTION_67
0x40002ce	              0xc9	                                   leave	       597	strbuf.h	FUNCTION_67
0x40002cf	              0xc3	                                     ret	       597	strbuf.h	FUNCTION_67
is_ntfs_dotgit	DO,0:functions,0:SWITCH,0:ELSE,0:IF,4:WHILE,0:CALL,4:FOR,1	83
0x400382f	              0x55	                                push rbp	      1308	path.c	FUNCTION_54
0x4003830	          0x4889e5	                            mov rbp, rsp	      1308	path.c	FUNCTION_54
0x4003833	        0x4883ec20	                           sub rsp, 0x20	      1308	path.c	FUNCTION_54
0x4003837	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1308	path.c	FUNCTION_54
0x400383b	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1311	path.c	FUNCTION_54	FOR_1
0x4003842	          0x8b45fc	                mov eax, dword [rbp - 4]	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x4003845	          0x4863d0	                         movsxd rdx, eax	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x4003848	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x400384c	          0x4801d0	                            add rax, rdx	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x400384f	           0xfb600	                   movzx eax, byte [rax]	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x4003852	            0x84c0	                             test al, al	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x4003854	            0x7436	                            je 0x400388c	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x4003856	          0x8b45fc	                mov eax, dword [rbp - 4]	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x4003859	          0x4863d0	                         movsxd rdx, eax	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x400385c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x4003860	          0x4801d0	                            add rax, rdx	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x4003863	           0xfb600	                   movzx eax, byte [rax]	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x4003866	            0x3c5c	                            cmp al, 0x5c	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x4003868	            0x7422	                            je 0x400388c	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x400386a	          0x8b45fc	                mov eax, dword [rbp - 4]	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x400386d	          0x4863d0	                         movsxd rdx, eax	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x4003870	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x4003874	          0x4801d0	                            add rax, rdx	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x4003877	           0xfb600	                   movzx eax, byte [rax]	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x400387a	           0xfbec0	                           movsx eax, al	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x400387d	            0x89c7	                            mov edi, eax	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x400387f	      0xe8cbc7ffff	                 call sym.git_is_dir_sep	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x4003884	            0x85c0	                           test eax, eax	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x4003886	     0xf84ad000000	                            je 0x4003939	      1312	path.c	FUNCTION_54	FOR_1	IF_1
0x400388c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1313	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_1
0x400388f	          0x4863c8	                         movsxd rcx, eax	      1313	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_1
0x4003892	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1313	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_1
0x4003896	      0xba04000000	                              mov edx, 4	      1313	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_1
0x400389b	          0x4889ce	                            mov rsi, rcx	      1313	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_1
0x400389e	          0x4889c7	                            mov rdi, rax	      1313	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_1
0x40038a1	      0xe819ffffff	        call sym.only_spaces_and_periods	      1313	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_1
0x40038a6	            0x85c0	                           test eax, eax	      1313	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_1
0x40038a8	            0x7421	                            je 0x40038cb	      1313	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_1
0x40038aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1314	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_2
0x40038ae	      0xba04000000	                              mov edx, 4	      1314	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_2
0x40038b3	      0xbe00000000	                              mov esi, 0	      1314	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_2
0x40038b8	          0x4889c7	                            mov rdi, rax	      1314	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_2
0x40038bb	      0xe800000000	                          call 0x40038c0	      1314	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_2
0x40038c0	            0x85c0	                           test eax, eax	      1313	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_1
0x40038c2	            0x7507	                           jne 0x40038cb	      1313	path.c	FUNCTION_54	FOR_1	IF_1	IF_2	CALL_1
0x40038c4	      0xb801000000	                              mov eax, 1	      1315	path.c	FUNCTION_54	FOR_1	IF_1	IF_2
0x40038c9	            0xeb77	                           jmp 0x4003942	      1315	path.c	FUNCTION_54	FOR_1	IF_1	IF_2
0x40038cb	          0x8b45fc	                mov eax, dword [rbp - 4]	      1316	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_3
0x40038ce	          0x4863c8	                         movsxd rcx, eax	      1316	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_3
0x40038d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1316	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_3
0x40038d5	      0xba05000000	                              mov edx, 5	      1316	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_3
0x40038da	          0x4889ce	                            mov rsi, rcx	      1316	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_3
0x40038dd	          0x4889c7	                            mov rdi, rax	      1316	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_3
0x40038e0	      0xe8dafeffff	        call sym.only_spaces_and_periods	      1316	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_3
0x40038e5	            0x85c0	                           test eax, eax	      1316	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_3
0x40038e7	            0x7421	                            je 0x400390a	      1316	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_3
0x40038e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1317	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_4
0x40038ed	      0xba05000000	                              mov edx, 5	      1317	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_4
0x40038f2	      0xbe00000000	                              mov esi, 0	      1317	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_4
0x40038f7	          0x4889c7	                            mov rdi, rax	      1317	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_4
0x40038fa	      0xe800000000	                          call 0x40038ff	      1317	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_4
0x40038ff	            0x85c0	                           test eax, eax	      1316	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_3
0x4003901	            0x7507	                           jne 0x400390a	      1316	path.c	FUNCTION_54	FOR_1	IF_1	IF_3	CALL_3
0x4003903	      0xb801000000	                              mov eax, 1	      1318	path.c	FUNCTION_54	FOR_1	IF_1	IF_3
0x4003908	            0xeb38	                           jmp 0x4003942	      1318	path.c	FUNCTION_54	FOR_1	IF_1	IF_3
0x400390a	          0x8b45fc	                mov eax, dword [rbp - 4]	      1319	path.c	FUNCTION_54	FOR_1	IF_1	IF_4
0x400390d	          0x4863d0	                         movsxd rdx, eax	      1319	path.c	FUNCTION_54	FOR_1	IF_1	IF_4
0x4003910	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1319	path.c	FUNCTION_54	FOR_1	IF_1	IF_4
0x4003914	          0x4801d0	                            add rax, rdx	      1319	path.c	FUNCTION_54	FOR_1	IF_1	IF_4
0x4003917	           0xfb600	                   movzx eax, byte [rax]	      1319	path.c	FUNCTION_54	FOR_1	IF_1	IF_4
0x400391a	            0x3c5c	                            cmp al, 0x5c	      1319	path.c	FUNCTION_54	FOR_1	IF_1	IF_4
0x400391c	            0x7407	                            je 0x4003925	      1319	path.c	FUNCTION_54	FOR_1	IF_1	IF_4
0x400391e	      0xb800000000	                              mov eax, 0	      1320	path.c	FUNCTION_54	FOR_1	IF_1	IF_4
0x4003923	            0xeb1d	                           jmp 0x4003942	      1320	path.c	FUNCTION_54	FOR_1	IF_1	IF_4
0x4003925	          0x8b45fc	                mov eax, dword [rbp - 4]	      1321	path.c	FUNCTION_54	FOR_1	IF_1
0x4003928	            0x4898	                                    cdqe	      1321	path.c	FUNCTION_54	FOR_1	IF_1
0x400392a	        0x4883c001	                              add rax, 1	      1321	path.c	FUNCTION_54	FOR_1	IF_1
0x400392e	        0x480145e8	            add qword [rbp - 0x18], rax 	      1321	path.c	FUNCTION_54	FOR_1	IF_1
0x4003932	    0xc745fcffffff	        mov dword [rbp - 4], 0xffffffff 	      1322	path.c	FUNCTION_54	FOR_1	IF_1
0x4003939	        0x8345fc01	                  add dword [rbp - 4], 1	      1311	path.c	FUNCTION_54	FOR_1
0x400393d	      0xe900ffffff	                           jmp 0x4003842	      1324	path.c	FUNCTION_54
0x4003942	              0xc9	                                   leave	      1324	path.c	FUNCTION_54
0x4003943	              0xc3	                                     ret	      1324	path.c	FUNCTION_54
getpw_str	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,3:FOR,0	21
0x4002519	              0x55	                                push rbp	       690	path.c	FUNCTION_38
0x400251a	          0x4889e5	                            mov rbp, rsp	       690	path.c	FUNCTION_38
0x400251d	        0x4883ec20	                           sub rsp, 0x20	       690	path.c	FUNCTION_38
0x4002521	        0x48897de8	             mov qword [rbp - 0x18], rdi	       690	path.c	FUNCTION_38
0x4002525	        0x488975e0	             mov qword [rbp - 0x20], rsi	       690	path.c	FUNCTION_38
0x4002529	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       692	path.c	FUNCTION_38	CALL_1
0x400252d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       692	path.c	FUNCTION_38	CALL_1
0x4002531	          0x4889d6	                            mov rsi, rdx	       692	path.c	FUNCTION_38	CALL_1
0x4002534	          0x4889c7	                            mov rdi, rax	       692	path.c	FUNCTION_38	CALL_1
0x4002537	      0xe800000000	                          call 0x400253c	       692	path.c	FUNCTION_38	CALL_1
0x400253c	        0x488945f0	             mov qword [rbp - 0x10], rax	       692	path.c	FUNCTION_38	CALL_1
0x4002540	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       693	path.c	FUNCTION_38	CALL_2
0x4002544	          0x4889c7	                            mov rdi, rax	       693	path.c	FUNCTION_38	CALL_2
0x4002547	      0xe800000000	                          call 0x400254c	       693	path.c	FUNCTION_38	CALL_2
0x400254c	        0x488945f8	                mov qword [rbp - 8], rax	       693	path.c	FUNCTION_38	CALL_2
0x4002550	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       694	path.c	FUNCTION_38	CALL_3
0x4002554	          0x4889c7	                            mov rdi, rax	       694	path.c	FUNCTION_38	CALL_3
0x4002557	      0xe800000000	                          call 0x400255c	       694	path.c	FUNCTION_38	CALL_3
0x400255c	        0x488b45f8	                mov rax, qword [rbp - 8]	       695	path.c	FUNCTION_38
0x4002560	              0xc9	                                   leave	       696	path.c	FUNCTION_38
0x4002561	              0xc3	                                     ret	       696	path.c	FUNCTION_38
do_git_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,2:WHILE,0:CALL,5:FOR,0	57
0x4001164	              0x55	                                push rbp	       408	path.c	FUNCTION_18
0x4001165	          0x4889e5	                            mov rbp, rsp	       408	path.c	FUNCTION_18
0x4001168	        0x4883ec40	                           sub rsp, 0x40	       408	path.c	FUNCTION_18
0x400116c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       408	path.c	FUNCTION_18
0x4001170	        0x488975e0	             mov qword [rbp - 0x20], rsi	       408	path.c	FUNCTION_18
0x4001174	        0x488955d8	             mov qword [rbp - 0x28], rdx	       408	path.c	FUNCTION_18
0x4001178	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       408	path.c	FUNCTION_18
0x400117c	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       408	path.c	FUNCTION_18
0x4001180	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       410	path.c	FUNCTION_18	CALL_1
0x4001184	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       410	path.c	FUNCTION_18	CALL_1
0x4001188	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       410	path.c	FUNCTION_18	CALL_1
0x400118c	          0x4889ce	                            mov rsi, rcx	       410	path.c	FUNCTION_18	CALL_1
0x400118f	          0x4889c7	                            mov rdi, rax	       410	path.c	FUNCTION_18	CALL_1
0x4001192	      0xe84cffffff	         call sym.strbuf_worktree_gitdir	       410	path.c	FUNCTION_18	CALL_1
0x4001197	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       411	path.c	FUNCTION_18	IF_1
0x400119b	        0x488b4008	                mov rax, qword [rax + 8]	       411	path.c	FUNCTION_18	IF_1
0x400119f	          0x4885c0	                           test rax, rax	       411	path.c	FUNCTION_18	IF_1
0x40011a2	            0x7439	                            je 0x40011dd	       411	path.c	FUNCTION_18	IF_1
0x40011a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       411	path.c	FUNCTION_18	IF_1
0x40011a8	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       411	path.c	FUNCTION_18	IF_1
0x40011ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       411	path.c	FUNCTION_18	IF_1
0x40011b0	        0x488b4008	                mov rax, qword [rax + 8]	       411	path.c	FUNCTION_18	IF_1
0x40011b4	        0x4883e801	                              sub rax, 1	       411	path.c	FUNCTION_18	IF_1
0x40011b8	          0x4801d0	                            add rax, rdx	       411	path.c	FUNCTION_18	IF_1
0x40011bb	           0xfb600	                   movzx eax, byte [rax]	       411	path.c	FUNCTION_18	IF_1
0x40011be	           0xfbec0	                           movsx eax, al	       411	path.c	FUNCTION_18	IF_1
0x40011c1	            0x89c7	                            mov edi, eax	       411	path.c	FUNCTION_18	IF_1
0x40011c3	      0xe887eeffff	                 call sym.git_is_dir_sep	       411	path.c	FUNCTION_18	IF_1
0x40011c8	            0x85c0	                           test eax, eax	       411	path.c	FUNCTION_18	IF_1
0x40011ca	            0x7511	                           jne 0x40011dd	       411	path.c	FUNCTION_18	IF_1
0x40011cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       412	path.c	FUNCTION_18	CALL_2
0x40011d0	      0xbe2f000000	                           mov esi, 0x2f	       412	path.c	FUNCTION_18	CALL_2
0x40011d5	          0x4889c7	                            mov rdi, rax	       412	path.c	FUNCTION_18	CALL_2
0x40011d8	      0xe8feefffff	                   call sym.strbuf_addch	       412	path.c	FUNCTION_18	CALL_2
0x40011dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       413	path.c	FUNCTION_18
0x40011e1	        0x488b4008	                mov rax, qword [rax + 8]	       413	path.c	FUNCTION_18
0x40011e5	          0x8945fc	                mov dword [rbp - 4], eax	       413	path.c	FUNCTION_18
0x40011e8	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       414	path.c	FUNCTION_18	CALL_3
0x40011ec	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       414	path.c	FUNCTION_18	CALL_3
0x40011f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       414	path.c	FUNCTION_18	CALL_3
0x40011f4	          0x4889ce	                            mov rsi, rcx	       414	path.c	FUNCTION_18	CALL_3
0x40011f7	          0x4889c7	                            mov rdi, rax	       414	path.c	FUNCTION_18	CALL_3
0x40011fa	      0xe800000000	                          call 0x40011ff	       414	path.c	FUNCTION_18	CALL_3
0x40011ff	      0x48837de000	               cmp qword [rbp - 0x20], 0	       415	path.c	FUNCTION_18	IF_2
0x4001204	            0x7516	                           jne 0x400121c	       415	path.c	FUNCTION_18	IF_2
0x4001206	          0x8b55fc	                mov edx, dword [rbp - 4]	       416	path.c	FUNCTION_18	CALL_4
0x4001209	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       416	path.c	FUNCTION_18	CALL_4
0x400120d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       416	path.c	FUNCTION_18	CALL_4
0x4001211	          0x4889ce	                            mov rsi, rcx	       416	path.c	FUNCTION_18	CALL_4
0x4001214	          0x4889c7	                            mov rdi, rax	       416	path.c	FUNCTION_18	CALL_4
0x4001217	      0xe85afdffff	                call sym.adjust_git_path	       416	path.c	FUNCTION_18	CALL_4
0x400121c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       417	path.c	FUNCTION_18	CALL_5
0x4001220	          0x4889c7	                            mov rdi, rax	       417	path.c	FUNCTION_18	CALL_5
0x4001223	      0xe820f2ffff	            call sym.strbuf_cleanup_path	       417	path.c	FUNCTION_18	CALL_5
0x4001228	              0x90	                                     nop	       418	path.c	FUNCTION_18
0x4001229	              0xc9	                                   leave	       418	path.c	FUNCTION_18
0x400122a	              0xc3	                                     ret	       418	path.c	FUNCTION_18
adjust_git_path	DO,0:functions,0:SWITCH,0:ELSE,4:IF,5:WHILE,0:CALL,11:FOR,0	103
0x4000f76	              0x55	                                push rbp	       377	path.c	FUNCTION_16
0x4000f77	          0x4889e5	                            mov rbp, rsp	       377	path.c	FUNCTION_16
0x4000f7a	        0x4883ec30	                           sub rsp, 0x30	       377	path.c	FUNCTION_16
0x4000f7e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       377	path.c	FUNCTION_16
0x4000f82	        0x488975e0	             mov qword [rbp - 0x20], rsi	       377	path.c	FUNCTION_16
0x4000f86	          0x8955dc	             mov dword [rbp - 0x24], edx	       377	path.c	FUNCTION_16
0x4000f89	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       378	path.c	FUNCTION_16
0x4000f8d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       378	path.c	FUNCTION_16
0x4000f91	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       378	path.c	FUNCTION_16
0x4000f94	            0x4898	                                    cdqe	       378	path.c	FUNCTION_16
0x4000f96	          0x4801d0	                            add rax, rdx	       378	path.c	FUNCTION_16
0x4000f99	        0x488945f8	                mov qword [rbp - 8], rax	       378	path.c	FUNCTION_16
0x4000f9d	        0x488b45f8	                mov rax, qword [rbp - 8]	       379	path.c	FUNCTION_16	IF_1	CALL_1
0x4000fa1	      0xba00000000	                              mov edx, 0	       379	path.c	FUNCTION_16	IF_1	CALL_1
0x4000fa6	      0xbe00000000	                              mov esi, 0	       379	path.c	FUNCTION_16	IF_1	CALL_1
0x4000fab	          0x4889c7	                            mov rdi, rax	       379	path.c	FUNCTION_16	IF_1	CALL_1
0x4000fae	      0xe885f6ffff	                    call sym.is_dir_file	       379	path.c	FUNCTION_16	IF_1	CALL_1
0x4000fb3	            0x85c0	                           test eax, eax	       379	path.c	FUNCTION_16	IF_1	CALL_1
0x4000fb5	            0x743c	                            je 0x4000ff3	       379	path.c	FUNCTION_16	IF_1	CALL_1
0x4000fb7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       381	path.c	FUNCTION_16	CALL_3
0x4000fbb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       381	path.c	FUNCTION_16	CALL_3
0x4000fbf	          0x4889c7	                            mov rdi, rax	       380	path.c	FUNCTION_16	IF_1	CALL_2
0x4000fc2	      0xe800000000	                          call 0x4000fc7	       380	path.c	FUNCTION_16	IF_1	CALL_2
0x4000fc7	          0x4889c6	                            mov rsi, rax	       380	path.c	FUNCTION_16	IF_1	CALL_2
0x4000fca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       381	path.c	FUNCTION_16	CALL_3
0x4000fce	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       381	path.c	FUNCTION_16	CALL_3
0x4000fd2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       380	path.c	FUNCTION_16	IF_1	CALL_2
0x4000fd6	        0x488b5008	                mov rdx, qword [rax + 8]	       380	path.c	FUNCTION_16	IF_1	CALL_2
0x4000fda	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       380	path.c	FUNCTION_16	IF_1	CALL_2
0x4000fde	          0x4989f0	                             mov r8, rsi	       380	path.c	FUNCTION_16	IF_1	CALL_2
0x4000fe1	      0xbe00000000	                              mov esi, 0	       380	path.c	FUNCTION_16	IF_1	CALL_2
0x4000fe6	          0x4889c7	                            mov rdi, rax	       380	path.c	FUNCTION_16	IF_1	CALL_2
0x4000fe9	      0xe800000000	                          call 0x4000fee	       380	path.c	FUNCTION_16	IF_1	CALL_2
0x4000fee	      0xe9ed000000	                           jmp 0x40010e0	       391	path.c	FUNCTION_16
0x4000ff3	        0x488b45f8	                mov rax, qword [rbp - 8]	       382	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_4
0x4000ff7	      0xbe00000000	                              mov esi, 0	       382	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_4
0x4000ffc	          0x4889c7	                            mov rdi, rax	       382	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_4
0x4000fff	      0xe800000000	                          call 0x4001004	       382	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_4
0x4001004	            0x85c0	                           test eax, eax	       382	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_4
0x4001006	            0x753c	                           jne 0x4001044	       382	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_4
0x4001008	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       384	path.c	FUNCTION_16	ELSE_1	IF_2
0x400100c	        0x488b4028	            mov rax, qword [rax + 0x28] 	       384	path.c	FUNCTION_16	ELSE_1	IF_2
0x4001010	          0x4889c7	                            mov rdi, rax	       383	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_5
0x4001013	      0xe800000000	                          call 0x4001018	       383	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_5
0x4001018	          0x4889c6	                            mov rsi, rax	       383	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_5
0x400101b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       384	path.c	FUNCTION_16	ELSE_1	IF_2
0x400101f	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       384	path.c	FUNCTION_16	ELSE_1	IF_2
0x4001023	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       383	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_5
0x4001027	        0x488b5008	                mov rdx, qword [rax + 8]	       383	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_5
0x400102b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       383	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_5
0x400102f	          0x4989f0	                             mov r8, rsi	       383	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_5
0x4001032	      0xbe00000000	                              mov esi, 0	       383	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_5
0x4001037	          0x4889c7	                            mov rdi, rax	       383	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_5
0x400103a	      0xe800000000	                          call 0x400103f	       383	path.c	FUNCTION_16	ELSE_1	IF_2	CALL_5
0x400103f	      0xe99c000000	                           jmp 0x40010e0	       391	path.c	FUNCTION_16
0x4001044	        0x488b45f8	                mov rax, qword [rbp - 8]	       385	path.c	FUNCTION_16	ELSE_2	IF_3	CALL_7
0x4001048	      0xbe00000000	                              mov esi, 0	       385	path.c	FUNCTION_16	ELSE_2	IF_3	CALL_7
0x400104d	          0x4889c7	                            mov rdi, rax	       385	path.c	FUNCTION_16	ELSE_2	IF_3	CALL_7
0x4001050	      0xe867f5ffff	                     call sym.dir_prefix	       385	path.c	FUNCTION_16	ELSE_2	IF_3	CALL_7
0x4001055	            0x85c0	                           test eax, eax	       385	path.c	FUNCTION_16	ELSE_2	IF_3	CALL_7
0x4001057	            0x7421	                            je 0x400107a	       385	path.c	FUNCTION_16	ELSE_2	IF_3	CALL_7
0x4001059	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       386	path.c	FUNCTION_16	ELSE_2	IF_3
0x400105d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       386	path.c	FUNCTION_16	ELSE_2	IF_3
0x4001061	          0x488b10	                    mov rdx, qword [rax]	       386	path.c	FUNCTION_16	ELSE_2	IF_3
0x4001064	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       386	path.c	FUNCTION_16	ELSE_2	IF_3
0x4001067	          0x8d4807	                      lea ecx, [rax + 7]	       386	path.c	FUNCTION_16	ELSE_2	IF_3
0x400106a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       386	path.c	FUNCTION_16	ELSE_2	IF_3
0x400106e	            0x89ce	                            mov esi, ecx	       386	path.c	FUNCTION_16	ELSE_2	IF_3
0x4001070	          0x4889c7	                            mov rdi, rax	       386	path.c	FUNCTION_16	ELSE_2	IF_3
0x4001073	      0xe86df6ffff	                    call sym.replace_dir	       386	path.c	FUNCTION_16	ELSE_2	IF_3
0x4001078	            0xeb66	                           jmp 0x40010e0	       391	path.c	FUNCTION_16
0x400107a	    0x488b05000000	            mov rax, qword [0x04001081] 	       387	path.c	FUNCTION_16	ELSE_3	IF_4	CALL_9
0x4001081	          0x4885c0	                           test rax, rax	       387	path.c	FUNCTION_16	ELSE_3	IF_4	CALL_9
0x4001084	            0x7432	                            je 0x40010b8	       387	path.c	FUNCTION_16	ELSE_3	IF_4	CALL_9
0x4001086	        0x488b45f8	                mov rax, qword [rbp - 8]	       387	path.c	FUNCTION_16	ELSE_3	IF_4	CALL_9
0x400108a	      0xbe00000000	                              mov esi, 0	       387	path.c	FUNCTION_16	ELSE_3	IF_4	CALL_9
0x400108f	          0x4889c7	                            mov rdi, rax	       387	path.c	FUNCTION_16	ELSE_3	IF_4	CALL_9
0x4001092	      0xe825f5ffff	                     call sym.dir_prefix	       387	path.c	FUNCTION_16	ELSE_3	IF_4	CALL_9
0x4001097	            0x85c0	                           test eax, eax	       387	path.c	FUNCTION_16	ELSE_3	IF_4	CALL_9
0x4001099	            0x741d	                            je 0x40010b8	       387	path.c	FUNCTION_16	ELSE_3	IF_4	CALL_9
0x400109b	    0x488b15000000	            mov rdx, qword [0x040010a2] 	       388	path.c	FUNCTION_16	ELSE_3	IF_4
0x40010a2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       388	path.c	FUNCTION_16	ELSE_3	IF_4
0x40010a5	          0x8d4805	                      lea ecx, [rax + 5]	       388	path.c	FUNCTION_16	ELSE_3	IF_4
0x40010a8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       388	path.c	FUNCTION_16	ELSE_3	IF_4
0x40010ac	            0x89ce	                            mov esi, ecx	       388	path.c	FUNCTION_16	ELSE_3	IF_4
0x40010ae	          0x4889c7	                            mov rdi, rax	       388	path.c	FUNCTION_16	ELSE_3	IF_4
0x40010b1	      0xe82ff6ffff	                    call sym.replace_dir	       388	path.c	FUNCTION_16	ELSE_3	IF_4
0x40010b6	            0xeb28	                           jmp 0x40010e0	       391	path.c	FUNCTION_16
0x40010b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       389	path.c	FUNCTION_16	ELSE_4	IF_5
0x40010bc	         0xfb64060	           movzx eax, byte [rax + 0x60] 	       389	path.c	FUNCTION_16	ELSE_4	IF_5
0x40010c0	          0x83e001	                              and eax, 1	       389	path.c	FUNCTION_16	ELSE_4	IF_5
0x40010c3	            0x84c0	                             test al, al	       389	path.c	FUNCTION_16	ELSE_4	IF_5
0x40010c5	            0x7419	                            je 0x40010e0	       389	path.c	FUNCTION_16	ELSE_4	IF_5
0x40010c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	path.c	FUNCTION_16	ELSE_4	IF_5
0x40010cb	        0x488b5008	                mov rdx, qword [rax + 8]	       390	path.c	FUNCTION_16	ELSE_4	IF_5
0x40010cf	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	       390	path.c	FUNCTION_16	ELSE_4	IF_5
0x40010d2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       390	path.c	FUNCTION_16	ELSE_4	IF_5
0x40010d6	            0x89ce	                            mov esi, ecx	       390	path.c	FUNCTION_16	ELSE_4	IF_5
0x40010d8	          0x4889c7	                            mov rdi, rax	       390	path.c	FUNCTION_16	ELSE_4	IF_5
0x40010db	      0xe81efdffff	              call sym.update_common_dir	       390	path.c	FUNCTION_16	ELSE_4	IF_5
0x40010e0	              0x90	                                     nop	       391	path.c	FUNCTION_16
0x40010e1	              0xc9	                                   leave	       391	path.c	FUNCTION_16
0x40010e2	              0xc3	                                     ret	       391	path.c	FUNCTION_16
normalize_path_copy_len	DO,0:functions,0:SWITCH,0:ELSE,4:IF,11:WHILE,7:CALL,0:FOR,1	189
0x40031ca	              0x55	                                push rbp	      1081	path.c	FUNCTION_47
0x40031cb	          0x4889e5	                            mov rbp, rsp	      1081	path.c	FUNCTION_47
0x40031ce	        0x4883ec38	                           sub rsp, 0x38	      1081	path.c	FUNCTION_47
0x40031d2	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1081	path.c	FUNCTION_47
0x40031d6	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1081	path.c	FUNCTION_47
0x40031da	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1081	path.c	FUNCTION_47
0x40031de	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1088	path.c	FUNCTION_47
0x40031e2	          0x4889c7	                            mov rdi, rax	      1088	path.c	FUNCTION_47
0x40031e5	      0xe878ceffff	       call sym.git_offset_1st_component	      1088	path.c	FUNCTION_47
0x40031ea	          0x4863d0	                         movsxd rdx, eax	      1088	path.c	FUNCTION_47
0x40031ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1088	path.c	FUNCTION_47
0x40031f1	          0x4801d0	                            add rax, rdx	      1088	path.c	FUNCTION_47
0x40031f4	        0x488945f0	             mov qword [rbp - 0x10], rax	      1088	path.c	FUNCTION_47
0x40031f8	            0xeb37	                           jmp 0x4003231	      1089	path.c	FUNCTION_47	WHILE_1
0x40031fa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1090	path.c	FUNCTION_47	WHILE_1
0x40031fe	        0x488d5001	                      lea rdx, [rax + 1]	      1090	path.c	FUNCTION_47	WHILE_1
0x4003202	        0x488955d0	             mov qword [rbp - 0x30], rdx	      1090	path.c	FUNCTION_47	WHILE_1
0x4003206	           0xfb600	                   movzx eax, byte [rax]	      1090	path.c	FUNCTION_47	WHILE_1
0x4003209	          0x8845ee	               mov byte [rbp - 0x12], al	      1090	path.c	FUNCTION_47	WHILE_1
0x400320c	         0xfbe45ee	            movsx eax, byte [rbp - 0x12]	      1091	path.c	FUNCTION_47	WHILE_1	IF_1
0x4003210	            0x89c7	                            mov edi, eax	      1091	path.c	FUNCTION_47	WHILE_1	IF_1
0x4003212	      0xe838ceffff	                 call sym.git_is_dir_sep	      1091	path.c	FUNCTION_47	WHILE_1	IF_1
0x4003217	            0x85c0	                           test eax, eax	      1091	path.c	FUNCTION_47	WHILE_1	IF_1
0x4003219	            0x7404	                            je 0x400321f	      1091	path.c	FUNCTION_47	WHILE_1	IF_1
0x400321b	        0xc645ee2f	            mov byte [rbp - 0x12], 0x2f 	      1092	path.c	FUNCTION_47	WHILE_1	IF_1
0x400321f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1093	path.c	FUNCTION_47	WHILE_1
0x4003223	        0x488d5001	                      lea rdx, [rax + 1]	      1093	path.c	FUNCTION_47	WHILE_1
0x4003227	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1093	path.c	FUNCTION_47	WHILE_1
0x400322b	         0xfb655ee	            movzx edx, byte [rbp - 0x12]	      1093	path.c	FUNCTION_47	WHILE_1
0x400322f	            0x8810	                      mov byte [rax], dl	      1093	path.c	FUNCTION_47	WHILE_1
0x4003231	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1089	path.c	FUNCTION_47	WHILE_1
0x4003235	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1089	path.c	FUNCTION_47	WHILE_1
0x4003239	            0x72bf	                            jb 0x40031fa	      1089	path.c	FUNCTION_47	WHILE_1
0x400323b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1095	path.c	FUNCTION_47
0x400323f	        0x488945f8	                mov qword [rbp - 8], rax	      1095	path.c	FUNCTION_47
0x4003243	            0xeb05	                           jmp 0x400324a	      1097	path.c	FUNCTION_47	WHILE_2
0x4003245	      0x488345d001	               add qword [rbp - 0x30], 1	      1098	path.c	FUNCTION_47	WHILE_2
0x400324a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1097	path.c	FUNCTION_47	WHILE_2
0x400324e	           0xfb600	                   movzx eax, byte [rax]	      1097	path.c	FUNCTION_47	WHILE_2
0x4003251	           0xfbec0	                           movsx eax, al	      1097	path.c	FUNCTION_47	WHILE_2
0x4003254	            0x89c7	                            mov edi, eax	      1097	path.c	FUNCTION_47	WHILE_2
0x4003256	      0xe8f4cdffff	                 call sym.git_is_dir_sep	      1097	path.c	FUNCTION_47	WHILE_2
0x400325b	            0x85c0	                           test eax, eax	      1097	path.c	FUNCTION_47	WHILE_2
0x400325d	            0x75e6	                           jne 0x4003245	      1097	path.c	FUNCTION_47	WHILE_2
0x400325f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1101	path.c	FUNCTION_47	FOR_1
0x4003263	           0xfb600	                   movzx eax, byte [rax]	      1101	path.c	FUNCTION_47	FOR_1
0x4003266	          0x8845ef	               mov byte [rbp - 0x11], al	      1101	path.c	FUNCTION_47	FOR_1
0x4003269	        0x807def2e	            cmp byte [rbp - 0x11], 0x2e 	      1111	path.c	FUNCTION_47	FOR_1	IF_2
0x400326d	     0xf85d1000000	                           jne 0x4003344	      1111	path.c	FUNCTION_47	FOR_1	IF_2
0x4003273	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1112	path.c	FUNCTION_47	FOR_1	IF_2	IF_3
0x4003277	        0x4883c001	                              add rax, 1	      1112	path.c	FUNCTION_47	FOR_1	IF_2	IF_3
0x400327b	           0xfb600	                   movzx eax, byte [rax]	      1112	path.c	FUNCTION_47	FOR_1	IF_2	IF_3
0x400327e	            0x84c0	                             test al, al	      1112	path.c	FUNCTION_47	FOR_1	IF_2	IF_3
0x4003280	            0x750a	                           jne 0x400328c	      1112	path.c	FUNCTION_47	FOR_1	IF_2	IF_3
0x4003282	      0x488345d001	               add qword [rbp - 0x30], 1	      1114	path.c	FUNCTION_47	FOR_1	IF_2	IF_3
0x4003287	      0xe9b8000000	                           jmp 0x4003344	      1114	path.c	FUNCTION_47	FOR_1	IF_2	IF_3
0x400328c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1115	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4
0x4003290	        0x4883c001	                              add rax, 1	      1115	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4
0x4003294	           0xfb600	                   movzx eax, byte [rax]	      1115	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4
0x4003297	           0xfbec0	                           movsx eax, al	      1115	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4
0x400329a	            0x89c7	                            mov edi, eax	      1115	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4
0x400329c	      0xe8aecdffff	                 call sym.git_is_dir_sep	      1115	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4
0x40032a1	            0x85c0	                           test eax, eax	      1115	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4
0x40032a3	            0x7426	                            je 0x40032cb	      1115	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4
0x40032a5	      0x488345d002	               add qword [rbp - 0x30], 2	      1117	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4
0x40032aa	            0xeb05	                           jmp 0x40032b1	      1118	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4	WHILE_3
0x40032ac	      0x488345d001	               add qword [rbp - 0x30], 1	      1119	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4	WHILE_3
0x40032b1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1118	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4	WHILE_3
0x40032b5	           0xfb600	                   movzx eax, byte [rax]	      1118	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4	WHILE_3
0x40032b8	           0xfbec0	                           movsx eax, al	      1118	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4	WHILE_3
0x40032bb	            0x89c7	                            mov edi, eax	      1118	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4	WHILE_3
0x40032bd	      0xe88dcdffff	                 call sym.git_is_dir_sep	      1118	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4	WHILE_3
0x40032c2	            0x85c0	                           test eax, eax	      1118	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4	WHILE_3
0x40032c4	            0x75e6	                           jne 0x40032ac	      1118	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4	WHILE_3
0x40032c6	      0xe96d010000	                           jmp 0x4003438	      1120	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_1	IF_4
0x40032cb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1121	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5
0x40032cf	        0x4883c001	                              add rax, 1	      1121	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5
0x40032d3	           0xfb600	                   movzx eax, byte [rax]	      1121	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5
0x40032d6	            0x3c2e	                            cmp al, 0x2e	      1121	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5
0x40032d8	            0x756a	                           jne 0x4003344	      1121	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5
0x40032da	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1122	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	IF_6
0x40032de	        0x4883c002	                              add rax, 2	      1122	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	IF_6
0x40032e2	           0xfb600	                   movzx eax, byte [rax]	      1122	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	IF_6
0x40032e5	            0x84c0	                             test al, al	      1122	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	IF_6
0x40032e7	            0x750a	                           jne 0x40032f3	      1122	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	IF_6
0x40032e9	      0x488345d002	               add qword [rbp - 0x30], 2	      1124	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	IF_6
0x40032ee	      0xe9cb000000	                           jmp 0x40033be	      1125	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	IF_6
0x40032f3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1126	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7
0x40032f7	        0x4883c002	                              add rax, 2	      1126	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7
0x40032fb	           0xfb600	                   movzx eax, byte [rax]	      1126	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7
0x40032fe	           0xfbec0	                           movsx eax, al	      1126	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7
0x4003301	            0x89c7	                            mov edi, eax	      1126	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7
0x4003303	      0xe847cdffff	                 call sym.git_is_dir_sep	      1126	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7
0x4003308	            0x85c0	                           test eax, eax	      1126	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7
0x400330a	            0x7438	                            je 0x4003344	      1126	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7
0x400330c	      0x488345d003	               add qword [rbp - 0x30], 3	      1128	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7
0x4003311	            0xeb05	                           jmp 0x4003318	      1129	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7	WHILE_4
0x4003313	      0x488345d001	               add qword [rbp - 0x30], 1	      1130	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7	WHILE_4
0x4003318	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1129	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7	WHILE_4
0x400331c	           0xfb600	                   movzx eax, byte [rax]	      1129	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7	WHILE_4
0x400331f	           0xfbec0	                           movsx eax, al	      1129	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7	WHILE_4
0x4003322	            0x89c7	                            mov edi, eax	      1129	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7	WHILE_4
0x4003324	      0xe826cdffff	                 call sym.git_is_dir_sep	      1129	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7	WHILE_4
0x4003329	            0x85c0	                           test eax, eax	      1129	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7	WHILE_4
0x400332b	            0x75e6	                           jne 0x4003313	      1129	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7	WHILE_4
0x400332d	      0xe98c000000	                           jmp 0x40033be	      1131	path.c	FUNCTION_47	FOR_1	IF_2	ELSE_2	IF_5	ELSE_3	IF_7
0x4003332	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1138	path.c	FUNCTION_47	FOR_1	WHILE_5
0x4003336	        0x488d5001	                      lea rdx, [rax + 1]	      1138	path.c	FUNCTION_47	FOR_1	WHILE_5
0x400333a	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1138	path.c	FUNCTION_47	FOR_1	WHILE_5
0x400333e	         0xfb655ef	            movzx edx, byte [rbp - 0x11]	      1138	path.c	FUNCTION_47	FOR_1	WHILE_5
0x4003342	            0x8810	                      mov byte [rax], dl	      1138	path.c	FUNCTION_47	FOR_1	WHILE_5
0x4003344	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1137	path.c	FUNCTION_47	FOR_1	WHILE_5
0x4003348	        0x488d5001	                      lea rdx, [rax + 1]	      1137	path.c	FUNCTION_47	FOR_1	WHILE_5
0x400334c	        0x488955d0	             mov qword [rbp - 0x30], rdx	      1137	path.c	FUNCTION_47	FOR_1	WHILE_5
0x4003350	           0xfb600	                   movzx eax, byte [rax]	      1137	path.c	FUNCTION_47	FOR_1	WHILE_5
0x4003353	          0x8845ef	               mov byte [rbp - 0x11], al	      1137	path.c	FUNCTION_47	FOR_1	WHILE_5
0x4003356	        0x807def00	                cmp byte [rbp - 0x11], 0	      1137	path.c	FUNCTION_47	FOR_1	WHILE_5
0x400335a	            0x740f	                            je 0x400336b	      1137	path.c	FUNCTION_47	FOR_1	WHILE_5
0x400335c	         0xfbe45ef	            movsx eax, byte [rbp - 0x11]	      1137	path.c	FUNCTION_47	FOR_1	WHILE_5
0x4003360	            0x89c7	                            mov edi, eax	      1137	path.c	FUNCTION_47	FOR_1	WHILE_5
0x4003362	      0xe8e8ccffff	                 call sym.git_is_dir_sep	      1137	path.c	FUNCTION_47	FOR_1	WHILE_5
0x4003367	            0x85c0	                           test eax, eax	      1137	path.c	FUNCTION_47	FOR_1	WHILE_5
0x4003369	            0x74c7	                            je 0x4003332	      1137	path.c	FUNCTION_47	FOR_1	WHILE_5
0x400336b	         0xfbe45ef	            movsx eax, byte [rbp - 0x11]	      1139	path.c	FUNCTION_47	FOR_1	IF_8
0x400336f	            0x89c7	                            mov edi, eax	      1139	path.c	FUNCTION_47	FOR_1	IF_8
0x4003371	      0xe8d9ccffff	                 call sym.git_is_dir_sep	      1139	path.c	FUNCTION_47	FOR_1	IF_8
0x4003376	            0x85c0	                           test eax, eax	      1139	path.c	FUNCTION_47	FOR_1	IF_8
0x4003378	            0x743c	                            je 0x40033b6	      1139	path.c	FUNCTION_47	FOR_1	IF_8
0x400337a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1140	path.c	FUNCTION_47	FOR_1	IF_8
0x400337e	        0x488d5001	                      lea rdx, [rax + 1]	      1140	path.c	FUNCTION_47	FOR_1	IF_8
0x4003382	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1140	path.c	FUNCTION_47	FOR_1	IF_8
0x4003386	          0xc6002f	                    mov byte [rax], 0x2f	      1140	path.c	FUNCTION_47	FOR_1	IF_8
0x4003389	            0xeb12	                           jmp 0x400339d	      1141	path.c	FUNCTION_47	FOR_1	IF_8	WHILE_6
0x400338b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1142	path.c	FUNCTION_47	FOR_1	IF_8	WHILE_6
0x400338f	        0x488d5001	                      lea rdx, [rax + 1]	      1142	path.c	FUNCTION_47	FOR_1	IF_8	WHILE_6
0x4003393	        0x488955d0	             mov qword [rbp - 0x30], rdx	      1142	path.c	FUNCTION_47	FOR_1	IF_8	WHILE_6
0x4003397	           0xfb600	                   movzx eax, byte [rax]	      1142	path.c	FUNCTION_47	FOR_1	IF_8	WHILE_6
0x400339a	          0x8845ef	               mov byte [rbp - 0x11], al	      1142	path.c	FUNCTION_47	FOR_1	IF_8	WHILE_6
0x400339d	         0xfbe45ef	            movsx eax, byte [rbp - 0x11]	      1141	path.c	FUNCTION_47	FOR_1	IF_8	WHILE_6
0x40033a1	            0x89c7	                            mov edi, eax	      1141	path.c	FUNCTION_47	FOR_1	IF_8	WHILE_6
0x40033a3	      0xe8a7ccffff	                 call sym.git_is_dir_sep	      1141	path.c	FUNCTION_47	FOR_1	IF_8	WHILE_6
0x40033a8	            0x85c0	                           test eax, eax	      1141	path.c	FUNCTION_47	FOR_1	IF_8	WHILE_6
0x40033aa	            0x75df	                           jne 0x400338b	      1141	path.c	FUNCTION_47	FOR_1	IF_8	WHILE_6
0x40033ac	      0x48836dd001	               sub qword [rbp - 0x30], 1	      1143	path.c	FUNCTION_47	FOR_1	IF_8
0x40033b1	      0xe981000000	                           jmp 0x4003437	      1146	path.c	FUNCTION_47	FOR_1
0x40033b6	        0x807def00	                cmp byte [rbp - 0x11], 0	      1144	path.c	FUNCTION_47	FOR_1	ELSE_4	IF_9
0x40033ba	            0x757b	                           jne 0x4003437	      1144	path.c	FUNCTION_47	FOR_1	ELSE_4	IF_9
0x40033bc	            0xeb7f	                           jmp 0x400343d	      1145	path.c	FUNCTION_47	FOR_1	ELSE_4	IF_9
0x40033be	      0x48836dd801	               sub qword [rbp - 0x28], 1	      1153	path.c	FUNCTION_47	FOR_1
0x40033c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1154	path.c	FUNCTION_47	FOR_1	IF_10
0x40033c7	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1154	path.c	FUNCTION_47	FOR_1	IF_10
0x40033cb	            0x770c	                            ja 0x40033d9	      1154	path.c	FUNCTION_47	FOR_1	IF_10
0x40033cd	      0xb8ffffffff	                     mov eax, 0xffffffff	      1155	path.c	FUNCTION_47	FOR_1	IF_10
0x40033d2	            0xeb75	                           jmp 0x4003449	      1155	path.c	FUNCTION_47	FOR_1	IF_10
0x40033d4	      0x48836dd801	               sub qword [rbp - 0x28], 1	      1158	path.c	FUNCTION_47	FOR_1	WHILE_7
0x40033d9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1157	path.c	FUNCTION_47	FOR_1	WHILE_7
0x40033dd	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1157	path.c	FUNCTION_47	FOR_1	WHILE_7
0x40033e1	            0x730f	                           jae 0x40033f2	      1157	path.c	FUNCTION_47	FOR_1	WHILE_7
0x40033e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1157	path.c	FUNCTION_47	FOR_1	WHILE_7
0x40033e7	        0x4883e801	                              sub rax, 1	      1157	path.c	FUNCTION_47	FOR_1	WHILE_7
0x40033eb	           0xfb600	                   movzx eax, byte [rax]	      1157	path.c	FUNCTION_47	FOR_1	WHILE_7
0x40033ee	            0x3c2f	                            cmp al, 0x2f	      1157	path.c	FUNCTION_47	FOR_1	WHILE_7
0x40033f0	            0x75e2	                           jne 0x40033d4	      1157	path.c	FUNCTION_47	FOR_1	WHILE_7
0x40033f2	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1159	path.c	FUNCTION_47	FOR_1	IF_11
0x40033f7	     0xf8462feffff	                            je 0x400325f	      1159	path.c	FUNCTION_47	FOR_1	IF_11
0x40033fd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1159	path.c	FUNCTION_47	FOR_1	IF_11
0x4003401	            0x8b00	                    mov eax, dword [rax]	      1159	path.c	FUNCTION_47	FOR_1	IF_11
0x4003403	            0x4898	                                    cdqe	      1159	path.c	FUNCTION_47	FOR_1	IF_11
0x4003405	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1159	path.c	FUNCTION_47	FOR_1	IF_11
0x4003409	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1159	path.c	FUNCTION_47	FOR_1	IF_11
0x400340d	          0x4829d1	                            sub rcx, rdx	      1159	path.c	FUNCTION_47	FOR_1	IF_11
0x4003410	          0x4889ca	                            mov rdx, rcx	      1159	path.c	FUNCTION_47	FOR_1	IF_11
0x4003413	          0x4839d0	                            cmp rax, rdx	      1159	path.c	FUNCTION_47	FOR_1	IF_11
0x4003416	     0xf8e43feffff	                           jle 0x400325f	      1159	path.c	FUNCTION_47	FOR_1	IF_11
0x400341c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1160	path.c	FUNCTION_47	FOR_1	IF_11
0x4003420	        0x488b45f8	                mov rax, qword [rbp - 8]	      1160	path.c	FUNCTION_47	FOR_1	IF_11
0x4003424	          0x4829c2	                            sub rdx, rax	      1160	path.c	FUNCTION_47	FOR_1	IF_11
0x4003427	          0x4889d0	                            mov rax, rdx	      1160	path.c	FUNCTION_47	FOR_1	IF_11
0x400342a	            0x89c2	                            mov edx, eax	      1160	path.c	FUNCTION_47	FOR_1	IF_11
0x400342c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1160	path.c	FUNCTION_47	FOR_1	IF_11
0x4003430	            0x8910	                    mov dword [rax], edx	      1160	path.c	FUNCTION_47	FOR_1	IF_11
0x4003432	      0xe928feffff	                           jmp 0x400325f	      1160	path.c	FUNCTION_47	FOR_1	IF_11
0x4003437	              0x90	                                     nop	      1146	path.c	FUNCTION_47	FOR_1
0x4003438	      0xe922feffff	                           jmp 0x400325f	      1161	path.c	FUNCTION_47	FOR_1
0x400343d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1162	path.c	FUNCTION_47
0x4003441	          0xc60000	                       mov byte [rax], 0	      1162	path.c	FUNCTION_47
0x4003444	      0xb800000000	                              mov eax, 0	      1163	path.c	FUNCTION_47
0x4003449	              0xc9	                                   leave	      1164	path.c	FUNCTION_47
0x400344a	              0xc3	                                     ret	      1164	path.c	FUNCTION_47
git_is_dir_sep	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,0:FOR,0	8
0x400004f	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_71
0x4000050	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_71
0x4000053	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_71
0x4000056	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_71
0x400005a	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_71
0x400005d	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_71
0x4000060	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_71
0x4000061	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_71
relative_path	DO,0:functions,0:SWITCH,0:ELSE,7:IF,13:WHILE,7:CALL,7:FOR,0	259
0x4002c95	              0x55	                                push rbp	       913	path.c	FUNCTION_45
0x4002c96	          0x4889e5	                            mov rbp, rsp	       913	path.c	FUNCTION_45
0x4002c99	        0x4883ec40	                           sub rsp, 0x40	       913	path.c	FUNCTION_45
0x4002c9d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       913	path.c	FUNCTION_45
0x4002ca1	        0x488975d0	             mov qword [rbp - 0x30], rsi	       913	path.c	FUNCTION_45
0x4002ca5	        0x488955c8	             mov qword [rbp - 0x38], rdx	       913	path.c	FUNCTION_45
0x4002ca9	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       914	path.c	FUNCTION_45	CALL_1
0x4002cae	            0x740e	                            je 0x4002cbe	       914	path.c	FUNCTION_45	CALL_1
0x4002cb0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       914	path.c	FUNCTION_45	CALL_1
0x4002cb4	          0x4889c7	                            mov rdi, rax	       914	path.c	FUNCTION_45	CALL_1
0x4002cb7	      0xe800000000	                          call 0x4002cbc	       914	path.c	FUNCTION_45	CALL_1
0x4002cbc	            0xeb05	                           jmp 0x4002cc3	       914	path.c	FUNCTION_45	CALL_1
0x4002cbe	      0xb800000000	                              mov eax, 0	       914	path.c	FUNCTION_45	CALL_1
0x4002cc3	          0x8945f8	                mov dword [rbp - 8], eax	       914	path.c	FUNCTION_45	CALL_1
0x4002cc6	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       915	path.c	FUNCTION_45	CALL_2
0x4002ccb	            0x740e	                            je 0x4002cdb	       915	path.c	FUNCTION_45	CALL_2
0x4002ccd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       915	path.c	FUNCTION_45	CALL_2
0x4002cd1	          0x4889c7	                            mov rdi, rax	       915	path.c	FUNCTION_45	CALL_2
0x4002cd4	      0xe800000000	                          call 0x4002cd9	       915	path.c	FUNCTION_45	CALL_2
0x4002cd9	            0xeb05	                           jmp 0x4002ce0	       915	path.c	FUNCTION_45	CALL_2
0x4002cdb	      0xb800000000	                              mov eax, 0	       915	path.c	FUNCTION_45	CALL_2
0x4002ce0	          0x8945fc	                mov dword [rbp - 4], eax	       915	path.c	FUNCTION_45	CALL_2
0x4002ce3	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       916	path.c	FUNCTION_45
0x4002cea	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       917	path.c	FUNCTION_45
0x4002cf1	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       918	path.c	FUNCTION_45
0x4002cf8	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       918	path.c	FUNCTION_45
0x4002cff	        0x837df800	                  cmp dword [rbp - 8], 0	       920	path.c	FUNCTION_45	IF_1
0x4002d03	            0x750a	                           jne 0x4002d0f	       920	path.c	FUNCTION_45	IF_1
0x4002d05	      0xb800000000	                              mov eax, 0	       921	path.c	FUNCTION_45	IF_1
0x4002d0a	      0xe9d0020000	                           jmp 0x4002fdf	       921	path.c	FUNCTION_45	IF_1
0x4002d0f	        0x837dfc00	                  cmp dword [rbp - 4], 0	       922	path.c	FUNCTION_45	ELSE_1	IF_2
0x4002d13	            0x7509	                           jne 0x4002d1e	       922	path.c	FUNCTION_45	ELSE_1	IF_2
0x4002d15	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       923	path.c	FUNCTION_45	ELSE_1	IF_2
0x4002d19	      0xe9c1020000	                           jmp 0x4002fdf	       923	path.c	FUNCTION_45	ELSE_1	IF_2
0x4002d1e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       925	path.c	FUNCTION_45	IF_3	CALL_3
0x4002d22	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       925	path.c	FUNCTION_45	IF_3	CALL_3
0x4002d26	          0x4889d6	                            mov rsi, rdx	       925	path.c	FUNCTION_45	IF_3	CALL_3
0x4002d29	          0x4889c7	                            mov rdi, rax	       925	path.c	FUNCTION_45	IF_3	CALL_3
0x4002d2c	      0xe8d8feffff	                 call sym.have_same_root	       925	path.c	FUNCTION_45	IF_3	CALL_3
0x4002d31	            0x85c0	                           test eax, eax	       925	path.c	FUNCTION_45	IF_3	CALL_3
0x4002d33	            0x741a	                            je 0x4002d4f	       925	path.c	FUNCTION_45	IF_3	CALL_3
0x4002d35	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       927	path.c	FUNCTION_45	IF_3
0x4002d39	          0x4889c7	                            mov rdi, rax	       927	path.c	FUNCTION_45	IF_3
0x4002d3c	      0xe8ffd2ffff	       call sym.git_has_dos_drive_prefix	       927	path.c	FUNCTION_45	IF_3
0x4002d41	          0x8945f4	              mov dword [rbp - 0xc], eax	       927	path.c	FUNCTION_45	IF_3
0x4002d44	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       927	path.c	FUNCTION_45	IF_3
0x4002d47	          0x8945f0	             mov dword [rbp - 0x10], eax	       927	path.c	FUNCTION_45	IF_3
0x4002d4a	      0xe985000000	                           jmp 0x4002dd4	       932	path.c	FUNCTION_45	WHILE_1
0x4002d4f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       929	path.c	FUNCTION_45	ELSE_2
0x4002d53	      0xe987020000	                           jmp 0x4002fdf	       929	path.c	FUNCTION_45	ELSE_2
0x4002d58	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       933	path.c	FUNCTION_45	WHILE_1	IF_4
0x4002d5b	          0x4863d0	                         movsxd rdx, eax	       933	path.c	FUNCTION_45	WHILE_1	IF_4
0x4002d5e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       933	path.c	FUNCTION_45	WHILE_1	IF_4
0x4002d62	          0x4801d0	                            add rax, rdx	       933	path.c	FUNCTION_45	WHILE_1	IF_4
0x4002d65	           0xfb600	                   movzx eax, byte [rax]	       933	path.c	FUNCTION_45	WHILE_1	IF_4
0x4002d68	           0xfbec0	                           movsx eax, al	       933	path.c	FUNCTION_45	WHILE_1	IF_4
0x4002d6b	            0x89c7	                            mov edi, eax	       933	path.c	FUNCTION_45	WHILE_1	IF_4
0x4002d6d	      0xe8ddd2ffff	                 call sym.git_is_dir_sep	       933	path.c	FUNCTION_45	WHILE_1	IF_4
0x4002d72	            0x85c0	                           test eax, eax	       933	path.c	FUNCTION_45	WHILE_1	IF_4
0x4002d74	            0x7456	                            je 0x4002dcc	       933	path.c	FUNCTION_45	WHILE_1	IF_4
0x4002d76	            0xeb04	                           jmp 0x4002d7c	       934	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_2
0x4002d78	        0x8345f001	               add dword [rbp - 0x10], 1	       935	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_2
0x4002d7c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       934	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_2
0x4002d7f	          0x4863d0	                         movsxd rdx, eax	       934	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_2
0x4002d82	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       934	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_2
0x4002d86	          0x4801d0	                            add rax, rdx	       934	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_2
0x4002d89	           0xfb600	                   movzx eax, byte [rax]	       934	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_2
0x4002d8c	           0xfbec0	                           movsx eax, al	       934	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_2
0x4002d8f	            0x89c7	                            mov edi, eax	       934	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_2
0x4002d91	      0xe8b9d2ffff	                 call sym.git_is_dir_sep	       934	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_2
0x4002d96	            0x85c0	                           test eax, eax	       934	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_2
0x4002d98	            0x75de	                           jne 0x4002d78	       934	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_2
0x4002d9a	            0xeb04	                           jmp 0x4002da0	       936	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_3
0x4002d9c	        0x8345f401	                add dword [rbp - 0xc], 1	       937	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_3
0x4002da0	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       936	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_3
0x4002da3	          0x4863d0	                         movsxd rdx, eax	       936	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_3
0x4002da6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       936	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_3
0x4002daa	          0x4801d0	                            add rax, rdx	       936	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_3
0x4002dad	           0xfb600	                   movzx eax, byte [rax]	       936	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_3
0x4002db0	           0xfbec0	                           movsx eax, al	       936	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_3
0x4002db3	            0x89c7	                            mov edi, eax	       936	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_3
0x4002db5	      0xe895d2ffff	                 call sym.git_is_dir_sep	       936	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_3
0x4002dba	            0x85c0	                           test eax, eax	       936	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_3
0x4002dbc	            0x75de	                           jne 0x4002d9c	       936	path.c	FUNCTION_45	WHILE_1	IF_4	WHILE_3
0x4002dbe	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       938	path.c	FUNCTION_45	WHILE_1	IF_4
0x4002dc1	          0x8945ec	             mov dword [rbp - 0x14], eax	       938	path.c	FUNCTION_45	WHILE_1	IF_4
0x4002dc4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       939	path.c	FUNCTION_45	WHILE_1	IF_4
0x4002dc7	          0x8945e8	             mov dword [rbp - 0x18], eax	       939	path.c	FUNCTION_45	WHILE_1	IF_4
0x4002dca	            0xeb08	                           jmp 0x4002dd4	       939	path.c	FUNCTION_45	WHILE_1	IF_4
0x4002dcc	        0x8345f001	               add dword [rbp - 0x10], 1	       941	path.c	FUNCTION_45	WHILE_1	ELSE_3
0x4002dd0	        0x8345f401	                add dword [rbp - 0xc], 1	       942	path.c	FUNCTION_45	WHILE_1	ELSE_3
0x4002dd4	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       932	path.c	FUNCTION_45	WHILE_1
0x4002dd7	          0x3b45fc	                cmp eax, dword [rbp - 4]	       932	path.c	FUNCTION_45	WHILE_1
0x4002dda	            0x7d30	                           jge 0x4002e0c	       932	path.c	FUNCTION_45	WHILE_1
0x4002ddc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       932	path.c	FUNCTION_45	WHILE_1
0x4002ddf	          0x3b45f8	                cmp eax, dword [rbp - 8]	       932	path.c	FUNCTION_45	WHILE_1
0x4002de2	            0x7d28	                           jge 0x4002e0c	       932	path.c	FUNCTION_45	WHILE_1
0x4002de4	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       932	path.c	FUNCTION_45	WHILE_1
0x4002de7	          0x4863d0	                         movsxd rdx, eax	       932	path.c	FUNCTION_45	WHILE_1
0x4002dea	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       932	path.c	FUNCTION_45	WHILE_1
0x4002dee	          0x4801d0	                            add rax, rdx	       932	path.c	FUNCTION_45	WHILE_1
0x4002df1	           0xfb610	                   movzx edx, byte [rax]	       932	path.c	FUNCTION_45	WHILE_1
0x4002df4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       932	path.c	FUNCTION_45	WHILE_1
0x4002df7	          0x4863c8	                         movsxd rcx, eax	       932	path.c	FUNCTION_45	WHILE_1
0x4002dfa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       932	path.c	FUNCTION_45	WHILE_1
0x4002dfe	          0x4801c8	                            add rax, rcx	       932	path.c	FUNCTION_45	WHILE_1
0x4002e01	           0xfb600	                   movzx eax, byte [rax]	       932	path.c	FUNCTION_45	WHILE_1
0x4002e04	            0x38c2	                              cmp dl, al	       932	path.c	FUNCTION_45	WHILE_1
0x4002e06	     0xf844cffffff	                            je 0x4002d58	       932	path.c	FUNCTION_45	WHILE_1
0x4002e0c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       946	path.c	FUNCTION_45	IF_5
0x4002e0f	          0x3b45fc	                cmp eax, dword [rbp - 4]	       946	path.c	FUNCTION_45	IF_5
0x4002e12	            0x7c6d	                            jl 0x4002e81	       946	path.c	FUNCTION_45	IF_5
0x4002e14	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       948	path.c	FUNCTION_45	IF_5
0x4002e17	          0x3b45fc	                cmp eax, dword [rbp - 4]	       948	path.c	FUNCTION_45	IF_5
0x4002e1a	            0x7d65	                           jge 0x4002e81	       948	path.c	FUNCTION_45	IF_5
0x4002e1c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       954	path.c	FUNCTION_45	IF_5	IF_6
0x4002e1f	          0x3b45f8	                cmp eax, dword [rbp - 8]	       954	path.c	FUNCTION_45	IF_5	IF_6
0x4002e22	            0x7c0b	                            jl 0x4002e2f	       954	path.c	FUNCTION_45	IF_5	IF_6
0x4002e24	          0x8b45f8	                mov eax, dword [rbp - 8]	       956	path.c	FUNCTION_45	IF_5	IF_6
0x4002e27	          0x8945e8	             mov dword [rbp - 0x18], eax	       956	path.c	FUNCTION_45	IF_5	IF_6
0x4002e2a	      0xe9aa000000	                           jmp 0x4002ed9	       954	path.c	FUNCTION_45	IF_5	IF_6
0x4002e2f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       957	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7
0x4002e32	          0x4863d0	                         movsxd rdx, eax	       957	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7
0x4002e35	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       957	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7
0x4002e39	          0x4801d0	                            add rax, rdx	       957	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7
0x4002e3c	           0xfb600	                   movzx eax, byte [rax]	       957	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7
0x4002e3f	           0xfbec0	                           movsx eax, al	       957	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7
0x4002e42	            0x89c7	                            mov edi, eax	       957	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7
0x4002e44	      0xe806d2ffff	                 call sym.git_is_dir_sep	       957	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7
0x4002e49	            0x85c0	                           test eax, eax	       957	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7
0x4002e4b	            0x742c	                            je 0x4002e79	       957	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7
0x4002e4d	            0xeb04	                           jmp 0x4002e53	       959	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7	WHILE_4
0x4002e4f	        0x8345f401	                add dword [rbp - 0xc], 1	       960	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7	WHILE_4
0x4002e53	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       959	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7	WHILE_4
0x4002e56	          0x4863d0	                         movsxd rdx, eax	       959	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7	WHILE_4
0x4002e59	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       959	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7	WHILE_4
0x4002e5d	          0x4801d0	                            add rax, rdx	       959	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7	WHILE_4
0x4002e60	           0xfb600	                   movzx eax, byte [rax]	       959	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7	WHILE_4
0x4002e63	           0xfbec0	                           movsx eax, al	       959	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7	WHILE_4
0x4002e66	            0x89c7	                            mov edi, eax	       959	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7	WHILE_4
0x4002e68	      0xe8e2d1ffff	                 call sym.git_is_dir_sep	       959	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7	WHILE_4
0x4002e6d	            0x85c0	                           test eax, eax	       959	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7	WHILE_4
0x4002e6f	            0x75de	                           jne 0x4002e4f	       959	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7	WHILE_4
0x4002e71	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       961	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7
0x4002e74	          0x8945e8	             mov dword [rbp - 0x18], eax	       961	path.c	FUNCTION_45	IF_5	ELSE_4	IF_7
0x4002e77	            0xeb60	                           jmp 0x4002ed9	       954	path.c	FUNCTION_45	IF_5	IF_6
0x4002e79	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       964	path.c	FUNCTION_45	IF_5	ELSE_5
0x4002e7c	          0x8945f0	             mov dword [rbp - 0x10], eax	       964	path.c	FUNCTION_45	IF_5	ELSE_5
0x4002e7f	            0xeb58	                           jmp 0x4002ed9	       954	path.c	FUNCTION_45	IF_5	IF_6
0x4002e81	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       966	path.c	FUNCTION_45	ELSE_6	IF_8
0x4002e84	          0x3b45f8	                cmp eax, dword [rbp - 8]	       966	path.c	FUNCTION_45	ELSE_6	IF_8
0x4002e87	            0x7c50	                            jl 0x4002ed9	       966	path.c	FUNCTION_45	ELSE_6	IF_8
0x4002e89	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       968	path.c	FUNCTION_45	ELSE_6	IF_8
0x4002e8c	          0x3b45f8	                cmp eax, dword [rbp - 8]	       968	path.c	FUNCTION_45	ELSE_6	IF_8
0x4002e8f	            0x7d48	                           jge 0x4002ed9	       968	path.c	FUNCTION_45	ELSE_6	IF_8
0x4002e91	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       971	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9
0x4002e94	          0x4863d0	                         movsxd rdx, eax	       971	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9
0x4002e97	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       971	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9
0x4002e9b	          0x4801d0	                            add rax, rdx	       971	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9
0x4002e9e	           0xfb600	                   movzx eax, byte [rax]	       971	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9
0x4002ea1	           0xfbec0	                           movsx eax, al	       971	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9
0x4002ea4	            0x89c7	                            mov edi, eax	       971	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9
0x4002ea6	      0xe8a4d1ffff	                 call sym.git_is_dir_sep	       971	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9
0x4002eab	            0x85c0	                           test eax, eax	       971	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9
0x4002ead	            0x742a	                            je 0x4002ed9	       971	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9
0x4002eaf	            0xeb04	                           jmp 0x4002eb5	       973	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9	WHILE_5
0x4002eb1	        0x8345f001	               add dword [rbp - 0x10], 1	       974	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9	WHILE_5
0x4002eb5	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       973	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9	WHILE_5
0x4002eb8	          0x4863d0	                         movsxd rdx, eax	       973	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9	WHILE_5
0x4002ebb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       973	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9	WHILE_5
0x4002ebf	          0x4801d0	                            add rax, rdx	       973	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9	WHILE_5
0x4002ec2	           0xfb600	                   movzx eax, byte [rax]	       973	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9	WHILE_5
0x4002ec5	           0xfbec0	                           movsx eax, al	       973	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9	WHILE_5
0x4002ec8	            0x89c7	                            mov edi, eax	       973	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9	WHILE_5
0x4002eca	      0xe880d1ffff	                 call sym.git_is_dir_sep	       973	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9	WHILE_5
0x4002ecf	            0x85c0	                           test eax, eax	       973	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9	WHILE_5
0x4002ed1	            0x75de	                           jne 0x4002eb1	       973	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9	WHILE_5
0x4002ed3	          0x8b45f8	                mov eax, dword [rbp - 8]	       975	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9
0x4002ed6	          0x8945e8	             mov dword [rbp - 0x18], eax	       975	path.c	FUNCTION_45	ELSE_6	IF_8	IF_9
0x4002ed9	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       978	path.c	FUNCTION_45
0x4002edc	            0x4898	                                    cdqe	       978	path.c	FUNCTION_45
0x4002ede	        0x480145d8	            add qword [rbp - 0x28], rax 	       978	path.c	FUNCTION_45
0x4002ee2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       979	path.c	FUNCTION_45
0x4002ee5	          0x2945f8	                sub dword [rbp - 8], eax	       979	path.c	FUNCTION_45
0x4002ee8	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       981	path.c	FUNCTION_45	IF_10
0x4002eeb	          0x3b45fc	                cmp eax, dword [rbp - 4]	       981	path.c	FUNCTION_45	IF_10
0x4002eee	            0x7c19	                            jl 0x4002f09	       981	path.c	FUNCTION_45	IF_10
0x4002ef0	        0x837df800	                  cmp dword [rbp - 8], 0	       982	path.c	FUNCTION_45	IF_10	IF_11
0x4002ef4	            0x750a	                           jne 0x4002f00	       982	path.c	FUNCTION_45	IF_10	IF_11
0x4002ef6	      0xb800000000	                              mov eax, 0	       983	path.c	FUNCTION_45	IF_10	IF_11
0x4002efb	      0xe9df000000	                           jmp 0x4002fdf	       983	path.c	FUNCTION_45	IF_10	IF_11
0x4002f00	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       985	path.c	FUNCTION_45	IF_10	ELSE_7
0x4002f04	      0xe9d6000000	                           jmp 0x4002fdf	       985	path.c	FUNCTION_45	IF_10	ELSE_7
0x4002f09	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       988	path.c	FUNCTION_45
0x4002f0d	      0xbe00000000	                              mov esi, 0	       988	path.c	FUNCTION_45
0x4002f12	          0x4889c7	                            mov rdi, rax	       988	path.c	FUNCTION_45
0x4002f15	      0xe827d2ffff	                  call sym.strbuf_setlen	       988	path.c	FUNCTION_45
0x4002f1a	          0x8b45f8	                mov eax, dword [rbp - 8]	       989	path.c	FUNCTION_45	CALL_4
0x4002f1d	          0x4863d0	                         movsxd rdx, eax	       989	path.c	FUNCTION_45	CALL_4
0x4002f20	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       989	path.c	FUNCTION_45	CALL_4
0x4002f24	          0x4889d6	                            mov rsi, rdx	       989	path.c	FUNCTION_45	CALL_4
0x4002f27	          0x4889c7	                            mov rdi, rax	       989	path.c	FUNCTION_45	CALL_4
0x4002f2a	      0xe800000000	                          call 0x4002f2f	       989	path.c	FUNCTION_45	CALL_4
0x4002f2f	            0xeb59	                           jmp 0x4002f8a	       991	path.c	FUNCTION_45	WHILE_6
0x4002f31	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       992	path.c	FUNCTION_45	WHILE_6	IF_12
0x4002f34	          0x4863d0	                         movsxd rdx, eax	       992	path.c	FUNCTION_45	WHILE_6	IF_12
0x4002f37	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       992	path.c	FUNCTION_45	WHILE_6	IF_12
0x4002f3b	          0x4801d0	                            add rax, rdx	       992	path.c	FUNCTION_45	WHILE_6	IF_12
0x4002f3e	           0xfb600	                   movzx eax, byte [rax]	       992	path.c	FUNCTION_45	WHILE_6	IF_12
0x4002f41	           0xfbec0	                           movsx eax, al	       992	path.c	FUNCTION_45	WHILE_6	IF_12
0x4002f44	            0x89c7	                            mov edi, eax	       992	path.c	FUNCTION_45	WHILE_6	IF_12
0x4002f46	      0xe804d1ffff	                 call sym.git_is_dir_sep	       992	path.c	FUNCTION_45	WHILE_6	IF_12
0x4002f4b	            0x85c0	                           test eax, eax	       992	path.c	FUNCTION_45	WHILE_6	IF_12
0x4002f4d	            0x7437	                            je 0x4002f86	       992	path.c	FUNCTION_45	WHILE_6	IF_12
0x4002f4f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       993	path.c	FUNCTION_45	WHILE_6	IF_12	CALL_5
0x4002f53	      0xbe00000000	                              mov esi, 0	       993	path.c	FUNCTION_45	WHILE_6	IF_12	CALL_5
0x4002f58	          0x4889c7	                            mov rdi, rax	       993	path.c	FUNCTION_45	WHILE_6	IF_12	CALL_5
0x4002f5b	      0xe8e9d2ffff	                  call sym.strbuf_addstr	       993	path.c	FUNCTION_45	WHILE_6	IF_12	CALL_5
0x4002f60	            0xeb04	                           jmp 0x4002f66	       994	path.c	FUNCTION_45	WHILE_6	IF_12	WHILE_7
0x4002f62	        0x8345f001	               add dword [rbp - 0x10], 1	       995	path.c	FUNCTION_45	WHILE_6	IF_12	WHILE_7
0x4002f66	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       994	path.c	FUNCTION_45	WHILE_6	IF_12	WHILE_7
0x4002f69	          0x4863d0	                         movsxd rdx, eax	       994	path.c	FUNCTION_45	WHILE_6	IF_12	WHILE_7
0x4002f6c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       994	path.c	FUNCTION_45	WHILE_6	IF_12	WHILE_7
0x4002f70	          0x4801d0	                            add rax, rdx	       994	path.c	FUNCTION_45	WHILE_6	IF_12	WHILE_7
0x4002f73	           0xfb600	                   movzx eax, byte [rax]	       994	path.c	FUNCTION_45	WHILE_6	IF_12	WHILE_7
0x4002f76	           0xfbec0	                           movsx eax, al	       994	path.c	FUNCTION_45	WHILE_6	IF_12	WHILE_7
0x4002f79	            0x89c7	                            mov edi, eax	       994	path.c	FUNCTION_45	WHILE_6	IF_12	WHILE_7
0x4002f7b	      0xe8cfd0ffff	                 call sym.git_is_dir_sep	       994	path.c	FUNCTION_45	WHILE_6	IF_12	WHILE_7
0x4002f80	            0x85c0	                           test eax, eax	       994	path.c	FUNCTION_45	WHILE_6	IF_12	WHILE_7
0x4002f82	            0x75de	                           jne 0x4002f62	       994	path.c	FUNCTION_45	WHILE_6	IF_12	WHILE_7
0x4002f84	            0xeb04	                           jmp 0x4002f8a	       996	path.c	FUNCTION_45	WHILE_6	IF_12
0x4002f86	        0x8345f001	               add dword [rbp - 0x10], 1	       998	path.c	FUNCTION_45	WHILE_6
0x4002f8a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       991	path.c	FUNCTION_45	WHILE_6
0x4002f8d	          0x3b45fc	                cmp eax, dword [rbp - 4]	       991	path.c	FUNCTION_45	WHILE_6
0x4002f90	            0x7c9f	                            jl 0x4002f31	       991	path.c	FUNCTION_45	WHILE_6
0x4002f92	          0x8b45fc	                mov eax, dword [rbp - 4]	      1000	path.c	FUNCTION_45	IF_13
0x4002f95	            0x4898	                                    cdqe	      1000	path.c	FUNCTION_45	IF_13
0x4002f97	        0x488d50ff	                      lea rdx, [rax - 1]	      1000	path.c	FUNCTION_45	IF_13
0x4002f9b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1000	path.c	FUNCTION_45	IF_13
0x4002f9f	          0x4801d0	                            add rax, rdx	      1000	path.c	FUNCTION_45	IF_13
0x4002fa2	           0xfb600	                   movzx eax, byte [rax]	      1000	path.c	FUNCTION_45	IF_13
0x4002fa5	           0xfbec0	                           movsx eax, al	      1000	path.c	FUNCTION_45	IF_13
0x4002fa8	            0x89c7	                            mov edi, eax	      1000	path.c	FUNCTION_45	IF_13
0x4002faa	      0xe8a0d0ffff	                 call sym.git_is_dir_sep	      1000	path.c	FUNCTION_45	IF_13
0x4002faf	            0x85c0	                           test eax, eax	      1000	path.c	FUNCTION_45	IF_13
0x4002fb1	            0x7511	                           jne 0x4002fc4	      1000	path.c	FUNCTION_45	IF_13
0x4002fb3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1001	path.c	FUNCTION_45	CALL_6
0x4002fb7	      0xbe00000000	                              mov esi, 0	      1001	path.c	FUNCTION_45	CALL_6
0x4002fbc	          0x4889c7	                            mov rdi, rax	      1001	path.c	FUNCTION_45	CALL_6
0x4002fbf	      0xe885d2ffff	                  call sym.strbuf_addstr	      1001	path.c	FUNCTION_45	CALL_6
0x4002fc4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1003	path.c	FUNCTION_45	CALL_7
0x4002fc8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1003	path.c	FUNCTION_45	CALL_7
0x4002fcc	          0x4889d6	                            mov rsi, rdx	      1003	path.c	FUNCTION_45	CALL_7
0x4002fcf	          0x4889c7	                            mov rdi, rax	      1003	path.c	FUNCTION_45	CALL_7
0x4002fd2	      0xe872d2ffff	                  call sym.strbuf_addstr	      1003	path.c	FUNCTION_45	CALL_7
0x4002fd7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1005	path.c	FUNCTION_45
0x4002fdb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1005	path.c	FUNCTION_45
0x4002fdf	              0xc9	                                   leave	      1006	path.c	FUNCTION_45
0x4002fe0	              0xc3	                                     ret	      1006	path.c	FUNCTION_45
git_pathdup	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,4:FOR,0	49
0x40016e9	              0x55	                                push rbp	       470	path.c	FUNCTION_24
0x40016ea	          0x4889e5	                            mov rbp, rsp	       470	path.c	FUNCTION_24
0x40016ed	    0x4881ec000100	                          sub rsp, 0x100	       470	path.c	FUNCTION_24
0x40016f4	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	       470	path.c	FUNCTION_24
0x40016fb	    0x4889b558ffff	             mov qword [rbp - 0xa8], rsi	       470	path.c	FUNCTION_24
0x4001702	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       470	path.c	FUNCTION_24
0x4001709	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       470	path.c	FUNCTION_24
0x4001710	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       470	path.c	FUNCTION_24
0x4001717	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       470	path.c	FUNCTION_24
0x400171e	            0x84c0	                             test al, al	       470	path.c	FUNCTION_24
0x4001720	            0x7420	                            je 0x4001742	       470	path.c	FUNCTION_24
0x4001722	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       470	path.c	FUNCTION_24
0x4001726	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       470	path.c	FUNCTION_24
0x400172a	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       470	path.c	FUNCTION_24
0x400172e	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       470	path.c	FUNCTION_24
0x4001732	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       470	path.c	FUNCTION_24
0x4001736	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       470	path.c	FUNCTION_24
0x400173a	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       470	path.c	FUNCTION_24
0x400173e	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       470	path.c	FUNCTION_24
0x4001742	    0x64488b042528	                mov rax, qword fs:[0x28]	       470	path.c	FUNCTION_24
0x400174b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       470	path.c	FUNCTION_24
0x4001752	            0x31c0	                            xor eax, eax	       470	path.c	FUNCTION_24
0x4001754	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       471	path.c	FUNCTION_24
0x400175f	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	       471	path.c	FUNCTION_24
0x400176a	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       471	path.c	FUNCTION_24
0x4001775	    0xc78530ffffff	               mov dword [rbp - 0xd0], 8	       473	path.c	FUNCTION_24	CALL_1
0x400177f	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       473	path.c	FUNCTION_24	CALL_1
0x4001789	        0x488d4510	                   lea rax, [rbp + 0x10]	       473	path.c	FUNCTION_24	CALL_1
0x400178d	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       473	path.c	FUNCTION_24	CALL_1
0x4001794	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       473	path.c	FUNCTION_24	CALL_1
0x400179b	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       473	path.c	FUNCTION_24	CALL_1
0x40017a2	    0x488b05000000	            mov rax, qword [0x040017a9] 	       474	path.c	FUNCTION_24	CALL_2
0x40017a9	    0x488db530ffff	                   lea rsi, [rbp - 0xd0]	       474	path.c	FUNCTION_24	CALL_2
0x40017b0	    0x488b8d08ffff	             mov rcx, qword [rbp - 0xf8]	       474	path.c	FUNCTION_24	CALL_2
0x40017b7	    0x488d9510ffff	                   lea rdx, [rbp - 0xf0]	       474	path.c	FUNCTION_24	CALL_2
0x40017be	          0x4989f0	                             mov r8, rsi	       474	path.c	FUNCTION_24	CALL_2
0x40017c1	      0xbe00000000	                              mov esi, 0	       474	path.c	FUNCTION_24	CALL_2
0x40017c6	          0x4889c7	                            mov rdi, rax	       474	path.c	FUNCTION_24	CALL_2
0x40017c9	      0xe896f9ffff	                    call sym.do_git_path	       474	path.c	FUNCTION_24	CALL_2
0x40017ce	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       476	path.c	FUNCTION_24	CALL_4
0x40017d5	      0xbe00000000	                              mov esi, 0	       476	path.c	FUNCTION_24	CALL_4
0x40017da	          0x4889c7	                            mov rdi, rax	       476	path.c	FUNCTION_24	CALL_4
0x40017dd	      0xe800000000	                          call 0x40017e2	       476	path.c	FUNCTION_24	CALL_4
0x40017e2	    0x488bbd48ffff	             mov rdi, qword [rbp - 0xb8]	       477	path.c	FUNCTION_24
0x40017e9	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       477	path.c	FUNCTION_24
0x40017f2	            0x7405	                            je 0x40017f9	       477	path.c	FUNCTION_24
0x40017f4	      0xe800000000	                          call 0x40017f9	       477	path.c	FUNCTION_24
0x40017f9	              0xc9	                                   leave	       477	path.c	FUNCTION_24
0x40017fa	              0xc3	                                     ret	       477	path.c	FUNCTION_24
adjust_shared_perm	DO,0:functions,0:SWITCH,0:ELSE,0:IF,4:WHILE,0:CALL,5:FOR,0	57
0x4002ac3	              0x55	                                push rbp	       862	path.c	ELSE_2	FUNCTION_42
0x4002ac4	          0x4889e5	                            mov rbp, rsp	       862	path.c	ELSE_2	FUNCTION_42
0x4002ac7	        0x4883ec20	                           sub rsp, 0x20	       862	path.c	ELSE_2	FUNCTION_42
0x4002acb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       862	path.c	ELSE_2	FUNCTION_42
0x4002acf	    0x64488b042528	                mov rax, qword fs:[0x28]	       862	path.c	ELSE_2	FUNCTION_42
0x4002ad8	        0x488945f8	                mov qword [rbp - 8], rax	       862	path.c	ELSE_2	FUNCTION_42
0x4002adc	            0x31c0	                            xor eax, eax	       862	path.c	ELSE_2	FUNCTION_42
0x4002ade	      0xe800000000	                          call 0x4002ae3	       865	path.c	ELSE_2	FUNCTION_42	IF_1	CALL_1
0x4002ae3	            0x85c0	                           test eax, eax	       865	path.c	ELSE_2	FUNCTION_42	IF_1	CALL_1
0x4002ae5	            0x750a	                           jne 0x4002af1	       865	path.c	ELSE_2	FUNCTION_42	IF_1	CALL_1
0x4002ae7	      0xb800000000	                              mov eax, 0	       866	path.c	ELSE_2	FUNCTION_42	IF_1
0x4002aec	      0xe982000000	                           jmp 0x4002b73	       866	path.c	ELSE_2	FUNCTION_42	IF_1
0x4002af1	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       867	path.c	ELSE_2	FUNCTION_42	IF_2	CALL_2
0x4002af5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       867	path.c	ELSE_2	FUNCTION_42	IF_2	CALL_2
0x4002af9	          0x4889d6	                            mov rsi, rdx	       867	path.c	ELSE_2	FUNCTION_42	IF_2	CALL_2
0x4002afc	          0x4889c7	                            mov rdi, rax	       867	path.c	ELSE_2	FUNCTION_42	IF_2	CALL_2
0x4002aff	      0xe837d8ffff	               call sym.get_st_mode_bits	       867	path.c	ELSE_2	FUNCTION_42	IF_2	CALL_2
0x4002b04	            0x85c0	                           test eax, eax	       867	path.c	ELSE_2	FUNCTION_42	IF_2	CALL_2
0x4002b06	            0x7907	                           jns 0x4002b0f	       867	path.c	ELSE_2	FUNCTION_42	IF_2	CALL_2
0x4002b08	      0xb8ffffffff	                     mov eax, 0xffffffff	       868	path.c	ELSE_2	FUNCTION_42	IF_2
0x4002b0d	            0xeb64	                           jmp 0x4002b73	       868	path.c	ELSE_2	FUNCTION_42	IF_2
0x4002b0f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       870	path.c	ELSE_2	FUNCTION_42	CALL_3
0x4002b12	            0x89c7	                            mov edi, eax	       870	path.c	ELSE_2	FUNCTION_42	CALL_3
0x4002b14	      0xe833ffffff	               call sym.calc_shared_perm	       870	path.c	ELSE_2	FUNCTION_42	CALL_3
0x4002b19	          0x8945f4	              mov dword [rbp - 0xc], eax	       870	path.c	ELSE_2	FUNCTION_42	CALL_3
0x4002b1c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       871	path.c	ELSE_2	FUNCTION_42	IF_3	CALL_4
0x4002b1f	      0x2500f00000	                         and eax, 0xf000	       871	path.c	ELSE_2	FUNCTION_42	IF_3	CALL_4
0x4002b24	      0x3d00400000	                         cmp eax, 0x4000	       871	path.c	ELSE_2	FUNCTION_42	IF_3	CALL_4
0x4002b29	            0x7515	                           jne 0x4002b40	       871	path.c	ELSE_2	FUNCTION_42	IF_3	CALL_4
0x4002b2b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       873	path.c	ELSE_2	FUNCTION_42	IF_3
0x4002b2e	      0x2524010000	                          and eax, 0x124	       873	path.c	ELSE_2	FUNCTION_42	IF_3
0x4002b33	          0xc1f802	                              sar eax, 2	       873	path.c	ELSE_2	FUNCTION_42	IF_3
0x4002b36	           0x945f4	               or dword [rbp - 0xc], eax	       873	path.c	ELSE_2	FUNCTION_42	IF_3
0x4002b39	    0x814df4000400	             or dword [rbp - 0xc], 0x400	       874	path.c	ELSE_2	FUNCTION_42	IF_3
0x4002b40	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       877	path.c	ELSE_2	FUNCTION_42	IF_4
0x4002b43	          0x3345f4	              xor eax, dword [rbp - 0xc]	       877	path.c	ELSE_2	FUNCTION_42	IF_4
0x4002b46	          0x80e40f	                             and ah, 0xf	       877	path.c	ELSE_2	FUNCTION_42	IF_4
0x4002b49	            0x85c0	                           test eax, eax	       877	path.c	ELSE_2	FUNCTION_42	IF_4
0x4002b4b	            0x7421	                            je 0x4002b6e	       877	path.c	ELSE_2	FUNCTION_42	IF_4
0x4002b4d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       878	path.c	ELSE_2	FUNCTION_42	IF_4	CALL_5
0x4002b50	          0x80e40f	                             and ah, 0xf	       878	path.c	ELSE_2	FUNCTION_42	IF_4	CALL_5
0x4002b53	            0x89c2	                            mov edx, eax	       878	path.c	ELSE_2	FUNCTION_42	IF_4	CALL_5
0x4002b55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       878	path.c	ELSE_2	FUNCTION_42	IF_4	CALL_5
0x4002b59	            0x89d6	                            mov esi, edx	       878	path.c	ELSE_2	FUNCTION_42	IF_4	CALL_5
0x4002b5b	          0x4889c7	                            mov rdi, rax	       878	path.c	ELSE_2	FUNCTION_42	IF_4	CALL_5
0x4002b5e	      0xe800000000	                          call 0x4002b63	       878	path.c	ELSE_2	FUNCTION_42	IF_4	CALL_5
0x4002b63	            0x85c0	                           test eax, eax	       877	path.c	ELSE_2	FUNCTION_42	IF_4
0x4002b65	            0x7907	                           jns 0x4002b6e	       877	path.c	ELSE_2	FUNCTION_42	IF_4
0x4002b67	      0xb8feffffff	                     mov eax, 0xfffffffe	       879	path.c	ELSE_2	FUNCTION_42	IF_4
0x4002b6c	            0xeb05	                           jmp 0x4002b73	       879	path.c	ELSE_2	FUNCTION_42	IF_4
0x4002b6e	      0xb800000000	                              mov eax, 0	       880	path.c	ELSE_2	FUNCTION_42
0x4002b73	        0x488b4df8	                mov rcx, qword [rbp - 8]	       881	path.c	ELSE_2	FUNCTION_42
0x4002b77	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       881	path.c	ELSE_2	FUNCTION_42
0x4002b80	            0x7405	                            je 0x4002b87	       881	path.c	ELSE_2	FUNCTION_42
0x4002b82	      0xe800000000	                          call 0x4002b87	       881	path.c	ELSE_2	FUNCTION_42
0x4002b87	              0xc9	                                   leave	       881	path.c	ELSE_2	FUNCTION_42
0x4002b88	              0xc3	                                     ret	       881	path.c	ELSE_2	FUNCTION_42
init_common_trie	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,1:FOR,1	24
0x4000d16	              0x55	                                push rbp	       312	path.c	ELSE_3	FUNCTION_12
0x4000d17	          0x4889e5	                            mov rbp, rsp	       312	path.c	ELSE_3	FUNCTION_12
0x4000d1a	        0x4883ec10	                           sub rsp, 0x10	       312	path.c	ELSE_3	FUNCTION_12
0x4000d1e	    0x8b0500000000	            mov eax, dword [0x04000d24] 	       315	path.c	ELSE_3	FUNCTION_12	IF_1
0x4000d24	            0x85c0	                           test eax, eax	       315	path.c	ELSE_3	FUNCTION_12	IF_1
0x4000d26	            0x7541	                           jne 0x4000d69	       315	path.c	ELSE_3	FUNCTION_12	IF_1
0x4000d28	    0x48c745f80000	                  mov qword [rbp - 8], 0	       318	path.c	ELSE_3	FUNCTION_12	FOR_1
0x4000d30	            0xeb1e	                           jmp 0x4000d50	       318	path.c	ELSE_3	FUNCTION_12	FOR_1
0x4000d32	        0x488b45f8	                mov rax, qword [rbp - 8]	       319	path.c	ELSE_3	FUNCTION_12	CALL_1
0x4000d36	        0x488b4008	                mov rax, qword [rax + 8]	       319	path.c	ELSE_3	FUNCTION_12	CALL_1
0x4000d3a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       319	path.c	ELSE_3	FUNCTION_12	CALL_1
0x4000d3e	          0x4889c6	                            mov rsi, rax	       319	path.c	ELSE_3	FUNCTION_12	CALL_1
0x4000d41	      0xbf00000000	                              mov edi, 0	       319	path.c	ELSE_3	FUNCTION_12	CALL_1
0x4000d46	      0xe815fbffff	                    call sym.add_to_trie	       319	path.c	ELSE_3	FUNCTION_12	CALL_1
0x4000d4b	      0x488345f810	               add qword [rbp - 8], 0x10	       318	path.c	ELSE_3	FUNCTION_12	FOR_1
0x4000d50	        0x488b45f8	                mov rax, qword [rbp - 8]	       318	path.c	ELSE_3	FUNCTION_12	FOR_1
0x4000d54	        0x488b4008	                mov rax, qword [rax + 8]	       318	path.c	ELSE_3	FUNCTION_12	FOR_1
0x4000d58	          0x4885c0	                           test rax, rax	       318	path.c	ELSE_3	FUNCTION_12	FOR_1
0x4000d5b	            0x75d5	                           jne 0x4000d32	       318	path.c	ELSE_3	FUNCTION_12	FOR_1
0x4000d5d	    0xc70500000000	               mov dword [0x04000d67], 1	       321	path.c	ELSE_3	FUNCTION_12
0x4000d67	            0xeb01	                           jmp 0x4000d6a	       321	path.c	ELSE_3	FUNCTION_12
0x4000d69	              0x90	                                     nop	       316	path.c	ELSE_3	FUNCTION_12	IF_1
0x4000d6a	              0xc9	                                   leave	       322	path.c	ELSE_3	FUNCTION_12
0x4000d6b	              0xc3	                                     ret	       322	path.c	ELSE_3	FUNCTION_12
worktree_git_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,4:FOR,0	46
0x4001a00	              0x55	                                push rbp	       501	path.c	FUNCTION_27
0x4001a01	          0x4889e5	                            mov rbp, rsp	       501	path.c	FUNCTION_27
0x4001a04	    0x4881ecf00000	                           sub rsp, 0xf0	       501	path.c	FUNCTION_27
0x4001a0b	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       501	path.c	FUNCTION_27
0x4001a12	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       501	path.c	FUNCTION_27
0x4001a19	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       501	path.c	FUNCTION_27
0x4001a20	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       501	path.c	FUNCTION_27
0x4001a27	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       501	path.c	FUNCTION_27
0x4001a2e	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       501	path.c	FUNCTION_27
0x4001a35	            0x84c0	                             test al, al	       501	path.c	FUNCTION_27
0x4001a37	            0x7420	                            je 0x4001a59	       501	path.c	FUNCTION_27
0x4001a39	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       501	path.c	FUNCTION_27
0x4001a3d	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       501	path.c	FUNCTION_27
0x4001a41	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       501	path.c	FUNCTION_27
0x4001a45	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       501	path.c	FUNCTION_27
0x4001a49	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       501	path.c	FUNCTION_27
0x4001a4d	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       501	path.c	FUNCTION_27
0x4001a51	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       501	path.c	FUNCTION_27
0x4001a55	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       501	path.c	FUNCTION_27
0x4001a59	    0x64488b042528	                mov rax, qword fs:[0x28]	       501	path.c	FUNCTION_27
0x4001a62	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       501	path.c	FUNCTION_27
0x4001a69	            0x31c0	                            xor eax, eax	       501	path.c	FUNCTION_27
0x4001a6b	      0xe843e9ffff	                   call sym.get_pathname	       502	path.c	FUNCTION_27	CALL_1
0x4001a70	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       502	path.c	FUNCTION_27	CALL_1
0x4001a77	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       504	path.c	FUNCTION_27	CALL_2
0x4001a81	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       504	path.c	FUNCTION_27	CALL_2
0x4001a8b	        0x488d4510	                   lea rax, [rbp + 0x10]	       504	path.c	FUNCTION_27	CALL_2
0x4001a8f	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       504	path.c	FUNCTION_27	CALL_2
0x4001a96	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       504	path.c	FUNCTION_27	CALL_2
0x4001a9d	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       504	path.c	FUNCTION_27	CALL_2
0x4001aa4	    0x488b05000000	            mov rax, qword [0x04001aab] 	       505	path.c	FUNCTION_27	CALL_3
0x4001aab	    0x488dbd30ffff	                   lea rdi, [rbp - 0xd0]	       505	path.c	FUNCTION_27	CALL_3
0x4001ab2	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	       505	path.c	FUNCTION_27	CALL_3
0x4001ab9	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       505	path.c	FUNCTION_27	CALL_3
0x4001ac0	    0x488bb518ffff	             mov rsi, qword [rbp - 0xe8]	       505	path.c	FUNCTION_27	CALL_3
0x4001ac7	          0x4989f8	                             mov r8, rdi	       505	path.c	FUNCTION_27	CALL_3
0x4001aca	          0x4889c7	                            mov rdi, rax	       505	path.c	FUNCTION_27	CALL_3
0x4001acd	      0xe892f6ffff	                    call sym.do_git_path	       505	path.c	FUNCTION_27	CALL_3
0x4001ad2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       507	path.c	FUNCTION_27
0x4001ad9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       507	path.c	FUNCTION_27
0x4001add	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       508	path.c	FUNCTION_27
0x4001ae4	    0x644833142528	                xor rdx, qword fs:[0x28]	       508	path.c	FUNCTION_27
0x4001aed	            0x7405	                            je 0x4001af4	       508	path.c	FUNCTION_27
0x4001aef	      0xe800000000	                          call 0x4001af4	       508	path.c	FUNCTION_27
0x4001af4	              0xc9	                                   leave	       508	path.c	FUNCTION_27
0x4001af5	              0xc3	                                     ret	       508	path.c	FUNCTION_27
trie_find	DO,0:functions,0:SWITCH,0:ELSE,3:IF,8:WHILE,1:CALL,4:FOR,1	139
0x4000b36	              0x55	                                push rbp	       261	path.c	FUNCTION_11
0x4000b37	          0x4889e5	                            mov rbp, rsp	       261	path.c	FUNCTION_11
0x4000b3a	        0x4883ec30	                           sub rsp, 0x30	       261	path.c	FUNCTION_11
0x4000b3e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       261	path.c	FUNCTION_11
0x4000b42	        0x488975e0	             mov qword [rbp - 0x20], rsi	       261	path.c	FUNCTION_11
0x4000b46	        0x488955d8	             mov qword [rbp - 0x28], rdx	       261	path.c	FUNCTION_11
0x4000b4a	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       261	path.c	FUNCTION_11
0x4000b4e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       266	path.c	FUNCTION_11	IF_1
0x4000b52	           0xfb600	                   movzx eax, byte [rax]	       266	path.c	FUNCTION_11	IF_1
0x4000b55	            0x84c0	                             test al, al	       266	path.c	FUNCTION_11	IF_1
0x4000b57	            0x7549	                           jne 0x4000ba2	       266	path.c	FUNCTION_11	IF_1
0x4000b59	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       268	path.c	FUNCTION_11	IF_1	IF_2
0x4000b5d	    0x488b80100800	           mov rax, qword [rax + 0x810] 	       268	path.c	FUNCTION_11	IF_1	IF_2
0x4000b64	          0x4885c0	                           test rax, rax	       268	path.c	FUNCTION_11	IF_1	IF_2
0x4000b67	            0x742f	                            je 0x4000b98	       268	path.c	FUNCTION_11	IF_1	IF_2
0x4000b69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       268	path.c	FUNCTION_11	IF_1	IF_2
0x4000b6d	    0x8b8000080000	           mov eax, dword [rax + 0x800] 	       268	path.c	FUNCTION_11	IF_1	IF_2
0x4000b73	            0x85c0	                           test eax, eax	       268	path.c	FUNCTION_11	IF_1	IF_2
0x4000b75	            0x7521	                           jne 0x4000b98	       268	path.c	FUNCTION_11	IF_1	IF_2
0x4000b77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       269	path.c	FUNCTION_11	IF_1	CALL_1
0x4000b7b	    0x488bb0100800	           mov rsi, qword [rax + 0x810] 	       269	path.c	FUNCTION_11	IF_1	CALL_1
0x4000b82	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       269	path.c	FUNCTION_11	IF_1	CALL_1
0x4000b86	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       269	path.c	FUNCTION_11	IF_1	CALL_1
0x4000b8a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       269	path.c	FUNCTION_11	IF_1	CALL_1
0x4000b8e	          0x4889cf	                            mov rdi, rcx	       269	path.c	FUNCTION_11	IF_1	CALL_1
0x4000b91	            0xffd0	                                call rax	       269	path.c	FUNCTION_11	IF_1	CALL_1
0x4000b93	      0xe97c010000	                           jmp 0x4000d14	       269	path.c	FUNCTION_11	IF_1	CALL_1
0x4000b98	      0xb8ffffffff	                     mov eax, 0xffffffff	       271	path.c	FUNCTION_11	IF_1	ELSE_1
0x4000b9d	      0xe972010000	                           jmp 0x4000d14	       271	path.c	FUNCTION_11	IF_1	ELSE_1
0x4000ba2	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       274	path.c	FUNCTION_11	ELSE_1	FOR_1
0x4000ba9	            0xeb6a	                           jmp 0x4000c15	       274	path.c	FUNCTION_11	ELSE_1	FOR_1
0x4000bab	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       276	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bae	          0x4863d0	                         movsxd rdx, eax	       276	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bb1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       276	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bb5	          0x4801d0	                            add rax, rdx	       276	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bb8	           0xfb600	                   movzx eax, byte [rax]	       276	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bbb	            0x3c2f	                            cmp al, 0x2f	       276	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bbd	            0x751e	                           jne 0x4000bdd	       276	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bbf	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       276	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bc2	            0x4898	                                    cdqe	       276	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bc4	        0x488d5001	                      lea rdx, [rax + 1]	       276	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bc8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       276	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bcc	          0x4801d0	                            add rax, rdx	       276	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bcf	           0xfb600	                   movzx eax, byte [rax]	       276	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bd2	            0x3c2f	                            cmp al, 0x2f	       276	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bd4	            0x7507	                           jne 0x4000bdd	       276	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bd6	      0x488345e001	               add qword [rbp - 0x20], 1	       277	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bdb	            0xeb34	                           jmp 0x4000c11	       278	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_3
0x4000bdd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       280	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_4
0x4000be1	    0x488b90080800	           mov rdx, qword [rax + 0x808] 	       280	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_4
0x4000be8	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       280	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_4
0x4000beb	            0x4898	                                    cdqe	       280	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_4
0x4000bed	          0x4801d0	                            add rax, rdx	       280	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_4
0x4000bf0	           0xfb610	                   movzx edx, byte [rax]	       280	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_4
0x4000bf3	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       280	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_4
0x4000bf6	          0x4863c8	                         movsxd rcx, eax	       280	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_4
0x4000bf9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       280	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_4
0x4000bfd	          0x4801c8	                            add rax, rcx	       280	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_4
0x4000c00	           0xfb600	                   movzx eax, byte [rax]	       280	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_4
0x4000c03	            0x38c2	                              cmp dl, al	       280	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_4
0x4000c05	            0x740a	                            je 0x4000c11	       280	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_4
0x4000c07	      0xb8ffffffff	                     mov eax, 0xffffffff	       281	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_4
0x4000c0c	      0xe903010000	                           jmp 0x4000d14	       281	path.c	FUNCTION_11	ELSE_1	FOR_1	IF_4
0x4000c11	        0x8345f001	               add dword [rbp - 0x10], 1	       274	path.c	FUNCTION_11	ELSE_1	FOR_1
0x4000c15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       274	path.c	FUNCTION_11	ELSE_1	FOR_1
0x4000c19	    0x8b8000080000	           mov eax, dword [rax + 0x800] 	       274	path.c	FUNCTION_11	ELSE_1	FOR_1
0x4000c1f	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       274	path.c	FUNCTION_11	ELSE_1	FOR_1
0x4000c22	            0x7f87	                            jg 0x4000bab	       274	path.c	FUNCTION_11	ELSE_1	FOR_1
0x4000c24	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       285	path.c	FUNCTION_11
0x4000c27	            0x4898	                                    cdqe	       285	path.c	FUNCTION_11
0x4000c29	        0x480145e0	            add qword [rbp - 0x20], rax 	       285	path.c	FUNCTION_11
0x4000c2d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       286	path.c	FUNCTION_11	IF_5
0x4000c31	           0xfb600	                   movzx eax, byte [rax]	       286	path.c	FUNCTION_11	IF_5
0x4000c34	            0x84c0	                             test al, al	       286	path.c	FUNCTION_11	IF_5
0x4000c36	            0x7526	                           jne 0x4000c5e	       286	path.c	FUNCTION_11	IF_5
0x4000c38	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       288	path.c	FUNCTION_11	CALL_2
0x4000c3c	    0x488bb0100800	           mov rsi, qword [rax + 0x810] 	       288	path.c	FUNCTION_11	CALL_2
0x4000c43	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       288	path.c	FUNCTION_11	CALL_2
0x4000c47	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       288	path.c	FUNCTION_11	CALL_2
0x4000c4b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       288	path.c	FUNCTION_11	CALL_2
0x4000c4f	          0x4889cf	                            mov rdi, rcx	       288	path.c	FUNCTION_11	CALL_2
0x4000c52	            0xffd0	                                call rax	       288	path.c	FUNCTION_11	CALL_2
0x4000c54	      0xe9bb000000	                           jmp 0x4000d14	       288	path.c	FUNCTION_11	CALL_2
0x4000c59	      0x488345e001	               add qword [rbp - 0x20], 1	       292	path.c	FUNCTION_11	WHILE_1
0x4000c5e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       291	path.c	FUNCTION_11	WHILE_1
0x4000c62	           0xfb600	                   movzx eax, byte [rax]	       291	path.c	FUNCTION_11	WHILE_1
0x4000c65	            0x3c2f	                            cmp al, 0x2f	       291	path.c	FUNCTION_11	WHILE_1
0x4000c67	            0x750f	                           jne 0x4000c78	       291	path.c	FUNCTION_11	WHILE_1
0x4000c69	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       291	path.c	FUNCTION_11	WHILE_1
0x4000c6d	        0x4883c001	                              add rax, 1	       291	path.c	FUNCTION_11	WHILE_1
0x4000c71	           0xfb600	                   movzx eax, byte [rax]	       291	path.c	FUNCTION_11	WHILE_1
0x4000c74	            0x3c2f	                            cmp al, 0x2f	       291	path.c	FUNCTION_11	WHILE_1
0x4000c76	            0x74e1	                            je 0x4000c59	       291	path.c	FUNCTION_11	WHILE_1
0x4000c78	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       294	path.c	FUNCTION_11
0x4000c7c	           0xfb600	                   movzx eax, byte [rax]	       294	path.c	FUNCTION_11
0x4000c7f	           0xfb6d0	                           movzx edx, al	       294	path.c	FUNCTION_11
0x4000c82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       294	path.c	FUNCTION_11
0x4000c86	          0x4863d2	                         movsxd rdx, edx	       294	path.c	FUNCTION_11
0x4000c89	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       294	path.c	FUNCTION_11
0x4000c8d	        0x488945f8	                mov qword [rbp - 8], rax	       294	path.c	FUNCTION_11
0x4000c91	      0x48837df800	                  cmp qword [rbp - 8], 0	       295	path.c	FUNCTION_11	IF_6
0x4000c96	            0x7421	                            je 0x4000cb9	       295	path.c	FUNCTION_11	IF_6
0x4000c98	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       296	path.c	FUNCTION_11	CALL_3
0x4000c9c	        0x488d7001	                      lea rsi, [rax + 1]	       296	path.c	FUNCTION_11	CALL_3
0x4000ca0	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       296	path.c	FUNCTION_11	CALL_3
0x4000ca4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       296	path.c	FUNCTION_11	CALL_3
0x4000ca8	        0x488b45f8	                mov rax, qword [rbp - 8]	       296	path.c	FUNCTION_11	CALL_3
0x4000cac	          0x4889c7	                            mov rdi, rax	       296	path.c	FUNCTION_11	CALL_3
0x4000caf	      0xe882feffff	                      call sym.trie_find	       296	path.c	FUNCTION_11	CALL_3
0x4000cb4	          0x8945f4	              mov dword [rbp - 0xc], eax	       296	path.c	FUNCTION_11	CALL_3
0x4000cb7	            0xeb07	                           jmp 0x4000cc0	       296	path.c	FUNCTION_11	CALL_3
0x4000cb9	    0xc745f4ffffff	      mov dword [rbp - 0xc], 0xffffffff 	       298	path.c	FUNCTION_11	ELSE_2
0x4000cc0	        0x837df400	                cmp dword [rbp - 0xc], 0	       300	path.c	FUNCTION_11	IF_7
0x4000cc4	            0x7916	                           jns 0x4000cdc	       300	path.c	FUNCTION_11	IF_7
0x4000cc6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       300	path.c	FUNCTION_11	IF_7
0x4000cca	           0xfb600	                   movzx eax, byte [rax]	       300	path.c	FUNCTION_11	IF_7
0x4000ccd	            0x3c2f	                            cmp al, 0x2f	       300	path.c	FUNCTION_11	IF_7
0x4000ccf	            0x7410	                            je 0x4000ce1	       300	path.c	FUNCTION_11	IF_7
0x4000cd1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       300	path.c	FUNCTION_11	IF_7
0x4000cd5	           0xfb600	                   movzx eax, byte [rax]	       300	path.c	FUNCTION_11	IF_7
0x4000cd8	            0x84c0	                             test al, al	       300	path.c	FUNCTION_11	IF_7
0x4000cda	            0x7405	                            je 0x4000ce1	       300	path.c	FUNCTION_11	IF_7
0x4000cdc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       301	path.c	FUNCTION_11	IF_7
0x4000cdf	            0xeb33	                           jmp 0x4000d14	       301	path.c	FUNCTION_11	IF_7
0x4000ce1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       302	path.c	FUNCTION_11	IF_8
0x4000ce5	    0x488b80100800	           mov rax, qword [rax + 0x810] 	       302	path.c	FUNCTION_11	IF_8
0x4000cec	          0x4885c0	                           test rax, rax	       302	path.c	FUNCTION_11	IF_8
0x4000cef	            0x741e	                            je 0x4000d0f	       302	path.c	FUNCTION_11	IF_8
0x4000cf1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       303	path.c	FUNCTION_11	CALL_4
0x4000cf5	    0x488bb0100800	           mov rsi, qword [rax + 0x810] 	       303	path.c	FUNCTION_11	CALL_4
0x4000cfc	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       303	path.c	FUNCTION_11	CALL_4
0x4000d00	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       303	path.c	FUNCTION_11	CALL_4
0x4000d04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       303	path.c	FUNCTION_11	CALL_4
0x4000d08	          0x4889cf	                            mov rdi, rcx	       303	path.c	FUNCTION_11	CALL_4
0x4000d0b	            0xffd0	                                call rax	       303	path.c	FUNCTION_11	CALL_4
0x4000d0d	            0xeb05	                           jmp 0x4000d14	       303	path.c	FUNCTION_11	CALL_4
0x4000d0f	      0xb8ffffffff	                     mov eax, 0xffffffff	       305	path.c	FUNCTION_11	ELSE_3
0x4000d14	              0xc9	                                   leave	       306	path.c	FUNCTION_11	ELSE_3
0x4000d15	              0xc3	                                     ret	       306	path.c	FUNCTION_11	ELSE_3
add_to_trie	DO,0:functions,0:SWITCH,0:ELSE,1:IF,5:WHILE,0:CALL,7:FOR,1	187
0x4000860	              0x55	                                push rbp	       176	path.c	FUNCTION_10
0x4000861	          0x4889e5	                            mov rbp, rsp	       176	path.c	FUNCTION_10
0x4000864	              0x53	                                push rbx	       176	path.c	FUNCTION_10
0x4000865	        0x4883ec48	                           sub rsp, 0x48	       176	path.c	FUNCTION_10
0x4000869	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       176	path.c	FUNCTION_10
0x400086d	        0x488975c0	             mov qword [rbp - 0x40], rsi	       176	path.c	FUNCTION_10
0x4000871	        0x488955b8	             mov qword [rbp - 0x48], rdx	       176	path.c	FUNCTION_10
0x4000875	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       181	path.c	FUNCTION_10	IF_1
0x4000879	           0xfb600	                   movzx eax, byte [rax]	       181	path.c	FUNCTION_10	IF_1
0x400087c	            0x84c0	                             test al, al	       181	path.c	FUNCTION_10	IF_1
0x400087e	            0x7527	                           jne 0x40008a7	       181	path.c	FUNCTION_10	IF_1
0x4000880	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       183	path.c	FUNCTION_10	IF_1
0x4000884	    0x488b80100800	           mov rax, qword [rax + 0x810] 	       183	path.c	FUNCTION_10	IF_1
0x400088b	        0x488945e0	             mov qword [rbp - 0x20], rax	       183	path.c	FUNCTION_10	IF_1
0x400088f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       184	path.c	FUNCTION_10	IF_1
0x4000893	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       184	path.c	FUNCTION_10	IF_1
0x4000897	    0x488990100800	            mov qword [rax + 0x810], rdx	       184	path.c	FUNCTION_10	IF_1
0x400089e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       185	path.c	FUNCTION_10	IF_1
0x40008a2	      0xe988020000	                           jmp 0x4000b2f	       185	path.c	FUNCTION_10	IF_1
0x40008a7	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       188	path.c	FUNCTION_10	FOR_1
0x40008ae	      0xe978010000	                           jmp 0x4000a2b	       188	path.c	FUNCTION_10	FOR_1
0x40008b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       189	path.c	FUNCTION_10	FOR_1	IF_2
0x40008b7	    0x488b90080800	           mov rdx, qword [rax + 0x808] 	       189	path.c	FUNCTION_10	FOR_1	IF_2
0x40008be	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       189	path.c	FUNCTION_10	FOR_1	IF_2
0x40008c1	            0x4898	                                    cdqe	       189	path.c	FUNCTION_10	FOR_1	IF_2
0x40008c3	          0x4801d0	                            add rax, rdx	       189	path.c	FUNCTION_10	FOR_1	IF_2
0x40008c6	           0xfb610	                   movzx edx, byte [rax]	       189	path.c	FUNCTION_10	FOR_1	IF_2
0x40008c9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       189	path.c	FUNCTION_10	FOR_1	IF_2
0x40008cc	          0x4863c8	                         movsxd rcx, eax	       189	path.c	FUNCTION_10	FOR_1	IF_2
0x40008cf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       189	path.c	FUNCTION_10	FOR_1	IF_2
0x40008d3	          0x4801c8	                            add rax, rcx	       189	path.c	FUNCTION_10	FOR_1	IF_2
0x40008d6	           0xfb600	                   movzx eax, byte [rax]	       189	path.c	FUNCTION_10	FOR_1	IF_2
0x40008d9	            0x38c2	                              cmp dl, al	       189	path.c	FUNCTION_10	FOR_1	IF_2
0x40008db	            0x7509	                           jne 0x40008e6	       189	path.c	FUNCTION_10	FOR_1	IF_2
0x40008dd	        0x8345dc01	               add dword [rbp - 0x24], 1	       188	path.c	FUNCTION_10	FOR_1
0x40008e1	      0xe945010000	                           jmp 0x4000a2b	       188	path.c	FUNCTION_10	FOR_1
0x40008e6	      0xbf18080000	                          mov edi, 0x818	       196	path.c	FUNCTION_10	FOR_1	CALL_1
0x40008eb	      0xe800000000	                          call 0x40008f0	       196	path.c	FUNCTION_10	FOR_1	CALL_1
0x40008f0	        0x488945e8	             mov qword [rbp - 0x18], rax	       196	path.c	FUNCTION_10	FOR_1	CALL_1
0x40008f4	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       197	path.c	FUNCTION_10	FOR_1	CALL_2
0x40008f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       197	path.c	FUNCTION_10	FOR_1	CALL_2
0x40008fc	      0xba00080000	                          mov edx, 0x800	       197	path.c	FUNCTION_10	FOR_1	CALL_2
0x4000901	          0x4889ce	                            mov rsi, rcx	       197	path.c	FUNCTION_10	FOR_1	CALL_2
0x4000904	          0x4889c7	                            mov rdi, rax	       197	path.c	FUNCTION_10	FOR_1	CALL_2
0x4000907	      0xe800000000	                          call 0x400090c	       197	path.c	FUNCTION_10	FOR_1	CALL_2
0x400090c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       199	path.c	FUNCTION_10	FOR_1
0x4000910	    0x8b8000080000	           mov eax, dword [rax + 0x800] 	       199	path.c	FUNCTION_10	FOR_1
0x4000916	          0x2b45dc	             sub eax, dword [rbp - 0x24]	       199	path.c	FUNCTION_10	FOR_1
0x4000919	          0x8d50ff	                      lea edx, [rax - 1]	       199	path.c	FUNCTION_10	FOR_1
0x400091c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       199	path.c	FUNCTION_10	FOR_1
0x4000920	    0x899000080000	            mov dword [rax + 0x800], edx	       199	path.c	FUNCTION_10	FOR_1
0x4000926	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       200	path.c	FUNCTION_10	FOR_1	IF_3
0x400092a	    0x8b8000080000	           mov eax, dword [rax + 0x800] 	       200	path.c	FUNCTION_10	FOR_1	IF_3
0x4000930	            0x85c0	                           test eax, eax	       200	path.c	FUNCTION_10	FOR_1	IF_3
0x4000932	            0x743d	                            je 0x4000971	       200	path.c	FUNCTION_10	FOR_1	IF_3
0x4000934	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       202	path.c	FUNCTION_10	FOR_1	IF_3
0x4000938	    0x8b8000080000	           mov eax, dword [rax + 0x800] 	       202	path.c	FUNCTION_10	FOR_1	IF_3
0x400093e	            0x4898	                                    cdqe	       201	path.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000940	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       201	path.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000944	    0x488b92080800	           mov rdx, qword [rdx + 0x808] 	       201	path.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x400094b	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	       201	path.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x400094e	          0x4863c9	                         movsxd rcx, ecx	       201	path.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000951	        0x4883c101	                              add rcx, 1	       201	path.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000955	          0x4801ca	                            add rdx, rcx	       201	path.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000958	          0x4889c6	                            mov rsi, rax	       201	path.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x400095b	          0x4889d7	                            mov rdi, rdx	       201	path.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x400095e	      0xe800000000	                          call 0x4000963	       201	path.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000963	          0x4889c2	                            mov rdx, rax	       201	path.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000966	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       201	path.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x400096a	    0x488990080800	            mov qword [rax + 0x808], rdx	       201	path.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000971	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       204	path.c	FUNCTION_10	FOR_1
0x4000975	    0x488b90100800	           mov rdx, qword [rax + 0x810] 	       204	path.c	FUNCTION_10	FOR_1
0x400097c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       204	path.c	FUNCTION_10	FOR_1
0x4000980	    0x488990100800	            mov qword [rax + 0x810], rdx	       204	path.c	FUNCTION_10	FOR_1
0x4000987	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       205	path.c	FUNCTION_10	FOR_1
0x400098b	    0x48c780100800	              mov qword [rax + 0x810], 0	       205	path.c	FUNCTION_10	FOR_1
0x4000996	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       206	path.c	FUNCTION_10	FOR_1
0x400099a	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       206	path.c	FUNCTION_10	FOR_1
0x400099d	    0x899000080000	            mov dword [rax + 0x800], edx	       206	path.c	FUNCTION_10	FOR_1
0x40009a3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       208	path.c	FUNCTION_10	FOR_1	CALL_4
0x40009a7	      0xba00080000	                          mov edx, 0x800	       208	path.c	FUNCTION_10	FOR_1	CALL_4
0x40009ac	      0xbe00000000	                              mov esi, 0	       208	path.c	FUNCTION_10	FOR_1	CALL_4
0x40009b1	          0x4889c7	                            mov rdi, rax	       208	path.c	FUNCTION_10	FOR_1	CALL_4
0x40009b4	      0xe800000000	                          call 0x40009b9	       208	path.c	FUNCTION_10	FOR_1	CALL_4
0x40009b9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       209	path.c	FUNCTION_10	FOR_1
0x40009bd	    0x488b90080800	           mov rdx, qword [rax + 0x808] 	       209	path.c	FUNCTION_10	FOR_1
0x40009c4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       209	path.c	FUNCTION_10	FOR_1
0x40009c7	            0x4898	                                    cdqe	       209	path.c	FUNCTION_10	FOR_1
0x40009c9	          0x4801d0	                            add rax, rdx	       209	path.c	FUNCTION_10	FOR_1
0x40009cc	           0xfb600	                   movzx eax, byte [rax]	       209	path.c	FUNCTION_10	FOR_1
0x40009cf	           0xfb6d0	                           movzx edx, al	       209	path.c	FUNCTION_10	FOR_1
0x40009d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       209	path.c	FUNCTION_10	FOR_1
0x40009d6	          0x4863d2	                         movsxd rdx, edx	       209	path.c	FUNCTION_10	FOR_1
0x40009d9	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       209	path.c	FUNCTION_10	FOR_1
0x40009dd	        0x48890cd0	            mov qword [rax + rdx*8], rcx	       209	path.c	FUNCTION_10	FOR_1
0x40009e1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       212	path.c	FUNCTION_10	FOR_1
0x40009e4	          0x4863d0	                         movsxd rdx, eax	       212	path.c	FUNCTION_10	FOR_1
0x40009e7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       212	path.c	FUNCTION_10	FOR_1
0x40009eb	          0x4801d0	                            add rax, rdx	       212	path.c	FUNCTION_10	FOR_1
0x40009ee	           0xfb600	                   movzx eax, byte [rax]	       212	path.c	FUNCTION_10	FOR_1
0x40009f1	           0xfb6d8	                           movzx ebx, al	       212	path.c	FUNCTION_10	FOR_1
0x40009f4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       213	path.c	FUNCTION_10	FOR_1	CALL_5
0x40009f7	            0x4898	                                    cdqe	       213	path.c	FUNCTION_10	FOR_1	CALL_5
0x40009f9	        0x488d5001	                      lea rdx, [rax + 1]	       213	path.c	FUNCTION_10	FOR_1	CALL_5
0x40009fd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       213	path.c	FUNCTION_10	FOR_1	CALL_5
0x4000a01	          0x4801c2	                            add rdx, rax	       213	path.c	FUNCTION_10	FOR_1	CALL_5
0x4000a04	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       213	path.c	FUNCTION_10	FOR_1	CALL_5
0x4000a08	          0x4889c6	                            mov rsi, rax	       213	path.c	FUNCTION_10	FOR_1	CALL_5
0x4000a0b	          0x4889d7	                            mov rdi, rdx	       213	path.c	FUNCTION_10	FOR_1	CALL_5
0x4000a0e	      0xe8a6fdffff	                 call sym.make_trie_node	       213	path.c	FUNCTION_10	FOR_1	CALL_5
0x4000a13	          0x4889c1	                            mov rcx, rax	       213	path.c	FUNCTION_10	FOR_1	CALL_5
0x4000a16	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       212	path.c	FUNCTION_10	FOR_1
0x4000a1a	          0x4863d3	                         movsxd rdx, ebx	       212	path.c	FUNCTION_10	FOR_1
0x4000a1d	        0x48890cd0	            mov qword [rax + rdx*8], rcx	       212	path.c	FUNCTION_10	FOR_1
0x4000a21	      0xb800000000	                              mov eax, 0	       214	path.c	FUNCTION_10	FOR_1
0x4000a26	      0xe904010000	                           jmp 0x4000b2f	       214	path.c	FUNCTION_10	FOR_1
0x4000a2b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       188	path.c	FUNCTION_10	FOR_1
0x4000a2f	    0x8b8000080000	           mov eax, dword [rax + 0x800] 	       188	path.c	FUNCTION_10	FOR_1
0x4000a35	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       188	path.c	FUNCTION_10	FOR_1
0x4000a38	     0xf8f75feffff	                            jg 0x40008b3	       188	path.c	FUNCTION_10	FOR_1
0x4000a3e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       218	path.c	FUNCTION_10	IF_4
0x4000a41	          0x4863d0	                         movsxd rdx, eax	       218	path.c	FUNCTION_10	IF_4
0x4000a44	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       218	path.c	FUNCTION_10	IF_4
0x4000a48	          0x4801d0	                            add rax, rdx	       218	path.c	FUNCTION_10	IF_4
0x4000a4b	           0xfb600	                   movzx eax, byte [rax]	       218	path.c	FUNCTION_10	IF_4
0x4000a4e	            0x84c0	                             test al, al	       218	path.c	FUNCTION_10	IF_4
0x4000a50	     0xf84b7000000	                            je 0x4000b0d	       218	path.c	FUNCTION_10	IF_4
0x4000a56	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       219	path.c	FUNCTION_10	IF_4
0x4000a5a	    0x8b8000080000	           mov eax, dword [rax + 0x800] 	       219	path.c	FUNCTION_10	IF_4
0x4000a60	          0x4863d0	                         movsxd rdx, eax	       219	path.c	FUNCTION_10	IF_4
0x4000a63	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       219	path.c	FUNCTION_10	IF_4
0x4000a67	          0x4801d0	                            add rax, rdx	       219	path.c	FUNCTION_10	IF_4
0x4000a6a	           0xfb600	                   movzx eax, byte [rax]	       219	path.c	FUNCTION_10	IF_4
0x4000a6d	           0xfb6d0	                           movzx edx, al	       219	path.c	FUNCTION_10	IF_4
0x4000a70	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       219	path.c	FUNCTION_10	IF_4
0x4000a74	          0x4863d2	                         movsxd rdx, edx	       219	path.c	FUNCTION_10	IF_4
0x4000a77	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       219	path.c	FUNCTION_10	IF_4
0x4000a7b	        0x488945e8	             mov qword [rbp - 0x18], rax	       219	path.c	FUNCTION_10	IF_4
0x4000a7f	      0x48837de800	               cmp qword [rbp - 0x18], 0	       220	path.c	FUNCTION_10	IF_4	IF_5
0x4000a84	            0x742d	                            je 0x4000ab3	       220	path.c	FUNCTION_10	IF_4	IF_5
0x4000a86	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       221	path.c	FUNCTION_10	IF_4	IF_5	CALL_6
0x4000a8a	    0x8b8000080000	           mov eax, dword [rax + 0x800] 	       221	path.c	FUNCTION_10	IF_4	IF_5	CALL_6
0x4000a90	            0x4898	                                    cdqe	       221	path.c	FUNCTION_10	IF_4	IF_5	CALL_6
0x4000a92	        0x488d5001	                      lea rdx, [rax + 1]	       221	path.c	FUNCTION_10	IF_4	IF_5	CALL_6
0x4000a96	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       221	path.c	FUNCTION_10	IF_4	IF_5	CALL_6
0x4000a9a	        0x488d0c02	                    lea rcx, [rdx + rax]	       221	path.c	FUNCTION_10	IF_4	IF_5	CALL_6
0x4000a9e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       221	path.c	FUNCTION_10	IF_4	IF_5	CALL_6
0x4000aa2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       221	path.c	FUNCTION_10	IF_4	IF_5	CALL_6
0x4000aa6	          0x4889ce	                            mov rsi, rcx	       221	path.c	FUNCTION_10	IF_4	IF_5	CALL_6
0x4000aa9	          0x4889c7	                            mov rdi, rax	       221	path.c	FUNCTION_10	IF_4	IF_5	CALL_6
0x4000aac	      0xe8affdffff	                    call sym.add_to_trie	       221	path.c	FUNCTION_10	IF_4	IF_5	CALL_6
0x4000ab1	            0xeb7c	                           jmp 0x4000b2f	       221	path.c	FUNCTION_10	IF_4	IF_5	CALL_6
0x4000ab3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       223	path.c	FUNCTION_10	IF_4	ELSE_1	CALL_7
0x4000ab7	    0x8b8000080000	           mov eax, dword [rax + 0x800] 	       223	path.c	FUNCTION_10	IF_4	ELSE_1	CALL_7
0x4000abd	            0x4898	                                    cdqe	       223	path.c	FUNCTION_10	IF_4	ELSE_1	CALL_7
0x4000abf	        0x488d5001	                      lea rdx, [rax + 1]	       223	path.c	FUNCTION_10	IF_4	ELSE_1	CALL_7
0x4000ac3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       223	path.c	FUNCTION_10	IF_4	ELSE_1	CALL_7
0x4000ac7	          0x4801c2	                            add rdx, rax	       223	path.c	FUNCTION_10	IF_4	ELSE_1	CALL_7
0x4000aca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       223	path.c	FUNCTION_10	IF_4	ELSE_1	CALL_7
0x4000ace	          0x4889c6	                            mov rsi, rax	       223	path.c	FUNCTION_10	IF_4	ELSE_1	CALL_7
0x4000ad1	          0x4889d7	                            mov rdi, rdx	       223	path.c	FUNCTION_10	IF_4	ELSE_1	CALL_7
0x4000ad4	      0xe8e0fcffff	                 call sym.make_trie_node	       223	path.c	FUNCTION_10	IF_4	ELSE_1	CALL_7
0x4000ad9	        0x488945e8	             mov qword [rbp - 0x18], rax	       223	path.c	FUNCTION_10	IF_4	ELSE_1	CALL_7
0x4000add	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       224	path.c	FUNCTION_10	IF_4	ELSE_1
0x4000ae1	    0x8b8000080000	           mov eax, dword [rax + 0x800] 	       224	path.c	FUNCTION_10	IF_4	ELSE_1
0x4000ae7	          0x4863d0	                         movsxd rdx, eax	       224	path.c	FUNCTION_10	IF_4	ELSE_1
0x4000aea	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       224	path.c	FUNCTION_10	IF_4	ELSE_1
0x4000aee	          0x4801d0	                            add rax, rdx	       224	path.c	FUNCTION_10	IF_4	ELSE_1
0x4000af1	           0xfb600	                   movzx eax, byte [rax]	       224	path.c	FUNCTION_10	IF_4	ELSE_1
0x4000af4	           0xfb6d0	                           movzx edx, al	       224	path.c	FUNCTION_10	IF_4	ELSE_1
0x4000af7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       224	path.c	FUNCTION_10	IF_4	ELSE_1
0x4000afb	          0x4863d2	                         movsxd rdx, edx	       224	path.c	FUNCTION_10	IF_4	ELSE_1
0x4000afe	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       224	path.c	FUNCTION_10	IF_4	ELSE_1
0x4000b02	        0x48890cd0	            mov qword [rax + rdx*8], rcx	       224	path.c	FUNCTION_10	IF_4	ELSE_1
0x4000b06	      0xb800000000	                              mov eax, 0	       225	path.c	FUNCTION_10	IF_4	ELSE_1
0x4000b0b	            0xeb22	                           jmp 0x4000b2f	       225	path.c	FUNCTION_10	IF_4	ELSE_1
0x4000b0d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       229	path.c	FUNCTION_10
0x4000b11	    0x488b80100800	           mov rax, qword [rax + 0x810] 	       229	path.c	FUNCTION_10
0x4000b18	        0x488945e0	             mov qword [rbp - 0x20], rax	       229	path.c	FUNCTION_10
0x4000b1c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       230	path.c	FUNCTION_10
0x4000b20	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       230	path.c	FUNCTION_10
0x4000b24	    0x488990100800	            mov qword [rax + 0x810], rdx	       230	path.c	FUNCTION_10
0x4000b2b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       231	path.c	FUNCTION_10
0x4000b2f	        0x4883c448	                           add rsp, 0x48	       232	path.c	FUNCTION_10
0x4000b33	              0x5b	                                 pop rbx	       232	path.c	FUNCTION_10
0x4000b34	              0x5d	                                 pop rbp	       232	path.c	FUNCTION_10
0x4000b35	              0xc3	                                     ret	       232	path.c	FUNCTION_10
skip_prefix	DO,1:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,0:FOR,0	27
0x4000081	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_75
0x4000082	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_75
0x4000085	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_75
0x4000089	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_75
0x400008d	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_75
0x4000091	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_75	DO_1	IF_1
0x4000095	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_75	DO_1	IF_1
0x4000098	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_75	DO_1	IF_1
0x400009a	            0x7512	                           jne 0x40000ae	       484	git-compat-util.h	FUNCTION_75	DO_1	IF_1
0x400009c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_75	DO_1	IF_1
0x40000a0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_75	DO_1	IF_1
0x40000a4	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_75	DO_1	IF_1
0x40000a7	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_75	DO_1	IF_1
0x40000ac	            0xeb27	                           jmp 0x40000d5	       486	git-compat-util.h	FUNCTION_75	DO_1	IF_1
0x40000ae	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_75	DO_1
0x40000b2	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_75	DO_1
0x40000b6	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_75	DO_1
0x40000ba	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_75	DO_1
0x40000bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_75	DO_1
0x40000c1	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_75	DO_1
0x40000c5	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_75	DO_1
0x40000c9	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_75	DO_1
0x40000cc	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_75	DO_1
0x40000ce	            0x74c1	                            je 0x4000091	       488	git-compat-util.h	FUNCTION_75	DO_1
0x40000d0	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_75
0x40000d5	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_75
0x40000d6	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_75
git_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,4:FOR,0	46
0x40015f5	              0x55	                                push rbp	       460	path.c	FUNCTION_23
0x40015f6	          0x4889e5	                            mov rbp, rsp	       460	path.c	FUNCTION_23
0x40015f9	    0x4881ecf00000	                           sub rsp, 0xf0	       460	path.c	FUNCTION_23
0x4001600	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       460	path.c	FUNCTION_23
0x4001607	    0x4889b558ffff	             mov qword [rbp - 0xa8], rsi	       460	path.c	FUNCTION_23
0x400160e	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       460	path.c	FUNCTION_23
0x4001615	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       460	path.c	FUNCTION_23
0x400161c	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       460	path.c	FUNCTION_23
0x4001623	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       460	path.c	FUNCTION_23
0x400162a	            0x84c0	                             test al, al	       460	path.c	FUNCTION_23
0x400162c	            0x7420	                            je 0x400164e	       460	path.c	FUNCTION_23
0x400162e	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       460	path.c	FUNCTION_23
0x4001632	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       460	path.c	FUNCTION_23
0x4001636	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       460	path.c	FUNCTION_23
0x400163a	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       460	path.c	FUNCTION_23
0x400163e	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       460	path.c	FUNCTION_23
0x4001642	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       460	path.c	FUNCTION_23
0x4001646	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       460	path.c	FUNCTION_23
0x400164a	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       460	path.c	FUNCTION_23
0x400164e	    0x64488b042528	                mov rax, qword fs:[0x28]	       460	path.c	FUNCTION_23
0x4001657	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       460	path.c	FUNCTION_23
0x400165e	            0x31c0	                            xor eax, eax	       460	path.c	FUNCTION_23
0x4001660	      0xe84eedffff	                   call sym.get_pathname	       461	path.c	FUNCTION_23	CALL_1
0x4001665	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       461	path.c	FUNCTION_23	CALL_1
0x400166c	    0xc78530ffffff	               mov dword [rbp - 0xd0], 8	       463	path.c	FUNCTION_23	CALL_2
0x4001676	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       463	path.c	FUNCTION_23	CALL_2
0x4001680	        0x488d4510	                   lea rax, [rbp + 0x10]	       463	path.c	FUNCTION_23	CALL_2
0x4001684	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       463	path.c	FUNCTION_23	CALL_2
0x400168b	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       463	path.c	FUNCTION_23	CALL_2
0x4001692	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       463	path.c	FUNCTION_23	CALL_2
0x4001699	    0x488b05000000	            mov rax, qword [0x040016a0] 	       464	path.c	FUNCTION_23	CALL_3
0x40016a0	    0x488db530ffff	                   lea rsi, [rbp - 0xd0]	       464	path.c	FUNCTION_23	CALL_3
0x40016a7	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	       464	path.c	FUNCTION_23	CALL_3
0x40016ae	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       464	path.c	FUNCTION_23	CALL_3
0x40016b5	          0x4989f0	                             mov r8, rsi	       464	path.c	FUNCTION_23	CALL_3
0x40016b8	      0xbe00000000	                              mov esi, 0	       464	path.c	FUNCTION_23	CALL_3
0x40016bd	          0x4889c7	                            mov rdi, rax	       464	path.c	FUNCTION_23	CALL_3
0x40016c0	      0xe89ffaffff	                    call sym.do_git_path	       464	path.c	FUNCTION_23	CALL_3
0x40016c5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       466	path.c	FUNCTION_23
0x40016cc	        0x488b4010	            mov rax, qword [rax + 0x10] 	       466	path.c	FUNCTION_23
0x40016d0	    0x488bbd48ffff	             mov rdi, qword [rbp - 0xb8]	       467	path.c	FUNCTION_23
0x40016d7	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       467	path.c	FUNCTION_23
0x40016e0	            0x7405	                            je 0x40016e7	       467	path.c	FUNCTION_23
0x40016e2	      0xe800000000	                          call 0x40016e7	       467	path.c	FUNCTION_23
0x40016e7	              0xc9	                                   leave	       467	path.c	FUNCTION_23
0x40016e8	              0xc3	                                     ret	       467	path.c	FUNCTION_23
check_common	DO,0:functions,0:SWITCH,0:ELSE,0:IF,3:WHILE,0:CALL,0:FOR,0	50
0x4000d6c	              0x55	                                push rbp	       329	path.c	FUNCTION_13
0x4000d6d	          0x4889e5	                            mov rbp, rsp	       329	path.c	FUNCTION_13
0x4000d70	        0x48897de8	             mov qword [rbp - 0x18], rdi	       329	path.c	FUNCTION_13
0x4000d74	        0x488975e0	             mov qword [rbp - 0x20], rsi	       329	path.c	FUNCTION_13
0x4000d78	        0x488955d8	             mov qword [rbp - 0x28], rdx	       329	path.c	FUNCTION_13
0x4000d7c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       330	path.c	FUNCTION_13
0x4000d80	        0x488945f8	                mov qword [rbp - 8], rax	       330	path.c	FUNCTION_13
0x4000d84	      0x48837df800	                  cmp qword [rbp - 8], 0	       332	path.c	FUNCTION_13	IF_1
0x4000d89	            0x7507	                           jne 0x4000d92	       332	path.c	FUNCTION_13	IF_1
0x4000d8b	      0xb800000000	                              mov eax, 0	       333	path.c	FUNCTION_13	IF_1
0x4000d90	            0xeb6a	                           jmp 0x4000dfc	       333	path.c	FUNCTION_13	IF_1
0x4000d92	        0x488b45f8	                mov rax, qword [rbp - 8]	       335	path.c	FUNCTION_13	IF_2
0x4000d96	           0xfb600	                   movzx eax, byte [rax]	       335	path.c	FUNCTION_13	IF_2
0x4000d99	          0x83e002	                              and eax, 2	       335	path.c	FUNCTION_13	IF_2
0x4000d9c	            0x84c0	                             test al, al	       335	path.c	FUNCTION_13	IF_2
0x4000d9e	            0x742a	                            je 0x4000dca	       335	path.c	FUNCTION_13	IF_2
0x4000da0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       335	path.c	FUNCTION_13	IF_2
0x4000da4	           0xfb600	                   movzx eax, byte [rax]	       335	path.c	FUNCTION_13	IF_2
0x4000da7	            0x84c0	                             test al, al	       335	path.c	FUNCTION_13	IF_2
0x4000da9	            0x740b	                            je 0x4000db6	       335	path.c	FUNCTION_13	IF_2
0x4000dab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       335	path.c	FUNCTION_13	IF_2
0x4000daf	           0xfb600	                   movzx eax, byte [rax]	       335	path.c	FUNCTION_13	IF_2
0x4000db2	            0x3c2f	                            cmp al, 0x2f	       335	path.c	FUNCTION_13	IF_2
0x4000db4	            0x7514	                           jne 0x4000dca	       335	path.c	FUNCTION_13	IF_2
0x4000db6	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	path.c	FUNCTION_13	IF_2
0x4000dba	           0xfb600	                   movzx eax, byte [rax]	       336	path.c	FUNCTION_13	IF_2
0x4000dbd	          0x83e004	                              and eax, 4	       336	path.c	FUNCTION_13	IF_2
0x4000dc0	            0x84c0	                             test al, al	       336	path.c	FUNCTION_13	IF_2
0x4000dc2	           0xf94c0	                                 sete al	       336	path.c	FUNCTION_13	IF_2
0x4000dc5	           0xfb6c0	                           movzx eax, al	       336	path.c	FUNCTION_13	IF_2
0x4000dc8	            0xeb32	                           jmp 0x4000dfc	       336	path.c	FUNCTION_13	IF_2
0x4000dca	        0x488b45f8	                mov rax, qword [rbp - 8]	       338	path.c	FUNCTION_13	IF_3
0x4000dce	           0xfb600	                   movzx eax, byte [rax]	       338	path.c	FUNCTION_13	IF_3
0x4000dd1	          0x83e002	                              and eax, 2	       338	path.c	FUNCTION_13	IF_3
0x4000dd4	            0x84c0	                             test al, al	       338	path.c	FUNCTION_13	IF_3
0x4000dd6	            0x751f	                           jne 0x4000df7	       338	path.c	FUNCTION_13	IF_3
0x4000dd8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       338	path.c	FUNCTION_13	IF_3
0x4000ddc	           0xfb600	                   movzx eax, byte [rax]	       338	path.c	FUNCTION_13	IF_3
0x4000ddf	            0x84c0	                             test al, al	       338	path.c	FUNCTION_13	IF_3
0x4000de1	            0x7514	                           jne 0x4000df7	       338	path.c	FUNCTION_13	IF_3
0x4000de3	        0x488b45f8	                mov rax, qword [rbp - 8]	       339	path.c	FUNCTION_13	IF_3
0x4000de7	           0xfb600	                   movzx eax, byte [rax]	       339	path.c	FUNCTION_13	IF_3
0x4000dea	          0x83e004	                              and eax, 4	       339	path.c	FUNCTION_13	IF_3
0x4000ded	            0x84c0	                             test al, al	       339	path.c	FUNCTION_13	IF_3
0x4000def	           0xf94c0	                                 sete al	       339	path.c	FUNCTION_13	IF_3
0x4000df2	           0xfb6c0	                           movzx eax, al	       339	path.c	FUNCTION_13	IF_3
0x4000df5	            0xeb05	                           jmp 0x4000dfc	       339	path.c	FUNCTION_13	IF_3
0x4000df7	      0xb800000000	                              mov eax, 0	       341	path.c	FUNCTION_13
0x4000dfc	              0x5d	                                 pop rbp	       342	path.c	FUNCTION_13
0x4000dfd	              0xc3	                                     ret	       342	path.c	FUNCTION_13
report_linked_checkout_garbage	DO,0:functions,0:SWITCH,0:ELSE,0:IF,3:WHILE,0:CALL,7:FOR,1	72
0x4000e61	              0x55	                                push rbp	       354	path.c	FUNCTION_15
0x4000e62	          0x4889e5	                            mov rbp, rsp	       354	path.c	FUNCTION_15
0x4000e65	        0x4883ec40	                           sub rsp, 0x40	       354	path.c	FUNCTION_15
0x4000e69	    0x64488b042528	                mov rax, qword fs:[0x28]	       354	path.c	FUNCTION_15
0x4000e72	        0x488945f8	                mov qword [rbp - 8], rax	       354	path.c	FUNCTION_15
0x4000e76	            0x31c0	                            xor eax, eax	       354	path.c	FUNCTION_15
0x4000e78	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       355	path.c	FUNCTION_15
0x4000e80	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       355	path.c	FUNCTION_15
0x4000e88	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       355	path.c	FUNCTION_15
0x4000e90	    0x488b05000000	            mov rax, qword [0x04000e97] 	       359	path.c	FUNCTION_15	IF_1
0x4000e97	         0xfb64060	           movzx eax, byte [rax + 0x60] 	       359	path.c	FUNCTION_15	IF_1
0x4000e9b	          0x83e001	                              and eax, 1	       359	path.c	FUNCTION_15	IF_1
0x4000e9e	            0x84c0	                             test al, al	       359	path.c	FUNCTION_15	IF_1
0x4000ea0	     0xf84b9000000	                            je 0x4000f5f	       359	path.c	FUNCTION_15	IF_1
0x4000ea6	      0xe800000000	                          call 0x4000eab	       361	path.c	FUNCTION_15	CALL_2
0x4000eab	          0x4889c2	                            mov rdx, rax	       361	path.c	FUNCTION_15	CALL_2
0x4000eae	        0x488d45e0	                   lea rax, [rbp - 0x20]	       361	path.c	FUNCTION_15	CALL_2
0x4000eb2	      0xbe00000000	                              mov esi, 0	       361	path.c	FUNCTION_15	CALL_2
0x4000eb7	          0x4889c7	                            mov rdi, rax	       361	path.c	FUNCTION_15	CALL_2
0x4000eba	      0xb800000000	                              mov eax, 0	       361	path.c	FUNCTION_15	CALL_2
0x4000ebf	      0xe800000000	                          call 0x4000ec4	       361	path.c	FUNCTION_15	CALL_2
0x4000ec4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       362	path.c	FUNCTION_15
0x4000ec8	          0x8945cc	             mov dword [rbp - 0x34], eax	       362	path.c	FUNCTION_15
0x4000ecb	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       363	path.c	FUNCTION_15	FOR_1
0x4000ed3	            0xeb6f	                           jmp 0x4000f44	       363	path.c	FUNCTION_15	FOR_1
0x4000ed5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       364	path.c	FUNCTION_15	FOR_1
0x4000ed9	        0x488b4008	                mov rax, qword [rax + 8]	       364	path.c	FUNCTION_15	FOR_1
0x4000edd	        0x488945d8	             mov qword [rbp - 0x28], rax	       364	path.c	FUNCTION_15	FOR_1
0x4000ee1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       365	path.c	FUNCTION_15	FOR_1	IF_2
0x4000ee5	           0xfb600	                   movzx eax, byte [rax]	       365	path.c	FUNCTION_15	FOR_1	IF_2
0x4000ee8	          0x83e001	                              and eax, 1	       365	path.c	FUNCTION_15	FOR_1	IF_2
0x4000eeb	            0x84c0	                             test al, al	       365	path.c	FUNCTION_15	FOR_1	IF_2
0x4000eed	            0x754f	                           jne 0x4000f3e	       365	path.c	FUNCTION_15	FOR_1	IF_2
0x4000eef	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       367	path.c	FUNCTION_15	FOR_1	CALL_3
0x4000ef2	          0x4863d0	                         movsxd rdx, eax	       367	path.c	FUNCTION_15	FOR_1	CALL_3
0x4000ef5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       367	path.c	FUNCTION_15	FOR_1	CALL_3
0x4000ef9	          0x4889d6	                            mov rsi, rdx	       367	path.c	FUNCTION_15	FOR_1	CALL_3
0x4000efc	          0x4889c7	                            mov rdi, rax	       367	path.c	FUNCTION_15	FOR_1	CALL_3
0x4000eff	      0xe83df2ffff	                  call sym.strbuf_setlen	       367	path.c	FUNCTION_15	FOR_1	CALL_3
0x4000f04	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       368	path.c	FUNCTION_15	FOR_1	CALL_4
0x4000f08	        0x488d45e0	                   lea rax, [rbp - 0x20]	       368	path.c	FUNCTION_15	FOR_1	CALL_4
0x4000f0c	          0x4889d6	                            mov rsi, rdx	       368	path.c	FUNCTION_15	FOR_1	CALL_4
0x4000f0f	          0x4889c7	                            mov rdi, rax	       368	path.c	FUNCTION_15	FOR_1	CALL_4
0x4000f12	      0xe832f3ffff	                  call sym.strbuf_addstr	       368	path.c	FUNCTION_15	FOR_1	CALL_4
0x4000f17	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       369	path.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x4000f1b	          0x4889c7	                            mov rdi, rax	       369	path.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x4000f1e	      0xe800000000	                          call 0x4000f23	       369	path.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x4000f23	            0x85c0	                           test eax, eax	       369	path.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x4000f25	            0x7418	                            je 0x4000f3f	       369	path.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x4000f27	    0x488b05000000	            mov rax, qword [0x04000f2e] 	       370	path.c	FUNCTION_15	FOR_1	CALL_6
0x4000f2e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       370	path.c	FUNCTION_15	FOR_1	CALL_6
0x4000f32	          0x4889d6	                            mov rsi, rdx	       370	path.c	FUNCTION_15	FOR_1	CALL_6
0x4000f35	      0xbf04000000	                              mov edi, 4	       370	path.c	FUNCTION_15	FOR_1	CALL_6
0x4000f3a	            0xffd0	                                call rax	       370	path.c	FUNCTION_15	FOR_1	CALL_6
0x4000f3c	            0xeb01	                           jmp 0x4000f3f	       370	path.c	FUNCTION_15	FOR_1	CALL_6
0x4000f3e	              0x90	                                     nop	       366	path.c	FUNCTION_15	FOR_1	IF_2
0x4000f3f	      0x488345d010	            add qword [rbp - 0x30], 0x10	       363	path.c	FUNCTION_15	FOR_1
0x4000f44	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       363	path.c	FUNCTION_15	FOR_1
0x4000f48	        0x488b4008	                mov rax, qword [rax + 8]	       363	path.c	FUNCTION_15	FOR_1
0x4000f4c	          0x4885c0	                           test rax, rax	       363	path.c	FUNCTION_15	FOR_1
0x4000f4f	            0x7584	                           jne 0x4000ed5	       363	path.c	FUNCTION_15	FOR_1
0x4000f51	        0x488d45e0	                   lea rax, [rbp - 0x20]	       372	path.c	FUNCTION_15	CALL_7
0x4000f55	          0x4889c7	                            mov rdi, rax	       372	path.c	FUNCTION_15	CALL_7
0x4000f58	      0xe800000000	                          call 0x4000f5d	       372	path.c	FUNCTION_15	CALL_7
0x4000f5d	            0xeb01	                           jmp 0x4000f60	       372	path.c	FUNCTION_15	CALL_7
0x4000f5f	              0x90	                                     nop	       360	path.c	FUNCTION_15	IF_1
0x4000f60	        0x488b45f8	                mov rax, qword [rbp - 8]	       373	path.c	FUNCTION_15
0x4000f64	    0x644833042528	                xor rax, qword fs:[0x28]	       373	path.c	FUNCTION_15
0x4000f6d	            0x7405	                            je 0x4000f74	       373	path.c	FUNCTION_15
0x4000f6f	      0xe800000000	                          call 0x4000f74	       373	path.c	FUNCTION_15
0x4000f74	              0xc9	                                   leave	       373	path.c	FUNCTION_15
0x4000f75	              0xc3	                                     ret	       373	path.c	FUNCTION_15
strbuf_avail	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,0:FOR,0	18
0x400010b	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_59
0x400010c	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_59
0x400010f	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_59
0x4000113	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_59
0x4000117	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_59
0x400011a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_59
0x400011d	            0x741b	                            je 0x400013a	       141	strbuf.h	FUNCTION_59
0x400011f	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_59
0x4000123	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_59
0x4000126	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_59
0x400012a	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_59
0x400012e	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_59
0x4000131	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_59
0x4000134	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_59
0x4000138	            0xeb05	                           jmp 0x400013f	       141	strbuf.h	FUNCTION_59
0x400013a	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_59
0x400013f	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_59
0x4000140	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_59
do_worktree_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,4:FOR,0	45
0x4001af6	              0x55	                                push rbp	       513	path.c	FUNCTION_28
0x4001af7	          0x4889e5	                            mov rbp, rsp	       513	path.c	FUNCTION_28
0x4001afa	        0x4883ec20	                           sub rsp, 0x20	       513	path.c	FUNCTION_28
0x4001afe	        0x48897df8	                mov qword [rbp - 8], rdi	       513	path.c	FUNCTION_28
0x4001b02	        0x488975f0	             mov qword [rbp - 0x10], rsi	       513	path.c	FUNCTION_28
0x4001b06	        0x488955e8	             mov qword [rbp - 0x18], rdx	       513	path.c	FUNCTION_28
0x4001b0a	        0x48894de0	             mov qword [rbp - 0x20], rcx	       513	path.c	FUNCTION_28
0x4001b0e	        0x488b45f8	                mov rax, qword [rbp - 8]	       514	path.c	FUNCTION_28	CALL_1
0x4001b12	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       514	path.c	FUNCTION_28	CALL_1
0x4001b16	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       514	path.c	FUNCTION_28	CALL_1
0x4001b1a	          0x4889d6	                            mov rsi, rdx	       514	path.c	FUNCTION_28	CALL_1
0x4001b1d	          0x4889c7	                            mov rdi, rax	       514	path.c	FUNCTION_28	CALL_1
0x4001b20	      0xe824e7ffff	                  call sym.strbuf_addstr	       514	path.c	FUNCTION_28	CALL_1
0x4001b25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       515	path.c	FUNCTION_28	IF_1
0x4001b29	        0x488b4008	                mov rax, qword [rax + 8]	       515	path.c	FUNCTION_28	IF_1
0x4001b2d	          0x4885c0	                           test rax, rax	       515	path.c	FUNCTION_28	IF_1
0x4001b30	            0x7439	                            je 0x4001b6b	       515	path.c	FUNCTION_28	IF_1
0x4001b32	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       515	path.c	FUNCTION_28	IF_1
0x4001b36	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       515	path.c	FUNCTION_28	IF_1
0x4001b3a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       515	path.c	FUNCTION_28	IF_1
0x4001b3e	        0x488b4008	                mov rax, qword [rax + 8]	       515	path.c	FUNCTION_28	IF_1
0x4001b42	        0x4883e801	                              sub rax, 1	       515	path.c	FUNCTION_28	IF_1
0x4001b46	          0x4801d0	                            add rax, rdx	       515	path.c	FUNCTION_28	IF_1
0x4001b49	           0xfb600	                   movzx eax, byte [rax]	       515	path.c	FUNCTION_28	IF_1
0x4001b4c	           0xfbec0	                           movsx eax, al	       515	path.c	FUNCTION_28	IF_1
0x4001b4f	            0x89c7	                            mov edi, eax	       515	path.c	FUNCTION_28	IF_1
0x4001b51	      0xe8f9e4ffff	                 call sym.git_is_dir_sep	       515	path.c	FUNCTION_28	IF_1
0x4001b56	            0x85c0	                           test eax, eax	       515	path.c	FUNCTION_28	IF_1
0x4001b58	            0x7511	                           jne 0x4001b6b	       515	path.c	FUNCTION_28	IF_1
0x4001b5a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       516	path.c	FUNCTION_28	CALL_2
0x4001b5e	      0xbe2f000000	                           mov esi, 0x2f	       516	path.c	FUNCTION_28	CALL_2
0x4001b63	          0x4889c7	                            mov rdi, rax	       516	path.c	FUNCTION_28	CALL_2
0x4001b66	      0xe870e6ffff	                   call sym.strbuf_addch	       516	path.c	FUNCTION_28	CALL_2
0x4001b6b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       518	path.c	FUNCTION_28	CALL_3
0x4001b6f	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       518	path.c	FUNCTION_28	CALL_3
0x4001b73	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       518	path.c	FUNCTION_28	CALL_3
0x4001b77	          0x4889ce	                            mov rsi, rcx	       518	path.c	FUNCTION_28	CALL_3
0x4001b7a	          0x4889c7	                            mov rdi, rax	       518	path.c	FUNCTION_28	CALL_3
0x4001b7d	      0xe800000000	                          call 0x4001b82	       518	path.c	FUNCTION_28	CALL_3
0x4001b82	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       519	path.c	FUNCTION_28	CALL_4
0x4001b86	          0x4889c7	                            mov rdi, rax	       519	path.c	FUNCTION_28	CALL_4
0x4001b89	      0xe8bae8ffff	            call sym.strbuf_cleanup_path	       519	path.c	FUNCTION_28	CALL_4
0x4001b8e	              0x90	                                     nop	       520	path.c	FUNCTION_28
0x4001b8f	              0xc9	                                   leave	       520	path.c	FUNCTION_28
0x4001b90	              0xc3	                                     ret	       520	path.c	FUNCTION_28
cleanup_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,1:CALL,1:FOR,0	22
0x4000404	              0x55	                                push rbp	        39	path.c	FUNCTION_3
0x4000405	          0x4889e5	                            mov rbp, rsp	        39	path.c	FUNCTION_3
0x4000408	        0x4883ec08	                              sub rsp, 8	        39	path.c	FUNCTION_3
0x400040c	        0x48897df8	                mov qword [rbp - 8], rdi	        39	path.c	FUNCTION_3
0x4000410	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	path.c	FUNCTION_3	IF_1	CALL_1
0x4000414	        0x488d55f8	                      lea rdx, [rbp - 8]	        41	path.c	FUNCTION_3	IF_1	CALL_1
0x4000418	      0xbe00000000	                              mov esi, 0	        41	path.c	FUNCTION_3	IF_1	CALL_1
0x400041d	          0x4889c7	                            mov rdi, rax	        41	path.c	FUNCTION_3	IF_1	CALL_1
0x4000420	      0xe85cfcffff	                    call sym.skip_prefix	        41	path.c	FUNCTION_3	IF_1	CALL_1
0x4000425	            0x85c0	                           test eax, eax	        41	path.c	FUNCTION_3	IF_1	CALL_1
0x4000427	            0x7419	                            je 0x4000442	        41	path.c	FUNCTION_3	IF_1	CALL_1
0x4000429	            0xeb0c	                           jmp 0x4000437	        42	path.c	FUNCTION_3	IF_1	WHILE_1
0x400042b	        0x488b45f8	                mov rax, qword [rbp - 8]	        43	path.c	FUNCTION_3	IF_1	WHILE_1
0x400042f	        0x4883c001	                              add rax, 1	        43	path.c	FUNCTION_3	IF_1	WHILE_1
0x4000433	        0x488945f8	                mov qword [rbp - 8], rax	        43	path.c	FUNCTION_3	IF_1	WHILE_1
0x4000437	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	path.c	FUNCTION_3	IF_1	WHILE_1
0x400043b	           0xfb600	                   movzx eax, byte [rax]	        42	path.c	FUNCTION_3	IF_1	WHILE_1
0x400043e	            0x3c2f	                            cmp al, 0x2f	        42	path.c	FUNCTION_3	IF_1	WHILE_1
0x4000440	            0x74e9	                            je 0x400042b	        42	path.c	FUNCTION_3	IF_1	WHILE_1
0x4000442	        0x488b45f8	                mov rax, qword [rbp - 8]	        45	path.c	FUNCTION_3
0x4000446	              0xc9	                                   leave	        46	path.c	FUNCTION_3
0x4000447	              0xc3	                                     ret	        46	path.c	FUNCTION_3
xdg_config_home	DO,0:functions,0:SWITCH,0:ELSE,0:IF,2:WHILE,0:CALL,5:FOR,0	42
0x400396c	              0x55	                                push rbp	      1332	path.c	FUNCTION_56
0x400396d	          0x4889e5	                            mov rbp, rsp	      1332	path.c	FUNCTION_56
0x4003970	        0x4883ec20	                           sub rsp, 0x20	      1332	path.c	FUNCTION_56
0x4003974	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1332	path.c	FUNCTION_56
0x4003978	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1335	path.c	FUNCTION_56	CALL_1
0x400397d	            0x7519	                           jne 0x4003998	      1335	path.c	FUNCTION_56	CALL_1
0x400397f	      0xb900000000	                              mov ecx, 0	      1335	path.c	FUNCTION_56	CALL_1
0x4003984	      0xba37050000	                          mov edx, 0x537	      1335	path.c	FUNCTION_56	CALL_1
0x4003989	      0xbe00000000	                              mov esi, 0	      1335	path.c	FUNCTION_56	CALL_1
0x400398e	      0xbf00000000	                              mov edi, 0	      1335	path.c	FUNCTION_56	CALL_1
0x4003993	      0xe800000000	                          call 0x4003998	      1335	path.c	FUNCTION_56	CALL_1
0x4003998	      0xbf00000000	                              mov edi, 0	      1336	path.c	FUNCTION_56	CALL_2
0x400399d	      0xe800000000	                          call 0x40039a2	      1336	path.c	FUNCTION_56	CALL_2
0x40039a2	        0x488945f0	             mov qword [rbp - 0x10], rax	      1336	path.c	FUNCTION_56	CALL_2
0x40039a6	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1337	path.c	FUNCTION_56	IF_1
0x40039ab	            0x7427	                            je 0x40039d4	      1337	path.c	FUNCTION_56	IF_1
0x40039ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1337	path.c	FUNCTION_56	IF_1
0x40039b1	           0xfb600	                   movzx eax, byte [rax]	      1337	path.c	FUNCTION_56	IF_1
0x40039b4	            0x84c0	                             test al, al	      1337	path.c	FUNCTION_56	IF_1
0x40039b6	            0x741c	                            je 0x40039d4	      1337	path.c	FUNCTION_56	IF_1
0x40039b8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1338	path.c	FUNCTION_56	CALL_3
0x40039bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1338	path.c	FUNCTION_56	CALL_3
0x40039c0	          0x4889c6	                            mov rsi, rax	      1338	path.c	FUNCTION_56	CALL_3
0x40039c3	      0xbf00000000	                              mov edi, 0	      1338	path.c	FUNCTION_56	CALL_3
0x40039c8	      0xb800000000	                              mov eax, 0	      1338	path.c	FUNCTION_56	CALL_3
0x40039cd	      0xe800000000	                          call 0x40039d2	      1338	path.c	FUNCTION_56	CALL_3
0x40039d2	            0xeb36	                           jmp 0x4003a0a	      1338	path.c	FUNCTION_56	CALL_3
0x40039d4	      0xbf00000000	                              mov edi, 0	      1340	path.c	FUNCTION_56	CALL_4
0x40039d9	      0xe800000000	                          call 0x40039de	      1340	path.c	FUNCTION_56	CALL_4
0x40039de	        0x488945f8	                mov qword [rbp - 8], rax	      1340	path.c	FUNCTION_56	CALL_4
0x40039e2	      0x48837df800	                  cmp qword [rbp - 8], 0	      1341	path.c	FUNCTION_56	IF_2
0x40039e7	            0x741c	                            je 0x4003a05	      1341	path.c	FUNCTION_56	IF_2
0x40039e9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1342	path.c	FUNCTION_56	CALL_5
0x40039ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      1342	path.c	FUNCTION_56	CALL_5
0x40039f1	          0x4889c6	                            mov rsi, rax	      1342	path.c	FUNCTION_56	CALL_5
0x40039f4	      0xbf00000000	                              mov edi, 0	      1342	path.c	FUNCTION_56	CALL_5
0x40039f9	      0xb800000000	                              mov eax, 0	      1342	path.c	FUNCTION_56	CALL_5
0x40039fe	      0xe800000000	                          call 0x4003a03	      1342	path.c	FUNCTION_56	CALL_5
0x4003a03	            0xeb05	                           jmp 0x4003a0a	      1342	path.c	FUNCTION_56	CALL_5
0x4003a05	      0xb800000000	                              mov eax, 0	      1343	path.c	FUNCTION_56
0x4003a0a	              0xc9	                                   leave	      1344	path.c	FUNCTION_56
0x4003a0b	              0xc3	                                     ret	      1344	path.c	FUNCTION_56
looks_like_command_line_option	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,0:FOR,0	14
0x4003944	              0x55	                                push rbp	      1327	path.c	FUNCTION_55
0x4003945	          0x4889e5	                            mov rbp, rsp	      1327	path.c	FUNCTION_55
0x4003948	        0x48897df8	                mov qword [rbp - 8], rdi	      1327	path.c	FUNCTION_55
0x400394c	      0x48837df800	                  cmp qword [rbp - 8], 0	      1328	path.c	FUNCTION_55
0x4003951	            0x7412	                            je 0x4003965	      1328	path.c	FUNCTION_55
0x4003953	        0x488b45f8	                mov rax, qword [rbp - 8]	      1328	path.c	FUNCTION_55
0x4003957	           0xfb600	                   movzx eax, byte [rax]	      1328	path.c	FUNCTION_55
0x400395a	            0x3c2d	                            cmp al, 0x2d	      1328	path.c	FUNCTION_55
0x400395c	            0x7507	                           jne 0x4003965	      1328	path.c	FUNCTION_55
0x400395e	      0xb801000000	                              mov eax, 1	      1328	path.c	FUNCTION_55
0x4003963	            0xeb05	                           jmp 0x400396a	      1328	path.c	FUNCTION_55
0x4003965	      0xb800000000	                              mov eax, 0	      1328	path.c	FUNCTION_55
0x400396a	              0x5d	                                 pop rbp	      1329	path.c	FUNCTION_55
0x400396b	              0xc3	                                     ret	      1329	path.c	FUNCTION_55
mkpath	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,5:FOR,0	46
0x4001910	              0x55	                                push rbp	       491	path.c	FUNCTION_26
0x4001911	          0x4889e5	                            mov rbp, rsp	       491	path.c	FUNCTION_26
0x4001914	    0x4881ecf00000	                           sub rsp, 0xf0	       491	path.c	FUNCTION_26
0x400191b	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       491	path.c	FUNCTION_26
0x4001922	    0x4889b558ffff	             mov qword [rbp - 0xa8], rsi	       491	path.c	FUNCTION_26
0x4001929	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       491	path.c	FUNCTION_26
0x4001930	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       491	path.c	FUNCTION_26
0x4001937	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       491	path.c	FUNCTION_26
0x400193e	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       491	path.c	FUNCTION_26
0x4001945	            0x84c0	                             test al, al	       491	path.c	FUNCTION_26
0x4001947	            0x7420	                            je 0x4001969	       491	path.c	FUNCTION_26
0x4001949	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       491	path.c	FUNCTION_26
0x400194d	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       491	path.c	FUNCTION_26
0x4001951	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       491	path.c	FUNCTION_26
0x4001955	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       491	path.c	FUNCTION_26
0x4001959	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       491	path.c	FUNCTION_26
0x400195d	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       491	path.c	FUNCTION_26
0x4001961	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       491	path.c	FUNCTION_26
0x4001965	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       491	path.c	FUNCTION_26
0x4001969	    0x64488b042528	                mov rax, qword fs:[0x28]	       491	path.c	FUNCTION_26
0x4001972	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       491	path.c	FUNCTION_26
0x4001979	            0x31c0	                            xor eax, eax	       491	path.c	FUNCTION_26
0x400197b	      0xe833eaffff	                   call sym.get_pathname	       493	path.c	FUNCTION_26	CALL_1
0x4001980	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       493	path.c	FUNCTION_26	CALL_1
0x4001987	    0xc78530ffffff	               mov dword [rbp - 0xd0], 8	       494	path.c	FUNCTION_26	CALL_2
0x4001991	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       494	path.c	FUNCTION_26	CALL_2
0x400199b	        0x488d4510	                   lea rax, [rbp + 0x10]	       494	path.c	FUNCTION_26	CALL_2
0x400199f	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       494	path.c	FUNCTION_26	CALL_2
0x40019a6	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       494	path.c	FUNCTION_26	CALL_2
0x40019ad	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       494	path.c	FUNCTION_26	CALL_2
0x40019b4	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       495	path.c	FUNCTION_26	CALL_3
0x40019bb	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	       495	path.c	FUNCTION_26	CALL_3
0x40019c2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       495	path.c	FUNCTION_26	CALL_3
0x40019c9	          0x4889ce	                            mov rsi, rcx	       495	path.c	FUNCTION_26	CALL_3
0x40019cc	          0x4889c7	                            mov rdi, rax	       495	path.c	FUNCTION_26	CALL_3
0x40019cf	      0xe800000000	                          call 0x40019d4	       495	path.c	FUNCTION_26	CALL_3
0x40019d4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       497	path.c	FUNCTION_26	CALL_5
0x40019db	        0x488b4010	            mov rax, qword [rax + 0x10] 	       497	path.c	FUNCTION_26	CALL_5
0x40019df	          0x4889c7	                            mov rdi, rax	       497	path.c	FUNCTION_26	CALL_5
0x40019e2	      0xe81deaffff	                   call sym.cleanup_path	       497	path.c	FUNCTION_26	CALL_5
0x40019e7	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	       498	path.c	FUNCTION_26
0x40019ee	    0x644833342528	                xor rsi, qword fs:[0x28]	       498	path.c	FUNCTION_26
0x40019f7	            0x7405	                            je 0x40019fe	       498	path.c	FUNCTION_26
0x40019f9	      0xe800000000	                          call 0x40019fe	       498	path.c	FUNCTION_26
0x40019fe	              0xc9	                                   leave	       498	path.c	FUNCTION_26
0x40019ff	              0xc3	                                     ret	       498	path.c	FUNCTION_26
safe_create_dir	DO,0:functions,0:SWITCH,0:ELSE,1:IF,3:WHILE,0:CALL,5:FOR,0	38
0x4002b89	              0x55	                                push rbp	       884	path.c	FUNCTION_43
0x4002b8a	          0x4889e5	                            mov rbp, rsp	       884	path.c	FUNCTION_43
0x4002b8d	        0x4883ec10	                           sub rsp, 0x10	       884	path.c	FUNCTION_43
0x4002b91	        0x48897df8	                mov qword [rbp - 8], rdi	       884	path.c	FUNCTION_43
0x4002b95	          0x8975f4	              mov dword [rbp - 0xc], esi	       884	path.c	FUNCTION_43
0x4002b98	        0x488b45f8	                mov rax, qword [rbp - 8]	       885	path.c	FUNCTION_43	IF_1
0x4002b9c	      0xbeff010000	                          mov esi, 0x1ff	       885	path.c	FUNCTION_43	IF_1
0x4002ba1	          0x4889c7	                            mov rdi, rax	       885	path.c	FUNCTION_43	IF_1
0x4002ba4	      0xe800000000	                          call 0x4002ba9	       885	path.c	FUNCTION_43	IF_1
0x4002ba9	            0x85c0	                           test eax, eax	       885	path.c	FUNCTION_43	IF_1
0x4002bab	            0x7922	                           jns 0x4002bcf	       885	path.c	FUNCTION_43	IF_1
0x4002bad	      0xe800000000	                          call 0x4002bb2	       886	path.c	FUNCTION_43	IF_1	IF_2
0x4002bb2	            0x8b00	                    mov eax, dword [rax]	       886	path.c	FUNCTION_43	IF_1	IF_2
0x4002bb4	          0x83f811	                           cmp eax, 0x11	       886	path.c	FUNCTION_43	IF_1	IF_2
0x4002bb7	            0x744d	                            je 0x4002c06	       886	path.c	FUNCTION_43	IF_1	IF_2
0x4002bb9	        0x488b45f8	                mov rax, qword [rbp - 8]	       887	path.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002bbd	          0x4889c7	                            mov rdi, rax	       887	path.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002bc0	      0xe800000000	                          call 0x4002bc5	       887	path.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002bc5	      0xbf01000000	                              mov edi, 1	       888	path.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x4002bca	      0xe800000000	                          call 0x4002bcf	       888	path.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x4002bcf	        0x837df400	                cmp dword [rbp - 0xc], 0	       891	path.c	FUNCTION_43	ELSE_1	IF_3	CALL_3
0x4002bd3	            0x7431	                            je 0x4002c06	       891	path.c	FUNCTION_43	ELSE_1	IF_3	CALL_3
0x4002bd5	        0x488b45f8	                mov rax, qword [rbp - 8]	       891	path.c	FUNCTION_43	ELSE_1	IF_3	CALL_3
0x4002bd9	          0x4889c7	                            mov rdi, rax	       891	path.c	FUNCTION_43	ELSE_1	IF_3	CALL_3
0x4002bdc	      0xe800000000	                          call 0x4002be1	       891	path.c	FUNCTION_43	ELSE_1	IF_3	CALL_3
0x4002be1	            0x85c0	                           test eax, eax	       891	path.c	FUNCTION_43	ELSE_1	IF_3	CALL_3
0x4002be3	            0x7421	                            je 0x4002c06	       891	path.c	FUNCTION_43	ELSE_1	IF_3	CALL_3
0x4002be5	      0xbf00000000	                              mov edi, 0	       892	path.c	FUNCTION_43	ELSE_1	IF_3
0x4002bea	      0xe8e1d6ffff	                               call sym.	       892	path.c	FUNCTION_43	ELSE_1	IF_3
0x4002bef	          0x4889c2	                            mov rdx, rax	       892	path.c	FUNCTION_43	ELSE_1	IF_3
0x4002bf2	        0x488b45f8	                mov rax, qword [rbp - 8]	       892	path.c	FUNCTION_43	ELSE_1	IF_3
0x4002bf6	          0x4889c6	                            mov rsi, rax	       892	path.c	FUNCTION_43	ELSE_1	IF_3
0x4002bf9	          0x4889d7	                            mov rdi, rdx	       892	path.c	FUNCTION_43	ELSE_1	IF_3
0x4002bfc	      0xb800000000	                              mov eax, 0	       892	path.c	FUNCTION_43	ELSE_1	IF_3
0x4002c01	      0xe800000000	                          call 0x4002c06	       892	path.c	FUNCTION_43	ELSE_1	IF_3
0x4002c06	              0x90	                                     nop	       893	path.c	FUNCTION_43
0x4002c07	              0xc9	                                   leave	       893	path.c	FUNCTION_43
0x4002c08	              0xc3	                                     ret	       893	path.c	FUNCTION_43
update_common_dir	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,3:FOR,0	30
0x4000dfe	              0x55	                                push rbp	       346	path.c	FUNCTION_14
0x4000dff	          0x4889e5	                            mov rbp, rsp	       346	path.c	FUNCTION_14
0x4000e02	        0x4883ec30	                           sub rsp, 0x30	       346	path.c	FUNCTION_14
0x4000e06	        0x48897de8	             mov qword [rbp - 0x18], rdi	       346	path.c	FUNCTION_14
0x4000e0a	          0x8975e4	             mov dword [rbp - 0x1c], esi	       346	path.c	FUNCTION_14
0x4000e0d	        0x488955d8	             mov qword [rbp - 0x28], rdx	       346	path.c	FUNCTION_14
0x4000e11	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       347	path.c	FUNCTION_14
0x4000e15	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       347	path.c	FUNCTION_14
0x4000e19	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       347	path.c	FUNCTION_14
0x4000e1c	            0x4898	                                    cdqe	       347	path.c	FUNCTION_14
0x4000e1e	          0x4801d0	                            add rax, rdx	       347	path.c	FUNCTION_14
0x4000e21	        0x488945f8	                mov qword [rbp - 8], rax	       347	path.c	FUNCTION_14
0x4000e25	      0xe8ecfeffff	               call sym.init_common_trie	       348	path.c	FUNCTION_14	CALL_1
0x4000e2a	        0x488b45f8	                mov rax, qword [rbp - 8]	       349	path.c	FUNCTION_14	IF_1	CALL_2
0x4000e2e	      0xb900000000	                              mov ecx, 0	       349	path.c	FUNCTION_14	IF_1	CALL_2
0x4000e33	      0xba00000000	                              mov edx, 0	       349	path.c	FUNCTION_14	IF_1	CALL_2
0x4000e38	          0x4889c6	                            mov rsi, rax	       349	path.c	FUNCTION_14	IF_1	CALL_2
0x4000e3b	      0xbf00000000	                              mov edi, 0	       349	path.c	FUNCTION_14	IF_1	CALL_2
0x4000e40	      0xe8f1fcffff	                      call sym.trie_find	       349	path.c	FUNCTION_14	IF_1	CALL_2
0x4000e45	            0x85c0	                           test eax, eax	       349	path.c	FUNCTION_14	IF_1	CALL_2
0x4000e47	            0x7e15	                           jle 0x4000e5e	       349	path.c	FUNCTION_14	IF_1	CALL_2
0x4000e49	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       350	path.c	FUNCTION_14	CALL_3
0x4000e4d	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       350	path.c	FUNCTION_14	CALL_3
0x4000e50	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       350	path.c	FUNCTION_14	CALL_3
0x4000e54	            0x89ce	                            mov esi, ecx	       350	path.c	FUNCTION_14	CALL_3
0x4000e56	          0x4889c7	                            mov rdi, rax	       350	path.c	FUNCTION_14	CALL_3
0x4000e59	      0xe887f8ffff	                    call sym.replace_dir	       350	path.c	FUNCTION_14	CALL_3
0x4000e5e	              0x90	                                     nop	       351	path.c	FUNCTION_14
0x4000e5f	              0xc9	                                   leave	       351	path.c	FUNCTION_14
0x4000e60	              0xc3	                                     ret	       351	path.c	FUNCTION_14
make_trie_node	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,4:FOR,0	42
0x40007b9	              0x55	                                push rbp	       160	path.c	FUNCTION_9
0x40007ba	          0x4889e5	                            mov rbp, rsp	       160	path.c	FUNCTION_9
0x40007bd	        0x4883ec20	                           sub rsp, 0x20	       160	path.c	FUNCTION_9
0x40007c1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       160	path.c	FUNCTION_9
0x40007c5	        0x488975e0	             mov qword [rbp - 0x20], rsi	       160	path.c	FUNCTION_9
0x40007c9	      0xbe18080000	                          mov esi, 0x818	       161	path.c	FUNCTION_9	CALL_1
0x40007ce	      0xbf01000000	                              mov edi, 1	       161	path.c	FUNCTION_9	CALL_1
0x40007d3	      0xe800000000	                          call 0x40007d8	       161	path.c	FUNCTION_9	CALL_1
0x40007d8	        0x488945f8	                mov qword [rbp - 8], rax	       161	path.c	FUNCTION_9	CALL_1
0x40007dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       162	path.c	FUNCTION_9	CALL_2
0x40007e0	          0x4889c7	                            mov rdi, rax	       162	path.c	FUNCTION_9	CALL_2
0x40007e3	      0xe800000000	                          call 0x40007e8	       162	path.c	FUNCTION_9	CALL_2
0x40007e8	            0x89c2	                            mov edx, eax	       162	path.c	FUNCTION_9	CALL_2
0x40007ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	path.c	FUNCTION_9	CALL_2
0x40007ee	    0x899000080000	            mov dword [rax + 0x800], edx	       162	path.c	FUNCTION_9	CALL_2
0x40007f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       163	path.c	FUNCTION_9	IF_1
0x40007f8	    0x8b8000080000	           mov eax, dword [rax + 0x800] 	       163	path.c	FUNCTION_9	IF_1
0x40007fe	            0x85c0	                           test eax, eax	       163	path.c	FUNCTION_9	IF_1
0x4000800	            0x7449	                            je 0x400084b	       163	path.c	FUNCTION_9	IF_1
0x4000802	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	path.c	FUNCTION_9	IF_1	CALL_3
0x4000806	    0x8b8000080000	           mov eax, dword [rax + 0x800] 	       164	path.c	FUNCTION_9	IF_1	CALL_3
0x400080c	            0x4898	                                    cdqe	       164	path.c	FUNCTION_9	IF_1	CALL_3
0x400080e	          0x4889c7	                            mov rdi, rax	       164	path.c	FUNCTION_9	IF_1	CALL_3
0x4000811	      0xe800000000	                          call 0x4000816	       164	path.c	FUNCTION_9	IF_1	CALL_3
0x4000816	          0x4889c2	                            mov rdx, rax	       164	path.c	FUNCTION_9	IF_1	CALL_3
0x4000819	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	path.c	FUNCTION_9	IF_1	CALL_3
0x400081d	    0x488990080800	            mov qword [rax + 0x808], rdx	       164	path.c	FUNCTION_9	IF_1	CALL_3
0x4000824	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	path.c	FUNCTION_9	IF_1	CALL_4
0x4000828	    0x8b8000080000	           mov eax, dword [rax + 0x800] 	       165	path.c	FUNCTION_9	IF_1	CALL_4
0x400082e	          0x4863d0	                         movsxd rdx, eax	       165	path.c	FUNCTION_9	IF_1	CALL_4
0x4000831	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	path.c	FUNCTION_9	IF_1	CALL_4
0x4000835	    0x488b80080800	           mov rax, qword [rax + 0x808] 	       165	path.c	FUNCTION_9	IF_1	CALL_4
0x400083c	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       165	path.c	FUNCTION_9	IF_1	CALL_4
0x4000840	          0x4889ce	                            mov rsi, rcx	       165	path.c	FUNCTION_9	IF_1	CALL_4
0x4000843	          0x4889c7	                            mov rdi, rax	       165	path.c	FUNCTION_9	IF_1	CALL_4
0x4000846	      0xe800000000	                          call 0x400084b	       165	path.c	FUNCTION_9	IF_1	CALL_4
0x400084b	        0x488b45f8	                mov rax, qword [rbp - 8]	       167	path.c	FUNCTION_9
0x400084f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       167	path.c	FUNCTION_9
0x4000853	    0x488990100800	            mov qword [rax + 0x810], rdx	       167	path.c	FUNCTION_9
0x400085a	        0x488b45f8	                mov rax, qword [rbp - 8]	       168	path.c	FUNCTION_9
0x400085e	              0xc9	                                   leave	       169	path.c	FUNCTION_9
0x400085f	              0xc3	                                     ret	       169	path.c	FUNCTION_9
sane_case	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,0:FOR,0	19
0x40000d7	              0x55	                                push rbp	       992	git-compat-util.h	FUNCTION_89
0x40000d8	          0x4889e5	                            mov rbp, rsp	       992	git-compat-util.h	FUNCTION_89
0x40000db	          0x897dfc	                mov dword [rbp - 4], edi	       992	git-compat-util.h	FUNCTION_89
0x40000de	          0x8975f8	                mov dword [rbp - 8], esi	       992	git-compat-util.h	FUNCTION_89
0x40000e1	          0x8b45fc	                mov eax, dword [rbp - 4]	       993	git-compat-util.h	FUNCTION_89	IF_1
0x40000e4	           0xfb6c0	                           movzx eax, al	       993	git-compat-util.h	FUNCTION_89	IF_1
0x40000e7	            0x4898	                                    cdqe	       993	git-compat-util.h	FUNCTION_89	IF_1
0x40000e9	     0xfb680000000	                   movzx eax, byte [rax]	       993	git-compat-util.h	FUNCTION_89	IF_1
0x40000f0	           0xfb6c0	                           movzx eax, al	       993	git-compat-util.h	FUNCTION_89	IF_1
0x40000f3	          0x83e004	                              and eax, 4	       993	git-compat-util.h	FUNCTION_89	IF_1
0x40000f6	            0x85c0	                           test eax, eax	       993	git-compat-util.h	FUNCTION_89	IF_1
0x40000f8	            0x740c	                            je 0x4000106	       993	git-compat-util.h	FUNCTION_89	IF_1
0x40000fa	          0x8b45fc	                mov eax, dword [rbp - 4]	       994	git-compat-util.h	FUNCTION_89	IF_1
0x40000fd	          0x83e0df	                     and eax, 0xffffffdf	       994	git-compat-util.h	FUNCTION_89	IF_1
0x4000100	           0xb45f8	                 or eax, dword [rbp - 8]	       994	git-compat-util.h	FUNCTION_89	IF_1
0x4000103	          0x8945fc	                mov dword [rbp - 4], eax	       994	git-compat-util.h	FUNCTION_89	IF_1
0x4000106	          0x8b45fc	                mov eax, dword [rbp - 4]	       995	git-compat-util.h	FUNCTION_89
0x4000109	              0x5d	                                 pop rbp	       996	git-compat-util.h	FUNCTION_89
0x400010a	              0xc3	                                     ret	       996	git-compat-util.h	FUNCTION_89
strbuf_git_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,3:FOR,0	43
0x4001517	              0x55	                                push rbp	       452	path.c	FUNCTION_22
0x4001518	          0x4889e5	                            mov rbp, rsp	       452	path.c	FUNCTION_22
0x400151b	    0x4881ece00000	                           sub rsp, 0xe0	       452	path.c	FUNCTION_22
0x4001522	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       452	path.c	FUNCTION_22
0x4001529	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       452	path.c	FUNCTION_22
0x4001530	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       452	path.c	FUNCTION_22
0x4001537	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       452	path.c	FUNCTION_22
0x400153e	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       452	path.c	FUNCTION_22
0x4001545	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       452	path.c	FUNCTION_22
0x400154c	            0x84c0	                             test al, al	       452	path.c	FUNCTION_22
0x400154e	            0x7420	                            je 0x4001570	       452	path.c	FUNCTION_22
0x4001550	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       452	path.c	FUNCTION_22
0x4001554	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       452	path.c	FUNCTION_22
0x4001558	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       452	path.c	FUNCTION_22
0x400155c	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       452	path.c	FUNCTION_22
0x4001560	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       452	path.c	FUNCTION_22
0x4001564	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       452	path.c	FUNCTION_22
0x4001568	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       452	path.c	FUNCTION_22
0x400156c	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       452	path.c	FUNCTION_22
0x4001570	    0x64488b042528	                mov rax, qword fs:[0x28]	       452	path.c	FUNCTION_22
0x4001579	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       452	path.c	FUNCTION_22
0x4001580	            0x31c0	                            xor eax, eax	       452	path.c	FUNCTION_22
0x4001582	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       454	path.c	FUNCTION_22	CALL_1
0x400158c	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       454	path.c	FUNCTION_22	CALL_1
0x4001596	        0x488d4510	                   lea rax, [rbp + 0x10]	       454	path.c	FUNCTION_22	CALL_1
0x400159a	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       454	path.c	FUNCTION_22	CALL_1
0x40015a1	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       454	path.c	FUNCTION_22	CALL_1
0x40015a8	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       454	path.c	FUNCTION_22	CALL_1
0x40015af	    0x488b05000000	            mov rax, qword [0x040015b6] 	       455	path.c	FUNCTION_22	CALL_2
0x40015b6	    0x488db530ffff	                   lea rsi, [rbp - 0xd0]	       455	path.c	FUNCTION_22	CALL_2
0x40015bd	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       455	path.c	FUNCTION_22	CALL_2
0x40015c4	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       455	path.c	FUNCTION_22	CALL_2
0x40015cb	          0x4989f0	                             mov r8, rsi	       455	path.c	FUNCTION_22	CALL_2
0x40015ce	      0xbe00000000	                              mov esi, 0	       455	path.c	FUNCTION_22	CALL_2
0x40015d3	          0x4889c7	                            mov rdi, rax	       455	path.c	FUNCTION_22	CALL_2
0x40015d6	      0xe889fbffff	                    call sym.do_git_path	       455	path.c	FUNCTION_22	CALL_2
0x40015db	              0x90	                                     nop	       457	path.c	FUNCTION_22
0x40015dc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       457	path.c	FUNCTION_22
0x40015e3	    0x644833042528	                xor rax, qword fs:[0x28]	       457	path.c	FUNCTION_22
0x40015ec	            0x7405	                            je 0x40015f3	       457	path.c	FUNCTION_22
0x40015ee	      0xe800000000	                          call 0x40015f3	       457	path.c	FUNCTION_22
0x40015f3	              0xc9	                                   leave	       457	path.c	FUNCTION_22
0x40015f4	              0xc3	                                     ret	       457	path.c	FUNCTION_22
mkpathdup	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,5:FOR,0	50
0x40017fb	              0x55	                                push rbp	       480	path.c	FUNCTION_25
0x40017fc	          0x4889e5	                            mov rbp, rsp	       480	path.c	FUNCTION_25
0x40017ff	    0x4881ec000100	                          sub rsp, 0x100	       480	path.c	FUNCTION_25
0x4001806	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	       480	path.c	FUNCTION_25
0x400180d	    0x4889b558ffff	             mov qword [rbp - 0xa8], rsi	       480	path.c	FUNCTION_25
0x4001814	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       480	path.c	FUNCTION_25
0x400181b	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       480	path.c	FUNCTION_25
0x4001822	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       480	path.c	FUNCTION_25
0x4001829	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       480	path.c	FUNCTION_25
0x4001830	            0x84c0	                             test al, al	       480	path.c	FUNCTION_25
0x4001832	            0x7420	                            je 0x4001854	       480	path.c	FUNCTION_25
0x4001834	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       480	path.c	FUNCTION_25
0x4001838	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       480	path.c	FUNCTION_25
0x400183c	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       480	path.c	FUNCTION_25
0x4001840	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       480	path.c	FUNCTION_25
0x4001844	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       480	path.c	FUNCTION_25
0x4001848	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       480	path.c	FUNCTION_25
0x400184c	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       480	path.c	FUNCTION_25
0x4001850	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       480	path.c	FUNCTION_25
0x4001854	    0x64488b042528	                mov rax, qword fs:[0x28]	       480	path.c	FUNCTION_25
0x400185d	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       480	path.c	FUNCTION_25
0x4001864	            0x31c0	                            xor eax, eax	       480	path.c	FUNCTION_25
0x4001866	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       481	path.c	FUNCTION_25
0x4001871	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	       481	path.c	FUNCTION_25
0x400187c	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       481	path.c	FUNCTION_25
0x4001887	    0xc78530ffffff	               mov dword [rbp - 0xd0], 8	       483	path.c	FUNCTION_25	CALL_1
0x4001891	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       483	path.c	FUNCTION_25	CALL_1
0x400189b	        0x488d4510	                   lea rax, [rbp + 0x10]	       483	path.c	FUNCTION_25	CALL_1
0x400189f	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       483	path.c	FUNCTION_25	CALL_1
0x40018a6	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       483	path.c	FUNCTION_25	CALL_1
0x40018ad	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       483	path.c	FUNCTION_25	CALL_1
0x40018b4	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       484	path.c	FUNCTION_25	CALL_2
0x40018bb	    0x488b8d08ffff	             mov rcx, qword [rbp - 0xf8]	       484	path.c	FUNCTION_25	CALL_2
0x40018c2	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       484	path.c	FUNCTION_25	CALL_2
0x40018c9	          0x4889ce	                            mov rsi, rcx	       484	path.c	FUNCTION_25	CALL_2
0x40018cc	          0x4889c7	                            mov rdi, rax	       484	path.c	FUNCTION_25	CALL_2
0x40018cf	      0xe800000000	                          call 0x40018d4	       484	path.c	FUNCTION_25	CALL_2
0x40018d4	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       486	path.c	FUNCTION_25	CALL_4
0x40018db	          0x4889c7	                            mov rdi, rax	       486	path.c	FUNCTION_25	CALL_4
0x40018de	      0xe865ebffff	            call sym.strbuf_cleanup_path	       486	path.c	FUNCTION_25	CALL_4
0x40018e3	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       487	path.c	FUNCTION_25	CALL_5
0x40018ea	      0xbe00000000	                              mov esi, 0	       487	path.c	FUNCTION_25	CALL_5
0x40018ef	          0x4889c7	                            mov rdi, rax	       487	path.c	FUNCTION_25	CALL_5
0x40018f2	      0xe800000000	                          call 0x40018f7	       487	path.c	FUNCTION_25	CALL_5
0x40018f7	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       488	path.c	FUNCTION_25
0x40018fe	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       488	path.c	FUNCTION_25
0x4001907	            0x7405	                            je 0x400190e	       488	path.c	FUNCTION_25
0x4001909	      0xe800000000	                          call 0x400190e	       488	path.c	FUNCTION_25
0x400190e	              0xc9	                                   leave	       488	path.c	FUNCTION_25
0x400190f	              0xc3	                                     ret	       488	path.c	FUNCTION_25
chomp_trailing_dir_sep	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,1:CALL,0:FOR,0	23
0x4003558	              0x55	                                push rbp	      1212	path.c	FUNCTION_50
0x4003559	          0x4889e5	                            mov rbp, rsp	      1212	path.c	FUNCTION_50
0x400355c	        0x4883ec10	                           sub rsp, 0x10	      1212	path.c	FUNCTION_50
0x4003560	        0x48897df8	                mov qword [rbp - 8], rdi	      1212	path.c	FUNCTION_50
0x4003564	          0x8975f4	              mov dword [rbp - 0xc], esi	      1212	path.c	FUNCTION_50
0x4003567	            0xeb04	                           jmp 0x400356d	      1213	path.c	FUNCTION_50	WHILE_1
0x4003569	        0x836df401	                sub dword [rbp - 0xc], 1	      1214	path.c	FUNCTION_50	WHILE_1
0x400356d	        0x837df400	                cmp dword [rbp - 0xc], 0	      1213	path.c	FUNCTION_50	WHILE_1
0x4003571	            0x7421	                            je 0x4003594	      1213	path.c	FUNCTION_50	WHILE_1
0x4003573	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1213	path.c	FUNCTION_50	WHILE_1
0x4003576	            0x4898	                                    cdqe	      1213	path.c	FUNCTION_50	WHILE_1
0x4003578	        0x488d50ff	                      lea rdx, [rax - 1]	      1213	path.c	FUNCTION_50	WHILE_1
0x400357c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1213	path.c	FUNCTION_50	WHILE_1
0x4003580	          0x4801d0	                            add rax, rdx	      1213	path.c	FUNCTION_50	WHILE_1
0x4003583	           0xfb600	                   movzx eax, byte [rax]	      1213	path.c	FUNCTION_50	WHILE_1
0x4003586	           0xfbec0	                           movsx eax, al	      1213	path.c	FUNCTION_50	WHILE_1
0x4003589	            0x89c7	                            mov edi, eax	      1213	path.c	FUNCTION_50	WHILE_1
0x400358b	      0xe8bfcaffff	                 call sym.git_is_dir_sep	      1213	path.c	FUNCTION_50	WHILE_1
0x4003590	            0x85c0	                           test eax, eax	      1213	path.c	FUNCTION_50	WHILE_1
0x4003592	            0x75d5	                           jne 0x4003569	      1213	path.c	FUNCTION_50	WHILE_1
0x4003594	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1215	path.c	FUNCTION_50
0x4003597	              0xc9	                                   leave	      1216	path.c	FUNCTION_50
0x4003598	              0xc3	                                     ret	      1216	path.c	FUNCTION_50
strbuf_cleanup_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,2:FOR,0	26
0x4000448	              0x55	                                push rbp	        49	path.c	FUNCTION_4
0x4000449	          0x4889e5	                            mov rbp, rsp	        49	path.c	FUNCTION_4
0x400044c	        0x4883ec20	                           sub rsp, 0x20	        49	path.c	FUNCTION_4
0x4000450	        0x48897de8	             mov qword [rbp - 0x18], rdi	        49	path.c	FUNCTION_4
0x4000454	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        50	path.c	FUNCTION_4	CALL_1
0x4000458	        0x488b4010	            mov rax, qword [rax + 0x10] 	        50	path.c	FUNCTION_4	CALL_1
0x400045c	          0x4889c7	                            mov rdi, rax	        50	path.c	FUNCTION_4	CALL_1
0x400045f	      0xe8a0ffffff	                   call sym.cleanup_path	        50	path.c	FUNCTION_4	CALL_1
0x4000464	        0x488945f8	                mov qword [rbp - 8], rax	        50	path.c	FUNCTION_4	CALL_1
0x4000468	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        51	path.c	FUNCTION_4	IF_1
0x400046c	        0x488b4010	            mov rax, qword [rax + 0x10] 	        51	path.c	FUNCTION_4	IF_1
0x4000470	        0x483b45f8	                cmp rax, qword [rbp - 8]	        51	path.c	FUNCTION_4	IF_1
0x4000474	            0x7326	                           jae 0x400049c	        51	path.c	FUNCTION_4	IF_1
0x4000476	        0x488b55f8	                mov rdx, qword [rbp - 8]	        52	path.c	FUNCTION_4	CALL_2
0x400047a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        52	path.c	FUNCTION_4	CALL_2
0x400047e	        0x488b4010	            mov rax, qword [rax + 0x10] 	        52	path.c	FUNCTION_4	CALL_2
0x4000482	          0x4829c2	                            sub rdx, rax	        52	path.c	FUNCTION_4	CALL_2
0x4000485	          0x4889d0	                            mov rax, rdx	        52	path.c	FUNCTION_4	CALL_2
0x4000488	          0x4889c2	                            mov rdx, rax	        52	path.c	FUNCTION_4	CALL_2
0x400048b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        52	path.c	FUNCTION_4	CALL_2
0x400048f	      0xbe00000000	                              mov esi, 0	        52	path.c	FUNCTION_4	CALL_2
0x4000494	          0x4889c7	                            mov rdi, rax	        52	path.c	FUNCTION_4	CALL_2
0x4000497	      0xe800000000	                          call 0x400049c	        52	path.c	FUNCTION_4	CALL_2
0x400049c	              0x90	                                     nop	        53	path.c	FUNCTION_4
0x400049d	              0xc9	                                   leave	        53	path.c	FUNCTION_4
0x400049e	              0xc3	                                     ret	        53	path.c	FUNCTION_4
is_dir_file	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,1:CALL,3:FOR,0	55
0x4000638	              0x55	                                push rbp	        79	path.c	FUNCTION_7
0x4000639	          0x4889e5	                            mov rbp, rsp	        79	path.c	FUNCTION_7
0x400063c	        0x4883ec30	                           sub rsp, 0x30	        79	path.c	FUNCTION_7
0x4000640	        0x48897de8	             mov qword [rbp - 0x18], rdi	        79	path.c	FUNCTION_7
0x4000644	        0x488975e0	             mov qword [rbp - 0x20], rsi	        79	path.c	FUNCTION_7
0x4000648	        0x488955d8	             mov qword [rbp - 0x28], rdx	        79	path.c	FUNCTION_7
0x400064c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        80	path.c	FUNCTION_7	CALL_1
0x4000650	          0x4889c7	                            mov rdi, rax	        80	path.c	FUNCTION_7	CALL_1
0x4000653	      0xe800000000	                          call 0x4000658	        80	path.c	FUNCTION_7	CALL_1
0x4000658	          0x8945fc	                mov dword [rbp - 4], eax	        80	path.c	FUNCTION_7	CALL_1
0x400065b	          0x8b45fc	                mov eax, dword [rbp - 4]	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x400065e	          0x4863d0	                         movsxd rdx, eax	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x4000661	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x4000665	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x4000669	          0x4889ce	                            mov rsi, rcx	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x400066c	          0x4889c7	                            mov rdi, rax	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x400066f	      0xe800000000	                          call 0x4000674	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x4000674	            0x85c0	                           test eax, eax	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x4000676	            0x751e	                           jne 0x4000696	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x4000678	          0x8b45fc	                mov eax, dword [rbp - 4]	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x400067b	          0x4863d0	                         movsxd rdx, eax	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x400067e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x4000682	          0x4801d0	                            add rax, rdx	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x4000685	           0xfb600	                   movzx eax, byte [rax]	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x4000688	           0xfbec0	                           movsx eax, al	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x400068b	            0x89c7	                            mov edi, eax	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x400068d	      0xe8bdf9ffff	                 call sym.git_is_dir_sep	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x4000692	            0x85c0	                           test eax, eax	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x4000694	            0x750b	                           jne 0x40006a1	        81	path.c	FUNCTION_7	IF_1	CALL_2
0x4000696	      0xb800000000	                              mov eax, 0	        82	path.c	FUNCTION_7	IF_1
0x400069b	            0xeb46	                           jmp 0x40006e3	        82	path.c	FUNCTION_7	IF_1
0x400069d	        0x8345fc01	                  add dword [rbp - 4], 1	        84	path.c	FUNCTION_7	WHILE_1
0x40006a1	          0x8b45fc	                mov eax, dword [rbp - 4]	        83	path.c	FUNCTION_7	WHILE_1
0x40006a4	          0x4863d0	                         movsxd rdx, eax	        83	path.c	FUNCTION_7	WHILE_1
0x40006a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        83	path.c	FUNCTION_7	WHILE_1
0x40006ab	          0x4801d0	                            add rax, rdx	        83	path.c	FUNCTION_7	WHILE_1
0x40006ae	           0xfb600	                   movzx eax, byte [rax]	        83	path.c	FUNCTION_7	WHILE_1
0x40006b1	           0xfbec0	                           movsx eax, al	        83	path.c	FUNCTION_7	WHILE_1
0x40006b4	            0x89c7	                            mov edi, eax	        83	path.c	FUNCTION_7	WHILE_1
0x40006b6	      0xe894f9ffff	                 call sym.git_is_dir_sep	        83	path.c	FUNCTION_7	WHILE_1
0x40006bb	            0x85c0	                           test eax, eax	        83	path.c	FUNCTION_7	WHILE_1
0x40006bd	            0x75de	                           jne 0x400069d	        83	path.c	FUNCTION_7	WHILE_1
0x40006bf	          0x8b45fc	                mov eax, dword [rbp - 4]	        85	path.c	FUNCTION_7	CALL_3
0x40006c2	          0x4863d0	                         movsxd rdx, eax	        85	path.c	FUNCTION_7	CALL_3
0x40006c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	path.c	FUNCTION_7	CALL_3
0x40006c9	          0x4801c2	                            add rdx, rax	        85	path.c	FUNCTION_7	CALL_3
0x40006cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	path.c	FUNCTION_7	CALL_3
0x40006d0	          0x4889c6	                            mov rsi, rax	        85	path.c	FUNCTION_7	CALL_3
0x40006d3	          0x4889d7	                            mov rdi, rdx	        85	path.c	FUNCTION_7	CALL_3
0x40006d6	      0xe800000000	                          call 0x40006db	        85	path.c	FUNCTION_7	CALL_3
0x40006db	            0x85c0	                           test eax, eax	        85	path.c	FUNCTION_7	CALL_3
0x40006dd	           0xf94c0	                                 sete al	        85	path.c	FUNCTION_7	CALL_3
0x40006e0	           0xfb6c0	                           movzx eax, al	        85	path.c	FUNCTION_7	CALL_3
0x40006e3	              0xc9	                                   leave	        86	path.c	FUNCTION_7
0x40006e4	              0xc3	                                     ret	        86	path.c	FUNCTION_7
get_pathname	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,0:FOR,0	22
0x40003b3	              0x55	                                push rbp	        27	path.c	FUNCTION_2
0x40003b4	          0x4889e5	                            mov rbp, rsp	        27	path.c	FUNCTION_2
0x40003b7	        0x4883ec10	                           sub rsp, 0x10	        27	path.c	FUNCTION_2
0x40003bb	    0x8b0500000000	            mov eax, dword [0x040003c1] 	        32	path.c	FUNCTION_2
0x40003c1	          0x4863d0	                         movsxd rdx, eax	        32	path.c	FUNCTION_2
0x40003c4	          0x4889d0	                            mov rax, rdx	        32	path.c	FUNCTION_2
0x40003c7	          0x4801c0	                            add rax, rax	        32	path.c	FUNCTION_2
0x40003ca	          0x4801d0	                            add rax, rdx	        32	path.c	FUNCTION_2
0x40003cd	        0x48c1e003	                              shl rax, 3	        32	path.c	FUNCTION_2
0x40003d1	    0x480500000000	                              add rax, 0	        32	path.c	FUNCTION_2
0x40003d7	        0x488945f8	                mov qword [rbp - 8], rax	        32	path.c	FUNCTION_2
0x40003db	    0x8b0500000000	            mov eax, dword [0x040003e1] 	        33	path.c	FUNCTION_2
0x40003e1	          0x83c001	                              add eax, 1	        33	path.c	FUNCTION_2
0x40003e4	          0x83e003	                              and eax, 3	        33	path.c	FUNCTION_2
0x40003e7	    0x890500000000	            mov dword [0x040003ed], eax 	        33	path.c	FUNCTION_2
0x40003ed	        0x488b45f8	                mov rax, qword [rbp - 8]	        34	path.c	FUNCTION_2
0x40003f1	      0xbe00000000	                              mov esi, 0	        34	path.c	FUNCTION_2
0x40003f6	          0x4889c7	                            mov rdi, rax	        34	path.c	FUNCTION_2
0x40003f9	      0xe843fdffff	                  call sym.strbuf_setlen	        34	path.c	FUNCTION_2
0x40003fe	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	path.c	FUNCTION_2
0x4000402	              0xc9	                                   leave	        36	path.c	FUNCTION_2
0x4000403	              0xc3	                                     ret	        36	path.c	FUNCTION_2
replace_dir	DO,0:functions,0:SWITCH,0:ELSE,0:IF,2:WHILE,0:CALL,2:FOR,0	68
0x40006e5	              0x55	                                push rbp	        89	path.c	FUNCTION_8
0x40006e6	          0x4889e5	                            mov rbp, rsp	        89	path.c	FUNCTION_8
0x40006e9	        0x4883ec30	                           sub rsp, 0x30	        89	path.c	FUNCTION_8
0x40006ed	        0x48897de8	             mov qword [rbp - 0x18], rdi	        89	path.c	FUNCTION_8
0x40006f1	          0x8975e4	             mov dword [rbp - 0x1c], esi	        89	path.c	FUNCTION_8
0x40006f4	        0x488955d8	             mov qword [rbp - 0x28], rdx	        89	path.c	FUNCTION_8
0x40006f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        90	path.c	FUNCTION_8	CALL_1
0x40006fc	          0x4889c7	                            mov rdi, rax	        90	path.c	FUNCTION_8	CALL_1
0x40006ff	      0xe800000000	                          call 0x4000704	        90	path.c	FUNCTION_8	CALL_1
0x4000704	          0x8945f8	                mov dword [rbp - 8], eax	        90	path.c	FUNCTION_8	CALL_1
0x4000707	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        91	path.c	FUNCTION_8
0x400070b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        91	path.c	FUNCTION_8
0x400070f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        91	path.c	FUNCTION_8
0x4000712	            0x4898	                                    cdqe	        91	path.c	FUNCTION_8
0x4000714	          0x4801d0	                            add rax, rdx	        91	path.c	FUNCTION_8
0x4000717	           0xfb600	                   movzx eax, byte [rax]	        91	path.c	FUNCTION_8
0x400071a	            0x84c0	                             test al, al	        91	path.c	FUNCTION_8
0x400071c	            0x7449	                            je 0x4000767	        91	path.c	FUNCTION_8
0x400071e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        91	path.c	FUNCTION_8
0x4000722	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        91	path.c	FUNCTION_8
0x4000726	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        91	path.c	FUNCTION_8
0x4000729	            0x4898	                                    cdqe	        91	path.c	FUNCTION_8
0x400072b	          0x4801d0	                            add rax, rdx	        91	path.c	FUNCTION_8
0x400072e	           0xfb600	                   movzx eax, byte [rax]	        91	path.c	FUNCTION_8
0x4000731	           0xfbec0	                           movsx eax, al	        91	path.c	FUNCTION_8
0x4000734	            0x89c7	                            mov edi, eax	        91	path.c	FUNCTION_8
0x4000736	      0xe814f9ffff	                 call sym.git_is_dir_sep	        91	path.c	FUNCTION_8
0x400073b	            0x85c0	                           test eax, eax	        91	path.c	FUNCTION_8
0x400073d	            0x7528	                           jne 0x4000767	        91	path.c	FUNCTION_8
0x400073f	          0x8b45f8	                mov eax, dword [rbp - 8]	        92	path.c	FUNCTION_8
0x4000742	            0x4898	                                    cdqe	        92	path.c	FUNCTION_8
0x4000744	        0x488d50ff	                      lea rdx, [rax - 1]	        92	path.c	FUNCTION_8
0x4000748	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        92	path.c	FUNCTION_8
0x400074c	          0x4801d0	                            add rax, rdx	        92	path.c	FUNCTION_8
0x400074f	           0xfb600	                   movzx eax, byte [rax]	        92	path.c	FUNCTION_8
0x4000752	           0xfbec0	                           movsx eax, al	        92	path.c	FUNCTION_8
0x4000755	            0x89c7	                            mov edi, eax	        92	path.c	FUNCTION_8
0x4000757	      0xe8f3f8ffff	                 call sym.git_is_dir_sep	        92	path.c	FUNCTION_8
0x400075c	            0x85c0	                           test eax, eax	        91	path.c	FUNCTION_8
0x400075e	            0x7507	                           jne 0x4000767	        91	path.c	FUNCTION_8
0x4000760	      0xb801000000	                              mov eax, 1	        91	path.c	FUNCTION_8
0x4000765	            0xeb05	                           jmp 0x400076c	        91	path.c	FUNCTION_8
0x4000767	      0xb800000000	                              mov eax, 0	        91	path.c	FUNCTION_8
0x400076c	          0x8945fc	                mov dword [rbp - 4], eax	        91	path.c	FUNCTION_8
0x400076f	        0x837dfc00	                  cmp dword [rbp - 4], 0	        93	path.c	FUNCTION_8	IF_1
0x4000773	            0x7404	                            je 0x4000779	        93	path.c	FUNCTION_8	IF_1
0x4000775	        0x836de401	               sub dword [rbp - 0x1c], 1	        94	path.c	FUNCTION_8	IF_1
0x4000779	          0x8b45f8	                mov eax, dword [rbp - 8]	        95	path.c	FUNCTION_8	CALL_2
0x400077c	          0x4863f0	                         movsxd rsi, eax	        95	path.c	FUNCTION_8	CALL_2
0x400077f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        95	path.c	FUNCTION_8	CALL_2
0x4000782	          0x4863d0	                         movsxd rdx, eax	        95	path.c	FUNCTION_8	CALL_2
0x4000785	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	        95	path.c	FUNCTION_8	CALL_2
0x4000789	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	path.c	FUNCTION_8	CALL_2
0x400078d	          0x4989f0	                             mov r8, rsi	        95	path.c	FUNCTION_8	CALL_2
0x4000790	      0xbe00000000	                              mov esi, 0	        95	path.c	FUNCTION_8	CALL_2
0x4000795	          0x4889c7	                            mov rdi, rax	        95	path.c	FUNCTION_8	CALL_2
0x4000798	      0xe800000000	                          call 0x400079d	        95	path.c	FUNCTION_8	CALL_2
0x400079d	        0x837dfc00	                  cmp dword [rbp - 4], 0	        96	path.c	FUNCTION_8	IF_2
0x40007a1	            0x7413	                            je 0x40007b6	        96	path.c	FUNCTION_8	IF_2
0x40007a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	path.c	FUNCTION_8	IF_2
0x40007a7	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        97	path.c	FUNCTION_8	IF_2
0x40007ab	          0x8b45f8	                mov eax, dword [rbp - 8]	        97	path.c	FUNCTION_8	IF_2
0x40007ae	            0x4898	                                    cdqe	        97	path.c	FUNCTION_8	IF_2
0x40007b0	          0x4801d0	                            add rax, rdx	        97	path.c	FUNCTION_8	IF_2
0x40007b3	          0xc6002f	                    mov byte [rax], 0x2f	        97	path.c	FUNCTION_8	IF_2
0x40007b6	              0x90	                                     nop	        98	path.c	FUNCTION_8
0x40007b7	              0xc9	                                   leave	        98	path.c	FUNCTION_8
0x40007b8	              0xc3	                                     ret	        98	path.c	FUNCTION_8
git_pathdup_submodule	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,5:FOR,0	55
0x4001eb7	              0x55	                                push rbp	       579	path.c	FUNCTION_32
0x4001eb8	          0x4889e5	                            mov rbp, rsp	       579	path.c	FUNCTION_32
0x4001ebb	    0x4881ec100100	                          sub rsp, 0x110	       579	path.c	FUNCTION_32
0x4001ec2	    0x4889bdf8feff	            mov qword [rbp - 0x108], rdi	       579	path.c	FUNCTION_32
0x4001ec9	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	       579	path.c	FUNCTION_32
0x4001ed0	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       579	path.c	FUNCTION_32
0x4001ed7	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       579	path.c	FUNCTION_32
0x4001ede	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       579	path.c	FUNCTION_32
0x4001ee5	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       579	path.c	FUNCTION_32
0x4001eec	            0x84c0	                             test al, al	       579	path.c	FUNCTION_32
0x4001eee	            0x7420	                            je 0x4001f10	       579	path.c	FUNCTION_32
0x4001ef0	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       579	path.c	FUNCTION_32
0x4001ef4	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       579	path.c	FUNCTION_32
0x4001ef8	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       579	path.c	FUNCTION_32
0x4001efc	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       579	path.c	FUNCTION_32
0x4001f00	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       579	path.c	FUNCTION_32
0x4001f04	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       579	path.c	FUNCTION_32
0x4001f08	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       579	path.c	FUNCTION_32
0x4001f0c	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       579	path.c	FUNCTION_32
0x4001f10	    0x64488b042528	                mov rax, qword fs:[0x28]	       579	path.c	FUNCTION_32
0x4001f19	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       579	path.c	FUNCTION_32
0x4001f20	            0x31c0	                            xor eax, eax	       579	path.c	FUNCTION_32
0x4001f22	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       582	path.c	FUNCTION_32
0x4001f2d	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	       582	path.c	FUNCTION_32
0x4001f38	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       582	path.c	FUNCTION_32
0x4001f43	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       583	path.c	FUNCTION_32	CALL_1
0x4001f4d	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       583	path.c	FUNCTION_32	CALL_1
0x4001f57	        0x488d4510	                   lea rax, [rbp + 0x10]	       583	path.c	FUNCTION_32	CALL_1
0x4001f5b	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       583	path.c	FUNCTION_32	CALL_1
0x4001f62	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       583	path.c	FUNCTION_32	CALL_1
0x4001f69	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       583	path.c	FUNCTION_32	CALL_1
0x4001f70	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       584	path.c	FUNCTION_32	CALL_2
0x4001f77	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	       584	path.c	FUNCTION_32	CALL_2
0x4001f7e	    0x488bb5f8feff	            mov rsi, qword [rbp - 0x108]	       584	path.c	FUNCTION_32	CALL_2
0x4001f85	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       584	path.c	FUNCTION_32	CALL_2
0x4001f8c	          0x4889c7	                            mov rdi, rax	       584	path.c	FUNCTION_32	CALL_2
0x4001f8f	      0xe806feffff	              call sym.do_submodule_path	       584	path.c	FUNCTION_32	CALL_2
0x4001f94	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	       584	path.c	FUNCTION_32	CALL_2
0x4001f9a	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 0	       586	path.c	FUNCTION_32	IF_1
0x4001fa1	            0x7416	                            je 0x4001fb9	       586	path.c	FUNCTION_32	IF_1
0x4001fa3	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       587	path.c	FUNCTION_32	IF_1	CALL_4
0x4001faa	          0x4889c7	                            mov rdi, rax	       587	path.c	FUNCTION_32	IF_1	CALL_4
0x4001fad	      0xe800000000	                          call 0x4001fb2	       587	path.c	FUNCTION_32	IF_1	CALL_4
0x4001fb2	      0xb800000000	                              mov eax, 0	       588	path.c	FUNCTION_32	IF_1
0x4001fb7	            0xeb14	                           jmp 0x4001fcd	       588	path.c	FUNCTION_32	IF_1
0x4001fb9	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       590	path.c	FUNCTION_32	CALL_5
0x4001fc0	      0xbe00000000	                              mov esi, 0	       590	path.c	FUNCTION_32	CALL_5
0x4001fc5	          0x4889c7	                            mov rdi, rax	       590	path.c	FUNCTION_32	CALL_5
0x4001fc8	      0xe800000000	                          call 0x4001fcd	       590	path.c	FUNCTION_32	CALL_5
0x4001fcd	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       591	path.c	FUNCTION_32
0x4001fd4	    0x644833142528	                xor rdx, qword fs:[0x28]	       591	path.c	FUNCTION_32
0x4001fdd	            0x7405	                            je 0x4001fe4	       591	path.c	FUNCTION_32
0x4001fdf	      0xe800000000	                          call 0x4001fe4	       591	path.c	FUNCTION_32
0x4001fe4	              0xc9	                                   leave	       591	path.c	FUNCTION_32
0x4001fe5	              0xc3	                                     ret	       591	path.c	FUNCTION_32
do_submodule_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,2:WHILE,0:CALL,9:FOR,0	71
0x4001d9a	              0x55	                                push rbp	       554	path.c	FUNCTION_31
0x4001d9b	          0x4889e5	                            mov rbp, rsp	       554	path.c	FUNCTION_31
0x4001d9e	        0x4883ec70	                           sub rsp, 0x70	       554	path.c	FUNCTION_31
0x4001da2	        0x48897da8	             mov qword [rbp - 0x58], rdi	       554	path.c	FUNCTION_31
0x4001da6	        0x488975a0	             mov qword [rbp - 0x60], rsi	       554	path.c	FUNCTION_31
0x4001daa	        0x48895598	             mov qword [rbp - 0x68], rdx	       554	path.c	FUNCTION_31
0x4001dae	        0x48894d90	             mov qword [rbp - 0x70], rcx	       554	path.c	FUNCTION_31
0x4001db2	    0x64488b042528	                mov rax, qword fs:[0x28]	       554	path.c	FUNCTION_31
0x4001dbb	        0x488945f8	                mov qword [rbp - 8], rax	       554	path.c	FUNCTION_31
0x4001dbf	            0x31c0	                            xor eax, eax	       554	path.c	FUNCTION_31
0x4001dc1	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       555	path.c	FUNCTION_31
0x4001dc9	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       555	path.c	FUNCTION_31
0x4001dd1	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       555	path.c	FUNCTION_31
0x4001dd9	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       556	path.c	FUNCTION_31
0x4001de1	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       556	path.c	FUNCTION_31
0x4001de9	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       556	path.c	FUNCTION_31
0x4001df1	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       559	path.c	FUNCTION_31	CALL_1
0x4001df5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       559	path.c	FUNCTION_31	CALL_1
0x4001df9	          0x4889d6	                            mov rsi, rdx	       559	path.c	FUNCTION_31	CALL_1
0x4001dfc	          0x4889c7	                            mov rdi, rax	       559	path.c	FUNCTION_31	CALL_1
0x4001dff	      0xe800000000	                          call 0x4001e04	       559	path.c	FUNCTION_31	CALL_1
0x4001e04	          0x8945bc	             mov dword [rbp - 0x44], eax	       559	path.c	FUNCTION_31	CALL_1
0x4001e07	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       560	path.c	FUNCTION_31	IF_1
0x4001e0b	            0x7578	                           jne 0x4001e85	       560	path.c	FUNCTION_31	IF_1
0x4001e0d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       563	path.c	FUNCTION_31	CALL_2
0x4001e11	      0xbe2f000000	                           mov esi, 0x2f	       563	path.c	FUNCTION_31	CALL_2
0x4001e16	          0x4889c7	                            mov rdi, rax	       563	path.c	FUNCTION_31	CALL_2
0x4001e19	      0xe860e4ffff	                call sym.strbuf_complete	       563	path.c	FUNCTION_31	CALL_2
0x4001e1e	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       564	path.c	FUNCTION_31	CALL_3
0x4001e22	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       564	path.c	FUNCTION_31	CALL_3
0x4001e26	          0x4889d6	                            mov rsi, rdx	       564	path.c	FUNCTION_31	CALL_3
0x4001e29	          0x4889c7	                            mov rdi, rax	       564	path.c	FUNCTION_31	CALL_3
0x4001e2c	      0xe800000000	                          call 0x4001e31	       564	path.c	FUNCTION_31	CALL_3
0x4001e31	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       565	path.c	FUNCTION_31	CALL_4
0x4001e35	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       565	path.c	FUNCTION_31	CALL_4
0x4001e39	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       565	path.c	FUNCTION_31	CALL_4
0x4001e3d	          0x4889ce	                            mov rsi, rcx	       565	path.c	FUNCTION_31	CALL_4
0x4001e40	          0x4889c7	                            mov rdi, rax	       565	path.c	FUNCTION_31	CALL_4
0x4001e43	      0xe800000000	                          call 0x4001e48	       565	path.c	FUNCTION_31	CALL_4
0x4001e48	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       567	path.c	FUNCTION_31	IF_2	CALL_5
0x4001e4c	        0x488d45c0	                   lea rax, [rbp - 0x40]	       567	path.c	FUNCTION_31	IF_2	CALL_5
0x4001e50	          0x4889d6	                            mov rsi, rdx	       567	path.c	FUNCTION_31	IF_2	CALL_5
0x4001e53	          0x4889c7	                            mov rdi, rax	       567	path.c	FUNCTION_31	IF_2	CALL_5
0x4001e56	      0xe800000000	                          call 0x4001e5b	       567	path.c	FUNCTION_31	IF_2	CALL_5
0x4001e5b	            0x85c0	                           test eax, eax	       567	path.c	FUNCTION_31	IF_2	CALL_5
0x4001e5d	            0x7418	                            je 0x4001e77	       567	path.c	FUNCTION_31	IF_2	CALL_5
0x4001e5f	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       568	path.c	FUNCTION_31	CALL_6
0x4001e63	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       568	path.c	FUNCTION_31	CALL_6
0x4001e67	            0x89c1	                            mov ecx, eax	       568	path.c	FUNCTION_31	CALL_6
0x4001e69	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       568	path.c	FUNCTION_31	CALL_6
0x4001e6d	            0x89ce	                            mov esi, ecx	       568	path.c	FUNCTION_31	CALL_6
0x4001e6f	          0x4889c7	                            mov rdi, rax	       568	path.c	FUNCTION_31	CALL_6
0x4001e72	      0xe887efffff	              call sym.update_common_dir	       568	path.c	FUNCTION_31	CALL_6
0x4001e77	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       570	path.c	FUNCTION_31	CALL_7
0x4001e7b	          0x4889c7	                            mov rdi, rax	       570	path.c	FUNCTION_31	CALL_7
0x4001e7e	      0xe8c5e5ffff	            call sym.strbuf_cleanup_path	       570	path.c	FUNCTION_31	CALL_7
0x4001e83	            0xeb01	                           jmp 0x4001e86	       570	path.c	FUNCTION_31	CALL_7
0x4001e85	              0x90	                                     nop	       561	path.c	FUNCTION_31	IF_1
0x4001e86	        0x488d45e0	                   lea rax, [rbp - 0x20]	       573	path.c	FUNCTION_31	CALL_8
0x4001e8a	          0x4889c7	                            mov rdi, rax	       573	path.c	FUNCTION_31	CALL_8
0x4001e8d	      0xe800000000	                          call 0x4001e92	       573	path.c	FUNCTION_31	CALL_8
0x4001e92	        0x488d45c0	                   lea rax, [rbp - 0x40]	       574	path.c	FUNCTION_31	CALL_9
0x4001e96	          0x4889c7	                            mov rdi, rax	       574	path.c	FUNCTION_31	CALL_9
0x4001e99	      0xe800000000	                          call 0x4001e9e	       574	path.c	FUNCTION_31	CALL_9
0x4001e9e	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       575	path.c	FUNCTION_31
0x4001ea1	        0x488b4df8	                mov rcx, qword [rbp - 8]	       576	path.c	FUNCTION_31
0x4001ea5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       576	path.c	FUNCTION_31
0x4001eae	            0x7405	                            je 0x4001eb5	       576	path.c	FUNCTION_31
0x4001eb0	      0xe800000000	                          call 0x4001eb5	       576	path.c	FUNCTION_31
0x4001eb5	              0xc9	                                   leave	       576	path.c	FUNCTION_31
0x4001eb6	              0xc3	                                     ret	       576	path.c	FUNCTION_31
git_common_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,4:FOR,0	44
0x4002162	              0x55	                                push rbp	       618	path.c	FUNCTION_35
0x4002163	          0x4889e5	                            mov rbp, rsp	       618	path.c	FUNCTION_35
0x4002166	    0x4881ecf00000	                           sub rsp, 0xf0	       618	path.c	FUNCTION_35
0x400216d	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       618	path.c	FUNCTION_35
0x4002174	    0x4889b558ffff	             mov qword [rbp - 0xa8], rsi	       618	path.c	FUNCTION_35
0x400217b	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       618	path.c	FUNCTION_35
0x4002182	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       618	path.c	FUNCTION_35
0x4002189	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       618	path.c	FUNCTION_35
0x4002190	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       618	path.c	FUNCTION_35
0x4002197	            0x84c0	                             test al, al	       618	path.c	FUNCTION_35
0x4002199	            0x7420	                            je 0x40021bb	       618	path.c	FUNCTION_35
0x400219b	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       618	path.c	FUNCTION_35
0x400219f	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       618	path.c	FUNCTION_35
0x40021a3	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       618	path.c	FUNCTION_35
0x40021a7	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       618	path.c	FUNCTION_35
0x40021ab	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       618	path.c	FUNCTION_35
0x40021af	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       618	path.c	FUNCTION_35
0x40021b3	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       618	path.c	FUNCTION_35
0x40021b7	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       618	path.c	FUNCTION_35
0x40021bb	    0x64488b042528	                mov rax, qword fs:[0x28]	       618	path.c	FUNCTION_35
0x40021c4	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       618	path.c	FUNCTION_35
0x40021cb	            0x31c0	                            xor eax, eax	       618	path.c	FUNCTION_35
0x40021cd	      0xe8e1e1ffff	                   call sym.get_pathname	       619	path.c	FUNCTION_35	CALL_1
0x40021d2	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       619	path.c	FUNCTION_35	CALL_1
0x40021d9	    0xc78530ffffff	               mov dword [rbp - 0xd0], 8	       621	path.c	FUNCTION_35	CALL_2
0x40021e3	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       621	path.c	FUNCTION_35	CALL_2
0x40021ed	        0x488d4510	                   lea rax, [rbp + 0x10]	       621	path.c	FUNCTION_35	CALL_2
0x40021f1	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       621	path.c	FUNCTION_35	CALL_2
0x40021f8	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       621	path.c	FUNCTION_35	CALL_2
0x40021ff	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       621	path.c	FUNCTION_35	CALL_2
0x4002206	    0x488b05000000	            mov rax, qword [0x0400220d] 	       622	path.c	FUNCTION_35	CALL_3
0x400220d	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       622	path.c	FUNCTION_35	CALL_3
0x4002214	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       622	path.c	FUNCTION_35	CALL_3
0x400221b	    0x488bb528ffff	             mov rsi, qword [rbp - 0xd8]	       622	path.c	FUNCTION_35	CALL_3
0x4002222	          0x4889c7	                            mov rdi, rax	       622	path.c	FUNCTION_35	CALL_3
0x4002225	      0xe89dfeffff	             call sym.do_git_common_path	       622	path.c	FUNCTION_35	CALL_3
0x400222a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       624	path.c	FUNCTION_35
0x4002231	        0x488b4010	            mov rax, qword [rax + 0x10] 	       624	path.c	FUNCTION_35
0x4002235	    0x488bbd48ffff	             mov rdi, qword [rbp - 0xb8]	       625	path.c	FUNCTION_35
0x400223c	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       625	path.c	FUNCTION_35
0x4002245	            0x7405	                            je 0x400224c	       625	path.c	FUNCTION_35
0x4002247	      0xe800000000	                          call 0x400224c	       625	path.c	FUNCTION_35
0x400224c	              0xc9	                                   leave	       625	path.c	FUNCTION_35
0x400224d	              0xc3	                                     ret	       625	path.c	FUNCTION_35
strbuf_git_common_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,3:FOR,0	41
0x400224e	              0x55	                                push rbp	       630	path.c	FUNCTION_36
0x400224f	          0x4889e5	                            mov rbp, rsp	       630	path.c	FUNCTION_36
0x4002252	    0x4881ecf00000	                           sub rsp, 0xf0	       630	path.c	FUNCTION_36
0x4002259	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       630	path.c	FUNCTION_36
0x4002260	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       630	path.c	FUNCTION_36
0x4002267	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	       630	path.c	FUNCTION_36
0x400226e	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       630	path.c	FUNCTION_36
0x4002275	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       630	path.c	FUNCTION_36
0x400227c	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       630	path.c	FUNCTION_36
0x4002283	            0x84c0	                             test al, al	       630	path.c	FUNCTION_36
0x4002285	            0x7420	                            je 0x40022a7	       630	path.c	FUNCTION_36
0x4002287	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       630	path.c	FUNCTION_36
0x400228b	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       630	path.c	FUNCTION_36
0x400228f	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       630	path.c	FUNCTION_36
0x4002293	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       630	path.c	FUNCTION_36
0x4002297	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       630	path.c	FUNCTION_36
0x400229b	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       630	path.c	FUNCTION_36
0x400229f	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       630	path.c	FUNCTION_36
0x40022a3	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       630	path.c	FUNCTION_36
0x40022a7	    0x64488b042528	                mov rax, qword fs:[0x28]	       630	path.c	FUNCTION_36
0x40022b0	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       630	path.c	FUNCTION_36
0x40022b7	            0x31c0	                            xor eax, eax	       630	path.c	FUNCTION_36
0x40022b9	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       632	path.c	FUNCTION_36	CALL_1
0x40022c3	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       632	path.c	FUNCTION_36	CALL_1
0x40022cd	        0x488d4510	                   lea rax, [rbp + 0x10]	       632	path.c	FUNCTION_36	CALL_1
0x40022d1	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       632	path.c	FUNCTION_36	CALL_1
0x40022d8	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       632	path.c	FUNCTION_36	CALL_1
0x40022df	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       632	path.c	FUNCTION_36	CALL_1
0x40022e6	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       633	path.c	FUNCTION_36	CALL_2
0x40022ed	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       633	path.c	FUNCTION_36	CALL_2
0x40022f4	    0x488bb528ffff	             mov rsi, qword [rbp - 0xd8]	       633	path.c	FUNCTION_36	CALL_2
0x40022fb	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       633	path.c	FUNCTION_36	CALL_2
0x4002302	          0x4889c7	                            mov rdi, rax	       633	path.c	FUNCTION_36	CALL_2
0x4002305	      0xe8bdfdffff	             call sym.do_git_common_path	       633	path.c	FUNCTION_36	CALL_2
0x400230a	              0x90	                                     nop	       635	path.c	FUNCTION_36
0x400230b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       635	path.c	FUNCTION_36
0x4002312	    0x644833042528	                xor rax, qword fs:[0x28]	       635	path.c	FUNCTION_36
0x400231b	            0x7405	                            je 0x4002322	       635	path.c	FUNCTION_36
0x400231d	      0xe800000000	                          call 0x4002322	       635	path.c	FUNCTION_36
0x4002322	              0xc9	                                   leave	       635	path.c	FUNCTION_36
0x4002323	              0xc3	                                     ret	       635	path.c	FUNCTION_36
mksnpath	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,3:FOR,0	54
0x400049f	              0x55	                                push rbp	        56	path.c	FUNCTION_5
0x40004a0	          0x4889e5	                            mov rbp, rsp	        56	path.c	FUNCTION_5
0x40004a3	    0x4881ec000100	                          sub rsp, 0x100	        56	path.c	FUNCTION_5
0x40004aa	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	        56	path.c	FUNCTION_5
0x40004b1	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	        56	path.c	FUNCTION_5
0x40004b8	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	        56	path.c	FUNCTION_5
0x40004bf	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	        56	path.c	FUNCTION_5
0x40004c6	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	        56	path.c	FUNCTION_5
0x40004cd	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	        56	path.c	FUNCTION_5
0x40004d4	            0x84c0	                             test al, al	        56	path.c	FUNCTION_5
0x40004d6	            0x7420	                            je 0x40004f8	        56	path.c	FUNCTION_5
0x40004d8	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	        56	path.c	FUNCTION_5
0x40004dc	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	        56	path.c	FUNCTION_5
0x40004e0	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	        56	path.c	FUNCTION_5
0x40004e4	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	        56	path.c	FUNCTION_5
0x40004e8	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	        56	path.c	FUNCTION_5
0x40004ec	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	        56	path.c	FUNCTION_5
0x40004f0	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	        56	path.c	FUNCTION_5
0x40004f4	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	        56	path.c	FUNCTION_5
0x40004f8	    0x64488b042528	                mov rax, qword fs:[0x28]	        56	path.c	FUNCTION_5
0x4000501	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        56	path.c	FUNCTION_5
0x4000508	            0x31c0	                            xor eax, eax	        56	path.c	FUNCTION_5
0x400050a	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	        60	path.c	FUNCTION_5	CALL_1
0x4000514	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	        60	path.c	FUNCTION_5	CALL_1
0x400051e	        0x488d4510	                   lea rax, [rbp + 0x10]	        60	path.c	FUNCTION_5	CALL_1
0x4000522	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        60	path.c	FUNCTION_5	CALL_1
0x4000529	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        60	path.c	FUNCTION_5	CALL_1
0x4000530	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        60	path.c	FUNCTION_5	CALL_1
0x4000537	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	        61	path.c	FUNCTION_5
0x400053e	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	        61	path.c	FUNCTION_5
0x4000545	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	        61	path.c	FUNCTION_5
0x400054c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        61	path.c	FUNCTION_5
0x4000553	          0x4889c7	                            mov rdi, rax	        61	path.c	FUNCTION_5
0x4000556	      0xe800000000	                          call 0x400055b	        61	path.c	FUNCTION_5
0x400055b	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	        61	path.c	FUNCTION_5
0x4000561	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	        63	path.c	FUNCTION_5	IF_1
0x4000567	    0x483b8510ffff	             cmp rax, qword [rbp - 0xf0]	        63	path.c	FUNCTION_5	IF_1
0x400056e	            0x7224	                            jb 0x4000594	        63	path.c	FUNCTION_5	IF_1
0x4000570	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	        64	path.c	FUNCTION_5	IF_1
0x4000577	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        64	path.c	FUNCTION_5	IF_1
0x400057e	      0xbe00000000	                              mov esi, 0	        64	path.c	FUNCTION_5	IF_1
0x4000583	          0x4889c7	                            mov rdi, rax	        64	path.c	FUNCTION_5	IF_1
0x4000586	      0xe800000000	                          call 0x400058b	        64	path.c	FUNCTION_5	IF_1
0x400058b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        65	path.c	FUNCTION_5	IF_1
0x4000592	            0xeb0f	                           jmp 0x40005a3	        65	path.c	FUNCTION_5	IF_1
0x4000594	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        67	path.c	FUNCTION_5	CALL_3
0x400059b	          0x4889c7	                            mov rdi, rax	        67	path.c	FUNCTION_5	CALL_3
0x400059e	      0xe861feffff	                   call sym.cleanup_path	        67	path.c	FUNCTION_5	CALL_3
0x40005a3	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	        68	path.c	FUNCTION_5
0x40005aa	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        68	path.c	FUNCTION_5
0x40005b3	            0x7405	                            je 0x40005ba	        68	path.c	FUNCTION_5
0x40005b5	      0xe800000000	                          call 0x40005ba	        68	path.c	FUNCTION_5
0x40005ba	              0xc9	                                   leave	        68	path.c	FUNCTION_5
0x40005bb	              0xc3	                                     ret	        68	path.c	FUNCTION_5
strbuf_addstr	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,2:FOR,0	17
0x4000249	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_62
0x400024a	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_62
0x400024d	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_62
0x4000251	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_62
0x4000255	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_62
0x4000259	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_62	CALL_2
0x400025d	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_62	CALL_2
0x4000260	      0xe800000000	                          call 0x4000265	       279	strbuf.h	FUNCTION_62	CALL_2
0x4000265	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_62	CALL_2
0x4000268	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_62	CALL_2
0x400026c	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_62	CALL_2
0x4000270	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_62	CALL_2
0x4000273	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_62	CALL_2
0x4000276	      0xe800000000	                          call 0x400027b	       279	strbuf.h	FUNCTION_62	CALL_2
0x400027b	              0x90	                                     nop	       280	strbuf.h	FUNCTION_62
0x400027c	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_62
0x400027d	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_62
git_has_dos_drive_prefix	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,0:FOR,0	6
0x4000040	              0x55	                                push rbp	       347	git-compat-util.h	FUNCTION_69
0x4000041	          0x4889e5	                            mov rbp, rsp	       347	git-compat-util.h	FUNCTION_69
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       347	git-compat-util.h	FUNCTION_69
0x4000048	      0xb800000000	                              mov eax, 0	       348	git-compat-util.h	FUNCTION_69
0x400004d	              0x5d	                                 pop rbp	       349	git-compat-util.h	FUNCTION_69
0x400004e	              0xc3	                                     ret	       349	git-compat-util.h	FUNCTION_69
do_git_common_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,4:FOR,0	45
0x40020c7	              0x55	                                push rbp	       609	path.c	FUNCTION_34
0x40020c8	          0x4889e5	                            mov rbp, rsp	       609	path.c	FUNCTION_34
0x40020cb	        0x4883ec20	                           sub rsp, 0x20	       609	path.c	FUNCTION_34
0x40020cf	        0x48897df8	                mov qword [rbp - 8], rdi	       609	path.c	FUNCTION_34
0x40020d3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       609	path.c	FUNCTION_34
0x40020d7	        0x488955e8	             mov qword [rbp - 0x18], rdx	       609	path.c	FUNCTION_34
0x40020db	        0x48894de0	             mov qword [rbp - 0x20], rcx	       609	path.c	FUNCTION_34
0x40020df	        0x488b45f8	                mov rax, qword [rbp - 8]	       610	path.c	FUNCTION_34	CALL_1
0x40020e3	        0x488b5008	                mov rdx, qword [rax + 8]	       610	path.c	FUNCTION_34	CALL_1
0x40020e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       610	path.c	FUNCTION_34	CALL_1
0x40020eb	          0x4889d6	                            mov rsi, rdx	       610	path.c	FUNCTION_34	CALL_1
0x40020ee	          0x4889c7	                            mov rdi, rax	       610	path.c	FUNCTION_34	CALL_1
0x40020f1	      0xe853e1ffff	                  call sym.strbuf_addstr	       610	path.c	FUNCTION_34	CALL_1
0x40020f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       611	path.c	FUNCTION_34	IF_1
0x40020fa	        0x488b4008	                mov rax, qword [rax + 8]	       611	path.c	FUNCTION_34	IF_1
0x40020fe	          0x4885c0	                           test rax, rax	       611	path.c	FUNCTION_34	IF_1
0x4002101	            0x7439	                            je 0x400213c	       611	path.c	FUNCTION_34	IF_1
0x4002103	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       611	path.c	FUNCTION_34	IF_1
0x4002107	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       611	path.c	FUNCTION_34	IF_1
0x400210b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       611	path.c	FUNCTION_34	IF_1
0x400210f	        0x488b4008	                mov rax, qword [rax + 8]	       611	path.c	FUNCTION_34	IF_1
0x4002113	        0x4883e801	                              sub rax, 1	       611	path.c	FUNCTION_34	IF_1
0x4002117	          0x4801d0	                            add rax, rdx	       611	path.c	FUNCTION_34	IF_1
0x400211a	           0xfb600	                   movzx eax, byte [rax]	       611	path.c	FUNCTION_34	IF_1
0x400211d	           0xfbec0	                           movsx eax, al	       611	path.c	FUNCTION_34	IF_1
0x4002120	            0x89c7	                            mov edi, eax	       611	path.c	FUNCTION_34	IF_1
0x4002122	      0xe828dfffff	                 call sym.git_is_dir_sep	       611	path.c	FUNCTION_34	IF_1
0x4002127	            0x85c0	                           test eax, eax	       611	path.c	FUNCTION_34	IF_1
0x4002129	            0x7511	                           jne 0x400213c	       611	path.c	FUNCTION_34	IF_1
0x400212b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       612	path.c	FUNCTION_34	CALL_2
0x400212f	      0xbe2f000000	                           mov esi, 0x2f	       612	path.c	FUNCTION_34	CALL_2
0x4002134	          0x4889c7	                            mov rdi, rax	       612	path.c	FUNCTION_34	CALL_2
0x4002137	      0xe89fe0ffff	                   call sym.strbuf_addch	       612	path.c	FUNCTION_34	CALL_2
0x400213c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       613	path.c	FUNCTION_34	CALL_3
0x4002140	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       613	path.c	FUNCTION_34	CALL_3
0x4002144	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       613	path.c	FUNCTION_34	CALL_3
0x4002148	          0x4889ce	                            mov rsi, rcx	       613	path.c	FUNCTION_34	CALL_3
0x400214b	          0x4889c7	                            mov rdi, rax	       613	path.c	FUNCTION_34	CALL_3
0x400214e	      0xe800000000	                          call 0x4002153	       613	path.c	FUNCTION_34	CALL_3
0x4002153	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       614	path.c	FUNCTION_34	CALL_4
0x4002157	          0x4889c7	                            mov rdi, rax	       614	path.c	FUNCTION_34	CALL_4
0x400215a	      0xe8e9e2ffff	            call sym.strbuf_cleanup_path	       614	path.c	FUNCTION_34	CALL_4
0x400215f	              0x90	                                     nop	       615	path.c	FUNCTION_34
0x4002160	              0xc9	                                   leave	       615	path.c	FUNCTION_34
0x4002161	              0xc3	                                     ret	       615	path.c	FUNCTION_34
expand_user_path	DO,0:functions,0:SWITCH,0:ELSE,2:IF,6:WHILE,0:CALL,9:FOR,0	94
0x4002562	              0x55	                                push rbp	       706	path.c	FUNCTION_39
0x4002563	          0x4889e5	                            mov rbp, rsp	       706	path.c	FUNCTION_39
0x4002566	        0x4883ec60	                           sub rsp, 0x60	       706	path.c	FUNCTION_39
0x400256a	        0x48897da8	             mov qword [rbp - 0x58], rdi	       706	path.c	FUNCTION_39
0x400256e	          0x8975a4	             mov dword [rbp - 0x5c], esi	       706	path.c	FUNCTION_39
0x4002571	    0x64488b042528	                mov rax, qword fs:[0x28]	       706	path.c	FUNCTION_39
0x400257a	        0x488945f8	                mov qword [rbp - 8], rax	       706	path.c	FUNCTION_39
0x400257e	            0x31c0	                            xor eax, eax	       706	path.c	FUNCTION_39
0x4002580	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       707	path.c	FUNCTION_39
0x4002588	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       707	path.c	FUNCTION_39
0x4002590	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       707	path.c	FUNCTION_39
0x4002598	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       708	path.c	FUNCTION_39
0x400259c	        0x488945b0	             mov qword [rbp - 0x50], rax	       708	path.c	FUNCTION_39
0x40025a0	      0x48837da800	               cmp qword [rbp - 0x58], 0	       710	path.c	FUNCTION_39	IF_1
0x40025a5	     0xf84f5000000	                            je 0x40026a0	       710	path.c	FUNCTION_39	IF_1
0x40025ab	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       712	path.c	FUNCTION_39	IF_2
0x40025af	           0xfb600	                   movzx eax, byte [rax]	       712	path.c	FUNCTION_39	IF_2
0x40025b2	            0x3c7e	                            cmp al, 0x7e	       712	path.c	FUNCTION_39	IF_2
0x40025b4	     0xf85c0000000	                           jne 0x400267a	       712	path.c	FUNCTION_39	IF_2
0x40025ba	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       713	path.c	FUNCTION_39	IF_2
0x40025be	      0xbe2f000000	                           mov esi, 0x2f	       713	path.c	FUNCTION_39	IF_2
0x40025c3	          0x4889c7	                            mov rdi, rax	       713	path.c	FUNCTION_39	IF_2
0x40025c6	      0xe800000000	                          call 0x40025cb	       713	path.c	FUNCTION_39	IF_2
0x40025cb	        0x488945b8	             mov qword [rbp - 0x48], rax	       713	path.c	FUNCTION_39	IF_2
0x40025cf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       714	path.c	FUNCTION_39	IF_2
0x40025d3	        0x4883c001	                              add rax, 1	       714	path.c	FUNCTION_39	IF_2
0x40025d7	        0x488945c0	             mov qword [rbp - 0x40], rax	       714	path.c	FUNCTION_39	IF_2
0x40025db	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       715	path.c	FUNCTION_39	IF_2
0x40025df	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       715	path.c	FUNCTION_39	IF_2
0x40025e3	          0x4829c2	                            sub rdx, rax	       715	path.c	FUNCTION_39	IF_2
0x40025e6	          0x4889d0	                            mov rax, rdx	       715	path.c	FUNCTION_39	IF_2
0x40025e9	        0x488945c8	             mov qword [rbp - 0x38], rax	       715	path.c	FUNCTION_39	IF_2
0x40025ed	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       716	path.c	FUNCTION_39	IF_2	IF_3
0x40025f2	            0x7549	                           jne 0x400263d	       716	path.c	FUNCTION_39	IF_2	IF_3
0x40025f4	      0xbf00000000	                              mov edi, 0	       717	path.c	FUNCTION_39	IF_2	IF_3	CALL_1
0x40025f9	      0xe800000000	                          call 0x40025fe	       717	path.c	FUNCTION_39	IF_2	IF_3	CALL_1
0x40025fe	        0x488945d0	             mov qword [rbp - 0x30], rax	       717	path.c	FUNCTION_39	IF_2	IF_3	CALL_1
0x4002602	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       718	path.c	FUNCTION_39	IF_2	IF_3	IF_4
0x4002607	     0xf8496000000	                            je 0x40026a3	       718	path.c	FUNCTION_39	IF_2	IF_3	IF_4
0x400260d	        0x837da400	               cmp dword [rbp - 0x5c], 0	       720	path.c	FUNCTION_39	IF_2	IF_3	IF_5
0x4002611	            0x7415	                            je 0x4002628	       720	path.c	FUNCTION_39	IF_2	IF_3	IF_5
0x4002613	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       721	path.c	FUNCTION_39	IF_2	IF_3	CALL_2
0x4002617	        0x488d45e0	                   lea rax, [rbp - 0x20]	       721	path.c	FUNCTION_39	IF_2	IF_3	CALL_2
0x400261b	          0x4889d6	                            mov rsi, rdx	       721	path.c	FUNCTION_39	IF_2	IF_3	CALL_2
0x400261e	          0x4889c7	                            mov rdi, rax	       721	path.c	FUNCTION_39	IF_2	IF_3	CALL_2
0x4002621	      0xe800000000	                          call 0x4002626	       721	path.c	FUNCTION_39	IF_2	IF_3	CALL_2
0x4002626	            0xeb4a	                           jmp 0x4002672	       721	path.c	FUNCTION_39	IF_2	IF_3	CALL_2
0x4002628	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       723	path.c	FUNCTION_39	IF_2	IF_3	CALL_3
0x400262c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       723	path.c	FUNCTION_39	IF_2	IF_3	CALL_3
0x4002630	          0x4889d6	                            mov rsi, rdx	       723	path.c	FUNCTION_39	IF_2	IF_3	CALL_3
0x4002633	          0x4889c7	                            mov rdi, rax	       723	path.c	FUNCTION_39	IF_2	IF_3	CALL_3
0x4002636	      0xe80edcffff	                  call sym.strbuf_addstr	       723	path.c	FUNCTION_39	IF_2	IF_3	CALL_3
0x400263b	            0xeb35	                           jmp 0x4002672	       723	path.c	FUNCTION_39	IF_2	IF_3	CALL_3
0x400263d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       728	path.c	FUNCTION_39	IF_2	ELSE_2	CALL_5
0x4002641	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       728	path.c	FUNCTION_39	IF_2	ELSE_2	CALL_5
0x4002645	          0x4889d6	                            mov rsi, rdx	       728	path.c	FUNCTION_39	IF_2	ELSE_2	CALL_5
0x4002648	          0x4889c7	                            mov rdi, rax	       728	path.c	FUNCTION_39	IF_2	ELSE_2	CALL_5
0x400264b	      0xe8c9feffff	                      call sym.getpw_str	       728	path.c	FUNCTION_39	IF_2	ELSE_2	CALL_5
0x4002650	        0x488945d8	             mov qword [rbp - 0x28], rax	       728	path.c	FUNCTION_39	IF_2	ELSE_2	CALL_5
0x4002654	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       729	path.c	FUNCTION_39	IF_2	ELSE_2	IF_6
0x4002659	            0x744b	                            je 0x40026a6	       729	path.c	FUNCTION_39	IF_2	ELSE_2	IF_6
0x400265b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       731	path.c	FUNCTION_39	IF_2	ELSE_2	CALL_6
0x400265f	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       731	path.c	FUNCTION_39	IF_2	ELSE_2	CALL_6
0x4002663	        0x488d45e0	                   lea rax, [rbp - 0x20]	       731	path.c	FUNCTION_39	IF_2	ELSE_2	CALL_6
0x4002667	          0x4889d6	                            mov rsi, rdx	       731	path.c	FUNCTION_39	IF_2	ELSE_2	CALL_6
0x400266a	          0x4889c7	                            mov rdi, rax	       731	path.c	FUNCTION_39	IF_2	ELSE_2	CALL_6
0x400266d	      0xe8d7dbffff	                  call sym.strbuf_addstr	       731	path.c	FUNCTION_39	IF_2	ELSE_2	CALL_6
0x4002672	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       733	path.c	FUNCTION_39	IF_2
0x4002676	        0x488945b0	             mov qword [rbp - 0x50], rax	       733	path.c	FUNCTION_39	IF_2
0x400267a	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       735	path.c	FUNCTION_39	CALL_7
0x400267e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       735	path.c	FUNCTION_39	CALL_7
0x4002682	          0x4889d6	                            mov rsi, rdx	       735	path.c	FUNCTION_39	CALL_7
0x4002685	          0x4889c7	                            mov rdi, rax	       735	path.c	FUNCTION_39	CALL_7
0x4002688	      0xe8bcdbffff	                  call sym.strbuf_addstr	       735	path.c	FUNCTION_39	CALL_7
0x400268d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       736	path.c	FUNCTION_39	CALL_8
0x4002691	      0xbe00000000	                              mov esi, 0	       736	path.c	FUNCTION_39	CALL_8
0x4002696	          0x4889c7	                            mov rdi, rax	       736	path.c	FUNCTION_39	CALL_8
0x4002699	      0xe800000000	                          call 0x400269e	       736	path.c	FUNCTION_39	CALL_8
0x400269e	            0xeb18	                           jmp 0x40026b8	       736	path.c	FUNCTION_39	CALL_8
0x40026a0	              0x90	                                     nop	       711	path.c	FUNCTION_39	IF_1
0x40026a1	            0xeb04	                           jmp 0x40026a7	       711	path.c	FUNCTION_39	IF_1
0x40026a3	              0x90	                                     nop	       719	path.c	FUNCTION_39	IF_2	IF_3	IF_4
0x40026a4	            0xeb01	                           jmp 0x40026a7	       719	path.c	FUNCTION_39	IF_2	IF_3	IF_4
0x40026a6	              0x90	                                     nop	       730	path.c	FUNCTION_39	IF_2	ELSE_2	IF_6
0x40026a7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       738	path.c	FUNCTION_39	CALL_9
0x40026ab	          0x4889c7	                            mov rdi, rax	       738	path.c	FUNCTION_39	CALL_9
0x40026ae	      0xe800000000	                          call 0x40026b3	       738	path.c	FUNCTION_39	CALL_9
0x40026b3	      0xb800000000	                              mov eax, 0	       739	path.c	FUNCTION_39
0x40026b8	        0x488b4df8	                mov rcx, qword [rbp - 8]	       740	path.c	FUNCTION_39
0x40026bc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       740	path.c	FUNCTION_39
0x40026c5	            0x7405	                            je 0x40026cc	       740	path.c	FUNCTION_39
0x40026c7	      0xe800000000	                          call 0x40026cc	       740	path.c	FUNCTION_39
0x40026cc	              0xc9	                                   leave	       740	path.c	FUNCTION_39
0x40026cd	              0xc3	                                     ret	       740	path.c	FUNCTION_39
strbuf_repo_worktree_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,3:FOR,0	46
0x4001cb2	              0x55	                                push rbp	       540	path.c	FUNCTION_30
0x4001cb3	          0x4889e5	                            mov rbp, rsp	       540	path.c	FUNCTION_30
0x4001cb6	    0x4881ecf00000	                           sub rsp, 0xf0	       540	path.c	FUNCTION_30
0x4001cbd	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       540	path.c	FUNCTION_30
0x4001cc4	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       540	path.c	FUNCTION_30
0x4001ccb	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	       540	path.c	FUNCTION_30
0x4001cd2	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       540	path.c	FUNCTION_30
0x4001cd9	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       540	path.c	FUNCTION_30
0x4001ce0	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       540	path.c	FUNCTION_30
0x4001ce7	            0x84c0	                             test al, al	       540	path.c	FUNCTION_30
0x4001ce9	            0x7420	                            je 0x4001d0b	       540	path.c	FUNCTION_30
0x4001ceb	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       540	path.c	FUNCTION_30
0x4001cef	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       540	path.c	FUNCTION_30
0x4001cf3	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       540	path.c	FUNCTION_30
0x4001cf7	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       540	path.c	FUNCTION_30
0x4001cfb	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       540	path.c	FUNCTION_30
0x4001cff	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       540	path.c	FUNCTION_30
0x4001d03	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       540	path.c	FUNCTION_30
0x4001d07	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       540	path.c	FUNCTION_30
0x4001d0b	    0x64488b042528	                mov rax, qword fs:[0x28]	       540	path.c	FUNCTION_30
0x4001d14	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       540	path.c	FUNCTION_30
0x4001d1b	            0x31c0	                            xor eax, eax	       540	path.c	FUNCTION_30
0x4001d1d	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       543	path.c	FUNCTION_30	IF_1
0x4001d24	        0x488b4030	            mov rax, qword [rax + 0x30] 	       543	path.c	FUNCTION_30	IF_1
0x4001d28	          0x4885c0	                           test rax, rax	       543	path.c	FUNCTION_30	IF_1
0x4001d2b	            0x7453	                            je 0x4001d80	       543	path.c	FUNCTION_30	IF_1
0x4001d2d	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       546	path.c	FUNCTION_30	CALL_1
0x4001d37	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       546	path.c	FUNCTION_30	CALL_1
0x4001d41	        0x488d4510	                   lea rax, [rbp + 0x10]	       546	path.c	FUNCTION_30	CALL_1
0x4001d45	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       546	path.c	FUNCTION_30	CALL_1
0x4001d4c	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       546	path.c	FUNCTION_30	CALL_1
0x4001d53	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       546	path.c	FUNCTION_30	CALL_1
0x4001d5a	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       547	path.c	FUNCTION_30	CALL_2
0x4001d61	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       547	path.c	FUNCTION_30	CALL_2
0x4001d68	    0x488bb528ffff	             mov rsi, qword [rbp - 0xd8]	       547	path.c	FUNCTION_30	CALL_2
0x4001d6f	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       547	path.c	FUNCTION_30	CALL_2
0x4001d76	          0x4889c7	                            mov rdi, rax	       547	path.c	FUNCTION_30	CALL_2
0x4001d79	      0xe878fdffff	               call sym.do_worktree_path	       547	path.c	FUNCTION_30	CALL_2
0x4001d7e	            0xeb01	                           jmp 0x4001d81	       547	path.c	FUNCTION_30	CALL_2
0x4001d80	              0x90	                                     nop	       544	path.c	FUNCTION_30	IF_1
0x4001d81	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       549	path.c	FUNCTION_30
0x4001d88	    0x644833042528	                xor rax, qword fs:[0x28]	       549	path.c	FUNCTION_30
0x4001d91	            0x7405	                            je 0x4001d98	       549	path.c	FUNCTION_30
0x4001d93	      0xe800000000	                          call 0x4001d98	       549	path.c	FUNCTION_30
0x4001d98	              0xc9	                                   leave	       549	path.c	FUNCTION_30
0x4001d99	              0xc3	                                     ret	       549	path.c	FUNCTION_30
enter_repo	DO,0:functions,0:SWITCH,0:ELSE,1:IF,12:WHILE,1:CALL,19:FOR,1	191
0x40026ce	              0x55	                                push rbp	       762	path.c	FUNCTION_40
0x40026cf	          0x4889e5	                            mov rbp, rsp	       762	path.c	FUNCTION_40
0x40026d2	              0x53	                                push rbx	       762	path.c	FUNCTION_40
0x40026d3	    0x4881ece80000	                           sub rsp, 0xe8	       762	path.c	FUNCTION_40
0x40026da	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       762	path.c	FUNCTION_40
0x40026e1	    0x89b514ffffff	             mov dword [rbp - 0xec], esi	       762	path.c	FUNCTION_40
0x40026e7	    0x64488b042528	                mov rax, qword fs:[0x28]	       762	path.c	FUNCTION_40
0x40026f0	        0x488945e8	             mov qword [rbp - 0x18], rax	       762	path.c	FUNCTION_40
0x40026f4	            0x31c0	                            xor eax, eax	       762	path.c	FUNCTION_40
0x40026f6	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	       766	path.c	FUNCTION_40	IF_1
0x40026fe	            0x750a	                           jne 0x400270a	       766	path.c	FUNCTION_40	IF_1
0x4002700	      0xb800000000	                              mov eax, 0	       767	path.c	FUNCTION_40	IF_1
0x4002705	      0xe924030000	                           jmp 0x4002a2e	       767	path.c	FUNCTION_40	IF_1
0x400270a	    0x83bd14ffffff	               cmp dword [rbp - 0xec], 0	       769	path.c	FUNCTION_40	IF_2
0x4002711	     0xf859f020000	                           jne 0x40029b6	       769	path.c	FUNCTION_40	IF_2
0x4002717	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       774	path.c	FUNCTION_40	IF_2	CALL_1
0x400271e	          0x4889c7	                            mov rdi, rax	       774	path.c	FUNCTION_40	IF_2	CALL_1
0x4002721	      0xe800000000	                          call 0x4002726	       774	path.c	FUNCTION_40	IF_2	CALL_1
0x4002726	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	       774	path.c	FUNCTION_40	IF_2	CALL_1
0x400272c	            0xeb07	                           jmp 0x4002735	       776	path.c	FUNCTION_40	IF_2	WHILE_1
0x400272e	    0x83ad28ffffff	               sub dword [rbp - 0xd8], 1	       777	path.c	FUNCTION_40	IF_2	WHILE_1
0x4002735	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 1	       776	path.c	FUNCTION_40	IF_2	WHILE_1
0x400273c	            0x7e1d	                           jle 0x400275b	       776	path.c	FUNCTION_40	IF_2	WHILE_1
0x400273e	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	       776	path.c	FUNCTION_40	IF_2	WHILE_1
0x4002744	            0x4898	                                    cdqe	       776	path.c	FUNCTION_40	IF_2	WHILE_1
0x4002746	        0x488d50ff	                      lea rdx, [rax - 1]	       776	path.c	FUNCTION_40	IF_2	WHILE_1
0x400274a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       776	path.c	FUNCTION_40	IF_2	WHILE_1
0x4002751	          0x4801d0	                            add rax, rdx	       776	path.c	FUNCTION_40	IF_2	WHILE_1
0x4002754	           0xfb600	                   movzx eax, byte [rax]	       776	path.c	FUNCTION_40	IF_2	WHILE_1
0x4002757	            0x3c2f	                            cmp al, 0x2f	       776	path.c	FUNCTION_40	IF_2	WHILE_1
0x4002759	            0x74d3	                            je 0x400272e	       776	path.c	FUNCTION_40	IF_2	WHILE_1
0x400275b	    0x81bd28ffffff	          cmp dword [rbp - 0xd8], 0xfff 	       783	path.c	FUNCTION_40	IF_2	IF_3
0x4002765	            0x7e0a	                           jle 0x4002771	       783	path.c	FUNCTION_40	IF_2	IF_3
0x4002767	      0xb800000000	                              mov eax, 0	       784	path.c	FUNCTION_40	IF_2	IF_3
0x400276c	      0xe9bd020000	                           jmp 0x4002a2e	       784	path.c	FUNCTION_40	IF_2	IF_3
0x4002771	      0xbe00000000	                              mov esi, 0	       786	path.c	FUNCTION_40	IF_2
0x4002776	      0xbf00000000	                              mov edi, 0	       786	path.c	FUNCTION_40	IF_2
0x400277b	      0xe8c1d9ffff	                  call sym.strbuf_setlen	       786	path.c	FUNCTION_40	IF_2
0x4002780	      0xbe00000000	                              mov esi, 0	       787	path.c	FUNCTION_40	IF_2
0x4002785	      0xbf00000000	                              mov edi, 0	       787	path.c	FUNCTION_40	IF_2
0x400278a	      0xe8b2d9ffff	                  call sym.strbuf_setlen	       787	path.c	FUNCTION_40	IF_2
0x400278f	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	       788	path.c	FUNCTION_40	IF_2	CALL_2
0x4002795	          0x4863d0	                         movsxd rdx, eax	       788	path.c	FUNCTION_40	IF_2	CALL_2
0x4002798	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       788	path.c	FUNCTION_40	IF_2	CALL_2
0x400279f	          0x4889c6	                            mov rsi, rax	       788	path.c	FUNCTION_40	IF_2	CALL_2
0x40027a2	      0xbf00000000	                              mov edi, 0	       788	path.c	FUNCTION_40	IF_2	CALL_2
0x40027a7	      0xe800000000	                          call 0x40027ac	       788	path.c	FUNCTION_40	IF_2	CALL_2
0x40027ac	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	       789	path.c	FUNCTION_40	IF_2	CALL_3
0x40027b2	          0x4863d0	                         movsxd rdx, eax	       789	path.c	FUNCTION_40	IF_2	CALL_3
0x40027b5	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       789	path.c	FUNCTION_40	IF_2	CALL_3
0x40027bc	          0x4889c6	                            mov rsi, rax	       789	path.c	FUNCTION_40	IF_2	CALL_3
0x40027bf	      0xbf00000000	                              mov edi, 0	       789	path.c	FUNCTION_40	IF_2	CALL_3
0x40027c4	      0xe800000000	                          call 0x40027c9	       789	path.c	FUNCTION_40	IF_2	CALL_3
0x40027c9	    0x488b05000000	            mov rax, qword [0x040027d0] 	       791	path.c	FUNCTION_40	IF_2	IF_4
0x40027d0	           0xfb600	                   movzx eax, byte [rax]	       791	path.c	FUNCTION_40	IF_2	IF_4
0x40027d3	            0x3c7e	                            cmp al, 0x7e	       791	path.c	FUNCTION_40	IF_2	IF_4
0x40027d5	            0x756a	                           jne 0x4002841	       791	path.c	FUNCTION_40	IF_2	IF_4
0x40027d7	    0x488b05000000	            mov rax, qword [0x040027de] 	       792	path.c	FUNCTION_40	IF_2	IF_4	CALL_4
0x40027de	      0xbe00000000	                              mov esi, 0	       792	path.c	FUNCTION_40	IF_2	IF_4	CALL_4
0x40027e3	          0x4889c7	                            mov rdi, rax	       792	path.c	FUNCTION_40	IF_2	IF_4	CALL_4
0x40027e6	      0xe800000000	                          call 0x40027eb	       792	path.c	FUNCTION_40	IF_2	IF_4	CALL_4
0x40027eb	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	       792	path.c	FUNCTION_40	IF_2	IF_4	CALL_4
0x40027f2	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	       793	path.c	FUNCTION_40	IF_2	IF_4	IF_5
0x40027fa	            0x750a	                           jne 0x4002806	       793	path.c	FUNCTION_40	IF_2	IF_4	IF_5
0x40027fc	      0xb800000000	                              mov eax, 0	       794	path.c	FUNCTION_40	IF_2	IF_4	IF_5
0x4002801	      0xe928020000	                           jmp 0x4002a2e	       794	path.c	FUNCTION_40	IF_2	IF_4	IF_5
0x4002806	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       795	path.c	FUNCTION_40	IF_2	IF_4	CALL_6
0x400280d	          0x4889c7	                            mov rdi, rax	       795	path.c	FUNCTION_40	IF_2	IF_4	CALL_6
0x4002810	      0xe800000000	                          call 0x4002815	       795	path.c	FUNCTION_40	IF_2	IF_4	CALL_6
0x4002815	          0x4889c3	                            mov rbx, rax	       795	path.c	FUNCTION_40	IF_2	IF_4	CALL_6
0x4002818	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       795	path.c	FUNCTION_40	IF_2	IF_4	CALL_6
0x400281f	          0x4889c7	                            mov rdi, rax	       795	path.c	FUNCTION_40	IF_2	IF_4	CALL_6
0x4002822	      0xe800000000	                          call 0x4002827	       795	path.c	FUNCTION_40	IF_2	IF_4	CALL_6
0x4002827	          0x4889c2	                            mov rdx, rax	       795	path.c	FUNCTION_40	IF_2	IF_4	CALL_6
0x400282a	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       795	path.c	FUNCTION_40	IF_2	IF_4	CALL_6
0x4002831	          0x4889d9	                            mov rcx, rbx	       795	path.c	FUNCTION_40	IF_2	IF_4	CALL_6
0x4002834	          0x4889c6	                            mov rsi, rax	       795	path.c	FUNCTION_40	IF_2	IF_4	CALL_6
0x4002837	      0xbf00000000	                              mov edi, 0	       795	path.c	FUNCTION_40	IF_2	IF_4	CALL_6
0x400283c	      0xe800000000	                          call 0x4002841	       795	path.c	FUNCTION_40	IF_2	IF_4	CALL_6
0x4002841	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	       798	path.c	FUNCTION_40	IF_2	FOR_1
0x400284b	      0xe9b9000000	                           jmp 0x4002909	       798	path.c	FUNCTION_40	IF_2	FOR_1
0x4002850	    0x488b05000000	            mov rax, qword [0x04002857] 	       800	path.c	FUNCTION_40	IF_2	FOR_1
0x4002857	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       800	path.c	FUNCTION_40	IF_2	FOR_1
0x400285e	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       801	path.c	FUNCTION_40	IF_2	FOR_1	CALL_8
0x4002864	            0x4898	                                    cdqe	       801	path.c	FUNCTION_40	IF_2	FOR_1	CALL_8
0x4002866	    0x488b04c50000	                  mov rax, qword [rax*8]	       801	path.c	FUNCTION_40	IF_2	FOR_1	CALL_8
0x400286e	          0x4889c6	                            mov rsi, rax	       801	path.c	FUNCTION_40	IF_2	FOR_1	CALL_8
0x4002871	      0xbf00000000	                              mov edi, 0	       801	path.c	FUNCTION_40	IF_2	FOR_1	CALL_8
0x4002876	      0xe8ced9ffff	                  call sym.strbuf_addstr	       801	path.c	FUNCTION_40	IF_2	FOR_1	CALL_8
0x400287b	    0x488b05000000	            mov rax, qword [0x04002882] 	       802	path.c	FUNCTION_40	IF_2	FOR_1	IF_6
0x4002882	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       802	path.c	FUNCTION_40	IF_2	FOR_1	IF_6
0x4002889	          0x4889d6	                            mov rsi, rdx	       802	path.c	FUNCTION_40	IF_2	FOR_1	IF_6
0x400288c	          0x4889c7	                            mov rdi, rax	       802	path.c	FUNCTION_40	IF_2	FOR_1	IF_6
0x400288f	      0xe800000000	                          call 0x4002894	       802	path.c	FUNCTION_40	IF_2	FOR_1	IF_6
0x4002894	            0x85c0	                           test eax, eax	       802	path.c	FUNCTION_40	IF_2	FOR_1	IF_6
0x4002896	            0x7556	                           jne 0x40028ee	       802	path.c	FUNCTION_40	IF_2	FOR_1	IF_6
0x4002898	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	       803	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_9
0x400289e	      0x2500f00000	                         and eax, 0xf000	       803	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_9
0x40028a3	      0x3d00800000	                         cmp eax, 0x8000	       802	path.c	FUNCTION_40	IF_2	FOR_1	IF_6
0x40028a8	            0x7425	                            je 0x40028cf	       802	path.c	FUNCTION_40	IF_2	FOR_1	IF_6
0x40028aa	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	       804	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_11
0x40028b0	      0x2500f00000	                         and eax, 0xf000	       804	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_11
0x40028b5	      0x3d00400000	                         cmp eax, 0x4000	       803	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_9
0x40028ba	            0x7532	                           jne 0x40028ee	       803	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_9
0x40028bc	    0x488b05000000	            mov rax, qword [0x040028c3] 	       804	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_11
0x40028c3	          0x4889c7	                            mov rdi, rax	       804	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_11
0x40028c6	      0xe800000000	                          call 0x40028cb	       804	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_11
0x40028cb	            0x85c0	                           test eax, eax	       804	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_11
0x40028cd	            0x741f	                            je 0x40028ee	       804	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_11
0x40028cf	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       805	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_12
0x40028d5	            0x4898	                                    cdqe	       805	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_12
0x40028d7	    0x488b04c50000	                  mov rax, qword [rax*8]	       805	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_12
0x40028df	          0x4889c6	                            mov rsi, rax	       805	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_12
0x40028e2	      0xbf00000000	                              mov edi, 0	       805	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_12
0x40028e7	      0xe85dd9ffff	                  call sym.strbuf_addstr	       805	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_12
0x40028ec	            0xeb34	                           jmp 0x4002922	       805	path.c	FUNCTION_40	IF_2	FOR_1	IF_6	CALL_12
0x40028ee	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       808	path.c	FUNCTION_40	IF_2	FOR_1	CALL_13
0x40028f5	          0x4889c6	                            mov rsi, rax	       808	path.c	FUNCTION_40	IF_2	FOR_1	CALL_13
0x40028f8	      0xbf00000000	                              mov edi, 0	       808	path.c	FUNCTION_40	IF_2	FOR_1	CALL_13
0x40028fd	      0xe83fd8ffff	                  call sym.strbuf_setlen	       808	path.c	FUNCTION_40	IF_2	FOR_1	CALL_13
0x4002902	    0x83852cffffff	               add dword [rbp - 0xd4], 1	       798	path.c	FUNCTION_40	IF_2	FOR_1
0x4002909	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       798	path.c	FUNCTION_40	IF_2	FOR_1
0x400290f	            0x4898	                                    cdqe	       798	path.c	FUNCTION_40	IF_2	FOR_1
0x4002911	    0x488b04c50000	                  mov rax, qword [rax*8]	       798	path.c	FUNCTION_40	IF_2	FOR_1
0x4002919	          0x4885c0	                           test rax, rax	       798	path.c	FUNCTION_40	IF_2	FOR_1
0x400291c	     0xf852effffff	                           jne 0x4002850	       798	path.c	FUNCTION_40	IF_2	FOR_1
0x4002922	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       810	path.c	FUNCTION_40	IF_2	IF_7
0x4002928	            0x4898	                                    cdqe	       810	path.c	FUNCTION_40	IF_2	IF_7
0x400292a	    0x488b04c50000	                  mov rax, qword [rax*8]	       810	path.c	FUNCTION_40	IF_2	IF_7
0x4002932	          0x4885c0	                           test rax, rax	       810	path.c	FUNCTION_40	IF_2	IF_7
0x4002935	            0x750a	                           jne 0x4002941	       810	path.c	FUNCTION_40	IF_2	IF_7
0x4002937	      0xb800000000	                              mov eax, 0	       811	path.c	FUNCTION_40	IF_2	IF_7
0x400293c	      0xe9ed000000	                           jmp 0x4002a2e	       811	path.c	FUNCTION_40	IF_2	IF_7
0x4002941	    0x488b05000000	            mov rax, qword [0x04002948] 	       812	path.c	FUNCTION_40	IF_2
0x4002948	      0xbe00000000	                              mov esi, 0	       812	path.c	FUNCTION_40	IF_2
0x400294d	          0x4889c7	                            mov rdi, rax	       812	path.c	FUNCTION_40	IF_2
0x4002950	      0xe800000000	                          call 0x4002955	       812	path.c	FUNCTION_40	IF_2
0x4002955	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       812	path.c	FUNCTION_40	IF_2
0x400295c	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       813	path.c	FUNCTION_40	IF_2	IF_8
0x4002964	            0x7423	                            je 0x4002989	       813	path.c	FUNCTION_40	IF_2	IF_8
0x4002966	      0xbe00000000	                              mov esi, 0	       814	path.c	FUNCTION_40	IF_2	IF_8
0x400296b	      0xbf00000000	                              mov edi, 0	       814	path.c	FUNCTION_40	IF_2	IF_8
0x4002970	      0xe8ccd7ffff	                  call sym.strbuf_setlen	       814	path.c	FUNCTION_40	IF_2	IF_8
0x4002975	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       815	path.c	FUNCTION_40	IF_2	IF_8	CALL_14
0x400297c	          0x4889c6	                            mov rsi, rax	       815	path.c	FUNCTION_40	IF_2	IF_8	CALL_14
0x400297f	      0xbf00000000	                              mov edi, 0	       815	path.c	FUNCTION_40	IF_2	IF_8	CALL_14
0x4002984	      0xe8c0d8ffff	                  call sym.strbuf_addstr	       815	path.c	FUNCTION_40	IF_2	IF_8	CALL_14
0x4002989	    0x488b05000000	            mov rax, qword [0x04002990] 	       817	path.c	FUNCTION_40	IF_2	IF_9	CALL_15
0x4002990	          0x4889c7	                            mov rdi, rax	       817	path.c	FUNCTION_40	IF_2	IF_9	CALL_15
0x4002993	      0xe800000000	                          call 0x4002998	       817	path.c	FUNCTION_40	IF_2	IF_9	CALL_15
0x4002998	            0x85c0	                           test eax, eax	       817	path.c	FUNCTION_40	IF_2	IF_9	CALL_15
0x400299a	            0x740a	                            je 0x40029a6	       817	path.c	FUNCTION_40	IF_2	IF_9	CALL_15
0x400299c	      0xb800000000	                              mov eax, 0	       818	path.c	FUNCTION_40	IF_2	IF_9
0x40029a1	      0xe988000000	                           jmp 0x4002a2e	       818	path.c	FUNCTION_40	IF_2	IF_9
0x40029a6	    0x488b05000000	            mov rax, qword [0x040029ad] 	       819	path.c	FUNCTION_40	IF_2
0x40029ad	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	       819	path.c	FUNCTION_40	IF_2
0x40029b4	            0xeb4d	                           jmp 0x4002a03	       819	path.c	FUNCTION_40	IF_2
0x40029b6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       822	path.c	FUNCTION_40	ELSE_1
0x40029bd	      0xbe00000000	                              mov esi, 0	       822	path.c	FUNCTION_40	ELSE_1
0x40029c2	          0x4889c7	                            mov rdi, rax	       822	path.c	FUNCTION_40	ELSE_1
0x40029c5	      0xe800000000	                          call 0x40029ca	       822	path.c	FUNCTION_40	ELSE_1
0x40029ca	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       822	path.c	FUNCTION_40	ELSE_1
0x40029d1	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       823	path.c	FUNCTION_40	ELSE_1	IF_10
0x40029d9	            0x740e	                            je 0x40029e9	       823	path.c	FUNCTION_40	ELSE_1	IF_10
0x40029db	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       824	path.c	FUNCTION_40	ELSE_1	IF_10
0x40029e2	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	       824	path.c	FUNCTION_40	ELSE_1	IF_10
0x40029e9	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       825	path.c	FUNCTION_40	ELSE_1	IF_11	CALL_16
0x40029f0	          0x4889c7	                            mov rdi, rax	       825	path.c	FUNCTION_40	ELSE_1	IF_11	CALL_16
0x40029f3	      0xe800000000	                          call 0x40029f8	       825	path.c	FUNCTION_40	ELSE_1	IF_11	CALL_16
0x40029f8	            0x85c0	                           test eax, eax	       825	path.c	FUNCTION_40	ELSE_1	IF_11	CALL_16
0x40029fa	            0x7407	                            je 0x4002a03	       825	path.c	FUNCTION_40	ELSE_1	IF_11	CALL_16
0x40029fc	      0xb800000000	                              mov eax, 0	       826	path.c	FUNCTION_40	ELSE_1	IF_11
0x4002a01	            0xeb2b	                           jmp 0x4002a2e	       826	path.c	FUNCTION_40	ELSE_1	IF_11
0x4002a03	      0xbf00000000	                              mov edi, 0	       829	path.c	FUNCTION_40	IF_12	CALL_17
0x4002a08	      0xe800000000	                          call 0x4002a0d	       829	path.c	FUNCTION_40	IF_12	CALL_17
0x4002a0d	            0x85c0	                           test eax, eax	       829	path.c	FUNCTION_40	IF_12	CALL_17
0x4002a0f	            0x7418	                            je 0x4002a29	       829	path.c	FUNCTION_40	IF_12	CALL_17
0x4002a11	      0xbf00000000	                              mov edi, 0	       830	path.c	FUNCTION_40	IF_12	CALL_18
0x4002a16	      0xe800000000	                          call 0x4002a1b	       830	path.c	FUNCTION_40	IF_12	CALL_18
0x4002a1b	      0xe800000000	                          call 0x4002a20	       831	path.c	FUNCTION_40	IF_12	CALL_19
0x4002a20	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       832	path.c	FUNCTION_40	IF_12
0x4002a27	            0xeb05	                           jmp 0x4002a2e	       832	path.c	FUNCTION_40	IF_12
0x4002a29	      0xb800000000	                              mov eax, 0	       835	path.c	FUNCTION_40
0x4002a2e	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       836	path.c	FUNCTION_40
0x4002a32	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       836	path.c	FUNCTION_40
0x4002a3b	            0x7405	                            je 0x4002a42	       836	path.c	FUNCTION_40
0x4002a3d	      0xe800000000	                          call 0x4002a42	       836	path.c	FUNCTION_40
0x4002a42	    0x4881c4e80000	                           add rsp, 0xe8	       836	path.c	FUNCTION_40
0x4002a49	              0x5b	                                 pop rbx	       836	path.c	FUNCTION_40
0x4002a4a	              0x5d	                                 pop rbp	       836	path.c	FUNCTION_40
0x4002a4b	              0xc3	                                     ret	       836	path.c	FUNCTION_40
normalize_path_copy	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,1:FOR,0	13
0x400344b	              0x55	                                push rbp	      1167	path.c	FUNCTION_48
0x400344c	          0x4889e5	                            mov rbp, rsp	      1167	path.c	FUNCTION_48
0x400344f	        0x4883ec10	                           sub rsp, 0x10	      1167	path.c	FUNCTION_48
0x4003453	        0x48897df8	                mov qword [rbp - 8], rdi	      1167	path.c	FUNCTION_48
0x4003457	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1167	path.c	FUNCTION_48
0x400345b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1168	path.c	FUNCTION_48	CALL_1
0x400345f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1168	path.c	FUNCTION_48	CALL_1
0x4003463	      0xba00000000	                              mov edx, 0	      1168	path.c	FUNCTION_48	CALL_1
0x4003468	          0x4889ce	                            mov rsi, rcx	      1168	path.c	FUNCTION_48	CALL_1
0x400346b	          0x4889c7	                            mov rdi, rax	      1168	path.c	FUNCTION_48	CALL_1
0x400346e	      0xe800000000	                          call 0x4003473	      1168	path.c	FUNCTION_48	CALL_1
0x4003473	              0xc9	                                   leave	      1169	path.c	FUNCTION_48
0x4003474	              0xc3	                                     ret	      1169	path.c	FUNCTION_48
strbuf_setlen	DO,0:functions,0:SWITCH,0:ELSE,1:IF,2:WHILE,0:CALL,2:FOR,0	43
0x4000141	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_60
0x4000142	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_60
0x4000145	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_60
0x4000149	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_60
0x400014d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_60
0x4000151	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_60	IF_1
0x4000155	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_60	IF_1
0x4000158	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_60	IF_1
0x400015b	            0x740d	                            je 0x400016a	       162	strbuf.h	FUNCTION_60	IF_1
0x400015d	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_60	IF_1
0x4000161	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_60	IF_1
0x4000164	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_60	IF_1
0x4000168	            0xeb05	                           jmp 0x400016f	       162	strbuf.h	FUNCTION_60	IF_1
0x400016a	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_60	IF_1
0x400016f	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_60	IF_1
0x4000173	            0x730f	                           jae 0x4000184	       162	strbuf.h	FUNCTION_60	IF_1
0x4000175	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_60	CALL_1
0x400017a	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_60	CALL_1
0x400017f	      0xe800000000	                          call 0x4000184	       163	strbuf.h	FUNCTION_60	CALL_1
0x4000184	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_60
0x4000188	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_60
0x400018c	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_60
0x4000190	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_60	IF_2
0x4000194	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_60	IF_2
0x4000198	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_60	IF_2
0x400019e	            0x7414	                            je 0x40001b4	       165	strbuf.h	FUNCTION_60	IF_2
0x40001a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_60	IF_2
0x40001a4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_60	IF_2
0x40001a8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_60	IF_2
0x40001ac	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_60	IF_2
0x40001af	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_60	IF_2
0x40001b2	            0xeb24	                           jmp 0x40001d8	       169	strbuf.h	FUNCTION_60
0x40001b4	     0xfb605000000	           movzx eax, byte [0x040001bb] 	       168	strbuf.h	FUNCTION_60	CALL_2
0x40001bb	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_60	CALL_2
0x40001bd	            0x7419	                            je 0x40001d8	       168	strbuf.h	FUNCTION_60	CALL_2
0x40001bf	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_60	CALL_2
0x40001c4	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_60	CALL_2
0x40001c9	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_60	CALL_2
0x40001ce	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_60	CALL_2
0x40001d3	      0xe800000000	                          call 0x40001d8	       168	strbuf.h	FUNCTION_60	CALL_2
0x40001d8	              0x90	                                     nop	       169	strbuf.h	FUNCTION_60
0x40001d9	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_60
0x40001da	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_60
repo_worktree_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,4:FOR,0	53
0x4001b91	              0x55	                                push rbp	       523	path.c	FUNCTION_29
0x4001b92	          0x4889e5	                            mov rbp, rsp	       523	path.c	FUNCTION_29
0x4001b95	    0x4881ec000100	                          sub rsp, 0x100	       523	path.c	FUNCTION_29
0x4001b9c	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	       523	path.c	FUNCTION_29
0x4001ba3	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	       523	path.c	FUNCTION_29
0x4001baa	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       523	path.c	FUNCTION_29
0x4001bb1	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       523	path.c	FUNCTION_29
0x4001bb8	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       523	path.c	FUNCTION_29
0x4001bbf	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       523	path.c	FUNCTION_29
0x4001bc6	            0x84c0	                             test al, al	       523	path.c	FUNCTION_29
0x4001bc8	            0x7420	                            je 0x4001bea	       523	path.c	FUNCTION_29
0x4001bca	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       523	path.c	FUNCTION_29
0x4001bce	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       523	path.c	FUNCTION_29
0x4001bd2	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       523	path.c	FUNCTION_29
0x4001bd6	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       523	path.c	FUNCTION_29
0x4001bda	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       523	path.c	FUNCTION_29
0x4001bde	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       523	path.c	FUNCTION_29
0x4001be2	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       523	path.c	FUNCTION_29
0x4001be6	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       523	path.c	FUNCTION_29
0x4001bea	    0x64488b042528	                mov rax, qword fs:[0x28]	       523	path.c	FUNCTION_29
0x4001bf3	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       523	path.c	FUNCTION_29
0x4001bfa	            0x31c0	                            xor eax, eax	       523	path.c	FUNCTION_29
0x4001bfc	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       524	path.c	FUNCTION_29
0x4001c07	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	       524	path.c	FUNCTION_29
0x4001c12	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       524	path.c	FUNCTION_29
0x4001c1d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       527	path.c	FUNCTION_29	IF_1
0x4001c24	        0x488b4030	            mov rax, qword [rax + 0x30] 	       527	path.c	FUNCTION_29	IF_1
0x4001c28	          0x4885c0	                           test rax, rax	       527	path.c	FUNCTION_29	IF_1
0x4001c2b	            0x7507	                           jne 0x4001c34	       527	path.c	FUNCTION_29	IF_1
0x4001c2d	      0xb800000000	                              mov eax, 0	       528	path.c	FUNCTION_29	IF_1
0x4001c32	            0xeb65	                           jmp 0x4001c99	       528	path.c	FUNCTION_29	IF_1
0x4001c34	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       530	path.c	FUNCTION_29	CALL_1
0x4001c3e	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       530	path.c	FUNCTION_29	CALL_1
0x4001c48	        0x488d4510	                   lea rax, [rbp + 0x10]	       530	path.c	FUNCTION_29	CALL_1
0x4001c4c	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       530	path.c	FUNCTION_29	CALL_1
0x4001c53	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       530	path.c	FUNCTION_29	CALL_1
0x4001c5a	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       530	path.c	FUNCTION_29	CALL_1
0x4001c61	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       531	path.c	FUNCTION_29	CALL_2
0x4001c68	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	       531	path.c	FUNCTION_29	CALL_2
0x4001c6f	    0x488db510ffff	                   lea rsi, [rbp - 0xf0]	       531	path.c	FUNCTION_29	CALL_2
0x4001c76	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       531	path.c	FUNCTION_29	CALL_2
0x4001c7d	          0x4889c7	                            mov rdi, rax	       531	path.c	FUNCTION_29	CALL_2
0x4001c80	      0xe871feffff	               call sym.do_worktree_path	       531	path.c	FUNCTION_29	CALL_2
0x4001c85	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       534	path.c	FUNCTION_29	CALL_4
0x4001c8c	      0xbe00000000	                              mov esi, 0	       534	path.c	FUNCTION_29	CALL_4
0x4001c91	          0x4889c7	                            mov rdi, rax	       534	path.c	FUNCTION_29	CALL_4
0x4001c94	      0xe800000000	                          call 0x4001c99	       534	path.c	FUNCTION_29	CALL_4
0x4001c99	    0x488bbd48ffff	             mov rdi, qword [rbp - 0xb8]	       535	path.c	FUNCTION_29
0x4001ca0	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       535	path.c	FUNCTION_29
0x4001ca9	            0x7405	                            je 0x4001cb0	       535	path.c	FUNCTION_29
0x4001cab	      0xe800000000	                          call 0x4001cb0	       535	path.c	FUNCTION_29
0x4001cb0	              0xc9	                                   leave	       535	path.c	FUNCTION_29
0x4001cb1	              0xc3	                                     ret	       535	path.c	FUNCTION_29
_	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,0:FOR,0	15
0x40002d0	              0x55	                                push rbp	        51	gettext.h	FUNCTION_98
0x40002d1	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_98
0x40002d4	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_98
0x40002d8	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_98
0x40002dc	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_98	IF_1
0x40002e0	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_98	IF_1
0x40002e3	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_98	IF_1
0x40002e5	            0x7507	                           jne 0x40002ee	        52	gettext.h	FUNCTION_98	IF_1
0x40002e7	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_98	IF_1
0x40002ec	            0xeb0c	                           jmp 0x40002fa	        53	gettext.h	FUNCTION_98	IF_1
0x40002ee	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_98
0x40002f2	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_98
0x40002f5	      0xe800000000	                          call 0x40002fa	        54	gettext.h	FUNCTION_98
0x40002fa	              0xc9	                                   leave	        55	gettext.h	FUNCTION_98
0x40002fb	              0xc3	                                     ret	        55	gettext.h	FUNCTION_98
daemon_avoid_alias	DO,0:functions,0:SWITCH,0:ELSE,5:IF,9:WHILE,1:CALL,0:FOR,0	62
0x40036e2	              0x55	                                push rbp	      1247	path.c	FUNCTION_52
0x40036e3	          0x4889e5	                            mov rbp, rsp	      1247	path.c	FUNCTION_52
0x40036e6	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1247	path.c	FUNCTION_52
0x40036ea	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1259	path.c	FUNCTION_52	IF_1
0x40036ef	            0x7416	                            je 0x4003707	      1259	path.c	FUNCTION_52	IF_1
0x40036f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1259	path.c	FUNCTION_52	IF_1
0x40036f5	           0xfb600	                   movzx eax, byte [rax]	      1259	path.c	FUNCTION_52	IF_1
0x40036f8	            0x3c2f	                            cmp al, 0x2f	      1259	path.c	FUNCTION_52	IF_1
0x40036fa	            0x7415	                            je 0x4003711	      1259	path.c	FUNCTION_52	IF_1
0x40036fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1259	path.c	FUNCTION_52	IF_1
0x4003700	           0xfb600	                   movzx eax, byte [rax]	      1259	path.c	FUNCTION_52	IF_1
0x4003703	            0x3c7e	                            cmp al, 0x7e	      1259	path.c	FUNCTION_52	IF_1
0x4003705	            0x740a	                            je 0x4003711	      1259	path.c	FUNCTION_52	IF_1
0x4003707	      0xb8ffffffff	                     mov eax, 0xffffffff	      1260	path.c	FUNCTION_52	IF_1
0x400370c	      0xe9ac000000	                           jmp 0x40037bd	      1260	path.c	FUNCTION_52	IF_1
0x4003711	    0xc745f8010000	                  mov dword [rbp - 8], 1	      1261	path.c	FUNCTION_52
0x4003718	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1261	path.c	FUNCTION_52
0x400371f	      0x488345e801	               add qword [rbp - 0x18], 1	      1262	path.c	FUNCTION_52
0x4003724	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1265	path.c	FUNCTION_52	WHILE_1
0x4003728	        0x488d5001	                      lea rdx, [rax + 1]	      1265	path.c	FUNCTION_52	WHILE_1
0x400372c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1265	path.c	FUNCTION_52	WHILE_1
0x4003730	           0xfb600	                   movzx eax, byte [rax]	      1265	path.c	FUNCTION_52	WHILE_1
0x4003733	          0x8845f7	                  mov byte [rbp - 9], al	      1265	path.c	FUNCTION_52	WHILE_1
0x4003736	        0x837df800	                  cmp dword [rbp - 8], 0	      1266	path.c	FUNCTION_52	WHILE_1	IF_2
0x400373a	            0x7457	                            je 0x4003793	      1266	path.c	FUNCTION_52	WHILE_1	IF_2
0x400373c	        0x807df72e	                cmp byte [rbp - 9], 0x2e	      1267	path.c	FUNCTION_52	WHILE_1	IF_2	IF_3
0x4003740	            0x7506	                           jne 0x4003748	      1267	path.c	FUNCTION_52	WHILE_1	IF_2	IF_3
0x4003742	        0x8345fc01	                  add dword [rbp - 4], 1	      1268	path.c	FUNCTION_52	WHILE_1	IF_2	IF_3
0x4003746	            0xebdc	                           jmp 0x4003724	      1268	path.c	FUNCTION_52	WHILE_1	IF_2	IF_3
0x4003748	        0x807df72f	                cmp byte [rbp - 9], 0x2f	      1269	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_1	IF_4
0x400374c	            0x7516	                           jne 0x4003764	      1269	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_1	IF_4
0x400374e	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1270	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_1	IF_4	IF_5
0x4003752	            0x7f07	                            jg 0x400375b	      1270	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_1	IF_4	IF_5
0x4003754	      0xb8ffffffff	                     mov eax, 0xffffffff	      1272	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_1	IF_4	IF_5
0x4003759	            0xeb62	                           jmp 0x40037bd	      1272	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_1	IF_4	IF_5
0x400375b	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1273	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_1	IF_4
0x4003762	            0xebc0	                           jmp 0x4003724	      1273	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_1	IF_4
0x4003764	        0x807df700	                   cmp byte [rbp - 9], 0	      1275	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_2	IF_6
0x4003768	            0x751a	                           jne 0x4003784	      1275	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_2	IF_6
0x400376a	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1276	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_2	IF_6	IF_7
0x400376e	            0x7e0d	                           jle 0x400377d	      1276	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_2	IF_6	IF_7
0x4003770	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1276	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_2	IF_6	IF_7
0x4003774	            0x7f07	                            jg 0x400377d	      1276	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_2	IF_6	IF_7
0x4003776	      0xb8ffffffff	                     mov eax, 0xffffffff	      1278	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_2	IF_6	IF_7
0x400377b	            0xeb40	                           jmp 0x40037bd	      1278	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_2	IF_6	IF_7
0x400377d	      0xb800000000	                              mov eax, 0	      1279	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_2	IF_6
0x4003782	            0xeb39	                           jmp 0x40037bd	      1279	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_2	IF_6
0x4003784	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1282	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_3
0x400378b	          0x8b45fc	                mov eax, dword [rbp - 4]	      1282	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_3
0x400378e	          0x8945f8	                mov dword [rbp - 8], eax	      1282	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_3
0x4003791	            0xeb91	                           jmp 0x4003724	      1282	path.c	FUNCTION_52	WHILE_1	IF_2	ELSE_3
0x4003793	        0x807df700	                   cmp byte [rbp - 9], 0	      1284	path.c	FUNCTION_52	WHILE_1	ELSE_4	IF_8
0x4003797	            0x7507	                           jne 0x40037a0	      1284	path.c	FUNCTION_52	WHILE_1	ELSE_4	IF_8
0x4003799	      0xb800000000	                              mov eax, 0	      1285	path.c	FUNCTION_52	WHILE_1	ELSE_4	IF_8
0x400379e	            0xeb1d	                           jmp 0x40037bd	      1285	path.c	FUNCTION_52	WHILE_1	ELSE_4	IF_8
0x40037a0	        0x807df72f	                cmp byte [rbp - 9], 0x2f	      1286	path.c	FUNCTION_52	WHILE_1	ELSE_5	IF_9
0x40037a4	     0xf857affffff	                           jne 0x4003724	      1286	path.c	FUNCTION_52	WHILE_1	ELSE_5	IF_9
0x40037aa	    0xc745f8010000	                  mov dword [rbp - 8], 1	      1287	path.c	FUNCTION_52	WHILE_1	ELSE_5	IF_9
0x40037b1	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1288	path.c	FUNCTION_52	WHILE_1	ELSE_5	IF_9
0x40037b8	      0xe967ffffff	                           jmp 0x4003724	      1290	path.c	FUNCTION_52	WHILE_1
0x40037bd	              0x5d	                                 pop rbp	      1291	path.c	FUNCTION_52
0x40037be	              0xc3	                                     ret	      1291	path.c	FUNCTION_52
git_offset_1st_component	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,0:FOR,0	11
0x4000062	              0x55	                                push rbp	       371	git-compat-util.h	FUNCTION_72
0x4000063	          0x4889e5	                            mov rbp, rsp	       371	git-compat-util.h	FUNCTION_72
0x4000066	        0x4883ec08	                              sub rsp, 8	       371	git-compat-util.h	FUNCTION_72
0x400006a	        0x48897df8	                mov qword [rbp - 8], rdi	       371	git-compat-util.h	FUNCTION_72
0x400006e	        0x488b45f8	                mov rax, qword [rbp - 8]	       372	git-compat-util.h	FUNCTION_72
0x4000072	           0xfb600	                   movzx eax, byte [rax]	       372	git-compat-util.h	FUNCTION_72
0x4000075	           0xfbec0	                           movsx eax, al	       372	git-compat-util.h	FUNCTION_72
0x4000078	            0x89c7	                            mov edi, eax	       372	git-compat-util.h	FUNCTION_72
0x400007a	      0xe8d0ffffff	                 call sym.git_is_dir_sep	       372	git-compat-util.h	FUNCTION_72
0x400007f	              0xc9	                                   leave	       373	git-compat-util.h	FUNCTION_72
0x4000080	              0xc3	                                     ret	       373	git-compat-util.h	FUNCTION_72
strbuf_addch	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:CALL,2:FOR,0	33
0x40001db	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_61
0x40001dc	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_61
0x40001df	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_61
0x40001e3	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_61
0x40001e7	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_61
0x40001ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_61	IF_1	CALL_1
0x40001ee	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_61	IF_1	CALL_1
0x40001f1	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_61	IF_1	CALL_1
0x40001f6	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_61	IF_1	CALL_1
0x40001f9	            0x7511	                           jne 0x400020c	       227	strbuf.h	FUNCTION_61	IF_1	CALL_1
0x40001fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_61	CALL_2
0x40001ff	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_61	CALL_2
0x4000204	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_61	CALL_2
0x4000207	      0xe800000000	                          call 0x400020c	       228	strbuf.h	FUNCTION_61	CALL_2
0x400020c	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_61
0x4000210	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_61
0x4000214	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_61
0x4000218	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_61
0x400021c	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_61
0x4000220	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_61
0x4000224	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_61
0x4000228	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_61
0x400022b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_61
0x400022e	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_61
0x4000230	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_61
0x4000234	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_61
0x4000238	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_61
0x400023c	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_61
0x4000240	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_61
0x4000243	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_61
0x4000246	              0x90	                                     nop	       231	strbuf.h	FUNCTION_61
0x4000247	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_61
0x4000248	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_61
have_same_root	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,2:FOR,0	44
0x4002c09	              0x55	                                push rbp	       896	path.c	FUNCTION_44
0x4002c0a	          0x4889e5	                            mov rbp, rsp	       896	path.c	FUNCTION_44
0x4002c0d	              0x53	                                push rbx	       896	path.c	FUNCTION_44
0x4002c0e	        0x4883ec20	                           sub rsp, 0x20	       896	path.c	FUNCTION_44
0x4002c12	        0x48897de0	             mov qword [rbp - 0x20], rdi	       896	path.c	FUNCTION_44
0x4002c16	        0x488975d8	             mov qword [rbp - 0x28], rsi	       896	path.c	FUNCTION_44
0x4002c1a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       899	path.c	FUNCTION_44	CALL_1
0x4002c1e	          0x4889c7	                            mov rdi, rax	       899	path.c	FUNCTION_44	CALL_1
0x4002c21	      0xe8d6d6ffff	               call sym.is_absolute_path	       899	path.c	FUNCTION_44	CALL_1
0x4002c26	          0x8945f0	             mov dword [rbp - 0x10], eax	       899	path.c	FUNCTION_44	CALL_1
0x4002c29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       900	path.c	FUNCTION_44	CALL_2
0x4002c2d	          0x4889c7	                            mov rdi, rax	       900	path.c	FUNCTION_44	CALL_2
0x4002c30	      0xe8c7d6ffff	               call sym.is_absolute_path	       900	path.c	FUNCTION_44	CALL_2
0x4002c35	          0x8945f4	              mov dword [rbp - 0xc], eax	       900	path.c	FUNCTION_44	CALL_2
0x4002c38	        0x837df000	               cmp dword [rbp - 0x10], 0	       901	path.c	FUNCTION_44
0x4002c3c	            0x7438	                            je 0x4002c76	       901	path.c	FUNCTION_44
0x4002c3e	        0x837df400	                cmp dword [rbp - 0xc], 0	       901	path.c	FUNCTION_44
0x4002c42	            0x7432	                            je 0x4002c76	       901	path.c	FUNCTION_44
0x4002c44	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       901	path.c	FUNCTION_44
0x4002c48	           0xfb600	                   movzx eax, byte [rax]	       901	path.c	FUNCTION_44
0x4002c4b	           0xfb6c0	                           movzx eax, al	       901	path.c	FUNCTION_44
0x4002c4e	      0xbe20000000	                           mov esi, 0x20	       901	path.c	FUNCTION_44
0x4002c53	            0x89c7	                            mov edi, eax	       901	path.c	FUNCTION_44
0x4002c55	      0xe87dd4ffff	                      call sym.sane_case	       901	path.c	FUNCTION_44
0x4002c5a	            0x89c3	                            mov ebx, eax	       901	path.c	FUNCTION_44
0x4002c5c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       901	path.c	FUNCTION_44
0x4002c60	           0xfb600	                   movzx eax, byte [rax]	       901	path.c	FUNCTION_44
0x4002c63	           0xfb6c0	                           movzx eax, al	       901	path.c	FUNCTION_44
0x4002c66	      0xbe20000000	                           mov esi, 0x20	       901	path.c	FUNCTION_44
0x4002c6b	            0x89c7	                            mov edi, eax	       901	path.c	FUNCTION_44
0x4002c6d	      0xe865d4ffff	                      call sym.sane_case	       901	path.c	FUNCTION_44
0x4002c72	            0x39c3	                            cmp ebx, eax	       901	path.c	FUNCTION_44
0x4002c74	            0x740c	                            je 0x4002c82	       901	path.c	FUNCTION_44
0x4002c76	        0x837df000	               cmp dword [rbp - 0x10], 0	       901	path.c	FUNCTION_44
0x4002c7a	            0x750d	                           jne 0x4002c89	       901	path.c	FUNCTION_44
0x4002c7c	        0x837df400	                cmp dword [rbp - 0xc], 0	       902	path.c	FUNCTION_44
0x4002c80	            0x7507	                           jne 0x4002c89	       902	path.c	FUNCTION_44
0x4002c82	      0xb801000000	                              mov eax, 1	       901	path.c	FUNCTION_44
0x4002c87	            0xeb05	                           jmp 0x4002c8e	       901	path.c	FUNCTION_44
0x4002c89	      0xb800000000	                              mov eax, 0	       901	path.c	FUNCTION_44
0x4002c8e	        0x4883c420	                           add rsp, 0x20	       903	path.c	FUNCTION_44
0x4002c92	              0x5b	                                 pop rbx	       903	path.c	FUNCTION_44
0x4002c93	              0x5d	                                 pop rbp	       903	path.c	FUNCTION_44
0x4002c94	              0xc3	                                     ret	       903	path.c	FUNCTION_44
validate_headref	DO,0:functions,0:SWITCH,0:ELSE,0:IF,8:WHILE,1:CALL,9:FOR,0	112
0x4002324	              0x55	                                push rbp	       638	path.c	FUNCTION_37
0x4002325	          0x4889e5	                            mov rbp, rsp	       638	path.c	FUNCTION_37
0x4002328	    0x4881ecf00100	                          sub rsp, 0x1f0	       638	path.c	FUNCTION_37
0x400232f	    0x4889bd18feff	            mov qword [rbp - 0x1e8], rdi	       638	path.c	FUNCTION_37
0x4002336	    0x64488b042528	                mov rax, qword fs:[0x28]	       638	path.c	FUNCTION_37
0x400233f	        0x488945f8	                mov qword [rbp - 8], rax	       638	path.c	FUNCTION_37
0x4002343	            0x31c0	                            xor eax, eax	       638	path.c	FUNCTION_37
0x4002345	    0x488d9560feff	                  lea rdx, [rbp - 0x1a0]	       646	path.c	FUNCTION_37	IF_1
0x400234c	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       646	path.c	FUNCTION_37	IF_1
0x4002353	          0x4889d6	                            mov rsi, rdx	       646	path.c	FUNCTION_37	IF_1
0x4002356	          0x4889c7	                            mov rdi, rax	       646	path.c	FUNCTION_37	IF_1
0x4002359	      0xe800000000	                          call 0x400235e	       646	path.c	FUNCTION_37	IF_1
0x400235e	            0x85c0	                           test eax, eax	       646	path.c	FUNCTION_37	IF_1
0x4002360	            0x790a	                           jns 0x400236c	       646	path.c	FUNCTION_37	IF_1
0x4002362	      0xb8ffffffff	                     mov eax, 0xffffffff	       647	path.c	FUNCTION_37	IF_1
0x4002367	      0xe997010000	                           jmp 0x4002503	       647	path.c	FUNCTION_37	IF_1
0x400236c	    0x8b8578feffff	            mov eax, dword [rbp - 0x188]	       650	path.c	FUNCTION_37	IF_2	CALL_1
0x4002372	      0x2500f00000	                         and eax, 0xf000	       650	path.c	FUNCTION_37	IF_2	CALL_1
0x4002377	      0x3d00a00000	                         cmp eax, 0xa000	       650	path.c	FUNCTION_37	IF_2	CALL_1
0x400237c	            0x7560	                           jne 0x40023de	       650	path.c	FUNCTION_37	IF_2	CALL_1
0x400237e	    0x488d8df0feff	                  lea rcx, [rbp - 0x110]	       651	path.c	FUNCTION_37	IF_2	CALL_2
0x4002385	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       651	path.c	FUNCTION_37	IF_2	CALL_2
0x400238c	      0xbaff000000	                           mov edx, 0xff	       651	path.c	FUNCTION_37	IF_2	CALL_2
0x4002391	          0x4889ce	                            mov rsi, rcx	       651	path.c	FUNCTION_37	IF_2	CALL_2
0x4002394	          0x4889c7	                            mov rdi, rax	       651	path.c	FUNCTION_37	IF_2	CALL_2
0x4002397	      0xe800000000	                          call 0x400239c	       651	path.c	FUNCTION_37	IF_2	CALL_2
0x400239c	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	       651	path.c	FUNCTION_37	IF_2	CALL_2
0x40023a3	    0x4883bd38feff	              cmp qword [rbp - 0x1c8], 4	       652	path.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x40023ab	            0x7e27	                           jle 0x40023d4	       652	path.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x40023ad	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	       652	path.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x40023b4	      0xba05000000	                              mov edx, 5	       652	path.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x40023b9	          0x4889c6	                            mov rsi, rax	       652	path.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x40023bc	      0xbf00000000	                              mov edi, 0	       652	path.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x40023c1	      0xe800000000	                          call 0x40023c6	       652	path.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x40023c6	            0x85c0	                           test eax, eax	       652	path.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x40023c8	            0x750a	                           jne 0x40023d4	       652	path.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x40023ca	      0xb800000000	                              mov eax, 0	       653	path.c	FUNCTION_37	IF_2	IF_3
0x40023cf	      0xe92f010000	                           jmp 0x4002503	       653	path.c	FUNCTION_37	IF_2	IF_3
0x40023d4	      0xb8ffffffff	                     mov eax, 0xffffffff	       654	path.c	FUNCTION_37	IF_2
0x40023d9	      0xe925010000	                           jmp 0x4002503	       654	path.c	FUNCTION_37	IF_2
0x40023de	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       660	path.c	FUNCTION_37	CALL_4
0x40023e5	      0xbe00000000	                              mov esi, 0	       660	path.c	FUNCTION_37	CALL_4
0x40023ea	          0x4889c7	                            mov rdi, rax	       660	path.c	FUNCTION_37	CALL_4
0x40023ed	      0xb800000000	                              mov eax, 0	       660	path.c	FUNCTION_37	CALL_4
0x40023f2	      0xe800000000	                          call 0x40023f7	       660	path.c	FUNCTION_37	CALL_4
0x40023f7	    0x89852cfeffff	            mov dword [rbp - 0x1d4], eax	       660	path.c	FUNCTION_37	CALL_4
0x40023fd	    0x83bd2cfeffff	              cmp dword [rbp - 0x1d4], 0	       661	path.c	FUNCTION_37	IF_4
0x4002404	            0x790a	                           jns 0x4002410	       661	path.c	FUNCTION_37	IF_4
0x4002406	      0xb8ffffffff	                     mov eax, 0xffffffff	       662	path.c	FUNCTION_37	IF_4
0x400240b	      0xe9f3000000	                           jmp 0x4002503	       662	path.c	FUNCTION_37	IF_4
0x4002410	    0x488d8df0feff	                  lea rcx, [rbp - 0x110]	       663	path.c	FUNCTION_37	CALL_5
0x4002417	    0x8b852cfeffff	            mov eax, dword [rbp - 0x1d4]	       663	path.c	FUNCTION_37	CALL_5
0x400241d	      0xbaff000000	                           mov edx, 0xff	       663	path.c	FUNCTION_37	CALL_5
0x4002422	          0x4889ce	                            mov rsi, rcx	       663	path.c	FUNCTION_37	CALL_5
0x4002425	            0x89c7	                            mov edi, eax	       663	path.c	FUNCTION_37	CALL_5
0x4002427	      0xe800000000	                          call 0x400242c	       663	path.c	FUNCTION_37	CALL_5
0x400242c	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	       663	path.c	FUNCTION_37	CALL_5
0x4002433	    0x8b852cfeffff	            mov eax, dword [rbp - 0x1d4]	       664	path.c	FUNCTION_37	CALL_6
0x4002439	            0x89c7	                            mov edi, eax	       664	path.c	FUNCTION_37	CALL_6
0x400243b	      0xe800000000	                          call 0x4002440	       664	path.c	FUNCTION_37	CALL_6
0x4002440	    0x4883bd38feff	              cmp qword [rbp - 0x1c8], 0	       666	path.c	FUNCTION_37	IF_5
0x4002448	            0x790a	                           jns 0x4002454	       666	path.c	FUNCTION_37	IF_5
0x400244a	      0xb8ffffffff	                     mov eax, 0xffffffff	       667	path.c	FUNCTION_37	IF_5
0x400244f	      0xe9af000000	                           jmp 0x4002503	       667	path.c	FUNCTION_37	IF_5
0x4002454	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	       668	path.c	FUNCTION_37
0x400245b	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	       668	path.c	FUNCTION_37
0x4002462	          0x4801d0	                            add rax, rdx	       668	path.c	FUNCTION_37
0x4002465	          0xc60000	                       mov byte [rax], 0	       668	path.c	FUNCTION_37
0x4002468	    0x488d9530feff	                  lea rdx, [rbp - 0x1d0]	       673	path.c	FUNCTION_37	IF_6	CALL_7
0x400246f	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	       673	path.c	FUNCTION_37	IF_6	CALL_7
0x4002476	      0xbe00000000	                              mov esi, 0	       673	path.c	FUNCTION_37	IF_6	CALL_7
0x400247b	          0x4889c7	                            mov rdi, rax	       673	path.c	FUNCTION_37	IF_6	CALL_7
0x400247e	      0xe8fedbffff	                    call sym.skip_prefix	       673	path.c	FUNCTION_37	IF_6	CALL_7
0x4002483	            0x85c0	                           test eax, eax	       673	path.c	FUNCTION_37	IF_6	CALL_7
0x4002485	            0x7453	                            je 0x40024da	       673	path.c	FUNCTION_37	IF_6	CALL_7
0x4002487	            0xeb12	                           jmp 0x400249b	       674	path.c	FUNCTION_37	IF_6	WHILE_1
0x4002489	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	       675	path.c	FUNCTION_37	IF_6	WHILE_1
0x4002490	        0x4883c001	                              add rax, 1	       675	path.c	FUNCTION_37	IF_6	WHILE_1
0x4002494	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	       675	path.c	FUNCTION_37	IF_6	WHILE_1
0x400249b	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	       674	path.c	FUNCTION_37	IF_6	WHILE_1
0x40024a2	           0xfb600	                   movzx eax, byte [rax]	       674	path.c	FUNCTION_37	IF_6	WHILE_1
0x40024a5	           0xfb6c0	                           movzx eax, al	       674	path.c	FUNCTION_37	IF_6	WHILE_1
0x40024a8	            0x4898	                                    cdqe	       674	path.c	FUNCTION_37	IF_6	WHILE_1
0x40024aa	     0xfb680000000	                   movzx eax, byte [rax]	       674	path.c	FUNCTION_37	IF_6	WHILE_1
0x40024b1	           0xfb6c0	                           movzx eax, al	       674	path.c	FUNCTION_37	IF_6	WHILE_1
0x40024b4	          0x83e001	                              and eax, 1	       674	path.c	FUNCTION_37	IF_6	WHILE_1
0x40024b7	            0x85c0	                           test eax, eax	       674	path.c	FUNCTION_37	IF_6	WHILE_1
0x40024b9	            0x75ce	                           jne 0x4002489	       674	path.c	FUNCTION_37	IF_6	WHILE_1
0x40024bb	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	       676	path.c	FUNCTION_37	IF_6	IF_7	CALL_8
0x40024c2	      0xbe00000000	                              mov esi, 0	       676	path.c	FUNCTION_37	IF_6	IF_7	CALL_8
0x40024c7	          0x4889c7	                            mov rdi, rax	       676	path.c	FUNCTION_37	IF_6	IF_7	CALL_8
0x40024ca	      0xe800000000	                          call 0x40024cf	       676	path.c	FUNCTION_37	IF_6	IF_7	CALL_8
0x40024cf	            0x85c0	                           test eax, eax	       676	path.c	FUNCTION_37	IF_6	IF_7	CALL_8
0x40024d1	            0x7407	                            je 0x40024da	       676	path.c	FUNCTION_37	IF_6	IF_7	CALL_8
0x40024d3	      0xb800000000	                              mov eax, 0	       677	path.c	FUNCTION_37	IF_6	IF_7
0x40024d8	            0xeb29	                           jmp 0x4002503	       677	path.c	FUNCTION_37	IF_6	IF_7
0x40024da	    0x488d9540feff	                  lea rdx, [rbp - 0x1c0]	       683	path.c	FUNCTION_37	IF_8	CALL_9
0x40024e1	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	       683	path.c	FUNCTION_37	IF_8	CALL_9
0x40024e8	          0x4889d6	                            mov rsi, rdx	       683	path.c	FUNCTION_37	IF_8	CALL_9
0x40024eb	          0x4889c7	                            mov rdi, rax	       683	path.c	FUNCTION_37	IF_8	CALL_9
0x40024ee	      0xe800000000	                          call 0x40024f3	       683	path.c	FUNCTION_37	IF_8	CALL_9
0x40024f3	            0x85c0	                           test eax, eax	       683	path.c	FUNCTION_37	IF_8	CALL_9
0x40024f5	            0x7507	                           jne 0x40024fe	       683	path.c	FUNCTION_37	IF_8	CALL_9
0x40024f7	      0xb800000000	                              mov eax, 0	       684	path.c	FUNCTION_37	IF_8
0x40024fc	            0xeb05	                           jmp 0x4002503	       684	path.c	FUNCTION_37	IF_8
0x40024fe	      0xb8ffffffff	                     mov eax, 0xffffffff	       686	path.c	FUNCTION_37
0x4002503	        0x488b4df8	                mov rcx, qword [rbp - 8]	       687	path.c	FUNCTION_37
0x4002507	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       687	path.c	FUNCTION_37
0x4002510	            0x7405	                            je 0x4002517	       687	path.c	FUNCTION_37
0x4002512	      0xe800000000	                          call 0x4002517	       687	path.c	FUNCTION_37
0x4002517	              0xc9	                                   leave	       687	path.c	FUNCTION_37
0x4002518	              0xc3	                                     ret	       687	path.c	FUNCTION_37
xdg_cache_home	DO,0:functions,0:SWITCH,0:ELSE,0:IF,2:WHILE,0:CALL,5:FOR,0	42
0x4003a0c	              0x55	                                push rbp	      1347	path.c	FUNCTION_57
0x4003a0d	          0x4889e5	                            mov rbp, rsp	      1347	path.c	FUNCTION_57
0x4003a10	        0x4883ec20	                           sub rsp, 0x20	      1347	path.c	FUNCTION_57
0x4003a14	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1347	path.c	FUNCTION_57
0x4003a18	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1350	path.c	FUNCTION_57	CALL_1
0x4003a1d	            0x7519	                           jne 0x4003a38	      1350	path.c	FUNCTION_57	CALL_1
0x4003a1f	      0xb900000000	                              mov ecx, 0	      1350	path.c	FUNCTION_57	CALL_1
0x4003a24	      0xba46050000	                          mov edx, 0x546	      1350	path.c	FUNCTION_57	CALL_1
0x4003a29	      0xbe00000000	                              mov esi, 0	      1350	path.c	FUNCTION_57	CALL_1
0x4003a2e	      0xbf00000000	                              mov edi, 0	      1350	path.c	FUNCTION_57	CALL_1
0x4003a33	      0xe800000000	                          call 0x4003a38	      1350	path.c	FUNCTION_57	CALL_1
0x4003a38	      0xbf00000000	                              mov edi, 0	      1351	path.c	FUNCTION_57	CALL_2
0x4003a3d	      0xe800000000	                          call 0x4003a42	      1351	path.c	FUNCTION_57	CALL_2
0x4003a42	        0x488945f0	             mov qword [rbp - 0x10], rax	      1351	path.c	FUNCTION_57	CALL_2
0x4003a46	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1352	path.c	FUNCTION_57	IF_1
0x4003a4b	            0x7427	                            je 0x4003a74	      1352	path.c	FUNCTION_57	IF_1
0x4003a4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1352	path.c	FUNCTION_57	IF_1
0x4003a51	           0xfb600	                   movzx eax, byte [rax]	      1352	path.c	FUNCTION_57	IF_1
0x4003a54	            0x84c0	                             test al, al	      1352	path.c	FUNCTION_57	IF_1
0x4003a56	            0x741c	                            je 0x4003a74	      1352	path.c	FUNCTION_57	IF_1
0x4003a58	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1353	path.c	FUNCTION_57	CALL_3
0x4003a5c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1353	path.c	FUNCTION_57	CALL_3
0x4003a60	          0x4889c6	                            mov rsi, rax	      1353	path.c	FUNCTION_57	CALL_3
0x4003a63	      0xbf00000000	                              mov edi, 0	      1353	path.c	FUNCTION_57	CALL_3
0x4003a68	      0xb800000000	                              mov eax, 0	      1353	path.c	FUNCTION_57	CALL_3
0x4003a6d	      0xe800000000	                          call 0x4003a72	      1353	path.c	FUNCTION_57	CALL_3
0x4003a72	            0xeb36	                           jmp 0x4003aaa	      1353	path.c	FUNCTION_57	CALL_3
0x4003a74	      0xbf00000000	                              mov edi, 0	      1355	path.c	FUNCTION_57	CALL_4
0x4003a79	      0xe800000000	                          call 0x4003a7e	      1355	path.c	FUNCTION_57	CALL_4
0x4003a7e	        0x488945f8	                mov qword [rbp - 8], rax	      1355	path.c	FUNCTION_57	CALL_4
0x4003a82	      0x48837df800	                  cmp qword [rbp - 8], 0	      1356	path.c	FUNCTION_57	IF_2
0x4003a87	            0x741c	                            je 0x4003aa5	      1356	path.c	FUNCTION_57	IF_2
0x4003a89	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1357	path.c	FUNCTION_57	CALL_5
0x4003a8d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1357	path.c	FUNCTION_57	CALL_5
0x4003a91	          0x4889c6	                            mov rsi, rax	      1357	path.c	FUNCTION_57	CALL_5
0x4003a94	      0xbf00000000	                              mov edi, 0	      1357	path.c	FUNCTION_57	CALL_5
0x4003a99	      0xb800000000	                              mov eax, 0	      1357	path.c	FUNCTION_57	CALL_5
0x4003a9e	      0xe800000000	                          call 0x4003aa3	      1357	path.c	FUNCTION_57	CALL_5
0x4003aa3	            0xeb05	                           jmp 0x4003aaa	      1357	path.c	FUNCTION_57	CALL_5
0x4003aa5	      0xb800000000	                              mov eax, 0	      1358	path.c	FUNCTION_57
0x4003aaa	              0xc9	                                   leave	      1359	path.c	FUNCTION_57
0x4003aab	              0xc3	                                     ret	      1359	path.c	FUNCTION_57
only_spaces_and_periods	DO,0:functions,0:SWITCH,0:ELSE,0:IF,2:WHILE,1:CALL,0:FOR,0	34
0x40037bf	              0x55	                                push rbp	      1294	path.c	FUNCTION_53
0x40037c0	          0x4889e5	                            mov rbp, rsp	      1294	path.c	FUNCTION_53
0x40037c3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1294	path.c	FUNCTION_53
0x40037c7	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1294	path.c	FUNCTION_53
0x40037cb	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1294	path.c	FUNCTION_53
0x40037cf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1295	path.c	FUNCTION_53	IF_1
0x40037d3	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1295	path.c	FUNCTION_53	IF_1
0x40037d7	            0x7307	                           jae 0x40037e0	      1295	path.c	FUNCTION_53	IF_1
0x40037d9	      0xb800000000	                              mov eax, 0	      1296	path.c	FUNCTION_53	IF_1
0x40037de	            0xeb4d	                           jmp 0x400382d	      1296	path.c	FUNCTION_53	IF_1
0x40037e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1297	path.c	FUNCTION_53
0x40037e4	        0x482945e0	             sub qword [rbp - 0x20], rax	      1297	path.c	FUNCTION_53
0x40037e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1298	path.c	FUNCTION_53
0x40037ec	        0x480145e8	            add qword [rbp - 0x18], rax 	      1298	path.c	FUNCTION_53
0x40037f0	            0xeb25	                           jmp 0x4003817	      1299	path.c	FUNCTION_53	WHILE_1
0x40037f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1300	path.c	FUNCTION_53	WHILE_1
0x40037f6	        0x488d5001	                      lea rdx, [rax + 1]	      1300	path.c	FUNCTION_53	WHILE_1
0x40037fa	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1300	path.c	FUNCTION_53	WHILE_1
0x40037fe	           0xfb600	                   movzx eax, byte [rax]	      1300	path.c	FUNCTION_53	WHILE_1
0x4003801	          0x8845ff	                  mov byte [rbp - 1], al	      1300	path.c	FUNCTION_53	WHILE_1
0x4003804	        0x807dff20	                cmp byte [rbp - 1], 0x20	      1301	path.c	FUNCTION_53	WHILE_1	IF_2
0x4003808	            0x740d	                            je 0x4003817	      1301	path.c	FUNCTION_53	WHILE_1	IF_2
0x400380a	        0x807dff2e	                cmp byte [rbp - 1], 0x2e	      1301	path.c	FUNCTION_53	WHILE_1	IF_2
0x400380e	            0x7407	                            je 0x4003817	      1301	path.c	FUNCTION_53	WHILE_1	IF_2
0x4003810	      0xb800000000	                              mov eax, 0	      1302	path.c	FUNCTION_53	WHILE_1	IF_2
0x4003815	            0xeb16	                           jmp 0x400382d	      1302	path.c	FUNCTION_53	WHILE_1	IF_2
0x4003817	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1299	path.c	FUNCTION_53	WHILE_1
0x400381b	        0x488d50ff	                      lea rdx, [rax - 1]	      1299	path.c	FUNCTION_53	WHILE_1
0x400381f	        0x488955e0	             mov qword [rbp - 0x20], rdx	      1299	path.c	FUNCTION_53	WHILE_1
0x4003823	          0x4885c0	                           test rax, rax	      1299	path.c	FUNCTION_53	WHILE_1
0x4003826	            0x75ca	                           jne 0x40037f2	      1299	path.c	FUNCTION_53	WHILE_1
0x4003828	      0xb801000000	                              mov eax, 1	      1304	path.c	FUNCTION_53
0x400382d	              0x5d	                                 pop rbp	      1305	path.c	FUNCTION_53
0x400382e	              0xc3	                                     ret	      1305	path.c	FUNCTION_53
is_absolute_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,0:FOR,0	21
0x40002fc	              0x55	                                push rbp	      1153	cache.h	FUNCTION_120
0x40002fd	          0x4889e5	                            mov rbp, rsp	      1153	cache.h	FUNCTION_120
0x4000300	        0x4883ec08	                              sub rsp, 8	      1153	cache.h	FUNCTION_120
0x4000304	        0x48897df8	                mov qword [rbp - 8], rdi	      1153	cache.h	FUNCTION_120
0x4000308	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	cache.h	FUNCTION_120
0x400030c	           0xfb600	                   movzx eax, byte [rax]	      1154	cache.h	FUNCTION_120
0x400030f	           0xfbec0	                           movsx eax, al	      1154	cache.h	FUNCTION_120
0x4000312	            0x89c7	                            mov edi, eax	      1154	cache.h	FUNCTION_120
0x4000314	      0xe836fdffff	                 call sym.git_is_dir_sep	      1154	cache.h	FUNCTION_120
0x4000319	            0x85c0	                           test eax, eax	      1154	cache.h	FUNCTION_120
0x400031b	            0x7510	                           jne 0x400032d	      1154	cache.h	FUNCTION_120
0x400031d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	cache.h	FUNCTION_120
0x4000321	          0x4889c7	                            mov rdi, rax	      1154	cache.h	FUNCTION_120
0x4000324	      0xe817fdffff	       call sym.git_has_dos_drive_prefix	      1154	cache.h	FUNCTION_120
0x4000329	            0x85c0	                           test eax, eax	      1154	cache.h	FUNCTION_120
0x400032b	            0x7407	                            je 0x4000334	      1154	cache.h	FUNCTION_120
0x400032d	      0xb801000000	                              mov eax, 1	      1154	cache.h	FUNCTION_120
0x4000332	            0xeb05	                           jmp 0x4000339	      1154	cache.h	FUNCTION_120
0x4000334	      0xb800000000	                              mov eax, 0	      1154	cache.h	FUNCTION_120
0x4000339	              0xc9	                                   leave	      1155	cache.h	FUNCTION_120
0x400033a	              0xc3	                                     ret	      1155	cache.h	FUNCTION_120
repo_git_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,4:FOR,0	49
0x400122b	              0x55	                                push rbp	       422	path.c	FUNCTION_19
0x400122c	          0x4889e5	                            mov rbp, rsp	       422	path.c	FUNCTION_19
0x400122f	    0x4881ec000100	                          sub rsp, 0x100	       422	path.c	FUNCTION_19
0x4001236	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	       422	path.c	FUNCTION_19
0x400123d	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	       422	path.c	FUNCTION_19
0x4001244	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       422	path.c	FUNCTION_19
0x400124b	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       422	path.c	FUNCTION_19
0x4001252	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       422	path.c	FUNCTION_19
0x4001259	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       422	path.c	FUNCTION_19
0x4001260	            0x84c0	                             test al, al	       422	path.c	FUNCTION_19
0x4001262	            0x7420	                            je 0x4001284	       422	path.c	FUNCTION_19
0x4001264	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       422	path.c	FUNCTION_19
0x4001268	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       422	path.c	FUNCTION_19
0x400126c	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       422	path.c	FUNCTION_19
0x4001270	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       422	path.c	FUNCTION_19
0x4001274	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       422	path.c	FUNCTION_19
0x4001278	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       422	path.c	FUNCTION_19
0x400127c	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       422	path.c	FUNCTION_19
0x4001280	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       422	path.c	FUNCTION_19
0x4001284	    0x64488b042528	                mov rax, qword fs:[0x28]	       422	path.c	FUNCTION_19
0x400128d	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       422	path.c	FUNCTION_19
0x4001294	            0x31c0	                            xor eax, eax	       422	path.c	FUNCTION_19
0x4001296	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       423	path.c	FUNCTION_19
0x40012a1	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	       423	path.c	FUNCTION_19
0x40012ac	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       423	path.c	FUNCTION_19
0x40012b7	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       425	path.c	FUNCTION_19	CALL_1
0x40012c1	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       425	path.c	FUNCTION_19	CALL_1
0x40012cb	        0x488d4510	                   lea rax, [rbp + 0x10]	       425	path.c	FUNCTION_19	CALL_1
0x40012cf	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       425	path.c	FUNCTION_19	CALL_1
0x40012d6	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       425	path.c	FUNCTION_19	CALL_1
0x40012dd	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       425	path.c	FUNCTION_19	CALL_1
0x40012e4	    0x488db530ffff	                   lea rsi, [rbp - 0xd0]	       426	path.c	FUNCTION_19	CALL_2
0x40012eb	    0x488b8d00ffff	            mov rcx, qword [rbp - 0x100]	       426	path.c	FUNCTION_19	CALL_2
0x40012f2	    0x488d9510ffff	                   lea rdx, [rbp - 0xf0]	       426	path.c	FUNCTION_19	CALL_2
0x40012f9	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       426	path.c	FUNCTION_19	CALL_2
0x4001300	          0x4989f0	                             mov r8, rsi	       426	path.c	FUNCTION_19	CALL_2
0x4001303	      0xbe00000000	                              mov esi, 0	       426	path.c	FUNCTION_19	CALL_2
0x4001308	          0x4889c7	                            mov rdi, rax	       426	path.c	FUNCTION_19	CALL_2
0x400130b	      0xe854feffff	                    call sym.do_git_path	       426	path.c	FUNCTION_19	CALL_2
0x4001310	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       428	path.c	FUNCTION_19	CALL_4
0x4001317	      0xbe00000000	                              mov esi, 0	       428	path.c	FUNCTION_19	CALL_4
0x400131c	          0x4889c7	                            mov rdi, rax	       428	path.c	FUNCTION_19	CALL_4
0x400131f	      0xe800000000	                          call 0x4001324	       428	path.c	FUNCTION_19	CALL_4
0x4001324	    0x488bbd48ffff	             mov rdi, qword [rbp - 0xb8]	       429	path.c	FUNCTION_19
0x400132b	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       429	path.c	FUNCTION_19
0x4001334	            0x7405	                            je 0x400133b	       429	path.c	FUNCTION_19
0x4001336	      0xe800000000	                          call 0x400133b	       429	path.c	FUNCTION_19
0x400133b	              0xc9	                                   leave	       429	path.c	FUNCTION_19
0x400133c	              0xc3	                                     ret	       429	path.c	FUNCTION_19
strbuf_repo_git_path	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:CALL,3:FOR,0	43
0x400133d	              0x55	                                push rbp	       434	path.c	FUNCTION_20
0x400133e	          0x4889e5	                            mov rbp, rsp	       434	path.c	FUNCTION_20
0x4001341	    0x4881ecf00000	                           sub rsp, 0xf0	       434	path.c	FUNCTION_20
0x4001348	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       434	path.c	FUNCTION_20
0x400134f	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       434	path.c	FUNCTION_20
0x4001356	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	       434	path.c	FUNCTION_20
0x400135d	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       434	path.c	FUNCTION_20
0x4001364	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       434	path.c	FUNCTION_20
0x400136b	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       434	path.c	FUNCTION_20
0x4001372	            0x84c0	                             test al, al	       434	path.c	FUNCTION_20
0x4001374	            0x7420	                            je 0x4001396	       434	path.c	FUNCTION_20
0x4001376	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       434	path.c	FUNCTION_20
0x400137a	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       434	path.c	FUNCTION_20
0x400137e	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       434	path.c	FUNCTION_20
0x4001382	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       434	path.c	FUNCTION_20
0x4001386	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       434	path.c	FUNCTION_20
0x400138a	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       434	path.c	FUNCTION_20
0x400138e	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       434	path.c	FUNCTION_20
0x4001392	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       434	path.c	FUNCTION_20
0x4001396	    0x64488b042528	                mov rax, qword fs:[0x28]	       434	path.c	FUNCTION_20
0x400139f	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       434	path.c	FUNCTION_20
0x40013a6	            0x31c0	                            xor eax, eax	       434	path.c	FUNCTION_20
0x40013a8	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       436	path.c	FUNCTION_20	CALL_1
0x40013b2	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       436	path.c	FUNCTION_20	CALL_1
0x40013bc	        0x488d4510	                   lea rax, [rbp + 0x10]	       436	path.c	FUNCTION_20	CALL_1
0x40013c0	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       436	path.c	FUNCTION_20	CALL_1
0x40013c7	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       436	path.c	FUNCTION_20	CALL_1
0x40013ce	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       436	path.c	FUNCTION_20	CALL_1
0x40013d5	    0x488db530ffff	                   lea rsi, [rbp - 0xd0]	       437	path.c	FUNCTION_20	CALL_2
0x40013dc	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	       437	path.c	FUNCTION_20	CALL_2
0x40013e3	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       437	path.c	FUNCTION_20	CALL_2
0x40013ea	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       437	path.c	FUNCTION_20	CALL_2
0x40013f1	          0x4989f0	                             mov r8, rsi	       437	path.c	FUNCTION_20	CALL_2
0x40013f4	      0xbe00000000	                              mov esi, 0	       437	path.c	FUNCTION_20	CALL_2
0x40013f9	          0x4889c7	                            mov rdi, rax	       437	path.c	FUNCTION_20	CALL_2
0x40013fc	      0xe863fdffff	                    call sym.do_git_path	       437	path.c	FUNCTION_20	CALL_2
0x4001401	              0x90	                                     nop	       439	path.c	FUNCTION_20
0x4001402	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       439	path.c	FUNCTION_20
0x4001409	    0x644833042528	                xor rax, qword fs:[0x28]	       439	path.c	FUNCTION_20
0x4001412	            0x7405	                            je 0x4001419	       439	path.c	FUNCTION_20
0x4001414	      0xe800000000	                          call 0x4001419	       439	path.c	FUNCTION_20
0x4001419	              0xc9	                                   leave	       439	path.c	FUNCTION_20
0x400141a	              0xc3	                                     ret	       439	path.c	FUNCTION_20
remove_leading_path	DO,0:functions,0:SWITCH,0:ELSE,2:IF,6:WHILE,4:CALL,2:FOR,0	149
0x4002fe1	              0x55	                                push rbp	      1016	path.c	FUNCTION_46
0x4002fe2	          0x4889e5	                            mov rbp, rsp	      1016	path.c	FUNCTION_46
0x4002fe5	        0x4883ec20	                           sub rsp, 0x20	      1016	path.c	FUNCTION_46
0x4002fe9	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1016	path.c	FUNCTION_46
0x4002fed	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1016	path.c	FUNCTION_46
0x4002ff1	    0xc745f8000000	                  mov dword [rbp - 8], 0	      1018	path.c	FUNCTION_46
0x4002ff8	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1018	path.c	FUNCTION_46
0x4002fff	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1020	path.c	FUNCTION_46	IF_1
0x4003004	            0x740f	                            je 0x4003015	      1020	path.c	FUNCTION_46	IF_1
0x4003006	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1020	path.c	FUNCTION_46	IF_1
0x400300a	           0xfb600	                   movzx eax, byte [rax]	      1020	path.c	FUNCTION_46	IF_1
0x400300d	            0x84c0	                             test al, al	      1020	path.c	FUNCTION_46	IF_1
0x400300f	     0xf85cb000000	                           jne 0x40030e0	      1020	path.c	FUNCTION_46	IF_1
0x4003015	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1021	path.c	FUNCTION_46	IF_1
0x4003019	      0xe9aa010000	                           jmp 0x40031c8	      1021	path.c	FUNCTION_46	IF_1
0x400301e	          0x8b45f8	                mov eax, dword [rbp - 8]	      1023	path.c	FUNCTION_46	WHILE_1	IF_2
0x4003021	          0x4863d0	                         movsxd rdx, eax	      1023	path.c	FUNCTION_46	WHILE_1	IF_2
0x4003024	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1023	path.c	FUNCTION_46	WHILE_1	IF_2
0x4003028	          0x4801d0	                            add rax, rdx	      1023	path.c	FUNCTION_46	WHILE_1	IF_2
0x400302b	           0xfb600	                   movzx eax, byte [rax]	      1023	path.c	FUNCTION_46	WHILE_1	IF_2
0x400302e	           0xfbec0	                           movsx eax, al	      1023	path.c	FUNCTION_46	WHILE_1	IF_2
0x4003031	            0x89c7	                            mov edi, eax	      1023	path.c	FUNCTION_46	WHILE_1	IF_2
0x4003033	      0xe817d0ffff	                 call sym.git_is_dir_sep	      1023	path.c	FUNCTION_46	WHILE_1	IF_2
0x4003038	            0x85c0	                           test eax, eax	      1023	path.c	FUNCTION_46	WHILE_1	IF_2
0x400303a	            0x746f	                            je 0x40030ab	      1023	path.c	FUNCTION_46	WHILE_1	IF_2
0x400303c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1024	path.c	FUNCTION_46	WHILE_1	IF_2	IF_3
0x400303f	          0x4863d0	                         movsxd rdx, eax	      1024	path.c	FUNCTION_46	WHILE_1	IF_2	IF_3
0x4003042	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1024	path.c	FUNCTION_46	WHILE_1	IF_2	IF_3
0x4003046	          0x4801d0	                            add rax, rdx	      1024	path.c	FUNCTION_46	WHILE_1	IF_2	IF_3
0x4003049	           0xfb600	                   movzx eax, byte [rax]	      1024	path.c	FUNCTION_46	WHILE_1	IF_2	IF_3
0x400304c	           0xfbec0	                           movsx eax, al	      1024	path.c	FUNCTION_46	WHILE_1	IF_2	IF_3
0x400304f	            0x89c7	                            mov edi, eax	      1024	path.c	FUNCTION_46	WHILE_1	IF_2	IF_3
0x4003051	      0xe8f9cfffff	                 call sym.git_is_dir_sep	      1024	path.c	FUNCTION_46	WHILE_1	IF_2	IF_3
0x4003056	            0x85c0	                           test eax, eax	      1024	path.c	FUNCTION_46	WHILE_1	IF_2	IF_3
0x4003058	            0x750d	                           jne 0x4003067	      1024	path.c	FUNCTION_46	WHILE_1	IF_2	IF_3
0x400305a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1025	path.c	FUNCTION_46	WHILE_1	IF_2	IF_3
0x400305e	      0xe965010000	                           jmp 0x40031c8	      1025	path.c	FUNCTION_46	WHILE_1	IF_2	IF_3
0x4003063	        0x8345f801	                  add dword [rbp - 8], 1	      1027	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_2
0x4003067	          0x8b45f8	                mov eax, dword [rbp - 8]	      1026	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_2
0x400306a	          0x4863d0	                         movsxd rdx, eax	      1026	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_2
0x400306d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1026	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_2
0x4003071	          0x4801d0	                            add rax, rdx	      1026	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_2
0x4003074	           0xfb600	                   movzx eax, byte [rax]	      1026	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_2
0x4003077	           0xfbec0	                           movsx eax, al	      1026	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_2
0x400307a	            0x89c7	                            mov edi, eax	      1026	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_2
0x400307c	      0xe8cecfffff	                 call sym.git_is_dir_sep	      1026	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_2
0x4003081	            0x85c0	                           test eax, eax	      1026	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_2
0x4003083	            0x75de	                           jne 0x4003063	      1026	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_2
0x4003085	            0xeb04	                           jmp 0x400308b	      1028	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_3
0x4003087	        0x8345fc01	                  add dword [rbp - 4], 1	      1029	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_3
0x400308b	          0x8b45fc	                mov eax, dword [rbp - 4]	      1028	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_3
0x400308e	          0x4863d0	                         movsxd rdx, eax	      1028	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_3
0x4003091	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1028	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_3
0x4003095	          0x4801d0	                            add rax, rdx	      1028	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_3
0x4003098	           0xfb600	                   movzx eax, byte [rax]	      1028	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_3
0x400309b	           0xfbec0	                           movsx eax, al	      1028	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_3
0x400309e	            0x89c7	                            mov edi, eax	      1028	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_3
0x40030a0	      0xe8aacfffff	                 call sym.git_is_dir_sep	      1028	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_3
0x40030a5	            0x85c0	                           test eax, eax	      1028	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_3
0x40030a7	            0x75de	                           jne 0x4003087	      1028	path.c	FUNCTION_46	WHILE_1	IF_2	WHILE_3
0x40030a9	            0xeb35	                           jmp 0x40030e0	      1030	path.c	FUNCTION_46	WHILE_1	IF_2
0x40030ab	          0x8b45fc	                mov eax, dword [rbp - 4]	      1031	path.c	FUNCTION_46	WHILE_1	ELSE_1	IF_4
0x40030ae	          0x4863d0	                         movsxd rdx, eax	      1031	path.c	FUNCTION_46	WHILE_1	ELSE_1	IF_4
0x40030b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1031	path.c	FUNCTION_46	WHILE_1	ELSE_1	IF_4
0x40030b5	          0x4801d0	                            add rax, rdx	      1031	path.c	FUNCTION_46	WHILE_1	ELSE_1	IF_4
0x40030b8	           0xfb610	                   movzx edx, byte [rax]	      1031	path.c	FUNCTION_46	WHILE_1	ELSE_1	IF_4
0x40030bb	          0x8b45f8	                mov eax, dword [rbp - 8]	      1031	path.c	FUNCTION_46	WHILE_1	ELSE_1	IF_4
0x40030be	          0x4863c8	                         movsxd rcx, eax	      1031	path.c	FUNCTION_46	WHILE_1	ELSE_1	IF_4
0x40030c1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1031	path.c	FUNCTION_46	WHILE_1	ELSE_1	IF_4
0x40030c5	          0x4801c8	                            add rax, rcx	      1031	path.c	FUNCTION_46	WHILE_1	ELSE_1	IF_4
0x40030c8	           0xfb600	                   movzx eax, byte [rax]	      1031	path.c	FUNCTION_46	WHILE_1	ELSE_1	IF_4
0x40030cb	            0x38c2	                              cmp dl, al	      1031	path.c	FUNCTION_46	WHILE_1	ELSE_1	IF_4
0x40030cd	            0x7409	                            je 0x40030d8	      1031	path.c	FUNCTION_46	WHILE_1	ELSE_1	IF_4
0x40030cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1032	path.c	FUNCTION_46	WHILE_1	ELSE_1	IF_4
0x40030d3	      0xe9f0000000	                           jmp 0x40031c8	      1032	path.c	FUNCTION_46	WHILE_1	ELSE_1	IF_4
0x40030d8	        0x8345f801	                  add dword [rbp - 8], 1	      1034	path.c	FUNCTION_46	WHILE_1
0x40030dc	        0x8345fc01	                  add dword [rbp - 4], 1	      1035	path.c	FUNCTION_46	WHILE_1
0x40030e0	          0x8b45f8	                mov eax, dword [rbp - 8]	      1022	path.c	FUNCTION_46	WHILE_1
0x40030e3	          0x4863d0	                         movsxd rdx, eax	      1022	path.c	FUNCTION_46	WHILE_1
0x40030e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1022	path.c	FUNCTION_46	WHILE_1
0x40030ea	          0x4801d0	                            add rax, rdx	      1022	path.c	FUNCTION_46	WHILE_1
0x40030ed	           0xfb600	                   movzx eax, byte [rax]	      1022	path.c	FUNCTION_46	WHILE_1
0x40030f0	            0x84c0	                             test al, al	      1022	path.c	FUNCTION_46	WHILE_1
0x40030f2	     0xf8526ffffff	                           jne 0x400301e	      1022	path.c	FUNCTION_46	WHILE_1
0x40030f8	          0x8b45fc	                mov eax, dword [rbp - 4]	      1039	path.c	FUNCTION_46	IF_5
0x40030fb	          0x4863d0	                         movsxd rdx, eax	      1039	path.c	FUNCTION_46	IF_5
0x40030fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1039	path.c	FUNCTION_46	IF_5
0x4003102	          0x4801d0	                            add rax, rdx	      1039	path.c	FUNCTION_46	IF_5
0x4003105	           0xfb600	                   movzx eax, byte [rax]	      1039	path.c	FUNCTION_46	IF_5
0x4003108	            0x84c0	                             test al, al	      1037	path.c	FUNCTION_46	IF_5
0x400310a	            0x7449	                            je 0x4003155	      1037	path.c	FUNCTION_46	IF_5
0x400310c	          0x8b45f8	                mov eax, dword [rbp - 8]	      1041	path.c	FUNCTION_46	IF_5
0x400310f	            0x4898	                                    cdqe	      1041	path.c	FUNCTION_46	IF_5
0x4003111	        0x488d50ff	                      lea rdx, [rax - 1]	      1041	path.c	FUNCTION_46	IF_5
0x4003115	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1041	path.c	FUNCTION_46	IF_5
0x4003119	          0x4801d0	                            add rax, rdx	      1041	path.c	FUNCTION_46	IF_5
0x400311c	           0xfb600	                   movzx eax, byte [rax]	      1041	path.c	FUNCTION_46	IF_5
0x400311f	           0xfbec0	                           movsx eax, al	      1041	path.c	FUNCTION_46	IF_5
0x4003122	            0x89c7	                            mov edi, eax	      1041	path.c	FUNCTION_46	IF_5
0x4003124	      0xe826cfffff	                 call sym.git_is_dir_sep	      1041	path.c	FUNCTION_46	IF_5
0x4003129	            0x85c0	                           test eax, eax	      1039	path.c	FUNCTION_46	IF_5
0x400312b	            0x7528	                           jne 0x4003155	      1039	path.c	FUNCTION_46	IF_5
0x400312d	          0x8b45fc	                mov eax, dword [rbp - 4]	      1041	path.c	FUNCTION_46	IF_5
0x4003130	          0x4863d0	                         movsxd rdx, eax	      1041	path.c	FUNCTION_46	IF_5
0x4003133	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1041	path.c	FUNCTION_46	IF_5
0x4003137	          0x4801d0	                            add rax, rdx	      1041	path.c	FUNCTION_46	IF_5
0x400313a	           0xfb600	                   movzx eax, byte [rax]	      1041	path.c	FUNCTION_46	IF_5
0x400313d	           0xfbec0	                           movsx eax, al	      1041	path.c	FUNCTION_46	IF_5
0x4003140	            0x89c7	                            mov edi, eax	      1041	path.c	FUNCTION_46	IF_5
0x4003142	      0xe808cfffff	                 call sym.git_is_dir_sep	      1041	path.c	FUNCTION_46	IF_5
0x4003147	            0x85c0	                           test eax, eax	      1041	path.c	FUNCTION_46	IF_5
0x4003149	            0x750a	                           jne 0x4003155	      1041	path.c	FUNCTION_46	IF_5
0x400314b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1043	path.c	FUNCTION_46	IF_5
0x400314f	            0xeb77	                           jmp 0x40031c8	      1043	path.c	FUNCTION_46	IF_5
0x4003151	        0x8345fc01	                  add dword [rbp - 4], 1	      1045	path.c	FUNCTION_46	WHILE_4
0x4003155	          0x8b45fc	                mov eax, dword [rbp - 4]	      1044	path.c	FUNCTION_46	WHILE_4
0x4003158	          0x4863d0	                         movsxd rdx, eax	      1044	path.c	FUNCTION_46	WHILE_4
0x400315b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1044	path.c	FUNCTION_46	WHILE_4
0x400315f	          0x4801d0	                            add rax, rdx	      1044	path.c	FUNCTION_46	WHILE_4
0x4003162	           0xfb600	                   movzx eax, byte [rax]	      1044	path.c	FUNCTION_46	WHILE_4
0x4003165	           0xfbec0	                           movsx eax, al	      1044	path.c	FUNCTION_46	WHILE_4
0x4003168	            0x89c7	                            mov edi, eax	      1044	path.c	FUNCTION_46	WHILE_4
0x400316a	      0xe8e0ceffff	                 call sym.git_is_dir_sep	      1044	path.c	FUNCTION_46	WHILE_4
0x400316f	            0x85c0	                           test eax, eax	      1044	path.c	FUNCTION_46	WHILE_4
0x4003171	            0x75de	                           jne 0x4003151	      1044	path.c	FUNCTION_46	WHILE_4
0x4003173	      0xbe00000000	                              mov esi, 0	      1047	path.c	FUNCTION_46
0x4003178	      0xbf00000000	                              mov edi, 0	      1047	path.c	FUNCTION_46
0x400317d	      0xe8bfcfffff	                  call sym.strbuf_setlen	      1047	path.c	FUNCTION_46
0x4003182	          0x8b45fc	                mov eax, dword [rbp - 4]	      1048	path.c	FUNCTION_46	IF_6
0x4003185	          0x4863d0	                         movsxd rdx, eax	      1048	path.c	FUNCTION_46	IF_6
0x4003188	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1048	path.c	FUNCTION_46	IF_6
0x400318c	          0x4801d0	                            add rax, rdx	      1048	path.c	FUNCTION_46	IF_6
0x400318f	           0xfb600	                   movzx eax, byte [rax]	      1048	path.c	FUNCTION_46	IF_6
0x4003192	            0x84c0	                             test al, al	      1048	path.c	FUNCTION_46	IF_6
0x4003194	            0x7511	                           jne 0x40031a7	      1048	path.c	FUNCTION_46	IF_6
0x4003196	      0xbe00000000	                              mov esi, 0	      1049	path.c	FUNCTION_46	CALL_1
0x400319b	      0xbf00000000	                              mov edi, 0	      1049	path.c	FUNCTION_46	CALL_1
0x40031a0	      0xe8a4d0ffff	                  call sym.strbuf_addstr	      1049	path.c	FUNCTION_46	CALL_1
0x40031a5	            0xeb1a	                           jmp 0x40031c1	      1049	path.c	FUNCTION_46	CALL_1
0x40031a7	          0x8b45fc	                mov eax, dword [rbp - 4]	      1051	path.c	FUNCTION_46	CALL_2
0x40031aa	          0x4863d0	                         movsxd rdx, eax	      1051	path.c	FUNCTION_46	CALL_2
0x40031ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1051	path.c	FUNCTION_46	CALL_2
0x40031b1	          0x4801d0	                            add rax, rdx	      1051	path.c	FUNCTION_46	CALL_2
0x40031b4	          0x4889c6	                            mov rsi, rax	      1051	path.c	FUNCTION_46	CALL_2
0x40031b7	      0xbf00000000	                              mov edi, 0	      1051	path.c	FUNCTION_46	CALL_2
0x40031bc	      0xe888d0ffff	                  call sym.strbuf_addstr	      1051	path.c	FUNCTION_46	CALL_2
0x40031c1	    0x488b05000000	            mov rax, qword [0x040031c8] 	      1052	path.c	FUNCTION_46
0x40031c8	              0xc9	                                   leave	      1053	path.c	FUNCTION_46
0x40031c9	              0xc3	                                     ret	      1053	path.c	FUNCTION_46
strbuf_worktree_gitdir	DO,0:functions,0:SWITCH,0:ELSE,2:IF,2:WHILE,0:CALL,3:FOR,0	38
0x40010e3	              0x55	                                push rbp	       396	path.c	FUNCTION_17
0x40010e4	          0x4889e5	                            mov rbp, rsp	       396	path.c	FUNCTION_17
0x40010e7	        0x4883ec20	                           sub rsp, 0x20	       396	path.c	FUNCTION_17
0x40010eb	        0x48897df8	                mov qword [rbp - 8], rdi	       396	path.c	FUNCTION_17
0x40010ef	        0x488975f0	             mov qword [rbp - 0x10], rsi	       396	path.c	FUNCTION_17
0x40010f3	        0x488955e8	             mov qword [rbp - 0x18], rdx	       396	path.c	FUNCTION_17
0x40010f7	      0x48837de800	               cmp qword [rbp - 0x18], 0	       397	path.c	FUNCTION_17	IF_1
0x40010fc	            0x7518	                           jne 0x4001116	       397	path.c	FUNCTION_17	IF_1
0x40010fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       398	path.c	FUNCTION_17	CALL_1
0x4001102	          0x488b10	                    mov rdx, qword [rax]	       398	path.c	FUNCTION_17	CALL_1
0x4001105	        0x488b45f8	                mov rax, qword [rbp - 8]	       398	path.c	FUNCTION_17	CALL_1
0x4001109	          0x4889d6	                            mov rsi, rdx	       398	path.c	FUNCTION_17	CALL_1
0x400110c	          0x4889c7	                            mov rdi, rax	       398	path.c	FUNCTION_17	CALL_1
0x400110f	      0xe835f1ffff	                  call sym.strbuf_addstr	       398	path.c	FUNCTION_17	CALL_1
0x4001114	            0xeb4b	                           jmp 0x4001161	       403	path.c	FUNCTION_17
0x4001116	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       399	path.c	FUNCTION_17	ELSE_1	IF_2
0x400111a	        0x488b4008	                mov rax, qword [rax + 8]	       399	path.c	FUNCTION_17	ELSE_1	IF_2
0x400111e	          0x4885c0	                           test rax, rax	       399	path.c	FUNCTION_17	ELSE_1	IF_2
0x4001121	            0x7519	                           jne 0x400113c	       399	path.c	FUNCTION_17	ELSE_1	IF_2
0x4001123	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       400	path.c	FUNCTION_17	ELSE_1	IF_2
0x4001127	        0x488b5008	                mov rdx, qword [rax + 8]	       400	path.c	FUNCTION_17	ELSE_1	IF_2
0x400112b	        0x488b45f8	                mov rax, qword [rbp - 8]	       400	path.c	FUNCTION_17	ELSE_1	IF_2
0x400112f	          0x4889d6	                            mov rsi, rdx	       400	path.c	FUNCTION_17	ELSE_1	IF_2
0x4001132	          0x4889c7	                            mov rdi, rax	       400	path.c	FUNCTION_17	ELSE_1	IF_2
0x4001135	      0xe80ff1ffff	                  call sym.strbuf_addstr	       400	path.c	FUNCTION_17	ELSE_1	IF_2
0x400113a	            0xeb25	                           jmp 0x4001161	       403	path.c	FUNCTION_17
0x400113c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       402	path.c	FUNCTION_17	CALL_3
0x4001140	        0x488b5008	                mov rdx, qword [rax + 8]	       402	path.c	FUNCTION_17	CALL_3
0x4001144	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       402	path.c	FUNCTION_17	CALL_3
0x4001148	        0x488b45f8	                mov rax, qword [rbp - 8]	       402	path.c	FUNCTION_17	CALL_3
0x400114c	          0x4889d1	                            mov rcx, rdx	       402	path.c	FUNCTION_17	CALL_3
0x400114f	      0xba00000000	                              mov edx, 0	       402	path.c	FUNCTION_17	CALL_3
0x4001154	          0x4889c7	                            mov rdi, rax	       402	path.c	FUNCTION_17	CALL_3
0x4001157	      0xb800000000	                              mov eax, 0	       402	path.c	FUNCTION_17	CALL_3
0x400115c	      0xe800000000	                          call 0x4001161	       402	path.c	FUNCTION_17	CALL_3
0x4001161	              0x90	                                     nop	       403	path.c	FUNCTION_17
0x4001162	              0xc9	                                   leave	       403	path.c	FUNCTION_17
0x4001163	              0xc3	                                     ret	       403	path.c	FUNCTION_17
longest_ancestor_length	DO,0:functions,0:SWITCH,0:ELSE,2:IF,4:WHILE,0:CALL,3:FOR,1	68
0x4003475	              0x55	                                push rbp	      1186	path.c	FUNCTION_49
0x4003476	          0x4889e5	                            mov rbp, rsp	      1186	path.c	FUNCTION_49
0x4003479	        0x4883ec30	                           sub rsp, 0x30	      1186	path.c	FUNCTION_49
0x400347d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1186	path.c	FUNCTION_49
0x4003481	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1186	path.c	FUNCTION_49
0x4003485	    0xc745f0ffffff	     mov dword [rbp - 0x10], 0xffffffff 	      1187	path.c	FUNCTION_49
0x400348c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1189	path.c	FUNCTION_49	IF_1	CALL_1
0x4003490	      0xbe00000000	                              mov esi, 0	      1189	path.c	FUNCTION_49	IF_1	CALL_1
0x4003495	          0x4889c7	                            mov rdi, rax	      1189	path.c	FUNCTION_49	IF_1	CALL_1
0x4003498	      0xe800000000	                          call 0x400349d	      1189	path.c	FUNCTION_49	IF_1	CALL_1
0x400349d	            0x85c0	                           test eax, eax	      1189	path.c	FUNCTION_49	IF_1	CALL_1
0x400349f	            0x750a	                           jne 0x40034ab	      1189	path.c	FUNCTION_49	IF_1	CALL_1
0x40034a1	      0xb8ffffffff	                     mov eax, 0xffffffff	      1190	path.c	FUNCTION_49	IF_1
0x40034a6	      0xe9ab000000	                           jmp 0x4003556	      1190	path.c	FUNCTION_49	IF_1
0x40034ab	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1192	path.c	FUNCTION_49	FOR_1
0x40034b2	      0xe98a000000	                           jmp 0x4003541	      1192	path.c	FUNCTION_49	FOR_1
0x40034b7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1193	path.c	FUNCTION_49	FOR_1
0x40034bb	          0x488b00	                    mov rax, qword [rax]	      1193	path.c	FUNCTION_49	FOR_1
0x40034be	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1193	path.c	FUNCTION_49	FOR_1
0x40034c1	          0x4863d2	                         movsxd rdx, edx	      1193	path.c	FUNCTION_49	FOR_1
0x40034c4	        0x48c1e204	                              shl rdx, 4	      1193	path.c	FUNCTION_49	FOR_1
0x40034c8	          0x4801d0	                            add rax, rdx	      1193	path.c	FUNCTION_49	FOR_1
0x40034cb	          0x488b00	                    mov rax, qword [rax]	      1193	path.c	FUNCTION_49	FOR_1
0x40034ce	        0x488945f8	                mov qword [rbp - 8], rax	      1193	path.c	FUNCTION_49	FOR_1
0x40034d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1194	path.c	FUNCTION_49	FOR_1	CALL_2
0x40034d6	          0x4889c7	                            mov rdi, rax	      1194	path.c	FUNCTION_49	FOR_1	CALL_2
0x40034d9	      0xe800000000	                          call 0x40034de	      1194	path.c	FUNCTION_49	FOR_1	CALL_2
0x40034de	          0x8945f4	              mov dword [rbp - 0xc], eax	      1194	path.c	FUNCTION_49	FOR_1	CALL_2
0x40034e1	        0x837df401	                cmp dword [rbp - 0xc], 1	      1196	path.c	FUNCTION_49	FOR_1	IF_2
0x40034e5	            0x7514	                           jne 0x40034fb	      1196	path.c	FUNCTION_49	FOR_1	IF_2
0x40034e7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1196	path.c	FUNCTION_49	FOR_1	IF_2
0x40034eb	           0xfb600	                   movzx eax, byte [rax]	      1196	path.c	FUNCTION_49	FOR_1	IF_2
0x40034ee	            0x3c2f	                            cmp al, 0x2f	      1196	path.c	FUNCTION_49	FOR_1	IF_2
0x40034f0	            0x7509	                           jne 0x40034fb	      1196	path.c	FUNCTION_49	FOR_1	IF_2
0x40034f2	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1197	path.c	FUNCTION_49	FOR_1	IF_2
0x40034f9	            0xeb31	                           jmp 0x400352c	      1197	path.c	FUNCTION_49	FOR_1	IF_2
0x40034fb	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x40034fe	          0x4863d0	                         movsxd rdx, eax	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x4003501	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x4003505	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x4003509	          0x4889ce	                            mov rsi, rcx	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x400350c	          0x4889c7	                            mov rdi, rax	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x400350f	      0xe800000000	                          call 0x4003514	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x4003514	            0x85c0	                           test eax, eax	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x4003516	            0x7524	                           jne 0x400353c	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x4003518	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x400351b	          0x4863d0	                         movsxd rdx, eax	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x400351e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x4003522	          0x4801d0	                            add rax, rdx	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x4003525	           0xfb600	                   movzx eax, byte [rax]	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x4003528	            0x3c2f	                            cmp al, 0x2f	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x400352a	            0x7510	                           jne 0x400353c	      1198	path.c	FUNCTION_49	FOR_1	ELSE_1	IF_3	CALL_3
0x400352c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1203	path.c	FUNCTION_49	FOR_1	IF_4
0x400352f	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1203	path.c	FUNCTION_49	FOR_1	IF_4
0x4003532	            0x7e09	                           jle 0x400353d	      1203	path.c	FUNCTION_49	FOR_1	IF_4
0x4003534	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1204	path.c	FUNCTION_49	FOR_1	IF_4
0x4003537	          0x8945f0	             mov dword [rbp - 0x10], eax	      1204	path.c	FUNCTION_49	FOR_1	IF_4
0x400353a	            0xeb01	                           jmp 0x400353d	      1204	path.c	FUNCTION_49	FOR_1	IF_4
0x400353c	              0x90	                                     nop	      1201	path.c	FUNCTION_49	FOR_1	ELSE_2
0x400353d	        0x8345ec01	               add dword [rbp - 0x14], 1	      1192	path.c	FUNCTION_49	FOR_1
0x4003541	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1192	path.c	FUNCTION_49	FOR_1
0x4003545	          0x8b5008	                mov edx, dword [rax + 8]	      1192	path.c	FUNCTION_49	FOR_1
0x4003548	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1192	path.c	FUNCTION_49	FOR_1
0x400354b	            0x39c2	                            cmp edx, eax	      1192	path.c	FUNCTION_49	FOR_1
0x400354d	     0xf8764ffffff	                            ja 0x40034b7	      1192	path.c	FUNCTION_49	FOR_1
0x4003553	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1207	path.c	FUNCTION_49
0x4003556	              0xc9	                                   leave	      1208	path.c	FUNCTION_49
0x4003557	              0xc3	                                     ret	      1208	path.c	FUNCTION_49
