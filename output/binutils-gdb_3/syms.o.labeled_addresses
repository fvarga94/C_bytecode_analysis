_bfd_stab_section_find_nearest_line	functions,0:IF,49:FOR,4:CALL,49:DO,0:ELSE,7:WHILE,1:SWITCH,2	785
0x4000570	            0x4157	                                push r15	       933	syms.c	ELSE_2	FUNCTION_13
0x4000572	            0x4156	                                push r14	       933	syms.c	ELSE_2	FUNCTION_13
0x4000574	          0x4989d7	                            mov r15, rdx	       933	syms.c	ELSE_2	FUNCTION_13
0x4000577	            0x4155	                                push r13	       933	syms.c	ELSE_2	FUNCTION_13
0x4000579	            0x4154	                                push r12	       933	syms.c	ELSE_2	FUNCTION_13
0x400057b	          0x4989fe	                            mov r14, rdi	       933	syms.c	ELSE_2	FUNCTION_13
0x400057e	              0x55	                                push rbp	       933	syms.c	ELSE_2	FUNCTION_13
0x400057f	              0x53	                                push rbx	       933	syms.c	ELSE_2	FUNCTION_13
0x4000580	          0x4989cd	                            mov r13, rcx	       933	syms.c	ELSE_2	FUNCTION_13
0x4000583	        0x4883ec68	                           sub rsp, 0x68	       933	syms.c	ELSE_2	FUNCTION_13
0x4000587	          0x488b07	                    mov rax, qword [rdi]	       945	syms.c	ELSE_2	FUNCTION_13	CALL_1
0x400058a	    0x41c700000000	                       mov dword [r8], 0	       944	syms.c	ELSE_2	FUNCTION_13
0x4000591	      0x4c89442428	              mov qword [rsp + 0x28], r8	       933	syms.c	ELSE_2	FUNCTION_13
0x4000596	      0x4c894c2430	              mov qword [rsp + 0x30], r9	       933	syms.c	ELSE_2	FUNCTION_13
0x400059b	          0x498901	                     mov qword [r9], rax	       945	syms.c	ELSE_2	FUNCTION_13	CALL_1
0x400059e	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       946	syms.c	ELSE_2	FUNCTION_13
0x40005a6	    0x48c700000000	                      mov qword [rax], 0	       946	syms.c	ELSE_2	FUNCTION_13
0x40005ad	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       947	syms.c	ELSE_2	FUNCTION_13
0x40005b5	    0xc70000000000	                      mov dword [rax], 0	       947	syms.c	ELSE_2	FUNCTION_13
0x40005bb	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	       969	syms.c	ELSE_2	FUNCTION_13
0x40005c3	          0x488b28	                    mov rbp, qword [rax]	       969	syms.c	ELSE_2	FUNCTION_13
0x40005c6	          0x4885ed	                           test rbp, rbp	       970	syms.c	ELSE_2	FUNCTION_13	IF_1
0x40005c9	     0xf84b3030000	                            je 0x4000982	       970	syms.c	ELSE_2	FUNCTION_13	IF_1
0x40005cf	      0x48837d0000	                      cmp qword [rbp], 0	       972	syms.c	ELSE_2	FUNCTION_13	IF_1	IF_2
0x40005d4	     0xf84a4010000	                            je 0x400077e	       972	syms.c	ELSE_2	FUNCTION_13	IF_1	IF_2
0x40005da	        0x488b4508	                mov rax, qword [rbp + 8]	       972	syms.c	ELSE_2	FUNCTION_13	IF_1	IF_2
0x40005de	          0x4885c0	                           test rax, rax	       972	syms.c	ELSE_2	FUNCTION_13	IF_1	IF_2
0x40005e1	     0xf8497010000	                            je 0x400077e	       972	syms.c	ELSE_2	FUNCTION_13	IF_1	IF_2
0x40005e7	        0x488b5840	            mov rbx, qword [rax + 0x40] 	       981	syms.c	ELSE_2	FUNCTION_13	IF_1
0x40005eb	          0x4885db	                           test rbx, rbx	       983	syms.c	ELSE_2	FUNCTION_13	IF_1
0x40005ee	      0x48895c2420	             mov qword [rsp + 0x20], rbx	       981	syms.c	ELSE_2	FUNCTION_13	IF_1
0x40005f3	     0xf8437030000	                            je 0x4000930	       983	syms.c	ELSE_2	FUNCTION_13	IF_1
0x40005f9	        0x4d036f28	             add r13, qword [r15 + 0x28]	      1272	syms.c	FUNCTION_13	ELSE_2	CALL_36
0x40005fd	        0x4c8b7d30	            mov r15, qword [rbp + 0x30] 	      1275	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000601	          0x4d85ff	                           test r15, r15	      1275	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000604	            0x740a	                            je 0x4000610	      1275	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000606	        0x4c3b6d38	            cmp r13, qword [rbp + 0x38] 	      1276	syms.c	FUNCTION_13	ELSE_2	IF_35
0x400060a	     0xf8330030000	                           jae 0x4000940	      1276	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000610	          0x8b4528	            mov eax, dword [rbp + 0x28] 	      1294	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x4000613	            0x31ff	                            xor edi, edi	      1293	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x4000615	          0x8d50ff	                      lea edx, [rax - 1]	      1294	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x4000618	          0x4863d2	                         movsxd rdx, edx	      1294	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x400061b	          0x4839d7	                            cmp rdi, rdx	      1295	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x400061e	     0xf845a010000	                            je 0x400077e	      1295	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000624	        0x488d0417	                    lea rax, [rdi + rdx]	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000628	          0x4889c1	                            mov rcx, rax	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x400062b	        0x48c1e93f	                           shr rcx, 0x3f	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x400062f	          0x4801c8	                            add rax, rcx	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000632	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      1298	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x4000636	          0x48d1f8	                              sar rax, 1	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000639	          0x4889c6	                            mov rsi, rax	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x400063c	         0xf1f4000	                         nop dword [rax]	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000640	        0x4c8d3c40	                  lea r15, [rax + rax*2]	      1298	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x4000644	        0x49c1e704	                              shl r15, 4	      1298	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x4000648	          0x4901cf	                            add r15, rcx	      1298	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x400064b	          0x4d3b2f	                    cmp r13, qword [r15]	      1298	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x400064e	            0x7220	                            jb 0x4000670	      1298	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x4000650	      0x488d444003	              lea rax, [rax + rax*2 + 3]	      1299	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x4000655	        0x48c1e004	                              shl rax, 4	      1299	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x4000659	        0x4c3b2c01	              cmp r13, qword [rcx + rax]	      1299	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x400065d	     0xf8235010000	                            jb 0x4000798	      1299	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x4000663	        0x488d7e01	                      lea rdi, [rsi + 1]	      1308	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	ELSE_6
0x4000667	            0xebb2	                           jmp 0x400061b	      1308	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	ELSE_6
0x4000669	     0xf1f80000000	                         nop dword [rax]	      1308	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	ELSE_6
0x4000670	          0x4839c7	                            cmp rdi, rax	      1295	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000673	          0x4889c2	                            mov rdx, rax	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000676	     0xf8402010000	                            je 0x400077e	      1295	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x400067c	        0x488d0417	                    lea rax, [rdi + rdx]	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000680	          0x4889c6	                            mov rsi, rax	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000683	        0x48c1ee3f	                           shr rsi, 0x3f	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000687	          0x4801f0	                            add rax, rsi	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x400068a	          0x48d1f8	                              sar rax, 1	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x400068d	          0x4889c6	                            mov rsi, rax	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000690	            0xebae	                           jmp 0x4000640	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000692	    0x660f1f440000	                    nop word [rax + rax]	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000698	          0x4989ef	                            mov r15, rbp	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x400069b	          0x4c89f5	                            mov rbp, r14	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x400069e	          0x4989de	                            mov r14, rbx	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x40006a1	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1384	syms.c	FUNCTION_13	ELSE_2
0x40006a6	    0xc70001000000	                      mov dword [rax], 1	      1384	syms.c	FUNCTION_13	ELSE_2
0x40006ac	      0x488b442408	                mov rax, qword [rsp + 8]	      1386	syms.c	FUNCTION_13	ELSE_2	IF_45	CALL_41
0x40006b1	          0x4885c0	                           test rax, rax	      1386	syms.c	FUNCTION_13	ELSE_2	IF_45	CALL_41
0x40006b4	     0xf84b6020000	                            je 0x4000970	      1386	syms.c	FUNCTION_13	ELSE_2	IF_45	CALL_41
0x40006ba	          0x80382f	                    cmp byte [rax], 0x2f	      1387	syms.c	FUNCTION_13	ELSE_2	IF_45
0x40006bd	     0xf84ad020000	                            je 0x4000970	      1387	syms.c	FUNCTION_13	ELSE_2	IF_45
0x40006c3	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      1387	syms.c	FUNCTION_13	ELSE_2	IF_45
0x40006c9	     0xf84a1020000	                            je 0x4000970	      1387	syms.c	FUNCTION_13	ELSE_2	IF_45
0x40006cf	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1393	syms.c	FUNCTION_13	ELSE_2	ELSE_7	CALL_42
0x40006d4	      0xe800000000	                          call 0x40006d9	      1393	syms.c	FUNCTION_13	ELSE_2	ELSE_7	CALL_42
0x40006d9	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	      1394	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46
0x40006dd	          0x4889c3	                            mov rbx, rax	      1393	syms.c	FUNCTION_13	ELSE_2	ELSE_7	CALL_42
0x40006e0	          0x4885ff	                           test rdi, rdi	      1394	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46
0x40006e3	            0x7415	                            je 0x40006fa	      1394	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46
0x40006e5	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1395	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_43
0x40006ea	          0x4889c2	                            mov rdx, rax	      1395	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_43
0x40006ed	      0xe800000000	                          call 0x40006f2	      1395	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_43
0x40006f2	            0x85c0	                           test eax, eax	      1395	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_43
0x40006f4	     0xf8445050000	                            je 0x4000c3f	      1395	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_43
0x40006fa	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1403	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_45
0x40006ff	      0xe800000000	                          call 0x4000704	      1403	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_45
0x4000704	        0x4c8d6801	                      lea r13, [rax + 1]	      1403	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_45
0x4000708	          0x4c89f7	                            mov rdi, r14	      1404	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_46
0x400070b	        0x4a8d342b	                    lea rsi, [rbx + r13]	      1404	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_46
0x400070f	      0xe800000000	                          call 0x4000714	      1404	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_46
0x4000714	          0x4885c0	                           test rax, rax	      1405	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	IF_47
0x4000717	        0x48894550	            mov qword [rbp + 0x50], rax 	      1404	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_46
0x400071b	     0xf840d050000	                            je 0x4000c2e	      1405	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	IF_47
0x4000721	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_27	CALL_3
0x4000726	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_27	CALL_3
0x4000729	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_27	CALL_3
0x400072c	      0xe800000000	                          call 0x4000731	        53	string3.h	FUNCTION_27	CALL_3
0x4000731	        0x48035d50	             add rbx, qword [rbp + 0x50]	        53	string3.h	FUNCTION_27	CALL_3
0x4000735	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_27	CALL_3
0x400073a	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_27	CALL_3
0x400073d	          0x4889df	                            mov rdi, rbx	        53	string3.h	FUNCTION_27	CALL_3
0x4000740	      0xe800000000	                          call 0x4000745	        53	string3.h	FUNCTION_27	CALL_3
0x4000745	        0x488b4550	            mov rax, qword [rbp + 0x50] 	      1411	syms.c	FUNCTION_13	ELSE_2	ELSE_7
0x4000749	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      1411	syms.c	FUNCTION_13	ELSE_2	ELSE_7
0x400074e	          0x488903	                    mov qword [rbx], rax	      1411	syms.c	FUNCTION_13	ELSE_2	ELSE_7
0x4000751	        0x498b5f28	            mov rbx, qword [r15 + 0x28] 	      1414	syms.c	FUNCTION_13	ELSE_2	IF_48
0x4000755	          0x4885db	                           test rbx, rbx	      1414	syms.c	FUNCTION_13	ELSE_2	IF_48
0x4000758	            0x7424	                            je 0x400077e	      1414	syms.c	FUNCTION_13	ELSE_2	IF_48
0x400075a	      0xbe3a000000	                           mov esi, 0x3a	      1421	syms.c	FUNCTION_13	ELSE_2	IF_48	CALL_49
0x400075f	          0x4889df	                            mov rdi, rbx	      1421	syms.c	FUNCTION_13	ELSE_2	IF_48	CALL_49
0x4000762	      0xe800000000	                          call 0x4000767	      1421	syms.c	FUNCTION_13	ELSE_2	IF_48	CALL_49
0x4000767	          0x4885c0	                           test rax, rax	      1422	syms.c	FUNCTION_13	ELSE_2	IF_48	IF_49
0x400076a	            0x7407	                            je 0x4000773	      1422	syms.c	FUNCTION_13	ELSE_2	IF_48	IF_49
0x400076c	          0xc60000	                       mov byte [rax], 0	      1423	syms.c	FUNCTION_13	ELSE_2	IF_48	IF_49
0x400076f	        0x498b5f28	            mov rbx, qword [r15 + 0x28] 	      1423	syms.c	FUNCTION_13	ELSE_2	IF_48	IF_49
0x4000773	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	      1425	syms.c	FUNCTION_13	ELSE_2	IF_48
0x400077b	          0x488918	                    mov qword [rax], rbx	      1425	syms.c	FUNCTION_13	ELSE_2	IF_48
0x400077e	      0xb801000000	                              mov eax, 1	      1428	syms.c	FUNCTION_13	ELSE_2
0x4000783	        0x4883c468	                           add rsp, 0x68	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000787	              0x5b	                                 pop rbx	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000788	              0x5d	                                 pop rbp	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000789	            0x415c	                                 pop r12	      1429	syms.c	FUNCTION_13	ELSE_2
0x400078b	            0x415d	                                 pop r13	      1429	syms.c	FUNCTION_13	ELSE_2
0x400078d	            0x415e	                                 pop r14	      1429	syms.c	FUNCTION_13	ELSE_2
0x400078f	            0x415f	                                 pop r15	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000791	              0xc3	                                     ret	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000792	    0x660f1f440000	                    nop word [rax + rax]	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000798	        0x498b4708	                mov rax, qword [r15 + 8]	      1314	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x400079c	        0x4c8d600c	                    lea r12, [rax + 0xc]	      1314	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x40007a0	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      1315	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x40007a4	      0x4889442408	                mov qword [rsp + 8], rax	      1315	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x40007a9	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      1318	syms.c	FUNCTION_13	ELSE_2
0x40007ad	        0x4d3b6738	            cmp r12, qword [r15 + 0x38] 	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x40007b1	      0x4889442418	             mov qword [rsp + 0x18], rax	      1318	syms.c	FUNCTION_13	ELSE_2
0x40007b6	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      1319	syms.c	FUNCTION_13	ELSE_2
0x40007ba	      0x4889442438	             mov qword [rsp + 0x38], rax	      1319	syms.c	FUNCTION_13	ELSE_2
0x40007bf	     0xf83dcfeffff	                           jae 0x40006a1	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x40007c5	          0x4c89f3	                            mov rbx, r14	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x40007c8	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x40007d0	          0x4989ee	                            mov r14, rbp	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x40007d3	    0xc70424000000	                      mov dword [rsp], 0	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x40007da	          0x4c89fd	                            mov rbp, r15	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x40007dd	          0x4d89e7	                            mov r15, r12	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x40007e0	            0xeb38	                           jmp 0x400081a	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x40007e2	    0x660f1f440000	                    nop word [rax + rax]	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x40007e8	            0x3c64	                            cmp al, 0x64	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x40007ea	     0xf8480000000	                            je 0x4000870	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x40007f0	            0x3c84	                            cmp al, 0x84	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x40007f2	     0xf85a0000000	                           jne 0x4000898	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x40007f8	        0x488b4308	                mov rax, qword [rbx + 8]	      1334	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	CALL_37
0x40007fc	        0x498d7f08	                      lea rdi, [r15 + 8]	      1334	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	CALL_37
0x4000800	          0xff5038	                 call qword [rax + 0x38]	      1334	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	CALL_37
0x4000803	          0x4939c5	                            cmp r13, rax	      1335	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39
0x4000806	     0xf83b4000000	                           jae 0x40008c0	      1335	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39
0x400080c	        0x4983c70c	                            add r15, 0xc	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x4000810	        0x4c397d38	            cmp qword [rbp + 0x38], r15 	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x4000814	     0xf867efeffff	                           jbe 0x4000698	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x400081a	      0x410fb64704	               movzx eax, byte [r15 + 4]	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x400081f	            0x3c46	                            cmp al, 0x46	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000821	            0x740a	                            je 0x400082d	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000823	            0x77c3	                            ja 0x40007e8	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000825	            0x3c24	                            cmp al, 0x24	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000827	            0x7447	                            je 0x4000870	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000829	            0x3c44	                            cmp al, 0x44	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x400082b	            0x75df	                           jne 0x400080c	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x400082d	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000832	            0x747c	                            je 0x40008b0	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000834	        0x4c8b6500	                    mov r12, qword [rbp]	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000838	        0x488b4308	                mov rax, qword [rbx + 8]	      1351	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	CALL_39
0x400083c	        0x498d7f08	                      lea rdi, [r15 + 8]	      1351	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	CALL_39
0x4000840	          0xff5038	                 call qword [rax + 0x38]	      1351	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	CALL_39
0x4000843	          0x4901c4	                            add r12, rax	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000846	          0x8b0424	                    mov eax, dword [rsp]	      1356	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000849	            0x85c0	                           test eax, eax	      1356	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x400084b	     0xf84af000000	                            je 0x4000900	      1356	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000851	          0x4d39e5	                            cmp r13, r12	      1356	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000854	     0xf83a6000000	                           jae 0x4000900	      1356	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x400085a	          0x4d39e5	                            cmp r13, r12	      1367	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_42
0x400085d	     0xf8235feffff	                            jb 0x4000698	      1367	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_42
0x4000863	    0xc70424010000	                      mov dword [rsp], 1	      1369	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x400086a	            0xeba0	                           jmp 0x400080c	      1369	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x400086c	         0xf1f4000	                         nop dword [rax]	      1369	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000870	          0x8b0424	                    mov eax, dword [rsp]	      1374	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_43
0x4000873	         0xb442410	              or eax, dword [rsp + 0x10]	      1374	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_43
0x4000877	     0xf851bfeffff	                           jne 0x4000698	      1374	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_43
0x400087d	    0xc74424100100	               mov dword [rsp + 0x10], 1	      1376	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000885	    0xc70424000000	                      mov dword [rsp], 0	      1376	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x400088c	      0xe97bffffff	                           jmp 0x400080c	      1376	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000891	     0xf1f80000000	                         nop dword [rax]	      1376	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000898	            0x3c48	                            cmp al, 0x48	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x400089a	     0xf856cffffff	                           jne 0x400080c	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x40008a0	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x40008a5	            0x758d	                           jne 0x4000834	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x40008a7	    0x660f1f840000	                    nop word [rax + rax]	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x40008b0	          0x4531e4	                          xor r12d, r12d	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x40008b3	      0xe980ffffff	                           jmp 0x4000838	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x40008b8	     0xf1f84000000	                   nop dword [rax + rax]	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x40008c0	        0x488b4308	                mov rax, qword [rbx + 8]	      1337	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	CALL_38
0x40008c4	          0x4c89ff	                            mov rdi, r15	      1337	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	CALL_38
0x40008c7	          0xff5038	                 call qword [rax + 0x38]	      1337	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	CALL_38
0x40008ca	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1337	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	CALL_38
0x40008cf	          0x4801d0	                            add rax, rdx	      1337	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	CALL_38
0x40008d2	          0x4889c1	                            mov rcx, rax	      1337	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	CALL_38
0x40008d5	      0x4889442408	                mov qword [rsp + 8], rax	      1337	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	CALL_38
0x40008da	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1338	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x40008df	        0x49034618	             add rax, qword [r14 + 0x18]	      1338	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x40008e3	          0x4839c1	                            cmp rcx, rax	      1338	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x40008e6	            0x7378	                           jae 0x4000960	      1338	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x40008e8	          0x4839ca	                            cmp rdx, rcx	      1338	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x40008eb	            0x7773	                            ja 0x4000960	      1338	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x40008ed	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	      1340	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39
0x40008f5	    0xc70000000000	                      mov dword [rax], 0	      1340	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39
0x40008fb	      0xe90cffffff	                           jmp 0x400080c	      1340	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39
0x4000900	        0x488b4308	                mov rax, qword [rbx + 8]	      1358	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41	CALL_40
0x4000904	        0x498d7f06	                      lea rdi, [r15 + 6]	      1358	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41	CALL_40
0x4000908	          0xff5050	                 call qword [rax + 0x50]	      1358	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41	CALL_40
0x400090b	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	      1358	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41	CALL_40
0x4000913	            0x8901	                    mov dword [rcx], eax	      1358	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41	CALL_40
0x4000915	      0x488b442408	                mov rax, qword [rsp + 8]	      1363	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x400091a	        0x4d897e40	             mov qword [r14 + 0x40], r15	      1361	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x400091e	        0x4d896638	             mov qword [r14 + 0x38], r12	      1362	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000922	        0x49896e30	             mov qword [r14 + 0x30], rbp	      1364	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000926	        0x49894648	             mov qword [r14 + 0x48], rax	      1363	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x400092a	      0xe92bffffff	                           jmp 0x400085a	      1363	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x400092f	              0x90	                                     nop	      1363	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000930	        0x488b4038	            mov rax, qword [rax + 0x38] 	       983	syms.c	ELSE_2	FUNCTION_13	IF_1
0x4000934	      0x4889442420	             mov qword [rsp + 0x20], rax	       983	syms.c	ELSE_2	FUNCTION_13	IF_1
0x4000939	      0xe9bbfcffff	                           jmp 0x40005f9	       983	syms.c	ELSE_2	FUNCTION_13	IF_1
0x400093e	            0x6690	                                     nop	       983	syms.c	ELSE_2	FUNCTION_13	IF_1
0x4000940	        0x4d3b6f30	            cmp r13, qword [r15 + 0x30] 	      1277	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000944	     0xf83c6fcffff	                           jae 0x4000610	      1277	syms.c	FUNCTION_13	ELSE_2	IF_35
0x400094a	        0x488b4548	            mov rax, qword [rbp + 0x48] 	      1281	syms.c	FUNCTION_13	ELSE_2	IF_35
0x400094e	        0x4c8b6540	            mov r12, qword [rbp + 0x40] 	      1279	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000952	      0x4889442408	                mov qword [rsp + 8], rax	      1281	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000957	      0xe94dfeffff	                           jmp 0x40007a9	      1281	syms.c	FUNCTION_13	ELSE_2	IF_35
0x400095c	         0xf1f4000	                         nop dword [rax]	      1281	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000960	    0x48c744240800	                  mov qword [rsp + 8], 0	      1339	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x4000969	      0xe97fffffff	                           jmp 0x40008ed	      1339	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x400096e	            0x6690	                                     nop	      1339	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x4000970	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1388	syms.c	FUNCTION_13	ELSE_2	IF_45
0x4000975	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1388	syms.c	FUNCTION_13	ELSE_2	IF_45
0x400097a	          0x488918	                    mov qword [rax], rbx	      1388	syms.c	FUNCTION_13	ELSE_2	IF_45
0x400097d	      0xe9cffdffff	                           jmp 0x4000751	      1388	syms.c	FUNCTION_13	ELSE_2	IF_45
0x4000982	          0x4889f3	                            mov rbx, rsi	      1388	syms.c	FUNCTION_13	ELSE_2	IF_45
0x4000985	      0xbe58000000	                           mov esi, 0x58	       993	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_2
0x400098a	      0xe800000000	                          call 0x400098f	       993	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_2
0x400098f	          0x4885c0	                           test rax, rax	       994	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_3
0x4000992	          0x4889c5	                            mov rbp, rax	       993	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_2
0x4000995	     0xf8493020000	                            je 0x4000c2e	       994	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_3
0x400099b	      0xbe00000000	                              mov esi, 0	      1001	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_3
0x40009a0	          0x4c89f7	                            mov rdi, r14	      1001	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_3
0x40009a3	      0xe800000000	                          call 0x40009a8	      1001	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_3
0x40009a8	      0xbe00000000	                              mov esi, 0	      1002	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_4
0x40009ad	        0x48894500	                    mov qword [rbp], rax	      1001	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_3
0x40009b1	          0x4c89f7	                            mov rdi, r14	      1002	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_4
0x40009b4	      0xe800000000	                          call 0x40009b9	      1002	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_4
0x40009b9	          0x4885c0	                           test rax, rax	      1004	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4
0x40009bc	          0x4889c1	                            mov rcx, rax	      1002	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_4
0x40009bf	        0x48894508	                mov qword [rbp + 8], rax	      1002	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_4
0x40009c3	        0x488b7500	                    mov rsi, qword [rbp]	      1004	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4
0x40009c7	     0xf8490020000	                            je 0x4000c5d	      1004	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4
0x40009cd	          0x4885f6	                           test rsi, rsi	      1004	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4
0x40009d0	     0xf8487020000	                            je 0x4000c5d	      1004	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4
0x40009d6	        0x488b4640	            mov rax, qword [rsi + 0x40] 	      1019	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x40009da	          0x4885c0	                           test rax, rax	      1021	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x40009dd	            0x7504	                           jne 0x40009e3	      1021	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x40009df	        0x488b4638	            mov rax, qword [rsi + 0x38] 	      1021	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x40009e3	    0x48baabaaaaaa	          movabs rdx, 0xaaaaaaaaaaaaaaab	      1022	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x40009ed	          0x48f7e2	                                 mul rdx	      1022	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x40009f0	        0x48c1ea03	                              shr rdx, 3	      1022	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x40009f4	        0x488d0452	                  lea rax, [rdx + rdx*2]	      1022	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x40009f8	        0x48c1e002	                              shl rax, 2	      1022	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x40009fc	        0x48890424	                    mov qword [rsp], rax	      1022	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000a00	        0x488b4140	            mov rax, qword [rcx + 0x40] 	      1023	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000a04	          0x4885c0	                           test rax, rax	      1025	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000a07	      0x4889442420	             mov qword [rsp + 0x20], rax	      1023	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000a0c	            0x7509	                           jne 0x4000a17	      1025	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000a0e	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      1025	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000a12	      0x4889442420	             mov qword [rsp + 0x20], rax	      1025	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000a17	        0x4c8b2424	                    mov r12, qword [rsp]	      1027	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_7
0x4000a1b	          0x4c89f7	                            mov rdi, r14	      1027	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_7
0x4000a1e	          0x4c89e6	                            mov rsi, r12	      1027	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_7
0x4000a21	      0xe800000000	                          call 0x4000a26	      1027	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_7
0x4000a26	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1028	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_8
0x4000a2b	        0x48894510	            mov qword [rbp + 0x10], rax 	      1027	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_7
0x4000a2f	          0x4c89f7	                            mov rdi, r14	      1028	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_8
0x4000a32	      0xe800000000	                          call 0x4000a37	      1028	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_8
0x4000a37	          0x4885c0	                           test rax, rax	      1029	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_6
0x4000a3a	        0x48894518	            mov qword [rbp + 0x18], rax 	      1028	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_8
0x4000a3e	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1029	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_6
0x4000a42	     0xf84e6010000	                            je 0x4000c2e	      1029	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_6
0x4000a48	          0x4885d2	                           test rdx, rdx	      1029	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_6
0x4000a4b	     0xf84dd010000	                            je 0x4000c2e	      1029	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_6
0x4000a51	        0x488b7500	                    mov rsi, qword [rbp]	      1032	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_9
0x4000a55	            0x31c9	                            xor ecx, ecx	      1032	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_9
0x4000a57	          0x4d89e0	                             mov r8, r12	      1032	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_9
0x4000a5a	          0x4c89f7	                            mov rdi, r14	      1032	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_9
0x4000a5d	      0xe800000000	                          call 0x4000a62	      1032	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_9
0x4000a62	            0x85c0	                           test eax, eax	      1032	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_9
0x4000a64	     0xf84c4010000	                            je 0x4000c2e	      1032	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_9
0x4000a6a	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000a6e	        0x488b7508	                mov rsi, qword [rbp + 8]	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000a72	            0x31c9	                            xor ecx, ecx	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000a74	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000a79	          0x4c89f7	                            mov rdi, r14	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000a7c	      0xe800000000	                          call 0x4000a81	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000a81	            0x85c0	                           test eax, eax	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000a83	     0xf84a5010000	                            je 0x4000c2e	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000a89	        0x488b7500	                    mov rsi, qword [rbp]	      1042	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_11
0x4000a8d	          0x4c89f7	                            mov rdi, r14	      1042	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_11
0x4000a90	      0xe800000000	                          call 0x4000a95	      1042	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_11
0x4000a95	          0x4885c0	                           test rax, rax	      1043	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_8
0x4000a98	          0x4989c4	                            mov r12, rax	      1042	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_11
0x4000a9b	     0xf888d010000	                            js 0x4000c2e	      1043	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_8
0x4000aa1	          0x4889c7	                            mov rdi, rax	      1045	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_12
0x4000aa4	      0xe800000000	                          call 0x4000aa9	      1045	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_12
0x4000aa9	          0x4885c0	                           test rax, rax	      1046	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_9
0x4000aac	          0x4989c0	                             mov r8, rax	      1045	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_12
0x4000aaf	            0x7509	                           jne 0x4000aba	      1046	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_9
0x4000ab1	          0x4d85e4	                           test r12, r12	      1046	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_9
0x4000ab4	     0xf8574010000	                           jne 0x4000c2e	      1046	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_9
0x4000aba	        0x488b7500	                    mov rsi, qword [rbp]	      1048	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_13
0x4000abe	          0x4c89c2	                             mov rdx, r8	      1048	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_13
0x4000ac1	          0x4889d9	                            mov rcx, rbx	      1048	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_13
0x4000ac4	          0x4c89f7	                            mov rdi, r14	      1048	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_13
0x4000ac7	      0x4c89442408	                 mov qword [rsp + 8], r8	      1048	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_13
0x4000acc	      0xe800000000	                          call 0x4000ad1	      1048	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_13
0x4000ad1	          0x4885c0	                           test rax, rax	      1050	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_10
0x4000ad4	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1050	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_10
0x4000ad9	     0xf8887020000	                            js 0x4000d66	      1050	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_10
0x4000adf	     0xf8473020000	                            je 0x4000d58	      1056	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12
0x4000ae5	          0x498b08	                     mov rcx, qword [r8]	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000ae8	          0x4885c9	                           test rcx, rcx	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000aeb	     0xf84bd010000	                            je 0x4000cae	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000af1	          0x4c89c2	                             mov rdx, r8	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000af4	    0x49b902000000	                 movabs r9, 0x2000000002	      1073	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000afe	          0x4989cc	                            mov r12, rcx	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000b01	      0x4c896c2410	             mov qword [rsp + 0x10], r13	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000b06	      0xe9d2000000	                           jmp 0x4000bdd	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000b0b	        0x4c394808	                 cmp qword [rax + 8], r9	      1073	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000b0f	     0xf85e1000000	                           jne 0x4000bf6	      1073	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000b15	      0x4883781000	               cmp qword [rax + 0x10], 0	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000b1a	     0xf85d6000000	                           jne 0x4000bf6	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000b20	      0xb8ffffffff	                     mov eax, 0xffffffff	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000b25	          0x4839c6	                            cmp rsi, rax	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000b28	     0xf85c8000000	                           jne 0x4000bf6	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000b2e	        0x498b4608	                mov rax, qword [r14 + 8]	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000b32	      0x498b5c2408	                mov rbx, qword [r12 + 8]	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000b37	          0x4c89f7	                            mov rdi, r14	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000b3a	      0x4889542440	             mov qword [rsp + 0x40], rdx	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000b3f	      0x4c89442438	              mov qword [rsp + 0x38], r8	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000b44	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000b49	        0x4c8b6838	            mov r13, qword [rax + 0x38] 	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000b4d	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000b51	      0x4889442408	                mov qword [rsp + 8], rax	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000b56	      0xe800000000	                          call 0x4000b5b	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000b5b	            0x89c7	                            mov edi, eax	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000b5d	        0x480faffb	                           imul rdi, rbx	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000b61	      0x48037c2408	                add rdi, qword [rsp + 8]	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000b66	          0x41ffd5	                                call r13	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000b69	      0x498b4c2418	            mov rcx, qword [r12 + 0x18] 	      1088	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000b6e	          0x4c89f7	                            mov rdi, r14	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000b71	        0x4c8b6d10	            mov r13, qword [rbp + 0x10] 	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000b75	        0x48234138	             and rax, qword [rcx + 0x38]	      1088	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000b79	          0x4889c3	                            mov rbx, rax	      1088	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000b7c	        0x498b0424	                    mov rax, qword [r12]	      1089	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000b80	          0x488b00	                    mov rax, qword [rax]	      1089	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000b83	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      1090	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000b87	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1090	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000b8b	        0x48034628	             add rax, qword [rsi + 0x28]	      1090	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000b8f	      0x4903442410	             add rax, qword [r12 + 0x10]	      1090	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000b94	      0x4d8b642408	                mov r12, qword [r12 + 8]	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000b99	          0x4801d8	                            add rax, rbx	      1090	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000b9c	      0x4889442408	                mov qword [rsp + 8], rax	      1090	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000ba1	        0x498b4608	                mov rax, qword [r14 + 8]	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000ba5	        0x488b5848	            mov rbx, qword [rax + 0x48] 	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000ba9	      0xe800000000	                          call 0x4000bae	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000bae	            0x89c6	                            mov esi, eax	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000bb0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000bb5	        0x490faff4	                           imul rsi, r12	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000bb9	          0x4c01ee	                            add rsi, r13	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000bbc	            0xffd3	                                call rbx	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000bbe	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000bc3	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000bc8	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000bcd	        0x4883c208	                              add rdx, 8	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000bd1	          0x4c8b22	                    mov r12, qword [rdx]	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000bd4	          0x4d85e4	                           test r12, r12	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000bd7	     0xf84cc000000	                            je 0x4000ca9	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000bdd	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      1068	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_13
0x4000be2	        0x488b7040	            mov rsi, qword [rax + 0x40] 	      1068	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_13
0x4000be6	          0x4885f6	                           test rsi, rsi	      1068	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_13
0x4000be9	            0x74e2	                            je 0x4000bcd	      1068	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_13
0x4000beb	          0x8b7804	                mov edi, dword [rax + 4]	      1071	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000bee	            0x85ff	                           test edi, edi	      1071	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000bf0	     0xf8415ffffff	                            je 0x4000b0b	      1071	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000bf6	      0xba05000000	                              mov edx, 5	      1079	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_16
0x4000bfb	      0xbe00000000	                              mov esi, 0	      1079	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_16
0x4000c00	      0xbf00000000	                              mov edi, 0	      1079	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_16
0x4000c05	        0x4c890424	                     mov qword [rsp], r8	      1079	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_16
0x4000c09	      0xe800000000	                          call 0x4000c0e	      1079	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_16
0x4000c0e	          0x4889c7	                            mov rdi, rax	      1078	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_15
0x4000c11	            0x31c0	                            xor eax, eax	      1078	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_15
0x4000c13	      0xe800000000	                          call 0x4000c18	      1078	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_15
0x4000c18	      0xbf05000000	                              mov edi, 5	      1080	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_17
0x4000c1d	      0xe800000000	                          call 0x4000c22	      1080	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_17
0x4000c22	        0x4c8b0424	                     mov r8, qword [rsp]	      1082	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_18
0x4000c26	          0x4c89c7	                             mov rdi, r8	      1082	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_18
0x4000c29	      0xe800000000	                          call 0x4000c2e	      1082	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_18
0x4000c2e	            0x31c0	                            xor eax, eax	      1083	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000c30	        0x4883c468	                           add rsp, 0x68	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000c34	              0x5b	                                 pop rbx	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000c35	              0x5d	                                 pop rbp	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000c36	            0x415c	                                 pop r12	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000c38	            0x415d	                                 pop r13	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000c3a	            0x415e	                                 pop r14	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000c3c	            0x415f	                                 pop r15	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000c3e	              0xc3	                                     ret	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000c3f	          0x4889df	                            mov rdi, rbx	      1396	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_44
0x4000c42	        0x48037d50	             add rdi, qword [rbp + 0x50]	      1396	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_44
0x4000c46	      0x488b742408	                mov rsi, qword [rsp + 8]	      1396	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_44
0x4000c4b	      0xe800000000	                          call 0x4000c50	      1396	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_44
0x4000c50	            0x85c0	                           test eax, eax	      1396	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_44
0x4000c52	     0xf85a2faffff	                           jne 0x40006fa	      1396	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_44
0x4000c58	      0xe9e8faffff	                           jmp 0x4000745	      1396	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_44
0x4000c5d	      0xbe00000000	                              mov esi, 0	      1007	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_5
0x4000c62	          0x4c89f7	                            mov rdi, r14	      1007	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_5
0x4000c65	      0xe800000000	                          call 0x4000c6a	      1007	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_5
0x4000c6a	      0xbe00000000	                              mov esi, 0	      1008	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_6
0x4000c6f	        0x48894500	                    mov qword [rbp], rax	      1007	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_5
0x4000c73	          0x4c89f7	                            mov rdi, r14	      1008	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_6
0x4000c76	      0xe800000000	                          call 0x4000c7b	      1008	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_6
0x4000c7b	          0x4885c0	                           test rax, rax	      1010	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000c7e	          0x4889c1	                            mov rcx, rax	      1008	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_6
0x4000c81	        0x48894508	                mov qword [rbp + 8], rax	      1008	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_6
0x4000c85	        0x488b7500	                    mov rsi, qword [rbp]	      1010	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000c89	            0x7409	                            je 0x4000c94	      1010	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000c8b	          0x4885f6	                           test rsi, rsi	      1010	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000c8e	     0xf8542fdffff	                           jne 0x40009d6	      1010	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000c94	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      1014	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000c9c	          0x488928	                    mov qword [rax], rbp	      1014	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000c9f	      0xb801000000	                              mov eax, 1	      1015	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000ca4	      0xe9dafaffff	                           jmp 0x4000783	      1015	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000ca9	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      1015	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000cae	          0x4c89c7	                             mov rdi, r8	      1097	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_23
0x4000cb1	      0xe800000000	                          call 0x4000cb6	      1097	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_23
0x4000cb6	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000cba	        0x488b0c24	                    mov rcx, qword [rsp]	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000cbe	    0xc74528000000	               mov dword [rbp + 0x28], 0	      1105	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000cc5	        0x488d1408	                    lea rdx, [rax + rcx]	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000cc9	          0x4889c3	                            mov rbx, rax	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000ccc	          0x4839d0	                            cmp rax, rdx	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000ccf	     0xf83a9faffff	                           jae 0x400077e	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000cd5	          0x4531e4	                          xor r12d, r12d	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000cd8	      0x4c896c2408	                mov qword [rsp + 8], r13	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000cdd	          0x4d89f5	                            mov r13, r14	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000ce0	          0x4d89e6	                            mov r14, r12	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000ce3	          0x4989cc	                            mov r12, rcx	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000ce6	            0xeb1e	                           jmp 0x4000d06	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000ce8	     0xf1f84000000	                   nop dword [rax + rax]	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000cf0	          0x80fa24	                            cmp dl, 0x24	      1128	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21
0x4000cf3	     0xf84b0040000	                            je 0x40011a9	      1128	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21
0x4000cf9	        0x4a8d1420	                    lea rdx, [rax + r12]	      1128	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21
0x4000cfd	        0x4883c30c	                            add rbx, 0xc	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000d01	          0x4839d3	                            cmp rbx, rdx	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000d04	            0x7370	                           jae 0x4000d76	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000d06	         0xfb65304	               movzx edx, byte [rbx + 4]	      1109	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17
0x4000d0a	          0x80fa64	                            cmp dl, 0x64	      1109	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17
0x4000d0d	            0x75e1	                           jne 0x4000cf0	      1109	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17
0x4000d0f	          0x4d85f6	                           test r14, r14	      1112	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_18
0x4000d12	            0x7404	                            je 0x4000d18	      1112	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_18
0x4000d14	        0x83452801	               add dword [rbp + 0x28], 1	      1113	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_18
0x4000d18	        0x498b4508	                mov rax, qword [r13 + 8]	      1116	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_19	CALL_24
0x4000d1c	          0x4889df	                            mov rdi, rbx	      1116	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_19	CALL_24
0x4000d1f	          0xff5038	                 call qword [rax + 0x38]	      1116	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_19	CALL_24
0x4000d22	          0x4885c0	                           test rax, rax	      1116	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_19	CALL_24
0x4000d25	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1116	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_19	CALL_24
0x4000d29	        0x4a8d1420	                    lea rdx, [rax + r12]	      1116	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_19	CALL_24
0x4000d2d	            0x7424	                            je 0x4000d53	      1116	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_19	CALL_24
0x4000d2f	        0x488d7310	                   lea rsi, [rbx + 0x10]	      1123	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000d33	          0x4989de	                            mov r14, rbx	      1123	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000d36	          0x4839f2	                            cmp rdx, rsi	      1123	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000d39	            0x76c2	                           jbe 0x4000cfd	      1123	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000d3b	        0x807b1064	            cmp byte [rbx + 0x10], 0x64 	      1124	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000d3f	            0x75bc	                           jne 0x4000cfd	      1124	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000d41	        0x4883c30c	                            add rbx, 0xc	      1125	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000d45	            0xebb6	                           jmp 0x4000cfd	      1125	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000d47	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1125	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000d4b	        0x83452801	               add dword [rbp + 0x28], 1	      1132	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21
0x4000d4f	        0x4a8d1420	                    lea rdx, [rax + r12]	      1132	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21
0x4000d53	          0x4531f6	                          xor r14d, r14d	      1131	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21
0x4000d56	            0xeba5	                           jmp 0x4000cfd	      1131	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21
0x4000d58	          0x4d85c0	                             test r8, r8	      1096	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_16
0x4000d5b	     0xf854dffffff	                           jne 0x4000cae	      1096	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_16
0x4000d61	      0xe950ffffff	                           jmp 0x4000cb6	      1096	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_16
0x4000d66	          0x4d85c0	                             test r8, r8	      1052	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_10	IF_11
0x4000d69	     0xf85b7feffff	                           jne 0x4000c26	      1052	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_10	IF_11
0x4000d6f	            0x31c0	                            xor eax, eax	      1083	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000d71	      0xe9bafeffff	                           jmp 0x4000c30	      1083	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000d76	          0x4d89f4	                            mov r12, r14	      1083	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000d79	          0x8b4528	            mov eax, dword [rbp + 0x28] 	      1137	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_22
0x4000d7c	          0x4d89ee	                            mov r14, r13	      1137	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_22
0x4000d7f	          0x4d85e4	                           test r12, r12	      1136	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_22
0x4000d82	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      1136	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_22
0x4000d87	            0x7406	                            je 0x4000d8f	      1136	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_22
0x4000d89	          0x83c001	                              add eax, 1	      1137	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_22
0x4000d8c	          0x894528	            mov dword [rbp + 0x28], eax 	      1137	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_22
0x4000d8f	            0x85c0	                           test eax, eax	      1139	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_23
0x4000d91	     0xf84e7f9ffff	                            je 0x400077e	      1139	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_23
0x4000d97	          0x83c001	                              add eax, 1	      1141	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4000d9a	          0x4c89f7	                            mov rdi, r14	      1145	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_26
0x4000d9d	          0x894528	            mov dword [rbp + 0x28], eax 	      1141	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4000da0	            0x4898	                                    cdqe	      1143	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4000da2	        0x488d3440	                  lea rsi, [rax + rax*2]	      1145	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_26
0x4000da6	        0x48c1e604	                              shl rsi, 4	      1145	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_26
0x4000daa	      0xe800000000	                          call 0x4000daf	      1145	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_26
0x4000daf	          0x4885c0	                           test rax, rax	      1146	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_24
0x4000db2	        0x48894520	            mov qword [rbp + 0x20], rax 	      1145	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_26
0x4000db6	     0xf8472feffff	                            je 0x4000c2e	      1146	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_24
0x4000dbc	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1154	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000dc0	        0x488b0c24	                    mov rcx, qword [rsp]	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000dc4	          0x8b7528	            mov esi, dword [rbp + 0x28] 	      1154	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000dc7	        0x488b5d18	            mov rbx, qword [rbp + 0x18] 	      1154	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000dcb	          0x4801d1	                            add rcx, rdx	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000dce	            0x85f6	                           test esi, esi	      1154	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000dd0	     0xf8ebe030000	                           jle 0x4001194	      1154	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000dd6	          0x4839ca	                            cmp rdx, rcx	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000dd9	     0xf83b5030000	                           jae 0x4001194	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000ddf	            0x31f6	                            xor esi, esi	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000de1	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000de6	      0x4c897c2440	             mov qword [rsp + 0x40], r15	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4000deb	      0x4c896c2448	             mov qword [rsp + 0x48], r13	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4000df0	          0x4989df	                            mov r15, rbx	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4000df3	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000dfb	          0x4c89f3	                            mov rbx, r14	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4000dfe	    0x48c744240800	                  mov qword [rsp + 8], 0	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000e07	          0x4989ee	                            mov r14, rbp	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4000e0a	          0x4531e4	                          xor r12d, r12d	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000e0d	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000e16	          0x4889f5	                            mov rbp, rsi	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4000e19	          0x4989d5	                            mov r13, rdx	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4000e1c	            0xeb60	                           jmp 0x4000e7e	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4000e1e	            0x6690	                                     nop	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4000e20	     0xf860e020000	                           jbe 0x4001034	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000e26	            0x3c64	                            cmp al, 0x64	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000e28	     0xf84e6000000	                            je 0x4000f14	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000e2e	            0x3c84	                            cmp al, 0x84	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000e30	            0x7529	                           jne 0x4000e5b	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000e32	        0x488b4308	                mov rax, qword [rbx + 8]	      1217	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_31
0x4000e36	          0x4c89ef	                            mov rdi, r13	      1217	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_31
0x4000e39	          0xff5038	                 call qword [rax + 0x38]	      1217	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_31
0x4000e3c	        0x4d8d2407	                    lea r12, [r15 + rax]	      1217	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_31
0x4000e40	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1220	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
0x4000e45	        0x49034618	             add rax, qword [r14 + 0x18]	      1220	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
0x4000e49	          0x4939c4	                            cmp r12, rax	      1220	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
0x4000e4c	     0xf8373030000	                           jae 0x40011c5	      1220	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
0x4000e52	          0x4d39fc	                            cmp r12, r15	      1220	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
0x4000e55	     0xf826a030000	                            jb 0x40011c5	      1220	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
0x4000e5b	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      1154	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000e5f	        0x413b4628	            cmp eax, dword [r14 + 0x28] 	      1154	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000e63	     0xf8d04020000	                           jge 0x400106d	      1154	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000e69	        0x488b0424	                    mov rax, qword [rsp]	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000e6d	        0x49034610	             add rax, qword [r14 + 0x10]	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000e71	        0x4983c50c	                            add r13, 0xc	      1156	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000e75	          0x4939c5	                            cmp r13, rax	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000e78	     0xf83ef010000	                           jae 0x400106d	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4000e7e	      0x410fb64504	               movzx eax, byte [r13 + 4]	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000e83	            0x3c24	                            cmp al, 0x24	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000e85	            0x7599	                           jne 0x4000e20	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000e87	        0x488b4308	                mov rax, qword [rbx + 8]	      1226	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_32
0x4000e8b	          0x4c89ef	                            mov rdi, r13	      1226	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_32
0x4000e8e	          0xff5038	                 call qword [rax + 0x38]	      1226	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_32
0x4000e91	        0x4d8d0c07	                     lea r9, [r15 + rax]	      1226	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_32
0x4000e95	          0x4d39f9	                             cmp r9, r15	      1227	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_32
0x4000e98	            0x74c1	                            je 0x4000e5b	      1227	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_32
0x4000e9a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1229	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4000e9f	        0x49034618	             add rax, qword [r14 + 0x18]	      1229	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4000ea3	        0x498d7d08	                      lea rdi, [r13 + 8]	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4000ea7	          0x4939c1	                             cmp r9, rax	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4000eaa	      0xb800000000	                              mov eax, 0	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4000eaf	        0x4c0f43c8	                          cmovae r9, rax	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4000eb3	      0x4863442410	         movsxd rax, dword [rsp + 0x10] 	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4000eb8	      0x4c894c2458	              mov qword [rsp + 0x58], r9	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4000ebd	        0x488d3440	                  lea rsi, [rax + rax*2]	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4000ec1	        0x488b4308	                mov rax, qword [rbx + 8]	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4000ec5	        0x48c1e604	                              shl rsi, 4	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4000ec9	          0x4989f3	                            mov r11, rsi	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4000ecc	        0x4d035e20	             add r11, qword [r14 + 0x20]	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4000ed0	          0x4889f5	                            mov rbp, rsi	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4000ed3	      0x4c895c2450	             mov qword [rsp + 0x50], r11	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4000ed8	          0xff5038	                 call qword [rax + 0x38]	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4000edb	          0x4889ee	                            mov rsi, rbp	      1234	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000ede	        0x49037620	             add rsi, qword [r14 + 0x20]	      1234	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000ee2	      0x4c8b5c2450	            mov r11, qword [rsp + 0x50] 	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4000ee7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1236	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000eec	      0x4c8b4c2458	              mov r9, qword [rsp + 0x58]	      1238	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000ef1	            0x31ed	                            xor ebp, ebp	      1232	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000ef3	      0x8344241001	               add dword [rsp + 0x10], 1	      1239	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000ef8	          0x498903	                    mov qword [r11], rax	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4000efb	        0x4c896e08	                mov qword [rsi + 8], r13	      1234	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000eff	        0x4c897e10	             mov qword [rsi + 0x10], r15	      1235	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000f03	        0x48894e18	             mov qword [rsi + 0x18], rcx	      1236	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000f07	        0x4c896620	             mov qword [rsi + 0x20], r12	      1237	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000f0b	        0x4c894e28	              mov qword [rsi + 0x28], r9	      1238	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000f0f	      0xe947ffffff	                           jmp 0x4000e5b	      1240	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000f14	          0x4885ed	                           test rbp, rbp	      1176	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x4000f17	            0x7461	                            je 0x4000f7a	      1176	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x4000f19	      0x4863442410	         movsxd rax, dword [rsp + 0x10] 	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4000f1e	        0x488d7d08	                      lea rdi, [rbp + 8]	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4000f22	        0x4c8d0c40	                   lea r9, [rax + rax*2]	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4000f26	        0x488b4308	                mov rax, qword [rbx + 8]	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4000f2a	        0x49c1e104	                               shl r9, 4	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4000f2e	          0x4d89cb	                             mov r11, r9	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4000f31	        0x4d035e20	             add r11, qword [r14 + 0x20]	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4000f35	      0x4c894c2458	              mov qword [rsp + 0x58], r9	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4000f3a	      0x4c895c2450	             mov qword [rsp + 0x50], r11	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4000f3f	          0xff5038	                 call qword [rax + 0x38]	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4000f42	      0x4c8b4c2458	              mov r9, qword [rsp + 0x58]	      1179	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x4000f47	        0x4d034e20	              add r9, qword [r14 + 0x20]	      1179	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x4000f4b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1180	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x4000f50	      0x4c8b5c2450	            mov r11, qword [rsp + 0x50] 	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4000f55	      0x8344241001	               add dword [rsp + 0x10], 1	      1184	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x4000f5a	          0x498903	                    mov qword [r11], rax	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4000f5d	        0x49894910	              mov qword [r9 + 0x10], rcx	      1180	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x4000f61	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1181	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x4000f66	        0x49896908	                 mov qword [r9 + 8], rbp	      1179	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x4000f6a	        0x4d896120	              mov qword [r9 + 0x20], r12	      1182	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x4000f6e	    0x49c741280000	                mov qword [r9 + 0x28], 0	      1183	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x4000f76	        0x49894918	              mov qword [r9 + 0x18], rcx	      1181	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x4000f7a	        0x488b4308	                mov rax, qword [rbx + 8]	      1188	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_29
0x4000f7e	          0x4c89ef	                            mov rdi, r13	      1188	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_29
0x4000f81	          0xff5038	                 call qword [rax + 0x38]	      1188	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_29
0x4000f84	        0x4d8d2407	                    lea r12, [r15 + rax]	      1188	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_29
0x4000f88	          0x4d39fc	                            cmp r12, r15	      1189	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_27
0x4000f8b	            0x7446	                            je 0x4000fd3	      1189	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_27
0x4000f8d	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1198	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x4000f92	        0x49034618	             add rax, qword [r14 + 0x18]	      1198	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x4000f96	          0x4939c4	                            cmp r12, rax	      1198	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x4000f99	            0x7333	                           jae 0x4000fce	      1198	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x4000f9b	          0x4d39fc	                            cmp r12, r15	      1198	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x4000f9e	            0x722e	                            jb 0x4000fce	      1198	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x4000fa0	        0x488b0424	                    mov rax, qword [rsp]	      1200	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4000fa4	        0x49034610	             add rax, qword [r14 + 0x10]	      1200	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4000fa8	        0x498d7510	                   lea rsi, [r13 + 0x10]	      1200	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4000fac	          0x4839c6	                            cmp rsi, rax	      1200	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4000faf	            0x7307	                           jae 0x4000fb8	      1200	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4000fb1	      0x41807d1064	            cmp byte [r13 + 0x10], 0x64 	      1201	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4000fb6	            0x742e	                            je 0x4000fe6	      1201	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4000fb8	      0x4c897c2418	             mov qword [rsp + 0x18], r15	      1201	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4000fbd	          0x4c89ed	                            mov rbp, r13	      1201	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4000fc0	    0x48c744240800	                  mov qword [rsp + 8], 0	      1187	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000fc9	      0xe98dfeffff	                           jmp 0x4000e5b	      1187	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000fce	          0x4531e4	                          xor r12d, r12d	      1199	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x4000fd1	            0xebcd	                           jmp 0x4000fa0	      1199	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x4000fd3	    0x48c744240800	                  mov qword [rsp + 8], 0	      1187	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4000fdc	          0x4531e4	                          xor r12d, r12d	      1191	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_27
0x4000fdf	            0x31ed	                            xor ebp, ebp	      1192	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_27
0x4000fe1	      0xe975feffff	                           jmp 0x4000e5b	      1192	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_27
0x4000fe6	        0x488b4308	                mov rax, qword [rbx + 8]	      1208	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	CALL_30
0x4000fea	        0x4d8d4d0c	                     lea r9, [r13 + 0xc]	      1205	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4000fee	          0x4c89cf	                             mov rdi, r9	      1208	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	CALL_30
0x4000ff1	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1208	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	CALL_30
0x4000ff6	          0xff5038	                 call qword [rax + 0x38]	      1208	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	CALL_30
0x4000ff9	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4000ffe	        0x49037618	             add rsi, qword [r14 + 0x18]	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001002	          0x4c01f8	                            add rax, r15	      1207	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4001005	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x400100a	      0x4c89642408	                mov qword [rsp + 8], r12	      1206	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x400100f	          0x4839f0	                            cmp rax, rsi	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001012	     0xf8342010000	                           jae 0x400115a	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001018	          0x4c39f8	                            cmp rax, r15	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x400101b	     0xf8239010000	                            jb 0x400115a	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001021	          0x4c89ed	                            mov rbp, r13	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001024	          0x4989c4	                            mov r12, rax	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001027	      0x4c897c2418	             mov qword [rsp + 0x18], r15	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x400102c	          0x4d89cd	                             mov r13, r9	      1205	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x400102f	      0xe927feffff	                           jmp 0x4000e5b	      1205	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4001034	            0x84c0	                             test al, al	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001036	     0xf851ffeffff	                           jne 0x4000e5b	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x400103c	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1162	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_25
0x4001041	        0x49034618	             add rax, qword [r14 + 0x18]	      1162	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_25
0x4001045	          0x4c29f8	                            sub rax, r15	      1162	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_25
0x4001048	      0x483b442438	            cmp rax, qword [rsp + 0x38] 	      1162	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_25
0x400104d	     0xf8208feffff	                            jb 0x4000e5b	      1162	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_25
0x4001053	        0x488b4308	                mov rax, qword [rbx + 8]	      1165	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_27
0x4001057	      0x4c037c2438	             add r15, qword [rsp + 0x38]	      1164	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x400105c	        0x498d7d08	                      lea rdi, [r13 + 8]	      1165	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_27
0x4001060	          0xff5038	                 call qword [rax + 0x38]	      1165	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_27
0x4001063	      0x4889442438	             mov qword [rsp + 0x38], rax	      1165	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_27
0x4001068	      0xe9eefdffff	                           jmp 0x4000e5b	      1166	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x400106d	          0x4889ee	                            mov rsi, rbp	      1166	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001070	      0x4c8b6c2448	            mov r13, qword [rsp + 0x48] 	      1166	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001075	          0x4c89f5	                            mov rbp, r14	      1166	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001078	          0x4885f6	                           test rsi, rsi	      1244	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x400107b	          0x4989de	                            mov r14, rbx	      1244	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x400107e	          0x4c89fb	                            mov rbx, r15	      1244	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001081	      0x4c8b7c2440	            mov r15, qword [rsp + 0x40] 	      1244	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001086	     0xf84e1000000	                            je 0x400116d	      1244	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x400108c	      0x4863442410	         movsxd rax, dword [rsp + 0x10] 	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x4001091	        0x488d7e08	                      lea rdi, [rsi + 8]	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x4001095	      0x4889742438	             mov qword [rsp + 0x38], rsi	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x400109a	        0x488d0440	                  lea rax, [rax + rax*2]	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x400109e	        0x48c1e004	                              shl rax, 4	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x40010a2	          0x4989c0	                             mov r8, rax	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x40010a5	        0x4c034520	              add r8, qword [rbp + 0x20]	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x40010a9	      0x4889442448	             mov qword [rsp + 0x48], rax	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x40010ae	        0x498b4608	                mov rax, qword [r14 + 8]	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x40010b2	      0x4c89442440	              mov qword [rsp + 0x40], r8	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x40010b7	          0xff5038	                 call qword [rax + 0x38]	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x40010ba	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      1247	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40010be	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      1247	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40010c3	      0x4c8b442440	              mov r8, qword [rsp + 0x40]	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x40010c8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1248	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40010cd	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1247	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40010d2	          0x498900	                     mov qword [r8], rax	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x40010d5	        0x488d0417	                    lea rax, [rdi + rdx]	      1247	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40010d9	        0x48894810	             mov qword [rax + 0x10], rcx	      1248	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40010dd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40010e2	        0x48897008	                mov qword [rax + 8], rsi	      1247	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40010e6	        0x4c896020	             mov qword [rax + 0x20], r12	      1250	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40010ea	    0x48c740280000	               mov qword [rax + 0x28], 0	      1251	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40010f2	        0x48894818	             mov qword [rax + 0x18], rcx	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40010f6	        0x488d4230	                   lea rax, [rdx + 0x30]	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40010fa	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40010fe	        0x488b0c24	                    mov rcx, qword [rsp]	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001102	        0x48034d10	             add rcx, qword [rbp + 0x10]	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001106	        0x448d6202	                     lea r12d, [rdx + 2]	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x400110a	          0x4963f4	                        movsxd rsi, r12d	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x400110d	          0x4801f8	                            add rax, rdi	      1255	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4001110	      0xba30000000	                           mov edx, 0x30	      1264	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_35
0x4001115	        0x48894808	                mov qword [rax + 8], rcx	      1256	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4001119	    0x48c700ffffff	     mov qword [rax], 0xffffffffffffffff	      1255	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4001120	      0xb900000000	                              mov ecx, 0	      1264	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_35
0x4001125	        0x48895810	             mov qword [rax + 0x10], rbx	      1257	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4001129	    0x48c740180000	               mov qword [rax + 0x18], 0	      1258	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4001131	    0x48c740200000	               mov qword [rax + 0x20], 0	      1259	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4001139	    0x48c740280000	               mov qword [rax + 0x28], 0	      1260	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4001141	        0x44896528	           mov dword [rbp + 0x28], r12d 	      1263	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4001145	      0xe800000000	                          call 0x400114a	      1264	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_35
0x400114a	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      1267	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4001152	          0x488928	                    mov qword [rax], rbp	      1267	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4001155	      0xe99ff4ffff	                           jmp 0x40005f9	      1267	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x400115a	          0x4c89ed	                            mov rbp, r13	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x400115d	      0x4c897c2418	             mov qword [rsp + 0x18], r15	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001162	          0x4d89cd	                             mov r13, r9	      1205	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4001165	          0x4531e4	                          xor r12d, r12d	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001168	      0xe9eefcffff	                           jmp 0x4000e5b	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x400116d	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001171	        0x488b0c24	                    mov rcx, qword [rsp]	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001175	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001179	        0x48034d10	             add rcx, qword [rbp + 0x10]	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x400117d	          0x4863c2	                         movsxd rax, edx	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001180	        0x448d6201	                     lea r12d, [rdx + 1]	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001184	        0x488d0440	                  lea rax, [rax + rax*2]	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001188	          0x4963f4	                        movsxd rsi, r12d	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x400118b	        0x48c1e004	                              shl rax, 4	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x400118f	      0xe979ffffff	                           jmp 0x400110d	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001194	          0x4889c7	                            mov rdi, rax	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001197	      0xbe01000000	                              mov esi, 1	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x400119c	    0x41bc01000000	                             mov r12d, 1	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x40011a2	            0x31c0	                            xor eax, eax	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x40011a4	      0xe964ffffff	                           jmp 0x400110d	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x40011a9	        0x498b4508	                mov rax, qword [r13 + 8]	      1129	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21	CALL_25
0x40011ad	          0x4889df	                            mov rdi, rbx	      1129	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21	CALL_25
0x40011b0	          0xff5038	                 call qword [rax + 0x38]	      1129	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21	CALL_25
0x40011b3	          0x4885c0	                           test rax, rax	      1129	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21	CALL_25
0x40011b6	     0xf858bfbffff	                           jne 0x4000d47	      1129	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21	CALL_25
0x40011bc	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1129	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21	CALL_25
0x40011c0	      0xe934fbffff	                           jmp 0x4000cf9	      1129	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21	CALL_25
0x40011c5	          0x4531e4	                          xor r12d, r12d	      1221	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
0x40011c8	      0xe98efcffff	                           jmp 0x4000e5b	      1221	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
_bfd_nosymbols_canonicalize_symtab	functions,0:IF,0:FOR,0:CALL,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	2
0x40011d0	            0x31c0	                            xor eax, eax	      1436	syms.c	FUNCTION_14
0x40011d2	              0xc3	                                     ret	      1436	syms.c	FUNCTION_14
_bfd_nosymbols_print_symbol	functions,0:IF,0:FOR,0:CALL,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	1
0x40011e0	            0xf3c3	                                     ret	      1443	syms.c	FUNCTION_15
_bfd_nosymbols_bfd_is_local_label_name	functions,0:IF,0:FOR,0:CALL,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	2
0x4001210	            0x31c0	                            xor eax, eax	      1466	syms.c	FUNCTION_18
0x4001212	              0xc3	                                     ret	      1466	syms.c	FUNCTION_18
_bfd_nosymbols_minisymbol_to_symbol	functions,0:IF,0:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:SWITCH,0	1
0x4001280	      0xe900000000	                           jmp 0x4001285	      1531	syms.c	FUNCTION_25	CALL_1
_bfd_nosymbols_get_lineno	functions,0:IF,0:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:SWITCH,0	1
0x4001220	      0xe900000000	                           jmp 0x4001225	      1471	syms.c	FUNCTION_19	CALL_1
bfd_decode_symclass	functions,0:IF,14:FOR,0:CALL,7:DO,0:ELSE,5:WHILE,0:SWITCH,0	116
0x4000240	            0x4156	                                push r14	       662	syms.c	FUNCTION_7
0x4000242	            0x4155	                                push r13	       662	syms.c	FUNCTION_7
0x4000244	            0x4154	                                push r12	       662	syms.c	FUNCTION_7
0x4000246	              0x55	                                push rbp	       662	syms.c	FUNCTION_7
0x4000247	              0x53	                                push rbx	       662	syms.c	FUNCTION_7
0x4000248	        0x488b5f20	            mov rbx, qword [rdi + 0x20] 	       665	syms.c	FUNCTION_7	IF_1	CALL_1
0x400024c	          0x4885db	                           test rbx, rbx	       665	syms.c	FUNCTION_7	IF_1	CALL_1
0x400024f	            0x7432	                            je 0x4000283	       665	syms.c	FUNCTION_7	IF_1	CALL_1
0x4000251	        0xf6432110	           test byte [rbx + 0x21], 0x10 	       665	syms.c	FUNCTION_7	IF_1	CALL_1
0x4000255	      0xb843000000	                           mov eax, 0x43	       666	syms.c	FUNCTION_7	IF_1
0x400025a	            0x740c	                            je 0x4000268	       665	syms.c	FUNCTION_7	IF_1	CALL_1
0x400025c	              0x5b	                                 pop rbx	       721	syms.c	FUNCTION_7
0x400025d	              0x5d	                                 pop rbp	       721	syms.c	FUNCTION_7
0x400025e	            0x415c	                                 pop r12	       721	syms.c	FUNCTION_7
0x4000260	            0x415d	                                 pop r13	       721	syms.c	FUNCTION_7
0x4000262	            0x415e	                                 pop r14	       721	syms.c	FUNCTION_7
0x4000264	              0xc3	                                     ret	       721	syms.c	FUNCTION_7
0x4000265	           0xf1f00	                         nop dword [rax]	       721	syms.c	FUNCTION_7
0x4000268	    0x4881fb000000	                              cmp rbx, 0	       667	syms.c	FUNCTION_7	IF_2	CALL_2
0x400026f	     0xf84bb000000	                            je 0x4000330	       667	syms.c	FUNCTION_7	IF_2	CALL_2
0x4000275	    0x4881fb000000	                              cmp rbx, 0	       681	syms.c	FUNCTION_7	IF_5	CALL_3
0x400027c	      0xb849000000	                           mov eax, 0x49	       682	syms.c	FUNCTION_7	IF_5
0x4000281	            0x74d9	                            je 0x400025c	       681	syms.c	FUNCTION_7	IF_5	CALL_3
0x4000283	          0x8b6f18	            mov ebp, dword [rdi + 0x18] 	       683	syms.c	FUNCTION_7	IF_6
0x4000286	      0xb869000000	                           mov eax, 0x69	       684	syms.c	FUNCTION_7	IF_6
0x400028b	    0xf7c500004000	                      test ebp, 0x400000	       683	syms.c	FUNCTION_7	IF_6
0x4000291	            0x75c9	                           jne 0x400025c	       683	syms.c	FUNCTION_7	IF_6
0x4000293	        0x40f6c580	                          test bpl, 0x80	       685	syms.c	FUNCTION_7	IF_7
0x4000297	     0xf85bb000000	                           jne 0x4000358	       685	syms.c	FUNCTION_7	IF_7
0x400029d	    0xf7c500008000	                      test ebp, 0x800000	       694	syms.c	FUNCTION_7	IF_9
0x40002a3	      0xb875000000	                           mov eax, 0x75	       695	syms.c	FUNCTION_7	IF_9
0x40002a8	            0x75b2	                           jne 0x400025c	       694	syms.c	FUNCTION_7	IF_9
0x40002aa	        0x40f6c503	                             test bpl, 3	       696	syms.c	FUNCTION_7	IF_10
0x40002ae	      0xb83f000000	                           mov eax, 0x3f	       697	syms.c	FUNCTION_7	IF_10
0x40002b3	            0x74a7	                            je 0x400025c	       696	syms.c	FUNCTION_7	IF_10
0x40002b5	    0x4881fb000000	                              cmp rbx, 0	       699	syms.c	FUNCTION_7	IF_11	CALL_4
0x40002bc	     0xf84a6000000	                            je 0x4000368	       699	syms.c	FUNCTION_7	IF_11	CALL_4
0x40002c2	          0x4885db	                           test rbx, rbx	       701	syms.c	FUNCTION_7	ELSE_4	IF_12
0x40002c5	            0x7495	                            je 0x400025c	       701	syms.c	FUNCTION_7	ELSE_4	IF_12
0x40002c7	          0x4c8b33	                    mov r14, qword [rbx]	       703	syms.c	FUNCTION_7	ELSE_4	IF_12	CALL_5
0x40002ca	      0xba04000000	                              mov edx, 4	       703	syms.c	FUNCTION_7	ELSE_4	IF_12	CALL_5
0x40002cf	    0x41bd00000000	                             mov r13d, 0	       703	syms.c	FUNCTION_7	ELSE_4	IF_12	CALL_5
0x40002d5	    0x41bc00000000	                             mov r12d, 0	       703	syms.c	FUNCTION_7	ELSE_4	IF_12	CALL_5
0x40002db	            0xeb1f	                           jmp 0x40002fc	       703	syms.c	FUNCTION_7	ELSE_4	IF_12	CALL_5
0x40002dd	           0xf1f00	                         nop dword [rax]	       703	syms.c	FUNCTION_7	ELSE_4	IF_12	CALL_5
0x40002e0	        0x4983c510	                           add r13, 0x10	       606	syms.c	FUNCTION_5	FOR_1
0x40002e4	        0x4d8b6500	                    mov r12, qword [r13]	       606	syms.c	FUNCTION_5	FOR_1
0x40002e8	          0x4d85e4	                           test r12, r12	       606	syms.c	FUNCTION_5	FOR_1
0x40002eb	     0xf847e000000	                            je 0x400036f	       606	syms.c	FUNCTION_5	FOR_1
0x40002f1	          0x4c89e7	                            mov rdi, r12	       606	syms.c	FUNCTION_5	FOR_1
0x40002f4	      0xe800000000	                          call 0x40002f9	       606	syms.c	FUNCTION_5	FOR_1
0x40002f9	          0x4889c2	                            mov rdx, rax	       606	syms.c	FUNCTION_5	FOR_1
0x40002fc	          0x4c89e6	                            mov rsi, r12	       607	syms.c	FUNCTION_5	FOR_1	IF_1	CALL_2
0x40002ff	          0x4c89f7	                            mov rdi, r14	       607	syms.c	FUNCTION_5	FOR_1	IF_1	CALL_2
0x4000302	      0xe800000000	                          call 0x4000307	       607	syms.c	FUNCTION_5	FOR_1	IF_1	CALL_2
0x4000307	            0x85c0	                           test eax, eax	       607	syms.c	FUNCTION_5	FOR_1	IF_1	CALL_2
0x4000309	            0x75d5	                           jne 0x40002e0	       607	syms.c	FUNCTION_5	FOR_1	IF_1	CALL_2
0x400030b	      0x410fb64508	               movzx eax, byte [r13 + 8]	       608	syms.c	FUNCTION_5	FOR_1	IF_1
0x4000310	            0x3c3f	                            cmp al, 0x3f	       704	syms.c	FUNCTION_7	ELSE_4	IF_12	IF_13
0x4000312	            0x745b	                            je 0x400036f	       704	syms.c	FUNCTION_7	ELSE_4	IF_12	IF_13
0x4000314	          0x83e502	                              and ebp, 2	       709	syms.c	FUNCTION_7	IF_14
0x4000317	            0x740a	                            je 0x4000323	       709	syms.c	FUNCTION_7	IF_14
0x4000319	           0xfb6c0	                           movzx eax, al	       710	syms.c	FUNCTION_7	CALL_7
0x400031c	     0xfb680000000	                   movzx eax, byte [rax]	       710	syms.c	FUNCTION_7	CALL_7
0x4000323	           0xfbec0	                           movsx eax, al	       711	syms.c	FUNCTION_7
0x4000326	      0xe931ffffff	                           jmp 0x400025c	       711	syms.c	FUNCTION_7
0x400032b	       0xf1f440000	                   nop dword [rax + rax]	       711	syms.c	FUNCTION_7
0x4000330	          0x8b5718	            mov edx, dword [rdi + 0x18] 	       669	syms.c	FUNCTION_7	IF_2	IF_3
0x4000333	      0xb855000000	                           mov eax, 0x55	       679	syms.c	FUNCTION_7	IF_2	ELSE_2
0x4000338	          0xf6c280	                           test dl, 0x80	       669	syms.c	FUNCTION_7	IF_2	IF_3
0x400033b	     0xf841bffffff	                            je 0x400025c	       669	syms.c	FUNCTION_7	IF_2	IF_3
0x4000341	            0x89d0	                            mov eax, edx	       674	syms.c	FUNCTION_7	IF_2	IF_3	IF_4
0x4000343	          0xc1e00f	                            shl eax, 0xf	       674	syms.c	FUNCTION_7	IF_2	IF_3	IF_4
0x4000346	          0xc1f81f	                           sar eax, 0x1f	       674	syms.c	FUNCTION_7	IF_2	IF_3	IF_4
0x4000349	          0x83c077	                           add eax, 0x77	       674	syms.c	FUNCTION_7	IF_2	IF_3	IF_4
0x400034c	      0xe90bffffff	                           jmp 0x400025c	       674	syms.c	FUNCTION_7	IF_2	IF_3	IF_4
0x4000351	     0xf1f80000000	                         nop dword [rax]	       674	syms.c	FUNCTION_7	IF_2	IF_3	IF_4
0x4000358	            0x89e8	                            mov eax, ebp	       690	syms.c	FUNCTION_7	IF_7	IF_8
0x400035a	          0xc1e00f	                            shl eax, 0xf	       690	syms.c	FUNCTION_7	IF_7	IF_8
0x400035d	          0xc1f81f	                           sar eax, 0x1f	       690	syms.c	FUNCTION_7	IF_7	IF_8
0x4000360	          0x83c057	                           add eax, 0x57	       690	syms.c	FUNCTION_7	IF_7	IF_8
0x4000363	      0xe9f4feffff	                           jmp 0x400025c	       690	syms.c	FUNCTION_7	IF_7	IF_8
0x4000368	      0xb861000000	                           mov eax, 0x61	       700	syms.c	FUNCTION_7	IF_11
0x400036d	            0xeba5	                           jmp 0x4000314	       700	syms.c	FUNCTION_7	IF_11
0x400036f	          0x8b5320	            mov edx, dword [rbx + 0x20] 	       623	syms.c	FUNCTION_6	IF_1
0x4000372	      0xb874000000	                           mov eax, 0x74	       624	syms.c	FUNCTION_6	IF_1
0x4000377	          0xf6c210	                           test dl, 0x10	       623	syms.c	FUNCTION_6	IF_1
0x400037a	            0x7598	                           jne 0x4000314	       623	syms.c	FUNCTION_6	IF_1
0x400037c	          0xf6c220	                           test dl, 0x20	       625	syms.c	FUNCTION_6	IF_2
0x400037f	            0x7420	                            je 0x40003a1	       625	syms.c	FUNCTION_6	IF_2
0x4000381	          0xf6c208	                              test dl, 8	       627	syms.c	FUNCTION_6	IF_2	IF_3
0x4000384	      0xb872000000	                           mov eax, 0x72	       628	syms.c	FUNCTION_6	IF_2	IF_3
0x4000389	            0x7589	                           jne 0x4000314	       627	syms.c	FUNCTION_6	IF_2	IF_3
0x400038b	    0x81e200004000	                       and edx, 0x400000	       629	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x4000391	          0x83fa01	                              cmp edx, 1	       630	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x4000394	            0x19c0	                            sbb eax, eax	       630	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x4000396	          0x83e0fd	                     and eax, 0xfffffffd	       630	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x4000399	          0x83c067	                           add eax, 0x67	       630	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x400039c	      0xe973ffffff	                           jmp 0x4000314	       630	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x40003a1	          0xf6c601	                              test dh, 1	       634	syms.c	FUNCTION_6	ELSE_2	IF_5
0x40003a4	            0x7516	                           jne 0x40003bc	       634	syms.c	FUNCTION_6	ELSE_2	IF_5
0x40003a6	    0x81e200004000	                       and edx, 0x400000	       636	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x40003ac	          0x83fa01	                              cmp edx, 1	       637	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x40003af	            0x19c0	                            sbb eax, eax	       637	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x40003b1	          0x83e0ef	                     and eax, 0xffffffef	       637	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x40003b4	          0x83c073	                           add eax, 0x73	       637	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x40003b7	      0xe958ffffff	                           jmp 0x4000314	       637	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x40003bc	          0xf6c620	                           test dh, 0x20	       641	syms.c	FUNCTION_6	IF_7
0x40003bf	      0xb84e000000	                           mov eax, 0x4e	       642	syms.c	FUNCTION_6	IF_7
0x40003c4	     0xf854affffff	                           jne 0x4000314	       641	syms.c	FUNCTION_6	IF_7
0x40003ca	    0x81e208010000	                          and edx, 0x108	       643	syms.c	FUNCTION_6	IF_8
0x40003d0	      0xb83f000000	                           mov eax, 0x3f	       644	syms.c	FUNCTION_6	IF_8
0x40003d5	    0x81fa08010000	                          cmp edx, 0x108	       644	syms.c	FUNCTION_6	IF_8
0x40003db	      0xba6e000000	                           mov edx, 0x6e	       644	syms.c	FUNCTION_6	IF_8
0x40003e0	           0xf44c2	                          cmove eax, edx	       644	syms.c	FUNCTION_6	IF_8
0x40003e3	      0xe92cffffff	                           jmp 0x4000314	       644	syms.c	FUNCTION_6	IF_8
_bfd_nosymbols_read_minisymbols	functions,0:IF,0:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:SWITCH,0	1
0x4001270	      0xe900000000	                           jmp 0x4001275	      1522	syms.c	FUNCTION_24	CALL_1
_bfd_nosymbols_bfd_make_debug_symbol	functions,0:IF,0:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:SWITCH,0	1
0x4001260	      0xe900000000	                           jmp 0x4001265	      1513	syms.c	FUNCTION_23	CALL_1
_bfd_nosymbols_get_symbol_version_string	functions,0:IF,0:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:SWITCH,0	1
0x4001200	      0xe900000000	                           jmp 0x4001205	      1458	syms.c	FUNCTION_17	CALL_1
cmpindexentry	functions,0:IF,2:FOR,0:CALL,0:DO,0:ELSE,2:WHILE,0:SWITCH,0	7
0x4000040	          0x488b06	                    mov rax, qword [rsi]	       885	syms.c	FUNCTION_12	IF_1
0x4000043	          0x483907	                    cmp qword [rdi], rax	       885	syms.c	FUNCTION_12	IF_1
0x4000046	      0xbaffffffff	                     mov edx, 0xffffffff	       886	syms.c	FUNCTION_12	IF_1
0x400004b	           0xf97c0	                                 seta al	       886	syms.c	FUNCTION_12	IF_1
0x400004e	           0xfb6c0	                           movzx eax, al	       886	syms.c	FUNCTION_12	IF_1
0x4000051	           0xf42c2	                          cmovb eax, edx	       886	syms.c	FUNCTION_12	IF_1
0x4000054	              0xc3	                                     ret	       891	syms.c	FUNCTION_12	ELSE_2
_bfd_generic_minisymbol_to_symbol	functions,0:IF,0:FOR,0:CALL,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	2
0x4000560	          0x488b02	                    mov rax, qword [rdx]	       847	syms.c	FUNCTION_11
0x4000563	              0xc3	                                     ret	       848	syms.c	FUNCTION_11
bfd_symbol_info	functions,0:IF,1:FOR,0:CALL,2:DO,0:ELSE,1:WHILE,0:SWITCH,0	30
0x4000410	              0x55	                                push rbp	       757	syms.c	FUNCTION_9
0x4000411	              0x53	                                push rbx	       757	syms.c	FUNCTION_9
0x4000412	          0x4889fd	                            mov rbp, rdi	       757	syms.c	FUNCTION_9
0x4000415	          0x4889f3	                            mov rbx, rsi	       757	syms.c	FUNCTION_9
0x4000418	        0x4883ec08	                              sub rsp, 8	       757	syms.c	FUNCTION_9
0x400041c	      0xe800000000	                          call 0x4000421	       758	syms.c	FUNCTION_9	CALL_1
0x4000421	          0x8d508a	                   lea edx, [rax - 0x76]	       739	syms.c	FUNCTION_8
0x4000424	          0x884308	                  mov byte [rbx + 8], al	       758	syms.c	FUNCTION_9	CALL_1
0x4000427	          0x80fa01	                               cmp dl, 1	       739	syms.c	FUNCTION_8
0x400042a	            0x7624	                           jbe 0x4000450	       739	syms.c	FUNCTION_8
0x400042c	            0x3c55	                            cmp al, 0x55	       739	syms.c	FUNCTION_8
0x400042e	            0x7420	                            je 0x4000450	       739	syms.c	FUNCTION_8
0x4000430	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	       763	syms.c	FUNCTION_9	ELSE_1
0x4000434	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       763	syms.c	FUNCTION_9	ELSE_1
0x4000438	        0x48034228	             add rax, qword [rdx + 0x28]	       763	syms.c	FUNCTION_9	ELSE_1
0x400043c	          0x488903	                    mov qword [rbx], rax	       763	syms.c	FUNCTION_9	ELSE_1
0x400043f	        0x488b4508	                mov rax, qword [rbp + 8]	       765	syms.c	FUNCTION_9	ELSE_1
0x4000443	        0x48894310	             mov qword [rbx + 0x10], rax	       765	syms.c	FUNCTION_9	ELSE_1
0x4000447	        0x4883c408	                              add rsp, 8	       766	syms.c	FUNCTION_9	ELSE_1
0x400044b	              0x5b	                                 pop rbx	       766	syms.c	FUNCTION_9	ELSE_1
0x400044c	              0x5d	                                 pop rbp	       766	syms.c	FUNCTION_9	ELSE_1
0x400044d	              0xc3	                                     ret	       766	syms.c	FUNCTION_9	ELSE_1
0x400044e	            0x6690	                                     nop	       766	syms.c	FUNCTION_9	ELSE_1
0x4000450	        0x488b4508	                mov rax, qword [rbp + 8]	       765	syms.c	FUNCTION_9	ELSE_1
0x4000454	    0x48c703000000	                      mov qword [rbx], 0	       761	syms.c	FUNCTION_9	IF_1
0x400045b	        0x48894310	             mov qword [rbx + 0x10], rax	       765	syms.c	FUNCTION_9	ELSE_1
0x400045f	        0x4883c408	                              add rsp, 8	       766	syms.c	FUNCTION_9	ELSE_1
0x4000463	              0x5b	                                 pop rbx	       766	syms.c	FUNCTION_9	ELSE_1
0x4000464	              0x5d	                                 pop rbp	       766	syms.c	FUNCTION_9	ELSE_1
0x4000465	              0xc3	                                     ret	       766	syms.c	FUNCTION_9	ELSE_1
_bfd_nosymbols_find_line	functions,0:IF,0:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:SWITCH,0	1
0x4001240	      0xe900000000	                           jmp 0x4001245	      1495	syms.c	FUNCTION_21	CALL_1
_bfd_nodynamic_get_synthetic_symtab	functions,0:IF,0:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:SWITCH,0	1
0x4001290	      0xe900000000	                   jmp str.c_c_c_c_c_c_c	      1542	syms.c	FUNCTION_26	CALL_1
_bfd_generic_make_empty_symbol	functions,0:IF,1:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:SWITCH,0	9
0x4000220	              0x53	                                push rbx	       540	syms.c	FUNCTION_4
0x4000221	      0xbe30000000	                           mov esi, 0x30	       542	syms.c	FUNCTION_4	CALL_1
0x4000226	          0x4889fb	                            mov rbx, rdi	       540	syms.c	FUNCTION_4
0x4000229	      0xe800000000	                          call 0x400022e	       542	syms.c	FUNCTION_4	CALL_1
0x400022e	          0x4885c0	                           test rax, rax	       543	syms.c	FUNCTION_4	IF_1
0x4000231	            0x7403	                            je 0x4000236	       543	syms.c	FUNCTION_4	IF_1
0x4000233	          0x488918	                    mov qword [rax], rbx	       544	syms.c	FUNCTION_4	IF_1
0x4000236	              0x5b	                                 pop rbx	       546	syms.c	FUNCTION_4
0x4000237	              0xc3	                                     ret	       546	syms.c	FUNCTION_4
_bfd_nosymbols_get_symbol_info	functions,0:IF,0:FOR,0:CALL,0:DO,0:ELSE,0:WHILE,0:SWITCH,0	1
0x40011f0	            0xf3c3	                                     ret	      1450	syms.c	FUNCTION_16
bfd_is_local_label	functions,0:IF,2:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:SWITCH,0	11
0x4000060	    0xf74618824100	        test dword [rsi + 0x18], 0x4182 	       377	syms.c	FUNCTION_1	IF_1
0x4000067	            0x7517	                           jne 0x4000080	       377	syms.c	FUNCTION_1	IF_1
0x4000069	        0x488b7608	                mov rsi, qword [rsi + 8]	       379	syms.c	FUNCTION_1	IF_2
0x400006d	          0x4885f6	                           test rsi, rsi	       379	syms.c	FUNCTION_1	IF_2
0x4000070	            0x740e	                            je 0x4000080	       379	syms.c	FUNCTION_1	IF_2
0x4000072	        0x488b4708	                mov rax, qword [rdi + 8]	       381	syms.c	FUNCTION_1	CALL_1
0x4000076	    0x488b80200200	           mov rax, qword [rax + 0x220] 	       381	syms.c	FUNCTION_1	CALL_1
0x400007d	            0xffe0	                                 jmp rax	       381	syms.c	FUNCTION_1	CALL_1
0x400007f	              0x90	                                     nop	       381	syms.c	FUNCTION_1	CALL_1
0x4000080	            0x31c0	                            xor eax, eax	       382	syms.c	FUNCTION_1
0x4000082	              0xc3	                                     ret	       382	syms.c	FUNCTION_1
_bfd_generic_read_minisymbols	functions,0:IF,7:FOR,0:CALL,7:DO,0:ELSE,2:WHILE,0:SWITCH,0	78
0x4000470	            0x85f6	                           test esi, esi	       805	syms.c	ELSE_1	FUNCTION_10	IF_1
0x4000472	            0x4156	                                push r14	       800	syms.c	ELSE_1	FUNCTION_10
0x4000474	            0x4155	                                push r13	       800	syms.c	ELSE_1	FUNCTION_10
0x4000476	          0x4189f5	                           mov r13d, esi	       800	syms.c	ELSE_1	FUNCTION_10
0x4000479	            0x4154	                                push r12	       800	syms.c	ELSE_1	FUNCTION_10
0x400047b	          0x4989d4	                            mov r12, rdx	       800	syms.c	ELSE_1	FUNCTION_10
0x400047e	              0x55	                                push rbp	       800	syms.c	ELSE_1	FUNCTION_10
0x400047f	          0x4889cd	                            mov rbp, rcx	       800	syms.c	ELSE_1	FUNCTION_10
0x4000482	              0x53	                                push rbx	       800	syms.c	ELSE_1	FUNCTION_10
0x4000483	          0x4889fb	                            mov rbx, rdi	       800	syms.c	ELSE_1	FUNCTION_10
0x4000486	        0x488b4708	                mov rax, qword [rdi + 8]	       806	syms.c	ELSE_1	FUNCTION_10	CALL_1
0x400048a	            0x7424	                            je 0x40004b0	       805	syms.c	ELSE_1	FUNCTION_10	IF_1
0x400048c	    0xff9038030000	                call qword [rax + 0x338]	       806	syms.c	ELSE_1	FUNCTION_10	CALL_1
0x4000492	          0x4885c0	                           test rax, rax	       809	syms.c	FUNCTION_10	ELSE_1	IF_2
0x4000495	            0x7824	                            js 0x40004bb	       809	syms.c	FUNCTION_10	ELSE_1	IF_2
0x4000497	      0xba00000000	                              mov edx, 0	       812	syms.c	FUNCTION_10	ELSE_1	IF_3
0x400049c	            0x7542	                           jne 0x40004e0	       811	syms.c	FUNCTION_10	ELSE_1	IF_3
0x400049e	              0x5b	                                 pop rbx	       835	syms.c	FUNCTION_10	ELSE_1
0x400049f	          0x4889d0	                            mov rax, rdx	       835	syms.c	FUNCTION_10	ELSE_1
0x40004a2	              0x5d	                                 pop rbp	       835	syms.c	FUNCTION_10	ELSE_1
0x40004a3	            0x415c	                                 pop r12	       835	syms.c	FUNCTION_10	ELSE_1
0x40004a5	            0x415d	                                 pop r13	       835	syms.c	FUNCTION_10	ELSE_1
0x40004a7	            0x415e	                                 pop r14	       835	syms.c	FUNCTION_10	ELSE_1
0x40004a9	              0xc3	                                     ret	       835	syms.c	FUNCTION_10	ELSE_1
0x40004aa	    0x660f1f440000	                    nop word [rax + rax]	       835	syms.c	FUNCTION_10	ELSE_1
0x40004b0	    0xff90f0010000	                call qword [rax + 0x1f0]	       808	syms.c	FUNCTION_10	ELSE_1	CALL_2
0x40004b6	          0x4885c0	                           test rax, rax	       809	syms.c	FUNCTION_10	ELSE_1	IF_2
0x40004b9	            0x79dc	                           jns 0x4000497	       809	syms.c	FUNCTION_10	ELSE_1	IF_2
0x40004bb	      0xbf07000000	                              mov edi, 7	       831	syms.c	FUNCTION_10	ELSE_1	CALL_6
0x40004c0	      0xe800000000	                          call 0x40004c5	       831	syms.c	FUNCTION_10	ELSE_1	CALL_6
0x40004c5	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       834	syms.c	FUNCTION_10	ELSE_1
0x40004cc	              0x5b	                                 pop rbx	       835	syms.c	FUNCTION_10	ELSE_1
0x40004cd	          0x4889d0	                            mov rax, rdx	       835	syms.c	FUNCTION_10	ELSE_1
0x40004d0	              0x5d	                                 pop rbp	       835	syms.c	FUNCTION_10	ELSE_1
0x40004d1	            0x415c	                                 pop r12	       835	syms.c	FUNCTION_10	ELSE_1
0x40004d3	            0x415d	                                 pop r13	       835	syms.c	FUNCTION_10	ELSE_1
0x40004d5	            0x415e	                                 pop r14	       835	syms.c	FUNCTION_10	ELSE_1
0x40004d7	              0xc3	                                     ret	       835	syms.c	FUNCTION_10	ELSE_1
0x40004d8	     0xf1f84000000	                   nop dword [rax + rax]	       835	syms.c	FUNCTION_10	ELSE_1
0x40004e0	          0x4889c7	                            mov rdi, rax	       814	syms.c	FUNCTION_10	ELSE_1	CALL_3
0x40004e3	      0xe800000000	                          call 0x40004e8	       814	syms.c	FUNCTION_10	ELSE_1	CALL_3
0x40004e8	          0x4885c0	                           test rax, rax	       815	syms.c	FUNCTION_10	ELSE_1	IF_4
0x40004eb	          0x4989c6	                            mov r14, rax	       814	syms.c	FUNCTION_10	ELSE_1	CALL_3
0x40004ee	            0x74cb	                            je 0x40004bb	       815	syms.c	FUNCTION_10	ELSE_1	IF_4
0x40004f0	          0x4585ed	                         test r13d, r13d	       818	syms.c	FUNCTION_10	ELSE_1	IF_5
0x40004f3	        0x488b4308	                mov rax, qword [rbx + 8]	       819	syms.c	FUNCTION_10	ELSE_1	CALL_4
0x40004f7	          0x4c89f6	                            mov rsi, r14	       819	syms.c	FUNCTION_10	ELSE_1	CALL_4
0x40004fa	          0x4889df	                            mov rdi, rbx	       819	syms.c	FUNCTION_10	ELSE_1	CALL_4
0x40004fd	            0x7529	                           jne 0x4000528	       818	syms.c	FUNCTION_10	ELSE_1	IF_5
0x40004ff	    0xff90f8010000	                call qword [rax + 0x1f8]	       821	syms.c	FUNCTION_10	ELSE_1	CALL_5
0x4000505	          0x4885c0	                           test rax, rax	       822	syms.c	FUNCTION_10	ELSE_1	IF_6
0x4000508	            0x7829	                            js 0x4000533	       822	syms.c	FUNCTION_10	ELSE_1	IF_6
0x400050a	          0x4889c2	                            mov rdx, rax	       828	syms.c	FUNCTION_10	ELSE_1
0x400050d	        0x4d893424	                    mov qword [r12], r14	       825	syms.c	FUNCTION_10	ELSE_1
0x4000511	    0xc74500080000	                      mov dword [rbp], 8	       826	syms.c	FUNCTION_10	ELSE_1
0x4000518	          0x4889d0	                            mov rax, rdx	       835	syms.c	FUNCTION_10	ELSE_1
0x400051b	              0x5b	                                 pop rbx	       835	syms.c	FUNCTION_10	ELSE_1
0x400051c	              0x5d	                                 pop rbp	       835	syms.c	FUNCTION_10	ELSE_1
0x400051d	            0x415c	                                 pop r12	       835	syms.c	FUNCTION_10	ELSE_1
0x400051f	            0x415d	                                 pop r13	       835	syms.c	FUNCTION_10	ELSE_1
0x4000521	            0x415e	                                 pop r14	       835	syms.c	FUNCTION_10	ELSE_1
0x4000523	              0xc3	                                     ret	       835	syms.c	FUNCTION_10	ELSE_1
0x4000524	         0xf1f4000	                         nop dword [rax]	       835	syms.c	FUNCTION_10	ELSE_1
0x4000528	    0xff9040030000	                call qword [rax + 0x340]	       819	syms.c	FUNCTION_10	ELSE_1	CALL_4
0x400052e	          0x4885c0	                           test rax, rax	       822	syms.c	FUNCTION_10	ELSE_1	IF_6
0x4000531	            0x79d7	                           jns 0x400050a	       822	syms.c	FUNCTION_10	ELSE_1	IF_6
0x4000533	      0xbf07000000	                              mov edi, 7	       831	syms.c	FUNCTION_10	ELSE_1	CALL_6
0x4000538	      0xe800000000	                          call 0x400053d	       831	syms.c	FUNCTION_10	ELSE_1	CALL_6
0x400053d	          0x4c89f7	                            mov rdi, r14	       833	syms.c	FUNCTION_10	ELSE_1	CALL_7
0x4000540	      0xe800000000	                          call 0x4000545	       833	syms.c	FUNCTION_10	ELSE_1	CALL_7
0x4000545	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       834	syms.c	FUNCTION_10	ELSE_1
0x400054c	              0x5b	                                 pop rbx	       835	syms.c	FUNCTION_10	ELSE_1
0x400054d	          0x4889d0	                            mov rax, rdx	       835	syms.c	FUNCTION_10	ELSE_1
0x4000550	              0x5d	                                 pop rbp	       835	syms.c	FUNCTION_10	ELSE_1
0x4000551	            0x415c	                                 pop r12	       835	syms.c	FUNCTION_10	ELSE_1
0x4000553	            0x415d	                                 pop r13	       835	syms.c	FUNCTION_10	ELSE_1
0x4000555	            0x415e	                                 pop r14	       835	syms.c	FUNCTION_10	ELSE_1
0x4000557	              0xc3	                                     ret	       835	syms.c	FUNCTION_10	ELSE_1
_bfd_nosymbols_find_nearest_line	functions,0:IF,0:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:SWITCH,0	1
0x4001230	      0xe900000000	                           jmp 0x4001235	      1485	syms.c	FUNCTION_20	CALL_1
bfd_set_symtab	functions,0:IF,1:FOR,0:CALL,4:DO,0:ELSE,0:WHILE,0:SWITCH,0	19
0x4000090	        0x4883ec08	                              sub rsp, 8	       451	syms.c	FUNCTION_2
0x4000094	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x4000098	            0x89c1	                            mov ecx, eax	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x400009a	          0x83e107	                              and ecx, 7	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x400009d	          0x80f901	                               cmp cl, 1	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x40000a0	            0x751e	                           jne 0x40000c0	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x40000a2	          0x83e008	                              and eax, 8	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x40000a5	            0x3c08	                               cmp al, 8	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x40000a7	            0x7417	                            je 0x40000c0	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x40000a9	    0x4889b7b00000	             mov qword [rdi + 0xb0], rsi	       458	syms.c	FUNCTION_2	CALL_3
0x40000b0	    0x8997b8000000	             mov dword [rdi + 0xb8], edx	       459	syms.c	FUNCTION_2	CALL_4
0x40000b6	      0xb801000000	                              mov eax, 1	       460	syms.c	FUNCTION_2
0x40000bb	        0x4883c408	                              add rsp, 8	       461	syms.c	FUNCTION_2
0x40000bf	              0xc3	                                     ret	       461	syms.c	FUNCTION_2
0x40000c0	      0xbf05000000	                              mov edi, 5	       454	syms.c	FUNCTION_2	IF_1	CALL_2
0x40000c5	      0xe800000000	                          call 0x40000ca	       454	syms.c	FUNCTION_2	IF_1	CALL_2
0x40000ca	            0x31c0	                            xor eax, eax	       455	syms.c	FUNCTION_2	IF_1
0x40000cc	        0x4883c408	                              add rsp, 8	       461	syms.c	FUNCTION_2
0x40000d0	              0xc3	                                     ret	       461	syms.c	FUNCTION_2
_bfd_nosymbols_find_inliner_info	functions,0:IF,0:FOR,0:CALL,1:DO,0:ELSE,0:WHILE,0:SWITCH,0	1
0x4001250	      0xe900000000	                           jmp 0x4001255	      1505	syms.c	FUNCTION_22	CALL_1
bfd_print_symbol_vandf	functions,0:IF,1:FOR,0:CALL,2:DO,0:ELSE,1:WHILE,0:SWITCH,0	96
0x40000e0	              0x55	                                push rbp	       476	syms.c	FUNCTION_3
0x40000e1	              0x53	                                push rbx	       476	syms.c	FUNCTION_3
0x40000e2	          0x4889f5	                            mov rbp, rsi	       476	syms.c	FUNCTION_3
0x40000e5	        0x4883ec08	                              sub rsp, 8	       476	syms.c	FUNCTION_3
0x40000e9	        0x488b4220	            mov rax, qword [rdx + 0x20] 	       481	syms.c	FUNCTION_3	IF_1
0x40000ed	          0x8b5a18	            mov ebx, dword [rdx + 0x18] 	       479	syms.c	FUNCTION_3
0x40000f0	          0x4885c0	                           test rax, rax	       481	syms.c	FUNCTION_3	IF_1
0x40000f3	     0xf8417010000	                            je 0x4000210	       481	syms.c	FUNCTION_3	IF_1
0x40000f9	        0x488b4028	            mov rax, qword [rax + 0x28] 	       482	syms.c	FUNCTION_3	CALL_1
0x40000fd	        0x48034210	             add rax, qword [rdx + 0x10]	       482	syms.c	FUNCTION_3	CALL_1
0x4000101	          0x4889c2	                            mov rdx, rax	       482	syms.c	FUNCTION_3	CALL_1
0x4000104	      0xe800000000	                          call 0x4000109	       482	syms.c	FUNCTION_3	CALL_1
0x4000109	          0xf6c308	                              test bl, 8	       489	syms.c	FUNCTION_3
0x400010c	      0xbf46000000	                           mov edi, 0x46	       489	syms.c	FUNCTION_3
0x4000111	            0x750e	                           jne 0x4000121	       489	syms.c	FUNCTION_3
0x4000113	          0xf6c740	                           test bh, 0x40	       503	syms.c	FUNCTION_3
0x4000116	      0xbf66000000	                           mov edi, 0x66	       503	syms.c	FUNCTION_3
0x400011b	     0xf84cf000000	                            je 0x40001f0	       503	syms.c	FUNCTION_3
0x4000121	          0xf6c304	                              test bl, 4	       489	syms.c	FUNCTION_3
0x4000124	      0xbe64000000	                           mov esi, 0x64	       489	syms.c	FUNCTION_3
0x4000129	            0x7512	                           jne 0x400013d	       489	syms.c	FUNCTION_3
0x400012b	            0x89d8	                            mov eax, ebx	       498	syms.c	FUNCTION_3
0x400012d	      0x2500800000	                         and eax, 0x8000	       498	syms.c	FUNCTION_3
0x4000132	          0x83f801	                              cmp eax, 1	       498	syms.c	FUNCTION_3
0x4000135	            0x19f6	                            sbb esi, esi	       498	syms.c	FUNCTION_3
0x4000137	          0x83e6dc	                     and esi, 0xffffffdc	       498	syms.c	FUNCTION_3
0x400013a	          0x83c644	                           add esi, 0x44	       498	syms.c	FUNCTION_3
0x400013d	          0xf6c720	                           test bh, 0x20	       489	syms.c	FUNCTION_3
0x4000140	      0xba49000000	                           mov edx, 0x49	       489	syms.c	FUNCTION_3
0x4000145	            0x7512	                           jne 0x4000159	       489	syms.c	FUNCTION_3
0x4000147	            0x89d8	                            mov eax, ebx	       497	syms.c	FUNCTION_3
0x4000149	      0x2500004000	                       and eax, 0x400000	       497	syms.c	FUNCTION_3
0x400014e	          0x83f801	                              cmp eax, 1	       497	syms.c	FUNCTION_3
0x4000151	            0x19d2	                            sbb edx, edx	       497	syms.c	FUNCTION_3
0x4000153	          0x83e2b7	                     and edx, 0xffffffb7	       497	syms.c	FUNCTION_3
0x4000156	          0x83c269	                           add edx, 0x69	       497	syms.c	FUNCTION_3
0x4000159	            0x89d8	                            mov eax, ebx	       489	syms.c	FUNCTION_3
0x400015b	            0x89d9	                            mov ecx, ebx	       489	syms.c	FUNCTION_3
0x400015d	      0x2500100000	                         and eax, 0x1000	       489	syms.c	FUNCTION_3
0x4000162	          0x83f801	                              cmp eax, 1	       489	syms.c	FUNCTION_3
0x4000165	            0x19c0	                            sbb eax, eax	       489	syms.c	FUNCTION_3
0x4000167	    0x81e100080000	                          and ecx, 0x800	       489	syms.c	FUNCTION_3
0x400016d	          0x83e0c9	                     and eax, 0xffffffc9	       489	syms.c	FUNCTION_3
0x4000170	          0x83c057	                           add eax, 0x57	       489	syms.c	FUNCTION_3
0x4000173	          0x83f901	                              cmp ecx, 1	       489	syms.c	FUNCTION_3
0x4000176	            0x89d9	                            mov ecx, ebx	       489	syms.c	FUNCTION_3
0x4000178	          0x4519c9	                            sbb r9d, r9d	       489	syms.c	FUNCTION_3
0x400017b	    0x81e180000000	                           and ecx, 0x80	       489	syms.c	FUNCTION_3
0x4000181	        0x4183e1dd	                     and r9d, 0xffffffdd	       489	syms.c	FUNCTION_3
0x4000185	        0x4183c143	                           add r9d, 0x43	       489	syms.c	FUNCTION_3
0x4000189	          0x83f901	                              cmp ecx, 1	       489	syms.c	FUNCTION_3
0x400018c	          0x4519c0	                            sbb r8d, r8d	       489	syms.c	FUNCTION_3
0x400018f	        0x4183e0a9	                     and r8d, 0xffffffa9	       489	syms.c	FUNCTION_3
0x4000193	        0x4183c077	                           add r8d, 0x77	       489	syms.c	FUNCTION_3
0x4000197	          0xf6c301	                              test bl, 1	       489	syms.c	FUNCTION_3
0x400019a	            0x7434	                            je 0x40001d0	       489	syms.c	FUNCTION_3
0x400019c	          0x83e302	                              and ebx, 2	       491	syms.c	FUNCTION_3
0x400019f	          0x83fb01	                              cmp ebx, 1	       491	syms.c	FUNCTION_3
0x40001a2	            0x19c9	                            sbb ecx, ecx	       491	syms.c	FUNCTION_3
0x40001a4	          0x83e14b	                           and ecx, 0x4b	       491	syms.c	FUNCTION_3
0x40001a7	          0x83c121	                           add ecx, 0x21	       491	syms.c	FUNCTION_3
0x40001aa	              0x57	                                push rdi	        97	stdio2.h	CALL_12
0x40001ab	              0x56	                                push rsi	        97	stdio2.h	CALL_12
0x40001ac	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_12
0x40001af	              0x52	                                push rdx	        97	stdio2.h	CALL_12
0x40001b0	              0x50	                                push rax	        97	stdio2.h	CALL_12
0x40001b1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_12
0x40001b6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x40001bb	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x40001bd	      0xe800000000	                          call 0x40001c2	        97	stdio2.h	CALL_12
0x40001c2	        0x4883c428	                           add rsp, 0x28	       504	syms.c	FUNCTION_3
0x40001c6	              0x5b	                                 pop rbx	       504	syms.c	FUNCTION_3
0x40001c7	              0x5d	                                 pop rbp	       504	syms.c	FUNCTION_3
0x40001c8	              0xc3	                                     ret	       504	syms.c	FUNCTION_3
0x40001c9	     0xf1f80000000	                         nop dword [rax]	       504	syms.c	FUNCTION_3
0x40001d0	          0xf6c302	                              test bl, 2	       493	syms.c	FUNCTION_3
0x40001d3	      0xb967000000	                           mov ecx, 0x67	       493	syms.c	FUNCTION_3
0x40001d8	            0x75d0	                           jne 0x40001aa	       493	syms.c	FUNCTION_3
0x40001da	    0x81e300008000	                       and ebx, 0x800000	       493	syms.c	FUNCTION_3
0x40001e0	          0x83fb01	                              cmp ebx, 1	       493	syms.c	FUNCTION_3
0x40001e3	            0x19c9	                            sbb ecx, ecx	       493	syms.c	FUNCTION_3
0x40001e5	          0x83e1ab	                     and ecx, 0xffffffab	       493	syms.c	FUNCTION_3
0x40001e8	          0x83c175	                           add ecx, 0x75	       493	syms.c	FUNCTION_3
0x40001eb	            0xebbd	                           jmp 0x40001aa	       493	syms.c	FUNCTION_3
0x40001ed	           0xf1f00	                         nop dword [rax]	       493	syms.c	FUNCTION_3
0x40001f0	            0x89d8	                            mov eax, ebx	       503	syms.c	FUNCTION_3
0x40001f2	      0x2500000100	                        and eax, 0x10000	       503	syms.c	FUNCTION_3
0x40001f7	          0x83f801	                              cmp eax, 1	       503	syms.c	FUNCTION_3
0x40001fa	            0x19ff	                            sbb edi, edi	       503	syms.c	FUNCTION_3
0x40001fc	          0x83e7d1	                     and edi, 0xffffffd1	       503	syms.c	FUNCTION_3
0x40001ff	          0x83c74f	                           add edi, 0x4f	       503	syms.c	FUNCTION_3
0x4000202	      0xe91affffff	                           jmp 0x4000121	       503	syms.c	FUNCTION_3
0x4000207	    0x660f1f840000	                    nop word [rax + rax]	       503	syms.c	FUNCTION_3
0x4000210	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       484	syms.c	FUNCTION_3	CALL_2
0x4000214	      0xe800000000	                          call 0x4000219	       484	syms.c	FUNCTION_3	CALL_2
0x4000219	      0xe9ebfeffff	                           jmp 0x4000109	       484	syms.c	FUNCTION_3	CALL_2
