ctor_cmp	DO,0:functions,0:ELSE,3:SWITCH,0:IF,6:CALL,2:WHILE,0:FOR,0	38
0x40000c0	            0x4155	                                push r13	       153	ldctor.c	FUNCTION_3
0x40000c2	            0x4154	                                push r12	       153	ldctor.c	FUNCTION_3
0x40000c4	          0x4989fc	                            mov r12, rdi	       153	ldctor.c	FUNCTION_3
0x40000c7	              0x55	                                push rbp	       153	ldctor.c	FUNCTION_3
0x40000c8	              0x53	                                push rbx	       153	ldctor.c	FUNCTION_3
0x40000c9	          0x4889f5	                            mov rbp, rsi	       153	ldctor.c	FUNCTION_3
0x40000cc	        0x4883ec08	                              sub rsp, 8	       153	ldctor.c	FUNCTION_3
0x40000d0	          0x488b07	                    mov rax, qword [rdi]	       163	ldctor.c	FUNCTION_3
0x40000d3	          0x488b16	                    mov rdx, qword [rsi]	       166	ldctor.c	FUNCTION_3
0x40000d6	        0x488b7808	                mov rdi, qword [rax + 8]	       163	ldctor.c	FUNCTION_3
0x40000da	        0x488b5a08	                mov rbx, qword [rdx + 8]	       166	ldctor.c	FUNCTION_3
0x40000de	      0xb800000000	                              mov eax, 0	       165	ldctor.c	FUNCTION_3	IF_1
0x40000e3	          0x4885ff	                           test rdi, rdi	       165	ldctor.c	FUNCTION_3	IF_1
0x40000e6	        0x480f44f8	                          cmove rdi, rax	       165	ldctor.c	FUNCTION_3	IF_1
0x40000ea	          0x4885db	                           test rbx, rbx	       168	ldctor.c	FUNCTION_3	IF_2
0x40000ed	        0x480f44d8	                          cmove rbx, rax	       168	ldctor.c	FUNCTION_3	IF_2
0x40000f1	      0xe84affffff	                      call sym.ctor_prio	       174	ldctor.c	FUNCTION_3	CALL_1
0x40000f6	          0x4889df	                            mov rdi, rbx	       175	ldctor.c	FUNCTION_3	CALL_2
0x40000f9	          0x4189c5	                           mov r13d, eax	       174	ldctor.c	FUNCTION_3	CALL_1
0x40000fc	      0xe83fffffff	                      call sym.ctor_prio	       175	ldctor.c	FUNCTION_3	CALL_2
0x4000101	          0x4139c5	                           cmp r13d, eax	       178	ldctor.c	FUNCTION_3	IF_3
0x4000104	      0xba01000000	                              mov edx, 1	       179	ldctor.c	FUNCTION_3	IF_3
0x4000109	            0x7c0d	                            jl 0x4000118	       178	ldctor.c	FUNCTION_3	IF_3
0x400010b	            0x7f1b	                            jg 0x4000128	       185	ldctor.c	FUNCTION_3	IF_5
0x400010d	          0x4939ec	                            cmp r12, rbp	       185	ldctor.c	FUNCTION_3	IF_5
0x4000110	            0x7216	                            jb 0x4000128	       185	ldctor.c	FUNCTION_3	IF_5
0x4000112	           0xf97c2	                                 seta dl	       179	ldctor.c	FUNCTION_3	IF_3
0x4000115	           0xfb6d2	                           movzx edx, dl	       179	ldctor.c	FUNCTION_3	IF_3
0x4000118	        0x4883c408	                              add rsp, 8	       191	ldctor.c	FUNCTION_3	ELSE_3
0x400011c	            0x89d0	                            mov eax, edx	       191	ldctor.c	FUNCTION_3	ELSE_3
0x400011e	              0x5b	                                 pop rbx	       191	ldctor.c	FUNCTION_3	ELSE_3
0x400011f	              0x5d	                                 pop rbp	       191	ldctor.c	FUNCTION_3	ELSE_3
0x4000120	            0x415c	                                 pop r12	       191	ldctor.c	FUNCTION_3	ELSE_3
0x4000122	            0x415d	                                 pop r13	       191	ldctor.c	FUNCTION_3	ELSE_3
0x4000124	              0xc3	                                     ret	       191	ldctor.c	FUNCTION_3	ELSE_3
0x4000125	           0xf1f00	                         nop dword [rax]	       191	ldctor.c	FUNCTION_3	ELSE_3
0x4000128	      0xbaffffffff	                     mov edx, 0xffffffff	       186	ldctor.c	FUNCTION_3	IF_5
0x400012d	            0xebe9	                           jmp 0x4000118	       186	ldctor.c	FUNCTION_3	IF_5
ldctor_add_set_entry	DO,0:functions,0:ELSE,1:SWITCH,0:IF,4:CALL,9:WHILE,0:FOR,2	102
0x4000130	            0x4157	                                push r15	        60	ldctor.c	FUNCTION_1
0x4000132	            0x4156	                                push r14	        60	ldctor.c	FUNCTION_1
0x4000134	          0x4189f7	                           mov r15d, esi	        60	ldctor.c	FUNCTION_1
0x4000137	            0x4155	                                push r13	        60	ldctor.c	FUNCTION_1
0x4000139	            0x4154	                                push r12	        60	ldctor.c	FUNCTION_1
0x400013b	          0x4989d5	                            mov r13, rdx	        60	ldctor.c	FUNCTION_1
0x400013e	              0x55	                                push rbp	        60	ldctor.c	FUNCTION_1
0x400013f	              0x53	                                push rbx	        60	ldctor.c	FUNCTION_1
0x4000140	          0x4889fd	                            mov rbp, rdi	        60	ldctor.c	FUNCTION_1
0x4000143	          0x4989cc	                            mov r12, rcx	        60	ldctor.c	FUNCTION_1
0x4000146	          0x4d89c6	                             mov r14, r8	        60	ldctor.c	FUNCTION_1
0x4000149	        0x4883ec08	                              sub rsp, 8	        60	ldctor.c	FUNCTION_1
0x400014d	    0x488b1d000000	            mov rbx, qword [0x04000154] 	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000154	          0x4885db	                           test rbx, rbx	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000157	            0x7421	                            je 0x400017a	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000159	        0x483b7b08	                cmp rdi, qword [rbx + 8]	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x400015d	            0x7513	                           jne 0x4000172	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x400015f	      0xe9a4000000	                           jmp 0x4000208	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x4000164	         0xf1f4000	                         nop dword [rax]	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x4000168	        0x48396b08	                cmp qword [rbx + 8], rbp	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x400016c	     0xf8496000000	                            je 0x4000208	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x4000172	          0x488b1b	                    mov rbx, qword [rbx]	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000175	          0x4885db	                           test rbx, rbx	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000178	            0x75ee	                           jne 0x4000168	        65	ldctor.c	FUNCTION_1	FOR_1
0x400017a	      0xbf28000000	                           mov edi, 0x28	        71	ldctor.c	FUNCTION_1	IF_2	CALL_1
0x400017f	      0xe800000000	                          call 0x4000184	        71	ldctor.c	FUNCTION_1	IF_2	CALL_1
0x4000184	          0x4889c3	                            mov rbx, rax	        71	ldctor.c	FUNCTION_1	IF_2	CALL_1
0x4000187	    0x488b05000000	            mov rax, qword [0x0400018e] 	        72	ldctor.c	FUNCTION_1	IF_2
0x400018e	        0x48896b08	                mov qword [rbx + 8], rbp	        74	ldctor.c	FUNCTION_1	IF_2
0x4000192	        0x44897b10	            mov dword [rbx + 0x10], r15d	        75	ldctor.c	FUNCTION_1	IF_2
0x4000196	    0x48c743180000	               mov qword [rbx + 0x18], 0	        76	ldctor.c	FUNCTION_1	IF_2
0x400019e	    0x48c743200000	               mov qword [rbx + 0x20], 0	        77	ldctor.c	FUNCTION_1	IF_2
0x40001a6	          0x488903	                    mov qword [rbx], rax	        72	ldctor.c	FUNCTION_1	IF_2
0x40001a9	    0x48891d000000	            mov qword [0x040001b0], rbx 	        73	ldctor.c	FUNCTION_1	IF_2
0x40001b0	      0xbf20000000	                           mov edi, 0x20	       107	ldctor.c	FUNCTION_1	CALL_9
0x40001b5	      0xe800000000	                          call 0x40001ba	       107	ldctor.c	FUNCTION_1	CALL_9
0x40001ba	    0x48c700000000	                      mov qword [rax], 0	       108	ldctor.c	FUNCTION_1
0x40001c1	        0x4c896808	                mov qword [rax + 8], r13	       109	ldctor.c	FUNCTION_1
0x40001c5	        0x4c896010	             mov qword [rax + 0x10], r12	       110	ldctor.c	FUNCTION_1
0x40001c9	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       113	ldctor.c	FUNCTION_1	FOR_2
0x40001cd	        0x4c897018	             mov qword [rax + 0x18], r14	       111	ldctor.c	FUNCTION_1
0x40001d1	          0x4885c9	                           test rcx, rcx	       113	ldctor.c	FUNCTION_1	FOR_2
0x40001d4	            0x750d	                           jne 0x40001e3	       113	ldctor.c	FUNCTION_1	FOR_2
0x40001d6	      0xe9bd000000	                           jmp 0x4000298	       113	ldctor.c	FUNCTION_1	FOR_2
0x40001db	       0xf1f440000	                   nop dword [rax + rax]	       113	ldctor.c	FUNCTION_1	FOR_2
0x40001e0	          0x4889d1	                            mov rcx, rdx	       113	ldctor.c	FUNCTION_1	FOR_2
0x40001e3	          0x488b11	                    mov rdx, qword [rcx]	       113	ldctor.c	FUNCTION_1	FOR_2
0x40001e6	          0x4885d2	                           test rdx, rdx	       113	ldctor.c	FUNCTION_1	FOR_2
0x40001e9	            0x75f5	                           jne 0x40001e0	       113	ldctor.c	FUNCTION_1	FOR_2
0x40001eb	          0x488901	                    mov qword [rcx], rax	       115	ldctor.c	FUNCTION_1
0x40001ee	      0x4883431801	               add qword [rbx + 0x18], 1	       117	ldctor.c	FUNCTION_1
0x40001f3	        0x4883c408	                              add rsp, 8	       118	ldctor.c	FUNCTION_1
0x40001f7	              0x5b	                                 pop rbx	       118	ldctor.c	FUNCTION_1
0x40001f8	              0x5d	                                 pop rbp	       118	ldctor.c	FUNCTION_1
0x40001f9	            0x415c	                                 pop r12	       118	ldctor.c	FUNCTION_1
0x40001fb	            0x415d	                                 pop r13	       118	ldctor.c	FUNCTION_1
0x40001fd	            0x415e	                                 pop r14	       118	ldctor.c	FUNCTION_1
0x40001ff	            0x415f	                                 pop r15	       118	ldctor.c	FUNCTION_1
0x4000201	              0xc3	                                     ret	       118	ldctor.c	FUNCTION_1
0x4000202	    0x660f1f440000	                    nop word [rax + rax]	       118	ldctor.c	FUNCTION_1
0x4000208	        0x44397b10	           cmp dword [rbx + 0x10], r15d 	        81	ldctor.c	FUNCTION_1	ELSE_1	IF_3
0x400020c	            0x755a	                           jne 0x4000268	        81	ldctor.c	FUNCTION_1	ELSE_1	IF_3
0x400020e	        0x488b4320	            mov rax, qword [rbx + 0x20] 	        95	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000212	          0x4885c0	                           test rax, rax	        95	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000215	            0x7499	                            je 0x40001b0	        95	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000217	    0x498b9424f000	            mov rdx, qword [r12 + 0xf0] 	        96	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x400021f	          0x4885d2	                           test rdx, rdx	        96	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000222	            0x748c	                            je 0x40001b0	        96	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000224	        0x488b4010	            mov rax, qword [rax + 0x10] 	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000228	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x400022f	          0x4885c0	                           test rax, rax	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000232	     0xf8478ffffff	                            je 0x40001b0	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000238	        0x488b4808	                mov rcx, qword [rax + 8]	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x400023c	        0x488b4208	                mov rax, qword [rdx + 8]	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x4000240	          0x488b31	                    mov rsi, qword [rcx]	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x4000243	          0x488b38	                    mov rdi, qword [rax]	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x4000246	      0xe800000000	                          call 0x400024b	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x400024b	            0x85c0	                           test eax, eax	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x400024d	     0xf845dffffff	                            je 0x40001b0	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x4000253	        0x488b5d08	                mov rbx, qword [rbp + 8]	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x4000257	      0xba05000000	                              mov edx, 5	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x400025c	      0xbe00000000	                              mov esi, 0	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x4000261	            0xeb13	                           jmp 0x4000276	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x4000263	       0xf1f440000	                   nop dword [rax + rax]	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x4000268	        0x488b5d08	                mov rbx, qword [rbp + 8]	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x400026c	      0xba05000000	                              mov edx, 5	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x4000271	      0xbe00000000	                              mov esi, 0	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x4000276	            0x31ff	                            xor edi, edi	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x4000278	      0xe800000000	                          call 0x400027d	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x400027d	        0x4883c408	                              add rsp, 8	       118	ldctor.c	FUNCTION_1
0x4000281	          0x4889de	                            mov rsi, rbx	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x4000284	          0x4889c7	                            mov rdi, rax	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x4000287	              0x5b	                                 pop rbx	       118	ldctor.c	FUNCTION_1
0x4000288	              0x5d	                                 pop rbp	       118	ldctor.c	FUNCTION_1
0x4000289	            0x415c	                                 pop r12	       118	ldctor.c	FUNCTION_1
0x400028b	            0x415d	                                 pop r13	       118	ldctor.c	FUNCTION_1
0x400028d	            0x415e	                                 pop r14	       118	ldctor.c	FUNCTION_1
0x400028f	            0x415f	                                 pop r15	       118	ldctor.c	FUNCTION_1
0x4000291	            0x31c0	                            xor eax, eax	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x4000293	      0xe900000000	                           jmp 0x4000298	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x4000298	        0x488d4b20	                   lea rcx, [rbx + 0x20]	       113	ldctor.c	FUNCTION_1	FOR_2
0x400029c	      0xe94affffff	                           jmp 0x40001eb	       113	ldctor.c	FUNCTION_1	FOR_2
ldctor_build_sets	DO,0:functions,0:ELSE,4:SWITCH,1:IF,16:CALL,50:WHILE,1:FOR,6	311
0x40002b0	    0x8b1500000000	            mov edx, dword [0x040002b6] 	       207	ldctor.c	ELSE_3	FUNCTION_4	IF_1
0x40002b6	            0x85d2	                           test edx, edx	       207	ldctor.c	ELSE_3	FUNCTION_4	IF_1
0x40002b8	     0xf8582040000	                           jne 0x4000740	       207	ldctor.c	ELSE_3	FUNCTION_4	IF_1
0x40002be	            0x4157	                                push r15	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40002c0	            0x4156	                                push r14	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40002c2	            0x4155	                                push r13	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40002c4	            0x4154	                                push r12	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40002c6	              0x55	                                push rbp	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40002c7	              0x53	                                push rbx	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40002c8	        0x4883ec08	                              sub rsp, 8	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40002cc	    0x8b0500000000	            mov eax, dword [0x040002d2] 	       211	ldctor.c	ELSE_3	FUNCTION_4	IF_2
0x40002d2	    0xc70500000000	               mov dword [0x040002dc], 1	       209	ldctor.c	ELSE_3	FUNCTION_4
0x40002dc	            0x85c0	                           test eax, eax	       211	ldctor.c	ELSE_3	FUNCTION_4	IF_2
0x40002de	     0xf8578030000	                           jne 0x400065c	       211	ldctor.c	ELSE_3	FUNCTION_4	IF_2
0x40002e4	      0xbf00000000	                              mov edi, 0	       247	ldctor.c	ELSE_3	FUNCTION_4	CALL_4
0x40002e9	          0x4531ed	                          xor r13d, r13d	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x40002ec	      0xe800000000	                          call 0x40002f1	       247	ldctor.c	ELSE_3	FUNCTION_4	CALL_4
0x40002f1	      0xbf00000000	                              mov edi, 0	       248	ldctor.c	ELSE_3	FUNCTION_4	CALL_5
0x40002f6	      0xe800000000	                          call 0x40002fb	       248	ldctor.c	ELSE_3	FUNCTION_4	CALL_5
0x40002fb	    0x4c8b25000000	            mov r12, qword [0x04000302] 	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x4000302	          0x4d85e4	                           test r12, r12	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x4000305	     0xf84c5010000	                            je 0x40004d0	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x400030b	       0xf1f440000	                   nop dword [rax + rax]	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x4000310	      0x498b442408	                mov rax, qword [r12 + 8]	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x4000315	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x4000319	          0x83e803	                              sub eax, 3	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x400031c	            0x3c01	                               cmp al, 1	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x400031e	     0xf869f010000	                           jbe 0x40004c3	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x4000324	      0x418b742410	            mov esi, dword [r12 + 0x10] 	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x4000329	    0x488b3d000000	            mov rdi, qword [0x04000330] 	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x4000330	      0xe800000000	                          call 0x4000335	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x4000335	          0x4885c0	                           test rax, rax	       275	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5
0x4000338	          0x4989c7	                            mov r15, rax	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x400033b	     0xf842f020000	                            je 0x4000570	       275	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5
0x4000341	          0x4c89ff	                            mov rdi, r15	       308	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_21
0x4000344	      0xe800000000	                          call 0x4000349	       308	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_21
0x4000349	          0x83f802	                              cmp eax, 2	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400034c	            0x89c3	                            mov ebx, eax	       308	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_21
0x400034e	     0xf84fd020000	                            je 0x4000651	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000354	     0xf86aa020000	                           jbe 0x4000604	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400035a	          0x83f804	                              cmp eax, 4	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400035d	    0x41be1c010000	                         mov r14d, 0x11c	       313	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000363	            0x741c	                            je 0x4000381	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000365	          0x83f808	                              cmp eax, 8	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000368	     0xf85a5020000	                           jne 0x4000613	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400036e	          0x4531f6	                          xor r14d, r14d	       316	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	IF_10
0x4000371	      0x41837f1802	               cmp dword [r15 + 0x18], 2	       316	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	IF_10
0x4000376	        0x410f94c6	                               sete r14b	       316	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	IF_10
0x400037a	    0x4181c61a0100	                         add r14d, 0x11a	       316	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	IF_10
0x4000381	          0x4863fb	                         movsxd rdi, ebx	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000384	      0xe800000000	                          call 0x4000389	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000389	      0xbf17010000	                          mov edi, 0x117	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x400038e	          0x4889c6	                            mov rsi, rax	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000391	      0xe800000000	                          call 0x4000396	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000396	            0x31d2	                            xor edx, edx	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000398	          0x4889c6	                            mov rsi, rax	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x400039b	      0xbf00000000	                              mov edi, 0	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40003a0	      0xe800000000	                          call 0x40003a5	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40003a5	          0x4889c7	                            mov rdi, rax	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40003a8	      0xe800000000	                          call 0x40003ad	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40003ad	      0xbe00000000	                              mov esi, 0	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x40003b2	      0xbf03010000	                          mov edi, 0x103	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x40003b7	      0xe800000000	                          call 0x40003bc	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x40003bc	      0x498b542408	                mov rdx, qword [r12 + 8]	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x40003c1	          0x4889c6	                            mov rsi, rax	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x40003c4	        0x488b7a08	                mov rdi, qword [rdx + 8]	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x40003c8	            0x31d2	                            xor edx, edx	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x40003ca	      0xe800000000	                          call 0x40003cf	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x40003cf	          0x4889c7	                            mov rdi, rax	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x40003d2	      0xe800000000	                          call 0x40003d7	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x40003d7	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x40003dc	      0xe800000000	                          call 0x40003e1	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x40003e1	          0x4489f7	                           mov edi, r14d	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x40003e4	          0x4889c6	                            mov rsi, rax	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x40003e7	      0xe800000000	                          call 0x40003ec	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x40003ec	      0x498b6c2420	            mov rbp, qword [r12 + 0x20] 	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x40003f1	          0x4885ed	                           test rbp, rbp	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x40003f4	     0xf84b7000000	                            je 0x40004b1	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x40003fa	    0x660f1f440000	                    nop word [rax + rax]	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x4000400	    0x48833d000000	               cmp qword [0x04000408], 0	       338	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11
0x4000408	            0x7464	                            je 0x400046e	       338	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11
0x400040a	          0x4585ed	                         test r13d, r13d	       342	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12
0x400040d	     0xf840d010000	                            je 0x4000520	       342	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12
0x4000413	      0x498b442408	                mov rax, qword [r12 + 8]	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x4000418	      0xbf00000000	                              mov edi, 0	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x400041d	        0x488b7008	                mov rsi, qword [rax + 8]	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x4000421	            0x31c0	                            xor eax, eax	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x4000423	      0xe800000000	                          call 0x4000428	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x4000428	      0x498b442408	                mov rax, qword [r12 + 8]	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x400042d	        0x488b7808	                mov rdi, qword [rax + 8]	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x4000431	      0xe800000000	                          call 0x4000436	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x4000436	          0x83f812	                           cmp eax, 0x12	       351	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x4000439	            0x89c3	                            mov ebx, eax	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x400043b	     0xf8fcf000000	                            jg 0x4000510	       351	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x4000441	     0xf1f80000000	                         nop dword [rax]	       351	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x4000448	          0x83c301	                              add ebx, 1	       359	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1
0x400044b	      0xe800000000	                          call 0x4000450	       358	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1	CALL_39
0x4000450	          0x83fb14	                           cmp ebx, 0x14	       356	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1
0x4000453	            0x75f3	                           jne 0x4000448	       356	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1
0x4000455	        0x488b7508	                mov rsi, qword [rbp + 8]	       362	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_14
0x4000459	          0x4885f6	                           test rsi, rsi	       362	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_14
0x400045c	     0xf84ee000000	                            je 0x4000550	       362	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_14
0x4000462	      0xbf00000000	                              mov edi, 0	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x4000467	            0x31c0	                            xor eax, eax	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x4000469	      0xe800000000	                          call 0x400046e	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x400046e	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       369	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15	CALL_42
0x4000472	    0x4881ff000000	                              cmp rdi, 0	       369	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15	CALL_42
0x4000479	            0x7407	                            je 0x4000482	       369	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15	CALL_42
0x400047b	    0x814f20000020	         or dword [rdi + 0x20], 0x200000	       370	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15
0x4000482	     0xfb605000000	           movzx eax, byte [0x04000489] 	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x4000489	          0x83e003	                              and eax, 3	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x400048c	            0x3c02	                               cmp al, 2	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x400048e	            0x7458	                            je 0x40004e8	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x4000490	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x4000494	      0xe800000000	                          call 0x4000499	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x4000499	          0x4489f7	                           mov edi, r14d	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x400049c	          0x4889c6	                            mov rsi, rax	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x400049f	      0xe800000000	                          call 0x40004a4	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x40004a4	        0x488b6d00	                    mov rbp, qword [rbp]	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x40004a8	          0x4885ed	                           test rbp, rbp	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x40004ab	     0xf854fffffff	                           jne 0x4000400	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x40004b1	            0x31ff	                            xor edi, edi	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x40004b3	      0xe800000000	                          call 0x40004b8	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x40004b8	          0x4489f7	                           mov edi, r14d	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x40004bb	          0x4889c6	                            mov rsi, rax	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x40004be	      0xe800000000	                          call 0x40004c3	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x40004c3	        0x4d8b2424	                    mov r12, qword [r12]	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x40004c7	          0x4d85e4	                           test r12, r12	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x40004ca	     0xf8540feffff	                           jne 0x4000310	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x40004d0	        0x4883c408	                              add rsp, 8	       383	ldctor.c	FUNCTION_4	ELSE_3
0x40004d4	              0x5b	                                 pop rbx	       383	ldctor.c	FUNCTION_4	ELSE_3
0x40004d5	              0x5d	                                 pop rbp	       383	ldctor.c	FUNCTION_4	ELSE_3
0x40004d6	            0x415c	                                 pop r12	       383	ldctor.c	FUNCTION_4	ELSE_3
0x40004d8	            0x415d	                                 pop r13	       383	ldctor.c	FUNCTION_4	ELSE_3
0x40004da	            0x415e	                                 pop r14	       383	ldctor.c	FUNCTION_4	ELSE_3
0x40004dc	            0x415f	                                 pop r15	       383	ldctor.c	FUNCTION_4	ELSE_3
0x40004de	      0xe900000000	                           jmp 0x40004e3	       382	ldctor.c	FUNCTION_4	ELSE_3	CALL_50
0x40004e3	       0xf1f440000	                   nop dword [rax + rax]	       382	ldctor.c	FUNCTION_4	ELSE_3	CALL_50
0x40004e8	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       374	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_45
0x40004ec	      0xe800000000	                          call 0x40004f1	       374	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_45
0x40004f1	        0x488b4d08	                mov rcx, qword [rbp + 8]	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x40004f5	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x40004f9	          0x4989c0	                             mov r8, rax	       374	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_45
0x40004fc	      0x418b7c2410	            mov edi, dword [r12 + 0x10] 	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x4000501	          0x4c89fe	                            mov rsi, r15	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x4000504	      0xe800000000	                          call 0x4000509	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x4000509	            0xeb99	                           jmp 0x40004a4	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x400050b	       0xf1f440000	                   nop dword [rax + rax]	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x4000510	      0xe800000000	                          call 0x4000515	       353	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13	CALL_38
0x4000515	            0x31db	                            xor ebx, ebx	       354	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x4000517	      0xe92cffffff	                           jmp 0x4000448	       354	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x400051c	         0xf1f4000	                         nop dword [rax]	       354	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x4000520	      0xba05000000	                              mov edx, 5	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000525	      0xbe00000000	                              mov esi, 0	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x400052a	            0x31ff	                            xor edi, edi	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x400052c	      0xe800000000	                          call 0x4000531	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000531	          0x4889c7	                            mov rdi, rax	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000534	            0x31c0	                            xor eax, eax	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000536	    0x41bd01000000	                             mov r13d, 1	       345	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12
0x400053c	      0xe800000000	                          call 0x4000541	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000541	      0xe9cdfeffff	                           jmp 0x4000413	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000546	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000550	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000554	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000558	      0xbf00000000	                              mov edi, 0	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x400055d	            0x31c0	                            xor eax, eax	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x400055f	    0x488bb2f00000	            mov rsi, qword [rdx + 0xf0] 	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000566	      0xe800000000	                          call 0x400056b	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x400056b	      0xe9fefeffff	                           jmp 0x400046e	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000570	     0xfb605000000	           movzx eax, byte [0x04000577] 	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x4000577	          0x83e003	                              and eax, 3	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x400057a	            0x3c02	                               cmp al, 2	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x400057c	     0xf840b020000	                            je 0x400078d	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x4000582	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x4000587	        0x488b4010	            mov rax, qword [rax + 0x10] 	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x400058b	    0x488bb8f00000	            mov rdi, qword [rax + 0xf0] 	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x4000592	          0x4885ff	                           test rdi, rdi	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x4000595	     0xf84a7010000	                            je 0x4000742	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x400059b	      0x418b742410	            mov esi, dword [r12 + 0x10] 	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x40005a0	      0xe800000000	                          call 0x40005a5	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x40005a5	          0x4885c0	                           test rax, rax	       291	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8
0x40005a8	          0x4989c7	                            mov r15, rax	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x40005ab	     0xf8590fdffff	                           jne 0x4000341	       291	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8
0x40005b1	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x40005b6	        0x488b4010	            mov rax, qword [rax + 0x10] 	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x40005ba	    0x4883b8f00000	               cmp qword [rax + 0xf0], 0	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x40005c2	     0xf847a010000	                            je 0x4000742	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x40005c8	      0x498b442408	                mov rax, qword [r12 + 8]	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x40005cd	      0x418b7c2410	            mov edi, dword [r12 + 0x10] 	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x40005d2	        0x4c8b7008	                mov r14, qword [rax + 8]	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x40005d6	      0xe800000000	                          call 0x40005db	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x40005db	          0x4889c5	                            mov rbp, rax	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x40005de	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       301	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_19
0x40005e3	      0xba05000000	                              mov edx, 5	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x40005e8	      0xbe00000000	                              mov esi, 0	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x40005ed	        0x488b4010	            mov rax, qword [rax + 0x10] 	       301	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_19
0x40005f1	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       301	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_19
0x40005f8	        0x488b4008	                mov rax, qword [rax + 8]	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x40005fc	          0x488b18	                    mov rbx, qword [rax]	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x40005ff	      0xe96a010000	                           jmp 0x400076e	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000604	          0x83f801	                              cmp eax, 1	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000607	    0x41be1e010000	                         mov r14d, 0x11e	       311	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400060d	     0xf846efdffff	                            je 0x4000381	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000613	      0x498b442408	                mov rax, qword [r12 + 8]	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x4000618	          0x4c89ff	                            mov rdi, r15	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x400061b	        0x4c8b7008	                mov r14, qword [rax + 8]	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x400061f	      0xe800000000	                          call 0x4000624	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x4000624	      0xba05000000	                              mov edx, 5	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x4000629	            0x89c5	                            mov ebp, eax	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x400062b	      0xbe00000000	                              mov esi, 0	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x4000630	            0x31ff	                            xor edi, edi	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x4000632	      0xe800000000	                          call 0x4000637	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x4000637	          0x4c89f2	                            mov rdx, r14	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x400063a	          0x4889c7	                            mov rdi, rax	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x400063d	            0x89ee	                            mov esi, ebp	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x400063f	            0x31c0	                            xor eax, eax	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x4000641	    0x41be1c010000	                         mov r14d, 0x11c	       323	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000647	      0xe800000000	                          call 0x400064c	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x400064c	      0xe930fdffff	                           jmp 0x4000381	       324	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000651	    0x41be1d010000	                         mov r14d, 0x11d	       312	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000657	      0xe925fdffff	                           jmp 0x4000381	       312	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400065c	    0x4c8b25000000	            mov r12, qword [0x04000663] 	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000663	          0x4d85e4	                           test r12, r12	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000666	     0xf8478fcffff	                            je 0x40002e4	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x400066c	         0xf1f4000	                         nop dword [rax]	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000670	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x4000675	          0x4885c0	                           test rax, rax	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x4000678	     0xf84b0000000	                            je 0x400072e	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x400067e	            0x31db	                            xor ebx, ebx	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x4000680	            0xeb08	                           jmp 0x400068a	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x4000682	    0x660f1f440000	                    nop word [rax + rax]	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x4000688	            0x89d3	                            mov ebx, edx	       224	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x400068a	          0x488b00	                    mov rax, qword [rax]	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x400068d	          0x8d5301	                      lea edx, [rbx + 1]	       224	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x4000690	          0x4885c0	                           test rax, rax	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x4000693	            0x75f3	                           jne 0x4000688	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x4000695	          0x4863ea	                         movsxd rbp, edx	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x4000698	    0x488d3ced0000	                        lea rdi, [rbp*8]	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x40006a0	      0xe800000000	                          call 0x40006a5	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x40006a5	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40006aa	          0x4989c5	                            mov r13, rax	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x40006ad	          0x4889c1	                            mov rcx, rax	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x40006b0	          0x4885d2	                           test rdx, rdx	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40006b3	            0x7412	                            je 0x40006c7	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40006b5	           0xf1f00	                         nop dword [rax]	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40006b8	          0x488911	                    mov qword [rcx], rdx	       231	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40006bb	          0x488b12	                    mov rdx, qword [rdx]	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40006be	        0x4883c108	                              add rcx, 8	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40006c2	          0x4885d2	                           test rdx, rdx	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40006c5	            0x75f1	                           jne 0x40006b8	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40006c7	      0xba08000000	                              mov edx, 8	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x40006cc	      0xb900000000	                              mov ecx, 0	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x40006d1	          0x4889ee	                            mov rsi, rbp	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x40006d4	          0x4c89ef	                            mov rdi, r13	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x40006d7	      0xe800000000	                          call 0x40006dc	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x40006dc	        0x498b4500	                    mov rax, qword [r13]	       237	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40006e0	            0x31d2	                            xor edx, edx	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40006e2	            0x85db	                           test ebx, ebx	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40006e4	      0x4989442420	             mov qword [r12 + 0x20], rax	       238	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40006e9	            0x742f	                            je 0x400071a	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40006eb	          0x8d43ff	                      lea eax, [rbx - 1]	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40006ee	          0x4c89ea	                            mov rdx, r13	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40006f1	      0x498d44c508	              lea rax, [r13 + rax*8 + 8]	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x40006f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000700	          0x488b0a	                    mov rcx, qword [rdx]	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000703	        0x488b7208	                mov rsi, qword [rdx + 8]	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000707	        0x4883c208	                              add rdx, 8	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400070b	          0x4839d0	                            cmp rax, rdx	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400070e	          0x488931	                    mov qword [rcx], rsi	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000711	            0x75ed	                           jne 0x4000700	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000713	          0x4863d3	                         movsxd rdx, ebx	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000716	        0x48c1e203	                              shl rdx, 3	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400071a	      0x498b441500	              mov rax, qword [r13 + rdx]	       241	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x400071f	          0x4c89ef	                            mov rdi, r13	       243	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_3
0x4000722	    0x48c700000000	                      mov qword [rax], 0	       241	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000729	      0xe800000000	                          call 0x400072e	       243	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_3
0x400072e	        0x4d8b2424	                    mov r12, qword [r12]	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000732	          0x4d85e4	                           test r12, r12	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000735	     0xf8535ffffff	                           jne 0x4000670	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x400073b	      0xe9a4fbffff	                           jmp 0x40002e4	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000740	            0xf3c3	                                     ret	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000742	      0x498b442408	                mov rax, qword [r12 + 8]	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000747	      0x418b7c2410	            mov edi, dword [r12 + 0x10] 	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x400074c	        0x4c8b7008	                mov r14, qword [rax + 8]	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000750	      0xe800000000	                          call 0x4000755	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000755	          0x4889c5	                            mov rbp, rax	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000758	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       296	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_15
0x400075d	      0xba05000000	                              mov edx, 5	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000762	      0xbe00000000	                              mov esi, 0	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000767	        0x488b4010	            mov rax, qword [rax + 0x10] 	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x400076b	          0x488b18	                    mov rbx, qword [rax]	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x400076e	            0x31ff	                            xor edi, edi	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000770	      0xe800000000	                          call 0x4000775	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000775	          0x4c89f1	                            mov rcx, r14	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000778	          0x4889c7	                            mov rdi, rax	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x400077b	          0x4889ea	                            mov rdx, rbp	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x400077e	          0x4889de	                            mov rsi, rbx	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000781	            0x31c0	                            xor eax, eax	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000783	      0xe800000000	                          call 0x4000788	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000788	      0xe936fdffff	                           jmp 0x40004c3	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x400078d	      0x498b442408	                mov rax, qword [r12 + 8]	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000792	      0x418b7c2410	            mov edi, dword [r12 + 0x10] 	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000797	        0x4c8b7008	                mov r14, qword [rax + 8]	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x400079b	      0xe800000000	                          call 0x40007a0	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40007a0	          0x4889c5	                            mov rbp, rax	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40007a3	    0x488b05000000	            mov rax, qword [0x040007aa] 	       280	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_10
0x40007aa	      0xba05000000	                              mov edx, 5	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40007af	      0xbe00000000	                              mov esi, 0	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40007b4	        0x488b4008	                mov rax, qword [rax + 8]	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40007b8	          0x488b18	                    mov rbx, qword [rax]	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40007bb	            0xebb1	                           jmp 0x400076e	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
