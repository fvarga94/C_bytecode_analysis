bfd_perform_relocation	CALL,26:ELSE,4:functions,0:SWITCH,1:FOR,0:IF,14:WHILE,0:DO,0	302
0x4000200	            0x4157	                                push r15	       615	reloc.c	FUNCTION_4
0x4000202	            0x4156	                                push r14	       615	reloc.c	FUNCTION_4
0x4000204	          0x4989cf	                            mov r15, rcx	       615	reloc.c	FUNCTION_4
0x4000207	            0x4155	                                push r13	       615	reloc.c	FUNCTION_4
0x4000209	            0x4154	                                push r12	       615	reloc.c	FUNCTION_4
0x400020b	          0x4989fd	                            mov r13, rdi	       615	reloc.c	FUNCTION_4
0x400020e	              0x55	                                push rbp	       615	reloc.c	FUNCTION_4
0x400020f	              0x53	                                push rbx	       615	reloc.c	FUNCTION_4
0x4000210	          0x4d89c6	                             mov r14, r8	       615	reloc.c	FUNCTION_4
0x4000213	          0x4889f3	                            mov rbx, rsi	       615	reloc.c	FUNCTION_4
0x4000216	        0x4883ec28	                           sub rsp, 0x28	       615	reloc.c	FUNCTION_4
0x400021a	          0x488b06	                    mov rax, qword [rsi]	       624	reloc.c	FUNCTION_4
0x400021d	        0x488b6e18	            mov rbp, qword [rsi + 0x18] 	       620	reloc.c	FUNCTION_4
0x4000221	      0x4889542408	                mov qword [rsp + 8], rdx	       615	reloc.c	FUNCTION_4
0x4000226	          0x4c8b20	                    mov r12, qword [rax]	       624	reloc.c	FUNCTION_4
0x4000229	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	       629	reloc.c	FUNCTION_4	IF_1	CALL_1
0x400022e	    0x4881fa000000	                              cmp rdx, 0	       629	reloc.c	FUNCTION_4	IF_1	CALL_1
0x4000235	     0xf8495010000	                            je 0x40003d0	       629	reloc.c	FUNCTION_4	IF_1	CALL_1
0x400023b	          0x4885ed	                           test rbp, rbp	       637	reloc.c	FUNCTION_4	IF_2
0x400023e	     0xf84bc010000	                            je 0x4000400	       637	reloc.c	FUNCTION_4	IF_2
0x4000244	    0xc74424140200	               mov dword [rsp + 0x14], 2	       617	reloc.c	FUNCTION_4
0x400024c	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       637	reloc.c	FUNCTION_4	IF_2
0x4000250	          0x4885c0	                           test rax, rax	       637	reloc.c	FUNCTION_4	IF_2
0x4000253	            0x7440	                            je 0x4000295	       637	reloc.c	FUNCTION_4	IF_2
0x4000255	        0x4883ec08	                              sub rsp, 8	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000259	          0x4d89f8	                             mov r8, r15	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x400025c	          0x4c89e2	                            mov rdx, r12	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x400025f	            0x4151	                                 push r9	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000261	          0x4889de	                            mov rsi, rbx	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000264	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000269	          0x4d89f1	                             mov r9, r14	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x400026c	          0x4c89ef	                            mov rdi, r13	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x400026f	            0xffd0	                                call rax	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000271	          0x83f805	                              cmp eax, 5	       648	reloc.c	FUNCTION_4	IF_2	IF_3
0x4000274	            0x4159	                                  pop r9	       648	reloc.c	FUNCTION_4	IF_2	IF_3
0x4000276	            0x415a	                                 pop r10	       648	reloc.c	FUNCTION_4	IF_2	IF_3
0x4000278	            0x7416	                            je 0x4000290	       648	reloc.c	FUNCTION_4	IF_2	IF_3
0x400027a	        0x4883c428	                           add rsp, 0x28	       991	reloc.c	FUNCTION_4
0x400027e	              0x5b	                                 pop rbx	       991	reloc.c	FUNCTION_4
0x400027f	              0x5d	                                 pop rbp	       991	reloc.c	FUNCTION_4
0x4000280	            0x415c	                                 pop r12	       991	reloc.c	FUNCTION_4
0x4000282	            0x415d	                                 pop r13	       991	reloc.c	FUNCTION_4
0x4000284	            0x415e	                                 pop r14	       991	reloc.c	FUNCTION_4
0x4000286	            0x415f	                                 pop r15	       991	reloc.c	FUNCTION_4
0x4000288	              0xc3	                                     ret	       991	reloc.c	FUNCTION_4
0x4000289	     0xf1f80000000	                         nop dword [rax]	       991	reloc.c	FUNCTION_4
0x4000290	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	       991	reloc.c	FUNCTION_4
0x4000295	    0x4881fa000000	                              cmp rdx, 0	       653	reloc.c	FUNCTION_4	IF_4
0x400029c	            0x7521	                           jne 0x40002bf	       653	reloc.c	FUNCTION_4	IF_4
0x400029e	          0x4d85f6	                           test r14, r14	       653	reloc.c	FUNCTION_4	IF_4
0x40002a1	            0x741c	                            je 0x40002bf	       653	reloc.c	FUNCTION_4	IF_4
0x40002a3	        0x498b4760	            mov rax, qword [r15 + 0x60] 	       655	reloc.c	FUNCTION_4	IF_4
0x40002a7	        0x48014308	                add qword [rbx + 8], rax	       655	reloc.c	FUNCTION_4	IF_4
0x40002ab	        0x4883c428	                           add rsp, 0x28	       991	reloc.c	FUNCTION_4
0x40002af	              0x5b	                                 pop rbx	       991	reloc.c	FUNCTION_4
0x40002b0	      0xb802000000	                              mov eax, 2	       656	reloc.c	FUNCTION_4	IF_4
0x40002b5	              0x5d	                                 pop rbp	       991	reloc.c	FUNCTION_4
0x40002b6	            0x415c	                                 pop r12	       991	reloc.c	FUNCTION_4
0x40002b8	            0x415d	                                 pop r13	       991	reloc.c	FUNCTION_4
0x40002ba	            0x415e	                                 pop r14	       991	reloc.c	FUNCTION_4
0x40002bc	            0x415f	                                 pop r15	       991	reloc.c	FUNCTION_4
0x40002be	              0xc3	                                     ret	       991	reloc.c	FUNCTION_4
0x40002bf	        0x488b4308	                mov rax, qword [rbx + 8]	       664	reloc.c	FUNCTION_4	CALL_4
0x40002c3	          0x4c89ef	                            mov rdi, r13	       664	reloc.c	FUNCTION_4	CALL_4
0x40002c6	      0x4889442418	             mov qword [rsp + 0x18], rax	       664	reloc.c	FUNCTION_4	CALL_4
0x40002cb	      0xe800000000	                          call 0x40002d0	       664	reloc.c	FUNCTION_4	CALL_4
0x40002d0	            0x89c0	                            mov eax, eax	       664	reloc.c	FUNCTION_4	CALL_4
0x40002d2	          0x4c89fa	                            mov rdx, r15	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x40002d5	          0x4c89ee	                            mov rsi, r13	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x40002d8	    0x480faf442418	            imul rax, qword [rsp + 0x18]	       664	reloc.c	FUNCTION_4	CALL_4
0x40002de	          0x4889ef	                            mov rdi, rbp	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x40002e1	          0x4889c1	                            mov rcx, rax	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x40002e4	      0x4889442418	             mov qword [rsp + 0x18], rax	       664	reloc.c	FUNCTION_4	CALL_4
0x40002e9	      0xe800000000	                          call 0x40002ee	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x40002ee	            0x89c2	                            mov edx, eax	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x40002f0	      0xb804000000	                              mov eax, 4	       666	reloc.c	FUNCTION_4	IF_6
0x40002f5	            0x85d2	                           test edx, edx	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x40002f7	            0x7481	                            je 0x400027a	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x40002f9	      0x498b4c2420	            mov rcx, qword [r12 + 0x20] 	       672	reloc.c	FUNCTION_4	IF_7	CALL_6
0x40002fe	            0x31c0	                            xor eax, eax	       673	reloc.c	FUNCTION_4	IF_7
0x4000300	        0xf6412110	           test byte [rcx + 0x21], 0x10 	       672	reloc.c	FUNCTION_4	IF_7	CALL_6
0x4000304	     0xf8436010000	                            je 0x4000440	       672	reloc.c	FUNCTION_4	IF_7	CALL_6
0x400030a	          0x4d85f6	                           test r14, r14	       680	reloc.c	FUNCTION_4	IF_8
0x400030d	     0xf84a5000000	                            je 0x40003b8	       680	reloc.c	FUNCTION_4	IF_8
0x4000313	        0x448b4530	            mov r8d, dword [rbp + 0x30] 	       680	reloc.c	FUNCTION_4	IF_8
0x4000317	            0x31f6	                            xor esi, esi	       682	reloc.c	FUNCTION_4	IF_8
0x4000319	          0x4585c0	                           test r8d, r8d	       680	reloc.c	FUNCTION_4	IF_8
0x400031c	     0xf8596000000	                           jne 0x40003b8	       680	reloc.c	FUNCTION_4	IF_8
0x4000322	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       689	reloc.c	FUNCTION_4	ELSE_2
0x4000326	          0x8b7d10	            mov edi, dword [rbp + 0x10] 	       694	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x4000329	          0x4989d4	                            mov r12, rdx	       694	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x400032c	        0x4c036160	             add r12, qword [rcx + 0x60]	       694	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x4000330	          0x4c01e0	                            add rax, r12	       694	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x4000333	            0x85ff	                           test edi, edi	       694	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x4000335	        0x4c8d2406	                    lea r12, [rsi + rax]	       689	reloc.c	FUNCTION_4	ELSE_2
0x4000339	            0x7417	                            je 0x4000352	       694	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x400033b	        0x498b4768	            mov rax, qword [r15 + 0x68] 	       725	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x400033f	          0x8b7548	            mov esi, dword [rbp + 0x48] 	       727	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x4000342	        0x4d2b6760	             sub r12, qword [r15 + 0x60]	       724	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x4000346	        0x4c2b6028	             sub r12, qword [rax + 0x28]	       724	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x400034a	            0x85f6	                           test esi, esi	       727	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x400034c	            0x7404	                            je 0x4000352	       727	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x400034e	        0x4c2b6308	                sub r12, qword [rbx + 8]	       728	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x4000352	          0x4d85f6	                           test r14, r14	       731	reloc.c	FUNCTION_4	IF_11
0x4000355	            0x7425	                            je 0x400037c	       731	reloc.c	FUNCTION_4	IF_11
0x4000357	          0x8b4d30	            mov ecx, dword [rbp + 0x30] 	       733	reloc.c	FUNCTION_4	IF_11	IF_12
0x400035a	            0x85c9	                           test ecx, ecx	       733	reloc.c	FUNCTION_4	IF_11	IF_12
0x400035c	     0xf84ee000000	                            je 0x4000450	       733	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000362	        0x498b4760	            mov rax, qword [r15 + 0x60] 	       750	reloc.c	FUNCTION_4	IF_11	ELSE_3
0x4000366	        0x48014308	                add qword [rbx + 8], rax	       750	reloc.c	FUNCTION_4	IF_11	ELSE_3
0x400036a	        0x498b4508	                mov rax, qword [r13 + 8]	       753	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x400036e	        0x83780802	                  cmp dword [rax + 8], 2	       753	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4000372	     0xf8490020000	                            je 0x4000608	       753	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4000378	        0x4c896310	             mov qword [rbx + 0x10], r12	       831	reloc.c	FUNCTION_4	IF_11	ELSE_3	ELSE_4
0x400037c	          0x8b4518	            mov eax, dword [rbp + 0x18] 	       844	reloc.c	FUNCTION_4	IF_14
0x400037f	            0x85c0	                           test eax, eax	       844	reloc.c	FUNCTION_4	IF_14
0x4000381	     0xf8491000000	                            je 0x4000418	       844	reloc.c	FUNCTION_4	IF_14
0x4000387	      0x837c241402	               cmp dword [rsp + 0x14], 2	       844	reloc.c	FUNCTION_4	IF_14
0x400038c	     0xf8586000000	                           jne 0x4000418	       844	reloc.c	FUNCTION_4	IF_14
0x4000392	          0x4c89ef	                            mov rdi, r13	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4000395	      0xe800000000	                          call 0x400039a	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x400039a	          0x8b5d04	                mov ebx, dword [rbp + 4]	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x400039d	          0x8b750c	              mov esi, dword [rbp + 0xc]	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x40003a0	          0x4d89e0	                             mov r8, r12	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x40003a3	          0x8b7d18	            mov edi, dword [rbp + 0x18] 	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x40003a6	            0x89c1	                            mov ecx, eax	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x40003a8	            0x89da	                            mov edx, ebx	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x40003aa	      0xe800000000	                          call 0x40003af	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x40003af	        0x89442414	             mov dword [rsp + 0x14], eax	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x40003b3	            0xeb66	                           jmp 0x400041b	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x40003b5	           0xf1f00	                         nop dword [rax]	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x40003b8	        0x488b5168	            mov rdx, qword [rcx + 0x68] 	       677	reloc.c	FUNCTION_4
0x40003bc	          0x4885d2	                           test rdx, rdx	       681	reloc.c	FUNCTION_4	IF_8
0x40003bf	     0xf84a0000000	                            je 0x4000465	       681	reloc.c	FUNCTION_4	IF_8
0x40003c5	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	       684	reloc.c	FUNCTION_4	ELSE_2
0x40003c9	      0xe954ffffff	                           jmp 0x4000322	       684	reloc.c	FUNCTION_4	ELSE_2
0x40003ce	            0x6690	                                     nop	       684	reloc.c	FUNCTION_4	ELSE_2
0x40003d0	    0x41f644241880	           test byte [r12 + 0x18], 0x80 	       631	reloc.c	FUNCTION_4	IF_1
0x40003d6	            0x750d	                           jne 0x40003e5	       631	reloc.c	FUNCTION_4	IF_1
0x40003d8	          0x4d85c0	                             test r8, r8	       631	reloc.c	FUNCTION_4	IF_1
0x40003db	    0xc74424140800	               mov dword [rsp + 0x14], 8	       632	reloc.c	FUNCTION_4	IF_1
0x40003e3	            0x7408	                            je 0x40003ed	       631	reloc.c	FUNCTION_4	IF_1
0x40003e5	    0xc74424140200	               mov dword [rsp + 0x14], 2	       617	reloc.c	FUNCTION_4
0x40003ed	          0x4885ed	                           test rbp, rbp	       637	reloc.c	FUNCTION_4	IF_2
0x40003f0	     0xf8556feffff	                           jne 0x400024c	       637	reloc.c	FUNCTION_4	IF_2
0x40003f6	      0xb808000000	                              mov eax, 8	       661	reloc.c	FUNCTION_4	IF_5
0x40003fb	      0xe97afeffff	                           jmp 0x400027a	       661	reloc.c	FUNCTION_4	IF_5
0x4000400	          0x4d85c0	                             test r8, r8	       653	reloc.c	FUNCTION_4	IF_4
0x4000403	            0x74f1	                            je 0x40003f6	       653	reloc.c	FUNCTION_4	IF_4
0x4000405	    0x4881fa000000	                              cmp rdx, 0	       653	reloc.c	FUNCTION_4	IF_4
0x400040c	     0xf8491feffff	                            je 0x40002a3	       653	reloc.c	FUNCTION_4	IF_4
0x4000412	            0xebe2	                           jmp 0x40003f6	       653	reloc.c	FUNCTION_4	IF_4
0x4000414	         0xf1f4000	                         nop dword [rax]	       653	reloc.c	FUNCTION_4	IF_4
0x4000418	          0x8b5d04	                mov ebx, dword [rbp + 4]	       653	reloc.c	FUNCTION_4	IF_4
0x400041b	            0x89d9	                            mov ecx, ebx	       878	reloc.c	FUNCTION_4
0x400041d	          0x8b4508	                mov eax, dword [rbp + 8]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4000420	          0x49d3ec	                             shr r12, cl	       878	reloc.c	FUNCTION_4
0x4000423	          0x8b4d14	            mov ecx, dword [rbp + 0x14] 	       881	reloc.c	FUNCTION_4
0x4000426	          0x83c002	                              add eax, 2	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4000429	          0x49d3e4	                             shl r12, cl	       881	reloc.c	FUNCTION_4
0x400042c	          0x83f807	                              cmp eax, 7	       919	reloc.c	FUNCTION_4	SWITCH_1
0x400042f	     0xf8710020000	                            ja 0x4000645	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4000435	    0xff24c5000000	                       jmp qword [rax*8]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x400043c	         0xf1f4000	                         nop dword [rax]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4000440	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       675	reloc.c	FUNCTION_4	ELSE_1
0x4000445	      0xe9c0feffff	                           jmp 0x400030a	       675	reloc.c	FUNCTION_4	ELSE_1
0x400044a	    0x660f1f440000	                    nop word [rax + rax]	       675	reloc.c	FUNCTION_4	ELSE_1
0x4000450	        0x498b4760	            mov rax, qword [r15 + 0x60] 	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000454	        0x4c896310	             mov qword [rbx + 0x10], r12	       738	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000458	        0x48014308	                add qword [rbx + 8], rax	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x400045c	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       740	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000460	      0xe915feffff	                           jmp 0x400027a	       740	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000465	            0x31f6	                            xor esi, esi	       682	reloc.c	FUNCTION_4	IF_8
0x4000467	      0xe9b6feffff	                           jmp 0x4000322	       682	reloc.c	FUNCTION_4	IF_8
0x400046c	      0x4c8b742408	                mov r14, qword [rsp + 8]	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4000471	      0x4c03742418	             add r14, qword [rsp + 0x18]	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4000476	        0x498b4508	                mov rax, qword [r13 + 8]	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x400047a	          0x4c89f7	                            mov rdi, r14	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x400047d	          0xff5038	                 call qword [rax + 0x38]	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4000480	          0x4889c2	                            mov rdx, rax	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x4000483	        0x48235538	             and rdx, qword [rbp + 0x38]	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x4000487	          0x4c01e2	                            add rdx, r12	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x400048a	          0x4831c2	                            xor rdx, rax	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x400048d	        0x48235540	             and rdx, qword [rbp + 0x40]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4000491	          0x4c89f6	                            mov rsi, r14	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4000494	          0x4889d7	                            mov rdi, rdx	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4000497	          0x4831c7	                            xor rdi, rax	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x400049a	        0x498b4508	                mov rax, qword [r13 + 8]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x400049e	          0xff5048	                 call qword [rax + 0x48]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x40004a1	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       990	reloc.c	FUNCTION_4
0x40004a5	      0xe9d0fdffff	                           jmp 0x400027a	       960	reloc.c	FUNCTION_4	SWITCH_1
0x40004aa	      0x4c8b742408	                mov r14, qword [rsp + 8]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40004af	      0x4c03742418	             add r14, qword [rsp + 0x18]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40004b4	        0x498b4508	                mov rax, qword [r13 + 8]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40004b8	          0x4c89f7	                            mov rdi, r14	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40004bb	          0xff5020	                 call qword [rax + 0x20]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40004be	          0x4889c2	                            mov rdx, rax	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40004c1	        0x48235538	             and rdx, qword [rbp + 0x38]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x40004c5	          0x4c89f6	                            mov rsi, r14	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x40004c8	          0x4c01e2	                            add rdx, r12	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x40004cb	          0x4831c2	                            xor rdx, rax	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x40004ce	        0x48235540	             and rdx, qword [rbp + 0x40]	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x40004d2	          0x4831d0	                            xor rax, rdx	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x40004d5	          0x4889c7	                            mov rdi, rax	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x40004d8	        0x498b4508	                mov rax, qword [r13 + 8]	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x40004dc	          0xff5030	                 call qword [rax + 0x30]	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x40004df	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       990	reloc.c	FUNCTION_4
0x40004e3	      0xe992fdffff	                           jmp 0x400027a	       985	reloc.c	FUNCTION_4	SWITCH_1
0x40004e8	      0x4c8b742408	                mov r14, qword [rsp + 8]	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x40004ed	      0x4c03742418	             add r14, qword [rsp + 0x18]	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x40004f2	        0x498b4508	                mov rax, qword [r13 + 8]	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x40004f6	          0x4c89f7	                            mov rdi, r14	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x40004f9	          0xff5050	                 call qword [rax + 0x50]	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x40004fc	            0x89c7	                            mov edi, eax	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x40004fe	        0x66237d38	               and di, word [rbp + 0x38]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4000502	          0x4c89f6	                            mov rsi, r14	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4000505	          0x4401e7	                           add edi, r12d	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4000508	            0x31c7	                            xor edi, eax	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x400050a	        0x66237d40	               and di, word [rbp + 0x40]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x400050e	            0x31f8	                            xor eax, edi	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4000510	        0x480fbff8	                           movsx rdi, ax	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4000514	        0x498b4508	                mov rax, qword [r13 + 8]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4000518	          0xff5060	                 call qword [rax + 0x60]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x400051b	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       990	reloc.c	FUNCTION_4
0x400051f	      0xe956fdffff	                           jmp 0x400027a	       945	reloc.c	FUNCTION_4	SWITCH_1
0x4000524	      0x4c8b742408	                mov r14, qword [rsp + 8]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x4000529	      0x4c03742418	             add r14, qword [rsp + 0x18]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x400052e	        0x410fb616	                   movzx edx, byte [r14]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x4000532	            0x89d0	                            mov eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4000534	          0x224538	               and al, byte [rbp + 0x38]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4000537	          0x4401e0	                           add eax, r12d	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x400053a	            0x31d0	                            xor eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x400053c	          0x224540	               and al, byte [rbp + 0x40]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x400053f	            0x31d0	                            xor eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4000541	          0x418806	                      mov byte [r14], al	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4000544	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       990	reloc.c	FUNCTION_4
0x4000548	      0xe92dfdffff	                           jmp 0x400027a	       937	reloc.c	FUNCTION_4	SWITCH_1
0x400054d	      0x4c8b742408	                mov r14, qword [rsp + 8]	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000552	      0x4c03742418	             add r14, qword [rsp + 0x18]	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000557	        0x498b4508	                mov rax, qword [r13 + 8]	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x400055b	          0x4c89f7	                            mov rdi, r14	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x400055e	          0xff5050	                 call qword [rax + 0x50]	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000561	          0x4889c2	                            mov rdx, rax	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4000564	        0x48235538	             and rdx, qword [rbp + 0x38]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4000568	          0x4c89f6	                            mov rsi, r14	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x400056b	          0x4c29e2	                            sub rdx, r12	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x400056e	          0x4831c2	                            xor rdx, rax	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4000571	        0x48235540	             and rdx, qword [rbp + 0x40]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4000575	          0x4889d7	                            mov rdi, rdx	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4000578	          0x4831c7	                            xor rdi, rax	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x400057b	        0x498b4508	                mov rax, qword [r13 + 8]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x400057f	          0xff5060	                 call qword [rax + 0x60]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4000582	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       990	reloc.c	FUNCTION_4
0x4000586	      0xe9effcffff	                           jmp 0x400027a	       969	reloc.c	FUNCTION_4	SWITCH_1
0x400058b	      0x4c8b742408	                mov r14, qword [rsp + 8]	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x4000590	      0x4c03742418	             add r14, qword [rsp + 0x18]	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x4000595	        0x498b4508	                mov rax, qword [r13 + 8]	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x4000599	          0x4c89f7	                            mov rdi, r14	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x400059c	          0xff5038	                 call qword [rax + 0x38]	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x400059f	          0x4889c2	                            mov rdx, rax	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x40005a2	        0x48235538	             and rdx, qword [rbp + 0x38]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x40005a6	          0x4c29e2	                            sub rdx, r12	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x40005a9	      0xe9dcfeffff	                           jmp 0x400048a	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x40005ae	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40005b3	        0x498b4508	                mov rax, qword [r13 + 8]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40005b7	          0x4d89fe	                            mov r14, r15	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40005ba	      0x4c03742418	             add r14, qword [rsp + 0x18]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40005bf	          0x4c89f7	                            mov rdi, r14	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40005c2	          0xff5038	                 call qword [rax + 0x38]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40005c5	        0x48c1f808	                              sar rax, 8	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40005c9	          0x4c89f6	                            mov rsi, r14	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40005cc	          0x4889c3	                            mov rbx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40005cf	        0x48235d38	             and rbx, qword [rbp + 0x38]	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40005d3	          0x4c01e3	                            add rbx, r12	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40005d6	          0x4831c3	                            xor rbx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40005d9	        0x48235d40	             and rbx, qword [rbp + 0x40]	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40005dd	          0x4831c3	                            xor rbx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40005e0	        0x498b4508	                mov rax, qword [r13 + 8]	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40005e4	          0x4889df	                            mov rdi, rbx	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40005e7	        0x48c1ff08	                              sar rdi, 8	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40005eb	          0xff5060	                 call qword [rax + 0x60]	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40005ee	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x40005f3	      0x41885c0702	            mov byte [r15 + rax + 2], bl	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x40005f8	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       990	reloc.c	FUNCTION_4
0x40005fc	      0xe979fcffff	                           jmp 0x400027a	       929	reloc.c	FUNCTION_4	SWITCH_1
0x4000601	     0xf1f80000000	                         nop dword [rax]	       929	reloc.c	FUNCTION_4	SWITCH_1
0x4000608	          0x488b00	                    mov rax, qword [rax]	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x400060b	      0xbf00000000	                              mov edi, 0	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4000610	      0xb912000000	                           mov ecx, 0x12	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4000615	          0x4889c6	                            mov rsi, rax	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4000618	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x400061a	     0xf8458fdffff	                            je 0x4000378	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4000620	      0xbf00000000	                              mov edi, 0	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x4000625	      0xb90f000000	                            mov ecx, 0xf	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x400062a	          0x4889c6	                            mov rsi, rax	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x400062d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x400062f	     0xf8443fdffff	                            je 0x4000378	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x4000635	          0x4929d4	                            sub r12, rdx	       826	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4000638	    0x48c743100000	               mov qword [rbx + 0x10], 0	       827	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4000640	      0xe937fdffff	                           jmp 0x400037c	       827	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4000645	      0xb807000000	                              mov eax, 7	       987	reloc.c	FUNCTION_4	SWITCH_1
0x400064a	      0xe92bfcffff	                           jmp 0x400027a	       987	reloc.c	FUNCTION_4	SWITCH_1
bfd_get_reloc_code_name	CALL,0:ELSE,0:functions,0:SWITCH,0:FOR,0:IF,1:WHILE,0:DO,0	8
0x4001020	    0x81ffcd080000	                          cmp edi, 0x8cd	      8083	reloc.c	FUNCTION_12	IF_1
0x4001026	            0x7710	                            ja 0x4001038	      8083	reloc.c	FUNCTION_12	IF_1
0x4001028	            0x89ff	                            mov edi, edi	      8085	reloc.c	FUNCTION_12
0x400102a	    0x488b04fd0000	                  mov rax, qword [rdi*8]	      8085	reloc.c	FUNCTION_12
0x4001032	              0xc3	                                     ret	      8085	reloc.c	FUNCTION_12
0x4001033	       0xf1f440000	                   nop dword [rax + rax]	      8085	reloc.c	FUNCTION_12
0x4001038	            0x31c0	                            xor eax, eax	      8084	reloc.c	FUNCTION_12	IF_1
0x400103a	              0xc3	                                     ret	      8086	reloc.c	FUNCTION_12
_bfd_generic_set_reloc	CALL,0:ELSE,0:functions,0:SWITCH,0:FOR,0:IF,0:WHILE,0:DO,0	3
0x4001540	    0x488996800000	             mov qword [rsi + 0x80], rdx	      8383	reloc.c	FUNCTION_18
0x4001547	    0x898e88000000	             mov dword [rsi + 0x88], ecx	      8384	reloc.c	FUNCTION_18
0x400154d	              0xc3	                                     ret	      8384	reloc.c	FUNCTION_18
_bfd_clear_contents	CALL,15:ELSE,0:functions,0:SWITCH,2:FOR,0:IF,1:WHILE,0:DO,0	134
0x4000db0	            0x4156	                                push r14	      1621	reloc.c	FUNCTION_8
0x4000db2	            0x4155	                                push r13	      1621	reloc.c	FUNCTION_8
0x4000db4	          0x4989d6	                            mov r14, rdx	      1621	reloc.c	FUNCTION_8
0x4000db7	            0x4154	                                push r12	      1621	reloc.c	FUNCTION_8
0x4000db9	              0x55	                                push rbp	      1621	reloc.c	FUNCTION_8
0x4000dba	          0x4989f5	                            mov r13, rsi	      1621	reloc.c	FUNCTION_8
0x4000dbd	              0x53	                                push rbx	      1621	reloc.c	FUNCTION_8
0x4000dbe	          0x4889fd	                            mov rbp, rdi	      1621	reloc.c	FUNCTION_8
0x4000dc1	          0x4989cc	                            mov r12, rcx	      1621	reloc.c	FUNCTION_8
0x4000dc4	      0xe800000000	                          call 0x4000dc9	      1626	reloc.c	FUNCTION_8	CALL_1
0x4000dc9	          0x83f808	                              cmp eax, 8	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x4000dcc	     0xf871e010000	                            ja 0x4000ef0	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x4000dd2	            0x89c3	                            mov ebx, eax	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x4000dd4	            0x89c0	                            mov eax, eax	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x4000dd6	    0xff24c5000000	                       jmp qword [rax*8]	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x4000ddd	           0xf1f00	                         nop dword [rax]	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x4000de0	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	      1652	reloc.c	FUNCTION_8
0x4000de4	      0x410fb60424	                   movzx eax, byte [r12]	      1634	reloc.c	FUNCTION_8	SWITCH_1	CALL_3
0x4000de9	      0xbf00000000	                              mov edi, 0	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000dee	          0x498b36	                    mov rsi, qword [r14]	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000df1	          0x4889d1	                            mov rcx, rdx	      1652	reloc.c	FUNCTION_8
0x4000df4	          0x48f7d1	                                 not rcx	      1652	reloc.c	FUNCTION_8
0x4000df7	          0x4821c8	                            and rax, rcx	      1652	reloc.c	FUNCTION_8
0x4000dfa	      0xb90e000000	                            mov ecx, 0xe	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000dff	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000e01	            0x7509	                           jne 0x4000e0c	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000e03	          0x83e201	                              and edx, 1	      1658	reloc.c	FUNCTION_8	IF_1
0x4000e06	     0xf8504010000	                           jne 0x4000f10	      1658	reloc.c	FUNCTION_8	IF_1
0x4000e0c	        0x41880424	                      mov byte [r12], al	      1668	reloc.c	FUNCTION_8	SWITCH_2	CALL_11
0x4000e10	              0x5b	                                 pop rbx	      1684	reloc.c	FUNCTION_8
0x4000e11	              0x5d	                                 pop rbp	      1684	reloc.c	FUNCTION_8
0x4000e12	            0x415c	                                 pop r12	      1684	reloc.c	FUNCTION_8
0x4000e14	            0x415d	                                 pop r13	      1684	reloc.c	FUNCTION_8
0x4000e16	            0x415e	                                 pop r14	      1684	reloc.c	FUNCTION_8
0x4000e18	              0xc3	                                     ret	      1684	reloc.c	FUNCTION_8
0x4000e19	     0xf1f80000000	                         nop dword [rax]	      1684	reloc.c	FUNCTION_8
0x4000e20	        0x498b4508	                mov rax, qword [r13 + 8]	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000e24	          0x4c89e7	                            mov rdi, r12	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000e27	          0xff5020	                 call qword [rax + 0x20]	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000e2a	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	      1652	reloc.c	FUNCTION_8
0x4000e2e	          0x498b36	                    mov rsi, qword [r14]	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000e31	      0xbf00000000	                              mov edi, 0	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000e36	          0x4889d1	                            mov rcx, rdx	      1652	reloc.c	FUNCTION_8
0x4000e39	          0x48f7d1	                                 not rcx	      1652	reloc.c	FUNCTION_8
0x4000e3c	          0x4821c8	                            and rax, rcx	      1652	reloc.c	FUNCTION_8
0x4000e3f	      0xb90e000000	                            mov ecx, 0xe	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000e44	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000e46	     0xf8404010000	                            je 0x4000f50	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000e4c	        0x498b5508	                mov rdx, qword [r13 + 8]	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000e50	          0x4c89e6	                            mov rsi, r12	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000e53	          0x4889c7	                            mov rdi, rax	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000e56	              0x5b	                                 pop rbx	      1684	reloc.c	FUNCTION_8
0x4000e57	              0x5d	                                 pop rbp	      1684	reloc.c	FUNCTION_8
0x4000e58	            0x415c	                                 pop r12	      1684	reloc.c	FUNCTION_8
0x4000e5a	            0x415d	                                 pop r13	      1684	reloc.c	FUNCTION_8
0x4000e5c	            0x415e	                                 pop r14	      1684	reloc.c	FUNCTION_8
0x4000e5e	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000e62	            0xffe2	                                 jmp rdx	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000e64	         0xf1f4000	                         nop dword [rax]	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000e68	        0x498b4508	                mov rax, qword [r13 + 8]	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x4000e6c	          0x4c89e7	                            mov rdi, r12	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x4000e6f	          0xff5050	                 call qword [rax + 0x50]	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x4000e72	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	      1652	reloc.c	FUNCTION_8
0x4000e76	          0x498b36	                    mov rsi, qword [r14]	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000e79	      0xbf00000000	                              mov edi, 0	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000e7e	          0x4889d1	                            mov rcx, rdx	      1652	reloc.c	FUNCTION_8
0x4000e81	          0x48f7d1	                                 not rcx	      1652	reloc.c	FUNCTION_8
0x4000e84	          0x4821c8	                            and rax, rcx	      1652	reloc.c	FUNCTION_8
0x4000e87	      0xb90e000000	                            mov ecx, 0xe	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000e8c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000e8e	            0x7505	                           jne 0x4000e95	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000e90	          0x83e201	                              and edx, 1	      1658	reloc.c	FUNCTION_8	IF_1
0x4000e93	            0x757b	                           jne 0x4000f10	      1658	reloc.c	FUNCTION_8	IF_1
0x4000e95	        0x498b5508	                mov rdx, qword [r13 + 8]	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x4000e99	          0x4c89e6	                            mov rsi, r12	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000e9c	          0x4889c7	                            mov rdi, rax	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000e9f	              0x5b	                                 pop rbx	      1684	reloc.c	FUNCTION_8
0x4000ea0	              0x5d	                                 pop rbp	      1684	reloc.c	FUNCTION_8
0x4000ea1	            0x415c	                                 pop r12	      1684	reloc.c	FUNCTION_8
0x4000ea3	            0x415d	                                 pop r13	      1684	reloc.c	FUNCTION_8
0x4000ea5	            0x415e	                                 pop r14	      1684	reloc.c	FUNCTION_8
0x4000ea7	        0x488b5260	            mov rdx, qword [rdx + 0x60] 	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x4000eab	            0xffe2	                                 jmp rdx	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000ead	           0xf1f00	                         nop dword [rax]	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000eb0	        0x498b4508	                mov rax, qword [r13 + 8]	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000eb4	          0x4c89e7	                            mov rdi, r12	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000eb7	          0xff5038	                 call qword [rax + 0x38]	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000eba	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	      1652	reloc.c	FUNCTION_8
0x4000ebe	          0x498b36	                    mov rsi, qword [r14]	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000ec1	      0xbf00000000	                              mov edi, 0	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000ec6	          0x4889d1	                            mov rcx, rdx	      1652	reloc.c	FUNCTION_8
0x4000ec9	          0x48f7d1	                                 not rcx	      1652	reloc.c	FUNCTION_8
0x4000ecc	          0x4821c8	                            and rax, rcx	      1652	reloc.c	FUNCTION_8
0x4000ecf	      0xb90e000000	                            mov ecx, 0xe	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000ed4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000ed6	            0x7430	                            je 0x4000f08	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000ed8	        0x498b5508	                mov rdx, qword [r13 + 8]	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x4000edc	          0x4c89e6	                            mov rsi, r12	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000edf	          0x4889c7	                            mov rdi, rax	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000ee2	              0x5b	                                 pop rbx	      1684	reloc.c	FUNCTION_8
0x4000ee3	              0x5d	                                 pop rbp	      1684	reloc.c	FUNCTION_8
0x4000ee4	            0x415c	                                 pop r12	      1684	reloc.c	FUNCTION_8
0x4000ee6	            0x415d	                                 pop r13	      1684	reloc.c	FUNCTION_8
0x4000ee8	            0x415e	                                 pop r14	      1684	reloc.c	FUNCTION_8
0x4000eea	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x4000eee	            0xffe2	                                 jmp rdx	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000ef0	      0xba00000000	                              mov edx, 0	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x4000ef5	      0xbe5e060000	                          mov esi, 0x65e	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x4000efa	      0xbf00000000	                              mov edi, 0	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x4000eff	      0xe800000000	                          call 0x4000f04	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x4000f04	         0xf1f4000	                         nop dword [rax]	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x4000f08	          0x83e201	                              and edx, 1	      1658	reloc.c	FUNCTION_8	IF_1
0x4000f0b	            0x74cb	                            je 0x4000ed8	      1658	reloc.c	FUNCTION_8	IF_1
0x4000f0d	           0xf1f00	                         nop dword [rax]	      1658	reloc.c	FUNCTION_8	IF_1
0x4000f10	        0x4883c801	                               or rax, 1	      1659	reloc.c	FUNCTION_8	IF_1
0x4000f14	          0x83fb02	                              cmp ebx, 2	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000f17	     0xf8478ffffff	                            je 0x4000e95	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000f1d	            0x7721	                            ja 0x4000f40	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000f1f	          0x83fb01	                              cmp ebx, 1	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000f22	     0xf84e4feffff	                            je 0x4000e0c	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000f28	      0xba00000000	                              mov edx, 0	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x4000f2d	      0xbe82060000	                          mov esi, 0x682	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x4000f32	      0xbf00000000	                              mov edi, 0	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x4000f37	      0xe800000000	                          call 0x4000f3c	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x4000f3c	         0xf1f4000	                         nop dword [rax]	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x4000f40	          0x83fb04	                              cmp ebx, 4	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000f43	            0x7493	                            je 0x4000ed8	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000f45	          0x83fb08	                              cmp ebx, 8	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000f48	            0x75de	                           jne 0x4000f28	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000f4a	      0xe9fdfeffff	                           jmp 0x4000e4c	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000f4f	              0x90	                                     nop	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000f50	          0x83e201	                              and edx, 1	      1658	reloc.c	FUNCTION_8	IF_1
0x4000f53	            0x75bb	                           jne 0x4000f10	      1658	reloc.c	FUNCTION_8	IF_1
0x4000f55	      0xe9f2feffff	                           jmp 0x4000e4c	      1658	reloc.c	FUNCTION_8	IF_1
bfd_generic_get_relocated_section_contents	CALL,22:ELSE,1:functions,0:SWITCH,1:FOR,1:IF,11:WHILE,0:DO,0	257
0x4001110	            0x4157	                                push r15	      8211	reloc.c	FUNCTION_17
0x4001112	            0x4156	                                push r14	      8211	reloc.c	FUNCTION_17
0x4001114	          0x4d89cf	                             mov r15, r9	      8211	reloc.c	FUNCTION_17
0x4001117	            0x4155	                                push r13	      8211	reloc.c	FUNCTION_17
0x4001119	            0x4154	                                push r12	      8211	reloc.c	FUNCTION_17
0x400111b	          0x4989f4	                            mov r12, rsi	      8211	reloc.c	FUNCTION_17
0x400111e	              0x55	                                push rbp	      8211	reloc.c	FUNCTION_17
0x400111f	              0x53	                                push rbx	      8211	reloc.c	FUNCTION_17
0x4001120	          0x4589c6	                           mov r14d, r8d	      8211	reloc.c	FUNCTION_17
0x4001123	        0x4883ec48	                           sub rsp, 0x48	      8211	reloc.c	FUNCTION_17
0x4001127	        0x488b5a20	            mov rbx, qword [rdx + 0x20] 	      8212	reloc.c	FUNCTION_17
0x400112b	      0x48897c2408	                mov qword [rsp + 8], rdi	      8211	reloc.c	FUNCTION_17
0x4001130	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      8211	reloc.c	FUNCTION_17
0x4001135	    0x64488b042528	                mov rax, qword fs:[0x28]	      8211	reloc.c	FUNCTION_17
0x400113e	      0x4889442438	             mov qword [rsp + 0x38], rax	      8211	reloc.c	FUNCTION_17
0x4001143	            0x31c0	                            xor eax, eax	      8211	reloc.c	FUNCTION_17
0x4001145	    0x488babf00000	            mov rbp, qword [rbx + 0xf0] 	      8212	reloc.c	FUNCTION_17
0x400114c	          0x4889de	                            mov rsi, rbx	      8218	reloc.c	FUNCTION_17	CALL_1
0x400114f	          0x4889ef	                            mov rdi, rbp	      8218	reloc.c	FUNCTION_17	CALL_1
0x4001152	      0xe800000000	                          call 0x4001157	      8218	reloc.c	FUNCTION_17	CALL_1
0x4001157	          0x4885c0	                           test rax, rax	      8219	reloc.c	FUNCTION_17	IF_1
0x400115a	     0xf88f2010000	                            js 0x4001352	      8219	reloc.c	FUNCTION_17	IF_1
0x4001160	      0x488d542428	                   lea rdx, [rsp + 0x28]	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x4001165	          0x4889de	                            mov rsi, rbx	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x4001168	          0x4889ef	                            mov rdi, rbp	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x400116b	          0x4989c5	                            mov r13, rax	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x400116e	      0xe800000000	                          call 0x4001173	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x4001173	            0x85c0	                           test eax, eax	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x4001175	     0xf84d7010000	                            je 0x4001352	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x400117b	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8226	reloc.c	FUNCTION_17	IF_3
0x4001180	          0x4885c0	                           test rax, rax	      8226	reloc.c	FUNCTION_17	IF_3
0x4001183	     0xf84c9010000	                            je 0x4001352	      8226	reloc.c	FUNCTION_17	IF_3
0x4001189	          0x4d85ed	                           test r13, r13	      8229	reloc.c	FUNCTION_17	IF_4
0x400118c	            0x752a	                           jne 0x40011b8	      8229	reloc.c	FUNCTION_17	IF_4
0x400118e	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      8360	reloc.c	FUNCTION_17
0x4001193	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8360	reloc.c	FUNCTION_17
0x400119c	     0xf8591030000	                           jne 0x4001533	      8360	reloc.c	FUNCTION_17
0x40011a2	        0x4883c448	                           add rsp, 0x48	      8360	reloc.c	FUNCTION_17
0x40011a6	              0x5b	                                 pop rbx	      8360	reloc.c	FUNCTION_17
0x40011a7	              0x5d	                                 pop rbp	      8360	reloc.c	FUNCTION_17
0x40011a8	            0x415c	                                 pop r12	      8360	reloc.c	FUNCTION_17
0x40011aa	            0x415d	                                 pop r13	      8360	reloc.c	FUNCTION_17
0x40011ac	            0x415e	                                 pop r14	      8360	reloc.c	FUNCTION_17
0x40011ae	            0x415f	                                 pop r15	      8360	reloc.c	FUNCTION_17
0x40011b0	              0xc3	                                     ret	      8360	reloc.c	FUNCTION_17
0x40011b1	     0xf1f80000000	                         nop dword [rax]	      8360	reloc.c	FUNCTION_17
0x40011b8	          0x4c89ef	                            mov rdi, r13	      8232	reloc.c	FUNCTION_17	CALL_3
0x40011bb	      0xe800000000	                          call 0x40011c0	      8232	reloc.c	FUNCTION_17	CALL_3
0x40011c0	          0x4885c0	                           test rax, rax	      8233	reloc.c	FUNCTION_17	IF_5
0x40011c3	          0x4989c5	                            mov r13, rax	      8232	reloc.c	FUNCTION_17	CALL_3
0x40011c6	     0xf8486010000	                            je 0x4001352	      8233	reloc.c	FUNCTION_17	IF_5
0x40011cc	          0x4c89f9	                            mov rcx, r15	      8236	reloc.c	FUNCTION_17	CALL_4
0x40011cf	          0x4889c2	                            mov rdx, rax	      8236	reloc.c	FUNCTION_17	CALL_4
0x40011d2	          0x4889de	                            mov rsi, rbx	      8236	reloc.c	FUNCTION_17	CALL_4
0x40011d5	          0x4889ef	                            mov rdi, rbp	      8236	reloc.c	FUNCTION_17	CALL_4
0x40011d8	      0xe800000000	                          call 0x40011dd	      8236	reloc.c	FUNCTION_17	CALL_4
0x40011dd	          0x4885c0	                           test rax, rax	      8240	reloc.c	FUNCTION_17	IF_6
0x40011e0	     0xf8864010000	                            js 0x400134a	      8240	reloc.c	FUNCTION_17	IF_6
0x40011e6	     0xf841c030000	                            je 0x4001508	      8243	reloc.c	FUNCTION_17	IF_7
0x40011ec	      0x49837d0000	                      cmp qword [r13], 0	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x40011f1	     0xf8411030000	                            je 0x4001508	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x40011f7	    0x48c744243000	               mov qword [rsp + 0x30], 0	      8249	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001200	        0x498b7500	                    mov rsi, qword [r13]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001204	          0x488b06	                    mov rax, qword [rsi]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001207	          0x488b00	                    mov rax, qword [rax]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x400120a	          0x4885c0	                           test rax, rax	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x400120d	     0xf84e6000000	                            je 0x40012f9	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x4001213	          0x4d89ef	                            mov r15, r13	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x4001216	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x400121a	    0x483d00000000	                              cmp rax, 0	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001220	            0x7413	                            je 0x4001235	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001222	          0x4885c0	                           test rax, rax	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001225	            0x740e	                            je 0x4001235	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001227	    0x488178680000	               cmp qword [rax + 0x68], 0	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x400122f	     0xf842b020000	                            je 0x4001460	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001235	          0x4585f6	                         test r14d, r14d	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001238	     0xf8422010000	                            je 0x4001360	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x400123e	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001243	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001248	      0x4c8d4c2430	                    lea r9, [rsp + 0x30]	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x400124d	          0x4889d9	                            mov rcx, rbx	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001250	          0x4889ef	                            mov rdi, rbp	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001253	      0xe800000000	                          call 0x4001258	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001258	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      8290	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x400125c	          0x498b3f	                    mov rdi, qword [r15]	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x400125f	          0x4189c0	                            mov r8d, eax	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001262	    0x8bb288000000	            mov esi, dword [rdx + 0x88] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001268	    0x488b8a800000	            mov rcx, qword [rdx + 0x80] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x400126f	          0x4889f0	                            mov rax, rsi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001272	        0x48893cf1	            mov qword [rcx + rsi*8], rdi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001276	          0x83c001	                              add eax, 1	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001279	    0x898288000000	             mov dword [rdx + 0x88], eax	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x400127f	        0x4183f802	                              cmp r8d, 2	      8297	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11
0x4001283	            0x744b	                            je 0x40012d0	      8297	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11
0x4001285	        0x418d40fd	                       lea eax, [r8 - 3]	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001289	          0x83f806	                              cmp eax, 6	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400128c	     0xf8776010000	                            ja 0x4001408	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001292	    0xff24c5000000	                       jmp qword [rax*8]	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001299	     0xf1f80000000	                         nop dword [rax]	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40012a0	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x40012a5	          0x4885f6	                           test rsi, rsi	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x40012a8	     0xf846c020000	                            je 0x400151a	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x40012ae	          0x498b17	                    mov rdx, qword [r15]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40012b1	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40012b6	          0x4889d9	                            mov rcx, rbx	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40012b9	          0x4c89e7	                            mov rdi, r12	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40012bc	        0x4c8b4208	                 mov r8, qword [rdx + 8]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40012c0	          0x4889ea	                            mov rdx, rbp	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40012c3	          0xff5040	                 call qword [rax + 0x40]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40012c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40012d0	        0x4983c708	                              add r15, 8	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x40012d4	        0x49833f00	                      cmp qword [r15], 0	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x40012d8	     0xf842a020000	                            je 0x4001508	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x40012de	    0x48c744243000	               mov qword [rsp + 0x30], 0	      8249	reloc.c	FUNCTION_17	IF_7	FOR_1
0x40012e7	          0x498b37	                    mov rsi, qword [r15]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x40012ea	          0x488b06	                    mov rax, qword [rsi]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x40012ed	          0x488b00	                    mov rax, qword [rax]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x40012f0	          0x4885c0	                           test rax, rax	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x40012f3	     0xf851dffffff	                           jne 0x4001216	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x40012f9	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x40012fe	      0xba05000000	                              mov edx, 5	      8260	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_6
0x4001303	        0x4c8b6608	                mov r12, qword [rsi + 8]	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001307	      0xbe00000000	                              mov esi, 0	      8260	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_6
0x400130c	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001310	            0xeb1c	                           jmp 0x400132e	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001312	    0x660f1f440000	                    nop word [rax + rax]	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001318	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x400131d	          0x4d8b27	                    mov r12, qword [r15]	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001320	      0xba05000000	                              mov edx, 5	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x4001325	      0xbe00000000	                              mov esi, 0	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x400132a	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x400132e	      0xbf00000000	                              mov edi, 0	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x4001333	      0xe800000000	                          call 0x4001338	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x4001338	          0x4c89e1	                            mov rcx, r12	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x400133b	          0x4889c7	                            mov rdi, rax	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x400133e	          0x4889da	                            mov rdx, rbx	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001341	      0x488b742408	                mov rsi, qword [rsp + 8]	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001346	            0x31c0	                            xor eax, eax	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001348	            0xffd5	                                call rbp	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x400134a	          0x4c89ef	                            mov rdi, r13	      8358	reloc.c	FUNCTION_17	CALL_22
0x400134d	      0xe800000000	                          call 0x4001352	      8358	reloc.c	FUNCTION_17	CALL_22
0x4001352	            0x31c0	                            xor eax, eax	      8359	reloc.c	FUNCTION_17
0x4001354	      0xe935feffff	                           jmp 0x400118e	      8359	reloc.c	FUNCTION_17
0x4001359	     0xf1f80000000	                         nop dword [rax]	      8359	reloc.c	FUNCTION_17
0x4001360	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001365	      0x4c8d4c2430	                    lea r9, [rsp + 0x30]	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x400136a	          0x4531c0	                            xor r8d, r8d	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x400136d	          0x4889d9	                            mov rcx, rbx	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001370	          0x4889ef	                            mov rdi, rbp	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001373	      0xe800000000	                          call 0x4001378	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001378	          0x4189c0	                            mov r8d, eax	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x400137b	      0xe9fffeffff	                           jmp 0x400127f	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x4001380	          0x498b07	                    mov rax, qword [r15]	      8304	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001383	      0x4d8b5c2420	            mov r11, qword [r12 + 0x20] 	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001388	    0x41b901000000	                              mov r9d, 1	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400138e	          0x4889d9	                            mov rcx, rbx	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001391	          0x4c89e7	                            mov rdi, r12	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001394	          0x488b10	                    mov rdx, qword [rax]	      8303	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_12
0x4001397	        0x4c8b4008	                 mov r8, qword [rax + 8]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400139b	          0x488b12	                    mov rdx, qword [rdx]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400139e	        0x488b7208	                mov rsi, qword [rdx + 8]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013a2	          0x4889ea	                            mov rdx, rbp	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013a5	        0x41ff5330	                 call qword [r11 + 0x30]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013a9	      0xe922ffffff	                           jmp 0x40012d0	      8305	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013ae	            0x6690	                                     nop	      8305	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013b0	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x40013b5	      0xba05000000	                              mov edx, 5	      8326	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_16
0x40013ba	          0x4d8b27	                    mov r12, qword [r15]	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x40013bd	      0xbe00000000	                              mov esi, 0	      8326	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_16
0x40013c2	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x40013c6	      0xe963ffffff	                           jmp 0x400132e	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x40013cb	       0xf1f440000	                   nop dword [rax + rax]	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x40013d0	          0x498b07	                    mov rax, qword [r15]	      8317	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013d3	      0x4d8b5c2420	            mov r11, qword [r12 + 0x20] 	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013d8	          0x4989e9	                             mov r9, rbp	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013db	            0x31f6	                            xor esi, esi	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013dd	          0x4c89e7	                            mov rdi, r12	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013e0	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      8316	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013e4	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013e8	          0x488b10	                    mov rdx, qword [rax]	      8315	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_14
0x40013eb	          0x488b12	                    mov rdx, qword [rdx]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013ee	        0x488b5208	                mov rdx, qword [rdx + 8]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013f2	          0xff7008	                    push qword [rax + 8]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013f5	              0x53	                                push rbx	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013f6	        0x4c8b4010	              mov r8, qword [rax + 0x10]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013fa	        0x41ff5338	                 call qword [r11 + 0x38]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013fe	              0x58	                                 pop rax	      8318	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40013ff	              0x5a	                                 pop rdx	      8318	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001400	      0xe9cbfeffff	                           jmp 0x40012d0	      8318	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001405	           0xf1f00	                         nop dword [rax]	      8318	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001408	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x400140d	          0x498b0f	                    mov rcx, qword [r15]	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001410	      0xba05000000	                              mov edx, 5	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x4001415	      0xbe00000000	                              mov esi, 0	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x400141a	      0xbf00000000	                              mov edi, 0	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x400141f	      0x4489442424	             mov dword [rsp + 0x24], r8d	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x4001424	        0x4c8b4858	              mov r9, qword [rax + 0x58]	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001428	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x400142d	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001432	      0xe800000000	                          call 0x4001437	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x4001437	      0x448b442424	            mov r8d, dword [rsp + 0x24] 	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x400143c	          0x4889c7	                            mov rdi, rax	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x400143f	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001444	          0x4889da	                            mov rdx, rbx	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001447	      0x488b742408	                mov rsi, qword [rsp + 8]	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x400144c	            0x31c0	                            xor eax, eax	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x400144e	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001453	          0x41ffd1	                                 call r9	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001456	      0xe975feffff	                           jmp 0x40012d0	      8347	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400145b	       0xf1f440000	                   nop dword [rax + rax]	      8347	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001460	         0xfb74024	           movzx eax, word [rax + 0x24] 	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001464	        0x66258003	                           and ax, 0x380	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001468	        0x662d0001	                           sub ax, 0x100	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x400146c	        0x66a980fe	                         test ax, 0xfe80	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001470	     0xf84bffdffff	                            je 0x4001235	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001476	        0x488b4e08	                mov rcx, qword [rsi + 8]	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x400147a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x400147f	          0x4889ef	                            mov rdi, rbp	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001482	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001487	      0x4889442410	             mov qword [rsp + 0x10], rax	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x400148c	      0xe800000000	                          call 0x4001491	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001491	            0x89c1	                            mov ecx, eax	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001493	          0x498b07	                    mov rax, qword [r15]	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001496	          0x4889da	                            mov rdx, rbx	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001499	    0x480faf4c2418	            imul rcx, qword [rsp + 0x18]	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x400149f	          0x4889ee	                            mov rsi, rbp	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x40014a2	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x40014a6	      0x48034c2410	             add rcx, qword [rsp + 0x10]	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x40014ab	      0xe800000000	                          call 0x40014b0	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x40014b0	          0x498b07	                    mov rax, qword [r15]	      8275	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x40014b3	    0x488b15000000	            mov rdx, qword [0x040014ba] 	      8275	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x40014ba	          0x4585f6	                         test r14d, r14d	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40014bd	          0x488910	                    mov qword [rax], rdx	      8275	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x40014c0	          0x498b07	                    mov rax, qword [r15]	      8276	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x40014c3	    0x48c740100000	               mov qword [rax + 0x10], 0	      8276	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x40014cb	    0x48c740180000	               mov qword [rax + 0x18], 0	      8277	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x40014d3	     0xf84f7fdffff	                            je 0x40012d0	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40014d9	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      8290	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40014dd	          0x498b3f	                    mov rdi, qword [r15]	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40014e0	    0x8bb288000000	            mov esi, dword [rdx + 0x88] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40014e6	    0x488b8a800000	            mov rcx, qword [rdx + 0x80] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40014ed	          0x4889f0	                            mov rax, rsi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40014f0	        0x48893cf1	            mov qword [rcx + rsi*8], rdi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40014f4	          0x83c001	                              add eax, 1	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40014f7	    0x898288000000	             mov dword [rdx + 0x88], eax	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40014fd	      0xe9cefdffff	                           jmp 0x40012d0	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001502	    0x660f1f440000	                    nop word [rax + rax]	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001508	          0x4c89ef	                            mov rdi, r13	      8354	reloc.c	FUNCTION_17	CALL_21
0x400150b	      0xe800000000	                          call 0x4001510	      8354	reloc.c	FUNCTION_17	CALL_21
0x4001510	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8355	reloc.c	FUNCTION_17
0x4001515	      0xe974fcffff	                           jmp 0x400118e	      8355	reloc.c	FUNCTION_17
0x400151a	      0xbe73200000	                         mov esi, 0x2073	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x400151f	      0xbf00000000	                              mov edi, 0	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x4001524	      0xe800000000	                          call 0x4001529	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x4001529	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x400152e	      0xe97bfdffff	                           jmp 0x40012ae	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x4001533	      0xe800000000	                          call 0x4001538	      8360	reloc.c	FUNCTION_17
_bfd_nodynamic_canonicalize_dynamic_reloc	CALL,1:ELSE,0:functions,0:SWITCH,0:FOR,0:IF,0:WHILE,0:DO,0	1
0x40015e0	      0xe900000000	                         jmp str.reloc.c	      8438	reloc.c	FUNCTION_22	CALL_1
bfd_install_relocation	CALL,20:ELSE,4:functions,0:SWITCH,1:FOR,0:IF,12:WHILE,0:DO,0	237
0x4000650	            0x4157	                                push r15	      1022	reloc.c	FUNCTION_5
0x4000652	            0x4156	                                push r14	      1022	reloc.c	FUNCTION_5
0x4000654	          0x4989cf	                            mov r15, rcx	      1022	reloc.c	FUNCTION_5
0x4000657	            0x4155	                                push r13	      1022	reloc.c	FUNCTION_5
0x4000659	            0x4154	                                push r12	      1022	reloc.c	FUNCTION_5
0x400065b	          0x4d89c4	                             mov r12, r8	      1022	reloc.c	FUNCTION_5
0x400065e	              0x55	                                push rbp	      1022	reloc.c	FUNCTION_5
0x400065f	              0x53	                                push rbx	      1022	reloc.c	FUNCTION_5
0x4000660	          0x4889fd	                            mov rbp, rdi	      1022	reloc.c	FUNCTION_5
0x4000663	          0x4889f3	                            mov rbx, rsi	      1022	reloc.c	FUNCTION_5
0x4000666	        0x4883ec28	                           sub rsp, 0x28	      1022	reloc.c	FUNCTION_5
0x400066a	        0x4c8b6e18	            mov r13, qword [rsi + 0x18] 	      1027	reloc.c	FUNCTION_5
0x400066e	          0x488b06	                    mov rax, qword [rsi]	      1032	reloc.c	FUNCTION_5
0x4000671	      0x4889542408	                mov qword [rsp + 8], rdx	      1022	reloc.c	FUNCTION_5
0x4000676	          0x4d85ed	                           test r13, r13	      1037	reloc.c	FUNCTION_5	IF_1
0x4000679	          0x4c8b30	                    mov r14, qword [rax]	      1032	reloc.c	FUNCTION_5
0x400067c	            0x743a	                            je 0x40006b8	      1037	reloc.c	FUNCTION_5	IF_1
0x400067e	        0x498b4520	            mov rax, qword [r13 + 0x20] 	      1037	reloc.c	FUNCTION_5	IF_1
0x4000682	          0x4885c0	                           test rax, rax	      1037	reloc.c	FUNCTION_5	IF_1
0x4000685	            0x7431	                            je 0x40006b8	      1037	reloc.c	FUNCTION_5	IF_1
0x4000687	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x400068c	        0x4883ec08	                              sub rsp, 8	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000690	          0x4c89f2	                            mov rdx, r14	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000693	            0x4151	                                 push r9	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000695	          0x4989f9	                             mov r9, rdi	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000698	          0x4c29f9	                            sub rcx, r15	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x400069b	            0xffd0	                                call rax	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x400069d	          0x83f805	                              cmp eax, 5	      1052	reloc.c	FUNCTION_5	IF_1	IF_2
0x40006a0	              0x5f	                                 pop rdi	      1052	reloc.c	FUNCTION_5	IF_1	IF_2
0x40006a1	            0x4158	                                  pop r8	      1052	reloc.c	FUNCTION_5	IF_1	IF_2
0x40006a3	            0x7413	                            je 0x40006b8	      1052	reloc.c	FUNCTION_5	IF_1	IF_2
0x40006a5	        0x4883c428	                           add rsp, 0x28	      1368	reloc.c	FUNCTION_5
0x40006a9	              0x5b	                                 pop rbx	      1368	reloc.c	FUNCTION_5
0x40006aa	              0x5d	                                 pop rbp	      1368	reloc.c	FUNCTION_5
0x40006ab	            0x415c	                                 pop r12	      1368	reloc.c	FUNCTION_5
0x40006ad	            0x415d	                                 pop r13	      1368	reloc.c	FUNCTION_5
0x40006af	            0x415e	                                 pop r14	      1368	reloc.c	FUNCTION_5
0x40006b1	            0x415f	                                 pop r15	      1368	reloc.c	FUNCTION_5
0x40006b3	              0xc3	                                     ret	      1368	reloc.c	FUNCTION_5
0x40006b4	         0xf1f4000	                         nop dword [rax]	      1368	reloc.c	FUNCTION_5
0x40006b8	    0x49817e200000	               cmp qword [r14 + 0x20], 0	      1056	reloc.c	FUNCTION_5	IF_3	CALL_2
0x40006c0	     0xf8412010000	                            je 0x40007d8	      1056	reloc.c	FUNCTION_5	IF_3	CALL_2
0x40006c6	        0x488b4308	                mov rax, qword [rbx + 8]	      1066	reloc.c	FUNCTION_5	CALL_3
0x40006ca	          0x4889ef	                            mov rdi, rbp	      1066	reloc.c	FUNCTION_5	CALL_3
0x40006cd	      0x4889442410	             mov qword [rsp + 0x10], rax	      1066	reloc.c	FUNCTION_5	CALL_3
0x40006d2	      0xe800000000	                          call 0x40006d7	      1066	reloc.c	FUNCTION_5	CALL_3
0x40006d7	            0x89c0	                            mov eax, eax	      1066	reloc.c	FUNCTION_5	CALL_3
0x40006d9	          0x4c89e2	                            mov rdx, r12	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x40006dc	          0x4889ee	                            mov rsi, rbp	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x40006df	    0x480faf442410	            imul rax, qword [rsp + 0x10]	      1066	reloc.c	FUNCTION_5	CALL_3
0x40006e5	          0x4c89ef	                            mov rdi, r13	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x40006e8	          0x4889c1	                            mov rcx, rax	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x40006eb	      0x4889442410	             mov qword [rsp + 0x10], rax	      1066	reloc.c	FUNCTION_5	CALL_3
0x40006f0	      0xe800000000	                          call 0x40006f5	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x40006f5	            0x89c2	                            mov edx, eax	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x40006f7	      0xb804000000	                              mov eax, 4	      1068	reloc.c	FUNCTION_5	IF_4
0x40006fc	            0x85d2	                           test edx, edx	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x40006fe	            0x74a5	                            je 0x40006a5	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x4000700	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	      1074	reloc.c	FUNCTION_5	IF_5	CALL_5
0x4000704	            0x31c0	                            xor eax, eax	      1075	reloc.c	FUNCTION_5	IF_5
0x4000706	        0xf6422110	           test byte [rdx + 0x21], 0x10 	      1074	reloc.c	FUNCTION_5	IF_5	CALL_5
0x400070a	            0x7504	                           jne 0x4000710	      1074	reloc.c	FUNCTION_5	IF_5	CALL_5
0x400070c	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      1077	reloc.c	FUNCTION_5	ELSE_1
0x4000710	        0x418b4d30	            mov ecx, dword [r13 + 0x30] 	      1082	reloc.c	FUNCTION_5	IF_6
0x4000714	            0x31f6	                            xor esi, esi	      1083	reloc.c	FUNCTION_5	IF_6
0x4000716	            0x85c9	                           test ecx, ecx	      1082	reloc.c	FUNCTION_5	IF_6
0x4000718	            0x7408	                            je 0x4000722	      1082	reloc.c	FUNCTION_5	IF_6
0x400071a	        0x488b7268	            mov rsi, qword [rdx + 0x68] 	      1085	reloc.c	FUNCTION_5	ELSE_2
0x400071e	        0x488b7628	            mov rsi, qword [rsi + 0x28] 	      1085	reloc.c	FUNCTION_5	ELSE_2
0x4000722	        0x4c8b4310	              mov r8, qword [rbx + 0x10]	      1090	reloc.c	FUNCTION_5	ELSE_2
0x4000726	          0x4d89c1	                              mov r9, r8	      1090	reloc.c	FUNCTION_5	ELSE_2
0x4000729	        0x4c034a60	              add r9, qword [rdx + 0x60]	      1090	reloc.c	FUNCTION_5	ELSE_2
0x400072d	          0x4c01c8	                             add rax, r9	      1090	reloc.c	FUNCTION_5	ELSE_2
0x4000730	        0x4c8d0c06	                     lea r9, [rsi + rax]	      1090	reloc.c	FUNCTION_5	ELSE_2
0x4000734	        0x418b7510	            mov esi, dword [r13 + 0x10] 	      1095	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x4000738	      0x498b442460	            mov rax, qword [r12 + 0x60] 	      1126	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x400073d	            0x85f6	                           test esi, esi	      1095	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x400073f	     0xf84b3000000	                            je 0x40007f8	      1095	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x4000745	      0x498b542468	            mov rdx, qword [r12 + 0x68] 	      1126	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x400074a	          0x4889c7	                            mov rdi, rax	      1125	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x400074d	        0x48037a28	             add rdi, qword [rdx + 0x28]	      1125	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x4000751	        0x418b5548	            mov edx, dword [r13 + 0x48] 	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x4000755	          0x4929f9	                             sub r9, rdi	      1125	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x4000758	            0x85d2	                           test edx, edx	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x400075a	     0xf8498000000	                            je 0x40007f8	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x4000760	            0x85c9	                           test ecx, ecx	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x4000762	     0xf8498000000	                            je 0x4000800	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x4000768	        0x488b5308	                mov rdx, qword [rbx + 8]	      1129	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x400076c	          0x4929d1	                             sub r9, rdx	      1129	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x400076f	          0x4801d0	                            add rax, rdx	      1148	reloc.c	FUNCTION_5	ELSE_3
0x4000772	        0x48894308	                mov qword [rbx + 8], rax	      1148	reloc.c	FUNCTION_5	ELSE_3
0x4000776	        0x488b4508	                mov rax, qword [rbp + 8]	      1151	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x400077a	        0x83780802	                  cmp dword [rax + 8], 2	      1151	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x400077e	     0xf84bc010000	                            je 0x4000940	      1151	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x4000784	        0x4c894b10	              mov qword [rbx + 0x10], r9	      1231	reloc.c	FUNCTION_5	ELSE_3	ELSE_4
0x4000788	        0x418b4518	            mov eax, dword [r13 + 0x18] 	      1242	reloc.c	FUNCTION_5	IF_12
0x400078c	            0x85c0	                           test eax, eax	      1242	reloc.c	FUNCTION_5	IF_12
0x400078e	     0xf8574010000	                           jne 0x4000908	      1242	reloc.c	FUNCTION_5	IF_12
0x4000794	        0x458b6504	               mov r12d, dword [r13 + 4]	      1242	reloc.c	FUNCTION_5	IF_12
0x4000798	      0xbb02000000	                              mov ebx, 2	      1024	reloc.c	FUNCTION_5
0x400079d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1317	reloc.c	FUNCTION_5
0x40007a2	      0x4c8b742408	                mov r14, qword [rsp + 8]	      1317	reloc.c	FUNCTION_5
0x40007a7	          0x4489e1	                           mov ecx, r12d	      1276	reloc.c	FUNCTION_5
0x40007aa	          0x49d3e9	                              shr r9, cl	      1276	reloc.c	FUNCTION_5
0x40007ad	        0x418b4d14	            mov ecx, dword [r13 + 0x14] 	      1279	reloc.c	FUNCTION_5
0x40007b1	          0x4c29f8	                            sub rax, r15	      1317	reloc.c	FUNCTION_5
0x40007b4	          0x4901c6	                            add r14, rax	      1317	reloc.c	FUNCTION_5
0x40007b7	        0x418b4508	                mov eax, dword [r13 + 8]	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x40007bb	          0x49d3e1	                              shl r9, cl	      1279	reloc.c	FUNCTION_5
0x40007be	          0x4d89cc	                             mov r12, r9	      1279	reloc.c	FUNCTION_5
0x40007c1	          0x83c002	                              add eax, 2	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x40007c4	          0x83f806	                              cmp eax, 6	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x40007c7	     0xf871a010000	                            ja 0x40008e7	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x40007cd	    0xff24c5000000	                       jmp qword [rax*8]	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x40007d4	         0xf1f4000	                         nop dword [rax]	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x40007d8	      0x498b442460	            mov rax, qword [r12 + 0x60] 	      1058	reloc.c	FUNCTION_5	IF_3
0x40007dd	        0x48014308	                add qword [rbx + 8], rax	      1058	reloc.c	FUNCTION_5	IF_3
0x40007e1	        0x4883c428	                           add rsp, 0x28	      1368	reloc.c	FUNCTION_5
0x40007e5	              0x5b	                                 pop rbx	      1368	reloc.c	FUNCTION_5
0x40007e6	      0xb802000000	                              mov eax, 2	      1059	reloc.c	FUNCTION_5	IF_3
0x40007eb	              0x5d	                                 pop rbp	      1368	reloc.c	FUNCTION_5
0x40007ec	            0x415c	                                 pop r12	      1368	reloc.c	FUNCTION_5
0x40007ee	            0x415d	                                 pop r13	      1368	reloc.c	FUNCTION_5
0x40007f0	            0x415e	                                 pop r14	      1368	reloc.c	FUNCTION_5
0x40007f2	            0x415f	                                 pop r15	      1368	reloc.c	FUNCTION_5
0x40007f4	              0xc3	                                     ret	      1368	reloc.c	FUNCTION_5
0x40007f5	           0xf1f00	                         nop dword [rax]	      1368	reloc.c	FUNCTION_5
0x40007f8	            0x85c9	                           test ecx, ecx	      1132	reloc.c	FUNCTION_5	IF_9
0x40007fa	     0xf85f8000000	                           jne 0x40008f8	      1132	reloc.c	FUNCTION_5	IF_9
0x4000800	        0x48014308	                add qword [rbx + 8], rax	      1138	reloc.c	FUNCTION_5	IF_9
0x4000804	        0x4c894b10	              mov qword [rbx + 0x10], r9	      1137	reloc.c	FUNCTION_5	IF_9
0x4000808	      0xb802000000	                              mov eax, 2	      1139	reloc.c	FUNCTION_5	IF_9
0x400080d	      0xe993feffff	                           jmp 0x40006a5	      1139	reloc.c	FUNCTION_5	IF_9
0x4000812	            0x89d8	                            mov eax, ebx	      1367	reloc.c	FUNCTION_5
0x4000814	      0xe98cfeffff	                           jmp 0x40006a5	      1367	reloc.c	FUNCTION_5
0x4000819	        0x488b4508	                mov rax, qword [rbp + 8]	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x400081d	          0x4c89f7	                            mov rdi, r14	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x4000820	          0xff5038	                 call qword [rax + 0x38]	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x4000823	          0x4889c2	                            mov rdx, rax	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000826	        0x49235538	             and rdx, qword [r13 + 0x38]	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x400082a	          0x4c01e2	                            add rdx, r12	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x400082d	          0x4831c2	                            xor rdx, rax	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000830	        0x49235540	             and rdx, qword [r13 + 0x40]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000834	          0x4c89f6	                            mov rsi, r14	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000837	          0x4889d7	                            mov rdi, rdx	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x400083a	          0x4831c7	                            xor rdi, rax	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x400083d	        0x488b4508	                mov rax, qword [rbp + 8]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000841	          0xff5048	                 call qword [rax + 0x48]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000844	            0x89d8	                            mov eax, ebx	      1367	reloc.c	FUNCTION_5
0x4000846	      0xe95afeffff	                           jmp 0x40006a5	      1350	reloc.c	FUNCTION_5	SWITCH_1
0x400084b	        0x488b4508	                mov rax, qword [rbp + 8]	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x400084f	          0x4c89f7	                            mov rdi, r14	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x4000852	          0xff5050	                 call qword [rax + 0x50]	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x4000855	            0x89c7	                            mov edi, eax	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000857	      0x6641237d38	               and di, word [r13 + 0x38]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x400085c	          0x4c89f6	                            mov rsi, r14	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x400085f	          0x4401e7	                           add edi, r12d	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000862	            0x31c7	                            xor edi, eax	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000864	      0x6641237d40	               and di, word [r13 + 0x40]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000869	            0x31f8	                            xor eax, edi	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x400086b	        0x480fbff8	                           movsx rdi, ax	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x400086f	        0x488b4508	                mov rax, qword [rbp + 8]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000873	          0xff5060	                 call qword [rax + 0x60]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000876	            0x89d8	                            mov eax, ebx	      1367	reloc.c	FUNCTION_5
0x4000878	      0xe928feffff	                           jmp 0x40006a5	      1335	reloc.c	FUNCTION_5	SWITCH_1
0x400087d	        0x410fb616	                   movzx edx, byte [r14]	      1323	reloc.c	FUNCTION_5	SWITCH_1	CALL_11
0x4000881	            0x89d0	                            mov eax, edx	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x4000883	        0x41224538	               and al, byte [r13 + 0x38]	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x4000887	          0x4401c8	                            add eax, r9d	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x400088a	            0x31d0	                            xor eax, edx	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x400088c	        0x41224540	               and al, byte [r13 + 0x40]	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x4000890	            0x31d0	                            xor eax, edx	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x4000892	          0x418806	                      mov byte [r14], al	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x4000895	            0x89d8	                            mov eax, ebx	      1367	reloc.c	FUNCTION_5
0x4000897	      0xe909feffff	                           jmp 0x40006a5	      1327	reloc.c	FUNCTION_5	SWITCH_1
0x400089c	        0x488b4508	                mov rax, qword [rbp + 8]	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x40008a0	          0x4c89f7	                            mov rdi, r14	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x40008a3	          0xff5038	                 call qword [rax + 0x38]	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x40008a6	          0x4889c2	                            mov rdx, rax	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x40008a9	        0x49235538	             and rdx, qword [r13 + 0x38]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x40008ad	          0x4c29e2	                            sub rdx, r12	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x40008b0	      0xe978ffffff	                           jmp 0x400082d	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x40008b5	        0x488b4508	                mov rax, qword [rbp + 8]	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x40008b9	          0x4c89f7	                            mov rdi, r14	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x40008bc	          0xff5020	                 call qword [rax + 0x20]	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x40008bf	          0x4889c2	                            mov rdx, rax	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x40008c2	        0x49235538	             and rdx, qword [r13 + 0x38]	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x40008c6	          0x4c89f6	                            mov rsi, r14	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x40008c9	          0x4c01e2	                            add rdx, r12	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x40008cc	          0x4831c2	                            xor rdx, rax	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x40008cf	        0x49235540	             and rdx, qword [r13 + 0x40]	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x40008d3	          0x4831d0	                            xor rax, rdx	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x40008d6	          0x4889c7	                            mov rdi, rax	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x40008d9	        0x488b4508	                mov rax, qword [rbp + 8]	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x40008dd	          0xff5030	                 call qword [rax + 0x30]	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x40008e0	            0x89d8	                            mov eax, ebx	      1367	reloc.c	FUNCTION_5
0x40008e2	      0xe9befdffff	                           jmp 0x40006a5	      1362	reloc.c	FUNCTION_5	SWITCH_1
0x40008e7	      0xb807000000	                              mov eax, 7	      1364	reloc.c	FUNCTION_5	SWITCH_1
0x40008ec	      0xe9b4fdffff	                           jmp 0x40006a5	      1364	reloc.c	FUNCTION_5	SWITCH_1
0x40008f1	     0xf1f80000000	                         nop dword [rax]	      1364	reloc.c	FUNCTION_5	SWITCH_1
0x40008f8	        0x488b5308	                mov rdx, qword [rbx + 8]	      1364	reloc.c	FUNCTION_5	SWITCH_1
0x40008fc	      0xe96efeffff	                           jmp 0x400076f	      1364	reloc.c	FUNCTION_5	SWITCH_1
0x4000901	     0xf1f80000000	                         nop dword [rax]	      1364	reloc.c	FUNCTION_5	SWITCH_1
0x4000908	          0x4889ef	                            mov rdi, rbp	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x400090b	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000910	      0xe800000000	                          call 0x4000915	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000915	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x400091a	        0x458b6504	               mov r12d, dword [r13 + 4]	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x400091e	            0x89c1	                            mov ecx, eax	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000920	        0x418b750c	              mov esi, dword [r13 + 0xc]	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000924	        0x418b7d18	            mov edi, dword [r13 + 0x18] 	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000928	          0x4d89c8	                              mov r8, r9	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x400092b	          0x4489e2	                           mov edx, r12d	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x400092e	      0xe800000000	                          call 0x4000933	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000933	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000938	            0x89c3	                            mov ebx, eax	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x400093a	      0xe95efeffff	                           jmp 0x400079d	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x400093f	              0x90	                                     nop	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000940	          0x488b00	                    mov rax, qword [rax]	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000943	      0xbf00000000	                              mov edi, 0	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000948	      0xb912000000	                           mov ecx, 0x12	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x400094d	          0x4889c6	                            mov rsi, rax	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000950	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000952	     0xf842cfeffff	                            je 0x4000784	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000958	      0xbf00000000	                              mov edi, 0	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x400095d	      0xb90f000000	                            mov ecx, 0xf	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000962	          0x4889c6	                            mov rsi, rax	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000965	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000967	     0xf8417feffff	                            je 0x4000784	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x400096d	      0xbf00000000	                              mov edi, 0	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000972	      0xb909000000	                              mov ecx, 9	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000977	          0x4889c6	                            mov rsi, rax	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x400097a	          0x4d29c1	                              sub r9, r8	      1224	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x400097d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x400097f	     0xf8403feffff	                            je 0x4000788	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000985	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1227	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11
0x400098d	      0xe9f6fdffff	                           jmp 0x4000788	      1227	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11
bfd_reloc_type_lookup	CALL,1:ELSE,0:functions,0:SWITCH,0:FOR,0:IF,0:WHILE,0:DO,0	3
0x4000f60	        0x488b4708	                mov rax, qword [rdi + 8]	      8015	reloc.c	FUNCTION_9	CALL_1
0x4000f64	    0x488b80800200	           mov rax, qword [rax + 0x280] 	      8015	reloc.c	FUNCTION_9	CALL_1
0x4000f6b	            0xffe0	                                 jmp rax	      8015	reloc.c	FUNCTION_9	CALL_1
_bfd_final_link_relocate	CALL,4:ELSE,0:functions,0:SWITCH,0:FOR,0:IF,3:WHILE,0:DO,0	62
0x4000cf0	            0x4157	                                push r15	      1400	reloc.c	FUNCTION_6
0x4000cf2	            0x4156	                                push r14	      1400	reloc.c	FUNCTION_6
0x4000cf4	          0x4989cf	                            mov r15, rcx	      1400	reloc.c	FUNCTION_6
0x4000cf7	            0x4155	                                push r13	      1400	reloc.c	FUNCTION_6
0x4000cf9	            0x4154	                                push r12	      1400	reloc.c	FUNCTION_6
0x4000cfb	          0x4989fd	                            mov r13, rdi	      1400	reloc.c	FUNCTION_6
0x4000cfe	              0x55	                                push rbp	      1400	reloc.c	FUNCTION_6
0x4000cff	              0x53	                                push rbx	      1400	reloc.c	FUNCTION_6
0x4000d00	          0x4889f7	                            mov rdi, rsi	      1402	reloc.c	FUNCTION_6	CALL_1
0x4000d03	          0x4c89c3	                             mov rbx, r8	      1400	reloc.c	FUNCTION_6
0x4000d06	          0x4889f5	                            mov rbp, rsi	      1400	reloc.c	FUNCTION_6
0x4000d09	          0x4989d6	                            mov r14, rdx	      1400	reloc.c	FUNCTION_6
0x4000d0c	        0x4883ec18	                           sub rsp, 0x18	      1400	reloc.c	FUNCTION_6
0x4000d10	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1400	reloc.c	FUNCTION_6
0x4000d15	      0x4c8b642450	            mov r12, qword [rsp + 0x50] 	      1400	reloc.c	FUNCTION_6
0x4000d1a	      0xe800000000	                          call 0x4000d1f	      1402	reloc.c	FUNCTION_6	CALL_1
0x4000d1f	            0x89c1	                            mov ecx, eax	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000d21	          0x4c89f2	                            mov rdx, r14	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000d24	          0x4889ee	                            mov rsi, rbp	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000d27	        0x480fafcb	                           imul rcx, rbx	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000d2b	          0x4c89ef	                            mov rdi, r13	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000d2e	      0xe800000000	                          call 0x4000d33	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000d33	            0x85c0	                           test eax, eax	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000d35	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000d3a	            0x7514	                           jne 0x4000d50	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000d3c	        0x4883c418	                           add rsp, 0x18	      1435	reloc.c	FUNCTION_6
0x4000d40	      0xb804000000	                              mov eax, 4	      1435	reloc.c	FUNCTION_6
0x4000d45	              0x5b	                                 pop rbx	      1435	reloc.c	FUNCTION_6
0x4000d46	              0x5d	                                 pop rbp	      1435	reloc.c	FUNCTION_6
0x4000d47	            0x415c	                                 pop r12	      1435	reloc.c	FUNCTION_6
0x4000d49	            0x415d	                                 pop r13	      1435	reloc.c	FUNCTION_6
0x4000d4b	            0x415e	                                 pop r14	      1435	reloc.c	FUNCTION_6
0x4000d4d	            0x415f	                                 pop r15	      1435	reloc.c	FUNCTION_6
0x4000d4f	              0xc3	                                     ret	      1435	reloc.c	FUNCTION_6
0x4000d50	        0x418b4d10	            mov ecx, dword [r13 + 0x10] 	      1424	reloc.c	FUNCTION_6	IF_2
0x4000d54	          0x4d01cc	                             add r12, r9	      1412	reloc.c	FUNCTION_6
0x4000d57	            0x85c9	                           test ecx, ecx	      1424	reloc.c	FUNCTION_6	IF_2
0x4000d59	            0x741c	                            je 0x4000d77	      1424	reloc.c	FUNCTION_6	IF_2
0x4000d5b	        0x498b4668	            mov rax, qword [r14 + 0x68] 	      1426	reloc.c	FUNCTION_6	IF_2
0x4000d5f	        0x4d2b6660	             sub r12, qword [r14 + 0x60]	      1426	reloc.c	FUNCTION_6	IF_2
0x4000d63	        0x418b5548	            mov edx, dword [r13 + 0x48] 	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000d67	        0x4c2b6028	             sub r12, qword [rax + 0x28]	      1426	reloc.c	FUNCTION_6	IF_2
0x4000d6b	          0x4c89e0	                            mov rax, r12	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000d6e	          0x4829d8	                            sub rax, rbx	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000d71	            0x85d2	                           test edx, edx	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000d73	        0x4c0f45e0	                         cmovne r12, rax	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000d77	          0x4889ef	                            mov rdi, rbp	      1434	reloc.c	FUNCTION_6	CALL_4
0x4000d7a	      0xe800000000	                          call 0x4000d7f	      1434	reloc.c	FUNCTION_6	CALL_4
0x4000d7f	            0x89c1	                            mov ecx, eax	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000d81	        0x4883c418	                           add rsp, 0x18	      1435	reloc.c	FUNCTION_6
0x4000d85	          0x4c89e2	                            mov rdx, r12	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000d88	        0x480fafd9	                           imul rbx, rcx	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000d8c	          0x4889ee	                            mov rsi, rbp	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000d8f	          0x4c89ef	                            mov rdi, r13	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000d92	        0x498d0c1f	                    lea rcx, [r15 + rbx]	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000d96	              0x5b	                                 pop rbx	      1435	reloc.c	FUNCTION_6
0x4000d97	              0x5d	                                 pop rbp	      1435	reloc.c	FUNCTION_6
0x4000d98	            0x415c	                                 pop r12	      1435	reloc.c	FUNCTION_6
0x4000d9a	            0x415d	                                 pop r13	      1435	reloc.c	FUNCTION_6
0x4000d9c	            0x415e	                                 pop r14	      1435	reloc.c	FUNCTION_6
0x4000d9e	            0x415f	                                 pop r15	      1435	reloc.c	FUNCTION_6
0x4000da0	      0xe9fbfbffff	          jmp sym._bfd_relocate_contents	      1432	reloc.c	FUNCTION_6	CALL_3
_bfd_relocate_contents	CALL,15:ELSE,0:functions,0:SWITCH,3:FOR,0:IF,5:WHILE,0:DO,0	241
0x40009a0	            0x4157	                                push r15	      1444	reloc.c	FUNCTION_7
0x40009a2	            0x4156	                                push r14	      1444	reloc.c	FUNCTION_7
0x40009a4	          0x4889d0	                            mov rax, rdx	      1454	reloc.c	FUNCTION_7	IF_1
0x40009a7	            0x4155	                                push r13	      1444	reloc.c	FUNCTION_7
0x40009a9	            0x4154	                                push r12	      1444	reloc.c	FUNCTION_7
0x40009ab	          0x48f7d8	                                 neg rax	      1454	reloc.c	FUNCTION_7	IF_1
0x40009ae	              0x55	                                push rbp	      1444	reloc.c	FUNCTION_7
0x40009af	              0x53	                                push rbx	      1444	reloc.c	FUNCTION_7
0x40009b0	          0x4889d5	                            mov rbp, rdx	      1444	reloc.c	FUNCTION_7
0x40009b3	          0x4889fb	                            mov rbx, rdi	      1444	reloc.c	FUNCTION_7
0x40009b6	          0x4989f6	                            mov r14, rsi	      1444	reloc.c	FUNCTION_7
0x40009b9	          0x4989cd	                            mov r13, rcx	      1444	reloc.c	FUNCTION_7
0x40009bc	        0x4883ec38	                           sub rsp, 0x38	      1444	reloc.c	FUNCTION_7
0x40009c0	          0x8b5708	                mov edx, dword [rdi + 8]	      1454	reloc.c	FUNCTION_7	IF_1
0x40009c3	        0x448b6704	               mov r12d, dword [rdi + 4]	      1448	reloc.c	FUNCTION_7
0x40009c7	        0x448b7f14	           mov r15d, dword [rdi + 0x14] 	      1449	reloc.c	FUNCTION_7
0x40009cb	            0x85d2	                           test edx, edx	      1454	reloc.c	FUNCTION_7	IF_1
0x40009cd	        0x480f48e8	                          cmovs rbp, rax	      1454	reloc.c	FUNCTION_7	IF_1
0x40009d1	      0xe800000000	                          call 0x40009d6	      1457	reloc.c	FUNCTION_7	CALL_1
0x40009d6	          0x83f808	                              cmp eax, 8	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x40009d9	     0xf87d9010000	                            ja 0x4000bb8	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x40009df	          0x4189c0	                            mov r8d, eax	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x40009e2	            0x89c0	                            mov eax, eax	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x40009e4	    0xff24c5000000	                       jmp qword [rax*8]	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x40009eb	       0xf1f440000	                   nop dword [rax + rax]	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x40009f0	        0x4883c438	                           add rsp, 0x38	      1609	reloc.c	FUNCTION_7
0x40009f4	      0xb802000000	                              mov eax, 2	      1463	reloc.c	FUNCTION_7	SWITCH_1
0x40009f9	              0x5b	                                 pop rbx	      1609	reloc.c	FUNCTION_7
0x40009fa	              0x5d	                                 pop rbp	      1609	reloc.c	FUNCTION_7
0x40009fb	            0x415c	                                 pop r12	      1609	reloc.c	FUNCTION_7
0x40009fd	            0x415d	                                 pop r13	      1609	reloc.c	FUNCTION_7
0x40009ff	            0x415e	                                 pop r14	      1609	reloc.c	FUNCTION_7
0x4000a01	            0x415f	                                 pop r15	      1609	reloc.c	FUNCTION_7
0x4000a03	              0xc3	                                     ret	      1609	reloc.c	FUNCTION_7
0x4000a04	         0xf1f4000	                         nop dword [rax]	      1609	reloc.c	FUNCTION_7
0x4000a08	      0x450fb64d00	                   movzx r9d, byte [r13]	      1465	reloc.c	FUNCTION_7	SWITCH_1	CALL_3
0x4000a0d	          0x8b4318	            mov eax, dword [rbx + 0x18] 	      1487	reloc.c	FUNCTION_7	IF_2
0x4000a10	            0x85c0	                           test eax, eax	      1487	reloc.c	FUNCTION_7	IF_2
0x4000a12	     0xf8592000000	                           jne 0x4000aaa	      1487	reloc.c	FUNCTION_7	IF_2
0x4000a18	          0x4c89ce	                             mov rsi, r9	      1487	reloc.c	FUNCTION_7	IF_2
0x4000a1b	        0x48237338	             and rsi, qword [rbx + 0x38]	      1487	reloc.c	FUNCTION_7	IF_2
0x4000a1f	      0xb802000000	                              mov eax, 2	      1486	reloc.c	FUNCTION_7
0x4000a24	          0x4489e1	                           mov ecx, r12d	      1578	reloc.c	FUNCTION_7
0x4000a27	          0x48d3ed	                             shr rbp, cl	      1578	reloc.c	FUNCTION_7
0x4000a2a	          0x4489f9	                           mov ecx, r15d	      1578	reloc.c	FUNCTION_7
0x4000a2d	          0x48d3e5	                             shl rbp, cl	      1578	reloc.c	FUNCTION_7
0x4000a30	      0x488d7c3500	                    lea rdi, [rbp + rsi]	      1578	reloc.c	FUNCTION_7
0x4000a35	          0x4c31cf	                             xor rdi, r9	      1578	reloc.c	FUNCTION_7
0x4000a38	        0x48237b40	             and rdi, qword [rbx + 0x40]	      1578	reloc.c	FUNCTION_7
0x4000a3c	          0x4c31cf	                             xor rdi, r9	      1582	reloc.c	FUNCTION_7
0x4000a3f	        0x4183f802	                              cmp r8d, 2	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000a43	     0xf84bf010000	                            je 0x4000c08	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000a49	     0xf8681010000	                           jbe 0x4000bd0	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000a4f	        0x4183f804	                              cmp r8d, 4	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000a53	     0xf84d7010000	                            je 0x4000c30	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000a59	        0x4183f808	                              cmp r8d, 8	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000a5d	     0xf858d010000	                           jne 0x4000bf0	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000a63	        0x498b5608	                mov rdx, qword [r14 + 8]	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x4000a67	        0x89442408	                mov dword [rsp + 8], eax	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x4000a6b	          0x4c89ee	                            mov rsi, r13	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x4000a6e	          0xff5230	                 call qword [rdx + 0x30]	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x4000a71	        0x8b442408	                mov eax, dword [rsp + 8]	      1608	reloc.c	FUNCTION_7
0x4000a75	        0x4883c438	                           add rsp, 0x38	      1609	reloc.c	FUNCTION_7
0x4000a79	              0x5b	                                 pop rbx	      1609	reloc.c	FUNCTION_7
0x4000a7a	              0x5d	                                 pop rbp	      1609	reloc.c	FUNCTION_7
0x4000a7b	            0x415c	                                 pop r12	      1609	reloc.c	FUNCTION_7
0x4000a7d	            0x415d	                                 pop r13	      1609	reloc.c	FUNCTION_7
0x4000a7f	            0x415e	                                 pop r14	      1609	reloc.c	FUNCTION_7
0x4000a81	            0x415f	                                 pop r15	      1609	reloc.c	FUNCTION_7
0x4000a83	              0xc3	                                     ret	      1609	reloc.c	FUNCTION_7
0x4000a84	         0xf1f4000	                         nop dword [rax]	      1609	reloc.c	FUNCTION_7
0x4000a88	        0x498b4608	                mov rax, qword [r14 + 8]	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000a8c	      0x4489442408	                mov dword [rsp + 8], r8d	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000a91	          0x4c89ef	                            mov rdi, r13	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000a94	          0xff5050	                 call qword [rax + 0x50]	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000a97	          0x4989c1	                             mov r9, rax	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000a9a	          0x8b4318	            mov eax, dword [rbx + 0x18] 	      1487	reloc.c	FUNCTION_7	IF_2
0x4000a9d	      0x448b442408	                mov r8d, dword [rsp + 8]	      1469	reloc.c	FUNCTION_7	SWITCH_1
0x4000aa2	            0x85c0	                           test eax, eax	      1487	reloc.c	FUNCTION_7	IF_2
0x4000aa4	     0xf846effffff	                            je 0x4000a18	      1487	reloc.c	FUNCTION_7	IF_2
0x4000aaa	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1496	reloc.c	FUNCTION_7	IF_2
0x4000aad	      0xba01000000	                              mov edx, 1	      1496	reloc.c	FUNCTION_7	IF_2
0x4000ab2	          0x4c89f7	                            mov rdi, r14	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000ab5	      0x448944242c	             mov dword [rsp + 0x2c], r8d	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000aba	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000abf	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1496	reloc.c	FUNCTION_7	IF_2
0x4000ac4	          0x8d48ff	                      lea ecx, [rax - 1]	      1496	reloc.c	FUNCTION_7	IF_2
0x4000ac7	          0x4889d0	                            mov rax, rdx	      1496	reloc.c	FUNCTION_7	IF_2
0x4000aca	          0x48d3e0	                             shl rax, cl	      1496	reloc.c	FUNCTION_7	IF_2
0x4000acd	      0x4c8d5400fe	                lea r10, [rax + rax - 2]	      1496	reloc.c	FUNCTION_7	IF_2
0x4000ad2	        0x4983ca01	                               or r10, 1	      1496	reloc.c	FUNCTION_7	IF_2
0x4000ad6	          0x4c89d0	                            mov rax, r10	      1497	reloc.c	FUNCTION_7	IF_2
0x4000ad9	      0x4c89542410	             mov qword [rsp + 0x10], r10	      1497	reloc.c	FUNCTION_7	IF_2
0x4000ade	          0x48f7d0	                                 not rax	      1497	reloc.c	FUNCTION_7	IF_2
0x4000ae1	      0x4889442408	                mov qword [rsp + 8], rax	      1497	reloc.c	FUNCTION_7	IF_2
0x4000ae6	      0xe800000000	                          call 0x4000aeb	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000aeb	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000af0	          0x8d48ff	                      lea ecx, [rax - 1]	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000af3	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000af8	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	      1501	reloc.c	FUNCTION_7	IF_2
0x4000afd	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      1501	reloc.c	FUNCTION_7	IF_2
0x4000b01	      0x448b44242c	            mov r8d, dword [rsp + 0x2c] 	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000b06	          0x48d3e2	                             shl rdx, cl	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000b09	          0x4489e1	                           mov ecx, r12d	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000b0c	          0x48d3e0	                             shl rax, cl	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000b0f	      0x488d5412fe	                lea rdx, [rdx + rdx - 2]	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000b14	          0x4c89ce	                             mov rsi, r9	      1501	reloc.c	FUNCTION_7	IF_2
0x4000b17	        0x4883c801	                               or rax, 1	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000b1b	          0x4821fe	                            and rsi, rdi	      1501	reloc.c	FUNCTION_7	IF_2
0x4000b1e	          0x4809d0	                             or rax, rdx	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000b21	          0x4889ea	                            mov rdx, rbp	      1500	reloc.c	FUNCTION_7	IF_2
0x4000b24	          0x4821c2	                            and rdx, rax	      1500	reloc.c	FUNCTION_7	IF_2
0x4000b27	          0x4989c3	                            mov r11, rax	      1501	reloc.c	FUNCTION_7	IF_2
0x4000b2a	          0x48d3ea	                             shr rdx, cl	      1500	reloc.c	FUNCTION_7	IF_2
0x4000b2d	          0x4921f3	                            and r11, rsi	      1501	reloc.c	FUNCTION_7	IF_2
0x4000b30	          0x4489f9	                           mov ecx, r15d	      1501	reloc.c	FUNCTION_7	IF_2
0x4000b33	          0x49d3eb	                             shr r11, cl	      1501	reloc.c	FUNCTION_7	IF_2
0x4000b36	          0x4489e1	                           mov ecx, r12d	      1502	reloc.c	FUNCTION_7	IF_2
0x4000b39	          0x48d3e8	                             shr rax, cl	      1502	reloc.c	FUNCTION_7	IF_2
0x4000b3c	          0x4989c2	                            mov r10, rax	      1502	reloc.c	FUNCTION_7	IF_2
0x4000b3f	          0x8b4318	            mov eax, dword [rbx + 0x18] 	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000b42	          0x83f802	                              cmp eax, 2	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000b45	     0xf840d010000	                            je 0x4000c58	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000b4b	          0x83f803	                              cmp eax, 3	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000b4e	     0xf847c010000	                            je 0x4000cd0	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000b54	          0x83f801	                              cmp eax, 1	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000b57	     0xf840b010000	                            je 0x4000c68	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000b5d	      0xba00000000	                              mov edx, 0	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x4000b62	      0xbe25060000	                          mov esi, 0x625	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x4000b67	      0xbf00000000	                              mov edi, 0	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x4000b6c	      0xe800000000	                          call 0x4000b71	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x4000b71	     0xf1f80000000	                         nop dword [rax]	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x4000b78	        0x498b4608	                mov rax, qword [r14 + 8]	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x4000b7c	      0x4489442408	                mov dword [rsp + 8], r8d	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x4000b81	          0x4c89ef	                            mov rdi, r13	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x4000b84	          0xff5038	                 call qword [rax + 0x38]	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x4000b87	      0x448b442408	                mov r8d, dword [rsp + 8]	      1472	reloc.c	FUNCTION_7	SWITCH_1
0x4000b8c	          0x4989c1	                             mov r9, rax	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x4000b8f	      0xe979feffff	                           jmp 0x4000a0d	      1472	reloc.c	FUNCTION_7	SWITCH_1
0x4000b94	         0xf1f4000	                         nop dword [rax]	      1472	reloc.c	FUNCTION_7	SWITCH_1
0x4000b98	        0x498b4608	                mov rax, qword [r14 + 8]	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x4000b9c	      0x4489442408	                mov dword [rsp + 8], r8d	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x4000ba1	          0x4c89ef	                            mov rdi, r13	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x4000ba4	          0xff5020	                 call qword [rax + 0x20]	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x4000ba7	      0x448b442408	                mov r8d, dword [rsp + 8]	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x4000bac	          0x4989c1	                             mov r9, rax	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x4000baf	      0xe959feffff	                           jmp 0x4000a0d	      1479	reloc.c	FUNCTION_7	SWITCH_1
0x4000bb4	         0xf1f4000	                         nop dword [rax]	      1479	reloc.c	FUNCTION_7	SWITCH_1
0x4000bb8	      0xba00000000	                              mov edx, 0	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4000bbd	      0xbeb5050000	                          mov esi, 0x5b5	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4000bc2	      0xbf00000000	                              mov edi, 0	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4000bc7	      0xe800000000	                          call 0x4000bcc	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4000bcc	         0xf1f4000	                         nop dword [rax]	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4000bd0	        0x4183f801	                              cmp r8d, 1	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000bd4	            0x751a	                           jne 0x4000bf0	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000bd6	        0x41887d00	                     mov byte [r13], dil	      1591	reloc.c	FUNCTION_7	SWITCH_3	CALL_11
0x4000bda	        0x4883c438	                           add rsp, 0x38	      1609	reloc.c	FUNCTION_7
0x4000bde	              0x5b	                                 pop rbx	      1609	reloc.c	FUNCTION_7
0x4000bdf	              0x5d	                                 pop rbp	      1609	reloc.c	FUNCTION_7
0x4000be0	            0x415c	                                 pop r12	      1609	reloc.c	FUNCTION_7
0x4000be2	            0x415d	                                 pop r13	      1609	reloc.c	FUNCTION_7
0x4000be4	            0x415e	                                 pop r14	      1609	reloc.c	FUNCTION_7
0x4000be6	            0x415f	                                 pop r15	      1609	reloc.c	FUNCTION_7
0x4000be8	              0xc3	                                     ret	      1609	reloc.c	FUNCTION_7
0x4000be9	     0xf1f80000000	                         nop dword [rax]	      1609	reloc.c	FUNCTION_7
0x4000bf0	      0xba00000000	                              mov edx, 0	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x4000bf5	      0xbe35060000	                          mov esi, 0x635	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x4000bfa	      0xbf00000000	                              mov edi, 0	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x4000bff	      0xe800000000	                          call 0x4000c04	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x4000c04	         0xf1f4000	                         nop dword [rax]	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x4000c08	        0x498b5608	                mov rdx, qword [r14 + 8]	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x4000c0c	        0x89442408	                mov dword [rsp + 8], eax	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x4000c10	          0x4c89ee	                            mov rsi, r13	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x4000c13	          0xff5260	                 call qword [rdx + 0x60]	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x4000c16	        0x8b442408	                mov eax, dword [rsp + 8]	      1608	reloc.c	FUNCTION_7
0x4000c1a	        0x4883c438	                           add rsp, 0x38	      1609	reloc.c	FUNCTION_7
0x4000c1e	              0x5b	                                 pop rbx	      1609	reloc.c	FUNCTION_7
0x4000c1f	              0x5d	                                 pop rbp	      1609	reloc.c	FUNCTION_7
0x4000c20	            0x415c	                                 pop r12	      1609	reloc.c	FUNCTION_7
0x4000c22	            0x415d	                                 pop r13	      1609	reloc.c	FUNCTION_7
0x4000c24	            0x415e	                                 pop r14	      1609	reloc.c	FUNCTION_7
0x4000c26	            0x415f	                                 pop r15	      1609	reloc.c	FUNCTION_7
0x4000c28	              0xc3	                                     ret	      1609	reloc.c	FUNCTION_7
0x4000c29	     0xf1f80000000	                         nop dword [rax]	      1609	reloc.c	FUNCTION_7
0x4000c30	        0x498b5608	                mov rdx, qword [r14 + 8]	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x4000c34	        0x89442408	                mov dword [rsp + 8], eax	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x4000c38	          0x4c89ee	                            mov rsi, r13	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x4000c3b	          0xff5248	                 call qword [rdx + 0x48]	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x4000c3e	        0x8b442408	                mov eax, dword [rsp + 8]	      1608	reloc.c	FUNCTION_7
0x4000c42	        0x4883c438	                           add rsp, 0x38	      1609	reloc.c	FUNCTION_7
0x4000c46	              0x5b	                                 pop rbx	      1609	reloc.c	FUNCTION_7
0x4000c47	              0x5d	                                 pop rbp	      1609	reloc.c	FUNCTION_7
0x4000c48	            0x415c	                                 pop r12	      1609	reloc.c	FUNCTION_7
0x4000c4a	            0x415d	                                 pop r13	      1609	reloc.c	FUNCTION_7
0x4000c4c	            0x415e	                                 pop r14	      1609	reloc.c	FUNCTION_7
0x4000c4e	            0x415f	                                 pop r15	      1609	reloc.c	FUNCTION_7
0x4000c50	              0xc3	                                     ret	      1609	reloc.c	FUNCTION_7
0x4000c51	     0xf1f80000000	                         nop dword [rax]	      1609	reloc.c	FUNCTION_7
0x4000c58	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000c5d	          0x48d1e8	                              shr rax, 1	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000c60	          0x48f7d0	                                 not rax	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000c63	      0x4889442408	                mov qword [rsp + 8], rax	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000c68	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000c6d	      0xb802000000	                              mov eax, 2	      1486	reloc.c	FUNCTION_7
0x4000c72	          0x4821d1	                            and rcx, rdx	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000c75	            0x7414	                            je 0x4000c8b	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000c77	      0x488b442408	                mov rax, qword [rsp + 8]	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000c7c	          0x4c21d0	                            and rax, r10	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000c7f	          0x4839c1	                            cmp rcx, rax	      1521	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000c82	           0xf95c0	                                setne al	      1521	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000c85	           0xfb6c0	                           movzx eax, al	      1521	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000c88	          0x83c002	                              add eax, 2	      1521	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000c8b	          0x4889f9	                            mov rcx, rdi	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000c8e	          0x48f7d1	                                 not rcx	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000c91	          0x48d1e9	                              shr rcx, 1	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000c94	          0x4821cf	                            and rdi, rcx	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000c97	          0x4489f9	                           mov ecx, r15d	      1530	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000c9a	          0x48d3ef	                             shr rdi, cl	      1530	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000c9d	          0x4889d1	                            mov rcx, rdx	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000ca0	          0x4931fb	                            xor r11, rdi	      1533	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000ca3	          0x4929fb	                            sub r11, rdi	      1533	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000ca6	          0x4c31d9	                            xor rcx, r11	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000ca9	          0x4901d3	                            add r11, rdx	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000cac	          0x4c31da	                            xor rdx, r11	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000caf	          0x48f7d1	                                 not rcx	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000cb2	          0x4821ca	                            and rdx, rcx	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000cb5	          0x4c21d2	                            and rdx, r10	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000cb8	      0x4885542408	               test qword [rsp + 8], rdx	      1552	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000cbd	      0xba03000000	                              mov edx, 3	      1552	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000cc2	           0xf45c2	                         cmovne eax, edx	      1552	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000cc5	      0xe95afdffff	                           jmp 0x4000a24	      1552	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000cca	    0x660f1f440000	                    nop word [rax + rax]	      1552	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000cd0	        0x4a8d041a	                    lea rax, [rdx + r11]	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4000cd4	          0x4909d3	                             or r11, rdx	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4000cd7	          0x4921c2	                            and r10, rax	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4000cda	          0x4d09da	                             or r10, r11	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4000cdd	      0x4c23542408	                and r10, qword [rsp + 8]	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4000ce2	        0x4983fa01	                              cmp r10, 1	      1486	reloc.c	FUNCTION_7
0x4000ce6	            0x19c0	                            sbb eax, eax	      1486	reloc.c	FUNCTION_7
0x4000ce8	          0x83c003	                              add eax, 3	      1486	reloc.c	FUNCTION_7
0x4000ceb	      0xe934fdffff	                           jmp 0x4000a24	      1486	reloc.c	FUNCTION_7
_bfd_norelocs_bfd_reloc_name_lookup	CALL,1:ELSE,0:functions,0:SWITCH,0:FOR,0:IF,0:WHILE,0:DO,0	1
0x40015d0	      0xe900000000	                           jmp 0x40015d5	      8430	reloc.c	FUNCTION_21	CALL_1
bfd_reloc_name_lookup	CALL,1:ELSE,0:functions,0:SWITCH,0:FOR,0:IF,0:WHILE,0:DO,0	3
0x4000f70	        0x488b4708	                mov rax, qword [rdi + 8]	      8021	reloc.c	FUNCTION_10	CALL_1
0x4000f74	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      8021	reloc.c	FUNCTION_10	CALL_1
0x4000f7b	            0xffe0	                                 jmp rax	      8021	reloc.c	FUNCTION_10	CALL_1
bfd_default_reloc_type_lookup	CALL,5:ELSE,0:functions,0:SWITCH,2:FOR,0:IF,0:WHILE,0:DO,0	39
0x4000f80	        0x4883ec08	                              sub rsp, 8	      8042	reloc.c	FUNCTION_11
0x4000f84	    0x81fe2b020000	                          cmp esi, 0x22b	      8043	reloc.c	FUNCTION_11	SWITCH_1
0x4000f8a	            0x7574	                           jne 0x4001000	      8043	reloc.c	FUNCTION_11	SWITCH_1
0x4000f8c	      0xe800000000	                          call 0x4000f91	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000f91	            0x89c2	                            mov edx, eax	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000f93	      0xb800000000	                              mov eax, 0	      8054	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4000f98	          0x83fa20	                           cmp edx, 0x20	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000f9b	            0x741b	                            je 0x4000fb8	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000f9d	          0x83fa40	                           cmp edx, 0x40	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000fa0	            0x741e	                            je 0x4000fc0	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000fa2	          0x83fa10	                           cmp edx, 0x10	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000fa5	            0x7439	                            je 0x4000fe0	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000fa7	      0xbe7b1f0000	                         mov esi, 0x1f7b	      8059	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_4
0x4000fac	      0xbf00000000	                              mov edi, 0	      8059	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_4
0x4000fb1	      0xe800000000	                          call 0x4000fb6	      8059	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_4
0x4000fb6	            0x31c0	                            xor eax, eax	      8065	reloc.c	FUNCTION_11
0x4000fb8	        0x4883c408	                              add rsp, 8	      8066	reloc.c	FUNCTION_11
0x4000fbc	              0xc3	                                     ret	      8066	reloc.c	FUNCTION_11
0x4000fbd	           0xf1f00	                         nop dword [rax]	      8066	reloc.c	FUNCTION_11
0x4000fc0	      0xbe731f0000	                         mov esi, 0x1f73	      8051	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_2
0x4000fc5	      0xbf00000000	                              mov edi, 0	      8051	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_2
0x4000fca	      0xe800000000	                          call 0x4000fcf	      8051	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_2
0x4000fcf	            0x31c0	                            xor eax, eax	      8065	reloc.c	FUNCTION_11
0x4000fd1	        0x4883c408	                              add rsp, 8	      8066	reloc.c	FUNCTION_11
0x4000fd5	              0xc3	                                     ret	      8066	reloc.c	FUNCTION_11
0x4000fd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8066	reloc.c	FUNCTION_11
0x4000fe0	      0xbe781f0000	                         mov esi, 0x1f78	      8056	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_3
0x4000fe5	      0xbf00000000	                              mov edi, 0	      8056	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_3
0x4000fea	      0xe800000000	                          call 0x4000fef	      8056	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_3
0x4000fef	            0x31c0	                            xor eax, eax	      8065	reloc.c	FUNCTION_11
0x4000ff1	        0x4883c408	                              add rsp, 8	      8066	reloc.c	FUNCTION_11
0x4000ff5	              0xc3	                                     ret	      8066	reloc.c	FUNCTION_11
0x4000ff6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8066	reloc.c	FUNCTION_11
0x4001000	      0xbe7f1f0000	                         mov esi, 0x1f7f	      8063	reloc.c	FUNCTION_11	SWITCH_1	CALL_5
0x4001005	      0xbf00000000	                              mov edi, 0	      8063	reloc.c	FUNCTION_11	SWITCH_1	CALL_5
0x400100a	      0xe800000000	                          call 0x400100f	      8063	reloc.c	FUNCTION_11	SWITCH_1	CALL_5
0x400100f	            0x31c0	                            xor eax, eax	      8065	reloc.c	FUNCTION_11
0x4001011	        0x4883c408	                              add rsp, 8	      8066	reloc.c	FUNCTION_11
0x4001015	              0xc3	                                     ret	      8066	reloc.c	FUNCTION_11
_bfd_norelocs_bfd_reloc_type_lookup	CALL,1:ELSE,0:functions,0:SWITCH,0:FOR,0:IF,0:WHILE,0:DO,0	1
0x40015c0	      0xe900000000	                           jmp 0x40015c5	      8423	reloc.c	FUNCTION_20	CALL_1
bfd_generic_relax_section	CALL,2:ELSE,0:functions,0:SWITCH,0:FOR,0:IF,1:WHILE,0:DO,0	26
0x4001040	           0xfb602	                   movzx eax, byte [rdx]	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x4001043	          0x83e003	                              and eax, 3	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x4001046	            0x3c02	                               cmp al, 2	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x4001048	            0x7416	                            je 0x4001060	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x400104a	    0xc70100000000	                      mov dword [rcx], 0	      8114	reloc.c	FUNCTION_13
0x4001050	      0xb801000000	                              mov eax, 1	      8116	reloc.c	FUNCTION_13
0x4001055	              0xc3	                                     ret	      8116	reloc.c	FUNCTION_13
0x4001056	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8116	reloc.c	FUNCTION_13
0x4001060	              0x53	                                push rbx	      8109	reloc.c	FUNCTION_13
0x4001061	      0xbe00000000	                              mov esi, 0	      8112	reloc.c	FUNCTION_13	CALL_2
0x4001066	      0xbf00000000	                              mov edi, 0	      8112	reloc.c	FUNCTION_13	CALL_2
0x400106b	        0x4883ec10	                           sub rsp, 0x10	      8109	reloc.c	FUNCTION_13
0x400106f	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      8111	reloc.c	FUNCTION_13	IF_1
0x4001073	      0xba05000000	                              mov edx, 5	      8112	reloc.c	FUNCTION_13	CALL_2
0x4001078	      0x48894c2408	                mov qword [rsp + 8], rcx	      8112	reloc.c	FUNCTION_13	CALL_2
0x400107d	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      8111	reloc.c	FUNCTION_13	IF_1
0x4001081	      0xe800000000	                          call 0x4001086	      8112	reloc.c	FUNCTION_13	CALL_2
0x4001086	          0x4889c7	                            mov rdi, rax	      8111	reloc.c	FUNCTION_13	IF_1
0x4001089	            0x31c0	                            xor eax, eax	      8111	reloc.c	FUNCTION_13	IF_1
0x400108b	            0xffd3	                                call rbx	      8111	reloc.c	FUNCTION_13	IF_1
0x400108d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8111	reloc.c	FUNCTION_13	IF_1
0x4001092	      0xb801000000	                              mov eax, 1	      8116	reloc.c	FUNCTION_13
0x4001097	    0xc70100000000	                      mov dword [rcx], 0	      8114	reloc.c	FUNCTION_13
0x400109d	        0x4883c410	                           add rsp, 0x10	      8116	reloc.c	FUNCTION_13
0x40010a1	              0x5b	                                 pop rbx	      8116	reloc.c	FUNCTION_13
0x40010a2	              0xc3	                                     ret	      8116	reloc.c	FUNCTION_13
bfd_check_overflow	CALL,1:ELSE,0:functions,0:SWITCH,1:FOR,0:IF,2:WHILE,0:DO,0	56
0x40000f0	          0x4189cb	                           mov r11d, ecx	       494	reloc.c	FUNCTION_2
0x40000f3	    0x41b901000000	                              mov r9d, 1	       502	reloc.c	FUNCTION_2
0x40000f9	          0x8d4eff	                      lea ecx, [rsi - 1]	       502	reloc.c	FUNCTION_2
0x40000fc	          0x4c89c8	                             mov rax, r9	       502	reloc.c	FUNCTION_2
0x40000ff	          0x48d3e0	                             shl rax, cl	       502	reloc.c	FUNCTION_2
0x4000102	        0x418d4bff	                      lea ecx, [r11 - 1]	       504	reloc.c	FUNCTION_2
0x4000106	      0x488d4400fe	                lea rax, [rax + rax - 2]	       502	reloc.c	FUNCTION_2
0x400010b	          0x49d3e1	                              shl r9, cl	       504	reloc.c	FUNCTION_2
0x400010e	            0x89d1	                            mov ecx, edx	       504	reloc.c	FUNCTION_2
0x4000110	        0x4883c801	                               or rax, 1	       502	reloc.c	FUNCTION_2
0x4000114	      0x4b8d7409fe	                  lea rsi, [r9 + r9 - 2]	       504	reloc.c	FUNCTION_2
0x4000119	          0x4989c3	                            mov r11, rax	       504	reloc.c	FUNCTION_2
0x400011c	          0x4989c2	                            mov r10, rax	       503	reloc.c	FUNCTION_2
0x400011f	          0x49d3e3	                             shl r11, cl	       504	reloc.c	FUNCTION_2
0x4000122	        0x4883ce01	                               or rsi, 1	       504	reloc.c	FUNCTION_2
0x4000126	            0x89d1	                            mov ecx, edx	       505	reloc.c	FUNCTION_2
0x4000128	          0x4c09de	                             or rsi, r11	       504	reloc.c	FUNCTION_2
0x400012b	          0x49f7d2	                                 not r10	       503	reloc.c	FUNCTION_2
0x400012e	          0x4921f0	                             and r8, rsi	       505	reloc.c	FUNCTION_2
0x4000131	          0x49d3e8	                              shr r8, cl	       505	reloc.c	FUNCTION_2
0x4000134	          0x83ff01	                              cmp edi, 1	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000137	            0x7430	                            je 0x4000169	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000139	            0x7255	                            jb 0x4000190	       507	reloc.c	FUNCTION_2	SWITCH_1
0x400013b	          0x83ff02	                              cmp edi, 2	       507	reloc.c	FUNCTION_2	SWITCH_1
0x400013e	            0x7420	                            je 0x4000160	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000140	          0x83ff03	                              cmp edi, 3	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000143	            0x745b	                            je 0x40001a0	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000145	        0x4883ec08	                              sub rsp, 8	       494	reloc.c	FUNCTION_2
0x4000149	      0xba00000000	                              mov edx, 0	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x400014e	      0xbe18020000	                          mov esi, 0x218	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x4000153	      0xbf00000000	                              mov edi, 0	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x4000158	      0xe800000000	                          call 0x400015d	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x400015d	           0xf1f00	                         nop dword [rax]	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x4000160	          0x48d1e8	                              shr rax, 1	       515	reloc.c	FUNCTION_2	SWITCH_1
0x4000163	          0x48f7d0	                                 not rax	       515	reloc.c	FUNCTION_2	SWITCH_1
0x4000166	          0x4989c2	                            mov r10, rax	       515	reloc.c	FUNCTION_2	SWITCH_1
0x4000169	          0x4d21d0	                             and r8, r10	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x400016c	      0xb802000000	                              mov eax, 2	       496	reloc.c	FUNCTION_2
0x4000171	            0x7422	                            je 0x4000195	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000173	            0x89d1	                            mov ecx, edx	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000175	            0x31c0	                            xor eax, eax	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000177	          0x48d3ee	                             shr rsi, cl	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x400017a	          0x4c21d6	                            and rsi, r10	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x400017d	          0x4939f0	                             cmp r8, rsi	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000180	           0xf95c0	                                setne al	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000183	          0x83c002	                              add eax, 2	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000186	              0xc3	                                     ret	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000187	    0x660f1f840000	                    nop word [rax + rax]	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000190	      0xb802000000	                              mov eax, 2	       496	reloc.c	FUNCTION_2
0x4000195	            0xf3c3	                                     ret	       540	reloc.c	FUNCTION_2
0x4000197	    0x660f1f840000	                    nop word [rax + rax]	       540	reloc.c	FUNCTION_2
0x40001a0	          0x4d21d0	                             and r8, r10	       531	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x40001a3	        0x4983f801	                               cmp r8, 1	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x40001a7	            0x19c0	                            sbb eax, eax	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x40001a9	          0x83c003	                              add eax, 3	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x40001ac	              0xc3	                                     ret	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
_bfd_unrecognized_reloc	CALL,5:ELSE,0:functions,0:SWITCH,0:FOR,0:IF,0:WHILE,0:DO,0	31
0x4001550	            0x4154	                                push r12	      8405	reloc.c	FUNCTION_19
0x4001552	              0x55	                                push rbp	      8405	reloc.c	FUNCTION_19
0x4001553	          0x4989f4	                            mov r12, rsi	      8405	reloc.c	FUNCTION_19
0x4001556	              0x53	                                push rbx	      8405	reloc.c	FUNCTION_19
0x4001557	            0x89d5	                            mov ebp, edx	      8405	reloc.c	FUNCTION_19
0x4001559	          0x4889fb	                            mov rbx, rdi	      8405	reloc.c	FUNCTION_19
0x400155c	      0xba05000000	                              mov edx, 5	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001561	      0xbe00000000	                              mov esi, 0	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001566	      0xbf00000000	                              mov edi, 0	      8407	reloc.c	FUNCTION_19	CALL_2
0x400156b	      0xe800000000	                          call 0x4001570	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001570	          0x4c89e1	                            mov rcx, r12	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001573	            0x89ea	                            mov edx, ebp	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001575	          0x4889de	                            mov rsi, rbx	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001578	          0x4889c7	                            mov rdi, rax	      8407	reloc.c	FUNCTION_19	CALL_2
0x400157b	            0x31c0	                            xor eax, eax	      8407	reloc.c	FUNCTION_19	CALL_2
0x400157d	      0xe800000000	                          call 0x4001582	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001582	      0xba05000000	                              mov edx, 5	      8411	reloc.c	FUNCTION_19	CALL_4
0x4001587	      0xbe00000000	                              mov esi, 0	      8411	reloc.c	FUNCTION_19	CALL_4
0x400158c	      0xbf00000000	                              mov edi, 0	      8411	reloc.c	FUNCTION_19	CALL_4
0x4001591	      0xe800000000	                          call 0x4001596	      8411	reloc.c	FUNCTION_19	CALL_4
0x4001596	      0xbe00000000	                              mov esi, 0	      8411	reloc.c	FUNCTION_19	CALL_4
0x400159b	          0x4889c7	                            mov rdi, rax	      8411	reloc.c	FUNCTION_19	CALL_4
0x400159e	            0x31c0	                            xor eax, eax	      8411	reloc.c	FUNCTION_19	CALL_4
0x40015a0	      0xe800000000	                          call 0x40015a5	      8411	reloc.c	FUNCTION_19	CALL_4
0x40015a5	      0xbf11000000	                           mov edi, 0x11	      8414	reloc.c	FUNCTION_19	CALL_5
0x40015aa	      0xe800000000	                          call 0x40015af	      8414	reloc.c	FUNCTION_19	CALL_5
0x40015af	              0x5b	                                 pop rbx	      8416	reloc.c	FUNCTION_19
0x40015b0	            0x31c0	                            xor eax, eax	      8416	reloc.c	FUNCTION_19
0x40015b2	              0x5d	                                 pop rbp	      8416	reloc.c	FUNCTION_19
0x40015b3	            0x415c	                                 pop r12	      8416	reloc.c	FUNCTION_19
0x40015b5	              0xc3	                                     ret	      8416	reloc.c	FUNCTION_19
bfd_reloc_offset_in_range	CALL,2:ELSE,0:functions,0:SWITCH,0:FOR,0:IF,0:WHILE,0:DO,0	28
0x40001b0	              0x55	                                push rbp	       567	reloc.c	FUNCTION_3
0x40001b1	              0x53	                                push rbx	       567	reloc.c	FUNCTION_3
0x40001b2	          0x4889cd	                            mov rbp, rcx	       567	reloc.c	FUNCTION_3
0x40001b5	        0x4883ec08	                              sub rsp, 8	       567	reloc.c	FUNCTION_3
0x40001b9	         0xfb64644	           movzx eax, byte [rsi + 0x44] 	       568	reloc.c	FUNCTION_3	CALL_1
0x40001bd	          0x83e018	                           and eax, 0x18	       568	reloc.c	FUNCTION_3	CALL_1
0x40001c0	            0x3c10	                            cmp al, 0x10	       568	reloc.c	FUNCTION_3	CALL_1
0x40001c2	            0x742c	                            je 0x40001f0	       568	reloc.c	FUNCTION_3	CALL_1
0x40001c4	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	       568	reloc.c	FUNCTION_3	CALL_1
0x40001c8	          0x4885db	                           test rbx, rbx	       568	reloc.c	FUNCTION_3	CALL_1
0x40001cb	            0x7423	                            je 0x40001f0	       568	reloc.c	FUNCTION_3	CALL_1
0x40001cd	      0xe800000000	                          call 0x40001d2	       569	reloc.c	FUNCTION_3	CALL_2
0x40001d2	            0x31d2	                            xor edx, edx	       574	reloc.c	FUNCTION_3
0x40001d4	          0x4839eb	                            cmp rbx, rbp	       574	reloc.c	FUNCTION_3
0x40001d7	            0x720d	                            jb 0x40001e6	       574	reloc.c	FUNCTION_3
0x40001d9	            0x89c0	                            mov eax, eax	       574	reloc.c	FUNCTION_3
0x40001db	            0x31d2	                            xor edx, edx	       574	reloc.c	FUNCTION_3
0x40001dd	          0x4801c5	                            add rbp, rax	       574	reloc.c	FUNCTION_3
0x40001e0	          0x4839eb	                            cmp rbx, rbp	       574	reloc.c	FUNCTION_3
0x40001e3	           0xf93c2	                                setae dl	       574	reloc.c	FUNCTION_3
0x40001e6	        0x4883c408	                              add rsp, 8	       575	reloc.c	FUNCTION_3
0x40001ea	            0x89d0	                            mov eax, edx	       575	reloc.c	FUNCTION_3
0x40001ec	              0x5b	                                 pop rbx	       575	reloc.c	FUNCTION_3
0x40001ed	              0x5d	                                 pop rbp	       575	reloc.c	FUNCTION_3
0x40001ee	              0xc3	                                     ret	       575	reloc.c	FUNCTION_3
0x40001ef	              0x90	                                     nop	       575	reloc.c	FUNCTION_3
0x40001f0	        0x488b5a38	            mov rbx, qword [rdx + 0x38] 	       568	reloc.c	FUNCTION_3	CALL_1
0x40001f4	            0xebd7	                           jmp 0x40001cd	       568	reloc.c	FUNCTION_3	CALL_1
bfd_generic_lookup_section_flags	CALL,2:ELSE,0:functions,0:SWITCH,0:FOR,0:IF,1:WHILE,0:DO,0	16
0x40010c0	          0x4885f6	                           test rsi, rsi	      8157	reloc.c	FUNCTION_15	IF_1
0x40010c3	            0x742b	                            je 0x40010f0	      8157	reloc.c	FUNCTION_15	IF_1
0x40010c5	        0x4883ec08	                              sub rsp, 8	      8156	reloc.c	FUNCTION_15
0x40010c9	      0xba05000000	                              mov edx, 5	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x40010ce	      0xbe00000000	                              mov esi, 0	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x40010d3	      0xbf00000000	                              mov edi, 0	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x40010d8	      0xe800000000	                          call 0x40010dd	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x40010dd	          0x4889c7	                            mov rdi, rax	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x40010e0	            0x31c0	                            xor eax, eax	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x40010e2	      0xe800000000	                          call 0x40010e7	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x40010e7	            0x31c0	                            xor eax, eax	      8160	reloc.c	FUNCTION_15	IF_1
0x40010e9	        0x4883c408	                              add rsp, 8	      8163	reloc.c	FUNCTION_15
0x40010ed	              0xc3	                                     ret	      8163	reloc.c	FUNCTION_15
0x40010ee	            0x6690	                                     nop	      8163	reloc.c	FUNCTION_15
0x40010f0	      0xb801000000	                              mov eax, 1	      8163	reloc.c	FUNCTION_15
0x40010f5	              0xc3	                                     ret	      8163	reloc.c	FUNCTION_15
