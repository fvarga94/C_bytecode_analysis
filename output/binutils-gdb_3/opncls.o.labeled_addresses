bfd_follow_gnu_debugaltlink	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,0:CALL,1	5
0x40019b0	          0x4531c9	                            xor r9d, r9d	      1641	opncls.c	FUNCTION_39	CALL_1
0x40019b3	    0x41b800000000	                              mov r8d, 0	      1641	opncls.c	FUNCTION_39	CALL_1
0x40019b9	      0xb900000000	                              mov ecx, 0	      1641	opncls.c	FUNCTION_39	CALL_1
0x40019be	      0xba01000000	                              mov edx, 1	      1641	opncls.c	FUNCTION_39	CALL_1
0x40019c3	      0xe938eaffff	        jmp sym.find_separate_debug_file	      1641	opncls.c	FUNCTION_39	CALL_1
bfd_openstreamr	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,3:CALL,6	49
0x4000c50	            0x4155	                                push r13	       382	opncls.c	FUNCTION_8
0x4000c52	            0x4154	                                push r12	       382	opncls.c	FUNCTION_8
0x4000c54	          0x4989d5	                            mov r13, rdx	       382	opncls.c	FUNCTION_8
0x4000c57	              0x55	                                push rbp	       382	opncls.c	FUNCTION_8
0x4000c58	              0x53	                                push rbx	       382	opncls.c	FUNCTION_8
0x4000c59	          0x4989fc	                            mov r12, rdi	       382	opncls.c	FUNCTION_8
0x4000c5c	          0x4889f5	                            mov rbp, rsi	       382	opncls.c	FUNCTION_8
0x4000c5f	        0x4883ec08	                              sub rsp, 8	       382	opncls.c	FUNCTION_8
0x4000c63	      0xe800000000	                          call 0x4000c68	       387	opncls.c	FUNCTION_8	CALL_1
0x4000c68	          0x4885c0	                           test rax, rax	       388	opncls.c	FUNCTION_8	IF_1
0x4000c6b	            0x7453	                            je 0x4000cc0	       388	opncls.c	FUNCTION_8	IF_1
0x4000c6d	          0x4889c6	                            mov rsi, rax	       391	opncls.c	FUNCTION_8	CALL_2
0x4000c70	          0x4889ef	                            mov rdi, rbp	       391	opncls.c	FUNCTION_8	CALL_2
0x4000c73	          0x4889c3	                            mov rbx, rax	       391	opncls.c	FUNCTION_8	CALL_2
0x4000c76	      0xe800000000	                          call 0x4000c7b	       391	opncls.c	FUNCTION_8	CALL_2
0x4000c7b	          0x4885c0	                           test rax, rax	       392	opncls.c	FUNCTION_8	IF_2
0x4000c7e	            0x7458	                            je 0x4000cd8	       392	opncls.c	FUNCTION_8	IF_2
0x4000c80	          0x4c89e7	                            mov rdi, r12	       401	opncls.c	FUNCTION_8	CALL_4
0x4000c83	        0x4c896b10	             mov qword [rbx + 0x10], r13	       398	opncls.c	FUNCTION_8
0x4000c87	      0xe800000000	                          call 0x4000c8c	       401	opncls.c	FUNCTION_8	CALL_4
0x4000c8c	          0x488903	                    mov qword [rbx], rax	       401	opncls.c	FUNCTION_8	CALL_4
0x4000c8f	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       402	opncls.c	FUNCTION_8
0x4000c93	          0x4889df	                            mov rdi, rbx	       404	opncls.c	FUNCTION_8	IF_3	CALL_5
0x4000c96	          0x83e0e7	                     and eax, 0xffffffe7	       402	opncls.c	FUNCTION_8
0x4000c99	          0x83c808	                               or eax, 8	       402	opncls.c	FUNCTION_8
0x4000c9c	          0x884344	               mov byte [rbx + 0x44], al	       402	opncls.c	FUNCTION_8
0x4000c9f	      0xe800000000	                          call 0x4000ca4	       404	opncls.c	FUNCTION_8	IF_3	CALL_5
0x4000ca4	            0x85c0	                           test eax, eax	       404	opncls.c	FUNCTION_8	IF_3	CALL_5
0x4000ca6	          0x4889df	                            mov rdi, rbx	       404	opncls.c	FUNCTION_8	IF_3	CALL_5
0x4000ca9	            0x741d	                            je 0x4000cc8	       404	opncls.c	FUNCTION_8	IF_3	CALL_5
0x4000cab	        0x4883c408	                              add rsp, 8	       411	opncls.c	FUNCTION_8
0x4000caf	          0x4889f8	                            mov rax, rdi	       411	opncls.c	FUNCTION_8
0x4000cb2	              0x5b	                                 pop rbx	       411	opncls.c	FUNCTION_8
0x4000cb3	              0x5d	                                 pop rbp	       411	opncls.c	FUNCTION_8
0x4000cb4	            0x415c	                                 pop r12	       411	opncls.c	FUNCTION_8
0x4000cb6	            0x415d	                                 pop r13	       411	opncls.c	FUNCTION_8
0x4000cb8	              0xc3	                                     ret	       411	opncls.c	FUNCTION_8
0x4000cb9	     0xf1f80000000	                         nop dword [rax]	       411	opncls.c	FUNCTION_8
0x4000cc0	            0x31ff	                            xor edi, edi	       389	opncls.c	FUNCTION_8	IF_1
0x4000cc2	            0xebe7	                           jmp 0x4000cab	       389	opncls.c	FUNCTION_8	IF_1
0x4000cc4	         0xf1f4000	                         nop dword [rax]	       389	opncls.c	FUNCTION_8	IF_1
0x4000cc8	      0xe8a3f4ffff	                call sym._bfd_delete_bfd	       406	opncls.c	FUNCTION_8	IF_3	CALL_6
0x4000ccd	            0x31ff	                            xor edi, edi	       407	opncls.c	FUNCTION_8	IF_3
0x4000ccf	            0xebda	                           jmp 0x4000cab	       407	opncls.c	FUNCTION_8	IF_3
0x4000cd1	     0xf1f80000000	                         nop dword [rax]	       407	opncls.c	FUNCTION_8	IF_3
0x4000cd8	          0x4889df	                            mov rdi, rbx	       394	opncls.c	FUNCTION_8	IF_2	CALL_3
0x4000cdb	      0xe890f4ffff	                call sym._bfd_delete_bfd	       394	opncls.c	FUNCTION_8	IF_2	CALL_3
0x4000ce0	            0x31ff	                            xor edi, edi	       395	opncls.c	FUNCTION_8	IF_2
0x4000ce2	            0xebc7	                           jmp 0x4000cab	       395	opncls.c	FUNCTION_8	IF_2
bfd_alloc	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,2:CALL,3	36
0x4001090	        0x4883ec18	                           sub rsp, 0x18	       931	opncls.c	FUNCTION_25
0x4001094	          0x4885f6	                           test rsi, rsi	       935	opncls.c	FUNCTION_25	IF_1
0x4001097	            0x7867	                            js 0x4001100	       935	opncls.c	FUNCTION_25	IF_1
0x4001099	    0x488bbf080100	           mov rdi, qword [rdi + 0x108] 	       949	opncls.c	FUNCTION_25	CALL_2
0x40010a0	            0x741e	                            je 0x40010c0	       949	opncls.c	FUNCTION_25	CALL_2
0x40010a2	        0x4883c607	                              add rsi, 7	       949	opncls.c	FUNCTION_25	CALL_2
0x40010a6	        0x4883e6f8	             and rsi, 0xfffffffffffffff8	       949	opncls.c	FUNCTION_25	CALL_2
0x40010aa	            0x7519	                           jne 0x40010c5	       949	opncls.c	FUNCTION_25	CALL_2
0x40010ac	      0xe800000000	                          call 0x40010b1	       949	opncls.c	FUNCTION_25	CALL_2
0x40010b1	          0x4885c0	                           test rax, rax	       950	opncls.c	FUNCTION_25	IF_2
0x40010b4	            0x7432	                            je 0x40010e8	       950	opncls.c	FUNCTION_25	IF_2
0x40010b6	        0x4883c418	                           add rsp, 0x18	       953	opncls.c	FUNCTION_25
0x40010ba	              0xc3	                                     ret	       953	opncls.c	FUNCTION_25
0x40010bb	       0xf1f440000	                   nop dword [rax + rax]	       953	opncls.c	FUNCTION_25
0x40010c0	      0xbe08000000	                              mov esi, 8	       949	opncls.c	FUNCTION_25	CALL_2
0x40010c5	          0x8b4708	                mov eax, dword [rdi + 8]	       949	opncls.c	FUNCTION_25	CALL_2
0x40010c8	          0x4839f0	                            cmp rax, rsi	       949	opncls.c	FUNCTION_25	CALL_2
0x40010cb	          0x4889c2	                            mov rdx, rax	       949	opncls.c	FUNCTION_25	CALL_2
0x40010ce	            0x72dc	                            jb 0x40010ac	       949	opncls.c	FUNCTION_25	CALL_2
0x40010d0	          0x488b07	                    mov rax, qword [rdi]	       949	opncls.c	FUNCTION_25	CALL_2
0x40010d3	            0x29f2	                            sub edx, esi	       949	opncls.c	FUNCTION_25	CALL_2
0x40010d5	          0x895708	                mov dword [rdi + 8], edx	       949	opncls.c	FUNCTION_25	CALL_2
0x40010d8	        0x488d0c30	                    lea rcx, [rax + rsi]	       949	opncls.c	FUNCTION_25	CALL_2
0x40010dc	          0x48890f	                    mov qword [rdi], rcx	       949	opncls.c	FUNCTION_25	CALL_2
0x40010df	            0xebd0	                           jmp 0x40010b1	       949	opncls.c	FUNCTION_25	CALL_2
0x40010e1	     0xf1f80000000	                         nop dword [rax]	       949	opncls.c	FUNCTION_25	CALL_2
0x40010e8	      0xbf06000000	                              mov edi, 6	       951	opncls.c	FUNCTION_25	CALL_3
0x40010ed	      0x4889442408	                mov qword [rsp + 8], rax	       951	opncls.c	FUNCTION_25	CALL_3
0x40010f2	      0xe800000000	                          call 0x40010f7	       951	opncls.c	FUNCTION_25	CALL_3
0x40010f7	      0x488b442408	                mov rax, qword [rsp + 8]	       951	opncls.c	FUNCTION_25	CALL_3
0x40010fc	            0xebb8	                           jmp 0x40010b6	       951	opncls.c	FUNCTION_25	CALL_3
0x40010fe	            0x6690	                                     nop	       951	opncls.c	FUNCTION_25	CALL_3
0x4001100	      0xbf06000000	                              mov edi, 6	       945	opncls.c	FUNCTION_25	IF_1	CALL_1
0x4001105	      0xe800000000	                          call 0x400110a	       945	opncls.c	FUNCTION_25	IF_1	CALL_1
0x400110a	            0x31c0	                            xor eax, eax	       946	opncls.c	FUNCTION_25	IF_1
0x400110c	            0xeba8	                           jmp 0x40010b6	       946	opncls.c	FUNCTION_25	IF_1
separate_debug_file_exists	DO,0:WHILE,1:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,1:CALL,6	65
0x4000320	          0x4885ff	                           test rdi, rdi	      1332	opncls.c	FUNCTION_34	CALL_1
0x4000323	            0x4154	                                push r12	      1325	opncls.c	FUNCTION_34
0x4000325	              0x55	                                push rbp	      1325	opncls.c	FUNCTION_34
0x4000326	          0x4889f5	                            mov rbp, rsi	      1325	opncls.c	FUNCTION_34
0x4000329	              0x53	                                push rbx	      1325	opncls.c	FUNCTION_34
0x400032a	          0x4889fb	                            mov rbx, rdi	      1325	opncls.c	FUNCTION_34
0x400032d	     0xf84a5000000	                            je 0x40003d8	      1332	opncls.c	FUNCTION_34	CALL_1
0x4000333	          0x4885ed	                           test rbp, rbp	      1333	opncls.c	FUNCTION_34	CALL_2
0x4000336	     0xf84b0000000	                            je 0x40003ec	      1333	opncls.c	FUNCTION_34	CALL_2
0x400033c	      0xbe00000000	                              mov esi, 0	      1337	opncls.c	FUNCTION_34	CALL_3
0x4000341	          0x4889df	                            mov rdi, rbx	      1337	opncls.c	FUNCTION_34	CALL_3
0x4000344	        0x4c8b6500	                    mov r12, qword [rbp]	      1335	opncls.c	FUNCTION_34
0x4000348	      0xe800000000	                          call 0x400034d	      1337	opncls.c	FUNCTION_34	CALL_3
0x400034d	          0x4885c0	                           test rax, rax	      1338	opncls.c	FUNCTION_34	IF_1
0x4000350	          0x4889c5	                            mov rbp, rax	      1337	opncls.c	FUNCTION_34	CALL_3
0x4000353	            0x747c	                            je 0x40003d1	      1338	opncls.c	FUNCTION_34	IF_1
0x4000355	            0x31db	                            xor ebx, ebx	      1338	opncls.c	FUNCTION_34	IF_1
0x4000357	    0x660f1f840000	                    nop word [rax + rax]	      1338	opncls.c	FUNCTION_34	IF_1
0x4000360	          0x4889e9	                            mov rcx, rbp	       295	stdio2.h	FUNCTION_60	CALL_9
0x4000363	      0xba00200000	                         mov edx, 0x2000	       295	stdio2.h	FUNCTION_60	CALL_9
0x4000368	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_60	CALL_9
0x400036d	      0xbf00000000	                              mov edi, 0	       295	stdio2.h	FUNCTION_60	CALL_9
0x4000372	      0xe800000000	                          call 0x4000377	       295	stdio2.h	FUNCTION_60	CALL_9
0x4000377	          0x4885c0	                           test rax, rax	      1341	opncls.c	FUNCTION_34	WHILE_1	CALL_4
0x400037a	            0x7440	                            je 0x40003bc	      1341	opncls.c	FUNCTION_34	WHILE_1	CALL_4
0x400037c	    0x480500000000	                              add rax, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x4000382	            0x89da	                            mov edx, ebx	      1142	opncls.c	FUNCTION_30
0x4000384	    0x483d00000000	                              cmp rax, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x400038a	            0xf7d2	                                 not edx	      1142	opncls.c	FUNCTION_30
0x400038c	            0x7628	                           jbe 0x40003b6	      1143	opncls.c	FUNCTION_30	FOR_1
0x400038e	      0xb900000000	                              mov ecx, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x4000393	       0xf1f440000	                   nop dword [rax + rax]	      1143	opncls.c	FUNCTION_30	FOR_1
0x4000398	            0x89d6	                            mov esi, edx	      1144	opncls.c	FUNCTION_30	FOR_1
0x400039a	          0x403231	                     xor sil, byte [rcx]	      1144	opncls.c	FUNCTION_30	FOR_1
0x400039d	        0x4883c101	                              add rcx, 1	      1143	opncls.c	FUNCTION_30	FOR_1
0x40003a1	        0x48c1ea08	                              shr rdx, 8	      1144	opncls.c	FUNCTION_30	FOR_1
0x40003a5	        0x400fb6f6	                          movzx esi, sil	      1144	opncls.c	FUNCTION_30	FOR_1
0x40003a9	    0x483314f50000	                  xor rdx, qword [rsi*8]	      1144	opncls.c	FUNCTION_30	FOR_1
0x40003b1	          0x4839c8	                            cmp rax, rcx	      1143	opncls.c	FUNCTION_30	FOR_1
0x40003b4	            0x75e2	                           jne 0x4000398	      1143	opncls.c	FUNCTION_30	FOR_1
0x40003b6	            0x89d3	                            mov ebx, edx	      1145	opncls.c	FUNCTION_30
0x40003b8	            0xf7d3	                                 not ebx	      1145	opncls.c	FUNCTION_30
0x40003ba	            0xeba4	                           jmp 0x4000360	      1145	opncls.c	FUNCTION_30
0x40003bc	          0x4889ef	                            mov rdi, rbp	      1344	opncls.c	FUNCTION_34	CALL_6
0x40003bf	      0xe800000000	                          call 0x40003c4	      1344	opncls.c	FUNCTION_34	CALL_6
0x40003c4	            0x31c0	                            xor eax, eax	      1346	opncls.c	FUNCTION_34
0x40003c6	          0x4c39e3	                            cmp rbx, r12	      1346	opncls.c	FUNCTION_34
0x40003c9	           0xf94c0	                                 sete al	      1346	opncls.c	FUNCTION_34
0x40003cc	              0x5b	                                 pop rbx	      1347	opncls.c	FUNCTION_34
0x40003cd	              0x5d	                                 pop rbp	      1347	opncls.c	FUNCTION_34
0x40003ce	            0x415c	                                 pop r12	      1347	opncls.c	FUNCTION_34
0x40003d0	              0xc3	                                     ret	      1347	opncls.c	FUNCTION_34
0x40003d1	              0x5b	                                 pop rbx	      1347	opncls.c	FUNCTION_34
0x40003d2	            0x31c0	                            xor eax, eax	      1339	opncls.c	FUNCTION_34	IF_1
0x40003d4	              0x5d	                                 pop rbp	      1347	opncls.c	FUNCTION_34
0x40003d5	            0x415c	                                 pop r12	      1347	opncls.c	FUNCTION_34
0x40003d7	              0xc3	                                     ret	      1347	opncls.c	FUNCTION_34
0x40003d8	      0xbe34050000	                          mov esi, 0x534	      1332	opncls.c	FUNCTION_34	CALL_1
0x40003dd	      0xbf00000000	                              mov edi, 0	      1332	opncls.c	FUNCTION_34	CALL_1
0x40003e2	      0xe800000000	                          call 0x40003e7	      1332	opncls.c	FUNCTION_34	CALL_1
0x40003e7	      0xe947ffffff	                           jmp 0x4000333	      1332	opncls.c	FUNCTION_34	CALL_1
0x40003ec	      0xbe35050000	                          mov esi, 0x535	      1333	opncls.c	FUNCTION_34	CALL_2
0x40003f1	      0xbf00000000	                              mov edi, 0	      1333	opncls.c	FUNCTION_34	CALL_2
0x40003f6	      0xe800000000	                          call 0x40003fb	      1333	opncls.c	FUNCTION_34	CALL_2
0x40003fb	      0xe93cffffff	                           jmp 0x400033c	      1333	opncls.c	FUNCTION_34	CALL_2
bfd_get_debug_link_info_1	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,5:CALL,7	74
0x40001c0	            0x4155	                                push r13	      1176	opncls.c	FUNCTION_31
0x40001c2	            0x4154	                                push r12	      1176	opncls.c	FUNCTION_31
0x40001c4	          0x4989f5	                            mov r13, rsi	      1176	opncls.c	FUNCTION_31
0x40001c7	              0x55	                                push rbp	      1176	opncls.c	FUNCTION_31
0x40001c8	              0x53	                                push rbx	      1176	opncls.c	FUNCTION_31
0x40001c9	          0x4889fb	                            mov rbx, rdi	      1176	opncls.c	FUNCTION_31
0x40001cc	        0x4883ec18	                           sub rsp, 0x18	      1176	opncls.c	FUNCTION_31
0x40001d0	    0x64488b042528	                mov rax, qword fs:[0x28]	      1176	opncls.c	FUNCTION_31
0x40001d9	      0x4889442408	                mov qword [rsp + 8], rax	      1176	opncls.c	FUNCTION_31
0x40001de	            0x31c0	                            xor eax, eax	      1176	opncls.c	FUNCTION_31
0x40001e0	          0x4885ff	                           test rdi, rdi	      1184	opncls.c	FUNCTION_31	CALL_1
0x40001e3	     0xf84c7000000	                            je 0x40002b0	      1184	opncls.c	FUNCTION_31	CALL_1
0x40001e9	          0x4d85ed	                           test r13, r13	      1185	opncls.c	FUNCTION_31	CALL_2
0x40001ec	     0xf84a6000000	                            je 0x4000298	      1185	opncls.c	FUNCTION_31	CALL_2
0x40001f2	      0xbe00000000	                              mov esi, 0	      1187	opncls.c	FUNCTION_31	CALL_3
0x40001f7	          0x4889df	                            mov rdi, rbx	      1187	opncls.c	FUNCTION_31	CALL_3
0x40001fa	      0xe800000000	                          call 0x40001ff	      1187	opncls.c	FUNCTION_31	CALL_3
0x40001ff	          0x4885c0	                           test rax, rax	      1189	opncls.c	FUNCTION_31	IF_1
0x4000202	          0x4889c5	                            mov rbp, rax	      1187	opncls.c	FUNCTION_31	CALL_3
0x4000205	            0x7437	                            je 0x400023e	      1189	opncls.c	FUNCTION_31	IF_1
0x4000207	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      1192	opncls.c	FUNCTION_31
0x400020b	        0x4983fc07	                              cmp r12, 7	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x400020f	            0x762d	                           jbe 0x400023e	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x4000211	          0x4889df	                            mov rdi, rbx	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x4000214	      0xe800000000	                          call 0x4000219	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x4000219	          0x4939c4	                            cmp r12, rax	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x400021c	            0x7320	                           jae 0x400023e	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x400021e	          0x4889e2	                            mov rdx, rsp	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4000221	          0x4889ee	                            mov rsi, rbp	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4000224	          0x4889df	                            mov rdi, rbx	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4000227	      0xe800000000	                          call 0x400022c	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x400022c	            0x85c0	                           test eax, eax	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x400022e	            0x7530	                           jne 0x4000260	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4000230	        0x488b3c24	                    mov rdi, qword [rsp]	      1200	opncls.c	FUNCTION_31	IF_3	IF_4
0x4000234	          0x4885ff	                           test rdi, rdi	      1200	opncls.c	FUNCTION_31	IF_3	IF_4
0x4000237	            0x7405	                            je 0x400023e	      1200	opncls.c	FUNCTION_31	IF_3	IF_4
0x4000239	      0xe800000000	                          call 0x400023e	      1201	opncls.c	FUNCTION_31	IF_3	CALL_6
0x400023e	            0x31c0	                            xor eax, eax	      1202	opncls.c	FUNCTION_31	IF_3
0x4000240	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1215	opncls.c	FUNCTION_31
0x4000245	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1215	opncls.c	FUNCTION_31
0x400024e	            0x7574	                           jne 0x40002c4	      1215	opncls.c	FUNCTION_31
0x4000250	        0x4883c418	                           add rsp, 0x18	      1215	opncls.c	FUNCTION_31
0x4000254	              0x5b	                                 pop rbx	      1215	opncls.c	FUNCTION_31
0x4000255	              0x5d	                                 pop rbp	      1215	opncls.c	FUNCTION_31
0x4000256	            0x415c	                                 pop r12	      1215	opncls.c	FUNCTION_31
0x4000258	            0x415d	                                 pop r13	      1215	opncls.c	FUNCTION_31
0x400025a	              0xc3	                                     ret	      1215	opncls.c	FUNCTION_31
0x400025b	       0xf1f440000	                   nop dword [rax + rax]	      1215	opncls.c	FUNCTION_31
0x4000260	        0x488b2c24	                    mov rbp, qword [rsp]	      1206	opncls.c	FUNCTION_31
0x4000264	          0x4c89e6	                            mov rsi, r12	      1208	opncls.c	FUNCTION_31	CALL_7
0x4000267	          0x4889ef	                            mov rdi, rbp	      1208	opncls.c	FUNCTION_31	CALL_7
0x400026a	      0xe800000000	                          call 0x400026f	      1208	opncls.c	FUNCTION_31	CALL_7
0x400026f	          0x83c004	                              add eax, 4	      1209	opncls.c	FUNCTION_31
0x4000272	          0x83e0fc	                     and eax, 0xfffffffc	      1209	opncls.c	FUNCTION_31
0x4000275	          0x8d5004	                      lea edx, [rax + 4]	      1210	opncls.c	FUNCTION_31	IF_5
0x4000278	          0x4939d4	                            cmp r12, rdx	      1210	opncls.c	FUNCTION_31	IF_5
0x400027b	            0x72c1	                            jb 0x400023e	      1210	opncls.c	FUNCTION_31	IF_5
0x400027d	      0x488d7c0500	                    lea rdi, [rbp + rax]	      1213	opncls.c	FUNCTION_31
0x4000282	        0x488b4308	                mov rax, qword [rbx + 8]	      1213	opncls.c	FUNCTION_31
0x4000286	          0xff5038	                 call qword [rax + 0x38]	      1213	opncls.c	FUNCTION_31
0x4000289	        0x49894500	                    mov qword [r13], rax	      1213	opncls.c	FUNCTION_31
0x400028d	          0x4889e8	                            mov rax, rbp	      1214	opncls.c	FUNCTION_31
0x4000290	            0xebae	                           jmp 0x4000240	      1214	opncls.c	FUNCTION_31
0x4000292	    0x660f1f440000	                    nop word [rax + rax]	      1214	opncls.c	FUNCTION_31
0x4000298	      0xbea1040000	                          mov esi, 0x4a1	      1185	opncls.c	FUNCTION_31	CALL_2
0x400029d	      0xbf00000000	                              mov edi, 0	      1185	opncls.c	FUNCTION_31	CALL_2
0x40002a2	      0xe800000000	                          call 0x40002a7	      1185	opncls.c	FUNCTION_31	CALL_2
0x40002a7	      0xe946ffffff	                           jmp 0x40001f2	      1185	opncls.c	FUNCTION_31	CALL_2
0x40002ac	         0xf1f4000	                         nop dword [rax]	      1185	opncls.c	FUNCTION_31	CALL_2
0x40002b0	      0xbea0040000	                          mov esi, 0x4a0	      1184	opncls.c	FUNCTION_31	CALL_1
0x40002b5	      0xbf00000000	                              mov edi, 0	      1184	opncls.c	FUNCTION_31	CALL_1
0x40002ba	      0xe800000000	                          call 0x40002bf	      1184	opncls.c	FUNCTION_31	CALL_1
0x40002bf	      0xe925ffffff	                           jmp 0x40001e9	      1184	opncls.c	FUNCTION_31	CALL_1
0x40002c4	      0xe800000000	                          call 0x40002c9	      1215	opncls.c	FUNCTION_31
bfd_create	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,2:CALL,3	28
0x4000e90	            0x4154	                                push r12	       796	opncls.c	FUNCTION_22
0x4000e92	              0x55	                                push rbp	       796	opncls.c	FUNCTION_22
0x4000e93	          0x4989fc	                            mov r12, rdi	       796	opncls.c	FUNCTION_22
0x4000e96	              0x53	                                push rbx	       796	opncls.c	FUNCTION_22
0x4000e97	          0x4889f5	                            mov rbp, rsi	       796	opncls.c	FUNCTION_22
0x4000e9a	      0xe800000000	                          call 0x4000e9f	       799	opncls.c	FUNCTION_22	CALL_1
0x4000e9f	          0x4885c0	                           test rax, rax	       800	opncls.c	FUNCTION_22	IF_1
0x4000ea2	            0x743c	                            je 0x4000ee0	       800	opncls.c	FUNCTION_22	IF_1
0x4000ea4	          0x4c89e7	                            mov rdi, r12	       804	opncls.c	FUNCTION_22	CALL_2
0x4000ea7	          0x4889c3	                            mov rbx, rax	       804	opncls.c	FUNCTION_22	CALL_2
0x4000eaa	      0xe800000000	                          call 0x4000eaf	       804	opncls.c	FUNCTION_22	CALL_2
0x4000eaf	          0x4885ed	                           test rbp, rbp	       805	opncls.c	FUNCTION_22	IF_2
0x4000eb2	          0x488903	                    mov qword [rbx], rax	       804	opncls.c	FUNCTION_22	CALL_2
0x4000eb5	            0x7408	                            je 0x4000ebf	       805	opncls.c	FUNCTION_22	IF_2
0x4000eb7	        0x488b4508	                mov rax, qword [rbp + 8]	       806	opncls.c	FUNCTION_22	IF_2
0x4000ebb	        0x48894308	                mov qword [rbx + 8], rax	       806	opncls.c	FUNCTION_22	IF_2
0x4000ebf	        0x806344e7	             and byte [rbx + 0x44], 0xe7	       807	opncls.c	FUNCTION_22
0x4000ec3	      0xbe01000000	                              mov esi, 1	       808	opncls.c	FUNCTION_22	CALL_3
0x4000ec8	          0x4889df	                            mov rdi, rbx	       808	opncls.c	FUNCTION_22	CALL_3
0x4000ecb	      0xe800000000	                          call 0x4000ed0	       808	opncls.c	FUNCTION_22	CALL_3
0x4000ed0	          0x4889d8	                            mov rax, rbx	       810	opncls.c	FUNCTION_22
0x4000ed3	              0x5b	                                 pop rbx	       811	opncls.c	FUNCTION_22
0x4000ed4	              0x5d	                                 pop rbp	       811	opncls.c	FUNCTION_22
0x4000ed5	            0x415c	                                 pop r12	       811	opncls.c	FUNCTION_22
0x4000ed7	              0xc3	                                     ret	       811	opncls.c	FUNCTION_22
0x4000ed8	     0xf1f84000000	                   nop dword [rax + rax]	       811	opncls.c	FUNCTION_22
0x4000ee0	            0x31c0	                            xor eax, eax	       801	opncls.c	FUNCTION_22	IF_1
0x4000ee2	            0xebef	                           jmp 0x4000ed3	       801	opncls.c	FUNCTION_22	IF_1
_bfd_new_bfd	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,1:IF,4:CALL,6	51
0x4000870	              0x53	                                push rbx	        59	opncls.c	FUNCTION_1
0x4000871	      0xbf18010000	                          mov edi, 0x118	        62	opncls.c	FUNCTION_1	CALL_1
0x4000876	      0xe800000000	                          call 0x400087b	        62	opncls.c	FUNCTION_1	CALL_1
0x400087b	          0x4885c0	                           test rax, rax	        63	opncls.c	FUNCTION_1	IF_1
0x400087e	     0xf8494000000	                            je 0x4000918	        63	opncls.c	FUNCTION_1	IF_1
0x4000884	          0x4889c3	                            mov rbx, rax	        63	opncls.c	FUNCTION_1	IF_1
0x4000887	    0x8b0500000000	            mov eax, dword [0x0400088d] 	        66	opncls.c	FUNCTION_1	IF_2
0x400088d	            0x85c0	                           test eax, eax	        66	opncls.c	FUNCTION_1	IF_2
0x400088f	            0x7557	                           jne 0x40008e8	        66	opncls.c	FUNCTION_1	IF_2
0x4000891	    0x8b0500000000	            mov eax, dword [0x04000897] 	        72	opncls.c	FUNCTION_1	ELSE_1
0x4000897	          0x8d5001	                      lea edx, [rax + 1]	        72	opncls.c	FUNCTION_1	ELSE_1
0x400089a	          0x894340	             mov dword [rbx + 0x40], eax	        72	opncls.c	FUNCTION_1	ELSE_1
0x400089d	    0x891500000000	            mov dword [0x040008a3], edx 	        72	opncls.c	FUNCTION_1	ELSE_1
0x40008a3	      0xe800000000	                          call 0x40008a8	        74	opncls.c	FUNCTION_1	CALL_2
0x40008a8	          0x4885c0	                           test rax, rax	        75	opncls.c	FUNCTION_1	IF_3
0x40008ab	    0x488983080100	            mov qword [rbx + 0x108], rax	        74	opncls.c	FUNCTION_1	CALL_2
0x40008b2	            0x746c	                            je 0x4000920	        75	opncls.c	FUNCTION_1	IF_3
0x40008b4	        0x488d7b68	                   lea rdi, [rbx + 0x68]	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40008b8	    0x48c783c00000	               mov qword [rbx + 0xc0], 0	        82	opncls.c	FUNCTION_1
0x40008c3	      0xb90d000000	                            mov ecx, 0xd	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40008c8	      0xba30010000	                          mov edx, 0x130	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40008cd	      0xbe00000000	                              mov esi, 0	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40008d2	      0xe800000000	                          call 0x40008d7	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40008d7	            0x85c0	                           test eax, eax	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40008d9	          0x4889df	                            mov rdi, rbx	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40008dc	            0x742a	                            je 0x4000908	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40008de	          0x4889f8	                            mov rax, rdi	        92	opncls.c	FUNCTION_1
0x40008e1	              0x5b	                                 pop rbx	        92	opncls.c	FUNCTION_1
0x40008e2	              0xc3	                                     ret	        92	opncls.c	FUNCTION_1
0x40008e3	       0xf1f440000	                   nop dword [rax + rax]	        92	opncls.c	FUNCTION_1
0x40008e8	    0x8b0d00000000	            mov ecx, dword [0x040008ee] 	        68	opncls.c	FUNCTION_1	IF_2
0x40008ee	          0x83e801	                              sub eax, 1	        69	opncls.c	FUNCTION_1	IF_2
0x40008f1	    0x890500000000	            mov dword [0x040008f7], eax 	        69	opncls.c	FUNCTION_1	IF_2
0x40008f7	          0x8d51ff	                      lea edx, [rcx - 1]	        68	opncls.c	FUNCTION_1	IF_2
0x40008fa	    0x891500000000	            mov dword [0x04000900], edx 	        68	opncls.c	FUNCTION_1	IF_2
0x4000900	          0x895340	             mov dword [rbx + 0x40], edx	        68	opncls.c	FUNCTION_1	IF_2
0x4000903	            0xeb9e	                           jmp 0x40008a3	        68	opncls.c	FUNCTION_1	IF_2
0x4000905	           0xf1f00	                         nop dword [rax]	        68	opncls.c	FUNCTION_1	IF_2
0x4000908	      0xe800000000	                          call 0x400090d	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x400090d	            0x31ff	                            xor edi, edi	        88	opncls.c	FUNCTION_1	IF_4
0x400090f	            0xebcd	                           jmp 0x40008de	        88	opncls.c	FUNCTION_1	IF_4
0x4000911	     0xf1f80000000	                         nop dword [rax]	        88	opncls.c	FUNCTION_1	IF_4
0x4000918	            0x31ff	                            xor edi, edi	        64	opncls.c	FUNCTION_1	IF_1
0x400091a	            0xebc2	                           jmp 0x40008de	        64	opncls.c	FUNCTION_1	IF_1
0x400091c	         0xf1f4000	                         nop dword [rax]	        64	opncls.c	FUNCTION_1	IF_1
0x4000920	      0xbf06000000	                              mov edi, 6	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x4000925	      0xe800000000	                          call 0x400092a	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x400092a	          0x4889df	                            mov rdi, rbx	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x400092d	      0xe800000000	                          call 0x4000932	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x4000932	            0x31ff	                            xor edi, edi	        79	opncls.c	FUNCTION_1	IF_3
0x4000934	            0xeba8	                           jmp 0x40008de	        79	opncls.c	FUNCTION_1	IF_3
bfd_make_writable	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,2:CALL,2	32
0x4000ef0	              0x53	                                push rbx	       832	opncls.c	FUNCTION_23
0x4000ef1	        0xf6474418	           test byte [rdi + 0x44], 0x18 	       835	opncls.c	FUNCTION_23	IF_1
0x4000ef5	            0x7559	                           jne 0x4000f50	       835	opncls.c	FUNCTION_23	IF_1
0x4000ef7	          0x4889fb	                            mov rbx, rdi	       835	opncls.c	FUNCTION_23	IF_1
0x4000efa	      0xbf10000000	                           mov edi, 0x10	       841	opncls.c	FUNCTION_23	CALL_2
0x4000eff	      0xe800000000	                          call 0x4000f04	       841	opncls.c	FUNCTION_23	CALL_2
0x4000f04	          0x4885c0	                           test rax, rax	       842	opncls.c	FUNCTION_23	IF_2
0x4000f07	            0x7457	                            je 0x4000f60	       842	opncls.c	FUNCTION_23	IF_2
0x4000f09	        0x48894310	             mov qword [rbx + 0x10], rax	       844	opncls.c	FUNCTION_23
0x4000f0d	    0x48c700000000	                      mov qword [rax], 0	       846	opncls.c	FUNCTION_23
0x4000f14	    0x48c740080000	                  mov qword [rax + 8], 0	       847	opncls.c	FUNCTION_23
0x4000f1c	    0x814b44000001	          or dword [rbx + 0x44], 0x10000	       849	opncls.c	FUNCTION_23
0x4000f23	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       852	opncls.c	FUNCTION_23
0x4000f27	    0x48c743180000	               mov qword [rbx + 0x18], 0	       850	opncls.c	FUNCTION_23
0x4000f2f	    0x48c743580000	               mov qword [rbx + 0x58], 0	       851	opncls.c	FUNCTION_23
0x4000f37	    0x48c743300000	               mov qword [rbx + 0x30], 0	       853	opncls.c	FUNCTION_23
0x4000f3f	          0x83e0e7	                     and eax, 0xffffffe7	       852	opncls.c	FUNCTION_23
0x4000f42	          0x83c810	                            or eax, 0x10	       852	opncls.c	FUNCTION_23
0x4000f45	          0x884344	               mov byte [rbx + 0x44], al	       852	opncls.c	FUNCTION_23
0x4000f48	      0xb801000000	                              mov eax, 1	       855	opncls.c	FUNCTION_23
0x4000f4d	              0x5b	                                 pop rbx	       856	opncls.c	FUNCTION_23
0x4000f4e	              0xc3	                                     ret	       856	opncls.c	FUNCTION_23
0x4000f4f	              0x90	                                     nop	       856	opncls.c	FUNCTION_23
0x4000f50	      0xbf05000000	                              mov edi, 5	       837	opncls.c	FUNCTION_23	IF_1	CALL_1
0x4000f55	      0xe800000000	                          call 0x4000f5a	       837	opncls.c	FUNCTION_23	IF_1	CALL_1
0x4000f5a	            0x31c0	                            xor eax, eax	       838	opncls.c	FUNCTION_23	IF_1
0x4000f5c	              0x5b	                                 pop rbx	       856	opncls.c	FUNCTION_23
0x4000f5d	              0xc3	                                     ret	       856	opncls.c	FUNCTION_23
0x4000f5e	            0x6690	                                     nop	       856	opncls.c	FUNCTION_23
0x4000f60	            0x31c0	                            xor eax, eax	       843	opncls.c	FUNCTION_23	IF_2
0x4000f62	              0x5b	                                 pop rbx	       856	opncls.c	FUNCTION_23
0x4000f63	              0xc3	                                     ret	       856	opncls.c	FUNCTION_23
opncls_bmmap	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,0:CALL,0	2
0x4000100	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       562	opncls.c	FUNCTION_16
0x4000107	              0xc3	                                     ret	       562	opncls.c	FUNCTION_16
bfd_follow_build_id_debuglink	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,0:CALL,1	15
0x4001c10	        0x4883ec18	                           sub rsp, 0x18	      2055	opncls.c	FUNCTION_45
0x4001c14	            0x31d2	                            xor edx, edx	      2058	opncls.c	FUNCTION_45	CALL_1
0x4001c16	    0x41b800000000	                              mov r8d, 0	      2058	opncls.c	FUNCTION_45	CALL_1
0x4001c1c	          0x4989e1	                             mov r9, rsp	      2058	opncls.c	FUNCTION_45	CALL_1
0x4001c1f	      0xb900000000	                              mov ecx, 0	      2058	opncls.c	FUNCTION_45	CALL_1
0x4001c24	    0x64488b042528	                mov rax, qword fs:[0x28]	      2055	opncls.c	FUNCTION_45
0x4001c2d	      0x4889442408	                mov qword [rsp + 8], rax	      2055	opncls.c	FUNCTION_45
0x4001c32	            0x31c0	                            xor eax, eax	      2055	opncls.c	FUNCTION_45
0x4001c34	      0xe8c7e7ffff	       call sym.find_separate_debug_file	      2058	opncls.c	FUNCTION_45	CALL_1
0x4001c39	      0x488b542408	                mov rdx, qword [rsp + 8]	      2061	opncls.c	FUNCTION_45
0x4001c3e	    0x644833142528	                xor rdx, qword fs:[0x28]	      2061	opncls.c	FUNCTION_45
0x4001c47	            0x7505	                           jne 0x4001c4e	      2061	opncls.c	FUNCTION_45
0x4001c49	        0x4883c418	                           add rsp, 0x18	      2061	opncls.c	FUNCTION_45
0x4001c4d	              0xc3	                                     ret	      2061	opncls.c	FUNCTION_45
0x4001c4e	      0xe800000000	                  call section_end..data	      2061	opncls.c	FUNCTION_45
bfd_get_alt_debug_link_info	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,5:CALL,10	90
0x40017b0	            0x4157	                                push r15	      1266	opncls.c	FUNCTION_33
0x40017b2	            0x4156	                                push r14	      1266	opncls.c	FUNCTION_33
0x40017b4	          0x4989d6	                            mov r14, rdx	      1266	opncls.c	FUNCTION_33
0x40017b7	            0x4155	                                push r13	      1266	opncls.c	FUNCTION_33
0x40017b9	            0x4154	                                push r12	      1266	opncls.c	FUNCTION_33
0x40017bb	          0x4989f5	                            mov r13, rsi	      1266	opncls.c	FUNCTION_33
0x40017be	              0x55	                                push rbp	      1266	opncls.c	FUNCTION_33
0x40017bf	              0x53	                                push rbx	      1266	opncls.c	FUNCTION_33
0x40017c0	          0x4889fb	                            mov rbx, rdi	      1266	opncls.c	FUNCTION_33
0x40017c3	        0x4883ec18	                           sub rsp, 0x18	      1266	opncls.c	FUNCTION_33
0x40017c7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1266	opncls.c	FUNCTION_33
0x40017d0	      0x4889442408	                mov qword [rsp + 8], rax	      1266	opncls.c	FUNCTION_33
0x40017d5	            0x31c0	                            xor eax, eax	      1266	opncls.c	FUNCTION_33
0x40017d7	          0x4885ff	                           test rdi, rdi	      1273	opncls.c	FUNCTION_33	CALL_1
0x40017da	     0xf84e8000000	                            je 0x40018c8	      1273	opncls.c	FUNCTION_33	CALL_1
0x40017e0	          0x4d85ed	                           test r13, r13	      1274	opncls.c	FUNCTION_33	CALL_2
0x40017e3	     0xf84f7000000	                            je 0x40018e0	      1274	opncls.c	FUNCTION_33	CALL_2
0x40017e9	          0x4d85f6	                           test r14, r14	      1275	opncls.c	FUNCTION_33	CALL_3
0x40017ec	     0xf84be000000	                            je 0x40018b0	      1275	opncls.c	FUNCTION_33	CALL_3
0x40017f2	      0xbe00000000	                              mov esi, 0	      1277	opncls.c	FUNCTION_33	CALL_4
0x40017f7	          0x4889df	                            mov rdi, rbx	      1277	opncls.c	FUNCTION_33	CALL_4
0x40017fa	      0xe800000000	                          call 0x40017ff	      1277	opncls.c	FUNCTION_33	CALL_4
0x40017ff	          0x4885c0	                           test rax, rax	      1279	opncls.c	FUNCTION_33	IF_1
0x4001802	          0x4989c4	                            mov r12, rax	      1277	opncls.c	FUNCTION_33	CALL_4
0x4001805	            0x7437	                            je 0x400183e	      1279	opncls.c	FUNCTION_33	IF_1
0x4001807	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      1282	opncls.c	FUNCTION_33
0x400180b	        0x4883fd07	                              cmp rbp, 7	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x400180f	            0x762d	                           jbe 0x400183e	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x4001811	          0x4889df	                            mov rdi, rbx	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x4001814	      0xe800000000	                          call 0x4001819	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x4001819	          0x4839c5	                            cmp rbp, rax	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x400181c	            0x7320	                           jae 0x400183e	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x400181e	          0x4889e2	                            mov rdx, rsp	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x4001821	          0x4c89e6	                            mov rsi, r12	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x4001824	          0x4889df	                            mov rdi, rbx	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x4001827	      0xe800000000	                          call 0x400182c	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x400182c	            0x85c0	                           test eax, eax	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x400182e	            0x7538	                           jne 0x4001868	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x4001830	        0x488b3c24	                    mov rdi, qword [rsp]	      1288	opncls.c	FUNCTION_33	IF_3	IF_4
0x4001834	          0x4885ff	                           test rdi, rdi	      1288	opncls.c	FUNCTION_33	IF_3	IF_4
0x4001837	            0x7405	                            je 0x400183e	      1288	opncls.c	FUNCTION_33	IF_3	IF_4
0x4001839	      0xe800000000	                          call 0x400183e	      1289	opncls.c	FUNCTION_33	IF_3	CALL_7
0x400183e	            0x31c0	                            xor eax, eax	      1290	opncls.c	FUNCTION_33	IF_3
0x4001840	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1304	opncls.c	FUNCTION_33
0x4001845	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1304	opncls.c	FUNCTION_33
0x400184e	     0xf85a0000000	                           jne 0x40018f4	      1304	opncls.c	FUNCTION_33
0x4001854	        0x4883c418	                           add rsp, 0x18	      1304	opncls.c	FUNCTION_33
0x4001858	              0x5b	                                 pop rbx	      1304	opncls.c	FUNCTION_33
0x4001859	              0x5d	                                 pop rbp	      1304	opncls.c	FUNCTION_33
0x400185a	            0x415c	                                 pop r12	      1304	opncls.c	FUNCTION_33
0x400185c	            0x415d	                                 pop r13	      1304	opncls.c	FUNCTION_33
0x400185e	            0x415e	                                 pop r14	      1304	opncls.c	FUNCTION_33
0x4001860	            0x415f	                                 pop r15	      1304	opncls.c	FUNCTION_33
0x4001862	              0xc3	                                     ret	      1304	opncls.c	FUNCTION_33
0x4001863	       0xf1f440000	                   nop dword [rax + rax]	      1304	opncls.c	FUNCTION_33
0x4001868	        0x488b1c24	                    mov rbx, qword [rsp]	      1294	opncls.c	FUNCTION_33
0x400186c	          0x4889ee	                            mov rsi, rbp	      1295	opncls.c	FUNCTION_33	CALL_8
0x400186f	          0x4889df	                            mov rdi, rbx	      1295	opncls.c	FUNCTION_33	CALL_8
0x4001872	      0xe800000000	                          call 0x4001877	      1295	opncls.c	FUNCTION_33	CALL_8
0x4001877	        0x448d7801	                     lea r15d, [rax + 1]	      1296	opncls.c	FUNCTION_33	IF_5
0x400187b	      0x4d3b7c2438	            cmp r15, qword [r12 + 0x38] 	      1296	opncls.c	FUNCTION_33	IF_5
0x4001880	            0x73bc	                           jae 0x400183e	      1296	opncls.c	FUNCTION_33	IF_5
0x4001882	          0x4889ef	                            mov rdi, rbp	      1299	opncls.c	FUNCTION_33
0x4001885	          0x4c29ff	                            sub rdi, r15	      1299	opncls.c	FUNCTION_33
0x4001888	        0x49897d00	                    mov qword [r13], rdi	      1299	opncls.c	FUNCTION_33
0x400188c	      0xe800000000	                          call 0x4001891	      1300	opncls.c	FUNCTION_33	CALL_9
0x4001891	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_63	CALL_3
0x4001894	        0x48033424	                    add rsi, qword [rsp]	        53	string3.h	FUNCTION_63	CALL_3
0x4001898	        0x498b5500	                    mov rdx, qword [r13]	        53	string3.h	FUNCTION_63	CALL_3
0x400189c	          0x498906	                    mov qword [r14], rax	      1300	opncls.c	FUNCTION_33	CALL_9
0x400189f	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_63	CALL_3
0x40018a2	      0xe800000000	                          call 0x40018a7	        53	string3.h	FUNCTION_63	CALL_3
0x40018a7	          0x4889d8	                            mov rax, rbx	      1303	opncls.c	FUNCTION_33
0x40018aa	            0xeb94	                           jmp 0x4001840	      1303	opncls.c	FUNCTION_33
0x40018ac	         0xf1f4000	                         nop dword [rax]	      1303	opncls.c	FUNCTION_33
0x40018b0	      0xbefb040000	                          mov esi, 0x4fb	      1275	opncls.c	FUNCTION_33	CALL_3
0x40018b5	      0xbf00000000	                              mov edi, 0	      1275	opncls.c	FUNCTION_33	CALL_3
0x40018ba	      0xe800000000	                          call 0x40018bf	      1275	opncls.c	FUNCTION_33	CALL_3
0x40018bf	      0xe92effffff	                           jmp 0x40017f2	      1275	opncls.c	FUNCTION_33	CALL_3
0x40018c4	         0xf1f4000	                         nop dword [rax]	      1275	opncls.c	FUNCTION_33	CALL_3
0x40018c8	      0xbef9040000	                          mov esi, 0x4f9	      1273	opncls.c	FUNCTION_33	CALL_1
0x40018cd	      0xbf00000000	                              mov edi, 0	      1273	opncls.c	FUNCTION_33	CALL_1
0x40018d2	      0xe800000000	                          call 0x40018d7	      1273	opncls.c	FUNCTION_33	CALL_1
0x40018d7	      0xe904ffffff	                           jmp 0x40017e0	      1273	opncls.c	FUNCTION_33	CALL_1
0x40018dc	         0xf1f4000	                         nop dword [rax]	      1273	opncls.c	FUNCTION_33	CALL_1
0x40018e0	      0xbefa040000	                          mov esi, 0x4fa	      1274	opncls.c	FUNCTION_33	CALL_2
0x40018e5	      0xbf00000000	                              mov edi, 0	      1274	opncls.c	FUNCTION_33	CALL_2
0x40018ea	      0xe800000000	                          call 0x40018ef	      1274	opncls.c	FUNCTION_33	CALL_2
0x40018ef	      0xe9f5feffff	                           jmp 0x40017e9	      1274	opncls.c	FUNCTION_33	CALL_2
0x40018f4	      0xe800000000	                          call 0x40018f9	      1304	opncls.c	FUNCTION_33
bfd_follow_gnu_debuglink	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,0:CALL,1	15
0x4001960	        0x4883ec18	                           sub rsp, 0x18	      1591	opncls.c	FUNCTION_37
0x4001964	      0xba01000000	                              mov edx, 1	      1594	opncls.c	FUNCTION_37	CALL_1
0x4001969	    0x41b800000000	                              mov r8d, 0	      1594	opncls.c	FUNCTION_37	CALL_1
0x400196f	          0x4989e1	                             mov r9, rsp	      1594	opncls.c	FUNCTION_37	CALL_1
0x4001972	      0xb900000000	                              mov ecx, 0	      1594	opncls.c	FUNCTION_37	CALL_1
0x4001977	    0x64488b042528	                mov rax, qword fs:[0x28]	      1591	opncls.c	FUNCTION_37
0x4001980	      0x4889442408	                mov qword [rsp + 8], rax	      1591	opncls.c	FUNCTION_37
0x4001985	            0x31c0	                            xor eax, eax	      1591	opncls.c	FUNCTION_37
0x4001987	      0xe874eaffff	       call sym.find_separate_debug_file	      1594	opncls.c	FUNCTION_37	CALL_1
0x400198c	      0x488b542408	                mov rdx, qword [rsp + 8]	      1597	opncls.c	FUNCTION_37
0x4001991	    0x644833142528	                xor rdx, qword fs:[0x28]	      1597	opncls.c	FUNCTION_37
0x400199a	            0x7505	                           jne 0x40019a1	      1597	opncls.c	FUNCTION_37
0x400199c	        0x4883c418	                           add rsp, 0x18	      1597	opncls.c	FUNCTION_37
0x40019a0	              0xc3	                                     ret	      1597	opncls.c	FUNCTION_37
0x40019a1	      0xe800000000	                          call 0x40019a6	      1597	opncls.c	FUNCTION_37
opncls_bstat	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,1:CALL,1	22
0x4000110	        0x4c8b4f10	              mov r9, qword [rdi + 0x10]	       542	opncls.c	FUNCTION_15
0x4000114	          0x4989f8	                             mov r8, rdi	       541	opncls.c	FUNCTION_15
0x4000117	        0x488d7e08	                      lea rdi, [rsi + 8]	        90	string3.h	FUNCTION_66	CALL_6
0x400011b	          0x4889f1	                            mov rcx, rsi	        90	string3.h	FUNCTION_66	CALL_6
0x400011e	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_66	CALL_6
0x4000120	    0x48c706000000	                      mov qword [rsi], 0	        90	string3.h	FUNCTION_66	CALL_6
0x4000127	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_66	CALL_6
0x400012b	    0x48c786880000	               mov qword [rsi + 0x88], 0	        90	string3.h	FUNCTION_66	CALL_6
0x4000136	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_66	CALL_6
0x4000139	    0x81c190000000	                           add ecx, 0x90	        90	string3.h	FUNCTION_66	CALL_6
0x400013f	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_66	CALL_6
0x4000142	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_66	CALL_6
0x4000145	        0x498b4118	              mov rax, qword [r9 + 0x18]	       545	opncls.c	FUNCTION_15	IF_1
0x4000149	          0x4885c0	                           test rax, rax	       545	opncls.c	FUNCTION_15	IF_1
0x400014c	            0x7412	                            je 0x4000160	       545	opncls.c	FUNCTION_15	IF_1
0x400014e	          0x4889f2	                            mov rdx, rsi	       548	opncls.c	FUNCTION_15
0x4000151	          0x4c89c7	                             mov rdi, r8	       548	opncls.c	FUNCTION_15
0x4000154	          0x498b31	                     mov rsi, qword [r9]	       548	opncls.c	FUNCTION_15
0x4000157	            0xffe0	                                 jmp rax	       548	opncls.c	FUNCTION_15
0x4000159	     0xf1f80000000	                         nop dword [rax]	       548	opncls.c	FUNCTION_15
0x4000160	            0x31c0	                            xor eax, eax	       549	opncls.c	FUNCTION_15
0x4000162	              0xc3	                                     ret	       549	opncls.c	FUNCTION_15
_bfd_delete_bfd	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,2:CALL,5	17
0x4000170	              0x53	                                push rbx	       122	opncls.c	FUNCTION_3
0x4000171	    0x4883bf080100	              cmp qword [rdi + 0x108], 0	       123	opncls.c	FUNCTION_3	IF_1
0x4000179	          0x4889fb	                            mov rbx, rdi	       122	opncls.c	FUNCTION_3
0x400017c	            0x7415	                            je 0x4000193	       123	opncls.c	FUNCTION_3	IF_1
0x400017e	        0x488d7f68	                   lea rdi, [rdi + 0x68]	       125	opncls.c	FUNCTION_3	IF_1	CALL_1
0x4000182	      0xe800000000	                          call 0x4000187	       125	opncls.c	FUNCTION_3	IF_1	CALL_1
0x4000187	    0x488bbb080100	           mov rdi, qword [rbx + 0x108] 	       126	opncls.c	FUNCTION_3	IF_1	CALL_2
0x400018e	      0xe800000000	                          call 0x4000193	       126	opncls.c	FUNCTION_3	IF_1	CALL_2
0x4000193	          0x488b3b	                    mov rdi, qword [rbx]	       129	opncls.c	FUNCTION_3	IF_2
0x4000196	          0x4885ff	                           test rdi, rdi	       129	opncls.c	FUNCTION_3	IF_2
0x4000199	            0x7405	                            je 0x40001a0	       129	opncls.c	FUNCTION_3	IF_2
0x400019b	      0xe800000000	                          call 0x40001a0	       130	opncls.c	FUNCTION_3	CALL_3
0x40001a0	    0x488bbbc80000	            mov rdi, qword [rbx + 0xc8] 	       131	opncls.c	FUNCTION_3	CALL_4
0x40001a7	      0xe800000000	                          call 0x40001ac	       131	opncls.c	FUNCTION_3	CALL_4
0x40001ac	          0x4889df	                            mov rdi, rbx	       132	opncls.c	FUNCTION_3	CALL_5
0x40001af	              0x5b	                                 pop rbx	       133	opncls.c	FUNCTION_3
0x40001b0	      0xe900000000	                           jmp 0x40001b5	       132	opncls.c	FUNCTION_3	CALL_5
bfd_zalloc2	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,2:CALL,3	38
0x40016f0	              0x55	                                push rbp	      1018	opncls.c	FUNCTION_28
0x40016f1	          0x4889d1	                            mov rcx, rdx	      1018	opncls.c	FUNCTION_28
0x40016f4	              0x53	                                push rbx	      1018	opncls.c	FUNCTION_28
0x40016f5	          0x4889f2	                            mov rdx, rsi	      1022	opncls.c	FUNCTION_28	IF_1
0x40016f8	      0xb8ffffffff	                     mov eax, 0xffffffff	      1022	opncls.c	FUNCTION_28	IF_1
0x40016fd	          0x4809ca	                             or rdx, rcx	      1022	opncls.c	FUNCTION_28	IF_1
0x4001700	        0x4883ec08	                              sub rsp, 8	      1018	opncls.c	FUNCTION_28
0x4001704	          0x4839c2	                            cmp rdx, rax	      1022	opncls.c	FUNCTION_28	IF_1
0x4001707	            0x7616	                           jbe 0x400171f	      1022	opncls.c	FUNCTION_28	IF_1
0x4001709	          0x4885c9	                           test rcx, rcx	      1022	opncls.c	FUNCTION_28	IF_1
0x400170c	            0x7411	                            je 0x400171f	      1022	opncls.c	FUNCTION_28	IF_1
0x400170e	            0x31d2	                            xor edx, edx	      1023	opncls.c	FUNCTION_28	IF_1
0x4001710	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      1023	opncls.c	FUNCTION_28	IF_1
0x4001717	          0x48f7f1	                                 div rcx	      1023	opncls.c	FUNCTION_28	IF_1
0x400171a	          0x4839c6	                            cmp rsi, rax	      1023	opncls.c	FUNCTION_28	IF_1
0x400171d	            0x7731	                            ja 0x4001750	      1023	opncls.c	FUNCTION_28	IF_1
0x400171f	          0x4889f3	                            mov rbx, rsi	      1029	opncls.c	FUNCTION_28
0x4001722	        0x480fafd9	                           imul rbx, rcx	      1029	opncls.c	FUNCTION_28
0x4001726	          0x4889de	                            mov rsi, rbx	      1031	opncls.c	FUNCTION_28	CALL_2
0x4001729	      0xe800000000	                          call 0x400172e	      1031	opncls.c	FUNCTION_28	CALL_2
0x400172e	          0x4889c5	                            mov rbp, rax	      1031	opncls.c	FUNCTION_28	CALL_2
0x4001731	            0x31c0	                            xor eax, eax	      1031	opncls.c	FUNCTION_28	CALL_2
0x4001733	          0x4885ed	                           test rbp, rbp	      1032	opncls.c	FUNCTION_28	IF_2
0x4001736	            0x7410	                            je 0x4001748	      1032	opncls.c	FUNCTION_28	IF_2
0x4001738	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_66	CALL_6
0x400173b	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_66	CALL_6
0x400173d	          0x4889ef	                            mov rdi, rbp	        90	string3.h	FUNCTION_66	CALL_6
0x4001740	      0xe800000000	                          call 0x4001745	        90	string3.h	FUNCTION_66	CALL_6
0x4001745	          0x4889e8	                            mov rax, rbp	        90	string3.h	FUNCTION_66	CALL_6
0x4001748	        0x4883c408	                              add rsp, 8	      1035	opncls.c	FUNCTION_28
0x400174c	              0x5b	                                 pop rbx	      1035	opncls.c	FUNCTION_28
0x400174d	              0x5d	                                 pop rbp	      1035	opncls.c	FUNCTION_28
0x400174e	              0xc3	                                     ret	      1035	opncls.c	FUNCTION_28
0x400174f	              0x90	                                     nop	      1035	opncls.c	FUNCTION_28
0x4001750	      0xbf06000000	                              mov edi, 6	      1025	opncls.c	FUNCTION_28	IF_1	CALL_1
0x4001755	      0xe800000000	                          call 0x400175a	      1025	opncls.c	FUNCTION_28	IF_1	CALL_1
0x400175a	            0x31c0	                            xor eax, eax	      1026	opncls.c	FUNCTION_28	IF_1
0x400175c	            0xebea	                           jmp 0x4001748	      1026	opncls.c	FUNCTION_28	IF_1
bfd_get_debug_link_info	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,0:CALL,1	1
0x40017a0	      0xe91beaffff	       jmp sym.bfd_get_debug_link_info_1	      1242	opncls.c	FUNCTION_32	CALL_1
_bfd_free_cached_info	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,1:CALL,2	20
0x40009d0	    0x4883bf080100	              cmp qword [rdi + 0x108], 0	       140	opncls.c	FUNCTION_4	IF_1
0x40009d8	            0x7466	                            je 0x4000a40	       140	opncls.c	FUNCTION_4	IF_1
0x40009da	              0x53	                                push rbx	       139	opncls.c	FUNCTION_4
0x40009db	          0x4889fb	                            mov rbx, rdi	       139	opncls.c	FUNCTION_4
0x40009de	        0x488d7f68	                   lea rdi, [rdi + 0x68]	       142	opncls.c	FUNCTION_4	IF_1	CALL_1
0x40009e2	      0xe800000000	                          call 0x40009e7	       142	opncls.c	FUNCTION_4	IF_1	CALL_1
0x40009e7	    0x488bbb080100	           mov rdi, qword [rbx + 0x108] 	       143	opncls.c	FUNCTION_4	IF_1	CALL_2
0x40009ee	      0xe800000000	                          call 0x40009f3	       143	opncls.c	FUNCTION_4	IF_1	CALL_2
0x40009f3	    0x48c783900000	               mov qword [rbx + 0x90], 0	       145	opncls.c	FUNCTION_4	IF_1
0x40009fe	    0x48c783980000	               mov qword [rbx + 0x98], 0	       146	opncls.c	FUNCTION_4	IF_1
0x4000a09	      0xb801000000	                              mov eax, 1	       154	opncls.c	FUNCTION_4
0x4000a0e	    0x48c783b00000	               mov qword [rbx + 0xb0], 0	       147	opncls.c	FUNCTION_4	IF_1
0x4000a19	    0x48c783f80000	               mov qword [rbx + 0xf8], 0	       148	opncls.c	FUNCTION_4	IF_1
0x4000a24	    0x48c783000100	              mov qword [rbx + 0x100], 0	       149	opncls.c	FUNCTION_4	IF_1
0x4000a2f	    0x48c783080100	              mov qword [rbx + 0x108], 0	       150	opncls.c	FUNCTION_4	IF_1
0x4000a3a	              0x5b	                                 pop rbx	       154	opncls.c	FUNCTION_4
0x4000a3b	              0xc3	                                     ret	       154	opncls.c	FUNCTION_4
0x4000a3c	         0xf1f4000	                         nop dword [rax]	       154	opncls.c	FUNCTION_4
0x4000a40	      0xb801000000	                              mov eax, 1	       154	opncls.c	FUNCTION_4
0x4000a45	              0xc3	                                     ret	       154	opncls.c	FUNCTION_4
bfd_fdopenr	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,1:ELSE,0:IF,1:CALL,5	47
0x4000bc0	            0x4154	                                push r12	       331	opncls.c	FUNCTION_7
0x4000bc2	              0x55	                                push rbp	       331	opncls.c	FUNCTION_7
0x4000bc3	            0x31c0	                            xor eax, eax	       340	opncls.c	FUNCTION_7	CALL_1
0x4000bc5	              0x53	                                push rbx	       331	opncls.c	FUNCTION_7
0x4000bc6	            0x89d3	                            mov ebx, edx	       331	opncls.c	FUNCTION_7
0x4000bc8	          0x4889fd	                            mov rbp, rdi	       331	opncls.c	FUNCTION_7
0x4000bcb	            0x31d2	                            xor edx, edx	       340	opncls.c	FUNCTION_7	CALL_1
0x4000bcd	          0x4989f4	                            mov r12, rsi	       331	opncls.c	FUNCTION_7
0x4000bd0	            0x89df	                            mov edi, ebx	       340	opncls.c	FUNCTION_7	CALL_1
0x4000bd2	      0xbe03000000	                              mov esi, 3	       340	opncls.c	FUNCTION_7	CALL_1
0x4000bd7	      0xe800000000	                          call 0x4000bdc	       340	opncls.c	FUNCTION_7	CALL_1
0x4000bdc	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       341	opncls.c	FUNCTION_7	IF_1
0x4000bdf	            0x7447	                            je 0x4000c28	       341	opncls.c	FUNCTION_7	IF_1
0x4000be1	          0x83e003	                              and eax, 3	       352	opncls.c	FUNCTION_7	SWITCH_1
0x4000be4	            0x7422	                            je 0x4000c08	       352	opncls.c	FUNCTION_7	SWITCH_1
0x4000be6	          0x83f802	                              cmp eax, 2	       352	opncls.c	FUNCTION_7	SWITCH_1
0x4000be9	            0x7f25	                            jg 0x4000c10	       352	opncls.c	FUNCTION_7	SWITCH_1
0x4000beb	      0xba00000000	                              mov edx, 0	       355	opncls.c	FUNCTION_7	SWITCH_1
0x4000bf0	            0x89d9	                            mov ecx, ebx	       361	opncls.c	FUNCTION_7	CALL_5
0x4000bf2	          0x4c89e6	                            mov rsi, r12	       361	opncls.c	FUNCTION_7	CALL_5
0x4000bf5	          0x4889ef	                            mov rdi, rbp	       361	opncls.c	FUNCTION_7	CALL_5
0x4000bf8	              0x5b	                                 pop rbx	       362	opncls.c	FUNCTION_7
0x4000bf9	              0x5d	                                 pop rbp	       362	opncls.c	FUNCTION_7
0x4000bfa	            0x415c	                                 pop r12	       362	opncls.c	FUNCTION_7
0x4000bfc	      0xe94ffeffff	                       jmp sym.bfd_fopen	       361	opncls.c	FUNCTION_7	CALL_5
0x4000c01	     0xf1f80000000	                         nop dword [rax]	       361	opncls.c	FUNCTION_7	CALL_5
0x4000c08	      0xba00000000	                              mov edx, 0	       354	opncls.c	FUNCTION_7	SWITCH_1
0x4000c0d	            0xebe1	                           jmp 0x4000bf0	       354	opncls.c	FUNCTION_7	SWITCH_1
0x4000c0f	              0x90	                                     nop	       354	opncls.c	FUNCTION_7	SWITCH_1
0x4000c10	      0xba00000000	                              mov edx, 0	       357	opncls.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000c15	      0xbe65010000	                          mov esi, 0x165	       357	opncls.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000c1a	      0xbf00000000	                              mov edi, 0	       357	opncls.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000c1f	      0xe800000000	                          call 0x4000c24	       357	opncls.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000c24	         0xf1f4000	                         nop dword [rax]	       357	opncls.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000c28	      0xe800000000	                          call 0x4000c2d	       343	opncls.c	FUNCTION_7	IF_1
0x4000c2d	          0x448b20	                   mov r12d, dword [rax]	       343	opncls.c	FUNCTION_7	IF_1
0x4000c30	          0x4889c5	                            mov rbp, rax	       343	opncls.c	FUNCTION_7	IF_1
0x4000c33	            0x89df	                            mov edi, ebx	       345	opncls.c	FUNCTION_7	IF_1	CALL_2
0x4000c35	      0xe800000000	                          call 0x4000c3a	       345	opncls.c	FUNCTION_7	IF_1	CALL_2
0x4000c3a	      0xbf01000000	                              mov edi, 1	       347	opncls.c	FUNCTION_7	IF_1	CALL_3
0x4000c3f	        0x44896500	                   mov dword [rbp], r12d	       346	opncls.c	FUNCTION_7	IF_1
0x4000c43	      0xe800000000	                          call 0x4000c48	       347	opncls.c	FUNCTION_7	IF_1	CALL_3
0x4000c48	              0x5b	                                 pop rbx	       362	opncls.c	FUNCTION_7
0x4000c49	            0x31c0	                            xor eax, eax	       362	opncls.c	FUNCTION_7
0x4000c4b	              0x5d	                                 pop rbp	       362	opncls.c	FUNCTION_7
0x4000c4c	            0x415c	                                 pop r12	       362	opncls.c	FUNCTION_7
0x4000c4e	              0xc3	                                     ret	       362	opncls.c	FUNCTION_7
get_build_id_name	DO,0:WHILE,1:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,3:CALL,6	88
0x4001450	            0x4157	                                push r15	      1929	opncls.c	FUNCTION_43
0x4001452	            0x4156	                                push r14	      1929	opncls.c	FUNCTION_43
0x4001454	            0x4155	                                push r13	      1929	opncls.c	FUNCTION_43
0x4001456	            0x4154	                                push r12	      1929	opncls.c	FUNCTION_43
0x4001458	              0x55	                                push rbp	      1929	opncls.c	FUNCTION_43
0x4001459	              0x53	                                push rbx	      1929	opncls.c	FUNCTION_43
0x400145a	        0x4883ec18	                           sub rsp, 0x18	      1929	opncls.c	FUNCTION_43
0x400145e	          0x4885ff	                           test rdi, rdi	      1937	opncls.c	FUNCTION_43	IF_1
0x4001461	      0x4889742408	                mov qword [rsp + 8], rsi	      1929	opncls.c	FUNCTION_43
0x4001466	     0xf8410010000	                            je 0x400157c	      1937	opncls.c	FUNCTION_43	IF_1
0x400146c	        0x48833f00	                      cmp qword [rdi], 0	      1937	opncls.c	FUNCTION_43	IF_1
0x4001470	     0xf8406010000	                            je 0x400157c	      1937	opncls.c	FUNCTION_43	IF_1
0x4001476	          0x4885f6	                           test rsi, rsi	      1937	opncls.c	FUNCTION_43	IF_1
0x4001479	     0xf84fd000000	                            je 0x400157c	      1937	opncls.c	FUNCTION_43	IF_1
0x400147f	      0xe88cfcffff	                   call sym.get_build_id	      1943	opncls.c	FUNCTION_43	CALL_2
0x4001484	          0x4885c0	                           test rax, rax	      1944	opncls.c	FUNCTION_43	IF_2
0x4001487	          0x4989c6	                            mov r14, rax	      1943	opncls.c	FUNCTION_43	CALL_2
0x400148a	     0xf84fa000000	                            je 0x400158a	      1944	opncls.c	FUNCTION_43	IF_2
0x4001490	          0x488b00	                    mov rax, qword [rax]	      1948	opncls.c	FUNCTION_43	CALL_5
0x4001493	      0x488d7c0012	            lea rdi, [rax + rax + 0x12] 	      1948	opncls.c	FUNCTION_43	CALL_5
0x4001498	      0xe800000000	                          call 0x400149d	      1948	opncls.c	FUNCTION_43	CALL_5
0x400149d	          0x4885c0	                           test rax, rax	      1949	opncls.c	FUNCTION_43	IF_3
0x40014a0	          0x4989c5	                            mov r13, rax	      1948	opncls.c	FUNCTION_43	CALL_5
0x40014a3	     0xf84e5000000	                            je 0x400158e	      1949	opncls.c	FUNCTION_43	IF_3
0x40014a9	    0x48b82e627569	          movabs rax, 0x692d646c6975622e	        33	stdio2.h	FUNCTION_46	CALL_1
0x40014b3	      0xba642f0000	                         mov edx, 0x2f64	        33	stdio2.h	FUNCTION_46	CALL_1
0x40014b8	          0x4d8b26	                    mov r12, qword [r14]	      1956	opncls.c	FUNCTION_43
0x40014bb	        0x49894500	                    mov qword [r13], rax	        33	stdio2.h	FUNCTION_46	CALL_1
0x40014bf	      0x6641895508	                  mov word [r13 + 8], dx	        33	stdio2.h	FUNCTION_46	CALL_1
0x40014c4	        0x498d5d0a	                    lea rbx, [r13 + 0xa]	      1958	opncls.c	FUNCTION_43
0x40014c8	      0x41c6450a00	                 mov byte [r13 + 0xa], 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x40014cd	      0x450fb64608	               movzx r8d, byte [r14 + 8]	        33	stdio2.h	FUNCTION_46	CALL_1
0x40014d2	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x40014d7	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_46	CALL_1
0x40014d9	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_46	CALL_1
0x40014e0	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_46	CALL_1
0x40014e5	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_46	CALL_1
0x40014e8	        0x498d6e09	                      lea rbp, [r14 + 9]	      1959	opncls.c	FUNCTION_43
0x40014ec	      0xe800000000	                          call 0x40014f1	        33	stdio2.h	FUNCTION_46	CALL_1
0x40014f1	            0x4898	                                    cdqe	      1959	opncls.c	FUNCTION_43
0x40014f3	      0xb92f000000	                           mov ecx, 0x2f	        33	stdio2.h	FUNCTION_46	CALL_1
0x40014f8	        0x4983fc01	                              cmp r12, 1	      1961	opncls.c	FUNCTION_43	WHILE_1
0x40014fc	        0x4c8d0c03	                     lea r9, [rbx + rax]	      1959	opncls.c	FUNCTION_43
0x4001500	        0x66418909	                       mov word [r9], cx	        33	stdio2.h	FUNCTION_46	CALL_1
0x4001504	        0x4d8d7901	                       lea r15, [r9 + 1]	      1960	opncls.c	FUNCTION_43
0x4001508	            0x7442	                            je 0x400154c	      1961	opncls.c	FUNCTION_43	WHILE_1
0x400150a	          0x4889eb	                            mov rbx, rbp	      1961	opncls.c	FUNCTION_43	WHILE_1
0x400150d	        0x4983ec01	                              sub r12, 1	      1961	opncls.c	FUNCTION_43	WHILE_1
0x4001511	     0xf1f80000000	                         nop dword [rax]	      1961	opncls.c	FUNCTION_43	WHILE_1
0x4001518	        0x4883c301	                              add rbx, 1	      1962	opncls.c	FUNCTION_43	WHILE_1
0x400151c	      0x440fb643ff	               movzx r8d, byte [rbx - 1]	        33	stdio2.h	FUNCTION_46	CALL_1
0x4001521	          0x4c89ff	                            mov rdi, r15	        33	stdio2.h	FUNCTION_46	CALL_1
0x4001524	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_46	CALL_1
0x4001526	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x400152b	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_46	CALL_1
0x4001532	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_46	CALL_1
0x4001537	      0xe800000000	                          call 0x400153c	        33	stdio2.h	FUNCTION_46	CALL_1
0x400153c	            0x4898	                                    cdqe	      1962	opncls.c	FUNCTION_43	WHILE_1
0x400153e	          0x4901c7	                            add r15, rax	      1962	opncls.c	FUNCTION_43	WHILE_1
0x4001541	          0x4c89e0	                            mov rax, r12	      1962	opncls.c	FUNCTION_43	WHILE_1
0x4001544	          0x4829d8	                            sub rax, rbx	      1962	opncls.c	FUNCTION_43	WHILE_1
0x4001547	          0x4801e8	                            add rax, rbp	      1961	opncls.c	FUNCTION_43	WHILE_1
0x400154a	            0x75cc	                           jne 0x4001518	      1961	opncls.c	FUNCTION_43	WHILE_1
0x400154c	      0xb875670000	                         mov eax, 0x6775	        33	stdio2.h	FUNCTION_46	CALL_1
0x4001551	    0x41c7072e6465	            mov dword [r15], 0x6265642e 	        33	stdio2.h	FUNCTION_46	CALL_1
0x4001558	      0x41c6470600	                   mov byte [r15 + 6], 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x400155d	      0x6641894704	                  mov word [r15 + 4], ax	        33	stdio2.h	FUNCTION_46	CALL_1
0x4001562	      0x488b442408	                mov rax, qword [rsp + 8]	      1965	opncls.c	FUNCTION_43
0x4001567	          0x4c8930	                    mov qword [rax], r14	      1965	opncls.c	FUNCTION_43
0x400156a	          0x4c89e8	                            mov rax, r13	      1966	opncls.c	FUNCTION_43
0x400156d	        0x4883c418	                           add rsp, 0x18	      1967	opncls.c	FUNCTION_43
0x4001571	              0x5b	                                 pop rbx	      1967	opncls.c	FUNCTION_43
0x4001572	              0x5d	                                 pop rbp	      1967	opncls.c	FUNCTION_43
0x4001573	            0x415c	                                 pop r12	      1967	opncls.c	FUNCTION_43
0x4001575	            0x415d	                                 pop r13	      1967	opncls.c	FUNCTION_43
0x4001577	            0x415e	                                 pop r14	      1967	opncls.c	FUNCTION_43
0x4001579	            0x415f	                                 pop r15	      1967	opncls.c	FUNCTION_43
0x400157b	              0xc3	                                     ret	      1967	opncls.c	FUNCTION_43
0x400157c	      0xbf05000000	                              mov edi, 5	      1939	opncls.c	FUNCTION_43	IF_1	CALL_1
0x4001581	      0xe800000000	                          call 0x4001586	      1939	opncls.c	FUNCTION_43	IF_1	CALL_1
0x4001586	            0x31c0	                            xor eax, eax	      1940	opncls.c	FUNCTION_43	IF_1
0x4001588	            0xebe3	                           jmp 0x400156d	      1940	opncls.c	FUNCTION_43	IF_1
0x400158a	            0x31c0	                            xor eax, eax	      1945	opncls.c	FUNCTION_43	IF_2
0x400158c	            0xebdf	                           jmp 0x400156d	      1945	opncls.c	FUNCTION_43	IF_2
0x400158e	      0xbf06000000	                              mov edi, 6	      1951	opncls.c	FUNCTION_43	IF_3	CALL_6
0x4001593	      0xe800000000	                          call 0x4001598	      1951	opncls.c	FUNCTION_43	IF_3	CALL_6
0x4001598	            0x31c0	                            xor eax, eax	      1952	opncls.c	FUNCTION_43	IF_3
0x400159a	            0xebd1	                           jmp 0x400156d	      1952	opncls.c	FUNCTION_43	IF_3
opncls_bflush	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,0:CALL,0	2
0x40000f0	            0x31c0	                            xor eax, eax	       537	opncls.c	FUNCTION_14
0x40000f2	              0xc3	                                     ret	       537	opncls.c	FUNCTION_14
bfd_fill_in_gnu_debuglink_section	DO,0:WHILE,1:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,4:CALL,13	125
0x4001a70	            0x4157	                                push r15	      1737	opncls.c	FUNCTION_41
0x4001a72	            0x4156	                                push r14	      1737	opncls.c	FUNCTION_41
0x4001a74	            0x4155	                                push r13	      1737	opncls.c	FUNCTION_41
0x4001a76	            0x4154	                                push r12	      1737	opncls.c	FUNCTION_41
0x4001a78	              0x55	                                push rbp	      1737	opncls.c	FUNCTION_41
0x4001a79	              0x53	                                push rbx	      1737	opncls.c	FUNCTION_41
0x4001a7a	          0x4889d5	                            mov rbp, rdx	      1737	opncls.c	FUNCTION_41
0x4001a7d	        0x4883ec18	                           sub rsp, 0x18	      1737	opncls.c	FUNCTION_41
0x4001a81	          0x4885f6	                           test rsi, rsi	      1747	opncls.c	FUNCTION_41	IF_1
0x4001a84	           0xf94c2	                                 sete dl	      1747	opncls.c	FUNCTION_41	IF_1
0x4001a87	          0x4885ed	                           test rbp, rbp	      1747	opncls.c	FUNCTION_41	IF_1
0x4001a8a	           0xf94c0	                                 sete al	      1747	opncls.c	FUNCTION_41	IF_1
0x4001a8d	             0x8c2	                               or dl, al	      1747	opncls.c	FUNCTION_41	IF_1
0x4001a8f	     0xf8527010000	                           jne 0x4001bbc	      1747	opncls.c	FUNCTION_41	IF_1
0x4001a95	          0x4885ff	                           test rdi, rdi	      1747	opncls.c	FUNCTION_41	IF_1
0x4001a98	          0x4989fc	                            mov r12, rdi	      1747	opncls.c	FUNCTION_41	IF_1
0x4001a9b	     0xf841b010000	                            je 0x4001bbc	      1747	opncls.c	FUNCTION_41	IF_1
0x4001aa1	          0x4989f5	                            mov r13, rsi	      1747	opncls.c	FUNCTION_41	IF_1
0x4001aa4	          0x4889ef	                            mov rdi, rbp	      1759	opncls.c	FUNCTION_41	CALL_2
0x4001aa7	      0xbe00000000	                              mov esi, 0	      1759	opncls.c	FUNCTION_41	CALL_2
0x4001aac	      0xe800000000	                          call 0x4001ab1	      1759	opncls.c	FUNCTION_41	CALL_2
0x4001ab1	          0x4885c0	                           test rax, rax	      1760	opncls.c	FUNCTION_41	IF_2
0x4001ab4	          0x4889c3	                            mov rbx, rax	      1759	opncls.c	FUNCTION_41	CALL_2
0x4001ab7	     0xf8437010000	                            je 0x4001bf4	      1760	opncls.c	FUNCTION_41	IF_2
0x4001abd	          0x4531f6	                          xor r14d, r14d	      1760	opncls.c	FUNCTION_41	IF_2
0x4001ac0	          0x4889d9	                            mov rcx, rbx	       295	stdio2.h	FUNCTION_60	CALL_9
0x4001ac3	      0xba00200000	                         mov edx, 0x2000	       295	stdio2.h	FUNCTION_60	CALL_9
0x4001ac8	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_60	CALL_9
0x4001acd	      0xbf00000000	                              mov edi, 0	       295	stdio2.h	FUNCTION_60	CALL_9
0x4001ad2	      0xe800000000	                          call 0x4001ad7	       295	stdio2.h	FUNCTION_60	CALL_9
0x4001ad7	          0x4885c0	                           test rax, rax	      1767	opncls.c	FUNCTION_41	WHILE_1	CALL_4
0x4001ada	            0x7440	                            je 0x4001b1c	      1767	opncls.c	FUNCTION_41	WHILE_1	CALL_4
0x4001adc	    0x480500000000	                              add rax, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x4001ae2	          0x4489f7	                           mov edi, r14d	      1142	opncls.c	FUNCTION_30
0x4001ae5	    0x483d00000000	                              cmp rax, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x4001aeb	            0xf7d7	                                 not edi	      1142	opncls.c	FUNCTION_30
0x4001aed	            0x7625	                           jbe 0x4001b14	      1143	opncls.c	FUNCTION_30	FOR_1
0x4001aef	      0xba00000000	                              mov edx, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x4001af4	         0xf1f4000	                         nop dword [rax]	      1143	opncls.c	FUNCTION_30	FOR_1
0x4001af8	            0x89f9	                            mov ecx, edi	      1144	opncls.c	FUNCTION_30	FOR_1
0x4001afa	            0x320a	                      xor cl, byte [rdx]	      1144	opncls.c	FUNCTION_30	FOR_1
0x4001afc	        0x4883c201	                              add rdx, 1	      1143	opncls.c	FUNCTION_30	FOR_1
0x4001b00	        0x48c1ef08	                              shr rdi, 8	      1144	opncls.c	FUNCTION_30	FOR_1
0x4001b04	           0xfb6c9	                           movzx ecx, cl	      1144	opncls.c	FUNCTION_30	FOR_1
0x4001b07	    0x48333ccd0000	                  xor rdi, qword [rcx*8]	      1144	opncls.c	FUNCTION_30	FOR_1
0x4001b0f	          0x4839d0	                            cmp rax, rdx	      1143	opncls.c	FUNCTION_30	FOR_1
0x4001b12	            0x75e4	                           jne 0x4001af8	      1143	opncls.c	FUNCTION_30	FOR_1
0x4001b14	          0x4189fe	                           mov r14d, edi	      1145	opncls.c	FUNCTION_30
0x4001b17	          0x41f7d6	                                not r14d	      1145	opncls.c	FUNCTION_30
0x4001b1a	            0xeba4	                           jmp 0x4001ac0	      1145	opncls.c	FUNCTION_30
0x4001b1c	          0x4889df	                            mov rdi, rbx	      1769	opncls.c	FUNCTION_41	CALL_6
0x4001b1f	      0xe800000000	                          call 0x4001b24	      1769	opncls.c	FUNCTION_41	CALL_6
0x4001b24	          0x4889ef	                            mov rdi, rbp	      1773	opncls.c	FUNCTION_41	CALL_7
0x4001b27	      0xe800000000	                          call 0x4001b2c	      1773	opncls.c	FUNCTION_41	CALL_7
0x4001b2c	          0x4889c7	                            mov rdi, rax	      1775	opncls.c	FUNCTION_41	CALL_8
0x4001b2f	      0x4889442408	                mov qword [rsp + 8], rax	      1775	opncls.c	FUNCTION_41	CALL_8
0x4001b34	      0xe800000000	                          call 0x4001b39	      1775	opncls.c	FUNCTION_41	CALL_8
0x4001b39	        0x488d5804	                      lea rbx, [rax + 4]	      1777	opncls.c	FUNCTION_41
0x4001b3d	          0x4989c7	                            mov r15, rax	      1775	opncls.c	FUNCTION_41	CALL_8
0x4001b40	        0x4883e3fc	             and rbx, 0xfffffffffffffffc	      1778	opncls.c	FUNCTION_41
0x4001b44	        0x488d4304	                      lea rax, [rbx + 4]	      1779	opncls.c	FUNCTION_41
0x4001b48	          0x4889c7	                            mov rdi, rax	      1781	opncls.c	FUNCTION_41	CALL_9
0x4001b4b	        0x48890424	                    mov qword [rsp], rax	      1781	opncls.c	FUNCTION_41	CALL_9
0x4001b4f	      0xe800000000	                          call 0x4001b54	      1781	opncls.c	FUNCTION_41	CALL_9
0x4001b54	          0x4889c5	                            mov rbp, rax	      1781	opncls.c	FUNCTION_41	CALL_9
0x4001b57	            0x31c0	                            xor eax, eax	      1785	opncls.c	FUNCTION_41	IF_3
0x4001b59	          0x4885ed	                           test rbp, rbp	      1782	opncls.c	FUNCTION_41	IF_3
0x4001b5c	            0x744f	                            je 0x4001bad	      1782	opncls.c	FUNCTION_41	IF_3
0x4001b5e	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_63	CALL_3
0x4001b63	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_63	CALL_3
0x4001b66	          0x4889ef	                            mov rdi, rbp	        53	string3.h	FUNCTION_63	CALL_3
0x4001b69	      0xe800000000	                          call 0x4001b6e	        53	string3.h	FUNCTION_63	CALL_3
0x4001b6e	      0x4a8d7c3d00	                    lea rdi, [rbp + r15]	        90	string3.h	FUNCTION_66	CALL_6
0x4001b73	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_66	CALL_6
0x4001b76	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_66	CALL_6
0x4001b78	          0x4c29fa	                            sub rdx, r15	        90	string3.h	FUNCTION_66	CALL_6
0x4001b7b	      0xe800000000	                          call 0x4001b80	        90	string3.h	FUNCTION_66	CALL_6
0x4001b80	      0x498b442408	                mov rax, qword [r12 + 8]	      1792	opncls.c	FUNCTION_41
0x4001b85	      0x488d741d00	                    lea rsi, [rbp + rbx]	      1792	opncls.c	FUNCTION_41
0x4001b8a	          0x4c89f7	                            mov rdi, r14	      1792	opncls.c	FUNCTION_41
0x4001b8d	          0xff5048	                 call qword [rax + 0x48]	      1792	opncls.c	FUNCTION_41
0x4001b90	        0x4c8b0424	                     mov r8, qword [rsp]	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4001b94	            0x31c9	                            xor ecx, ecx	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4001b96	          0x4889ea	                            mov rdx, rbp	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4001b99	          0x4c89ee	                            mov rsi, r13	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4001b9c	          0x4c89e7	                            mov rdi, r12	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4001b9f	      0xe800000000	                          call 0x4001ba4	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4001ba4	            0x85c0	                           test eax, eax	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4001ba6	            0x742f	                            je 0x4001bd7	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4001ba8	      0xb801000000	                              mov eax, 1	      1801	opncls.c	FUNCTION_41
0x4001bad	        0x4883c418	                           add rsp, 0x18	      1802	opncls.c	FUNCTION_41
0x4001bb1	              0x5b	                                 pop rbx	      1802	opncls.c	FUNCTION_41
0x4001bb2	              0x5d	                                 pop rbp	      1802	opncls.c	FUNCTION_41
0x4001bb3	            0x415c	                                 pop r12	      1802	opncls.c	FUNCTION_41
0x4001bb5	            0x415d	                                 pop r13	      1802	opncls.c	FUNCTION_41
0x4001bb7	            0x415e	                                 pop r14	      1802	opncls.c	FUNCTION_41
0x4001bb9	            0x415f	                                 pop r15	      1802	opncls.c	FUNCTION_41
0x4001bbb	              0xc3	                                     ret	      1802	opncls.c	FUNCTION_41
0x4001bbc	      0xbf05000000	                              mov edi, 5	      1749	opncls.c	FUNCTION_41	IF_1	CALL_1
0x4001bc1	      0xe800000000	                          call 0x4001bc6	      1749	opncls.c	FUNCTION_41	IF_1	CALL_1
0x4001bc6	        0x4883c418	                           add rsp, 0x18	      1802	opncls.c	FUNCTION_41
0x4001bca	            0x31c0	                            xor eax, eax	      1750	opncls.c	FUNCTION_41	IF_1
0x4001bcc	              0x5b	                                 pop rbx	      1802	opncls.c	FUNCTION_41
0x4001bcd	              0x5d	                                 pop rbp	      1802	opncls.c	FUNCTION_41
0x4001bce	            0x415c	                                 pop r12	      1802	opncls.c	FUNCTION_41
0x4001bd0	            0x415d	                                 pop r13	      1802	opncls.c	FUNCTION_41
0x4001bd2	            0x415e	                                 pop r14	      1802	opncls.c	FUNCTION_41
0x4001bd4	            0x415f	                                 pop r15	      1802	opncls.c	FUNCTION_41
0x4001bd6	              0xc3	                                     ret	      1802	opncls.c	FUNCTION_41
0x4001bd7	          0x4889ef	                            mov rdi, rbp	      1797	opncls.c	FUNCTION_41	IF_4	CALL_13
0x4001bda	          0x890424	                    mov dword [rsp], eax	      1797	opncls.c	FUNCTION_41	IF_4	CALL_13
0x4001bdd	      0xe800000000	                          call 0x4001be2	      1797	opncls.c	FUNCTION_41	IF_4	CALL_13
0x4001be2	          0x8b0424	                    mov eax, dword [rsp]	      1798	opncls.c	FUNCTION_41	IF_4
0x4001be5	        0x4883c418	                           add rsp, 0x18	      1802	opncls.c	FUNCTION_41
0x4001be9	              0x5b	                                 pop rbx	      1802	opncls.c	FUNCTION_41
0x4001bea	              0x5d	                                 pop rbp	      1802	opncls.c	FUNCTION_41
0x4001beb	            0x415c	                                 pop r12	      1802	opncls.c	FUNCTION_41
0x4001bed	            0x415d	                                 pop r13	      1802	opncls.c	FUNCTION_41
0x4001bef	            0x415e	                                 pop r14	      1802	opncls.c	FUNCTION_41
0x4001bf1	            0x415f	                                 pop r15	      1802	opncls.c	FUNCTION_41
0x4001bf3	              0xc3	                                     ret	      1802	opncls.c	FUNCTION_41
0x4001bf4	      0xbf01000000	                              mov edi, 1	      1762	opncls.c	FUNCTION_41	IF_2	CALL_3
0x4001bf9	      0xe800000000	                          call 0x4001bfe	      1762	opncls.c	FUNCTION_41	IF_2	CALL_3
0x4001bfe	            0x31c0	                            xor eax, eax	      1763	opncls.c	FUNCTION_41	IF_2
0x4001c00	            0xebab	                           jmp 0x4001bad	      1763	opncls.c	FUNCTION_41	IF_2
opncls_btell	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,0:CALL,0	3
0x4000040	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       483	opncls.c	FUNCTION_9
0x4000044	        0x488b4020	            mov rax, qword [rax + 0x20] 	       483	opncls.c	FUNCTION_9
0x4000048	              0xc3	                                     ret	       484	opncls.c	FUNCTION_9
bfd_release	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,0:CALL,1	2
0x4001760	    0x488bbf080100	           mov rdi, qword [rdi + 0x108] 	      1043	opncls.c	FUNCTION_29	CALL_1
0x4001767	      0xe900000000	                           jmp 0x400176c	      1043	opncls.c	FUNCTION_29	CALL_1
opncls_bwrite	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,0:CALL,0	2
0x40000b0	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       517	opncls.c	FUNCTION_12
0x40000b7	              0xc3	                                     ret	       517	opncls.c	FUNCTION_12
_bfd_new_bfd_contained_in	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,2:CALL,1	43
0x4000940	              0x53	                                push rbx	       100	opncls.c	FUNCTION_2
0x4000941	          0x4889fb	                            mov rbx, rdi	       100	opncls.c	FUNCTION_2
0x4000944	      0xe800000000	                          call 0x4000949	       103	opncls.c	FUNCTION_2	CALL_1
0x4000949	          0x4885c0	                           test rax, rax	       104	opncls.c	FUNCTION_2	IF_1
0x400094c	            0x747a	                            je 0x40009c8	       104	opncls.c	FUNCTION_2	IF_1
0x400094e	        0x488b5308	                mov rdx, qword [rbx + 8]	       106	opncls.c	FUNCTION_2
0x4000952	        0x48895008	                mov qword [rax + 8], rdx	       106	opncls.c	FUNCTION_2
0x4000956	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       107	opncls.c	FUNCTION_2
0x400095a	        0x48895018	             mov qword [rax + 0x18], rdx	       107	opncls.c	FUNCTION_2
0x400095e	    0x48817b180000	               cmp qword [rbx + 0x18], 0	       108	opncls.c	FUNCTION_2	IF_2
0x4000966	            0x7450	                            je 0x40009b8	       108	opncls.c	FUNCTION_2	IF_2
0x4000968	         0xfb65044	           movzx edx, byte [rax + 0x44] 	       111	opncls.c	FUNCTION_2
0x400096c	    0x488998d00000	             mov qword [rax + 0xd0], rbx	       110	opncls.c	FUNCTION_2
0x4000973	         0xfb64847	           movzx ecx, byte [rax + 0x47] 	       112	opncls.c	FUNCTION_2
0x4000977	         0xfb67048	           movzx esi, byte [rax + 0x48] 	       113	opncls.c	FUNCTION_2
0x400097b	          0x83e2e7	                     and edx, 0xffffffe7	       111	opncls.c	FUNCTION_2
0x400097e	          0x83ca08	                               or edx, 8	       111	opncls.c	FUNCTION_2
0x4000981	          0x83e1fb	                     and ecx, 0xfffffffb	       112	opncls.c	FUNCTION_2
0x4000984	          0x83e6bf	                     and esi, 0xffffffbf	       113	opncls.c	FUNCTION_2
0x4000987	          0x885044	               mov byte [rax + 0x44], dl	       111	opncls.c	FUNCTION_2
0x400098a	         0xfb65347	           movzx edx, byte [rbx + 0x47] 	       112	opncls.c	FUNCTION_2
0x400098e	          0x83e204	                              and edx, 4	       112	opncls.c	FUNCTION_2
0x4000991	             0x9ca	                             or edx, ecx	       112	opncls.c	FUNCTION_2
0x4000993	          0x885047	               mov byte [rax + 0x47], dl	       112	opncls.c	FUNCTION_2
0x4000996	         0xfb64b48	           movzx ecx, byte [rbx + 0x48] 	       113	opncls.c	FUNCTION_2
0x400099a	          0x83e2df	                     and edx, 0xffffffdf	       114	opncls.c	FUNCTION_2
0x400099d	          0x83e140	                           and ecx, 0x40	       113	opncls.c	FUNCTION_2
0x40009a0	             0x9f1	                             or ecx, esi	       113	opncls.c	FUNCTION_2
0x40009a2	          0x884848	               mov byte [rax + 0x48], cl	       113	opncls.c	FUNCTION_2
0x40009a5	         0xfb64b47	           movzx ecx, byte [rbx + 0x47] 	       114	opncls.c	FUNCTION_2
0x40009a9	          0x83e120	                           and ecx, 0x20	       114	opncls.c	FUNCTION_2
0x40009ac	             0x9ca	                             or edx, ecx	       114	opncls.c	FUNCTION_2
0x40009ae	          0x885047	               mov byte [rax + 0x47], dl	       114	opncls.c	FUNCTION_2
0x40009b1	              0x5b	                                 pop rbx	       116	opncls.c	FUNCTION_2
0x40009b2	              0xc3	                                     ret	       116	opncls.c	FUNCTION_2
0x40009b3	       0xf1f440000	                   nop dword [rax + rax]	       116	opncls.c	FUNCTION_2
0x40009b8	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       109	opncls.c	FUNCTION_2	IF_2
0x40009bc	        0x48895010	             mov qword [rax + 0x10], rdx	       109	opncls.c	FUNCTION_2	IF_2
0x40009c0	            0xeba6	                           jmp 0x4000968	       109	opncls.c	FUNCTION_2	IF_2
0x40009c2	    0x660f1f440000	                    nop word [rax + rax]	       109	opncls.c	FUNCTION_2	IF_2
0x40009c8	            0x31c0	                            xor eax, eax	       105	opncls.c	FUNCTION_2	IF_1
0x40009ca	              0x5b	                                 pop rbx	       116	opncls.c	FUNCTION_2
0x40009cb	              0xc3	                                     ret	       116	opncls.c	FUNCTION_2
bfd_alloc2	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,1:CALL,2	22
0x40015a0	          0x4889d1	                            mov rcx, rdx	       969	opncls.c	FUNCTION_26
0x40015a3	          0x4889f2	                            mov rdx, rsi	       971	opncls.c	FUNCTION_26	IF_1
0x40015a6	      0xb8ffffffff	                     mov eax, 0xffffffff	       971	opncls.c	FUNCTION_26	IF_1
0x40015ab	          0x4809ca	                             or rdx, rcx	       971	opncls.c	FUNCTION_26	IF_1
0x40015ae	          0x4839c2	                            cmp rdx, rax	       971	opncls.c	FUNCTION_26	IF_1
0x40015b1	            0x7616	                           jbe 0x40015c9	       971	opncls.c	FUNCTION_26	IF_1
0x40015b3	          0x4885c9	                           test rcx, rcx	       971	opncls.c	FUNCTION_26	IF_1
0x40015b6	            0x7411	                            je 0x40015c9	       971	opncls.c	FUNCTION_26	IF_1
0x40015b8	            0x31d2	                            xor edx, edx	       972	opncls.c	FUNCTION_26	IF_1
0x40015ba	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       972	opncls.c	FUNCTION_26	IF_1
0x40015c1	          0x48f7f1	                                 div rcx	       972	opncls.c	FUNCTION_26	IF_1
0x40015c4	          0x4839c6	                            cmp rsi, rax	       972	opncls.c	FUNCTION_26	IF_1
0x40015c7	            0x770f	                            ja 0x40015d8	       972	opncls.c	FUNCTION_26	IF_1
0x40015c9	        0x480faff1	                           imul rsi, rcx	       978	opncls.c	FUNCTION_26	CALL_2
0x40015cd	      0xe9befaffff	                       jmp sym.bfd_alloc	       978	opncls.c	FUNCTION_26	CALL_2
0x40015d2	    0x660f1f440000	                    nop word [rax + rax]	       978	opncls.c	FUNCTION_26	CALL_2
0x40015d8	        0x4883ec08	                              sub rsp, 8	       969	opncls.c	FUNCTION_26
0x40015dc	      0xbf06000000	                              mov edi, 6	       974	opncls.c	FUNCTION_26	IF_1	CALL_1
0x40015e1	      0xe800000000	                          call 0x40015e6	       974	opncls.c	FUNCTION_26	IF_1	CALL_1
0x40015e6	            0x31c0	                            xor eax, eax	       979	opncls.c	FUNCTION_26
0x40015e8	        0x4883c408	                              add rsp, 8	       979	opncls.c	FUNCTION_26
0x40015ec	              0xc3	                                     ret	       979	opncls.c	FUNCTION_26
bfd_openw	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,3:CALL,7	36
0x4000cf0	            0x4154	                                push r12	       645	opncls.c	FUNCTION_18
0x4000cf2	              0x55	                                push rbp	       645	opncls.c	FUNCTION_18
0x4000cf3	          0x4989fc	                            mov r12, rdi	       645	opncls.c	FUNCTION_18
0x4000cf6	              0x53	                                push rbx	       645	opncls.c	FUNCTION_18
0x4000cf7	          0x4889f5	                            mov rbp, rsi	       645	opncls.c	FUNCTION_18
0x4000cfa	      0xe800000000	                          call 0x4000cff	       651	opncls.c	FUNCTION_18	CALL_1
0x4000cff	          0x4885c0	                           test rax, rax	       652	opncls.c	FUNCTION_18	IF_1
0x4000d02	            0x7452	                            je 0x4000d56	       652	opncls.c	FUNCTION_18	IF_1
0x4000d04	          0x4889c6	                            mov rsi, rax	       655	opncls.c	FUNCTION_18	CALL_2
0x4000d07	          0x4889ef	                            mov rdi, rbp	       655	opncls.c	FUNCTION_18	CALL_2
0x4000d0a	          0x4889c3	                            mov rbx, rax	       655	opncls.c	FUNCTION_18	CALL_2
0x4000d0d	      0xe800000000	                          call 0x4000d12	       655	opncls.c	FUNCTION_18	CALL_2
0x4000d12	          0x4885c0	                           test rax, rax	       656	opncls.c	FUNCTION_18	IF_2
0x4000d15	            0x7437	                            je 0x4000d4e	       656	opncls.c	FUNCTION_18	IF_2
0x4000d17	          0x4c89e7	                            mov rdi, r12	       664	opncls.c	FUNCTION_18	CALL_4
0x4000d1a	      0xe800000000	                          call 0x4000d1f	       664	opncls.c	FUNCTION_18	CALL_4
0x4000d1f	          0x488903	                    mov qword [rbx], rax	       664	opncls.c	FUNCTION_18	CALL_4
0x4000d22	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       665	opncls.c	FUNCTION_18
0x4000d26	          0x4889df	                            mov rdi, rbx	       667	opncls.c	FUNCTION_18	IF_3	CALL_5
0x4000d29	          0x83e0e7	                     and eax, 0xffffffe7	       665	opncls.c	FUNCTION_18
0x4000d2c	          0x83c810	                            or eax, 0x10	       665	opncls.c	FUNCTION_18
0x4000d2f	          0x884344	               mov byte [rbx + 0x44], al	       665	opncls.c	FUNCTION_18
0x4000d32	      0xe800000000	                          call 0x4000d37	       667	opncls.c	FUNCTION_18	IF_3	CALL_5
0x4000d37	          0x4885c0	                           test rax, rax	       667	opncls.c	FUNCTION_18	IF_3	CALL_5
0x4000d3a	            0x7408	                            je 0x4000d44	       667	opncls.c	FUNCTION_18	IF_3	CALL_5
0x4000d3c	          0x4889d8	                            mov rax, rbx	       667	opncls.c	FUNCTION_18	IF_3	CALL_5
0x4000d3f	              0x5b	                                 pop rbx	       676	opncls.c	FUNCTION_18
0x4000d40	              0x5d	                                 pop rbp	       676	opncls.c	FUNCTION_18
0x4000d41	            0x415c	                                 pop r12	       676	opncls.c	FUNCTION_18
0x4000d43	              0xc3	                                     ret	       676	opncls.c	FUNCTION_18
0x4000d44	      0xbf01000000	                              mov edi, 1	       670	opncls.c	FUNCTION_18	IF_3	CALL_6
0x4000d49	      0xe800000000	                          call 0x4000d4e	       670	opncls.c	FUNCTION_18	IF_3	CALL_6
0x4000d4e	          0x4889df	                            mov rdi, rbx	       671	opncls.c	FUNCTION_18	IF_3	CALL_7
0x4000d51	      0xe81af4ffff	                call sym._bfd_delete_bfd	       671	opncls.c	FUNCTION_18	IF_3	CALL_7
0x4000d56	            0x31c0	                            xor eax, eax	       672	opncls.c	FUNCTION_18	IF_3
0x4000d58	            0xebe5	                           jmp 0x4000d3f	       672	opncls.c	FUNCTION_18	IF_3
opncls_bread	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,1:CALL,0	12
0x4000090	              0x53	                                push rbx	       501	opncls.c	FUNCTION_11
0x4000091	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	       502	opncls.c	FUNCTION_11
0x4000095	          0x4889d1	                            mov rcx, rdx	       503	opncls.c	FUNCTION_11
0x4000098	          0x4889f2	                            mov rdx, rsi	       503	opncls.c	FUNCTION_11
0x400009b	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	       503	opncls.c	FUNCTION_11
0x400009f	          0x488b33	                    mov rsi, qword [rbx]	       503	opncls.c	FUNCTION_11
0x40000a2	          0xff5308	                    call qword [rbx + 8]	       503	opncls.c	FUNCTION_11
0x40000a5	          0x4885c0	                           test rax, rax	       505	opncls.c	FUNCTION_11	IF_1
0x40000a8	            0x7804	                            js 0x40000ae	       505	opncls.c	FUNCTION_11	IF_1
0x40000aa	        0x48014320	            add qword [rbx + 0x20], rax 	       507	opncls.c	FUNCTION_11
0x40000ae	              0x5b	                                 pop rbx	       509	opncls.c	FUNCTION_11
0x40000af	              0xc3	                                     ret	       509	opncls.c	FUNCTION_11
opncls_bseek	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,1:ELSE,0:IF,0:CALL,0	18
0x4000050	          0x83fa01	                              cmp edx, 1	       490	opncls.c	FUNCTION_10	SWITCH_1
0x4000053	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       489	opncls.c	FUNCTION_10
0x4000057	            0x7427	                            je 0x4000080	       490	opncls.c	FUNCTION_10	SWITCH_1
0x4000059	          0x83fa02	                              cmp edx, 2	       490	opncls.c	FUNCTION_10	SWITCH_1
0x400005c	      0xb8ffffffff	                     mov eax, 0xffffffff	       494	opncls.c	FUNCTION_10	SWITCH_1
0x4000061	            0x7406	                            je 0x4000069	       490	opncls.c	FUNCTION_10	SWITCH_1
0x4000063	            0x85d2	                           test edx, edx	       490	opncls.c	FUNCTION_10	SWITCH_1
0x4000065	            0x7409	                            je 0x4000070	       490	opncls.c	FUNCTION_10	SWITCH_1
0x4000067	            0x31c0	                            xor eax, eax	       496	opncls.c	FUNCTION_10
0x4000069	            0xf3c3	                                     ret	       497	opncls.c	FUNCTION_10
0x400006b	       0xf1f440000	                   nop dword [rax + rax]	       497	opncls.c	FUNCTION_10
0x4000070	        0x48897120	             mov qword [rcx + 0x20], rsi	       492	opncls.c	FUNCTION_10	SWITCH_1
0x4000074	            0x31c0	                            xor eax, eax	       496	opncls.c	FUNCTION_10
0x4000076	              0xc3	                                     ret	       492	opncls.c	FUNCTION_10	SWITCH_1
0x4000077	    0x660f1f840000	                    nop word [rax + rax]	       492	opncls.c	FUNCTION_10	SWITCH_1
0x4000080	        0x48017120	            add qword [rcx + 0x20], rsi 	       493	opncls.c	FUNCTION_10	SWITCH_1
0x4000084	            0x31c0	                            xor eax, eax	       496	opncls.c	FUNCTION_10
0x4000086	            0xebe1	                           jmp 0x4000069	       496	opncls.c	FUNCTION_10
bfd_close	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,2:CALL,2	16
0x4000e50	              0x53	                                push rbx	       728	opncls.c	FUNCTION_20
0x4000e51	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       729	opncls.c	FUNCTION_20	IF_1	CALL_1
0x4000e55	          0x4889fb	                            mov rbx, rdi	       728	opncls.c	FUNCTION_20
0x4000e58	            0xa810	                           test al, 0x10	       729	opncls.c	FUNCTION_20	IF_1	CALL_1
0x4000e5a	            0x7412	                            je 0x4000e6e	       729	opncls.c	FUNCTION_20	IF_1	CALL_1
0x4000e5c	        0x488b5708	                mov rdx, qword [rdi + 8]	       731	opncls.c	FUNCTION_20	IF_1	IF_2
0x4000e60	          0x83e007	                              and eax, 7	       731	opncls.c	FUNCTION_20	IF_1	IF_2
0x4000e63	    0xff94c2f00000	        call qword [rdx + rax*8 + 0xf0] 	       731	opncls.c	FUNCTION_20	IF_1	IF_2
0x4000e6a	            0x85c0	                           test eax, eax	       731	opncls.c	FUNCTION_20	IF_1	IF_2
0x4000e6c	            0x7412	                            je 0x4000e80	       731	opncls.c	FUNCTION_20	IF_1	IF_2
0x4000e6e	          0x4889df	                            mov rdi, rbx	       735	opncls.c	FUNCTION_20	CALL_2
0x4000e71	              0x5b	                                 pop rbx	       736	opncls.c	FUNCTION_20
0x4000e72	      0xe9e9feffff	              jmp sym.bfd_close_all_done	       735	opncls.c	FUNCTION_20	CALL_2
0x4000e77	    0x660f1f840000	                    nop word [rax + rax]	       735	opncls.c	FUNCTION_20	CALL_2
0x4000e80	              0x5b	                                 pop rbx	       736	opncls.c	FUNCTION_20
0x4000e81	              0xc3	                                     ret	       736	opncls.c	FUNCTION_20
bfd_fopen	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,3:IF,10:CALL,13	103
0x4000a50	            0x4156	                                push r14	       196	opncls.c	FUNCTION_5
0x4000a52	            0x4155	                                push r13	       196	opncls.c	FUNCTION_5
0x4000a54	          0x4989f6	                            mov r14, rsi	       196	opncls.c	FUNCTION_5
0x4000a57	            0x4154	                                push r12	       196	opncls.c	FUNCTION_5
0x4000a59	              0x55	                                push rbp	       196	opncls.c	FUNCTION_5
0x4000a5a	          0x4989fd	                            mov r13, rdi	       196	opncls.c	FUNCTION_5
0x4000a5d	              0x53	                                push rbx	       196	opncls.c	FUNCTION_5
0x4000a5e	          0x4989d4	                            mov r12, rdx	       196	opncls.c	FUNCTION_5
0x4000a61	            0x89cd	                            mov ebp, ecx	       196	opncls.c	FUNCTION_5
0x4000a63	      0xe800000000	                          call 0x4000a68	       200	opncls.c	FUNCTION_5	CALL_1
0x4000a68	          0x4885c0	                           test rax, rax	       201	opncls.c	FUNCTION_5	IF_1
0x4000a6b	          0x4889c3	                            mov rbx, rax	       200	opncls.c	FUNCTION_5	CALL_1
0x4000a6e	     0xf84bc000000	                            je 0x4000b30	       201	opncls.c	FUNCTION_5	IF_1
0x4000a74	          0x4889c6	                            mov rsi, rax	       208	opncls.c	FUNCTION_5	CALL_3
0x4000a77	          0x4c89f7	                            mov rdi, r14	       208	opncls.c	FUNCTION_5	CALL_3
0x4000a7a	      0xe800000000	                          call 0x4000a7f	       208	opncls.c	FUNCTION_5	CALL_3
0x4000a7f	          0x4885c0	                           test rax, rax	       209	opncls.c	FUNCTION_5	IF_3
0x4000a82	     0xf84f0000000	                            je 0x4000b78	       209	opncls.c	FUNCTION_5	IF_3
0x4000a88	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       218	opncls.c	FUNCTION_5	IF_5
0x4000a8b	          0x4c89e6	                            mov rsi, r12	       219	opncls.c	FUNCTION_5	CALL_6
0x4000a8e	     0xf84bc000000	                            je 0x4000b50	       218	opncls.c	FUNCTION_5	IF_5
0x4000a94	            0x89ef	                            mov edi, ebp	       219	opncls.c	FUNCTION_5	CALL_6
0x4000a96	      0xe800000000	                          call 0x4000a9b	       219	opncls.c	FUNCTION_5	CALL_6
0x4000a9b	        0x48894310	             mov qword [rbx + 0x10], rax	       219	opncls.c	FUNCTION_5	CALL_6
0x4000a9f	          0x4885c0	                           test rax, rax	       223	opncls.c	FUNCTION_5	IF_6
0x4000aa2	     0xf84f8000000	                            je 0x4000ba0	       223	opncls.c	FUNCTION_5	IF_6
0x4000aa8	          0x4c89ef	                            mov rdi, r13	       234	opncls.c	FUNCTION_5	CALL_10
0x4000aab	      0xe800000000	                          call 0x4000ab0	       234	opncls.c	FUNCTION_5	CALL_10
0x4000ab0	          0x488903	                    mov qword [rbx], rax	       234	opncls.c	FUNCTION_5	CALL_10
0x4000ab3	      0x410fb61424	                   movzx edx, byte [r12]	       238	opncls.c	FUNCTION_5	IF_7
0x4000ab8	          0x8d429f	                   lea eax, [rdx - 0x61]	       238	opncls.c	FUNCTION_5	IF_7
0x4000abb	            0x3c16	                            cmp al, 0x16	       238	opncls.c	FUNCTION_5	IF_7
0x4000abd	            0x7641	                           jbe 0x4000b00	       238	opncls.c	FUNCTION_5	IF_7
0x4000abf	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       244	opncls.c	FUNCTION_5	ELSE_3
0x4000ac3	          0x83e0e7	                     and eax, 0xffffffe7	       244	opncls.c	FUNCTION_5	ELSE_3
0x4000ac6	          0x83c810	                            or eax, 0x10	       244	opncls.c	FUNCTION_5	ELSE_3
0x4000ac9	          0x884344	               mov byte [rbx + 0x44], al	       244	opncls.c	FUNCTION_5	ELSE_3
0x4000acc	          0x4889df	                            mov rdi, rbx	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x4000acf	      0xe800000000	                          call 0x4000ad4	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x4000ad4	            0x85c0	                           test eax, eax	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x4000ad6	     0xf84ac000000	                            je 0x4000b88	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x4000adc	         0xfb64347	           movzx eax, byte [rbx + 0x47] 	       251	opncls.c	FUNCTION_5
0x4000ae0	            0x89c2	                            mov edx, eax	       251	opncls.c	FUNCTION_5
0x4000ae2	          0x83ca08	                               or edx, 8	       251	opncls.c	FUNCTION_5
0x4000ae5	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       257	opncls.c	FUNCTION_5	IF_10
0x4000ae8	          0x885347	               mov byte [rbx + 0x47], dl	       251	opncls.c	FUNCTION_5
0x4000aeb	            0x7506	                           jne 0x4000af3	       257	opncls.c	FUNCTION_5	IF_10
0x4000aed	          0x83c80a	                             or eax, 0xa	      7070	bfd.h	FUNCTION_78
0x4000af0	          0x884347	               mov byte [rbx + 0x47], al	      7070	bfd.h	FUNCTION_78
0x4000af3	          0x4889d8	                            mov rax, rbx	       261	opncls.c	FUNCTION_5
0x4000af6	              0x5b	                                 pop rbx	       261	opncls.c	FUNCTION_5
0x4000af7	              0x5d	                                 pop rbp	       261	opncls.c	FUNCTION_5
0x4000af8	            0x415c	                                 pop r12	       261	opncls.c	FUNCTION_5
0x4000afa	            0x415d	                                 pop r13	       261	opncls.c	FUNCTION_5
0x4000afc	            0x415e	                                 pop r14	       261	opncls.c	FUNCTION_5
0x4000afe	              0xc3	                                     ret	       261	opncls.c	FUNCTION_5
0x4000aff	              0x90	                                     nop	       261	opncls.c	FUNCTION_5
0x4000b00	      0xb901004200	                       mov ecx, 0x420001	       238	opncls.c	FUNCTION_5	IF_7
0x4000b05	        0x480fa3c1	                             bt rcx, rax	       238	opncls.c	FUNCTION_5	IF_7
0x4000b09	            0x73b4	                           jae 0x4000abf	       238	opncls.c	FUNCTION_5	IF_7
0x4000b0b	    0x41807c24012b	                cmp byte [r12 + 1], 0x2b	       239	opncls.c	FUNCTION_5	IF_7
0x4000b11	            0x7455	                            je 0x4000b68	       239	opncls.c	FUNCTION_5	IF_7
0x4000b13	          0x80fa72	                            cmp dl, 0x72	       241	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000b16	            0x75a7	                           jne 0x4000abf	       241	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000b18	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000b1c	          0x83e0e7	                     and eax, 0xffffffe7	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000b1f	          0x83c808	                               or eax, 8	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000b22	          0x884344	               mov byte [rbx + 0x44], al	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000b25	            0xeba5	                           jmp 0x4000acc	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000b27	    0x660f1f840000	                    nop word [rax + rax]	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000b30	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       203	opncls.c	FUNCTION_5	IF_1	IF_2
0x4000b33	            0x74be	                            je 0x4000af3	       203	opncls.c	FUNCTION_5	IF_1	IF_2
0x4000b35	            0x89ef	                            mov edi, ebp	       204	opncls.c	FUNCTION_5	IF_1	CALL_2
0x4000b37	      0xe800000000	                          call 0x4000b3c	       204	opncls.c	FUNCTION_5	IF_1	CALL_2
0x4000b3c	          0x4889d8	                            mov rax, rbx	       261	opncls.c	FUNCTION_5
0x4000b3f	              0x5b	                                 pop rbx	       261	opncls.c	FUNCTION_5
0x4000b40	              0x5d	                                 pop rbp	       261	opncls.c	FUNCTION_5
0x4000b41	            0x415c	                                 pop r12	       261	opncls.c	FUNCTION_5
0x4000b43	            0x415d	                                 pop r13	       261	opncls.c	FUNCTION_5
0x4000b45	            0x415e	                                 pop r14	       261	opncls.c	FUNCTION_5
0x4000b47	              0xc3	                                     ret	       261	opncls.c	FUNCTION_5
0x4000b48	     0xf1f84000000	                   nop dword [rax + rax]	       261	opncls.c	FUNCTION_5
0x4000b50	          0x4c89ef	                            mov rdi, r13	       222	opncls.c	FUNCTION_5	CALL_7
0x4000b53	      0xe800000000	                          call 0x4000b58	       222	opncls.c	FUNCTION_5	CALL_7
0x4000b58	        0x48894310	             mov qword [rbx + 0x10], rax	       222	opncls.c	FUNCTION_5	CALL_7
0x4000b5c	      0xe93effffff	                           jmp 0x4000a9f	       222	opncls.c	FUNCTION_5	CALL_7
0x4000b61	     0xf1f80000000	                         nop dword [rax]	       222	opncls.c	FUNCTION_5	CALL_7
0x4000b68	        0x804b4418	              or byte [rbx + 0x44], 0x18	       240	opncls.c	FUNCTION_5	IF_7
0x4000b6c	      0xe95bffffff	                           jmp 0x4000acc	       240	opncls.c	FUNCTION_5	IF_7
0x4000b71	     0xf1f80000000	                         nop dword [rax]	       240	opncls.c	FUNCTION_5	IF_7
0x4000b78	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       211	opncls.c	FUNCTION_5	IF_3	IF_4
0x4000b7b	            0x740b	                            je 0x4000b88	       211	opncls.c	FUNCTION_5	IF_3	IF_4
0x4000b7d	            0x89ef	                            mov edi, ebp	       212	opncls.c	FUNCTION_5	IF_3	CALL_4
0x4000b7f	      0xe800000000	                          call 0x4000b84	       212	opncls.c	FUNCTION_5	IF_3	CALL_4
0x4000b84	         0xf1f4000	                         nop dword [rax]	       212	opncls.c	FUNCTION_5	IF_3	CALL_4
0x4000b88	          0x4889df	                            mov rdi, rbx	       226	opncls.c	FUNCTION_5	IF_6	CALL_9
0x4000b8b	            0x31db	                            xor ebx, ebx	       227	opncls.c	FUNCTION_5	IF_6
0x4000b8d	      0xe8def5ffff	                call sym._bfd_delete_bfd	       226	opncls.c	FUNCTION_5	IF_6	CALL_9
0x4000b92	      0xe95cffffff	                           jmp 0x4000af3	       227	opncls.c	FUNCTION_5	IF_6
0x4000b97	    0x660f1f840000	                    nop word [rax + rax]	       227	opncls.c	FUNCTION_5	IF_6
0x4000ba0	      0xbf01000000	                              mov edi, 1	       225	opncls.c	FUNCTION_5	IF_6	CALL_8
0x4000ba5	      0xe800000000	                          call 0x4000baa	       225	opncls.c	FUNCTION_5	IF_6	CALL_8
0x4000baa	            0xebdc	                           jmp 0x4000b88	       225	opncls.c	FUNCTION_5	IF_6	CALL_8
separate_alt_debug_file_exists	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,1:CALL,3	20
0x40002d0	          0x4885ff	                           test rdi, rdi	      1366	opncls.c	FUNCTION_35	CALL_1
0x40002d3	              0x53	                                push rbx	      1363	opncls.c	FUNCTION_35
0x40002d4	          0x4889fb	                            mov rbx, rdi	      1363	opncls.c	FUNCTION_35
0x40002d7	            0x7427	                            je 0x4000300	      1366	opncls.c	FUNCTION_35	CALL_1
0x40002d9	          0x4889df	                            mov rdi, rbx	      1368	opncls.c	FUNCTION_35	CALL_2
0x40002dc	      0xbe00000000	                              mov esi, 0	      1368	opncls.c	FUNCTION_35	CALL_2
0x40002e1	      0xe800000000	                          call 0x40002e6	      1368	opncls.c	FUNCTION_35	CALL_2
0x40002e6	          0x4889c7	                            mov rdi, rax	      1368	opncls.c	FUNCTION_35	CALL_2
0x40002e9	            0x31c0	                            xor eax, eax	      1370	opncls.c	FUNCTION_35	IF_1
0x40002eb	          0x4885ff	                           test rdi, rdi	      1369	opncls.c	FUNCTION_35	IF_1
0x40002ee	            0x740a	                            je 0x40002fa	      1369	opncls.c	FUNCTION_35	IF_1
0x40002f0	      0xe800000000	                          call 0x40002f5	      1372	opncls.c	FUNCTION_35	CALL_3
0x40002f5	      0xb801000000	                              mov eax, 1	      1374	opncls.c	FUNCTION_35
0x40002fa	              0x5b	                                 pop rbx	      1375	opncls.c	FUNCTION_35
0x40002fb	              0xc3	                                     ret	      1375	opncls.c	FUNCTION_35
0x40002fc	         0xf1f4000	                         nop dword [rax]	      1375	opncls.c	FUNCTION_35
0x4000300	      0xbe56050000	                          mov esi, 0x556	      1366	opncls.c	FUNCTION_35	CALL_1
0x4000305	      0xbf00000000	                              mov edi, 0	      1366	opncls.c	FUNCTION_35	CALL_1
0x400030a	      0xe800000000	                          call 0x400030f	      1366	opncls.c	FUNCTION_35	CALL_1
0x400030f	            0xebc8	                           jmp 0x40002d9	      1366	opncls.c	FUNCTION_35	CALL_1
get_alt_debug_link_info_shim	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,0:CALL,2	20
0x4001900	              0x53	                                push rbx	      1604	opncls.c	FUNCTION_38
0x4001901	        0x4883ec20	                           sub rsp, 0x20	      1604	opncls.c	FUNCTION_38
0x4001905	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1607	opncls.c	FUNCTION_38	CALL_1
0x400190a	      0x488d742408	                      lea rsi, [rsp + 8]	      1607	opncls.c	FUNCTION_38	CALL_1
0x400190f	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1606	opncls.c	FUNCTION_38
0x4001918	    0x64488b042528	                mov rax, qword fs:[0x28]	      1604	opncls.c	FUNCTION_38
0x4001921	      0x4889442418	             mov qword [rsp + 0x18], rax	      1604	opncls.c	FUNCTION_38
0x4001926	            0x31c0	                            xor eax, eax	      1604	opncls.c	FUNCTION_38
0x4001928	      0xe800000000	                          call 0x400192d	      1607	opncls.c	FUNCTION_38	CALL_1
0x400192d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1609	opncls.c	FUNCTION_38	CALL_2
0x4001932	          0x4889c3	                            mov rbx, rax	      1607	opncls.c	FUNCTION_38	CALL_1
0x4001935	      0xe800000000	                          call 0x400193a	      1609	opncls.c	FUNCTION_38	CALL_2
0x400193a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1612	opncls.c	FUNCTION_38
0x400193f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1612	opncls.c	FUNCTION_38
0x4001948	            0x7509	                           jne 0x4001953	      1612	opncls.c	FUNCTION_38
0x400194a	        0x4883c420	                           add rsp, 0x20	      1612	opncls.c	FUNCTION_38
0x400194e	          0x4889d8	                            mov rax, rbx	      1612	opncls.c	FUNCTION_38
0x4001951	              0x5b	                                 pop rbx	      1612	opncls.c	FUNCTION_38
0x4001952	              0xc3	                                     ret	      1612	opncls.c	FUNCTION_38
0x4001953	      0xe800000000	                          call 0x4001958	      1612	opncls.c	FUNCTION_38
bfd_zalloc	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,1:CALL,2	17
0x40015f0	              0x55	                                push rbp	       995	opncls.c	FUNCTION_27
0x40015f1	              0x53	                                push rbx	       995	opncls.c	FUNCTION_27
0x40015f2	          0x4889f5	                            mov rbp, rsi	       995	opncls.c	FUNCTION_27
0x40015f5	        0x4883ec08	                              sub rsp, 8	       995	opncls.c	FUNCTION_27
0x40015f9	      0xe800000000	                          call 0x40015fe	       998	opncls.c	FUNCTION_27	CALL_1
0x40015fe	          0x4885c0	                           test rax, rax	       999	opncls.c	FUNCTION_27	IF_1
0x4001601	          0x4889c3	                            mov rbx, rax	       998	opncls.c	FUNCTION_27	CALL_1
0x4001604	            0x740d	                            je 0x4001613	       999	opncls.c	FUNCTION_27	IF_1
0x4001606	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_66	CALL_6
0x4001609	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_66	CALL_6
0x400160b	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_66	CALL_6
0x400160e	      0xe800000000	                          call 0x4001613	        90	string3.h	FUNCTION_66	CALL_6
0x4001613	        0x4883c408	                              add rsp, 8	      1002	opncls.c	FUNCTION_27
0x4001617	          0x4889d8	                            mov rax, rbx	      1002	opncls.c	FUNCTION_27
0x400161a	              0x5b	                                 pop rbx	      1002	opncls.c	FUNCTION_27
0x400161b	              0x5d	                                 pop rbp	      1002	opncls.c	FUNCTION_27
0x400161c	              0xc3	                                     ret	      1002	opncls.c	FUNCTION_27
opncls_bclose	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,1:CALL,0	12
0x40000c0	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       522	opncls.c	FUNCTION_13
0x40000c4	              0x53	                                push rbx	       521	opncls.c	FUNCTION_13
0x40000c5	            0x31c0	                            xor eax, eax	       521	opncls.c	FUNCTION_13
0x40000c7	          0x4889fb	                            mov rbx, rdi	       521	opncls.c	FUNCTION_13
0x40000ca	        0x488b5110	            mov rdx, qword [rcx + 0x10] 	       527	opncls.c	FUNCTION_13	IF_1
0x40000ce	          0x4885d2	                           test rdx, rdx	       527	opncls.c	FUNCTION_13	IF_1
0x40000d1	            0x7405	                            je 0x40000d8	       527	opncls.c	FUNCTION_13	IF_1
0x40000d3	          0x488b31	                    mov rsi, qword [rcx]	       528	opncls.c	FUNCTION_13	IF_1
0x40000d6	            0xffd2	                                call rdx	       528	opncls.c	FUNCTION_13	IF_1
0x40000d8	    0x48c743100000	               mov qword [rbx + 0x10], 0	       529	opncls.c	FUNCTION_13
0x40000e0	              0x5b	                                 pop rbx	       531	opncls.c	FUNCTION_13
0x40000e1	              0xc3	                                     ret	       531	opncls.c	FUNCTION_13
bfd_openr_iovec	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,3:CALL,7	62
0x4001620	            0x4157	                                push r15	       578	opncls.c	FUNCTION_17
0x4001622	            0x4156	                                push r14	       578	opncls.c	FUNCTION_17
0x4001624	          0x4989ff	                            mov r15, rdi	       578	opncls.c	FUNCTION_17
0x4001627	            0x4155	                                push r13	       578	opncls.c	FUNCTION_17
0x4001629	            0x4154	                                push r12	       578	opncls.c	FUNCTION_17
0x400162b	          0x4d89c6	                             mov r14, r8	       578	opncls.c	FUNCTION_17
0x400162e	              0x55	                                push rbp	       578	opncls.c	FUNCTION_17
0x400162f	              0x53	                                push rbx	       578	opncls.c	FUNCTION_17
0x4001630	          0x4889d5	                            mov rbp, rdx	       578	opncls.c	FUNCTION_17
0x4001633	          0x4989cc	                            mov r12, rcx	       578	opncls.c	FUNCTION_17
0x4001636	          0x4d89cd	                             mov r13, r9	       578	opncls.c	FUNCTION_17
0x4001639	        0x4883ec18	                           sub rsp, 0x18	       578	opncls.c	FUNCTION_17
0x400163d	      0x4889742408	                mov qword [rsp + 8], rsi	       578	opncls.c	FUNCTION_17
0x4001642	      0xe800000000	                          call 0x4001647	       584	opncls.c	FUNCTION_17	CALL_2
0x4001647	          0x4885c0	                           test rax, rax	       585	opncls.c	FUNCTION_17	IF_1
0x400164a	     0xf8480000000	                            je 0x40016d0	       585	opncls.c	FUNCTION_17	IF_1
0x4001650	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       588	opncls.c	FUNCTION_17	CALL_3
0x4001655	          0x4889c6	                            mov rsi, rax	       588	opncls.c	FUNCTION_17	CALL_3
0x4001658	          0x4889c3	                            mov rbx, rax	       588	opncls.c	FUNCTION_17	CALL_3
0x400165b	      0xe800000000	                          call 0x4001660	       588	opncls.c	FUNCTION_17	CALL_3
0x4001660	          0x4885c0	                           test rax, rax	       589	opncls.c	FUNCTION_17	IF_2
0x4001663	            0x7473	                            je 0x40016d8	       589	opncls.c	FUNCTION_17	IF_2
0x4001665	          0x4c89ff	                            mov rdi, r15	       597	opncls.c	FUNCTION_17	CALL_5
0x4001668	      0xe800000000	                          call 0x400166d	       597	opncls.c	FUNCTION_17	CALL_5
0x400166d	          0x488903	                    mov qword [rbx], rax	       597	opncls.c	FUNCTION_17	CALL_5
0x4001670	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       598	opncls.c	FUNCTION_17
0x4001674	          0x4c89e6	                            mov rsi, r12	       601	opncls.c	FUNCTION_17
0x4001677	          0x4889df	                            mov rdi, rbx	       601	opncls.c	FUNCTION_17
0x400167a	          0x83e0e7	                     and eax, 0xffffffe7	       598	opncls.c	FUNCTION_17
0x400167d	          0x83c808	                               or eax, 8	       598	opncls.c	FUNCTION_17
0x4001680	          0x884344	               mov byte [rbx + 0x44], al	       598	opncls.c	FUNCTION_17
0x4001683	            0xffd5	                                call rbp	       601	opncls.c	FUNCTION_17
0x4001685	          0x4885c0	                           test rax, rax	       602	opncls.c	FUNCTION_17	IF_3
0x4001688	          0x4889c5	                            mov rbp, rax	       601	opncls.c	FUNCTION_17
0x400168b	            0x744b	                            je 0x40016d8	       602	opncls.c	FUNCTION_17	IF_3
0x400168d	      0xbe28000000	                           mov esi, 0x28	       608	opncls.c	FUNCTION_17	CALL_7
0x4001692	          0x4889df	                            mov rdi, rbx	       608	opncls.c	FUNCTION_17	CALL_7
0x4001695	      0xe800000000	                          call 0x400169a	       608	opncls.c	FUNCTION_17	CALL_7
0x400169a	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       612	opncls.c	FUNCTION_17
0x400169f	          0x488928	                    mov qword [rax], rbp	       609	opncls.c	FUNCTION_17
0x40016a2	        0x4c897008	                mov qword [rax + 8], r14	       610	opncls.c	FUNCTION_17
0x40016a6	        0x4c896810	             mov qword [rax + 0x10], r13	       611	opncls.c	FUNCTION_17
0x40016aa	        0x48895018	             mov qword [rax + 0x18], rdx	       612	opncls.c	FUNCTION_17
0x40016ae	        0x48894310	             mov qword [rbx + 0x10], rax	       615	opncls.c	FUNCTION_17
0x40016b2	          0x4889d8	                            mov rax, rbx	       617	opncls.c	FUNCTION_17
0x40016b5	    0x48c743180000	               mov qword [rbx + 0x18], 0	       614	opncls.c	FUNCTION_17
0x40016bd	        0x4883c418	                           add rsp, 0x18	       618	opncls.c	FUNCTION_17
0x40016c1	              0x5b	                                 pop rbx	       618	opncls.c	FUNCTION_17
0x40016c2	              0x5d	                                 pop rbp	       618	opncls.c	FUNCTION_17
0x40016c3	            0x415c	                                 pop r12	       618	opncls.c	FUNCTION_17
0x40016c5	            0x415d	                                 pop r13	       618	opncls.c	FUNCTION_17
0x40016c7	            0x415e	                                 pop r14	       618	opncls.c	FUNCTION_17
0x40016c9	            0x415f	                                 pop r15	       618	opncls.c	FUNCTION_17
0x40016cb	              0xc3	                                     ret	       618	opncls.c	FUNCTION_17
0x40016cc	         0xf1f4000	                         nop dword [rax]	       618	opncls.c	FUNCTION_17
0x40016d0	            0x31c0	                            xor eax, eax	       586	opncls.c	FUNCTION_17	IF_1
0x40016d2	            0xebe9	                           jmp 0x40016bd	       586	opncls.c	FUNCTION_17	IF_1
0x40016d4	         0xf1f4000	                         nop dword [rax]	       586	opncls.c	FUNCTION_17	IF_1
0x40016d8	          0x4889df	                            mov rdi, rbx	       604	opncls.c	FUNCTION_17	IF_3	CALL_6
0x40016db	      0xe890eaffff	                call sym._bfd_delete_bfd	       604	opncls.c	FUNCTION_17	IF_3	CALL_6
0x40016e0	            0x31c0	                            xor eax, eax	       605	opncls.c	FUNCTION_17	IF_3
0x40016e2	            0xebd9	                           jmp 0x40016bd	       605	opncls.c	FUNCTION_17	IF_3
find_separate_debug_file	DO,0:WHILE,0:functions,0:FOR,2:SWITCH,0:ELSE,2:IF,17:CALL,35	294
0x4000400	            0x4157	                                push r15	      1416	opncls.c	FUNCTION_36
0x4000402	            0x4156	                                push r14	      1416	opncls.c	FUNCTION_36
0x4000404	            0x4155	                                push r13	      1416	opncls.c	FUNCTION_36
0x4000406	            0x4154	                                push r12	      1416	opncls.c	FUNCTION_36
0x4000408	          0x4989f4	                            mov r12, rsi	      1416	opncls.c	FUNCTION_36
0x400040b	              0x55	                                push rbp	      1416	opncls.c	FUNCTION_36
0x400040c	              0x53	                                push rbx	      1416	opncls.c	FUNCTION_36
0x400040d	          0x4889fb	                            mov rbx, rdi	      1416	opncls.c	FUNCTION_36
0x4000410	        0x4883ec28	                           sub rsp, 0x28	      1416	opncls.c	FUNCTION_36
0x4000414	          0x4885ff	                           test rdi, rdi	      1424	opncls.c	FUNCTION_36	CALL_1
0x4000417	        0x89542408	                mov dword [rsp + 8], edx	      1416	opncls.c	FUNCTION_36
0x400041b	      0x4c89442410	              mov qword [rsp + 0x10], r8	      1416	opncls.c	FUNCTION_36
0x4000420	        0x4c890c24	                     mov qword [rsp], r9	      1416	opncls.c	FUNCTION_36
0x4000424	     0xf84ce020000	                            je 0x40006f8	      1424	opncls.c	FUNCTION_36	CALL_1
0x400042a	          0x4d85e4	                           test r12, r12	      1426	opncls.c	FUNCTION_36	IF_1
0x400042d	      0xb800000000	                              mov eax, 0	      1426	opncls.c	FUNCTION_36	IF_1
0x4000432	        0x4c0f44e0	                          cmove r12, rax	      1426	opncls.c	FUNCTION_36	IF_1
0x4000436	        0x48833b00	                      cmp qword [rbx], 0	      1429	opncls.c	FUNCTION_36	IF_2
0x400043a	     0xf8403040000	                            je 0x4000843	      1429	opncls.c	FUNCTION_36	IF_2
0x4000440	        0x488b3424	                    mov rsi, qword [rsp]	      1435	opncls.c	FUNCTION_36	CALL_3
0x4000444	          0x4889df	                            mov rdi, rbx	      1435	opncls.c	FUNCTION_36	CALL_3
0x4000447	            0xffd1	                                call rcx	      1435	opncls.c	FUNCTION_36	CALL_3
0x4000449	          0x4885c0	                           test rax, rax	      1437	opncls.c	FUNCTION_36	IF_3
0x400044c	          0x4889c5	                            mov rbp, rax	      1435	opncls.c	FUNCTION_36	CALL_3
0x400044f	     0xf84ff030000	                            je 0x4000854	      1437	opncls.c	FUNCTION_36	IF_3
0x4000455	          0x803800	                       cmp byte [rax], 0	      1440	opncls.c	FUNCTION_36	IF_4
0x4000458	     0xf84b0030000	                            je 0x400080e	      1440	opncls.c	FUNCTION_36	IF_4
0x400045e	        0x8b442408	                mov eax, dword [rsp + 8]	      1447	opncls.c	FUNCTION_36	IF_5
0x4000462	            0x85c0	                           test eax, eax	      1447	opncls.c	FUNCTION_36	IF_5
0x4000464	     0xf8456010000	                            je 0x40005c0	      1447	opncls.c	FUNCTION_36	IF_5
0x400046a	          0x4c8b2b	                    mov r13, qword [rbx]	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x400046d	          0x4c89ef	                            mov rdi, r13	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4000470	      0xe800000000	                          call 0x4000475	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4000475	          0x4885c0	                           test rax, rax	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4000478	     0xf84b1030000	                            je 0x400082f	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x400047e	    0x41807c05ff2f	         cmp byte [r13 + rax - 1], 0x2f 	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4000484	        0x4c8d70ff	                      lea r14, [rax - 1]	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4000488	            0x7519	                           jne 0x40004a3	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x400048a	      0xe9a8030000	                           jmp 0x4000837	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x400048f	              0x90	                                     nop	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4000490	    0x43807c35ff2f	         cmp byte [r13 + r14 - 1], 0x2f 	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4000496	        0x498d46ff	                      lea rax, [r14 - 1]	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x400049a	     0xf8410010000	                            je 0x40005b0	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x40004a0	          0x4989c6	                            mov r14, rax	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x40004a3	          0x4d85f6	                           test r14, r14	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x40004a6	            0x75e8	                           jne 0x4000490	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x40004a8	      0xbf01000000	                              mov edi, 1	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x40004ad	      0xe800000000	                          call 0x40004b2	      1453	opncls.c	FUNCTION_36	IF_5	CALL_8
0x40004b2	          0x4885c0	                           test rax, rax	      1454	opncls.c	FUNCTION_36	IF_5	IF_7
0x40004b5	          0x4989c5	                            mov r13, rax	      1453	opncls.c	FUNCTION_36	IF_5	CALL_8
0x40004b8	     0xf849d030000	                            je 0x400085b	      1454	opncls.c	FUNCTION_36	IF_5	IF_7
0x40004be	          0x488b33	                    mov rsi, qword [rbx]	        53	string3.h	FUNCTION_63	CALL_3
0x40004c1	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_63	CALL_3
0x40004c4	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_63	CALL_3
0x40004c7	      0xe800000000	                          call 0x40004cc	        53	string3.h	FUNCTION_63	CALL_3
0x40004cc	    0x43c644350000	                 mov byte [r13 + r14], 0	      1460	opncls.c	FUNCTION_36	IF_5
0x40004d2	          0x488b3b	                    mov rdi, qword [rbx]	      1471	opncls.c	FUNCTION_36	CALL_12
0x40004d5	      0xe800000000	                          call 0x40004da	      1471	opncls.c	FUNCTION_36	CALL_12
0x40004da	          0x4889c7	                            mov rdi, rax	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x40004dd	          0x4989c7	                            mov r15, rax	      1471	opncls.c	FUNCTION_36	CALL_12
0x40004e0	      0xe800000000	                          call 0x40004e5	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x40004e5	          0x4885c0	                           test rax, rax	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x40004e8	     0xf8419030000	                            je 0x4000807	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x40004ee	    0x41807c07ff2f	         cmp byte [r15 + rax - 1], 0x2f 	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x40004f4	        0x488d58ff	                      lea rbx, [rax - 1]	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x40004f8	            0x7515	                           jne 0x400050f	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x40004fa	      0xe928030000	                           jmp 0x4000827	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x40004ff	              0x90	                                     nop	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4000500	    0x41807c1fff2f	         cmp byte [r15 + rbx - 1], 0x2f 	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4000506	        0x488d43ff	                      lea rax, [rbx - 1]	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x400050a	            0x7408	                            je 0x4000514	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x400050c	          0x4889c3	                            mov rbx, rax	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x400050f	          0x4885db	                           test rbx, rbx	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4000512	            0x75ec	                           jne 0x4000500	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4000514	      0x41c6041f00	                 mov byte [r15 + rbx], 0	      1475	opncls.c	FUNCTION_36
0x4000519	          0x4c89e7	                            mov rdi, r12	      1485	opncls.c	FUNCTION_36	CALL_16
0x400051c	      0xe800000000	                          call 0x4000521	      1485	opncls.c	FUNCTION_36	CALL_16
0x4000521	          0x4889ef	                            mov rdi, rbp	      1494	opncls.c	FUNCTION_36	CALL_20
0x4000524	      0x4889442418	             mov qword [rsp + 0x18], rax	      1485	opncls.c	FUNCTION_36	CALL_16
0x4000529	      0xe800000000	                          call 0x400052e	      1494	opncls.c	FUNCTION_36	CALL_20
0x400052e	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1484	opncls.c	FUNCTION_36
0x4000533	          0x4939de	                            cmp r14, rbx	      1484	opncls.c	FUNCTION_36
0x4000536	        0x490f43de	                         cmovae rbx, r14	      1484	opncls.c	FUNCTION_36
0x400053a	      0x488d7c0229	            lea rdi, [rdx + rax + 0x29] 	      1484	opncls.c	FUNCTION_36
0x400053f	          0x4801df	                            add rdi, rbx	      1484	opncls.c	FUNCTION_36
0x4000542	      0xe800000000	                          call 0x4000547	      1484	opncls.c	FUNCTION_36
0x4000547	          0x4885c0	                           test rax, rax	      1496	opncls.c	FUNCTION_36	IF_9
0x400054a	          0x4889c3	                            mov rbx, rax	      1484	opncls.c	FUNCTION_36
0x400054d	            0x7433	                            je 0x4000582	      1496	opncls.c	FUNCTION_36	IF_9
0x400054f	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000552	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000555	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000558	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x400055d	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000564	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000569	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_46	CALL_1
0x400056b	      0xe800000000	                          call 0x4000570	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000570	        0x488b3424	                    mov rsi, qword [rsp]	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x4000574	          0x4889df	                            mov rdi, rbx	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x4000577	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x400057c	            0xffd0	                                call rax	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x400057e	            0x85c0	                           test eax, eax	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x4000580	            0x745e	                            je 0x40005e0	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x4000582	          0x4889ef	                            mov rdi, rbp	      1559	opncls.c	FUNCTION_36	CALL_33
0x4000585	      0xe800000000	                          call 0x400058a	      1559	opncls.c	FUNCTION_36	CALL_33
0x400058a	          0x4c89ef	                            mov rdi, r13	      1560	opncls.c	FUNCTION_36	CALL_34
0x400058d	      0xe800000000	                          call 0x4000592	      1560	opncls.c	FUNCTION_36	CALL_34
0x4000592	          0x4c89ff	                            mov rdi, r15	      1561	opncls.c	FUNCTION_36	CALL_35
0x4000595	      0xe800000000	                          call 0x400059a	      1561	opncls.c	FUNCTION_36	CALL_35
0x400059a	          0x4889d8	                            mov rax, rbx	      1562	opncls.c	FUNCTION_36
0x400059d	        0x4883c428	                           add rsp, 0x28	      1563	opncls.c	FUNCTION_36
0x40005a1	              0x5b	                                 pop rbx	      1563	opncls.c	FUNCTION_36
0x40005a2	              0x5d	                                 pop rbp	      1563	opncls.c	FUNCTION_36
0x40005a3	            0x415c	                                 pop r12	      1563	opncls.c	FUNCTION_36
0x40005a5	            0x415d	                                 pop r13	      1563	opncls.c	FUNCTION_36
0x40005a7	            0x415e	                                 pop r14	      1563	opncls.c	FUNCTION_36
0x40005a9	            0x415f	                                 pop r15	      1563	opncls.c	FUNCTION_36
0x40005ab	              0xc3	                                     ret	      1563	opncls.c	FUNCTION_36
0x40005ac	         0xf1f4000	                         nop dword [rax]	      1563	opncls.c	FUNCTION_36
0x40005b0	        0x498d7e01	                      lea rdi, [r14 + 1]	      1563	opncls.c	FUNCTION_36
0x40005b4	      0xe9f4feffff	                           jmp 0x40004ad	      1563	opncls.c	FUNCTION_36
0x40005b9	     0xf1f80000000	                         nop dword [rax]	      1563	opncls.c	FUNCTION_36
0x40005c0	      0xbf01000000	                              mov edi, 1	      1464	opncls.c	FUNCTION_36	ELSE_1	CALL_11
0x40005c5	          0x4531f6	                          xor r14d, r14d	      1466	opncls.c	FUNCTION_36	ELSE_1
0x40005c8	      0xe800000000	                          call 0x40005cd	      1464	opncls.c	FUNCTION_36	ELSE_1	CALL_11
0x40005cd	          0x4989c5	                            mov r13, rax	      1464	opncls.c	FUNCTION_36	ELSE_1	CALL_11
0x40005d0	          0xc60000	                       mov byte [rax], 0	      1465	opncls.c	FUNCTION_36	ELSE_1
0x40005d3	      0xe9fafeffff	                           jmp 0x40004d2	      1465	opncls.c	FUNCTION_36	ELSE_1
0x40005d8	     0xf1f84000000	                   nop dword [rax + rax]	      1465	opncls.c	FUNCTION_36	ELSE_1
0x40005e0	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_46	CALL_1
0x40005e3	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_46	CALL_1
0x40005e6	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x40005eb	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_46	CALL_1
0x40005f2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_46	CALL_1
0x40005f7	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_46	CALL_1
0x40005fa	      0xe800000000	                          call 0x40005ff	        33	stdio2.h	FUNCTION_46	CALL_1
0x40005ff	        0x488b3424	                    mov rsi, qword [rsp]	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x4000603	          0x4889df	                            mov rdi, rbx	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x4000606	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x400060b	            0xffd0	                                call rax	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x400060d	            0x85c0	                           test eax, eax	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x400060f	     0xf856dffffff	                           jne 0x4000582	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x4000615	        0x8b442408	                mov eax, dword [rsp + 8]	      1519	opncls.c	FUNCTION_36
0x4000619	            0x85c0	                           test eax, eax	      1519	opncls.c	FUNCTION_36
0x400061b	     0xf84f5000000	                            je 0x4000716	      1519	opncls.c	FUNCTION_36
0x4000621	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000625	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x400062a	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000631	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000632	          0x4d89f9	                             mov r9, r15	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000635	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x400063b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000640	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000643	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000645	      0xe800000000	                          call 0x400064a	        33	stdio2.h	FUNCTION_46	CALL_1
0x400064a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x400064f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4000654	          0x4889df	                            mov rdi, rbx	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4000657	            0xffd0	                                call rax	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4000659	            0x85c0	                           test eax, eax	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x400065b	              0x5a	                                 pop rdx	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x400065c	              0x59	                                 pop rcx	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x400065d	     0xf851fffffff	                           jne 0x4000582	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4000663	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000667	          0x4d89f9	                             mov r9, r15	        33	stdio2.h	FUNCTION_46	CALL_1
0x400066a	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000670	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000671	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000676	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_46	CALL_1
0x400067d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000682	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000685	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000687	      0xe800000000	                          call 0x400068c	        33	stdio2.h	FUNCTION_46	CALL_1
0x400068c	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4000691	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4000696	          0x4889df	                            mov rdi, rbx	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4000699	            0xffd0	                                call rax	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x400069b	            0x85c0	                           test eax, eax	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x400069d	            0x4158	                                  pop r8	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x400069f	            0x4159	                                  pop r9	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x40006a1	     0xf85dbfeffff	                           jne 0x4000582	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x40006a7	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_69	CALL_3
0x40006aa	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_69	CALL_3
0x40006ad	      0xe800000000	                          call 0x40006b2	       110	string3.h	FUNCTION_69	CALL_3
0x40006b2	          0x4c89e7	                            mov rdi, r12	      1535	opncls.c	FUNCTION_36	CALL_26
0x40006b5	      0x4889442408	                mov qword [rsp + 8], rax	       110	string3.h	FUNCTION_69	CALL_3
0x40006ba	      0xe800000000	                          call 0x40006bf	      1535	opncls.c	FUNCTION_36	CALL_26
0x40006bf	        0x4883f801	                              cmp rax, 1	      1538	opncls.c	FUNCTION_36	IF_14	IF_15
0x40006c3	      0x488b542408	                mov rdx, qword [rsp + 8]	      1538	opncls.c	FUNCTION_36	IF_14	IF_15
0x40006c8	            0x7418	                            je 0x40006e2	      1538	opncls.c	FUNCTION_36	IF_14	IF_15
0x40006ca	    0x41807c04ff2f	         cmp byte [r12 + rax - 1], 0x2f 	      1539	opncls.c	FUNCTION_36	IF_14	IF_15
0x40006d0	            0x7410	                            je 0x40006e2	      1539	opncls.c	FUNCTION_36	IF_14	IF_15
0x40006d2	        0x41803f2f	                    cmp byte [r15], 0x2f	      1540	opncls.c	FUNCTION_36	IF_14	IF_15
0x40006d6	            0x740a	                            je 0x40006e2	      1540	opncls.c	FUNCTION_36	IF_14	IF_15
0x40006d8	    0x41be2f000000	                          mov r14d, 0x2f	       148	string3.h	FUNCTION_73	CALL_3
0x40006de	        0x66448932	                    mov word [rdx], r14w	       148	string3.h	FUNCTION_73	CALL_3
0x40006e2	          0x4c89fe	                            mov rsi, r15	       148	string3.h	FUNCTION_73	CALL_3
0x40006e5	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_73	CALL_3
0x40006e8	      0xe800000000	                          call 0x40006ed	       148	string3.h	FUNCTION_73	CALL_3
0x40006ed	      0xe9e5000000	                           jmp 0x40007d7	       148	string3.h	FUNCTION_73	CALL_3
0x40006f2	    0x660f1f440000	                    nop word [rax + rax]	       148	string3.h	FUNCTION_73	CALL_3
0x40006f8	      0xbe90050000	                          mov esi, 0x590	      1424	opncls.c	FUNCTION_36	CALL_1
0x40006fd	      0xbf00000000	                              mov edi, 0	      1424	opncls.c	FUNCTION_36	CALL_1
0x4000702	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1424	opncls.c	FUNCTION_36	CALL_1
0x4000707	      0xe800000000	                          call 0x400070c	      1424	opncls.c	FUNCTION_36	CALL_1
0x400070c	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1424	opncls.c	FUNCTION_36	CALL_1
0x4000711	      0xe914fdffff	                           jmp 0x400042a	      1424	opncls.c	FUNCTION_36	CALL_1
0x4000716	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_46	CALL_1
0x400071a	    0x41b900000000	                              mov r9d, 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000720	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000726	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000727	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x400072c	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000733	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000738	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_46	CALL_1
0x400073b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_46	CALL_1
0x400073d	      0xe800000000	                          call 0x4000742	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000742	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4000747	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x400074c	          0x4889df	                            mov rdi, rbx	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x400074f	            0xffd0	                                call rax	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4000751	            0x85c0	                           test eax, eax	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4000753	              0x5e	                                 pop rsi	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4000754	              0x5f	                                 pop rdi	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4000755	     0xf8527feffff	                           jne 0x4000582	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x400075b	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_46	CALL_1
0x400075f	    0x41b900000000	                              mov r9d, 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000765	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x400076b	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_46	CALL_1
0x400076c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000771	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000778	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_46	CALL_1
0x400077d	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000780	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000782	      0xe800000000	                          call 0x4000787	        33	stdio2.h	FUNCTION_46	CALL_1
0x4000787	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x400078c	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4000791	          0x4889df	                            mov rdi, rbx	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4000794	            0xffd0	                                call rax	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4000796	            0x85c0	                           test eax, eax	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4000798	            0x415a	                                 pop r10	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x400079a	            0x415b	                                 pop r11	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x400079c	     0xf85e0fdffff	                           jne 0x4000582	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x40007a2	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_69	CALL_3
0x40007a5	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_69	CALL_3
0x40007a8	      0xe800000000	                          call 0x40007ad	       110	string3.h	FUNCTION_69	CALL_3
0x40007ad	          0x4c89e7	                            mov rdi, r12	      1535	opncls.c	FUNCTION_36	CALL_26
0x40007b0	      0x4889442408	                mov qword [rsp + 8], rax	       110	string3.h	FUNCTION_69	CALL_3
0x40007b5	      0xe800000000	                          call 0x40007ba	      1535	opncls.c	FUNCTION_36	CALL_26
0x40007ba	        0x4883f801	                              cmp rax, 1	      1546	opncls.c	FUNCTION_36	ELSE_2	IF_16
0x40007be	      0x488b542408	                mov rdx, qword [rsp + 8]	      1546	opncls.c	FUNCTION_36	ELSE_2	IF_16
0x40007c3	            0x7412	                            je 0x40007d7	      1546	opncls.c	FUNCTION_36	ELSE_2	IF_16
0x40007c5	    0x41807c04ff2f	         cmp byte [r12 + rax - 1], 0x2f 	      1546	opncls.c	FUNCTION_36	ELSE_2	IF_16
0x40007cb	            0x740a	                            je 0x40007d7	      1546	opncls.c	FUNCTION_36	ELSE_2	IF_16
0x40007cd	    0x41bc2f000000	                          mov r12d, 0x2f	       148	string3.h	FUNCTION_73	CALL_3
0x40007d3	        0x66448922	                    mov word [rdx], r12w	       148	string3.h	FUNCTION_73	CALL_3
0x40007d7	          0x4889ee	                            mov rsi, rbp	       148	string3.h	FUNCTION_73	CALL_3
0x40007da	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_73	CALL_3
0x40007dd	      0xe800000000	                          call 0x40007e2	       148	string3.h	FUNCTION_73	CALL_3
0x40007e2	        0x488b3424	                    mov rsi, qword [rsp]	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x40007e6	          0x4889df	                            mov rdi, rbx	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x40007e9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x40007ee	            0xffd0	                                call rax	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x40007f0	            0x85c0	                           test eax, eax	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x40007f2	     0xf858afdffff	                           jne 0x4000582	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x40007f8	          0x4889df	                            mov rdi, rbx	      1555	opncls.c	FUNCTION_36	CALL_32
0x40007fb	            0x31db	                            xor ebx, ebx	      1556	opncls.c	FUNCTION_36
0x40007fd	      0xe800000000	                          call 0x4000802	      1555	opncls.c	FUNCTION_36	CALL_32
0x4000802	      0xe97bfdffff	                           jmp 0x4000582	      1555	opncls.c	FUNCTION_36	CALL_32
0x4000807	            0x31db	                            xor ebx, ebx	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4000809	      0xe906fdffff	                           jmp 0x4000514	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x400080e	          0x4889c7	                            mov rdi, rax	      1442	opncls.c	FUNCTION_36	IF_4	CALL_4
0x4000811	      0xe800000000	                          call 0x4000816	      1442	opncls.c	FUNCTION_36	IF_4	CALL_4
0x4000816	      0xbf10000000	                           mov edi, 0x10	      1443	opncls.c	FUNCTION_36	IF_4	CALL_5
0x400081b	      0xe800000000	                          call 0x4000820	      1443	opncls.c	FUNCTION_36	IF_4	CALL_5
0x4000820	            0x31c0	                            xor eax, eax	      1444	opncls.c	FUNCTION_36	IF_4
0x4000822	      0xe976fdffff	                           jmp 0x400059d	      1444	opncls.c	FUNCTION_36	IF_4
0x4000827	          0x4889c3	                            mov rbx, rax	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x400082a	      0xe9e5fcffff	                           jmp 0x4000514	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x400082f	          0x4531f6	                          xor r14d, r14d	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4000832	      0xe971fcffff	                           jmp 0x40004a8	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4000837	        0x488d7801	                      lea rdi, [rax + 1]	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x400083b	          0x4989c6	                            mov r14, rax	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x400083e	      0xe96afcffff	                           jmp 0x40004ad	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4000843	      0xbf05000000	                              mov edi, 5	      1431	opncls.c	FUNCTION_36	IF_2	CALL_2
0x4000848	      0xe800000000	                          call 0x400084d	      1431	opncls.c	FUNCTION_36	IF_2	CALL_2
0x400084d	            0x31c0	                            xor eax, eax	      1432	opncls.c	FUNCTION_36	IF_2
0x400084f	      0xe949fdffff	                           jmp 0x400059d	      1432	opncls.c	FUNCTION_36	IF_2
0x4000854	            0x31c0	                            xor eax, eax	      1438	opncls.c	FUNCTION_36	IF_3
0x4000856	      0xe942fdffff	                           jmp 0x400059d	      1438	opncls.c	FUNCTION_36	IF_3
0x400085b	          0x4889ef	                            mov rdi, rbp	      1456	opncls.c	FUNCTION_36	IF_5	IF_7	CALL_9
0x400085e	      0xe800000000	                          call 0x4000863	      1456	opncls.c	FUNCTION_36	IF_5	IF_7	CALL_9
0x4000863	            0x31c0	                            xor eax, eax	      1457	opncls.c	FUNCTION_36	IF_5	IF_7
0x4000865	      0xe933fdffff	                           jmp 0x400059d	      1457	opncls.c	FUNCTION_36	IF_5	IF_7
bfd_make_readable	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,3:CALL,3	60
0x4000f70	              0x53	                                push rbx	       877	opncls.c	FUNCTION_24
0x4000f71	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       878	opncls.c	FUNCTION_24	IF_1
0x4000f75	            0x89c2	                            mov edx, eax	       878	opncls.c	FUNCTION_24	IF_1
0x4000f77	          0x83e218	                           and edx, 0x18	       878	opncls.c	FUNCTION_24	IF_1
0x4000f7a	          0x80fa10	                            cmp dl, 0x10	       878	opncls.c	FUNCTION_24	IF_1
0x4000f7d	            0x7509	                           jne 0x4000f88	       878	opncls.c	FUNCTION_24	IF_1
0x4000f7f	        0xf6474601	               test byte [rdi + 0x46], 1	       878	opncls.c	FUNCTION_24	IF_1
0x4000f83	          0x4889fb	                            mov rbx, rdi	       878	opncls.c	FUNCTION_24	IF_1
0x4000f86	            0x7518	                           jne 0x4000fa0	       878	opncls.c	FUNCTION_24	IF_1
0x4000f88	      0xbf05000000	                              mov edi, 5	       880	opncls.c	FUNCTION_24	IF_1	CALL_1
0x4000f8d	      0xe800000000	                          call 0x4000f92	       880	opncls.c	FUNCTION_24	IF_1	CALL_1
0x4000f92	            0x31c0	                            xor eax, eax	       881	opncls.c	FUNCTION_24	IF_1
0x4000f94	              0x5b	                                 pop rbx	       915	opncls.c	FUNCTION_24
0x4000f95	              0xc3	                                     ret	       915	opncls.c	FUNCTION_24
0x4000f96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       915	opncls.c	FUNCTION_24
0x4000fa0	        0x488b5708	                mov rdx, qword [rdi + 8]	       884	opncls.c	FUNCTION_24	IF_2
0x4000fa4	          0x83e007	                              and eax, 7	       884	opncls.c	FUNCTION_24	IF_2
0x4000fa7	    0xff94c2f00000	        call qword [rdx + rax*8 + 0xf0] 	       884	opncls.c	FUNCTION_24	IF_2
0x4000fae	            0x85c0	                           test eax, eax	       884	opncls.c	FUNCTION_24	IF_2
0x4000fb0	            0x750e	                           jne 0x4000fc0	       884	opncls.c	FUNCTION_24	IF_2
0x4000fb2	            0x31c0	                            xor eax, eax	       885	opncls.c	FUNCTION_24	IF_2
0x4000fb4	              0x5b	                                 pop rbx	       915	opncls.c	FUNCTION_24
0x4000fb5	              0xc3	                                     ret	       915	opncls.c	FUNCTION_24
0x4000fb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       915	opncls.c	FUNCTION_24
0x4000fc0	        0x488b4308	                mov rax, qword [rbx + 8]	       887	opncls.c	FUNCTION_24	IF_3
0x4000fc4	          0x4889df	                            mov rdi, rbx	       887	opncls.c	FUNCTION_24	IF_3
0x4000fc7	    0xff9010010000	                call qword [rax + 0x110]	       887	opncls.c	FUNCTION_24	IF_3
0x4000fcd	            0x85c0	                           test eax, eax	       887	opncls.c	FUNCTION_24	IF_3
0x4000fcf	            0x74e1	                            je 0x4000fb2	       887	opncls.c	FUNCTION_24	IF_3
0x4000fd1	         0xfb64347	           movzx eax, byte [rbx + 0x47] 	       900	opncls.c	FUNCTION_24
0x4000fd5	        0x806344f8	             and byte [rbx + 0x44], 0xf8	       893	opncls.c	FUNCTION_24
0x4000fd9	          0x4889df	                            mov rdi, rbx	       911	opncls.c	FUNCTION_24	CALL_2
0x4000fdc	    0x48c783c00000	               mov qword [rbx + 0xc0], 0	       890	opncls.c	FUNCTION_24
0x4000fe7	    0x48c743300000	               mov qword [rbx + 0x30], 0	       892	opncls.c	FUNCTION_24
0x4000fef	    0x48c783d00000	               mov qword [rbx + 0xd0], 0	       894	opncls.c	FUNCTION_24
0x4000ffa	    0x48c743580000	               mov qword [rbx + 0x58], 0	       895	opncls.c	FUNCTION_24
0x4001002	    0xc783a0000000	               mov dword [rbx + 0xa0], 0	       898	opncls.c	FUNCTION_24
0x400100c	          0x83e0b5	                     and eax, 0xffffffb5	       900	opncls.c	FUNCTION_24
0x400100f	    0x48c783000100	              mov qword [rbx + 0x100], 0	       899	opncls.c	FUNCTION_24
0x400101a	          0x884347	               mov byte [rbx + 0x47], al	       900	opncls.c	FUNCTION_24
0x400101d	    0x814b44000001	          or dword [rbx + 0x44], 0x10000	       901	opncls.c	FUNCTION_24
0x4001024	         0xfb64347	           movzx eax, byte [rbx + 0x47] 	       902	opncls.c	FUNCTION_24
0x4001028	    0x48c783900000	               mov qword [rbx + 0x90], 0	       906	opncls.c	FUNCTION_24
0x4001033	    0xc783b8000000	               mov dword [rbx + 0xb8], 0	       907	opncls.c	FUNCTION_24
0x400103d	    0x48c783b00000	               mov qword [rbx + 0xb0], 0	       908	opncls.c	FUNCTION_24
0x4001048	    0x48c783f80000	               mov qword [rbx + 0xf8], 0	       909	opncls.c	FUNCTION_24
0x4001053	          0x83e0ef	                     and eax, 0xffffffef	       902	opncls.c	FUNCTION_24
0x4001056	          0x83c804	                               or eax, 4	       904	opncls.c	FUNCTION_24
0x4001059	          0x884347	               mov byte [rbx + 0x47], al	       904	opncls.c	FUNCTION_24
0x400105c	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       905	opncls.c	FUNCTION_24
0x4001060	          0x83e0e7	                     and eax, 0xffffffe7	       905	opncls.c	FUNCTION_24
0x4001063	          0x83c808	                               or eax, 8	       905	opncls.c	FUNCTION_24
0x4001066	          0x884344	               mov byte [rbx + 0x44], al	       905	opncls.c	FUNCTION_24
0x4001069	      0xe800000000	                          call 0x400106e	       911	opncls.c	FUNCTION_24	CALL_2
0x400106e	          0x4889df	                            mov rdi, rbx	       912	opncls.c	FUNCTION_24	CALL_3
0x4001071	      0xbe01000000	                              mov esi, 1	       912	opncls.c	FUNCTION_24	CALL_3
0x4001076	      0xe800000000	                          call 0x400107b	       912	opncls.c	FUNCTION_24	CALL_3
0x400107b	      0xb801000000	                              mov eax, 1	       914	opncls.c	FUNCTION_24
0x4001080	              0x5b	                                 pop rbx	       915	opncls.c	FUNCTION_24
0x4001081	              0xc3	                                     ret	       915	opncls.c	FUNCTION_24
bfd_create_gnu_debuglink_section	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,4:CALL,8	50
0x40019d0	          0x4885ff	                           test rdi, rdi	      1672	opncls.c	FUNCTION_40	IF_1
0x40019d3	            0x4154	                                push r12	      1667	opncls.c	FUNCTION_40
0x40019d5	              0x55	                                push rbp	      1667	opncls.c	FUNCTION_40
0x40019d6	              0x53	                                push rbx	      1667	opncls.c	FUNCTION_40
0x40019d7	            0x7477	                            je 0x4001a50	      1672	opncls.c	FUNCTION_40	IF_1
0x40019d9	          0x4885f6	                           test rsi, rsi	      1672	opncls.c	FUNCTION_40	IF_1
0x40019dc	            0x7472	                            je 0x4001a50	      1672	opncls.c	FUNCTION_40	IF_1
0x40019de	          0x4889fd	                            mov rbp, rdi	      1672	opncls.c	FUNCTION_40	IF_1
0x40019e1	          0x4889f7	                            mov rdi, rsi	      1679	opncls.c	FUNCTION_40	CALL_2
0x40019e4	      0xe800000000	                          call 0x40019e9	      1679	opncls.c	FUNCTION_40	CALL_2
0x40019e9	      0xbe00000000	                              mov esi, 0	      1681	opncls.c	FUNCTION_40	CALL_3
0x40019ee	          0x4889ef	                            mov rdi, rbp	      1681	opncls.c	FUNCTION_40	CALL_3
0x40019f1	          0x4989c4	                            mov r12, rax	      1679	opncls.c	FUNCTION_40	CALL_2
0x40019f4	      0xe800000000	                          call 0x40019f9	      1681	opncls.c	FUNCTION_40	CALL_3
0x40019f9	          0x4885c0	                           test rax, rax	      1682	opncls.c	FUNCTION_40	IF_2
0x40019fc	            0x7552	                           jne 0x4001a50	      1682	opncls.c	FUNCTION_40	IF_2
0x40019fe	      0xba08210000	                         mov edx, 0x2108	      1690	opncls.c	FUNCTION_40	CALL_5
0x4001a03	      0xbe00000000	                              mov esi, 0	      1690	opncls.c	FUNCTION_40	CALL_5
0x4001a08	          0x4889ef	                            mov rdi, rbp	      1690	opncls.c	FUNCTION_40	CALL_5
0x4001a0b	      0xe800000000	                          call 0x4001a10	      1690	opncls.c	FUNCTION_40	CALL_5
0x4001a10	          0x4885c0	                           test rax, rax	      1691	opncls.c	FUNCTION_40	IF_3
0x4001a13	          0x4889c3	                            mov rbx, rax	      1690	opncls.c	FUNCTION_40	CALL_5
0x4001a16	            0x7450	                            je 0x4001a68	      1691	opncls.c	FUNCTION_40	IF_3
0x4001a18	          0x4c89e7	                            mov rdi, r12	      1696	opncls.c	FUNCTION_40	CALL_6
0x4001a1b	      0xe800000000	                          call 0x4001a20	      1696	opncls.c	FUNCTION_40	CALL_6
0x4001a20	        0x488d5004	                      lea rdx, [rax + 4]	      1697	opncls.c	FUNCTION_40
0x4001a24	          0x4889de	                            mov rsi, rbx	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x4001a27	          0x4889ef	                            mov rdi, rbp	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x4001a2a	        0x4883e2fc	             and rdx, 0xfffffffffffffffc	      1698	opncls.c	FUNCTION_40
0x4001a2e	        0x4883c204	                              add rdx, 4	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x4001a32	      0xe800000000	                          call 0x4001a37	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x4001a37	            0x85c0	                           test eax, eax	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x4001a39	            0x742d	                            je 0x4001a68	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x4001a3b	    0xc74370020000	               mov dword [rbx + 0x70], 2	      1696	bfd.h	FUNCTION_77
0x4001a42	          0x4889d8	                            mov rax, rbx	      1710	opncls.c	FUNCTION_40
0x4001a45	              0x5b	                                 pop rbx	      1711	opncls.c	FUNCTION_40
0x4001a46	              0x5d	                                 pop rbp	      1711	opncls.c	FUNCTION_40
0x4001a47	            0x415c	                                 pop r12	      1711	opncls.c	FUNCTION_40
0x4001a49	              0xc3	                                     ret	      1711	opncls.c	FUNCTION_40
0x4001a4a	    0x660f1f440000	                    nop word [rax + rax]	      1711	opncls.c	FUNCTION_40
0x4001a50	      0xbf05000000	                              mov edi, 5	      1674	opncls.c	FUNCTION_40	IF_1	CALL_1
0x4001a55	      0xe800000000	                          call 0x4001a5a	      1674	opncls.c	FUNCTION_40	IF_1	CALL_1
0x4001a5a	              0x5b	                                 pop rbx	      1711	opncls.c	FUNCTION_40
0x4001a5b	            0x31c0	                            xor eax, eax	      1675	opncls.c	FUNCTION_40	IF_1
0x4001a5d	              0x5d	                                 pop rbp	      1711	opncls.c	FUNCTION_40
0x4001a5e	            0x415c	                                 pop r12	      1711	opncls.c	FUNCTION_40
0x4001a60	              0xc3	                                     ret	      1711	opncls.c	FUNCTION_40
0x4001a61	     0xf1f80000000	                         nop dword [rax]	      1711	opncls.c	FUNCTION_40
0x4001a68	            0x31c0	                            xor eax, eax	      1692	opncls.c	FUNCTION_40	IF_3
0x4001a6a	            0xebd9	                           jmp 0x4001a45	      1692	opncls.c	FUNCTION_40	IF_3
check_build_id_file	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:IF,3:CALL,9	63
0x4001370	          0x4885ff	                           test rdi, rdi	      1994	opncls.c	FUNCTION_44	CALL_1
0x4001373	            0x4154	                                push r12	      1988	opncls.c	FUNCTION_44
0x4001375	          0x4989f4	                            mov r12, rsi	      1988	opncls.c	FUNCTION_44
0x4001378	              0x55	                                push rbp	      1988	opncls.c	FUNCTION_44
0x4001379	              0x53	                                push rbx	      1988	opncls.c	FUNCTION_44
0x400137a	          0x4889fb	                            mov rbx, rdi	      1988	opncls.c	FUNCTION_44
0x400137d	     0xf848d000000	                            je 0x4001410	      1994	opncls.c	FUNCTION_44	CALL_1
0x4001383	          0x4d85e4	                           test r12, r12	      1995	opncls.c	FUNCTION_44	CALL_2
0x4001386	     0xf849c000000	                            je 0x4001428	      1995	opncls.c	FUNCTION_44	CALL_2
0x400138c	            0x31f6	                            xor esi, esi	       288	opncls.c	FUNCTION_6	CALL_1
0x400138e	          0x4889df	                            mov rdi, rbx	       288	opncls.c	FUNCTION_6	CALL_1
0x4001391	      0xb9ffffffff	                     mov ecx, 0xffffffff	       288	opncls.c	FUNCTION_6	CALL_1
0x4001396	      0xba00000000	                              mov edx, 0	       288	opncls.c	FUNCTION_6	CALL_1
0x400139b	            0x31db	                            xor ebx, ebx	      1999	opncls.c	FUNCTION_44	IF_1
0x400139d	      0xe800000000	                          call 0x40013a2	       288	opncls.c	FUNCTION_6	CALL_1
0x40013a2	          0x4885c0	                           test rax, rax	      1998	opncls.c	FUNCTION_44	IF_1
0x40013a5	          0x4889c5	                            mov rbp, rax	       288	opncls.c	FUNCTION_6	CALL_1
0x40013a8	            0x7436	                            je 0x40013e0	      1998	opncls.c	FUNCTION_44	IF_1
0x40013aa	          0x4889c7	                            mov rdi, rax	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x40013ad	      0xbe01000000	                              mov esi, 1	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x40013b2	      0xe800000000	                          call 0x40013b7	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x40013b7	            0x85c0	                           test eax, eax	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x40013b9	            0x89c3	                            mov ebx, eax	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x40013bb	          0x4889ef	                            mov rdi, rbp	      2004	opncls.c	FUNCTION_44	IF_2	CALL_5
0x40013be	            0x741b	                            je 0x40013db	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x40013c0	      0xe84bfdffff	                   call sym.get_build_id	      2008	opncls.c	FUNCTION_44	CALL_6
0x40013c5	          0x4885c0	                           test rax, rax	      2009	opncls.c	FUNCTION_44	IF_3
0x40013c8	            0x7476	                            je 0x4001440	      2009	opncls.c	FUNCTION_44	IF_3
0x40013ca	        0x498b3424	                    mov rsi, qword [r12]	      2015	opncls.c	FUNCTION_44
0x40013ce	          0x488b10	                    mov rdx, qword [rax]	      2017	opncls.c	FUNCTION_44
0x40013d1	            0x31db	                            xor ebx, ebx	      2018	opncls.c	FUNCTION_44	CALL_8
0x40013d3	          0x483b16	                    cmp rdx, qword [rsi]	      2018	opncls.c	FUNCTION_44	CALL_8
0x40013d6	            0x7418	                            je 0x40013f0	      2018	opncls.c	FUNCTION_44	CALL_8
0x40013d8	          0x4889ef	                            mov rdi, rbp	      2020	opncls.c	FUNCTION_44	CALL_9
0x40013db	      0xe800000000	                          call 0x40013e0	      2020	opncls.c	FUNCTION_44	CALL_9
0x40013e0	            0x89d8	                            mov eax, ebx	      2023	opncls.c	FUNCTION_44
0x40013e2	              0x5b	                                 pop rbx	      2023	opncls.c	FUNCTION_44
0x40013e3	              0x5d	                                 pop rbp	      2023	opncls.c	FUNCTION_44
0x40013e4	            0x415c	                                 pop r12	      2023	opncls.c	FUNCTION_44
0x40013e6	              0xc3	                                     ret	      2023	opncls.c	FUNCTION_44
0x40013e7	    0x660f1f840000	                    nop word [rax + rax]	      2023	opncls.c	FUNCTION_44
0x40013f0	        0x488d7808	                      lea rdi, [rax + 8]	      2018	opncls.c	FUNCTION_44	CALL_8
0x40013f4	        0x4883c608	                              add rsi, 8	      2018	opncls.c	FUNCTION_44	CALL_8
0x40013f8	            0x31db	                            xor ebx, ebx	      2018	opncls.c	FUNCTION_44	CALL_8
0x40013fa	      0xe800000000	                          call 0x40013ff	      2018	opncls.c	FUNCTION_44	CALL_8
0x40013ff	            0x85c0	                           test eax, eax	      2018	opncls.c	FUNCTION_44	CALL_8
0x4001401	           0xf94c3	                                 sete bl	      2018	opncls.c	FUNCTION_44	CALL_8
0x4001404	            0xebd2	                           jmp 0x40013d8	      2018	opncls.c	FUNCTION_44	CALL_8
0x4001406	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2018	opncls.c	FUNCTION_44	CALL_8
0x4001410	      0xbeca070000	                          mov esi, 0x7ca	      1994	opncls.c	FUNCTION_44	CALL_1
0x4001415	      0xbf00000000	                              mov edi, 0	      1994	opncls.c	FUNCTION_44	CALL_1
0x400141a	      0xe800000000	                          call 0x400141f	      1994	opncls.c	FUNCTION_44	CALL_1
0x400141f	      0xe95fffffff	                           jmp 0x4001383	      1994	opncls.c	FUNCTION_44	CALL_1
0x4001424	         0xf1f4000	                         nop dword [rax]	      1994	opncls.c	FUNCTION_44	CALL_1
0x4001428	      0xbecb070000	                          mov esi, 0x7cb	      1995	opncls.c	FUNCTION_44	CALL_2
0x400142d	      0xbf00000000	                              mov edi, 0	      1995	opncls.c	FUNCTION_44	CALL_2
0x4001432	      0xe800000000	                          call 0x4001437	      1995	opncls.c	FUNCTION_44	CALL_2
0x4001437	      0xe950ffffff	                           jmp 0x400138c	      1995	opncls.c	FUNCTION_44	CALL_2
0x400143c	         0xf1f4000	                         nop dword [rax]	      1995	opncls.c	FUNCTION_44	CALL_2
0x4001440	          0x4889ef	                            mov rdi, rbp	      2011	opncls.c	FUNCTION_44	IF_3	CALL_7
0x4001443	            0x31db	                            xor ebx, ebx	      2012	opncls.c	FUNCTION_44	IF_3
0x4001445	      0xe800000000	                          call 0x400144a	      2011	opncls.c	FUNCTION_44	IF_3	CALL_7
0x400144a	            0xeb94	                           jmp 0x40013e0	      2012	opncls.c	FUNCTION_44	IF_3
