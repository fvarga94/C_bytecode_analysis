ar_addlib	FOR,0:DO,0:SWITCH,0:ELSE,1:WHILE,0:functions,0:CALL,4:IF,2	32
0x4000480	    0x48833d000000	               cmp qword [0x04000488], 0	       228	arsup.c	FUNCTION_8	IF_1
0x4000488	              0x53	                                push rbx	       227	arsup.c	FUNCTION_8
0x4000489	            0x7425	                            je 0x40004b0	       228	arsup.c	FUNCTION_8	IF_1
0x400048b	          0x4889f3	                            mov rbx, rsi	       228	arsup.c	FUNCTION_8	IF_1
0x400048e	            0x31f6	                            xor esi, esi	       237	arsup.c	FUNCTION_8	ELSE_1	CALL_3
0x4000490	      0xe800000000	                          call 0x4000495	       237	arsup.c	FUNCTION_8	ELSE_1	CALL_3
0x4000495	          0x4885c0	                           test rax, rax	       238	arsup.c	FUNCTION_8	ELSE_1	IF_2
0x4000498	            0x7451	                            je 0x40004eb	       238	arsup.c	FUNCTION_8	ELSE_1	IF_2
0x400049a	          0x4889da	                            mov rdx, rbx	       239	arsup.c	FUNCTION_8	ELSE_1	CALL_4
0x400049d	      0xbe00000000	                              mov esi, 0	       239	arsup.c	FUNCTION_8	ELSE_1	CALL_4
0x40004a2	          0x4889c7	                            mov rdi, rax	       239	arsup.c	FUNCTION_8	ELSE_1	CALL_4
0x40004a5	              0x5b	                                 pop rbx	       243	arsup.c	FUNCTION_8
0x40004a6	      0xe9e5fbffff	                   jmp sym.map_over_list	       239	arsup.c	FUNCTION_8	ELSE_1	CALL_4
0x40004ab	       0xf1f440000	                   nop dword [rax + rax]	       239	arsup.c	FUNCTION_8	ELSE_1	CALL_4
0x40004b0	            0x31ff	                            xor edi, edi	       230	arsup.c	FUNCTION_8	IF_1	CALL_1
0x40004b2	    0x488b1d000000	            mov rbx, qword [0x040004b9] 	       230	arsup.c	FUNCTION_8	IF_1	CALL_1
0x40004b9	      0xba05000000	                              mov edx, 5	       230	arsup.c	FUNCTION_8	IF_1	CALL_1
0x40004be	      0xbe00000000	                              mov esi, 0	       230	arsup.c	FUNCTION_8	IF_1	CALL_1
0x40004c3	      0xe800000000	                          call 0x40004c8	       230	arsup.c	FUNCTION_8	IF_1	CALL_1
0x40004c8	    0x488b3d000000	            mov rdi, qword [0x040004cf] 	        97	stdio2.h	CALL_12
0x40004cf	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x40004d2	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_12
0x40004d5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x40004d7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x40004dc	      0xe800000000	                          call 0x40004e1	        97	stdio2.h	CALL_12
0x40004e1	    0x8b0500000000	            mov eax, dword [0x040004e7] 	       144	arsup.c	FUNCTION_5	IF_1
0x40004e7	            0x85c0	                           test eax, eax	       144	arsup.c	FUNCTION_5	IF_1
0x40004e9	            0x7402	                            je 0x40004ed	       144	arsup.c	FUNCTION_5	IF_1
0x40004eb	              0x5b	                                 pop rbx	       243	arsup.c	FUNCTION_8
0x40004ec	              0xc3	                                     ret	       243	arsup.c	FUNCTION_8
0x40004ed	      0xbf09000000	                              mov edi, 9	       145	arsup.c	FUNCTION_5	CALL_1
0x40004f2	      0xe800000000	                          call 0x40004f7	       145	arsup.c	FUNCTION_5	CALL_1
ar_delete	FOR,0:DO,0:SWITCH,0:ELSE,2:WHILE,2:functions,0:CALL,5:IF,3	81
0x4000610	            0x4155	                                push r13	       290	arsup.c	FUNCTION_11
0x4000612	            0x4154	                                push r12	       290	arsup.c	FUNCTION_11
0x4000614	              0x55	                                push rbp	       290	arsup.c	FUNCTION_11
0x4000615	              0x53	                                push rbx	       290	arsup.c	FUNCTION_11
0x4000616	        0x4883ec08	                              sub rsp, 8	       290	arsup.c	FUNCTION_11
0x400061a	    0x488b2d000000	            mov rbp, qword [0x04000621] 	       291	arsup.c	FUNCTION_11	IF_1
0x4000621	          0x4885ed	                           test rbp, rbp	       291	arsup.c	FUNCTION_11	IF_1
0x4000624	     0xf84e6000000	                            je 0x4000710	       291	arsup.c	FUNCTION_11	IF_1
0x400062a	          0x4885ff	                           test rdi, rdi	       298	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x400062d	          0x4989fc	                            mov r12, rdi	       298	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000630	     0xf8415010000	                            je 0x400074b	       298	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000636	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       298	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000640	    0x488b9de00000	            mov rbx, qword [rbp + 0xe0] 	       301	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000647	          0x4531ed	                          xor r13d, r13d	       305	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x400064a	    0x4881c5e00000	                           add rbp, 0xe0	       302	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000651	          0x4885db	                           test rbx, rbx	       305	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x4000654	            0x7527	                           jne 0x400067d	       305	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x4000656	            0xeb68	                           jmp 0x40006c0	       305	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x4000658	     0xf1f84000000	                   nop dword [rax + rax]	       305	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x4000660	    0x488b83d80000	            mov rax, qword [rbx + 0xd8] 	       309	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2
0x4000667	    0x41bd01000000	                             mov r13d, 1	       310	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2
0x400066d	        0x48894500	                    mov qword [rbp], rax	       309	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2
0x4000671	    0x488b9bd80000	            mov rbx, qword [rbx + 0xd8] 	       315	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x4000678	          0x4885db	                           test rbx, rbx	       305	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x400067b	            0x7423	                            je 0x40006a0	       305	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x400067d	        0x498b3424	                    mov rsi, qword [r12]	       307	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_3
0x4000681	          0x488b3b	                    mov rdi, qword [rbx]	       307	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_3
0x4000684	      0xe800000000	                          call 0x4000689	       307	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_3
0x4000689	            0x85c0	                           test eax, eax	       307	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_3
0x400068b	            0x74d3	                            je 0x4000660	       307	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_3
0x400068d	    0x488dabd80000	                   lea rbp, [rbx + 0xd8]	       313	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2	ELSE_2
0x4000694	    0x488b9bd80000	            mov rbx, qword [rbx + 0xd8] 	       315	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x400069b	          0x4885db	                           test rbx, rbx	       305	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x400069e	            0x75dd	                           jne 0x400067d	       305	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	WHILE_2
0x40006a0	          0x4585ed	                         test r13d, r13d	       318	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3
0x40006a3	            0x741b	                            je 0x40006c0	       318	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3
0x40006a5	      0x4d8b642408	                mov r12, qword [r12 + 8]	       325	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x40006aa	          0x4d85e4	                           test r12, r12	       298	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x40006ad	     0xf8498000000	                            je 0x400074b	       298	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x40006b3	    0x488b2d000000	            mov rbp, qword [0x040006ba] 	       298	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x40006ba	            0xeb84	                           jmp 0x4000640	       298	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x40006bc	         0xf1f4000	                         nop dword [rax]	       298	arsup.c	FUNCTION_11	ELSE_1	WHILE_1
0x40006c0	            0x31ff	                            xor edi, edi	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_4
0x40006c2	        0x498b2c24	                    mov rbp, qword [r12]	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_4
0x40006c6	    0x488b1d000000	            mov rbx, qword [0x040006cd] 	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_4
0x40006cd	      0xba05000000	                              mov edx, 5	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_4
0x40006d2	      0xbe00000000	                              mov esi, 0	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_4
0x40006d7	      0xe800000000	                          call 0x40006dc	       320	arsup.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3	CALL_4
0x40006dc	    0x488b3d000000	            mov rdi, qword [0x040006e3] 	        97	stdio2.h	CALL_12
0x40006e3	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x40006e6	          0x4989e8	                             mov r8, rbp	        97	stdio2.h	CALL_12
0x40006e9	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x40006eb	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_12
0x40006ee	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x40006f3	      0xe800000000	                          call 0x40006f8	        97	stdio2.h	CALL_12
0x40006f8	    0x8b0500000000	            mov eax, dword [0x040006fe] 	       144	arsup.c	FUNCTION_5	IF_1
0x40006fe	            0x85c0	                           test eax, eax	       144	arsup.c	FUNCTION_5	IF_1
0x4000700	            0x75a3	                           jne 0x40006a5	       144	arsup.c	FUNCTION_5	IF_1
0x4000702	      0xbf09000000	                              mov edi, 9	       145	arsup.c	FUNCTION_5	CALL_1
0x4000707	      0xe800000000	                          call 0x400070c	       145	arsup.c	FUNCTION_5	CALL_1
0x400070c	         0xf1f4000	                         nop dword [rax]	       145	arsup.c	FUNCTION_5	CALL_1
0x4000710	            0x31ff	                            xor edi, edi	       293	arsup.c	FUNCTION_11	IF_1	CALL_1
0x4000712	    0x488b1d000000	            mov rbx, qword [0x04000719] 	       293	arsup.c	FUNCTION_11	IF_1	CALL_1
0x4000719	      0xba05000000	                              mov edx, 5	       293	arsup.c	FUNCTION_11	IF_1	CALL_1
0x400071e	      0xbe00000000	                              mov esi, 0	       293	arsup.c	FUNCTION_11	IF_1	CALL_1
0x4000723	      0xe800000000	                          call 0x4000728	       293	arsup.c	FUNCTION_11	IF_1	CALL_1
0x4000728	    0x488b3d000000	            mov rdi, qword [0x0400072f] 	        97	stdio2.h	CALL_12
0x400072f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x4000732	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_12
0x4000735	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x4000737	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x400073c	      0xe800000000	                          call 0x4000741	        97	stdio2.h	CALL_12
0x4000741	    0x8b1500000000	            mov edx, dword [0x04000747] 	       144	arsup.c	FUNCTION_5	IF_1
0x4000747	            0x85d2	                           test edx, edx	       144	arsup.c	FUNCTION_5	IF_1
0x4000749	            0x74b7	                            je 0x4000702	       144	arsup.c	FUNCTION_5	IF_1
0x400074b	        0x4883c408	                              add rsp, 8	       328	arsup.c	FUNCTION_11
0x400074f	              0x5b	                                 pop rbx	       328	arsup.c	FUNCTION_11
0x4000750	              0x5d	                                 pop rbp	       328	arsup.c	FUNCTION_11
0x4000751	            0x415c	                                 pop r12	       328	arsup.c	FUNCTION_11
0x4000753	            0x415d	                                 pop r13	       328	arsup.c	FUNCTION_11
0x4000755	              0xc3	                                     ret	       328	arsup.c	FUNCTION_11
ar_replace	FOR,0:DO,0:SWITCH,0:ELSE,4:WHILE,2:functions,0:CALL,10:IF,5	140
0x4000810	            0x4157	                                push r15	       355	arsup.c	FUNCTION_13
0x4000812	            0x4156	                                push r14	       355	arsup.c	FUNCTION_13
0x4000814	            0x4155	                                push r13	       355	arsup.c	FUNCTION_13
0x4000816	            0x4154	                                push r12	       355	arsup.c	FUNCTION_13
0x4000818	              0x55	                                push rbp	       355	arsup.c	FUNCTION_13
0x4000819	              0x53	                                push rbx	       355	arsup.c	FUNCTION_13
0x400081a	        0x4883ec08	                              sub rsp, 8	       355	arsup.c	FUNCTION_13
0x400081e	    0x4c8b25000000	            mov r12, qword [0x04000825] 	       356	arsup.c	FUNCTION_13	IF_1
0x4000825	          0x4d85e4	                           test r12, r12	       356	arsup.c	FUNCTION_13	IF_1
0x4000828	     0xf84c2010000	                            je 0x40009f0	       356	arsup.c	FUNCTION_13	IF_1
0x400082e	          0x4885ff	                           test rdi, rdi	       363	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x4000831	          0x4889fd	                            mov rbp, rdi	       363	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x4000834	     0xf8452010000	                            je 0x400098c	       363	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x400083a	    0x660f1f440000	                    nop word [rax + rax]	       363	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x4000840	    0x498b9c24e000	            mov rbx, qword [r12 + 0xe0] 	       366	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x4000848	    0x4981c4e00000	                           add r12, 0xe0	       367	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x400084f	          0x4885db	                           test rbx, rbx	       370	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x4000852	     0xf84d8000000	                            je 0x4000930	       370	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x4000858	          0x4531ed	                          xor r13d, r13d	       370	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x400085b	            0xeb16	                           jmp 0x4000873	       370	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x400085d	           0xf1f00	                         nop dword [rax]	       370	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x4000860	    0x4c8da3d80000	                   lea r12, [rbx + 0xd8]	       392	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	ELSE_3
0x4000867	    0x488b9bd80000	            mov rbx, qword [rbx + 0xd8] 	       394	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x400086e	          0x4885db	                           test rbx, rbx	       370	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x4000871	            0x7444	                            je 0x40008b7	       370	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x4000873	        0x488b7500	                    mov rsi, qword [rbp]	       372	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_3
0x4000877	          0x488b3b	                    mov rdi, qword [rbx]	       372	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_3
0x400087a	      0xe800000000	                          call 0x400087f	       372	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_3
0x400087f	            0x85c0	                           test eax, eax	       372	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_3
0x4000881	            0x75dd	                           jne 0x4000860	       372	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_3
0x4000883	        0x488b7d00	                    mov rdi, qword [rbp]	       375	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x4000887	            0x31f6	                            xor esi, esi	       375	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x4000889	      0xe800000000	                          call 0x400088e	       375	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x400088e	          0x4885c0	                           test rax, rax	       377	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3
0x4000891	            0x7445	                            je 0x40008d8	       377	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3
0x4000893	        0x49890424	                    mov qword [r12], rax	       385	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	ELSE_2
0x4000897	    0x488b93d80000	            mov rdx, qword [rbx + 0xd8] 	       386	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	ELSE_2
0x400089e	    0x41bd01000000	                             mov r13d, 1	       387	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	ELSE_2
0x40008a4	    0x488990d80000	             mov qword [rax + 0xd8], rdx	       386	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	ELSE_2
0x40008ab	    0x488b9bd80000	            mov rbx, qword [rbx + 0xd8] 	       394	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x40008b2	          0x4885db	                           test rbx, rbx	       370	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x40008b5	            0x75bc	                           jne 0x4000873	       370	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2
0x40008b7	          0x4585ed	                         test r13d, r13d	       397	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4
0x40008ba	            0x7474	                            je 0x4000930	       397	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4
0x40008bc	        0x488b6d08	                mov rbp, qword [rbp + 8]	       413	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	ELSE_4
0x40008c0	          0x4885ed	                           test rbp, rbp	       363	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x40008c3	     0xf84c3000000	                            je 0x400098c	       363	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x40008c9	    0x4c8b25000000	            mov r12, qword [0x040008d0] 	       363	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x40008d0	      0xe96bffffff	                           jmp 0x4000840	       363	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x40008d5	           0xf1f00	                         nop dword [rax]	       363	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x40008d8	            0x31ff	                            xor edi, edi	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_5
0x40008da	        0x4c8b7d00	                    mov r15, qword [rbp]	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_5
0x40008de	    0x4c8b35000000	            mov r14, qword [0x040008e5] 	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_5
0x40008e5	      0xba05000000	                              mov edx, 5	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_5
0x40008ea	      0xbe00000000	                              mov esi, 0	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_5
0x40008ef	      0xe800000000	                          call 0x40008f4	       379	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	WHILE_2	IF_2	IF_3	CALL_5
0x40008f4	    0x488b3d000000	            mov rdi, qword [0x040008fb] 	        97	stdio2.h	CALL_12
0x40008fb	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x40008fe	          0x4d89f8	                             mov r8, r15	        97	stdio2.h	CALL_12
0x4000901	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x4000903	          0x4c89f1	                            mov rcx, r14	        97	stdio2.h	CALL_12
0x4000906	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x400090b	      0xe800000000	                          call 0x4000910	        97	stdio2.h	CALL_12
0x4000910	    0x8b1500000000	            mov edx, dword [0x04000916] 	       144	arsup.c	FUNCTION_5	IF_1
0x4000916	            0x85d2	                           test edx, edx	       144	arsup.c	FUNCTION_5	IF_1
0x4000918	     0xf8549ffffff	                           jne 0x4000867	       144	arsup.c	FUNCTION_5	IF_1
0x400091e	      0xbf09000000	                              mov edi, 9	       145	arsup.c	FUNCTION_5	CALL_1
0x4000923	      0xe800000000	                          call 0x4000928	       145	arsup.c	FUNCTION_5	CALL_1
0x4000928	     0xf1f84000000	                   nop dword [rax + rax]	       145	arsup.c	FUNCTION_5	CALL_1
0x4000930	        0x488b7d00	                    mov rdi, qword [rbp]	       399	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_7
0x4000934	            0x31f6	                            xor esi, esi	       399	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_7
0x4000936	      0xe800000000	                          call 0x400093b	       399	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_7
0x400093b	            0x31ff	                            xor edi, edi	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_8
0x400093d	        0x4c8b7500	                    mov r14, qword [rbp]	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_8
0x4000941	    0x4c8b2d000000	            mov r13, qword [0x04000948] 	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_8
0x4000948	      0xba05000000	                              mov edx, 5	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_8
0x400094d	      0xbe00000000	                              mov esi, 0	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_8
0x4000952	          0x4889c3	                            mov rbx, rax	       399	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_7
0x4000955	      0xe800000000	                          call 0x400095a	       401	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	CALL_8
0x400095a	    0x488b3d000000	            mov rdi, qword [0x04000961] 	        97	stdio2.h	CALL_12
0x4000961	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x4000964	          0x4d89f0	                             mov r8, r14	        97	stdio2.h	CALL_12
0x4000967	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x4000969	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_12
0x400096c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4000971	      0xe800000000	                          call 0x4000976	        97	stdio2.h	CALL_12
0x4000976	          0x4885db	                           test rbx, rbx	       403	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5
0x4000979	            0x7420	                            je 0x400099b	       403	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5
0x400097b	        0x49891c24	                    mov qword [r12], rbx	       410	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	ELSE_4
0x400097f	        0x488b6d08	                mov rbp, qword [rbp + 8]	       413	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	ELSE_4
0x4000983	          0x4885ed	                           test rbp, rbp	       363	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x4000986	     0xf853dffffff	                           jne 0x40008c9	       363	arsup.c	FUNCTION_13	ELSE_1	WHILE_1
0x400098c	        0x4883c408	                              add rsp, 8	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000990	              0x5b	                                 pop rbx	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000991	              0x5d	                                 pop rbp	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000992	            0x415c	                                 pop r12	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000994	            0x415d	                                 pop r13	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000996	            0x415e	                                 pop r14	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000998	            0x415f	                                 pop r15	       416	arsup.c	FUNCTION_13	ELSE_4
0x400099a	              0xc3	                                     ret	       416	arsup.c	FUNCTION_13	ELSE_4
0x400099b	            0x31ff	                            xor edi, edi	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_9
0x400099d	        0x4c8b6500	                    mov r12, qword [rbp]	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_9
0x40009a1	    0x488b1d000000	            mov rbx, qword [0x040009a8] 	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_9
0x40009a8	      0xba05000000	                              mov edx, 5	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_9
0x40009ad	      0xbe00000000	                              mov esi, 0	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_9
0x40009b2	      0xe800000000	                          call 0x40009b7	       405	arsup.c	FUNCTION_13	ELSE_1	WHILE_1	IF_4	IF_5	CALL_9
0x40009b7	    0x488b3d000000	            mov rdi, qword [0x040009be] 	        97	stdio2.h	CALL_12
0x40009be	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x40009c1	          0x4d89e0	                             mov r8, r12	        97	stdio2.h	CALL_12
0x40009c4	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x40009c6	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_12
0x40009c9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x40009ce	      0xe800000000	                          call 0x40009d3	        97	stdio2.h	CALL_12
0x40009d3	    0x8b0500000000	            mov eax, dword [0x040009d9] 	       144	arsup.c	FUNCTION_5	IF_1
0x40009d9	            0x85c0	                           test eax, eax	       144	arsup.c	FUNCTION_5	IF_1
0x40009db	     0xf85dbfeffff	                           jne 0x40008bc	       144	arsup.c	FUNCTION_5	IF_1
0x40009e1	      0xe938ffffff	                           jmp 0x400091e	       144	arsup.c	FUNCTION_5	IF_1
0x40009e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       144	arsup.c	FUNCTION_5	IF_1
0x40009f0	            0x31ff	                            xor edi, edi	       358	arsup.c	FUNCTION_13	IF_1	CALL_1
0x40009f2	    0x488b1d000000	            mov rbx, qword [0x040009f9] 	       358	arsup.c	FUNCTION_13	IF_1	CALL_1
0x40009f9	      0xba05000000	                              mov edx, 5	       358	arsup.c	FUNCTION_13	IF_1	CALL_1
0x40009fe	      0xbe00000000	                              mov esi, 0	       358	arsup.c	FUNCTION_13	IF_1	CALL_1
0x4000a03	      0xe800000000	                          call 0x4000a08	       358	arsup.c	FUNCTION_13	IF_1	CALL_1
0x4000a08	    0x488b3d000000	            mov rdi, qword [0x04000a0f] 	        97	stdio2.h	CALL_12
0x4000a0f	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_12
0x4000a12	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x4000a15	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4000a1a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x4000a1c	      0xe800000000	                          call 0x4000a21	        97	stdio2.h	CALL_12
0x4000a21	    0x8b0d00000000	            mov ecx, dword [0x04000a27] 	       144	arsup.c	FUNCTION_5	IF_1
0x4000a27	            0x85c9	                           test ecx, ecx	       144	arsup.c	FUNCTION_5	IF_1
0x4000a29	     0xf84effeffff	                            je 0x400091e	       144	arsup.c	FUNCTION_5	IF_1
0x4000a2f	        0x4883c408	                              add rsp, 8	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000a33	              0x5b	                                 pop rbx	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000a34	              0x5d	                                 pop rbp	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000a35	            0x415c	                                 pop r12	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000a37	            0x415d	                                 pop r13	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000a39	            0x415e	                                 pop r14	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000a3b	            0x415f	                                 pop r15	       416	arsup.c	FUNCTION_13	ELSE_4
0x4000a3d	              0xc3	                                     ret	       416	arsup.c	FUNCTION_13	ELSE_4
ar_open	FOR,0:DO,0:SWITCH,0:ELSE,1:WHILE,1:functions,0:CALL,15:IF,4	106
0x40002d0	            0x4154	                                push r12	       151	arsup.c	FUNCTION_6
0x40002d2	              0x55	                                push rbp	       151	arsup.c	FUNCTION_6
0x40002d3	          0x4189f4	                           mov r12d, esi	       151	arsup.c	FUNCTION_6
0x40002d6	              0x53	                                push rbx	       151	arsup.c	FUNCTION_6
0x40002d7	          0x4889fb	                            mov rbx, rdi	       151	arsup.c	FUNCTION_6
0x40002da	      0xe800000000	                          call 0x40002df	       152	arsup.c	FUNCTION_6	CALL_2
0x40002df	        0x488d780a	                    lea rdi, [rax + 0xa]	       152	arsup.c	FUNCTION_6	CALL_2
0x40002e3	      0xe800000000	                          call 0x40002e8	       152	arsup.c	FUNCTION_6	CALL_2
0x40002e8	          0x4889df	                            mov rdi, rbx	       153	arsup.c	FUNCTION_6	CALL_3
0x40002eb	          0x4889c5	                            mov rbp, rax	       152	arsup.c	FUNCTION_6	CALL_2
0x40002ee	      0xe800000000	                          call 0x40002f3	       153	arsup.c	FUNCTION_6	CALL_3
0x40002f3	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_17	CALL_1
0x40002f7	          0x4189c0	                            mov r8d, eax	        33	stdio2.h	FUNCTION_17	CALL_1
0x40002fa	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_17	CALL_1
0x40002ff	              0x50	                                push rax	        33	stdio2.h	FUNCTION_17	CALL_1
0x4000300	          0x4129d8	                            sub r8d, ebx	        33	stdio2.h	FUNCTION_17	CALL_1
0x4000303	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_17	CALL_1
0x400030a	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_17	CALL_1
0x400030d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_17	CALL_1
0x4000312	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_17	CALL_1
0x4000315	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_17	CALL_1
0x4000317	    0x48891d000000	            mov qword [0x0400031e], rbx 	       154	arsup.c	FUNCTION_6
0x400031e	      0xe800000000	                          call 0x4000323	        33	stdio2.h	FUNCTION_17	CALL_1
0x4000323	            0x31f6	                            xor esi, esi	       159	arsup.c	FUNCTION_6	CALL_4
0x4000325	          0x4889ef	                            mov rdi, rbp	       159	arsup.c	FUNCTION_6	CALL_4
0x4000328	      0xe800000000	                          call 0x400032d	       159	arsup.c	FUNCTION_6	CALL_4
0x400032d	          0x4885c0	                           test rax, rax	       161	arsup.c	FUNCTION_6	IF_1
0x4000330	    0x488905000000	            mov qword [0x04000337], rax 	       159	arsup.c	FUNCTION_6	CALL_4
0x4000337	              0x5a	                                 pop rdx	       161	arsup.c	FUNCTION_6	IF_1
0x4000338	              0x59	                                 pop rcx	       161	arsup.c	FUNCTION_6	IF_1
0x4000339	     0xf8411010000	                            je 0x4000450	       161	arsup.c	FUNCTION_6	IF_1
0x400033f	          0x4585e4	                         test r12d, r12d	       171	arsup.c	FUNCTION_6	ELSE_1	IF_2
0x4000342	     0xf85b9000000	                           jne 0x4000401	       171	arsup.c	FUNCTION_6	ELSE_1	IF_2
0x4000348	            0x31f6	                            xor esi, esi	       177	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x400034a	          0x4889df	                            mov rdi, rbx	       177	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x400034d	      0xe800000000	                          call 0x4000352	       177	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000352	          0x4885c0	                           test rax, rax	       179	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3
0x4000355	          0x4889c5	                            mov rbp, rax	       177	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000358	     0xf84ca000000	                            je 0x4000428	       179	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3
0x400035e	      0xbe02000000	                              mov esi, 2	       187	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_10
0x4000363	          0x4889c7	                            mov rdi, rax	       187	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_10
0x4000366	      0xe800000000	                          call 0x400036b	       187	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_10
0x400036b	            0x85c0	                           test eax, eax	       187	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_10
0x400036d	            0x7551	                           jne 0x40003c0	       187	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_10
0x400036f	    0x488b2d000000	            mov rbp, qword [0x04000376] 	       189	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4
0x4000376	      0xba05000000	                              mov edx, 5	       190	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_11
0x400037b	      0xbe00000000	                              mov esi, 0	       190	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_11
0x4000380	            0x31ff	                            xor edi, edi	       190	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_11
0x4000382	      0xe800000000	                          call 0x4000387	       190	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_4	CALL_11
0x4000387	          0x4989d8	                             mov r8, rbx	        97	stdio2.h	CALL_12
0x400038a	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_12
0x400038d	    0x488b3d000000	            mov rdi, qword [0x04000394] 	        97	stdio2.h	CALL_12
0x4000394	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x4000397	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x400039c	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x400039e	      0xe800000000	                          call 0x40003a3	        97	stdio2.h	CALL_12
0x40003a3	    0x8b0500000000	            mov eax, dword [0x040003a9] 	       144	arsup.c	FUNCTION_5	IF_1
0x40003a9	            0x85c0	                           test eax, eax	       144	arsup.c	FUNCTION_5	IF_1
0x40003ab	            0x7570	                           jne 0x400041d	       144	arsup.c	FUNCTION_5	IF_1
0x40003ad	      0xbf09000000	                              mov edi, 9	       145	arsup.c	FUNCTION_5	CALL_1
0x40003b2	      0xe800000000	                          call 0x40003b7	       145	arsup.c	FUNCTION_5	CALL_1
0x40003b7	    0x660f1f840000	                    nop word [rax + rax]	       145	arsup.c	FUNCTION_5	CALL_1
0x40003c0	    0x488b05000000	            mov rax, qword [0x040003c7] 	       196	arsup.c	FUNCTION_6	ELSE_1	IF_2
0x40003c7	            0x31f6	                            xor esi, esi	       197	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_13
0x40003c9	          0x4889ef	                            mov rdi, rbp	       197	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_13
0x40003cc	    0x488d98e00000	                   lea rbx, [rax + 0xe0]	       196	arsup.c	FUNCTION_6	ELSE_1	IF_2
0x40003d3	      0xe800000000	                          call 0x40003d8	       197	arsup.c	FUNCTION_6	ELSE_1	IF_2	CALL_13
0x40003d8	          0x4885c0	                           test rax, rax	       199	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x40003db	            0x741d	                            je 0x40003fa	       199	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x40003dd	           0xf1f00	                         nop dword [rax]	       199	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x40003e0	          0x488903	                    mov qword [rbx], rax	       201	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x40003e3	          0x4889c6	                            mov rsi, rax	       203	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1	CALL_14
0x40003e6	          0x4889ef	                            mov rdi, rbp	       203	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1	CALL_14
0x40003e9	    0x488d98d80000	                   lea rbx, [rax + 0xd8]	       202	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x40003f0	      0xe800000000	                          call 0x40003f5	       203	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1	CALL_14
0x40003f5	          0x4885c0	                           test rax, rax	       199	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x40003f8	            0x75e6	                           jne 0x40003e0	       199	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x40003fa	    0x488b05000000	            mov rax, qword [0x04000401] 	       199	arsup.c	FUNCTION_6	ELSE_1	IF_2	WHILE_1
0x4000401	      0xbe02000000	                              mov esi, 2	       207	arsup.c	FUNCTION_6	ELSE_1	CALL_15
0x4000406	          0x4889c7	                            mov rdi, rax	       207	arsup.c	FUNCTION_6	ELSE_1	CALL_15
0x4000409	      0xe800000000	                          call 0x400040e	       207	arsup.c	FUNCTION_6	ELSE_1	CALL_15
0x400040e	    0x488b05000000	            mov rax, qword [0x04000415] 	       209	arsup.c	FUNCTION_6	ELSE_1
0x4000415	        0x80484780	              or byte [rax + 0x47], 0x80	       209	arsup.c	FUNCTION_6	ELSE_1
0x4000419	        0x806048fe	             and byte [rax + 0x48], 0xfe	       210	arsup.c	FUNCTION_6	ELSE_1
0x400041d	              0x5b	                                 pop rbx	       212	arsup.c	FUNCTION_6
0x400041e	              0x5d	                                 pop rbp	       212	arsup.c	FUNCTION_6
0x400041f	            0x415c	                                 pop r12	       212	arsup.c	FUNCTION_6
0x4000421	              0xc3	                                     ret	       212	arsup.c	FUNCTION_6
0x4000422	    0x660f1f440000	                    nop word [rax + rax]	       212	arsup.c	FUNCTION_6
0x4000428	    0x488b2d000000	            mov rbp, qword [0x0400042f] 	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_8
0x400042f	      0xba05000000	                              mov edx, 5	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_8
0x4000434	      0xbe00000000	                              mov esi, 0	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_8
0x4000439	            0x31ff	                            xor edi, edi	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_8
0x400043b	      0xe800000000	                          call 0x4000440	       181	arsup.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_8
0x4000440	          0x4989d8	                             mov r8, rbx	        97	stdio2.h	CALL_12
0x4000443	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_12
0x4000446	      0xe942ffffff	                           jmp 0x400038d	        97	stdio2.h	CALL_12
0x400044b	       0xf1f440000	                   nop dword [rax + rax]	        97	stdio2.h	CALL_12
0x4000450	    0x488b1d000000	            mov rbx, qword [0x04000457] 	       163	arsup.c	FUNCTION_6	IF_1
0x4000457	      0xba05000000	                              mov edx, 5	       164	arsup.c	FUNCTION_6	IF_1	CALL_5
0x400045c	      0xbe00000000	                              mov esi, 0	       164	arsup.c	FUNCTION_6	IF_1	CALL_5
0x4000461	            0x31ff	                            xor edi, edi	       164	arsup.c	FUNCTION_6	IF_1	CALL_5
0x4000463	      0xe800000000	                          call 0x4000468	       164	arsup.c	FUNCTION_6	IF_1	CALL_5
0x4000468	          0x4989e8	                             mov r8, rbp	        97	stdio2.h	CALL_12
0x400046b	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_12
0x400046e	      0xe91affffff	                           jmp 0x400038d	        97	stdio2.h	CALL_12
ar_addlib_doer	FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,0:IF,1	9
0x4000040	          0x4885f6	                           test rsi, rsi	       218	arsup.c	FUNCTION_7	IF_1
0x4000043	            0x740e	                            je 0x4000053	       218	arsup.c	FUNCTION_7	IF_1
0x4000045	    0x488b87d80000	            mov rax, qword [rdi + 0xd8] 	       219	arsup.c	FUNCTION_7	IF_1
0x400004c	    0x488986d80000	             mov qword [rsi + 0xd8], rax	       219	arsup.c	FUNCTION_7	IF_1
0x4000053	    0x488b05000000	            mov rax, qword [0x0400005a] 	       221	arsup.c	FUNCTION_7
0x400005a	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	       221	arsup.c	FUNCTION_7
0x4000061	    0x488997d80000	             mov qword [rdi + 0xd8], rdx	       221	arsup.c	FUNCTION_7
0x4000068	    0x4889b8e00000	             mov qword [rax + 0xe0], rdi	       222	arsup.c	FUNCTION_7
0x400006f	              0xc3	                                     ret	       222	arsup.c	FUNCTION_7
ar_save	FOR,0:DO,0:SWITCH,0:ELSE,1:WHILE,0:functions,0:CALL,7:IF,2	40
0x4000760	    0x488b05000000	            mov rax, qword [0x04000767] 	       333	arsup.c	FUNCTION_12	IF_1
0x4000767	              0x53	                                push rbx	       332	arsup.c	FUNCTION_12
0x4000768	          0x4885c0	                           test rax, rax	       333	arsup.c	FUNCTION_12	IF_1
0x400076b	            0x7453	                            je 0x40007c0	       333	arsup.c	FUNCTION_12	IF_1
0x400076d	          0x488b38	                    mov rdi, qword [rax]	       340	arsup.c	FUNCTION_12	ELSE_1	CALL_4
0x4000770	      0xe800000000	                          call 0x4000775	       340	arsup.c	FUNCTION_12	ELSE_1	CALL_4
0x4000775	          0x4889c3	                            mov rbx, rax	       340	arsup.c	FUNCTION_12	ELSE_1	CALL_4
0x4000778	    0x8b0500000000	            mov eax, dword [0x0400077e] 	       342	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x400077e	    0x488b3d000000	            mov rdi, qword [0x04000785] 	       343	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x4000785	            0x85c0	                           test eax, eax	       342	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x4000787	            0x7e07	                           jle 0x4000790	       342	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x4000789	    0x814f44000004	          or dword [rdi + 0x44], 0x40000	       343	arsup.c	FUNCTION_12	ELSE_1	IF_2
0x4000790	      0xe800000000	                          call 0x4000795	       345	arsup.c	FUNCTION_12	ELSE_1	CALL_5
0x4000795	    0x488b35000000	            mov rsi, qword [0x0400079c] 	       347	arsup.c	FUNCTION_12	ELSE_1	CALL_6
0x400079c	          0x4889df	                            mov rdi, rbx	       347	arsup.c	FUNCTION_12	ELSE_1	CALL_6
0x400079f	            0x31d2	                            xor edx, edx	       347	arsup.c	FUNCTION_12	ELSE_1	CALL_6
0x40007a1	      0xe800000000	                          call 0x40007a6	       347	arsup.c	FUNCTION_12	ELSE_1	CALL_6
0x40007a6	          0x4889df	                            mov rdi, rbx	       349	arsup.c	FUNCTION_12	ELSE_1	CALL_7
0x40007a9	    0x48c705000000	               mov qword [0x040007b4], 0	       348	arsup.c	FUNCTION_12	ELSE_1
0x40007b4	              0x5b	                                 pop rbx	       351	arsup.c	FUNCTION_12
0x40007b5	      0xe900000000	                           jmp 0x40007ba	       349	arsup.c	FUNCTION_12	ELSE_1	CALL_7
0x40007ba	    0x660f1f440000	                    nop word [rax + rax]	       349	arsup.c	FUNCTION_12	ELSE_1	CALL_7
0x40007c0	            0x31ff	                            xor edi, edi	       335	arsup.c	FUNCTION_12	IF_1	CALL_1
0x40007c2	    0x488b1d000000	            mov rbx, qword [0x040007c9] 	       335	arsup.c	FUNCTION_12	IF_1	CALL_1
0x40007c9	      0xba05000000	                              mov edx, 5	       335	arsup.c	FUNCTION_12	IF_1	CALL_1
0x40007ce	      0xbe00000000	                              mov esi, 0	       335	arsup.c	FUNCTION_12	IF_1	CALL_1
0x40007d3	      0xe800000000	                          call 0x40007d8	       335	arsup.c	FUNCTION_12	IF_1	CALL_1
0x40007d8	    0x488b3d000000	            mov rdi, qword [0x040007df] 	        97	stdio2.h	CALL_12
0x40007df	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x40007e2	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_12
0x40007e5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x40007e7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x40007ec	      0xe800000000	                          call 0x40007f1	        97	stdio2.h	CALL_12
0x40007f1	    0x8b1500000000	            mov edx, dword [0x040007f7] 	       144	arsup.c	FUNCTION_5	IF_1
0x40007f7	            0x85d2	                           test edx, edx	       144	arsup.c	FUNCTION_5	IF_1
0x40007f9	            0x7402	                            je 0x40007fd	       144	arsup.c	FUNCTION_5	IF_1
0x40007fb	              0x5b	                                 pop rbx	       351	arsup.c	FUNCTION_12
0x40007fc	              0xc3	                                     ret	       351	arsup.c	FUNCTION_12
0x40007fd	      0xbf09000000	                              mov edi, 9	       145	arsup.c	FUNCTION_5	CALL_1
0x4000802	      0xe800000000	                          call 0x4000807	       145	arsup.c	FUNCTION_5	CALL_1
ar_addmod	FOR,0:DO,0:SWITCH,0:ELSE,2:WHILE,1:functions,0:CALL,6:IF,2	59
0x4000500	    0x48833d000000	               cmp qword [0x04000508], 0	       248	arsup.c	FUNCTION_9	IF_1
0x4000508	            0x4154	                                push r12	       247	arsup.c	FUNCTION_9
0x400050a	              0x55	                                push rbp	       247	arsup.c	FUNCTION_9
0x400050b	              0x53	                                push rbx	       247	arsup.c	FUNCTION_9
0x400050c	     0xf849e000000	                            je 0x40005b0	       248	arsup.c	FUNCTION_9	IF_1
0x4000512	          0x4885ff	                           test rdi, rdi	       255	arsup.c	FUNCTION_9	ELSE_1	WHILE_1
0x4000515	          0x4889fb	                            mov rbx, rdi	       255	arsup.c	FUNCTION_9	ELSE_1	WHILE_1
0x4000518	            0x752f	                           jne 0x4000549	       255	arsup.c	FUNCTION_9	ELSE_1	WHILE_1
0x400051a	      0xe9cc000000	                           jmp 0x40005eb	       255	arsup.c	FUNCTION_9	ELSE_1	WHILE_1
0x400051f	              0x90	                                     nop	       255	arsup.c	FUNCTION_9	ELSE_1	WHILE_1
0x4000520	    0x488b15000000	            mov rdx, qword [0x04000527] 	       272	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	ELSE_2
0x4000527	    0x488b8ae00000	            mov rcx, qword [rdx + 0xe0] 	       272	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	ELSE_2
0x400052e	    0x488988d80000	             mov qword [rax + 0xd8], rcx	       272	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	ELSE_2
0x4000535	    0x488982e00000	             mov qword [rdx + 0xe0], rax	       273	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	ELSE_2
0x400053c	        0x488b5b08	                mov rbx, qword [rbx + 8]	       275	arsup.c	FUNCTION_9	ELSE_1	WHILE_1
0x4000540	          0x4885db	                           test rbx, rbx	       255	arsup.c	FUNCTION_9	ELSE_1	WHILE_1
0x4000543	     0xf84a2000000	                            je 0x40005eb	       255	arsup.c	FUNCTION_9	ELSE_1	WHILE_1
0x4000549	          0x488b3b	                    mov rdi, qword [rbx]	       260	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	CALL_3
0x400054c	      0xbe00000000	                              mov esi, 0	       260	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	CALL_3
0x4000551	      0xe800000000	                          call 0x4000556	       260	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	CALL_3
0x4000556	          0x4885c0	                           test rax, rax	       264	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2
0x4000559	            0x75c5	                           jne 0x4000520	       264	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2
0x400055b	            0x31ff	                            xor edi, edi	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_5
0x400055d	          0x4c8b23	                    mov r12, qword [rbx]	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_5
0x4000560	    0x488b2d000000	            mov rbp, qword [0x04000567] 	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_5
0x4000567	      0xba05000000	                              mov edx, 5	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_5
0x400056c	      0xbe00000000	                              mov esi, 0	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_5
0x4000571	      0xe800000000	                          call 0x4000576	       266	arsup.c	FUNCTION_9	ELSE_1	WHILE_1	IF_2	CALL_5
0x4000576	    0x488b3d000000	            mov rdi, qword [0x0400057d] 	        97	stdio2.h	CALL_12
0x400057d	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x4000580	          0x4d89e0	                             mov r8, r12	        97	stdio2.h	CALL_12
0x4000583	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x4000585	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_12
0x4000588	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x400058d	      0xe800000000	                          call 0x4000592	        97	stdio2.h	CALL_12
0x4000592	    0x8b0500000000	            mov eax, dword [0x04000598] 	       144	arsup.c	FUNCTION_5	IF_1
0x4000598	            0x85c0	                           test eax, eax	       144	arsup.c	FUNCTION_5	IF_1
0x400059a	            0x75a0	                           jne 0x400053c	       144	arsup.c	FUNCTION_5	IF_1
0x400059c	      0xbf09000000	                              mov edi, 9	       145	arsup.c	FUNCTION_5	CALL_1
0x40005a1	      0xe800000000	                          call 0x40005a6	       145	arsup.c	FUNCTION_5	CALL_1
0x40005a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       145	arsup.c	FUNCTION_5	CALL_1
0x40005b0	            0x31ff	                            xor edi, edi	       250	arsup.c	FUNCTION_9	IF_1	CALL_1
0x40005b2	    0x488b1d000000	            mov rbx, qword [0x040005b9] 	       250	arsup.c	FUNCTION_9	IF_1	CALL_1
0x40005b9	      0xba05000000	                              mov edx, 5	       250	arsup.c	FUNCTION_9	IF_1	CALL_1
0x40005be	      0xbe00000000	                              mov esi, 0	       250	arsup.c	FUNCTION_9	IF_1	CALL_1
0x40005c3	      0xe800000000	                          call 0x40005c8	       250	arsup.c	FUNCTION_9	IF_1	CALL_1
0x40005c8	    0x488b3d000000	            mov rdi, qword [0x040005cf] 	        97	stdio2.h	CALL_12
0x40005cf	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x40005d2	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_12
0x40005d5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x40005d7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x40005dc	      0xe800000000	                          call 0x40005e1	        97	stdio2.h	CALL_12
0x40005e1	    0x8b1500000000	            mov edx, dword [0x040005e7] 	       144	arsup.c	FUNCTION_5	IF_1
0x40005e7	            0x85d2	                           test edx, edx	       144	arsup.c	FUNCTION_5	IF_1
0x40005e9	            0x74b1	                            je 0x400059c	       144	arsup.c	FUNCTION_5	IF_1
0x40005eb	              0x5b	                                 pop rbx	       278	arsup.c	FUNCTION_9
0x40005ec	              0x5d	                                 pop rbp	       278	arsup.c	FUNCTION_9
0x40005ed	            0x415c	                                 pop r12	       278	arsup.c	FUNCTION_9
0x40005ef	              0xc3	                                     ret	       278	arsup.c	FUNCTION_9
ar_directory	FOR,0:DO,0:SWITCH,0:ELSE,1:WHILE,0:functions,0:CALL,6:IF,3	53
0x40001a0	            0x4154	                                push r12	       104	arsup.c	FUNCTION_3
0x40001a2	              0x55	                                push rbp	       104	arsup.c	FUNCTION_3
0x40001a3	          0x4989f4	                            mov r12, rsi	       104	arsup.c	FUNCTION_3
0x40001a6	              0x53	                                push rbx	       104	arsup.c	FUNCTION_3
0x40001a7	          0x4889d5	                            mov rbp, rdx	       104	arsup.c	FUNCTION_3
0x40001aa	            0x31f6	                            xor esi, esi	       107	arsup.c	FUNCTION_3	CALL_1
0x40001ac	      0xe800000000	                          call 0x40001b1	       107	arsup.c	FUNCTION_3	CALL_1
0x40001b1	          0x4885ed	                           test rbp, rbp	       108	arsup.c	FUNCTION_3	IF_1
0x40001b4	          0x4889c3	                            mov rbx, rax	       107	arsup.c	FUNCTION_3	CALL_1
0x40001b7	            0x7447	                            je 0x4000200	       108	arsup.c	FUNCTION_3	IF_1
0x40001b9	      0xbe00000000	                              mov esi, 0	       110	arsup.c	FUNCTION_3	IF_1	CALL_2
0x40001be	          0x4889ef	                            mov rdi, rbp	       110	arsup.c	FUNCTION_3	IF_1	CALL_2
0x40001c1	      0xe800000000	                          call 0x40001c6	       110	arsup.c	FUNCTION_3	IF_1	CALL_2
0x40001c6	          0x4885c0	                           test rax, rax	       111	arsup.c	FUNCTION_3	IF_1	IF_2
0x40001c9	    0x488905000000	            mov qword [0x040001d0], rax 	       110	arsup.c	FUNCTION_3	IF_1	CALL_2
0x40001d0	            0x745e	                            je 0x4000230	       111	arsup.c	FUNCTION_3	IF_1	IF_2
0x40001d2	          0x4c89e2	                            mov rdx, r12	       121	arsup.c	FUNCTION_3	CALL_4
0x40001d5	          0x4889df	                            mov rdi, rbx	       121	arsup.c	FUNCTION_3	CALL_4
0x40001d8	      0xbe00000000	                              mov esi, 0	       121	arsup.c	FUNCTION_3	CALL_4
0x40001dd	      0xe8aefeffff	                  call sym.map_over_list	       121	arsup.c	FUNCTION_3	CALL_4
0x40001e2	          0x4889df	                            mov rdi, rbx	       123	arsup.c	FUNCTION_3	CALL_5
0x40001e5	      0xe800000000	                          call 0x40001ea	       123	arsup.c	FUNCTION_3	CALL_5
0x40001ea	              0x5b	                                 pop rbx	       127	arsup.c	FUNCTION_3
0x40001eb	              0x5d	                                 pop rbp	       127	arsup.c	FUNCTION_3
0x40001ec	            0x415c	                                 pop r12	       127	arsup.c	FUNCTION_3
0x40001ee	    0x488b3d000000	            mov rdi, qword [0x040001f5] 	       126	arsup.c	FUNCTION_3	CALL_6
0x40001f5	      0xe900000000	                           jmp 0x40001fa	       126	arsup.c	FUNCTION_3	CALL_6
0x40001fa	    0x660f1f440000	                    nop word [rax + rax]	       126	arsup.c	FUNCTION_3	CALL_6
0x4000200	    0x488b05000000	            mov rax, qword [0x04000207] 	       119	arsup.c	FUNCTION_3	ELSE_1
0x4000207	    0x488905000000	            mov qword [0x0400020e], rax 	       119	arsup.c	FUNCTION_3	ELSE_1
0x400020e	          0x4889df	                            mov rdi, rbx	       121	arsup.c	FUNCTION_3	CALL_4
0x4000211	          0x4c89e2	                            mov rdx, r12	       121	arsup.c	FUNCTION_3	CALL_4
0x4000214	      0xbe00000000	                              mov esi, 0	       121	arsup.c	FUNCTION_3	CALL_4
0x4000219	      0xe872feffff	                  call sym.map_over_list	       121	arsup.c	FUNCTION_3	CALL_4
0x400021e	          0x4889df	                            mov rdi, rbx	       123	arsup.c	FUNCTION_3	CALL_5
0x4000221	              0x5b	                                 pop rbx	       127	arsup.c	FUNCTION_3
0x4000222	              0x5d	                                 pop rbp	       127	arsup.c	FUNCTION_3
0x4000223	            0x415c	                                 pop r12	       127	arsup.c	FUNCTION_3
0x4000225	      0xe900000000	                           jmp 0x400022a	       123	arsup.c	FUNCTION_3	CALL_5
0x400022a	    0x660f1f440000	                    nop word [rax + rax]	       123	arsup.c	FUNCTION_3	CALL_5
0x4000230	    0x488b05000000	            mov rax, qword [0x04000237] 	       113	arsup.c	FUNCTION_3	IF_1	IF_2
0x4000237	            0x31ff	                            xor edi, edi	       114	arsup.c	FUNCTION_3	IF_1	IF_2	CALL_3
0x4000239	      0xba05000000	                              mov edx, 5	       114	arsup.c	FUNCTION_3	IF_1	IF_2	CALL_3
0x400023e	      0xbe00000000	                              mov esi, 0	       114	arsup.c	FUNCTION_3	IF_1	IF_2	CALL_3
0x4000243	    0x488905000000	            mov qword [0x0400024a], rax 	       113	arsup.c	FUNCTION_3	IF_1	IF_2
0x400024a	      0xe800000000	                          call 0x400024f	       114	arsup.c	FUNCTION_3	IF_1	IF_2	CALL_3
0x400024f	    0x488b3d000000	            mov rdi, qword [0x04000256] 	        97	stdio2.h	CALL_12
0x4000256	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x4000259	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_12
0x400025c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4000261	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x4000263	      0xe800000000	                          call 0x4000268	        97	stdio2.h	CALL_12
0x4000268	            0xeba4	                           jmp 0x400020e	        97	stdio2.h	CALL_12
ar_end	FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,3:IF,1	11
0x4000b10	    0x488b3d000000	            mov rdi, qword [0x04000b17] 	       445	arsup.c	FUNCTION_15	IF_1
0x4000b17	          0x4885ff	                           test rdi, rdi	       445	arsup.c	FUNCTION_15	IF_1
0x4000b1a	            0x7424	                            je 0x4000b40	       445	arsup.c	FUNCTION_15	IF_1
0x4000b1c	        0x4883ec08	                              sub rsp, 8	       444	arsup.c	FUNCTION_15
0x4000b20	      0xe800000000	                          call 0x4000b25	       447	arsup.c	FUNCTION_15	IF_1	CALL_1
0x4000b25	    0x488b05000000	            mov rax, qword [0x04000b2c] 	       448	arsup.c	FUNCTION_15	IF_1	CALL_3
0x4000b2c	          0x488b38	                    mov rdi, qword [rax]	       448	arsup.c	FUNCTION_15	IF_1	CALL_3
0x4000b2f	        0x4883c408	                              add rsp, 8	       450	arsup.c	FUNCTION_15
0x4000b33	      0xe900000000	                           jmp 0x4000b38	       448	arsup.c	FUNCTION_15	IF_1	CALL_3
0x4000b38	     0xf1f84000000	                   nop dword [rax + rax]	       448	arsup.c	FUNCTION_15	IF_1	CALL_3
0x4000b40	            0xf3c3	                                     ret	       448	arsup.c	FUNCTION_15	IF_1	CALL_3
ar_extract	FOR,0:DO,0:SWITCH,0:ELSE,1:WHILE,2:functions,0:CALL,6:IF,3	69
0x4000b50	    0x488b05000000	            mov rax, qword [0x04000b57] 	       455	arsup.c	FUNCTION_16	IF_1
0x4000b57	            0x4154	                                push r12	       454	arsup.c	FUNCTION_16
0x4000b59	              0x55	                                push rbp	       454	arsup.c	FUNCTION_16
0x4000b5a	              0x53	                                push rbx	       454	arsup.c	FUNCTION_16
0x4000b5b	          0x4885c0	                           test rax, rax	       455	arsup.c	FUNCTION_16	IF_1
0x4000b5e	     0xf84a9000000	                            je 0x4000c0d	       455	arsup.c	FUNCTION_16	IF_1
0x4000b64	          0x4885ff	                           test rdi, rdi	       462	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000b67	          0x4889fd	                            mov rbp, rdi	       462	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000b6a	            0x747c	                            je 0x4000be8	       462	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000b6c	         0xf1f4000	                         nop dword [rax]	       462	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000b70	    0x488b98e00000	            mov rbx, qword [rax + 0xe0] 	       465	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000b77	          0x4885db	                           test rbx, rbx	       468	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2
0x4000b7a	            0x7420	                            je 0x4000b9c	       468	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2
0x4000b7c	         0xf1f4000	                         nop dword [rax]	       468	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2
0x4000b80	        0x488b7500	                    mov rsi, qword [rbp]	       470	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_3
0x4000b84	          0x488b3b	                    mov rdi, qword [rbx]	       470	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_3
0x4000b87	      0xe800000000	                          call 0x4000b8c	       470	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_3
0x4000b8c	            0x85c0	                           test eax, eax	       470	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_3
0x4000b8e	            0x7460	                            je 0x4000bf0	       470	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_3
0x4000b90	    0x488b9bd80000	            mov rbx, qword [rbx + 0xd8] 	       476	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2
0x4000b97	          0x4885db	                           test rbx, rbx	       468	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2
0x4000b9a	            0x75e4	                           jne 0x4000b80	       468	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2
0x4000b9c	        0x488b7d00	                    mov rdi, qword [rbp]	       481	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_5
0x4000ba0	            0x31f6	                            xor esi, esi	       481	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_5
0x4000ba2	      0xe800000000	                          call 0x4000ba7	       481	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_5
0x4000ba7	        0x4c8b6500	                    mov r12, qword [rbp]	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000bab	            0x31ff	                            xor edi, edi	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000bad	    0x488b1d000000	            mov rbx, qword [0x04000bb4] 	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000bb4	      0xba05000000	                              mov edx, 5	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000bb9	      0xbe00000000	                              mov esi, 0	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000bbe	      0xe800000000	                          call 0x4000bc3	       482	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	IF_3	CALL_6
0x4000bc3	    0x488b3d000000	            mov rdi, qword [0x04000bca] 	        97	stdio2.h	CALL_12
0x4000bca	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x4000bcd	          0x4d89e0	                             mov r8, r12	        97	stdio2.h	CALL_12
0x4000bd0	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x4000bd2	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_12
0x4000bd5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4000bda	      0xe800000000	                          call 0x4000bdf	        97	stdio2.h	CALL_12
0x4000bdf	        0x488b6d08	                mov rbp, qword [rbp + 8]	       486	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000be3	          0x4885ed	                           test rbp, rbp	       462	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000be6	            0x7519	                           jne 0x4000c01	       462	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000be8	              0x5b	                                 pop rbx	       489	arsup.c	FUNCTION_16
0x4000be9	              0x5d	                                 pop rbp	       489	arsup.c	FUNCTION_16
0x4000bea	            0x415c	                                 pop r12	       489	arsup.c	FUNCTION_16
0x4000bec	              0xc3	                                     ret	       489	arsup.c	FUNCTION_16
0x4000bed	           0xf1f00	                         nop dword [rax]	       489	arsup.c	FUNCTION_16
0x4000bf0	          0x4889df	                            mov rdi, rbx	       472	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x4000bf3	      0xe800000000	                          call 0x4000bf8	       472	arsup.c	FUNCTION_16	ELSE_1	WHILE_1	WHILE_2	IF_2	CALL_4
0x4000bf8	        0x488b6d08	                mov rbp, qword [rbp + 8]	       486	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000bfc	          0x4885ed	                           test rbp, rbp	       462	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000bff	            0x74e7	                            je 0x4000be8	       462	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000c01	    0x488b05000000	            mov rax, qword [0x04000c08] 	       462	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000c08	      0xe963ffffff	                           jmp 0x4000b70	       462	arsup.c	FUNCTION_16	ELSE_1	WHILE_1
0x4000c0d	            0x31ff	                            xor edi, edi	       457	arsup.c	FUNCTION_16	IF_1	CALL_1
0x4000c0f	    0x488b1d000000	            mov rbx, qword [0x04000c16] 	       457	arsup.c	FUNCTION_16	IF_1	CALL_1
0x4000c16	      0xba05000000	                              mov edx, 5	       457	arsup.c	FUNCTION_16	IF_1	CALL_1
0x4000c1b	      0xbe00000000	                              mov esi, 0	       457	arsup.c	FUNCTION_16	IF_1	CALL_1
0x4000c20	      0xe800000000	                          call 0x4000c25	       457	arsup.c	FUNCTION_16	IF_1	CALL_1
0x4000c25	    0x488b3d000000	            mov rdi, qword [0x04000c2c] 	        97	stdio2.h	CALL_12
0x4000c2c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x4000c2f	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_12
0x4000c32	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x4000c34	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4000c39	      0xe800000000	                          call 0x4000c3e	        97	stdio2.h	CALL_12
0x4000c3e	    0x8b0500000000	            mov eax, dword [0x04000c44] 	       144	arsup.c	FUNCTION_5	IF_1
0x4000c44	            0x85c0	                           test eax, eax	       144	arsup.c	FUNCTION_5	IF_1
0x4000c46	            0x75a0	                           jne 0x4000be8	       144	arsup.c	FUNCTION_5	IF_1
0x4000c48	      0xbf09000000	                              mov edi, 9	       145	arsup.c	FUNCTION_5	CALL_1
0x4000c4d	      0xe800000000	                  call section_end..data	       145	arsup.c	FUNCTION_5	CALL_1
ar_clear	FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,0:IF,1	5
0x40005f0	    0x488b05000000	            mov rax, qword [0x040005f7] 	       284	arsup.c	FUNCTION_10	IF_1
0x40005f7	          0x4885c0	                           test rax, rax	       284	arsup.c	FUNCTION_10	IF_1
0x40005fa	            0x740b	                            je 0x4000607	       284	arsup.c	FUNCTION_10	IF_1
0x40005fc	    0x48c780e00000	               mov qword [rax + 0xe0], 0	       285	arsup.c	FUNCTION_10	IF_1
0x4000607	            0xf3c3	                                     ret	       285	arsup.c	FUNCTION_10	IF_1
map_over_list	FOR,2:DO,0:SWITCH,0:ELSE,1:WHILE,1:functions,0:CALL,4:IF,3	83
0x4000090	            0x4157	                                push r15	        49	arsup.c	FUNCTION_1
0x4000092	            0x4156	                                push r14	        49	arsup.c	FUNCTION_1
0x4000094	          0x4989ff	                            mov r15, rdi	        49	arsup.c	FUNCTION_1
0x4000097	            0x4155	                                push r13	        49	arsup.c	FUNCTION_1
0x4000099	            0x4154	                                push r12	        49	arsup.c	FUNCTION_1
0x400009b	          0x4989f6	                            mov r14, rsi	        49	arsup.c	FUNCTION_1
0x400009e	              0x55	                                push rbp	        49	arsup.c	FUNCTION_1
0x400009f	              0x53	                                push rbx	        49	arsup.c	FUNCTION_1
0x40000a0	          0x4989d4	                            mov r12, rdx	        49	arsup.c	FUNCTION_1
0x40000a3	        0x4883ec08	                              sub rsp, 8	        49	arsup.c	FUNCTION_1
0x40000a7	          0x4885d2	                           test rdx, rdx	        52	arsup.c	FUNCTION_1	IF_1
0x40000aa	     0xf84b0000000	                            je 0x4000160	        52	arsup.c	FUNCTION_1	IF_1
0x40000b0	    0x498b9fd80000	            mov rbx, qword [r15 + 0xd8] 	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000b7	          0x4531ed	                          xor r13d, r13d	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000ba	          0x4c89fd	                            mov rbp, r15	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000bd	          0x4885db	                           test rbx, rbx	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000c0	            0x7518	                           jne 0x40000da	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000c2	            0xeb6c	                           jmp 0x4000130	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000c4	         0xf1f4000	                         nop dword [rax]	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000c8	    0x488b83d80000	            mov rax, qword [rbx + 0xd8] 	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000cf	          0x4889dd	                            mov rbp, rbx	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000d2	          0x4885c0	                           test rax, rax	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000d5	            0x7436	                            je 0x400010d	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000d7	          0x4889c3	                            mov rbx, rax	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x40000da	          0x488b33	                    mov rsi, qword [rbx]	        80	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2
0x40000dd	          0x4885f6	                           test rsi, rsi	        80	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2
0x40000e0	            0x74e6	                            je 0x40000c8	        80	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2
0x40000e2	        0x498b3c24	                    mov rdi, qword [r12]	        81	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_2
0x40000e6	      0xe800000000	                          call 0x40000eb	        81	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_2
0x40000eb	            0x85c0	                           test eax, eax	        81	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_2
0x40000ed	            0x75d9	                           jne 0x40000c8	        81	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_2
0x40000ef	          0x4889ee	                            mov rsi, rbp	        84	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_3
0x40000f2	          0x4889df	                            mov rdi, rbx	        84	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_3
0x40000f5	    0x41bd01000000	                             mov r13d, 1	        83	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2
0x40000fb	          0x41ffd6	                                call r14	        84	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2	IF_2	CALL_3
0x40000fe	    0x488b83d80000	            mov rax, qword [rbx + 0xd8] 	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x4000105	          0x4889dd	                            mov rbp, rbx	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x4000108	          0x4885c0	                           test rax, rax	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x400010b	            0x75ca	                           jne 0x40000d7	        78	arsup.c	FUNCTION_1	ELSE_1	FOR_1	FOR_2
0x400010d	          0x4585ed	                         test r13d, r13d	        88	arsup.c	FUNCTION_1	ELSE_1	FOR_1	IF_3
0x4000110	            0x741e	                            je 0x4000130	        88	arsup.c	FUNCTION_1	ELSE_1	FOR_1	IF_3
0x4000112	      0x4d8b642408	                mov r12, qword [r12 + 8]	        73	arsup.c	FUNCTION_1	ELSE_1	FOR_1
0x4000117	          0x4d85e4	                           test r12, r12	        73	arsup.c	FUNCTION_1	ELSE_1	FOR_1
0x400011a	            0x7594	                           jne 0x40000b0	        73	arsup.c	FUNCTION_1	ELSE_1	FOR_1
0x400011c	        0x4883c408	                              add rsp, 8	        92	arsup.c	FUNCTION_1
0x4000120	              0x5b	                                 pop rbx	        92	arsup.c	FUNCTION_1
0x4000121	              0x5d	                                 pop rbp	        92	arsup.c	FUNCTION_1
0x4000122	            0x415c	                                 pop r12	        92	arsup.c	FUNCTION_1
0x4000124	            0x415d	                                 pop r13	        92	arsup.c	FUNCTION_1
0x4000126	            0x415e	                                 pop r14	        92	arsup.c	FUNCTION_1
0x4000128	            0x415f	                                 pop r15	        92	arsup.c	FUNCTION_1
0x400012a	              0xc3	                                     ret	        92	arsup.c	FUNCTION_1
0x400012b	       0xf1f440000	                   nop dword [rax + rax]	        92	arsup.c	FUNCTION_1
0x4000130	        0x498b1c24	                    mov rbx, qword [r12]	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_4
0x4000134	            0x31ff	                            xor edi, edi	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_4
0x4000136	      0xba05000000	                              mov edx, 5	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_4
0x400013b	      0xbe00000000	                              mov esi, 0	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_4
0x4000140	      0xe800000000	                          call 0x4000145	        89	arsup.c	FUNCTION_1	ELSE_1	FOR_1	CALL_4
0x4000145	    0x488b3d000000	            mov rdi, qword [0x0400014c] 	        97	stdio2.h	CALL_12
0x400014c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x400014f	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_12
0x4000152	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4000157	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x4000159	      0xe800000000	                          call 0x400015e	        97	stdio2.h	CALL_12
0x400015e	            0xebb2	                           jmp 0x4000112	        97	stdio2.h	CALL_12
0x4000160	    0x488bbfd80000	            mov rdi, qword [rdi + 0xd8] 	        56	arsup.c	FUNCTION_1	IF_1
0x4000167	          0x4885ff	                           test rdi, rdi	        57	arsup.c	FUNCTION_1	IF_1	WHILE_1
0x400016a	            0x74b0	                            je 0x400011c	        57	arsup.c	FUNCTION_1	IF_1	WHILE_1
0x400016c	         0xf1f4000	                         nop dword [rax]	        57	arsup.c	FUNCTION_1	IF_1	WHILE_1
0x4000170	    0x488b9fd80000	            mov rbx, qword [rdi + 0xd8] 	        59	arsup.c	FUNCTION_1	IF_1	WHILE_1
0x4000177	            0x31f6	                            xor esi, esi	        60	arsup.c	FUNCTION_1	IF_1	WHILE_1	CALL_1
0x4000179	          0x41ffd6	                                call r14	        60	arsup.c	FUNCTION_1	IF_1	WHILE_1	CALL_1
0x400017c	          0x4885db	                           test rbx, rbx	        57	arsup.c	FUNCTION_1	IF_1	WHILE_1
0x400017f	          0x4889df	                            mov rdi, rbx	        57	arsup.c	FUNCTION_1	IF_1	WHILE_1
0x4000182	            0x75ec	                           jne 0x4000170	        57	arsup.c	FUNCTION_1	IF_1	WHILE_1
0x4000184	        0x4883c408	                              add rsp, 8	        92	arsup.c	FUNCTION_1
0x4000188	              0x5b	                                 pop rbx	        92	arsup.c	FUNCTION_1
0x4000189	              0x5d	                                 pop rbp	        92	arsup.c	FUNCTION_1
0x400018a	            0x415c	                                 pop r12	        92	arsup.c	FUNCTION_1
0x400018c	            0x415d	                                 pop r13	        92	arsup.c	FUNCTION_1
0x400018e	            0x415e	                                 pop r14	        92	arsup.c	FUNCTION_1
0x4000190	            0x415f	                                 pop r15	        92	arsup.c	FUNCTION_1
0x4000192	              0xc3	                                     ret	        92	arsup.c	FUNCTION_1
prompt	FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:functions,0:CALL,1:IF,1	13
0x4000270	    0x8b0500000000	            mov eax, dword [0x04000276] 	       134	arsup.c	FUNCTION_4	IF_1
0x4000276	            0x85c0	                           test eax, eax	       134	arsup.c	FUNCTION_4	IF_1
0x4000278	            0x7506	                           jne 0x4000280	       134	arsup.c	FUNCTION_4	IF_1
0x400027a	            0xf3c3	                                     ret	       134	arsup.c	FUNCTION_4	IF_1
0x400027c	         0xf1f4000	                         nop dword [rax]	       134	arsup.c	FUNCTION_4	IF_1
0x4000280	        0x4883ec08	                              sub rsp, 8	       131	arsup.c	FUNCTION_4
0x4000284	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_15
0x4000289	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_15
0x400028e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_15
0x4000290	      0xe800000000	                          call 0x4000295	       104	stdio2.h	CALL_15
0x4000295	    0x488b3d000000	            mov rdi, qword [0x0400029c] 	       137	arsup.c	FUNCTION_4	IF_1	CALL_1
0x400029c	        0x4883c408	                              add rsp, 8	       139	arsup.c	FUNCTION_4
0x40002a0	      0xe900000000	                           jmp 0x40002a5	       137	arsup.c	FUNCTION_4	IF_1	CALL_1
ar_list	FOR,1:DO,0:SWITCH,0:ELSE,1:WHILE,0:functions,0:CALL,5:IF,1	49
0x4000a40	    0x488b05000000	            mov rax, qword [0x04000a47] 	       422	arsup.c	ELSE_4	FUNCTION_14	IF_1
0x4000a47	              0x53	                                push rbx	       421	arsup.c	ELSE_4	FUNCTION_14
0x4000a48	          0x4885c0	                           test rax, rax	       422	arsup.c	ELSE_4	FUNCTION_14	IF_1
0x4000a4b	            0x747b	                            je 0x4000ac8	       422	arsup.c	ELSE_4	FUNCTION_14	IF_1
0x4000a4d	    0x488b15000000	            mov rdx, qword [0x04000a54] 	       431	arsup.c	ELSE_4	FUNCTION_14	ELSE_1
0x4000a54	          0x488b18	                    mov rbx, qword [rax]	       433	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_4
0x4000a57	            0x31ff	                            xor edi, edi	       433	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_4
0x4000a59	      0xbe00000000	                              mov esi, 0	       433	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_4
0x4000a5e	    0xc70500000000	               mov dword [0x04000a68], 1	       432	arsup.c	ELSE_4	FUNCTION_14	ELSE_1
0x4000a68	    0x488915000000	            mov qword [0x04000a6f], rdx 	       431	arsup.c	ELSE_4	FUNCTION_14	ELSE_1
0x4000a6f	      0xba05000000	                              mov edx, 5	       433	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_4
0x4000a74	      0xe800000000	                          call 0x4000a79	       433	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	CALL_4
0x4000a79	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_15
0x4000a7c	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_15
0x4000a7f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_15
0x4000a84	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_15
0x4000a86	      0xe800000000	                          call 0x4000a8b	       104	stdio2.h	CALL_15
0x4000a8b	    0x488b05000000	            mov rax, qword [0x04000a92] 	       435	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000a92	    0x488b98e00000	            mov rbx, qword [rax + 0xe0] 	       435	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000a99	          0x4885db	                           test rbx, rbx	       435	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000a9c	            0x7425	                            je 0x4000ac3	       435	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000a9e	            0x6690	                                     nop	       435	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000aa0	    0x8b1500000000	            mov edx, dword [0x04000aa6] 	        99	arsup.c	FUNCTION_2	CALL_1
0x4000aa6	    0x488b3d000000	            mov rdi, qword [0x04000aad] 	        99	arsup.c	FUNCTION_2	CALL_1
0x4000aad	            0x31c9	                            xor ecx, ecx	        99	arsup.c	FUNCTION_2	CALL_1
0x4000aaf	          0x4889de	                            mov rsi, rbx	        99	arsup.c	FUNCTION_2	CALL_1
0x4000ab2	      0xe800000000	                          call 0x4000ab7	        99	arsup.c	FUNCTION_2	CALL_1
0x4000ab7	    0x488b9bd80000	            mov rbx, qword [rbx + 0xd8] 	       437	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000abe	          0x4885db	                           test rbx, rbx	       435	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000ac1	            0x75dd	                           jne 0x4000aa0	       435	arsup.c	ELSE_4	FUNCTION_14	ELSE_1	FOR_1
0x4000ac3	              0x5b	                                 pop rbx	       440	arsup.c	ELSE_4	FUNCTION_14
0x4000ac4	              0xc3	                                     ret	       440	arsup.c	ELSE_4	FUNCTION_14
0x4000ac5	           0xf1f00	                         nop dword [rax]	       440	arsup.c	ELSE_4	FUNCTION_14
0x4000ac8	            0x31ff	                            xor edi, edi	       424	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_1
0x4000aca	    0x488b1d000000	            mov rbx, qword [0x04000ad1] 	       424	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_1
0x4000ad1	      0xba05000000	                              mov edx, 5	       424	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_1
0x4000ad6	      0xbe00000000	                              mov esi, 0	       424	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_1
0x4000adb	      0xe800000000	                          call 0x4000ae0	       424	arsup.c	ELSE_4	FUNCTION_14	IF_1	CALL_1
0x4000ae0	    0x488b3d000000	            mov rdi, qword [0x04000ae7] 	        97	stdio2.h	CALL_12
0x4000ae7	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_12
0x4000aea	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_12
0x4000aed	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x4000aef	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4000af4	      0xe800000000	                          call 0x4000af9	        97	stdio2.h	CALL_12
0x4000af9	    0x8b0500000000	            mov eax, dword [0x04000aff] 	       144	arsup.c	FUNCTION_5	IF_1
0x4000aff	            0x85c0	                           test eax, eax	       144	arsup.c	FUNCTION_5	IF_1
0x4000b01	            0x75c0	                           jne 0x4000ac3	       144	arsup.c	FUNCTION_5	IF_1
0x4000b03	      0xbf09000000	                              mov edi, 9	       145	arsup.c	FUNCTION_5	CALL_1
0x4000b08	      0xe800000000	                          call 0x4000b0d	       145	arsup.c	FUNCTION_5	CALL_1
