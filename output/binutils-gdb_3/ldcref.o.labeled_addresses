check_refs	FOR,0:DO,0:CALL,5:SWITCH,0:WHILE,0:functions,0:IF,1:ELSE,0	47
0x4000120	            0x4156	                                push r14	       618	ldcref.c	FUNCTION_11
0x4000122	            0x4155	                                push r13	       618	ldcref.c	FUNCTION_11
0x4000124	          0x4989fe	                            mov r14, rdi	       618	ldcref.c	FUNCTION_11
0x4000127	            0x4154	                                push r12	       618	ldcref.c	FUNCTION_11
0x4000129	              0x55	                                push rbp	       618	ldcref.c	FUNCTION_11
0x400012a	          0x4889cf	                            mov rdi, rcx	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x400012d	              0x53	                                push rbx	       618	ldcref.c	FUNCTION_11
0x400012e	          0x4189f5	                           mov r13d, esi	       618	ldcref.c	FUNCTION_11
0x4000131	          0x4989d4	                            mov r12, rdx	       618	ldcref.c	FUNCTION_11
0x4000134	          0x4889cb	                            mov rbx, rcx	       618	ldcref.c	FUNCTION_11
0x4000137	          0x4c89c5	                             mov rbp, r8	       618	ldcref.c	FUNCTION_11
0x400013a	        0x4883ec30	                           sub rsp, 0x30	       618	ldcref.c	FUNCTION_11
0x400013e	    0x64488b042528	                mov rax, qword fs:[0x28]	       618	ldcref.c	FUNCTION_11
0x4000147	      0x4889442428	             mov qword [rsp + 0x28], rax	       618	ldcref.c	FUNCTION_11
0x400014c	            0x31c0	                            xor eax, eax	       618	ldcref.c	FUNCTION_11
0x400014e	      0xe800000000	                          call 0x4000153	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x4000153	            0x85c0	                           test eax, eax	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x4000155	            0x751e	                           jne 0x4000175	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x4000157	      0xbe00000000	                              mov esi, 0	       628	ldcref.c	FUNCTION_11	CALL_3
0x400015c	            0x31ff	                            xor edi, edi	       628	ldcref.c	FUNCTION_11	CALL_3
0x400015e	      0xba05000000	                              mov edx, 5	       628	ldcref.c	FUNCTION_11	CALL_3
0x4000163	      0xe800000000	                          call 0x4000168	       628	ldcref.c	FUNCTION_11	CALL_3
0x4000168	          0x4889de	                            mov rsi, rbx	       628	ldcref.c	FUNCTION_11	CALL_3
0x400016b	          0x4889c7	                            mov rdi, rax	       628	ldcref.c	FUNCTION_11	CALL_3
0x400016e	            0x31c0	                            xor eax, eax	       628	ldcref.c	FUNCTION_11	CALL_3
0x4000170	      0xe800000000	                          call 0x4000175	       628	ldcref.c	FUNCTION_11	CALL_3
0x4000175	    0x488b83b00000	            mov rax, qword [rbx + 0xb0] 	       634	ldcref.c	FUNCTION_11	CALL_4
0x400017c	          0x4889e2	                            mov rdx, rsp	       635	ldcref.c	FUNCTION_11	CALL_5
0x400017f	      0xbe00000000	                              mov esi, 0	       635	ldcref.c	FUNCTION_11	CALL_5
0x4000184	          0x4889df	                            mov rdi, rbx	       635	ldcref.c	FUNCTION_11	CALL_5
0x4000187	        0x4c893424	                    mov qword [rsp], r14	       630	ldcref.c	FUNCTION_11
0x400018b	      0x44896c2420	            mov dword [rsp + 0x20], r13d	       631	ldcref.c	FUNCTION_11
0x4000190	      0x4c89642408	                mov qword [rsp + 8], r12	       632	ldcref.c	FUNCTION_11
0x4000195	      0x48896c2410	             mov qword [rsp + 0x10], rbp	       633	ldcref.c	FUNCTION_11
0x400019a	      0x4889442418	             mov qword [rsp + 0x18], rax	       634	ldcref.c	FUNCTION_11	CALL_4
0x400019f	      0xe800000000	                          call 0x40001a4	       635	ldcref.c	FUNCTION_11	CALL_5
0x40001a4	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       636	ldcref.c	FUNCTION_11
0x40001a9	    0x644833042528	                xor rax, qword fs:[0x28]	       636	ldcref.c	FUNCTION_11
0x40001b2	            0x750d	                           jne 0x40001c1	       636	ldcref.c	FUNCTION_11
0x40001b4	        0x4883c430	                           add rsp, 0x30	       636	ldcref.c	FUNCTION_11
0x40001b8	              0x5b	                                 pop rbx	       636	ldcref.c	FUNCTION_11
0x40001b9	              0x5d	                                 pop rbp	       636	ldcref.c	FUNCTION_11
0x40001ba	            0x415c	                                 pop r12	       636	ldcref.c	FUNCTION_11
0x40001bc	            0x415d	                                 pop r13	       636	ldcref.c	FUNCTION_11
0x40001be	            0x415e	                                 pop r14	       636	ldcref.c	FUNCTION_11
0x40001c0	              0xc3	                                     ret	       636	ldcref.c	FUNCTION_11
0x40001c1	      0xe800000000	                          call 0x40001c6	       636	ldcref.c	FUNCTION_11
cref_hash_newfunc	FOR,0:DO,0:CALL,2:SWITCH,0:WHILE,0:functions,0:IF,3:ELSE,0	26
0x4000040	              0x53	                                push rbx	       126	ldcref.c	FUNCTION_1
0x4000041	          0x4889f3	                            mov rbx, rsi	       126	ldcref.c	FUNCTION_1
0x4000044	        0x4883ec10	                           sub rsp, 0x10	       126	ldcref.c	FUNCTION_1
0x4000048	          0x4885ff	                           test rdi, rdi	       131	ldcref.c	FUNCTION_1	IF_1
0x400004b	            0x7433	                            je 0x4000080	       131	ldcref.c	FUNCTION_1	IF_1
0x400004d	          0x4889de	                            mov rsi, rbx	       138	ldcref.c	FUNCTION_1
0x4000050	      0xe800000000	                          call 0x4000055	       138	ldcref.c	FUNCTION_1
0x4000055	          0x4885c0	                           test rax, rax	       140	ldcref.c	FUNCTION_1	IF_3
0x4000058	            0x7418	                            je 0x4000072	       140	ldcref.c	FUNCTION_1	IF_3
0x400005a	    0x488305000000	               add qword [0x04000062], 1	       148	ldcref.c	FUNCTION_1	IF_3
0x4000062	    0x48c740180000	               mov qword [rax + 0x18], 0	       143	ldcref.c	FUNCTION_1	IF_3
0x400006a	    0x48c740200000	               mov qword [rax + 0x20], 0	       144	ldcref.c	FUNCTION_1	IF_3
0x4000072	        0x4883c410	                           add rsp, 0x10	       152	ldcref.c	FUNCTION_1
0x4000076	              0x5b	                                 pop rbx	       152	ldcref.c	FUNCTION_1
0x4000077	              0xc3	                                     ret	       152	ldcref.c	FUNCTION_1
0x4000078	     0xf1f84000000	                   nop dword [rax + rax]	       152	ldcref.c	FUNCTION_1
0x4000080	          0x4889df	                            mov rdi, rbx	       132	ldcref.c	FUNCTION_1	IF_1
0x4000083	      0xbe28000000	                           mov esi, 0x28	       132	ldcref.c	FUNCTION_1	IF_1
0x4000088	      0x4889542408	                mov qword [rsp + 8], rdx	       132	ldcref.c	FUNCTION_1	IF_1
0x400008d	      0xe800000000	                          call 0x4000092	       132	ldcref.c	FUNCTION_1	IF_1
0x4000092	          0x4889c7	                            mov rdi, rax	       132	ldcref.c	FUNCTION_1	IF_1
0x4000095	            0x31c0	                            xor eax, eax	       135	ldcref.c	FUNCTION_1	IF_2
0x4000097	      0x488b542408	                mov rdx, qword [rsp + 8]	       134	ldcref.c	FUNCTION_1	IF_2
0x400009c	          0x4885ff	                           test rdi, rdi	       134	ldcref.c	FUNCTION_1	IF_2
0x400009f	            0x74d1	                            je 0x4000072	       134	ldcref.c	FUNCTION_1	IF_2
0x40000a1	            0xebaa	                           jmp 0x400004d	       134	ldcref.c	FUNCTION_1	IF_2
add_cref	FOR,1:DO,0:CALL,10:SWITCH,0:WHILE,0:functions,0:IF,8:ELSE,2	102
0x40006b0	            0x4155	                                push r13	       162	ldcref.c	FUNCTION_2
0x40006b2	            0x4154	                                push r12	       162	ldcref.c	FUNCTION_2
0x40006b4	          0x4989d5	                            mov r13, rdx	       162	ldcref.c	FUNCTION_2
0x40006b7	              0x55	                                push rbp	       162	ldcref.c	FUNCTION_2
0x40006b8	              0x53	                                push rbx	       162	ldcref.c	FUNCTION_2
0x40006b9	          0x4889f5	                            mov rbp, rsi	       162	ldcref.c	FUNCTION_2
0x40006bc	          0x4889fb	                            mov rbx, rdi	       162	ldcref.c	FUNCTION_2
0x40006bf	        0x4883ec08	                              sub rsp, 8	       162	ldcref.c	FUNCTION_2
0x40006c3	    0x8b0500000000	            mov eax, dword [0x040006c9] 	       166	ldcref.c	FUNCTION_2	IF_1
0x40006c9	            0x85c0	                           test eax, eax	       166	ldcref.c	FUNCTION_2	IF_1
0x40006cb	     0xf84af000000	                            je 0x4000780	       166	ldcref.c	FUNCTION_2	IF_1
0x40006d1	            0x31c9	                            xor ecx, ecx	       174	ldcref.c	FUNCTION_2
0x40006d3	      0xba01000000	                              mov edx, 1	       174	ldcref.c	FUNCTION_2
0x40006d8	          0x4889de	                            mov rsi, rbx	       174	ldcref.c	FUNCTION_2
0x40006db	      0xbf00000000	                              mov edi, 0	       174	ldcref.c	FUNCTION_2
0x40006e0	      0xe800000000	                          call 0x40006e5	       174	ldcref.c	FUNCTION_2
0x40006e5	          0x4885c0	                           test rax, rax	       175	ldcref.c	FUNCTION_2	IF_3
0x40006e8	          0x4989c4	                            mov r12, rax	       174	ldcref.c	FUNCTION_2
0x40006eb	     0xf84e2000000	                            je 0x40007d3	       175	ldcref.c	FUNCTION_2	IF_3
0x40006f1	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	       178	ldcref.c	FUNCTION_2	FOR_1
0x40006f6	          0x4885db	                           test rbx, rbx	       178	ldcref.c	FUNCTION_2	FOR_1
0x40006f9	            0x741b	                            je 0x4000716	       178	ldcref.c	FUNCTION_2	FOR_1
0x40006fb	        0x483b6b08	                cmp rbp, qword [rbx + 8]	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x40006ff	            0x750d	                           jne 0x400070e	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x4000701	            0xeb4d	                           jmp 0x4000750	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x4000703	       0xf1f440000	                   nop dword [rax + rax]	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x4000708	        0x48396b08	                cmp qword [rbx + 8], rbp	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x400070c	            0x7442	                            je 0x4000750	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x400070e	          0x488b1b	                    mov rbx, qword [rbx]	       178	ldcref.c	FUNCTION_2	FOR_1
0x4000711	          0x4885db	                           test rbx, rbx	       178	ldcref.c	FUNCTION_2	FOR_1
0x4000714	            0x75f2	                           jne 0x4000708	       178	ldcref.c	FUNCTION_2	FOR_1
0x4000716	      0xbe18000000	                           mov esi, 0x18	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x400071b	      0xbf00000000	                              mov edi, 0	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x4000720	      0xe800000000	                          call 0x4000725	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x4000725	          0x4885c0	                           test rax, rax	       185	ldcref.c	FUNCTION_2	IF_5	IF_6
0x4000728	          0x4889c3	                            mov rbx, rax	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x400072b	     0xf84c2000000	                            je 0x40007f3	       185	ldcref.c	FUNCTION_2	IF_5	IF_6
0x4000731	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       187	ldcref.c	FUNCTION_2	IF_5
0x4000736	          0x488903	                    mov qword [rbx], rax	       187	ldcref.c	FUNCTION_2	IF_5
0x4000739	      0x49895c2420	             mov qword [r12 + 0x20], rbx	       188	ldcref.c	FUNCTION_2	IF_5
0x400073e	        0x806310f8	             and byte [rbx + 0x10], 0xf8	       192	ldcref.c	FUNCTION_2	IF_5
0x4000742	        0x48896b08	                mov qword [rbx + 8], rbp	       189	ldcref.c	FUNCTION_2	IF_5
0x4000746	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       189	ldcref.c	FUNCTION_2	IF_5
0x4000750	    0x4981fd000000	                              cmp r13, 0	       195	ldcref.c	FUNCTION_2	IF_7	CALL_9
0x4000757	            0x744e	                            je 0x40007a7	       195	ldcref.c	FUNCTION_2	IF_7	CALL_9
0x4000759	      0x41f6452110	           test byte [r13 + 0x21], 0x10 	       197	ldcref.c	FUNCTION_2	ELSE_1	IF_8	CALL_10
0x400075e	            0x7510	                           jne 0x4000770	       197	ldcref.c	FUNCTION_2	ELSE_1	IF_8	CALL_10
0x4000760	        0x804b1001	                 or byte [rbx + 0x10], 1	       200	ldcref.c	FUNCTION_2	ELSE_2
0x4000764	        0x4883c408	                              add rsp, 8	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000768	              0x5b	                                 pop rbx	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000769	              0x5d	                                 pop rbp	       201	ldcref.c	FUNCTION_2	ELSE_2
0x400076a	            0x415c	                                 pop r12	       201	ldcref.c	FUNCTION_2	ELSE_2
0x400076c	            0x415d	                                 pop r13	       201	ldcref.c	FUNCTION_2	ELSE_2
0x400076e	              0xc3	                                     ret	       201	ldcref.c	FUNCTION_2	ELSE_2
0x400076f	              0x90	                                     nop	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000770	        0x804b1002	                 or byte [rbx + 0x10], 2	       198	ldcref.c	FUNCTION_2	ELSE_1	IF_8
0x4000774	        0x4883c408	                              add rsp, 8	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000778	              0x5b	                                 pop rbx	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000779	              0x5d	                                 pop rbp	       201	ldcref.c	FUNCTION_2	ELSE_2
0x400077a	            0x415c	                                 pop r12	       201	ldcref.c	FUNCTION_2	ELSE_2
0x400077c	            0x415d	                                 pop r13	       201	ldcref.c	FUNCTION_2	ELSE_2
0x400077e	              0xc3	                                     ret	       201	ldcref.c	FUNCTION_2	ELSE_2
0x400077f	              0x90	                                     nop	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000780	      0xba28000000	                           mov edx, 0x28	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000785	      0xbe00000000	                              mov esi, 0	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x400078a	      0xbf00000000	                              mov edi, 0	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x400078f	      0xe800000000	                          call 0x4000794	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000794	            0x85c0	                           test eax, eax	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000796	            0x741e	                            je 0x40007b6	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000798	    0xc70500000000	               mov dword [0x040007a2], 1	       171	ldcref.c	FUNCTION_2	IF_1
0x40007a2	      0xe92affffff	                           jmp 0x40006d1	       171	ldcref.c	FUNCTION_2	IF_1
0x40007a7	        0x804b1004	                 or byte [rbx + 0x10], 4	       196	ldcref.c	FUNCTION_2	IF_7
0x40007ab	        0x4883c408	                              add rsp, 8	       201	ldcref.c	FUNCTION_2	ELSE_2
0x40007af	              0x5b	                                 pop rbx	       201	ldcref.c	FUNCTION_2	ELSE_2
0x40007b0	              0x5d	                                 pop rbp	       201	ldcref.c	FUNCTION_2	ELSE_2
0x40007b1	            0x415c	                                 pop r12	       201	ldcref.c	FUNCTION_2	ELSE_2
0x40007b3	            0x415d	                                 pop r13	       201	ldcref.c	FUNCTION_2	ELSE_2
0x40007b5	              0xc3	                                     ret	       201	ldcref.c	FUNCTION_2	ELSE_2
0x40007b6	            0x31ff	                            xor edi, edi	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x40007b8	      0xba05000000	                              mov edx, 5	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x40007bd	      0xbe00000000	                              mov esi, 0	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x40007c2	      0xe800000000	                          call 0x40007c7	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x40007c7	          0x4889c7	                            mov rdi, rax	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x40007ca	            0x31c0	                            xor eax, eax	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x40007cc	      0xe800000000	                          call 0x40007d1	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x40007d1	            0xebc5	                           jmp 0x4000798	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x40007d3	            0x31ff	                            xor edi, edi	       176	ldcref.c	FUNCTION_2	CALL_5
0x40007d5	      0xba05000000	                              mov edx, 5	       176	ldcref.c	FUNCTION_2	CALL_5
0x40007da	      0xbe00000000	                              mov esi, 0	       176	ldcref.c	FUNCTION_2	CALL_5
0x40007df	      0xe800000000	                          call 0x40007e4	       176	ldcref.c	FUNCTION_2	CALL_5
0x40007e4	          0x4889c7	                            mov rdi, rax	       176	ldcref.c	FUNCTION_2	CALL_5
0x40007e7	            0x31c0	                            xor eax, eax	       176	ldcref.c	FUNCTION_2	CALL_5
0x40007e9	      0xe800000000	                          call 0x40007ee	       176	ldcref.c	FUNCTION_2	CALL_5
0x40007ee	      0xe9fefeffff	                           jmp 0x40006f1	       176	ldcref.c	FUNCTION_2	CALL_5
0x40007f3	            0x31ff	                            xor edi, edi	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x40007f5	      0xba05000000	                              mov edx, 5	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x40007fa	      0xbe00000000	                              mov esi, 0	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x40007ff	      0xe800000000	                          call 0x4000804	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x4000804	          0x4889c7	                            mov rdi, rax	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x4000807	            0x31c0	                            xor eax, eax	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x4000809	      0xe800000000	                          call 0x400080e	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x400080e	      0xe91effffff	                           jmp 0x4000731	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
cref_fill_array	FOR,0:DO,0:CALL,2:SWITCH,0:WHILE,0:functions,0:IF,1:ELSE,0	29
0x40000b0	              0x55	                                push rbp	       328	ldcref.c	FUNCTION_4
0x40000b1	              0x53	                                push rbx	       328	ldcref.c	FUNCTION_4
0x40000b2	          0x4889f5	                            mov rbp, rsi	       328	ldcref.c	FUNCTION_4
0x40000b5	          0x4889fb	                            mov rbx, rdi	       328	ldcref.c	FUNCTION_4
0x40000b8	        0x4883ec08	                              sub rsp, 8	       328	ldcref.c	FUNCTION_4
0x40000bc	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       331	ldcref.c	FUNCTION_4	CALL_1
0x40000c1	            0x740f	                            je 0x40000d2	       331	ldcref.c	FUNCTION_4	CALL_1
0x40000c3	      0xbe4b010000	                          mov esi, 0x14b	       331	ldcref.c	FUNCTION_4	CALL_1
0x40000c8	      0xbf00000000	                              mov edi, 0	       331	ldcref.c	FUNCTION_4	CALL_1
0x40000cd	      0xe800000000	                          call 0x40000d2	       331	ldcref.c	FUNCTION_4	CALL_1
0x40000d2	        0x488b7308	                mov rsi, qword [rbx + 8]	       332	ldcref.c	FUNCTION_4	CALL_2
0x40000d6	    0x488b3d000000	            mov rdi, qword [0x040000dd] 	       332	ldcref.c	FUNCTION_4	CALL_2
0x40000dd	      0xba03000000	                              mov edx, 3	       332	ldcref.c	FUNCTION_4	CALL_2
0x40000e2	      0xe800000000	                          call 0x40000e7	       332	ldcref.c	FUNCTION_4	CALL_2
0x40000e7	          0x4885c0	                           test rax, rax	       334	ldcref.c	FUNCTION_4	IF_1
0x40000ea	        0x48894318	             mov qword [rbx + 0x18], rax	       332	ldcref.c	FUNCTION_4	CALL_2
0x40000ee	            0x7420	                            je 0x4000110	       334	ldcref.c	FUNCTION_4	IF_1
0x40000f0	        0x488b4500	                    mov rax, qword [rbp]	       337	ldcref.c	FUNCTION_4
0x40000f4	          0x488918	                    mov qword [rax], rbx	       337	ldcref.c	FUNCTION_4
0x40000f7	      0x4883450008	                      add qword [rbp], 8	       339	ldcref.c	FUNCTION_4
0x40000fc	        0x4883c408	                              add rsp, 8	       342	ldcref.c	FUNCTION_4
0x4000100	      0xb801000000	                              mov eax, 1	       342	ldcref.c	FUNCTION_4
0x4000105	              0x5b	                                 pop rbx	       342	ldcref.c	FUNCTION_4
0x4000106	              0x5d	                                 pop rbp	       342	ldcref.c	FUNCTION_4
0x4000107	              0xc3	                                     ret	       342	ldcref.c	FUNCTION_4
0x4000108	     0xf1f84000000	                   nop dword [rax + rax]	       342	ldcref.c	FUNCTION_4
0x4000110	        0x488b4308	                mov rax, qword [rbx + 8]	       335	ldcref.c	FUNCTION_4	IF_1
0x4000114	        0x48894318	             mov qword [rbx + 0x18], rax	       335	ldcref.c	FUNCTION_4	IF_1
0x4000118	            0xebd6	                           jmp 0x40000f0	       335	ldcref.c	FUNCTION_4	IF_1
output_cref	FOR,1:DO,0:CALL,10:SWITCH,0:WHILE,1:functions,0:IF,1:ELSE,0	245
0x4000ba0	            0x4157	                                push r15	       366	ldcref.c	FUNCTION_6
0x4000ba2	            0x4156	                                push r14	       366	ldcref.c	FUNCTION_6
0x4000ba4	      0xba05000000	                              mov edx, 5	       371	ldcref.c	FUNCTION_6	CALL_1
0x4000ba9	            0x4155	                                push r13	       366	ldcref.c	FUNCTION_6
0x4000bab	            0x4154	                                push r12	       366	ldcref.c	FUNCTION_6
0x4000bad	      0xbe00000000	                              mov esi, 0	       371	ldcref.c	FUNCTION_6	CALL_1
0x4000bb2	              0x55	                                push rbp	       366	ldcref.c	FUNCTION_6
0x4000bb3	              0x53	                                push rbx	       366	ldcref.c	FUNCTION_6
0x4000bb4	          0x4889fd	                            mov rbp, rdi	       366	ldcref.c	FUNCTION_6
0x4000bb7	            0x31ff	                            xor edi, edi	       371	ldcref.c	FUNCTION_6	CALL_1
0x4000bb9	        0x4883ec18	                           sub rsp, 0x18	       366	ldcref.c	FUNCTION_6
0x4000bbd	    0x64488b042528	                mov rax, qword fs:[0x28]	       366	ldcref.c	FUNCTION_6
0x4000bc6	      0x4889442408	                mov qword [rsp + 8], rax	       366	ldcref.c	FUNCTION_6
0x4000bcb	            0x31c0	                            xor eax, eax	       366	ldcref.c	FUNCTION_6
0x4000bcd	      0xe800000000	                          call 0x4000bd2	       371	ldcref.c	FUNCTION_6	CALL_1
0x4000bd2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000bd7	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_14
0x4000bda	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_14
0x4000bdd	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4000bdf	      0xe800000000	                          call 0x4000be4	        97	stdio2.h	CALL_14
0x4000be4	      0xba05000000	                              mov edx, 5	       372	ldcref.c	FUNCTION_6	CALL_2
0x4000be9	            0x31ff	                            xor edi, edi	       372	ldcref.c	FUNCTION_6	CALL_2
0x4000beb	      0xbe00000000	                              mov esi, 0	       372	ldcref.c	FUNCTION_6	CALL_2
0x4000bf0	      0xe800000000	                          call 0x4000bf5	       372	ldcref.c	FUNCTION_6	CALL_2
0x4000bf5	          0x4889ee	                            mov rsi, rbp	        97	stdio2.h	CALL_14
0x4000bf8	          0x4889c3	                            mov rbx, rax	       372	ldcref.c	FUNCTION_6	CALL_2
0x4000bfb	          0x4889c7	                            mov rdi, rax	        97	stdio2.h	CALL_14
0x4000bfe	      0xe800000000	                          call 0x4000c03	        97	stdio2.h	CALL_14
0x4000c03	          0x4889df	                            mov rdi, rbx	       374	ldcref.c	FUNCTION_6	CALL_3
0x4000c06	      0xe800000000	                          call 0x4000c0b	       374	ldcref.c	FUNCTION_6	CALL_3
0x4000c0b	          0x83f831	                           cmp eax, 0x31	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000c0e	            0x89c3	                            mov ebx, eax	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000c10	            0x7f1b	                            jg 0x4000c2d	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000c12	    0x660f1f440000	                    nop word [rax + rax]	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000c18	          0x4889ee	                            mov rsi, rbp	       377	ldcref.c	FUNCTION_6	WHILE_1	CALL_4
0x4000c1b	      0xbf20000000	                           mov edi, 0x20	       377	ldcref.c	FUNCTION_6	WHILE_1	CALL_4
0x4000c20	          0x83c301	                              add ebx, 1	       378	ldcref.c	FUNCTION_6	WHILE_1
0x4000c23	      0xe800000000	                          call 0x4000c28	       377	ldcref.c	FUNCTION_6	WHILE_1	CALL_4
0x4000c28	          0x83fb32	                           cmp ebx, 0x32	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000c2b	            0x75eb	                           jne 0x4000c18	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000c2d	            0x31ff	                            xor edi, edi	       380	ldcref.c	FUNCTION_6	CALL_5
0x4000c2f	      0xba05000000	                              mov edx, 5	       380	ldcref.c	FUNCTION_6	CALL_5
0x4000c34	      0xbe00000000	                              mov esi, 0	       380	ldcref.c	FUNCTION_6	CALL_5
0x4000c39	      0xe800000000	                          call 0x4000c3e	       380	ldcref.c	FUNCTION_6	CALL_5
0x4000c3e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000c43	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_14
0x4000c46	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_14
0x4000c49	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4000c4b	      0xe800000000	                          call 0x4000c50	        97	stdio2.h	CALL_14
0x4000c50	    0x8b1500000000	            mov edx, dword [0x04000c56] 	       382	ldcref.c	FUNCTION_6	IF_1
0x4000c56	            0x85d2	                           test edx, edx	       382	ldcref.c	FUNCTION_6	IF_1
0x4000c58	     0xf84ad020000	                            je 0x4000f0b	       382	ldcref.c	FUNCTION_6	IF_1
0x4000c5e	    0x488b05000000	            mov rax, qword [0x04000c65] 	       388	ldcref.c	FUNCTION_6	CALL_7
0x4000c65	    0x488d3cc50000	                        lea rdi, [rax*8]	       388	ldcref.c	FUNCTION_6	CALL_7
0x4000c6d	      0xe800000000	                          call 0x4000c72	       388	ldcref.c	FUNCTION_6	CALL_7
0x4000c72	      0xbe00000000	                              mov esi, 0	       391	ldcref.c	FUNCTION_6
0x4000c77	          0x4889e2	                            mov rdx, rsp	       391	ldcref.c	FUNCTION_6
0x4000c7a	      0xbf00000000	                              mov edi, 0	       391	ldcref.c	FUNCTION_6
0x4000c7f	          0x4989c5	                            mov r13, rax	       388	ldcref.c	FUNCTION_6	CALL_7
0x4000c82	        0x48890424	                    mov qword [rsp], rax	       390	ldcref.c	FUNCTION_6
0x4000c86	      0xe800000000	                          call 0x4000c8b	       391	ldcref.c	FUNCTION_6
0x4000c8b	        0x488b0424	                    mov rax, qword [rsp]	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000c8f	    0x488b35000000	            mov rsi, qword [0x04000c96] 	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000c96	          0x4c29e8	                            sub rax, r13	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000c99	        0x48c1f803	                              sar rax, 3	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000c9d	          0x4839f0	                            cmp rax, rsi	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000ca0	            0x7416	                            je 0x4000cb8	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000ca2	      0xbe88010000	                          mov esi, 0x188	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000ca7	      0xbf00000000	                              mov edi, 0	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000cac	      0xe800000000	                          call 0x4000cb1	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000cb1	    0x488b35000000	            mov rsi, qword [0x04000cb8] 	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000cb8	      0xb900000000	                              mov ecx, 0	       394	ldcref.c	FUNCTION_6	CALL_9
0x4000cbd	      0xba08000000	                              mov edx, 8	       394	ldcref.c	FUNCTION_6	CALL_9
0x4000cc2	          0x4c89ef	                            mov rdi, r13	       394	ldcref.c	FUNCTION_6	CALL_9
0x4000cc5	      0xe800000000	                          call 0x4000cca	       394	ldcref.c	FUNCTION_6	CALL_9
0x4000cca	    0x488b05000000	            mov rax, qword [0x04000cd1] 	       396	ldcref.c	FUNCTION_6
0x4000cd1	      0x4d8d74c500	                  lea r14, [r13 + rax*8]	       396	ldcref.c	FUNCTION_6
0x4000cd6	          0x4d39f5	                            cmp r13, r14	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000cd9	     0xf8385010000	                           jae 0x4000e64	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000cdf	              0x90	                                     nop	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000ce0	        0x4d8b6500	                    mov r12, qword [r13]	       398	ldcref.c	FUNCTION_6	CALL_10
0x4000ce4	    0x488b3d000000	            mov rdi, qword [0x04000ceb] 	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000ceb	            0x31c9	                            xor ecx, ecx	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000ced	            0x31d2	                            xor edx, edx	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000cef	    0x41b801000000	                              mov r8d, 1	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000cf5	      0x498b742408	                mov rsi, qword [r12 + 8]	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000cfa	      0xe800000000	                          call 0x4000cff	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000cff	          0x4885c0	                           test rax, rax	       412	ldcref.c	FUNCTION_7	IF_1
0x4000d02	     0xf842b020000	                            je 0x4000f33	       412	ldcref.c	FUNCTION_7	IF_1
0x4000d08	        0x80781803	                cmp byte [rax + 0x18], 3	       419	ldcref.c	FUNCTION_7	ELSE_1	IF_2
0x4000d0c	     0xf84a0010000	                            je 0x4000eb2	       419	ldcref.c	FUNCTION_7	ELSE_1	IF_2
0x4000d12	    0x8b0500000000	            mov eax, dword [0x04000d18] 	       435	ldcref.c	FUNCTION_7	IF_7
0x4000d18	            0x85c0	                           test eax, eax	       435	ldcref.c	FUNCTION_7	IF_7
0x4000d1a	     0xf8467010000	                            je 0x4000e87	       435	ldcref.c	FUNCTION_7	IF_7
0x4000d20	      0x498b4c2418	            mov rcx, qword [r12 + 0x18] 	        97	stdio2.h	CALL_14
0x4000d25	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4000d2a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000d2f	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_14
0x4000d32	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4000d34	      0xe800000000	                          call 0x4000d39	        97	stdio2.h	CALL_14
0x4000d39	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	       438	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000d3e	      0xe800000000	                          call 0x4000d43	       438	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000d43	          0x8d5801	                      lea ebx, [rax + 1]	       438	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000d46	      0x4d8b7c2420	            mov r15, qword [r12 + 0x20] 	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000d4b	          0x4d85ff	                           test r15, r15	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000d4e	     0xf84f0000000	                            je 0x4000e44	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000d54	         0xf1f4000	                         nop dword [rax]	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000d58	      0x41f6471001	               test byte [r15 + 0x10], 1	       448	ldcref.c	FUNCTION_7	FOR_2	IF_8
0x4000d5d	            0x7433	                            je 0x4000d92	       448	ldcref.c	FUNCTION_7	FOR_2	IF_8
0x4000d5f	          0x83fb31	                           cmp ebx, 0x31	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000d62	            0x7f19	                            jg 0x4000d7d	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000d64	         0xf1f4000	                         nop dword [rax]	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000d68	          0x4889ee	                            mov rsi, rbp	       452	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1	CALL_6
0x4000d6b	      0xbf20000000	                           mov edi, 0x20	       452	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1	CALL_6
0x4000d70	          0x83c301	                              add ebx, 1	       453	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000d73	      0xe800000000	                          call 0x4000d78	       452	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1	CALL_6
0x4000d78	          0x83fb32	                           cmp ebx, 0x32	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000d7b	            0x75eb	                           jne 0x4000d68	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000d7d	        0x498b5708	                mov rdx, qword [r15 + 8]	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_7
0x4000d81	      0xbe00000000	                              mov esi, 0	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_7
0x4000d86	          0x4889ef	                            mov rdi, rbp	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_7
0x4000d89	            0x31c0	                            xor eax, eax	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_7
0x4000d8b	            0x31db	                            xor ebx, ebx	       456	ldcref.c	FUNCTION_7	FOR_2	IF_8
0x4000d8d	      0xe800000000	                          call 0x4000d92	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_7
0x4000d92	          0x4d8b3f	                    mov r15, qword [r15]	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000d95	          0x4d85ff	                           test r15, r15	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000d98	            0x75be	                           jne 0x4000d58	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000d9a	      0x4d8b7c2420	            mov r15, qword [r12 + 0x20] 	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000d9f	          0x4d85ff	                           test r15, r15	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000da2	     0xf849c000000	                            je 0x4000e44	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000da8	     0xf1f84000000	                   nop dword [rax + rax]	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000db0	      0x41f6471002	               test byte [r15 + 0x10], 2	       462	ldcref.c	FUNCTION_7	FOR_3	IF_9
0x4000db5	            0x7433	                            je 0x4000dea	       462	ldcref.c	FUNCTION_7	FOR_3	IF_9
0x4000db7	          0x83fb31	                           cmp ebx, 0x31	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000dba	            0x7f19	                            jg 0x4000dd5	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000dbc	         0xf1f4000	                         nop dword [rax]	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000dc0	          0x4889ee	                            mov rsi, rbp	       466	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2	CALL_8
0x4000dc3	      0xbf20000000	                           mov edi, 0x20	       466	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2	CALL_8
0x4000dc8	          0x83c301	                              add ebx, 1	       467	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000dcb	      0xe800000000	                          call 0x4000dd0	       466	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2	CALL_8
0x4000dd0	          0x83fb32	                           cmp ebx, 0x32	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000dd3	            0x75eb	                           jne 0x4000dc0	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000dd5	        0x498b5708	                mov rdx, qword [r15 + 8]	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_9
0x4000dd9	      0xbe00000000	                              mov esi, 0	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_9
0x4000dde	          0x4889ef	                            mov rdi, rbp	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_9
0x4000de1	            0x31c0	                            xor eax, eax	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_9
0x4000de3	            0x31db	                            xor ebx, ebx	       470	ldcref.c	FUNCTION_7	FOR_3	IF_9
0x4000de5	      0xe800000000	                          call 0x4000dea	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_9
0x4000dea	          0x4d8b3f	                    mov r15, qword [r15]	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000ded	          0x4d85ff	                           test r15, r15	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000df0	            0x75be	                           jne 0x4000db0	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000df2	      0x4d8b642420	            mov r12, qword [r12 + 0x20] 	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000df7	          0x4d85e4	                           test r12, r12	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000dfa	            0x7448	                            je 0x4000e44	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000dfc	         0xf1f4000	                         nop dword [rax]	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000e00	    0x41f644241003	               test byte [r12 + 0x10], 3	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000e06	            0x7533	                           jne 0x4000e3b	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000e08	          0x83fb31	                           cmp ebx, 0x31	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000e0b	            0x7f18	                            jg 0x4000e25	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000e0d	           0xf1f00	                         nop dword [rax]	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000e10	          0x4889ee	                            mov rsi, rbp	       480	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3	CALL_10
0x4000e13	      0xbf20000000	                           mov edi, 0x20	       480	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3	CALL_10
0x4000e18	          0x83c301	                              add ebx, 1	       481	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000e1b	      0xe800000000	                          call 0x4000e20	       480	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3	CALL_10
0x4000e20	          0x83fb32	                           cmp ebx, 0x32	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000e23	            0x75eb	                           jne 0x4000e10	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000e25	      0x498b542408	                mov rdx, qword [r12 + 8]	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_11
0x4000e2a	      0xbe00000000	                              mov esi, 0	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_11
0x4000e2f	          0x4889ef	                            mov rdi, rbp	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_11
0x4000e32	            0x31c0	                            xor eax, eax	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_11
0x4000e34	            0x31db	                            xor ebx, ebx	       484	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000e36	      0xe800000000	                          call 0x4000e3b	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_11
0x4000e3b	        0x4d8b2424	                    mov r12, qword [r12]	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000e3f	          0x4d85e4	                           test r12, r12	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000e42	            0x75bc	                           jne 0x4000e00	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000e44	            0x85db	                           test ebx, ebx	       488	ldcref.c	FUNCTION_7	CALL_12
0x4000e46	            0x740f	                            je 0x4000e57	       488	ldcref.c	FUNCTION_7	CALL_12
0x4000e48	      0xbee8010000	                          mov esi, 0x1e8	       488	ldcref.c	FUNCTION_7	CALL_12
0x4000e4d	      0xbf00000000	                              mov edi, 0	       488	ldcref.c	FUNCTION_7	CALL_12
0x4000e52	      0xe800000000	                          call 0x4000e57	       488	ldcref.c	FUNCTION_7	CALL_12
0x4000e57	        0x4983c508	                              add r13, 8	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000e5b	          0x4d39ee	                            cmp r14, r13	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000e5e	     0xf877cfeffff	                            ja 0x4000ce0	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000e64	      0x488b442408	                mov rax, qword [rsp + 8]	       399	ldcref.c	FUNCTION_6
0x4000e69	    0x644833042528	                xor rax, qword fs:[0x28]	       399	ldcref.c	FUNCTION_6
0x4000e72	     0xf85e3000000	                           jne 0x4000f5b	       399	ldcref.c	FUNCTION_6
0x4000e78	        0x4883c418	                           add rsp, 0x18	       399	ldcref.c	FUNCTION_6
0x4000e7c	              0x5b	                                 pop rbx	       399	ldcref.c	FUNCTION_6
0x4000e7d	              0x5d	                                 pop rbp	       399	ldcref.c	FUNCTION_6
0x4000e7e	            0x415c	                                 pop r12	       399	ldcref.c	FUNCTION_6
0x4000e80	            0x415d	                                 pop r13	       399	ldcref.c	FUNCTION_6
0x4000e82	            0x415e	                                 pop r14	       399	ldcref.c	FUNCTION_6
0x4000e84	            0x415f	                                 pop r15	       399	ldcref.c	FUNCTION_6
0x4000e86	              0xc3	                                     ret	       399	ldcref.c	FUNCTION_6
0x4000e87	      0x498b4c2408	                mov rcx, qword [r12 + 8]	        97	stdio2.h	CALL_14
0x4000e8c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4000e91	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000e96	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_14
0x4000e99	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4000e9b	      0xe800000000	                          call 0x4000ea0	        97	stdio2.h	CALL_14
0x4000ea0	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_5
0x4000ea5	      0xe800000000	                          call 0x4000eaa	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_5
0x4000eaa	          0x8d5801	                      lea ebx, [rax + 1]	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_5
0x4000ead	      0xe994feffff	                           jmp 0x4000d46	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_5
0x4000eb2	        0x488b4028	            mov rax, qword [rax + 0x28] 	       421	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x4000eb6	      0x4883786800	               cmp qword [rax + 0x68], 0	       421	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x4000ebb	            0x749a	                            je 0x4000e57	       421	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x4000ebd	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       423	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000ec4	          0x4885c0	                           test rax, rax	       423	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000ec7	     0xf8445feffff	                            je 0x4000d12	       423	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000ecd	        0xf6404508	               test byte [rax + 0x45], 8	       424	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000ed1	     0xf843bfeffff	                            je 0x4000d12	       424	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000ed7	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000edc	          0x4885c0	                           test rax, rax	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000edf	            0x751b	                           jne 0x4000efc	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000ee1	      0xe971ffffff	                           jmp 0x4000e57	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000ee6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000ef0	          0x488b00	                    mov rax, qword [rax]	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000ef3	          0x4885c0	                           test rax, rax	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000ef6	     0xf845bffffff	                            je 0x4000e57	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000efc	        0x488b5008	                mov rdx, qword [rax + 8]	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000f00	        0xf6424508	               test byte [rdx + 0x45], 8	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000f04	            0x75ea	                           jne 0x4000ef0	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000f06	      0xe907feffff	                           jmp 0x4000d12	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000f0b	            0x31ff	                            xor edi, edi	       384	ldcref.c	FUNCTION_6	IF_1	CALL_6
0x4000f0d	      0xba05000000	                              mov edx, 5	       384	ldcref.c	FUNCTION_6	IF_1	CALL_6
0x4000f12	      0xbe00000000	                              mov esi, 0	       384	ldcref.c	FUNCTION_6	IF_1	CALL_6
0x4000f17	      0xe800000000	                          call 0x4000f1c	       384	ldcref.c	FUNCTION_6	IF_1	CALL_6
0x4000f1c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000f21	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_14
0x4000f24	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_14
0x4000f27	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4000f29	      0xe800000000	                          call 0x4000f2e	        97	stdio2.h	CALL_14
0x4000f2e	      0xe931ffffff	                           jmp 0x4000e64	        97	stdio2.h	CALL_14
0x4000f33	      0x498b5c2408	                mov rbx, qword [r12 + 8]	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000f38	            0x31ff	                            xor edi, edi	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000f3a	      0xba05000000	                              mov edx, 5	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000f3f	      0xbe00000000	                              mov esi, 0	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000f44	      0xe800000000	                          call 0x4000f49	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000f49	          0x4889de	                            mov rsi, rbx	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000f4c	          0x4889c7	                            mov rdi, rax	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000f4f	            0x31c0	                            xor eax, eax	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000f51	      0xe800000000	                          call 0x4000f56	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000f56	      0xe9b7fdffff	                           jmp 0x4000d12	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000f5b	      0xe800000000	              call sym.check_nocrossrefs	       399	ldcref.c	FUNCTION_6
check_nocrossref	FOR,3:DO,0:CALL,6:SWITCH,0:WHILE,0:functions,0:IF,5:ELSE,0	81
0x4000310	            0x4157	                                push r15	       553	ldcref.c	FUNCTION_10
0x4000312	            0x4156	                                push r14	       553	ldcref.c	FUNCTION_10
0x4000314	          0x4989ff	                            mov r15, rdi	       553	ldcref.c	FUNCTION_10
0x4000317	            0x4155	                                push r13	       553	ldcref.c	FUNCTION_10
0x4000319	            0x4154	                                push r12	       553	ldcref.c	FUNCTION_10
0x400031b	            0x31c9	                            xor ecx, ecx	       561	ldcref.c	FUNCTION_10	CALL_1
0x400031d	              0x55	                                push rbp	       553	ldcref.c	FUNCTION_10
0x400031e	              0x53	                                push rbx	       553	ldcref.c	FUNCTION_10
0x400031f	            0x31d2	                            xor edx, edx	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000321	    0x41b801000000	                              mov r8d, 1	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000327	        0x4883ec08	                              sub rsp, 8	       553	ldcref.c	FUNCTION_10
0x400032b	        0x488b7708	                mov rsi, qword [rdi + 8]	       561	ldcref.c	FUNCTION_10	CALL_1
0x400032f	    0x488b3d000000	            mov rdi, qword [0x04000336] 	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000336	      0xe800000000	                          call 0x400033b	       561	ldcref.c	FUNCTION_10	CALL_1
0x400033b	          0x4885c0	                           test rax, rax	       563	ldcref.c	FUNCTION_10	IF_1
0x400033e	     0xf84b5000000	                            je 0x40003f9	       563	ldcref.c	FUNCTION_10	IF_1
0x4000344	          0x4889c5	                            mov rbp, rax	       563	ldcref.c	FUNCTION_10	IF_1
0x4000347	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       570	ldcref.c	FUNCTION_10	IF_2
0x400034b	          0x83e803	                              sub eax, 3	       570	ldcref.c	FUNCTION_10	IF_2
0x400034e	            0x3c01	                               cmp al, 1	       570	ldcref.c	FUNCTION_10	IF_2
0x4000350	            0x7614	                           jbe 0x4000366	       570	ldcref.c	FUNCTION_10	IF_2
0x4000352	        0x4883c408	                              add rsp, 8	       593	ldcref.c	FUNCTION_10
0x4000356	      0xb801000000	                              mov eax, 1	       593	ldcref.c	FUNCTION_10
0x400035b	              0x5b	                                 pop rbx	       593	ldcref.c	FUNCTION_10
0x400035c	              0x5d	                                 pop rbp	       593	ldcref.c	FUNCTION_10
0x400035d	            0x415c	                                 pop r12	       593	ldcref.c	FUNCTION_10
0x400035f	            0x415d	                                 pop r13	       593	ldcref.c	FUNCTION_10
0x4000361	            0x415e	                                 pop r14	       593	ldcref.c	FUNCTION_10
0x4000363	            0x415f	                                 pop r15	       593	ldcref.c	FUNCTION_10
0x4000365	              0xc3	                                     ret	       593	ldcref.c	FUNCTION_10
0x4000366	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       574	ldcref.c	FUNCTION_10
0x400036a	        0x488b4068	            mov rax, qword [rax + 0x68] 	       574	ldcref.c	FUNCTION_10
0x400036e	          0x4885c0	                           test rax, rax	       575	ldcref.c	FUNCTION_10	IF_3
0x4000371	            0x74df	                            je 0x4000352	       575	ldcref.c	FUNCTION_10	IF_3
0x4000373	    0x4c8b25000000	            mov r12, qword [0x0400037a] 	       579	ldcref.c	FUNCTION_10	FOR_1
0x400037a	          0x4c8b30	                    mov r14, qword [rax]	       577	ldcref.c	FUNCTION_10	CALL_4
0x400037d	          0x4d85e4	                           test r12, r12	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000380	            0x74d0	                            je 0x4000352	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000382	    0x660f1f440000	                    nop word [rax + rax]	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000388	      0x4d8b6c2408	                mov r13, qword [r12 + 8]	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x400038d	          0x4d85ed	                           test r13, r13	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000390	            0x7459	                            je 0x40003eb	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000392	    0x660f1f440000	                    nop word [rax + rax]	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000398	        0x498b7d08	                mov rdi, qword [r13 + 8]	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x400039c	          0x4c89f6	                            mov rsi, r14	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x400039f	      0xe800000000	                          call 0x40003a4	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x40003a4	            0x85c0	                           test eax, eax	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x40003a6	            0x7531	                           jne 0x40003d9	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x40003a8	        0x498b5f20	            mov rbx, qword [r15 + 0x20] 	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x40003ac	          0x4885db	                           test rbx, rbx	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x40003af	            0x7428	                            je 0x40003d9	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x40003b1	     0xf1f80000000	                         nop dword [rax]	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x40003b8	        0x488b4b08	                mov rcx, qword [rbx + 8]	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x40003bc	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x40003c0	          0x4d89e0	                             mov r8, r12	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x40003c3	        0x488b7d08	                mov rdi, qword [rbp + 8]	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x40003c7	      0xbe01000000	                              mov esi, 1	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x40003cc	      0xe84ffdffff	                     call sym.check_refs	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x40003d1	          0x488b1b	                    mov rbx, qword [rbx]	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x40003d4	          0x4885db	                           test rbx, rbx	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x40003d7	            0x75df	                           jne 0x40003b8	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x40003d9	      0x418b442410	            mov eax, dword [r12 + 0x10] 	       588	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_5
0x40003de	            0x85c0	                           test eax, eax	       588	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_5
0x40003e0	            0x7509	                           jne 0x40003eb	       588	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_5
0x40003e2	        0x4d8b6d00	                    mov r13, qword [r13]	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x40003e6	          0x4d85ed	                           test r13, r13	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x40003e9	            0x75ad	                           jne 0x4000398	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x40003eb	        0x4d8b2424	                    mov r12, qword [r12]	       579	ldcref.c	FUNCTION_10	FOR_1
0x40003ef	          0x4d85e4	                           test r12, r12	       579	ldcref.c	FUNCTION_10	FOR_1
0x40003f2	            0x7594	                           jne 0x4000388	       579	ldcref.c	FUNCTION_10	FOR_1
0x40003f4	      0xe959ffffff	                           jmp 0x4000352	       579	ldcref.c	FUNCTION_10	FOR_1
0x40003f9	        0x498b5f08	                mov rbx, qword [r15 + 8]	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x40003fd	            0x31ff	                            xor edi, edi	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x40003ff	      0xba05000000	                              mov edx, 5	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000404	      0xbe00000000	                              mov esi, 0	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000409	      0xe800000000	                          call 0x400040e	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x400040e	          0x4889de	                            mov rsi, rbx	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000411	          0x4889c7	                            mov rdi, rax	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000414	            0x31c0	                            xor eax, eax	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000416	      0xe800000000	                          call 0x400041b	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x400041b	      0xe932ffffff	                           jmp 0x4000352	       567	ldcref.c	FUNCTION_10	IF_1
handle_asneeded_cref	FOR,9:DO,0:CALL,11:SWITCH,0:WHILE,0:functions,0:IF,6:ELSE,1	208
0x4000820	    0x8b1500000000	            mov edx, dword [0x04000826] 	       213	ldcref.c	ELSE_2	FUNCTION_3	IF_1
0x4000826	            0x4154	                                push r12	       210	ldcref.c	ELSE_2	FUNCTION_3
0x4000828	              0x55	                                push rbp	       210	ldcref.c	ELSE_2	FUNCTION_3
0x4000829	              0x53	                                push rbx	       210	ldcref.c	ELSE_2	FUNCTION_3
0x400082a	            0x85d2	                           test edx, edx	       213	ldcref.c	ELSE_2	FUNCTION_3	IF_1
0x400082c	     0xf84bd010000	                            je 0x40009ef	       213	ldcref.c	ELSE_2	FUNCTION_3	IF_1
0x4000832	            0x85f6	                           test esi, esi	       216	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000834	     0xf85bf010000	                           jne 0x40009f9	       216	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x400083a	    0x448b1d000000	           mov r11d, dword [0x04000841] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000841	            0x31ff	                            xor edi, edi	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000843	    0x488b05000000	            mov rax, qword [0x0400084a] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400084a	    0x488b0d000000	            mov rcx, qword [0x04000851] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000851	          0x4585db	                         test r11d, r11d	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000854	     0xf84e3010000	                            je 0x4000a3d	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400085a	    0x488b3d000000	            mov rdi, qword [0x04000861] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000861	    0x488b15000000	            mov rdx, qword [0x04000868] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000868	        0x418d43ff	                      lea eax, [r11 - 1]	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400086c	    0x4c8b15000000	            mov r10, qword [0x04000873] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000873	    0x448b05000000	            mov r8d, dword [0x0400087a] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400087a	            0x31db	                            xor ebx, ebx	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400087c	          0x4531c9	                            xor r9d, r9d	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400087f	          0x4889d1	                            mov rcx, rdx	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000882	      0x498d6cc208	              lea rbp, [r10 + rax*8 + 8]	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000887	          0x4889f8	                            mov rax, rdi	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400088a	          0x498b32	                    mov rsi, qword [r10]	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x400088d	          0x4885f6	                           test rsi, rsi	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x4000890	     0xf8482010000	                            je 0x4000a18	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x4000896	          0x4c01c7	                             add rdi, r8	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x4000899	     0xf1f80000000	                         nop dword [rax]	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40008a0	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40008a4	          0x4885c0	                           test rax, rax	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40008a7	            0x741f	                            je 0x40008c8	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40008a9	        0x4883c218	                           add rdx, 0x18	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40008ad	            0xeb04	                           jmp 0x40008b3	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40008af	              0x90	                                     nop	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40008b0	          0x4889ca	                            mov rdx, rcx	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40008b3	          0x488b00	                    mov rax, qword [rax]	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40008b6	        0x488d4a18	                   lea rcx, [rdx + 0x18]	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40008ba	          0x4885c0	                           test rax, rax	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40008bd	            0x75f1	                           jne 0x40008b0	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40008bf	          0x4889d1	                            mov rcx, rdx	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40008c2	    0x41b901000000	                              mov r9d, 1	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40008c8	          0x488b36	                    mov rsi, qword [rsi]	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40008cb	        0x498d0438	                     lea rax, [r8 + rdi]	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40008cf	          0x4885f6	                           test rsi, rsi	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40008d2	     0xf8438010000	                            je 0x4000a10	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40008d8	          0x4889c7	                            mov rdi, rax	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40008db	            0xebc3	                           jmp 0x40008a0	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40008dd	    0x488b35000000	            mov rsi, qword [0x040008e4] 	       275	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x40008e4	          0x4885f6	                           test rsi, rsi	       275	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x40008e7	     0xf847a020000	                            je 0x4000b67	       275	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x40008ed	    0x8b0500000000	            mov eax, dword [0x040008f3] 	       287	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40008f3	    0x488b15000000	            mov rdx, qword [0x040008fa] 	       284	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40008fa	            0x31ed	                            xor ebp, ebp	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x40008fc	    0x488b3d000000	            mov rdi, qword [0x04000903] 	       286	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000903	    0x890500000000	            mov dword [0x04000909], eax 	       287	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000909	    0x8b0500000000	            mov eax, dword [0x0400090f] 	       288	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x400090f	        0x4c8d2416	                    lea r12, [rsi + rdx]	       284	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000913	    0x48893d000000	            mov qword [0x0400091a], rdi 	       286	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x400091a	          0x4c89e3	                            mov rbx, r12	       285	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x400091d	    0x48031d000000	             add rbx, qword [0x04000924]	       285	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000924	    0x890500000000	            mov dword [0x0400092a], eax 	       288	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x400092a	      0xe800000000	                          call 0x400092f	        53	string3.h	FUNCTION_30	CALL_3
0x400092f	    0x488b05000000	            mov rax, qword [0x04000936] 	       290	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000936	    0x488905000000	            mov qword [0x0400093d], rax 	       290	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x400093d	    0x8b0500000000	            mov eax, dword [0x04000943] 	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x4000943	            0x85c0	                           test eax, eax	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x4000945	            0x747e	                            je 0x40009c5	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x4000947	    0x488b15000000	            mov rdx, qword [0x0400094e] 	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x400094e	            0x89e8	                            mov eax, ebp	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000950	        0x4c8b04c2	             mov r8, qword [rdx + rax*8]	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000954	          0x4d85c0	                             test r8, r8	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000957	            0x7461	                            je 0x40009ba	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000959	     0xf1f80000000	                         nop dword [rax]	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000960	    0x8b1500000000	            mov edx, dword [0x04000966] 	        53	string3.h	FUNCTION_30	CALL_3
0x4000966	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_30	CALL_3
0x4000969	          0x4c89c7	                             mov rdi, r8	        53	string3.h	FUNCTION_30	CALL_3
0x400096c	      0xe800000000	                          call 0x4000971	        53	string3.h	FUNCTION_30	CALL_3
0x4000971	          0x4989c0	                             mov r8, rax	        53	string3.h	FUNCTION_30	CALL_3
0x4000974	    0x8b0500000000	            mov eax, dword [0x0400097a] 	       301	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x400097a	          0x4901c4	                            add r12, rax	       301	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x400097d	        0x498b4020	              mov rax, qword [r8 + 0x20]	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000981	          0x4885c0	                           test rax, rax	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000984	            0x742c	                            je 0x40009b2	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000986	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000990	          0x488b13	                    mov rdx, qword [rbx]	        53	string3.h	FUNCTION_30	CALL_3
0x4000993	        0x4883c318	                           add rbx, 0x18	       306	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000997	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_30	CALL_3
0x400099a	        0x488b4bf0	             mov rcx, qword [rbx - 0x10]	        53	string3.h	FUNCTION_30	CALL_3
0x400099e	        0x48894808	                mov qword [rax + 8], rcx	        53	string3.h	FUNCTION_30	CALL_3
0x40009a2	        0x488b4bf8	                mov rcx, qword [rbx - 8]	        53	string3.h	FUNCTION_30	CALL_3
0x40009a6	          0x4885d2	                           test rdx, rdx	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x40009a9	        0x48894810	             mov qword [rax + 0x10], rcx	        53	string3.h	FUNCTION_30	CALL_3
0x40009ad	          0x4889d0	                            mov rax, rdx	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x40009b0	            0x75de	                           jne 0x4000990	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x40009b2	          0x4d8b00	                      mov r8, qword [r8]	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40009b5	          0x4d85c0	                             test r8, r8	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40009b8	            0x75a6	                           jne 0x4000960	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40009ba	          0x83c501	                              add ebp, 1	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x40009bd	    0x392d00000000	            cmp dword [0x040009c3], ebp 	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x40009c3	            0x7782	                            ja 0x4000947	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x40009c5	    0x488b35000000	            mov rsi, qword [0x040009cc] 	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x40009cc	    0x488b3d000000	            mov rdi, qword [0x040009d3] 	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x40009d3	      0xe800000000	                          call 0x40009d8	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x40009d8	    0x488b3d000000	            mov rdi, qword [0x040009df] 	       317	ldcref.c	ELSE_2	FUNCTION_3	CALL_11
0x40009df	      0xe800000000	                          call 0x40009e4	       317	ldcref.c	ELSE_2	FUNCTION_3	CALL_11
0x40009e4	    0x48c705000000	               mov qword [0x040009ef], 0	       318	ldcref.c	ELSE_2	FUNCTION_3
0x40009ef	      0xb801000000	                              mov eax, 1	       319	ldcref.c	ELSE_2	FUNCTION_3
0x40009f4	              0x5b	                                 pop rbx	       320	ldcref.c	ELSE_2	FUNCTION_3
0x40009f5	              0x5d	                                 pop rbp	       320	ldcref.c	ELSE_2	FUNCTION_3
0x40009f6	            0x415c	                                 pop r12	       320	ldcref.c	ELSE_2	FUNCTION_3
0x40009f8	              0xc3	                                     ret	       320	ldcref.c	ELSE_2	FUNCTION_3
0x40009f9	          0x83fe01	                              cmp esi, 1	       271	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009fc	     0xf84dbfeffff	                            je 0x40008dd	       271	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000a02	          0x83fe02	                              cmp esi, 2	       314	ldcref.c	ELSE_2	FUNCTION_3	ELSE_1	IF_6
0x4000a05	            0x74d1	                            je 0x40009d8	       314	ldcref.c	ELSE_2	FUNCTION_3	ELSE_1	IF_6
0x4000a07	              0x5b	                                 pop rbx	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000a08	            0x31c0	                            xor eax, eax	       240	ldcref.c	ELSE_2	FUNCTION_3	IF_2	IF_3
0x4000a0a	              0x5d	                                 pop rbp	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000a0b	            0x415c	                                 pop r12	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000a0d	              0xc3	                                     ret	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000a0e	            0x6690	                                     nop	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000a10	          0x4889f8	                            mov rax, rdi	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000a13	      0xbb01000000	                              mov ebx, 1	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000a18	        0x4983c208	                              add r10, 8	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000a1c	          0x4c39d5	                            cmp rbp, r10	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000a1f	     0xf8565feffff	                           jne 0x400088a	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000a25	          0x4584c9	                           test r9b, r9b	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000a28	     0xf8557010000	                           jne 0x4000b85	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000a2e	            0x84db	                             test bl, bl	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000a30	     0xf855b010000	                           jne 0x4000b91	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000a36	          0x4489df	                           mov edi, r11d	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000a39	        0x48c1e703	                              shl rdi, 3	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000a3d	          0x4801f8	                            add rax, rdi	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000a40	    0x48893d000000	            mov qword [0x04000a47], rdi 	       235	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000a47	        0x488d3c08	                    lea rdi, [rax + rcx]	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000a4b	      0xe800000000	                          call 0x4000a50	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000a50	      0xbe01000000	                              mov esi, 1	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x4000a55	      0xbf00000000	                              mov edi, 0	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x4000a5a	    0x488905000000	            mov qword [0x04000a61], rax 	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000a61	      0xe800000000	                          call 0x4000a66	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x4000a66	          0x4885c0	                           test rax, rax	       239	ldcref.c	ELSE_2	FUNCTION_3	IF_2	IF_3
0x4000a69	    0x488905000000	            mov qword [0x04000a70], rax 	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x4000a70	            0x7495	                            je 0x4000a07	       239	ldcref.c	ELSE_2	FUNCTION_3	IF_2	IF_3
0x4000a72	    0x488b1d000000	            mov rbx, qword [0x04000a79] 	       242	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_3
0x4000a79	    0x488b0d000000	            mov rcx, qword [0x04000a80] 	       242	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_3
0x4000a80	    0x488b35000000	            mov rsi, qword [0x04000a87] 	        53	string3.h	FUNCTION_30	CALL_3
0x4000a87	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_30	CALL_3
0x4000a8a	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_30	CALL_3
0x4000a8d	      0xe800000000	                          call 0x4000a92	        53	string3.h	FUNCTION_30	CALL_3
0x4000a92	    0x8b3500000000	            mov esi, dword [0x04000a98] 	       247	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000a98	    0x8b1500000000	            mov edx, dword [0x04000a9e] 	       246	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000a9e	          0x4889c1	                            mov rcx, rax	        53	string3.h	FUNCTION_30	CALL_3
0x4000aa1	    0x488b05000000	            mov rax, qword [0x04000aa8] 	       245	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000aa8	          0x4801d9	                            add rcx, rbx	       243	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000aab	          0x4889cb	                            mov rbx, rcx	       244	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000aae	    0x48031d000000	             add rbx, qword [0x04000ab5]	       244	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000ab5	    0x893500000000	            mov dword [0x04000abb], esi 	       247	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000abb	    0x488b35000000	            mov rsi, qword [0x04000ac2] 	       248	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000ac2	            0x85d2	                           test edx, edx	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000ac4	    0x488905000000	            mov qword [0x04000acb], rax 	       245	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000acb	    0x891500000000	            mov dword [0x04000ad1], edx 	       246	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000ad1	    0x488935000000	            mov qword [0x04000ad8], rsi 	       248	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000ad8	     0xf8411ffffff	                            je 0x40009ef	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000ade	            0x31ed	                            xor ebp, ebp	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000ae0	            0x89ea	                            mov edx, ebp	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000ae2	        0x4c8b24d0	            mov r12, qword [rax + rdx*8]	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000ae6	          0x4d85e4	                           test r12, r12	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000ae9	            0x7461	                            je 0x4000b4c	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000aeb	       0xf1f440000	                   nop dword [rax + rax]	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000af0	    0x8b1500000000	            mov edx, dword [0x04000af6] 	        53	string3.h	FUNCTION_30	CALL_3
0x4000af6	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_30	CALL_3
0x4000af9	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_30	CALL_3
0x4000afc	      0xe800000000	                          call 0x4000b01	        53	string3.h	FUNCTION_30	CALL_3
0x4000b01	          0x4889c1	                            mov rcx, rax	        53	string3.h	FUNCTION_30	CALL_3
0x4000b04	    0x8b0500000000	            mov eax, dword [0x04000b0a] 	       259	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000b0a	          0x4801c1	                            add rcx, rax	       259	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000b0d	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000b12	          0x4885c0	                           test rax, rax	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000b15	            0x742c	                            je 0x4000b43	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000b17	    0x660f1f840000	                    nop word [rax + rax]	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000b20	          0x488b10	                    mov rdx, qword [rax]	        53	string3.h	FUNCTION_30	CALL_3
0x4000b23	        0x4883c318	                           add rbx, 0x18	       264	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000b27	        0x488953e8	             mov qword [rbx - 0x18], rdx	        53	string3.h	FUNCTION_30	CALL_3
0x4000b2b	        0x488b5008	                mov rdx, qword [rax + 8]	        53	string3.h	FUNCTION_30	CALL_3
0x4000b2f	        0x488953f0	             mov qword [rbx - 0x10], rdx	        53	string3.h	FUNCTION_30	CALL_3
0x4000b33	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        53	string3.h	FUNCTION_30	CALL_3
0x4000b37	        0x488953f8	                mov qword [rbx - 8], rdx	        53	string3.h	FUNCTION_30	CALL_3
0x4000b3b	          0x488b00	                    mov rax, qword [rax]	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000b3e	          0x4885c0	                           test rax, rax	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000b41	            0x75dd	                           jne 0x4000b20	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000b43	        0x4d8b2424	                    mov r12, qword [r12]	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000b47	          0x4d85e4	                           test r12, r12	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000b4a	            0x75a4	                           jne 0x4000af0	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000b4c	          0x83c501	                              add ebp, 1	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000b4f	    0x392d00000000	            cmp dword [0x04000b55], ebp 	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000b55	     0xf8694feffff	                           jbe 0x40009ef	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000b5b	    0x488b05000000	            mov rax, qword [0x04000b62] 	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000b62	      0xe979ffffff	                           jmp 0x4000ae0	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000b67	      0xbf00000000	                              mov edi, 0	       279	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5	CALL_6
0x4000b6c	      0xe800000000	                          call 0x4000b71	       279	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5	CALL_6
0x4000b71	    0xc70500000000	               mov dword [0x04000b7b], 0	       280	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000b7b	      0xb801000000	                              mov eax, 1	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000b80	      0xe96ffeffff	                           jmp 0x40009f4	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000b85	    0x488915000000	            mov qword [0x04000b8c], rdx 	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000b8c	      0xe99dfeffff	                           jmp 0x4000a2e	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000b91	    0x48893d000000	            mov qword [0x04000b98], rdi 	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000b98	      0xe999feffff	                           jmp 0x4000a36	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
check_local_sym_xref	FOR,3:DO,0:CALL,6:SWITCH,0:WHILE,0:functions,0:IF,7:ELSE,0	90
0x40001d0	            0x4157	                                push r15	       508	ldcref.c	FUNCTION_9
0x40001d2	            0x4156	                                push r14	       508	ldcref.c	FUNCTION_9
0x40001d4	            0x4155	                                push r13	       508	ldcref.c	FUNCTION_9
0x40001d6	            0x4154	                                push r12	       508	ldcref.c	FUNCTION_9
0x40001d8	              0x55	                                push rbp	       508	ldcref.c	FUNCTION_9
0x40001d9	              0x53	                                push rbx	       508	ldcref.c	FUNCTION_9
0x40001da	        0x4883ec18	                           sub rsp, 0x18	       508	ldcref.c	FUNCTION_9
0x40001de	        0x4c8b6f20	            mov r13, qword [rdi + 0x20] 	       512	ldcref.c	FUNCTION_9
0x40001e2	          0x4d85ed	                           test r13, r13	       513	ldcref.c	FUNCTION_9	IF_1
0x40001e5	     0xf84ec000000	                            je 0x40002d7	       513	ldcref.c	FUNCTION_9	IF_1
0x40001eb	          0x4c89ef	                            mov rdi, r13	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x40001ee	      0xe800000000	                          call 0x40001f3	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x40001f3	            0x85c0	                           test eax, eax	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x40001f5	     0xf84eb000000	                            je 0x40002e6	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x40001fb	    0x498b85b00000	            mov rax, qword [r13 + 0xb0] 	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000202	          0x4c8b20	                    mov r12, qword [rax]	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000205	      0x4889442408	                mov qword [rsp + 8], rax	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x400020a	          0x4d85e4	                           test r12, r12	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x400020d	     0xf84c4000000	                            je 0x40002d7	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000213	       0xf1f440000	                   nop dword [rax + rax]	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000218	      0x418b442418	            mov eax, dword [r12 + 0x18] 	       522	ldcref.c	FUNCTION_9	FOR_1	IF_3
0x400021d	      0xa902700000	                        test eax, 0x7002	       522	ldcref.c	FUNCTION_9	FOR_1	IF_3
0x4000222	     0xf8598000000	                           jne 0x40002c0	       522	ldcref.c	FUNCTION_9	FOR_1	IF_3
0x4000228	      0xa901010000	                         test eax, 0x101	       524	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x400022d	     0xf848d000000	                            je 0x40002c0	       524	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000233	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000238	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x400023c	          0x4885d2	                           test rdx, rdx	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x400023f	            0x747f	                            je 0x40002c0	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000241	          0x4531f6	                          xor r14d, r14d	       532	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000244	          0xf6c401	                              test ah, 1	       533	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x4000247	          0x488b2a	                    mov rbp, qword [rdx]	       531	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x400024a	            0x7505	                           jne 0x4000251	       533	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x400024c	      0x4d8b742408	                mov r14, qword [r12 + 8]	       534	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x4000251	    0x488b1d000000	            mov rbx, qword [0x04000258] 	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000258	          0x4885db	                           test rbx, rbx	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x400025b	            0x7463	                            je 0x40002c0	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x400025d	           0xf1f00	                         nop dword [rax]	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000260	        0x4c8b7b08	                mov r15, qword [rbx + 8]	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000264	          0x4d85ff	                           test r15, r15	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000267	            0x7516	                           jne 0x400027f	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000269	            0xeb45	                           jmp 0x40002b0	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x400026b	       0xf1f440000	                   nop dword [rax + rax]	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000270	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x4000273	            0x85c0	                           test eax, eax	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x4000275	            0x7539	                           jne 0x40002b0	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x4000277	          0x4d8b3f	                    mov r15, qword [r15]	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x400027a	          0x4d85ff	                           test r15, r15	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x400027d	            0x7431	                            je 0x40002b0	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x400027f	        0x498b7f08	                mov rdi, qword [r15 + 8]	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000283	          0x4889ee	                            mov rsi, rbp	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000286	      0xe800000000	                          call 0x400028b	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x400028b	            0x85c0	                           test eax, eax	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x400028d	            0x75e1	                           jne 0x4000270	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x400028f	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x4000294	            0x31f6	                            xor esi, esi	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x4000296	          0x4989d8	                             mov r8, rbx	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x4000299	          0x4c89e9	                            mov rcx, r13	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x400029c	          0x4c89f7	                            mov rdi, r14	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x400029f	      0xe87cfeffff	                     call sym.check_refs	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x40002a4	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x40002a7	            0x85c0	                           test eax, eax	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x40002a9	            0x74cc	                            je 0x4000277	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x40002ab	       0xf1f440000	                   nop dword [rax + rax]	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x40002b0	          0x488b1b	                    mov rbx, qword [rbx]	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x40002b3	          0x4885db	                           test rbx, rbx	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x40002b6	            0x75a8	                           jne 0x4000260	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x40002b8	     0xf1f84000000	                   nop dword [rax + rax]	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x40002c0	    0x488344240808	                  add qword [rsp + 8], 8	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x40002c6	      0x488b442408	                mov rax, qword [rsp + 8]	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x40002cb	          0x4c8b20	                    mov r12, qword [rax]	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x40002ce	          0x4d85e4	                           test r12, r12	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x40002d1	     0xf8541ffffff	                           jne 0x4000218	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x40002d7	        0x4883c418	                           add rsp, 0x18	       547	ldcref.c	FUNCTION_9
0x40002db	              0x5b	                                 pop rbx	       547	ldcref.c	FUNCTION_9
0x40002dc	              0x5d	                                 pop rbp	       547	ldcref.c	FUNCTION_9
0x40002dd	            0x415c	                                 pop r12	       547	ldcref.c	FUNCTION_9
0x40002df	            0x415d	                                 pop r13	       547	ldcref.c	FUNCTION_9
0x40002e1	            0x415e	                                 pop r14	       547	ldcref.c	FUNCTION_9
0x40002e3	            0x415f	                                 pop r15	       547	ldcref.c	FUNCTION_9
0x40002e5	              0xc3	                                     ret	       547	ldcref.c	FUNCTION_9
0x40002e6	            0x31ff	                            xor edi, edi	       517	ldcref.c	FUNCTION_9	CALL_3
0x40002e8	      0xba05000000	                              mov edx, 5	       517	ldcref.c	FUNCTION_9	CALL_3
0x40002ed	      0xbe00000000	                              mov esi, 0	       517	ldcref.c	FUNCTION_9	CALL_3
0x40002f2	      0xe800000000	                          call 0x40002f7	       517	ldcref.c	FUNCTION_9	CALL_3
0x40002f7	          0x4c89ee	                            mov rsi, r13	       517	ldcref.c	FUNCTION_9	CALL_3
0x40002fa	          0x4889c7	                            mov rdi, rax	       517	ldcref.c	FUNCTION_9	CALL_3
0x40002fd	            0x31c0	                            xor eax, eax	       517	ldcref.c	FUNCTION_9	CALL_3
0x40002ff	      0xe800000000	                          call 0x4000304	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000304	      0xe9f2feffff	                           jmp 0x40001fb	       517	ldcref.c	FUNCTION_9	CALL_3
check_reloc_refs	FOR,2:DO,0:CALL,22:SWITCH,0:WHILE,0:functions,0:IF,7:ELSE,0	168
0x4000420	            0x4157	                                push r15	       646	ldcref.c	FUNCTION_12
0x4000422	            0x4156	                                push r14	       646	ldcref.c	FUNCTION_12
0x4000424	            0x4155	                                push r13	       646	ldcref.c	FUNCTION_12
0x4000426	            0x4154	                                push r12	       646	ldcref.c	FUNCTION_12
0x4000428	          0x4989f4	                            mov r12, rsi	       646	ldcref.c	FUNCTION_12
0x400042b	              0x55	                                push rbp	       646	ldcref.c	FUNCTION_12
0x400042c	              0x53	                                push rbx	       646	ldcref.c	FUNCTION_12
0x400042d	          0x4889d5	                            mov rbp, rdx	       646	ldcref.c	FUNCTION_12
0x4000430	        0x4883ec48	                           sub rsp, 0x48	       646	ldcref.c	FUNCTION_12
0x4000434	        0x488b4668	            mov rax, qword [rsi + 0x68] 	       661	ldcref.c	FUNCTION_12	CALL_1
0x4000438	      0x48897c2408	                mov qword [rsp + 8], rdi	       646	ldcref.c	FUNCTION_12
0x400043d	          0x488b18	                    mov rbx, qword [rax]	       661	ldcref.c	FUNCTION_12	CALL_1
0x4000440	        0x488b4208	                mov rax, qword [rdx + 8]	       663	ldcref.c	FUNCTION_12
0x4000444	        0x488b4068	            mov rax, qword [rax + 0x68] 	       664	ldcref.c	FUNCTION_12	CALL_2
0x4000448	          0x4889df	                            mov rdi, rbx	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x400044b	          0x4c8b28	                    mov r13, qword [rax]	       664	ldcref.c	FUNCTION_12	CALL_2
0x400044e	          0x4c89ee	                            mov rsi, r13	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x4000451	      0xe800000000	                          call 0x4000456	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x4000456	            0x85c0	                           test eax, eax	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x4000458	            0x7452	                            je 0x40004ac	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x400045a	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       670	ldcref.c	FUNCTION_12	FOR_1
0x400045e	        0x4c8b7008	                mov r14, qword [rax + 8]	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000462	          0x4d85f6	                           test r14, r14	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000465	            0x7511	                           jne 0x4000478	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000467	            0xeb43	                           jmp 0x40004ac	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000469	     0xf1f80000000	                         nop dword [rax]	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000470	          0x4d8b36	                    mov r14, qword [r14]	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000473	          0x4d85f6	                           test r14, r14	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000476	            0x7434	                            je 0x40004ac	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000478	        0x498b7608	                mov rsi, qword [r14 + 8]	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x400047c	          0x4889df	                            mov rdi, rbx	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x400047f	      0xe800000000	                          call 0x4000484	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x4000484	            0x85c0	                           test eax, eax	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x4000486	            0x75e8	                           jne 0x4000470	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x4000488	        0x488b4500	                    mov rax, qword [rbp]	       685	ldcref.c	FUNCTION_12
0x400048c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       688	ldcref.c	FUNCTION_12	CALL_5
0x4000491	          0x4c89e6	                            mov rsi, r12	       688	ldcref.c	FUNCTION_12	CALL_5
0x4000494	        0x448b7520	           mov r14d, dword [rbp + 0x20] 	       686	ldcref.c	FUNCTION_12
0x4000498	      0x4889442418	             mov qword [rsp + 0x18], rax	       685	ldcref.c	FUNCTION_12
0x400049d	      0xe800000000	                          call 0x40004a2	       688	ldcref.c	FUNCTION_12	CALL_5
0x40004a2	          0x4885c0	                           test rax, rax	       689	ldcref.c	FUNCTION_12	IF_4
0x40004a5	          0x4989c7	                            mov r15, rax	       688	ldcref.c	FUNCTION_12	CALL_5
0x40004a8	            0x7811	                            js 0x40004bb	       689	ldcref.c	FUNCTION_12	IF_4
0x40004aa	            0x752f	                           jne 0x40004db	       691	ldcref.c	FUNCTION_12	IF_5
0x40004ac	        0x4883c448	                           add rsp, 0x48	       731	ldcref.c	FUNCTION_12
0x40004b0	              0x5b	                                 pop rbx	       731	ldcref.c	FUNCTION_12
0x40004b1	              0x5d	                                 pop rbp	       731	ldcref.c	FUNCTION_12
0x40004b2	            0x415c	                                 pop r12	       731	ldcref.c	FUNCTION_12
0x40004b4	            0x415d	                                 pop r13	       731	ldcref.c	FUNCTION_12
0x40004b6	            0x415e	                                 pop r14	       731	ldcref.c	FUNCTION_12
0x40004b8	            0x415f	                                 pop r15	       731	ldcref.c	FUNCTION_12
0x40004ba	              0xc3	                                     ret	       731	ldcref.c	FUNCTION_12
0x40004bb	      0xbe00000000	                              mov esi, 0	       690	ldcref.c	FUNCTION_12	CALL_7
0x40004c0	            0x31ff	                            xor edi, edi	       690	ldcref.c	FUNCTION_12	CALL_7
0x40004c2	      0xba05000000	                              mov edx, 5	       690	ldcref.c	FUNCTION_12	CALL_7
0x40004c7	      0xe800000000	                          call 0x40004cc	       690	ldcref.c	FUNCTION_12	CALL_7
0x40004cc	      0x488b742408	                mov rsi, qword [rsp + 8]	       690	ldcref.c	FUNCTION_12	CALL_7
0x40004d1	          0x4889c7	                            mov rdi, rax	       690	ldcref.c	FUNCTION_12	CALL_7
0x40004d4	            0x31c0	                            xor eax, eax	       690	ldcref.c	FUNCTION_12	CALL_7
0x40004d6	      0xe800000000	                          call 0x40004db	       690	ldcref.c	FUNCTION_12	CALL_7
0x40004db	          0x4c89ff	                            mov rdi, r15	       694	ldcref.c	FUNCTION_12	CALL_8
0x40004de	      0xe800000000	                          call 0x40004e3	       694	ldcref.c	FUNCTION_12	CALL_8
0x40004e3	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	       695	ldcref.c	FUNCTION_12	CALL_9
0x40004e7	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       695	ldcref.c	FUNCTION_12	CALL_9
0x40004ec	          0x4889c2	                            mov rdx, rax	       695	ldcref.c	FUNCTION_12	CALL_9
0x40004ef	          0x4c89e6	                            mov rsi, r12	       695	ldcref.c	FUNCTION_12	CALL_9
0x40004f2	      0x4889442410	             mov qword [rsp + 0x10], rax	       694	ldcref.c	FUNCTION_12	CALL_8
0x40004f7	      0xe800000000	                          call 0x40004fc	       695	ldcref.c	FUNCTION_12	CALL_9
0x40004fc	          0x4885c0	                           test rax, rax	       696	ldcref.c	FUNCTION_12	IF_6
0x40004ff	          0x4989c7	                            mov r15, rax	       695	ldcref.c	FUNCTION_12	CALL_9
0x4000502	     0xf8847010000	                            js 0x400064f	       696	ldcref.c	FUNCTION_12	IF_6
0x4000508	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       700	ldcref.c	FUNCTION_12
0x400050d	        0x4e8d1cf8	                  lea r11, [rax + r15*8]	       700	ldcref.c	FUNCTION_12
0x4000511	          0x4c39d8	                            cmp rax, r11	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000514	     0xf830e010000	                           jae 0x4000628	       701	ldcref.c	FUNCTION_12	FOR_2
0x400051a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       701	ldcref.c	FUNCTION_12	FOR_2
0x400051f	          0x4c8b38	                    mov r15, qword [rax]	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000522	          0x4d85ff	                           test r15, r15	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000525	     0xf84fd000000	                            je 0x4000628	       701	ldcref.c	FUNCTION_12	FOR_2
0x400052b	      0x48895c2428	             mov qword [rsp + 0x28], rbx	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000530	      0x4c89642438	             mov qword [rsp + 0x38], r12	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000535	          0x4889c3	                            mov rbx, rax	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000538	      0x48896c2420	             mov qword [rsp + 0x20], rbp	       701	ldcref.c	FUNCTION_12	FOR_2
0x400053d	      0x4c896c2430	             mov qword [rsp + 0x30], r13	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000542	          0x4d89dc	                            mov r12, r11	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000545	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	       701	ldcref.c	FUNCTION_12	FOR_2
0x400054a	            0xeb3d	                           jmp 0x4000589	       701	ldcref.c	FUNCTION_12	FOR_2
0x400054c	         0xf1f4000	                         nop dword [rax]	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000550	    0x41f745180101	         test dword [r13 + 0x18], 0x101 	       713	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000558	            0x7416	                            je 0x4000570	       713	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400055a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x400055f	        0x488b4008	                mov rax, qword [rax + 8]	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x4000563	        0x49394520	            cmp qword [r13 + 0x20], rax 	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x4000567	            0x744e	                            je 0x40005b7	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x4000569	     0xf1f80000000	                         nop dword [rax]	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x4000570	        0x4883c308	                              add rbx, 8	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000574	          0x4939dc	                            cmp r12, rbx	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000577	     0xf86ab000000	                           jbe 0x4000628	       701	ldcref.c	FUNCTION_12	FOR_2
0x400057d	          0x4c8b3b	                    mov r15, qword [rbx]	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000580	          0x4d85ff	                           test r15, r15	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000583	     0xf849f000000	                            je 0x4000628	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000589	          0x498b07	                    mov rax, qword [r15]	       705	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400058c	          0x4885c0	                           test rax, rax	       705	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400058f	            0x74df	                            je 0x4000570	       705	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000591	          0x4c8b28	                    mov r13, qword [rax]	       706	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000594	          0x4d85ed	                           test r13, r13	       706	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000597	            0x74d7	                            je 0x4000570	       706	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000599	          0x4585f6	                         test r14d, r14d	       707	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400059c	            0x74b2	                            je 0x4000550	       707	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400059e	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       708	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_13
0x40005a2	    0x483d00000000	                              cmp rax, 0	       708	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_13
0x40005a8	            0x740d	                            je 0x40005b7	       708	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_13
0x40005aa	        0xf6402110	           test byte [rax + 0x21], 0x10 	       709	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_15
0x40005ae	            0x7507	                           jne 0x40005b7	       709	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_15
0x40005b0	      0x41f6451882	           test byte [r13 + 0x18], 0x82 	       710	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005b5	            0x74b9	                            je 0x4000570	       710	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005b7	          0x4885ed	                           test rbp, rbp	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005ba	     0xf8480000000	                            je 0x4000640	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005c0	        0x498b7d08	                mov rdi, qword [r13 + 8]	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40005c4	          0x4889ee	                            mov rsi, rbp	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40005c7	      0xe800000000	                          call 0x40005cc	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40005cc	            0x85c0	                           test eax, eax	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005ce	           0xf94c0	                                 sete al	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005d1	            0x84c0	                             test al, al	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005d3	            0x749b	                            je 0x4000570	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005d5	        0x4d8b4d08	                 mov r9, qword [r13 + 8]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005d9	      0xba05000000	                              mov edx, 5	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005de	      0xbe00000000	                              mov esi, 0	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005e3	            0x31ff	                            xor edi, edi	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005e5	        0x4d8b7f08	                mov r15, qword [r15 + 8]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005e9	      0x4c894c2418	              mov qword [rsp + 0x18], r9	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005ee	      0xe800000000	                          call 0x40005f3	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005f3	        0x4883ec08	                              sub rsp, 8	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005f7	          0x4889c7	                            mov rdi, rax	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005fa	          0x4c89f9	                            mov rcx, r15	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005fd	        0xff742438	                 push qword [rsp + 0x38]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000601	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000606	            0x31c0	                            xor eax, eax	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000608	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x400060d	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000612	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000617	      0xe800000000	                          call 0x400061c	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x400061c	              0x58	                                 pop rax	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x400061d	              0x5a	                                 pop rdx	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x400061e	      0xe94dffffff	                           jmp 0x4000570	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000623	       0xf1f440000	                   nop dword [rax + rax]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000628	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       730	ldcref.c	FUNCTION_12	CALL_22
0x400062d	        0x4883c448	                           add rsp, 0x48	       731	ldcref.c	FUNCTION_12
0x4000631	              0x5b	                                 pop rbx	       731	ldcref.c	FUNCTION_12
0x4000632	              0x5d	                                 pop rbp	       731	ldcref.c	FUNCTION_12
0x4000633	            0x415c	                                 pop r12	       731	ldcref.c	FUNCTION_12
0x4000635	            0x415d	                                 pop r13	       731	ldcref.c	FUNCTION_12
0x4000637	            0x415e	                                 pop r14	       731	ldcref.c	FUNCTION_12
0x4000639	            0x415f	                                 pop r15	       731	ldcref.c	FUNCTION_12
0x400063b	      0xe900000000	                           jmp 0x4000640	       730	ldcref.c	FUNCTION_12	CALL_22
0x4000640	        0x418b4518	            mov eax, dword [r13 + 0x18] 	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000644	          0xc1e808	                              shr eax, 8	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000647	          0x83e001	                              and eax, 1	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400064a	      0xe982ffffff	                           jmp 0x40005d1	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400064f	            0x31ff	                            xor edi, edi	       697	ldcref.c	FUNCTION_12	CALL_11
0x4000651	      0xba05000000	                              mov edx, 5	       697	ldcref.c	FUNCTION_12	CALL_11
0x4000656	      0xbe00000000	                              mov esi, 0	       697	ldcref.c	FUNCTION_12	CALL_11
0x400065b	      0xe800000000	                          call 0x4000660	       697	ldcref.c	FUNCTION_12	CALL_11
0x4000660	      0x488b742408	                mov rsi, qword [rsp + 8]	       697	ldcref.c	FUNCTION_12	CALL_11
0x4000665	          0x4889c7	                            mov rdi, rax	       697	ldcref.c	FUNCTION_12	CALL_11
0x4000668	            0x31c0	                            xor eax, eax	       697	ldcref.c	FUNCTION_12	CALL_11
0x400066a	      0xe800000000	                          call 0x400066f	       697	ldcref.c	FUNCTION_12	CALL_11
0x400066f	      0xe994feffff	                           jmp 0x4000508	       697	ldcref.c	FUNCTION_12	CALL_11
check_nocrossrefs	FOR,0:DO,0:CALL,1:SWITCH,0:WHILE,0:functions,0:IF,1:ELSE,0	13
0x4000f60	    0x8b0500000000	            mov eax, dword [0x04000f66] 	       496	ldcref.c	FUNCTION_8	IF_1
0x4000f66	            0x85c0	                           test eax, eax	       496	ldcref.c	FUNCTION_8	IF_1
0x4000f68	            0x7506	                           jne 0x4000f70	       496	ldcref.c	FUNCTION_8	IF_1
0x4000f6a	            0xf3c3	                                     ret	       496	ldcref.c	FUNCTION_8	IF_1
0x4000f6c	         0xf1f4000	                         nop dword [rax]	       496	ldcref.c	FUNCTION_8	IF_1
0x4000f70	        0x4883ec08	                              sub rsp, 8	       495	ldcref.c	FUNCTION_8
0x4000f74	      0xbf00000000	                              mov edi, 0	       499	ldcref.c	FUNCTION_8
0x4000f79	            0x31d2	                            xor edx, edx	       499	ldcref.c	FUNCTION_8
0x4000f7b	      0xbe00000000	                              mov esi, 0	       499	ldcref.c	FUNCTION_8
0x4000f80	      0xe800000000	                          call 0x4000f85	       499	ldcref.c	FUNCTION_8
0x4000f85	      0xbf00000000	                              mov edi, 0	       501	ldcref.c	FUNCTION_8	CALL_1
0x4000f8a	        0x4883c408	                              add rsp, 8	       502	ldcref.c	FUNCTION_8
0x4000f8e	      0xe900000000	                   jmp section_end..data	       501	ldcref.c	FUNCTION_8	CALL_1
