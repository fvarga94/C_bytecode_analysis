sysv_internal_printer	ELSE,0:functions,0:SWITCH,0:DO,0:WHILE,0:CALL,7:FOR,0:IF,1	14
0x4000380	    0x4881fe000000	                              cmp rsi, 0	       551	size.c	FUNCTION_13	IF_1	CALL_2
0x4000387	          0x4889f0	                            mov rax, rsi	       548	size.c	FUNCTION_13
0x400038a	            0x742c	                            je 0x40003b8	       551	size.c	FUNCTION_13	IF_1	CALL_2
0x400038c	        0xf6462110	           test byte [rsi + 0x21], 0x10 	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x4000390	            0x7526	                           jne 0x40003b8	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x4000392	    0x4881fe000000	                              cmp rsi, 0	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x4000399	            0x741d	                            je 0x40003b8	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x400039b	        0x488b7638	            mov rsi, qword [rsi + 0x38] 	       549	size.c	FUNCTION_13	CALL_1
0x400039f	    0x480135000000	            add qword [0x040003a6], rsi 	       555	size.c	FUNCTION_13	IF_1
0x40003a6	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x40003aa	          0x488b38	                    mov rdi, qword [rax]	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x40003ad	      0xe95effffff	                   jmp sym.sysv_one_line	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x40003b2	    0x660f1f440000	                    nop word [rax + rax]	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x40003b8	            0xf3c3	                                     ret	       557	size.c	FUNCTION_13	IF_1	CALL_6
size_number	ELSE,0:functions,0:SWITCH,0:DO,0:WHILE,0:CALL,1:FOR,0:IF,0	45
0x40001e0	              0x53	                                push rbx	       418	size.c	FUNCTION_7
0x40001e1	          0x4989f8	                             mov r8, rdi	       418	size.c	FUNCTION_7
0x40001e4	      0xb900000000	                              mov ecx, 0	       418	size.c	FUNCTION_7
0x40001e9	        0x4883ec30	                           sub rsp, 0x30	       418	size.c	FUNCTION_7
0x40001ed	    0x64488b042528	                mov rax, qword fs:[0x28]	       418	size.c	FUNCTION_7
0x40001f6	      0x4889442428	             mov qword [rsp + 0x28], rax	       418	size.c	FUNCTION_7
0x40001fb	            0x31c0	                            xor eax, eax	       418	size.c	FUNCTION_7
0x40001fd	    0x8b0500000000	            mov eax, dword [0x04000203] 	       422	size.c	FUNCTION_7
0x4000203	            0x85c0	                           test eax, eax	       421	size.c	FUNCTION_7
0x4000205	            0x7411	                            je 0x4000218	       421	size.c	FUNCTION_7
0x4000207	          0x83f801	                              cmp eax, 1	       422	size.c	FUNCTION_7
0x400020a	      0xb900000000	                              mov ecx, 0	       422	size.c	FUNCTION_7
0x400020f	      0xb800000000	                              mov eax, 0	       422	size.c	FUNCTION_7
0x4000214	        0x480f44c8	                          cmove rcx, rax	       422	size.c	FUNCTION_7
0x4000218	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_16	CALL_1
0x400021d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000222	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000225	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000227	          0x4889e3	                            mov rbx, rsp	        33	stdio2.h	FUNCTION_16	CALL_1
0x400022a	      0xe800000000	                          call 0x400022f	        33	stdio2.h	FUNCTION_16	CALL_1
0x400022f	          0x4889e0	                            mov rax, rsp	       426	size.c	FUNCTION_7	CALL_1
0x4000232	            0x8b08	                    mov ecx, dword [rax]	       426	size.c	FUNCTION_7	CALL_1
0x4000234	        0x4883c004	                              add rax, 4	       426	size.c	FUNCTION_7	CALL_1
0x4000238	    0x8d91fffefefe	              lea edx, [rcx - 0x1010101]	       426	size.c	FUNCTION_7	CALL_1
0x400023e	            0xf7d1	                                 not ecx	       426	size.c	FUNCTION_7	CALL_1
0x4000240	            0x21ca	                            and edx, ecx	       426	size.c	FUNCTION_7	CALL_1
0x4000242	    0x81e280808080	                     and edx, 0x80808080	       426	size.c	FUNCTION_7	CALL_1
0x4000248	            0x74e8	                            je 0x4000232	       426	size.c	FUNCTION_7	CALL_1
0x400024a	            0x89d1	                            mov ecx, edx	       426	size.c	FUNCTION_7	CALL_1
0x400024c	          0xc1e910	                           shr ecx, 0x10	       426	size.c	FUNCTION_7	CALL_1
0x400024f	    0xf7c280800000	                        test edx, 0x8080	       426	size.c	FUNCTION_7	CALL_1
0x4000255	           0xf44d1	                          cmove edx, ecx	       426	size.c	FUNCTION_7	CALL_1
0x4000258	        0x488d4802	                      lea rcx, [rax + 2]	       426	size.c	FUNCTION_7	CALL_1
0x400025c	            0x89d6	                            mov esi, edx	       426	size.c	FUNCTION_7	CALL_1
0x400025e	        0x480f44c1	                          cmove rax, rcx	       426	size.c	FUNCTION_7	CALL_1
0x4000262	          0x4000d6	                             add sil, dl	       426	size.c	FUNCTION_7	CALL_1
0x4000265	        0x4883d803	                              sbb rax, 3	       426	size.c	FUNCTION_7	CALL_1
0x4000269	          0x4829d8	                            sub rax, rbx	       426	size.c	FUNCTION_7	CALL_1
0x400026c	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       427	size.c	FUNCTION_7
0x4000271	    0x644833342528	                xor rsi, qword fs:[0x28]	       427	size.c	FUNCTION_7
0x400027a	            0x7506	                           jne 0x4000282	       427	size.c	FUNCTION_7
0x400027c	        0x4883c430	                           add rsp, 0x30	       427	size.c	FUNCTION_7
0x4000280	              0x5b	                                 pop rbx	       427	size.c	FUNCTION_7
0x4000281	              0xc3	                                     ret	       427	size.c	FUNCTION_7
0x4000282	      0xe800000000	                          call 0x4000287	       427	size.c	FUNCTION_7
sysv_one_line	ELSE,0:functions,0:SWITCH,0:DO,0:WHILE,0:CALL,2:FOR,0:IF,0	26
0x4000310	              0x55	                                push rbp	       537	size.c	FUNCTION_12
0x4000311	              0x53	                                push rbx	       537	size.c	FUNCTION_12
0x4000312	          0x4889d3	                            mov rbx, rdx	       537	size.c	FUNCTION_12
0x4000315	          0x4889f9	                            mov rcx, rdi	       537	size.c	FUNCTION_12
0x4000318	          0x4889f5	                            mov rbp, rsi	       537	size.c	FUNCTION_12
0x400031b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4000320	        0x4883ec08	                              sub rsp, 8	       537	size.c	FUNCTION_12
0x4000324	    0x8b1500000000	            mov edx, dword [0x0400032a] 	       104	stdio2.h	CALL_16
0x400032a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400032f	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4000331	      0xe800000000	                          call 0x4000336	       104	stdio2.h	CALL_16
0x4000336	    0x8b3d00000000	            mov edi, dword [0x0400033c] 	       539	size.c	FUNCTION_12	CALL_1
0x400033c	          0x4889ee	                            mov rsi, rbp	       539	size.c	FUNCTION_12	CALL_1
0x400033f	      0xe84cffffff	                  call sym.rprint_number	       539	size.c	FUNCTION_12	CALL_1
0x4000344	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4000349	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400034e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4000350	      0xe800000000	                          call 0x4000355	       104	stdio2.h	CALL_16
0x4000355	    0x8b3d00000000	            mov edi, dword [0x0400035b] 	       541	size.c	FUNCTION_12	CALL_2
0x400035b	          0x4889de	                            mov rsi, rbx	       541	size.c	FUNCTION_12	CALL_2
0x400035e	      0xe82dffffff	                  call sym.rprint_number	       541	size.c	FUNCTION_12	CALL_2
0x4000363	        0x4883c408	                              add rsp, 8	       543	size.c	FUNCTION_12
0x4000367	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x400036c	              0x5b	                                 pop rbx	       543	size.c	FUNCTION_12
0x400036d	              0x5d	                                 pop rbp	       543	size.c	FUNCTION_12
0x400036e	      0xe900000000	                           jmp 0x4000373	       104	stdio2.h	CALL_16
sysv_internal_sizer	ELSE,0:functions,0:SWITCH,0:DO,0:WHILE,0:CALL,8:FOR,0:IF,3	27
0x4000170	    0x4881fe000000	                              cmp rsi, 0	       519	size.c	FUNCTION_11	IF_1	CALL_2
0x4000177	            0x744d	                            je 0x40001c6	       519	size.c	FUNCTION_11	IF_1	CALL_2
0x4000179	        0xf6462110	           test byte [rsi + 0x21], 0x10 	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x400017d	            0x7547	                           jne 0x40001c6	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x400017f	    0x4881fe000000	                              cmp rsi, 0	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x4000186	            0x743e	                            je 0x40001c6	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x4000188	              0x55	                                push rbp	       516	size.c	FUNCTION_11
0x4000189	              0x53	                                push rbx	       516	size.c	FUNCTION_11
0x400018a	          0x4889f3	                            mov rbx, rsi	       516	size.c	FUNCTION_11
0x400018d	        0x4883ec08	                              sub rsp, 8	       516	size.c	FUNCTION_11
0x4000191	          0x488b3e	                    mov rdi, qword [rsi]	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x4000194	        0x488b6e38	            mov rbp, qword [rsi + 0x38] 	       517	size.c	FUNCTION_11	CALL_1
0x4000198	      0xe800000000	                          call 0x400019d	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x400019d	    0x3b0500000000	            cmp eax, dword [0x040001a3] 	       525	size.c	FUNCTION_11	IF_1	IF_2
0x40001a3	            0x7f2b	                            jg 0x40001d0	       525	size.c	FUNCTION_11	IF_1	IF_2
0x40001a5	    0x48012d000000	            add qword [0x040001ac], rbp 	       528	size.c	FUNCTION_11	IF_1
0x40001ac	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x40001b0	    0x483b05000000	            cmp rax, qword [0x040001b7] 	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x40001b7	            0x7607	                           jbe 0x40001c0	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x40001b9	    0x488905000000	            mov qword [0x040001c0], rax 	       531	size.c	FUNCTION_11	IF_1	CALL_8
0x40001c0	        0x4883c408	                              add rsp, 8	       533	size.c	FUNCTION_11
0x40001c4	              0x5b	                                 pop rbx	       533	size.c	FUNCTION_11
0x40001c5	              0x5d	                                 pop rbp	       533	size.c	FUNCTION_11
0x40001c6	            0xf3c3	                                     ret	       533	size.c	FUNCTION_11
0x40001c8	     0xf1f84000000	                   nop dword [rax + rax]	       533	size.c	FUNCTION_11
0x40001d0	    0x890500000000	            mov dword [0x040001d6], eax 	       526	size.c	FUNCTION_11	IF_1	IF_2
0x40001d6	            0xebcd	                           jmp 0x40001a5	       526	size.c	FUNCTION_11	IF_1	IF_2
display_bfd	ELSE,0:functions,0:SWITCH,0:DO,0:WHILE,0:CALL,18:FOR,0:IF,6	73
0x40007c0	              0x53	                                push rbx	       296	size.c	FUNCTION_4
0x40007c1	      0xbe02000000	                              mov esi, 2	       299	size.c	FUNCTION_4	IF_1	CALL_1
0x40007c6	          0x4889fb	                            mov rbx, rdi	       296	size.c	FUNCTION_4
0x40007c9	        0x4883ec10	                           sub rsp, 0x10	       296	size.c	FUNCTION_4
0x40007cd	    0x64488b042528	                mov rax, qword fs:[0x28]	       296	size.c	FUNCTION_4
0x40007d6	      0x4889442408	                mov qword [rsp + 8], rax	       296	size.c	FUNCTION_4
0x40007db	            0x31c0	                            xor eax, eax	       296	size.c	FUNCTION_4
0x40007dd	      0xe800000000	                          call 0x40007e2	       299	size.c	FUNCTION_4	IF_1	CALL_1
0x40007e2	            0x85c0	                           test eax, eax	       299	size.c	FUNCTION_4	IF_1	CALL_1
0x40007e4	            0x741a	                            je 0x4000800	       299	size.c	FUNCTION_4	IF_1	CALL_1
0x40007e6	      0x488b442408	                mov rax, qword [rsp + 8]	       343	size.c	FUNCTION_4
0x40007eb	    0x644833042528	                xor rax, qword fs:[0x28]	       343	size.c	FUNCTION_4
0x40007f4	     0xf85fa000000	                           jne 0x40008f4	       343	size.c	FUNCTION_4
0x40007fa	        0x4883c410	                           add rsp, 0x10	       343	size.c	FUNCTION_4
0x40007fe	              0x5b	                                 pop rbx	       343	size.c	FUNCTION_4
0x40007ff	              0xc3	                                     ret	       343	size.c	FUNCTION_4
0x4000800	          0x4889e2	                            mov rdx, rsp	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x4000803	      0xbe01000000	                              mov esi, 1	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x4000808	          0x4889df	                            mov rdi, rbx	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x400080b	      0xe800000000	                          call 0x4000810	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x4000810	            0x85c0	                           test eax, eax	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x4000812	            0x757c	                           jne 0x4000890	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x4000814	      0xe800000000	                          call 0x4000819	       310	size.c	FUNCTION_4	IF_3	CALL_4
0x4000819	          0x83f80d	                            cmp eax, 0xd	       310	size.c	FUNCTION_4	IF_3	CALL_4
0x400081c	     0xf84b6000000	                            je 0x40008d8	       310	size.c	FUNCTION_4	IF_3	CALL_4
0x4000822	          0x4889e2	                            mov rdx, rsp	       319	size.c	FUNCTION_4	IF_4	CALL_9
0x4000825	      0xbe03000000	                              mov esi, 3	       319	size.c	FUNCTION_4	IF_4	CALL_9
0x400082a	          0x4889df	                            mov rdi, rbx	       319	size.c	FUNCTION_4	IF_4	CALL_9
0x400082d	      0xe800000000	                          call 0x4000832	       319	size.c	FUNCTION_4	IF_4	CALL_9
0x4000832	            0x85c0	                           test eax, eax	       319	size.c	FUNCTION_4	IF_4	CALL_9
0x4000834	            0x747a	                            je 0x40008b0	       319	size.c	FUNCTION_4	IF_4	CALL_9
0x4000836	          0x4889df	                            mov rdi, rbx	       323	size.c	FUNCTION_4	IF_4	CALL_10
0x4000839	      0xe882fbffff	                    call sym.print_sizes	       323	size.c	FUNCTION_4	IF_4	CALL_10
0x400083e	    0x488b0d000000	            mov rcx, qword [0x04000845] 	       324	size.c	FUNCTION_4	IF_4	CALL_11
0x4000845	      0xba0b000000	                            mov edx, 0xb	       324	size.c	FUNCTION_4	IF_4	CALL_11
0x400084a	      0xbe01000000	                              mov esi, 1	       324	size.c	FUNCTION_4	IF_4	CALL_11
0x400084f	      0xbf00000000	                              mov edi, 0	       324	size.c	FUNCTION_4	IF_4	CALL_11
0x4000854	      0xe800000000	                          call 0x4000859	       324	size.c	FUNCTION_4	IF_4	CALL_11
0x4000859	          0x4889df	                            mov rdi, rbx	       326	size.c	FUNCTION_4	IF_4	CALL_12
0x400085c	      0xe800000000	                          call 0x4000861	       326	size.c	FUNCTION_4	IF_4	CALL_12
0x4000861	          0x4885c0	                           test rax, rax	       327	size.c	FUNCTION_4	IF_4	IF_5
0x4000864	            0x7414	                            je 0x400087a	       327	size.c	FUNCTION_4	IF_4	IF_5
0x4000866	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4000869	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400086e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4000873	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4000875	      0xe800000000	                          call 0x400087a	       104	stdio2.h	CALL_16
0x400087a	      0xbf00000000	                              mov edi, 0	       330	size.c	FUNCTION_4	IF_4	CALL_13
0x400087f	      0xe800000000	                          call 0x4000884	       330	size.c	FUNCTION_4	IF_4	CALL_13
0x4000884	      0xe95dffffff	                           jmp 0x40007e6	       331	size.c	FUNCTION_4	IF_4
0x4000889	     0xf1f80000000	                         nop dword [rax]	       331	size.c	FUNCTION_4	IF_4
0x4000890	          0x4889df	                            mov rdi, rbx	       305	size.c	FUNCTION_4	IF_2	CALL_3
0x4000893	      0xe828fbffff	                    call sym.print_sizes	       305	size.c	FUNCTION_4	IF_2	CALL_3
0x4000898	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x400089d	      0xe800000000	                          call 0x40008a2	       104	stdio2.h	CALL_16
0x40008a2	      0xe93fffffff	                           jmp 0x40007e6	       104	stdio2.h	CALL_16
0x40008a7	    0x660f1f840000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x40008b0	          0x488b3b	                    mov rdi, qword [rbx]	       334	size.c	FUNCTION_4	CALL_15
0x40008b3	      0xe800000000	                          call 0x40008b8	       334	size.c	FUNCTION_4	CALL_15
0x40008b8	      0xe800000000	                          call 0x40008bd	       336	size.c	FUNCTION_4	IF_6	CALL_16
0x40008bd	          0x83f80d	                            cmp eax, 0xd	       336	size.c	FUNCTION_4	IF_6	CALL_16
0x40008c0	            0x741e	                            je 0x40008e0	       336	size.c	FUNCTION_4	IF_6	CALL_16
0x40008c2	    0xc70500000000	               mov dword [0x040008cc], 3	       342	size.c	FUNCTION_4
0x40008cc	      0xe915ffffff	                           jmp 0x40007e6	       342	size.c	FUNCTION_4
0x40008d1	     0xf1f80000000	                         nop dword [rax]	       342	size.c	FUNCTION_4
0x40008d8	          0x488b3b	                    mov rdi, qword [rbx]	       312	size.c	FUNCTION_4	IF_3	CALL_6
0x40008db	      0xe800000000	                          call 0x40008e0	       312	size.c	FUNCTION_4	IF_3	CALL_6
0x40008e0	        0x488b3c24	                    mov rdi, qword [rsp]	       338	size.c	FUNCTION_4	IF_6	CALL_17
0x40008e4	      0xe800000000	                          call 0x40008e9	       338	size.c	FUNCTION_4	IF_6	CALL_17
0x40008e9	        0x488b3c24	                    mov rdi, qword [rsp]	       339	size.c	FUNCTION_4	IF_6	CALL_18
0x40008ed	      0xe800000000	                          call 0x40008f2	       339	size.c	FUNCTION_4	IF_6	CALL_18
0x40008f2	            0xebce	                           jmp 0x40008c2	       339	size.c	FUNCTION_4	IF_6	CALL_18
0x40008f4	      0xe800000000	                          call 0x40008f9	       343	size.c	FUNCTION_4
rprint_number	ELSE,0:functions,0:SWITCH,0:DO,0:WHILE,0:CALL,0:FOR,0:IF,0	33
0x4000290	              0x53	                                push rbx	       431	size.c	FUNCTION_8
0x4000291	          0x4989f0	                             mov r8, rsi	       431	size.c	FUNCTION_8
0x4000294	            0x89fb	                            mov ebx, edi	       431	size.c	FUNCTION_8
0x4000296	      0xb900000000	                              mov ecx, 0	       431	size.c	FUNCTION_8
0x400029b	        0x4883ec30	                           sub rsp, 0x30	       431	size.c	FUNCTION_8
0x400029f	    0x64488b042528	                mov rax, qword fs:[0x28]	       431	size.c	FUNCTION_8
0x40002a8	      0x4889442428	             mov qword [rsp + 0x28], rax	       431	size.c	FUNCTION_8
0x40002ad	            0x31c0	                            xor eax, eax	       431	size.c	FUNCTION_8
0x40002af	    0x8b0500000000	            mov eax, dword [0x040002b5] 	       435	size.c	FUNCTION_8
0x40002b5	            0x85c0	                           test eax, eax	       434	size.c	FUNCTION_8
0x40002b7	            0x7411	                            je 0x40002ca	       434	size.c	FUNCTION_8
0x40002b9	          0x83f801	                              cmp eax, 1	       435	size.c	FUNCTION_8
0x40002bc	      0xb900000000	                              mov ecx, 0	       435	size.c	FUNCTION_8
0x40002c1	      0xb800000000	                              mov eax, 0	       435	size.c	FUNCTION_8
0x40002c6	        0x480f44c8	                          cmove rcx, rax	       435	size.c	FUNCTION_8
0x40002ca	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002cf	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002d4	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002d7	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002d9	      0xe800000000	                          call 0x40002de	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002de	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40002e0	          0x4889e1	                            mov rcx, rsp	       104	stdio2.h	CALL_16
0x40002e3	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x40002e5	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40002ea	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40002ef	      0xe800000000	                          call 0x40002f4	       104	stdio2.h	CALL_16
0x40002f4	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       440	size.c	FUNCTION_8
0x40002f9	    0x644833042528	                xor rax, qword fs:[0x28]	       440	size.c	FUNCTION_8
0x4000302	            0x7506	                           jne 0x400030a	       440	size.c	FUNCTION_8
0x4000304	        0x4883c430	                           add rsp, 0x30	       440	size.c	FUNCTION_8
0x4000308	              0x5b	                                 pop rbx	       440	size.c	FUNCTION_8
0x4000309	              0xc3	                                     ret	       440	size.c	FUNCTION_8
0x400030a	      0xe800000000	                          call 0x400030f	       440	size.c	FUNCTION_8
main	ELSE,1:functions,0:SWITCH,3:DO,0:WHILE,1:CALL,29:FOR,1:IF,4	206
0x4000040	          0x8b4620	            mov eax, dword [rsi + 0x20] 	       453	size.c	FUNCTION_9	CALL_1
0x4000043	            0xa801	                              test al, 1	       454	size.c	FUNCTION_9	IF_1
0x4000045	            0x7414	                            je 0x400005b	       454	size.c	FUNCTION_9	IF_1
0x4000047	            0xa818	                           test al, 0x18	       458	size.c	FUNCTION_9	IF_2
0x4000049	        0x488b5638	            mov rdx, qword [rsi + 0x38] 	       457	size.c	FUNCTION_9	CALL_2
0x400004d	            0x7511	                           jne 0x4000060	       458	size.c	FUNCTION_9	IF_2
0x400004f	          0xf6c401	                              test ah, 1	       460	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000052	            0x751c	                           jne 0x4000070	       460	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000054	    0x480115000000	            add qword [0x0400005b], rdx 	       463	size.c	FUNCTION_9	ELSE_2
0x400005b	            0xf3c3	                                     ret	       463	size.c	FUNCTION_9	ELSE_2
0x400005d	           0xf1f00	                         nop dword [rax]	       463	size.c	FUNCTION_9	ELSE_2
0x4000060	    0x480115000000	            add qword [0x04000067], rdx 	       459	size.c	FUNCTION_9	IF_2
0x4000067	              0xc3	                                     ret	       459	size.c	FUNCTION_9	IF_2
0x4000068	     0xf1f84000000	                   nop dword [rax + rax]	       459	size.c	FUNCTION_9	IF_2
0x4000070	    0x480115000000	            add qword [0x04000077], rdx 	       461	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000077	              0xc3	                                     ret	       461	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000078	     0xf1f84000000	                   nop dword [rax + rax]	       461	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000080	            0x4154	                                push r12	        75	size.c	FUNCTION_1
0x4000082	    0x4c8b25000000	            mov r12, qword [0x04000089] 	        76	size.c	FUNCTION_1	CALL_1
0x4000089	      0xba05000000	                              mov edx, 5	        76	size.c	FUNCTION_1	CALL_1
0x400008e	              0x55	                                push rbp	        75	size.c	FUNCTION_1
0x400008f	              0x53	                                push rbx	        75	size.c	FUNCTION_1
0x4000090	            0x89f5	                            mov ebp, esi	        75	size.c	FUNCTION_1
0x4000092	          0x4889fb	                            mov rbx, rdi	        75	size.c	FUNCTION_1
0x4000095	      0xbe00000000	                              mov esi, 0	        76	size.c	FUNCTION_1	CALL_1
0x400009a	            0x31ff	                            xor edi, edi	        76	size.c	FUNCTION_1	CALL_1
0x400009c	      0xe800000000	                          call 0x40000a1	        76	size.c	FUNCTION_1	CALL_1
0x40000a1	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_13
0x40000a4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40000a7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40000ac	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x40000af	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x40000b1	      0xe800000000	                          call 0x40000b6	        97	stdio2.h	CALL_13
0x40000b6	            0x31ff	                            xor edi, edi	        77	size.c	FUNCTION_1	CALL_2
0x40000b8	      0xba05000000	                              mov edx, 5	        77	size.c	FUNCTION_1	CALL_2
0x40000bd	      0xbe00000000	                              mov esi, 0	        77	size.c	FUNCTION_1	CALL_2
0x40000c2	      0xe800000000	                          call 0x40000c7	        77	size.c	FUNCTION_1	CALL_2
0x40000c7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40000cc	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40000cf	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x40000d2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x40000d4	      0xe800000000	                          call 0x40000d9	        97	stdio2.h	CALL_13
0x40000d9	            0x31ff	                            xor edi, edi	        78	size.c	FUNCTION_1	CALL_3
0x40000db	      0xba05000000	                              mov edx, 5	        78	size.c	FUNCTION_1	CALL_3
0x40000e0	      0xbe00000000	                              mov esi, 0	        78	size.c	FUNCTION_1	CALL_3
0x40000e5	      0xe800000000	                          call 0x40000ea	        78	size.c	FUNCTION_1	CALL_3
0x40000ea	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40000ef	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40000f2	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x40000f5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x40000f7	      0xe800000000	                          call 0x40000fc	        97	stdio2.h	CALL_13
0x40000fc	            0x31ff	                            xor edi, edi	        79	size.c	FUNCTION_1	CALL_4
0x40000fe	      0xba05000000	                              mov edx, 5	        79	size.c	FUNCTION_1	CALL_4
0x4000103	      0xbe00000000	                              mov esi, 0	        79	size.c	FUNCTION_1	CALL_4
0x4000108	      0xe800000000	                          call 0x400010d	        79	size.c	FUNCTION_1	CALL_4
0x400010d	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_13
0x4000112	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000115	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x400011a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x400011d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x400011f	      0xe800000000	                          call 0x4000124	        97	stdio2.h	CALL_13
0x4000124	    0x488b3d000000	            mov rdi, qword [0x0400012b] 	        95	size.c	FUNCTION_1	FOR_1	CALL_7
0x400012b	          0x4889de	                            mov rsi, rbx	        95	size.c	FUNCTION_1	FOR_1	CALL_7
0x400012e	      0xe800000000	                          call 0x4000133	        95	size.c	FUNCTION_1	FOR_1	CALL_7
0x4000133	            0x85ed	                           test ebp, ebp	        96	size.c	FUNCTION_1	FOR_1	IF_1
0x4000135	            0x7407	                            je 0x400013e	        96	size.c	FUNCTION_1	FOR_1	IF_1
0x4000137	            0x89ef	                            mov edi, ebp	        98	size.c	FUNCTION_1	FOR_1	CALL_9
0x4000139	      0xe800000000	                          call 0x400013e	        98	size.c	FUNCTION_1	FOR_1	CALL_9
0x400013e	            0x31ff	                            xor edi, edi	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x4000140	      0xba05000000	                              mov edx, 5	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x4000145	      0xbe00000000	                              mov esi, 0	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x400014a	      0xe800000000	                          call 0x400014f	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x400014f	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_13
0x4000154	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000157	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x400015c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x400015f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000161	      0xe800000000	                          call 0x4000166	        97	stdio2.h	CALL_13
0x4000166	            0xebcf	                           jmp 0x4000137	        97	stdio2.h	CALL_13
0x4000168	     0xf1f84000000	                   nop dword [rax + rax]	        97	stdio2.h	CALL_13
0x4000170	    0x4881fe000000	                              cmp rsi, 0	       519	size.c	FUNCTION_11	IF_1	CALL_2
0x4000177	            0x744d	                            je 0x40001c6	       519	size.c	FUNCTION_11	IF_1	CALL_2
0x4000179	        0xf6462110	           test byte [rsi + 0x21], 0x10 	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x400017d	            0x7547	                           jne 0x40001c6	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x400017f	    0x4881fe000000	                              cmp rsi, 0	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x4000186	            0x743e	                            je 0x40001c6	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x4000188	              0x55	                                push rbp	       516	size.c	FUNCTION_11
0x4000189	              0x53	                                push rbx	       516	size.c	FUNCTION_11
0x400018a	          0x4889f3	                            mov rbx, rsi	       516	size.c	FUNCTION_11
0x400018d	        0x4883ec08	                              sub rsp, 8	       516	size.c	FUNCTION_11
0x4000191	          0x488b3e	                    mov rdi, qword [rsi]	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x4000194	        0x488b6e38	            mov rbp, qword [rsi + 0x38] 	       517	size.c	FUNCTION_11	CALL_1
0x4000198	      0xe800000000	                          call 0x400019d	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x400019d	    0x3b0500000000	            cmp eax, dword [0x040001a3] 	       525	size.c	FUNCTION_11	IF_1	IF_2
0x40001a3	            0x7f2b	                            jg 0x40001d0	       525	size.c	FUNCTION_11	IF_1	IF_2
0x40001a5	    0x48012d000000	            add qword [0x040001ac], rbp 	       528	size.c	FUNCTION_11	IF_1
0x40001ac	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x40001b0	    0x483b05000000	            cmp rax, qword [0x040001b7] 	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x40001b7	            0x7607	                           jbe 0x40001c0	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x40001b9	    0x488905000000	            mov qword [0x040001c0], rax 	       531	size.c	FUNCTION_11	IF_1	CALL_8
0x40001c0	        0x4883c408	                              add rsp, 8	       533	size.c	FUNCTION_11
0x40001c4	              0x5b	                                 pop rbx	       533	size.c	FUNCTION_11
0x40001c5	              0x5d	                                 pop rbp	       533	size.c	FUNCTION_11
0x40001c6	            0xf3c3	                                     ret	       533	size.c	FUNCTION_11
0x40001c8	     0xf1f84000000	                   nop dword [rax + rax]	       533	size.c	FUNCTION_11
0x40001d0	    0x890500000000	            mov dword [0x040001d6], eax 	       526	size.c	FUNCTION_11	IF_1	IF_2
0x40001d6	            0xebcd	                           jmp 0x40001a5	       526	size.c	FUNCTION_11	IF_1	IF_2
0x40001d8	     0xf1f84000000	                   nop dword [rax + rax]	       526	size.c	FUNCTION_11	IF_1	IF_2
0x40001e0	              0x53	                                push rbx	       418	size.c	FUNCTION_7
0x40001e1	          0x4989f8	                             mov r8, rdi	       418	size.c	FUNCTION_7
0x40001e4	      0xb900000000	                              mov ecx, 0	       418	size.c	FUNCTION_7
0x40001e9	        0x4883ec30	                           sub rsp, 0x30	       418	size.c	FUNCTION_7
0x40001ed	    0x64488b042528	                mov rax, qword fs:[0x28]	       418	size.c	FUNCTION_7
0x40001f6	      0x4889442428	             mov qword [rsp + 0x28], rax	       418	size.c	FUNCTION_7
0x40001fb	            0x31c0	                            xor eax, eax	       418	size.c	FUNCTION_7
0x40001fd	    0x8b0500000000	            mov eax, dword [0x04000203] 	       422	size.c	FUNCTION_7
0x4000203	            0x85c0	                           test eax, eax	       421	size.c	FUNCTION_7
0x4000205	            0x7411	                            je 0x4000218	       421	size.c	FUNCTION_7
0x4000207	          0x83f801	                              cmp eax, 1	       422	size.c	FUNCTION_7
0x400020a	      0xb900000000	                              mov ecx, 0	       422	size.c	FUNCTION_7
0x400020f	      0xb800000000	                              mov eax, 0	       422	size.c	FUNCTION_7
0x4000214	        0x480f44c8	                          cmove rcx, rax	       422	size.c	FUNCTION_7
0x4000218	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_16	CALL_1
0x400021d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000222	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000225	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000227	          0x4889e3	                            mov rbx, rsp	        33	stdio2.h	FUNCTION_16	CALL_1
0x400022a	      0xe800000000	                          call 0x400022f	        33	stdio2.h	FUNCTION_16	CALL_1
0x400022f	          0x4889e0	                            mov rax, rsp	       426	size.c	FUNCTION_7	CALL_1
0x4000232	            0x8b08	                    mov ecx, dword [rax]	       426	size.c	FUNCTION_7	CALL_1
0x4000234	        0x4883c004	                              add rax, 4	       426	size.c	FUNCTION_7	CALL_1
0x4000238	    0x8d91fffefefe	              lea edx, [rcx - 0x1010101]	       426	size.c	FUNCTION_7	CALL_1
0x400023e	            0xf7d1	                                 not ecx	       426	size.c	FUNCTION_7	CALL_1
0x4000240	            0x21ca	                            and edx, ecx	       426	size.c	FUNCTION_7	CALL_1
0x4000242	    0x81e280808080	                     and edx, 0x80808080	       426	size.c	FUNCTION_7	CALL_1
0x4000248	            0x74e8	                            je 0x4000232	       426	size.c	FUNCTION_7	CALL_1
0x400024a	            0x89d1	                            mov ecx, edx	       426	size.c	FUNCTION_7	CALL_1
0x400024c	          0xc1e910	                           shr ecx, 0x10	       426	size.c	FUNCTION_7	CALL_1
0x400024f	    0xf7c280800000	                        test edx, 0x8080	       426	size.c	FUNCTION_7	CALL_1
0x4000255	           0xf44d1	                          cmove edx, ecx	       426	size.c	FUNCTION_7	CALL_1
0x4000258	        0x488d4802	                      lea rcx, [rax + 2]	       426	size.c	FUNCTION_7	CALL_1
0x400025c	            0x89d6	                            mov esi, edx	       426	size.c	FUNCTION_7	CALL_1
0x400025e	        0x480f44c1	                          cmove rax, rcx	       426	size.c	FUNCTION_7	CALL_1
0x4000262	          0x4000d6	                             add sil, dl	       426	size.c	FUNCTION_7	CALL_1
0x4000265	        0x4883d803	                              sbb rax, 3	       426	size.c	FUNCTION_7	CALL_1
0x4000269	          0x4829d8	                            sub rax, rbx	       426	size.c	FUNCTION_7	CALL_1
0x400026c	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       427	size.c	FUNCTION_7
0x4000271	    0x644833342528	                xor rsi, qword fs:[0x28]	       427	size.c	FUNCTION_7
0x400027a	            0x7506	                           jne 0x4000282	       427	size.c	FUNCTION_7
0x400027c	        0x4883c430	                           add rsp, 0x30	       427	size.c	FUNCTION_7
0x4000280	              0x5b	                                 pop rbx	       427	size.c	FUNCTION_7
0x4000281	              0xc3	                                     ret	       427	size.c	FUNCTION_7
0x4000282	      0xe800000000	                          call 0x4000287	       427	size.c	FUNCTION_7
0x4000287	    0x660f1f840000	                    nop word [rax + rax]	       427	size.c	FUNCTION_7
0x4000290	              0x53	                                push rbx	       431	size.c	FUNCTION_8
0x4000291	          0x4989f0	                             mov r8, rsi	       431	size.c	FUNCTION_8
0x4000294	            0x89fb	                            mov ebx, edi	       431	size.c	FUNCTION_8
0x4000296	      0xb900000000	                              mov ecx, 0	       431	size.c	FUNCTION_8
0x400029b	        0x4883ec30	                           sub rsp, 0x30	       431	size.c	FUNCTION_8
0x400029f	    0x64488b042528	                mov rax, qword fs:[0x28]	       431	size.c	FUNCTION_8
0x40002a8	      0x4889442428	             mov qword [rsp + 0x28], rax	       431	size.c	FUNCTION_8
0x40002ad	            0x31c0	                            xor eax, eax	       431	size.c	FUNCTION_8
0x40002af	    0x8b0500000000	            mov eax, dword [0x040002b5] 	       435	size.c	FUNCTION_8
0x40002b5	            0x85c0	                           test eax, eax	       434	size.c	FUNCTION_8
0x40002b7	            0x7411	                            je 0x40002ca	       434	size.c	FUNCTION_8
0x40002b9	          0x83f801	                              cmp eax, 1	       435	size.c	FUNCTION_8
0x40002bc	      0xb900000000	                              mov ecx, 0	       435	size.c	FUNCTION_8
0x40002c1	      0xb800000000	                              mov eax, 0	       435	size.c	FUNCTION_8
0x40002c6	        0x480f44c8	                          cmove rcx, rax	       435	size.c	FUNCTION_8
0x40002ca	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002cf	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002d4	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002d7	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002d9	      0xe800000000	                          call 0x40002de	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002de	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40002e0	          0x4889e1	                            mov rcx, rsp	       104	stdio2.h	CALL_16
0x40002e3	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x40002e5	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40002ea	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40002ef	      0xe800000000	                          call 0x40002f4	       104	stdio2.h	CALL_16
0x40002f4	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       440	size.c	FUNCTION_8
0x40002f9	    0x644833042528	                xor rax, qword fs:[0x28]	       440	size.c	FUNCTION_8
0x4000302	            0x7506	                           jne 0x400030a	       440	size.c	FUNCTION_8
0x4000304	        0x4883c430	                           add rsp, 0x30	       440	size.c	FUNCTION_8
0x4000308	              0x5b	                                 pop rbx	       440	size.c	FUNCTION_8
0x4000309	              0xc3	                                     ret	       440	size.c	FUNCTION_8
0x400030a	      0xe800000000	                          call 0x400030f	       440	size.c	FUNCTION_8
0x400030f	              0x90	                                     nop	       440	size.c	FUNCTION_8
0x4000310	              0x55	                                push rbp	       537	size.c	FUNCTION_12
0x4000311	              0x53	                                push rbx	       537	size.c	FUNCTION_12
0x4000312	          0x4889d3	                            mov rbx, rdx	       537	size.c	FUNCTION_12
0x4000315	          0x4889f9	                            mov rcx, rdi	       537	size.c	FUNCTION_12
0x4000318	          0x4889f5	                            mov rbp, rsi	       537	size.c	FUNCTION_12
0x400031b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4000320	        0x4883ec08	                              sub rsp, 8	       537	size.c	FUNCTION_12
0x4000324	    0x8b1500000000	            mov edx, dword [0x0400032a] 	       104	stdio2.h	CALL_16
0x400032a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400032f	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4000331	      0xe800000000	                          call 0x4000336	       104	stdio2.h	CALL_16
0x4000336	    0x8b3d00000000	            mov edi, dword [0x0400033c] 	       539	size.c	FUNCTION_12	CALL_1
0x400033c	          0x4889ee	                            mov rsi, rbp	       539	size.c	FUNCTION_12	CALL_1
0x400033f	      0xe84cffffff	                  call sym.rprint_number	       539	size.c	FUNCTION_12	CALL_1
0x4000344	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4000349	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400034e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4000350	      0xe800000000	                          call 0x4000355	       104	stdio2.h	CALL_16
berkeley_sum	ELSE,2:functions,0:SWITCH,0:DO,0:WHILE,0:CALL,2:FOR,0:IF,3	16
0x4000040	          0x8b4620	            mov eax, dword [rsi + 0x20] 	       453	size.c	FUNCTION_9	CALL_1
0x4000043	            0xa801	                              test al, 1	       454	size.c	FUNCTION_9	IF_1
0x4000045	            0x7414	                            je 0x400005b	       454	size.c	FUNCTION_9	IF_1
0x4000047	            0xa818	                           test al, 0x18	       458	size.c	FUNCTION_9	IF_2
0x4000049	        0x488b5638	            mov rdx, qword [rsi + 0x38] 	       457	size.c	FUNCTION_9	CALL_2
0x400004d	            0x7511	                           jne 0x4000060	       458	size.c	FUNCTION_9	IF_2
0x400004f	          0xf6c401	                              test ah, 1	       460	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000052	            0x751c	                           jne 0x4000070	       460	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000054	    0x480115000000	            add qword [0x0400005b], rdx 	       463	size.c	FUNCTION_9	ELSE_2
0x400005b	            0xf3c3	                                     ret	       463	size.c	FUNCTION_9	ELSE_2
0x400005d	           0xf1f00	                         nop dword [rax]	       463	size.c	FUNCTION_9	ELSE_2
0x4000060	    0x480115000000	            add qword [0x04000067], rdx 	       459	size.c	FUNCTION_9	IF_2
0x4000067	              0xc3	                                     ret	       459	size.c	FUNCTION_9	IF_2
0x4000068	     0xf1f84000000	                   nop dword [rax + rax]	       459	size.c	FUNCTION_9	IF_2
0x4000070	    0x480115000000	            add qword [0x04000077], rdx 	       461	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000077	              0xc3	                                     ret	       461	size.c	FUNCTION_9	ELSE_1	IF_3
usage	ELSE,0:functions,0:SWITCH,0:DO,0:WHILE,0:CALL,9:FOR,1:IF,1	62
0x4000080	            0x4154	                                push r12	        75	size.c	FUNCTION_1
0x4000082	    0x4c8b25000000	            mov r12, qword [0x04000089] 	        76	size.c	FUNCTION_1	CALL_1
0x4000089	      0xba05000000	                              mov edx, 5	        76	size.c	FUNCTION_1	CALL_1
0x400008e	              0x55	                                push rbp	        75	size.c	FUNCTION_1
0x400008f	              0x53	                                push rbx	        75	size.c	FUNCTION_1
0x4000090	            0x89f5	                            mov ebp, esi	        75	size.c	FUNCTION_1
0x4000092	          0x4889fb	                            mov rbx, rdi	        75	size.c	FUNCTION_1
0x4000095	      0xbe00000000	                              mov esi, 0	        76	size.c	FUNCTION_1	CALL_1
0x400009a	            0x31ff	                            xor edi, edi	        76	size.c	FUNCTION_1	CALL_1
0x400009c	      0xe800000000	                          call 0x40000a1	        76	size.c	FUNCTION_1	CALL_1
0x40000a1	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_13
0x40000a4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40000a7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40000ac	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x40000af	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x40000b1	      0xe800000000	                          call 0x40000b6	        97	stdio2.h	CALL_13
0x40000b6	            0x31ff	                            xor edi, edi	        77	size.c	FUNCTION_1	CALL_2
0x40000b8	      0xba05000000	                              mov edx, 5	        77	size.c	FUNCTION_1	CALL_2
0x40000bd	      0xbe00000000	                              mov esi, 0	        77	size.c	FUNCTION_1	CALL_2
0x40000c2	      0xe800000000	                          call 0x40000c7	        77	size.c	FUNCTION_1	CALL_2
0x40000c7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40000cc	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40000cf	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x40000d2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x40000d4	      0xe800000000	                          call 0x40000d9	        97	stdio2.h	CALL_13
0x40000d9	            0x31ff	                            xor edi, edi	        78	size.c	FUNCTION_1	CALL_3
0x40000db	      0xba05000000	                              mov edx, 5	        78	size.c	FUNCTION_1	CALL_3
0x40000e0	      0xbe00000000	                              mov esi, 0	        78	size.c	FUNCTION_1	CALL_3
0x40000e5	      0xe800000000	                          call 0x40000ea	        78	size.c	FUNCTION_1	CALL_3
0x40000ea	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40000ef	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40000f2	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x40000f5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x40000f7	      0xe800000000	                          call 0x40000fc	        97	stdio2.h	CALL_13
0x40000fc	            0x31ff	                            xor edi, edi	        79	size.c	FUNCTION_1	CALL_4
0x40000fe	      0xba05000000	                              mov edx, 5	        79	size.c	FUNCTION_1	CALL_4
0x4000103	      0xbe00000000	                              mov esi, 0	        79	size.c	FUNCTION_1	CALL_4
0x4000108	      0xe800000000	                          call 0x400010d	        79	size.c	FUNCTION_1	CALL_4
0x400010d	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_13
0x4000112	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000115	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x400011a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x400011d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x400011f	      0xe800000000	                          call 0x4000124	        97	stdio2.h	CALL_13
0x4000124	    0x488b3d000000	            mov rdi, qword [0x0400012b] 	        95	size.c	FUNCTION_1	FOR_1	CALL_7
0x400012b	          0x4889de	                            mov rsi, rbx	        95	size.c	FUNCTION_1	FOR_1	CALL_7
0x400012e	      0xe800000000	                          call 0x4000133	        95	size.c	FUNCTION_1	FOR_1	CALL_7
0x4000133	            0x85ed	                           test ebp, ebp	        96	size.c	FUNCTION_1	FOR_1	IF_1
0x4000135	            0x7407	                            je 0x400013e	        96	size.c	FUNCTION_1	FOR_1	IF_1
0x4000137	            0x89ef	                            mov edi, ebp	        98	size.c	FUNCTION_1	FOR_1	CALL_9
0x4000139	      0xe800000000	                          call 0x400013e	        98	size.c	FUNCTION_1	FOR_1	CALL_9
0x400013e	            0x31ff	                            xor edi, edi	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x4000140	      0xba05000000	                              mov edx, 5	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x4000145	      0xbe00000000	                              mov esi, 0	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x400014a	      0xe800000000	                          call 0x400014f	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x400014f	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_13
0x4000154	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000157	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x400015c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x400015f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000161	      0xe800000000	                          call 0x4000166	        97	stdio2.h	CALL_13
0x4000166	            0xebcf	                           jmp 0x4000137	        97	stdio2.h	CALL_13
