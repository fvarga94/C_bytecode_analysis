unescape	IF,1:DO,0:SWITCH,0:FOR,0:WHILE,0:functions,0:CALL,2:ELSE,0	31
0x4000040	            0x4156	                                push r14	       336	rust-demangle.c	FUNCTION_5
0x4000042	            0x4155	                                push r13	       336	rust-demangle.c	FUNCTION_5
0x4000044	          0x4189ce	                           mov r14d, ecx	       336	rust-demangle.c	FUNCTION_5
0x4000047	            0x4154	                                push r12	       336	rust-demangle.c	FUNCTION_5
0x4000049	              0x55	                                push rbp	       336	rust-demangle.c	FUNCTION_5
0x400004a	          0x4989f4	                            mov r12, rsi	       336	rust-demangle.c	FUNCTION_5
0x400004d	              0x53	                                push rbx	       336	rust-demangle.c	FUNCTION_5
0x400004e	          0x4889fb	                            mov rbx, rdi	       336	rust-demangle.c	FUNCTION_5
0x4000051	          0x4889d7	                            mov rdi, rdx	       337	rust-demangle.c	FUNCTION_5	CALL_1
0x4000054	          0x4889d5	                            mov rbp, rdx	       336	rust-demangle.c	FUNCTION_5
0x4000057	      0xe800000000	                          call 0x400005c	       337	rust-demangle.c	FUNCTION_5	CALL_1
0x400005c	          0x488b3b	                    mov rdi, qword [rbx]	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x400005f	          0x4889c2	                            mov rdx, rax	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000062	          0x4889ee	                            mov rsi, rbp	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000065	          0x4989c5	                            mov r13, rax	       337	rust-demangle.c	FUNCTION_5	CALL_1
0x4000068	      0xe800000000	                          call 0x400006d	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x400006d	            0x31d2	                            xor edx, edx	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x400006f	            0x85c0	                           test eax, eax	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000071	            0x7514	                           jne 0x4000087	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000073	        0x498b0424	                    mov rax, qword [r12]	       342	rust-demangle.c	FUNCTION_5
0x4000077	      0xba01000000	                              mov edx, 1	       347	rust-demangle.c	FUNCTION_5
0x400007c	          0x448830	                    mov byte [rax], r14b	       342	rust-demangle.c	FUNCTION_5
0x400007f	          0x4c012b	                    add qword [rbx], r13	       344	rust-demangle.c	FUNCTION_5
0x4000082	      0x4983042401	                      add qword [r12], 1	       345	rust-demangle.c	FUNCTION_5
0x4000087	              0x5b	                                 pop rbx	       348	rust-demangle.c	FUNCTION_5
0x4000088	            0x89d0	                            mov eax, edx	       348	rust-demangle.c	FUNCTION_5
0x400008a	              0x5d	                                 pop rbp	       348	rust-demangle.c	FUNCTION_5
0x400008b	            0x415c	                                 pop r12	       348	rust-demangle.c	FUNCTION_5
0x400008d	            0x415d	                                 pop r13	       348	rust-demangle.c	FUNCTION_5
0x400008f	            0x415e	                                 pop r14	       348	rust-demangle.c	FUNCTION_5
0x4000091	              0xc3	                                     ret	       348	rust-demangle.c	FUNCTION_5
rust_is_mangled	IF,3:DO,0:SWITCH,0:FOR,0:WHILE,0:functions,0:CALL,3:ELSE,0	207
0x40000a0	            0x4154	                                push r12	       123	rust-demangle.c	FUNCTION_1
0x40000a2	              0x55	                                push rbp	       123	rust-demangle.c	FUNCTION_1
0x40000a3	              0x53	                                push rbx	       123	rust-demangle.c	FUNCTION_1
0x40000a4	        0x4883ec20	                           sub rsp, 0x20	       123	rust-demangle.c	FUNCTION_1
0x40000a8	    0x64488b042528	                mov rax, qword fs:[0x28]	       123	rust-demangle.c	FUNCTION_1
0x40000b1	      0x4889442418	             mov qword [rsp + 0x18], rax	       123	rust-demangle.c	FUNCTION_1
0x40000b6	            0x31c0	                            xor eax, eax	       123	rust-demangle.c	FUNCTION_1
0x40000b8	          0x4885ff	                           test rdi, rdi	       126	rust-demangle.c	FUNCTION_1	IF_1
0x40000bb	            0x740e	                            je 0x40000cb	       126	rust-demangle.c	FUNCTION_1	IF_1
0x40000bd	          0x4889fb	                            mov rbx, rdi	       126	rust-demangle.c	FUNCTION_1	IF_1
0x40000c0	      0xe800000000	                          call 0x40000c5	       129	rust-demangle.c	FUNCTION_1	CALL_1
0x40000c5	        0x4883f813	                           cmp rax, 0x13	       130	rust-demangle.c	FUNCTION_1	IF_2
0x40000c9	            0x7725	                            ja 0x40000f0	       130	rust-demangle.c	FUNCTION_1	IF_2
0x40000cb	            0x31ed	                            xor ebp, ebp	       136	rust-demangle.c	FUNCTION_1	IF_3
0x40000cd	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       139	rust-demangle.c	FUNCTION_1
0x40000d2	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       139	rust-demangle.c	FUNCTION_1
0x40000db	            0x89e8	                            mov eax, ebp	       139	rust-demangle.c	FUNCTION_1
0x40000dd	     0xf85dd020000	                           jne 0x40003c0	       139	rust-demangle.c	FUNCTION_1
0x40000e3	        0x4883c420	                           add rsp, 0x20	       139	rust-demangle.c	FUNCTION_1
0x40000e7	              0x5b	                                 pop rbx	       139	rust-demangle.c	FUNCTION_1
0x40000e8	              0x5d	                                 pop rbp	       139	rust-demangle.c	FUNCTION_1
0x40000e9	            0x415c	                                 pop r12	       139	rust-demangle.c	FUNCTION_1
0x40000eb	              0xc3	                                     ret	       139	rust-demangle.c	FUNCTION_1
0x40000ec	         0xf1f4000	                         nop dword [rax]	       139	rust-demangle.c	FUNCTION_1
0x40000f0	      0x4c8d6403ed	             lea r12, [rbx + rax - 0x13]	       135	rust-demangle.c	FUNCTION_1	IF_3	CALL_2
0x40000f5	      0xbf00000000	                              mov edi, 0	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x40000fa	      0xb903000000	                              mov ecx, 3	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x40000ff	          0x4c89e6	                            mov rsi, r12	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000102	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000104	        0x400f97c5	                                seta bpl	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000108	           0xf92c0	                                 setb al	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x400010b	            0x29c5	                            sub ebp, eax	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x400010d	        0x400fbeed	                          movsx ebp, bpl	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000111	            0x85ed	                           test ebp, ebp	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000113	            0x75b6	                           jne 0x40000cb	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000115	      0x498d542403	                      lea rdx, [r12 + 3]	       155	rust-demangle.c	FUNCTION_2
0x400011a	      0x498d742413	                   lea rsi, [r12 + 0x13]	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x400011f	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_9	CALL_6
0x4000127	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_9	CALL_6
0x4000130	          0x4839f2	                            cmp rdx, rsi	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000133	            0x721d	                            jb 0x4000152	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000135	      0xe97f020000	                           jmp 0x40003b9	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x400013a	    0x660f1f440000	                    nop word [rax + rax]	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000140	          0x83e830	                           sub eax, 0x30	       160	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000143	            0x4898	                                    cdqe	       160	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000145	        0xc6040401	                 mov byte [rsp + rax], 1	       160	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000149	        0x4883c201	                              add rdx, 1	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x400014d	          0x4839d6	                            cmp rsi, rdx	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000150	            0x7426	                            je 0x4000178	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000152	           0xfbe02	                   movsx eax, byte [rdx]	       159	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000155	          0x8d48d0	                   lea ecx, [rax - 0x30]	       159	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000158	          0x80f909	                               cmp cl, 9	       159	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x400015b	            0x76e3	                           jbe 0x4000140	       159	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x400015d	          0x8d489f	                   lea ecx, [rax - 0x61]	       161	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000160	          0x80f905	                               cmp cl, 5	       161	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000163	     0xf8762ffffff	                            ja 0x40000cb	       161	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000169	          0x83e857	                           sub eax, 0x57	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x400016c	            0x4898	                                    cdqe	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x400016e	        0xc6040401	                 mov byte [rsp + rax], 1	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000172	            0xebd5	                           jmp 0x4000149	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000174	         0xf1f4000	                         nop dword [rax]	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000178	         0xfb60c24	                   movzx ecx, byte [rsp]	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x400017c	      0x488d442401	                      lea rax, [rsp + 1]	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000181	      0x488d742410	                   lea rsi, [rsp + 0x10]	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000186	            0x31d2	                            xor edx, edx	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000188	            0xeb0d	                           jmp 0x4000197	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x400018a	    0x660f1f440000	                    nop word [rax + rax]	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000190	           0xfb608	                   movzx ecx, byte [rax]	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000193	        0x4883c001	                              add rax, 1	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000197	          0x80f901	                               cmp cl, 1	       170	rust-demangle.c	FUNCTION_2	FOR_2	IF_4
0x400019a	          0x83daff	             sbb edx, 0xffffffffffffffff	       170	rust-demangle.c	FUNCTION_2	FOR_2	IF_4
0x400019d	          0x4839c6	                            cmp rsi, rax	       168	rust-demangle.c	FUNCTION_2	FOR_2
0x40001a0	            0x75ee	                           jne 0x4000190	       168	rust-demangle.c	FUNCTION_2	FOR_2
0x40001a2	          0x83ea05	                              sub edx, 5	       135	rust-demangle.c	FUNCTION_1	IF_3	CALL_2
0x40001a5	          0x83fa0a	                            cmp edx, 0xa	       135	rust-demangle.c	FUNCTION_1	IF_3	CALL_2
0x40001a8	     0xf871dffffff	                            ja 0x40000cb	       135	rust-demangle.c	FUNCTION_1	IF_3	CALL_2
0x40001ae	          0x4c39e3	                            cmp rbx, r12	       180	rust-demangle.c	FUNCTION_3	WHILE_1
0x40001b1	            0x733b	                           jae 0x40001ee	       180	rust-demangle.c	FUNCTION_3	WHILE_1
0x40001b3	       0xf1f440000	                   nop dword [rax + rax]	       180	rust-demangle.c	FUNCTION_3	WHILE_1
0x40001b8	           0xfb603	                   movzx eax, byte [rbx]	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001bb	          0x83e824	                           sub eax, 0x24	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001be	            0x3c56	                            cmp al, 0x56	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001c0	     0xf8707ffffff	                            ja 0x40000cd	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001c6	           0xfb6c0	                           movzx eax, al	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001c9	    0xff24c5000000	                       jmp qword [rax*8]	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001d0	      0xbf00000000	                              mov edi, 0	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x40001d5	      0xb903000000	                              mov ecx, 3	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x40001da	          0x4889de	                            mov rsi, rbx	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x40001dd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x40001df	     0xf84e6feffff	                            je 0x40000cb	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x40001e5	        0x4883c301	                              add rbx, 1	       227	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001e9	          0x4939dc	                            cmp r12, rbx	       180	rust-demangle.c	FUNCTION_3	WHILE_1
0x40001ec	            0x77ca	                            ja 0x40001b8	       180	rust-demangle.c	FUNCTION_3	WHILE_1
0x40001ee	      0xbd01000000	                              mov ebp, 1	       233	rust-demangle.c	FUNCTION_3
0x40001f3	      0xe9d5feffff	                           jmp 0x40000cd	       233	rust-demangle.c	FUNCTION_3
0x40001f8	     0xf1f84000000	                   nop dword [rax + rax]	       233	rust-demangle.c	FUNCTION_3
0x4000200	      0xbf00000000	                              mov edi, 0	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x4000205	      0xb903000000	                              mov ecx, 3	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x400020a	          0x4889de	                            mov rsi, rbx	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x400020d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x400020f	            0x750f	                           jne 0x4000220	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x4000211	        0x4883c303	                              add rbx, 3	       185	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1
0x4000215	            0xebd2	                           jmp 0x40001e9	       185	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1
0x4000217	    0x660f1f840000	                    nop word [rax + rax]	       185	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1
0x4000220	      0xbf00000000	                              mov edi, 0	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x4000225	      0xb904000000	                              mov ecx, 4	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x400022a	          0x4889de	                            mov rsi, rbx	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x400022d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x400022f	     0xf847b010000	                            je 0x40003b0	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x4000235	      0xbf00000000	                              mov edi, 0	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x400023a	      0xb904000000	                              mov ecx, 4	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x400023f	          0x4889de	                            mov rsi, rbx	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x4000242	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x4000244	     0xf8466010000	                            je 0x40003b0	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x400024a	      0xbf00000000	                              mov edi, 0	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x400024f	      0xb904000000	                              mov ecx, 4	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x4000254	          0x4889de	                            mov rsi, rbx	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x4000257	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x4000259	     0xf8451010000	                            je 0x40003b0	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x400025f	      0xbf00000000	                              mov edi, 0	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x4000264	      0xb904000000	                              mov ecx, 4	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x4000269	          0x4889de	                            mov rsi, rbx	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x400026c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x400026e	     0xf843c010000	                            je 0x40003b0	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x4000274	      0xbf00000000	                              mov edi, 0	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x4000279	      0xb904000000	                              mov ecx, 4	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x400027e	          0x4889de	                            mov rsi, rbx	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x4000281	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x4000283	     0xf8427010000	                            je 0x40003b0	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x4000289	      0xbf00000000	                              mov edi, 0	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x400028e	      0xb904000000	                              mov ecx, 4	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x4000293	          0x4889de	                            mov rsi, rbx	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x4000296	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x4000298	     0xf8412010000	                            je 0x40003b0	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x400029e	      0xbf00000000	                              mov edi, 0	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x40002a3	      0xb904000000	                              mov ecx, 4	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x40002a8	          0x4889de	                            mov rsi, rbx	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x40002ab	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x40002ad	     0xf84fd000000	                            je 0x40003b0	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x40002b3	      0xba05000000	                              mov edx, 5	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x40002b8	      0xbe00000000	                              mov esi, 0	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x40002bd	          0x4889df	                            mov rdi, rbx	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x40002c0	      0xe800000000	                          call 0x40002c5	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x40002c5	            0x85c0	                           test eax, eax	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x40002c7	     0xf84d6000000	                            je 0x40003a3	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x40002cd	      0xba05000000	                              mov edx, 5	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x40002d2	      0xbe00000000	                              mov esi, 0	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x40002d7	          0x4889df	                            mov rdi, rbx	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x40002da	      0xe800000000	                          call 0x40002df	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x40002df	            0x85c0	                           test eax, eax	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x40002e1	     0xf84bc000000	                            je 0x40003a3	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x40002e7	      0xba05000000	                              mov edx, 5	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x40002ec	      0xbe00000000	                              mov esi, 0	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x40002f1	          0x4889df	                            mov rdi, rbx	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x40002f4	      0xe800000000	                          call 0x40002f9	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x40002f9	            0x85c0	                           test eax, eax	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x40002fb	     0xf84a2000000	                            je 0x40003a3	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x4000301	      0xba05000000	                              mov edx, 5	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x4000306	      0xbe00000000	                              mov esi, 0	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x400030b	          0x4889df	                            mov rdi, rbx	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x400030e	      0xe800000000	                          call 0x4000313	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x4000313	            0x85c0	                           test eax, eax	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x4000315	     0xf8488000000	                            je 0x40003a3	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x400031b	      0xba05000000	                              mov edx, 5	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x4000320	      0xbe00000000	                              mov esi, 0	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x4000325	          0x4889df	                            mov rdi, rbx	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x4000328	      0xe800000000	                          call 0x400032d	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x400032d	            0x85c0	                           test eax, eax	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x400032f	            0x7472	                            je 0x40003a3	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x4000331	      0xba05000000	                              mov edx, 5	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x4000336	      0xbe00000000	                              mov esi, 0	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x400033b	          0x4889df	                            mov rdi, rbx	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x400033e	      0xe800000000	                          call 0x4000343	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x4000343	            0x85c0	                           test eax, eax	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x4000345	            0x745c	                            je 0x40003a3	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x4000347	      0xba05000000	                              mov edx, 5	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x400034c	      0xbe00000000	                              mov esi, 0	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x4000351	          0x4889df	                            mov rdi, rbx	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x4000354	      0xe800000000	                          call 0x4000359	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x4000359	            0x85c0	                           test eax, eax	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x400035b	            0x7446	                            je 0x40003a3	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x400035d	      0xba05000000	                              mov edx, 5	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x4000362	      0xbe00000000	                              mov esi, 0	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x4000367	          0x4889df	                            mov rdi, rbx	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x400036a	      0xe800000000	                          call 0x400036f	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x400036f	            0x85c0	                           test eax, eax	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x4000371	            0x7430	                            je 0x40003a3	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x4000373	      0xba05000000	                              mov edx, 5	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x4000378	      0xbe00000000	                              mov esi, 0	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x400037d	          0x4889df	                            mov rdi, rbx	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x4000380	      0xe800000000	                          call 0x4000385	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x4000385	            0x85c0	                           test eax, eax	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x4000387	            0x741a	                            je 0x40003a3	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x4000389	      0xba05000000	                              mov edx, 5	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x400038e	      0xbe00000000	                              mov esi, 0	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x4000393	          0x4889df	                            mov rdi, rbx	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x4000396	      0xe800000000	                          call 0x400039b	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x400039b	            0x85c0	                           test eax, eax	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x400039d	     0xf8528fdffff	                           jne 0x40000cb	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x40003a3	        0x4883c305	                              add rbx, 5	       204	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3
0x40003a7	      0xe93dfeffff	                           jmp 0x40001e9	       204	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3
0x40003ac	         0xf1f4000	                         nop dword [rax]	       204	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3
0x40003b0	        0x4883c304	                              add rbx, 4	       193	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40003b4	      0xe930feffff	                           jmp 0x40001e9	       193	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x40003b9	            0x31c9	                            xor ecx, ecx	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x40003bb	      0xe9bcfdffff	                           jmp 0x400017c	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x40003c0	      0xe800000000	                          call 0x40003c5	       139	rust-demangle.c	FUNCTION_1
rust_demangle_sym	IF,4:DO,0:SWITCH,1:FOR,0:WHILE,1:functions,0:CALL,19:ELSE,2	204
0x40003d0	              0x55	                                push rbp	       244	rust-demangle.c	FUNCTION_4
0x40003d1	              0x53	                                push rbx	       244	rust-demangle.c	FUNCTION_4
0x40003d2	        0x4883ec28	                           sub rsp, 0x28	       244	rust-demangle.c	FUNCTION_4
0x40003d6	    0x64488b042528	                mov rax, qword fs:[0x28]	       244	rust-demangle.c	FUNCTION_4
0x40003df	      0x4889442418	             mov qword [rsp + 0x18], rax	       244	rust-demangle.c	FUNCTION_4
0x40003e4	            0x31c0	                            xor eax, eax	       244	rust-demangle.c	FUNCTION_4
0x40003e6	          0x4885ff	                           test rdi, rdi	       249	rust-demangle.c	FUNCTION_4	IF_1
0x40003e9	     0xf841a030000	                            je 0x4000709	       249	rust-demangle.c	FUNCTION_4	IF_1
0x40003ef	          0x4889fb	                            mov rbx, rdi	       249	rust-demangle.c	FUNCTION_4	IF_1
0x40003f2	      0x48897c2408	                mov qword [rsp + 8], rdi	       252	rust-demangle.c	FUNCTION_4
0x40003f7	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       253	rust-demangle.c	FUNCTION_4
0x40003fc	      0xe800000000	                          call 0x4000401	       254	rust-demangle.c	FUNCTION_4	CALL_1
0x4000401	      0x488d6c03ed	             lea rbp, [rbx + rax - 0x13]	       254	rust-demangle.c	FUNCTION_4	CALL_1
0x4000406	          0x4889da	                            mov rdx, rbx	       256	rust-demangle.c	FUNCTION_4	WHILE_1
0x4000409	          0x4839d5	                            cmp rbp, rdx	       256	rust-demangle.c	FUNCTION_4	WHILE_1
0x400040c	     0xf86ef020000	                           jbe 0x4000701	       256	rust-demangle.c	FUNCTION_4	WHILE_1
0x4000412	           0xfb602	                   movzx eax, byte [rdx]	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000415	          0x83e824	                           sub eax, 0x24	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000418	            0x3c56	                            cmp al, 0x56	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400041a	     0xf87d0020000	                            ja 0x40006f0	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000420	           0xfb6c0	                           movzx eax, al	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000423	    0xff24c5000000	                       jmp qword [rax*8]	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400042a	    0x660f1f440000	                    nop word [rax + rax]	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000430	          0x4839d3	                            cmp rbx, rdx	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000433	     0xf84e7020000	                            je 0x4000720	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000439	        0x807aff3a	                cmp byte [rdx - 1], 0x3a	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x400043d	     0xf84dd020000	                            je 0x4000720	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000443	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000448	        0x488d4801	                      lea rcx, [rax + 1]	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400044c	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000451	        0x488d4a01	                      lea rcx, [rdx + 1]	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000455	      0x48894c2408	                mov qword [rsp + 8], rcx	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400045a	           0xfb612	                   movzx edx, byte [rdx]	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400045d	            0x8810	                      mov byte [rax], dl	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400045f	      0x488b542408	                mov rdx, qword [rsp + 8]	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000464	            0xeba3	                           jmp 0x4000409	       321	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000466	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       321	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000470	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       296	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000475	        0x807a012e	                cmp byte [rdx + 1], 0x2e	       293	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000479	        0x488d5001	                      lea rdx, [rax + 1]	       296	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x400047d	      0x4889542410	             mov qword [rsp + 0x10], rdx	       296	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000482	     0xf84b8020000	                            je 0x4000740	       293	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000488	          0xc6002d	                    mov byte [rax], 0x2d	       303	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x400048b	      0x488b442408	                mov rax, qword [rsp + 8]	       304	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x4000490	        0x488d5001	                      lea rdx, [rax + 1]	       304	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x4000494	      0x4889542408	                mov qword [rsp + 8], rdx	       304	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x4000499	      0xe96bffffff	                           jmp 0x4000409	       304	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x400049e	            0x6690	                                     nop	       304	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x40004a0	      0x488d742410	                   lea rsi, [rsp + 0x10]	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40004a5	      0x488d7c2408	                      lea rdi, [rsp + 8]	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40004aa	      0xb92c000000	                           mov ecx, 0x2c	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40004af	      0xba00000000	                              mov edx, 0	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40004b4	      0xe887fbffff	                       call sym.unescape	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40004b9	            0x85c0	                           test eax, eax	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40004bb	            0x75a2	                           jne 0x400045f	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40004bd	      0x488d742410	                   lea rsi, [rsp + 0x10]	       261	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_3
0x40004c2	      0x488d7c2408	                      lea rdi, [rsp + 8]	       261	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_3
0x40004c7	      0xb940000000	                           mov ecx, 0x40	       261	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_3
0x40004cc	      0xba00000000	                              mov edx, 0	       261	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_3
0x40004d1	      0xe86afbffff	                       call sym.unescape	       261	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_3
0x40004d6	            0x85c0	                           test eax, eax	       261	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_3
0x40004d8	            0x7585	                           jne 0x400045f	       261	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_3
0x40004da	      0x488d742410	                   lea rsi, [rsp + 0x10]	       262	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_4
0x40004df	      0x488d7c2408	                      lea rdi, [rsp + 8]	       262	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_4
0x40004e4	      0xb92a000000	                           mov ecx, 0x2a	       262	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_4
0x40004e9	      0xba00000000	                              mov edx, 0	       262	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_4
0x40004ee	      0xe84dfbffff	                       call sym.unescape	       262	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_4
0x40004f3	            0x85c0	                           test eax, eax	       262	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_4
0x40004f5	     0xf8564ffffff	                           jne 0x400045f	       262	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_4
0x40004fb	      0x488d742410	                   lea rsi, [rsp + 0x10]	       263	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_5
0x4000500	      0x488d7c2408	                      lea rdi, [rsp + 8]	       263	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_5
0x4000505	      0xb926000000	                           mov ecx, 0x26	       263	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_5
0x400050a	      0xba00000000	                              mov edx, 0	       263	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_5
0x400050f	      0xe82cfbffff	                       call sym.unescape	       263	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_5
0x4000514	            0x85c0	                           test eax, eax	       263	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_5
0x4000516	     0xf8543ffffff	                           jne 0x400045f	       263	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_5
0x400051c	      0x488d742410	                   lea rsi, [rsp + 0x10]	       264	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_6
0x4000521	      0x488d7c2408	                      lea rdi, [rsp + 8]	       264	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_6
0x4000526	      0xb93c000000	                           mov ecx, 0x3c	       264	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_6
0x400052b	      0xba00000000	                              mov edx, 0	       264	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_6
0x4000530	      0xe80bfbffff	                       call sym.unescape	       264	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_6
0x4000535	            0x85c0	                           test eax, eax	       264	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_6
0x4000537	     0xf8522ffffff	                           jne 0x400045f	       264	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_6
0x400053d	      0x488d742410	                   lea rsi, [rsp + 0x10]	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x4000542	      0x488d7c2408	                      lea rdi, [rsp + 8]	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x4000547	      0xb93e000000	                           mov ecx, 0x3e	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x400054c	      0xba00000000	                              mov edx, 0	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x4000551	      0xe8eafaffff	                       call sym.unescape	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x4000556	            0x85c0	                           test eax, eax	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x4000558	     0xf8501ffffff	                           jne 0x400045f	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x400055e	      0x488d742410	                   lea rsi, [rsp + 0x10]	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x4000563	      0x488d7c2408	                      lea rdi, [rsp + 8]	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x4000568	      0xb928000000	                           mov ecx, 0x28	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x400056d	      0xba00000000	                              mov edx, 0	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x4000572	      0xe8c9faffff	                       call sym.unescape	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x4000577	            0x85c0	                           test eax, eax	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x4000579	     0xf85e0feffff	                           jne 0x400045f	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x400057f	      0x488d742410	                   lea rsi, [rsp + 0x10]	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x4000584	      0x488d7c2408	                      lea rdi, [rsp + 8]	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x4000589	      0xb929000000	                           mov ecx, 0x29	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x400058e	      0xba00000000	                              mov edx, 0	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x4000593	      0xe8a8faffff	                       call sym.unescape	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x4000598	            0x85c0	                           test eax, eax	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x400059a	     0xf85bffeffff	                           jne 0x400045f	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x40005a0	      0x488d742410	                   lea rsi, [rsp + 0x10]	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x40005a5	      0x488d7c2408	                      lea rdi, [rsp + 8]	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x40005aa	      0xb920000000	                           mov ecx, 0x20	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x40005af	      0xba00000000	                              mov edx, 0	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x40005b4	      0xe887faffff	                       call sym.unescape	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x40005b9	            0x85c0	                           test eax, eax	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x40005bb	     0xf859efeffff	                           jne 0x400045f	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x40005c1	      0x488d742410	                   lea rsi, [rsp + 0x10]	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005c6	      0x488d7c2408	                      lea rdi, [rsp + 8]	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005cb	      0xb922000000	                           mov ecx, 0x22	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005d0	      0xba00000000	                              mov edx, 0	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005d5	      0xe866faffff	                       call sym.unescape	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005da	            0x85c0	                           test eax, eax	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005dc	     0xf857dfeffff	                           jne 0x400045f	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005e2	      0x488d742410	                   lea rsi, [rsp + 0x10]	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005e7	      0x488d7c2408	                      lea rdi, [rsp + 8]	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005ec	      0xb927000000	                           mov ecx, 0x27	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005f1	      0xba00000000	                              mov edx, 0	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005f6	      0xe845faffff	                       call sym.unescape	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005fb	            0x85c0	                           test eax, eax	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005fd	     0xf855cfeffff	                           jne 0x400045f	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x4000603	      0x488d742410	                   lea rsi, [rsp + 0x10]	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x4000608	      0x488d7c2408	                      lea rdi, [rsp + 8]	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x400060d	      0xb92b000000	                           mov ecx, 0x2b	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x4000612	      0xba00000000	                              mov edx, 0	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x4000617	      0xe824faffff	                       call sym.unescape	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x400061c	            0x85c0	                           test eax, eax	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x400061e	     0xf853bfeffff	                           jne 0x400045f	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x4000624	      0x488d742410	                   lea rsi, [rsp + 0x10]	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x4000629	      0x488d7c2408	                      lea rdi, [rsp + 8]	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x400062e	      0xb93b000000	                           mov ecx, 0x3b	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x4000633	      0xba00000000	                              mov edx, 0	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x4000638	      0xe803faffff	                       call sym.unescape	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x400063d	            0x85c0	                           test eax, eax	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x400063f	     0xf851afeffff	                           jne 0x400045f	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x4000645	      0x488d742410	                   lea rsi, [rsp + 0x10]	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x400064a	      0x488d7c2408	                      lea rdi, [rsp + 8]	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x400064f	      0xb95b000000	                           mov ecx, 0x5b	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x4000654	      0xba00000000	                              mov edx, 0	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x4000659	      0xe8e2f9ffff	                       call sym.unescape	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x400065e	            0x85c0	                           test eax, eax	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x4000660	     0xf85f9fdffff	                           jne 0x400045f	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x4000666	      0x488d742410	                   lea rsi, [rsp + 0x10]	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x400066b	      0x488d7c2408	                      lea rdi, [rsp + 8]	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x4000670	      0xb95d000000	                           mov ecx, 0x5d	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x4000675	      0xba00000000	                              mov edx, 0	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x400067a	      0xe8c1f9ffff	                       call sym.unescape	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x400067f	            0x85c0	                           test eax, eax	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x4000681	     0xf85d8fdffff	                           jne 0x400045f	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x4000687	      0x488d742410	                   lea rsi, [rsp + 0x10]	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x400068c	      0x488d7c2408	                      lea rdi, [rsp + 8]	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x4000691	      0xb97b000000	                           mov ecx, 0x7b	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x4000696	      0xba00000000	                              mov edx, 0	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x400069b	      0xe8a0f9ffff	                       call sym.unescape	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x40006a0	            0x85c0	                           test eax, eax	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x40006a2	     0xf85b7fdffff	                           jne 0x400045f	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x40006a8	      0x488d742410	                   lea rsi, [rsp + 0x10]	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x40006ad	      0x488d7c2408	                      lea rdi, [rsp + 8]	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x40006b2	      0xb97d000000	                           mov ecx, 0x7d	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x40006b7	      0xba00000000	                              mov edx, 0	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x40006bc	      0xe87ff9ffff	                       call sym.unescape	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x40006c1	            0x85c0	                           test eax, eax	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x40006c3	     0xf8596fdffff	                           jne 0x400045f	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x40006c9	      0x488d742410	                   lea rsi, [rsp + 0x10]	       277	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_19
0x40006ce	      0x488d7c2408	                      lea rdi, [rsp + 8]	       277	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_19
0x40006d3	      0xb97e000000	                           mov ecx, 0x7e	       277	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_19
0x40006d8	      0xba00000000	                              mov edx, 0	       277	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_19
0x40006dd	      0xe85ef9ffff	                       call sym.unescape	       277	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_19
0x40006e2	            0x85c0	                           test eax, eax	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40006e4	     0xf8575fdffff	                           jne 0x400045f	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40006ea	    0x660f1f440000	                    nop word [rax + rax]	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40006f0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       329	rust-demangle.c	FUNCTION_4
0x40006f5	        0x488d5001	                      lea rdx, [rax + 1]	       329	rust-demangle.c	FUNCTION_4
0x40006f9	      0x4889542410	             mov qword [rsp + 0x10], rdx	       329	rust-demangle.c	FUNCTION_4
0x40006fe	          0xc6003f	                    mov byte [rax], 0x3f	       329	rust-demangle.c	FUNCTION_4
0x4000701	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       331	rust-demangle.c	FUNCTION_4
0x4000706	          0xc60000	                       mov byte [rax], 0	       331	rust-demangle.c	FUNCTION_4
0x4000709	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       332	rust-demangle.c	FUNCTION_4
0x400070e	    0x644833042528	                xor rax, qword fs:[0x28]	       332	rust-demangle.c	FUNCTION_4
0x4000717	            0x754e	                           jne 0x4000767	       332	rust-demangle.c	FUNCTION_4
0x4000719	        0x4883c428	                           add rsp, 0x28	       332	rust-demangle.c	FUNCTION_4
0x400071d	              0x5b	                                 pop rbx	       332	rust-demangle.c	FUNCTION_4
0x400071e	              0x5d	                                 pop rbp	       332	rust-demangle.c	FUNCTION_4
0x400071f	              0xc3	                                     ret	       332	rust-demangle.c	FUNCTION_4
0x4000720	        0x807a0124	                cmp byte [rdx + 1], 0x24	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000724	     0xf8519fdffff	                           jne 0x4000443	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x400072a	        0x4883c201	                              add rdx, 1	       288	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x400072e	      0x4889542408	                mov qword [rsp + 8], rdx	       288	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000733	      0xe9d1fcffff	                           jmp 0x4000409	       288	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000738	     0xf1f84000000	                   nop dword [rax + rax]	       288	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000740	          0xc6003a	                    mov byte [rax], 0x3a	       296	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000743	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       297	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000748	        0x488d5001	                      lea rdx, [rax + 1]	       297	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x400074c	      0x4889542410	             mov qword [rsp + 0x10], rdx	       297	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000751	          0xc6003a	                    mov byte [rax], 0x3a	       297	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000754	      0x488b442408	                mov rax, qword [rsp + 8]	       298	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000759	        0x488d5002	                      lea rdx, [rax + 2]	       298	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x400075d	      0x4889542408	                mov qword [rsp + 8], rdx	       298	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000762	      0xe9a2fcffff	                           jmp 0x4000409	       298	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000767	      0xe800000000	                          call 0x400076c	       332	rust-demangle.c	FUNCTION_4
