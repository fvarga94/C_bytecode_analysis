bfd_section_already_linked_table_free	WHILE,0:CALL,1:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	2
0x4002cc0	      0xbf00000000	                              mov edi, 0	      2806	linker.c	FUNCTION_39	CALL_1
0x4002cc5	      0xe900000000	                           jmp 0x4002cca	      2806	linker.c	FUNCTION_39	CALL_1
_bfd_generic_verify_endian_match	WHILE,0:CALL,6:DO,0:FOR,0:IF,2:ELSE,1:functions,0:SWITCH,0	34
0x4003580	        0x488b5650	            mov rdx, qword [rsi + 0x50] 	      3389	linker.c	FUNCTION_52	IF_1
0x4003584	        0x488b4708	                mov rax, qword [rdi + 8]	      3389	linker.c	FUNCTION_52	IF_1
0x4003588	        0x488b5208	                mov rdx, qword [rdx + 8]	      3389	linker.c	FUNCTION_52	IF_1
0x400358c	          0x8b400c	              mov eax, dword [rax + 0xc]	      3389	linker.c	FUNCTION_52	IF_1
0x400358f	          0x8b520c	              mov edx, dword [rdx + 0xc]	      3389	linker.c	FUNCTION_52	IF_1
0x4003592	          0x83f802	                              cmp eax, 2	      3391	linker.c	FUNCTION_52	IF_1
0x4003595	        0x400f95c6	                               setne sil	      3391	linker.c	FUNCTION_52	IF_1
0x4003599	            0x39d0	                            cmp eax, edx	      3391	linker.c	FUNCTION_52	IF_1
0x400359b	           0xf95c1	                                setne cl	      3391	linker.c	FUNCTION_52	IF_1
0x400359e	          0x4084ce	                            test sil, cl	      3391	linker.c	FUNCTION_52	IF_1
0x40035a1	            0x7445	                            je 0x40035e8	      3391	linker.c	FUNCTION_52	IF_1
0x40035a3	          0x83fa02	                              cmp edx, 2	      3391	linker.c	FUNCTION_52	IF_1
0x40035a6	            0x7440	                            je 0x40035e8	      3391	linker.c	FUNCTION_52	IF_1
0x40035a8	            0x85c0	                           test eax, eax	      3393	linker.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x40035aa	              0x53	                                push rbx	      3386	linker.c	FUNCTION_52
0x40035ab	      0xba05000000	                              mov edx, 5	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x40035b0	          0x4889fb	                            mov rbx, rdi	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x40035b3	      0xbe00000000	                              mov esi, 0	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x40035b8	            0x7405	                            je 0x40035bf	      3393	linker.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x40035ba	      0xbe00000000	                              mov esi, 0	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x40035bf	      0xbf00000000	                              mov edi, 0	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x40035c4	      0xe800000000	                          call 0x40035c9	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x40035c9	          0x4889de	                            mov rsi, rbx	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x40035cc	          0x4889c7	                            mov rdi, rax	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x40035cf	            0x31c0	                            xor eax, eax	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x40035d1	      0xe800000000	                          call 0x40035d6	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x40035d6	      0xbf03000000	                              mov edi, 3	      3399	linker.c	FUNCTION_52	IF_1	CALL_6
0x40035db	      0xe800000000	                          call 0x40035e0	      3399	linker.c	FUNCTION_52	IF_1	CALL_6
0x40035e0	            0x31c0	                            xor eax, eax	      3400	linker.c	FUNCTION_52	IF_1
0x40035e2	              0x5b	                                 pop rbx	      3404	linker.c	FUNCTION_52
0x40035e3	              0xc3	                                     ret	      3404	linker.c	FUNCTION_52
0x40035e4	         0xf1f4000	                         nop dword [rax]	      3404	linker.c	FUNCTION_52
0x40035e8	      0xb801000000	                              mov eax, 1	      3403	linker.c	FUNCTION_52
0x40035ed	              0xc3	                                     ret	      3403	linker.c	FUNCTION_52
_bfd_nolink_bfd_get_relocated_section_contents	WHILE,0:CALL,1:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	1
0x4003610	      0xe900000000	                           jmp 0x4003615	      3431	linker.c	FUNCTION_55	CALL_1
bfd_hide_sym_by_version	WHILE,0:CALL,1:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	14
0x4003510	        0x4883ec18	                           sub rsp, 0x18	      3300	linker.c	FUNCTION_49
0x4003514	      0x488d542404	                      lea rdx, [rsp + 4]	      3302	linker.c	FUNCTION_49	CALL_1
0x4003519	    0xc74424040000	                  mov dword [rsp + 4], 0	      3301	linker.c	FUNCTION_49
0x4003521	    0x64488b042528	                mov rax, qword fs:[0x28]	      3300	linker.c	FUNCTION_49
0x400352a	      0x4889442408	                mov qword [rsp + 8], rax	      3300	linker.c	FUNCTION_49
0x400352f	            0x31c0	                            xor eax, eax	      3300	linker.c	FUNCTION_49
0x4003531	      0xe800000000	                          call 0x4003536	      3302	linker.c	FUNCTION_49	CALL_1
0x4003536	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3304	linker.c	FUNCTION_49
0x400353b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3304	linker.c	FUNCTION_49
0x4003544	        0x8b442404	                mov eax, dword [rsp + 4]	      3304	linker.c	FUNCTION_49
0x4003548	            0x7505	                           jne 0x400354f	      3304	linker.c	FUNCTION_49
0x400354a	        0x4883c418	                           add rsp, 0x18	      3304	linker.c	FUNCTION_49
0x400354e	              0xc3	                                     ret	      3304	linker.c	FUNCTION_49
0x400354f	      0xe800000000	                          call 0x4003554	      3304	linker.c	FUNCTION_49
already_linked_newfunc	WHILE,0:CALL,1:DO,0:FOR,0:IF,1:ELSE,0:functions,0:SWITCH,0	9
0x4000040	        0x4883ec08	                              sub rsp, 8	      2781	linker.c	FUNCTION_37
0x4000044	          0x4889f7	                            mov rdi, rsi	      2781	linker.c	FUNCTION_37
0x4000047	      0xbe20000000	                           mov esi, 0x20	      2782	linker.c	FUNCTION_37
0x400004c	      0xe800000000	                          call 0x4000051	      2782	linker.c	FUNCTION_37
0x4000051	          0x4885c0	                           test rax, rax	      2786	linker.c	FUNCTION_37	IF_1
0x4000054	            0x7408	                            je 0x400005e	      2786	linker.c	FUNCTION_37	IF_1
0x4000056	    0x48c740180000	               mov qword [rax + 0x18], 0	      2789	linker.c	FUNCTION_37
0x400005e	        0x4883c408	                              add rsp, 8	      2792	linker.c	FUNCTION_37
0x4000062	              0xc3	                                     ret	      2792	linker.c	FUNCTION_37
_bfd_generic_link_hash_table_create	WHILE,0:CALL,3:DO,0:FOR,0:IF,2:ELSE,0:functions,0:SWITCH,0	29
0x4000f80	              0x55	                                push rbp	       752	linker.c	FUNCTION_10
0x4000f81	              0x53	                                push rbx	       752	linker.c	FUNCTION_10
0x4000f82	          0x4889fd	                            mov rbp, rdi	       752	linker.c	FUNCTION_10
0x4000f85	      0xbf48000000	                           mov edi, 0x48	       756	linker.c	FUNCTION_10	CALL_1
0x4000f8a	        0x4883ec08	                              sub rsp, 8	       752	linker.c	FUNCTION_10
0x4000f8e	      0xe800000000	                          call 0x4000f93	       756	linker.c	FUNCTION_10	CALL_1
0x4000f93	          0x4885c0	                           test rax, rax	       757	linker.c	FUNCTION_10	IF_1
0x4000f96	            0x7428	                            je 0x4000fc0	       757	linker.c	FUNCTION_10	IF_1
0x4000f98	      0xb948000000	                           mov ecx, 0x48	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000f9d	      0xba00000000	                              mov edx, 0	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000fa2	          0x4889ee	                            mov rsi, rbp	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000fa5	          0x4889c7	                            mov rdi, rax	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000fa8	          0x4889c3	                            mov rbx, rax	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000fab	      0xe800000000	                          call 0x4000fb0	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000fb0	            0x85c0	                           test eax, eax	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000fb2	            0x7414	                            je 0x4000fc8	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000fb4	        0x4883c408	                              add rsp, 8	       767	linker.c	FUNCTION_10
0x4000fb8	          0x4889d8	                            mov rax, rbx	       767	linker.c	FUNCTION_10
0x4000fbb	              0x5b	                                 pop rbx	       767	linker.c	FUNCTION_10
0x4000fbc	              0x5d	                                 pop rbp	       767	linker.c	FUNCTION_10
0x4000fbd	              0xc3	                                     ret	       767	linker.c	FUNCTION_10
0x4000fbe	            0x6690	                                     nop	       767	linker.c	FUNCTION_10
0x4000fc0	            0x31db	                            xor ebx, ebx	       758	linker.c	FUNCTION_10	IF_1
0x4000fc2	            0xebf0	                           jmp 0x4000fb4	       758	linker.c	FUNCTION_10	IF_1
0x4000fc4	         0xf1f4000	                         nop dword [rax]	       758	linker.c	FUNCTION_10	IF_1
0x4000fc8	          0x4889df	                            mov rdi, rbx	       763	linker.c	FUNCTION_10	IF_2	CALL_3
0x4000fcb	            0x31db	                            xor ebx, ebx	       764	linker.c	FUNCTION_10	IF_2
0x4000fcd	      0xe800000000	                          call 0x4000fd2	       763	linker.c	FUNCTION_10	IF_2	CALL_3
0x4000fd2	            0xebe0	                           jmp 0x4000fb4	       764	linker.c	FUNCTION_10	IF_2
_bfd_generic_link_add_symbols	WHILE,0:CALL,4:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,1	150
0x4001ce0	            0x4156	                                push r14	       841	linker.c	FUNCTION_15
0x4001ce2	            0x4155	                                push r13	       841	linker.c	FUNCTION_15
0x4001ce4	          0x4989f6	                            mov r14, rsi	       841	linker.c	FUNCTION_15
0x4001ce7	            0x4154	                                push r12	       841	linker.c	FUNCTION_15
0x4001ce9	              0x55	                                push rbp	       841	linker.c	FUNCTION_15
0x4001cea	          0x4989fc	                            mov r12, rdi	       841	linker.c	FUNCTION_15
0x4001ced	              0x53	                                push rbx	       841	linker.c	FUNCTION_15
0x4001cee	        0x4883ec10	                           sub rsp, 0x10	       841	linker.c	FUNCTION_15
0x4001cf2	    0x64488b042528	                mov rax, qword fs:[0x28]	       841	linker.c	FUNCTION_15
0x4001cfb	      0x4889442408	                mov qword [rsp + 8], rax	       841	linker.c	FUNCTION_15
0x4001d00	            0x31c0	                            xor eax, eax	       841	linker.c	FUNCTION_15
0x4001d02	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4001d06	          0x83e007	                              and eax, 7	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4001d09	            0x3c01	                               cmp al, 1	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4001d0b	            0x7443	                            je 0x4001d50	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4001d0d	            0x3c02	                               cmp al, 2	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4001d0f	            0x742f	                            je 0x4001d40	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4001d11	      0xbf03000000	                              mov edi, 3	       854	linker.c	FUNCTION_15	SWITCH_1	CALL_4
0x4001d16	      0xe800000000	                          call 0x4001d1b	       854	linker.c	FUNCTION_15	SWITCH_1	CALL_4
0x4001d1b	            0x31c0	                            xor eax, eax	       855	linker.c	FUNCTION_15	SWITCH_1
0x4001d1d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       859	linker.c	FUNCTION_15
0x4001d22	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       859	linker.c	FUNCTION_15
0x4001d2b	     0xf85d2010000	                           jne 0x4001f03	       859	linker.c	FUNCTION_15
0x4001d31	        0x4883c410	                           add rsp, 0x10	       859	linker.c	FUNCTION_15
0x4001d35	              0x5b	                                 pop rbx	       859	linker.c	FUNCTION_15
0x4001d36	              0x5d	                                 pop rbp	       859	linker.c	FUNCTION_15
0x4001d37	            0x415c	                                 pop r12	       859	linker.c	FUNCTION_15
0x4001d39	            0x415d	                                 pop r13	       859	linker.c	FUNCTION_15
0x4001d3b	            0x415e	                                 pop r14	       859	linker.c	FUNCTION_15
0x4001d3d	              0xc3	                                     ret	       859	linker.c	FUNCTION_15
0x4001d3e	            0x6690	                                     nop	       859	linker.c	FUNCTION_15
0x4001d40	      0xba00000000	                              mov edx, 0	       850	linker.c	FUNCTION_15	SWITCH_1	CALL_3
0x4001d45	      0xe800000000	                          call 0x4001d4a	       850	linker.c	FUNCTION_15	SWITCH_1	CALL_3
0x4001d4a	            0xebd1	                           jmp 0x4001d1d	       852	linker.c	FUNCTION_15	SWITCH_1
0x4001d4c	         0xf1f4000	                         nop dword [rax]	       852	linker.c	FUNCTION_15	SWITCH_1
0x4001d50	    0x488bafb00000	            mov rbp, qword [rdi + 0xb0] 	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4001d57	          0x4885ed	                           test rbp, rbp	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4001d5a	     0xf8480010000	                            je 0x4001ee0	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4001d60	    0x418b8424b800	            mov eax, dword [r12 + 0xb8] 	      1142	linker.c	FUNCTION_19
0x4001d68	      0x4c8d6cc500	                  lea r13, [rbp + rax*8]	      1142	linker.c	FUNCTION_19
0x4001d6d	          0x4939ed	                            cmp r13, rbp	      1143	linker.c	FUNCTION_19	FOR_1
0x4001d70	            0x7734	                            ja 0x4001da6	      1143	linker.c	FUNCTION_19	FOR_1
0x4001d72	    0x660f1f440000	                    nop word [rax + rax]	      1143	linker.c	FUNCTION_19	FOR_1
0x4001d78	      0xb801000000	                              mov eax, 1	      1231	linker.c	FUNCTION_19
0x4001d7d	            0xeb9e	                           jmp 0x4001d1d	      1231	linker.c	FUNCTION_19
0x4001d7f	              0x90	                                     nop	      1231	linker.c	FUNCTION_19
0x4001d80	    0x4981f8000000	                               cmp r8, 0	      1154	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_2
0x4001d87	     0xf84d3000000	                            je 0x4001e60	      1154	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_2
0x4001d8d	      0x41f6402110	            test byte [r8 + 0x21], 0x10 	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x4001d92	            0x7525	                           jne 0x4001db9	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x4001d94	    0x4981f8000000	                               cmp r8, 0	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x4001d9b	            0x741c	                            je 0x4001db9	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x4001d9d	        0x4883c508	                              add rbp, 8	      1143	linker.c	FUNCTION_19	FOR_1
0x4001da1	          0x4939ed	                            cmp r13, rbp	      1143	linker.c	FUNCTION_19	FOR_1
0x4001da4	            0x76d2	                           jbe 0x4001d78	      1143	linker.c	FUNCTION_19	FOR_1
0x4001da6	        0x488b5d00	                    mov rbx, qword [rbp]	      1147	linker.c	FUNCTION_19	FOR_1
0x4001daa	          0x8b4b18	            mov ecx, dword [rbx + 0x18] 	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x4001dad	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x4001db1	    0xf7c182380000	                        test ecx, 0x3882	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x4001db7	            0x74c7	                            je 0x4001d80	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x4001db9	          0xf6c520	                           test ch, 0x20	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001dbc	        0x488b5308	                mov rdx, qword [rbx + 8]	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x4001dc0	     0xf85aa000000	                           jne 0x4001e70	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001dc6	    0x4981f8000000	                               cmp r8, 0	      1165	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_8
0x4001dcd	     0xf849d000000	                            je 0x4001e70	      1165	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_8
0x4001dd3	          0xf6c510	                           test ch, 0x10	      1171	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001dd6	          0x4889d0	                            mov rax, rdx	      1171	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001dd9	            0x741d	                            je 0x4001df8	      1171	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001ddb	        0x488d7508	                      lea rsi, [rbp + 8]	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001ddf	          0x4939f5	                            cmp r13, rsi	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001de2	     0xf86e8000000	                           jbe 0x4001ed0	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001de8	        0x488b7d08	                mov rdi, qword [rbp + 8]	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x4001dec	          0x4889f5	                            mov rbp, rsi	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x4001def	        0x488b5708	                mov rdx, qword [rdi + 8]	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x4001df3	       0xf1f440000	                   nop dword [rax + rax]	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x4001df8	        0x4c8b4b10	              mov r9, qword [rbx + 0x10]	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001dfc	    0x48c704240000	                      mov qword [rsp], 0	      1180	linker.c	FUNCTION_19	FOR_1	IF_1
0x4001e04	          0x4c89e6	                            mov rsi, r12	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001e07	              0x54	                                push rsp	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001e08	            0x6a00	                                  push 0	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001e0a	          0x4c89f7	                            mov rdi, r14	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001e0d	            0x6a00	                                  push 0	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001e0f	              0x50	                                push rax	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001e10	      0xe800000000	                          call 0x4001e15	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001e15	        0x4883c420	                           add rsp, 0x20	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001e19	            0x85c0	                           test eax, eax	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001e1b	     0xf84fcfeffff	                            je 0x4001d1d	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001e21	          0x8b5318	            mov edx, dword [rbx + 0x18] 	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001e24	        0x488b0424	                    mov rax, qword [rsp]	      1185	linker.c	FUNCTION_19	FOR_1	IF_1
0x4001e28	          0xf6c608	                              test dh, 8	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001e2b	            0x741b	                            je 0x4001e48	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001e2d	          0x4885c0	                           test rax, rax	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001e30	            0x7406	                            je 0x4001e38	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001e32	        0x80781800	                cmp byte [rax + 0x18], 0	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001e36	            0x7510	                           jne 0x4001e48	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001e38	    0x48c743280000	               mov qword [rbx + 0x28], 0	      1194	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001e40	      0xe958ffffff	                           jmp 0x4001d9d	      1194	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001e45	           0xf1f00	                         nop dword [rax]	      1194	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001e48	        0x498b4e50	            mov rcx, qword [r14 + 0x50] 	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x4001e4c	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x4001e51	        0x48397908	                cmp qword [rcx + 8], rdi	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x4001e55	            0x7439	                            je 0x4001e90	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x4001e57	        0x48894328	             mov qword [rbx + 0x28], rax	      1227	linker.c	FUNCTION_19	FOR_1	IF_1
0x4001e5b	      0xe93dffffff	                           jmp 0x4001d9d	      1227	linker.c	FUNCTION_19	FOR_1	IF_1
0x4001e60	          0xf6c520	                           test ch, 0x20	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001e63	        0x488b5308	                mov rdx, qword [rbx + 8]	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x4001e67	     0xf8466ffffff	                            je 0x4001dd3	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001e6d	           0xf1f00	                         nop dword [rax]	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001e70	        0x488d7508	                      lea rsi, [rbp + 8]	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001e74	          0x4889d0	                            mov rax, rdx	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001e77	          0x4939f5	                            cmp r13, rsi	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001e7a	     0xf8678ffffff	                           jbe 0x4001df8	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001e80	        0x488b4508	                mov rax, qword [rbp + 8]	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x4001e84	          0x4889f5	                            mov rbp, rsi	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x4001e87	        0x488b4008	                mov rax, qword [rax + 8]	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x4001e8b	      0xe968ffffff	                           jmp 0x4001df8	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x4001e90	        0x488b7040	            mov rsi, qword [rax + 0x40] 	      1208	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001e94	          0x4885f6	                           test rsi, rsi	      1208	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001e97	            0x7457	                            je 0x4001ef0	      1208	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001e99	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      1209	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_14
0x4001e9d	    0x4881f9000000	                              cmp rcx, 0	      1209	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_14
0x4001ea4	            0x74b1	                            je 0x4001e57	      1209	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_14
0x4001ea6	        0xf6412110	           test byte [rcx + 0x21], 0x10 	      1210	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_16
0x4001eaa	            0x741c	                            je 0x4001ec8	      1210	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_16
0x4001eac	    0x48817e200000	               cmp qword [rsi + 0x20], 0	      1211	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_18
0x4001eb4	            0x75a1	                           jne 0x4001e57	      1211	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_18
0x4001eb6	        0x48895840	             mov qword [rax + 0x40], rbx	      1213	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001eba	          0x80ce02	                                or dh, 2	      1218	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8
0x4001ebd	          0x895318	             mov dword [rbx + 0x18], edx	      1218	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8
0x4001ec0	            0xeb95	                           jmp 0x4001e57	      1218	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8
0x4001ec2	    0x660f1f440000	                    nop word [rax + rax]	      1218	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8
0x4001ec8	        0x48895840	             mov qword [rax + 0x40], rbx	      1213	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001ecc	            0xeb89	                           jmp 0x4001e57	      1213	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001ece	            0x6690	                                     nop	      1213	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001ed0	          0x4889d0	                            mov rax, rdx	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001ed3	      0xe920ffffff	                           jmp 0x4001df8	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001ed8	     0xf1f84000000	                   nop dword [rax + rax]	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001ee0	      0xe87be4ffff	call sym.bfd_generic_link_read_symbols.part.3	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001ee5	            0x85c0	                           test eax, eax	       870	linker.c	FUNCTION_16	IF_1	CALL_1
0x4001ee7	            0x751f	                           jne 0x4001f08	       870	linker.c	FUNCTION_16	IF_1	CALL_1
0x4001ee9	            0x31c0	                            xor eax, eax	       871	linker.c	FUNCTION_16	IF_1
0x4001eeb	      0xe92dfeffff	                           jmp 0x4001d1d	       871	linker.c	FUNCTION_16	IF_1
0x4001ef0	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001ef4	        0x48895840	             mov qword [rax + 0x40], rbx	      1213	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001ef8	        0xf6412110	           test byte [rcx + 0x21], 0x10 	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001efc	            0x75bc	                           jne 0x4001eba	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001efe	      0xe954ffffff	                           jmp 0x4001e57	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001f03	      0xe800000000	                          call 0x4001f08	       859	linker.c	FUNCTION_15
0x4001f08	    0x498bac24b000	            mov rbp, qword [r12 + 0xb0] 	       859	linker.c	FUNCTION_15
0x4001f10	      0xe94bfeffff	                           jmp 0x4001d60	       859	linker.c	FUNCTION_15
unwrap_hash_lookup	WHILE,0:CALL,4:DO,0:FOR,0:IF,5:ELSE,0:functions,0:SWITCH,0	73
0x4000d60	            0x4155	                                push r13	       606	linker.c	FUNCTION_5
0x4000d62	            0x4154	                                push r12	       606	linker.c	FUNCTION_5
0x4000d64	          0x4989fc	                            mov r12, rdi	       606	linker.c	FUNCTION_5
0x4000d67	              0x55	                                push rbp	       606	linker.c	FUNCTION_5
0x4000d68	              0x53	                                push rbx	       606	linker.c	FUNCTION_5
0x4000d69	          0x4889d5	                            mov rbp, rdx	       606	linker.c	FUNCTION_5
0x4000d6c	        0x4883ec08	                              sub rsp, 8	       606	linker.c	FUNCTION_5
0x4000d70	        0x488b5a08	                mov rbx, qword [rdx + 8]	       607	linker.c	FUNCTION_5
0x4000d74	        0x488b5608	                mov rdx, qword [rsi + 8]	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x4000d78	           0xfb603	                   movzx eax, byte [rbx]	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x4000d7b	          0x3a421c	               cmp al, byte [rdx + 0x1c]	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x4000d7e	            0x7428	                            je 0x4000da8	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x4000d80	          0x3a4709	                  cmp al, byte [rdi + 9]	       610	linker.c	FUNCTION_5	IF_1
0x4000d83	            0x7423	                            je 0x4000da8	       610	linker.c	FUNCTION_5	IF_1
0x4000d85	      0xbf00000000	                              mov edi, 0	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x4000d8a	      0xb907000000	                              mov ecx, 7	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x4000d8f	          0x4889de	                            mov rsi, rbx	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x4000d92	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x4000d94	            0x741a	                            je 0x4000db0	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x4000d96	        0x4883c408	                              add rsp, 8	       632	linker.c	FUNCTION_5
0x4000d9a	          0x4889e8	                            mov rax, rbp	       632	linker.c	FUNCTION_5
0x4000d9d	              0x5b	                                 pop rbx	       632	linker.c	FUNCTION_5
0x4000d9e	              0x5d	                                 pop rbp	       632	linker.c	FUNCTION_5
0x4000d9f	            0x415c	                                 pop r12	       632	linker.c	FUNCTION_5
0x4000da1	            0x415d	                                 pop r13	       632	linker.c	FUNCTION_5
0x4000da3	              0xc3	                                     ret	       632	linker.c	FUNCTION_5
0x4000da4	         0xf1f4000	                         nop dword [rax]	       632	linker.c	FUNCTION_5
0x4000da8	        0x4883c301	                              add rbx, 1	       611	linker.c	FUNCTION_5	IF_1
0x4000dac	            0xebd7	                           jmp 0x4000d85	       611	linker.c	FUNCTION_5	IF_1
0x4000dae	            0x6690	                                     nop	       611	linker.c	FUNCTION_5	IF_1
0x4000db0	        0x4c8d6b07	                      lea r13, [rbx + 7]	       615	linker.c	FUNCTION_5	IF_2
0x4000db4	      0x498b7c2440	            mov rdi, qword [r12 + 0x40] 	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000db9	            0x31c9	                            xor ecx, ecx	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000dbb	            0x31d2	                            xor edx, edx	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000dbd	          0x4c89ee	                            mov rsi, r13	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000dc0	      0xe800000000	                          call 0x4000dc5	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000dc5	          0x4885c0	                           test rax, rax	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000dc8	            0x74cc	                            je 0x4000d96	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000dca	        0x488b4508	                mov rax, qword [rbp + 8]	       620	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000dce	          0x4839c3	                            cmp rbx, rax	       620	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000dd1	            0x743d	                            je 0x4000e10	       620	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000dd3	           0xfb600	                   movzx eax, byte [rax]	       624	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000dd6	      0x440fb66b06	              movzx r13d, byte [rbx + 6]	       623	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000ddb	        0x488d7306	                      lea rsi, [rbx + 6]	       622	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000ddf	          0x4531c0	                            xor r8d, r8d	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000de2	            0x31c9	                            xor ecx, ecx	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000de4	            0x31d2	                            xor edx, edx	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000de6	          0x884306	                  mov byte [rbx + 6], al	       624	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000de9	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000dee	      0xe800000000	                          call 0x4000df3	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000df3	          0x4584ed	                         test r13b, r13b	       627	linker.c	FUNCTION_5	IF_2	IF_3	IF_5
0x4000df6	          0x4889c5	                            mov rbp, rax	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000df9	            0x749b	                            je 0x4000d96	       627	linker.c	FUNCTION_5	IF_2	IF_3	IF_5
0x4000dfb	        0x44886b06	                mov byte [rbx + 6], r13b	       628	linker.c	FUNCTION_5	IF_2	IF_3	IF_5
0x4000dff	        0x4883c408	                              add rsp, 8	       632	linker.c	FUNCTION_5
0x4000e03	          0x4889e8	                            mov rax, rbp	       632	linker.c	FUNCTION_5
0x4000e06	              0x5b	                                 pop rbx	       632	linker.c	FUNCTION_5
0x4000e07	              0x5d	                                 pop rbp	       632	linker.c	FUNCTION_5
0x4000e08	            0x415c	                                 pop r12	       632	linker.c	FUNCTION_5
0x4000e0a	            0x415d	                                 pop r13	       632	linker.c	FUNCTION_5
0x4000e0c	              0xc3	                                     ret	       632	linker.c	FUNCTION_5
0x4000e0d	           0xf1f00	                         nop dword [rax]	       632	linker.c	FUNCTION_5
0x4000e10	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000e15	        0x4883c408	                              add rsp, 8	       632	linker.c	FUNCTION_5
0x4000e19	          0x4c89ee	                            mov rsi, r13	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000e1c	              0x5b	                                 pop rbx	       632	linker.c	FUNCTION_5
0x4000e1d	              0x5d	                                 pop rbp	       632	linker.c	FUNCTION_5
0x4000e1e	            0x415c	                                 pop r12	       632	linker.c	FUNCTION_5
0x4000e20	            0x415d	                                 pop r13	       632	linker.c	FUNCTION_5
0x4000e22	          0x4531c0	                            xor r8d, r8d	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000e25	            0x31c9	                            xor ecx, ecx	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000e27	            0x31d2	                            xor edx, edx	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000e29	      0xe902f7ffff	            jmp sym.bfd_link_hash_lookup	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
_bfd_nolink_bfd_link_hash_table_create	WHILE,0:CALL,1:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	1
0x4003650	      0xe900000000	                           jmp 0x4003655	      3459	linker.c	FUNCTION_59	CALL_1
_bfd_generic_section_already_linked	WHILE,0:CALL,6:DO,0:FOR,0:IF,4:ELSE,0:functions,0:SWITCH,0	53
0x4002f70	          0x8b4620	            mov eax, dword [rsi + 0x20] 	      2912	linker.c	FUNCTION_41	IF_1
0x4002f73	      0xa900000200	                       test eax, 0x20000	      2912	linker.c	FUNCTION_41	IF_1
0x4002f78	            0x7407	                            je 0x4002f81	      2912	linker.c	FUNCTION_41	IF_1
0x4002f7a	      0xa900000002	                     test eax, 0x2000000	      2916	linker.c	FUNCTION_41	IF_2
0x4002f7f	            0x7407	                            je 0x4002f88	      2916	linker.c	FUNCTION_41	IF_2
0x4002f81	            0x31c0	                            xor eax, eax	      2948	linker.c	FUNCTION_41
0x4002f83	              0xc3	                                     ret	      2948	linker.c	FUNCTION_41
0x4002f84	         0xf1f4000	                         nop dword [rax]	      2948	linker.c	FUNCTION_41
0x4002f88	            0x4154	                                push r12	      2907	linker.c	FUNCTION_41
0x4002f8a	              0x55	                                push rbp	      2907	linker.c	FUNCTION_41
0x4002f8b	            0x31c9	                            xor ecx, ecx	      2753	linker.c	FUNCTION_35
0x4002f8d	              0x53	                                push rbx	      2907	linker.c	FUNCTION_41
0x4002f8e	          0x4889f3	                            mov rbx, rsi	      2907	linker.c	FUNCTION_41
0x4002f91	          0x488b36	                    mov rsi, qword [rsi]	      2753	linker.c	FUNCTION_35
0x4002f94	          0x4889d5	                            mov rbp, rdx	      2753	linker.c	FUNCTION_35
0x4002f97	      0xbf00000000	                              mov edi, 0	      2753	linker.c	FUNCTION_35
0x4002f9c	      0xba01000000	                              mov edx, 1	      2753	linker.c	FUNCTION_35
0x4002fa1	      0xe800000000	                          call 0x4002fa6	      2753	linker.c	FUNCTION_35
0x4002fa6	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      2936	linker.c	FUNCTION_41
0x4002faa	          0x4989c4	                            mov r12, rax	      2753	linker.c	FUNCTION_35
0x4002fad	          0x4885f6	                           test rsi, rsi	      2937	linker.c	FUNCTION_41	IF_3
0x4002fb0	            0x7416	                            je 0x4002fc8	      2937	linker.c	FUNCTION_41	IF_3
0x4002fb2	          0x4889ea	                            mov rdx, rbp	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x4002fb5	          0x4889df	                            mov rdi, rbx	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x4002fb8	              0x5b	                                 pop rbx	      2948	linker.c	FUNCTION_41
0x4002fb9	              0x5d	                                 pop rbp	      2948	linker.c	FUNCTION_41
0x4002fba	            0x415c	                                 pop r12	      2948	linker.c	FUNCTION_41
0x4002fbc	      0xe90ffdffff	      jmp sym._bfd_handle_already_linked	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x4002fc1	     0xf1f80000000	                         nop dword [rax]	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x4002fc8	      0xbe10000000	                           mov esi, 0x10	      2767	linker.c	FUNCTION_36
0x4002fcd	      0xbf00000000	                              mov edi, 0	      2767	linker.c	FUNCTION_36
0x4002fd2	      0xe800000000	                          call 0x4002fd7	      2767	linker.c	FUNCTION_36
0x4002fd7	          0x4885c0	                           test rax, rax	      2769	linker.c	FUNCTION_36	IF_1
0x4002fda	            0x7418	                            je 0x4002ff4	      2769	linker.c	FUNCTION_36	IF_1
0x4002fdc	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2772	linker.c	FUNCTION_36
0x4002fe1	        0x48895808	                mov qword [rax + 8], rbx	      2771	linker.c	FUNCTION_36
0x4002fe5	          0x488910	                    mov qword [rax], rdx	      2772	linker.c	FUNCTION_36
0x4002fe8	      0x4989442418	             mov qword [r12 + 0x18], rax	      2773	linker.c	FUNCTION_36
0x4002fed	              0x5b	                                 pop rbx	      2948	linker.c	FUNCTION_41
0x4002fee	            0x31c0	                            xor eax, eax	      2948	linker.c	FUNCTION_41
0x4002ff0	              0x5d	                                 pop rbp	      2948	linker.c	FUNCTION_41
0x4002ff1	            0x415c	                                 pop r12	      2948	linker.c	FUNCTION_41
0x4002ff3	              0xc3	                                     ret	      2948	linker.c	FUNCTION_41
0x4002ff4	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2946	linker.c	FUNCTION_41	CALL_6
0x4002ff8	      0xba05000000	                              mov edx, 5	      2946	linker.c	FUNCTION_41	CALL_6
0x4002ffd	      0xbe00000000	                              mov esi, 0	      2946	linker.c	FUNCTION_41	CALL_6
0x4003002	      0xbf00000000	                              mov edi, 0	      2946	linker.c	FUNCTION_41	CALL_6
0x4003007	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      2946	linker.c	FUNCTION_41	CALL_6
0x400300b	      0xe800000000	                          call 0x4003010	      2946	linker.c	FUNCTION_41	CALL_6
0x4003010	          0x4889c7	                            mov rdi, rax	      2946	linker.c	FUNCTION_41	CALL_6
0x4003013	            0x31c0	                            xor eax, eax	      2946	linker.c	FUNCTION_41	CALL_6
0x4003015	            0xffd3	                                call rbx	      2946	linker.c	FUNCTION_41	CALL_6
0x4003017	            0xebd4	                           jmp 0x4002fed	      2946	linker.c	FUNCTION_41	CALL_6
_bfd_generic_link_add_one_symbol	WHILE,1:CALL,37:DO,1:FOR,0:IF,43:ELSE,15:functions,0:SWITCH,1	594
0x4001320	            0x4157	                                push r15	      1375	linker.c	FUNCTION_21
0x4001322	            0x4156	                                push r14	      1375	linker.c	FUNCTION_21
0x4001324	          0x4189ca	                           mov r10d, ecx	      1375	linker.c	FUNCTION_21
0x4001327	            0x4155	                                push r13	      1375	linker.c	FUNCTION_21
0x4001329	            0x4154	                                push r12	      1375	linker.c	FUNCTION_21
0x400132b	          0x4989f5	                            mov r13, rsi	      1375	linker.c	FUNCTION_21
0x400132e	              0x55	                                push rbp	      1375	linker.c	FUNCTION_21
0x400132f	              0x53	                                push rbx	      1375	linker.c	FUNCTION_21
0x4001330	          0x4889fd	                            mov rbp, rdi	      1375	linker.c	FUNCTION_21
0x4001333	          0x4d89c4	                             mov r12, r8	      1375	linker.c	FUNCTION_21
0x4001336	          0x4d89ce	                             mov r14, r9	      1375	linker.c	FUNCTION_21
0x4001339	        0x4883ec28	                           sub rsp, 0x28	      1375	linker.c	FUNCTION_21
0x400133d	          0x4d85c0	                             test r8, r8	      1381	linker.c	FUNCTION_21	CALL_1
0x4001340	      0x4889542408	                mov qword [rsp + 8], rdx	      1375	linker.c	FUNCTION_21
0x4001345	     0xf84d5080000	                            je 0x4001c20	      1381	linker.c	FUNCTION_21	CALL_1
0x400134b	    0x4981f8000000	                               cmp r8, 0	      1383	linker.c	FUNCTION_21	IF_1	CALL_2
0x4001352	     0xf84d0000000	                            je 0x4001428	      1383	linker.c	FUNCTION_21	IF_1	CALL_2
0x4001358	    0x41f7c2002000	                       test r10d, 0x2000	      1384	linker.c	FUNCTION_21	IF_1
0x400135f	     0xf85c3000000	                           jne 0x4001428	      1384	linker.c	FUNCTION_21	IF_1
0x4001365	    0x41f7c2001000	                       test r10d, 0x1000	      1395	linker.c	FUNCTION_21	ELSE_1	IF_3
0x400136c	     0xf856e070000	                           jne 0x4001ae0	      1395	linker.c	FUNCTION_21	ELSE_1	IF_3
0x4001372	    0x41f7c2000800	                        test r10d, 0x800	      1397	linker.c	FUNCTION_21	ELSE_2	IF_4
0x4001379	     0xf85d1070000	                           jne 0x4001b50	      1397	linker.c	FUNCTION_21	ELSE_2	IF_4
0x400137f	    0x4981fc000000	                              cmp r12, 0	      1399	linker.c	FUNCTION_21	ELSE_3	IF_5	CALL_4
0x4001386	     0xf8411090000	                            je 0x4001c9d	      1399	linker.c	FUNCTION_21	ELSE_3	IF_5	CALL_4
0x400138c	        0x41f6c280	                         test r10b, 0x80	      1406	linker.c	FUNCTION_21	ELSE_5	IF_7
0x4001390	     0xf85a7080000	                           jne 0x4001c3d	      1406	linker.c	FUNCTION_21	ELSE_5	IF_7
0x4001396	    0x41f644242110	           test byte [r12 + 0x21], 0x10 	      1408	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_5
0x400139c	     0xf84ab080000	                            je 0x4001c4d	      1408	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_5
0x40013a2	         0xfb64500	                   movzx eax, byte [rbp]	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x40013a6	          0x4531ff	                          xor r15d, r15d	      1378	linker.c	FUNCTION_21
0x40013a9	    0xc74424140400	               mov dword [rsp + 0x14], 4	      1410	linker.c	FUNCTION_21	ELSE_6	IF_8
0x40013b1	          0x83e003	                              and eax, 3	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x40013b4	            0x3c02	                               cmp al, 2	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x40013b6	     0xf84a7000000	                            je 0x4001463	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x40013bc	      0x488b442408	                mov rax, qword [rsp + 8]	      1412	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x40013c1	          0x80385f	                    cmp byte [rax], 0x5f	      1412	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x40013c4	     0xf8599000000	                           jne 0x4001463	      1412	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x40013ca	        0x8078015f	                cmp byte [rax + 1], 0x5f	      1413	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x40013ce	     0xf858f000000	                           jne 0x4001463	      1413	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x40013d4	            0x31f6	                            xor esi, esi	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40013d6	        0x8078025f	                cmp byte [rax + 2], 0x5f	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40013da	      0xbf00000000	                              mov edi, 0	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40013df	      0xb90f000000	                            mov ecx, 0xf	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40013e4	        0x400f94c6	                                sete sil	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40013e8	          0x4801c6	                            add rsi, rax	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40013eb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40013ed	            0x7574	                           jne 0x4001463	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40013ef	      0xba05000000	                              mov edx, 5	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40013f4	      0xbe00000000	                              mov esi, 0	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40013f9	      0xbf00000000	                              mov edi, 0	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40013fe	      0x4489542418	            mov dword [rsp + 0x18], r10d	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x4001403	      0xe800000000	                          call 0x4001408	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x4001408	          0x4c89ee	                            mov rsi, r13	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x400140b	          0x4889c7	                            mov rdi, rax	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x400140e	            0x31c0	                            xor eax, eax	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x4001410	      0xe800000000	                          call 0x4001415	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x4001415	    0xc74424140400	               mov dword [rsp + 0x14], 4	      1410	linker.c	FUNCTION_21	ELSE_6	IF_8
0x400141d	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      1410	linker.c	FUNCTION_21	ELSE_6	IF_8
0x4001422	            0xeb3f	                           jmp 0x4001463	      1410	linker.c	FUNCTION_21	ELSE_6	IF_8
0x4001424	         0xf1f4000	                         nop dword [rax]	      1410	linker.c	FUNCTION_21	ELSE_6	IF_8
0x4001428	      0x448b442468	            mov r8d, dword [rsp + 0x68] 	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x400142d	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x4001432	          0x4531c9	                            xor r9d, r9d	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x4001435	      0xb901000000	                              mov ecx, 1	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x400143a	          0x4889ee	                            mov rsi, rbp	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x400143d	          0x4c89ef	                            mov rdi, r13	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x4001440	      0x4489542418	            mov dword [rsp + 0x18], r10d	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x4001445	      0xe800000000	                          call 0x400144a	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x400144a	          0x4885c0	                           test rax, rax	      1392	linker.c	FUNCTION_21	IF_1	IF_2
0x400144d	          0x4989c7	                            mov r15, rax	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x4001450	     0xf8412060000	                            je 0x4001a68	      1392	linker.c	FUNCTION_21	IF_1	IF_2
0x4001456	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      1392	linker.c	FUNCTION_21	IF_1	IF_2
0x400145b	    0xc74424140500	               mov dword [rsp + 0x14], 5	      1386	linker.c	FUNCTION_21	IF_1
0x4001463	    0x48837c247800	               cmp qword [rsp + 0x78], 0	      1421	linker.c	FUNCTION_21	IF_10
0x4001469	     0xf8491060000	                            je 0x4001b00	      1421	linker.c	FUNCTION_21	IF_10
0x400146f	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      1421	linker.c	FUNCTION_21	IF_10
0x4001474	          0x488b18	                    mov rbx, qword [rax]	      1421	linker.c	FUNCTION_21	IF_10
0x4001477	          0x4885db	                           test rbx, rbx	      1421	linker.c	FUNCTION_21	IF_10
0x400147a	     0xf8438070000	                            je 0x4001bb8	      1421	linker.c	FUNCTION_21	IF_10
0x4001480	        0xf6450101	                  test byte [rbp + 1], 1	      1437	linker.c	FUNCTION_21	IF_14
0x4001484	            0x7526	                           jne 0x40014ac	      1437	linker.c	FUNCTION_21	IF_14
0x4001486	        0x488b7d38	            mov rdi, qword [rbp + 0x38] 	      1438	linker.c	FUNCTION_21	IF_14
0x400148a	          0x4885ff	                           test rdi, rdi	      1438	linker.c	FUNCTION_21	IF_14
0x400148d	            0x7446	                            je 0x40014d5	      1438	linker.c	FUNCTION_21	IF_14
0x400148f	      0x488b742408	                mov rsi, qword [rsp + 8]	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x4001494	            0x31c9	                            xor ecx, ecx	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x4001496	            0x31d2	                            xor edx, edx	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x4001498	      0x4489542418	            mov dword [rsp + 0x18], r10d	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x400149d	      0xe800000000	                          call 0x40014a2	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x40014a2	          0x4885c0	                           test rax, rax	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x40014a5	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x40014aa	            0x7429	                            je 0x40014d5	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x40014ac	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40014b0	        0x4883ec08	                              sub rsp, 8	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40014b4	          0x4c89e9	                            mov rcx, r13	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40014b7	            0x4152	                                push r10	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40014b9	          0x4889de	                            mov rsi, rbx	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40014bc	          0x4d89f1	                             mov r9, r14	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40014bf	          0x4d89e0	                             mov r8, r12	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40014c2	          0x4c89fa	                            mov rdx, r15	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40014c5	          0x4889ef	                            mov rdi, rbp	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40014c8	          0xff5050	                 call qword [rax + 0x50]	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40014cb	            0x85c0	                           test eax, eax	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40014cd	              0x59	                                 pop rcx	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40014ce	              0x5e	                                 pop rsi	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40014cf	     0xf8493050000	                            je 0x4001a68	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40014d5	    0x48837c247800	               cmp qword [rsp + 0x78], 0	      1446	linker.c	FUNCTION_21	IF_16
0x40014db	            0x7408	                            je 0x40014e5	      1446	linker.c	FUNCTION_21	IF_16
0x40014dd	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      1447	linker.c	FUNCTION_21	IF_16
0x40014e2	          0x488918	                    mov qword [rax], rbx	      1447	linker.c	FUNCTION_21	IF_16
0x40014e5	      0x4863442414	         movsxd rax, dword [rsp + 0x14] 	      1447	linker.c	FUNCTION_21	IF_16
0x40014ea	      0x440fb64318	           movzx r8d, byte [rbx + 0x18] 	      1447	linker.c	FUNCTION_21	IF_16
0x40014ef	    0x41ba01000000	                             mov r10d, 1	      1454	linker.c	FUNCTION_21	DO_1
0x40014f5	          0x4989c3	                            mov r11, rax	      1454	linker.c	FUNCTION_21	DO_1
0x40014f8	         0xfb64b19	           movzx ecx, byte [rbx + 0x19] 	      1456	linker.c	FUNCTION_21	DO_1	IF_17
0x40014fc	        0x410fb6d0	                          movzx edx, r8b	      1454	linker.c	FUNCTION_21	DO_1
0x4001500	          0xf6c108	                              test cl, 8	      1454	linker.c	FUNCTION_21	DO_1
0x4001503	        0x490f45d2	                         cmovne rdx, r10	      1454	linker.c	FUNCTION_21	DO_1
0x4001507	        0x4a8d04da	                  lea rax, [rdx + r11*8]	      1459	linker.c	FUNCTION_21	DO_1
0x400150b	    0x8b1485000000	                  mov edx, dword [rax*4]	      1459	linker.c	FUNCTION_21	DO_1
0x4001512	          0x83fa14	                           cmp edx, 0x14	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001515	     0xf87fd000000	                            ja 0x4001618	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400151b	            0x89d0	                            mov eax, edx	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400151d	    0xff24c5000000	                       jmp qword [rax*8]	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001524	         0xf1f4000	                         nop dword [rax]	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001528	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x400152d	            0x7511	                           jne 0x4001540	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x400152f	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001533	        0x483b5830	            cmp rbx, qword [rax + 0x30] 	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001537	            0x7407	                            je 0x4001540	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001539	        0x48895b20	             mov qword [rbx + 0x20], rbx	      1743	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x400153d	           0xf1f00	                         nop dword [rax]	      1743	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001540	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	      1744	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001544	      0x440fb64318	           movzx r8d, byte [rbx + 0x18] 	      1744	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001549	            0xebad	                           jmp 0x40014f8	      1744	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400154b	       0xf1f440000	                   nop dword [rax + rax]	      1744	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001550	        0x4180f805	                              cmp r8b, 5	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001554	            0x7419	                            je 0x400156f	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001556	      0xbe8a060000	                          mov esi, 0x68a	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x400155b	      0xbf00000000	                              mov edi, 0	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001560	      0x4489542414	            mov dword [rsp + 0x14], r10d	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001565	      0xe800000000	                          call 0x400156a	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x400156a	      0x448b542414	           mov r10d, dword [rsp + 0x14] 	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x400156f	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001573	      0x4489542414	            mov dword [rsp + 0x14], r10d	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001578	          0x4531c0	                            xor r8d, r8d	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400157b	      0xb906000000	                              mov ecx, 6	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001580	          0x4c89ea	                            mov rdx, r13	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001583	          0x4889de	                            mov rsi, rbx	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001586	          0x4889ef	                            mov rdi, rbp	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001589	          0xff5010	                 call qword [rax + 0x10]	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400158c	      0x4c63542414	         movsxd r10, dword [rsp + 0x14] 	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001591	      0x410fb64718	           movzx eax, byte [r15 + 0x18] 	      1679	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001596	            0x3c06	                               cmp al, 6	      1679	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001598	     0xf84f2040000	                            je 0x4001a90	      1679	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x400159e	            0x84c0	                             test al, al	      1689	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x40015a0	            0x751f	                           jne 0x40015c1	      1689	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x40015a2	        0x4d896f28	             mov qword [r15 + 0x28], r13	      1692	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x40015a6	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      1693	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35	CALL_32
0x40015aa	          0x4c89fe	                            mov rsi, r15	      1693	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35	CALL_32
0x40015ad	      0x41c6471801	                mov byte [r15 + 0x18], 1	      1691	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x40015b2	      0x4489542414	            mov dword [rsp + 0x14], r10d	      1691	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x40015b7	      0xe800000000	                          call 0x40015bc	      1693	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35	CALL_32
0x40015bc	      0x4c63542414	         movsxd r10, dword [rsp + 0x14] 	      1693	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35	CALL_32
0x40015c1	        0x807b1800	                cmp byte [rbx + 0x18], 0	      1698	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x40015c5	     0xf84b5040000	                            je 0x4001a80	      1698	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x40015cb	        0xc6431806	                mov byte [rbx + 0x18], 6	      1706	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40015cf	        0x4c897b28	             mov qword [rbx + 0x28], r15	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40015d3	    0x41b806000000	                              mov r8d, 6	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40015d9	          0x4531db	                          xor r11d, r11d	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40015dc	      0xe917ffffff	                           jmp 0x40014f8	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40015e1	     0xf1f80000000	                         nop dword [rax]	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40015e8	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x40015ec	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x40015f1	        0x488b7808	                mov rdi, qword [rax + 8]	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x40015f5	      0xe800000000	                          call 0x40015fa	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x40015fa	            0x85c0	                           test eax, eax	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x40015fc	            0x741a	                            je 0x4001618	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x40015fe	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001602	          0x4d89f0	                             mov r8, r14	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001605	          0x4c89e1	                            mov rcx, r12	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001608	          0x4c89ea	                            mov rdx, r13	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400160b	          0x4889de	                            mov rsi, rbx	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400160e	          0x4889ef	                            mov rdi, rbp	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001611	          0xff5008	                    call qword [rax + 8]	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001614	         0xf1f4000	                         nop dword [rax]	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001618	      0xb801000000	                              mov eax, 1	      1800	linker.c	FUNCTION_21
0x400161d	        0x4883c428	                           add rsp, 0x28	      1801	linker.c	FUNCTION_21
0x4001621	              0x5b	                                 pop rbx	      1801	linker.c	FUNCTION_21
0x4001622	              0x5d	                                 pop rbp	      1801	linker.c	FUNCTION_21
0x4001623	            0x415c	                                 pop r12	      1801	linker.c	FUNCTION_21
0x4001625	            0x415d	                                 pop r13	      1801	linker.c	FUNCTION_21
0x4001627	            0x415e	                                 pop r14	      1801	linker.c	FUNCTION_21
0x4001629	            0x415f	                                 pop r15	      1801	linker.c	FUNCTION_21
0x400162b	              0xc3	                                     ret	      1801	linker.c	FUNCTION_21
0x400162c	         0xf1f4000	                         nop dword [rax]	      1801	linker.c	FUNCTION_21
0x4001630	        0xf6450102	                  test byte [rbp + 1], 2	      1751	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001634	            0x7519	                           jne 0x400164f	      1751	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001636	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x400163b	     0xf851f050000	                           jne 0x4001b60	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001641	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001645	        0x483b5830	            cmp rbx, qword [rax + 0x30] 	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001649	     0xf8411050000	                            je 0x4001b60	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x400164f	          0x83e103	                              and ecx, 3	      1754	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001652	     0xf8508050000	                           jne 0x4001b60	      1754	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001658	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1768	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400165c	            0x31ff	                            xor edi, edi	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400165e	        0x488b5308	                mov rdx, qword [rbx + 8]	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001662	          0x4889c6	                            mov rsi, rax	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001665	          0xff5008	                    call qword [rax + 8]	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001668	          0x4885c0	                           test rax, rax	      1770	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_40
0x400166b	          0x4989c4	                            mov r12, rax	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400166e	     0xf84f4030000	                            je 0x4001a68	      1770	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_40
0x4001674	          0x488b03	                    mov rax, qword [rbx]	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001677	        0x49890424	                    mov qword [r12], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400167b	        0x488b4308	                mov rax, qword [rbx + 8]	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400167f	      0x4989442408	                mov qword [r12 + 8], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001684	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001688	      0x4989442410	             mov qword [r12 + 0x10], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400168d	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001691	      0x4989442418	             mov qword [r12 + 0x18], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001696	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400169a	      0x4989442420	             mov qword [r12 + 0x20], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400169f	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40016a3	      0x4989442428	             mov qword [r12 + 0x28], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40016a8	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40016ac	    0x41c644241807	                mov byte [r12 + 0x18], 7	      1773	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40016b2	      0x49895c2428	             mov qword [r12 + 0x28], rbx	      1774	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40016b7	      0x4989442430	             mov qword [r12 + 0x30], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40016bc	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      1775	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x40016c0	            0x85c0	                           test eax, eax	      1775	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x40016c2	     0xf8449050000	                            je 0x4001c11	      1775	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x40016c8	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      1780	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_34
0x40016cd	      0xe800000000	                          call 0x40016d2	      1780	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_34
0x40016d2	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      1782	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_35
0x40016d6	        0x4c8d6801	                      lea r13, [rax + 1]	      1780	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_34
0x40016da	          0x4489ee	                           mov esi, r13d	      1782	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_35
0x40016dd	      0xe800000000	                          call 0x40016e2	      1782	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_35
0x40016e2	          0x4885c0	                           test rax, rax	      1783	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	IF_42
0x40016e5	     0xf847d030000	                            je 0x4001a68	      1783	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	IF_42
0x40016eb	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	        53	string3.h	FUNCTION_66	CALL_3
0x40016f0	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_66	CALL_3
0x40016f3	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_66	CALL_3
0x40016f6	      0xe800000000	                          call 0x40016fb	        53	string3.h	FUNCTION_66	CALL_3
0x40016fb	      0x4989442430	             mov qword [r12 + 0x30], rax	      1786	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15
0x4001700	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x4001704	          0x4c89e2	                            mov rdx, r12	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x4001707	          0x4889de	                            mov rsi, rbx	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x400170a	      0xe800000000	                          call 0x400170f	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x400170f	    0x48837c247800	               cmp qword [rsp + 0x78], 0	      1792	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x4001715	     0xf84fdfeffff	                            je 0x4001618	      1792	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x400171b	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      1793	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x4001720	          0x4c8920	                    mov qword [rax], r12	      1793	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x4001723	      0xe9f0feffff	                           jmp 0x4001618	      1793	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x4001728	     0xf1f84000000	                   nop dword [rax + rax]	      1793	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x4001730	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001734	          0x4d89f0	                             mov r8, r14	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001737	      0xb905000000	                              mov ecx, 5	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400173c	          0x4c89ea	                            mov rdx, r13	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400173f	          0x4889de	                            mov rsi, rbx	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001742	          0x4889ef	                            mov rdi, rbp	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001745	          0xff5010	                 call qword [rax + 0x10]	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001748	      0xe9cbfeffff	                           jmp 0x4001618	      1658	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400174d	           0xf1f00	                         nop dword [rax]	      1658	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001750	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001755	     0xf85bdfeffff	                           jne 0x4001618	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x400175b	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x400175f	        0x483b5830	            cmp rbx, qword [rax + 0x30] 	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001763	     0xf84affeffff	                            je 0x4001618	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001769	        0x48895b20	             mov qword [rbx + 0x20], rbx	      1609	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x400176d	      0xe9a6feffff	                           jmp 0x4001618	      1609	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001772	    0x660f1f440000	                    nop word [rax + rax]	      1609	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001778	          0x4584c0	                           test r8b, r8b	      1557	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_23
0x400177b	     0xf841f040000	                            je 0x4001ba0	      1557	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_23
0x4001781	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      1561	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_19
0x4001785	        0xc6431805	                mov byte [rbx + 0x18], 5	      1559	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001789	      0xbe10000000	                           mov esi, 0x10	      1561	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_19
0x400178e	      0xe800000000	                          call 0x4001793	      1561	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_19
0x4001793	          0x4885c0	                           test rax, rax	      1563	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_24
0x4001796	        0x48894328	             mov qword [rbx + 0x28], rax	      1560	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400179a	     0xf84c8020000	                            je 0x4001a68	      1563	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_24
0x40017a0	        0x4c897330	             mov qword [rbx + 0x30], r14	      1566	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017a4	          0x4c89f7	                            mov rdi, r14	      1573	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_20
0x40017a7	      0xe800000000	                          call 0x40017ac	      1573	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_20
0x40017ac	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017b0	          0x83f804	                              cmp eax, 4	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017b3	      0xba04000000	                              mov edx, 4	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017b8	           0xf47c2	                          cmova eax, edx	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017bb	    0x4981fc000000	                              cmp r12, 0	      1589	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x40017c2	      0xbe00000000	                              mov esi, 0	      1591	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26	CALL_21
0x40017c7	          0x894500	                    mov dword [rbp], eax	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017ca	            0x7412	                            je 0x40017de	      1589	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x40017cc	    0x4d3bac24f000	            cmp r13, qword [r12 + 0xf0] 	      1594	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x40017d4	     0xf841e040000	                            je 0x4001bf8	      1594	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x40017da	        0x498b3424	                    mov rsi, qword [r12]	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x40017de	          0x4c89ef	                            mov rdi, r13	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x40017e1	      0xe800000000	                          call 0x40017e6	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x40017e6	        0x48894508	                mov qword [rbp + 8], rax	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x40017ea	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x40017ee	        0x488b4008	                mov rax, qword [rax + 8]	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x40017f2	        0x83482001	                or dword [rax + 0x20], 1	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x40017f6	        0x806319f3	             and byte [rbx + 0x19], 0xf3	      1603	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017fa	      0xe919feffff	                           jmp 0x4001618	      1604	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017ff	              0x90	                                     nop	      1604	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001800	          0x83fa04	                              cmp edx, 4	      1496	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x4001803	     0xf85b9010000	                           jne 0x40019c2	      1496	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x4001809	        0xc6431804	                mov byte [rbx + 0x18], 4	      1497	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x400180d	        0x806319f3	             and byte [rbx + 0x19], 0xf3	      1503	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001811	        0x4c896328	             mov qword [rbx + 0x28], r12	      1500	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001815	        0x8b542470	            mov edx, dword [rsp + 0x70] 	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x4001819	        0x4c897330	             mov qword [rbx + 0x30], r14	      1501	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x400181d	            0x85d2	                           test edx, edx	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x400181f	     0xf84f3fdffff	                            je 0x4001618	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x4001825	      0x488b742408	                mov rsi, qword [rsp + 8]	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x400182a	          0x803e5f	                    cmp byte [rsi], 0x5f	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x400182d	          0x4889f0	                            mov rax, rsi	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x4001830	     0xf85e2fdffff	                           jne 0x4001618	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x4001836	         0xfb65601	               movzx edx, byte [rsi + 1]	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x400183a	        0x4883c001	                              add rax, 1	      1524	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x400183e	          0x80fa5f	                            cmp dl, 0x5f	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x4001841	            0x7511	                           jne 0x4001854	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x4001843	       0xf1f440000	                   nop dword [rax + rax]	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x4001848	        0x4883c001	                              add rax, 1	      1526	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x400184c	           0xfb610	                   movzx edx, byte [rax]	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x400184f	          0x80fa5f	                            cmp dl, 0x5f	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x4001852	            0x74f4	                            je 0x4001848	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x4001854	          0x80fa47	                            cmp dl, 0x47	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x4001857	     0xf85bbfdffff	                           jne 0x4001618	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x400185d	      0xbf00000000	                              mov edi, 0	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x4001862	      0xb907000000	                              mov ecx, 7	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x4001867	          0x4889c6	                            mov rsi, rax	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x400186a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x400186c	     0xf85a6fdffff	                           jne 0x4001618	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x4001872	         0xfb65008	               movzx edx, byte [rax + 8]	      1531	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20
0x4001876	          0x80fa49	                            cmp dl, 0x49	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001879	        0x400f94c6	                                sete sil	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x400187d	          0x80fa44	                            cmp dl, 0x44	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001880	            0x7409	                            je 0x400188b	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001882	          0x4084f6	                           test sil, sil	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001885	     0xf848dfdffff	                            je 0x4001618	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x400188b	         0xfb67809	               movzx edi, byte [rax + 9]	      1533	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x400188f	        0x40387807	                 cmp byte [rax + 7], dil	      1533	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001893	     0xf857ffdffff	                           jne 0x4001618	      1533	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001899	        0x4180f804	                              cmp r8b, 4	      1542	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	IF_22
0x400189d	     0xf8420040000	                            je 0x4001cc3	      1542	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	IF_22
0x40018a3	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40018a7	        0x488b5308	                mov rdx, qword [rbx + 8]	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40018ab	        0x400fb6f6	                          movzx esi, sil	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40018af	          0x4d89f1	                             mov r9, r14	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40018b2	          0x4d89e0	                             mov r8, r12	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40018b5	          0x4c89e9	                            mov rcx, r13	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40018b8	          0x4889ef	                            mov rdi, rbp	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40018bb	          0xff5020	                 call qword [rax + 0x20]	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40018be	      0xe955fdffff	                           jmp 0x4001618	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40018c3	       0xf1f440000	                   nop dword [rax + rax]	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40018c8	        0xc6431802	                mov byte [rbx + 0x18], 2	      1478	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40018cc	        0x4c896b28	             mov qword [rbx + 0x28], r13	      1479	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40018d0	      0xe943fdffff	                           jmp 0x4001618	      1480	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40018d5	           0xf1f00	                         nop dword [rax]	      1480	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40018d8	      0xba00000000	                              mov edx, 0	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x40018dd	      0xbeb7050000	                          mov esi, 0x5b7	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x40018e2	      0xbf00000000	                              mov edi, 0	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x40018e7	      0xe800000000	                          call 0x40018ec	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x40018ec	         0xf1f4000	                         nop dword [rax]	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x40018f0	        0x4c896b28	             mov qword [rbx + 0x28], r13	      1472	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40018f4	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      1473	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_14
0x40018f8	          0x4889de	                            mov rsi, rbx	      1473	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_14
0x40018fb	        0xc6431801	                mov byte [rbx + 0x18], 1	      1471	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40018ff	      0xe800000000	                          call 0x4001904	      1473	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_14
0x4001904	      0xe90ffdffff	                           jmp 0x4001618	      1474	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001909	     0xf1f80000000	                         nop dword [rax]	      1474	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001910	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001914	          0x4d89f1	                             mov r9, r14	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001917	          0x4d89e0	                             mov r8, r12	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400191a	          0x4c89e9	                            mov rcx, r13	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400191d	      0xba2b020000	                          mov edx, 0x22b	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001922	          0x4889de	                            mov rsi, rbx	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001925	          0x4889ef	                            mov rdi, rbp	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001928	          0xff5018	                 call qword [rax + 0x18]	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400192b	      0xe9e8fcffff	                           jmp 0x4001618	      1720	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001930	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      1725	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001934	          0x4885f6	                           test rsi, rsi	      1725	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001937	     0xf8403fcffff	                            je 0x4001540	      1725	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x400193d	      0x41f6454620	           test byte [r13 + 0x46], 0x20 	      1726	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001942	     0xf85f8fbffff	                           jne 0x4001540	      1726	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001948	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x400194c	      0x4c895c2418	             mov qword [rsp + 0x18], r11	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001951	          0x4531c0	                            xor r8d, r8d	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001954	      0x4489542414	            mov dword [rsp + 0x14], r10d	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001959	        0x488b5308	                mov rdx, qword [rbx + 8]	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x400195d	          0x4531c9	                            xor r9d, r9d	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001960	          0x4c89e9	                            mov rcx, r13	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001963	          0x4889ef	                            mov rdi, rbp	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001966	          0xff5028	                 call qword [rax + 0x28]	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001969	    0x48c743300000	               mov qword [rbx + 0x30], 0	      1731	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001971	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	      1744	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001975	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1731	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x400197a	      0x4c63542414	         movsxd r10, dword [rsp + 0x14] 	      1731	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x400197f	      0x440fb64318	           movzx r8d, byte [rbx + 0x18] 	      1731	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001984	      0xe96ffbffff	                           jmp 0x40014f8	      1731	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001989	     0xf1f80000000	                         nop dword [rax]	      1731	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001990	        0x4180f805	                              cmp r8b, 5	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x4001994	            0x740f	                            je 0x40019a5	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x4001996	      0xbecd050000	                          mov esi, 0x5cd	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x400199b	      0xbf00000000	                              mov edi, 0	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x40019a0	      0xe800000000	                          call 0x40019a5	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x40019a5	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019a9	          0x4531c0	                            xor r8d, r8d	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019ac	      0xb903000000	                              mov ecx, 3	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019b1	          0x4c89ea	                            mov rdx, r13	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019b4	          0x4889de	                            mov rsi, rbx	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019b7	          0x4889ef	                            mov rdi, rbp	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019ba	          0xff5010	                 call qword [rax + 0x10]	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019bd	      0x440fb64318	           movzx r8d, byte [rbx + 0x18] 	      1495	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019c2	        0xc6431803	                mov byte [rbx + 0x18], 3	      1499	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x40019c6	      0xe942feffff	                           jmp 0x400180d	      1499	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x40019cb	       0xf1f440000	                   nop dword [rax + rax]	      1499	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x40019d0	        0x4180f805	                              cmp r8b, 5	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x40019d4	            0x740f	                            je 0x40019e5	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x40019d6	      0xbe50060000	                          mov esi, 0x650	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x40019db	      0xbf00000000	                              mov edi, 0	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x40019e0	      0xe800000000	                          call 0x40019e5	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x40019e5	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019e9	          0x4d89f0	                             mov r8, r14	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019ec	      0xb905000000	                              mov ecx, 5	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019f1	          0x4c89ea	                            mov rdx, r13	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019f4	          0x4889de	                            mov rsi, rbx	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019f7	          0x4889ef	                            mov rdi, rbp	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019fa	          0xff5010	                 call qword [rax + 0x10]	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40019fd	        0x4c3b7330	            cmp r14, qword [rbx + 0x30] 	      1619	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001a01	     0xf8611fcffff	                           jbe 0x4001618	      1619	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001a07	        0x4c897330	             mov qword [rbx + 0x30], r14	      1623	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001a0b	          0x4c89f7	                            mov rdi, r14	      1627	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	CALL_24
0x4001a0e	      0xe800000000	                          call 0x4001a13	      1627	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	CALL_24
0x4001a13	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001a17	          0x83f804	                              cmp eax, 4	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001a1a	      0xba04000000	                              mov edx, 4	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001a1f	           0xf47c2	                          cmova eax, edx	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001a22	    0x4981fc000000	                              cmp r12, 0	      1636	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001a29	      0xbe00000000	                              mov esi, 0	      1639	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31	CALL_25
0x4001a2e	          0x894500	                    mov dword [rbp], eax	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001a31	            0x7412	                            je 0x4001a45	      1636	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001a33	    0x4d3bac24f000	            cmp r13, qword [r12 + 0xf0] 	      1642	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001a3b	     0xf84c7010000	                            je 0x4001c08	      1642	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001a41	        0x498b3424	                    mov rsi, qword [r12]	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x4001a45	          0x4c89ef	                            mov rdi, r13	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x4001a48	      0xe800000000	                          call 0x4001a4d	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x4001a4d	        0x48894508	                mov qword [rbp + 8], rax	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x4001a51	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001a55	        0x488b4008	                mov rax, qword [rax + 8]	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001a59	        0x83482001	                or dword [rax + 0x20], 1	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001a5d	      0xe9b6fbffff	                           jmp 0x4001618	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001a62	    0x660f1f440000	                    nop word [rax + rax]	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001a68	        0x4883c428	                           add rsp, 0x28	      1801	linker.c	FUNCTION_21
0x4001a6c	            0x31c0	                            xor eax, eax	      1393	linker.c	FUNCTION_21	IF_1	IF_2
0x4001a6e	              0x5b	                                 pop rbx	      1801	linker.c	FUNCTION_21
0x4001a6f	              0x5d	                                 pop rbp	      1801	linker.c	FUNCTION_21
0x4001a70	            0x415c	                                 pop r12	      1801	linker.c	FUNCTION_21
0x4001a72	            0x415d	                                 pop r13	      1801	linker.c	FUNCTION_21
0x4001a74	            0x415e	                                 pop r14	      1801	linker.c	FUNCTION_21
0x4001a76	            0x415f	                                 pop r15	      1801	linker.c	FUNCTION_21
0x4001a78	              0xc3	                                     ret	      1801	linker.c	FUNCTION_21
0x4001a79	     0xf1f80000000	                         nop dword [rax]	      1801	linker.c	FUNCTION_21
0x4001a80	        0xc6431806	                mov byte [rbx + 0x18], 6	      1706	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001a84	        0x4c897b28	             mov qword [rbx + 0x28], r15	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001a88	      0xe98bfbffff	                           jmp 0x4001618	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001a8d	           0xf1f00	                         nop dword [rax]	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001a90	        0x493b5f28	            cmp rbx, qword [r15 + 0x28] 	      1680	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001a94	     0xf8527fbffff	                           jne 0x40015c1	      1680	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001a9a	      0xba05000000	                              mov edx, 5	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x4001a9f	      0xbe00000000	                              mov esi, 0	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x4001aa4	      0xbf00000000	                              mov edi, 0	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x4001aa9	      0xe800000000	                          call 0x4001aae	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x4001aae	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001ab3	      0x488b542408	                mov rdx, qword [rsp + 8]	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001ab8	          0x4889c7	                            mov rdi, rax	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001abb	          0x4c89ee	                            mov rsi, r13	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001abe	            0x31c0	                            xor eax, eax	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001ac0	      0xe800000000	                          call 0x4001ac5	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001ac5	      0xbf05000000	                              mov edi, 5	      1686	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_31
0x4001aca	      0xe800000000	                          call 0x4001acf	      1686	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_31
0x4001acf	            0x31c0	                            xor eax, eax	      1687	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001ad1	      0xe947fbffff	                           jmp 0x400161d	      1687	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001ad6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1687	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001ae0	          0x4531ff	                          xor r15d, r15d	      1378	linker.c	FUNCTION_21
0x4001ae3	    0x48837c247800	               cmp qword [rsp + 0x78], 0	      1421	linker.c	FUNCTION_21	IF_10
0x4001ae9	    0xc74424140600	               mov dword [rsp + 0x14], 6	      1396	linker.c	FUNCTION_21	ELSE_1	IF_3
0x4001af1	     0xf8578f9ffff	                           jne 0x400146f	      1421	linker.c	FUNCTION_21	IF_10
0x4001af7	    0x660f1f840000	                    nop word [rax + rax]	      1421	linker.c	FUNCTION_21	IF_10
0x4001b00	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001b04	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001b08	          0x4531c0	                            xor r8d, r8d	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001b0b	      0x488b742408	                mov rsi, qword [rsp + 8]	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001b10	      0xba01000000	                              mov edx, 1	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001b15	      0x4489542418	            mov dword [rsp + 0x18], r10d	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001b1a	      0xe800000000	                          call 0x4001b1f	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001b1f	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001b24	          0x4889c3	                            mov rbx, rax	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001b27	          0x4885db	                           test rbx, rbx	      1429	linker.c	FUNCTION_21	ELSE_8	IF_12
0x4001b2a	     0xf8550f9ffff	                           jne 0x4001480	      1429	linker.c	FUNCTION_21	ELSE_8	IF_12
0x4001b30	    0x48837c247800	               cmp qword [rsp + 0x78], 0	      1431	linker.c	FUNCTION_21	ELSE_8	IF_12	IF_13
0x4001b36	     0xf842cffffff	                            je 0x4001a68	      1431	linker.c	FUNCTION_21	ELSE_8	IF_12	IF_13
0x4001b3c	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      1432	linker.c	FUNCTION_21	ELSE_8	IF_12	IF_13
0x4001b41	    0x48c700000000	                      mov qword [rax], 0	      1432	linker.c	FUNCTION_21	ELSE_8	IF_12	IF_13
0x4001b48	            0x31c0	                            xor eax, eax	      1433	linker.c	FUNCTION_21	ELSE_8	IF_12
0x4001b4a	      0xe9cefaffff	                           jmp 0x400161d	      1433	linker.c	FUNCTION_21	ELSE_8	IF_12
0x4001b4f	              0x90	                                     nop	      1433	linker.c	FUNCTION_21	ELSE_8	IF_12
0x4001b50	          0x4531ff	                          xor r15d, r15d	      1378	linker.c	FUNCTION_21
0x4001b53	    0xc74424140700	               mov dword [rsp + 0x14], 7	      1398	linker.c	FUNCTION_21	ELSE_2	IF_4
0x4001b5b	      0xe903f9ffff	                           jmp 0x4001463	      1398	linker.c	FUNCTION_21	ELSE_2	IF_4
0x4001b60	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001b64	        0x4180f807	                              cmp r8b, 7	      1328	linker.c	FUNCTION_20	WHILE_1
0x4001b68	        0x4c8b5028	            mov r10, qword [rax + 0x28] 	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001b6c	          0x4889d8	                            mov rax, rbx	      1328	linker.c	FUNCTION_20	WHILE_1
0x4001b6f	            0x7516	                           jne 0x4001b87	      1328	linker.c	FUNCTION_20	WHILE_1
0x4001b71	     0xf1f80000000	                         nop dword [rax]	      1328	linker.c	FUNCTION_20	WHILE_1
0x4001b78	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1329	linker.c	FUNCTION_20	WHILE_1
0x4001b7c	      0x440fb64018	           movzx r8d, byte [rax + 0x18] 	      1328	linker.c	FUNCTION_20	WHILE_1
0x4001b81	        0x4180f807	                              cmp r8b, 7	      1328	linker.c	FUNCTION_20	WHILE_1
0x4001b85	            0x74f1	                            je 0x4001b78	      1328	linker.c	FUNCTION_20	WHILE_1
0x4001b87	        0x4180f805	                              cmp r8b, 5	      1330	linker.c	FUNCTION_20	SWITCH_1
0x4001b8b	     0xf8708010000	                            ja 0x4001c99	      1330	linker.c	FUNCTION_20	SWITCH_1
0x4001b91	    0x42ff24c50000	                        jmp qword [r8*8]	      1330	linker.c	FUNCTION_20	SWITCH_1
0x4001b99	     0xf1f80000000	                         nop dword [rax]	      1330	linker.c	FUNCTION_20	SWITCH_1
0x4001ba0	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      1558	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_18
0x4001ba4	          0x4889de	                            mov rsi, rbx	      1558	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_18
0x4001ba7	      0xe800000000	                          call 0x4001bac	      1558	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_18
0x4001bac	      0xe9d0fbffff	                           jmp 0x4001781	      1558	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_18
0x4001bb1	     0xf1f80000000	                         nop dword [rax]	      1558	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_18
0x4001bb8	      0x837c241401	               cmp dword [rsp + 0x14], 1	      1425	linker.c	FUNCTION_21	ELSE_8	IF_11
0x4001bbd	     0xf873dffffff	                            ja 0x4001b00	      1425	linker.c	FUNCTION_21	ELSE_8	IF_11
0x4001bc3	      0x448b442468	            mov r8d, dword [rsp + 0x68] 	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001bc8	      0x488b542408	                mov rdx, qword [rsp + 8]	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001bcd	          0x4531c9	                            xor r9d, r9d	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001bd0	      0xb901000000	                              mov ecx, 1	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001bd5	          0x4889ee	                            mov rsi, rbp	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001bd8	          0x4c89ef	                            mov rdi, r13	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001bdb	      0x4489542418	            mov dword [rsp + 0x18], r10d	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001be0	      0xe800000000	                          call 0x4001be5	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001be5	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001bea	          0x4889c3	                            mov rbx, rax	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001bed	      0xe935ffffff	                           jmp 0x4001b27	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001bf2	    0x660f1f440000	                    nop word [rax + rax]	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001bf8	        0x4c896508	                mov qword [rbp + 8], r12	      1601	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_12
0x4001bfc	      0xe9f5fbffff	                           jmp 0x40017f6	      1601	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_12
0x4001c01	     0xf1f80000000	                         nop dword [rax]	      1601	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_12
0x4001c08	        0x4c896508	                mov qword [rbp + 8], r12	      1649	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_14
0x4001c0c	      0xe907faffff	                           jmp 0x4001618	      1649	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_14
0x4001c11	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      1776	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x4001c16	      0x4989442430	             mov qword [r12 + 0x30], rax	      1776	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x4001c1b	      0xe9e0faffff	                           jmp 0x4001700	      1776	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x4001c20	      0xbe65050000	                          mov esi, 0x565	      1381	linker.c	FUNCTION_21	CALL_1
0x4001c25	      0xbf00000000	                              mov edi, 0	      1381	linker.c	FUNCTION_21	CALL_1
0x4001c2a	        0x894c2414	             mov dword [rsp + 0x14], ecx	      1381	linker.c	FUNCTION_21	CALL_1
0x4001c2e	      0xe800000000	                          call 0x4001c33	      1381	linker.c	FUNCTION_21	CALL_1
0x4001c33	      0x448b542414	           mov r10d, dword [rsp + 0x14] 	      1381	linker.c	FUNCTION_21	CALL_1
0x4001c38	      0xe91bf7ffff	                           jmp 0x4001358	      1381	linker.c	FUNCTION_21	CALL_1
0x4001c3d	          0x4531ff	                          xor r15d, r15d	      1378	linker.c	FUNCTION_21
0x4001c40	    0xc74424140300	               mov dword [rsp + 0x14], 3	      1407	linker.c	FUNCTION_21	ELSE_5	IF_7
0x4001c48	      0xe916f8ffff	                           jmp 0x4001463	      1407	linker.c	FUNCTION_21	ELSE_5	IF_7
0x4001c4d	          0x4531ff	                          xor r15d, r15d	      1378	linker.c	FUNCTION_21
0x4001c50	    0xc74424140200	               mov dword [rsp + 0x14], 2	      1419	linker.c	FUNCTION_21	ELSE_7
0x4001c58	      0xe906f8ffff	                           jmp 0x4001463	      1419	linker.c	FUNCTION_21	ELSE_7
0x4001c5d	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1341	linker.c	FUNCTION_20	SWITCH_1
0x4001c61	        0x488b4008	                mov rax, qword [rax + 8]	      1341	linker.c	FUNCTION_20	SWITCH_1
0x4001c65	    0x488b88f00000	            mov rcx, qword [rax + 0xf0] 	      1341	linker.c	FUNCTION_20	SWITCH_1
0x4001c6c	        0x488b5308	                mov rdx, qword [rbx + 8]	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001c70	          0x4531c9	                            xor r9d, r9d	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001c73	          0x4531c0	                            xor r8d, r8d	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001c76	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001c7b	          0x4889ef	                            mov rdi, rbp	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001c7e	          0x41ffd2	                                call r10	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001c81	      0xe992f9ffff	                           jmp 0x4001618	      1758	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001c86	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1339	linker.c	FUNCTION_20	SWITCH_1
0x4001c8a	    0x488b88f00000	            mov rcx, qword [rax + 0xf0] 	      1339	linker.c	FUNCTION_20	SWITCH_1
0x4001c91	            0xebd9	                           jmp 0x4001c6c	      1339	linker.c	FUNCTION_20	SWITCH_1
0x4001c93	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      1336	linker.c	FUNCTION_20	SWITCH_1
0x4001c97	            0xebd3	                           jmp 0x4001c6c	      1336	linker.c	FUNCTION_20	SWITCH_1
0x4001c99	            0x31c9	                            xor ecx, ecx	      1333	linker.c	FUNCTION_20	SWITCH_1
0x4001c9b	            0xebcf	                           jmp 0x4001c6c	      1333	linker.c	FUNCTION_20	SWITCH_1
0x4001c9d	          0x4489d0	                           mov eax, r10d	      1386	linker.c	FUNCTION_21	IF_1
0x4001ca0	          0x4531ff	                          xor r15d, r15d	      1378	linker.c	FUNCTION_21
0x4001ca3	          0xc1e807	                              shr eax, 7	      1386	linker.c	FUNCTION_21	IF_1
0x4001ca6	          0x83e001	                              and eax, 1	      1386	linker.c	FUNCTION_21	IF_1
0x4001ca9	    0x48837c247800	               cmp qword [rsp + 0x78], 0	      1421	linker.c	FUNCTION_21	IF_10
0x4001caf	        0x89442414	             mov dword [rsp + 0x14], eax	      1386	linker.c	FUNCTION_21	IF_1
0x4001cb3	     0xf85b6f7ffff	                           jne 0x400146f	      1421	linker.c	FUNCTION_21	IF_10
0x4001cb9	      0x4c8b7c2478	            mov r15, qword [rsp + 0x78] 	      1378	linker.c	FUNCTION_21
0x4001cbe	      0xe900ffffff	                           jmp 0x4001bc3	      1378	linker.c	FUNCTION_21
0x4001cc3	      0xba00000000	                              mov edx, 0	      1543	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	CALL_17
0x4001cc8	      0xbe07060000	                          mov esi, 0x607	      1543	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	CALL_17
0x4001ccd	      0xbf00000000	                              mov edi, 0	      1543	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	CALL_17
0x4001cd2	      0xe800000000	                          call 0x4001cd7	      1543	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	CALL_17
_bfd_link_hash_newfunc	WHILE,0:CALL,3:DO,0:FOR,0:IF,3:ELSE,0:functions,0:SWITCH,0	30
0x40003d0	              0x53	                                push rbx	       430	linker.c	FUNCTION_1
0x40003d1	          0x4889f3	                            mov rbx, rsi	       430	linker.c	FUNCTION_1
0x40003d4	        0x4883ec10	                           sub rsp, 0x10	       430	linker.c	FUNCTION_1
0x40003d8	          0x4885ff	                           test rdi, rdi	       433	linker.c	FUNCTION_1	IF_1
0x40003db	            0x7443	                            je 0x4000420	       433	linker.c	FUNCTION_1	IF_1
0x40003dd	          0x4889de	                            mov rsi, rbx	       442	linker.c	FUNCTION_1	CALL_2
0x40003e0	      0xe800000000	                          call 0x40003e5	       442	linker.c	FUNCTION_1	CALL_2
0x40003e5	          0x4889c2	                            mov rdx, rax	       442	linker.c	FUNCTION_1	CALL_2
0x40003e8	            0x31c0	                            xor eax, eax	       442	linker.c	FUNCTION_1	CALL_2
0x40003ea	          0x4885d2	                           test rdx, rdx	       443	linker.c	FUNCTION_1	IF_3
0x40003ed	            0x7423	                            je 0x4000412	       443	linker.c	FUNCTION_1	IF_3
0x40003ef	    0x48c742180000	               mov qword [rdx + 0x18], 0	        90	string3.h	FUNCTION_69	CALL_6
0x40003f7	    0x48c742200000	               mov qword [rdx + 0x20], 0	        90	string3.h	FUNCTION_69	CALL_6
0x40003ff	          0x4889d0	                            mov rax, rdx	        90	string3.h	FUNCTION_69	CALL_6
0x4000402	    0x48c742280000	               mov qword [rdx + 0x28], 0	        90	string3.h	FUNCTION_69	CALL_6
0x400040a	    0x48c742300000	               mov qword [rdx + 0x30], 0	        90	string3.h	FUNCTION_69	CALL_6
0x4000412	        0x4883c410	                           add rsp, 0x10	       453	linker.c	FUNCTION_1
0x4000416	              0x5b	                                 pop rbx	       453	linker.c	FUNCTION_1
0x4000417	              0xc3	                                     ret	       453	linker.c	FUNCTION_1
0x4000418	     0xf1f84000000	                   nop dword [rax + rax]	       453	linker.c	FUNCTION_1
0x4000420	          0x4889df	                            mov rdi, rbx	       435	linker.c	FUNCTION_1	IF_1
0x4000423	      0xbe38000000	                           mov esi, 0x38	       435	linker.c	FUNCTION_1	IF_1
0x4000428	      0x4889542408	                mov qword [rsp + 8], rdx	       435	linker.c	FUNCTION_1	IF_1
0x400042d	      0xe800000000	                          call 0x4000432	       435	linker.c	FUNCTION_1	IF_1
0x4000432	          0x4885c0	                           test rax, rax	       437	linker.c	FUNCTION_1	IF_1	IF_2
0x4000435	          0x4889c7	                            mov rdi, rax	       435	linker.c	FUNCTION_1	IF_1
0x4000438	      0x488b542408	                mov rdx, qword [rsp + 8]	       437	linker.c	FUNCTION_1	IF_1	IF_2
0x400043d	            0x759e	                           jne 0x40003dd	       437	linker.c	FUNCTION_1	IF_1	IF_2
0x400043f	            0x31c0	                            xor eax, eax	       437	linker.c	FUNCTION_1	IF_1	IF_2
0x4000441	            0xebcf	                           jmp 0x4000412	       437	linker.c	FUNCTION_1	IF_1	IF_2
default_indirect_link_order	WHILE,0:CALL,37:DO,0:FOR,1:IF,16:ELSE,3:functions,0:SWITCH,0	278
0x4000910	            0x4157	                                push r15	      2524	linker.c	FUNCTION_31
0x4000912	            0x4156	                                push r14	      2524	linker.c	FUNCTION_31
0x4000914	          0x4989f6	                            mov r14, rsi	      2524	linker.c	FUNCTION_31
0x4000917	            0x4155	                                push r13	      2524	linker.c	FUNCTION_31
0x4000919	            0x4154	                                push r12	      2524	linker.c	FUNCTION_31
0x400091b	          0x4989cc	                            mov r12, rcx	      2524	linker.c	FUNCTION_31
0x400091e	              0x55	                                push rbp	      2524	linker.c	FUNCTION_31
0x400091f	              0x53	                                push rbx	      2524	linker.c	FUNCTION_31
0x4000920	          0x4889d5	                            mov rbp, rdx	      2524	linker.c	FUNCTION_31
0x4000923	          0x4489c3	                            mov ebx, r8d	      2524	linker.c	FUNCTION_31
0x4000926	        0x4883ec28	                           sub rsp, 0x28	      2524	linker.c	FUNCTION_31
0x400092a	        0xf6422101	               test byte [rdx + 0x21], 1	      2532	linker.c	FUNCTION_31	CALL_1
0x400092e	      0x48897c2408	                mov qword [rsp + 8], rdi	      2524	linker.c	FUNCTION_31
0x4000933	     0xf845f020000	                            je 0x4000b98	      2532	linker.c	FUNCTION_31	CALL_1
0x4000939	      0x4d8b7c2420	            mov r15, qword [r12 + 0x20] 	      2534	linker.c	FUNCTION_31
0x400093e	      0x49837f3800	               cmp qword [r15 + 0x38], 0	      2536	linker.c	FUNCTION_31	IF_1
0x4000943	     0xf8437020000	                            je 0x4000b80	      2536	linker.c	FUNCTION_31	IF_1
0x4000949	        0x493b6f68	            cmp rbp, qword [r15 + 0x68] 	      2539	linker.c	FUNCTION_31	CALL_2
0x400094d	    0x498b87f00000	            mov rax, qword [r15 + 0xf0] 	      2535	linker.c	FUNCTION_31
0x4000954	      0x4889442410	             mov qword [rsp + 0x10], rax	      2535	linker.c	FUNCTION_31
0x4000959	            0x740f	                            je 0x400096a	      2539	linker.c	FUNCTION_31	CALL_2
0x400095b	      0xbeeb090000	                          mov esi, 0x9eb	      2539	linker.c	FUNCTION_31	CALL_2
0x4000960	      0xbf00000000	                              mov edi, 0	      2539	linker.c	FUNCTION_31	CALL_2
0x4000965	      0xe800000000	                          call 0x400096a	      2539	linker.c	FUNCTION_31	CALL_2
0x400096a	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      2540	linker.c	FUNCTION_31	CALL_3
0x400096f	        0x49394760	            cmp qword [r15 + 0x60], rax 	      2540	linker.c	FUNCTION_31	CALL_3
0x4000973	            0x740f	                            je 0x4000984	      2540	linker.c	FUNCTION_31	CALL_3
0x4000975	      0xbeec090000	                          mov esi, 0x9ec	      2540	linker.c	FUNCTION_31	CALL_3
0x400097a	      0xbf00000000	                              mov edi, 0	      2540	linker.c	FUNCTION_31	CALL_3
0x400097f	      0xe800000000	                          call 0x4000984	      2540	linker.c	FUNCTION_31	CALL_3
0x4000984	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      2541	linker.c	FUNCTION_31	CALL_4
0x4000989	        0x49394738	            cmp qword [r15 + 0x38], rax 	      2541	linker.c	FUNCTION_31	CALL_4
0x400098d	            0x740f	                            je 0x400099e	      2541	linker.c	FUNCTION_31	CALL_4
0x400098f	      0xbeed090000	                          mov esi, 0x9ed	      2541	linker.c	FUNCTION_31	CALL_4
0x4000994	      0xbf00000000	                              mov edi, 0	      2541	linker.c	FUNCTION_31	CALL_4
0x4000999	      0xe800000000	                          call 0x400099e	      2541	linker.c	FUNCTION_31	CALL_4
0x400099e	        0x410fb606	                   movzx eax, byte [r14]	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x40009a2	          0x83e003	                              and eax, 3	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x40009a5	            0x3c02	                               cmp al, 2	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x40009a7	     0xf8403020000	                            je 0x4000bb0	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x40009ad	            0x85db	                           test ebx, ebx	      2560	linker.c	FUNCTION_31	IF_3
0x40009af	            0x752f	                           jne 0x40009e0	      2560	linker.c	FUNCTION_31	IF_3
0x40009b1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x40009b6	    0x488b98b00000	            mov rbx, qword [rax + 0xb0] 	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x40009bd	          0x4885db	                           test rbx, rbx	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x40009c0	     0xf845a030000	                            je 0x4000d20	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x40009c6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2578	linker.c	FUNCTION_31	IF_3	CALL_13
0x40009cb	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2578	linker.c	FUNCTION_31	IF_3	CALL_13
0x40009d1	        0x4c8d2cc3	                  lea r13, [rbx + rax*8]	      2578	linker.c	FUNCTION_31	IF_3	CALL_13
0x40009d5	          0x4939dd	                            cmp r13, rbx	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x40009d8	     0xf87c5000000	                            ja 0x4000aa3	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x40009de	            0x6690	                                     nop	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x40009e0	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      2613	linker.c	FUNCTION_31	IF_9
0x40009e3	      0x2500001002	                      and eax, 0x2100000	      2613	linker.c	FUNCTION_31	IF_9
0x40009e8	      0x3d00000002	                      cmp eax, 0x2000000	      2613	linker.c	FUNCTION_31	IF_9
0x40009ed	     0xf85dd000000	                           jne 0x4000ad0	      2613	linker.c	FUNCTION_31	IF_9
0x40009f3	        0x498b7f38	            mov rdi, qword [r15 + 0x38] 	      2614	linker.c	FUNCTION_31	IF_9
0x40009f7	          0x4885ff	                           test rdi, rdi	      2614	linker.c	FUNCTION_31	IF_9
0x40009fa	     0xf84d4000000	                            je 0x4000ad4	      2614	linker.c	FUNCTION_31	IF_9
0x4000a00	      0x488b442408	                mov rax, qword [rsp + 8]	      2617	linker.c	FUNCTION_31	IF_9	IF_10
0x4000a05	        0xf6404740	           test byte [rax + 0x47], 0x40 	      2617	linker.c	FUNCTION_31	IF_9	IF_10
0x4000a09	     0xf84c9020000	                            je 0x4000cd8	      2617	linker.c	FUNCTION_31	IF_9	IF_10
0x4000a0f	    0x4c8ba5b00000	            mov r12, qword [rbp + 0xb0] 	      2623	linker.c	FUNCTION_31	IF_9
0x4000a16	          0x4d85e4	                           test r12, r12	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4000a19	     0xf8429030000	                            je 0x4000d48	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4000a1f	        0x498b5f60	            mov rbx, qword [r15 + 0x60] 	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000a23	          0x4885db	                           test rbx, rbx	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000a26	     0xf85d4020000	                           jne 0x4000d00	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000a2c	      0x4c8b742408	                mov r14, qword [rsp + 8]	      2645	linker.c	FUNCTION_31	CALL_34
0x4000a31	          0x4c89f7	                            mov rdi, r14	      2645	linker.c	FUNCTION_31	CALL_34
0x4000a34	      0xe800000000	                          call 0x4000a39	      2645	linker.c	FUNCTION_31	CALL_34
0x4000a39	            0x89c1	                            mov ecx, eax	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000a3b	        0x4d8b4738	              mov r8, qword [r15 + 0x38]	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000a3f	          0x4c89e2	                            mov rdx, r12	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000a42	        0x480fafcb	                           imul rcx, rbx	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000a46	          0x4889ee	                            mov rsi, rbp	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000a49	          0x4c89f7	                            mov rdi, r14	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000a4c	      0xe800000000	                          call 0x4000a51	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000a51	            0x85c0	                           test eax, eax	      2537	linker.c	FUNCTION_31	IF_1
0x4000a53	           0xf95c0	                                setne al	      2537	linker.c	FUNCTION_31	IF_1
0x4000a56	        0x4883c428	                           add rsp, 0x28	      2658	linker.c	FUNCTION_31
0x4000a5a	              0x5b	                                 pop rbx	      2658	linker.c	FUNCTION_31
0x4000a5b	           0xfb6c0	                           movzx eax, al	      2537	linker.c	FUNCTION_31	IF_1
0x4000a5e	              0x5d	                                 pop rbp	      2658	linker.c	FUNCTION_31
0x4000a5f	            0x415c	                                 pop r12	      2658	linker.c	FUNCTION_31
0x4000a61	            0x415d	                                 pop r13	      2658	linker.c	FUNCTION_31
0x4000a63	            0x415e	                                 pop r14	      2658	linker.c	FUNCTION_31
0x4000a65	            0x415f	                                 pop r15	      2658	linker.c	FUNCTION_31
0x4000a67	              0xc3	                                     ret	      2658	linker.c	FUNCTION_31
0x4000a68	     0xf1f84000000	                   nop dword [rax + rax]	      2658	linker.c	FUNCTION_31
0x4000a70	        0x498b4220	            mov rax, qword [r10 + 0x20] 	      2591	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_15
0x4000a74	    0x483d00000000	                              cmp rax, 0	      2591	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_15
0x4000a7a	     0xf8408020000	                            je 0x4000c88	      2591	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_15
0x4000a80	        0xf6402110	           test byte [rax + 0x21], 0x10 	      2593	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_19
0x4000a84	     0xf8536020000	                           jne 0x4000cc0	      2593	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_19
0x4000a8a	    0x483d00000000	                              cmp rax, 0	      2593	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_19
0x4000a90	     0xf842a020000	                            je 0x4000cc0	      2593	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_19
0x4000a96	        0x4883c308	                              add rbx, 8	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x4000a9a	          0x4939dd	                            cmp r13, rbx	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x4000a9d	     0xf863dffffff	                           jbe 0x40009e0	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x4000aa3	          0x4c8b13	                    mov r10, qword [rbx]	      2584	linker.c	FUNCTION_31	IF_3	FOR_1
0x4000aa6	    0x41f742188238	        test dword [r10 + 0x18], 0x3882 	      2586	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5
0x4000aae	            0x74c0	                            je 0x4000a70	      2586	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5
0x4000ab0	        0x498b7228	            mov rsi, qword [r10 + 0x28] 	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000ab4	          0x4885f6	                           test rsi, rsi	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000ab7	     0xf848b010000	                            je 0x4000c48	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000abd	          0x4c89d7	                            mov rdi, r10	      2608	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_26
0x4000ac0	      0xe80bf6ffff	           call sym.set_symbol_from_hash	      2608	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_26
0x4000ac5	            0xebcf	                           jmp 0x4000a96	      2608	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_26
0x4000ac7	    0x660f1f840000	                    nop word [rax + rax]	      2608	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_26
0x4000ad0	        0x498b7f38	            mov rdi, qword [r15 + 0x38] 	      2608	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_26
0x4000ad4	        0x49397f40	            cmp qword [r15 + 0x40], rdi 	      2630	linker.c	FUNCTION_31	ELSE_3
0x4000ad8	      0x490f437f40	          cmovae rdi, qword [r15 + 0x40]	      2630	linker.c	FUNCTION_31	ELSE_3
0x4000add	          0x4889fb	                            mov rbx, rdi	      2630	linker.c	FUNCTION_31	ELSE_3
0x4000ae0	      0xe800000000	                          call 0x4000ae5	      2633	linker.c	FUNCTION_31	ELSE_3	CALL_30
0x4000ae5	          0x4885c0	                           test rax, rax	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4000ae8	          0x4989c5	                            mov r13, rax	      2633	linker.c	FUNCTION_31	ELSE_3	CALL_30
0x4000aeb	            0x751b	                           jne 0x4000b08	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4000aed	          0x4885db	                           test rbx, rbx	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4000af0	            0x7416	                            je 0x4000b08	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4000af2	            0x31c0	                            xor eax, eax	      2657	linker.c	FUNCTION_31
0x4000af4	        0x4883c428	                           add rsp, 0x28	      2658	linker.c	FUNCTION_31
0x4000af8	              0x5b	                                 pop rbx	      2658	linker.c	FUNCTION_31
0x4000af9	              0x5d	                                 pop rbp	      2658	linker.c	FUNCTION_31
0x4000afa	            0x415c	                                 pop r12	      2658	linker.c	FUNCTION_31
0x4000afc	            0x415d	                                 pop r13	      2658	linker.c	FUNCTION_31
0x4000afe	            0x415e	                                 pop r14	      2658	linker.c	FUNCTION_31
0x4000b00	            0x415f	                                 pop r15	      2658	linker.c	FUNCTION_31
0x4000b02	              0xc3	                                     ret	      2658	linker.c	FUNCTION_31
0x4000b03	       0xf1f440000	                   nop dword [rax + rax]	      2658	linker.c	FUNCTION_31
0x4000b08	        0x410fb606	                   movzx eax, byte [r14]	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000b0c	          0x4c89f6	                            mov rsi, r14	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000b0f	      0x4c8b742408	                mov r14, qword [rsp + 8]	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000b14	          0x4c89e2	                            mov rdx, r12	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000b17	          0x4c89e9	                            mov rcx, r13	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000b1a	          0x4c89f7	                            mov rdi, r14	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000b1d	          0x83e003	                              and eax, 3	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000b20	            0x3c02	                               cmp al, 2	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000b22	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000b27	        0x410f94c0	                                sete r8b	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000b2b	        0x450fb6c0	                          movzx r8d, r8b	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000b2f	    0x4c8b88b00000	              mov r9, qword [rax + 0xb0]	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000b36	      0xe800000000	                          call 0x4000b3b	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000b3b	          0x4885c0	                           test rax, rax	      2640	linker.c	FUNCTION_31	ELSE_3	IF_13
0x4000b3e	          0x4989c4	                            mov r12, rax	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000b41	     0xf84d9000000	                            je 0x4000c20	      2640	linker.c	FUNCTION_31	ELSE_3	IF_13
0x4000b47	        0x498b5f60	            mov rbx, qword [r15 + 0x60] 	      2645	linker.c	FUNCTION_31	CALL_34
0x4000b4b	          0x4c89f7	                            mov rdi, r14	      2645	linker.c	FUNCTION_31	CALL_34
0x4000b4e	      0xe800000000	                          call 0x4000b53	      2645	linker.c	FUNCTION_31	CALL_34
0x4000b53	            0x89c1	                            mov ecx, eax	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000b55	        0x4d8b4738	              mov r8, qword [r15 + 0x38]	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000b59	          0x4c89e2	                            mov rdx, r12	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000b5c	        0x480fafcb	                           imul rcx, rbx	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000b60	          0x4889ee	                            mov rsi, rbp	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000b63	          0x4c89f7	                            mov rdi, r14	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000b66	      0xe800000000	                          call 0x4000b6b	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000b6b	            0x85c0	                           test eax, eax	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000b6d	     0xf84ad000000	                            je 0x4000c20	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000b73	          0x4d85ed	                           test r13, r13	      2650	linker.c	FUNCTION_31	IF_15
0x4000b76	            0x7408	                            je 0x4000b80	      2650	linker.c	FUNCTION_31	IF_15
0x4000b78	          0x4c89ef	                            mov rdi, r13	      2651	linker.c	FUNCTION_31	CALL_36
0x4000b7b	      0xe800000000	                          call 0x4000b80	      2651	linker.c	FUNCTION_31	CALL_36
0x4000b80	        0x4883c428	                           add rsp, 0x28	      2658	linker.c	FUNCTION_31
0x4000b84	      0xb801000000	                              mov eax, 1	      2652	linker.c	FUNCTION_31
0x4000b89	              0x5b	                                 pop rbx	      2658	linker.c	FUNCTION_31
0x4000b8a	              0x5d	                                 pop rbp	      2658	linker.c	FUNCTION_31
0x4000b8b	            0x415c	                                 pop r12	      2658	linker.c	FUNCTION_31
0x4000b8d	            0x415d	                                 pop r13	      2658	linker.c	FUNCTION_31
0x4000b8f	            0x415e	                                 pop r14	      2658	linker.c	FUNCTION_31
0x4000b91	            0x415f	                                 pop r15	      2658	linker.c	FUNCTION_31
0x4000b93	              0xc3	                                     ret	      2658	linker.c	FUNCTION_31
0x4000b94	         0xf1f4000	                         nop dword [rax]	      2658	linker.c	FUNCTION_31
0x4000b98	      0xbee4090000	                          mov esi, 0x9e4	      2532	linker.c	FUNCTION_31	CALL_1
0x4000b9d	      0xbf00000000	                              mov edi, 0	      2532	linker.c	FUNCTION_31	CALL_1
0x4000ba2	      0xe800000000	                          call 0x4000ba7	      2532	linker.c	FUNCTION_31	CALL_1
0x4000ba7	      0xe98dfdffff	                           jmp 0x4000939	      2532	linker.c	FUNCTION_31	CALL_1
0x4000bac	         0xf1f4000	                         nop dword [rax]	      2532	linker.c	FUNCTION_31	CALL_1
0x4000bb0	    0x418b87880000	            mov eax, dword [r15 + 0x88] 	      2544	linker.c	FUNCTION_31	IF_2
0x4000bb7	            0x85c0	                           test eax, eax	      2544	linker.c	FUNCTION_31	IF_2
0x4000bb9	     0xf84eefdffff	                            je 0x40009ad	      2544	linker.c	FUNCTION_31	IF_2
0x4000bbf	    0x4883bd800000	               cmp qword [rbp + 0x80], 0	      2545	linker.c	FUNCTION_31	IF_2
0x4000bc7	     0xf85e0fdffff	                           jne 0x40009ad	      2545	linker.c	FUNCTION_31	IF_2
0x4000bcd	      0x488b442408	                mov rax, qword [rsp + 8]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000bd2	      0xba05000000	                              mov edx, 5	      2554	linker.c	FUNCTION_31	IF_2	CALL_7
0x4000bd7	      0xbe00000000	                              mov esi, 0	      2554	linker.c	FUNCTION_31	IF_2	CALL_7
0x4000bdc	      0xbf00000000	                              mov edi, 0	      2554	linker.c	FUNCTION_31	IF_2	CALL_7
0x4000be1	        0x488b4008	                mov rax, qword [rax + 8]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000be5	          0x488b28	                    mov rbp, qword [rax]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000be8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000bed	        0x488b4008	                mov rax, qword [rax + 8]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000bf1	          0x488b18	                    mov rbx, qword [rax]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000bf4	      0xe800000000	                          call 0x4000bf9	      2554	linker.c	FUNCTION_31	IF_2	CALL_7
0x4000bf9	          0x4889ea	                            mov rdx, rbp	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000bfc	          0x4889c7	                            mov rdi, rax	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000bff	            0x31c0	                            xor eax, eax	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000c01	          0x4889de	                            mov rsi, rbx	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000c04	      0xe800000000	                          call 0x4000c09	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000c09	      0xbf03000000	                              mov edi, 3	      2556	linker.c	FUNCTION_31	IF_2	CALL_10
0x4000c0e	      0xe800000000	                          call 0x4000c13	      2556	linker.c	FUNCTION_31	IF_2	CALL_10
0x4000c13	            0x31c0	                            xor eax, eax	      2557	linker.c	FUNCTION_31	IF_2
0x4000c15	      0xe9dafeffff	                           jmp 0x4000af4	      2557	linker.c	FUNCTION_31	IF_2
0x4000c1a	    0x660f1f440000	                    nop word [rax + rax]	      2557	linker.c	FUNCTION_31	IF_2
0x4000c20	          0x4d85ed	                           test r13, r13	      2655	linker.c	FUNCTION_31	IF_16
0x4000c23	     0xf84c9feffff	                            je 0x4000af2	      2655	linker.c	FUNCTION_31	IF_16
0x4000c29	          0x4c89ef	                            mov rdi, r13	      2656	linker.c	FUNCTION_31	CALL_37
0x4000c2c	      0xe800000000	                          call 0x4000c31	      2656	linker.c	FUNCTION_31	CALL_37
0x4000c31	        0x4883c428	                           add rsp, 0x28	      2658	linker.c	FUNCTION_31
0x4000c35	            0x31c0	                            xor eax, eax	      2657	linker.c	FUNCTION_31
0x4000c37	              0x5b	                                 pop rbx	      2658	linker.c	FUNCTION_31
0x4000c38	              0x5d	                                 pop rbp	      2658	linker.c	FUNCTION_31
0x4000c39	            0x415c	                                 pop r12	      2658	linker.c	FUNCTION_31
0x4000c3b	            0x415d	                                 pop r13	      2658	linker.c	FUNCTION_31
0x4000c3d	            0x415e	                                 pop r14	      2658	linker.c	FUNCTION_31
0x4000c3f	            0x415f	                                 pop r15	      2658	linker.c	FUNCTION_31
0x4000c41	              0xc3	                                     ret	      2658	linker.c	FUNCTION_31
0x4000c42	    0x660f1f440000	                    nop word [rax + rax]	      2658	linker.c	FUNCTION_31
0x4000c48	    0x49817a200000	               cmp qword [r10 + 0x20], 0	      2599	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_21
0x4000c50	            0x7443	                            je 0x4000c95	      2599	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_21
0x4000c52	        0x498b7208	                mov rsi, qword [r10 + 8]	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000c56	        0x498b7e28	            mov rdi, qword [r14 + 0x28] 	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000c5a	    0x41b801000000	                              mov r8d, 1	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000c60	            0x31c9	                            xor ecx, ecx	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000c62	            0x31d2	                            xor edx, edx	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000c64	      0x4c89542418	             mov qword [rsp + 0x18], r10	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000c69	      0xe800000000	                          call 0x4000c6e	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000c6e	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000c73	          0x4889c6	                            mov rsi, rax	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000c76	          0x4885f6	                           test rsi, rsi	      2607	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_8
0x4000c79	     0xf8417feffff	                            je 0x4000a96	      2607	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_8
0x4000c7f	      0xe939feffff	                           jmp 0x4000abd	      2607	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_8
0x4000c84	         0xf1f4000	                         nop dword [rax]	      2607	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_8
0x4000c88	        0x498b7228	            mov rsi, qword [r10 + 0x28] 	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000c8c	          0x4885f6	                           test rsi, rsi	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000c8f	     0xf8528feffff	                           jne 0x4000abd	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000c95	        0x498b5208	                mov rdx, qword [r10 + 8]	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000c99	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000c9e	          0x4c89f6	                            mov rsi, r14	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000ca1	    0x41b901000000	                              mov r9d, 1	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000ca7	          0x4531c0	                            xor r8d, r8d	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000caa	            0x31c9	                            xor ecx, ecx	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000cac	      0x4c89542418	             mov qword [rsp + 0x18], r10	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000cb1	      0xe800000000	                          call 0x4000cb6	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000cb6	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000cbb	          0x4889c6	                            mov rsi, rax	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000cbe	            0xebb6	                           jmp 0x4000c76	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000cc0	        0x498b7228	            mov rsi, qword [r10 + 0x28] 	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000cc4	          0x4885f6	                           test rsi, rsi	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000cc7	     0xf85f0fdffff	                           jne 0x4000abd	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000ccd	      0xe980ffffff	                           jmp 0x4000c52	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000cd2	    0x660f1f440000	                    nop word [rax + rax]	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000cd8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000cdd	            0x31c9	                            xor ecx, ecx	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000cdf	    0x41b801000000	                              mov r8d, 1	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000ce5	      0xba00000000	                              mov edx, 0	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000cea	          0x4889ee	                            mov rsi, rbp	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000ced	      0xe800000000	                          call 0x4000cf2	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000cf2	            0x85c0	                           test eax, eax	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000cf4	     0xf84f8fdffff	                            je 0x4000af2	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000cfa	      0xe910fdffff	                           jmp 0x4000a0f	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000cff	              0x90	                                     nop	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000d00	      0xbe410a0000	                          mov esi, 0xa41	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000d05	      0xbf00000000	                              mov edi, 0	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000d0a	      0xe800000000	                          call 0x4000d0f	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000d0f	        0x498b5f60	            mov rbx, qword [r15 + 0x60] 	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000d13	      0xe914fdffff	                           jmp 0x4000a2c	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000d18	     0xf1f84000000	                   nop dword [rax + rax]	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000d20	          0x4889c7	                            mov rdi, rax	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000d23	      0xe838f6ffff	call sym.bfd_generic_link_read_symbols.part.3	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000d28	            0x85c0	                           test eax, eax	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x4000d2a	     0xf84c2fdffff	                            je 0x4000af2	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x4000d30	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x4000d35	    0x488b98b00000	            mov rbx, qword [rax + 0xb0] 	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x4000d3c	      0xe985fcffff	                           jmp 0x40009c6	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x4000d41	     0xf1f80000000	                         nop dword [rax]	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x4000d48	      0xbe400a0000	                          mov esi, 0xa40	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4000d4d	      0xbf00000000	                              mov edi, 0	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4000d52	      0xe800000000	                          call 0x4000d57	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4000d57	      0xe9c3fcffff	                           jmp 0x4000a1f	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
_bfd_generic_link_hash_table_free	WHILE,0:CALL,3:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	25
0x4000070	              0x55	                                push rbp	       771	linker.c	FUNCTION_11
0x4000071	              0x53	                                push rbx	       771	linker.c	FUNCTION_11
0x4000072	          0x4889fb	                            mov rbx, rdi	       771	linker.c	FUNCTION_11
0x4000075	        0x4883ec08	                              sub rsp, 8	       771	linker.c	FUNCTION_11
0x4000079	        0xf6474804	               test byte [rdi + 0x48], 4	       774	linker.c	FUNCTION_11	CALL_1
0x400007d	            0x7439	                            je 0x40000b8	       774	linker.c	FUNCTION_11	CALL_1
0x400007f	    0x488baff00000	            mov rbp, qword [rdi + 0xf0] 	       774	linker.c	FUNCTION_11	CALL_1
0x4000086	          0x4885ed	                           test rbp, rbp	       774	linker.c	FUNCTION_11	CALL_1
0x4000089	            0x742d	                            je 0x40000b8	       774	linker.c	FUNCTION_11	CALL_1
0x400008b	          0x4889ef	                            mov rdi, rbp	       776	linker.c	FUNCTION_11	CALL_2
0x400008e	      0xe800000000	                          call 0x4000093	       776	linker.c	FUNCTION_11	CALL_2
0x4000093	          0x4889ef	                            mov rdi, rbp	       777	linker.c	FUNCTION_11	CALL_3
0x4000096	      0xe800000000	                          call 0x400009b	       777	linker.c	FUNCTION_11	CALL_3
0x400009b	    0x48c783f00000	               mov qword [rbx + 0xf0], 0	       778	linker.c	FUNCTION_11
0x40000a6	        0x806348fb	             and byte [rbx + 0x48], 0xfb	       779	linker.c	FUNCTION_11
0x40000aa	        0x4883c408	                              add rsp, 8	       780	linker.c	FUNCTION_11
0x40000ae	              0x5b	                                 pop rbx	       780	linker.c	FUNCTION_11
0x40000af	              0x5d	                                 pop rbp	       780	linker.c	FUNCTION_11
0x40000b0	              0xc3	                                     ret	       780	linker.c	FUNCTION_11
0x40000b1	     0xf1f80000000	                         nop dword [rax]	       780	linker.c	FUNCTION_11
0x40000b8	      0xbe06030000	                          mov esi, 0x306	       774	linker.c	FUNCTION_11	CALL_1
0x40000bd	      0xbf00000000	                              mov edi, 0	       774	linker.c	FUNCTION_11	CALL_1
0x40000c2	      0xe800000000	                          call 0x40000c7	       774	linker.c	FUNCTION_11	CALL_1
0x40000c7	    0x488babf00000	            mov rbp, qword [rbx + 0xf0] 	       774	linker.c	FUNCTION_11	CALL_1
0x40000ce	            0xebbb	                           jmp 0x400008b	       774	linker.c	FUNCTION_11	CALL_1
_bfd_link_hash_table_init	WHILE,0:CALL,2:DO,0:FOR,0:IF,1:ELSE,0:functions,0:SWITCH,0	34
0x40004b0	            0x4155	                                push r13	       466	linker.c	FUNCTION_2
0x40004b2	            0x4154	                                push r12	       466	linker.c	FUNCTION_2
0x40004b4	          0x4189cd	                           mov r13d, ecx	       466	linker.c	FUNCTION_2
0x40004b7	              0x55	                                push rbp	       466	linker.c	FUNCTION_2
0x40004b8	              0x53	                                push rbx	       466	linker.c	FUNCTION_2
0x40004b9	          0x4889f5	                            mov rbp, rsi	       466	linker.c	FUNCTION_2
0x40004bc	          0x4889fb	                            mov rbx, rdi	       466	linker.c	FUNCTION_2
0x40004bf	          0x4989d4	                            mov r12, rdx	       466	linker.c	FUNCTION_2
0x40004c2	        0x4883ec08	                              sub rsp, 8	       466	linker.c	FUNCTION_2
0x40004c6	        0xf6464804	               test byte [rsi + 0x48], 4	       469	linker.c	FUNCTION_2	CALL_1
0x40004ca	            0x750a	                           jne 0x40004d6	       469	linker.c	FUNCTION_2	CALL_1
0x40004cc	    0x4883bef00000	               cmp qword [rsi + 0xf0], 0	       469	linker.c	FUNCTION_2	CALL_1
0x40004d4	            0x740f	                            je 0x40004e5	       469	linker.c	FUNCTION_2	CALL_1
0x40004d6	      0xbed5010000	                          mov esi, 0x1d5	       469	linker.c	FUNCTION_2	CALL_1
0x40004db	      0xbf00000000	                              mov edi, 0	       469	linker.c	FUNCTION_2	CALL_1
0x40004e0	      0xe800000000	                          call 0x40004e5	       469	linker.c	FUNCTION_2	CALL_1
0x40004e5	    0x48c743280000	               mov qword [rbx + 0x28], 0	       470	linker.c	FUNCTION_2
0x40004ed	    0x48c743300000	               mov qword [rbx + 0x30], 0	       471	linker.c	FUNCTION_2
0x40004f5	          0x4489ea	                           mov edx, r13d	       474	linker.c	FUNCTION_2	CALL_2
0x40004f8	    0xc74340000000	               mov dword [rbx + 0x40], 0	       472	linker.c	FUNCTION_2
0x40004ff	          0x4c89e6	                            mov rsi, r12	       474	linker.c	FUNCTION_2	CALL_2
0x4000502	          0x4889df	                            mov rdi, rbx	       474	linker.c	FUNCTION_2	CALL_2
0x4000505	      0xe800000000	                          call 0x400050a	       474	linker.c	FUNCTION_2	CALL_2
0x400050a	            0x85c0	                           test eax, eax	       475	linker.c	FUNCTION_2	IF_1
0x400050c	            0x7413	                            je 0x4000521	       475	linker.c	FUNCTION_2	IF_1
0x400050e	    0x48c743380000	               mov qword [rbx + 0x38], 0	       478	linker.c	FUNCTION_2	IF_1
0x4000516	        0x804d4804	                 or byte [rbp + 0x48], 4	       480	linker.c	FUNCTION_2	IF_1
0x400051a	    0x48899df00000	            mov qword [rbp + 0xf0], rbx 	       479	linker.c	FUNCTION_2	IF_1
0x4000521	        0x4883c408	                              add rsp, 8	       483	linker.c	FUNCTION_2
0x4000525	              0x5b	                                 pop rbx	       483	linker.c	FUNCTION_2
0x4000526	              0x5d	                                 pop rbp	       483	linker.c	FUNCTION_2
0x4000527	            0x415c	                                 pop r12	       483	linker.c	FUNCTION_2
0x4000529	            0x415d	                                 pop r13	       483	linker.c	FUNCTION_2
0x400052b	              0xc3	                                     ret	       483	linker.c	FUNCTION_2
_bfd_nolink_bfd_define_start_stop	WHILE,0:CALL,1:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	2
0x40036b0	    0x488bbaf00000	            mov rdi, qword [rdx + 0xf0] 	      3504	linker.c	FUNCTION_65	CALL_1
0x40036b7	      0xe900000000	                   jmp section_end..data	      3504	linker.c	FUNCTION_65	CALL_1
_bfd_nolink_bfd_relax_section	WHILE,0:CALL,1:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	1
0x4003600	      0xe900000000	                           jmp 0x4003605	      3419	linker.c	FUNCTION_54	CALL_1
bfd_link_hash_lookup	WHILE,1:CALL,1:DO,0:FOR,0:IF,2:ELSE,0:functions,0:SWITCH,0	26
0x4000530	          0x4885ff	                           test rdi, rdi	       498	linker.c	FUNCTION_3	IF_1
0x4000533	            0x7443	                            je 0x4000578	       498	linker.c	FUNCTION_3	IF_1
0x4000535	          0x4885f6	                           test rsi, rsi	       498	linker.c	FUNCTION_3	IF_1
0x4000538	            0x743e	                            je 0x4000578	       498	linker.c	FUNCTION_3	IF_1
0x400053a	              0x53	                                push rbx	       495	linker.c	FUNCTION_3
0x400053b	          0x4489c3	                            mov ebx, r8d	       495	linker.c	FUNCTION_3
0x400053e	      0xe800000000	                          call 0x4000543	       501	linker.c	FUNCTION_3
0x4000543	            0x85db	                           test ebx, ebx	       504	linker.c	FUNCTION_3	IF_2
0x4000545	            0x7429	                            je 0x4000570	       504	linker.c	FUNCTION_3	IF_2
0x4000547	          0x4885c0	                           test rax, rax	       504	linker.c	FUNCTION_3	IF_2
0x400054a	            0x7424	                            je 0x4000570	       504	linker.c	FUNCTION_3	IF_2
0x400054c	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000550	          0x8d51fa	                      lea edx, [rcx - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000553	          0x80fa01	                               cmp dl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000556	            0x7718	                            ja 0x4000570	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000558	     0xf1f84000000	                   nop dword [rax + rax]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000560	        0x488b4028	            mov rax, qword [rax + 0x28] 	       508	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000564	         0xfb65818	           movzx ebx, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000568	          0x8d53fa	                      lea edx, [rbx - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400056b	          0x80fa01	                               cmp dl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400056e	            0x76f0	                           jbe 0x4000560	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000570	              0x5b	                                 pop rbx	       512	linker.c	FUNCTION_3
0x4000571	              0xc3	                                     ret	       512	linker.c	FUNCTION_3
0x4000572	    0x660f1f440000	                    nop word [rax + rax]	       512	linker.c	FUNCTION_3
0x4000578	            0x31c0	                            xor eax, eax	       499	linker.c	FUNCTION_3	IF_1
0x400057a	              0xc3	                                     ret	       499	linker.c	FUNCTION_3	IF_1
_bfd_nolink_bfd_link_just_syms	WHILE,0:CALL,0:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	1
0x4003660	            0xf3c3	                                     ret	      3465	linker.c	FUNCTION_60
_bfd_generic_link_hash_newfunc	WHILE,0:CALL,2:DO,0:FOR,0:IF,3:ELSE,0:functions,0:SWITCH,0	27
0x4000450	              0x53	                                push rbx	       722	linker.c	ELSE_2	FUNCTION_9
0x4000451	          0x4889f3	                            mov rbx, rsi	       722	linker.c	ELSE_2	FUNCTION_9
0x4000454	        0x4883ec10	                           sub rsp, 0x10	       722	linker.c	ELSE_2	FUNCTION_9
0x4000458	          0x4885ff	                           test rdi, rdi	       725	linker.c	ELSE_2	FUNCTION_9	IF_1
0x400045b	            0x7423	                            je 0x4000480	       725	linker.c	ELSE_2	FUNCTION_9	IF_1
0x400045d	          0x4889de	                            mov rsi, rbx	       734	linker.c	ELSE_2	FUNCTION_9	CALL_2
0x4000460	      0xe800000000	                          call 0x4000465	       734	linker.c	ELSE_2	FUNCTION_9	CALL_2
0x4000465	          0x4885c0	                           test rax, rax	       735	linker.c	ELSE_2	FUNCTION_9	IF_3
0x4000468	            0x7435	                            je 0x400049f	       735	linker.c	ELSE_2	FUNCTION_9	IF_3
0x400046a	    0xc74038000000	               mov dword [rax + 0x38], 0	       741	linker.c	ELSE_2	FUNCTION_9	IF_3
0x4000471	    0x48c740400000	               mov qword [rax + 0x40], 0	       742	linker.c	ELSE_2	FUNCTION_9	IF_3
0x4000479	        0x4883c410	                           add rsp, 0x10	       746	linker.c	ELSE_2	FUNCTION_9
0x400047d	              0x5b	                                 pop rbx	       746	linker.c	ELSE_2	FUNCTION_9
0x400047e	              0xc3	                                     ret	       746	linker.c	ELSE_2	FUNCTION_9
0x400047f	              0x90	                                     nop	       746	linker.c	ELSE_2	FUNCTION_9
0x4000480	          0x4889df	                            mov rdi, rbx	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x4000483	      0xbe48000000	                           mov esi, 0x48	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x4000488	      0x4889542408	                mov qword [rsp + 8], rdx	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x400048d	      0xe800000000	                          call 0x4000492	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x4000492	          0x4885c0	                           test rax, rax	       729	linker.c	ELSE_2	FUNCTION_9	IF_1	IF_2
0x4000495	          0x4889c7	                            mov rdi, rax	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x4000498	      0x488b542408	                mov rdx, qword [rsp + 8]	       729	linker.c	ELSE_2	FUNCTION_9	IF_1	IF_2
0x400049d	            0x75be	                           jne 0x400045d	       729	linker.c	ELSE_2	FUNCTION_9	IF_1	IF_2
0x400049f	        0x4883c410	                           add rsp, 0x10	       746	linker.c	ELSE_2	FUNCTION_9
0x40004a3	            0x31c0	                            xor eax, eax	       746	linker.c	ELSE_2	FUNCTION_9
0x40004a5	              0x5b	                                 pop rbx	       746	linker.c	ELSE_2	FUNCTION_9
0x40004a6	              0xc3	                                     ret	       746	linker.c	ELSE_2	FUNCTION_9
_bfd_handle_already_linked	WHILE,0:CALL,18:DO,0:FOR,0:IF,11:ELSE,5:functions,0:SWITCH,1	157
0x4002cd0	            0x4156	                                push r14	      2816	linker.c	FUNCTION_40
0x4002cd2	            0x4155	                                push r13	      2816	linker.c	FUNCTION_40
0x4002cd4	            0x4154	                                push r12	      2816	linker.c	FUNCTION_40
0x4002cd6	              0x55	                                push rbp	      2816	linker.c	FUNCTION_40
0x4002cd7	          0x4989d4	                            mov r12, rdx	      2816	linker.c	FUNCTION_40
0x4002cda	              0x53	                                push rbx	      2816	linker.c	FUNCTION_40
0x4002cdb	          0x4889f5	                            mov rbp, rsi	      2816	linker.c	FUNCTION_40
0x4002cde	          0x4889fb	                            mov rbx, rdi	      2816	linker.c	FUNCTION_40
0x4002ce1	        0x4883ec20	                           sub rsp, 0x20	      2816	linker.c	FUNCTION_40
0x4002ce5	    0x64488b042528	                mov rax, qword fs:[0x28]	      2816	linker.c	FUNCTION_40
0x4002cee	      0x4889442418	             mov qword [rsp + 0x18], rax	      2816	linker.c	FUNCTION_40
0x4002cf3	            0x31c0	                            xor eax, eax	      2816	linker.c	FUNCTION_40
0x4002cf5	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002cf8	      0x2500000c00	                        and eax, 0xc0000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002cfd	      0x3d00000400	                        cmp eax, 0x40000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002d02	     0xf84f8000000	                            je 0x4002e00	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002d08	     0xf86a2000000	                           jbe 0x4002db0	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002d0e	      0x3d00000800	                        cmp eax, 0x80000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002d13	            0x745b	                            je 0x4002d70	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002d15	      0x3d00000c00	                        cmp eax, 0xc0000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002d1a	     0xf85c8000000	                           jne 0x4002de8	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002d20	        0x488b4608	                mov rax, qword [rsi + 8]	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4002d24	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4002d2b	        0xf6424620	           test byte [rdx + 0x46], 0x20 	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4002d2f	     0xf840b010000	                            je 0x4002e40	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4002d35	           0xf1f00	                         nop dword [rax]	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4002d38	    0x488983c80000	             mov qword [rbx + 0xc8], rax	      2897	linker.c	FUNCTION_40
0x4002d3f	    0x48c743680000	               mov qword [rbx + 0x68], 0	      2896	linker.c	FUNCTION_40
0x4002d47	      0xb801000000	                              mov eax, 1	      2898	linker.c	FUNCTION_40
0x4002d4c	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2899	linker.c	FUNCTION_40
0x4002d51	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2899	linker.c	FUNCTION_40
0x4002d5a	     0xf8507020000	                           jne 0x4002f67	      2899	linker.c	FUNCTION_40
0x4002d60	        0x4883c420	                           add rsp, 0x20	      2899	linker.c	FUNCTION_40
0x4002d64	              0x5b	                                 pop rbx	      2899	linker.c	FUNCTION_40
0x4002d65	              0x5d	                                 pop rbp	      2899	linker.c	FUNCTION_40
0x4002d66	            0x415c	                                 pop r12	      2899	linker.c	FUNCTION_40
0x4002d68	            0x415d	                                 pop r13	      2899	linker.c	FUNCTION_40
0x4002d6a	            0x415e	                                 pop r14	      2899	linker.c	FUNCTION_40
0x4002d6c	              0xc3	                                     ret	      2899	linker.c	FUNCTION_40
0x4002d6d	           0xf1f00	                         nop dword [rax]	      2899	linker.c	FUNCTION_40
0x4002d70	        0x488b4608	                mov rax, qword [rsi + 8]	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x4002d74	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x4002d7b	        0xf6424620	           test byte [rdx + 0x46], 0x20 	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x4002d7f	            0x75b7	                           jne 0x4002d38	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x4002d81	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x4002d85	        0x48394f38	            cmp qword [rdi + 0x38], rcx 	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x4002d89	            0x74ad	                            je 0x4002d38	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x4002d8b	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002d90	    0x4c8babf00000	            mov r13, qword [rbx + 0xf0] 	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002d97	      0xba05000000	                              mov edx, 5	      2860	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_7
0x4002d9c	      0xbe00000000	                              mov esi, 0	      2860	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_7
0x4002da1	        0x4c8b6058	            mov r12, qword [rax + 0x58] 	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002da5	            0xeb72	                           jmp 0x4002e19	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002da7	    0x660f1f840000	                    nop word [rax + rax]	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002db0	            0x85c0	                           test eax, eax	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002db2	            0x7534	                           jne 0x4002de8	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002db4	    0x488b87f00000	            mov rax, qword [rdi + 0xf0] 	      2829	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002dbb	        0xf6404840	           test byte [rax + 0x48], 0x40 	      2829	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002dbf	        0x488b4608	                mov rax, qword [rsi + 8]	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002dc3	     0xf846fffffff	                            je 0x4002d38	      2829	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002dc9	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002dd0	        0xf6424620	           test byte [rdx + 0x46], 0x20 	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002dd4	     0xf845effffff	                            je 0x4002d38	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002dda	        0x48897d08	                mov qword [rbp + 8], rdi	      2832	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002dde	            0x31c0	                            xor eax, eax	      2833	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002de0	      0xe967ffffff	                           jmp 0x4002d4c	      2833	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002de5	           0xf1f00	                         nop dword [rax]	      2833	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002de8	      0xba00000000	                              mov edx, 0	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x4002ded	      0xbe040b0000	                          mov esi, 0xb04	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x4002df2	      0xbf00000000	                              mov edi, 0	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x4002df7	      0xe800000000	                          call 0x4002dfc	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x4002dfc	         0xf1f4000	                         nop dword [rax]	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x4002e00	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4002e04	    0x4c8baff00000	            mov r13, qword [rdi + 0xf0] 	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4002e0b	      0xba05000000	                              mov edx, 5	      2840	linker.c	FUNCTION_40	SWITCH_1	CALL_3
0x4002e10	      0xbe00000000	                              mov esi, 0	      2840	linker.c	FUNCTION_40	SWITCH_1	CALL_3
0x4002e15	        0x4c8b6058	            mov r12, qword [rax + 0x58] 	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4002e19	      0xbf00000000	                              mov edi, 0	      2860	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_7
0x4002e1e	      0xe800000000	                          call 0x4002e23	      2860	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_7
0x4002e23	          0x4889da	                            mov rdx, rbx	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002e26	          0x4889c7	                            mov rdi, rax	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002e29	          0x4c89ee	                            mov rsi, r13	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002e2c	            0x31c0	                            xor eax, eax	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002e2e	          0x41ffd4	                                call r12	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002e31	        0x488b4508	                mov rax, qword [rbp + 8]	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002e35	      0xe9fefeffff	                           jmp 0x4002d38	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002e3a	    0x660f1f440000	                    nop word [rax + rax]	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002e40	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x4002e44	        0x483b5038	            cmp rdx, qword [rax + 0x38] 	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x4002e48	     0xf853dffffff	                           jne 0x4002d8b	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x4002e4e	          0x4885d2	                           test rdx, rdx	      2862	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6
0x4002e51	     0xf84e1feffff	                            je 0x4002d38	      2862	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6
0x4002e57	    0x488bbff00000	            mov rdi, qword [rdi + 0xf0] 	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4002e5e	      0x488d542408	                      lea rdx, [rsp + 8]	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4002e63	          0x4889de	                            mov rsi, rbx	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4002e66	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2864	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6
0x4002e6f	      0xe800000000	                          call 0x4002e74	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4002e74	            0x85c0	                           test eax, eax	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4002e76	            0x755c	                           jne 0x4002ed4	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4002e78	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4002e7d	    0x4c8babf00000	            mov r13, qword [rbx + 0xf0] 	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4002e84	      0xba05000000	                              mov edx, 5	      2869	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_10
0x4002e89	      0xbe00000000	                              mov esi, 0	      2869	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_10
0x4002e8e	        0x4c8b6058	            mov r12, qword [rax + 0x58] 	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4002e92	      0xbf00000000	                              mov edi, 0	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x4002e97	      0xe800000000	                          call 0x4002e9c	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x4002e9c	          0x4c89ee	                            mov rsi, r13	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002e9f	          0x4889c7	                            mov rdi, rax	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002ea2	          0x4889da	                            mov rdx, rbx	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002ea5	            0x31c0	                            xor eax, eax	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002ea7	          0x41ffd4	                                call r12	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002eaa	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002eaf	          0x4d85ed	                           test r13, r13	      2883	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_10
0x4002eb2	            0x7408	                            je 0x4002ebc	      2883	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_10
0x4002eb4	          0x4c89ef	                            mov rdi, r13	      2884	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_17
0x4002eb7	      0xe800000000	                          call 0x4002ebc	      2884	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_17
0x4002ebc	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2885	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_11
0x4002ec1	          0x4885ff	                           test rdi, rdi	      2885	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_11
0x4002ec4	            0x7405	                            je 0x4002ecb	      2885	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_11
0x4002ec6	      0xe800000000	                          call 0x4002ecb	      2886	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_18
0x4002ecb	        0x488b4508	                mov rax, qword [rbp + 8]	      2886	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_18
0x4002ecf	      0xe964feffff	                           jmp 0x4002d38	      2886	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_18
0x4002ed4	        0x488b7508	                mov rsi, qword [rbp + 8]	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4002ed8	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4002edd	    0x488bbef00000	            mov rdi, qword [rsi + 0xf0] 	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4002ee4	      0xe800000000	                          call 0x4002ee9	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4002ee9	            0x85c0	                           test eax, eax	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4002eeb	            0x7439	                            je 0x4002f26	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4002eed	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4002ef2	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4002ef6	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4002efb	          0x4c89ef	                            mov rdi, r13	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4002efe	      0xe800000000	                          call 0x4002f03	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4002f03	            0x85c0	                           test eax, eax	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4002f05	            0x74ad	                            je 0x4002eb4	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4002f07	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002f0c	    0x4c8babf00000	            mov r13, qword [rbx + 0xf0] 	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002f13	      0xba05000000	                              mov edx, 5	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x4002f18	      0xbe00000000	                              mov esi, 0	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x4002f1d	        0x4c8b6058	            mov r12, qword [rax + 0x58] 	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002f21	      0xe96cffffff	                           jmp 0x4002e92	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002f26	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002f2b	        0x4c8b6508	                mov r12, qword [rbp + 8]	      2876	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8
0x4002f2f	      0xba05000000	                              mov edx, 5	      2875	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_13
0x4002f34	      0xbe00000000	                              mov esi, 0	      2875	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_13
0x4002f39	      0xbf00000000	                              mov edi, 0	      2875	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_13
0x4002f3e	    0x4d8bb424f000	            mov r14, qword [r12 + 0xf0] 	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002f46	        0x4c8b6858	            mov r13, qword [rax + 0x58] 	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002f4a	      0xe800000000	                          call 0x4002f4f	      2875	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_13
0x4002f4f	          0x4c89e2	                            mov rdx, r12	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002f52	          0x4889c7	                            mov rdi, rax	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002f55	            0x31c0	                            xor eax, eax	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002f57	          0x4c89f6	                            mov rsi, r14	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002f5a	          0x41ffd5	                                call r13	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002f5d	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002f62	      0xe948ffffff	                           jmp 0x4002eaf	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002f67	      0xe800000000	                          call 0x4002f6c	      2899	linker.c	FUNCTION_40
bfd_link_add_undef	WHILE,0:CALL,1:DO,0:FOR,0:IF,2:ELSE,0:functions,0:SWITCH,0	28
0x4000ec0	              0x55	                                push rbp	       668	linker.c	FUNCTION_7
0x4000ec1	              0x53	                                push rbx	       668	linker.c	FUNCTION_7
0x4000ec2	          0x4889f5	                            mov rbp, rsi	       668	linker.c	FUNCTION_7
0x4000ec5	          0x4889fb	                            mov rbx, rdi	       668	linker.c	FUNCTION_7
0x4000ec8	        0x4883ec08	                              sub rsp, 8	       668	linker.c	FUNCTION_7
0x4000ecc	      0x48837e2000	               cmp qword [rsi + 0x20], 0	       669	linker.c	FUNCTION_7	CALL_1
0x4000ed1	            0x740f	                            je 0x4000ee2	       669	linker.c	FUNCTION_7	CALL_1
0x4000ed3	      0xbe9d020000	                          mov esi, 0x29d	       669	linker.c	FUNCTION_7	CALL_1
0x4000ed8	      0xbf00000000	                              mov edi, 0	       669	linker.c	FUNCTION_7	CALL_1
0x4000edd	      0xe800000000	                          call 0x4000ee2	       669	linker.c	FUNCTION_7	CALL_1
0x4000ee2	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       670	linker.c	FUNCTION_7	IF_1
0x4000ee6	          0x4885c0	                           test rax, rax	       670	linker.c	FUNCTION_7	IF_1
0x4000ee9	            0x7404	                            je 0x4000eef	       670	linker.c	FUNCTION_7	IF_1
0x4000eeb	        0x48896820	             mov qword [rax + 0x20], rbp	       671	linker.c	FUNCTION_7	IF_1
0x4000eef	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       672	linker.c	FUNCTION_7	IF_2
0x4000ef4	            0x7412	                            je 0x4000f08	       672	linker.c	FUNCTION_7	IF_2
0x4000ef6	        0x48896b30	             mov qword [rbx + 0x30], rbp	       674	linker.c	FUNCTION_7
0x4000efa	        0x4883c408	                              add rsp, 8	       675	linker.c	FUNCTION_7
0x4000efe	              0x5b	                                 pop rbx	       675	linker.c	FUNCTION_7
0x4000eff	              0x5d	                                 pop rbp	       675	linker.c	FUNCTION_7
0x4000f00	              0xc3	                                     ret	       675	linker.c	FUNCTION_7
0x4000f01	     0xf1f80000000	                         nop dword [rax]	       675	linker.c	FUNCTION_7
0x4000f08	        0x48896b28	             mov qword [rbx + 0x28], rbp	       673	linker.c	FUNCTION_7	IF_2
0x4000f0c	        0x48896b30	             mov qword [rbx + 0x30], rbp	       674	linker.c	FUNCTION_7
0x4000f10	        0x4883c408	                              add rsp, 8	       675	linker.c	FUNCTION_7
0x4000f14	              0x5b	                                 pop rbx	       675	linker.c	FUNCTION_7
0x4000f15	              0x5d	                                 pop rbp	       675	linker.c	FUNCTION_7
0x4000f16	              0xc3	                                     ret	       675	linker.c	FUNCTION_7
bfd_generic_define_start_stop	WHILE,0:CALL,1:DO,0:FOR,0:IF,1:ELSE,0:functions,0:SWITCH,0	25
0x4003320	              0x53	                                push rbx	      3160	linker.c	FUNCTION_47
0x4003321	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	      3163	linker.c	FUNCTION_47	CALL_1
0x4003325	            0x31c9	                            xor ecx, ecx	      3163	linker.c	FUNCTION_47	CALL_1
0x4003327	          0x4889d3	                            mov rbx, rdx	      3160	linker.c	FUNCTION_47
0x400332a	    0x41b801000000	                              mov r8d, 1	      3163	linker.c	FUNCTION_47	CALL_1
0x4003330	            0x31d2	                            xor edx, edx	      3163	linker.c	FUNCTION_47	CALL_1
0x4003332	      0xe800000000	                          call 0x4003337	      3163	linker.c	FUNCTION_47	CALL_1
0x4003337	          0x4885c0	                           test rax, rax	      3164	linker.c	FUNCTION_47	IF_1
0x400333a	            0x742c	                            je 0x4003368	      3164	linker.c	FUNCTION_47	IF_1
0x400333c	          0x4889c2	                            mov rdx, rax	      3164	linker.c	FUNCTION_47	IF_1
0x400333f	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      3165	linker.c	FUNCTION_47	IF_1
0x4003343	          0x8d48ff	                      lea ecx, [rax - 1]	      3165	linker.c	FUNCTION_47	IF_1
0x4003346	            0x31c0	                            xor eax, eax	      3173	linker.c	FUNCTION_47
0x4003348	          0x80f901	                               cmp cl, 1	      3165	linker.c	FUNCTION_47	IF_1
0x400334b	            0x7713	                            ja 0x4003360	      3165	linker.c	FUNCTION_47	IF_1
0x400334d	        0xc6421803	                mov byte [rdx + 0x18], 3	      3168	linker.c	FUNCTION_47	IF_1
0x4003351	        0x48895a28	             mov qword [rdx + 0x28], rbx	      3169	linker.c	FUNCTION_47	IF_1
0x4003355	          0x4889d0	                            mov rax, rdx	      3171	linker.c	FUNCTION_47	IF_1
0x4003358	    0x48c742300000	               mov qword [rdx + 0x30], 0	      3170	linker.c	FUNCTION_47	IF_1
0x4003360	              0x5b	                                 pop rbx	      3174	linker.c	FUNCTION_47
0x4003361	              0xc3	                                     ret	      3174	linker.c	FUNCTION_47
0x4003362	    0x660f1f440000	                    nop word [rax + rax]	      3174	linker.c	FUNCTION_47
0x4003368	            0x31c0	                            xor eax, eax	      3173	linker.c	FUNCTION_47
0x400336a	              0x5b	                                 pop rbx	      3174	linker.c	FUNCTION_47
0x400336b	              0xc3	                                     ret	      3174	linker.c	FUNCTION_47
_bfd_fix_excluded_sec_syms	WHILE,0:CALL,1:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	4
0x4003220	          0x4889fa	                            mov rdx, rdi	      3050	linker.c	FUNCTION_44
0x4003223	        0x488b7e28	            mov rdi, qword [rsi + 0x28] 	      3051	linker.c	FUNCTION_44	CALL_1
0x4003227	      0xbe00000000	                              mov esi, 0	      3051	linker.c	FUNCTION_44	CALL_1
0x400322c	      0xe9ffdbffff	          jmp sym.bfd_link_hash_traverse	      3051	linker.c	FUNCTION_44	CALL_1
bfd_generic_define_common_symbol	WHILE,0:CALL,3:DO,0:FOR,0:IF,1:ELSE,0:functions,0:SWITCH,0	61
0x4003240	            0x4157	                                push r15	      3076	linker.c	FUNCTION_45
0x4003242	            0x4156	                                push r14	      3076	linker.c	FUNCTION_45
0x4003244	            0x4155	                                push r13	      3076	linker.c	FUNCTION_45
0x4003246	            0x4154	                                push r12	      3076	linker.c	FUNCTION_45
0x4003248	          0x4989d4	                            mov r12, rdx	      3076	linker.c	FUNCTION_45
0x400324b	              0x55	                                push rbp	      3076	linker.c	FUNCTION_45
0x400324c	              0x53	                                push rbx	      3076	linker.c	FUNCTION_45
0x400324d	          0x4889fb	                            mov rbx, rdi	      3076	linker.c	FUNCTION_45
0x4003250	        0x4883ec08	                              sub rsp, 8	      3076	linker.c	FUNCTION_45
0x4003254	          0x4885d2	                           test rdx, rdx	      3081	linker.c	FUNCTION_45	CALL_1
0x4003257	            0x7406	                            je 0x400325f	      3081	linker.c	FUNCTION_45	CALL_1
0x4003259	        0x807a1805	                cmp byte [rdx + 0x18], 5	      3081	linker.c	FUNCTION_45	CALL_1
0x400325d	            0x740f	                            je 0x400326e	      3081	linker.c	FUNCTION_45	CALL_1
0x400325f	      0xbe090c0000	                          mov esi, 0xc09	      3081	linker.c	FUNCTION_45	CALL_1
0x4003264	      0xbf00000000	                              mov edi, 0	      3081	linker.c	FUNCTION_45	CALL_1
0x4003269	      0xe800000000	                          call 0x400326e	      3081	linker.c	FUNCTION_45	CALL_1
0x400326e	      0x498b442428	            mov rax, qword [r12 + 0x28] 	      3084	linker.c	FUNCTION_45
0x4003273	          0x4889df	                            mov rdi, rbx	      3089	linker.c	FUNCTION_45	CALL_2
0x4003276	      0x4d8b6c2430	            mov r13, qword [r12 + 0x30] 	      3083	linker.c	FUNCTION_45
0x400327b	          0x448b30	                   mov r14d, dword [rax]	      3084	linker.c	FUNCTION_45
0x400327e	        0x488b6808	                mov rbp, qword [rax + 8]	      3085	linker.c	FUNCTION_45
0x4003282	      0xe800000000	                          call 0x4003287	      3089	linker.c	FUNCTION_45	CALL_2
0x4003287	          0x4489f1	                           mov ecx, r14d	      3089	linker.c	FUNCTION_45	CALL_2
0x400328a	            0xd3e0	                             shl eax, cl	      3089	linker.c	FUNCTION_45	CALL_2
0x400328c	          0x4189c7	                           mov r15d, eax	      3089	linker.c	FUNCTION_45	CALL_2
0x400328f	          0x4c89fb	                            mov rbx, r15	      3089	linker.c	FUNCTION_45	CALL_2
0x4003292	          0x48f7db	                                 neg rbx	      3089	linker.c	FUNCTION_45	CALL_2
0x4003295	            0x85c0	                           test eax, eax	      3090	linker.c	FUNCTION_45	CALL_3
0x4003297	            0x740b	                            je 0x40032a4	      3090	linker.c	FUNCTION_45	CALL_3
0x4003299	          0x4c89f8	                            mov rax, r15	      3090	linker.c	FUNCTION_45	CALL_3
0x400329c	          0x4821d8	                            and rax, rbx	      3090	linker.c	FUNCTION_45	CALL_3
0x400329f	          0x4939c7	                            cmp r15, rax	      3090	linker.c	FUNCTION_45	CALL_3
0x40032a2	            0x740f	                            je 0x40032b3	      3090	linker.c	FUNCTION_45	CALL_3
0x40032a4	      0xbe120c0000	                          mov esi, 0xc12	      3090	linker.c	FUNCTION_45	CALL_3
0x40032a9	      0xbf00000000	                              mov edi, 0	      3090	linker.c	FUNCTION_45	CALL_3
0x40032ae	      0xe800000000	                          call 0x40032b3	      3090	linker.c	FUNCTION_45	CALL_3
0x40032b3	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      3092	linker.c	FUNCTION_45
0x40032b7	      0x498d4407ff	                lea rax, [r15 + rax - 1]	      3092	linker.c	FUNCTION_45
0x40032bc	          0x4821d8	                            and rax, rbx	      3092	linker.c	FUNCTION_45
0x40032bf	        0x443b7570	           cmp r14d, dword [rbp + 0x70] 	      3095	linker.c	FUNCTION_45	IF_1
0x40032c3	        0x48894538	            mov qword [rbp + 0x38], rax 	      3092	linker.c	FUNCTION_45
0x40032c7	            0x7604	                           jbe 0x40032cd	      3095	linker.c	FUNCTION_45	IF_1
0x40032c9	        0x44897570	           mov dword [rbp + 0x70], r14d 	      3096	linker.c	FUNCTION_45	IF_1
0x40032cd	      0x4989442430	             mov qword [r12 + 0x30], rax	      3101	linker.c	FUNCTION_45
0x40032d2	          0x4c01e8	                            add rax, r13	      3104	linker.c	FUNCTION_45
0x40032d5	      0x49896c2428	             mov qword [r12 + 0x28], rbp	      3100	linker.c	FUNCTION_45
0x40032da	    0x41c644241803	                mov byte [r12 + 0x18], 3	      3099	linker.c	FUNCTION_45
0x40032e0	        0x48894538	            mov qword [rbp + 0x38], rax 	      3104	linker.c	FUNCTION_45
0x40032e4	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      3109	linker.c	FUNCTION_45
0x40032e7	          0x80e4ef	                            and ah, 0xef	      3109	linker.c	FUNCTION_45
0x40032ea	          0x83c801	                               or eax, 1	      3109	linker.c	FUNCTION_45
0x40032ed	          0x894520	            mov dword [rbp + 0x20], eax 	      3109	linker.c	FUNCTION_45
0x40032f0	        0x4883c408	                              add rsp, 8	      3111	linker.c	FUNCTION_45
0x40032f4	      0xb801000000	                              mov eax, 1	      3111	linker.c	FUNCTION_45
0x40032f9	              0x5b	                                 pop rbx	      3111	linker.c	FUNCTION_45
0x40032fa	              0x5d	                                 pop rbp	      3111	linker.c	FUNCTION_45
0x40032fb	            0x415c	                                 pop r12	      3111	linker.c	FUNCTION_45
0x40032fd	            0x415d	                                 pop r13	      3111	linker.c	FUNCTION_45
0x40032ff	            0x415e	                                 pop r14	      3111	linker.c	FUNCTION_45
0x4003301	            0x415f	                                 pop r15	      3111	linker.c	FUNCTION_45
0x4003303	              0xc3	                                     ret	      3111	linker.c	FUNCTION_45
generic_link_check_archive_element	WHILE,0:CALL,16:DO,0:FOR,1:IF,10:ELSE,2:functions,0:SWITCH,0	134
0x4000580	            0x4157	                                push r15	      1024	linker.c	FUNCTION_18
0x4000582	            0x4156	                                push r14	      1024	linker.c	FUNCTION_18
0x4000584	            0x4155	                                push r13	      1024	linker.c	FUNCTION_18
0x4000586	            0x4154	                                push r12	      1024	linker.c	FUNCTION_18
0x4000588	          0x4989f5	                            mov r13, rsi	      1024	linker.c	FUNCTION_18
0x400058b	              0x55	                                push rbp	      1024	linker.c	FUNCTION_18
0x400058c	              0x53	                                push rbx	      1024	linker.c	FUNCTION_18
0x400058d	        0x4883ec28	                           sub rsp, 0x28	      1024	linker.c	FUNCTION_18
0x4000591	    0x488b9fb00000	            mov rbx, qword [rdi + 0xb0] 	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4000598	    0x41c700000000	                       mov dword [r8], 0	      1027	linker.c	FUNCTION_18
0x400059f	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      1024	linker.c	FUNCTION_18
0x40005a4	      0x4c89442410	              mov qword [rsp + 0x10], r8	      1024	linker.c	FUNCTION_18
0x40005a9	          0x4885db	                           test rbx, rbx	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x40005ac	     0xf8442010000	                            je 0x40006f4	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x40005b2	    0x8b87b8000000	            mov eax, dword [rdi + 0xb8] 	      1033	linker.c	FUNCTION_18	CALL_3
0x40005b8	        0x4c8d24c3	                  lea r12, [rbx + rax*8]	      1033	linker.c	FUNCTION_18	CALL_3
0x40005bc	          0x4939dc	                            cmp r12, rbx	      1034	linker.c	FUNCTION_18	FOR_1
0x40005bf	            0x7734	                            ja 0x40005f5	      1034	linker.c	FUNCTION_18	FOR_1
0x40005c1	      0xe91a010000	                           jmp 0x40006e0	      1034	linker.c	FUNCTION_18	FOR_1
0x40005c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1034	linker.c	FUNCTION_18	FOR_1
0x40005d0	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x40005d4	        0x48034128	             add rax, qword [rcx + 0x28]	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x40005d8	        0x493b4730	            cmp rax, qword [r15 + 0x30] 	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x40005dc	            0x760a	                           jbe 0x40005e8	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x40005de	        0x49894730	             mov qword [r15 + 0x30], rax	      1121	linker.c	FUNCTION_18	FOR_1	ELSE_2	CALL_16
0x40005e2	    0x660f1f440000	                    nop word [rax + rax]	      1121	linker.c	FUNCTION_18	FOR_1	ELSE_2	CALL_16
0x40005e8	        0x4883c308	                              add rbx, 8	      1034	linker.c	FUNCTION_18	FOR_1
0x40005ec	          0x4939dc	                            cmp r12, rbx	      1034	linker.c	FUNCTION_18	FOR_1
0x40005ef	     0xf86eb000000	                           jbe 0x40006e0	      1034	linker.c	FUNCTION_18	FOR_1
0x40005f5	          0x488b2b	                    mov rbp, qword [rbx]	      1038	linker.c	FUNCTION_18	FOR_1
0x40005f8	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1041	linker.c	FUNCTION_18	FOR_1	IF_2	CALL_4
0x40005fc	        0xf6402110	           test byte [rax + 0x21], 0x10 	      1041	linker.c	FUNCTION_18	FOR_1	IF_2	CALL_4
0x4000600	            0x7509	                           jne 0x400060b	      1041	linker.c	FUNCTION_18	FOR_1	IF_2	CALL_4
0x4000602	    0xf74518822000	        test dword [rbp + 0x18], 0x2082 	      1042	linker.c	FUNCTION_18	FOR_1	IF_2
0x4000609	            0x74dd	                            je 0x40005e8	      1042	linker.c	FUNCTION_18	FOR_1	IF_2
0x400060b	        0x488b7508	                mov rsi, qword [rbp + 8]	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x400060f	        0x498b7d28	            mov rdi, qword [r13 + 0x28] 	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000613	            0x31c9	                            xor ecx, ecx	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000615	            0x31d2	                            xor edx, edx	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000617	    0x41b801000000	                              mov r8d, 1	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x400061d	      0xe800000000	                          call 0x4000622	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000622	          0x4885c0	                           test rax, rax	      1052	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000625	          0x4989c7	                            mov r15, rax	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000628	            0x74be	                            je 0x40005e8	      1052	linker.c	FUNCTION_18	FOR_1	IF_3
0x400062a	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x400062e	            0x89c1	                            mov ecx, eax	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000630	          0x83e1fb	                     and ecx, 0xfffffffb	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000633	          0x80f901	                               cmp cl, 1	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000636	            0x75b0	                           jne 0x40005e8	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000638	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      1059	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_7
0x400063c	        0xf6412110	           test byte [rcx + 0x21], 0x10 	      1059	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_7
0x4000640	     0xf84c8000000	                            je 0x400070e	      1059	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_7
0x4000646	            0x3c01	                               cmp al, 1	      1060	linker.c	FUNCTION_18	FOR_1	IF_4
0x4000648	            0x7586	                           jne 0x40005d0	      1060	linker.c	FUNCTION_18	FOR_1	IF_4
0x400064a	        0x4d8b7728	            mov r14, qword [r15 + 0x28] 	      1061	linker.c	FUNCTION_18	FOR_1	IF_4
0x400064e	          0x4d85f6	                           test r14, r14	      1061	linker.c	FUNCTION_18	FOR_1	IF_4
0x4000651	     0xf84b7000000	                            je 0x400070e	      1061	linker.c	FUNCTION_18	FOR_1	IF_4
0x4000657	        0x498b7d28	            mov rdi, qword [r13 + 0x28] 	      1094	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_10
0x400065b	      0x41c6471805	                mov byte [r15 + 0x18], 5	      1092	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000660	      0xbe10000000	                           mov esi, 0x10	      1094	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_10
0x4000665	      0xe800000000	                          call 0x400066a	      1094	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_10
0x400066a	          0x4885c0	                           test rax, rax	      1096	linker.c	FUNCTION_18	FOR_1	IF_6	IF_7
0x400066d	        0x49894728	             mov qword [r15 + 0x28], rax	      1093	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000671	     0xf8486000000	                            je 0x40006fd	      1096	linker.c	FUNCTION_18	FOR_1	IF_6	IF_7
0x4000677	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x400067b	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x400067f	        0x48037828	             add rdi, qword [rax + 0x28]	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x4000683	        0x49897f30	             mov qword [r15 + 0x30], rdi	      1100	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000687	      0xe800000000	                          call 0x400068c	      1102	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_12
0x400068c	        0x4d8b4728	              mov r8, qword [r15 + 0x28]	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000690	          0x83f804	                              cmp eax, 4	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000693	      0xba04000000	                              mov edx, 4	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000698	           0xf47c2	                          cmova eax, edx	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x400069b	          0x418900	                     mov dword [r8], eax	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x400069e	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1107	linker.c	FUNCTION_18	FOR_1	IF_6	IF_9
0x40006a2	      0x4c89442408	                 mov qword [rsp + 8], r8	      1107	linker.c	FUNCTION_18	FOR_1	IF_6	IF_9
0x40006a7	    0x483d00000000	                              cmp rax, 0	      1107	linker.c	FUNCTION_18	FOR_1	IF_6	IF_9
0x40006ad	     0xf8495000000	                            je 0x4000748	      1107	linker.c	FUNCTION_18	FOR_1	IF_6	IF_9
0x40006b3	          0x488b30	                    mov rsi, qword [rax]	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x40006b6	          0x4c89f7	                            mov rdi, r14	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x40006b9	      0xe800000000	                          call 0x40006be	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x40006be	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x40006c3	        0x49894008	                 mov qword [r8 + 8], rax	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x40006c7	        0x498b4728	            mov rax, qword [r15 + 0x28] 	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x40006cb	        0x4883c308	                              add rbx, 8	      1034	linker.c	FUNCTION_18	FOR_1
0x40006cf	        0x488b4008	                mov rax, qword [rax + 8]	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x40006d3	        0x83482001	                or dword [rax + 0x20], 1	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x40006d7	          0x4939dc	                            cmp r12, rbx	      1034	linker.c	FUNCTION_18	FOR_1
0x40006da	     0xf8715ffffff	                            ja 0x40005f5	      1034	linker.c	FUNCTION_18	FOR_1
0x40006e0	      0xb801000000	                              mov eax, 1	      1126	linker.c	FUNCTION_18
0x40006e5	        0x4883c428	                           add rsp, 0x28	      1127	linker.c	FUNCTION_18
0x40006e9	              0x5b	                                 pop rbx	      1127	linker.c	FUNCTION_18
0x40006ea	              0x5d	                                 pop rbp	      1127	linker.c	FUNCTION_18
0x40006eb	            0x415c	                                 pop r12	      1127	linker.c	FUNCTION_18
0x40006ed	            0x415d	                                 pop r13	      1127	linker.c	FUNCTION_18
0x40006ef	            0x415e	                                 pop r14	      1127	linker.c	FUNCTION_18
0x40006f1	            0x415f	                                 pop r15	      1127	linker.c	FUNCTION_18
0x40006f3	              0xc3	                                     ret	      1127	linker.c	FUNCTION_18
0x40006f4	      0xe867fcffff	call sym.bfd_generic_link_read_symbols.part.3	      1127	linker.c	FUNCTION_18
0x40006f9	            0x85c0	                           test eax, eax	      1029	linker.c	FUNCTION_18	IF_1	CALL_1
0x40006fb	            0x7566	                           jne 0x4000763	      1029	linker.c	FUNCTION_18	IF_1	CALL_1
0x40006fd	        0x4883c428	                           add rsp, 0x28	      1127	linker.c	FUNCTION_18
0x4000701	            0x31c0	                            xor eax, eax	      1030	linker.c	FUNCTION_18	IF_1
0x4000703	              0x5b	                                 pop rbx	      1127	linker.c	FUNCTION_18
0x4000704	              0x5d	                                 pop rbp	      1127	linker.c	FUNCTION_18
0x4000705	            0x415c	                                 pop r12	      1127	linker.c	FUNCTION_18
0x4000707	            0x415d	                                 pop r13	      1127	linker.c	FUNCTION_18
0x4000709	            0x415e	                                 pop r14	      1127	linker.c	FUNCTION_18
0x400070b	            0x415f	                                 pop r15	      1127	linker.c	FUNCTION_18
0x400070d	              0xc3	                                     ret	      1127	linker.c	FUNCTION_18
0x400070e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1066	linker.c	FUNCTION_18	FOR_1	IF_4
0x4000713	        0x488b5508	                mov rdx, qword [rbp + 8]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000717	      0x488d4c2418	                   lea rcx, [rsp + 0x18]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x400071c	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000721	          0x4c89ef	                            mov rdi, r13	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000724	    0xc70001000000	                      mov dword [rax], 1	      1066	linker.c	FUNCTION_18	FOR_1	IF_4
0x400072a	        0x498b4520	            mov rax, qword [r13 + 0x20] 	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x400072e	            0xff10	                        call qword [rax]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000730	            0x85c0	                           test eax, eax	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000732	            0x74c9	                            je 0x40006fd	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4000734	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4000739	          0x4c89ee	                            mov rsi, r13	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x400073c	        0x488b4708	                mov rax, qword [rdi + 8]	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4000740	    0xff90c0020000	                call qword [rax + 0x2c0]	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4000746	            0xeb9d	                           jmp 0x40006e5	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4000748	      0xbe00000000	                              mov esi, 0	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x400074d	          0x4c89f7	                            mov rdi, r14	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4000750	      0xe800000000	                          call 0x4000755	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4000755	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x400075a	        0x49894008	                 mov qword [r8 + 8], rax	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x400075e	      0xe964ffffff	                           jmp 0x40006c7	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4000763	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4000768	    0x488b9fb00000	            mov rbx, qword [rdi + 0xb0] 	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x400076f	      0xe93efeffff	                           jmp 0x40005b2	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
_bfd_generic_reloc_link_order	WHILE,0:CALL,16:DO,0:FOR,0:IF,9:ELSE,2:functions,0:SWITCH,1	190
0x4002430	            0x4157	                                push r15	      2314	linker.c	FUNCTION_27
0x4002432	            0x4156	                                push r14	      2314	linker.c	FUNCTION_27
0x4002434	            0x4155	                                push r13	      2314	linker.c	FUNCTION_27
0x4002436	            0x4154	                                push r12	      2314	linker.c	FUNCTION_27
0x4002438	              0x55	                                push rbp	      2314	linker.c	FUNCTION_27
0x4002439	              0x53	                                push rbx	      2314	linker.c	FUNCTION_27
0x400243a	        0x4883ec18	                           sub rsp, 0x18	      2314	linker.c	FUNCTION_27
0x400243e	           0xfb606	                   movzx eax, byte [rsi]	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x4002441	          0x83e003	                              and eax, 3	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x4002444	            0x3c02	                               cmp al, 2	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x4002446	     0xf8569020000	                           jne 0x40026b5	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x400244c	    0x4883ba800000	               cmp qword [rdx + 0x80], 0	      2319	linker.c	FUNCTION_27	IF_2
0x4002454	          0x4989d4	                            mov r12, rdx	      2319	linker.c	FUNCTION_27	IF_2
0x4002457	     0xf846c020000	                            je 0x40026c9	      2319	linker.c	FUNCTION_27	IF_2
0x400245d	          0x4989f6	                            mov r14, rsi	      2319	linker.c	FUNCTION_27	IF_2
0x4002460	      0xbe20000000	                           mov esi, 0x20	      2322	linker.c	FUNCTION_27	CALL_4
0x4002465	          0x4989fd	                            mov r13, rdi	      2322	linker.c	FUNCTION_27	CALL_4
0x4002468	          0x4889cd	                            mov rbp, rcx	      2322	linker.c	FUNCTION_27	CALL_4
0x400246b	      0xe800000000	                          call 0x4002470	      2322	linker.c	FUNCTION_27	CALL_4
0x4002470	          0x4885c0	                           test rax, rax	      2323	linker.c	FUNCTION_27	IF_3
0x4002473	          0x4889c3	                            mov rbx, rax	      2322	linker.c	FUNCTION_27	CALL_4
0x4002476	     0xf84ed000000	                            je 0x4002569	      2323	linker.c	FUNCTION_27	IF_3
0x400247c	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2326	linker.c	FUNCTION_27
0x4002480	          0x4c89ef	                            mov rdi, r13	      2327	linker.c	FUNCTION_27	CALL_5
0x4002483	        0x48894308	                mov qword [rbx + 8], rax	      2326	linker.c	FUNCTION_27
0x4002487	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2327	linker.c	FUNCTION_27	CALL_5
0x400248b	            0x8b30	                    mov esi, dword [rax]	      2327	linker.c	FUNCTION_27	CALL_5
0x400248d	      0xe800000000	                          call 0x4002492	      2327	linker.c	FUNCTION_27	CALL_5
0x4002492	          0x4885c0	                           test rax, rax	      2328	linker.c	FUNCTION_27	IF_4
0x4002495	        0x48894318	             mov qword [rbx + 0x18], rax	      2327	linker.c	FUNCTION_27	CALL_5
0x4002499	     0xf84f9010000	                            je 0x4002698	      2328	linker.c	FUNCTION_27	IF_4
0x400249f	        0x837d0803	                  cmp dword [rbp + 8], 3	      2335	linker.c	FUNCTION_27	IF_5
0x40024a3	     0xf8487000000	                            je 0x4002530	      2335	linker.c	FUNCTION_27	IF_5
0x40024a9	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2342	linker.c	FUNCTION_27	ELSE_1	CALL_7
0x40024ad	          0x4531c0	                            xor r8d, r8d	      2341	linker.c	FUNCTION_27	ELSE_1
0x40024b0	            0x31c9	                            xor ecx, ecx	      2341	linker.c	FUNCTION_27	ELSE_1
0x40024b2	    0x41b901000000	                              mov r9d, 1	      2341	linker.c	FUNCTION_27	ELSE_1
0x40024b8	          0x4c89f6	                            mov rsi, r14	      2341	linker.c	FUNCTION_27	ELSE_1
0x40024bb	          0x4c89ef	                            mov rdi, r13	      2341	linker.c	FUNCTION_27	ELSE_1
0x40024be	        0x488b5008	                mov rdx, qword [rax + 8]	      2341	linker.c	FUNCTION_27	ELSE_1
0x40024c2	      0xe800000000	                          call 0x40024c7	      2341	linker.c	FUNCTION_27	ELSE_1
0x40024c7	          0x4885c0	                           test rax, rax	      2345	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40024ca	     0xf84f8000000	                            je 0x40025c8	      2345	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40024d0	          0x8b7038	            mov esi, dword [rax + 0x38] 	      2346	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40024d3	            0x85f6	                           test esi, esi	      2346	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40024d5	     0xf84ed000000	                            je 0x40025c8	      2346	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40024db	        0x4883c040	                           add rax, 0x40	      2353	linker.c	FUNCTION_27	ELSE_1
0x40024df	          0x488903	                    mov qword [rbx], rax	      2353	linker.c	FUNCTION_27	ELSE_1
0x40024e2	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2353	linker.c	FUNCTION_27	ELSE_1
0x40024e6	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      2358	linker.c	FUNCTION_27	IF_7
0x40024e9	            0x85c9	                           test ecx, ecx	      2358	linker.c	FUNCTION_27	IF_7
0x40024eb	            0x755c	                           jne 0x4002549	      2358	linker.c	FUNCTION_27	IF_7
0x40024ed	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2359	linker.c	FUNCTION_27	IF_7
0x40024f1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2359	linker.c	FUNCTION_27	IF_7
0x40024f5	        0x48894310	             mov qword [rbx + 0x10], rax	      2359	linker.c	FUNCTION_27	IF_7
0x40024f9	    0x418b8c248800	            mov ecx, dword [r12 + 0x88] 	      2401	linker.c	FUNCTION_27
0x4002501	    0x498b94248000	            mov rdx, qword [r12 + 0x80] 	      2401	linker.c	FUNCTION_27
0x4002509	          0x4889c8	                            mov rax, rcx	      2401	linker.c	FUNCTION_27
0x400250c	        0x48891cca	            mov qword [rdx + rcx*8], rbx	      2401	linker.c	FUNCTION_27
0x4002510	          0x83c001	                              add eax, 1	      2402	linker.c	FUNCTION_27
0x4002513	    0x418984248800	             mov dword [r12 + 0x88], eax	      2402	linker.c	FUNCTION_27
0x400251b	        0x4883c418	                           add rsp, 0x18	      2405	linker.c	FUNCTION_27
0x400251f	      0xb801000000	                              mov eax, 1	      2404	linker.c	FUNCTION_27
0x4002524	              0x5b	                                 pop rbx	      2405	linker.c	FUNCTION_27
0x4002525	              0x5d	                                 pop rbp	      2405	linker.c	FUNCTION_27
0x4002526	            0x415c	                                 pop r12	      2405	linker.c	FUNCTION_27
0x4002528	            0x415d	                                 pop r13	      2405	linker.c	FUNCTION_27
0x400252a	            0x415e	                                 pop r14	      2405	linker.c	FUNCTION_27
0x400252c	            0x415f	                                 pop r15	      2405	linker.c	FUNCTION_27
0x400252e	              0xc3	                                     ret	      2405	linker.c	FUNCTION_27
0x400252f	              0x90	                                     nop	      2405	linker.c	FUNCTION_27
0x4002530	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	      2336	linker.c	FUNCTION_27	IF_5
0x4002534	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      2358	linker.c	FUNCTION_27	IF_7
0x4002537	        0x488b5208	                mov rdx, qword [rdx + 8]	      2336	linker.c	FUNCTION_27	IF_5
0x400253b	            0x85c9	                           test ecx, ecx	      2358	linker.c	FUNCTION_27	IF_7
0x400253d	    0x488b92000100	           mov rdx, qword [rdx + 0x100] 	      2336	linker.c	FUNCTION_27	IF_5
0x4002544	          0x488913	                    mov qword [rbx], rdx	      2336	linker.c	FUNCTION_27	IF_5
0x4002547	            0x74a4	                            je 0x40024ed	      2358	linker.c	FUNCTION_27	IF_7
0x4002549	          0x4889c7	                            mov rdi, rax	      2368	linker.c	FUNCTION_27	ELSE_2	CALL_9
0x400254c	      0xe800000000	                          call 0x4002551	      2368	linker.c	FUNCTION_27	ELSE_2	CALL_9
0x4002551	          0x4189c7	                           mov r15d, eax	      2368	linker.c	FUNCTION_27	ELSE_2	CALL_9
0x4002554	          0x4c89ff	                            mov rdi, r15	      2369	linker.c	FUNCTION_27	ELSE_2	CALL_10
0x4002557	      0xe800000000	                          call 0x400255c	      2369	linker.c	FUNCTION_27	ELSE_2	CALL_10
0x400255c	          0x4885c0	                           test rax, rax	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x400255f	          0x4989c2	                            mov r10, rax	      2369	linker.c	FUNCTION_27	ELSE_2	CALL_10
0x4002562	            0x751c	                           jne 0x4002580	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x4002564	          0x4d85ff	                           test r15, r15	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x4002567	            0x7417	                            je 0x4002580	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x4002569	            0x31c0	                            xor eax, eax	      2331	linker.c	FUNCTION_27	IF_4
0x400256b	        0x4883c418	                           add rsp, 0x18	      2405	linker.c	FUNCTION_27
0x400256f	              0x5b	                                 pop rbx	      2405	linker.c	FUNCTION_27
0x4002570	              0x5d	                                 pop rbp	      2405	linker.c	FUNCTION_27
0x4002571	            0x415c	                                 pop r12	      2405	linker.c	FUNCTION_27
0x4002573	            0x415d	                                 pop r13	      2405	linker.c	FUNCTION_27
0x4002575	            0x415e	                                 pop r14	      2405	linker.c	FUNCTION_27
0x4002577	            0x415f	                                 pop r15	      2405	linker.c	FUNCTION_27
0x4002579	              0xc3	                                     ret	      2405	linker.c	FUNCTION_27
0x400257a	    0x660f1f440000	                    nop word [rax + rax]	      2405	linker.c	FUNCTION_27
0x4002580	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2373	linker.c	FUNCTION_27	ELSE_2
0x4002584	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x4002588	          0x4c89d1	                            mov rcx, r10	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x400258b	          0x4c89ee	                            mov rsi, r13	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x400258e	      0x4c89542408	                mov qword [rsp + 8], r10	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x4002593	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x4002597	      0xe800000000	                          call 0x400259c	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x400259c	          0x83f802	                              cmp eax, 2	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400259f	      0x4c8b542408	                mov r10, qword [rsp + 8]	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40025a4	     0xf8497000000	                            je 0x4002641	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40025aa	          0x83f803	                              cmp eax, 3	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40025ad	            0x7451	                            je 0x4002600	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40025af	      0xba00000000	                              mov edx, 0	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x40025b4	      0xbe4d090000	                          mov esi, 0x94d	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x40025b9	      0xbf00000000	                              mov edi, 0	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x40025be	      0xe800000000	                          call 0x40025c3	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x40025c3	       0xf1f440000	                   nop dword [rax + rax]	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x40025c8	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40025cc	          0x4c89f7	                            mov rdi, r14	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40025cf	          0x4531c0	                            xor r8d, r8d	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40025d2	            0x31c9	                            xor ecx, ecx	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40025d4	            0x31d2	                            xor edx, edx	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40025d6	        0x488b7008	                mov rsi, qword [rax + 8]	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40025da	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40025de	          0xff5048	                 call qword [rax + 0x48]	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40025e1	      0xbf11000000	                           mov edi, 0x11	      2350	linker.c	FUNCTION_27	ELSE_1	IF_6	CALL_8
0x40025e6	      0xe800000000	                          call 0x40025eb	      2350	linker.c	FUNCTION_27	ELSE_1	IF_6	CALL_8
0x40025eb	        0x4883c418	                           add rsp, 0x18	      2405	linker.c	FUNCTION_27
0x40025ef	            0x31c0	                            xor eax, eax	      2351	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40025f1	              0x5b	                                 pop rbx	      2405	linker.c	FUNCTION_27
0x40025f2	              0x5d	                                 pop rbp	      2405	linker.c	FUNCTION_27
0x40025f3	            0x415c	                                 pop r12	      2405	linker.c	FUNCTION_27
0x40025f5	            0x415d	                                 pop r13	      2405	linker.c	FUNCTION_27
0x40025f7	            0x415e	                                 pop r14	      2405	linker.c	FUNCTION_27
0x40025f9	            0x415f	                                 pop r15	      2405	linker.c	FUNCTION_27
0x40025fb	              0xc3	                                     ret	      2405	linker.c	FUNCTION_27
0x40025fc	         0xf1f4000	                         nop dword [rax]	      2405	linker.c	FUNCTION_27
0x4002600	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002604	        0x837d0803	                  cmp dword [rbp + 8], 3	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002608	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2388	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400260c	        0x4c8b5838	            mov r11, qword [rax + 0x38] 	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002610	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2388	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002614	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2388	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002618	        0x4c8b4010	              mov r8, qword [rax + 0x10]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400261c	     0xf8487000000	                            je 0x40026a9	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002622	        0x488b5008	                mov rdx, qword [rax + 8]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002626	      0x4c89542408	                mov qword [rsp + 8], r10	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400262b	          0x4531c9	                            xor r9d, r9d	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400262e	            0x6a00	                                  push 0	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002630	            0x31f6	                            xor esi, esi	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002632	            0x6a00	                                  push 0	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002634	          0x4c89f7	                            mov rdi, r14	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002637	          0x41ffd3	                                call r11	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400263a	              0x58	                                 pop rax	      2390	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400263b	              0x5a	                                 pop rdx	      2390	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400263c	      0x4c8b542408	                mov r10, qword [rsp + 8]	      2390	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002641	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x4002645	          0x4c89ef	                            mov rdi, r13	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x4002648	      0x4c89542408	                mov qword [rsp + 8], r10	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x400264d	      0xe800000000	                          call 0x4002652	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x4002652	            0x89c1	                            mov ecx, eax	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4002654	      0x4c8b542408	                mov r10, qword [rsp + 8]	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4002659	          0x4d89f8	                             mov r8, r15	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x400265c	        0x480fafcd	                           imul rcx, rbp	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4002660	          0x4c89e6	                            mov rsi, r12	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4002663	          0x4c89ef	                            mov rdi, r13	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4002666	          0x4c89d2	                            mov rdx, r10	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4002669	      0xe800000000	                          call 0x400266e	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x400266e	      0x4c8b542408	                mov r10, qword [rsp + 8]	      2394	linker.c	FUNCTION_27	ELSE_2	CALL_16
0x4002673	            0x89c5	                            mov ebp, eax	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4002675	          0x4c89d7	                            mov rdi, r10	      2394	linker.c	FUNCTION_27	ELSE_2	CALL_16
0x4002678	      0xe800000000	                          call 0x400267d	      2394	linker.c	FUNCTION_27	ELSE_2	CALL_16
0x400267d	            0x85ed	                           test ebp, ebp	      2395	linker.c	FUNCTION_27	ELSE_2	IF_9
0x400267f	     0xf84e4feffff	                            je 0x4002569	      2395	linker.c	FUNCTION_27	ELSE_2	IF_9
0x4002685	    0x48c743100000	               mov qword [rbx + 0x10], 0	      2398	linker.c	FUNCTION_27	ELSE_2
0x400268d	      0xe967feffff	                           jmp 0x40024f9	      2398	linker.c	FUNCTION_27	ELSE_2
0x4002692	    0x660f1f440000	                    nop word [rax + rax]	      2398	linker.c	FUNCTION_27	ELSE_2
0x4002698	      0xbf11000000	                           mov edi, 0x11	      2330	linker.c	FUNCTION_27	IF_4	CALL_6
0x400269d	      0xe800000000	                          call 0x40026a2	      2330	linker.c	FUNCTION_27	IF_4	CALL_6
0x40026a2	            0x31c0	                            xor eax, eax	      2331	linker.c	FUNCTION_27	IF_4
0x40026a4	      0xe9c2feffff	                           jmp 0x400256b	      2331	linker.c	FUNCTION_27	IF_4
0x40026a9	        0x488b4008	                mov rax, qword [rax + 8]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40026ad	          0x488b10	                    mov rdx, qword [rax]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40026b0	      0xe971ffffff	                           jmp 0x4002626	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40026b5	      0xba00000000	                              mov edx, 0	      2318	linker.c	FUNCTION_27	CALL_2
0x40026ba	      0xbe0e090000	                          mov esi, 0x90e	      2318	linker.c	FUNCTION_27	CALL_2
0x40026bf	      0xbf00000000	                              mov edi, 0	      2318	linker.c	FUNCTION_27	CALL_2
0x40026c4	      0xe800000000	                          call 0x40026c9	      2318	linker.c	FUNCTION_27	CALL_2
0x40026c9	      0xba00000000	                              mov edx, 0	      2320	linker.c	FUNCTION_27	CALL_3
0x40026ce	      0xbe10090000	                          mov esi, 0x910	      2320	linker.c	FUNCTION_27	CALL_3
0x40026d3	      0xbf00000000	                              mov edi, 0	      2320	linker.c	FUNCTION_27	CALL_3
0x40026d8	      0xe800000000	                          call 0x40026dd	      2320	linker.c	FUNCTION_27	CALL_3
bfd_link_repair_undef_list	WHILE,1:CALL,0:DO,0:FOR,0:IF,3:ELSE,2:functions,0:SWITCH,0	26
0x4000f20	        0x488d7728	                   lea rsi, [rdi + 0x28]	       689	linker.c	FUNCTION_8
0x4000f24	          0x4889f2	                            mov rdx, rsi	       689	linker.c	FUNCTION_8
0x4000f27	    0x660f1f840000	                    nop word [rax + rax]	       689	linker.c	FUNCTION_8
0x4000f30	          0x488b02	                    mov rax, qword [rdx]	       690	linker.c	FUNCTION_8	WHILE_1
0x4000f33	          0x4885c0	                           test rax, rax	       690	linker.c	FUNCTION_8	WHILE_1
0x4000f36	            0x743c	                            je 0x4000f74	       690	linker.c	FUNCTION_8	WHILE_1
0x4000f38	        0xf64018fd	           test byte [rax + 0x18], 0xfd 	       694	linker.c	FUNCTION_8	WHILE_1	IF_1
0x4000f3c	            0x752a	                           jne 0x4000f68	       694	linker.c	FUNCTION_8	WHILE_1	IF_1
0x4000f3e	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       697	linker.c	FUNCTION_8	WHILE_1	IF_1
0x4000f42	          0x48890a	                    mov qword [rdx], rcx	       697	linker.c	FUNCTION_8	WHILE_1	IF_1
0x4000f45	    0x48c740200000	               mov qword [rax + 0x20], 0	       698	linker.c	FUNCTION_8	WHILE_1	IF_1
0x4000f4d	        0x483b4730	            cmp rax, qword [rdi + 0x30] 	       699	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2
0x4000f51	            0x75dd	                           jne 0x4000f30	       699	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2
0x4000f53	          0x4839f2	                            cmp rdx, rsi	       701	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x4000f56	            0x741e	                            je 0x4000f76	       701	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x4000f58	        0x4883ea20	                           sub rdx, 0x20	       706	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	ELSE_1
0x4000f5c	        0x48895730	             mov qword [rdi + 0x30], rdx	       706	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	ELSE_1
0x4000f60	              0xc3	                                     ret	       706	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	ELSE_1
0x4000f61	     0xf1f80000000	                         nop dword [rax]	       706	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	ELSE_1
0x4000f68	        0x488d5020	                   lea rdx, [rax + 0x20]	       712	linker.c	FUNCTION_8	WHILE_1	ELSE_2
0x4000f6c	          0x488b02	                    mov rax, qword [rdx]	       690	linker.c	FUNCTION_8	WHILE_1
0x4000f6f	          0x4885c0	                           test rax, rax	       690	linker.c	FUNCTION_8	WHILE_1
0x4000f72	            0x75c4	                           jne 0x4000f38	       690	linker.c	FUNCTION_8	WHILE_1
0x4000f74	            0xf3c3	                                     ret	       690	linker.c	FUNCTION_8	WHILE_1
0x4000f76	    0x48c747300000	               mov qword [rdi + 0x30], 0	       702	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x4000f7e	              0xc3	                                     ret	       702	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
_bfd_nearby_section	WHILE,0:CALL,2:DO,0:FOR,2:IF,13:ELSE,6:functions,0:SWITCH,0	96
0x4003020	        0x4c8b4618	              mov r8, qword [rsi + 0x18]	      2959	linker.c	FUNCTION_42	FOR_1
0x4003024	          0x4d85c0	                             test r8, r8	      2959	linker.c	FUNCTION_42	FOR_1
0x4003027	     0xf8420010000	                            je 0x400314d	      2959	linker.c	FUNCTION_42	FOR_1
0x400302d	          0x4c89c0	                             mov rax, r8	      2959	linker.c	FUNCTION_42	FOR_1
0x4003030	            0xeb1a	                           jmp 0x400304c	      2959	linker.c	FUNCTION_42	FOR_1
0x4003032	    0x660f1f440000	                    nop word [rax + rax]	      2959	linker.c	FUNCTION_42	FOR_1
0x4003038	        0x48394118	            cmp qword [rcx + 0x18], rax 	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x400303c	           0xf94c1	                                 sete cl	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x400303f	            0x84c9	                             test cl, cl	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4003041	            0x752d	                           jne 0x4003070	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4003043	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2959	linker.c	FUNCTION_42	FOR_1
0x4003047	          0x4885c0	                           test rax, rax	      2959	linker.c	FUNCTION_42	FOR_1
0x400304a	            0x7424	                            je 0x4003070	      2959	linker.c	FUNCTION_42	FOR_1
0x400304c	        0xf6402180	           test byte [rax + 0x21], 0x80 	      2960	linker.c	FUNCTION_42	FOR_1	IF_1
0x4003050	            0x75f1	                           jne 0x4003043	      2960	linker.c	FUNCTION_42	FOR_1	IF_1
0x4003052	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4003056	          0x4885c9	                           test rcx, rcx	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4003059	            0x75dd	                           jne 0x4003038	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x400305b	    0x483987980000	            cmp qword [rdi + 0x98], rax 	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4003062	           0xf94c1	                                 sete cl	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4003065	            0x84c9	                             test cl, cl	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4003067	            0x74da	                            je 0x4003043	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4003069	     0xf1f80000000	                         nop dword [rax]	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4003070	        0x498b4810	              mov rcx, qword [r8 + 0x10]	      2967	linker.c	FUNCTION_42	IF_2
0x4003074	          0x4885c9	                           test rcx, rcx	      2970	linker.c	FUNCTION_42	FOR_2
0x4003077	            0x7450	                            je 0x40030c9	      2970	linker.c	FUNCTION_42	FOR_2
0x4003079	     0xf1f80000000	                         nop dword [rax]	      2970	linker.c	FUNCTION_42	FOR_2
0x4003080	        0x448b4120	            mov r8d, dword [rcx + 0x20] 	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x4003084	    0x41f7c0008000	                        test r8d, 0x8000	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x400308b	            0x751f	                           jne 0x40030ac	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x400308d	        0x4c8b4910	              mov r9, qword [rcx + 0x10]	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4003091	          0x4d85c9	                             test r9, r9	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4003094	            0x742a	                            je 0x40030c0	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4003096	        0x49394918	              cmp qword [r9 + 0x18], rcx	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x400309a	            0x7444	                            je 0x40030e0	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x400309c	          0x4c89c9	                             mov rcx, r9	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x400309f	        0x448b4120	            mov r8d, dword [rcx + 0x20] 	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x40030a3	    0x41f7c0008000	                        test r8d, 0x8000	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x40030aa	            0x74e1	                            je 0x400308d	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x40030ac	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x40030b0	          0x4885c9	                           test rcx, rcx	      2970	linker.c	FUNCTION_42	FOR_2
0x40030b3	            0x75cb	                           jne 0x4003080	      2970	linker.c	FUNCTION_42	FOR_2
0x40030b5	            0xeb12	                           jmp 0x40030c9	      2970	linker.c	FUNCTION_42	FOR_2
0x40030b7	    0x660f1f840000	                    nop word [rax + rax]	      2970	linker.c	FUNCTION_42	FOR_2
0x40030c0	    0x48398f980000	            cmp qword [rdi + 0x98], rcx 	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x40030c7	            0x7417	                            je 0x40030e0	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x40030c9	          0x4885c0	                           test rax, rax	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x40030cc	      0xba00000000	                              mov edx, 0	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x40030d1	        0x480f44c2	                          cmove rax, rdx	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x40030d5	              0xc3	                                     ret	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x40030d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x40030e0	          0x4885c0	                           test rax, rax	      2979	linker.c	FUNCTION_42	IF_4
0x40030e3	            0x7433	                            je 0x4003118	      2979	linker.c	FUNCTION_42	IF_4
0x40030e5	        0x448b4820	            mov r9d, dword [rax + 0x20] 	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x40030e9	          0x4489c7	                            mov edi, r8d	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x40030ec	          0x4431cf	                            xor edi, r9d	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x40030ef	    0xf7c703040000	                         test edi, 0x403	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x40030f5	            0x7431	                            je 0x4003128	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x40030f7	          0x8b5620	            mov edx, dword [rsi + 0x20] 	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x40030fa	          0x4431c2	                            xor edx, r8d	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x40030fd	    0x81e201040000	                          and edx, 0x401	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4003103	            0x751b	                           jne 0x4003120	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4003105	        0x4183e102	                              and r9d, 2	      2995	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4003109	            0x740d	                            je 0x4003118	      2995	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x400310b	        0x4183e002	                              and r8d, 2	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x400310f	        0x480f45c1	                         cmovne rax, rcx	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4003113	              0xc3	                                     ret	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4003114	         0xf1f4000	                         nop dword [rax]	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4003118	          0x4889c8	                            mov rax, rcx	      2979	linker.c	FUNCTION_42	IF_4
0x400311b	              0xc3	                                     ret	      2979	linker.c	FUNCTION_42	IF_4
0x400311c	         0xf1f4000	                         nop dword [rax]	      2979	linker.c	FUNCTION_42	IF_4
0x4003120	            0xf3c3	                                     ret	      3018	linker.c	FUNCTION_42
0x4003122	    0x660f1f440000	                    nop word [rax + rax]	      3018	linker.c	FUNCTION_42
0x4003128	        0x40f6c708	                             test dil, 8	      2999	linker.c	FUNCTION_42	ELSE_4	IF_9
0x400312c	            0x7512	                           jne 0x4003140	      2999	linker.c	FUNCTION_42	ELSE_4	IF_9
0x400312e	          0x83e710	                           and edi, 0x10	      3004	linker.c	FUNCTION_42	ELSE_5	IF_11
0x4003131	            0x743d	                            je 0x4003170	      3004	linker.c	FUNCTION_42	ELSE_5	IF_11
0x4003133	        0x44334620	             xor r8d, dword [rsi + 0x20]	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x4003137	        0x4183e010	                           and r8d, 0x10	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x400313b	        0x480f44c1	                          cmove rax, rcx	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x400313f	              0xc3	                                     ret	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x4003140	        0x44334620	             xor r8d, dword [rsi + 0x20]	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4003144	        0x4183e008	                              and r8d, 8	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4003148	        0x480f44c1	                          cmove rax, rcx	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x400314c	              0xc3	                                     ret	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x400314d	    0x488b86f00000	            mov rax, qword [rsi + 0xf0] 	      2969	linker.c	FUNCTION_42	ELSE_1
0x4003154	    0x488b88900000	            mov rcx, qword [rax + 0x90] 	      2969	linker.c	FUNCTION_42	ELSE_1
0x400315b	            0x31c0	                            xor eax, eax	      2970	linker.c	FUNCTION_42	FOR_2
0x400315d	          0x4885c9	                           test rcx, rcx	      2970	linker.c	FUNCTION_42	FOR_2
0x4003160	     0xf851affffff	                           jne 0x4003080	      2970	linker.c	FUNCTION_42	FOR_2
0x4003166	      0xb800000000	                              mov eax, 0	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x400316b	              0xc3	                                     ret	      3017	linker.c	FUNCTION_42
0x400316c	         0xf1f4000	                         nop dword [rax]	      3017	linker.c	FUNCTION_42
0x4003170	        0x48395128	            cmp qword [rcx + 0x28], rdx 	      3013	linker.c	FUNCTION_42	ELSE_6	IF_13
0x4003174	        0x480f46c1	                         cmovbe rax, rcx	      3013	linker.c	FUNCTION_42	ELSE_6	IF_13
0x4003178	              0xc3	                                     ret	      3013	linker.c	FUNCTION_42	ELSE_6	IF_13
_bfd_generic_link_just_syms	WHILE,0:CALL,0:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	8
0x4001000	         0xfb74724	           movzx eax, word [rdi + 0x24] 	       821	linker.c	FUNCTION_13
0x4001004	    0x48c747680000	               mov qword [rdi + 0x68], 0	       822	linker.c	FUNCTION_13
0x400100c	        0x66257ffc	                          and ax, 0xfc7f	       821	linker.c	FUNCTION_13
0x4001010	          0x80cc02	                                or ah, 2	       821	linker.c	FUNCTION_13
0x4001013	        0x66894724	               mov word [rdi + 0x24], ax	       821	linker.c	FUNCTION_13
0x4001017	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       823	linker.c	FUNCTION_13
0x400101b	        0x48894760	             mov qword [rdi + 0x60], rax	       823	linker.c	FUNCTION_13
0x400101f	              0xc3	                                     ret	       823	linker.c	FUNCTION_13
_bfd_count_link_order_relocs	WHILE,0:CALL,0:DO,0:FOR,1:IF,1:ELSE,0:functions,0:SWITCH,0	13
0x4002be0	            0x31c0	                            xor eax, eax	      2670	linker.c	FUNCTION_32	FOR_1
0x4002be2	          0x4885ff	                           test rdi, rdi	      2670	linker.c	FUNCTION_32	FOR_1
0x4002be5	            0x741f	                            je 0x4002c06	      2670	linker.c	FUNCTION_32	FOR_1
0x4002be7	    0x660f1f840000	                    nop word [rax + rax]	      2670	linker.c	FUNCTION_32	FOR_1
0x4002bf0	          0x8b4f08	                mov ecx, dword [rdi + 8]	      2672	linker.c	FUNCTION_32	FOR_1	IF_1
0x4002bf3	          0x488b3f	                    mov rdi, qword [rdi]	      2670	linker.c	FUNCTION_32	FOR_1
0x4002bf6	          0x8d51fd	                      lea edx, [rcx - 3]	      2672	linker.c	FUNCTION_32	FOR_1	IF_1
0x4002bf9	          0x83fa02	                              cmp edx, 2	      2674	linker.c	FUNCTION_32	FOR_1	IF_1
0x4002bfc	          0x83d000	                              adc eax, 0	      2674	linker.c	FUNCTION_32	FOR_1	IF_1
0x4002bff	          0x4885ff	                           test rdi, rdi	      2670	linker.c	FUNCTION_32	FOR_1
0x4002c02	            0x75ec	                           jne 0x4002bf0	      2670	linker.c	FUNCTION_32	FOR_1
0x4002c04	            0xf3c3	                                     ret	      2670	linker.c	FUNCTION_32	FOR_1
0x4002c06	            0xf3c3	                                     ret	      2678	linker.c	FUNCTION_32
_bfd_generic_link_add_archive_symbols	WHILE,1:CALL,15:DO,2:FOR,1:IF,17:ELSE,0:functions,0:SWITCH,0	186
0x4001030	            0x4157	                                push r15	       899	linker.c	FUNCTION_17
0x4001032	            0x4156	                                push r14	       899	linker.c	FUNCTION_17
0x4001034	            0x4155	                                push r13	       899	linker.c	FUNCTION_17
0x4001036	            0x4154	                                push r12	       899	linker.c	FUNCTION_17
0x4001038	          0x4989fd	                            mov r13, rdi	       899	linker.c	FUNCTION_17
0x400103b	              0x55	                                push rbp	       899	linker.c	FUNCTION_17
0x400103c	              0x53	                                push rbx	       899	linker.c	FUNCTION_17
0x400103d	        0x4883ec58	                           sub rsp, 0x58	       899	linker.c	FUNCTION_17
0x4001041	    0x64488b042528	                mov rax, qword fs:[0x28]	       899	linker.c	FUNCTION_17
0x400104a	      0x4889442448	             mov qword [rsp + 0x48], rax	       899	linker.c	FUNCTION_17
0x400104f	            0x31c0	                            xor eax, eax	       899	linker.c	FUNCTION_17
0x4001051	        0x807f4700	                cmp byte [rdi + 0x47], 0	       904	linker.c	FUNCTION_17	IF_1	CALL_2
0x4001055	      0x4889542410	             mov qword [rsp + 0x10], rdx	       899	linker.c	FUNCTION_17
0x400105a	     0xf8908020000	                           jns 0x4001268	       904	linker.c	FUNCTION_17	IF_1	CALL_2
0x4001060	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	       913	linker.c	FUNCTION_17	CALL_5
0x4001067	        0x488b7820	            mov rdi, qword [rax + 0x20] 	       913	linker.c	FUNCTION_17	CALL_5
0x400106b	          0x4885ff	                           test rdi, rdi	       914	linker.c	FUNCTION_17	IF_3
0x400106e	            0x7530	                           jne 0x40010a0	       914	linker.c	FUNCTION_17	IF_3
0x4001070	      0xb801000000	                              mov eax, 1	      1009	linker.c	FUNCTION_17
0x4001075	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      1014	linker.c	FUNCTION_17
0x400107a	    0x644833342528	                xor rsi, qword fs:[0x28]	      1014	linker.c	FUNCTION_17
0x4001083	     0xf858e020000	                           jne 0x4001317	      1014	linker.c	FUNCTION_17
0x4001089	        0x4883c458	                           add rsp, 0x58	      1014	linker.c	FUNCTION_17
0x400108d	              0x5b	                                 pop rbx	      1014	linker.c	FUNCTION_17
0x400108e	              0x5d	                                 pop rbp	      1014	linker.c	FUNCTION_17
0x400108f	            0x415c	                                 pop r12	      1014	linker.c	FUNCTION_17
0x4001091	            0x415d	                                 pop r13	      1014	linker.c	FUNCTION_17
0x4001093	            0x415e	                                 pop r14	      1014	linker.c	FUNCTION_17
0x4001095	            0x415f	                                 pop r15	      1014	linker.c	FUNCTION_17
0x4001097	              0xc3	                                     ret	      1014	linker.c	FUNCTION_17
0x4001098	     0xf1f84000000	                   nop dword [rax + rax]	      1014	linker.c	FUNCTION_17
0x40010a0	          0x4989f4	                            mov r12, rsi	      1014	linker.c	FUNCTION_17
0x40010a3	      0xe800000000	                          call 0x40010a8	       917	linker.c	FUNCTION_17	CALL_6
0x40010a8	          0x4989c7	                            mov r15, rax	       917	linker.c	FUNCTION_17	CALL_6
0x40010ab	            0x31c0	                            xor eax, eax	       919	linker.c	FUNCTION_17	IF_4
0x40010ad	          0x4d85ff	                           test r15, r15	       918	linker.c	FUNCTION_17	IF_4
0x40010b0	            0x74c3	                            je 0x4001075	       918	linker.c	FUNCTION_17	IF_4
0x40010b2	          0x4d89fe	                            mov r14, r15	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40010b5	      0x4c896c2438	             mov qword [rsp + 0x38], r13	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40010ba	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       932	linker.c	FUNCTION_17	DO_1	CALL_7
0x40010bf	    0xc74424440000	               mov dword [rsp + 0x44], 0	       928	linker.c	FUNCTION_17	DO_1
0x40010c7	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       932	linker.c	FUNCTION_17	DO_1	CALL_7
0x40010ce	        0x488b6820	            mov rbp, qword [rax + 0x20] 	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x40010d2	        0x4c8b6818	            mov r13, qword [rax + 0x18] 	       932	linker.c	FUNCTION_17	DO_1	CALL_7
0x40010d6	        0x48c1e504	                              shl rbp, 4	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x40010da	      0x498d442d00	                    lea rax, [r13 + rbp]	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x40010df	          0x4939c5	                            cmp r13, rax	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x40010e2	      0x4889442408	                mov qword [rsp + 8], rax	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x40010e7	     0xf830a020000	                           jae 0x40012f7	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x40010ed	            0x31ed	                            xor ebp, ebp	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x40010ef	          0x4c89eb	                            mov rbx, r13	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x40010f2	    0x48c744242000	               mov qword [rsp + 0x20], 0	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x40010fb	          0x4189ef	                           mov r15d, ebp	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x40010fe	    0x48c7442418ff	mov qword [rsp + 0x18], 0xffffffffffffffff	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001107	    0xc74424340000	               mov dword [rsp + 0x34], 0	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x400110f	          0x4c89f5	                            mov rbp, r14	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001112	            0xeb1f	                           jmp 0x4001133	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001114	         0xf1f4000	                         nop dword [rax]	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001118	            0x3c02	                               cmp al, 2	       964	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x400111a	            0x7404	                            je 0x4001120	       964	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x400111c	        0x41c60601	                       mov byte [r14], 1	       966	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4001120	        0x4883c310	                           add rbx, 0x10	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001124	        0x4183c701	                             add r15d, 1	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001128	      0x48395c2408	                cmp qword [rsp + 8], rbx	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x400112d	     0xf86b5010000	                           jbe 0x40012e8	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001133	          0x4589fe	                          mov r14d, r15d	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x4001136	          0x4901ee	                            add r14, rbp	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x4001139	        0x41803e00	                       cmp byte [r14], 0	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x400113d	            0x75e1	                           jne 0x4001120	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x400113f	        0x8b742444	            mov esi, dword [rsp + 0x44] 	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4001143	            0x85f6	                           test esi, esi	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4001145	            0x740b	                            je 0x4001152	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4001147	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x400114c	        0x48394308	                cmp qword [rbx + 8], rax	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4001150	            0x74ca	                            je 0x400111c	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4001152	          0x488b33	                    mov rsi, qword [rbx]	       947	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x4001155	          0x4885f6	                           test rsi, rsi	       947	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x4001158	     0xf84aa010000	                            je 0x4001308	       947	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x400115e	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4001163	            0x31d2	                            xor edx, edx	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4001165	            0x31c9	                            xor ecx, ecx	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4001167	    0x41b801000000	                              mov r8d, 1	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x400116d	      0xe800000000	                          call 0x4001172	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4001172	          0x4885c0	                           test rax, rax	       953	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x4001175	          0x4889c2	                            mov rdx, rax	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4001178	     0xf8412010000	                            je 0x4001290	       953	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x400117e	         0xfb64218	           movzx eax, byte [rdx + 0x18] 	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4001182	            0x89c1	                            mov ecx, eax	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4001184	          0x83e1fb	                     and ecx, 0xfffffffb	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4001187	          0x80f901	                               cmp cl, 1	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x400118a	            0x758c	                           jne 0x4001118	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x400118c	        0x4c8b7308	                mov r14, qword [rbx + 8]	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001190	      0x4c3b742418	            cmp r14, qword [rsp + 0x18] 	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001195	            0x743a	                            je 0x40011d1	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001197	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x400119c	          0x4c89f6	                            mov rsi, r14	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x400119f	      0x4889542418	             mov qword [rsp + 0x18], rdx	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x40011a4	      0xe800000000	                          call 0x40011a9	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x40011a9	          0x4885c0	                           test rax, rax	       974	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13
0x40011ac	      0x4889442420	             mov qword [rsp + 0x20], rax	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x40011b1	     0xf8451010000	                            je 0x4001308	       974	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13
0x40011b7	      0xbe01000000	                              mov esi, 1	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x40011bc	          0x4889c7	                            mov rdi, rax	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x40011bf	      0xe800000000	                          call 0x40011c4	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x40011c4	            0x85c0	                           test eax, eax	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x40011c6	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x40011cb	     0xf8437010000	                            je 0x4001308	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x40011d1	      0x498b442428	            mov rax, qword [r12 + 0x28] 	       979	linker.c	FUNCTION_17	DO_1	FOR_1
0x40011d6	      0x4c8d442444	                    lea r8, [rsp + 0x44]	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40011db	          0x488b0b	                    mov rcx, qword [rbx]	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40011de	          0x4c89e6	                            mov rsi, r12	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40011e1	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40011e6	        0x488b4030	            mov rax, qword [rax + 0x30] 	       979	linker.c	FUNCTION_17	DO_1	FOR_1
0x40011ea	      0x4889442428	             mov qword [rsp + 0x28], rax	       979	linker.c	FUNCTION_17	DO_1	FOR_1
0x40011ef	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40011f4	            0xffd0	                                call rax	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40011f6	            0x85c0	                           test eax, eax	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40011f8	     0xf840a010000	                            je 0x4001308	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40011fe	        0x8b542444	            mov edx, dword [rsp + 0x44] 	       986	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4001202	      0x4c89742418	             mov qword [rsp + 0x18], r14	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001207	            0x85d2	                           test edx, edx	       986	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4001209	     0xf8411ffffff	                            je 0x4001120	       986	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x400120f	          0x4489f8	                           mov eax, r15d	       986	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4001212	          0x4489fa	                           mov edx, r15d	       986	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4001215	            0xeb1d	                           jmp 0x4001234	       986	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4001217	    0x660f1f840000	                    nop word [rax + rax]	       986	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4001220	          0x8d50ff	                      lea edx, [rax - 1]	       998	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2
0x4001223	          0x4889d1	                            mov rcx, rdx	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4001226	          0x4889d0	                            mov rax, rdx	       998	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2
0x4001229	        0x48c1e104	                              shl rcx, 4	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x400122d	      0x4d3b740d08	         cmp r14, qword [r13 + rcx + 8] 	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4001232	            0x7509	                           jne 0x400123d	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4001234	            0x85c0	                           test eax, eax	       996	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2	IF_16
0x4001236	      0xc644150001	                 mov byte [rbp + rdx], 1	       995	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2
0x400123b	            0x75e3	                           jne 0x4001220	       996	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2	IF_16
0x400123d	      0x498b442428	            mov rax, qword [r12 + 0x28] 	      1002	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x4001242	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001247	      0x4c89742418	             mov qword [rsp + 0x18], r14	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x400124c	        0x483b7030	            cmp rsi, qword [rax + 0x30] 	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001250	      0xb801000000	                              mov eax, 1	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001255	       0xf44442434	           cmove eax, dword [rsp + 0x34]	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x400125a	        0x89442434	             mov dword [rsp + 0x34], eax	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x400125e	      0xe9bdfeffff	                           jmp 0x4001120	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001263	       0xf1f440000	                   nop dword [rax + rax]	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001268	            0x31f6	                            xor esi, esi	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400126a	      0xe800000000	                          call 0x400126f	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400126f	          0x4885c0	                           test rax, rax	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4001272	     0xf84f8fdffff	                            je 0x4001070	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4001278	      0xbf08000000	                              mov edi, 8	       909	linker.c	FUNCTION_17	IF_1	CALL_4
0x400127d	      0xe800000000	                          call 0x4001282	       909	linker.c	FUNCTION_17	IF_1	CALL_4
0x4001282	            0x31c0	                            xor eax, eax	       910	linker.c	FUNCTION_17	IF_1
0x4001284	      0xe9ecfdffff	                           jmp 0x4001075	       910	linker.c	FUNCTION_17	IF_1
0x4001289	     0xf1f80000000	                         nop dword [rax]	       910	linker.c	FUNCTION_17	IF_1
0x4001290	    0x418b8c24a800	            mov ecx, dword [r12 + 0xa8] 	       954	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x4001298	            0x85c9	                           test ecx, ecx	       954	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x400129a	     0xf8480feffff	                            je 0x4001120	       954	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x40012a0	          0x488b03	                    mov rax, qword [rbx]	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x40012a3	      0xbf00000000	                              mov edi, 0	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x40012a8	      0xb906000000	                              mov ecx, 6	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x40012ad	          0x4889c6	                            mov rsi, rax	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x40012b0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x40012b2	     0xf8568feffff	                           jne 0x4001120	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x40012b8	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x40012bd	        0x488d7006	                      lea rsi, [rax + 6]	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x40012c1	            0x31d2	                            xor edx, edx	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x40012c3	            0x31c9	                            xor ecx, ecx	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x40012c5	    0x41b801000000	                              mov r8d, 1	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x40012cb	      0xe800000000	                          call 0x40012d0	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x40012d0	          0x4885c0	                           test rax, rax	       958	linker.c	FUNCTION_17	DO_1	FOR_1	IF_9
0x40012d3	          0x4889c2	                            mov rdx, rax	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x40012d6	     0xf8444feffff	                            je 0x4001120	       958	linker.c	FUNCTION_17	DO_1	FOR_1	IF_9
0x40012dc	      0xe99dfeffff	                           jmp 0x400117e	       958	linker.c	FUNCTION_17	DO_1	FOR_1	IF_9
0x40012e1	     0xf1f80000000	                         nop dword [rax]	       958	linker.c	FUNCTION_17	DO_1	FOR_1	IF_9
0x40012e8	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      1006	linker.c	FUNCTION_17	WHILE_1
0x40012ec	          0x4989ee	                            mov r14, rbp	      1006	linker.c	FUNCTION_17	WHILE_1
0x40012ef	            0x85c0	                           test eax, eax	      1006	linker.c	FUNCTION_17	WHILE_1
0x40012f1	     0xf85c3fdffff	                           jne 0x40010ba	      1006	linker.c	FUNCTION_17	WHILE_1
0x40012f7	          0x4c89f7	                            mov rdi, r14	      1008	linker.c	FUNCTION_17	CALL_14
0x40012fa	      0xe800000000	                          call 0x40012ff	      1008	linker.c	FUNCTION_17	CALL_14
0x40012ff	      0xe96cfdffff	                           jmp 0x4001070	      1008	linker.c	FUNCTION_17	CALL_14
0x4001304	         0xf1f4000	                         nop dword [rax]	      1008	linker.c	FUNCTION_17	CALL_14
0x4001308	          0x4889ef	                            mov rdi, rbp	      1012	linker.c	FUNCTION_17	CALL_15
0x400130b	      0xe800000000	                          call 0x4001310	      1012	linker.c	FUNCTION_17	CALL_15
0x4001310	            0x31c0	                            xor eax, eax	      1013	linker.c	FUNCTION_17
0x4001312	      0xe95efdffff	                           jmp 0x4001075	      1013	linker.c	FUNCTION_17
0x4001317	      0xe800000000	                          call 0x400131c	      1014	linker.c	FUNCTION_17
bfd_link_check_relocs	WHILE,0:CALL,1:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	3
0x4003560	        0x488b4708	                mov rax, qword [rdi + 8]	      3324	linker.c	FUNCTION_50	CALL_1
0x4003564	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      3324	linker.c	FUNCTION_50	CALL_1
0x400356b	            0xffe0	                                 jmp rax	      3324	linker.c	FUNCTION_50	CALL_1
_bfd_generic_link_check_relocs	WHILE,0:CALL,0:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	2
0x4003570	      0xb801000000	                              mov eax, 1	      3347	linker.c	FUNCTION_51
0x4003575	              0xc3	                                     ret	      3347	linker.c	FUNCTION_51
_bfd_generic_final_link	WHILE,0:CALL,17:DO,0:FOR,7:IF,14:ELSE,1:functions,0:SWITCH,1	205
0x40028c0	            0x4157	                                push r15	      1807	linker.c	FUNCTION_22
0x40028c2	            0x4156	                                push r14	      1807	linker.c	FUNCTION_22
0x40028c4	            0x4155	                                push r13	      1807	linker.c	FUNCTION_22
0x40028c6	            0x4154	                                push r12	      1807	linker.c	FUNCTION_22
0x40028c8	          0x4989f4	                            mov r12, rsi	      1807	linker.c	FUNCTION_22
0x40028cb	              0x55	                                push rbp	      1807	linker.c	FUNCTION_22
0x40028cc	              0x53	                                push rbx	      1807	linker.c	FUNCTION_22
0x40028cd	          0x4889fd	                            mov rbp, rdi	      1807	linker.c	FUNCTION_22
0x40028d0	        0x4883ec48	                           sub rsp, 0x48	      1807	linker.c	FUNCTION_22
0x40028d4	    0x488b8f900000	            mov rcx, qword [rdi + 0x90] 	      1819	linker.c	FUNCTION_22	FOR_1
0x40028db	    0x48c787b00000	               mov qword [rdi + 0xb0], 0	      1814	linker.c	FUNCTION_22	CALL_1
0x40028e6	    0x64488b042528	                mov rax, qword fs:[0x28]	      1807	linker.c	FUNCTION_22
0x40028ef	      0x4889442438	             mov qword [rsp + 0x38], rax	      1807	linker.c	FUNCTION_22
0x40028f4	            0x31c0	                            xor eax, eax	      1807	linker.c	FUNCTION_22
0x40028f6	    0xc787b8000000	               mov dword [rdi + 0xb8], 0	      1815	linker.c	FUNCTION_22	CALL_2
0x4002900	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1816	linker.c	FUNCTION_22
0x4002909	          0x4885c9	                           test rcx, rcx	      1819	linker.c	FUNCTION_22	FOR_1
0x400290c	            0x7439	                            je 0x4002947	      1819	linker.c	FUNCTION_22	FOR_1
0x400290e	            0x6690	                                     nop	      1819	linker.c	FUNCTION_22	FOR_1
0x4002910	    0x488b81080100	           mov rax, qword [rcx + 0x108] 	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4002917	          0x4885c0	                           test rax, rax	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x400291a	            0x750c	                           jne 0x4002928	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x400291c	            0xeb20	                           jmp 0x400293e	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x400291e	            0x6690	                                     nop	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4002920	          0x488b00	                    mov rax, qword [rax]	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4002923	          0x4885c0	                           test rax, rax	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4002926	            0x7416	                            je 0x400293e	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4002928	        0x83780801	                  cmp dword [rax + 8], 1	      1821	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x400292c	            0x75f2	                           jne 0x4002920	      1821	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x400292e	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1822	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x4002932	        0x804a2402	                 or byte [rdx + 0x24], 2	      1822	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x4002936	          0x488b00	                    mov rax, qword [rax]	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4002939	          0x4885c0	                           test rax, rax	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x400293c	            0x75ea	                           jne 0x4002928	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x400293e	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      1819	linker.c	FUNCTION_22	FOR_1
0x4002942	          0x4885c9	                           test rcx, rcx	      1819	linker.c	FUNCTION_22	FOR_1
0x4002945	            0x75c9	                           jne 0x4002910	      1819	linker.c	FUNCTION_22	FOR_1
0x4002947	      0x498b5c2460	            mov rbx, qword [r12 + 0x60] 	      1825	linker.c	FUNCTION_22	FOR_3
0x400294c	          0x4885db	                           test rbx, rbx	      1825	linker.c	FUNCTION_22	FOR_3
0x400294f	            0x7513	                           jne 0x4002964	      1825	linker.c	FUNCTION_22	FOR_3
0x4002951	            0xeb4d	                           jmp 0x40029a0	      1825	linker.c	FUNCTION_22	FOR_3
0x4002953	       0xf1f440000	                   nop dword [rax + rax]	      1825	linker.c	FUNCTION_22	FOR_3
0x4002958	    0x488b9bf00000	            mov rbx, qword [rbx + 0xf0] 	      1825	linker.c	FUNCTION_22	FOR_3
0x400295f	          0x4885db	                           test rbx, rbx	      1825	linker.c	FUNCTION_22	FOR_3
0x4002962	            0x743c	                            je 0x40029a0	      1825	linker.c	FUNCTION_22	FOR_3
0x4002964	      0x488d4c2418	                   lea rcx, [rsp + 0x18]	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x4002969	          0x4c89e2	                            mov rdx, r12	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x400296c	          0x4889de	                            mov rsi, rbx	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x400296f	          0x4889ef	                            mov rdi, rbp	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x4002972	      0xe800000000	                          call 0x4002977	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x4002977	            0x85c0	                           test eax, eax	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x4002979	            0x75dd	                           jne 0x4002958	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x400297b	            0x31c0	                            xor eax, eax	      1827	linker.c	FUNCTION_22	FOR_3	IF_2
0x400297d	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1927	linker.c	FUNCTION_22
0x4002982	    0x644833342528	                xor rsi, qword fs:[0x28]	      1927	linker.c	FUNCTION_22
0x400298b	     0xf8542020000	                           jne 0x4002bd3	      1927	linker.c	FUNCTION_22
0x4002991	        0x4883c448	                           add rsp, 0x48	      1927	linker.c	FUNCTION_22
0x4002995	              0x5b	                                 pop rbx	      1927	linker.c	FUNCTION_22
0x4002996	              0x5d	                                 pop rbp	      1927	linker.c	FUNCTION_22
0x4002997	            0x415c	                                 pop r12	      1927	linker.c	FUNCTION_22
0x4002999	            0x415d	                                 pop r13	      1927	linker.c	FUNCTION_22
0x400299b	            0x415e	                                 pop r14	      1927	linker.c	FUNCTION_22
0x400299d	            0x415f	                                 pop r15	      1927	linker.c	FUNCTION_22
0x400299f	              0xc3	                                     ret	      1927	linker.c	FUNCTION_22
0x40029a0	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	      1833	linker.c	FUNCTION_22	CALL_5
0x40029a5	      0x488d442418	                   lea rax, [rsp + 0x18]	      1832	linker.c	FUNCTION_22
0x40029aa	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1833	linker.c	FUNCTION_22	CALL_5
0x40029af	      0xbe00000000	                              mov esi, 0	      1833	linker.c	FUNCTION_22	CALL_5
0x40029b4	      0x4c89642420	             mov qword [rsp + 0x20], r12	      1830	linker.c	FUNCTION_22
0x40029b9	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      1831	linker.c	FUNCTION_22
0x40029be	      0x4889442430	             mov qword [rsp + 0x30], rax	      1832	linker.c	FUNCTION_22
0x40029c3	      0xe800000000	                          call 0x40029c8	      1833	linker.c	FUNCTION_22	CALL_5
0x40029c8	    0x488db5b80000	                   lea rsi, [rbp + 0xb8]	      1833	linker.c	FUNCTION_22	CALL_5
0x40029cf	    0x488dbdb00000	                   lea rdi, [rbp + 0xb0]	      1833	linker.c	FUNCTION_22	CALL_5
0x40029d6	      0x488d542418	                   lea rdx, [rsp + 0x18]	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x40029db	            0x31c9	                            xor ecx, ecx	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x40029dd	      0xe8fed7ffff	call sym.generic_add_output_symbol.isra.0	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x40029e2	            0x85c0	                           test eax, eax	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x40029e4	            0x7495	                            je 0x400297b	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x40029e6	      0x410fb60424	                   movzx eax, byte [r12]	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x40029eb	          0x83e003	                              and eax, 3	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x40029ee	            0x3c02	                               cmp al, 2	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x40029f0	     0xf8498000000	                            je 0x4002a8e	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x40029f6	    0x4c8bad900000	            mov r13, qword [rbp + 0x90] 	      1903	linker.c	FUNCTION_22	FOR_6
0x40029fd	          0x4d85ed	                           test r13, r13	      1903	linker.c	FUNCTION_22	FOR_6
0x4002a00	            0x7471	                            je 0x4002a73	      1903	linker.c	FUNCTION_22	FOR_6
0x4002a02	    0x498b9d080100	           mov rbx, qword [r13 + 0x108] 	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4002a09	          0x4885db	                           test rbx, rbx	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4002a0c	            0x752d	                           jne 0x4002a3b	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4002a0e	            0xeb5a	                           jmp 0x4002a6a	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4002a10	          0x4889d9	                            mov rcx, rbx	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4002a13	          0x4c89ea	                            mov rdx, r13	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4002a16	          0x4c89e6	                            mov rsi, r12	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4002a19	          0x4889ef	                            mov rdi, rbp	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4002a1c	            0x7262	                            jb 0x4002a80	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002a1e	          0x83e803	                              sub eax, 3	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002a21	          0x83f801	                              cmp eax, 1	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002a24	            0x775a	                            ja 0x4002a80	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002a26	      0xe800000000	                          call 0x4002a2b	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x4002a2b	            0x85c0	                           test eax, eax	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x4002a2d	     0xf8448ffffff	                            je 0x400297b	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x4002a33	          0x488b1b	                    mov rbx, qword [rbx]	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4002a36	          0x4885db	                           test rbx, rbx	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4002a39	            0x742f	                            je 0x4002a6a	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4002a3b	          0x8b4308	                mov eax, dword [rbx + 8]	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002a3e	          0x83f801	                              cmp eax, 1	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002a41	            0x75cd	                           jne 0x4002a10	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002a43	    0x41b801000000	                              mov r8d, 1	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002a49	          0x4889d9	                            mov rcx, rbx	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002a4c	          0x4c89ea	                            mov rdx, r13	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002a4f	          0x4c89e6	                            mov rsi, r12	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002a52	          0x4889ef	                            mov rdi, rbp	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002a55	      0xe8b6deffff	    call sym.default_indirect_link_order	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002a5a	            0x85c0	                           test eax, eax	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002a5c	     0xf8419ffffff	                            je 0x400297b	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002a62	          0x488b1b	                    mov rbx, qword [rbx]	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4002a65	          0x4885db	                           test rbx, rbx	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4002a68	            0x75d1	                           jne 0x4002a3b	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4002a6a	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      1903	linker.c	FUNCTION_22	FOR_6
0x4002a6e	          0x4d85ed	                           test r13, r13	      1903	linker.c	FUNCTION_22	FOR_6
0x4002a71	            0x758f	                           jne 0x4002a02	      1903	linker.c	FUNCTION_22	FOR_6
0x4002a73	      0xb801000000	                              mov eax, 1	      1926	linker.c	FUNCTION_22
0x4002a78	      0xe900ffffff	                           jmp 0x400297d	      1926	linker.c	FUNCTION_22
0x4002a7d	           0xf1f00	                         nop dword [rax]	      1926	linker.c	FUNCTION_22
0x4002a80	      0xe800000000	                          call 0x4002a85	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4002a85	            0x85c0	                           test eax, eax	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4002a87	            0x75aa	                           jne 0x4002a33	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4002a89	      0xe9edfeffff	                           jmp 0x400297b	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4002a8e	    0x4c8bad900000	            mov r13, qword [rbp + 0x90] 	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002a95	          0x4d85ed	                           test r13, r13	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002a98	            0x74d9	                            je 0x4002a73	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002a9a	    0x498b9d080100	           mov rbx, qword [r13 + 0x108] 	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4002aa1	    0x41c785880000	               mov dword [r13 + 0x88], 0	      1848	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002aac	          0x4885db	                           test rbx, rbx	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4002aaf	            0x7514	                           jne 0x4002ac5	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4002ab1	            0xeb68	                           jmp 0x4002b1b	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4002ab3	       0xf1f440000	                   nop dword [rax + rax]	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4002ab8	          0x83f801	                              cmp eax, 1	      1854	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x4002abb	            0x7473	                            je 0x4002b30	      1854	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x4002abd	          0x488b1b	                    mov rbx, qword [rbx]	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4002ac0	          0x4885db	                           test rbx, rbx	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4002ac3	            0x741b	                            je 0x4002ae0	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4002ac5	          0x8b4308	                mov eax, dword [rbx + 8]	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x4002ac8	          0x8d50fd	                      lea edx, [rax - 3]	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x4002acb	          0x83fa01	                              cmp edx, 1	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x4002ace	            0x77e8	                            ja 0x4002ab8	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x4002ad0	          0x488b1b	                    mov rbx, qword [rbx]	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4002ad3	    0x418385880000	               add dword [r13 + 0x88], 1	      1853	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x4002adb	          0x4885db	                           test rbx, rbx	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4002ade	            0x75e5	                           jne 0x4002ac5	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4002ae0	    0x418b85880000	            mov eax, dword [r13 + 0x88] 	      1885	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002ae7	            0x85c0	                           test eax, eax	      1885	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002ae9	            0x7430	                            je 0x4002b1b	      1885	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002aeb	    0x488d34c50000	                        lea rsi, [rax*8]	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x4002af3	          0x4889ef	                            mov rdi, rbp	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x4002af6	      0xe800000000	                          call 0x4002afb	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x4002afb	          0x4885c0	                           test rax, rax	      1892	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	IF_11
0x4002afe	    0x498985800000	             mov qword [r13 + 0x80], rax	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x4002b05	     0xf8470feffff	                            je 0x400297b	      1892	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	IF_11
0x4002b0b	      0x41834d2004	                or dword [r13 + 0x20], 4	      1894	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002b10	    0x41c785880000	               mov dword [r13 + 0x88], 0	      1897	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002b1b	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002b1f	          0x4d85ed	                           test r13, r13	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002b22	     0xf8572ffffff	                           jne 0x4002a9a	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002b28	      0xe9c9feffff	                           jmp 0x40029f6	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002b2d	           0xf1f00	                         nop dword [rax]	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002b30	        0x4c8b7320	            mov r14, qword [rbx + 0x20] 	      1863	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x4002b34	    0x4d8bbef00000	            mov r15, qword [r14 + 0xf0] 	      1864	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x4002b3b	          0x4c89f6	                            mov rsi, r14	      1865	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_8
0x4002b3e	          0x4c89ff	                            mov rdi, r15	      1865	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_8
0x4002b41	      0xe800000000	                          call 0x4002b46	      1865	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_8
0x4002b46	          0x4885c0	                           test rax, rax	      1867	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_7
0x4002b49	     0xf882cfeffff	                            js 0x400297b	      1867	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_7
0x4002b4f	          0x4889c7	                            mov rdi, rax	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x4002b52	        0x48890424	                    mov qword [rsp], rax	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x4002b56	      0xe800000000	                          call 0x4002b5b	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x4002b5b	          0x4885c0	                           test rax, rax	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x4002b5e	          0x4989c0	                             mov r8, rax	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x4002b61	            0x750d	                           jne 0x4002b70	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x4002b63	        0x488b1424	                    mov rdx, qword [rsp]	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x4002b67	          0x4885d2	                           test rdx, rdx	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x4002b6a	     0xf850bfeffff	                           jne 0x400297b	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x4002b70	    0x498b8fb00000	            mov rcx, qword [r15 + 0xb0] 	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x4002b77	          0x4c89c2	                             mov rdx, r8	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x4002b7a	          0x4c89f6	                            mov rsi, r14	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x4002b7d	          0x4c89ff	                            mov rdi, r15	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x4002b80	      0x4c89442408	                 mov qword [rsp + 8], r8	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x4002b85	      0xe800000000	                          call 0x4002b8a	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x4002b8a	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1877	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_12
0x4002b8f	        0x48890424	                    mov qword [rsp], rax	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x4002b93	          0x4c89c7	                             mov rdi, r8	      1877	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_12
0x4002b96	      0xe800000000	                          call 0x4002b9b	      1877	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_12
0x4002b9b	        0x488b0424	                    mov rax, qword [rsp]	      1878	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_9
0x4002b9f	          0x4885c0	                           test rax, rax	      1878	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_9
0x4002ba2	     0xf88d3fdffff	                            js 0x400297b	      1878	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_9
0x4002ba8	    0x418b96880000	            mov edx, dword [r14 + 0x88] 	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x4002baf	          0x4839c2	                            cmp rdx, rax	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x4002bb2	            0x7413	                            je 0x4002bc7	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x4002bb4	      0xbe59070000	                          mov esi, 0x759	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x4002bb9	      0xbf00000000	                              mov edi, 0	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x4002bbe	      0xe800000000	                          call 0x4002bc3	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x4002bc3	        0x488b0424	                    mov rax, qword [rsp]	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x4002bc7	    0x410185880000	             add dword [r13 + 0x88], eax	      1882	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x4002bce	      0xe9eafeffff	                           jmp 0x4002abd	      1882	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x4002bd3	      0xe800000000	                          call 0x4002bd8	      1927	linker.c	FUNCTION_22
bfd_link_hash_traverse	WHILE,0:CALL,1:DO,0:FOR,2:IF,1:ELSE,0:functions,0:SWITCH,0	51
0x4000e30	            0x4156	                                push r14	       646	linker.c	FUNCTION_6
0x4000e32	            0x4155	                                push r13	       646	linker.c	FUNCTION_6
0x4000e34	          0x4531f6	                          xor r14d, r14d	       646	linker.c	FUNCTION_6
0x4000e37	            0x4154	                                push r12	       646	linker.c	FUNCTION_6
0x4000e39	              0x55	                                push rbp	       646	linker.c	FUNCTION_6
0x4000e3a	          0x4989fd	                            mov r13, rdi	       646	linker.c	FUNCTION_6
0x4000e3d	              0x53	                                push rbx	       646	linker.c	FUNCTION_6
0x4000e3e	         0xfb64724	           movzx eax, byte [rdi + 0x24] 	       649	linker.c	FUNCTION_6
0x4000e42	          0x4989f4	                            mov r12, rsi	       649	linker.c	FUNCTION_6
0x4000e45	          0x8b4f18	            mov ecx, dword [rdi + 0x18] 	       650	linker.c	FUNCTION_6	FOR_1
0x4000e48	          0x4889d5	                            mov rbp, rdx	       650	linker.c	FUNCTION_6	FOR_1
0x4000e4b	          0x83c801	                               or eax, 1	       649	linker.c	FUNCTION_6
0x4000e4e	            0x85c9	                           test ecx, ecx	       650	linker.c	FUNCTION_6	FOR_1
0x4000e50	          0x884724	               mov byte [rdi + 0x24], al	       649	linker.c	FUNCTION_6
0x4000e53	            0x7449	                            je 0x4000e9e	       650	linker.c	FUNCTION_6	FOR_1
0x4000e55	        0x498b5500	                    mov rdx, qword [r13]	       654	linker.c	FUNCTION_6	FOR_1
0x4000e59	          0x4489f0	                           mov eax, r14d	       654	linker.c	FUNCTION_6	FOR_1
0x4000e5c	        0x488b1cc2	            mov rbx, qword [rdx + rax*8]	       654	linker.c	FUNCTION_6	FOR_1
0x4000e60	          0x4885db	                           test rbx, rbx	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4000e63	            0x751d	                           jne 0x4000e82	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4000e65	            0xeb49	                           jmp 0x4000eb0	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4000e67	    0x660f1f840000	                    nop word [rax + rax]	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4000e70	          0x4889ee	                            mov rsi, rbp	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000e73	          0x41ffd4	                                call r12	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000e76	            0x85c0	                           test eax, eax	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000e78	            0x741f	                            je 0x4000e99	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000e7a	          0x488b1b	                    mov rbx, qword [rbx]	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4000e7d	          0x4885db	                           test rbx, rbx	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4000e80	            0x742e	                            je 0x4000eb0	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4000e82	        0x807b1807	                cmp byte [rbx + 0x18], 7	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000e86	          0x4889df	                            mov rdi, rbx	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000e89	            0x75e5	                           jne 0x4000e70	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000e8b	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000e8f	          0x4889ee	                            mov rsi, rbp	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000e92	          0x41ffd4	                                call r12	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000e95	            0x85c0	                           test eax, eax	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000e97	            0x75e1	                           jne 0x4000e7a	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000e99	      0x410fb64524	           movzx eax, byte [r13 + 0x24] 	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000e9e	          0x83e0fe	                     and eax, 0xfffffffe	       660	linker.c	FUNCTION_6
0x4000ea1	              0x5b	                                 pop rbx	       661	linker.c	FUNCTION_6
0x4000ea2	        0x41884524	               mov byte [r13 + 0x24], al	       660	linker.c	FUNCTION_6
0x4000ea6	              0x5d	                                 pop rbp	       661	linker.c	FUNCTION_6
0x4000ea7	            0x415c	                                 pop r12	       661	linker.c	FUNCTION_6
0x4000ea9	            0x415d	                                 pop r13	       661	linker.c	FUNCTION_6
0x4000eab	            0x415e	                                 pop r14	       661	linker.c	FUNCTION_6
0x4000ead	              0xc3	                                     ret	       661	linker.c	FUNCTION_6
0x4000eae	            0x6690	                                     nop	       661	linker.c	FUNCTION_6
0x4000eb0	        0x4183c601	                             add r14d, 1	       650	linker.c	FUNCTION_6	FOR_1
0x4000eb4	        0x45397518	           cmp dword [r13 + 0x18], r14d 	       650	linker.c	FUNCTION_6	FOR_1
0x4000eb8	            0x779b	                            ja 0x4000e55	       650	linker.c	FUNCTION_6	FOR_1
0x4000eba	            0xebdd	                           jmp 0x4000e99	       650	linker.c	FUNCTION_6	FOR_1
bfd_section_already_linked_table_traverse	WHILE,0:CALL,3:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	4
0x4002c20	          0x4889f2	                            mov rdx, rsi	      2743	linker.c	FUNCTION_34
0x4002c23	          0x4889fe	                            mov rsi, rdi	      2744	linker.c	FUNCTION_34	CALL_2
0x4002c26	      0xbf00000000	                              mov edi, 0	      2744	linker.c	FUNCTION_34	CALL_2
0x4002c2b	      0xe900000000	jmp sym.bfd_section_already_linked_table_lookup	      2744	linker.c	FUNCTION_34	CALL_2
set_symbol_from_hash	WHILE,0:CALL,5:DO,0:FOR,0:IF,3:ELSE,2:functions,0:SWITCH,1	61
0x40000d0	              0x53	                                push rbx	      2204	linker.c	FUNCTION_25
0x40000d1	        0x807e1807	                cmp byte [rsi + 0x18], 7	      2205	linker.c	FUNCTION_25	SWITCH_1
0x40000d5	     0xf87cd000000	                            ja 0x40001a8	      2205	linker.c	FUNCTION_25	SWITCH_1
0x40000db	         0xfb64618	           movzx eax, byte [rsi + 0x18] 	      2205	linker.c	FUNCTION_25	SWITCH_1
0x40000df	          0x4889fb	                            mov rbx, rdi	      2205	linker.c	FUNCTION_25	SWITCH_1
0x40000e2	    0xff24c5000000	                       jmp qword [rax*8]	      2205	linker.c	FUNCTION_25	SWITCH_1
0x40000e9	     0xf1f80000000	                         nop dword [rax]	      2205	linker.c	FUNCTION_25	SWITCH_1
0x40000f0	    0x814f18800000	             or dword [rdi + 0x18], 0x80	      2231	linker.c	FUNCTION_25	SWITCH_1
0x40000f7	    0x48c747200000	               mov qword [rdi + 0x20], 0	      2229	linker.c	FUNCTION_25	SWITCH_1
0x40000ff	    0x48c747100000	               mov qword [rdi + 0x10], 0	      2230	linker.c	FUNCTION_25	SWITCH_1
0x4000107	              0x5b	                                 pop rbx	      2258	linker.c	FUNCTION_25
0x4000108	              0xc3	                                     ret	      2258	linker.c	FUNCTION_25
0x4000109	     0xf1f80000000	                         nop dword [rax]	      2258	linker.c	FUNCTION_25
0x4000110	    0x814f18800000	             or dword [rdi + 0x18], 0x80	      2238	linker.c	FUNCTION_25	SWITCH_1
0x4000117	        0x488b4628	            mov rax, qword [rsi + 0x28] 	      2239	linker.c	FUNCTION_25	SWITCH_1
0x400011b	        0x48894320	             mov qword [rbx + 0x20], rax	      2239	linker.c	FUNCTION_25	SWITCH_1
0x400011f	        0x488b4630	            mov rax, qword [rsi + 0x30] 	      2240	linker.c	FUNCTION_25	SWITCH_1
0x4000123	        0x48894310	             mov qword [rbx + 0x10], rax	      2240	linker.c	FUNCTION_25	SWITCH_1
0x4000127	              0x5b	                                 pop rbx	      2258	linker.c	FUNCTION_25
0x4000128	              0xc3	                                     ret	      2258	linker.c	FUNCTION_25
0x4000129	     0xf1f80000000	                         nop dword [rax]	      2258	linker.c	FUNCTION_25
0x4000130	        0x488b4630	            mov rax, qword [rsi + 0x30] 	      2243	linker.c	FUNCTION_25	SWITCH_1
0x4000134	        0x48894710	             mov qword [rdi + 0x10], rax	      2243	linker.c	FUNCTION_25	SWITCH_1
0x4000138	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      2244	linker.c	FUNCTION_25	SWITCH_1	IF_2
0x400013c	          0x4885c0	                           test rax, rax	      2244	linker.c	FUNCTION_25	SWITCH_1	IF_2
0x400013f	            0x741d	                            je 0x400015e	      2244	linker.c	FUNCTION_25	SWITCH_1	IF_2
0x4000141	        0xf6402110	           test byte [rax + 0x21], 0x10 	      2246	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_3
0x4000145	            0x75c0	                           jne 0x4000107	      2246	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_3
0x4000147	    0x483d00000000	                              cmp rax, 0	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x400014d	            0x740f	                            je 0x400015e	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x400014f	      0xbec8080000	                          mov esi, 0x8c8	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x4000154	      0xbf00000000	                              mov edi, 0	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x4000159	      0xe800000000	                          call 0x400015e	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x400015e	    0x48c743200000	               mov qword [rbx + 0x20], 0	      2245	linker.c	FUNCTION_25	SWITCH_1	IF_2
0x4000166	              0x5b	                                 pop rbx	      2258	linker.c	FUNCTION_25
0x4000167	              0xc3	                                     ret	      2258	linker.c	FUNCTION_25
0x4000168	     0xf1f84000000	                   nop dword [rax + rax]	      2258	linker.c	FUNCTION_25
0x4000170	      0x48837f2000	               cmp qword [rdi + 0x20], 0	      2213	linker.c	FUNCTION_25	SWITCH_1	IF_1
0x4000175	            0x7449	                            je 0x40001c0	      2213	linker.c	FUNCTION_25	SWITCH_1	IF_1
0x4000177	        0xf6471908	               test byte [rdi + 0x19], 8	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x400017b	            0x758a	                           jne 0x4000107	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x400017d	              0x5b	                                 pop rbx	      2258	linker.c	FUNCTION_25
0x400017e	      0xbea7080000	                          mov esi, 0x8a7	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x4000183	      0xbf00000000	                              mov edi, 0	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x4000188	      0xe900000000	                           jmp 0x400018d	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x400018d	           0xf1f00	                         nop dword [rax]	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x4000190	    0x48c747200000	               mov qword [rdi + 0x20], 0	      2225	linker.c	FUNCTION_25	SWITCH_1
0x4000198	    0x48c747100000	               mov qword [rdi + 0x10], 0	      2226	linker.c	FUNCTION_25	SWITCH_1
0x40001a0	              0x5b	                                 pop rbx	      2258	linker.c	FUNCTION_25
0x40001a1	              0xc3	                                     ret	      2258	linker.c	FUNCTION_25
0x40001a2	    0x660f1f440000	                    nop word [rax + rax]	      2258	linker.c	FUNCTION_25
0x40001a8	      0xba00000000	                              mov edx, 0	      2208	linker.c	FUNCTION_25	SWITCH_1	CALL_1
0x40001ad	      0xbea0080000	                          mov esi, 0x8a0	      2208	linker.c	FUNCTION_25	SWITCH_1	CALL_1
0x40001b2	      0xbf00000000	                              mov edi, 0	      2208	linker.c	FUNCTION_25	SWITCH_1	CALL_1
0x40001b7	      0xe800000000	                          call 0x40001bc	      2208	linker.c	FUNCTION_25	SWITCH_1	CALL_1
0x40001bc	         0xf1f4000	                         nop dword [rax]	      2208	linker.c	FUNCTION_25	SWITCH_1	CALL_1
0x40001c0	    0x814f18000800	            or dword [rdi + 0x18], 0x800	      2219	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x40001c7	    0x48c747200000	               mov qword [rdi + 0x20], 0	      2220	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x40001cf	    0x48c747100000	               mov qword [rdi + 0x10], 0	      2221	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x40001d7	              0x5b	                                 pop rbx	      2258	linker.c	FUNCTION_25
0x40001d8	              0xc3	                                     ret	      2258	linker.c	FUNCTION_25
_bfd_nolink_bfd_lookup_section_flags	WHILE,0:CALL,1:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	2
0x4003620	    0x488bbaf00000	            mov rdi, qword [rdx + 0xf0] 	      3440	linker.c	FUNCTION_56	CALL_1
0x4003627	      0xe900000000	                           jmp 0x400362c	      3440	linker.c	FUNCTION_56	CALL_1
bfd_wrapped_link_hash_lookup	WHILE,0:CALL,16:DO,0:FOR,0:IF,6:ELSE,0:functions,0:SWITCH,0	113
0x4000780	            0x4157	                                push r15	       525	linker.c	FUNCTION_4
0x4000782	            0x4156	                                push r14	       525	linker.c	FUNCTION_4
0x4000784	          0x4589cf	                           mov r15d, r9d	       525	linker.c	FUNCTION_4
0x4000787	            0x4155	                                push r13	       525	linker.c	FUNCTION_4
0x4000789	            0x4154	                                push r12	       525	linker.c	FUNCTION_4
0x400078b	          0x4189ce	                           mov r14d, ecx	       525	linker.c	FUNCTION_4
0x400078e	              0x55	                                push rbp	       525	linker.c	FUNCTION_4
0x400078f	              0x53	                                push rbx	       525	linker.c	FUNCTION_4
0x4000790	          0x4889f5	                            mov rbp, rsi	       525	linker.c	FUNCTION_4
0x4000793	          0x4889d3	                            mov rbx, rdx	       525	linker.c	FUNCTION_4
0x4000796	        0x4883ec18	                           sub rsp, 0x18	       525	linker.c	FUNCTION_4
0x400079a	        0x488b4640	            mov rax, qword [rsi + 0x40] 	       528	linker.c	FUNCTION_4	IF_1
0x400079e	      0x448944240c	              mov dword [rsp + 0xc], r8d	       525	linker.c	FUNCTION_4
0x40007a3	          0x4885c0	                           test rax, rax	       528	linker.c	FUNCTION_4	IF_1
0x40007a6	     0xf84d3000000	                            je 0x400087f	       528	linker.c	FUNCTION_4	IF_1
0x40007ac	        0x440fb622	                  movzx r12d, byte [rdx]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40007b0	        0x488b5708	                mov rdx, qword [rdi + 8]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40007b4	        0x443a621c	            cmp r12b, byte [rdx + 0x1c] 	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40007b8	     0xf84aa000000	                            je 0x4000868	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40007be	        0x443a6609	                cmp r12b, byte [rsi + 9]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40007c2	     0xf84a0000000	                            je 0x4000868	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40007c8	          0x4989dd	                            mov r13, rbx	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40007cb	          0x4531e4	                          xor r12d, r12d	       531	linker.c	FUNCTION_4	IF_1
0x40007ce	            0x31c9	                            xor ecx, ecx	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x40007d0	            0x31d2	                            xor edx, edx	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x40007d2	          0x4c89ee	                            mov rsi, r13	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x40007d5	          0x4889c7	                            mov rdi, rax	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x40007d8	      0xe800000000	                          call 0x40007dd	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x40007dd	          0x4885c0	                           test rax, rax	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x40007e0	     0xf8492000000	                            je 0x4000878	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x40007e6	          0x4c89ef	                            mov rdi, r13	       551	linker.c	FUNCTION_4	IF_1	IF_3	CALL_3
0x40007e9	      0xe800000000	                          call 0x40007ee	       551	linker.c	FUNCTION_4	IF_1	IF_3	CALL_3
0x40007ee	        0x488d7809	                      lea rdi, [rax + 9]	       552	linker.c	FUNCTION_4	IF_1	IF_3	CALL_4
0x40007f2	      0xe800000000	                          call 0x40007f7	       552	linker.c	FUNCTION_4	IF_1	IF_3	CALL_4
0x40007f7	          0x4885c0	                           test rax, rax	       553	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
0x40007fa	          0x4889c3	                            mov rbx, rax	       552	linker.c	FUNCTION_4	IF_1	IF_3	CALL_4
0x40007fd	     0xf8405010000	                            je 0x4000908	       553	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
0x4000803	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_76	CALL_3
0x4000806	          0x448820	                    mov byte [rax], r12b	       556	linker.c	FUNCTION_4	IF_1	IF_3
0x4000809	        0xc6400100	                   mov byte [rax + 1], 0	       557	linker.c	FUNCTION_4	IF_1	IF_3
0x400080d	      0xe800000000	                          call 0x4000812	       148	string3.h	FUNCTION_76	CALL_3
0x4000812	    0x48b95f5f7772	            movabs rcx, 0x5f706172775f5f	       148	string3.h	FUNCTION_76	CALL_3
0x400081c	      0x488d7c0307	                lea rdi, [rbx + rax + 7]	       148	string3.h	FUNCTION_76	CALL_3
0x4000821	          0x4c89ee	                            mov rsi, r13	       148	string3.h	FUNCTION_76	CALL_3
0x4000824	        0x48890c03	              mov qword [rbx + rax], rcx	       148	string3.h	FUNCTION_76	CALL_3
0x4000828	      0xe800000000	                          call 0x400082d	       148	string3.h	FUNCTION_76	CALL_3
0x400082d	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000831	          0x4589f8	                           mov r8d, r15d	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000834	      0xb901000000	                              mov ecx, 1	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000839	          0x4489f2	                           mov edx, r14d	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x400083c	          0x4889de	                            mov rsi, rbx	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x400083f	      0xe800000000	                          call 0x4000844	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000844	          0x4889df	                            mov rdi, rbx	       589	linker.c	FUNCTION_4	IF_1	IF_5	CALL_15
0x4000847	          0x4889c5	                            mov rbp, rax	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x400084a	      0xe800000000	                          call 0x400084f	       589	linker.c	FUNCTION_4	IF_1	IF_5	CALL_15
0x400084f	          0x4889e8	                            mov rax, rbp	       590	linker.c	FUNCTION_4	IF_1	IF_5
0x4000852	        0x4883c418	                           add rsp, 0x18	       597	linker.c	FUNCTION_4
0x4000856	              0x5b	                                 pop rbx	       597	linker.c	FUNCTION_4
0x4000857	              0x5d	                                 pop rbp	       597	linker.c	FUNCTION_4
0x4000858	            0x415c	                                 pop r12	       597	linker.c	FUNCTION_4
0x400085a	            0x415d	                                 pop r13	       597	linker.c	FUNCTION_4
0x400085c	            0x415e	                                 pop r14	       597	linker.c	FUNCTION_4
0x400085e	            0x415f	                                 pop r15	       597	linker.c	FUNCTION_4
0x4000860	              0xc3	                                     ret	       597	linker.c	FUNCTION_4
0x4000861	     0xf1f80000000	                         nop dword [rax]	       597	linker.c	FUNCTION_4
0x4000868	        0x4c8d6b01	                      lea r13, [rbx + 1]	       537	linker.c	FUNCTION_4	IF_1	IF_2
0x400086c	      0xe95dffffff	                           jmp 0x40007ce	       537	linker.c	FUNCTION_4	IF_1	IF_2
0x4000871	     0xf1f80000000	                         nop dword [rax]	       537	linker.c	FUNCTION_4	IF_1	IF_2
0x4000878	      0x41807d005f	                    cmp byte [r13], 0x5f	       568	linker.c	FUNCTION_4	IF_1	IF_5
0x400087d	            0x7429	                            je 0x40008a8	       568	linker.c	FUNCTION_4	IF_1	IF_5
0x400087f	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	       596	linker.c	FUNCTION_4	CALL_16
0x4000883	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       596	linker.c	FUNCTION_4	CALL_16
0x4000887	        0x4883c418	                           add rsp, 0x18	       597	linker.c	FUNCTION_4
0x400088b	          0x4589f8	                           mov r8d, r15d	       596	linker.c	FUNCTION_4	CALL_16
0x400088e	          0x4489f2	                           mov edx, r14d	       596	linker.c	FUNCTION_4	CALL_16
0x4000891	          0x4889de	                            mov rsi, rbx	       596	linker.c	FUNCTION_4	CALL_16
0x4000894	              0x5b	                                 pop rbx	       597	linker.c	FUNCTION_4
0x4000895	              0x5d	                                 pop rbp	       597	linker.c	FUNCTION_4
0x4000896	            0x415c	                                 pop r12	       597	linker.c	FUNCTION_4
0x4000898	            0x415d	                                 pop r13	       597	linker.c	FUNCTION_4
0x400089a	            0x415e	                                 pop r14	       597	linker.c	FUNCTION_4
0x400089c	            0x415f	                                 pop r15	       597	linker.c	FUNCTION_4
0x400089e	      0xe98dfcffff	            jmp sym.bfd_link_hash_lookup	       596	linker.c	FUNCTION_4	CALL_16
0x40008a3	       0xf1f440000	                   nop dword [rax + rax]	       596	linker.c	FUNCTION_4	CALL_16
0x40008a8	      0xbf00000000	                              mov edi, 0	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x40008ad	      0xb907000000	                              mov ecx, 7	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x40008b2	          0x4c89ee	                            mov rsi, r13	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x40008b5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x40008b7	            0x75c6	                           jne 0x400087f	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x40008b9	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40008bd	        0x4983c507	                              add r13, 7	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40008c1	            0x31c9	                            xor ecx, ecx	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40008c3	            0x31d2	                            xor edx, edx	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40008c5	          0x4c89ee	                            mov rsi, r13	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40008c8	      0xe800000000	                          call 0x40008cd	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40008cd	          0x4885c0	                           test rax, rax	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40008d0	            0x74ad	                            je 0x400087f	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40008d2	          0x4c89ef	                            mov rdi, r13	       580	linker.c	FUNCTION_4	IF_1	IF_5	CALL_11
0x40008d5	      0xe800000000	                          call 0x40008da	       580	linker.c	FUNCTION_4	IF_1	IF_5	CALL_11
0x40008da	        0x488d7802	                      lea rdi, [rax + 2]	       581	linker.c	FUNCTION_4	IF_1	IF_5	CALL_12
0x40008de	      0xe800000000	                          call 0x40008e3	       581	linker.c	FUNCTION_4	IF_1	IF_5	CALL_12
0x40008e3	          0x4885c0	                           test rax, rax	       582	linker.c	FUNCTION_4	IF_1	IF_5	IF_6
0x40008e6	          0x4889c3	                            mov rbx, rax	       581	linker.c	FUNCTION_4	IF_1	IF_5	CALL_12
0x40008e9	            0x741d	                            je 0x4000908	       582	linker.c	FUNCTION_4	IF_1	IF_5	IF_6
0x40008eb	          0x448820	                    mov byte [rax], r12b	       585	linker.c	FUNCTION_4	IF_1	IF_5
0x40008ee	          0x4c89ee	                            mov rsi, r13	       148	string3.h	FUNCTION_76	CALL_3
0x40008f1	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_76	CALL_3
0x40008f4	        0xc6400100	                   mov byte [rax + 1], 0	       586	linker.c	FUNCTION_4	IF_1	IF_5
0x40008f8	      0xe800000000	                          call 0x40008fd	       148	string3.h	FUNCTION_76	CALL_3
0x40008fd	      0xe92bffffff	                           jmp 0x400082d	       148	string3.h	FUNCTION_76	CALL_3
0x4000902	    0x660f1f440000	                    nop word [rax + rax]	       148	string3.h	FUNCTION_76	CALL_3
0x4000908	            0x31c0	                            xor eax, eax	       554	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
0x400090a	      0xe943ffffff	                           jmp 0x4000852	       554	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
bfd_find_version_for_sym	WHILE,2:CALL,2:DO,0:FOR,1:IF,13:ELSE,2:functions,0:SWITCH,0	127
0x4003370	            0x4157	                                push r15	      3197	linker.c	FUNCTION_48
0x4003372	            0x4156	                                push r14	      3197	linker.c	FUNCTION_48
0x4003374	            0x4155	                                push r13	      3197	linker.c	FUNCTION_48
0x4003376	            0x4154	                                push r12	      3197	linker.c	FUNCTION_48
0x4003378	              0x55	                                push rbp	      3197	linker.c	FUNCTION_48
0x4003379	              0x53	                                push rbx	      3197	linker.c	FUNCTION_48
0x400337a	        0x4883ec28	                           sub rsp, 0x28	      3197	linker.c	FUNCTION_48
0x400337e	          0x4885ff	                           test rdi, rdi	      3207	linker.c	FUNCTION_48	FOR_1
0x4003381	      0x4889542418	             mov qword [rsp + 0x18], rdx	      3197	linker.c	FUNCTION_48
0x4003386	     0xf846c010000	                            je 0x40034f8	      3207	linker.c	FUNCTION_48	FOR_1
0x400338c	          0x4989ff	                            mov r15, rdi	      3207	linker.c	FUNCTION_48	FOR_1
0x400338f	          0x4889f3	                            mov rbx, rsi	      3207	linker.c	FUNCTION_48	FOR_1
0x4003392	    0x48c744240800	                  mov qword [rsp + 8], 0	      3207	linker.c	FUNCTION_48	FOR_1
0x400339b	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3207	linker.c	FUNCTION_48	FOR_1
0x40033a4	            0x31ed	                            xor ebp, ebp	      3207	linker.c	FUNCTION_48	FOR_1
0x40033a6	          0x4531e4	                          xor r12d, r12d	      3207	linker.c	FUNCTION_48	FOR_1
0x40033a9	          0x4531f6	                          xor r14d, r14d	      3207	linker.c	FUNCTION_48	FOR_1
0x40033ac	         0xf1f4000	                         nop dword [rax]	      3207	linker.c	FUNCTION_48	FOR_1
0x40033b0	      0x49837f1800	               cmp qword [r15 + 0x18], 0	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x40033b5	            0x7469	                            je 0x4003420	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x40033b7	        0x4d8d6f18	                   lea r13, [r15 + 0x18]	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x40033bb	            0x31c0	                            xor eax, eax	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x40033bd	            0xeb3a	                           jmp 0x40033f9	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x40033bf	              0x90	                                     nop	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x40033c0	        0x488b7008	                mov rsi, qword [rax + 8]	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40033c4	          0x803e2a	                    cmp byte [rsi], 0x2a	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40033c7	            0x754b	                           jne 0x4003414	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40033c9	        0x807e0100	                   cmp byte [rsi + 1], 0	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40033cd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40033d2	        0x490f44cf	                          cmove rcx, r15	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40033d6	        0x4d0f45e7	                         cmovne r12, r15	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40033da	      0x48894c2408	                mov qword [rsp + 8], rcx	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40033df	          0x83e202	                              and edx, 2	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x40033e2	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      3221	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x40033e6	        0x490f45ef	                         cmovne rbp, r15	      3221	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x40033ea	          0x83ca04	                               or edx, 4	      3221	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x40033ed	          0x885010	               mov byte [rax + 0x10], dl	      3221	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x40033f0	          0x83e201	                              and edx, 1	      3224	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_4
0x40033f3	     0xf85af000000	                           jne 0x40034a8	      3224	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_4
0x40033f9	          0x4889da	                            mov rdx, rbx	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x40033fc	          0x4889c6	                            mov rsi, rax	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x40033ff	          0x4c89ef	                            mov rdi, r13	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4003402	        0x41ff5768	                 call qword [r15 + 0x68]	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4003406	          0x4885c0	                           test rax, rax	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4003409	            0x7415	                            je 0x4003420	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x400340b	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x400340f	          0xf6c201	                              test dl, 1	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4003412	            0x74ac	                            je 0x40033c0	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4003414	          0x4d89fc	                            mov r12, r15	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4003417	            0xebc6	                           jmp 0x40033df	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4003419	     0xf1f80000000	                         nop dword [rax]	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4003420	            0x31c0	                            xor eax, eax	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x4003422	      0x49837f3800	               cmp qword [r15 + 0x38], 0	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x4003427	        0x4d8d6f38	                   lea r13, [r15 + 0x38]	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x400342b	            0x746b	                            je 0x4003498	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x400342d	           0xf1f00	                         nop dword [rax]	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x4003430	          0x4889da	                            mov rdx, rbx	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4003433	          0x4889c6	                            mov rsi, rax	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4003436	          0x4c89ef	                            mov rdi, r13	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4003439	        0x41ff5768	                 call qword [r15 + 0x68]	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x400343d	          0x4885c0	                           test rax, rax	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4003440	            0x7456	                            je 0x4003498	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4003442	        0xf6401001	               test byte [rax + 0x10], 1	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003446	            0x7420	                            je 0x4003468	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003448	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3276	linker.c	FUNCTION_48	IF_13
0x400344d	    0xc70001000000	                      mov dword [rax], 1	      3276	linker.c	FUNCTION_48	IF_13
0x4003453	          0x4c89f8	                            mov rax, r15	      3277	linker.c	FUNCTION_48	IF_13
0x4003456	        0x4883c428	                           add rsp, 0x28	      3281	linker.c	FUNCTION_48
0x400345a	              0x5b	                                 pop rbx	      3281	linker.c	FUNCTION_48
0x400345b	              0x5d	                                 pop rbp	      3281	linker.c	FUNCTION_48
0x400345c	            0x415c	                                 pop r12	      3281	linker.c	FUNCTION_48
0x400345e	            0x415d	                                 pop r13	      3281	linker.c	FUNCTION_48
0x4003460	            0x415e	                                 pop r14	      3281	linker.c	FUNCTION_48
0x4003462	            0x415f	                                 pop r15	      3281	linker.c	FUNCTION_48
0x4003464	              0xc3	                                     ret	      3281	linker.c	FUNCTION_48
0x4003465	           0xf1f00	                         nop dword [rax]	      3281	linker.c	FUNCTION_48
0x4003468	        0x488b5008	                mov rdx, qword [rax + 8]	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x400346c	          0x803a2a	                    cmp byte [rdx], 0x2a	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x400346f	            0x751f	                           jne 0x4003490	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003471	        0x807a0100	                   cmp byte [rdx + 1], 0	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003475	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x400347a	        0x490f44cf	                          cmove rcx, r15	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x400347e	        0x4d0f45f7	                         cmovne r14, r15	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003482	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003487	            0xeba7	                           jmp 0x4003430	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003489	     0xf1f80000000	                         nop dword [rax]	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003490	          0x4d89fe	                            mov r14, r15	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003493	            0xeb9b	                           jmp 0x4003430	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003495	           0xf1f00	                         nop dword [rax]	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003498	          0x4d8b3f	                    mov r15, qword [r15]	      3207	linker.c	FUNCTION_48	FOR_1
0x400349b	          0x4d85ff	                           test r15, r15	      3207	linker.c	FUNCTION_48	FOR_1
0x400349e	     0xf850cffffff	                           jne 0x40033b0	      3207	linker.c	FUNCTION_48	FOR_1
0x40034a4	         0xf1f4000	                         nop dword [rax]	      3207	linker.c	FUNCTION_48	FOR_1
0x40034a8	          0x4d85f6	                           test r14, r14	      3258	linker.c	FUNCTION_48	IF_10
0x40034ab	           0xf94c2	                                 sete dl	      3258	linker.c	FUNCTION_48	IF_10
0x40034ae	          0x4d85e4	                           test r12, r12	      3258	linker.c	FUNCTION_48	IF_10
0x40034b1	           0xf94c0	                                 sete al	      3258	linker.c	FUNCTION_48	IF_10
0x40034b4	            0x20d0	                              and al, dl	      3258	linker.c	FUNCTION_48	IF_10
0x40034b6	            0x7507	                           jne 0x40034bf	      3258	linker.c	FUNCTION_48	IF_10
0x40034b8	            0x89d0	                            mov eax, edx	      3258	linker.c	FUNCTION_48	IF_10
0x40034ba	      0x4c89642408	                mov qword [rsp + 8], r12	      3258	linker.c	FUNCTION_48	IF_10
0x40034bf	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3261	linker.c	FUNCTION_48	IF_11
0x40034c4	          0x4885c9	                           test rcx, rcx	      3261	linker.c	FUNCTION_48	IF_11
0x40034c7	            0x7436	                            je 0x40034ff	      3261	linker.c	FUNCTION_48	IF_11
0x40034c9	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3267	linker.c	FUNCTION_48	IF_11
0x40034ce	            0x31c0	                            xor eax, eax	      3267	linker.c	FUNCTION_48	IF_11
0x40034d0	          0x4839e9	                            cmp rcx, rbp	      3267	linker.c	FUNCTION_48	IF_11
0x40034d3	           0xf94c0	                                 sete al	      3267	linker.c	FUNCTION_48	IF_11
0x40034d6	            0x8907	                    mov dword [rdi], eax	      3267	linker.c	FUNCTION_48	IF_11
0x40034d8	        0x4883c428	                           add rsp, 0x28	      3281	linker.c	FUNCTION_48
0x40034dc	          0x4889c8	                            mov rax, rcx	      3268	linker.c	FUNCTION_48	IF_11
0x40034df	              0x5b	                                 pop rbx	      3281	linker.c	FUNCTION_48
0x40034e0	              0x5d	                                 pop rbp	      3281	linker.c	FUNCTION_48
0x40034e1	            0x415c	                                 pop r12	      3281	linker.c	FUNCTION_48
0x40034e3	            0x415d	                                 pop r13	      3281	linker.c	FUNCTION_48
0x40034e5	            0x415e	                                 pop r14	      3281	linker.c	FUNCTION_48
0x40034e7	            0x415f	                                 pop r15	      3281	linker.c	FUNCTION_48
0x40034e9	              0xc3	                                     ret	      3281	linker.c	FUNCTION_48
0x40034ea	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      3281	linker.c	FUNCTION_48
0x40034ef	          0x4d85ff	                           test r15, r15	      3274	linker.c	FUNCTION_48	IF_13
0x40034f2	     0xf8550ffffff	                           jne 0x4003448	      3274	linker.c	FUNCTION_48	IF_13
0x40034f8	            0x31c0	                            xor eax, eax	      3280	linker.c	FUNCTION_48
0x40034fa	      0xe957ffffff	                           jmp 0x4003456	      3280	linker.c	FUNCTION_48
0x40034ff	            0x84c0	                             test al, al	      3271	linker.c	FUNCTION_48	IF_12
0x4003501	            0x75e7	                           jne 0x40034ea	      3271	linker.c	FUNCTION_48	IF_12
0x4003503	          0x4d89f7	                            mov r15, r14	      3271	linker.c	FUNCTION_48	IF_12
0x4003506	      0xe93dffffff	                           jmp 0x4003448	      3271	linker.c	FUNCTION_48	IF_12
_bfd_generic_link_hide_symbol	WHILE,0:CALL,0:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	1
0x4003310	            0xf3c3	                                     ret	      3136	linker.c	FUNCTION_46
bfd_section_already_linked_table_init	WHILE,0:CALL,1:DO,0:FOR,0:IF,0:ELSE,0:functions,0:SWITCH,0	5
0x4002ca0	      0xb92a000000	                           mov ecx, 0x2a	      2797	linker.c	FUNCTION_38	CALL_1
0x4002ca5	      0xba20000000	                           mov edx, 0x20	      2797	linker.c	FUNCTION_38	CALL_1
0x4002caa	      0xbe00000000	                              mov esi, 0	      2797	linker.c	FUNCTION_38	CALL_1
0x4002caf	      0xbf00000000	                              mov edi, 0	      2797	linker.c	FUNCTION_38	CALL_1
0x4002cb4	      0xe900000000	                           jmp 0x4002cb9	      2797	linker.c	FUNCTION_38	CALL_1
bfd_new_link_order	WHILE,0:CALL,1:DO,0:FOR,0:IF,2:ELSE,1:functions,0:SWITCH,0	21
0x40026e0	              0x53	                                push rbx	      2411	linker.c	FUNCTION_28
0x40026e1	          0x4889f3	                            mov rbx, rsi	      2411	linker.c	FUNCTION_28
0x40026e4	      0xbe30000000	                           mov esi, 0x30	      2415	linker.c	FUNCTION_28	CALL_1
0x40026e9	      0xe800000000	                          call 0x40026ee	      2415	linker.c	FUNCTION_28	CALL_1
0x40026ee	          0x4885c0	                           test rax, rax	      2416	linker.c	FUNCTION_28	IF_1
0x40026f1	            0x7435	                            je 0x4002728	      2416	linker.c	FUNCTION_28	IF_1
0x40026f3	    0xc74008000000	                  mov dword [rax + 8], 0	      2419	linker.c	FUNCTION_28
0x40026fa	    0x488b93100100	           mov rdx, qword [rbx + 0x110] 	      2421	linker.c	FUNCTION_28	IF_2
0x4002701	          0x4885d2	                           test rdx, rdx	      2421	linker.c	FUNCTION_28	IF_2
0x4002704	            0x7412	                            je 0x4002718	      2421	linker.c	FUNCTION_28	IF_2
0x4002706	          0x488902	                    mov qword [rdx], rax	      2422	linker.c	FUNCTION_28	IF_2
0x4002709	    0x488983100100	            mov qword [rbx + 0x110], rax	      2425	linker.c	FUNCTION_28	ELSE_1
0x4002710	              0x5b	                                 pop rbx	      2428	linker.c	FUNCTION_28	ELSE_1
0x4002711	              0xc3	                                     ret	      2428	linker.c	FUNCTION_28	ELSE_1
0x4002712	    0x660f1f440000	                    nop word [rax + rax]	      2428	linker.c	FUNCTION_28	ELSE_1
0x4002718	    0x488983080100	            mov qword [rbx + 0x108], rax	      2424	linker.c	FUNCTION_28	ELSE_1
0x400271f	            0xebe8	                           jmp 0x4002709	      2424	linker.c	FUNCTION_28	ELSE_1
0x4002721	     0xf1f80000000	                         nop dword [rax]	      2424	linker.c	FUNCTION_28	ELSE_1
0x4002728	            0x31c0	                            xor eax, eax	      2417	linker.c	FUNCTION_28	IF_1
0x400272a	              0x5b	                                 pop rbx	      2428	linker.c	FUNCTION_28	ELSE_1
0x400272b	              0xc3	                                     ret	      2428	linker.c	FUNCTION_28	ELSE_1
