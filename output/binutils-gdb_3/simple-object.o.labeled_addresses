simple_object_release_write	IF,1:functions,0:SWITCH,0:DO,0:CALL,7:WHILE,2:ELSE,0:FOR,0	46
0x4000710	            0x4155	                                push r13	       507	simple-object.c	FUNCTION_17
0x4000712	            0x4154	                                push r12	       507	simple-object.c	FUNCTION_17
0x4000714	          0x4989fd	                            mov r13, rdi	       507	simple-object.c	FUNCTION_17
0x4000717	              0x55	                                push rbp	       507	simple-object.c	FUNCTION_17
0x4000718	              0x53	                                push rbx	       507	simple-object.c	FUNCTION_17
0x4000719	        0x4883ec08	                              sub rsp, 8	       507	simple-object.c	FUNCTION_17
0x400071d	        0x488b7f08	                mov rdi, qword [rdi + 8]	       510	simple-object.c	FUNCTION_17	CALL_1
0x4000721	      0xe800000000	                          call 0x4000726	       510	simple-object.c	FUNCTION_17	CALL_1
0x4000726	        0x4d8b6510	            mov r12, qword [r13 + 0x10] 	       512	simple-object.c	FUNCTION_17
0x400072a	          0x4d85e4	                           test r12, r12	       513	simple-object.c	FUNCTION_17	WHILE_1
0x400072d	            0x7452	                            je 0x4000781	       513	simple-object.c	FUNCTION_17	WHILE_1
0x400072f	              0x90	                                     nop	       513	simple-object.c	FUNCTION_17	WHILE_1
0x4000730	      0x498b5c2418	            mov rbx, qword [r12 + 0x18] 	       518	simple-object.c	FUNCTION_17	WHILE_1
0x4000735	          0x4885db	                           test rbx, rbx	       519	simple-object.c	FUNCTION_17	WHILE_1	WHILE_2
0x4000738	            0x7509	                           jne 0x4000743	       519	simple-object.c	FUNCTION_17	WHILE_1	WHILE_2
0x400073a	            0xeb25	                           jmp 0x4000761	       519	simple-object.c	FUNCTION_17	WHILE_1	WHILE_2
0x400073c	         0xf1f4000	                         nop dword [rax]	       519	simple-object.c	FUNCTION_17	WHILE_1	WHILE_2
0x4000740	          0x4889eb	                            mov rbx, rbp	       519	simple-object.c	FUNCTION_17	WHILE_1	WHILE_2
0x4000743	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       523	simple-object.c	FUNCTION_17	WHILE_1	WHILE_2	IF_1
0x4000747	          0x4885ff	                           test rdi, rdi	       523	simple-object.c	FUNCTION_17	WHILE_1	WHILE_2	IF_1
0x400074a	            0x7405	                            je 0x4000751	       523	simple-object.c	FUNCTION_17	WHILE_1	WHILE_2	IF_1
0x400074c	      0xe800000000	                          call 0x4000751	       524	simple-object.c	FUNCTION_17	WHILE_1	WHILE_2	CALL_2
0x4000751	          0x488b2b	                    mov rbp, qword [rbx]	       525	simple-object.c	FUNCTION_17	WHILE_1	WHILE_2
0x4000754	          0x4889df	                            mov rdi, rbx	       526	simple-object.c	FUNCTION_17	WHILE_1	WHILE_2	CALL_3
0x4000757	      0xe800000000	                          call 0x400075c	       526	simple-object.c	FUNCTION_17	WHILE_1	WHILE_2	CALL_3
0x400075c	          0x4885ed	                           test rbp, rbp	       519	simple-object.c	FUNCTION_17	WHILE_1	WHILE_2
0x400075f	            0x75df	                           jne 0x4000740	       519	simple-object.c	FUNCTION_17	WHILE_1	WHILE_2
0x4000761	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       531	simple-object.c	FUNCTION_17	WHILE_1	CALL_4
0x4000766	        0x498b1c24	                    mov rbx, qword [r12]	       530	simple-object.c	FUNCTION_17	WHILE_1
0x400076a	      0xe800000000	                          call 0x400076f	       531	simple-object.c	FUNCTION_17	WHILE_1	CALL_4
0x400076f	          0x4c89e7	                            mov rdi, r12	       532	simple-object.c	FUNCTION_17	WHILE_1	CALL_5
0x4000772	      0xe800000000	                          call 0x4000777	       532	simple-object.c	FUNCTION_17	WHILE_1	CALL_5
0x4000777	          0x4885db	                           test rbx, rbx	       513	simple-object.c	FUNCTION_17	WHILE_1
0x400077a	            0x7405	                            je 0x4000781	       513	simple-object.c	FUNCTION_17	WHILE_1
0x400077c	          0x4989dc	                            mov r12, rbx	       513	simple-object.c	FUNCTION_17	WHILE_1
0x400077f	            0xebaf	                           jmp 0x4000730	       513	simple-object.c	FUNCTION_17	WHILE_1
0x4000781	        0x498b4500	                    mov rax, qword [r13]	       536	simple-object.c	FUNCTION_17	CALL_6
0x4000785	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	       536	simple-object.c	FUNCTION_17	CALL_6
0x4000789	          0xff5040	                 call qword [rax + 0x40]	       536	simple-object.c	FUNCTION_17	CALL_6
0x400078c	        0x4883c408	                              add rsp, 8	       538	simple-object.c	FUNCTION_17
0x4000790	          0x4c89ef	                            mov rdi, r13	       537	simple-object.c	FUNCTION_17	CALL_7
0x4000793	              0x5b	                                 pop rbx	       538	simple-object.c	FUNCTION_17
0x4000794	              0x5d	                                 pop rbp	       538	simple-object.c	FUNCTION_17
0x4000795	            0x415c	                                 pop r12	       538	simple-object.c	FUNCTION_17
0x4000797	            0x415d	                                 pop r13	       538	simple-object.c	FUNCTION_17
0x4000799	      0xe900000000	                           jmp 0x400079e	       537	simple-object.c	FUNCTION_17	CALL_7
simple_object_internal_write	IF,5:functions,0:SWITCH,0:DO,1:CALL,2:WHILE,0:ELSE,2:FOR,0	67
0x4000260	            0x4156	                                push r14	       110	simple-object.c	FUNCTION_2
0x4000262	            0x4155	                                push r13	       110	simple-object.c	FUNCTION_2
0x4000264	          0x4d89c6	                             mov r14, r8	       110	simple-object.c	FUNCTION_2
0x4000267	            0x4154	                                push r12	       110	simple-object.c	FUNCTION_2
0x4000269	              0x55	                                push rbp	       110	simple-object.c	FUNCTION_2
0x400026a	          0x4889d5	                            mov rbp, rdx	       110	simple-object.c	FUNCTION_2
0x400026d	              0x53	                                push rbx	       110	simple-object.c	FUNCTION_2
0x400026e	            0x31d2	                            xor edx, edx	       111	simple-object.c	FUNCTION_2	IF_1	CALL_1
0x4000270	          0x4189fc	                           mov r12d, edi	       110	simple-object.c	FUNCTION_2
0x4000273	          0x4889cb	                            mov rbx, rcx	       110	simple-object.c	FUNCTION_2
0x4000276	          0x4d89cd	                             mov r13, r9	       110	simple-object.c	FUNCTION_2
0x4000279	      0xe800000000	                          call 0x400027e	       111	simple-object.c	FUNCTION_2	IF_1	CALL_1
0x400027e	          0x4885c0	                           test rax, rax	       111	simple-object.c	FUNCTION_2	IF_1	CALL_1
0x4000281	            0x7910	                           jns 0x4000293	       111	simple-object.c	FUNCTION_2	IF_1	CALL_1
0x4000283	            0xeb7b	                           jmp 0x4000300	       111	simple-object.c	FUNCTION_2	IF_1	CALL_1
0x4000285	           0xf1f00	                         nop dword [rax]	       111	simple-object.c	FUNCTION_2	IF_1	CALL_1
0x4000288	          0x4801c5	                            add rbp, rax	       125	simple-object.c	FUNCTION_2	DO_1	ELSE_1	IF_3
0x400028b	          0x4829c3	                            sub rbx, rax	       126	simple-object.c	FUNCTION_2	DO_1	ELSE_1	IF_3
0x400028e	          0x4885db	                           test rbx, rbx	       135	simple-object.c	FUNCTION_2
0x4000291	            0x745d	                            je 0x40002f0	       135	simple-object.c	FUNCTION_2
0x4000293	          0x4889da	                            mov rdx, rbx	       120	simple-object.c	FUNCTION_2	DO_1	CALL_2
0x4000296	          0x4889ee	                            mov rsi, rbp	       120	simple-object.c	FUNCTION_2	DO_1	CALL_2
0x4000299	          0x4489e7	                           mov edi, r12d	       120	simple-object.c	FUNCTION_2	DO_1	CALL_2
0x400029c	      0xe800000000	                          call 0x40002a1	       120	simple-object.c	FUNCTION_2	DO_1	CALL_2
0x40002a1	        0x4883f800	                              cmp rax, 0	       121	simple-object.c	FUNCTION_2	DO_1	IF_2
0x40002a5	            0x7421	                            je 0x40002c8	       121	simple-object.c	FUNCTION_2	DO_1	IF_2
0x40002a7	            0x7fdf	                            jg 0x4000288	       123	simple-object.c	FUNCTION_2	DO_1	ELSE_1	IF_3
0x40002a9	      0xe800000000	                          call 0x40002ae	       128	simple-object.c	FUNCTION_2	DO_1	ELSE_2	IF_4
0x40002ae	            0x8b00	                    mov eax, dword [rax]	       128	simple-object.c	FUNCTION_2	DO_1	ELSE_2	IF_4
0x40002b0	          0x83f804	                              cmp eax, 4	       128	simple-object.c	FUNCTION_2	DO_1	ELSE_2	IF_4
0x40002b3	            0x74d9	                            je 0x400028e	       128	simple-object.c	FUNCTION_2	DO_1	ELSE_2	IF_4
0x40002b5	    0x49c706000000	                      mov qword [r14], 0	       130	simple-object.c	FUNCTION_2	DO_1	ELSE_2	IF_4
0x40002bc	        0x41894500	                    mov dword [r13], eax	       131	simple-object.c	FUNCTION_2	DO_1	ELSE_2	IF_4
0x40002c0	            0x31c0	                            xor eax, eax	       132	simple-object.c	FUNCTION_2	DO_1	ELSE_2	IF_4
0x40002c2	            0xeb1a	                           jmp 0x40002de	       132	simple-object.c	FUNCTION_2	DO_1	ELSE_2	IF_4
0x40002c4	         0xf1f4000	                         nop dword [rax]	       132	simple-object.c	FUNCTION_2	DO_1	ELSE_2	IF_4
0x40002c8	          0x4885db	                           test rbx, rbx	       137	simple-object.c	FUNCTION_2	IF_5
0x40002cb	            0x7423	                            je 0x40002f0	       137	simple-object.c	FUNCTION_2	IF_5
0x40002cd	    0x49c706000000	                      mov qword [r14], 0	       139	simple-object.c	FUNCTION_2	IF_5
0x40002d4	            0x31c0	                            xor eax, eax	       141	simple-object.c	FUNCTION_2	IF_5
0x40002d6	    0x41c745000000	                      mov dword [r13], 0	       140	simple-object.c	FUNCTION_2	IF_5
0x40002de	              0x5b	                                 pop rbx	       145	simple-object.c	FUNCTION_2
0x40002df	              0x5d	                                 pop rbp	       145	simple-object.c	FUNCTION_2
0x40002e0	            0x415c	                                 pop r12	       145	simple-object.c	FUNCTION_2
0x40002e2	            0x415d	                                 pop r13	       145	simple-object.c	FUNCTION_2
0x40002e4	            0x415e	                                 pop r14	       145	simple-object.c	FUNCTION_2
0x40002e6	              0xc3	                                     ret	       145	simple-object.c	FUNCTION_2
0x40002e7	    0x660f1f840000	                    nop word [rax + rax]	       145	simple-object.c	FUNCTION_2
0x40002f0	              0x5b	                                 pop rbx	       145	simple-object.c	FUNCTION_2
0x40002f1	      0xb801000000	                              mov eax, 1	       144	simple-object.c	FUNCTION_2
0x40002f6	              0x5d	                                 pop rbp	       145	simple-object.c	FUNCTION_2
0x40002f7	            0x415c	                                 pop r12	       145	simple-object.c	FUNCTION_2
0x40002f9	            0x415d	                                 pop r13	       145	simple-object.c	FUNCTION_2
0x40002fb	            0x415e	                                 pop r14	       145	simple-object.c	FUNCTION_2
0x40002fd	              0xc3	                                     ret	       145	simple-object.c	FUNCTION_2
0x40002fe	            0x6690	                                     nop	       145	simple-object.c	FUNCTION_2
0x4000300	    0x49c706000000	                      mov qword [r14], 0	       113	simple-object.c	FUNCTION_2	IF_1
0x4000307	      0xe800000000	                          call 0x400030c	       114	simple-object.c	FUNCTION_2	IF_1
0x400030c	            0x8b00	                    mov eax, dword [rax]	       114	simple-object.c	FUNCTION_2	IF_1
0x400030e	              0x5b	                                 pop rbx	       145	simple-object.c	FUNCTION_2
0x400030f	              0x5d	                                 pop rbp	       145	simple-object.c	FUNCTION_2
0x4000310	        0x41894500	                    mov dword [r13], eax	       114	simple-object.c	FUNCTION_2	IF_1
0x4000314	            0x31c0	                            xor eax, eax	       115	simple-object.c	FUNCTION_2	IF_1
0x4000316	            0x415c	                                 pop r12	       145	simple-object.c	FUNCTION_2
0x4000318	            0x415d	                                 pop r13	       145	simple-object.c	FUNCTION_2
0x400031a	            0x415e	                                 pop r14	       145	simple-object.c	FUNCTION_2
0x400031c	              0xc3	                                     ret	       145	simple-object.c	FUNCTION_2
find_one_section	IF,1:functions,0:SWITCH,0:DO,0:CALL,1:WHILE,0:ELSE,0:FOR,0	26
0x4000040	            0x4154	                                push r12	       216	simple-object.c	FUNCTION_5
0x4000042	              0x55	                                push rbp	       216	simple-object.c	FUNCTION_5
0x4000043	          0x4989d4	                            mov r12, rdx	       216	simple-object.c	FUNCTION_5
0x4000046	              0x53	                                push rbx	       216	simple-object.c	FUNCTION_5
0x4000047	          0x4889fb	                            mov rbx, rdi	       216	simple-object.c	FUNCTION_5
0x400004a	          0x4889f7	                            mov rdi, rsi	       216	simple-object.c	FUNCTION_5
0x400004d	          0x488b33	                    mov rsi, qword [rbx]	       219	simple-object.c	FUNCTION_5	IF_1	CALL_1
0x4000050	          0x4889cd	                            mov rbp, rcx	       216	simple-object.c	FUNCTION_5
0x4000053	      0xe800000000	                          call 0x4000058	       219	simple-object.c	FUNCTION_5	IF_1	CALL_1
0x4000058	            0x85c0	                           test eax, eax	       219	simple-object.c	FUNCTION_5	IF_1	CALL_1
0x400005a	            0x7524	                           jne 0x4000080	       219	simple-object.c	FUNCTION_5	IF_1	CALL_1
0x400005c	        0x488b5308	                mov rdx, qword [rbx + 8]	       222	simple-object.c	FUNCTION_5
0x4000060	          0x4c8922	                    mov qword [rdx], r12	       222	simple-object.c	FUNCTION_5
0x4000063	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       223	simple-object.c	FUNCTION_5
0x4000067	          0x48892a	                    mov qword [rdx], rbp	       223	simple-object.c	FUNCTION_5
0x400006a	    0xc74318010000	               mov dword [rbx + 0x18], 1	       224	simple-object.c	FUNCTION_5
0x4000071	              0x5b	                                 pop rbx	       228	simple-object.c	FUNCTION_5
0x4000072	              0x5d	                                 pop rbp	       228	simple-object.c	FUNCTION_5
0x4000073	            0x415c	                                 pop r12	       228	simple-object.c	FUNCTION_5
0x4000075	              0xc3	                                     ret	       228	simple-object.c	FUNCTION_5
0x4000076	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       228	simple-object.c	FUNCTION_5
0x4000080	              0x5b	                                 pop rbx	       228	simple-object.c	FUNCTION_5
0x4000081	      0xb801000000	                              mov eax, 1	       220	simple-object.c	FUNCTION_5	IF_1
0x4000086	              0x5d	                                 pop rbp	       228	simple-object.c	FUNCTION_5
0x4000087	            0x415c	                                 pop r12	       228	simple-object.c	FUNCTION_5
0x4000089	              0xc3	                                     ret	       228	simple-object.c	FUNCTION_5
simple_object_start_write	IF,1:functions,0:SWITCH,0:DO,0:CALL,3:WHILE,0:ELSE,0:FOR,0	39
0x4000560	            0x4155	                                push r13	       406	simple-object.c	FUNCTION_13
0x4000562	            0x4154	                                push r12	       406	simple-object.c	FUNCTION_13
0x4000564	          0x4989f5	                            mov r13, rsi	       406	simple-object.c	FUNCTION_13
0x4000567	              0x55	                                push rbp	       406	simple-object.c	FUNCTION_13
0x4000568	              0x53	                                push rbx	       406	simple-object.c	FUNCTION_13
0x4000569	          0x4889fd	                            mov rbp, rdi	       406	simple-object.c	FUNCTION_13
0x400056c	          0x4889d6	                            mov rsi, rdx	       406	simple-object.c	FUNCTION_13
0x400056f	          0x4889ca	                            mov rdx, rcx	       406	simple-object.c	FUNCTION_13
0x4000572	        0x4883ec08	                              sub rsp, 8	       406	simple-object.c	FUNCTION_13
0x4000576	        0x488b4500	                    mov rax, qword [rbp]	       410	simple-object.c	FUNCTION_13	CALL_1
0x400057a	        0x488b7f08	                mov rdi, qword [rdi + 8]	       410	simple-object.c	FUNCTION_13	CALL_1
0x400057e	          0xff5030	                 call qword [rax + 0x30]	       410	simple-object.c	FUNCTION_13	CALL_1
0x4000581	          0x4885c0	                           test rax, rax	       411	simple-object.c	FUNCTION_13	IF_1
0x4000584	            0x7452	                            je 0x40005d8	       411	simple-object.c	FUNCTION_13	IF_1
0x4000586	      0xbf28000000	                           mov edi, 0x28	       413	simple-object.c	FUNCTION_13	CALL_2
0x400058b	          0x4989c4	                            mov r12, rax	       413	simple-object.c	FUNCTION_13	CALL_2
0x400058e	      0xe800000000	                          call 0x4000593	       413	simple-object.c	FUNCTION_13	CALL_2
0x4000593	          0x4889c3	                            mov rbx, rax	       413	simple-object.c	FUNCTION_13	CALL_2
0x4000596	        0x488b4500	                    mov rax, qword [rbp]	       414	simple-object.c	FUNCTION_13
0x400059a	          0x488903	                    mov qword [rbx], rax	       414	simple-object.c	FUNCTION_13
0x400059d	            0x31c0	                            xor eax, eax	       415	simple-object.c	FUNCTION_13	CALL_3
0x400059f	          0x4d85ed	                           test r13, r13	       415	simple-object.c	FUNCTION_13	CALL_3
0x40005a2	            0x7408	                            je 0x40005ac	       415	simple-object.c	FUNCTION_13	CALL_3
0x40005a4	          0x4c89ef	                            mov rdi, r13	       415	simple-object.c	FUNCTION_13	CALL_3
0x40005a7	      0xe800000000	                          call 0x40005ac	       415	simple-object.c	FUNCTION_13	CALL_3
0x40005ac	        0x48894308	                mov qword [rbx + 8], rax	       415	simple-object.c	FUNCTION_13	CALL_3
0x40005b0	    0x48c743100000	               mov qword [rbx + 0x10], 0	       416	simple-object.c	FUNCTION_13
0x40005b8	          0x4889d8	                            mov rax, rbx	       419	simple-object.c	FUNCTION_13
0x40005bb	    0x48c743180000	               mov qword [rbx + 0x18], 0	       417	simple-object.c	FUNCTION_13
0x40005c3	        0x4c896320	             mov qword [rbx + 0x20], r12	       418	simple-object.c	FUNCTION_13
0x40005c7	        0x4883c408	                              add rsp, 8	       420	simple-object.c	FUNCTION_13
0x40005cb	              0x5b	                                 pop rbx	       420	simple-object.c	FUNCTION_13
0x40005cc	              0x5d	                                 pop rbp	       420	simple-object.c	FUNCTION_13
0x40005cd	            0x415c	                                 pop r12	       420	simple-object.c	FUNCTION_13
0x40005cf	            0x415d	                                 pop r13	       420	simple-object.c	FUNCTION_13
0x40005d1	              0xc3	                                     ret	       420	simple-object.c	FUNCTION_13
0x40005d2	    0x660f1f440000	                    nop word [rax + rax]	       420	simple-object.c	FUNCTION_13
0x40005d8	            0x31c0	                            xor eax, eax	       412	simple-object.c	FUNCTION_13	IF_1
0x40005da	            0xebeb	                           jmp 0x40005c7	       412	simple-object.c	FUNCTION_13	IF_1
simple_object_write_add_data	IF,2:functions,0:SWITCH,0:DO,0:CALL,3:WHILE,0:ELSE,2:FOR,0	51
0x4000660	            0x4156	                                push r14	       461	simple-object.c	FUNCTION_15
0x4000662	            0x4155	                                push r13	       461	simple-object.c	FUNCTION_15
0x4000664	          0x4589c6	                           mov r14d, r8d	       461	simple-object.c	FUNCTION_15
0x4000667	            0x4154	                                push r12	       461	simple-object.c	FUNCTION_15
0x4000669	              0x55	                                push rbp	       461	simple-object.c	FUNCTION_15
0x400066a	      0xbf20000000	                           mov edi, 0x20	       464	simple-object.c	FUNCTION_15	CALL_1
0x400066f	              0x53	                                push rbx	       461	simple-object.c	FUNCTION_15
0x4000670	          0x4989cc	                            mov r12, rcx	       461	simple-object.c	FUNCTION_15
0x4000673	          0x4889f5	                            mov rbp, rsi	       461	simple-object.c	FUNCTION_15
0x4000676	          0x4989d5	                            mov r13, rdx	       461	simple-object.c	FUNCTION_15
0x4000679	      0xe800000000	                          call 0x400067e	       464	simple-object.c	FUNCTION_15	CALL_1
0x400067e	          0x4585f6	                         test r14d, r14d	       468	simple-object.c	FUNCTION_15	IF_1
0x4000681	          0x4889c3	                            mov rbx, rax	       464	simple-object.c	FUNCTION_15	CALL_1
0x4000684	    0x48c700000000	                      mov qword [rax], 0	       465	simple-object.c	FUNCTION_15
0x400068b	        0x4c896008	                mov qword [rax + 8], r12	       466	simple-object.c	FUNCTION_15
0x400068f	            0x752f	                           jne 0x40006c0	       468	simple-object.c	FUNCTION_15	IF_1
0x4000691	        0x4c896810	             mov qword [rax + 0x10], r13	       470	simple-object.c	FUNCTION_15	IF_1
0x4000695	    0x48c740180000	               mov qword [rax + 0x18], 0	       471	simple-object.c	FUNCTION_15	IF_1
0x400069d	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       480	simple-object.c	FUNCTION_15	IF_2
0x40006a1	          0x4885c0	                           test rax, rax	       480	simple-object.c	FUNCTION_15	IF_2
0x40006a4	            0x7441	                            je 0x40006e7	       480	simple-object.c	FUNCTION_15	IF_2
0x40006a6	          0x488918	                    mov qword [rax], rbx	       487	simple-object.c	FUNCTION_15	ELSE_2
0x40006a9	        0x48895d20	            mov qword [rbp + 0x20], rbx 	       488	simple-object.c	FUNCTION_15	ELSE_2
0x40006ad	            0x31c0	                            xor eax, eax	       492	simple-object.c	FUNCTION_15
0x40006af	              0x5b	                                 pop rbx	       492	simple-object.c	FUNCTION_15
0x40006b0	              0x5d	                                 pop rbp	       492	simple-object.c	FUNCTION_15
0x40006b1	            0x415c	                                 pop r12	       492	simple-object.c	FUNCTION_15
0x40006b3	            0x415d	                                 pop r13	       492	simple-object.c	FUNCTION_15
0x40006b5	            0x415e	                                 pop r14	       492	simple-object.c	FUNCTION_15
0x40006b7	              0xc3	                                     ret	       492	simple-object.c	FUNCTION_15
0x40006b8	     0xf1f84000000	                   nop dword [rax + rax]	       492	simple-object.c	FUNCTION_15
0x40006c0	          0x4c89e7	                            mov rdi, r12	       475	simple-object.c	FUNCTION_15	ELSE_1	CALL_2
0x40006c3	      0xe800000000	                          call 0x40006c8	       475	simple-object.c	FUNCTION_15	ELSE_1	CALL_2
0x40006c8	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_18	CALL_3
0x40006cb	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_18	CALL_3
0x40006ce	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_18	CALL_3
0x40006d1	        0x48894318	             mov qword [rbx + 0x18], rax	       475	simple-object.c	FUNCTION_15	ELSE_1	CALL_2
0x40006d5	      0xe800000000	                          call 0x40006da	        53	string3.h	FUNCTION_18	CALL_3
0x40006da	        0x48894310	             mov qword [rbx + 0x10], rax	       477	simple-object.c	FUNCTION_15	ELSE_1
0x40006de	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       480	simple-object.c	FUNCTION_15	IF_2
0x40006e2	          0x4885c0	                           test rax, rax	       480	simple-object.c	FUNCTION_15	IF_2
0x40006e5	            0x75bf	                           jne 0x40006a6	       480	simple-object.c	FUNCTION_15	IF_2
0x40006e7	        0x48895d18	            mov qword [rbp + 0x18], rbx 	       482	simple-object.c	FUNCTION_15	IF_2
0x40006eb	        0x48895d20	            mov qword [rbp + 0x20], rbx 	       483	simple-object.c	FUNCTION_15	IF_2
0x40006ef	            0x31c0	                            xor eax, eax	       492	simple-object.c	FUNCTION_15
0x40006f1	              0x5b	                                 pop rbx	       492	simple-object.c	FUNCTION_15
0x40006f2	              0x5d	                                 pop rbp	       492	simple-object.c	FUNCTION_15
0x40006f3	            0x415c	                                 pop r12	       492	simple-object.c	FUNCTION_15
0x40006f5	            0x415d	                                 pop r13	       492	simple-object.c	FUNCTION_15
0x40006f7	            0x415e	                                 pop r14	       492	simple-object.c	FUNCTION_15
0x40006f9	              0xc3	                                     ret	       492	simple-object.c	FUNCTION_15
simple_object_fetch_attributes	IF,1:functions,0:SWITCH,0:DO,0:CALL,2:WHILE,0:ELSE,0:FOR,0	21
0x40004b0	              0x55	                                push rbp	       354	simple-object.c	FUNCTION_9
0x40004b1	              0x53	                                push rbx	       354	simple-object.c	FUNCTION_9
0x40004b2	          0x4889fb	                            mov rbx, rdi	       354	simple-object.c	FUNCTION_9
0x40004b5	        0x4883ec08	                              sub rsp, 8	       354	simple-object.c	FUNCTION_9
0x40004b9	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       358	simple-object.c	FUNCTION_9	CALL_1
0x40004bd	          0xff5010	                 call qword [rax + 0x10]	       358	simple-object.c	FUNCTION_9	CALL_1
0x40004c0	          0x4885c0	                           test rax, rax	       359	simple-object.c	FUNCTION_9	IF_1
0x40004c3	            0x7423	                            je 0x40004e8	       359	simple-object.c	FUNCTION_9	IF_1
0x40004c5	      0xbf10000000	                           mov edi, 0x10	       361	simple-object.c	FUNCTION_9	CALL_2
0x40004ca	          0x4889c5	                            mov rbp, rax	       361	simple-object.c	FUNCTION_9	CALL_2
0x40004cd	      0xe800000000	                          call 0x40004d2	       361	simple-object.c	FUNCTION_9	CALL_2
0x40004d2	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       362	simple-object.c	FUNCTION_9
0x40004d6	        0x48896808	                mov qword [rax + 8], rbp	       363	simple-object.c	FUNCTION_9
0x40004da	          0x488910	                    mov qword [rax], rdx	       362	simple-object.c	FUNCTION_9
0x40004dd	        0x4883c408	                              add rsp, 8	       365	simple-object.c	FUNCTION_9
0x40004e1	              0x5b	                                 pop rbx	       365	simple-object.c	FUNCTION_9
0x40004e2	              0x5d	                                 pop rbp	       365	simple-object.c	FUNCTION_9
0x40004e3	              0xc3	                                     ret	       365	simple-object.c	FUNCTION_9
0x40004e4	         0xf1f4000	                         nop dword [rax]	       365	simple-object.c	FUNCTION_9
0x40004e8	            0x31c0	                            xor eax, eax	       360	simple-object.c	FUNCTION_9	IF_1
0x40004ea	            0xebf1	                           jmp 0x40004dd	       360	simple-object.c	FUNCTION_9	IF_1
simple_object_attributes_merge	IF,1:functions,0:SWITCH,0:DO,0:CALL,1:WHILE,0:ELSE,0:FOR,0	11
0x4000510	          0x488b07	                    mov rax, qword [rdi]	       383	simple-object.c	FUNCTION_11	IF_1
0x4000513	          0x483b06	                    cmp rax, qword [rsi]	       383	simple-object.c	FUNCTION_11	IF_1
0x4000516	            0x7410	                            je 0x4000528	       383	simple-object.c	FUNCTION_11	IF_1
0x4000518	    0xc70200000000	                      mov dword [rdx], 0	       385	simple-object.c	FUNCTION_11	IF_1
0x400051e	      0xb800000000	                              mov eax, 0	       389	simple-object.c	FUNCTION_11
0x4000523	              0xc3	                                     ret	       389	simple-object.c	FUNCTION_11
0x4000524	         0xf1f4000	                         nop dword [rax]	       389	simple-object.c	FUNCTION_11
0x4000528	        0x488b7608	                mov rsi, qword [rsi + 8]	       388	simple-object.c	FUNCTION_11	CALL_1
0x400052c	        0x488b7f08	                mov rdi, qword [rdi + 8]	       388	simple-object.c	FUNCTION_11	CALL_1
0x4000530	        0x488b4020	            mov rax, qword [rax + 0x20] 	       388	simple-object.c	FUNCTION_11	CALL_1
0x4000534	            0xffe0	                                 jmp rax	       388	simple-object.c	FUNCTION_11	CALL_1
simple_object_start_read	IF,2:functions,0:SWITCH,0:DO,0:CALL,3:WHILE,0:ELSE,0:FOR,1	66
0x4000320	            0x4157	                                push r15	       153	simple-object.c	FUNCTION_3
0x4000322	            0x4156	                                push r14	       153	simple-object.c	FUNCTION_3
0x4000324	          0x4d89c1	                              mov r9, r8	       157	simple-object.c	FUNCTION_3	IF_1	CALL_1
0x4000327	            0x4155	                                push r13	       153	simple-object.c	FUNCTION_3
0x4000329	            0x4154	                                push r12	       153	simple-object.c	FUNCTION_3
0x400032b	          0x4989cc	                            mov r12, rcx	       153	simple-object.c	FUNCTION_3
0x400032e	              0x55	                                push rbp	       153	simple-object.c	FUNCTION_3
0x400032f	              0x53	                                push rbx	       153	simple-object.c	FUNCTION_3
0x4000330	          0x4c89c5	                             mov rbp, r8	       153	simple-object.c	FUNCTION_3
0x4000333	          0x4989c8	                             mov r8, rcx	       157	simple-object.c	FUNCTION_3	IF_1	CALL_1
0x4000336	      0xb910000000	                           mov ecx, 0x10	       157	simple-object.c	FUNCTION_3	IF_1	CALL_1
0x400033b	          0x4189fe	                           mov r14d, edi	       153	simple-object.c	FUNCTION_3
0x400033e	        0x4883ec38	                           sub rsp, 0x38	       153	simple-object.c	FUNCTION_3
0x4000342	          0x4989f5	                            mov r13, rsi	       153	simple-object.c	FUNCTION_3
0x4000345	      0x4889542408	                mov qword [rsp + 8], rdx	       153	simple-object.c	FUNCTION_3
0x400034a	      0x488d542410	                   lea rdx, [rsp + 0x10]	       157	simple-object.c	FUNCTION_3	IF_1	CALL_1
0x400034f	    0x64488b042528	                mov rax, qword fs:[0x28]	       153	simple-object.c	FUNCTION_3
0x4000358	      0x4889442428	             mov qword [rsp + 0x28], rax	       153	simple-object.c	FUNCTION_3
0x400035d	            0x31c0	                            xor eax, eax	       153	simple-object.c	FUNCTION_3
0x400035f	      0xe800000000	                          call 0x4000364	       157	simple-object.c	FUNCTION_3	IF_1	CALL_1
0x4000364	            0x85c0	                           test eax, eax	       157	simple-object.c	FUNCTION_3	IF_1	CALL_1
0x4000366	     0xf849c000000	                            je 0x4000408	       157	simple-object.c	FUNCTION_3	IF_1	CALL_1
0x400036c	    0x41bf00000000	                             mov r15d, 0	       157	simple-object.c	FUNCTION_3	IF_1	CALL_1
0x4000372	      0xbb00000000	                              mov ebx, 0	       157	simple-object.c	FUNCTION_3	IF_1	CALL_1
0x4000377	          0x4989e9	                             mov r9, rbp	       167	simple-object.c	FUNCTION_3	FOR_1	CALL_2
0x400037a	          0x4d89e0	                             mov r8, r12	       167	simple-object.c	FUNCTION_3	FOR_1	CALL_2
0x400037d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       167	simple-object.c	FUNCTION_3	FOR_1	CALL_2
0x4000382	          0x4c89ea	                            mov rdx, r13	       167	simple-object.c	FUNCTION_3	FOR_1	CALL_2
0x4000385	          0x4489f6	                           mov esi, r14d	       167	simple-object.c	FUNCTION_3	FOR_1	CALL_2
0x4000388	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       167	simple-object.c	FUNCTION_3	FOR_1	CALL_2
0x400038d	            0xff13	                        call qword [rbx]	       167	simple-object.c	FUNCTION_3	FOR_1	CALL_2
0x400038f	          0x4885c0	                           test rax, rax	       169	simple-object.c	FUNCTION_3	FOR_1	IF_2
0x4000392	            0x754c	                           jne 0x40003e0	       169	simple-object.c	FUNCTION_3	FOR_1	IF_2
0x4000394	        0x4983c708	                              add r15, 8	       169	simple-object.c	FUNCTION_3	FOR_1	IF_2
0x4000398	    0x4981ff000000	                              cmp r15, 0	       163	simple-object.c	FUNCTION_3	FOR_1
0x400039f	            0x740f	                            je 0x40003b0	       163	simple-object.c	FUNCTION_3	FOR_1
0x40003a1	          0x498b1f	                    mov rbx, qword [r15]	       163	simple-object.c	FUNCTION_3	FOR_1
0x40003a4	            0xebd1	                           jmp 0x4000377	       163	simple-object.c	FUNCTION_3	FOR_1
0x40003a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       163	simple-object.c	FUNCTION_3	FOR_1
0x40003b0	    0x49c704240000	                      mov qword [r12], 0	       182	simple-object.c	FUNCTION_3
0x40003b8	            0x31c0	                            xor eax, eax	       184	simple-object.c	FUNCTION_3
0x40003ba	    0xc74500000000	                      mov dword [rbp], 0	       183	simple-object.c	FUNCTION_3
0x40003c1	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       185	simple-object.c	FUNCTION_3
0x40003c6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       185	simple-object.c	FUNCTION_3
0x40003cf	            0x753b	                           jne 0x400040c	       185	simple-object.c	FUNCTION_3
0x40003d1	        0x4883c438	                           add rsp, 0x38	       185	simple-object.c	FUNCTION_3
0x40003d5	              0x5b	                                 pop rbx	       185	simple-object.c	FUNCTION_3
0x40003d6	              0x5d	                                 pop rbp	       185	simple-object.c	FUNCTION_3
0x40003d7	            0x415c	                                 pop r12	       185	simple-object.c	FUNCTION_3
0x40003d9	            0x415d	                                 pop r13	       185	simple-object.c	FUNCTION_3
0x40003db	            0x415e	                                 pop r14	       185	simple-object.c	FUNCTION_3
0x40003dd	            0x415f	                                 pop r15	       185	simple-object.c	FUNCTION_3
0x40003df	              0xc3	                                     ret	       185	simple-object.c	FUNCTION_3
0x40003e0	      0xbf20000000	                           mov edi, 0x20	       173	simple-object.c	FUNCTION_3	FOR_1	IF_2	CALL_3
0x40003e5	      0x4889442408	                mov qword [rsp + 8], rax	       173	simple-object.c	FUNCTION_3	FOR_1	IF_2	CALL_3
0x40003ea	      0xe800000000	                          call 0x40003ef	       173	simple-object.c	FUNCTION_3	FOR_1	IF_2	CALL_3
0x40003ef	      0x488b542408	                mov rdx, qword [rsp + 8]	       177	simple-object.c	FUNCTION_3	FOR_1	IF_2
0x40003f4	          0x448930	                   mov dword [rax], r14d	       174	simple-object.c	FUNCTION_3	FOR_1	IF_2
0x40003f7	        0x4c896808	                mov qword [rax + 8], r13	       175	simple-object.c	FUNCTION_3	FOR_1	IF_2
0x40003fb	        0x48895810	             mov qword [rax + 0x10], rbx	       176	simple-object.c	FUNCTION_3	FOR_1	IF_2
0x40003ff	        0x48895018	             mov qword [rax + 0x18], rdx	       177	simple-object.c	FUNCTION_3	FOR_1	IF_2
0x4000403	            0xebbc	                           jmp 0x40003c1	       178	simple-object.c	FUNCTION_3	FOR_1	IF_2
0x4000405	           0xf1f00	                         nop dword [rax]	       178	simple-object.c	FUNCTION_3	FOR_1	IF_2
0x4000408	            0x31c0	                            xor eax, eax	       160	simple-object.c	FUNCTION_3	IF_1
0x400040a	            0xebb5	                           jmp 0x40003c1	       160	simple-object.c	FUNCTION_3	IF_1
0x400040c	      0xe800000000	                          call 0x4000411	       185	simple-object.c	FUNCTION_3
simple_object_find_section	IF,2:functions,0:SWITCH,0:DO,0:CALL,1:WHILE,0:ELSE,0:FOR,0	33
0x4000430	              0x53	                                push rbx	       236	simple-object.c	FUNCTION_6
0x4000431	          0x4c89c3	                             mov rbx, r8	       236	simple-object.c	FUNCTION_6
0x4000434	        0x4883ec30	                           sub rsp, 0x30	       236	simple-object.c	FUNCTION_6
0x4000438	    0x64488b042528	                mov rax, qword fs:[0x28]	       236	simple-object.c	FUNCTION_6
0x4000441	      0x4889442428	             mov qword [rsp + 0x28], rax	       236	simple-object.c	FUNCTION_6
0x4000446	            0x31c0	                            xor eax, eax	       236	simple-object.c	FUNCTION_6
0x4000448	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       195	simple-object.c	FUNCTION_4	CALL_1
0x400044c	        0x48893424	                    mov qword [rsp], rsi	       239	simple-object.c	FUNCTION_6
0x4000450	      0xbe00000000	                              mov esi, 0	       195	simple-object.c	FUNCTION_4	CALL_1
0x4000455	      0x4889542408	                mov qword [rsp + 8], rdx	       240	simple-object.c	FUNCTION_6
0x400045a	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       241	simple-object.c	FUNCTION_6
0x400045f	          0x4889e2	                            mov rdx, rsp	       195	simple-object.c	FUNCTION_4	CALL_1
0x4000462	    0xc74424180000	               mov dword [rsp + 0x18], 0	       242	simple-object.c	FUNCTION_6
0x400046a	          0x4c89c9	                             mov rcx, r9	       195	simple-object.c	FUNCTION_4	CALL_1
0x400046d	          0xff5008	                    call qword [rax + 8]	       195	simple-object.c	FUNCTION_4	CALL_1
0x4000470	          0x4889c2	                            mov rdx, rax	       195	simple-object.c	FUNCTION_4	CALL_1
0x4000473	          0x488903	                    mov qword [rbx], rax	       244	simple-object.c	FUNCTION_6	CALL_1
0x4000476	            0x31c0	                            xor eax, eax	       244	simple-object.c	FUNCTION_6	CALL_1
0x4000478	          0x4885d2	                           test rdx, rdx	       246	simple-object.c	FUNCTION_6	IF_1
0x400047b	            0x741b	                            je 0x4000498	       246	simple-object.c	FUNCTION_6	IF_1
0x400047d	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       251	simple-object.c	FUNCTION_6
0x4000482	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       251	simple-object.c	FUNCTION_6
0x400048b	            0x7518	                           jne 0x40004a5	       251	simple-object.c	FUNCTION_6
0x400048d	        0x4883c430	                           add rsp, 0x30	       251	simple-object.c	FUNCTION_6
0x4000491	              0x5b	                                 pop rbx	       251	simple-object.c	FUNCTION_6
0x4000492	              0xc3	                                     ret	       251	simple-object.c	FUNCTION_6
0x4000493	       0xf1f440000	                   nop dword [rax + rax]	       251	simple-object.c	FUNCTION_6
0x4000498	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       247	simple-object.c	FUNCTION_6	IF_1
0x400049c	            0x31c0	                            xor eax, eax	       247	simple-object.c	FUNCTION_6	IF_1
0x400049e	            0x85d2	                           test edx, edx	       247	simple-object.c	FUNCTION_6	IF_1
0x40004a0	           0xf95c0	                                setne al	       247	simple-object.c	FUNCTION_6	IF_1
0x40004a3	            0xebd8	                           jmp 0x400047d	       247	simple-object.c	FUNCTION_6	IF_1
0x40004a5	      0xe800000000	                          call 0x40004aa	       251	simple-object.c	FUNCTION_6
simple_object_write_create_section	IF,1:functions,0:SWITCH,0:DO,0:CALL,2:WHILE,0:ELSE,1:FOR,0	40
0x40005e0	            0x4155	                                push r13	       429	simple-object.c	FUNCTION_14
0x40005e2	            0x4154	                                push r12	       429	simple-object.c	FUNCTION_14
0x40005e4	          0x4989f5	                            mov r13, rsi	       429	simple-object.c	FUNCTION_14
0x40005e7	              0x55	                                push rbp	       429	simple-object.c	FUNCTION_14
0x40005e8	              0x53	                                push rbx	       429	simple-object.c	FUNCTION_14
0x40005e9	          0x4889fd	                            mov rbp, rdi	       429	simple-object.c	FUNCTION_14
0x40005ec	      0xbf28000000	                           mov edi, 0x28	       432	simple-object.c	FUNCTION_14	CALL_1
0x40005f1	          0x4189d4	                           mov r12d, edx	       429	simple-object.c	FUNCTION_14
0x40005f4	        0x4883ec08	                              sub rsp, 8	       429	simple-object.c	FUNCTION_14
0x40005f8	      0xe800000000	                          call 0x40005fd	       432	simple-object.c	FUNCTION_14	CALL_1
0x40005fd	          0x4c89ef	                            mov rdi, r13	       434	simple-object.c	FUNCTION_14	CALL_2
0x4000600	          0x4889c3	                            mov rbx, rax	       432	simple-object.c	FUNCTION_14	CALL_1
0x4000603	    0x48c700000000	                      mov qword [rax], 0	       433	simple-object.c	FUNCTION_14
0x400060a	      0xe800000000	                          call 0x400060f	       434	simple-object.c	FUNCTION_14	CALL_2
0x400060f	        0x48894308	                mov qword [rbx + 8], rax	       434	simple-object.c	FUNCTION_14	CALL_2
0x4000613	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       439	simple-object.c	FUNCTION_14	IF_1
0x4000617	        0x44896310	            mov dword [rbx + 0x10], r12d	       435	simple-object.c	FUNCTION_14
0x400061b	    0x48c743180000	               mov qword [rbx + 0x18], 0	       436	simple-object.c	FUNCTION_14
0x4000623	    0x48c743200000	               mov qword [rbx + 0x20], 0	       437	simple-object.c	FUNCTION_14
0x400062b	          0x4885c0	                           test rax, rax	       439	simple-object.c	FUNCTION_14	IF_1
0x400062e	            0x7418	                            je 0x4000648	       439	simple-object.c	FUNCTION_14	IF_1
0x4000630	          0x488918	                    mov qword [rax], rbx	       446	simple-object.c	FUNCTION_14	ELSE_1
0x4000633	        0x48895d18	            mov qword [rbp + 0x18], rbx 	       447	simple-object.c	FUNCTION_14	ELSE_1
0x4000637	        0x4883c408	                              add rsp, 8	       451	simple-object.c	FUNCTION_14
0x400063b	          0x4889d8	                            mov rax, rbx	       451	simple-object.c	FUNCTION_14
0x400063e	              0x5b	                                 pop rbx	       451	simple-object.c	FUNCTION_14
0x400063f	              0x5d	                                 pop rbp	       451	simple-object.c	FUNCTION_14
0x4000640	            0x415c	                                 pop r12	       451	simple-object.c	FUNCTION_14
0x4000642	            0x415d	                                 pop r13	       451	simple-object.c	FUNCTION_14
0x4000644	              0xc3	                                     ret	       451	simple-object.c	FUNCTION_14
0x4000645	           0xf1f00	                         nop dword [rax]	       451	simple-object.c	FUNCTION_14
0x4000648	        0x48895d10	            mov qword [rbp + 0x10], rbx 	       441	simple-object.c	FUNCTION_14	IF_1
0x400064c	        0x48895d18	            mov qword [rbp + 0x18], rbx 	       442	simple-object.c	FUNCTION_14	IF_1
0x4000650	        0x4883c408	                              add rsp, 8	       451	simple-object.c	FUNCTION_14
0x4000654	          0x4889d8	                            mov rax, rbx	       451	simple-object.c	FUNCTION_14
0x4000657	              0x5b	                                 pop rbx	       451	simple-object.c	FUNCTION_14
0x4000658	              0x5d	                                 pop rbp	       451	simple-object.c	FUNCTION_14
0x4000659	            0x415c	                                 pop r12	       451	simple-object.c	FUNCTION_14
0x400065b	            0x415d	                                 pop r13	       451	simple-object.c	FUNCTION_14
0x400065d	              0xc3	                                     ret	       451	simple-object.c	FUNCTION_14
simple_object_release_read	IF,0:functions,0:SWITCH,0:DO,0:CALL,2:WHILE,0:ELSE,0:FOR,0	8
0x40004f0	              0x53	                                push rbx	       371	simple-object.c	FUNCTION_10
0x40004f1	          0x4889fb	                            mov rbx, rdi	       371	simple-object.c	FUNCTION_10
0x40004f4	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       372	simple-object.c	FUNCTION_10	CALL_1
0x40004f8	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       372	simple-object.c	FUNCTION_10	CALL_1
0x40004fc	          0xff5018	                 call qword [rax + 0x18]	       372	simple-object.c	FUNCTION_10	CALL_1
0x40004ff	          0x4889df	                            mov rdi, rbx	       373	simple-object.c	FUNCTION_10	CALL_2
0x4000502	              0x5b	                                 pop rbx	       374	simple-object.c	FUNCTION_10
0x4000503	      0xe900000000	                           jmp 0x4000508	       373	simple-object.c	FUNCTION_10	CALL_2
handle_lto_debug_sections	IF,6:functions,0:SWITCH,0:DO,0:CALL,14:WHILE,0:ELSE,4:FOR,0	73
0x4000090	              0x55	                                push rbp	       258	simple-object.c	FUNCTION_7
0x4000091	              0x53	                                push rbx	       258	simple-object.c	FUNCTION_7
0x4000092	          0x4889fb	                            mov rbx, rdi	       258	simple-object.c	FUNCTION_7
0x4000095	        0x4883ec08	                              sub rsp, 8	       258	simple-object.c	FUNCTION_7
0x4000099	      0xe800000000	                          call 0x400009e	       259	simple-object.c	FUNCTION_7	CALL_2
0x400009e	        0x488d7801	                      lea rdi, [rax + 1]	       259	simple-object.c	FUNCTION_7	CALL_2
0x40000a2	      0xbe01000000	                              mov esi, 1	       259	simple-object.c	FUNCTION_7	CALL_2
0x40000a7	      0xe800000000	                          call 0x40000ac	       259	simple-object.c	FUNCTION_7	CALL_2
0x40000ac	      0xbf00000000	                              mov edi, 0	       266	simple-object.c	FUNCTION_7	IF_1	CALL_3
0x40000b1	      0xb905000000	                              mov ecx, 5	       266	simple-object.c	FUNCTION_7	IF_1	CALL_3
0x40000b6	          0x4889de	                            mov rsi, rbx	       266	simple-object.c	FUNCTION_7	IF_1	CALL_3
0x40000b9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       266	simple-object.c	FUNCTION_7	IF_1	CALL_3
0x40000bb	          0x4889c5	                            mov rbp, rax	       259	simple-object.c	FUNCTION_7	CALL_2
0x40000be	     0xf848c000000	                            je 0x4000150	       266	simple-object.c	FUNCTION_7	IF_1	CALL_3
0x40000c4	      0xbf00000000	                              mov edi, 0	       271	simple-object.c	FUNCTION_7	ELSE_1	IF_2	CALL_5
0x40000c9	      0xb904000000	                              mov ecx, 4	       271	simple-object.c	FUNCTION_7	ELSE_1	IF_2	CALL_5
0x40000ce	          0x4889de	                            mov rsi, rbx	       271	simple-object.c	FUNCTION_7	ELSE_1	IF_2	CALL_5
0x40000d1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       271	simple-object.c	FUNCTION_7	ELSE_1	IF_2	CALL_5
0x40000d3	     0xf8497000000	                            je 0x4000170	       271	simple-object.c	FUNCTION_7	ELSE_1	IF_2	CALL_5
0x40000d9	          0x4889de	                            mov rsi, rbx	       279	simple-object.c	FUNCTION_7	IF_3	CALL_7
0x40000dc	      0xbf00000000	                              mov edi, 0	       279	simple-object.c	FUNCTION_7	IF_3	CALL_7
0x40000e1	      0xb90e000000	                            mov ecx, 0xe	       279	simple-object.c	FUNCTION_7	IF_3	CALL_7
0x40000e6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       279	simple-object.c	FUNCTION_7	IF_3	CALL_7
0x40000e8	        0x488d730e	                    lea rsi, [rbx + 0xe]	       148	string3.h	FUNCTION_28	CALL_3
0x40000ec	            0x744e	                            je 0x400013c	       279	simple-object.c	FUNCTION_7	IF_3	CALL_7
0x40000ee	      0xbf00000000	                              mov edi, 0	       281	simple-object.c	FUNCTION_7	ELSE_2	IF_4	CALL_9
0x40000f3	      0xb910000000	                           mov ecx, 0x10	       281	simple-object.c	FUNCTION_7	ELSE_2	IF_4	CALL_9
0x40000f8	          0x4889de	                            mov rsi, rbx	       281	simple-object.c	FUNCTION_7	ELSE_2	IF_4	CALL_9
0x40000fb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       281	simple-object.c	FUNCTION_7	ELSE_2	IF_4	CALL_9
0x40000fd	            0x7439	                            je 0x4000138	       281	simple-object.c	FUNCTION_7	ELSE_2	IF_4	CALL_9
0x40000ff	      0xbf00000000	                              mov edi, 0	       285	simple-object.c	FUNCTION_7	ELSE_3	IF_5	CALL_11
0x4000104	      0xb910000000	                           mov ecx, 0x10	       285	simple-object.c	FUNCTION_7	ELSE_3	IF_5	CALL_11
0x4000109	          0x4889de	                            mov rsi, rbx	       285	simple-object.c	FUNCTION_7	ELSE_3	IF_5	CALL_11
0x400010c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       285	simple-object.c	FUNCTION_7	ELSE_3	IF_5	CALL_11
0x400010e	            0x7411	                            je 0x4000121	       285	simple-object.c	FUNCTION_7	ELSE_3	IF_5	CALL_11
0x4000110	      0xbf00000000	                              mov edi, 0	       290	simple-object.c	FUNCTION_7	ELSE_4	IF_6	CALL_13
0x4000115	      0xb909000000	                              mov ecx, 9	       290	simple-object.c	FUNCTION_7	ELSE_4	IF_6	CALL_13
0x400011a	          0x4889de	                            mov rsi, rbx	       290	simple-object.c	FUNCTION_7	ELSE_4	IF_6	CALL_13
0x400011d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       290	simple-object.c	FUNCTION_7	ELSE_4	IF_6	CALL_13
0x400011f	            0x756f	                           jne 0x4000190	       290	simple-object.c	FUNCTION_7	ELSE_4	IF_6	CALL_13
0x4000121	        0x4883c408	                              add rsp, 8	       293	simple-object.c	FUNCTION_7
0x4000125	          0x4889de	                            mov rsi, rbx	       110	string3.h	FUNCTION_24	CALL_3
0x4000128	          0x4889ef	                            mov rdi, rbp	       110	string3.h	FUNCTION_24	CALL_3
0x400012b	              0x5b	                                 pop rbx	       293	simple-object.c	FUNCTION_7
0x400012c	              0x5d	                                 pop rbp	       293	simple-object.c	FUNCTION_7
0x400012d	      0xe900000000	                           jmp 0x4000132	       110	string3.h	FUNCTION_24	CALL_3
0x4000132	    0x660f1f440000	                    nop word [rax + rax]	       110	string3.h	FUNCTION_24	CALL_3
0x4000138	        0x488d7309	                      lea rsi, [rbx + 9]	       148	string3.h	FUNCTION_28	CALL_3
0x400013c	        0x4883c408	                              add rsp, 8	       293	simple-object.c	FUNCTION_7
0x4000140	          0x4889ef	                            mov rdi, rbp	       148	string3.h	FUNCTION_28	CALL_3
0x4000143	              0x5b	                                 pop rbx	       293	simple-object.c	FUNCTION_7
0x4000144	              0x5d	                                 pop rbp	       293	simple-object.c	FUNCTION_7
0x4000145	      0xe900000000	                           jmp 0x400014a	       148	string3.h	FUNCTION_28	CALL_3
0x400014a	    0x660f1f440000	                    nop word [rax + rax]	       148	string3.h	FUNCTION_28	CALL_3
0x4000150	          0x4889de	                            mov rsi, rbx	       126	string3.h	FUNCTION_26	CALL_3
0x4000153	      0xba05000000	                              mov edx, 5	       126	string3.h	FUNCTION_26	CALL_3
0x4000158	          0x4889c7	                            mov rdi, rax	       126	string3.h	FUNCTION_26	CALL_3
0x400015b	      0xe800000000	                          call 0x4000160	       126	string3.h	FUNCTION_26	CALL_3
0x4000160	        0x4883c305	                              add rbx, 5	       269	simple-object.c	FUNCTION_7	IF_1
0x4000164	      0xe970ffffff	                           jmp 0x40000d9	       269	simple-object.c	FUNCTION_7	IF_1
0x4000169	     0xf1f80000000	                         nop dword [rax]	       269	simple-object.c	FUNCTION_7	IF_1
0x4000170	          0x4889de	                            mov rsi, rbx	       126	string3.h	FUNCTION_26	CALL_3
0x4000173	      0xba04000000	                              mov edx, 4	       126	string3.h	FUNCTION_26	CALL_3
0x4000178	          0x4889c7	                            mov rdi, rax	       126	string3.h	FUNCTION_26	CALL_3
0x400017b	      0xe800000000	                          call 0x4000180	       126	string3.h	FUNCTION_26	CALL_3
0x4000180	        0x4883c304	                              add rbx, 4	       274	simple-object.c	FUNCTION_7	ELSE_1	IF_2
0x4000184	      0xe950ffffff	                           jmp 0x40000d9	       274	simple-object.c	FUNCTION_7	ELSE_1	IF_2
0x4000189	     0xf1f80000000	                         nop dword [rax]	       274	simple-object.c	FUNCTION_7	ELSE_1	IF_2
0x4000190	        0x4883c408	                              add rsp, 8	       293	simple-object.c	FUNCTION_7
0x4000194	            0x31c0	                            xor eax, eax	       293	simple-object.c	FUNCTION_7
0x4000196	              0x5b	                                 pop rbx	       293	simple-object.c	FUNCTION_7
0x4000197	              0x5d	                                 pop rbp	       293	simple-object.c	FUNCTION_7
0x4000198	              0xc3	                                     ret	       293	simple-object.c	FUNCTION_7
simple_object_copy_lto_debug_sections	IF,6:functions,0:SWITCH,0:DO,0:CALL,11:WHILE,0:ELSE,0:FOR,0	91
0x40007a0	            0x4156	                                push r14	       300	simple-object.c	FUNCTION_8
0x40007a2	            0x4155	                                push r13	       300	simple-object.c	FUNCTION_8
0x40007a4	            0x4154	                                push r12	       300	simple-object.c	FUNCTION_8
0x40007a6	              0x55	                                push rbp	       300	simple-object.c	FUNCTION_8
0x40007a7	          0x4989d4	                            mov r12, rdx	       300	simple-object.c	FUNCTION_8
0x40007aa	              0x53	                                push rbx	       300	simple-object.c	FUNCTION_8
0x40007ab	        0x4883ec20	                           sub rsp, 0x20	       300	simple-object.c	FUNCTION_8
0x40007af	    0x64488b042528	                mov rax, qword fs:[0x28]	       300	simple-object.c	FUNCTION_8
0x40007b8	      0x4889442418	             mov qword [rsp + 0x18], rax	       300	simple-object.c	FUNCTION_8
0x40007bd	            0x31c0	                            xor eax, eax	       300	simple-object.c	FUNCTION_8
0x40007bf	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       306	simple-object.c	FUNCTION_8	IF_1
0x40007c3	      0x4883784800	               cmp qword [rax + 0x48], 0	       306	simple-object.c	FUNCTION_8	IF_1
0x40007c8	     0xf8492000000	                            je 0x4000860	       306	simple-object.c	FUNCTION_8	IF_1
0x40007ce	          0x4989f6	                            mov r14, rsi	       306	simple-object.c	FUNCTION_8	IF_1
0x40007d1	      0x488d742410	                   lea rsi, [rsp + 0x10]	       312	simple-object.c	FUNCTION_8	CALL_1
0x40007d6	          0x4889fd	                            mov rbp, rdi	       312	simple-object.c	FUNCTION_8	CALL_1
0x40007d9	      0xe800000000	                          call 0x40007de	       312	simple-object.c	FUNCTION_8	CALL_1
0x40007de	          0x4885c0	                           test rax, rax	       313	simple-object.c	FUNCTION_8	IF_2
0x40007e1	          0x4889c3	                            mov rbx, rax	       312	simple-object.c	FUNCTION_8	CALL_1
0x40007e4	            0x7453	                            je 0x4000839	       313	simple-object.c	FUNCTION_8	IF_2
0x40007e6	      0x488d542410	                   lea rdx, [rsp + 0x10]	       315	simple-object.c	FUNCTION_8	CALL_2
0x40007eb	            0x31f6	                            xor esi, esi	       315	simple-object.c	FUNCTION_8	CALL_2
0x40007ed	          0x4c89e1	                            mov rcx, r12	       315	simple-object.c	FUNCTION_8	CALL_2
0x40007f0	          0x4889c7	                            mov rdi, rax	       315	simple-object.c	FUNCTION_8	CALL_2
0x40007f3	      0xe800000000	                          call 0x40007f8	       315	simple-object.c	FUNCTION_8	CALL_2
0x40007f8	          0x4989c5	                            mov r13, rax	       315	simple-object.c	FUNCTION_8	CALL_2
0x40007fb	          0x488b03	                    mov rax, qword [rbx]	       396	simple-object.c	FUNCTION_12	CALL_1
0x40007fe	        0x488b7b08	                mov rdi, qword [rbx + 8]	       396	simple-object.c	FUNCTION_12	CALL_1
0x4000802	          0xff5028	                 call qword [rax + 0x28]	       396	simple-object.c	FUNCTION_12	CALL_1
0x4000805	          0x4889df	                            mov rdi, rbx	       397	simple-object.c	FUNCTION_12	CALL_2
0x4000808	      0xe800000000	                          call 0x400080d	       397	simple-object.c	FUNCTION_12	CALL_2
0x400080d	          0x4d85ed	                           test r13, r13	       317	simple-object.c	FUNCTION_8	IF_3
0x4000810	            0x7427	                            je 0x4000839	       317	simple-object.c	FUNCTION_8	IF_3
0x4000812	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       320	simple-object.c	FUNCTION_8	CALL_4
0x4000816	          0x4c89e1	                            mov rcx, r12	       320	simple-object.c	FUNCTION_8	CALL_4
0x4000819	      0xba00000000	                              mov edx, 0	       320	simple-object.c	FUNCTION_8	CALL_4
0x400081e	          0x4c89ee	                            mov rsi, r13	       320	simple-object.c	FUNCTION_8	CALL_4
0x4000821	          0x4889ef	                            mov rdi, rbp	       320	simple-object.c	FUNCTION_8	CALL_4
0x4000824	          0xff5048	                 call qword [rax + 0x48]	       320	simple-object.c	FUNCTION_8	CALL_4
0x4000827	          0x4885c0	                           test rax, rax	       323	simple-object.c	FUNCTION_8	IF_4
0x400082a	      0x4889442410	             mov qword [rsp + 0x10], rax	       320	simple-object.c	FUNCTION_8	CALL_4
0x400082f	            0x743f	                            je 0x4000870	       323	simple-object.c	FUNCTION_8	IF_4
0x4000831	          0x4c89ef	                            mov rdi, r13	       341	simple-object.c	FUNCTION_8	IF_6	CALL_10
0x4000834	      0xe800000000	                          call 0x4000839	       341	simple-object.c	FUNCTION_8	IF_6	CALL_10
0x4000839	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       342	simple-object.c	FUNCTION_8	IF_6
0x400083e	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       347	simple-object.c	FUNCTION_8
0x4000843	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       347	simple-object.c	FUNCTION_8
0x400084c	     0xf858b000000	                           jne 0x40008dd	       347	simple-object.c	FUNCTION_8
0x4000852	        0x4883c420	                           add rsp, 0x20	       347	simple-object.c	FUNCTION_8
0x4000856	              0x5b	                                 pop rbx	       347	simple-object.c	FUNCTION_8
0x4000857	              0x5d	                                 pop rbp	       347	simple-object.c	FUNCTION_8
0x4000858	            0x415c	                                 pop r12	       347	simple-object.c	FUNCTION_8
0x400085a	            0x415d	                                 pop r13	       347	simple-object.c	FUNCTION_8
0x400085c	            0x415e	                                 pop r14	       347	simple-object.c	FUNCTION_8
0x400085e	              0xc3	                                     ret	       347	simple-object.c	FUNCTION_8
0x400085f	              0x90	                                     nop	       347	simple-object.c	FUNCTION_8
0x4000860	    0xc70216000000	                   mov dword [rdx], 0x16	       308	simple-object.c	FUNCTION_8	IF_1
0x4000866	      0xb800000000	                              mov eax, 0	       309	simple-object.c	FUNCTION_8	IF_1
0x400086b	            0xebd1	                           jmp 0x400083e	       309	simple-object.c	FUNCTION_8	IF_1
0x400086d	           0xf1f00	                         nop dword [rax]	       309	simple-object.c	FUNCTION_8	IF_1
0x4000870	      0xbeff010000	                          mov esi, 0x1ff	       329	simple-object.c	FUNCTION_8	CALL_6
0x4000875	          0x4c89f7	                            mov rdi, r14	       329	simple-object.c	FUNCTION_8	CALL_6
0x4000878	      0xe800000000	                          call 0x400087d	       329	simple-object.c	FUNCTION_8	CALL_6
0x400087d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       330	simple-object.c	FUNCTION_8	IF_5
0x4000880	            0x89c3	                            mov ebx, eax	       329	simple-object.c	FUNCTION_8	CALL_6
0x4000882	            0x743c	                            je 0x40008c0	       330	simple-object.c	FUNCTION_8	IF_5
0x4000884	        0x498b4500	                    mov rax, qword [r13]	       500	simple-object.c	FUNCTION_16	CALL_1
0x4000888	          0x4c89e2	                            mov rdx, r12	       500	simple-object.c	FUNCTION_16	CALL_1
0x400088b	            0x89de	                            mov esi, ebx	       500	simple-object.c	FUNCTION_16	CALL_1
0x400088d	          0x4c89ef	                            mov rdi, r13	       500	simple-object.c	FUNCTION_16	CALL_1
0x4000890	          0xff5038	                 call qword [rax + 0x38]	       500	simple-object.c	FUNCTION_16	CALL_1
0x4000893	            0x89df	                            mov edi, ebx	       338	simple-object.c	FUNCTION_8	CALL_9
0x4000895	      0x4889442410	             mov qword [rsp + 0x10], rax	       337	simple-object.c	FUNCTION_8	CALL_8
0x400089a	      0xe800000000	                          call 0x400089f	       338	simple-object.c	FUNCTION_8	CALL_9
0x400089f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       339	simple-object.c	FUNCTION_8	IF_6
0x40008a4	          0x4885c0	                           test rax, rax	       339	simple-object.c	FUNCTION_8	IF_6
0x40008a7	            0x7588	                           jne 0x4000831	       339	simple-object.c	FUNCTION_8	IF_6
0x40008a9	          0x4c89ef	                            mov rdi, r13	       345	simple-object.c	FUNCTION_8	CALL_11
0x40008ac	      0x4889442408	                mov qword [rsp + 8], rax	       345	simple-object.c	FUNCTION_8	CALL_11
0x40008b1	      0xe800000000	                          call 0x40008b6	       345	simple-object.c	FUNCTION_8	CALL_11
0x40008b6	      0x488b442408	                mov rax, qword [rsp + 8]	       345	simple-object.c	FUNCTION_8	CALL_11
0x40008bb	            0xeb81	                           jmp 0x400083e	       346	simple-object.c	FUNCTION_8
0x40008bd	           0xf1f00	                         nop dword [rax]	       346	simple-object.c	FUNCTION_8
0x40008c0	      0xe800000000	                          call 0x40008c5	       332	simple-object.c	FUNCTION_8	IF_5
0x40008c5	            0x8b00	                    mov eax, dword [rax]	       332	simple-object.c	FUNCTION_8	IF_5
0x40008c7	          0x4c89ef	                            mov rdi, r13	       333	simple-object.c	FUNCTION_8	IF_5	CALL_7
0x40008ca	        0x41890424	                    mov dword [r12], eax	       332	simple-object.c	FUNCTION_8	IF_5
0x40008ce	      0xe800000000	                          call 0x40008d3	       333	simple-object.c	FUNCTION_8	IF_5	CALL_7
0x40008d3	      0xb800000000	                              mov eax, 0	       334	simple-object.c	FUNCTION_8	IF_5
0x40008d8	      0xe961ffffff	                           jmp 0x400083e	       334	simple-object.c	FUNCTION_8	IF_5
0x40008dd	      0xe800000000	                          call str..rela	       347	simple-object.c	FUNCTION_8
