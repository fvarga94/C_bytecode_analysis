C_alloca	IF,4:SWITCH,0:ELSE,1:DO,0:CALL,4:FOR,1:WHILE,0:functions,0	46
0x4000040	            0x4154	                                push r12	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000042	              0x55	                                push rbp	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000043	          0x4989fc	                            mov r12, rdi	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000046	              0x53	                                push rbx	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000047	        0x4883ec10	                           sub rsp, 0x10	       163	alloca.c	ELSE_2	FUNCTION_2
0x400004b	    0x488b3d000000	            mov rdi, qword [0x04000052] 	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x4000052	    0x64488b042528	                mov rax, qword fs:[0x28]	       163	alloca.c	ELSE_2	FUNCTION_2
0x400005b	      0x4889442408	                mov qword [rsp + 8], rax	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000060	            0x31c0	                            xor eax, eax	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000062	          0x4885ff	                           test rdi, rdi	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x4000065	            0x742f	                            je 0x4000096	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x4000067	      0x488d6c2407	                      lea rbp, [rsp + 7]	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x400006c	        0x48396f08	                cmp qword [rdi + 8], rbp	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000070	          0x4889fb	                            mov rbx, rdi	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000073	            0x7214	                            jb 0x4000089	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000075	            0xeb21	                           jmp 0x4000098	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000077	    0x660f1f840000	                    nop word [rax + rax]	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000080	        0x48396b08	                cmp qword [rbx + 8], rbp	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000084	          0x4889df	                            mov rdi, rbx	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000087	            0x730f	                           jae 0x4000098	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000089	          0x488b1f	                    mov rbx, qword [rdi]	       182	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x400008c	      0xe800000000	                          call 0x4000091	       184	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2	CALL_2
0x4000091	          0x4885db	                           test rbx, rbx	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x4000094	            0x75ea	                           jne 0x4000080	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x4000096	            0x31db	                            xor ebx, ebx	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000098	            0x31c0	                            xor eax, eax	       195	alloca.c	ELSE_2	FUNCTION_2	IF_3
0x400009a	          0x4d85e4	                           test r12, r12	       194	alloca.c	ELSE_2	FUNCTION_2	IF_3
0x400009d	    0x48891d000000	            mov qword [0x040000a4], rbx 	       191	alloca.c	ELSE_2	FUNCTION_2
0x40000a4	            0x7429	                            je 0x40000cf	       194	alloca.c	ELSE_2	FUNCTION_2	IF_3
0x40000a6	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	       200	alloca.c	ELSE_2	FUNCTION_2	CALL_3
0x40000ab	      0xe800000000	                          call 0x40000b0	       200	alloca.c	ELSE_2	FUNCTION_2	CALL_3
0x40000b0	    0x488b15000000	            mov rdx, qword [0x040000b7] 	       206	alloca.c	ELSE_2	FUNCTION_2
0x40000b7	    0x488905000000	            mov qword [0x040000be], rax 	       209	alloca.c	ELSE_2	FUNCTION_2
0x40000be	        0x4883c010	                           add rax, 0x10	       213	alloca.c	ELSE_2	FUNCTION_2
0x40000c2	        0x488950f0	             mov qword [rax - 0x10], rdx	       206	alloca.c	ELSE_2	FUNCTION_2
0x40000c6	      0x488d542407	                      lea rdx, [rsp + 7]	       207	alloca.c	ELSE_2	FUNCTION_2
0x40000cb	        0x488950f8	                mov qword [rax - 8], rdx	       207	alloca.c	ELSE_2	FUNCTION_2
0x40000cf	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000d4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000dd	            0x7509	                           jne 0x40000e8	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000df	        0x4883c410	                           add rsp, 0x10	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000e3	              0x5b	                                 pop rbx	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000e4	              0x5d	                                 pop rbp	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000e5	            0x415c	                                 pop r12	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000e7	              0xc3	                                     ret	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000e8	      0xe800000000	                  call section_end..data	       215	alloca.c	ELSE_2	FUNCTION_2
